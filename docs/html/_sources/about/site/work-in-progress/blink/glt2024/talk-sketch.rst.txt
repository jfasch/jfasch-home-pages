.. include:: <mmlalias.txt>


Talk Sketch: Pointless Blinking: Evolution
==========================================

``gpiod`` Intro
---------------

.. sidebar::

   ``blueprints/gpiod-demo.py``

* ``gpiod`` basics, ``Box``

   * Show center on/off
   * Quickly explain ``request_lines()`` (``request.set_value()``
     vs. ``request.set_values()``)
   * Show ``blink.glt2024.box``
   * Use ``Box.matrix``
   * insert ``snippets/blink``, and use it

``asyncio`` Intro
-----------------

* ``threading``

  * insert ``snippets/threads``
  * ``strace -f ...`` |longrightarrow| PIDs
  * Complain about threads

* Change to ``asyncio``
* ``strace -f ...`` again |longrightarrow| no PIDs

And ``blink``?
--------------

.. sidebar::

   ``blueprints/blink-demo.py``

* Explain ``on`` |longrightarrow| ``asyncio.create_future()``
* ``sleep``
* Combine through ``any`` |longrightarrow| ``launch_isolated``
* ``forever`` and ``sequence`` |longrightarrow| ``blink``

.. code-block:: python

   forever(
       sequence(
           any(
	       on(box.matrix.get(2,2)),
               sleep(0.5),
           ),
           sleep(0.5),
       )
   )

* Pull in snippet ``blueprints/snippet-nice-pattern``

``gpiod``, And Interrupts
-------------------------

.. sidebar::

   ``blueprints/gpiod-interrupts.py``

* ``blink.base.sleep``: timer event
* Other events? |longrightarrow| interrupt on GPIO line
* Show ``blueprints/gpiod-interrupts.py``
* Discuss edges, timestamps, *bouncing*
* ``FALLING``, ``debounce_period``
* Transform into generator, ``events()``

Nice, Pythonic!

``gpiod``, Interrupts, and ``asyncio``
--------------------------------------

.. sidebar::

   ``blueprints/gpiod-interrupts.py``

* ``async def main()``; simply iterate over ``events()``
* |longrightarrow| works
* Second button, 19? Hm, tasks. 
* Wrap ``events()`` iteration in ``print_events()``
* Make ``print_events()`` ``async``
* In ``main()``, create two tasks around ``print_events()``
* |longrightarrow| one works, the other not

We block! Aha, ``async`` all over

* Question: how make ``events()`` async? *asynchronous generator*?
* Future, loops, blah

And ``blink``?
--------------

* Show ``wait_button``
* back in ``blink-demo.py``, replace ``sleep(3)`` with
  ``wait_button()``

``textual``
-----------

* Show https://pypi.org/project/textual-imageview/

Python 3.12 Installation (for ``TaskGroup``)
--------------------------------------------

.. code-block:: console

   $ sudo apt install libssl-dev libreadline-dev libffi-dev libsystemd-dev python3-dev
   $ wget https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz
   $ tar xf Python-3.12.2.tar.xz 
   $ cd Python-3.12.2/
   $ ./configure --prefix=$HOME/Python-3.12.2-Install --with-readline
   $ make
   $ make install


