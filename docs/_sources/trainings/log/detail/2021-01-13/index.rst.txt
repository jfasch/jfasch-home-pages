.. include:: <mmlalias.txt>

Programmierung Grundlagen (13. und 14.1.2021)
=============================================

.. sidebar:: *Training Information*

   **Start**

   Mittwoch 13.1.2021, 9:00

   **Offizielle Beschreibung**

   `tecTrain "Programmierung Grundlagen"
   <https://www.tectrain.at/seminare/seminar-themen/programmierung/programmierung-grundlagen>`__

   **Material**

   .. csv-table::

      PDF Slides, :download:`Python </trainings/material/pdf/300-python.pdf>`
      :doc:`OpenTraining </about/site/opentraining/index>` Topics, :doc:`/trainings/material/soup/python/index`


.. contents::
   :local:


Struktur
--------

* Themenreihenfolge und Übungen werden aus dem Herdt-Skriptum
  übernommen.
* Die Kurssprache ist Python; Python-spezifische Elemente werden von
  :doc:`hier </trainings/material/soup/python/python-basics>`
  unterrichtet.

Zur besseren Übersicht hier die Mapping-Tabellen.

Herdt Kapitel 6: Grundlegende Sprachelemente
............................................

.. list-table::
   :widths: 50 50 100
   :header-rows: 1

   * - OpenTraining Topics
     - Herdt Kapitel
     - Kommentar
   * - :doc:`/trainings/material/soup/python/python_0110_blahblah/topic`
     - 
     - 
   * - :doc:`/trainings/material/soup/python/python_0120_helloworld/topic`
     - 
     - 
   * - :doc:`/trainings/material/soup/python/python_0130_syntax_etc/topic`
     - 6.1 Syntax und Semantik
     - Herdt zu allgemein/verwirrend
   * - :doc:`/trainings/material/soup/python/python_0130_syntax_etc/topic`
     - 6.2 Grundlegende Elemente einer Sprache
     - Herdt zu allgemein/verwirrend
   * - - :doc:`/trainings/material/soup/python/python_0150_datatypes_overview/topic`
       - :doc:`/trainings/material/soup/python/python_0160_boolean/topic`
       - :doc:`/trainings/material/soup/python/python_0300_strings/topic`
       - :doc:`/trainings/material/soup/python/python_0150_datatypes_overview_compound/topic`
     - - 6.3 Standarddatentypen (elementare Datentypen)
       - 6.4 Literale für primitive Datentypen
     - - Links: Python2/3 ignorieren
   * - :doc:`/trainings/material/soup/python/python_0250_refs_flat_deep_copy/topic`
     - 6.5 Variablen und Konstanten
     - *Konstanten* gibts nicht in Python, nur *immutable*
       Typen. Deswegen ziehen wir
       :doc:`/trainings/material/soup/python/python_0150_datatypes_overview_compound/topic`
       vor, damits von der Herdt-Reihenfolge her passt.
   * - 
     - 6.6 Operatoren
     - Bereits bei den Datantypen angeschnitten. Hier als Vertiefung
       nocheinmal.
   * - 
     - 6.7 Ausdrücke und Operatorrangfolgen
     - Bereits bei den Datantypen angeschnitten. Hier als Vertiefung
       nocheinmal.
   * - 
     - 6.8 Übungen
     - - Übung 1: Arbeiten mit grundlegenden Sprachelementen

         - **1** lassen wir aus, da von Funktionen noch nicht die Rede
	   war.
	 - **4** lassen wir aus, da wir Syntaxdiagramme gespritzt
           haben.

       - Übung 2: wird gemacht

Herdt Kapitel 7: Kontrollstrukturen
...................................

Verzweigung
```````````

.. list-table::
   :widths: 50 50 100
   :header-rows: 1

   * - OpenTraining Topics
     - Herdt Kapitel
     - Kommentar
   * - 
     - 7.1 Anweisungen und Folgen
     - - Im Großen und Ganzen für die Fisch (zu allgemein und
         verwirrend)
       - Das VAT Beispiel am Ende ist recht instruktiv
   * - 
     - 7.2 Bedingungen und Kontrollstrukturen
     - - Beispiele (sehr instruktiv)
       - Kontrollstrukturen Überblick
   * - 
     - 7.3 Grundlagen zu Verzweigungen
     - Bullshit
   * - :doc:`/trainings/material/soup/python/python_0170_if/topic`
     - 7.4 Bedingte Anweisung
     - Herdt gewinnt hier klar
   * - :doc:`/trainings/material/soup/python/python_0170_if/topic`
     - 7.5 Verzweigung
     - Herdt gewinnt hier klar
   * - :doc:`/trainings/material/soup/python/python_0170_if/topic`
     - 7.6 Geschachtelte Verzweigung
     - Herdt gewinnt hier klar
   * - :doc:`/trainings/material/soup/python/python_0170_if/topic`
     - 7.7 Mehrfache Verzweigung (Fallauswahl)
     - Herdt gewinnt hier klar

Schleifen
`````````

Da die Schleifenkonstrukte über verschiedenene Sprachen hinweg sehr
unterschiedlich sind, lassen wir hier das Herdt-Skriptum weitgehend
ausser Acht. Es ist zu allgemein gehalten, um bei unserem Vehikel
*Python* hilfreich zu sein.

.. list-table::
   :widths: 50 50 100
   :header-rows: 1

   * - OpenTraining Topics
     - Herdt Kapitel
     - Kommentar
   * - 
     - 7.8 Schleifen
     - - Einstieg über Herdt, dann weiter bei mir
       - Klarstellung (am Ende des Kapitels): fußgesteuerte Schleifen
         gibts in Python nicht
   * - 
     - 7.9 Zählergesteuerte Schleifen (Iteration)
     - Auslassen
   * - :doc:`/trainings/material/soup/python/python_0193_while/topic`
     - 7.10 Kopfgesteuerte bedingte Schleife
     - Meins gewinnt
   * - 
     - 7.11 Fußgesteuerte bedingte Schleife
     - Auslassen (gibts nicht in Python)
   * - :doc:`/trainings/material/soup/python/python_0200_sequential_types/topic`
     - 
     - Als Voraussetzung für ``for``
   * - :doc:`/trainings/material/soup/python/python_0220_for/topic`
     - 
     -
   * - 
     - 7.12 Schnellübersicht
     - Die ist recht praktisch, mal drüberschauen
   * - 
     - 7.13 Sprunganweisungen
     - Auslassen
   * - 
     - 7.14 Endlosschleifen
     - Mal reinschauen |longrightarrow| ``True``
   * - 
     - 7.15 Übungen
     - Ja, alle

Herdt Kapitel 8: Elementare Datenstrukturen
...........................................

jjj

* /trainings/material/soup/python/python_0460_sets/topic
* /trainings/material/soup/python/python_0400_lists/topic
* /trainings/material/soup/python/python_0450_dictionaries/topic
* /trainings/material/soup/python/python_0300_strings/topic
* /trainings/material/soup/python/python_0200_sequential_types/topic

.. list-table::
   :widths: 50 50 100
   :header-rows: 1

   * - OpenTraining Topics
     - Herdt Kapitel
     - Kommentar
   * - 
     - 8.1 Warum werden Datenstrukturen benötigt?
     - Naja mal reinschauen, eher mager
   * - 
     - 8.2 Arrays
     - Auslassen (Java)
   * - 
     - 8.3 Eindimensionale Arrays
     - Auslassen (Java)
   * - 
     - 8.4 Records
     - Auslassen: siehe 8.7 Dictionaries, gefolgt von ``class`` und
       ``namedtuple``
   * - - :doc:`/trainings/material/soup/python/python_0300_strings/topic` (Wiederholung)
       - :doc:`/trainings/material/soup/python/python_0320_strings_methods/topic`
       - :doc:`/trainings/material/soup/python/python_0310_strings_formatting/topic`
     - 8.5 Zeichenketten
     - Vielleicht eine kurze Livehacking Session *f-Strings*
   * - :doc:`/trainings/material/soup/python/python_0400_lists/topic`
     - 8.6 Tupel und Listen
     - Meins
   * - :doc:`/trainings/material/soup/python/python_0450_dictionaries/topic`
     - 8.7 Dictionaries
     - Meins
   * -
     - 
     - ``jupyter notebook``: Records von oben mit Dictionaries

       - Livehacking Demo von ``class``
       - ``from collections import namedtuple``

   * - :doc:`/trainings/material/soup/python/python_0460_sets/topic`
     - 8.8 Mengen
     - Meins
   * - 
     - 8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und
       Schlangen (Queue)
     - Wenns passt vom Tempo, schauma da rein. Vielleicht fallt eine
       gscheite Übung ab.
   * - 
     - 8.10 Übungen
     - Gemeinsam drüber schauen

Herdt Kapitel 9: Methoden, Prozeduren und Funktionen
....................................................

.. list-table::
   :widths: 50 50 100
   :header-rows: 1

   * - OpenTraining Topics
     - Herdt Kapitel
     - Kommentar
   * - 
     - 9.1 Unterprogramme
     - 
   * - 
     - 9.2 Parameterübergabe
     - 
   * - 
     - 9.3 Parameterübergabe als Wert
     - 
   * - 
     - 9.4 Parameterübergabe über Referenzen
     - 
   * - 
     - 9.5 Rückgabewerte von Funktionen oder Methoden
     - 
   * - 
     - 9.6 Innere Funktionen - Closures
     - 
   * - 
     - 9.7 Standardbibliotheken und Built-in-Funktionalitäten
     - 
   * - 
     - 9.8 Übungen
     - 
