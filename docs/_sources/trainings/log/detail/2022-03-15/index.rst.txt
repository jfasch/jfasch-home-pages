.. include:: <mmlalias.txt>

Python Advanced (2022-03-15 - 2022-03-17)
=========================================

.. sidebar:: *Training Information*

   * :doc:`/trainings/material/soup/python/advanced/group`
   * :doc:`/trainings/material/soup/python/group`
   * Jupyter Notebook

     * :doc:`Structure <notebook-wrapper>`
     * :doc:`Entire Notebook <Notebook>`
     * :download:`download <Notebook.ipynb>`

   * `Github Repository <https://github.com/jfasch/2022-02-23>`__
   * :doc:`/trainings/material/soup/python/pcap-exam`
   * Predecessor training: :doc:`../2022-02-23/index`

.. toctree::
   :hidden:

   Jupyter Notebook (Ãœbersicht) <notebook-wrapper>
   Jupyter Notebook <Notebook>

.. contents::
   :local:

2022-03-15
----------

* :doc:`/trainings/material/soup/python/exercises/legacy/primeness_function`
* :doc:`/trainings/material/soup/python/exercises/legacy/distill`
* :doc:`/trainings/material/soup/python/misc/encoding/topic`

2022-03-16
----------

Good morning!

* Live-hack ``eval()``

  * :doc:`notebook (first) <notebook-wrapper>`
  * `dict-from-cmdline.py <https://github.com/jfasch/2022-02-23/blob/main/livehacking/dict-from-cmdline.py>`__

* :doc:`/trainings/material/soup/python/advanced/exec/topic`
  (`exec-context.py
  <https://github.com/jfasch/2022-02-23/blob/main/livehacking/exec-context.py>`__)

* :doc:`/trainings/material/soup/python/advanced/starargs/topic`
  (`args-kwargs.py
  <https://github.com/jfasch/2022-02-23/blob/main/livehacking/args-kwargs.py>`__)
* :doc:`/trainings/material/soup/python/advanced/closures/topic`
  (`closure.py
  <https://github.com/jfasch/2022-02-23/blob/main/livehacking/closure.py>`__)
* :doc:`/trainings/material/soup/python/advanced/decorators/topic`
  (`decorator.py
  <https://github.com/jfasch/2022-02-23/blob/main/livehacking/decorator.py>`__)

Continue with exercises: CSV |longrightarrow| modularization

* :doc:`/trainings/material/soup/python/misc/csv/topic`
* :doc:`/trainings/material/soup/python/exercises/userdb/csvreader`
* :doc:`/trainings/material/soup/python/exercises/userdb/csvdictreader`

Test Driven Development
.......................

.. sidebar:: Test Driven Development |longrightarrow| Clean Code

   .. list-table::
      :align: left
      
      * * * `Wikipedia: Test-driven development
            <https://en.wikipedia.org/wiki/Test-driven_development>`__
	  * `Kent Beck: Test Driven Development: By Example
            <https://www.oreilly.com/library/view/test-driven-development/0321146530/>`__
	  * `Clean Code: A Handbook of Agile Software Craftsmanship
            <https://www.oreilly.com/library/view/clean-code-a/9780136083238/>`__
	  * `Scrum <https://en.wikipedia.org/wiki/Scrum_(software_development)>`__
	* .. image:: tdd.jpg
	* .. image:: cleancode.jpg

I had stated my strong opinion about (excess) debugger usage. (In
short words, debuggers are from hell when you use one to *comprehend*
code that is otherwise incomprehensible - the same holds true for
excess IDE usage).

Discussion, naturally (thank you Alex). Decided to switch to test
driven development, provocantly. Based upon
:doc:`/trainings/material/soup/python/swdev/pytest-intro`, hacked the
following topics while introducing TDD:

* :doc:`/trainings/material/soup/python/exercises/userdb/csvdictreader-function`
* :doc:`/trainings/material/soup/python/advanced/modules`
* :doc:`/trainings/material/soup/python/exercises/userdb/userdb_csv`

("Project" `here
<https://github.com/jfasch/2022-02-23/tree/main/userdb>`__)

2022-03-17
----------

* Show ``userdb`` "project"
* Elaborate on ``class User`` |longrightarrow| require that
  constructor raise a dedicated exception if, for example, ``id`` is
  not an integer
* `JSON <https://en.wikipedia.org/wiki/JSON>`__

  * Including a test

* :doc:`/trainings/material/soup/python/misc/mqtt/topic`

Draft Agenda
------------

Iteration Recap
...............

* :doc:`/trainings/material/soup/python/advanced/iteration-generation/topic`

OO
...

* :doc:`/trainings/material/soup/python/advanced/oo/basics` (maybe
  pimp that, using the KarteiKarte example)
* :doc:`/trainings/material/soup/python/advanced/oo/implementation-inheritance` (optional)
* :doc:`/trainings/material/soup/python/advanced/exceptions`

Miscellaneous Topics
....................

* :doc:`/trainings/material/soup/python/swdev/pip/topic`
* :doc:`/trainings/material/soup/python/swdev/venv/topic`
* :doc:`/trainings/material/soup/python/swdev/pytest-intro`
* :doc:`/trainings/material/soup/python/misc/db/group`
* :doc:`/trainings/material/soup/python/misc/context_manager/topic`
* :doc:`/trainings/material/soup/python/misc/mqtt/topic`


Links
-----

* jjjj super considered super
