.. include:: <mmlalias.txt>

Programmieren mit C (2021-06-14 - 2021-06-18)
=============================================

.. sidebar:: *Training Information*

   **Start**

   Montag 14.6.2021, 9:00

   **Offizielle Beschreibung**

   `tecTrain
   <https://www.tectrain.at/seminare/seminar-themen/programmierung/c-grundlagen-fuer-programmierer>`__

   **Material**

   * Slides, :download:`C </trainings/material/pdf/050-c.pdf>`
   * Slides, :download:`CMake </trainings/material/pdf/045-cmake.pdf>`
   * Slides, :download:`GNU Make </trainings/material/pdf/040-gnu-make.pdf>`
   * `Github Repository <https://github.com/jfasch/2021-06-14>`__

   **CPA Exam**

   * `Sample Questions
     <https://cppinstitute.org/wp-content/uploads/2016/07/CPA_sample_exam_questions.pdf>`__

.. contents::
   :local:

Preparation: Tools
------------------

* `C/C++ for Visual Studio Code <https://code.visualstudio.com/docs/languages/cpp>`__
* `Get started with CMake Tools on Linux
  <https://code.visualstudio.com/docs/cpp/cmake-linux>`__
* `CMake download <https://cmake.org/download/>`__

Log
---

Day 1
.....

* Introduction (from the :download:`C slides
  </trainings/material/pdf/050-c.pdf>`)

  * Hello World
  * Variables and Arithmetic
  * ``for`` Loops
  * Symbolic Constants
  * Character I/O

* Occasional live hacking

  * `hello.c <https://github.com/jfasch/2021-06-14/blob/main/hello.c>`__
  * `fahr.c <https://github.com/jfasch/2021-06-14/blob/main/fahr.c>`__
  * `fahr-for.c <https://github.com/jfasch/2021-06-14/blob/main/fahr-for.c>`__
  * `wc.c
    <https://github.com/jfasch/2021-06-14/blob/main/wc.c>`__. This is
    going to be morphed into a formal state machine tomorrow.

Day 2
.....

State machine
`````````````

It turns out that the correct solution to exercise on slide 

  .. image:: state-machine.jpg
     :scale: 20%

* `wc.c <https://github.com/jfasch/2021-06-14/blob/main/wc.c>`__
  became a state machine, implementing the above state chart. Using
  ``if-then-else`` to cover the states.
* Introduced the ``switch`` statement (slightly :-) deviating from the
  regular course flow); changed the state maching to use that instead
  of ``if-then-else``. See `wc-switch.c
  <https://github.com/jfasch/2021-06-14/blob/main/wc-switch.c>`__

Regular Course Topics
`````````````````````

* Introduced pre and post increment operators (again severely
  deviating). See `pre-post-increment.c
  <https://github.com/jfasch/2021-06-14/blob/main/pre-post-increment.c>`__.
* Ah, arrays: leading to the "histogram" exercise (slide 41 from the
  :download:`slides </trainings/material/pdf/050-c.pdf>`). Solution see
  `here on Github <https://github.com/jfasch/2021-06-14/blob/main/histogram.c>`__
* Functions. Slides 44ff. from the :download:`slides
  </trainings/material/pdf/050-c.pdf>` (the ``power()`` function from
  the K&R book) as a live hacking gig. `See here on Github
  <https://github.com/jfasch/2021-06-14/blob/main/power-function.c>`__.
* Quick :download:`CMake </trainings/material/pdf/045-cmake.pdf>`
  intro, as a preparation for the upcoming group project. Confusing
  people.

Day 3
.....

Plan
````

* Establish CMake. See tutorial `here <https://www.youtube.com/watch?v=V1YP7eJHDJE>`__.

  * `Doze installation <https://cmake.org/install>`__
  * Add CMake to path: maybe `this
    <https://stackoverflow.com/questions/61625880/vscode-cmake-windows-10-cmake-not-in-path>`__
    could help with ``PATH`` problems
  
* Establish Git. Cross finger and what can be done with `this <https://code.visualstudio.com/docs/editor/versioncontrol>`__.
* Fast run-through: 64-75
* Stop at enums/76: morph wc.c state machine into a perfect enum
  candidate. This is the time to enable ``-Wswitch-enum``.
* "Variable Definitions" section

  * emphasize on local variables (this is what we saw so far)
    more. Lifetime, initialization, etc.
  * Live-hack local/global: local initialization can be anything that
    is computed at runtime. global, otoh, can only be precomputed
    values.

* Almost skip 81-88. Operators, boring.
* Hard stop at "Type Conversions"
  

Day 4
.....

Day 5
.....

