.. ot-exercise:: cxx.exercises.oo_sensors.sensor_mock
   :dependencies: cxx03.data_encapsulation.classes_objects,
		  linux.toolchain.cmake_local

.. include:: <mmlalias.txt>


Exercise: Mocking Sensors
=========================

.. contents::
   :local:

.. sidebar::

   **See also**

   * :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction`
   * :doc:`/trainings/material/soup/linux/toolchain/cmake/local`

Requirements
------------

Implement two sensor classes which do not access any real hardware,
but rather will be used for testing ("mocking").

``ConstantSensor``
..................

.. literalinclude:: /trainings/material/soup/cxx-code/sensors-duck/tests/sensor-const-suite-basic.cpp
   :language: c++
   :caption: :download:`Download sensor-const-suite-basic.cpp
             </trainings/material/soup/cxx-code/sensors-duck/tests/sensor-const-suite-basic.cpp>`

``RandomSensor``
................

.. literalinclude:: /trainings/material/soup/cxx-code/sensors-duck/tests/sensor-random-suite-basic.cpp
   :language: c++
   :caption: :download:`Download sensor-random-suite-basic.cpp
             </trainings/material/soup/cxx-code/sensors-duck/tests/sensor-random-suite-basic.cpp>`

Implementation hint: the following program demonstrates how to
generate uniformly distributed random ``double`` values in a specified
range.

.. literalinclude:: random-demo.cpp
   :language: c++
   :caption: :download:`Download random-demo.cpp <random-demo.cpp>`

Topics Covered
--------------

.. ot-graph::
   :entries: cxx.exercises.oo_sensors.sensor_mock
