.. ot-exercise:: cxx11.exercises.bag_unique
   :dependencies: cxx11.exercises.bag_copy,
		  cxx11.new_language_features.auto,
		  cxx11.new_language_features.range_based_for

Exercise: Bag Of Items, By Unique Reference
===========================================

Continuing from :doc:`bag-copy`, create a class ``BagUnique`` that
contains pointers of type ``std::unique_ptr<Item>`` such that the
tests below pass.

* Find out: what must the return type of ``find_by_int()`` be? Can it
  be the vector's member type?

* Try to create a ``std::unique_ptr<BagUnique::Item>`` and assign it
  to variable which you then insert, like (naively)

  .. code-block:: c++

     auto v = std::make_unique<BagUnique::Item>("something", 42);
     bag.insert(v);

  Does it work? What do you notice?

.. literalinclude:: code/bag-unique-suite.cpp
   :caption: :download:`code/bag-unique-suite.cpp`
   :language: c++

