.. include:: <mmlalias.txt>


2024-10-29(6): Project: Git, C++, Status
========================================

.. contents::
   :local:

Morning Wakeup: Status
----------------------

:doc:`../project/motor-control-btn9960lv`
.........................................

* PWM test prog configures PWM pin, but leaves it in non-functional
  state after exit.

  * Fork there? Added test prog there? CMakery?
  * Perform manually the steps that the program makes
  * Look at program
  * Fix program
  * See how program should make use of `toolcase/base/sysfs-file.h
    <https://github.com/jfasch/FH-STECE2022/blob/main/toolcase/base/sysfs-file.h>`__
  * |longrightarrow| CMakery

:doc:`../project/servo-motor`
.............................

* Check WiringPi: fork there? WiringPi test prog there?

  Clarify WiringPi is not an option:

  * WiringPi test prog
  * If not: my Pi: ``~/myapp.c``
  * Explain ``/dev/mem`` (`man -s 4 mem
    <https://man7.org/linux/man-pages/man4/mem.4.html>`__)

* In the long term, we will have to use PCA9685A anyway: we need 3 PWM
  pins in total, and the Pi has (at most?) 2. Best to give up.

  * In case somebody want to try Pi nonetheless:
    https://github.com/dotnet/iot/blob/main/Documentation/raspi-pwm.md

    There appear to be clock issues ahead, as
    https://github.com/raspberrypi/linux/issues/1533
    indicates. Beware.

:doc:`../project/proximity-vl53l1x`
...................................

* Hmm. C++ needed. Wait a few hours, we'll get to that.
* |longrightarrow| what would a ``class VL53L1X`` look like?

:doc:`../project/gyroscope-bno055`
..................................

* Fork there? Test prog there? CMakery?
* Commandline program where we can try around
* |longrightarrow| what would a ``class BNO055`` look like?

Configuration Management (Err, Git)
-----------------------------------

* :doc:`/about/site/work-in-progress/fh-joanneum/2021/git/git`

C++: OO Basics
--------------

From
:doc:`/trainings/material/soup/cxx03/020-data-encapsulation/group` ...

* :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/c`
* :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction`
* :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom`
* :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/initializer-list`
* :doc:`/trainings/material/soup/cxx03/020-data-encapsulation/ctor-default`

From
:doc:`/trainings/material/soup/cxx03/030-functions-and-methods/group` ...

* :doc:`/trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic`
* :doc:`/trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic`

Live hack that into the ubiquitous ``class point`` (see
`livecoding/point.cpp
<https://github.com/jfasch/FH-STECE2022/blob/main/livecoding/point.cpp>`__)
