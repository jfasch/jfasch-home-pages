<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://www.faschingbauer.me</id>
  <title>Jörg Faschingbauer - Posts in raspberry</title>
  <updated>2023-11-24T07:29:56.372510+00:00</updated>
  <link href="https://www.faschingbauer.me"/>
  <link href="https://www.faschingbauer.me/blog/category/raspberry/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.19">ABlog</generator>
  <entry>
    <id>https://www.faschingbauer.me/blog/2022/09/cross-raspi.html</id>
    <title>Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng</title>
    <updated>2022-09-23T00:00:00+02:00</updated>
    <author>
      <name>Jörg Faschingbauer</name>
    </author>
    <content type="html">&lt;section id="building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"&gt;

&lt;nav class="contents local" id="contents"&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#why-this-article-why-not-use-a-prebuilt-toolchain" id="id13"&gt;Why This Article? Why Not Use A Prebuilt Toolchain?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#installing-crosstool-ng" id="id14"&gt;Installing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crosstool-ng&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#prerequisites" id="id15"&gt;Prerequisites&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#installing-from-cloned-git-repository" id="id16"&gt;Installing From Cloned Git Repository&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#installing-from-release-tarball" id="id17"&gt;Installing From Release Tarball&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#path-and-basic-test" id="id18"&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;PATH&lt;/span&gt;&lt;/code&gt;, And Basic Test&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#configure-toolchain-build" id="id19"&gt;Configure Toolchain Build&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#base-configuration-for-the-raspberry" id="id20"&gt;Base Configuration For The Raspberry&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#important-glibc-version" id="id21"&gt;Important: &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; Version&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#the-error" id="id22"&gt;The Error&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#the-fix" id="id23"&gt;The Fix&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#important-gcc-version" id="id24"&gt;Important: GCC Version&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#id4" id="id25"&gt;The Error&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#id5" id="id26"&gt;The Fix&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#toolchain-build-install" id="id27"&gt;Toolchain Build/Install&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#test" id="id28"&gt;Test&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#simplest-c-stdio-h" id="id29"&gt;Simplest: C, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#c-iostream" id="id30"&gt;C++, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#c-thread" id="id31"&gt;C++, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;thread&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#packaging-distributing-the-toolchain" id="id32"&gt;Packaging/Distributing The Toolchain&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="#afterword" id="id33"&gt;Afterword&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;section id="why-this-article-why-not-use-a-prebuilt-toolchain"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13" role="doc-backlink"&gt;Why This Article? Why Not Use A Prebuilt Toolchain?&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;There &lt;a class="reference external" href="https://github.com/raspberrypi/tools"&gt;used to be&lt;/a&gt; a
toolchain for the Raspberry Pi, made by the &lt;a class="reference external" href="https://www.raspberrypi.com/software/"&gt;Raspberry Pi OS&lt;/a&gt; creators. Sadly, this
repository has been dead since years.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One popular toolchain, &lt;a class="reference external" href="https://snapshots.linaro.org/gnu-toolchain/"&gt;Linaro&lt;/a&gt;, is widely
recommended for the Raspberry. It does not work for C++ though - its
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libstdc++&lt;/span&gt;&lt;/code&gt; has an unsatisfied version dependency on
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libpthread&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A number of other Raspberry toolchains exist out there, but I either
didn’t get them to work at all (see the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; &lt;a class="reference internal" href="../2022/09/cross-raspi.html#glibc-version"&gt;&lt;span class="std std-ref"&gt;version
dependency&lt;/span&gt;&lt;/a&gt;), or didn’t get them to work for C++.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prebuilt toolchains may work for C, but I failed to find one that
works for C++. The amount of work that I invested in finding one was,
in my opinion, totally wasted. Building a toolchain yourself is not at
all hard, provided that you bring basic Linux understanding (which you
should if you program for it).&lt;/p&gt;
&lt;p&gt;In my opinion (please given me &lt;a class="reference internal" href="../../about/myself/contact.html"&gt;&lt;span class="doc"&gt;feedback&lt;/span&gt;&lt;/a&gt;), this article describes the most
close-to-correct way to build a toolchain for a target that does not
come with a toolchain. Although I describe the situation for the
Raspberry (because that was my primary intention), it will sure work
for &lt;em&gt;any&lt;/em&gt; target.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="installing-crosstool-ng"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14" role="doc-backlink"&gt;Installing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crosstool-ng&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Below is a writeup of how I installed &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crosstool-ng&lt;/span&gt;&lt;/code&gt; (running
Fedora, I chose to install from a released tarball) . Please read
through their &lt;a class="reference external" href="https://crosstool-ng.github.io/docs/install/"&gt;installation documentation&lt;/a&gt; for your particular
situation.&lt;/p&gt;
&lt;section id="prerequisites"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15" role="doc-backlink"&gt;Prerequisites&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crosstool-ng&lt;/span&gt;&lt;/code&gt; requires one to install a number of packages
first. Thankfully, they do thorough testing in Docker, and the list of
dependencies can be taken from the Docker file for your OS (see &lt;a class="reference external" href="https://github.com/crosstool-ng/crosstool-ng/tree/master/testing/docker"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id7"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;Dependencies for Fedora&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;root@host # &lt;/span&gt;dnf&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;autoconf&lt;span class="w"&gt; &lt;/span&gt;gperf&lt;span class="w"&gt; &lt;/span&gt;bison&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;flex&lt;span class="w"&gt; &lt;/span&gt;texinfo&lt;span class="w"&gt; &lt;/span&gt;help2man&lt;span class="w"&gt; &lt;/span&gt;gcc-c++&lt;span class="w"&gt; &lt;/span&gt;libtool&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;patch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;ncurses-devel&lt;span class="w"&gt; &lt;/span&gt;python3-devel&lt;span class="w"&gt; &lt;/span&gt;perl-Thread-Queue&lt;span class="w"&gt; &lt;/span&gt;bzip2&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;xz&lt;span class="w"&gt; &lt;/span&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;rsync&lt;span class="w"&gt; &lt;/span&gt;diffutils&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;meson&lt;span class="w"&gt; &lt;/span&gt;ninja-build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="literal-block-wrapper docutils container" id="id8"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;Dependencies for Ubuntu&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;root@host # &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;gcc&lt;span class="w"&gt; &lt;/span&gt;g++&lt;span class="w"&gt; &lt;/span&gt;gperf&lt;span class="w"&gt; &lt;/span&gt;bison&lt;span class="w"&gt; &lt;/span&gt;flex&lt;span class="w"&gt; &lt;/span&gt;texinfo&lt;span class="w"&gt; &lt;/span&gt;help2man&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;libncurses5-dev&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python3-dev&lt;span class="w"&gt; &lt;/span&gt;autoconf&lt;span class="w"&gt; &lt;/span&gt;automake&lt;span class="w"&gt; &lt;/span&gt;libtool&lt;span class="w"&gt; &lt;/span&gt;libtool-bin&lt;span class="w"&gt; &lt;/span&gt;gawk&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;bzip2&lt;span class="w"&gt; &lt;/span&gt;xz-utils&lt;span class="w"&gt; &lt;/span&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;patch&lt;span class="w"&gt; &lt;/span&gt;libstdc++6&lt;span class="w"&gt; &lt;/span&gt;rsync&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;meson&lt;span class="w"&gt; &lt;/span&gt;ninja-build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="installing-from-cloned-git-repository"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16" role="doc-backlink"&gt;Installing From Cloned Git Repository&lt;/a&gt;&lt;/h3&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;At one point, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt;&lt;/code&gt; (as installed from the release tarball)
failed to build toolchains because it tried to download a version
of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;zlib&lt;/span&gt;&lt;/code&gt; that did not exist anymore:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[EXTRA]    Retrieving &amp;#39;zlib-1.2.12&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;[ERROR]    zlib: download failed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The issue had already been resolved in the upstream repository, but
no tarball release had been made. So building &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crosstool-ng&lt;/span&gt;&lt;/code&gt; from
source is in order.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The steps are basically the same as installing from the release
tarball, except that some massaging (yes, autotools) in the source
directory is necessary prior to building.&lt;/p&gt;
&lt;p&gt;Clone repository, and massage source tree:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host$ &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/crosstool-ng/crosstool-ng
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;crosstool-ng/
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;sh&lt;span class="w"&gt; &lt;/span&gt;./bootstrap
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;./configure&lt;span class="w"&gt; &lt;/span&gt;--prefix&lt;span class="o"&gt;=&lt;/span&gt;/home/jfasch/cross
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;make
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="installing-from-release-tarball"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17" role="doc-backlink"&gt;Installing From Release Tarball&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As complained above, releases might be out of date. Anyway, the
procedure is slightly simpler that building from the upstream repo
source. Download latest release &lt;a class="reference external" href="https://crosstool-ng.github.io/download/"&gt;here&lt;/a&gt;); current version as of
this writing is &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;1.25.0&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host$ &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.25.0.tar.xz
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;xf&lt;span class="w"&gt; &lt;/span&gt;crosstool-ng-1.25.0.tar.xz
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;crosstool-ng-1.25.0/
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;./configure&lt;span class="w"&gt; &lt;/span&gt;--prefix&lt;span class="o"&gt;=&lt;/span&gt;/home/jfasch/cross
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;make
&lt;span class="gp"&gt;me@host$ &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="path-and-basic-test"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18" role="doc-backlink"&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;PATH&lt;/span&gt;&lt;/code&gt;, And Basic Test&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;PATH&lt;/span&gt;&lt;/code&gt;,&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id9"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;You may want to add this to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-shell notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;me@host$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/cross/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Test if all is well,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host$ &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;
&lt;span class="go"&gt;This is crosstool-NG version 1.25.0&lt;/span&gt;

&lt;span class="go"&gt;Copyright (C) 2008  Yann E. MORIN &amp;lt;yann.morin.1998@free.fr&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;This is free software; see the source for copying conditions.&lt;/span&gt;
&lt;span class="go"&gt;There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A&lt;/span&gt;
&lt;span class="go"&gt;PARTICULAR PURPOSE.&lt;/span&gt;
&lt;span class="go"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="configure-toolchain-build"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19" role="doc-backlink"&gt;Configure Toolchain Build&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt;&lt;/code&gt; toolchain build configuration works a lot like the Linux
kernel’s configuration system (a little less elaborate though). There
are a number of base configurations to choose from (we need a
Raspberry config), and, having chosen one, you can tune it to your
needs.&lt;/p&gt;
&lt;section id="base-configuration-for-the-raspberry"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20" role="doc-backlink"&gt;Base Configuration For The Raspberry&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host$ &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;list-samples&lt;span class="p"&gt;|&lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;rpi
&lt;span class="go"&gt;[G...]   aarch64-rpi3-linux-gnu&lt;/span&gt;
&lt;span class="go"&gt;[G...]   aarch64-rpi4-linux-gnu&lt;/span&gt;
&lt;span class="go"&gt;[G...]   armv7-rpi2-linux-gnueabihf&lt;/span&gt;
&lt;span class="go"&gt;[G...]   armv8-rpi3-linux-gnueabihf&lt;/span&gt;
&lt;span class="go"&gt;[G...]   armv8-rpi4-linux-gnueabihf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Mine is a Pi 4, still running the (still default) 32 bit version, so I
create a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.config&lt;/span&gt;&lt;/code&gt; file for that,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;armv8-rpi4-linux-gnueabihf
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;.config
&lt;span class="go"&gt;-rw-r--r--. 1 jfasch jfasch 23179 Sep 23 08:18 .config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="important-glibc-version"&gt;
&lt;span id="glibc-version"&gt;&lt;/span&gt;&lt;h3&gt;&lt;a class="toc-backref" href="#id21" role="doc-backlink"&gt;Important: &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; Version&lt;/a&gt;&lt;/h3&gt;
&lt;section id="the-error"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id22" role="doc-backlink"&gt;The Error&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Executables built by your toolchain won’t work if the toolchain links
against a C library whose version is higher than what is present on
the target. Continuing with the above default configuration, and just
saying &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt; &lt;span class="pre"&gt;build&lt;/span&gt;&lt;/code&gt; will likely result in an error
&lt;a class="footnote-reference brackets" href="#glibc-default-version" id="id2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;3&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A minimal &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;int&lt;/span&gt; &lt;span class="pre"&gt;main()&lt;/span&gt; &lt;span class="pre"&gt;{&lt;/span&gt; &lt;span class="pre"&gt;return&lt;/span&gt; &lt;span class="pre"&gt;0;&lt;/span&gt; &lt;span class="pre"&gt;}&lt;/span&gt;&lt;/code&gt; program, compiled for the
target, will complain:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@target $ &lt;/span&gt;./a.out
&lt;span class="go"&gt;./a.out: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34&amp;#39; not found (required by ./a.out)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Background is that &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; employs &lt;a class="reference external" href="https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-PDA/LSB-PDA.junk/symversion.html"&gt;ELF symbol versioning&lt;/a&gt;
a lot. Key point is that an executable which links against version,
say, &lt;cite&gt;2.34&lt;/cite&gt; (which is the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt;&lt;/code&gt; default), will require the symbol
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;GLIBC_2.34&lt;/span&gt;&lt;/code&gt; in the C library, and fail to load if the target
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; version is, say, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;2.28&lt;/span&gt;&lt;/code&gt; &lt;a class="footnote-reference brackets" href="#my-situation" id="id3" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;. That version
obviously cannot have &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;GLIBC_2.34&lt;/span&gt;&lt;/code&gt;, so the executable cannot load.&lt;/p&gt;
&lt;p&gt;Find out location of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt;,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@target $ &lt;/span&gt;ldd&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/ls
&lt;span class="go"&gt;        ...&lt;/span&gt;
&lt;span class="go"&gt;        libc.so.6 =&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6 (0xb6e06000)&lt;/span&gt;
&lt;span class="go"&gt;        ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Simply &lt;em&gt;invoke&lt;/em&gt; (sic!) the library,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@target $ &lt;/span&gt;/lib/arm-linux-gnueabihf/libc.so.6
&lt;span class="go"&gt;GNU C Library (Debian GLIBC 2.28-10+rpt2+rpi1+deb10u1) stable release version 2.28.&lt;/span&gt;
&lt;span class="go"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="the-fix"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id23" role="doc-backlink"&gt;The Fix&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;So, it’s &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;2.28&lt;/span&gt;&lt;/code&gt;. Back on the &lt;em&gt;host&lt;/em&gt; again, tune configuration:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;menuconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;C-library&lt;/span&gt; &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pre"&gt;Version&lt;/span&gt; &lt;span class="pre"&gt;of&lt;/span&gt; &lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt;, choose &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;2.28&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;img alt="blog/2022/09/glibc-version.png" src="blog/2022/09/glibc-version.png" style="width: 477.0px; height: 255.5px;" /&gt;
&lt;p&gt;Minor quirk: version &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;2.28&lt;/span&gt;&lt;/code&gt; does not build without warnings, so one
has to disable &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;-Werror&lt;/span&gt;&lt;/code&gt; during its build,&lt;/p&gt;
&lt;img alt="blog/2022/09/werror.png" src="blog/2022/09/werror.png" style="width: 477.0px; height: 255.5px;" /&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="important-gcc-version"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24" role="doc-backlink"&gt;Important: GCC Version&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not only is the Pi’s &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glibc&lt;/span&gt;&lt;/code&gt; version rather outdated; GCC is also a
bit behind - it’s &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;8.3.0&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;section id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id25" role="doc-backlink"&gt;The Error&lt;/a&gt;&lt;/h4&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/jfasch/work/jfasch-home/blog/2022/09/cross-raspi.rst&lt;/span&gt;, line 256); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate implicit target name: “the error”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Using the latest supported GCC version (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;12.2.0&lt;/span&gt;&lt;/code&gt; as of this writing)
as a cross compiler, A less trivial C++ program fails to start:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;./a.out: /lib/arm-linux-gnueabihf/libstdc++.so.6: version `GLIBCXX_3.4.29&amp;#39; not found (required by ./a.out)&lt;/span&gt;
&lt;span class="go"&gt;./a.out: /lib/arm-linux-gnueabihf/libstdc++.so.6: version `GLIBCXX_3.4.26&amp;#39; not found (required by ./a.out)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It turns out that the program makes use of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;std::filesystem&lt;/span&gt;&lt;/code&gt;
library that has been added in C++17. Apparently that library uses
some more modern functionality from GCC’s C++ support library,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libgcc_s.so.1&lt;/span&gt;&lt;/code&gt;. That functionality is obviously not contained in
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libgcc_s.so.1&lt;/span&gt;&lt;/code&gt; as of GCC &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;8.3.0&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="id5"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id26" role="doc-backlink"&gt;The Fix&lt;/a&gt;&lt;/h4&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/jfasch/work/jfasch-home/blog/2022/09/cross-raspi.rst&lt;/span&gt;, line 273); &lt;em&gt;&lt;a href="#id5"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate implicit target name: “the fix”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Downgrade the toolchain’s GCC to something like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;8.3.0&lt;/span&gt;&lt;/code&gt; (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;8.5.0&lt;/span&gt;&lt;/code&gt;
is just a minor release, so it should work).&lt;/p&gt;
&lt;p&gt;In &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;C&lt;/span&gt; &lt;span class="pre"&gt;compiler&lt;/span&gt; &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pre"&gt;Version&lt;/span&gt; &lt;span class="pre"&gt;of&lt;/span&gt; &lt;span class="pre"&gt;gcc&lt;/span&gt;&lt;/code&gt;, choose &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;8.5.0&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;img alt="blog/2022/09/gcc-version.png" src="blog/2022/09/gcc-version.png" style="width: 400.5px; height: 264.5px;" /&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="toolchain-build-install"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id27" role="doc-backlink"&gt;Toolchain Build/Install&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is as simple as saying,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;By default &lt;a class="footnote-reference brackets" href="#ct-prefix" id="id6" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, the toolchain is installed in
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$HOME/x-tools/armv8-rpi4-linux-gnueabihf/&lt;/span&gt;&lt;/code&gt; (you may want to add
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$HOME/x-tools/armv8-rpi4-linux-gnueabihf/bin/&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$PATH&lt;/span&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For build system configuration (see for example
&lt;a class="reference internal" href="../../trainings/material/soup/linux/toolchain/cmake/cross.html"&gt;&lt;span class="doc"&gt;CMake: Cross Build&lt;/span&gt;&lt;/a&gt;),&lt;/p&gt;
&lt;table class="docutils align-default"&gt;
&lt;tbody&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;PATH&lt;/span&gt;&lt;/code&gt; (best in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/code&gt;)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$HOME/x-tools/armv8-rpi4-linux-gnueabihf/bin&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Sysroot; in CMake toolchain files (see
&lt;a class="reference internal" href="../../trainings/material/soup/linux/toolchain/cmake/cross.html"&gt;&lt;span class="doc"&gt;CMake: Cross Build&lt;/span&gt;&lt;/a&gt;,
“Toolchain Files”), this is&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CMAKE_FIND_ROOT_PATH&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CMAKE_SYSROOT&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$HOME/x-tools/armv8-rpi4-linux-gnueabihf/armv8-rpi4-linux-gnueabihf&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;section id="test"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28" role="doc-backlink"&gt;Test&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I tested the toolchain from a number of viewpoints that I describe
below.&lt;/p&gt;
&lt;section id="simplest-c-stdio-h"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29" role="doc-backlink"&gt;Simplest: C, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Check for availability of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libc&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id10"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;&lt;a class="reference download internal" download="" href="../../_downloads/930da294b589e3c0ee18e29e9212dc93/c-stdio.c"&gt;&lt;code class="xref download docutils literal notranslate"&gt;&lt;span class="pre"&gt;c-stdio.c&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-c notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;~/x-tools/armv8-rpi4-linux-gnueabihf/bin/armv8-rpi4-linux-gnueabihf-gcc&lt;span class="w"&gt; &lt;/span&gt;c-stdio.c
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;scp&lt;span class="w"&gt; &lt;/span&gt;a.out&lt;span class="w"&gt; &lt;/span&gt;me@target:
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;me@target&lt;span class="w"&gt; &lt;/span&gt;./a.out
&lt;span class="go"&gt;Hello World&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="c-iostream"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30" role="doc-backlink"&gt;C++, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Check for availability of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libstdc++&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id11"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;&lt;a class="reference download internal" download="" href="../../_downloads/1f44756998952fcb268db788f7cf730b/c%2B%2B-iostream.cpp"&gt;&lt;code class="xref download docutils literal notranslate"&gt;&lt;span class="pre"&gt;c++-iostream.cpp&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-c++ notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;~/x-tools/armv8-rpi4-linux-gnueabihf/bin/armv8-rpi4-linux-gnueabihf-g++&lt;span class="w"&gt; &lt;/span&gt;c++-iostream.cpp
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;scp&lt;span class="w"&gt; &lt;/span&gt;a.out&lt;span class="w"&gt; &lt;/span&gt;me@target:
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;me@target&lt;span class="w"&gt; &lt;/span&gt;./a.out
&lt;span class="go"&gt;Hello World&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="c-thread"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id31" role="doc-backlink"&gt;C++, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;&amp;lt;thread&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Check for availability of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libpthread&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id12"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;&lt;a class="reference download internal" download="" href="../../_downloads/59cbba0b5d6de2183a7a48be92ed635e/c%2B%2B-thread.cpp"&gt;&lt;code class="xref download docutils literal notranslate"&gt;&lt;span class="pre"&gt;c++-thread.cpp&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-c++ notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;thread&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;([](){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello Thread&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Bye&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;me@host $ &lt;/span&gt;~/x-tools/armv8-rpi4-linux-gnueabihf/bin/armv8-rpi4-linux-gnueabihf-g++&lt;span class="w"&gt; &lt;/span&gt;-pthread&lt;span class="w"&gt; &lt;/span&gt;c++-thread.cpp
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;scp&lt;span class="w"&gt; &lt;/span&gt;a.out&lt;span class="w"&gt; &lt;/span&gt;me@target:
&lt;span class="gp"&gt;me@host $ &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;me@target&lt;span class="w"&gt; &lt;/span&gt;./a.out
&lt;span class="go"&gt;Hello Thread&lt;/span&gt;
&lt;span class="go"&gt;Bye&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="packaging-distributing-the-toolchain"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id32" role="doc-backlink"&gt;Packaging/Distributing The Toolchain&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The toolchain is fully relocatable. Although
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;$HOME/x-tools/armv8-rpi4-linux-gnueabihf/&lt;/span&gt;&lt;/code&gt; contains the cross
toolchain &lt;em&gt;together&lt;/em&gt; with the &lt;a class="reference internal" href="../../trainings/material/soup/linux/toolchain/cross/basics.html"&gt;&lt;span class="doc"&gt;sysroot&lt;/span&gt;&lt;/a&gt;, even if you
move it around it will remain self-contained.&lt;/p&gt;
&lt;p&gt;Pack it into an archive,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;~/x-tools&lt;span class="w"&gt; &lt;/span&gt;-J&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;raspberry-pi-toolchain.tar.xz&lt;span class="w"&gt; &lt;/span&gt;armv8-rpi4-linux-gnueabihf/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And share it with your colleagues.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="afterword"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id33" role="doc-backlink"&gt;Afterword&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope I could help you with this article. Share it if I could, or, if
I couldn’t, feel free to send me an &lt;a class="reference internal" href="../../about/myself/contact.html"&gt;&lt;span class="doc"&gt;email&lt;/span&gt;&lt;/a&gt; explaining why.&lt;/p&gt;
&lt;p&gt;Either way: cross development is not easy, given the huge number of
dependencies between target libraries. This is a rather complex and
fragile thing, and there are sure better ways to do cross development
than the one that I describe here. Ideally, a target vendor (in our
case, the guys who create &lt;a class="reference external" href="https://www.raspberrypi.com/software/"&gt;Raspberry Pi OS&lt;/a&gt;) would release an SDK that
developers could install, and that contained &lt;em&gt;all&lt;/em&gt; that is necessary
to do cross development. This would be the toolchain and associated
basic runtime libraries (described here), and the entire &lt;em&gt;sysroot&lt;/em&gt; of
the target.&lt;/p&gt;
&lt;p&gt;Creating such an SDK is the job of higher level tools like &lt;a class="reference external" href="https://www.yoctoproject.org/"&gt;Yocto&lt;/a&gt; or &lt;a class="reference external" href="https://buildroot.org/"&gt;Buildroot&lt;/a&gt; - but this is another story.&lt;/p&gt;
&lt;p class="rubric"&gt;Footnotes&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="my-situation" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="#id3"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;That describes the situation that I encountered;
yours might be a little different.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="ct-prefix" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="#id6"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;You change the installation prefix by setting the
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CT_PREFIX&lt;/span&gt;&lt;/code&gt; environment variable prior to building,&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nv"&gt;CT_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/some/other/location&lt;span class="w"&gt; &lt;/span&gt;ct-ng&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="glibc-default-version" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="#id2"&gt;3&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;As of this writing, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ct-ng&lt;/span&gt;&lt;/code&gt; chooses the
GNU C Library version &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;2.34&lt;/span&gt;&lt;/code&gt;. Your
situation might be different, the
principle remains the same.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://www.faschingbauer.me/blog/2022/09/cross-raspi.html" rel="alternate"/>
    <summary>Why This Article? Why Not Use A Prebuilt Toolchain?</summary>
    <published>2022-09-23T00:00:00+02:00</published>
  </entry>
</feed>
