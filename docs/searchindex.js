Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/script", "about/site/work-in-progress/blink/glt2024/slides", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/gluehwein", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/playground/gaphor/index", "about/site/work-in-progress/playground/hochkoenig/index", "about/site/work-in-progress/playground/index", "about/site/work-in-progress/playground/sphinx", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2024-03-11--Linux-Basics/agenda", "trainings/log/detail/2024-03-11--Linux-Basics/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/asyncio/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/script.rst", "about/site/work-in-progress/blink/glt2024/slides.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/gluehwein.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/playground/gaphor/index.rst", "about/site/work-in-progress/playground/hochkoenig/index.rst", "about/site/work-in-progress/playground/index.rst", "about/site/work-in-progress/playground/sphinx.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2024-03-11--Linux-Basics/agenda.rst", "trainings/log/detail/2024-03-11--Linux-Basics/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/asyncio/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking", "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking", "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking", "GLT 2024 Submission: Python, asyncio, libgpiod, and Pointless Blinking", "Pointless Blinking", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Gl\u00fchwein Trinken?", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Gaphor", "Hochk\u00f6nig", "Playground", "Sphinx", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Agenda: Linux Basics (2024-03-11 - 2024-03-13)", "Linux Basics (2024-03-11 - 2024-03-13)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 187, 190, 258, 479, 1126, 1128, 1132, 1134], "j\u00f6rg": [0, 23, 149, 191, 225, 233, 237, 252, 255, 258, 268, 271, 286, 307, 313, 325, 328, 329, 335, 341, 347, 351, 361, 362, 364, 366, 431, 505, 1033, 1036, 1074, 1099, 1126, 1127, 1128, 1129, 1132, 1133, 1134], "faschingbau": [0, 12, 23, 37, 50, 61, 63, 67, 149, 151, 172, 179, 180, 188, 206, 209, 210, 212, 213, 214, 215, 225, 232, 237, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 286, 293, 303, 307, 313, 318, 325, 328, 329, 335, 341, 347, 361, 362, 364, 367, 370, 375, 431, 462, 479, 484, 497, 504, 505, 538, 554, 610, 656, 685, 686, 687, 688, 689, 690, 707, 865, 866, 873, 875, 880, 894, 910, 923, 929, 954, 991, 1033, 1036, 1037, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1059, 1065, 1087, 1092, 1115, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1136, 1145, 1151, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1164, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "offic": [0, 32, 178, 194], "co": [0, 12, 32, 37, 151, 169, 180, 209, 210, 212, 213, 214, 215, 276, 293, 297, 370, 375, 477, 484, 703, 1037, 1059, 1136, 1151, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1164, 1182, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "43": [0, 7, 176, 183, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 454, 467, 479, 638, 708, 758, 786, 920, 929, 942, 944, 983, 1046], "0": [0, 5, 7, 21, 23, 32, 60, 62, 109, 112, 113, 116, 121, 122, 123, 124, 131, 135, 139, 143, 149, 153, 159, 169, 172, 174, 175, 176, 178, 184, 188, 192, 193, 194, 195, 196, 206, 209, 211, 213, 216, 221, 223, 224, 225, 226, 229, 232, 233, 234, 237, 238, 242, 245, 246, 248, 251, 253, 255, 258, 261, 264, 265, 268, 271, 273, 274, 276, 278, 283, 286, 289, 290, 291, 293, 297, 301, 302, 303, 307, 313, 323, 325, 329, 335, 341, 347, 351, 356, 362, 363, 364, 365, 366, 367, 370, 392, 393, 395, 397, 399, 401, 402, 403, 405, 412, 413, 415, 416, 417, 425, 428, 430, 431, 437, 438, 440, 443, 458, 459, 460, 461, 463, 464, 467, 468, 471, 473, 477, 479, 480, 483, 487, 488, 490, 493, 496, 497, 502, 504, 507, 509, 516, 517, 519, 521, 522, 523, 524, 526, 527, 528, 531, 532, 535, 536, 537, 541, 544, 545, 549, 551, 552, 553, 554, 555, 563, 569, 570, 578, 581, 587, 590, 597, 598, 599, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 620, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 660, 662, 666, 667, 669, 670, 672, 673, 675, 677, 679, 684, 685, 686, 687, 688, 689, 690, 691, 695, 699, 700, 703, 706, 707, 708, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 737, 739, 740, 742, 744, 745, 747, 749, 753, 754, 756, 757, 758, 759, 764, 767, 769, 771, 775, 777, 779, 781, 785, 789, 793, 796, 797, 801, 804, 816, 818, 828, 851, 852, 854, 869, 873, 875, 880, 883, 894, 895, 898, 920, 922, 923, 924, 929, 935, 937, 938, 942, 943, 944, 953, 955, 958, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 974, 976, 978, 979, 985, 993, 994, 996, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1012, 1013, 1015, 1024, 1027, 1028, 1030, 1032, 1034, 1035, 1038, 1040, 1044, 1046, 1048, 1061, 1064, 1065, 1066, 1067, 1071, 1073, 1075, 1078, 1080, 1081, 1082, 1086, 1088, 1091, 1092, 1094, 1097, 1098, 1099, 1104, 1106, 1115, 1125, 1132, 1134, 1140, 1141, 1142, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1165, 1170, 1172, 1177, 1182], "664": [0, 248, 883], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 99, 103, 104, 110, 126, 148, 168, 170, 172, 184, 192, 201, 206, 211, 213, 214, 216, 221, 223, 225, 228, 229, 230, 232, 237, 238, 240, 242, 243, 245, 246, 248, 253, 255, 256, 258, 261, 265, 268, 270, 271, 275, 279, 282, 283, 286, 288, 289, 293, 303, 306, 307, 309, 310, 312, 313, 325, 329, 335, 340, 342, 347, 351, 353, 354, 364, 367, 370, 375, 403, 451, 651, 653, 656, 695, 744, 791, 865, 866, 873, 930, 934, 946, 947, 948, 950, 955, 1036, 1040, 1049, 1067, 1068, 1084, 1094, 1104, 1105, 1127, 1129, 1137, 1145, 1158, 1159, 1165, 1190, 1196], "prankergass": [0, 232, 253, 910], "33": [0, 7, 170, 183, 195, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 365, 366, 479, 500, 869, 910, 1012, 1141, 1142], "8020": [0, 232, 248, 253, 291, 479, 865, 866, 904, 910], "graz": [0, 1, 3, 23, 61, 63, 67, 152, 214, 232, 291, 324, 327, 387, 479, 865, 866, 904, 910, 1136], "uid": [0, 253, 258, 261, 329, 347, 370, 375, 789, 865, 866, 873, 883, 955, 970, 1026, 1115], "vat": [0, 217, 1200], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 61, 62, 63, 67, 72, 80, 99, 116, 120, 123, 127, 131, 132, 134, 135, 137, 139, 143, 144, 148, 157, 173, 174, 175, 184, 189, 193, 206, 209, 210, 212, 213, 214, 225, 230, 232, 233, 234, 235, 240, 242, 243, 246, 249, 251, 253, 259, 261, 270, 273, 280, 282, 289, 299, 306, 312, 324, 337, 356, 359, 361, 370, 372, 374, 376, 381, 397, 400, 401, 406, 418, 420, 442, 453, 457, 463, 464, 467, 477, 479, 502, 505, 517, 519, 522, 533, 542, 543, 554, 555, 557, 562, 573, 579, 584, 590, 595, 597, 598, 601, 611, 613, 660, 667, 676, 679, 681, 695, 700, 711, 723, 735, 744, 750, 759, 773, 779, 785, 789, 790, 791, 797, 799, 809, 811, 818, 822, 838, 854, 865, 866, 869, 875, 880, 881, 883, 884, 885, 886, 892, 894, 896, 899, 917, 929, 931, 934, 938, 942, 943, 944, 951, 958, 960, 961, 962, 965, 967, 968, 969, 970, 972, 973, 974, 975, 976, 978, 979, 982, 986, 992, 996, 1005, 1006, 1009, 1010, 1014, 1017, 1020, 1038, 1049, 1054, 1055, 1059, 1082, 1083, 1088, 1094, 1095, 1096, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1110, 1111, 1113, 1115, 1117, 1118, 1119, 1121, 1122, 1126, 1128, 1131, 1135, 1137, 1150, 1161, 1170, 1171, 1172, 1190, 1191, 1203], "review": [0, 174, 197, 208, 302, 394], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 60, 61, 63, 65, 66, 67, 87, 108, 124, 126, 138, 148, 153, 154, 159, 169, 177, 178, 179, 180, 184, 188, 190, 192, 200, 201, 202, 203, 209, 210, 213, 214, 222, 227, 233, 235, 236, 242, 248, 249, 251, 258, 261, 265, 273, 278, 280, 289, 292, 298, 299, 300, 302, 306, 312, 316, 317, 320, 324, 326, 328, 332, 334, 338, 340, 346, 350, 369, 370, 375, 390, 538, 552, 573, 615, 675, 748, 752, 757, 774, 778, 794, 809, 811, 815, 838, 839, 937, 939, 942, 978, 1024, 1026, 1081, 1092, 1148, 1150, 1165, 1166], "g": [0, 32, 48, 62, 99, 126, 139, 144, 176, 180, 184, 188, 193, 194, 196, 206, 221, 225, 234, 238, 242, 245, 248, 253, 255, 258, 261, 265, 283, 289, 297, 313, 338, 347, 354, 392, 412, 416, 419, 422, 427, 433, 434, 435, 437, 440, 455, 459, 467, 471, 472, 479, 480, 482, 485, 491, 492, 505, 509, 517, 538, 551, 554, 597, 601, 602, 631, 651, 669, 670, 699, 703, 706, 708, 717, 737, 758, 766, 770, 775, 789, 797, 816, 838, 857, 876, 883, 898, 920, 927, 930, 937, 955, 964, 974, 994, 996, 998, 1009, 1010, 1012, 1013, 1014, 1015, 1026, 1031, 1033, 1035, 1043, 1055, 1057, 1058, 1076, 1081, 1082, 1146, 1150, 1161, 1172, 1177, 1193], "page": [0, 33, 39, 60, 74, 76, 80, 108, 126, 144, 168, 169, 170, 172, 173, 175, 176, 180, 185, 205, 210, 213, 234, 259, 289, 315, 331, 351, 377, 401, 402, 405, 450, 461, 501, 538, 791, 797, 816, 822, 824, 836, 862, 865, 866, 882, 931, 935, 944, 955, 965, 968, 996, 1144], "r": [0, 7, 13, 31, 32, 38, 43, 60, 154, 176, 178, 179, 183, 184, 192, 194, 195, 196, 205, 206, 209, 211, 212, 216, 221, 223, 226, 229, 232, 234, 238, 239, 242, 245, 248, 251, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 290, 291, 293, 303, 307, 313, 325, 329, 335, 338, 341, 347, 351, 362, 365, 370, 379, 391, 412, 437, 467, 479, 486, 500, 519, 520, 549, 553, 617, 644, 747, 755, 789, 802, 811, 816, 834, 838, 839, 869, 875, 880, 883, 894, 897, 898, 900, 920, 927, 935, 942, 943, 944, 946, 947, 955, 966, 969, 970, 978, 1012, 1013, 1014, 1024, 1026, 1027, 1034, 1055, 1060, 1063, 1069, 1080, 1086, 1092, 1124, 1150, 1172, 1208], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 61, 63, 66, 109, 151, 173, 174, 175, 176, 178, 179, 180, 181, 182, 192, 205, 217, 226, 262, 266, 293, 335, 347, 608, 745, 838, 877, 926, 931, 944, 953, 955, 970, 1080, 1184, 1185, 1187, 1200, 1203, 1207], "19": [1, 7, 23, 65, 126, 183, 185, 194, 195, 196, 205, 211, 214, 216, 221, 223, 225, 226, 229, 232, 237, 238, 242, 245, 248, 249, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 363, 364, 365, 367, 375, 378, 387, 455, 479, 486, 755, 789, 898, 920, 944, 1015, 1024, 1056, 1062, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1136, 1141, 1142, 1146, 1154, 1165, 1170, 1172], "6": [1, 7, 32, 60, 62, 111, 124, 148, 154, 174, 176, 184, 188, 190, 193, 194, 195, 196, 206, 211, 213, 218, 221, 223, 224, 226, 229, 232, 233, 234, 236, 239, 241, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 272, 274, 283, 286, 290, 293, 297, 303, 307, 313, 321, 325, 329, 335, 341, 347, 351, 362, 363, 365, 366, 370, 394, 395, 417, 454, 460, 471, 516, 517, 556, 557, 558, 559, 571, 590, 597, 599, 602, 605, 606, 609, 611, 614, 615, 616, 617, 635, 636, 637, 638, 644, 675, 676, 712, 758, 771, 789, 894, 917, 920, 924, 929, 935, 937, 942, 943, 944, 958, 966, 979, 1012, 1024, 1026, 1029, 1034, 1035, 1038, 1044, 1048, 1067, 1068, 1071, 1073, 1075, 1082, 1092, 1098, 1115, 1122, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1141, 1142, 1146, 1150, 1165, 1170, 1171, 1172, 1177, 1201], "1966": [1, 23, 214, 248, 258, 268, 271, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1146], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 149, 181, 182, 190, 191, 192, 196, 206, 217, 227, 229, 236, 252, 255, 261, 262, 264, 276, 313, 329, 365, 370, 371, 388, 1185, 1187, 1188, 1189, 1194, 1200, 1203], "technisch": [1, 23, 388, 1202], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 61, 63, 67, 71, 75, 76, 80, 84, 85, 87, 94, 109, 110, 112, 113, 116, 120, 123, 126, 131, 134, 139, 142, 143, 144, 161, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 205, 206, 209, 211, 212, 213, 216, 224, 225, 229, 230, 232, 233, 234, 235, 237, 240, 242, 245, 246, 249, 250, 251, 253, 256, 258, 259, 261, 265, 271, 273, 274, 278, 280, 282, 289, 292, 295, 297, 298, 299, 300, 302, 306, 307, 317, 320, 324, 328, 335, 337, 346, 351, 356, 357, 381, 387, 389, 393, 395, 399, 402, 403, 416, 425, 433, 437, 440, 443, 444, 455, 458, 459, 460, 461, 463, 466, 473, 477, 479, 483, 486, 492, 495, 496, 497, 500, 501, 505, 506, 507, 516, 517, 519, 520, 521, 522, 538, 540, 544, 549, 551, 553, 554, 557, 558, 559, 571, 573, 597, 598, 600, 602, 605, 606, 607, 611, 613, 614, 615, 616, 617, 630, 635, 648, 651, 654, 655, 660, 666, 669, 670, 677, 682, 686, 688, 689, 690, 691, 695, 696, 699, 703, 707, 716, 722, 735, 737, 745, 747, 754, 755, 757, 758, 759, 765, 775, 776, 789, 790, 791, 792, 797, 802, 804, 807, 809, 816, 838, 846, 851, 864, 865, 866, 870, 871, 875, 883, 892, 897, 898, 901, 904, 923, 925, 935, 942, 944, 946, 947, 952, 955, 960, 961, 962, 963, 965, 969, 970, 971, 972, 976, 978, 979, 985, 991, 993, 994, 997, 998, 999, 1000, 1006, 1010, 1012, 1013, 1018, 1022, 1027, 1028, 1031, 1032, 1035, 1041, 1042, 1043, 1047, 1048, 1052, 1053, 1055, 1057, 1058, 1059, 1063, 1064, 1065, 1067, 1071, 1077, 1086, 1087, 1088, 1092, 1094, 1107, 1113, 1114, 1115, 1131, 1137, 1139, 1141, 1142, 1143, 1144, 1149, 1150, 1153, 1158, 1159, 1163, 1165, 1170, 1171, 1173, 1182, 1184, 1185, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1203, 1204, 1208], "der": [1, 3, 5, 7, 8, 11, 155, 169, 181, 182, 183, 187, 190, 191, 192, 193, 196, 198, 200, 206, 208, 217, 218, 219, 222, 223, 226, 227, 229, 232, 236, 252, 253, 255, 261, 264, 265, 268, 276, 325, 351, 362, 370, 375, 1184, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 181, 182, 206, 216, 313, 341, 1185, 1204], "1998": [1, 3, 23, 184, 192, 248, 596], "vorlesungen": 1, "programmieren": [1, 5, 149, 192, 196, 371, 387, 1189, 1194, 1197, 1201, 1203, 1207, 1208], "basi": [1, 3, 5, 7, 24, 80, 197, 205, 226, 235, 249, 261, 295, 365, 440, 1193, 1204, 1205], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 62, 66, 74, 75, 76, 80, 87, 89, 108, 111, 125, 134, 144, 149, 158, 168, 169, 172, 173, 174, 175, 176, 179, 186, 189, 191, 193, 201, 202, 206, 211, 212, 218, 221, 223, 228, 229, 232, 233, 242, 245, 246, 248, 252, 253, 255, 258, 261, 265, 268, 273, 274, 283, 286, 293, 299, 303, 307, 313, 316, 324, 325, 329, 332, 335, 341, 347, 351, 356, 365, 369, 371, 372, 377, 383, 384, 387, 389, 390, 391, 392, 393, 395, 399, 401, 403, 404, 405, 408, 411, 413, 415, 416, 417, 419, 423, 427, 428, 431, 432, 433, 434, 435, 439, 441, 443, 444, 445, 449, 450, 452, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 480, 483, 484, 485, 486, 489, 490, 491, 496, 497, 499, 500, 505, 509, 515, 517, 520, 526, 538, 541, 544, 545, 546, 547, 548, 550, 551, 553, 554, 556, 562, 596, 598, 600, 601, 602, 603, 607, 608, 609, 613, 614, 616, 618, 621, 626, 631, 633, 634, 638, 640, 644, 646, 648, 650, 651, 652, 653, 656, 658, 659, 660, 662, 663, 665, 666, 667, 668, 670, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 697, 703, 704, 708, 709, 710, 711, 712, 716, 722, 723, 734, 735, 736, 738, 739, 740, 741, 742, 743, 746, 747, 748, 749, 751, 752, 754, 755, 757, 758, 759, 760, 761, 763, 768, 769, 772, 773, 774, 775, 776, 779, 788, 789, 791, 792, 794, 797, 801, 802, 806, 807, 811, 813, 816, 818, 828, 838, 840, 841, 846, 854, 857, 862, 864, 870, 875, 877, 880, 895, 898, 920, 926, 929, 935, 936, 942, 943, 944, 956, 960, 961, 962, 967, 968, 969, 970, 971, 980, 983, 988, 996, 999, 1001, 1002, 1005, 1008, 1009, 1010, 1012, 1013, 1014, 1020, 1022, 1024, 1028, 1029, 1030, 1031, 1033, 1034, 1058, 1066, 1067, 1075, 1076, 1080, 1086, 1094, 1148, 1149, 1153, 1171, 1172, 1179, 1182, 1192, 1194, 1195, 1197, 1203, 1204, 1205, 1206, 1207, 1208], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 149, 166, 181, 182, 187, 191, 192, 196, 198, 200, 208, 212, 218, 222, 224, 226, 231, 233, 237, 242, 253, 257, 258, 263, 265, 269, 275, 276, 293, 303, 313, 329, 342, 352, 365, 366, 370, 375, 387, 389, 425, 433, 878, 925, 926, 945, 1184, 1185, 1186, 1187, 1188, 1192, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "\u00fcbertragungsprotokol": [1, 186], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 242, 248, 258, 261, 286], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 74, 75, 76, 80, 108, 126, 186, 209, 222, 224, 233, 252, 260, 263, 289, 293, 299, 301, 302, 306, 374, 383, 384, 479, 501, 543, 595, 596, 603, 666, 667, 670, 672, 673, 695, 759, 791, 830, 840, 1037, 1051, 1190, 1193], "design": [1, 3, 20, 23, 53, 57, 76, 80, 82, 84, 87, 108, 169, 170, 173, 186, 189, 209, 235, 236, 252, 298, 300, 378, 387, 389, 416, 446, 466, 467, 470, 478, 487, 494, 495, 496, 497, 499, 500, 502, 504, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 543, 551, 553, 595, 596, 602, 604, 620, 692, 741, 754, 758, 759, 761, 776, 789, 790, 791, 792, 943, 1012, 1132, 1171, 1189, 1192], "analys": [1, 3, 186, 1187], "ration": [1, 3, 38, 179], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 149, 155, 181, 182, 187, 191, 193, 196, 217, 218, 229, 236, 252, 264, 276, 290, 370, 375, 387, 389, 900, 1184, 1185, 1187, 1194, 1200, 1201, 1203, 1206], "java": [1, 9, 216, 217, 228, 240, 249, 341, 656, 669, 754, 759, 766, 1048, 1061, 1067, 1076, 1200, 1208], "releasemanag": [1, 3, 23, 186, 1202], "cv": [1, 3, 23, 32, 169, 243, 1202], "subvers": [1, 3, 389, 920], "systemnah": [1, 3, 5, 23, 168, 186, 1002, 1005, 1009, 1203], "programmierung": [1, 3, 4, 5, 6, 8, 23, 166, 186, 240, 267, 276, 387, 1185, 1186, 1187, 1189, 1194, 1201, 1203, 1206], "unter": [1, 3, 23, 149, 155, 182, 190, 191, 208, 216, 371, 926, 1185, 1186, 1189, 1194, 1197, 1201, 1204, 1206, 1207], "unix": [1, 74, 75, 76, 80, 99, 125, 149, 170, 173, 202, 225, 289, 356, 370, 371, 372, 383, 384, 388, 405, 459, 505, 679, 770, 789, 791, 795, 797, 830, 863, 864, 865, 880, 882, 894, 922, 925, 931, 935, 938, 943, 955, 980, 996, 1006, 1062, 1086, 1115, 1185, 1186, 1188, 1192, 1194, 1196, 1197, 1201, 1203, 1204, 1205, 1207], "window": [1, 3, 32, 99, 100, 105, 106, 126, 148, 154, 161, 173, 178, 180, 190, 192, 205, 213, 230, 244, 246, 248, 259, 262, 273, 278, 280, 282, 288, 289, 301, 317, 323, 354, 356, 367, 370, 373, 375, 388, 400, 467, 761, 764, 791, 868, 872, 898, 934, 964, 980, 985, 1060, 1062, 1063, 1086, 1137, 1172], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 181, 182, 187, 191, 196, 200, 206, 208, 217, 218, 221, 223, 261, 276, 362, 387, 998, 1184, 1185, 1200, 1202], "2006": [1, 3, 23, 248], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 149, 181, 182, 187, 192, 200, 206, 208, 217, 218, 223, 230, 365, 387, 926, 998, 1184, 1185, 1189, 1200, 1201, 1206], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 181, 191, 262, 1187], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 217, 1200], "forschung": 1, "entwicklung": [1, 3, 4, 149, 371, 1196, 1202], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 169, 185, 248, 1061], "enterpris": 1, "architect": [1, 487, 1164], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 179, 1202], "massgeblich": 1, "portierung": [1, 3, 4, 186], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 149, 151, 155, 181, 182, 190, 191, 200, 208, 212, 213, 215, 217, 218, 221, 224, 226, 227, 229, 238, 255, 262, 267, 274, 283, 290, 325, 341, 347, 352, 370, 371, 375, 387, 389, 863, 925, 926, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1194, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "enea": [1, 3, 173], "os": [1, 3, 173], "nach": [1, 3, 4, 5, 149, 181, 182, 186, 187, 192, 196, 200, 216, 217, 223, 261, 262, 268, 347, 388, 860, 1184, 1200], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 60, 61, 62, 63, 67, 74, 75, 76, 80, 86, 87, 88, 89, 100, 105, 106, 108, 125, 128, 144, 149, 158, 165, 168, 169, 170, 172, 174, 175, 176, 180, 183, 184, 185, 190, 197, 200, 205, 212, 234, 235, 242, 248, 251, 258, 261, 262, 265, 270, 273, 278, 280, 282, 291, 298, 300, 301, 317, 323, 337, 341, 356, 367, 369, 370, 371, 372, 376, 377, 383, 384, 387, 389, 431, 453, 461, 470, 473, 490, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 581, 595, 762, 768, 789, 790, 791, 792, 794, 795, 797, 798, 800, 802, 803, 805, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 842, 843, 844, 847, 848, 849, 852, 853, 855, 856, 858, 859, 861, 863, 864, 865, 866, 872, 874, 876, 879, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 926, 928, 931, 935, 937, 938, 939, 943, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 958, 960, 961, 962, 963, 964, 965, 970, 972, 973, 976, 977, 978, 979, 981, 989, 992, 995, 997, 1002, 1005, 1006, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1060, 1062, 1125, 1150, 1170, 1173, 1186, 1187, 1188, 1189, 1192, 1194, 1197, 1201], "beteiligt": [1, 23], "seit": [1, 5, 23, 200, 206, 216, 221, 1185, 1194], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 99, 108, 111, 112, 113, 125, 126, 143, 144, 148, 152, 178, 225, 354, 367, 369, 370, 375, 376, 378, 543, 554, 575, 595, 603, 618, 678, 692, 791, 868, 872, 887, 893, 912, 918, 934, 1019, 1022, 1179], "joanneum": [1, 152, 178, 1179], "kapfenberg": 1, "2011": [1, 3, 5, 169, 170, 185, 298, 300, 387, 391, 596, 695], "2015": [1, 23, 233, 259, 297, 328, 387, 702, 1137], "lehrveranstaltung": [1, 371], "im": [1, 3, 5, 8, 29, 32, 38, 92, 149, 181, 182, 191, 192, 196, 200, 205, 206, 208, 209, 212, 214, 217, 218, 221, 223, 227, 229, 230, 236, 237, 240, 243, 244, 246, 249, 252, 256, 257, 258, 264, 265, 267, 269, 270, 272, 285, 287, 292, 294, 295, 299, 301, 302, 305, 306, 308, 311, 312, 314, 323, 324, 326, 327, 328, 330, 333, 339, 340, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 375, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1142, 1150, 1151, 1172, 1185, 1188, 1194, 1196, 1200, 1201, 1203, 1204, 1207, 1208], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 66, 70, 75, 76, 80, 87, 99, 106, 126, 137, 143, 149, 172, 180, 183, 184, 189, 200, 206, 212, 216, 225, 242, 248, 249, 258, 259, 261, 286, 298, 300, 301, 302, 315, 331, 367, 388, 389, 455, 487, 495, 496, 505, 507, 673, 759, 791, 792, 822, 869, 882, 934, 935, 942, 943, 958, 1010, 1019, 1022, 1092, 1139, 1192, 1193, 1195, 1208], "avl": [1, 23, 170], "2018": [1, 23, 176, 248, 700], "2019": [1, 40, 150, 169, 211, 233, 282, 306, 324, 327, 328, 387, 573, 700, 741, 920, 1136, 1137, 1139], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 66, 74, 75, 76, 80, 86, 89, 99, 106, 110, 126, 149, 153, 163, 169, 173, 178, 179, 185, 189, 200, 203, 213, 234, 251, 254, 278, 280, 282, 289, 298, 300, 303, 310, 315, 316, 331, 332, 337, 373, 376, 377, 388, 389, 392, 433, 446, 461, 473, 485, 486, 487, 489, 491, 501, 515, 521, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 573, 578, 581, 595, 686, 723, 743, 753, 767, 791, 795, 798, 800, 803, 805, 807, 808, 815, 817, 818, 819, 823, 829, 834, 835, 840, 842, 847, 853, 856, 859, 895, 934, 943, 944, 968, 969, 970, 971, 985, 1004, 1008, 1012, 1015, 1019, 1022, 1023, 1027, 1074, 1085, 1092, 1165, 1170, 1176, 1180, 1185, 1190, 1192], "manag": [1, 5, 14, 23, 29, 62, 70, 74, 75, 76, 80, 96, 99, 110, 149, 172, 174, 183, 188, 189, 197, 200, 202, 205, 209, 212, 213, 219, 220, 224, 229, 230, 233, 235, 245, 251, 254, 259, 261, 262, 268, 271, 286, 293, 300, 302, 303, 306, 307, 310, 328, 329, 335, 337, 338, 341, 347, 352, 354, 373, 374, 376, 383, 384, 388, 389, 450, 467, 478, 496, 509, 567, 573, 598, 603, 692, 703, 704, 706, 735, 740, 751, 752, 754, 755, 756, 760, 768, 788, 790, 791, 809, 815, 822, 824, 847, 853, 856, 859, 869, 873, 874, 929, 934, 943, 951, 963, 996, 997, 1010, 1026, 1037, 1046, 1065, 1090, 1094, 1135, 1136, 1137, 1138, 1139, 1143, 1151, 1153, 1165, 1167, 1169, 1170, 1174, 1179, 1190, 1192, 1195, 1202], "schittstel": 1, "zum": [1, 3, 5, 149, 181, 182, 191, 196, 200, 206, 216, 229, 236, 253, 313, 388, 1185, 1187, 1188, 1189, 1201, 1204, 1206], "weiser": 1, "alter": [1, 208, 209, 259, 282, 388, 599, 607, 925, 1137], "mann": 1, "2020": [1, 23, 126, 144, 148, 150, 169, 170, 176, 180, 181, 185, 188, 192, 211, 213, 248, 387, 554, 555, 703, 716, 865, 866, 945, 954, 972, 1061, 1136, 1141, 1179, 1201], "embed": [1, 3, 4, 5, 23, 74, 89, 106, 117, 152, 168, 169, 170, 173, 175, 189, 213, 215, 238, 337, 368, 373, 375, 387, 389, 761, 771, 784, 790, 791, 826, 838, 876, 898, 944, 955, 996, 1012, 1039, 1080, 1186, 1187, 1188, 1192, 1193, 1196, 1197, 1201, 1205], "comput": [1, 23, 28, 29, 32, 74, 86, 89, 103, 117, 139, 152, 176, 215, 265, 274, 298, 300, 324, 325, 355, 368, 370, 373, 375, 387, 396, 469, 474, 475, 500, 597, 607, 610, 616, 649, 745, 758, 770, 791, 860, 867, 935, 943, 945, 946, 953, 980, 994, 997, 1061, 1150, 1165, 1195], "electron": [1, 178, 388, 943], "engin": [1, 149, 176, 249, 251, 317, 320, 388, 459, 463, 467, 477, 508, 541, 549, 943, 1059, 1208], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 87, 169, 996, 1059], "projekt": [2, 170, 191, 1197, 1201], "stand": [3, 183, 232, 373, 838, 944, 1028, 1145], "j\u00e4nner": [3, 23], "2014": [3, 170, 191, 212, 248, 282, 297, 306, 328, 940, 1137], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 61, 63, 67, 149, 155, 169, 182, 187, 190, 191, 192, 193, 196, 200, 206, 208, 216, 217, 219, 221, 223, 226, 227, 229, 232, 236, 245, 252, 255, 258, 261, 264, 265, 268, 293, 321, 347, 365, 370, 371, 375, 388, 389, 523, 537, 791, 925, 926, 998, 1137, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "pci": [3, 220, 791, 815, 816, 877, 934, 942, 978, 1195], "hardwar": [3, 5, 67, 71, 74, 75, 76, 80, 82, 139, 143, 158, 162, 172, 173, 176, 186, 189, 248, 249, 261, 298, 301, 302, 323, 327, 356, 371, 372, 373, 388, 389, 405, 416, 419, 455, 473, 477, 547, 548, 549, 550, 554, 770, 791, 818, 838, 869, 874, 875, 934, 935, 936, 937, 940, 943, 959, 961, 962, 975, 978, 1010, 1184, 1193, 1195, 1201], "ein": [3, 5, 7, 8, 37, 149, 181, 182, 187, 190, 191, 192, 193, 196, 198, 200, 208, 212, 213, 215, 216, 217, 219, 221, 223, 224, 226, 227, 229, 230, 232, 236, 238, 242, 245, 246, 252, 253, 255, 258, 261, 262, 264, 265, 268, 276, 283, 286, 293, 303, 307, 313, 321, 325, 329, 335, 341, 351, 362, 365, 370, 375, 388, 389, 433, 561, 864, 925, 926, 998, 1066, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1194, 1197, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 149, 169, 181, 183, 187, 190, 191, 196, 200, 206, 208, 216, 217, 226, 227, 236, 252, 261, 264, 268, 370, 387, 464, 757, 774, 778, 860, 862, 926, 939, 1136, 1162, 1184, 1185, 1186, 1187, 1189, 1194, 1196, 1200, 1201, 1203, 1204, 1206, 1207, 1208], "untenstehenden": 3, "zeit": [3, 5, 182, 217, 335, 1185, 1187, 1207], "dato": 3, "ort": 3, "raum": [3, 196], "anbindung": 3, "verschieden": [3, 23, 206, 388, 1186, 1187, 1188, 1194, 1201, 1206], "hardwareinterfac": 3, "i2c": [3, 4, 80, 83, 87, 158, 161, 173, 174, 200, 213, 289, 373, 376, 381, 388, 494, 524, 583, 584, 592, 791, 838, 934, 941, 943, 978, 1194, 1201], "spi": [3, 4, 80, 173, 191, 200, 388, 583, 584, 592, 936, 937, 938, 943, 978, 1194, 1201], "can": [3, 12, 17, 29, 57, 58, 67, 70, 77, 82, 85, 110, 112, 113, 126, 127, 134, 138, 154, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 184, 188, 189, 190, 193, 195, 197, 201, 202, 203, 205, 209, 210, 211, 225, 232, 234, 242, 245, 248, 249, 251, 258, 261, 265, 268, 271, 289, 292, 295, 297, 298, 300, 303, 307, 313, 315, 328, 329, 331, 335, 341, 356, 362, 364, 367, 370, 375, 381, 388, 393, 395, 399, 403, 407, 413, 416, 427, 431, 437, 438, 441, 448, 453, 455, 459, 460, 461, 462, 463, 466, 467, 471, 472, 473, 477, 479, 480, 482, 488, 490, 491, 497, 502, 505, 506, 509, 516, 517, 521, 522, 523, 535, 539, 548, 555, 581, 587, 597, 599, 604, 606, 607, 612, 613, 620, 631, 635, 651, 652, 657, 666, 670, 673, 677, 682, 687, 689, 690, 691, 700, 702, 705, 706, 707, 708, 712, 717, 741, 744, 745, 747, 753, 754, 757, 758, 759, 762, 765, 767, 771, 787, 789, 791, 797, 809, 824, 828, 832, 836, 838, 843, 846, 852, 864, 865, 866, 869, 870, 871, 873, 875, 876, 877, 878, 880, 881, 883, 888, 890, 892, 894, 896, 898, 899, 934, 935, 941, 942, 943, 944, 947, 949, 951, 953, 954, 955, 962, 964, 968, 972, 981, 983, 994, 997, 998, 1006, 1010, 1014, 1024, 1029, 1031, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1043, 1046, 1047, 1048, 1055, 1056, 1058, 1059, 1064, 1067, 1068, 1071, 1076, 1078, 1084, 1086, 1088, 1092, 1094, 1101, 1111, 1122, 1132, 1133, 1134, 1136, 1142, 1144, 1149, 1150, 1156, 1158, 1163, 1165, 1170, 1190, 1192, 1194, 1201, 1205, 1207], "custom": [3, 27, 29, 32, 39, 99, 158, 162, 166, 169, 173, 176, 178, 179, 185, 189, 202, 210, 212, 214, 242, 248, 251, 258, 261, 262, 289, 291, 298, 300, 325, 356, 357, 358, 359, 361, 369, 370, 388, 477, 482, 501, 515, 543, 546, 549, 551, 553, 573, 595, 597, 603, 668, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 723, 725, 735, 740, 751, 760, 768, 776, 788, 790, 791, 811, 838, 954, 985, 1010, 1136, 1178], "firmwar": [3, 128, 130, 144, 161, 173, 174, 176, 183, 192, 935, 942, 978], "kunden": [3, 5, 23, 187, 291, 388, 1184], "dezemb": [3, 23], "2012": [3, 23, 169, 185, 248], "backport": 3, "integr": [3, 16, 23, 38, 43, 124, 136, 144, 170, 178, 180, 188, 200, 205, 225, 315, 324, 331, 372, 377, 378, 379, 467, 493, 496, 500, 712, 791, 811, 820, 877, 898, 935, 937, 943, 944, 1162, 1170, 1173, 1192, 1194, 1201], "touchcontrol": 3, "driver": [3, 5, 80, 87, 158, 161, 173, 176, 178, 186, 189, 190, 289, 371, 372, 387, 389, 473, 791, 792, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 809, 810, 812, 813, 814, 817, 818, 819, 821, 822, 823, 825, 827, 829, 831, 832, 833, 835, 837, 838, 839, 842, 844, 847, 849, 853, 856, 859, 869, 874, 877, 934, 943, 944, 964, 978, 1185, 1205, 1207], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 110, 112, 113, 127, 143, 161, 173, 177, 179, 184, 188, 232, 242, 248, 255, 258, 261, 265, 271, 298, 307, 335, 351, 403, 410, 412, 416, 425, 482, 486, 519, 604, 657, 755, 765, 769, 789, 820, 822, 830, 838, 871, 880, 885, 886, 898, 943, 944, 966, 968, 969, 970, 972, 1027, 1028, 1036, 1078, 1162, 1172], "2013": [3, 23, 169, 387], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 68, 74, 76, 80, 87, 93, 94, 136, 148, 152, 153, 154, 168, 169, 170, 186, 188, 189, 192, 194, 202, 217, 218, 222, 225, 226, 227, 229, 232, 234, 241, 242, 248, 257, 258, 261, 265, 268, 289, 291, 300, 356, 357, 358, 359, 360, 361, 365, 366, 369, 371, 372, 377, 378, 379, 383, 384, 385, 387, 389, 401, 553, 694, 712, 731, 743, 749, 766, 791, 792, 898, 920, 934, 936, 941, 942, 983, 1031, 1032, 1033, 1034, 1036, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1051, 1055, 1056, 1062, 1066, 1070, 1071, 1077, 1079, 1081, 1082, 1084, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1168, 1169, 1170, 1172, 1173, 1174, 1190, 1194, 1200, 1201, 1208], "programm": [3, 61, 63, 191, 192, 196, 205, 216, 221, 225, 229, 261, 286, 298, 299, 300, 327, 341, 365, 371, 388, 437, 450, 457, 463, 467, 597, 599, 600, 669, 703, 737, 740, 874, 880, 931, 943, 964, 998, 1059, 1060, 1064, 1086, 1144, 1151, 1164, 1187, 1190, 1195, 1203, 1204, 1206, 1208], "zur": [3, 181, 196, 200, 208, 218, 229, 365, 370, 375, 388, 998, 1185, 1187, 1188, 1189, 1201, 1206, 1207, 1208], "IT": [3, 289, 291, 388, 601, 1089], "wie": [3, 5, 149, 181, 182, 190, 191, 192, 196, 200, 206, 208, 216, 221, 224, 231, 255, 351, 365, 388, 1184, 1185, 1187, 1188, 1189, 1194, 1197, 1201, 1202, 1204, 1206, 1207], "beispiel": [3, 5, 23, 149, 192, 216, 217, 239, 245, 266, 388, 1187, 1188, 1189, 1200, 1201, 1203, 1204, 1206, 1208], "e": [3, 5, 7, 32, 37, 38, 42, 48, 62, 99, 126, 138, 139, 144, 176, 178, 179, 180, 181, 182, 184, 187, 188, 190, 191, 192, 194, 195, 196, 200, 206, 208, 216, 217, 221, 223, 225, 226, 229, 232, 233, 234, 237, 238, 242, 245, 246, 248, 251, 253, 255, 258, 261, 262, 265, 268, 271, 274, 283, 286, 289, 290, 293, 295, 297, 303, 307, 313, 325, 329, 335, 338, 341, 347, 351, 354, 363, 364, 365, 366, 370, 375, 388, 392, 409, 412, 416, 419, 422, 427, 437, 440, 455, 459, 463, 466, 467, 479, 480, 482, 485, 491, 492, 496, 505, 509, 517, 522, 526, 538, 551, 554, 555, 590, 597, 601, 602, 612, 620, 631, 651, 669, 670, 684, 689, 696, 699, 703, 706, 717, 723, 737, 758, 767, 769, 770, 775, 789, 797, 816, 857, 864, 865, 866, 875, 876, 880, 881, 882, 883, 898, 920, 927, 942, 943, 944, 955, 964, 974, 976, 994, 997, 998, 1009, 1010, 1012, 1014, 1015, 1026, 1031, 1035, 1043, 1055, 1057, 1058, 1076, 1081, 1082, 1106, 1146, 1150, 1155, 1158, 1161, 1164, 1170, 1172, 1184, 1185, 1187, 1189, 1193, 1194, 1200, 1201, 1203, 1204, 1206, 1208], "bill": [3, 293], "email": [3, 32, 42, 151, 174, 180, 184, 189, 213, 229, 293, 381, 951, 1150, 1154, 1155, 1156, 1158, 1159, 1160], "kommunik": [3, 23, 1201, 1204, 1206, 1207, 1208], "extrakt": 3, "attach": [3, 194, 242, 248, 258, 261, 500, 820, 943, 996, 1144], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 59, 68, 92, 99, 100, 106, 126, 143, 148, 153, 169, 170, 173, 174, 178, 200, 203, 209, 210, 212, 214, 225, 240, 242, 243, 246, 248, 251, 256, 258, 261, 262, 270, 273, 282, 285, 292, 295, 298, 299, 300, 305, 306, 310, 311, 312, 316, 317, 327, 332, 333, 334, 339, 340, 345, 349, 350, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 483, 484, 490, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 567, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 735, 751, 760, 768, 776, 788, 790, 791, 811, 818, 834, 838, 839, 877, 934, 937, 942, 944, 1009, 1011, 1014, 1017, 1019, 1022, 1043, 1059, 1063, 1090, 1135, 1148, 1155, 1165, 1166, 1173, 1178, 1180], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 75, 80, 82, 99, 103, 104, 110, 112, 113, 126, 139, 148, 149, 154, 169, 170, 173, 174, 179, 180, 184, 186, 188, 189, 190, 191, 197, 200, 202, 203, 213, 225, 230, 233, 240, 242, 245, 246, 250, 251, 256, 258, 259, 261, 268, 271, 277, 278, 279, 286, 288, 293, 298, 303, 306, 307, 309, 329, 335, 341, 348, 353, 367, 370, 371, 372, 373, 374, 375, 381, 383, 384, 387, 389, 423, 432, 439, 443, 445, 449, 452, 456, 463, 464, 465, 469, 470, 474, 475, 477, 482, 485, 487, 500, 501, 508, 521, 543, 554, 595, 630, 673, 697, 735, 768, 769, 770, 788, 789, 790, 791, 794, 797, 809, 811, 830, 836, 838, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 881, 882, 884, 885, 886, 888, 889, 890, 891, 892, 895, 898, 924, 925, 929, 934, 938, 943, 944, 945, 950, 956, 960, 961, 962, 963, 965, 968, 970, 973, 974, 976, 977, 978, 979, 989, 992, 995, 997, 998, 1000, 1006, 1009, 1010, 1012, 1013, 1014, 1035, 1036, 1047, 1063, 1092, 1137, 1172, 1186, 1193, 1195, 1196], "auf": [3, 5, 8, 23, 149, 155, 169, 174, 182, 187, 190, 191, 192, 196, 200, 206, 208, 216, 217, 221, 227, 229, 236, 237, 252, 255, 262, 264, 276, 351, 365, 370, 371, 375, 388, 926, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1200, 1204, 1207, 1208], "gentoo": [3, 169, 172, 185, 473, 1185], "updat": [3, 44, 138, 143, 172, 174, 188, 192, 220, 245, 253, 268, 278, 280, 286, 293, 298, 300, 307, 313, 325, 341, 347, 351, 370, 377, 552, 554, 615, 848, 996, 1026, 1027, 1028, 1029, 1030, 1084, 1086, 1161, 1173, 1179, 1202], "betriebssystem": [3, 1194, 1196, 1201, 1203], "usb": [3, 4, 62, 172, 173, 174, 176, 388, 466, 816, 869, 937, 1194], "touchscreen": 3, "cheat": [3, 33, 213, 225, 354, 470, 723, 898], "detect": [3, 32, 108, 193, 205, 435, 438, 472, 480, 578, 605, 708, 733, 754, 832, 943, 944, 970, 979, 1002, 1013, 1014, 1116], "m\u00fcnzeinwurf": 3, "via": [3, 17, 62, 87, 129, 135, 136, 149, 173, 176, 180, 185, 194, 209, 210, 232, 238, 259, 261, 289, 292, 295, 298, 307, 324, 369, 376, 388, 497, 502, 522, 607, 631, 742, 756, 791, 818, 838, 841, 869, 874, 880, 895, 931, 942, 953, 954, 961, 968, 978, 999, 1006, 1024, 1091, 1190], "gpio": [3, 4, 61, 63, 65, 66, 67, 74, 75, 76, 80, 86, 126, 127, 128, 130, 135, 136, 137, 148, 170, 289, 298, 328, 360, 373, 375, 379, 791, 815, 840, 842, 847, 853, 856, 859, 934, 939, 943, 975, 979, 1194, 1201], "interrupt": [3, 62, 67, 68, 88, 112, 113, 191, 220, 289, 473, 791, 809, 815, 830, 832, 833, 835, 836, 840, 841, 842, 846, 847, 850, 853, 856, 857, 859, 869, 871, 874, 877, 934, 939, 956, 958, 959, 960, 961, 962, 963, 975, 977, 978, 994, 997, 998, 1000, 1009, 1010, 1194, 1195, 1201], "m\u00e4rz": 3, "firma": [3, 187, 196, 291, 387, 1184, 1194, 1201], "spielo": 3, "intern": [3, 57, 86, 127, 131, 132, 137, 143, 206, 211, 234, 242, 245, 246, 248, 258, 261, 292, 295, 324, 363, 377, 406, 436, 451, 466, 482, 491, 496, 610, 651, 698, 741, 785, 789, 816, 824, 850, 942, 943, 944, 985, 1036, 1040, 1084, 1094, 1150, 1155], "datenkonvertierung": 3, "einem": [3, 5, 23, 149, 181, 191, 192, 196, 200, 206, 208, 216, 217, 221, 223, 229, 255, 261, 268, 283, 370, 371, 375, 388, 1185, 1187, 1189, 1194, 1203, 1207, 1208], "konvertierung": [3, 23, 1187], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 92, 131, 132, 134, 151, 176, 192, 193, 195, 196, 203, 210, 212, 214, 217, 221, 230, 233, 240, 241, 243, 249, 254, 255, 259, 261, 262, 267, 270, 271, 282, 285, 286, 291, 305, 306, 307, 311, 312, 314, 320, 323, 324, 327, 328, 333, 334, 335, 340, 342, 345, 346, 349, 350, 393, 394, 399, 435, 479, 791, 792, 838, 869, 875, 898, 958, 1012, 1051, 1059, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1130, 1131, 1132, 1133, 1135, 1137, 1142, 1153, 1165, 1200, 1204], "zweck": [3, 206, 1201], "extern": [3, 13, 21, 23, 29, 62, 87, 172, 176, 180, 202, 205, 212, 234, 235, 240, 251, 256, 261, 270, 291, 306, 316, 324, 332, 370, 375, 403, 407, 433, 435, 437, 439, 445, 449, 452, 456, 460, 465, 469, 474, 475, 484, 485, 581, 697, 735, 741, 788, 790, 791, 795, 798, 800, 803, 805, 808, 811, 815, 816, 817, 819, 823, 829, 835, 838, 842, 847, 848, 853, 856, 859, 934, 944, 994, 1060, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1135, 1137, 1177, 1179, 1187, 1194, 1201], "datenquellen": 3, "export": [3, 40, 60, 139, 143, 173, 184, 209, 234, 235, 238, 240, 341, 356, 741, 794, 870, 899, 935, 943, 976, 978, 979, 1024, 1026, 1029, 1128, 1145], "daten": [3, 206, 208, 221, 231, 236, 321, 998, 1207], "soap": [3, 32], "ip": [3, 151, 177, 180, 190, 197, 225, 351, 367, 370, 376, 381, 578, 590, 937, 955, 961, 997, 1165, 1194, 1201, 1205, 1207], "kamera": 3, "einen": [3, 5, 23, 181, 182, 192, 196, 200, 206, 208, 216, 229, 265, 388, 656, 925, 1184, 1185, 1186, 1187, 1189, 1196, 1204, 1206, 1207, 1208], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 61, 62, 63, 67, 71, 84, 86, 87, 99, 112, 113, 116, 122, 124, 126, 142, 158, 173, 175, 178, 193, 201, 209, 211, 229, 234, 235, 242, 248, 252, 255, 256, 258, 263, 265, 280, 286, 295, 298, 299, 300, 301, 302, 307, 323, 327, 338, 357, 358, 363, 370, 381, 404, 406, 438, 448, 450, 451, 467, 477, 482, 489, 492, 493, 495, 496, 497, 499, 500, 501, 504, 505, 507, 516, 517, 521, 522, 523, 538, 542, 544, 545, 546, 547, 548, 550, 551, 552, 556, 557, 558, 559, 561, 563, 568, 571, 572, 596, 598, 602, 606, 614, 615, 616, 617, 622, 651, 657, 666, 668, 669, 670, 677, 685, 686, 687, 688, 689, 690, 691, 692, 698, 703, 704, 705, 707, 717, 732, 733, 734, 735, 741, 742, 744, 753, 757, 759, 761, 767, 782, 785, 786, 789, 790, 791, 797, 804, 807, 824, 852, 869, 871, 875, 877, 935, 942, 944, 955, 958, 964, 980, 985, 1006, 1030, 1034, 1035, 1040, 1041, 1042, 1048, 1052, 1076, 1112, 1116, 1125, 1132, 1137, 1146, 1149, 1153, 1190, 1195], "gige": 3, "vision": [3, 291, 388], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 213], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1184], "applik": [3, 190], "august": [3, 23], "logistik": 3, "autom": [3, 212, 225, 256, 270, 312, 388, 935, 946, 953, 1026, 1028, 1036, 1137], "beteiligten": 3, "protokol": [3, 4, 1194, 1201, 1206], "server": [3, 65, 151, 177, 180, 186, 192, 213, 225, 236, 245, 261, 268, 271, 282, 286, 293, 303, 307, 329, 335, 341, 347, 473, 519, 533, 864, 938, 951, 953, 961, 1006, 1149, 1165, 1182, 1201], "zu": [3, 6, 8, 149, 181, 182, 187, 190, 191, 196, 200, 206, 217, 218, 221, 223, 227, 236, 237, 252, 253, 262, 264, 268, 276, 283, 370, 375, 388, 860, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1197, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "sp": [3, 705], "tcp": [3, 173, 180, 197, 213, 318, 936, 961, 1153, 1194, 1201, 1205, 1207], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 215, 935, 1144], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1194, 1196], "beratend": 3, "versionskontrol": [3, 23, 186, 1202], "architektur": [3, 23, 186, 388], "2008": [3, 184, 248, 1061], "ylog": [3, 23], "gmbh": [3, 23, 479], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 221], "mit": [3, 4, 5, 7, 8, 23, 169, 181, 182, 190, 191, 192, 196, 198, 200, 208, 212, 213, 217, 218, 219, 222, 223, 226, 227, 229, 236, 237, 238, 239, 252, 261, 262, 264, 265, 268, 276, 307, 351, 366, 370, 371, 375, 387, 389, 925, 1092, 1184, 1186, 1187, 1188, 1189, 1194, 1196, 1200, 1202, 1203, 1204, 1206, 1207, 1208], "iar": 3, "arm": [3, 172, 184, 225, 411, 818, 838, 839, 942, 955, 1009, 1012, 1013, 1024], "workbench": 3, "segger": [3, 173], "embo": [3, 173], "vba": 3, "excel": [3, 80, 174, 212, 238, 1128, 1142], "verteilung": 3, "microsoft": [3, 11, 179, 180, 183, 185, 189, 200, 208, 278, 280, 289, 298, 300, 388, 390, 438, 454, 877, 1128, 1184], "net": [3, 23, 39, 43, 66, 126, 144, 148, 159, 190, 191, 216, 268, 274, 341, 478, 554, 555, 832, 838, 865, 866, 926, 961, 1150], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 192, 1203, 1204], "script": [3, 38, 60, 64, 68, 163, 166, 169, 172, 174, 179, 180, 189, 204, 212, 213, 215, 240, 242, 248, 258, 261, 288, 289, 309, 353, 361, 370, 387, 389, 471, 479, 490, 741, 838, 880, 883, 898, 1026, 1037, 1063, 1064, 1088, 1092, 1172, 1185, 1196], "shell": [3, 4, 32, 99, 101, 103, 106, 126, 148, 149, 189, 193, 212, 213, 215, 253, 261, 279, 288, 309, 329, 341, 353, 355, 356, 369, 370, 371, 372, 375, 387, 389, 391, 473, 479, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 789, 790, 791, 838, 861, 865, 866, 867, 868, 871, 872, 873, 875, 876, 879, 880, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 913, 914, 915, 916, 926, 927, 928, 931, 934, 935, 945, 946, 947, 948, 949, 957, 963, 964, 965, 973, 975, 978, 979, 989, 992, 995, 997, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1062, 1063, 1065, 1086, 1088, 1115, 1177, 1185, 1192, 1194, 1196, 1197, 1201, 1202, 1203, 1205], "oststeiermark": 3, "erweiterung": [3, 388], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 74, 75, 76, 80, 89, 99, 108, 126, 170, 179, 184, 189, 200, 203, 235, 251, 278, 280, 298, 300, 373, 387, 389, 390, 481, 483, 485, 486, 489, 490, 491, 492, 493, 501, 515, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 595, 615, 791, 792, 934, 1022, 1175, 1197], "www": [3, 20, 23, 61, 63, 66, 67, 87, 169, 179, 188, 190, 210, 213, 214, 286, 390, 757, 794, 809, 815, 839, 978, 1148, 1150], "org": [3, 4, 23, 60, 65, 66, 154, 159, 165, 169, 172, 176, 180, 184, 190, 192, 203, 213, 216, 233, 242, 248, 249, 258, 261, 265, 286, 299, 326, 351, 374, 390, 794, 809, 811, 815, 838, 839, 978, 1024, 1026, 1060, 1081, 1092, 1131, 1148, 1165, 1166], "confix": [3, 170], "2009": [3, 1137], "schulungen": [3, 6, 23, 169, 170, 187], "dem": [3, 5, 8, 23, 149, 181, 182, 190, 191, 192, 196, 200, 213, 217, 227, 236, 239, 252, 253, 262, 264, 276, 307, 347, 370, 375, 388, 389, 998, 1184, 1185, 1186, 1188, 1189, 1194, 1196, 1203, 1204, 1206], "umkrei": 3, "softwareentwicklung": [3, 4, 186], "nicht": [3, 5, 7, 23, 37, 149, 181, 182, 187, 190, 196, 200, 217, 218, 221, 226, 229, 248, 253, 255, 261, 268, 274, 293, 303, 365, 370, 388, 926, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1200, 1201, 1202, 1203, 1206, 1207, 1208], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 60, 62, 67, 70, 75, 76, 80, 83, 84, 86, 88, 92, 99, 100, 101, 103, 104, 105, 108, 111, 112, 113, 116, 126, 127, 128, 129, 130, 132, 133, 138, 143, 148, 151, 154, 162, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 186, 188, 189, 190, 192, 193, 195, 196, 201, 205, 206, 209, 210, 212, 213, 214, 215, 217, 223, 224, 225, 230, 232, 233, 234, 235, 237, 239, 240, 242, 246, 248, 249, 255, 256, 258, 259, 262, 263, 265, 268, 270, 273, 277, 278, 280, 282, 283, 285, 288, 291, 295, 298, 299, 300, 301, 302, 305, 307, 309, 310, 311, 312, 317, 320, 323, 325, 327, 328, 333, 334, 335, 337, 338, 339, 340, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 367, 369, 370, 372, 373, 374, 375, 377, 378, 391, 392, 398, 400, 401, 405, 408, 411, 414, 415, 416, 419, 423, 430, 432, 433, 438, 439, 445, 446, 449, 452, 453, 455, 456, 457, 459, 461, 465, 466, 467, 469, 473, 474, 475, 477, 478, 480, 481, 485, 488, 489, 490, 491, 493, 495, 496, 497, 502, 506, 516, 520, 522, 538, 539, 540, 541, 543, 546, 549, 551, 552, 553, 554, 555, 573, 581, 584, 590, 595, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 612, 613, 615, 616, 626, 630, 631, 648, 660, 667, 670, 672, 678, 681, 688, 692, 695, 696, 697, 699, 703, 708, 712, 717, 723, 729, 734, 735, 747, 749, 753, 754, 755, 756, 759, 761, 767, 769, 773, 781, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 807, 809, 813, 818, 820, 826, 830, 838, 839, 840, 841, 846, 848, 850, 858, 863, 864, 865, 866, 869, 870, 873, 874, 875, 877, 880, 881, 882, 888, 890, 895, 897, 898, 899, 900, 901, 903, 904, 917, 922, 930, 931, 934, 935, 937, 938, 939, 940, 943, 944, 947, 951, 955, 958, 959, 960, 961, 962, 965, 968, 970, 971, 973, 975, 978, 981, 986, 991, 992, 997, 998, 1000, 1009, 1010, 1015, 1024, 1026, 1028, 1030, 1035, 1036, 1037, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1055, 1058, 1059, 1060, 1063, 1064, 1067, 1070, 1079, 1082, 1083, 1085, 1086, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1143, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1157, 1158, 1159, 1162, 1164, 1165, 1167, 1169, 1170, 1172, 1174, 1177, 1179, 1182, 1193, 1200], "scratch": [3, 42, 205, 942, 1144], "mathia": [3, 1185], "kettner": [3, 169], "novemb": [3, 23], "bodenseo": [3, 1201], "singen": 3, "bodense": [3, 1201], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1203], "driverentwicklung": [3, 186], "powerpc": 3, "vanilla": [3, 176], "kernel": [3, 4, 5, 43, 60, 66, 80, 112, 113, 151, 158, 162, 163, 168, 169, 170, 172, 173, 175, 183, 184, 185, 186, 189, 191, 206, 213, 245, 258, 261, 268, 271, 286, 289, 293, 303, 307, 329, 335, 341, 347, 356, 376, 387, 389, 431, 453, 466, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 803, 805, 807, 808, 809, 810, 817, 818, 819, 821, 823, 824, 825, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 842, 844, 847, 849, 850, 851, 852, 853, 856, 858, 859, 863, 869, 873, 875, 876, 877, 882, 926, 931, 934, 938, 940, 941, 943, 944, 955, 958, 961, 962, 964, 967, 978, 980, 981, 994, 996, 997, 1000, 1005, 1009, 1010, 1012, 1185, 1194, 1205], "abteilungsleitung": 3, "ag": [3, 32, 178, 180, 192, 206, 248, 251, 293, 364, 462, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 791, 863, 1012, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162], "realtim": [4, 5, 80, 82, 149, 186, 189, 190, 289, 371, 372, 383, 384, 389, 767, 769, 791, 836, 840, 843, 846, 857, 934, 938, 943, 944, 975, 994, 995, 997, 1006, 1204, 1205, 1206], "hardwareintegr": [4, 186], "netzwerkprogrammierung": [4, 1194, 1207], "multithread": [4, 29, 61, 63, 67, 74, 75, 76, 77, 80, 168, 169, 173, 175, 186, 205, 209, 240, 249, 259, 276, 298, 300, 328, 379, 383, 384, 388, 389, 454, 464, 695, 723, 761, 790, 791, 983, 988, 997, 1010, 1011, 1037, 1046, 1135, 1137, 1190, 1194, 1205], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 62, 65, 67, 99, 105, 106, 108, 112, 113, 125, 126, 143, 144, 149, 154, 161, 172, 173, 174, 175, 177, 179, 182, 184, 186, 188, 189, 197, 201, 206, 211, 218, 221, 225, 226, 234, 242, 248, 251, 255, 258, 259, 261, 262, 265, 273, 289, 298, 300, 307, 316, 332, 338, 351, 355, 365, 370, 387, 411, 425, 478, 480, 483, 484, 490, 495, 500, 501, 502, 515, 516, 517, 519, 521, 522, 538, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 555, 560, 562, 595, 599, 602, 603, 606, 610, 611, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 673, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 704, 708, 712, 717, 735, 742, 745, 751, 755, 760, 762, 768, 776, 788, 789, 790, 791, 799, 804, 811, 836, 838, 850, 867, 870, 871, 880, 882, 884, 888, 890, 892, 894, 909, 910, 934, 936, 942, 944, 947, 951, 954, 961, 969, 972, 975, 977, 985, 991, 996, 998, 1006, 1013, 1017, 1018, 1019, 1020, 1022, 1033, 1034, 1036, 1040, 1043, 1044, 1048, 1049, 1055, 1056, 1060, 1063, 1077, 1078, 1081, 1082, 1083, 1094, 1095, 1105, 1114, 1120, 1125, 1133, 1137, 1146, 1149, 1153, 1158, 1159, 1161, 1162, 1172, 1173, 1187, 1191, 1194, 1201, 1203], "userspac": [4, 83, 87, 88, 139, 144, 148, 158, 173, 174, 245, 261, 268, 271, 286, 289, 293, 303, 307, 329, 335, 341, 347, 388, 466, 473, 791, 796, 807, 815, 816, 824, 830, 836, 840, 846, 850, 854, 856, 874, 876, 934, 937, 941, 944, 955, 975, 977, 978, 996, 1000, 1006, 1194, 1195], "host": [4, 110, 172, 179, 184, 341, 367, 381, 818, 839, 936, 942, 1013, 1015, 1024, 1148, 1153, 1165], "devic": [4, 33, 71, 74, 75, 76, 80, 86, 91, 121, 127, 144, 149, 158, 172, 173, 178, 191, 212, 220, 302, 371, 372, 373, 538, 554, 555, 765, 767, 769, 789, 791, 800, 807, 808, 809, 815, 816, 819, 820, 822, 829, 838, 840, 842, 847, 853, 854, 856, 857, 859, 871, 874, 877, 880, 920, 934, 943, 955, 958, 964, 972, 978, 997, 1000, 1001, 1003, 1006, 1022, 1047, 1185, 1194, 1195, 1196, 1201], "libusb": [4, 173], "gadgetf": [4, 173], "modbu": [4, 190], "verschiedenen": [4, 23, 200, 217, 1187, 1188, 1200, 1206], "rto": [4, 173], "yocto": [4, 158, 162, 163, 184, 791, 838, 932, 1015, 1185], "programmiersprachen": [4, 8, 217, 227, 236, 252, 264, 1189, 1206], "incl": [4, 23, 170, 1196], "buildsystem": 4, "autoconf": [4, 60, 184], "automak": [4, 179, 184, 1026, 1197], "meson": [4, 179, 184, 1004, 1008, 1026], "ninja": [4, 32, 184, 480, 1014, 1026], "make": [4, 13, 17, 43, 44, 45, 60, 62, 65, 66, 70, 72, 80, 82, 111, 128, 129, 131, 139, 144, 154, 158, 163, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 188, 189, 193, 194, 197, 201, 202, 205, 209, 210, 211, 215, 224, 225, 232, 234, 235, 246, 249, 261, 265, 278, 280, 302, 307, 310, 315, 324, 331, 370, 373, 389, 422, 434, 438, 446, 453, 455, 457, 467, 473, 477, 480, 481, 482, 486, 488, 489, 491, 493, 495, 496, 497, 500, 516, 517, 522, 523, 540, 553, 555, 567, 573, 578, 584, 602, 613, 615, 617, 620, 632, 667, 669, 682, 695, 703, 708, 712, 749, 754, 755, 759, 769, 776, 785, 786, 799, 806, 807, 811, 813, 816, 818, 838, 839, 855, 867, 877, 881, 883, 904, 917, 936, 937, 942, 943, 944, 965, 968, 970, 991, 994, 996, 998, 1000, 1005, 1009, 1012, 1024, 1026, 1027, 1028, 1029, 1033, 1037, 1040, 1043, 1055, 1086, 1094, 1107, 1115, 1142, 1155, 1192, 1193, 1203], "perl": [4, 184, 737, 927, 1063], "leider": [4, 181, 248, 261, 268, 283, 1185, 1187], "objektorientiert": [4, 388, 1189], "ooa": 4, "ood": 4, "unit": [4, 74, 75, 76, 80, 84, 86, 99, 108, 126, 127, 134, 148, 149, 175, 193, 208, 209, 212, 213, 224, 233, 251, 265, 290, 291, 298, 302, 315, 331, 379, 383, 384, 460, 479, 480, 493, 519, 542, 548, 552, 581, 612, 741, 769, 770, 791, 792, 944, 996, 1078, 1086, 1137, 1149, 1171, 1192, 1193], "test": [4, 16, 17, 33, 40, 74, 75, 76, 80, 84, 86, 99, 126, 129, 142, 144, 149, 169, 173, 175, 176, 178, 179, 180, 186, 189, 192, 193, 199, 200, 201, 204, 208, 209, 212, 224, 230, 233, 246, 248, 249, 251, 261, 278, 280, 300, 307, 316, 328, 332, 338, 379, 381, 383, 389, 390, 402, 464, 477, 478, 484, 488, 495, 496, 497, 498, 499, 500, 501, 504, 505, 507, 508, 517, 519, 520, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 578, 590, 592, 597, 598, 599, 610, 611, 613, 614, 616, 617, 675, 686, 687, 688, 689, 690, 691, 700, 702, 705, 706, 707, 738, 744, 749, 753, 754, 755, 756, 758, 771, 785, 786, 787, 789, 791, 792, 796, 828, 838, 841, 843, 846, 854, 898, 936, 937, 942, 965, 1020, 1028, 1059, 1068, 1078, 1082, 1085, 1106, 1131, 1137, 1143, 1144, 1149, 1157, 1176, 1178, 1180, 1183, 1193], "driven": [4, 45, 67, 73, 80, 84, 173, 186, 189, 200, 209, 224, 251, 289, 291, 317, 320, 389, 477, 504, 614, 616, 617, 996, 1002, 1003, 1162, 1170, 1193], "develop": [4, 5, 21, 45, 73, 75, 80, 82, 84, 105, 106, 124, 149, 154, 174, 176, 178, 179, 180, 184, 186, 189, 197, 200, 208, 209, 212, 217, 224, 230, 235, 236, 243, 245, 246, 251, 256, 281, 286, 291, 316, 317, 320, 332, 369, 371, 372, 381, 387, 389, 455, 467, 473, 477, 482, 490, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 595, 614, 616, 617, 670, 694, 768, 790, 791, 792, 795, 798, 800, 801, 803, 805, 808, 810, 811, 812, 814, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 838, 839, 842, 844, 847, 849, 853, 856, 859, 868, 871, 872, 874, 877, 934, 936, 937, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1029, 1061, 1092, 1094, 1137, 1170, 1171, 1192, 1205], "gui": [4, 127, 143, 172, 178, 184, 188, 251, 377, 378, 877, 980, 1203], "gtk": [4, 169], "qt": 4, "fast": [5, 43, 124, 180, 188, 212, 234, 249, 251, 265, 274, 324, 467, 573, 745, 759, 1084, 1166, 1202], "40": [5, 7, 23, 108, 149, 169, 176, 183, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 401, 479, 500, 502, 516, 586, 587, 608, 754, 755, 756, 789, 920, 939, 942, 943, 944, 1024, 1038, 1039, 1048, 1063], "jahren": 5, "wesentlichen": [5, 23, 208, 1186], "programmier": [5, 37, 387, 388, 1188, 1189, 1194, 1196, 1197, 1202, 1203], "bin": [5, 13, 23, 50, 62, 124, 126, 127, 131, 134, 137, 139, 143, 169, 172, 174, 184, 193, 196, 206, 223, 233, 242, 245, 248, 253, 258, 261, 265, 268, 271, 283, 286, 291, 293, 303, 307, 329, 335, 341, 347, 351, 370, 378, 480, 481, 482, 483, 485, 486, 487, 488, 491, 493, 538, 553, 554, 816, 838, 870, 873, 875, 880, 883, 894, 898, 899, 923, 924, 929, 942, 944, 960, 967, 970, 976, 990, 991, 1000, 1012, 1013, 1014, 1024, 1026, 1029, 1033, 1039, 1063, 1091, 1092, 1115, 1124, 1125, 1140, 1153, 1165, 1170, 1172, 1184], "ich": [5, 23, 155, 181, 182, 190, 191, 192, 196, 206, 216, 224, 255, 307, 370, 388, 1148, 1184, 1185, 1194, 1201, 1202, 1208], "heut": [5, 388, 1189, 1204], "feinen": 5, "situat": [5, 122, 124, 161, 173, 175, 184, 205, 232, 551, 552, 555, 567, 629, 706, 832, 838, 889, 891, 935, 951, 970, 998, 1015, 1024, 1027, 1028, 1076, 1185, 1190], "repertoir": [5, 8, 28, 188, 217, 227, 501], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 149, 187, 190, 200, 206, 218, 231, 370, 371, 375, 388, 926, 1184, 1186, 1187, 1197, 1207, 1208], "da": [5, 7, 8, 155, 181, 182, 187, 190, 191, 192, 193, 200, 208, 212, 216, 217, 221, 224, 226, 227, 229, 233, 236, 237, 238, 242, 245, 252, 253, 255, 258, 261, 262, 264, 266, 274, 276, 283, 293, 303, 307, 325, 328, 335, 337, 341, 351, 362, 365, 370, 375, 388, 926, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1200, 1201, 1202, 1203, 1204, 1207, 1208], "sich": [5, 23, 37, 149, 181, 182, 187, 190, 191, 192, 196, 206, 208, 216, 237, 255, 258, 268, 371, 1184, 1185, 1187, 1188, 1189, 1194, 1197, 1201, 1202, 1203, 1206, 1207, 1208], "jahrelangen": 5, "erfahrung": [5, 262, 1186], "entwickelt": [5, 200, 1194, 1201, 1203], "hat": [5, 8, 23, 37, 149, 176, 181, 182, 190, 191, 192, 193, 196, 200, 206, 208, 216, 217, 221, 223, 227, 238, 258, 313, 325, 363, 370, 388, 1062, 1184, 1187, 1189, 1194, 1201, 1202, 1203, 1206, 1207, 1208], "al": [5, 8, 23, 32, 99, 149, 181, 182, 187, 190, 191, 192, 196, 198, 200, 208, 217, 218, 225, 227, 229, 237, 255, 256, 258, 266, 270, 312, 371, 388, 605, 754, 863, 899, 920, 925, 926, 958, 1137, 1184, 1187, 1189, 1194, 1200, 1201, 1202, 1203, 1206], "einzelunternehm": [5, 23], "werd": [5, 1184], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 182, 196, 208, 388], "um": [5, 23, 32, 149, 181, 182, 190, 192, 196, 200, 206, 216, 217, 255, 268, 283, 347, 388, 1184, 1186, 1187, 1188, 1189, 1194, 1200, 1204], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 200], "oder": [5, 23, 149, 169, 190, 196, 200, 206, 217, 218, 223, 237, 246, 255, 262, 898, 926, 1162, 1184, 1187, 1188, 1194, 1197, 1200, 1201, 1202, 1204, 1207, 1208], "damit": [5, 23, 181, 206, 236, 262, 370, 375, 388, 1185, 1203, 1207], "arbeiten": [5, 23, 206, 217, 1200], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 61, 63, 67, 74, 75, 76, 78, 80, 86, 87, 92, 99, 103, 112, 113, 116, 117, 122, 125, 126, 127, 131, 134, 137, 139, 143, 144, 148, 149, 166, 168, 169, 170, 172, 173, 174, 175, 178, 180, 183, 184, 186, 188, 191, 193, 194, 196, 197, 201, 208, 209, 210, 212, 213, 214, 219, 224, 225, 230, 233, 234, 240, 242, 243, 246, 249, 252, 256, 259, 262, 263, 264, 270, 275, 279, 288, 291, 292, 295, 298, 300, 308, 309, 310, 312, 316, 332, 334, 340, 342, 353, 354, 355, 356, 357, 358, 359, 360, 361, 367, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 384, 387, 389, 394, 396, 397, 400, 402, 403, 405, 406, 407, 408, 411, 413, 416, 418, 423, 436, 445, 449, 450, 452, 454, 456, 457, 464, 466, 469, 471, 472, 473, 474, 478, 479, 480, 484, 485, 489, 490, 493, 495, 501, 505, 515, 516, 517, 521, 522, 523, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 560, 562, 584, 590, 595, 596, 602, 603, 618, 621, 624, 640, 646, 650, 659, 660, 662, 663, 668, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 735, 737, 740, 745, 750, 751, 755, 760, 762, 768, 776, 788, 790, 791, 792, 796, 807, 809, 818, 838, 852, 854, 855, 868, 870, 871, 872, 873, 874, 875, 878, 880, 881, 882, 893, 898, 901, 927, 931, 934, 935, 937, 940, 941, 942, 943, 951, 955, 958, 960, 961, 962, 963, 964, 965, 968, 969, 970, 971, 973, 977, 978, 982, 986, 989, 992, 995, 996, 997, 998, 1002, 1003, 1005, 1010, 1011, 1013, 1020, 1024, 1026, 1029, 1030, 1031, 1036, 1037, 1039, 1045, 1046, 1047, 1048, 1059, 1062, 1066, 1067, 1070, 1071, 1074, 1078, 1079, 1081, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1149, 1150, 1151, 1153, 1157, 1164, 1165, 1167, 1169, 1170, 1174, 1177, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1197], "gem\u00e4\u00df": [5, 23, 182], "herkunft": [5, 1208], "mein": [5, 23, 181, 182, 187, 191, 192, 206, 216, 217, 236, 341, 347, 388, 937, 1005, 1185, 1200], "muttersprach": [5, 23], "ist": [5, 7, 8, 149, 181, 182, 187, 190, 191, 192, 196, 200, 208, 216, 217, 221, 223, 226, 227, 229, 232, 236, 238, 242, 245, 246, 251, 252, 253, 255, 258, 261, 264, 268, 274, 283, 293, 307, 325, 335, 341, 351, 362, 365, 366, 370, 375, 388, 433, 998, 1155, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1197, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "umfasst": [5, 182], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 64, 68, 99, 108, 147, 166, 169, 170, 173, 187, 188, 205, 208, 209, 210, 212, 214, 215, 217, 219, 220, 224, 227, 230, 233, 235, 236, 239, 240, 243, 246, 249, 251, 252, 264, 267, 270, 273, 277, 278, 280, 282, 285, 292, 295, 301, 302, 306, 312, 316, 317, 320, 323, 324, 327, 328, 332, 334, 340, 346, 350, 354, 370, 378, 388, 480, 482, 483, 484, 485, 486, 488, 489, 491, 493, 495, 496, 497, 498, 499, 500, 502, 504, 507, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 551, 553, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 595, 675, 755, 789, 792, 940, 951, 976, 979, 1036, 1037, 1039, 1059, 1060, 1088, 1139, 1151, 1152, 1164, 1175, 1179, 1187, 1189, 1192, 1194, 1195, 1201], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 149, 181, 182, 191, 192, 196, 200, 208, 217, 218, 223, 226, 229, 245, 262, 341, 370, 375, 388, 925, 926, 998, 1184, 1187, 1188, 1189, 1194, 1196, 1197, 1200, 1201, 1203, 1204, 1207, 1208], "letzter": 5, "betreffend": 5, "neuen": [5, 1189], "standard": [5, 34, 35, 36, 38, 108, 126, 149, 165, 180, 201, 205, 210, 212, 214, 235, 242, 248, 257, 258, 261, 265, 276, 289, 291, 315, 331, 338, 361, 370, 371, 372, 373, 375, 391, 392, 393, 399, 400, 405, 406, 410, 455, 543, 562, 581, 595, 596, 640, 646, 650, 657, 658, 659, 660, 662, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 712, 717, 743, 745, 747, 748, 789, 791, 878, 881, 882, 898, 931, 945, 961, 967, 970, 983, 986, 1010, 1040, 1059, 1060, 1076, 1150, 1162, 1166, 1180, 1186, 1187, 1189, 1190, 1191, 1192, 1196], "absolut": [5, 8, 29, 92, 101, 126, 148, 171, 175, 180, 186, 189, 196, 206, 209, 210, 212, 214, 225, 230, 234, 242, 248, 249, 256, 258, 259, 261, 262, 265, 270, 273, 279, 282, 285, 288, 289, 292, 295, 301, 302, 306, 309, 310, 312, 317, 320, 323, 324, 327, 328, 334, 340, 346, 350, 353, 354, 356, 357, 358, 359, 360, 361, 367, 369, 370, 373, 388, 473, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 765, 768, 790, 791, 792, 836, 848, 864, 865, 866, 867, 868, 871, 872, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 934, 954, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1147, 1150, 1151, 1153, 1157, 1160, 1162, 1164, 1167, 1169, 1174], "beginn": [5, 8, 29, 32, 80, 92, 170, 171, 181, 186, 189, 200, 206, 209, 210, 212, 214, 225, 240, 243, 244, 246, 249, 256, 259, 262, 266, 273, 285, 292, 295, 301, 302, 312, 317, 320, 323, 324, 327, 328, 334, 340, 346, 350, 356, 357, 358, 359, 360, 361, 369, 370, 373, 415, 723, 791, 792, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1061, 1067, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174], "advanc": [5, 8, 29, 80, 92, 170, 180, 186, 189, 194, 197, 200, 210, 214, 222, 225, 230, 240, 245, 246, 256, 270, 292, 312, 334, 340, 350, 356, 357, 358, 359, 360, 361, 369, 370, 371, 372, 373, 387, 465, 467, 469, 474, 475, 627, 697, 735, 770, 788, 790, 791, 792, 979, 1036, 1037, 1039, 1044, 1045, 1046, 1047, 1051, 1059, 1061, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1144, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174, 1177, 1191], "product": [5, 8, 29, 38, 43, 80, 87, 92, 175, 186, 189, 209, 210, 212, 214, 230, 249, 256, 259, 262, 270, 273, 282, 285, 292, 295, 297, 301, 302, 306, 312, 317, 320, 323, 324, 327, 328, 334, 340, 346, 350, 356, 357, 358, 359, 360, 361, 369, 370, 373, 473, 477, 493, 776, 791, 792, 935, 944, 1015, 1029, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174], "gro\u00dfe": [5, 37, 206, 1203], "thema": [5, 23, 191, 208, 262, 276, 370, 375, 1184], "einfach": [5, 192, 206, 217, 221, 303, 1188, 1189, 1194, 1200, 1202, 1204, 1206, 1208], "doch": [5, 229, 303, 313, 388, 1206], "m\u00e4chtig": 5, "vermutlich": [5, 206, 1206], "grund": [5, 1187, 1194], "warum": [5, 7, 23, 217, 218, 226, 268, 1194, 1200, 1201, 1206, 1208], "gern": [5, 206, 1184, 1194, 1201], "nachgefragt": 5, "werden": [5, 8, 37, 149, 181, 182, 187, 190, 191, 192, 200, 206, 208, 217, 218, 221, 227, 236, 237, 252, 264, 276, 926, 1184, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1200, 1201, 1203, 1204, 1206, 1207, 1208], "deren": [5, 23, 190, 212, 1189, 1202, 1206, 1207], "kernkompetenz": 5, "liegt": [5, 23, 181, 192, 196, 265, 1188, 1204], "sondern": [5, 192, 206, 217, 1185, 1194, 1197, 1200, 1207], "eher": [5, 181, 217, 1186, 1200], "beiwerk": 5, "ihrem": [5, 23, 1184], "eigentlichen": 5, "job": [5, 184, 205, 215, 274, 460, 935, 960, 961, 962, 1031, 1049, 1061, 1065, 1142, 1170], "schreiben": [5, 196, 218, 370, 371, 375, 1187, 1204, 1206], "physik": [5, 196], "z": [5, 38, 111, 192, 193, 196, 206, 216, 248, 249, 261, 264, 286, 313, 341, 351, 400, 410, 421, 422, 483, 616, 679, 749, 864, 925, 1010, 1062, 1185, 1194, 1196, 1201], "b": [5, 7, 21, 31, 32, 38, 62, 75, 76, 109, 116, 120, 123, 151, 176, 188, 192, 193, 194, 196, 206, 211, 216, 221, 223, 226, 229, 232, 239, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 362, 364, 365, 366, 402, 410, 412, 421, 437, 451, 454, 467, 597, 599, 607, 608, 614, 615, 616, 617, 622, 666, 667, 672, 673, 702, 708, 742, 749, 759, 789, 838, 869, 881, 898, 920, 925, 926, 942, 943, 944, 983, 999, 1028, 1034, 1043, 1046, 1058, 1066, 1067, 1073, 1076, 1078, 1080, 1081, 1086, 1150, 1153, 1165, 1185, 1194, 1196, 1201], "guter": [5, 1185], "ersatz": [5, 217, 1200], "matlab": [5, 194, 196, 249, 388, 1136, 1139], "tester": [5, 170, 1170, 1196], "basic": [5, 10, 28, 29, 31, 65, 74, 75, 76, 79, 80, 85, 99, 103, 105, 108, 112, 113, 126, 130, 131, 132, 133, 136, 139, 143, 144, 148, 169, 170, 173, 175, 180, 183, 188, 189, 194, 197, 200, 209, 222, 235, 240, 251, 259, 261, 264, 265, 289, 291, 298, 299, 300, 308, 316, 326, 330, 332, 338, 369, 370, 371, 372, 373, 375, 377, 381, 387, 389, 439, 445, 449, 452, 456, 465, 467, 469, 471, 472, 474, 475, 482, 484, 485, 492, 499, 501, 502, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 573, 589, 590, 595, 621, 629, 634, 646, 650, 658, 659, 662, 663, 667, 668, 669, 680, 687, 688, 689, 690, 691, 692, 697, 700, 701, 703, 706, 708, 735, 752, 768, 776, 786, 788, 790, 791, 795, 798, 800, 805, 808, 815, 819, 829, 838, 840, 842, 847, 853, 856, 858, 859, 861, 865, 866, 872, 874, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 940, 941, 946, 947, 948, 949, 950, 960, 961, 962, 963, 965, 970, 973, 975, 983, 989, 992, 995, 997, 1005, 1008, 1009, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029, 1067, 1096, 1123, 1124, 1135, 1136, 1145, 1151, 1157, 1158, 1160, 1175, 1179, 1191, 1192, 1205], "einf\u00fchrung": [5, 196, 200, 213, 215, 389, 1059, 1186, 1191, 1192, 1194, 1203, 1205], "anhand": [5, 6, 191, 200, 213, 215, 217, 218, 267, 387, 389, 1186, 1192, 1200, 1205], "beispielen": [5, 8, 187, 213, 215, 217, 227, 236, 252, 264, 388, 389, 1192, 1205], "memori": [5, 42, 43, 49, 55, 75, 80, 82, 99, 111, 112, 113, 149, 168, 172, 173, 174, 176, 178, 185, 189, 193, 194, 195, 198, 200, 205, 211, 212, 220, 224, 225, 229, 242, 248, 251, 258, 261, 276, 298, 300, 302, 307, 324, 327, 352, 388, 389, 391, 405, 411, 433, 434, 440, 453, 455, 456, 458, 464, 465, 467, 469, 473, 474, 475, 502, 517, 519, 521, 522, 523, 525, 527, 528, 535, 536, 543, 560, 562, 563, 587, 595, 596, 601, 602, 612, 630, 631, 632, 648, 667, 677, 692, 695, 697, 706, 733, 735, 740, 747, 752, 754, 755, 756, 776, 788, 789, 790, 791, 800, 805, 808, 810, 815, 819, 829, 833, 834, 835, 838, 840, 842, 843, 847, 850, 856, 859, 869, 874, 876, 882, 934, 951, 960, 980, 982, 983, 996, 997, 1029, 1033, 1046, 1047, 1060, 1067, 1149, 1187, 1188, 1191, 1195, 1196, 1205], "weiter": [5, 23, 37, 181, 182, 206, 208, 217, 231, 255, 273, 303, 351, 926, 1184, 1194, 1200, 1201, 1203, 1204, 1208], "standbein": [5, 1194], "mehreren": [5, 149, 206, 222, 1207], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 82, 92, 101, 126, 148, 166, 169, 191, 193, 213, 215, 225, 227, 230, 234, 240, 251, 252, 256, 262, 263, 264, 267, 270, 285, 292, 295, 301, 305, 306, 311, 312, 323, 333, 334, 339, 340, 345, 346, 349, 350, 370, 371, 372, 373, 374, 388, 445, 449, 452, 456, 465, 469, 474, 475, 478, 480, 490, 501, 515, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 697, 735, 768, 788, 790, 791, 807, 838, 861, 865, 866, 867, 868, 871, 872, 878, 879, 880, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 899, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 935, 943, 957, 963, 965, 973, 975, 989, 991, 992, 995, 997, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1030, 1059, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1186, 1194, 1196, 1197, 1201, 1202, 1203], "konzept": [5, 23, 388, 1194, 1196, 1203], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 181], "mehr": [5, 11, 23, 181, 190, 192, 216, 222, 242, 351, 388, 1184, 1185, 1187, 1189, 1194, 1201, 1202, 1203, 1208], "kernentwickl": 5, "themen": [5, 23, 187, 198, 200, 1194], "applikationsentwicklung": 5, "direkt": [5, 23, 200, 1187, 1203], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 155, 181, 182, 190, 192, 200, 206, 216, 217, 221, 226, 227, 236, 237, 252, 258, 264, 274, 347, 365, 388, 926], "nur": [5, 23, 149, 181, 187, 191, 192, 196, 206, 208, 216, 217, 221, 223, 231, 253, 351, 365, 388, 1186, 1187, 1194, 1197, 1200, 1201, 1202, 1204, 1206, 1207, 1208], "mutig": 5, "pool": [5, 85, 234, 858, 997, 999], "absprach": [5, 1184], "individuel": [5, 23, 208, 1184], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 200, 206, 388, 1185, 1206], "recht": [5, 7, 132, 155, 181, 182, 192, 200, 206, 217, 226, 341, 1200, 1201], "dynamisch": [5, 200, 231, 1187, 1189, 1204], "teilnehm": [5, 187, 196, 200, 208, 388, 1194, 1201], "haben": [5, 181, 182, 191, 196, 200, 208, 216, 217, 229, 388, 656, 1185, 1186, 1187, 1188, 1189, 1194, 1200, 1202, 1203, 1204, 1207], "oft": [5, 23, 181, 206, 208, 1188], "bed\u00fcrfniss": [5, 23, 208], "vorab": [5, 187, 200, 236], "bekannt": [5, 23, 206, 1189], "waren": [5, 191, 196, 1185, 1189], "wodurch": [5, 23], "auch": [5, 23, 149, 181, 182, 187, 192, 196, 206, 218, 221, 223, 229, 232, 237, 258, 262, 268, 293, 347, 365, 366, 388, 1184, 1185, 1186, 1187, 1188, 1194, 1197, 1201, 1206, 1208], "mal": [5, 182, 196, 206, 217, 268, 335, 388, 1185, 1189, 1200], "agenda": [5, 23, 27, 197, 302, 306, 310, 312, 316, 324, 328, 332, 334, 335, 338, 340, 346, 350, 354], "abgewichen": 5, "wird": [5, 7, 23, 149, 181, 182, 187, 190, 191, 192, 200, 206, 216, 217, 223, 226, 255, 341, 347, 351, 370, 375, 388, 1184, 1185, 1188, 1189, 1194, 1196, 1197, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "verh\u00e4ltni": 5, "vortrag": [5, 191, 1184], "\u00fcbungen": [5, 8, 149, 187, 200, 208, 217, 218, 227, 236, 252, 264, 388, 1187, 1194, 1196, 1200, 1203], "ca": [5, 23, 32, 181, 183, 778, 1165], "50": [5, 7, 108, 111, 183, 194, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 371, 372, 462, 464, 480, 551, 586, 587, 920, 942, 943, 944, 1038, 1061, 1081, 1094, 1141, 1142, 1154, 1170], "kleiner": [5, 7, 226, 925], "den": [5, 149, 182, 190, 191, 192, 196, 200, 206, 208, 216, 217, 222, 229, 236, 265, 313, 370, 371, 375, 388, 860, 1185, 1186, 1187, 1188, 1189, 1194, 1197, 1200, 1201, 1207, 1208], "teilnehmern": [5, 388, 1208], "pc": [5, 80, 110, 148, 169, 225, 289, 356, 373, 376, 555, 936, 937, 943, 1185], "erledigt": 5, "speziel": [5, 187, 216, 217, 276, 1197, 1200, 1203, 1207], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1184], "denen": [5, 23, 181, 1194], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 61, 63, 80, 87, 92, 110, 126, 127, 151, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 189, 190, 193, 194, 205, 206, 209, 210, 212, 213, 214, 217, 218, 222, 223, 224, 228, 230, 231, 234, 236, 240, 241, 243, 244, 246, 247, 249, 250, 252, 254, 256, 257, 258, 263, 264, 266, 267, 269, 270, 272, 278, 280, 282, 284, 285, 287, 289, 291, 292, 294, 295, 298, 299, 300, 302, 304, 305, 306, 308, 311, 312, 314, 317, 320, 323, 324, 326, 327, 328, 330, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 352, 370, 375, 377, 388, 390, 405, 411, 428, 433, 434, 443, 446, 458, 459, 467, 473, 481, 482, 483, 485, 487, 489, 490, 492, 497, 500, 502, 517, 522, 531, 532, 536, 545, 546, 551, 552, 553, 554, 571, 599, 600, 614, 615, 616, 617, 630, 699, 708, 723, 753, 754, 769, 789, 791, 809, 822, 824, 834, 838, 843, 848, 870, 877, 883, 899, 935, 937, 942, 944, 951, 956, 958, 964, 972, 976, 980, 985, 993, 994, 997, 998, 1009, 1011, 1012, 1013, 1024, 1027, 1033, 1036, 1037, 1040, 1049, 1050, 1059, 1060, 1063, 1067, 1072, 1092, 1114, 1125, 1132, 1133, 1135, 1137, 1139, 1142, 1143, 1144, 1146, 1150, 1164, 1165, 1177, 1179, 1182, 1193, 1200], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 66, 99, 108, 111, 126, 148, 151, 153, 154, 169, 170, 180, 184, 185, 187, 188, 191, 193, 200, 201, 202, 212, 214, 219, 220, 224, 225, 227, 234, 235, 236, 240, 242, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 270, 273, 277, 278, 280, 281, 282, 285, 289, 292, 298, 299, 300, 302, 306, 310, 312, 316, 317, 320, 324, 328, 332, 334, 338, 340, 346, 350, 351, 369, 374, 375, 376, 377, 384, 389, 390, 542, 573, 615, 794, 797, 799, 802, 804, 807, 816, 818, 828, 830, 838, 839, 840, 841, 846, 850, 937, 942, 944, 1012, 1013, 1014, 1016, 1022, 1026, 1028, 1029, 1030], "endprodukt": 5, "bleibt": [5, 23, 1204], "homepag": [5, 13, 66, 177, 179, 187, 190, 191, 205, 232, 240, 242, 277, 278, 280, 464, 1024, 1170], "erhalten": 5, "hier": [5, 8, 17, 23, 155, 181, 182, 187, 190, 191, 193, 196, 200, 208, 212, 216, 217, 223, 227, 233, 236, 237, 246, 252, 255, 264, 265, 307, 325, 388, 1184, 1187, 1194, 1200, 1201, 1203, 1204, 1206], "mix": [5, 29, 212, 219, 230, 233, 240, 243, 246, 247, 251, 253, 256, 285, 292, 305, 306, 311, 312, 314, 333, 334, 339, 340, 345, 346, 349, 350, 416, 455, 458, 459, 461, 463, 606, 791, 1064, 1067, 1083, 1086, 1096, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1136, 1150, 1155, 1161, 1205], "j\u00fcngeren": 5, "2023": [5, 68, 98, 108, 125, 126, 290, 291, 294, 297, 308, 314, 325, 336, 346, 348, 387, 478, 479, 748], "10": [5, 7, 31, 62, 99, 104, 107, 108, 111, 126, 162, 169, 175, 176, 181, 183, 184, 194, 195, 206, 211, 213, 217, 218, 221, 223, 226, 229, 230, 232, 237, 238, 239, 240, 242, 243, 245, 246, 248, 253, 255, 258, 261, 265, 268, 270, 271, 273, 274, 284, 286, 291, 293, 300, 301, 302, 303, 306, 307, 312, 313, 318, 322, 325, 329, 335, 341, 347, 351, 356, 363, 364, 365, 366, 369, 383, 384, 387, 399, 401, 403, 405, 413, 431, 438, 455, 457, 471, 481, 491, 521, 541, 543, 544, 546, 549, 552, 557, 560, 580, 581, 586, 587, 589, 590, 595, 605, 608, 610, 617, 684, 685, 691, 695, 702, 706, 707, 733, 745, 754, 755, 756, 757, 767, 791, 828, 838, 846, 867, 869, 875, 894, 898, 900, 920, 922, 926, 929, 937, 942, 943, 944, 961, 970, 978, 1005, 1008, 1012, 1013, 1014, 1026, 1027, 1033, 1038, 1039, 1049, 1067, 1068, 1075, 1098, 1099, 1119, 1125, 1136, 1137, 1141, 1142, 1165, 1170, 1182, 1200], "09": [5, 99, 124, 169, 176, 185, 209, 225, 290, 325, 335, 367, 387, 479, 482, 920, 943, 944, 968, 1063, 1141], "11": [5, 7, 40, 62, 108, 126, 169, 170, 185, 194, 195, 200, 201, 205, 206, 211, 212, 213, 217, 218, 221, 223, 226, 229, 232, 235, 237, 238, 239, 242, 247, 248, 249, 253, 255, 258, 261, 265, 268, 271, 274, 277, 278, 283, 287, 290, 293, 297, 303, 307, 313, 321, 324, 325, 336, 337, 341, 347, 351, 362, 363, 364, 365, 366, 373, 376, 383, 384, 387, 389, 391, 405, 471, 473, 487, 499, 552, 580, 589, 590, 596, 598, 599, 601, 605, 607, 608, 614, 616, 626, 631, 633, 638, 651, 652, 653, 656, 669, 693, 697, 700, 703, 704, 709, 710, 711, 712, 722, 734, 735, 736, 737, 738, 739, 740, 742, 745, 746, 749, 751, 754, 755, 757, 758, 760, 767, 768, 769, 772, 774, 776, 788, 789, 791, 792, 863, 876, 920, 929, 983, 988, 1012, 1013, 1014, 1062, 1068, 1073, 1092, 1126, 1128, 1132, 1134, 1136, 1139, 1141, 1142, 1153, 1170, 1182, 1189, 1190, 1191, 1200], "introduct": [5, 29, 74, 75, 76, 80, 99, 100, 101, 108, 126, 144, 148, 149, 186, 189, 234, 235, 249, 251, 259, 262, 270, 273, 279, 281, 282, 288, 289, 291, 298, 301, 302, 306, 309, 317, 320, 323, 324, 327, 350, 353, 369, 374, 378, 387, 389, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 573, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 697, 704, 716, 723, 735, 751, 760, 768, 776, 788, 790, 791, 792, 840, 861, 865, 866, 867, 868, 871, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 933, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 978, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1059, 1133, 1134, 1135, 1144, 1164, 1169, 1191, 1205], "07": [5, 99, 108, 126, 169, 183, 185, 196, 209, 238, 239, 273, 278, 290, 291, 297, 313, 369, 383, 384, 387, 485, 865, 866, 942, 1063, 1092, 1136, 1141], "18": [5, 7, 62, 154, 176, 183, 184, 188, 194, 195, 211, 216, 221, 223, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 254, 255, 261, 265, 268, 271, 274, 283, 287, 289, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 347, 351, 363, 365, 366, 369, 387, 605, 670, 734, 742, 754, 791, 802, 811, 838, 875, 881, 883, 917, 920, 934, 944, 968, 970, 1004, 1015, 1022, 1023, 1024, 1027, 1055, 1056, 1092, 1099, 1141, 1142], "For": [5, 40, 124, 126, 171, 172, 173, 177, 180, 183, 185, 186, 188, 189, 194, 197, 202, 203, 205, 209, 225, 230, 233, 240, 243, 246, 251, 261, 264, 266, 270, 278, 280, 281, 282, 306, 312, 317, 328, 381, 387, 389, 401, 402, 408, 423, 432, 439, 445, 449, 452, 454, 456, 465, 469, 474, 475, 492, 517, 573, 598, 605, 609, 622, 631, 651, 697, 735, 742, 745, 749, 754, 759, 788, 790, 791, 809, 824, 838, 865, 866, 875, 898, 934, 935, 943, 944, 945, 954, 958, 985, 1006, 1013, 1014, 1015, 1022, 1023, 1027, 1060, 1061, 1071, 1078, 1086, 1110, 1115, 1137, 1140, 1142, 1144], "04": [5, 99, 107, 126, 148, 152, 169, 180, 183, 185, 200, 201, 225, 273, 289, 290, 293, 297, 325, 367, 369, 387, 480, 791, 934, 1015, 1022, 1023, 1027, 1141, 1170], "20": [5, 7, 8, 23, 62, 114, 115, 154, 169, 176, 178, 183, 192, 193, 194, 195, 206, 211, 216, 217, 221, 223, 226, 227, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 290, 293, 297, 299, 303, 307, 314, 317, 318, 320, 325, 329, 335, 347, 351, 365, 366, 369, 387, 393, 395, 397, 413, 437, 477, 517, 545, 546, 551, 580, 581, 586, 587, 589, 590, 605, 702, 705, 706, 707, 716, 723, 745, 747, 748, 753, 754, 755, 756, 778, 857, 863, 883, 898, 920, 935, 942, 943, 944, 998, 1015, 1024, 1038, 1039, 1063, 1082, 1091, 1092, 1118, 1141, 1142, 1170, 1172, 1179], "clean": [5, 53, 62, 135, 152, 188, 240, 259, 387, 455, 466, 467, 470, 476, 597, 695, 792, 1012, 1014, 1024, 1033, 1086, 1136], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 62, 66, 67, 72, 75, 82, 87, 105, 106, 110, 116, 119, 126, 143, 152, 154, 158, 166, 170, 172, 173, 174, 175, 176, 179, 180, 187, 188, 191, 193, 196, 197, 198, 200, 201, 202, 205, 208, 209, 210, 212, 214, 219, 224, 225, 229, 233, 234, 235, 240, 242, 243, 245, 248, 251, 256, 258, 259, 261, 262, 270, 280, 282, 285, 289, 291, 292, 295, 298, 300, 303, 305, 306, 307, 311, 312, 313, 316, 317, 320, 323, 324, 328, 332, 333, 334, 335, 337, 338, 339, 340, 345, 349, 350, 355, 356, 365, 370, 375, 387, 390, 397, 399, 403, 407, 413, 427, 433, 438, 454, 455, 459, 461, 463, 469, 470, 472, 473, 474, 475, 476, 480, 482, 483, 484, 486, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 504, 505, 507, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 576, 578, 579, 581, 582, 584, 585, 587, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 623, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 660, 666, 667, 669, 670, 672, 673, 675, 681, 684, 688, 689, 695, 696, 700, 702, 704, 705, 706, 708, 710, 712, 723, 732, 733, 734, 735, 737, 738, 739, 740, 742, 744, 749, 753, 754, 756, 757, 758, 759, 767, 769, 771, 773, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 789, 790, 791, 792, 797, 802, 815, 816, 830, 836, 838, 843, 850, 853, 854, 856, 859, 877, 904, 934, 935, 943, 944, 959, 960, 976, 979, 983, 987, 996, 1000, 1002, 1003, 1005, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1022, 1024, 1035, 1036, 1038, 1039, 1040, 1044, 1046, 1055, 1057, 1060, 1061, 1063, 1064, 1070, 1071, 1072, 1078, 1082, 1083, 1084, 1092, 1112, 1116, 1135, 1139, 1151, 1153, 1162, 1164, 1170, 1171, 1173, 1177, 1178, 1179, 1182, 1183, 1190, 1195, 1203, 1204, 1208], "With": [5, 29, 68, 114, 115, 117, 118, 125, 144, 161, 174, 180, 200, 261, 270, 289, 291, 292, 295, 300, 307, 315, 317, 320, 324, 328, 331, 345, 349, 350, 387, 428, 457, 473, 483, 493, 494, 503, 515, 529, 543, 595, 704, 735, 790, 791, 792, 838, 867, 868, 934, 941, 942, 973, 975, 992, 1010, 1013, 1024, 1055, 1059, 1135, 1151, 1155, 1157, 1159, 1166, 1190, 1192, 1193, 1195], "03": [5, 99, 107, 126, 148, 169, 170, 178, 183, 185, 192, 200, 235, 256, 258, 261, 290, 291, 294, 297, 303, 316, 335, 366, 369, 373, 387, 389, 471, 478, 479, 480, 541, 573, 590, 596, 598, 599, 601, 605, 606, 608, 610, 613, 694, 900, 1024, 1141, 1179, 1189], "28": [5, 7, 23, 99, 107, 127, 154, 169, 176, 183, 184, 194, 195, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 365, 366, 383, 384, 387, 479, 491, 538, 554, 555, 578, 587, 670, 717, 828, 880, 920, 944, 972, 1013, 1014, 1026, 1094, 1141, 1182], "29": [5, 7, 99, 108, 149, 183, 184, 194, 195, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 336, 341, 347, 362, 365, 369, 383, 384, 387, 479, 757, 802, 942, 944, 1012, 1015, 1024, 1141], "sap": [5, 240, 291, 387, 1157], "13": [5, 6, 7, 62, 108, 152, 166, 176, 178, 185, 192, 194, 195, 206, 211, 214, 218, 221, 223, 226, 229, 232, 237, 239, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 291, 294, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 365, 366, 387, 471, 478, 483, 486, 597, 712, 754, 802, 880, 920, 943, 968, 978, 998, 1026, 1033, 1035, 1076, 1087, 1141, 1142, 1165, 1200], "15": [5, 7, 60, 62, 108, 124, 126, 169, 172, 180, 183, 192, 194, 195, 203, 206, 209, 211, 217, 218, 221, 223, 225, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 256, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 308, 313, 317, 318, 320, 325, 329, 335, 341, 351, 363, 365, 366, 367, 369, 376, 383, 384, 387, 479, 545, 546, 563, 564, 565, 566, 568, 569, 672, 732, 755, 777, 779, 781, 789, 867, 881, 935, 969, 978, 1048, 1140, 1141, 1142, 1162, 1165, 1200], "02": [5, 99, 108, 117, 125, 126, 149, 169, 176, 183, 185, 192, 196, 222, 232, 259, 273, 290, 291, 297, 383, 384, 387, 471, 479, 480, 944, 1012, 1013, 1014, 1024, 1026, 1035, 1141], "17": [5, 7, 62, 98, 108, 126, 178, 184, 188, 192, 194, 195, 206, 211, 213, 216, 221, 223, 226, 229, 232, 237, 238, 242, 247, 249, 250, 254, 255, 256, 258, 261, 265, 268, 274, 277, 278, 284, 286, 290, 293, 297, 303, 308, 313, 317, 318, 320, 325, 329, 335, 341, 351, 362, 365, 366, 387, 605, 653, 694, 703, 712, 733, 745, 755, 774, 789, 802, 838, 869, 920, 944, 960, 966, 996, 1000, 1027, 1056, 1099, 1141, 1142, 1150, 1162], "tour": [5, 181, 240, 277, 278, 280, 300, 337, 338, 387, 388, 541, 693, 790, 791, 1136, 1190, 1191], "forc": [5, 31, 35, 172, 174, 178, 201, 261, 387, 388, 462, 477, 505, 601, 873, 951, 980, 1014, 1136, 1190], "2022": [5, 99, 107, 108, 150, 152, 185, 248, 254, 258, 261, 277, 278, 284, 287, 335, 383, 384, 387, 479, 490, 552, 723, 748, 752, 773, 776, 789, 898, 900, 1014, 1024, 1092, 1136], "12": [5, 6, 7, 8, 40, 62, 68, 108, 124, 126, 151, 154, 169, 178, 183, 184, 185, 194, 195, 199, 206, 211, 217, 218, 221, 223, 226, 229, 232, 233, 237, 238, 239, 242, 245, 246, 250, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 289, 290, 291, 293, 297, 303, 307, 313, 318, 321, 324, 325, 327, 329, 336, 347, 351, 364, 365, 369, 383, 384, 387, 455, 479, 480, 488, 573, 706, 712, 745, 789, 869, 880, 883, 898, 920, 922, 929, 937, 942, 944, 946, 970, 978, 996, 1012, 1024, 1026, 1027, 1033, 1035, 1036, 1039, 1048, 1067, 1078, 1136, 1139, 1141, 1142, 1158, 1159, 1165, 1176, 1200], "01": [5, 62, 98, 99, 107, 108, 117, 125, 126, 169, 170, 178, 183, 185, 192, 196, 214, 225, 232, 239, 248, 254, 261, 273, 290, 291, 293, 297, 336, 367, 369, 383, 384, 387, 466, 479, 480, 493, 580, 581, 770, 867, 894, 944, 998, 1000, 1027, 1125, 1136, 1141, 1170], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 60, 71, 75, 76, 80, 84, 86, 87, 99, 100, 110, 111, 112, 113, 116, 120, 126, 127, 129, 131, 132, 133, 134, 135, 136, 143, 148, 160, 172, 175, 176, 177, 178, 180, 185, 188, 189, 190, 193, 194, 195, 209, 211, 212, 213, 221, 225, 232, 234, 236, 242, 245, 248, 252, 258, 259, 261, 265, 273, 279, 281, 285, 288, 289, 300, 302, 307, 309, 310, 313, 320, 323, 324, 327, 341, 353, 354, 356, 362, 367, 371, 372, 387, 392, 395, 396, 408, 409, 410, 423, 428, 432, 438, 439, 441, 444, 445, 449, 452, 453, 454, 455, 456, 459, 461, 462, 463, 465, 467, 469, 474, 475, 477, 483, 490, 493, 494, 495, 499, 500, 503, 505, 515, 517, 529, 542, 543, 552, 554, 560, 595, 600, 601, 606, 608, 609, 610, 659, 660, 662, 663, 666, 677, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 697, 699, 712, 723, 733, 735, 738, 743, 744, 745, 749, 751, 755, 757, 761, 770, 776, 787, 788, 789, 790, 791, 792, 799, 813, 815, 832, 855, 867, 868, 871, 872, 877, 880, 881, 885, 886, 891, 895, 901, 931, 934, 941, 942, 944, 959, 963, 964, 967, 973, 975, 980, 981, 982, 983, 992, 997, 998, 1009, 1010, 1013, 1015, 1020, 1022, 1023, 1024, 1027, 1028, 1035, 1036, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1066, 1067, 1074, 1076, 1081, 1087, 1092, 1093, 1094, 1099, 1122, 1125, 1128, 1139, 1143, 1145, 1146, 1149, 1153, 1156, 1157, 1163, 1165, 1171, 1172, 1182, 1190, 1191, 1192, 1193, 1195, 1205], "new": [5, 16, 32, 42, 44, 49, 50, 55, 62, 66, 80, 109, 124, 131, 132, 170, 173, 175, 176, 177, 178, 179, 180, 183, 188, 200, 205, 225, 242, 246, 248, 258, 261, 265, 273, 283, 300, 306, 307, 324, 356, 381, 387, 389, 416, 446, 450, 451, 459, 463, 477, 480, 500, 502, 520, 524, 536, 538, 542, 551, 553, 554, 563, 564, 565, 566, 568, 569, 573, 579, 587, 596, 597, 602, 605, 651, 653, 664, 666, 667, 672, 689, 693, 697, 699, 700, 704, 705, 706, 708, 711, 722, 733, 736, 740, 742, 744, 746, 747, 751, 752, 753, 754, 755, 756, 760, 761, 768, 770, 772, 776, 780, 781, 782, 788, 791, 792, 795, 832, 838, 846, 870, 894, 917, 935, 938, 942, 944, 967, 968, 969, 978, 980, 981, 987, 999, 1030, 1049, 1064, 1067, 1076, 1116, 1141, 1142, 1159, 1165, 1170, 1189, 1190, 1191, 1193], "languag": [5, 12, 29, 43, 61, 63, 80, 92, 126, 144, 149, 169, 194, 196, 208, 209, 210, 212, 214, 217, 219, 224, 225, 227, 230, 232, 233, 234, 236, 252, 256, 259, 262, 264, 267, 292, 295, 298, 299, 300, 327, 356, 357, 358, 359, 360, 361, 370, 373, 387, 389, 391, 393, 405, 408, 419, 423, 432, 437, 439, 445, 449, 450, 452, 465, 469, 474, 477, 482, 484, 501, 515, 516, 517, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 560, 562, 595, 596, 603, 608, 610, 618, 621, 623, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 697, 699, 704, 711, 712, 722, 736, 741, 743, 746, 751, 755, 758, 759, 760, 768, 775, 776, 788, 790, 791, 792, 870, 927, 935, 936, 1012, 1014, 1031, 1040, 1044, 1045, 1046, 1047, 1048, 1051, 1056, 1060, 1064, 1066, 1067, 1070, 1079, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1143, 1147, 1150, 1151, 1153, 1157, 1162, 1164, 1167, 1169, 1174, 1179, 1187, 1190, 1191, 1192, 1193, 1195], "start": [5, 8, 42, 65, 112, 113, 131, 132, 154, 167, 169, 172, 173, 174, 175, 178, 183, 184, 188, 192, 197, 202, 209, 210, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 227, 230, 234, 235, 240, 246, 255, 261, 262, 271, 273, 286, 289, 291, 293, 295, 298, 300, 302, 307, 310, 325, 327, 328, 335, 338, 341, 347, 351, 354, 356, 373, 387, 390, 397, 400, 401, 410, 413, 427, 450, 471, 472, 485, 493, 497, 500, 507, 573, 584, 590, 656, 667, 672, 675, 695, 747, 770, 789, 799, 838, 851, 865, 866, 870, 871, 874, 876, 877, 898, 899, 911, 920, 922, 935, 961, 962, 971, 974, 981, 982, 986, 990, 991, 994, 996, 999, 1005, 1009, 1012, 1026, 1031, 1038, 1043, 1044, 1046, 1047, 1055, 1065, 1066, 1072, 1082, 1099, 1106, 1107, 1125, 1144, 1146, 1154, 1155, 1159, 1162, 1170, 1178, 1190, 1193], "schluss": [5, 7, 181, 206, 226], "noch": [5, 7, 181, 182, 192, 196, 200, 206, 216, 217, 221, 223, 226, 229, 232, 242, 255, 261, 262, 265, 286, 293, 388, 1189, 1200, 1207], "talk": [5, 42, 45, 50, 64, 66, 67, 68, 86, 126, 127, 143, 173, 177, 188, 193, 197, 205, 209, 212, 217, 249, 251, 252, 328, 372, 477, 478, 740, 749, 838, 857, 935, 940, 944, 951, 1182], "heurigen": 5, "grazer": [5, 59, 191, 212, 328, 940], "linuxtagen": [5, 191], "pointless": [5, 152, 286, 300, 307, 324, 328, 337, 459, 606], "blink": [5, 60, 152, 300, 303, 324, 328, 356, 359, 935, 976, 979], "sollt": [5, 23, 181, 182, 187, 190, 229, 1187, 1206], "interess": [5, 23, 262, 1185, 1196], "anderen": [5, 23, 206, 216, 221, 223, 388, 1184, 1185, 1187, 1189, 1208], "themenkomplex": 5, "bestehen": [5, 1203], "biet": 5, "folgend": [5, 149, 187, 206, 217, 262, 1200], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 60, 61, 63, 65, 72, 82, 90, 112, 113, 125, 127, 131, 143, 144, 154, 160, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 187, 188, 189, 193, 194, 195, 200, 202, 205, 206, 208, 209, 211, 216, 221, 225, 231, 233, 234, 242, 245, 248, 249, 253, 258, 259, 261, 278, 280, 283, 286, 289, 291, 298, 300, 307, 324, 328, 355, 357, 358, 365, 381, 393, 397, 407, 411, 412, 415, 416, 417, 428, 436, 437, 443, 453, 455, 457, 459, 460, 463, 466, 467, 470, 472, 477, 479, 480, 481, 482, 483, 486, 487, 491, 492, 495, 496, 500, 502, 505, 507, 508, 516, 517, 522, 523, 544, 546, 554, 555, 573, 601, 602, 605, 607, 612, 630, 631, 648, 653, 666, 667, 681, 689, 691, 706, 708, 710, 723, 733, 737, 742, 743, 745, 755, 756, 759, 762, 764, 767, 782, 791, 797, 799, 806, 809, 811, 816, 824, 828, 830, 834, 836, 838, 846, 852, 855, 864, 865, 866, 870, 871, 873, 874, 876, 878, 880, 881, 882, 883, 898, 899, 910, 917, 920, 922, 924, 925, 926, 927, 929, 935, 936, 937, 938, 942, 943, 944, 954, 955, 959, 961, 964, 970, 972, 981, 988, 994, 997, 998, 999, 1010, 1014, 1020, 1024, 1029, 1030, 1034, 1035, 1036, 1047, 1055, 1060, 1061, 1065, 1067, 1080, 1081, 1084, 1085, 1086, 1092, 1098, 1099, 1115, 1116, 1132, 1136, 1137, 1146, 1150, 1159, 1165, 1170, 1172, 1177, 1184, 1185, 1187, 1189, 1193, 1194, 1201, 1202, 1205, 1208], "onlin": [5, 11, 23, 149, 178, 185, 187, 188, 200, 205, 208, 388], "gehalten": [5, 8, 169, 196, 208, 217, 227, 236, 252, 264, 1184, 1189, 1200], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 168, 181, 182, 196, 205, 208, 388, 389, 794, 797, 802, 807, 816, 824, 1002, 1005, 1009, 1037, 1039, 1059, 1136, 1151, 1164, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1205], "980": [5, 245, 248, 261, 268, 271, 695], "reisekosten": [5, 23], "auto": [5, 132, 170, 182, 190, 194, 200, 276, 338, 497, 502, 526, 527, 531, 532, 535, 536, 537, 590, 598, 607, 608, 631, 653, 654, 656, 697, 698, 705, 712, 715, 717, 720, 723, 724, 725, 727, 728, 729, 730, 731, 735, 737, 738, 739, 740, 745, 747, 749, 754, 755, 756, 758, 769, 775, 777, 779, 780, 781, 785, 786, 787, 788, 789, 790, 791, 838, 1009, 1190, 1201, 1206], "42": [5, 7, 21, 42, 60, 132, 134, 190, 192, 193, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 412, 438, 440, 441, 443, 446, 454, 459, 461, 467, 481, 491, 496, 500, 517, 519, 548, 549, 553, 554, 555, 556, 557, 558, 559, 571, 578, 590, 597, 605, 606, 610, 612, 638, 641, 644, 651, 675, 679, 699, 700, 708, 710, 738, 745, 758, 759, 769, 771, 775, 777, 779, 781, 785, 786, 787, 801, 883, 920, 929, 937, 983, 991, 1005, 1012, 1013, 1014, 1034, 1035, 1036, 1043, 1046, 1064, 1066, 1067, 1076, 1077, 1078, 1081, 1101, 1182], "per": [5, 50, 80, 179, 206, 324, 361, 381, 411, 450, 455, 544, 775, 828, 834, 848, 852, 857, 858, 870, 874, 894, 920, 987, 996, 1013, 1183, 1208], "kilomet": [5, 175, 737, 898], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 181], "sampl": [6, 117, 125, 126, 134, 173, 184, 230, 233, 234, 246, 250, 256, 262, 265, 282, 298, 324, 341, 356, 473, 541, 767, 937, 985, 1005, 1088], "log": [6, 98, 132, 154, 170, 178, 179, 188, 195, 200, 203, 212, 232, 242, 248, 258, 261, 289, 291, 303, 320, 341, 369, 482, 483, 502, 759, 801, 838, 867, 874, 876, 898, 935, 937, 945, 949, 951, 954, 955, 1136, 1139, 1165, 1179], "record": [6, 29, 40, 53, 144, 168, 169, 177, 179, 180, 206, 217, 218, 224, 234, 239, 246, 262, 282, 297, 317, 320, 361, 373, 472, 473, 791, 937, 1031, 1036, 1051, 1094, 1096, 1115, 1126, 1127, 1128, 1129, 1130, 1132, 1135, 1145, 1200], "grundlagen": [6, 8, 23, 149, 166, 267, 306, 387, 1187, 1189, 1196, 1197, 1200, 1201, 1203, 1204, 1207], "4": [6, 7, 8, 32, 60, 62, 108, 111, 114, 115, 124, 149, 154, 165, 170, 172, 176, 178, 184, 192, 193, 194, 195, 196, 199, 206, 211, 213, 217, 218, 221, 223, 226, 229, 232, 233, 237, 238, 239, 240, 242, 243, 245, 246, 248, 253, 255, 256, 258, 261, 265, 268, 270, 271, 274, 282, 283, 286, 290, 291, 293, 297, 303, 306, 307, 312, 313, 318, 325, 329, 335, 340, 341, 347, 351, 363, 364, 365, 367, 370, 383, 384, 387, 401, 417, 437, 440, 443, 460, 464, 467, 468, 478, 479, 481, 499, 502, 541, 545, 546, 547, 548, 549, 551, 553, 554, 556, 572, 574, 590, 597, 599, 607, 608, 611, 613, 614, 615, 616, 617, 629, 630, 638, 648, 698, 700, 702, 717, 718, 719, 721, 723, 732, 734, 738, 745, 747, 758, 771, 789, 838, 839, 876, 924, 927, 929, 937, 942, 943, 944, 966, 979, 996, 1000, 1032, 1033, 1035, 1042, 1044, 1048, 1055, 1056, 1058, 1067, 1068, 1073, 1076, 1077, 1078, 1082, 1083, 1087, 1088, 1091, 1092, 1094, 1098, 1111, 1115, 1126, 1128, 1132, 1134, 1137, 1141, 1142, 1144, 1150, 1154, 1155, 1156, 1158, 1159, 1161, 1165, 1170, 1185, 1200], "2021": [6, 10, 23, 150, 166, 183, 185, 221, 223, 232, 238, 239, 242, 247, 250, 273, 367, 369, 383, 384, 387, 573, 716, 741, 776, 894, 898, 920, 921, 998, 1012, 1026, 1062, 1179], "templat": [6, 76, 108, 149, 200, 235, 276, 298, 303, 338, 372, 373, 481, 543, 562, 595, 596, 640, 646, 650, 651, 658, 659, 660, 662, 680, 687, 688, 689, 690, 691, 692, 699, 705, 710, 713, 714, 715, 716, 720, 721, 723, 726, 753, 757, 759, 767, 769, 775, 776, 777, 779, 781, 789, 790, 791, 983, 1189, 1191], "descript": [6, 8, 31, 39, 68, 108, 124, 153, 175, 176, 188, 189, 205, 209, 210, 212, 213, 214, 215, 220, 235, 240, 242, 246, 248, 251, 258, 261, 265, 277, 278, 281, 315, 316, 331, 332, 389, 482, 492, 500, 510, 511, 512, 513, 514, 518, 528, 552, 747, 754, 755, 756, 765, 767, 769, 789, 838, 850, 862, 864, 873, 898, 900, 920, 927, 930, 931, 944, 956, 964, 1014, 1026, 1077, 1092, 1115, 1172, 1193], "sidebar": [6, 17, 170, 850], "metadata": [6, 28, 39, 169, 188, 286, 870, 873, 943, 946, 972, 1034, 1195], "angebot": [6, 187], "hous": [6, 32, 173], "meiner": [6, 23, 262, 388, 1185], "person": [6, 23, 116, 120, 180, 210, 229, 232, 271, 273, 275, 282, 286, 293, 324, 325, 377, 462, 497, 498, 501, 526, 610, 669, 776, 951, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1132, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1170, 1171], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 218, 226], "wichtig": [7, 226, 276, 370, 375, 1208], "1": [7, 32, 39, 42, 50, 60, 62, 66, 74, 76, 89, 108, 111, 112, 113, 117, 122, 124, 125, 143, 145, 151, 154, 165, 166, 169, 174, 176, 179, 180, 182, 183, 184, 188, 189, 191, 192, 193, 194, 195, 196, 201, 202, 203, 206, 208, 211, 218, 221, 222, 223, 226, 229, 232, 233, 237, 238, 239, 242, 245, 248, 251, 253, 255, 258, 261, 265, 268, 271, 273, 274, 278, 283, 286, 290, 291, 293, 297, 303, 307, 313, 316, 318, 321, 325, 329, 332, 335, 340, 341, 347, 351, 355, 356, 362, 363, 364, 365, 366, 367, 368, 370, 373, 375, 383, 384, 387, 401, 402, 424, 431, 440, 444, 446, 454, 471, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 495, 496, 516, 517, 523, 533, 541, 542, 545, 549, 551, 553, 554, 555, 557, 561, 563, 564, 565, 566, 567, 568, 569, 574, 577, 580, 583, 586, 589, 590, 592, 597, 598, 599, 605, 607, 611, 613, 614, 615, 616, 617, 622, 627, 629, 635, 636, 637, 638, 639, 644, 648, 660, 662, 670, 672, 675, 679, 689, 695, 696, 698, 699, 700, 702, 705, 706, 708, 710, 712, 714, 715, 717, 719, 720, 721, 723, 724, 725, 732, 738, 740, 743, 744, 745, 747, 749, 750, 753, 754, 756, 757, 758, 767, 771, 775, 777, 778, 779, 781, 787, 789, 791, 796, 801, 807, 811, 816, 838, 855, 864, 865, 866, 869, 870, 871, 873, 874, 875, 876, 877, 880, 881, 882, 883, 884, 888, 890, 892, 894, 895, 899, 900, 901, 917, 920, 921, 922, 923, 924, 926, 927, 929, 930, 931, 933, 935, 942, 943, 945, 946, 954, 955, 956, 958, 960, 961, 962, 964, 965, 966, 968, 969, 970, 971, 976, 978, 979, 991, 993, 994, 996, 998, 1000, 1001, 1002, 1005, 1008, 1009, 1011, 1012, 1015, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1034, 1035, 1036, 1039, 1040, 1042, 1044, 1046, 1048, 1049, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1075, 1077, 1078, 1083, 1088, 1091, 1092, 1094, 1099, 1102, 1105, 1115, 1119, 1122, 1125, 1126, 1128, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1149, 1154, 1155, 1156, 1158, 1159, 1160, 1164, 1165, 1170, 1171, 1172, 1177, 1181, 1184, 1190, 1192, 1193, 1197, 1200, 1202, 1207], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 60, 61, 62, 63, 66, 67, 70, 71, 80, 82, 84, 86, 87, 89, 91, 92, 93, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 113, 116, 117, 121, 122, 124, 125, 126, 127, 131, 134, 135, 137, 138, 139, 143, 144, 148, 154, 157, 158, 160, 161, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179, 180, 183, 184, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 221, 223, 224, 225, 226, 229, 230, 233, 234, 235, 237, 238, 240, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262, 263, 264, 265, 267, 269, 272, 273, 274, 278, 279, 280, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 325, 327, 328, 329, 331, 333, 334, 335, 337, 339, 340, 342, 345, 346, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 370, 373, 375, 376, 378, 381, 383, 384, 388, 389, 391, 392, 393, 394, 395, 401, 402, 403, 405, 407, 408, 409, 411, 412, 415, 416, 417, 419, 420, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 495, 497, 499, 500, 501, 502, 505, 508, 509, 516, 517, 519, 520, 521, 522, 523, 536, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 560, 562, 567, 571, 573, 578, 581, 584, 587, 590, 595, 596, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 620, 622, 625, 626, 630, 631, 632, 633, 634, 635, 636, 638, 639, 644, 648, 651, 652, 653, 655, 657, 660, 662, 667, 669, 670, 675, 676, 677, 679, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 699, 700, 702, 703, 705, 706, 707, 709, 712, 717, 718, 719, 720, 721, 723, 734, 735, 738, 739, 743, 744, 747, 748, 749, 753, 755, 756, 757, 759, 761, 765, 767, 768, 769, 770, 775, 777, 779, 785, 788, 789, 790, 791, 792, 793, 794, 797, 799, 802, 804, 806, 807, 809, 813, 816, 820, 824, 826, 828, 830, 832, 834, 836, 838, 839, 840, 845, 846, 848, 850, 851, 852, 854, 855, 863, 864, 865, 866, 867, 868, 870, 871, 872, 875, 876, 877, 878, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 897, 898, 899, 900, 901, 902, 903, 905, 906, 909, 910, 912, 913, 914, 918, 920, 922, 925, 927, 930, 931, 934, 935, 936, 937, 938, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 953, 958, 965, 968, 970, 972, 975, 976, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 992, 995, 996, 997, 998, 999, 1000, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1106, 1109, 1112, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1177, 1179, 1183, 1185, 1187, 1190, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1207], "41": [7, 178, 183, 194, 195, 206, 216, 221, 223, 226, 229, 232, 234, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 502, 758, 789, 828, 920, 943, 1048, 1092, 1094, 1141, 1172], "print": [7, 62, 169, 192, 193, 195, 196, 206, 209, 211, 212, 216, 221, 223, 224, 225, 226, 229, 232, 233, 237, 238, 239, 242, 245, 246, 248, 253, 255, 258, 261, 264, 265, 268, 271, 274, 283, 286, 290, 291, 293, 303, 307, 313, 318, 324, 325, 329, 335, 340, 341, 347, 351, 362, 363, 364, 365, 366, 396, 400, 402, 471, 482, 626, 653, 676, 723, 737, 745, 747, 875, 876, 882, 898, 900, 901, 942, 990, 1000, 1031, 1034, 1035, 1036, 1038, 1039, 1040, 1044, 1046, 1048, 1049, 1052, 1054, 1057, 1062, 1063, 1064, 1065, 1070, 1071, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1086, 1087, 1102, 1104, 1114, 1115, 1116, 1118, 1119, 1125, 1140, 1145, 1149, 1153, 1162], "ja": [7, 23, 182, 206, 223, 226, 229, 242, 245, 274, 341], "basta": [7, 173, 226, 1067], "2": [7, 29, 32, 42, 50, 60, 62, 66, 74, 106, 108, 117, 124, 125, 127, 149, 154, 166, 169, 174, 176, 182, 183, 184, 190, 192, 193, 194, 195, 196, 207, 211, 217, 218, 221, 222, 226, 229, 232, 233, 237, 238, 239, 242, 247, 248, 253, 255, 258, 259, 261, 265, 268, 271, 273, 274, 283, 286, 290, 291, 293, 297, 303, 307, 313, 316, 318, 321, 325, 329, 332, 335, 341, 347, 351, 356, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 379, 387, 400, 401, 413, 419, 420, 440, 444, 471, 477, 478, 479, 480, 483, 484, 485, 489, 490, 491, 492, 493, 495, 517, 541, 542, 545, 551, 553, 554, 557, 561, 563, 564, 565, 566, 568, 569, 573, 588, 590, 597, 598, 599, 605, 607, 608, 611, 613, 614, 615, 616, 617, 622, 627, 631, 635, 636, 637, 638, 639, 644, 648, 652, 653, 654, 655, 660, 670, 675, 695, 698, 699, 700, 702, 705, 708, 710, 712, 713, 715, 717, 720, 721, 723, 733, 734, 737, 738, 743, 744, 745, 747, 749, 750, 753, 754, 755, 756, 757, 758, 767, 769, 771, 778, 789, 791, 797, 838, 865, 866, 873, 876, 877, 880, 881, 882, 894, 917, 920, 923, 924, 929, 931, 933, 935, 939, 942, 943, 955, 958, 960, 961, 962, 964, 965, 968, 969, 970, 971, 972, 974, 976, 978, 979, 991, 993, 996, 998, 1000, 1011, 1012, 1027, 1029, 1031, 1032, 1034, 1035, 1037, 1040, 1042, 1044, 1048, 1052, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1072, 1077, 1078, 1083, 1088, 1091, 1093, 1094, 1095, 1096, 1098, 1102, 1105, 1115, 1119, 1122, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1137, 1140, 1141, 1142, 1147, 1154, 1155, 1156, 1158, 1159, 1160, 1164, 1165, 1170, 1171, 1172, 1176, 1177, 1184, 1192, 1193, 1200, 1203, 1204, 1206, 1207, 1208], "1234": [7, 32, 226, 229, 239, 248, 253, 255, 307, 335, 347, 365, 953, 961, 1010, 1067], "3": [7, 32, 60, 62, 65, 68, 108, 111, 112, 113, 114, 115, 117, 125, 131, 149, 151, 154, 169, 178, 183, 184, 188, 190, 192, 193, 194, 195, 196, 203, 205, 206, 211, 217, 218, 221, 222, 223, 226, 229, 232, 233, 237, 239, 241, 242, 247, 248, 251, 253, 255, 258, 261, 265, 268, 270, 272, 273, 274, 276, 283, 286, 290, 291, 293, 297, 303, 307, 313, 318, 320, 321, 326, 329, 335, 341, 347, 351, 363, 364, 365, 366, 370, 371, 372, 375, 387, 401, 413, 414, 415, 428, 437, 438, 459, 460, 468, 471, 473, 478, 479, 480, 483, 488, 499, 516, 517, 541, 542, 546, 549, 551, 552, 553, 554, 556, 557, 558, 559, 563, 564, 565, 566, 568, 569, 571, 573, 590, 597, 599, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 622, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 644, 660, 670, 675, 677, 698, 699, 700, 702, 710, 712, 713, 717, 718, 719, 720, 721, 723, 738, 743, 745, 747, 749, 754, 755, 757, 758, 771, 774, 789, 796, 802, 838, 876, 881, 895, 898, 920, 922, 924, 929, 931, 937, 939, 942, 943, 944, 946, 955, 956, 958, 960, 961, 962, 965, 969, 970, 971, 979, 980, 981, 985, 991, 993, 996, 999, 1000, 1001, 1004, 1006, 1009, 1010, 1012, 1013, 1014, 1032, 1034, 1035, 1037, 1040, 1042, 1044, 1048, 1055, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1068, 1070, 1072, 1073, 1076, 1078, 1083, 1084, 1085, 1087, 1091, 1092, 1094, 1111, 1115, 1119, 1125, 1126, 1128, 1132, 1134, 1137, 1140, 1141, 1142, 1145, 1148, 1154, 1155, 1156, 1158, 1159, 1161, 1165, 1170, 1171, 1172, 1179, 1184, 1186, 1188, 1190, 1193, 1196, 1200], "decim": [7, 226, 261, 265, 307, 335, 351, 356, 393, 479, 1067, 1081], "5": [7, 32, 60, 62, 66, 114, 115, 116, 122, 132, 134, 139, 149, 165, 169, 176, 178, 184, 194, 195, 196, 201, 204, 207, 211, 217, 218, 221, 223, 224, 226, 229, 230, 232, 233, 236, 238, 239, 240, 242, 243, 245, 246, 248, 253, 255, 256, 258, 261, 265, 268, 270, 271, 273, 274, 278, 282, 283, 286, 290, 293, 297, 303, 306, 307, 312, 313, 318, 321, 325, 329, 335, 340, 341, 347, 351, 356, 362, 364, 365, 370, 375, 383, 384, 387, 393, 395, 400, 417, 419, 428, 455, 460, 464, 473, 478, 482, 485, 496, 499, 502, 517, 525, 541, 544, 546, 551, 552, 554, 555, 556, 557, 558, 559, 571, 572, 577, 590, 597, 598, 599, 605, 609, 610, 613, 614, 616, 617, 638, 648, 675, 695, 699, 702, 703, 705, 706, 712, 714, 715, 717, 732, 733, 745, 747, 754, 755, 756, 758, 771, 781, 789, 811, 816, 839, 867, 869, 920, 924, 929, 935, 942, 943, 944, 960, 962, 970, 979, 996, 1012, 1024, 1032, 1034, 1035, 1038, 1040, 1044, 1048, 1055, 1056, 1061, 1066, 1067, 1068, 1072, 1073, 1075, 1081, 1083, 1087, 1088, 1092, 1115, 1119, 1126, 1128, 1132, 1134, 1137, 1141, 1142, 1145, 1150, 1161, 1165, 1170, 1172, 1177, 1181, 1187, 1189, 1194, 1195, 1200, 1201], "hexadecim": [7, 226, 265, 412, 943, 1067, 1080, 1081], "16": [7, 62, 169, 178, 180, 181, 183, 192, 194, 195, 200, 201, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 287, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 362, 363, 364, 365, 366, 370, 375, 376, 387, 411, 455, 462, 473, 480, 617, 675, 754, 816, 828, 920, 937, 942, 944, 955, 960, 961, 969, 978, 1012, 1014, 1026, 1027, 1032, 1035, 1039, 1042, 1067, 1094, 1141, 1142, 1172], "7": [7, 32, 42, 62, 170, 173, 176, 178, 183, 190, 193, 194, 195, 196, 206, 211, 218, 221, 223, 224, 226, 229, 230, 232, 236, 238, 239, 240, 242, 243, 245, 248, 253, 255, 258, 261, 265, 268, 270, 271, 273, 274, 282, 283, 286, 290, 291, 293, 297, 303, 307, 312, 313, 318, 321, 325, 329, 335, 341, 347, 351, 355, 364, 365, 370, 375, 376, 387, 401, 405, 419, 446, 455, 479, 480, 483, 488, 496, 516, 517, 541, 544, 549, 553, 554, 556, 557, 558, 559, 571, 578, 586, 590, 597, 605, 606, 610, 612, 613, 614, 616, 637, 641, 644, 653, 670, 679, 699, 707, 732, 733, 734, 738, 745, 771, 785, 786, 787, 869, 870, 881, 882, 898, 920, 929, 937, 942, 943, 944, 961, 969, 993, 996, 1005, 1006, 1009, 1010, 1013, 1014, 1035, 1038, 1044, 1048, 1056, 1061, 1066, 1067, 1068, 1071, 1073, 1075, 1076, 1092, 1104, 1122, 1125, 1137, 1141, 1142, 1145, 1150, 1161, 1170], "0x1234": [7, 226, 1067], "4660": [7, 226, 248, 1067], "8": [7, 32, 62, 111, 169, 175, 176, 180, 184, 192, 193, 194, 195, 196, 200, 205, 206, 209, 211, 218, 221, 223, 224, 226, 229, 230, 232, 233, 238, 239, 240, 242, 243, 245, 246, 248, 252, 253, 255, 258, 261, 265, 268, 270, 271, 274, 282, 283, 286, 289, 290, 293, 297, 303, 307, 310, 312, 313, 318, 321, 324, 325, 329, 335, 341, 347, 351, 354, 362, 363, 364, 365, 370, 387, 411, 455, 467, 473, 479, 483, 485, 488, 516, 548, 583, 590, 597, 602, 605, 610, 614, 616, 617, 706, 754, 771, 789, 811, 834, 838, 869, 875, 883, 920, 922, 929, 935, 936, 937, 938, 942, 943, 1012, 1029, 1035, 1038, 1044, 1067, 1068, 1073, 1081, 1086, 1091, 1092, 1098, 1134, 1137, 1141, 1142, 1148, 1165, 1172], "bin\u00e4r": [7, 23, 226, 229], "9": [7, 8, 32, 60, 62, 124, 169, 174, 178, 181, 188, 192, 193, 194, 195, 196, 204, 206, 208, 211, 212, 213, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 236, 238, 239, 240, 242, 245, 246, 248, 253, 255, 258, 261, 262, 265, 268, 271, 273, 274, 283, 286, 289, 290, 293, 297, 298, 300, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 362, 363, 365, 366, 370, 375, 387, 393, 395, 401, 410, 413, 471, 479, 496, 516, 525, 544, 590, 592, 608, 617, 707, 717, 745, 771, 816, 894, 917, 920, 942, 943, 944, 960, 996, 1032, 1042, 1048, 1061, 1062, 1068, 1073, 1075, 1083, 1087, 1092, 1099, 1104, 1141, 1142, 1150, 1159, 1165, 1170], "0b100110": [7, 226, 255, 1067], "38": [7, 23, 169, 176, 183, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 500, 516, 541, 608, 754, 789, 920, 1015, 1024, 1141, 1142], "arithmet": [7, 110, 193, 226, 231, 251, 254, 266, 281, 298, 370, 394, 408, 415, 416, 422, 423, 432, 438, 439, 445, 449, 452, 454, 455, 456, 465, 469, 474, 475, 494, 503, 515, 516, 529, 543, 591, 595, 625, 629, 630, 633, 638, 695, 697, 735, 744, 745, 788, 790, 791], "man": [7, 32, 37, 126, 173, 175, 181, 182, 190, 196, 200, 206, 208, 216, 217, 223, 226, 229, 234, 236, 238, 249, 255, 262, 265, 289, 310, 329, 370, 375, 377, 388, 485, 578, 587, 599, 761, 789, 797, 816, 864, 865, 866, 869, 870, 873, 880, 881, 882, 883, 884, 888, 890, 892, 895, 899, 900, 901, 917, 920, 921, 923, 924, 926, 927, 929, 930, 944, 951, 954, 955, 956, 958, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 974, 980, 981, 983, 985, 987, 988, 991, 993, 999, 1006, 1009, 1010, 1012, 1028, 1029, 1185, 1186, 1187, 1189, 1197, 1200, 1202, 1203, 1204, 1206, 1207, 1208], "behaviour": [7, 226, 234, 824, 970, 1086], "erzwingen": [7, 206, 218, 226], "floor": [7, 38, 218, 226, 229, 233, 245, 246, 248, 253, 255, 261, 265, 335, 365, 1055, 1067], "divis": [7, 36, 38, 218, 226, 229, 245, 248, 253, 255, 261, 365, 393, 414, 516, 517, 531, 1055, 1067, 1122], "modul": [7, 12, 21, 23, 29, 66, 152, 163, 169, 176, 178, 183, 195, 201, 203, 205, 208, 209, 210, 211, 212, 219, 220, 226, 229, 233, 235, 240, 242, 243, 246, 248, 249, 252, 253, 255, 256, 258, 259, 261, 262, 264, 265, 267, 268, 272, 273, 276, 282, 284, 285, 286, 291, 293, 301, 302, 305, 307, 311, 312, 315, 316, 317, 320, 325, 327, 329, 331, 332, 333, 334, 335, 340, 341, 345, 346, 347, 349, 350, 351, 355, 356, 365, 371, 372, 373, 375, 381, 388, 433, 477, 479, 483, 484, 490, 492, 493, 505, 694, 735, 790, 791, 794, 795, 797, 798, 800, 802, 803, 804, 805, 807, 808, 815, 818, 819, 823, 829, 834, 835, 839, 840, 842, 847, 850, 853, 856, 859, 934, 935, 942, 944, 1036, 1037, 1051, 1060, 1061, 1064, 1065, 1076, 1078, 1084, 1087, 1088, 1090, 1093, 1094, 1095, 1096, 1130, 1131, 1132, 1133, 1135, 1136, 1138, 1139, 1143, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1164, 1165, 1167, 1169, 1170, 1173, 1174, 1180, 1192, 1194, 1195, 1201, 1205, 1208], "restklassen": [7, 226], "rest": [7, 17, 40, 180, 182, 192, 216, 226, 229, 233, 235, 253, 261, 293, 307, 325, 328, 365, 391, 401, 426, 480, 628, 629, 690, 747, 826, 877, 938, 968, 996, 1055, 1058, 1082, 1112, 1116, 1145, 1160, 1192, 1208], "14": [7, 62, 166, 170, 183, 194, 195, 206, 211, 218, 221, 223, 225, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 273, 274, 277, 283, 286, 290, 293, 297, 303, 307, 313, 324, 325, 327, 329, 335, 341, 347, 351, 362, 363, 365, 366, 367, 387, 479, 490, 491, 493, 502, 596, 670, 694, 706, 745, 747, 755, 757, 789, 880, 883, 895, 920, 922, 942, 943, 944, 946, 961, 970, 1000, 1012, 1013, 1014, 1033, 1049, 1136, 1141, 1142, 1189, 1200], "oper": [7, 29, 33, 34, 35, 38, 75, 80, 82, 99, 110, 139, 143, 172, 173, 175, 179, 191, 192, 194, 197, 200, 205, 209, 210, 211, 212, 214, 218, 223, 226, 231, 232, 233, 234, 235, 240, 242, 246, 247, 250, 253, 255, 256, 260, 263, 266, 269, 271, 274, 276, 286, 293, 298, 299, 300, 301, 302, 303, 306, 307, 323, 327, 328, 330, 335, 341, 346, 347, 356, 370, 375, 393, 401, 411, 417, 432, 437, 438, 439, 443, 445, 446, 449, 452, 454, 456, 458, 461, 465, 467, 469, 474, 475, 497, 498, 517, 537, 543, 555, 560, 562, 590, 595, 596, 597, 602, 603, 607, 610, 614, 615, 616, 617, 618, 621, 622, 624, 630, 638, 639, 640, 646, 650, 651, 654, 659, 662, 663, 675, 680, 687, 688, 689, 690, 691, 692, 695, 697, 703, 705, 706, 708, 712, 717, 719, 720, 721, 723, 726, 730, 733, 735, 737, 738, 739, 740, 745, 747, 754, 755, 758, 765, 769, 771, 780, 781, 782, 788, 789, 790, 791, 800, 805, 808, 809, 815, 819, 829, 838, 840, 842, 847, 853, 854, 856, 859, 865, 866, 869, 898, 904, 929, 930, 934, 942, 943, 944, 955, 960, 961, 962, 963, 964, 965, 976, 979, 983, 985, 1005, 1009, 1013, 1026, 1029, 1037, 1040, 1047, 1048, 1051, 1068, 1072, 1076, 1081, 1082, 1087, 1102, 1135, 1137, 1146, 1155, 1177, 1182, 1189, 1195], "preced": [7, 35, 38, 226, 248, 253, 261, 266, 269, 393, 399, 414, 415, 423, 428, 432, 437, 439, 443, 445, 447, 449, 452, 456, 465, 469, 474, 475, 626, 630, 697, 735, 788, 790, 791, 898, 947], "implizit": [7, 206, 226, 303, 1187, 1204], "klammerung": [7, 226, 926], "durch": [7, 149, 181, 182, 190, 196, 200, 208, 216, 226, 258, 268, 351, 370, 375, 388, 926, 1184, 1185, 1187], "pr\u00e4zedenz": [7, 206, 218, 226], "6666666666666665": [7, 226], "frage": [7, 182, 192, 196, 223, 226, 229, 235, 255, 388, 1194, 1201, 1208], "6665": [7, 226], "6667": [7, 226], "ieee": [7, 226], "floatingpoint": [7, 226, 414, 415, 538, 838, 1114], "representaion": [7, 226], "true": [7, 35, 38, 50, 58, 62, 112, 113, 116, 120, 121, 122, 123, 154, 174, 176, 178, 183, 192, 193, 194, 195, 205, 206, 211, 216, 221, 223, 224, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 253, 255, 258, 259, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 356, 362, 365, 399, 415, 416, 428, 440, 443, 483, 541, 605, 613, 638, 666, 677, 679, 700, 723, 724, 725, 726, 728, 729, 730, 731, 756, 765, 767, 769, 771, 789, 826, 828, 858, 871, 898, 911, 979, 985, 990, 991, 994, 996, 997, 1005, 1006, 1009, 1018, 1033, 1039, 1040, 1044, 1046, 1047, 1048, 1049, 1052, 1055, 1068, 1069, 1071, 1072, 1073, 1076, 1082, 1085, 1086, 1150, 1154, 1156, 1161, 1176, 1177, 1179], "zahlen": [7, 216, 217, 226, 1187, 1200], "vergleichen": [7, 206, 226], "21": [7, 99, 101, 104, 107, 108, 126, 148, 180, 183, 194, 195, 206, 211, 214, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 365, 369, 387, 479, 789, 828, 880, 920, 943, 944, 955, 1026, 1141, 1142], "ab": [7, 23, 32, 181, 183, 206, 216, 217, 226, 261, 265, 268, 283, 286, 307, 335, 597, 599, 607, 616, 702, 758, 1142, 1194, 1200], "0001": [7, 176, 194, 226], "aber": [7, 23, 37, 182, 190, 192, 196, 206, 216, 217, 221, 224, 226, 255, 258, 261, 313, 388, 926, 1185, 1187, 1189, 1196, 1203, 1207, 1208], "unendlich": [7, 8, 217, 226, 227], "lang": [7, 178, 181, 182, 191, 226, 361, 362, 379, 388, 482, 1186, 1202, 1207], "22": [7, 62, 99, 107, 108, 126, 175, 178, 183, 185, 194, 195, 206, 211, 213, 216, 221, 222, 223, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 314, 317, 318, 320, 325, 335, 341, 347, 351, 362, 364, 365, 366, 387, 789, 883, 920, 944, 945, 953, 954, 969, 1013, 1014, 1099, 1136, 1141, 1142, 1201], "1000000": [7, 175, 206, 226, 303, 341, 365, 471, 935, 943], "23": [7, 62, 126, 176, 183, 184, 185, 191, 194, 195, 196, 206, 211, 213, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 259, 261, 264, 265, 268, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 387, 443, 479, 482, 723, 773, 883, 920, 942, 943, 1024, 1094, 1099, 1141, 1142, 1172, 1179], "32": [7, 183, 184, 190, 192, 195, 206, 211, 216, 221, 223, 226, 229, 232, 235, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 393, 395, 411, 416, 455, 496, 502, 525, 541, 554, 834, 863, 869, 894, 920, 936, 938, 1013, 1014, 1024, 1092], "4294967295": [7, 226, 245, 253, 261], "24": [7, 62, 99, 107, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 176, 183, 191, 194, 195, 196, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 307, 313, 318, 325, 335, 341, 347, 351, 362, 363, 365, 366, 387, 490, 688, 690, 712, 754, 755, 791, 838, 865, 866, 920, 942, 1029, 1055, 1141, 1142], "64": [7, 175, 178, 183, 206, 211, 216, 221, 223, 226, 229, 232, 234, 235, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 399, 411, 416, 440, 455, 461, 464, 490, 834, 976, 979, 1002, 1009, 1012, 1029, 1094, 1141, 1185], "18446744073709551615": [7, 206, 216, 226, 229, 242, 245, 253, 255, 261, 265, 268, 271, 293, 325, 347, 365], "overflow": [7, 42, 44, 50, 175, 216, 226, 242, 245, 246, 248, 251, 252, 258, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 416, 418, 454, 463, 875], "wenn": [7, 23, 181, 182, 187, 192, 200, 206, 208, 216, 217, 223, 226, 262, 268, 303, 925, 1184, 1186, 1187, 1194, 1196, 1197, 1200, 1203, 1208], "verwendet": [7, 23, 196, 200, 206, 226, 268, 347, 1185, 1187, 1197, 1201, 1203, 1208], "wert": [7, 23, 217, 218, 223, 226, 258, 261, 265, 268, 274, 303, 307, 313, 1200, 1208], "w\u00e4re": [7, 190, 216, 226, 262, 1189, 1196], "dort": [7, 149, 155, 182, 190, 192, 200, 216, 217, 226, 388, 1200, 1206, 1208], "25": [7, 62, 99, 183, 184, 194, 195, 196, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 259, 261, 264, 265, 268, 271, 273, 274, 283, 286, 290, 293, 297, 303, 307, 313, 320, 325, 329, 335, 341, 347, 351, 356, 365, 366, 387, 589, 590, 712, 749, 773, 818, 920, 944, 1012, 1038, 1081, 1126, 1128, 1132, 1134, 1141, 1142, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "18446744073709551616": [7, 206, 216, 226, 229, 242, 245, 253, 255, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 365], "26": [7, 117, 125, 176, 178, 183, 184, 185, 194, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 278, 283, 286, 290, 293, 297, 307, 313, 318, 325, 329, 335, 341, 347, 351, 365, 369, 387, 589, 590, 717, 733, 898, 920, 944, 976, 978, 979, 1012, 1014, 1055, 1141, 1142, 1165, 1201], "1000": [7, 23, 206, 216, 226, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 554, 555, 573, 648, 695, 769, 848, 873, 875, 880, 894, 895, 922, 923, 927, 929, 937, 955, 962, 970, 991, 996, 1000, 1026, 1033, 1082, 1115], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 206, 216, 226, 229, 242, 265, 268, 286, 313, 341], "27": [7, 62, 99, 126, 183, 185, 194, 195, 206, 216, 221, 223, 225, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 264, 265, 268, 271, 273, 274, 283, 286, 290, 293, 297, 303, 307, 313, 320, 325, 329, 335, 341, 347, 351, 362, 364, 365, 367, 387, 479, 553, 578, 745, 920, 942, 944, 1012, 1141, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "10000": [7, 45, 226, 245, 248, 261, 293, 335, 1036, 1052], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 226, 245, 261, 293, 335], "hallo": [7, 206, 216, 221, 224, 226, 229, 237, 245, 248, 255, 258, 261, 265, 268, 274, 286, 290, 293, 313, 325, 329, 335, 341, 365, 413, 605, 789, 869, 917, 945, 958, 961, 967], "39": [7, 154, 170, 183, 192, 194, 195, 206, 211, 216, 221, 223, 225, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 321, 325, 329, 335, 341, 347, 351, 362, 363, 364, 365, 366, 367, 516, 670, 717, 883, 1012, 1141, 1142], "30": [7, 23, 62, 99, 108, 111, 125, 126, 169, 170, 175, 183, 185, 195, 205, 206, 211, 216, 221, 223, 225, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 297, 303, 307, 310, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 367, 387, 400, 414, 479, 541, 545, 580, 581, 586, 587, 589, 590, 706, 707, 754, 755, 756, 776, 778, 894, 920, 926, 942, 943, 944, 1000, 1026, 1038, 1039, 1092, 1141, 1145, 1153, 1170, 1179], "eingebettet": [7, 226], "34": [7, 183, 184, 192, 195, 206, 211, 216, 221, 223, 225, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 290, 291, 293, 297, 303, 307, 313, 318, 321, 325, 329, 335, 341, 347, 351, 364, 365, 366, 367, 502, 516, 520, 521, 522, 523, 535, 536, 537, 635, 636, 637, 638, 639, 644, 676, 895, 898, 920, 1048, 1067, 1141, 1142], "31": [7, 108, 126, 176, 178, 183, 195, 206, 211, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 256, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 364, 365, 387, 451, 479, 486, 732, 920, 978, 1010, 1027, 1061, 1094, 1141], "eingenbettet": [7, 226], "mississippi": [7, 226, 229, 238, 242, 245, 253, 255, 261, 265, 271, 274, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351, 675], "count": [7, 29, 62, 89, 91, 124, 131, 173, 185, 188, 226, 229, 230, 233, 238, 242, 245, 248, 253, 255, 258, 261, 265, 271, 274, 286, 292, 293, 307, 313, 325, 329, 335, 341, 347, 351, 399, 400, 401, 402, 415, 471, 527, 553, 581, 695, 745, 770, 791, 794, 797, 798, 799, 800, 802, 805, 808, 809, 815, 819, 829, 842, 847, 853, 856, 859, 869, 878, 898, 920, 931, 934, 964, 967, 974, 985, 1006, 1082, 1096, 1106, 1109, 1117, 1120, 1135, 1142, 1150, 1190], "ss": [7, 32, 226, 229, 238, 242, 245, 253, 255, 261, 265, 271, 274, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351, 675], "35": [7, 169, 183, 195, 206, 213, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 366, 516, 545, 688, 690, 706, 1048, 1141], "find": [7, 17, 42, 44, 47, 48, 53, 126, 172, 173, 174, 175, 179, 184, 189, 201, 202, 203, 213, 215, 226, 229, 233, 235, 238, 242, 246, 248, 251, 253, 255, 258, 261, 265, 268, 271, 274, 279, 286, 288, 291, 293, 298, 300, 307, 309, 310, 313, 315, 325, 327, 329, 331, 335, 337, 341, 347, 351, 353, 354, 355, 364, 370, 375, 458, 464, 471, 483, 491, 498, 505, 526, 531, 532, 535, 536, 537, 538, 543, 560, 561, 590, 595, 598, 612, 614, 616, 617, 638, 640, 651, 654, 656, 659, 663, 675, 688, 690, 692, 695, 738, 742, 787, 791, 804, 843, 864, 865, 866, 868, 873, 877, 878, 880, 881, 882, 884, 898, 925, 928, 931, 934, 943, 944, 955, 983, 1012, 1015, 1029, 1059, 1063, 1074, 1082, 1143, 1180, 1192, 1194, 1195, 1196, 1201], "36": [7, 116, 122, 169, 174, 178, 183, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 290, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 370, 375, 483, 496, 502, 520, 544, 547, 548, 549, 553, 554, 555, 705, 754, 755, 756, 771, 789, 920, 942, 1048, 1125], "37": [7, 132, 134, 183, 194, 195, 206, 207, 211, 216, 221, 223, 226, 229, 232, 234, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 365, 366, 520, 775, 777, 779, 781, 1048, 1141, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "capit": [7, 38, 226, 229, 238, 245, 255, 261, 286, 307, 364, 898, 1094], "zeil": [7, 192, 206, 216, 223, 226, 229, 232, 238, 242, 261, 265, 283, 286, 325, 329, 341, 365], "nnoch": [7, 223, 226, 242], "some": [7, 17, 21, 108, 160, 172, 173, 174, 175, 177, 180, 183, 184, 188, 194, 197, 202, 205, 209, 212, 214, 225, 226, 232, 234, 242, 248, 249, 254, 260, 261, 265, 277, 278, 280, 286, 289, 292, 293, 295, 299, 301, 302, 309, 327, 328, 334, 335, 337, 353, 388, 412, 446, 457, 473, 496, 502, 573, 598, 600, 620, 638, 651, 654, 708, 717, 745, 753, 755, 765, 768, 790, 791, 797, 802, 811, 826, 834, 838, 855, 857, 875, 880, 935, 943, 944, 965, 968, 994, 996, 998, 1006, 1035, 1037, 1064, 1080, 1086, 1133, 1151, 1170, 1192, 1193], "name": [7, 23, 39, 40, 57, 112, 113, 114, 115, 116, 124, 126, 131, 144, 151, 154, 165, 169, 172, 173, 175, 176, 177, 180, 187, 188, 193, 195, 197, 202, 205, 206, 209, 212, 214, 216, 221, 226, 229, 232, 233, 244, 246, 247, 248, 251, 253, 255, 258, 263, 265, 268, 283, 286, 290, 291, 293, 297, 307, 329, 335, 341, 347, 351, 355, 361, 364, 365, 366, 381, 403, 417, 423, 431, 432, 438, 439, 445, 449, 452, 456, 457, 460, 462, 465, 469, 471, 473, 474, 475, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 500, 502, 517, 521, 522, 523, 528, 531, 535, 536, 537, 552, 554, 557, 562, 567, 599, 609, 611, 613, 677, 690, 696, 697, 707, 708, 717, 735, 737, 741, 747, 755, 788, 789, 790, 791, 794, 802, 806, 816, 820, 832, 834, 858, 864, 865, 866, 869, 877, 878, 880, 883, 884, 898, 904, 920, 926, 931, 938, 942, 943, 944, 946, 947, 954, 955, 958, 960, 964, 972, 1005, 1009, 1012, 1013, 1014, 1024, 1026, 1027, 1029, 1030, 1031, 1034, 1036, 1043, 1048, 1050, 1053, 1057, 1058, 1060, 1061, 1065, 1066, 1074, 1076, 1078, 1080, 1081, 1082, 1087, 1092, 1094, 1099, 1115, 1116, 1126, 1132, 1134, 1142, 1145, 1148, 1149, 1150, 1155, 1156, 1158, 1159, 1160, 1161, 1170, 1177, 1179, 1189, 1193, 1195, 1196], "directori": [7, 17, 44, 60, 99, 101, 102, 104, 111, 126, 139, 143, 148, 169, 172, 173, 174, 175, 184, 188, 199, 204, 207, 213, 225, 226, 232, 233, 234, 235, 242, 245, 246, 248, 258, 261, 273, 278, 279, 280, 288, 289, 301, 302, 306, 309, 310, 315, 323, 327, 331, 341, 352, 353, 354, 355, 356, 370, 375, 381, 383, 384, 437, 471, 473, 478, 481, 485, 487, 489, 491, 492, 494, 497, 499, 501, 515, 516, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 574, 577, 580, 583, 586, 589, 592, 595, 686, 768, 790, 791, 816, 838, 840, 860, 864, 867, 868, 869, 871, 872, 873, 875, 877, 878, 880, 881, 882, 884, 885, 886, 887, 892, 893, 895, 897, 898, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 918, 922, 927, 934, 942, 943, 944, 946, 951, 955, 957, 960, 963, 970, 971, 972, 973, 975, 978, 980, 989, 992, 995, 997, 1001, 1004, 1008, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1043, 1063, 1115, 1124, 1125, 1172, 1176, 1181, 1192, 1196, 1205], "multilin": [7, 216, 226, 241, 244, 248, 253, 261, 265, 325, 336, 370, 438, 1036, 1064], "jetzt": [7, 181, 192, 196, 206, 216, 223, 226, 236, 265, 321, 341, 351], "l": [7, 32, 38, 60, 62, 66, 101, 126, 148, 176, 180, 184, 192, 193, 195, 196, 201, 206, 211, 216, 221, 223, 224, 225, 226, 229, 232, 237, 238, 242, 245, 248, 251, 253, 255, 258, 261, 265, 268, 271, 274, 279, 283, 286, 288, 289, 293, 303, 307, 309, 310, 313, 325, 329, 335, 338, 341, 347, 351, 353, 354, 362, 364, 365, 370, 375, 443, 444, 451, 455, 467, 472, 473, 479, 486, 489, 490, 505, 517, 543, 590, 595, 614, 644, 695, 768, 789, 790, 791, 802, 816, 838, 839, 865, 866, 867, 868, 869, 871, 872, 875, 877, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 902, 905, 906, 909, 910, 912, 913, 914, 916, 917, 918, 922, 927, 931, 934, 935, 937, 942, 943, 944, 945, 946, 953, 955, 960, 961, 963, 965, 966, 968, 969, 970, 973, 975, 978, 981, 989, 992, 995, 996, 997, 1006, 1010, 1012, 1013, 1014, 1015, 1024, 1026, 1027, 1032, 1034, 1055, 1063, 1065, 1068, 1069, 1073, 1075, 1083, 1092, 1119, 1179, 1196], "44": [7, 169, 176, 183, 195, 206, 216, 221, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 776, 944, 1165], "45": [7, 29, 51, 53, 55, 56, 74, 75, 76, 89, 92, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 154, 162, 165, 178, 181, 183, 195, 205, 206, 209, 211, 216, 221, 223, 226, 229, 230, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 356, 357, 358, 359, 360, 361, 364, 365, 370, 375, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 484, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 635, 636, 637, 638, 639, 640, 644, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 711, 722, 735, 736, 746, 751, 760, 768, 772, 776, 788, 789, 790, 791, 795, 798, 800, 803, 805, 808, 810, 814, 815, 817, 819, 821, 823, 829, 831, 833, 835, 842, 844, 847, 849, 853, 856, 859, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 941, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 977, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1143, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174, 1175], "46": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 774, 920, 944, 960, 1141, 1142], "47": [7, 176, 178, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 745, 931, 996, 1024, 1081, 1141], "try": [7, 27, 126, 131, 139, 169, 172, 173, 175, 180, 192, 195, 205, 206, 209, 213, 216, 221, 223, 226, 229, 232, 235, 238, 240, 242, 245, 248, 251, 253, 255, 258, 261, 265, 268, 270, 271, 273, 274, 277, 278, 280, 282, 283, 286, 289, 290, 293, 300, 301, 302, 303, 306, 307, 313, 324, 325, 329, 335, 337, 341, 347, 351, 356, 363, 364, 365, 366, 370, 374, 375, 385, 463, 467, 493, 497, 504, 521, 526, 535, 543, 551, 560, 562, 595, 603, 621, 624, 640, 646, 650, 655, 659, 662, 663, 680, 682, 684, 687, 688, 689, 690, 691, 692, 723, 731, 735, 745, 751, 755, 769, 771, 785, 787, 789, 790, 791, 843, 846, 943, 964, 1009, 1033, 1040, 1094, 1137, 1143, 1154, 1155, 1159, 1172], "except": [7, 21, 29, 43, 46, 60, 62, 76, 112, 113, 154, 174, 178, 184, 192, 193, 200, 205, 206, 209, 210, 212, 214, 216, 221, 223, 226, 229, 233, 234, 235, 238, 240, 242, 245, 246, 249, 250, 253, 255, 259, 260, 263, 265, 268, 270, 271, 275, 283, 286, 290, 293, 301, 302, 303, 306, 307, 313, 323, 324, 325, 327, 328, 329, 335, 341, 347, 351, 355, 357, 363, 364, 365, 366, 370, 375, 383, 384, 403, 455, 458, 492, 497, 498, 505, 532, 543, 560, 562, 595, 624, 640, 646, 650, 659, 662, 663, 667, 680, 687, 688, 690, 691, 692, 696, 699, 723, 731, 752, 754, 755, 766, 771, 791, 806, 838, 871, 876, 942, 996, 1010, 1033, 1037, 1040, 1043, 1046, 1049, 1059, 1061, 1064, 1082, 1084, 1089, 1135, 1137, 1154, 1159, 1172, 1182, 1189], "index": [7, 13, 23, 29, 39, 51, 53, 92, 112, 113, 169, 170, 179, 192, 194, 199, 204, 206, 207, 209, 210, 212, 214, 218, 219, 221, 224, 226, 229, 230, 232, 233, 235, 238, 240, 243, 245, 246, 248, 249, 251, 252, 254, 255, 256, 259, 261, 262, 264, 266, 267, 268, 270, 271, 273, 282, 283, 285, 286, 291, 292, 293, 295, 297, 299, 301, 302, 305, 306, 307, 311, 312, 314, 317, 320, 323, 324, 325, 327, 328, 329, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 351, 370, 377, 401, 417, 443, 471, 479, 574, 577, 580, 583, 586, 589, 590, 592, 630, 631, 633, 638, 677, 717, 745, 757, 771, 791, 834, 1001, 1004, 1008, 1059, 1060, 1072, 1075, 1082, 1088, 1090, 1091, 1092, 1094, 1096, 1109, 1115, 1120, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1151, 1153, 1155, 1157, 1158, 1160, 1164, 1174, 1176, 1181], "out": [7, 31, 44, 45, 50, 55, 62, 77, 87, 108, 116, 122, 124, 126, 128, 131, 139, 143, 159, 165, 166, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 188, 193, 194, 201, 202, 205, 209, 212, 213, 221, 226, 229, 234, 242, 248, 249, 251, 258, 261, 265, 269, 298, 324, 325, 347, 351, 356, 370, 376, 381, 392, 413, 431, 437, 438, 446, 457, 464, 471, 472, 473, 477, 479, 480, 485, 490, 493, 495, 497, 522, 523, 538, 541, 551, 567, 573, 590, 597, 599, 613, 628, 670, 673, 708, 723, 742, 745, 758, 769, 787, 806, 807, 816, 838, 846, 851, 865, 866, 869, 873, 877, 880, 884, 894, 925, 931, 935, 942, 943, 944, 961, 962, 978, 996, 999, 1009, 1010, 1012, 1024, 1029, 1036, 1040, 1080, 1081, 1088, 1115, 1118, 1145, 1150, 1152, 1158, 1160, 1161, 1165, 1171, 1190], "rang": [7, 29, 42, 62, 92, 110, 126, 127, 180, 193, 194, 195, 200, 209, 212, 214, 217, 218, 221, 224, 226, 229, 230, 233, 240, 241, 243, 244, 246, 247, 248, 251, 252, 254, 256, 257, 260, 261, 266, 267, 269, 270, 272, 274, 276, 284, 285, 286, 292, 294, 295, 302, 303, 305, 306, 308, 311, 312, 314, 323, 325, 327, 328, 329, 333, 334, 335, 338, 339, 340, 342, 345, 346, 348, 349, 350, 352, 362, 416, 443, 459, 461, 507, 541, 544, 545, 549, 573, 589, 590, 626, 628, 631, 634, 735, 785, 788, 790, 791, 802, 935, 942, 991, 997, 1000, 1032, 1035, 1037, 1042, 1044, 1046, 1048, 1058, 1059, 1067, 1071, 1088, 1093, 1094, 1095, 1096, 1106, 1108, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1147, 1150, 1158, 1160, 1189, 1190, 1200], "48": [7, 176, 183, 192, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 942], "append": [7, 154, 192, 193, 194, 195, 196, 206, 211, 213, 216, 221, 223, 224, 225, 226, 229, 232, 237, 238, 239, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 366, 479, 482, 572, 590, 632, 648, 660, 687, 799, 811, 826, 838, 865, 866, 880, 883, 904, 917, 942, 951, 964, 1000, 1032, 1038, 1039, 1052, 1068, 1073, 1076, 1078, 1083, 1086, 1087, 1114, 1162, 1165], "one": [7, 21, 27, 32, 40, 44, 45, 50, 61, 62, 63, 65, 82, 86, 87, 108, 112, 113, 124, 126, 127, 130, 131, 135, 139, 143, 144, 151, 157, 161, 163, 167, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 188, 193, 194, 195, 197, 202, 205, 206, 209, 211, 213, 216, 221, 223, 224, 225, 226, 229, 232, 234, 235, 242, 245, 248, 253, 255, 256, 258, 259, 261, 264, 265, 268, 271, 273, 283, 286, 289, 292, 293, 295, 297, 299, 303, 307, 312, 313, 315, 324, 329, 331, 335, 341, 347, 351, 355, 356, 361, 362, 367, 370, 376, 388, 393, 400, 411, 416, 418, 426, 431, 433, 434, 438, 441, 443, 448, 451, 459, 460, 461, 463, 467, 471, 473, 479, 480, 482, 483, 485, 487, 491, 492, 495, 496, 497, 502, 504, 505, 507, 508, 516, 521, 523, 541, 544, 546, 547, 551, 552, 554, 573, 584, 590, 601, 602, 610, 611, 613, 614, 615, 616, 617, 628, 629, 637, 648, 651, 655, 670, 677, 694, 695, 698, 699, 700, 703, 712, 723, 742, 744, 745, 753, 755, 756, 757, 758, 759, 765, 767, 769, 776, 789, 799, 806, 813, 816, 826, 832, 838, 846, 854, 858, 863, 864, 865, 871, 880, 882, 883, 898, 917, 931, 935, 937, 938, 939, 942, 943, 944, 945, 947, 951, 954, 955, 961, 962, 964, 965, 968, 971, 972, 974, 980, 981, 982, 983, 985, 988, 991, 994, 996, 997, 998, 1005, 1009, 1012, 1015, 1018, 1024, 1027, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1044, 1046, 1047, 1049, 1060, 1061, 1064, 1065, 1066, 1068, 1072, 1073, 1075, 1077, 1078, 1082, 1084, 1086, 1087, 1095, 1105, 1108, 1115, 1116, 1141, 1142, 1143, 1144, 1146, 1150, 1151, 1153, 1155, 1161, 1162, 1163, 1166, 1170, 1172, 1177, 1179, 1192, 1195], "49": [7, 183, 192, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 738, 883, 1024, 1038], "extend": [7, 174, 175, 206, 223, 224, 226, 231, 237, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 299, 303, 307, 313, 335, 341, 347, 351, 365, 500, 507, 516, 541, 614, 616, 617, 669, 799, 870, 1068, 1073, 1083, 1142, 1154], "slice": [7, 29, 92, 194, 196, 205, 209, 210, 212, 214, 219, 222, 223, 226, 233, 245, 246, 248, 249, 252, 256, 257, 263, 264, 266, 267, 268, 270, 282, 285, 287, 292, 295, 302, 305, 306, 308, 311, 312, 314, 323, 324, 327, 328, 333, 334, 339, 340, 345, 346, 349, 350, 791, 836, 997, 1059, 1072, 1076, 1096, 1109, 1120, 1135, 1151, 1155, 1157, 1159], "inclus": [7, 212, 226, 253, 265, 437, 630, 1098, 1158], "exclus": [7, 200, 226, 248, 265, 302, 419, 630, 765, 964, 997, 1046, 1082, 1086, 1098, 1158], "51": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 652, 653, 654, 655, 920, 922, 1141], "l\u00f6schen": [7, 216, 222, 226, 370], "52": [7, 183, 192, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 366, 944, 1141], "del": [7, 38, 192, 195, 196, 206, 221, 223, 226, 229, 237, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 363, 365, 1043, 1068, 1084], "53": [7, 176, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 377, 521, 522, 748, 818, 920, 942, 1012, 1024, 1141, 1142], "iter": [7, 24, 29, 62, 65, 67, 131, 132, 193, 196, 200, 205, 209, 210, 212, 214, 217, 218, 222, 224, 226, 230, 231, 233, 234, 236, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 254, 256, 257, 260, 263, 265, 267, 268, 272, 284, 287, 293, 301, 302, 304, 308, 313, 323, 326, 327, 328, 330, 336, 342, 347, 352, 355, 370, 376, 428, 430, 443, 479, 504, 554, 573, 590, 632, 633, 634, 638, 641, 648, 651, 653, 655, 660, 710, 717, 726, 747, 785, 791, 961, 1033, 1037, 1039, 1048, 1061, 1071, 1085, 1086, 1093, 1094, 1095, 1096, 1109, 1120, 1132, 1135, 1137, 1147, 1149, 1159, 1162, 1200], "mittel": [7, 11, 23, 196, 206, 208, 224, 226, 231, 388, 1184, 1187, 1196, 1204], "54": [7, 183, 192, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 377, 652, 653, 654, 655, 755, 828, 920, 942, 1024, 1141], "element": [7, 8, 35, 38, 108, 111, 112, 113, 126, 193, 195, 196, 206, 211, 212, 217, 218, 221, 223, 224, 226, 227, 229, 232, 236, 237, 238, 242, 245, 246, 248, 252, 254, 255, 261, 264, 265, 268, 272, 293, 297, 300, 303, 312, 325, 364, 365, 401, 428, 443, 451, 455, 458, 543, 557, 560, 562, 571, 590, 595, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 641, 645, 648, 652, 655, 677, 695, 698, 700, 717, 731, 745, 747, 791, 799, 1006, 1038, 1040, 1057, 1068, 1073, 1074, 1083, 1085, 1119, 1145, 1162, 1170, 1193, 1200], "55": [7, 183, 192, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 366, 377, 454, 479, 685, 686, 687, 688, 690, 789, 1012, 1094], "def": [7, 62, 65, 192, 193, 196, 206, 211, 212, 216, 221, 223, 224, 226, 229, 232, 233, 238, 239, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 291, 293, 303, 307, 313, 318, 321, 325, 329, 335, 341, 347, 351, 365, 366, 479, 737, 990, 1033, 1034, 1035, 1038, 1039, 1040, 1043, 1044, 1046, 1048, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1067, 1077, 1078, 1083, 1087, 1119, 1125, 1132, 1133, 1134, 1153, 1159, 1161, 1170, 1171], "is_integ": [7, 226, 283, 347], "elem": [7, 192, 196, 206, 211, 216, 221, 223, 226, 238, 245, 248, 253, 258, 283, 286, 293, 303, 307, 313, 329, 335, 341, 347, 351, 557, 654, 656, 703, 723, 725, 727, 730, 744, 745, 747, 767, 1040, 1083, 1087], "type": [7, 29, 50, 80, 85, 102, 112, 113, 144, 154, 165, 166, 169, 172, 173, 176, 178, 180, 188, 192, 193, 196, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 225, 226, 229, 232, 233, 234, 237, 238, 242, 247, 250, 251, 253, 255, 260, 263, 265, 269, 271, 273, 274, 276, 284, 286, 289, 290, 293, 301, 302, 303, 306, 307, 313, 318, 322, 323, 324, 326, 327, 328, 329, 334, 335, 338, 341, 346, 348, 351, 354, 362, 363, 364, 365, 370, 372, 373, 381, 403, 414, 415, 422, 427, 432, 433, 437, 439, 443, 445, 446, 449, 452, 453, 454, 455, 456, 459, 461, 462, 464, 465, 469, 474, 475, 479, 495, 497, 506, 509, 517, 523, 553, 557, 578, 587, 597, 599, 605, 606, 610, 612, 613, 623, 631, 660, 666, 670, 673, 675, 677, 679, 685, 697, 698, 703, 708, 709, 717, 723, 734, 735, 737, 742, 743, 744, 745, 754, 755, 757, 758, 759, 764, 774, 775, 777, 781, 782, 784, 786, 787, 788, 789, 790, 791, 794, 797, 799, 804, 807, 826, 838, 864, 868, 880, 883, 895, 898, 901, 912, 914, 915, 918, 926, 934, 935, 937, 942, 946, 951, 960, 961, 964, 967, 968, 969, 970, 971, 981, 993, 1002, 1005, 1009, 1010, 1012, 1029, 1031, 1034, 1037, 1040, 1044, 1049, 1050, 1051, 1058, 1062, 1064, 1066, 1067, 1068, 1072, 1074, 1075, 1076, 1081, 1082, 1084, 1086, 1088, 1102, 1113, 1114, 1132, 1135, 1137, 1142, 1146, 1150, 1155, 1156, 1158, 1165, 1170, 1172, 1190, 1191], "int": [7, 21, 46, 109, 112, 113, 116, 119, 122, 123, 139, 175, 184, 193, 195, 206, 212, 216, 221, 223, 224, 226, 229, 233, 234, 239, 242, 245, 246, 248, 251, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 292, 293, 295, 303, 307, 313, 321, 325, 329, 335, 340, 341, 347, 351, 363, 365, 366, 392, 393, 395, 397, 399, 401, 402, 403, 405, 406, 407, 411, 412, 413, 415, 416, 417, 421, 431, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 451, 453, 454, 458, 459, 460, 461, 462, 463, 467, 468, 502, 509, 516, 517, 521, 522, 523, 524, 527, 530, 531, 533, 535, 536, 537, 539, 541, 549, 551, 553, 555, 556, 557, 558, 559, 561, 571, 573, 578, 581, 587, 590, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 648, 651, 652, 653, 654, 655, 656, 660, 662, 666, 667, 670, 672, 673, 675, 676, 677, 679, 684, 685, 686, 687, 688, 689, 690, 691, 695, 696, 698, 699, 702, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 737, 738, 739, 740, 742, 743, 744, 745, 747, 749, 756, 757, 758, 759, 762, 764, 767, 769, 771, 775, 777, 779, 781, 789, 794, 797, 802, 804, 809, 816, 818, 820, 822, 826, 830, 832, 834, 843, 848, 855, 875, 895, 938, 942, 956, 958, 960, 961, 962, 964, 967, 968, 969, 970, 971, 974, 976, 979, 981, 983, 985, 987, 993, 996, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1012, 1024, 1028, 1030, 1055, 1066, 1067, 1075, 1076, 1078, 1081, 1087, 1088, 1104, 1127, 1129, 1132, 1133, 1177, 1182], "return": [7, 21, 27, 62, 109, 116, 119, 122, 123, 169, 172, 174, 175, 176, 180, 184, 192, 193, 196, 206, 210, 212, 214, 216, 221, 223, 224, 226, 229, 232, 233, 234, 238, 239, 242, 245, 246, 248, 251, 253, 255, 258, 261, 265, 268, 271, 275, 276, 283, 286, 291, 293, 297, 303, 307, 318, 321, 324, 325, 329, 335, 342, 347, 351, 365, 366, 392, 393, 395, 399, 401, 403, 412, 421, 431, 437, 443, 444, 446, 453, 454, 457, 458, 460, 461, 463, 467, 479, 486, 495, 496, 497, 498, 502, 504, 507, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 541, 548, 549, 553, 554, 557, 573, 581, 587, 590, 597, 598, 599, 601, 602, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 620, 622, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 651, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 679, 683, 684, 685, 686, 687, 688, 689, 690, 691, 695, 700, 702, 703, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 737, 738, 739, 740, 741, 742, 745, 747, 752, 753, 755, 756, 757, 758, 759, 765, 767, 769, 775, 777, 779, 780, 781, 782, 785, 786, 787, 789, 794, 801, 809, 816, 820, 828, 830, 852, 854, 858, 875, 895, 942, 956, 958, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 976, 979, 980, 981, 991, 993, 996, 1002, 1005, 1006, 1009, 1010, 1012, 1024, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1048, 1052, 1053, 1055, 1056, 1057, 1078, 1080, 1082, 1083, 1084, 1087, 1094, 1110, 1112, 1116, 1119, 1120, 1127, 1129, 1132, 1156, 1158, 1159, 1161, 1170, 1177, 1182], "els": [7, 21, 43, 50, 62, 112, 113, 121, 127, 143, 173, 175, 176, 179, 188, 193, 196, 206, 209, 212, 216, 224, 226, 229, 232, 233, 234, 238, 242, 245, 246, 249, 250, 251, 253, 257, 258, 263, 265, 268, 272, 274, 283, 285, 286, 291, 293, 303, 307, 313, 325, 335, 342, 347, 352, 355, 366, 377, 399, 405, 416, 421, 432, 438, 439, 445, 449, 452, 456, 457, 465, 469, 474, 475, 479, 487, 488, 502, 526, 533, 536, 590, 613, 637, 638, 648, 655, 669, 689, 697, 702, 735, 756, 758, 765, 769, 788, 790, 791, 820, 830, 854, 865, 866, 871, 890, 892, 895, 901, 922, 943, 956, 959, 964, 990, 991, 993, 996, 998, 1036, 1043, 1055, 1056, 1059, 1070, 1078, 1084, 1159, 1189], "fals": [7, 46, 112, 113, 116, 120, 121, 123, 176, 178, 192, 193, 206, 211, 216, 221, 223, 224, 226, 229, 232, 238, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 297, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 364, 379, 395, 399, 416, 453, 479, 613, 638, 670, 677, 700, 712, 765, 769, 771, 858, 871, 898, 990, 991, 996, 998, 1018, 1033, 1048, 1052, 1055, 1068, 1069, 1071, 1072, 1076, 1155, 1156, 1159, 1161, 1177], "56": [7, 169, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 377, 416, 520, 608, 789, 917, 942, 944, 1141, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "x": [7, 23, 32, 42, 60, 62, 116, 119, 120, 123, 178, 184, 192, 193, 194, 196, 206, 216, 221, 223, 225, 226, 229, 232, 242, 245, 248, 249, 253, 255, 261, 265, 268, 271, 273, 274, 283, 286, 290, 293, 302, 303, 307, 329, 335, 341, 347, 351, 366, 370, 412, 415, 416, 422, 437, 438, 440, 443, 446, 447, 451, 453, 461, 463, 467, 490, 541, 551, 588, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 613, 615, 616, 623, 630, 638, 698, 699, 700, 702, 717, 719, 720, 721, 738, 749, 758, 864, 865, 866, 869, 873, 875, 880, 883, 885, 886, 894, 895, 920, 923, 927, 929, 935, 942, 943, 944, 960, 970, 976, 978, 979, 987, 991, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1032, 1033, 1061, 1063, 1069, 1077, 1078, 1080, 1081, 1082, 1085, 1086, 1091, 1115, 1142, 1159, 1170, 1171, 1177], "filter": [7, 29, 108, 111, 126, 190, 193, 226, 233, 246, 263, 286, 292, 295, 299, 300, 307, 324, 326, 329, 336, 341, 345, 349, 350, 543, 560, 595, 753, 754, 791, 863, 882, 931, 1135, 1151, 1157, 1160, 1177], "57": [7, 169, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 366, 486, 491, 920, 942, 955, 1013, 1014, 1141], "zero": [7, 32, 38, 169, 175, 191, 193, 194, 196, 206, 216, 224, 226, 229, 242, 248, 253, 255, 258, 261, 265, 268, 283, 307, 341, 347, 370, 392, 401, 419, 744, 754, 758, 797, 809, 824, 869, 898, 913, 920, 944, 964, 985, 991, 994, 997, 1000, 1005, 1006, 1072], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 65, 71, 87, 108, 135, 161, 163, 166, 167, 172, 173, 174, 175, 188, 193, 194, 195, 201, 205, 206, 211, 216, 217, 219, 221, 223, 224, 226, 229, 230, 232, 234, 235, 236, 240, 242, 243, 246, 248, 251, 252, 253, 255, 256, 261, 262, 264, 265, 267, 269, 270, 271, 283, 285, 286, 289, 291, 292, 293, 301, 303, 305, 306, 307, 311, 312, 313, 317, 320, 329, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 351, 356, 362, 370, 376, 379, 388, 389, 400, 407, 437, 443, 445, 446, 449, 451, 452, 455, 456, 458, 460, 463, 465, 469, 474, 475, 477, 478, 479, 480, 489, 492, 505, 507, 517, 521, 522, 541, 551, 553, 573, 581, 584, 590, 606, 611, 613, 630, 653, 695, 696, 697, 698, 699, 735, 741, 744, 745, 747, 754, 757, 759, 788, 790, 791, 836, 838, 841, 903, 905, 925, 935, 937, 942, 943, 944, 961, 964, 965, 972, 982, 983, 991, 996, 1005, 1010, 1020, 1030, 1038, 1044, 1047, 1050, 1055, 1058, 1059, 1065, 1068, 1071, 1082, 1084, 1086, 1093, 1096, 1098, 1099, 1100, 1103, 1105, 1106, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1132, 1135, 1136, 1142, 1144, 1150, 1158, 1171, 1177, 1190, 1200, 1205], "58": [7, 176, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 377, 479, 944, 1013, 1014, 1024, 1141, 1142], "59": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 377, 1014, 1015, 1024, 1141], "three": [7, 12, 32, 36, 38, 43, 62, 112, 113, 131, 174, 186, 189, 193, 194, 205, 206, 209, 210, 216, 221, 223, 224, 226, 232, 240, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 291, 292, 293, 295, 301, 302, 303, 307, 312, 313, 325, 329, 335, 341, 347, 351, 370, 388, 457, 632, 677, 871, 880, 883, 898, 935, 942, 944, 964, 996, 1005, 1040, 1050, 1068, 1072, 1082, 1084, 1086, 1099, 1105, 1136, 1137, 1191, 1205], "60": [7, 62, 108, 149, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 273, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 365, 521, 522, 523, 535, 536, 537, 544, 880, 942, 943, 944, 1038, 1141, 1142], "61": [7, 62, 149, 183, 194, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 370, 375, 1141, 1142], "62": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 880, 1094, 1141], "63": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 370, 375, 1094, 1141], "k": [7, 29, 175, 194, 196, 206, 209, 221, 223, 226, 229, 233, 234, 245, 248, 253, 255, 258, 261, 268, 271, 283, 286, 292, 293, 303, 313, 323, 325, 327, 329, 335, 341, 347, 351, 371, 372, 391, 519, 652, 695, 757, 775, 791, 898, 945, 980, 1135, 1138, 1144, 1151, 1170], "v": [7, 20, 23, 31, 32, 65, 90, 124, 134, 151, 169, 173, 180, 194, 197, 200, 206, 210, 212, 214, 218, 220, 221, 224, 225, 226, 231, 233, 234, 235, 236, 242, 245, 246, 248, 249, 251, 252, 254, 260, 263, 264, 266, 269, 271, 275, 282, 283, 286, 289, 294, 302, 304, 308, 312, 313, 319, 325, 329, 335, 338, 341, 347, 351, 356, 370, 467, 491, 496, 517, 543, 577, 595, 652, 672, 695, 699, 703, 708, 709, 710, 717, 718, 719, 720, 721, 726, 729, 730, 731, 737, 743, 744, 745, 768, 771, 774, 776, 787, 790, 791, 800, 805, 808, 810, 815, 819, 821, 825, 829, 830, 831, 833, 835, 838, 840, 842, 846, 847, 849, 853, 856, 859, 864, 868, 871, 872, 875, 898, 900, 927, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1005, 1006, 1012, 1055, 1078, 1172, 1173, 1185, 1187, 1204, 1206], "65": [7, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 685, 1000, 1141, 1142], "item": [7, 173, 193, 195, 206, 211, 216, 221, 223, 226, 229, 232, 233, 237, 238, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 273, 277, 278, 280, 283, 286, 291, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 455, 459, 461, 480, 744, 788, 790, 791, 1005, 1006, 1040, 1041, 1042, 1048, 1074, 1081, 1084, 1086, 1125, 1170], "66": [7, 176, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 675, 1094, 1141, 1142], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 60, 61, 62, 63, 66, 67, 80, 91, 106, 110, 111, 124, 126, 131, 139, 143, 144, 154, 157, 159, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 190, 193, 194, 195, 197, 199, 200, 202, 203, 205, 206, 209, 211, 212, 216, 217, 221, 223, 224, 225, 226, 227, 229, 232, 234, 235, 238, 239, 242, 245, 246, 248, 249, 251, 252, 253, 255, 258, 259, 261, 265, 268, 271, 274, 277, 278, 280, 283, 286, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 307, 310, 313, 315, 317, 320, 323, 324, 325, 327, 329, 331, 335, 337, 338, 340, 341, 347, 351, 355, 356, 364, 365, 367, 370, 373, 374, 388, 390, 403, 405, 411, 416, 437, 438, 441, 450, 455, 457, 459, 460, 461, 462, 463, 467, 478, 479, 480, 482, 483, 485, 487, 488, 491, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 517, 519, 520, 522, 523, 527, 538, 540, 551, 552, 553, 554, 557, 563, 565, 566, 574, 577, 580, 581, 583, 586, 589, 592, 599, 601, 602, 605, 606, 609, 610, 612, 613, 622, 632, 642, 643, 653, 660, 662, 667, 669, 672, 673, 675, 679, 682, 686, 696, 697, 699, 701, 703, 706, 707, 708, 709, 712, 716, 717, 723, 732, 735, 737, 740, 744, 745, 747, 749, 753, 754, 755, 757, 759, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 787, 789, 790, 791, 797, 806, 809, 811, 816, 822, 824, 834, 843, 846, 858, 863, 864, 865, 866, 869, 870, 873, 875, 876, 880, 881, 882, 884, 886, 888, 890, 892, 894, 895, 896, 898, 900, 901, 917, 920, 921, 923, 924, 926, 927, 929, 930, 931, 935, 938, 942, 943, 944, 945, 946, 953, 954, 955, 956, 958, 959, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 972, 974, 976, 978, 979, 981, 982, 983, 987, 988, 991, 993, 996, 997, 998, 1000, 1001, 1002, 1004, 1006, 1008, 1009, 1010, 1015, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1038, 1039, 1041, 1042, 1043, 1047, 1048, 1055, 1059, 1060, 1061, 1064, 1068, 1069, 1075, 1078, 1081, 1082, 1085, 1086, 1089, 1094, 1099, 1106, 1117, 1124, 1125, 1126, 1128, 1136, 1143, 1145, 1146, 1149, 1150, 1153, 1160, 1161, 1162, 1163, 1164, 1165, 1170, 1171, 1176, 1179, 1181, 1182, 1185, 1190, 1192, 1195, 1208], "rot": [7, 226, 237], "gruen": [7, 226], "blau": [7, 226, 237], "67": [7, 183, 194, 206, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 479, 544, 1000, 1081, 1094, 1141, 1142], "69": [7, 60, 178, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1141, 1142, 1161], "schwarz": [7, 226, 237], "70": [7, 60, 149, 175, 183, 206, 211, 213, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 479, 544, 942, 943, 944, 1038, 1141, 1142, 1170], "add": [7, 23, 42, 44, 49, 124, 131, 133, 144, 148, 151, 153, 168, 169, 173, 174, 175, 179, 180, 184, 188, 193, 202, 205, 206, 209, 212, 221, 223, 224, 226, 229, 232, 234, 238, 242, 245, 246, 248, 253, 258, 261, 265, 268, 271, 277, 278, 283, 286, 289, 293, 297, 303, 307, 313, 318, 320, 325, 329, 335, 338, 341, 347, 351, 370, 376, 418, 419, 458, 459, 467, 480, 481, 487, 490, 497, 499, 500, 516, 517, 521, 526, 527, 538, 546, 553, 555, 573, 587, 597, 610, 611, 613, 615, 684, 685, 686, 695, 703, 723, 734, 745, 753, 767, 769, 804, 806, 807, 811, 818, 826, 828, 838, 851, 854, 864, 937, 942, 943, 944, 972, 996, 998, 1000, 1006, 1011, 1024, 1026, 1033, 1034, 1056, 1060, 1068, 1086, 1092, 1159, 1170, 1171, 1177], "71": [7, 149, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1013, 1014, 1141, 1142], "72": [7, 183, 206, 211, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 370, 375, 605, 929, 1024, 1094, 1141, 1142], "remov": [7, 57, 101, 111, 126, 131, 132, 148, 179, 180, 193, 195, 206, 221, 226, 232, 238, 246, 248, 253, 255, 261, 265, 268, 272, 273, 279, 286, 288, 289, 303, 307, 309, 310, 313, 324, 325, 329, 335, 341, 351, 353, 354, 482, 483, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 560, 561, 562, 567, 571, 590, 595, 625, 631, 648, 681, 703, 756, 767, 768, 769, 786, 789, 790, 791, 799, 816, 826, 834, 857, 864, 865, 866, 867, 868, 871, 872, 885, 886, 888, 890, 891, 892, 893, 895, 896, 902, 903, 904, 905, 907, 908, 910, 912, 918, 934, 945, 955, 957, 963, 965, 968, 973, 975, 978, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1038, 1058, 1068, 1083, 1084, 1085, 1119], "73": [7, 183, 194, 206, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 1141], "74": [7, 176, 178, 183, 206, 216, 221, 223, 226, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 920, 929, 1094, 1141, 1142], "75": [7, 183, 206, 216, 221, 223, 226, 229, 232, 234, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 479, 1141, 1142], "sum": [7, 38, 62, 206, 226, 230, 231, 245, 246, 248, 251, 253, 261, 264, 265, 268, 271, 286, 293, 335, 341, 347, 351, 428, 443, 458, 460, 461, 463, 527, 553, 573, 597, 611, 613, 626, 630, 678, 692, 775, 777, 779, 781, 791, 997, 1055, 1071, 1155], "100": [7, 32, 124, 149, 154, 172, 173, 178, 188, 192, 193, 206, 216, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 264, 265, 268, 271, 273, 274, 283, 286, 289, 290, 291, 293, 297, 303, 307, 313, 324, 325, 329, 335, 341, 347, 351, 365, 366, 370, 375, 428, 434, 435, 477, 480, 493, 502, 535, 536, 544, 563, 625, 626, 627, 628, 629, 631, 632, 633, 634, 648, 695, 712, 733, 809, 848, 894, 897, 920, 937, 976, 998, 1000, 1004, 1005, 1013, 1014, 1039, 1071, 1075, 1094, 1125, 1170], "5050": [7, 206, 226, 248, 261, 268, 293, 335, 341, 347, 351], "bestimmen": [7, 226], "maximum": [7, 29, 166, 206, 216, 217, 219, 221, 224, 226, 229, 230, 236, 240, 242, 243, 245, 246, 248, 252, 253, 255, 256, 258, 261, 262, 264, 265, 267, 269, 270, 285, 286, 292, 293, 305, 306, 307, 311, 312, 333, 334, 339, 340, 341, 345, 346, 347, 349, 350, 351, 366, 418, 691, 769, 791, 799, 875, 935, 1000, 1006, 1078, 1096, 1098, 1099, 1100, 1103, 1106, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1136, 1140, 1141, 1142, 1143, 1165, 1200], "zwei": [7, 149, 155, 182, 192, 200, 206, 218, 221, 223, 226, 229, 242, 245, 253, 258, 261, 265, 271, 293, 313, 321, 325, 329, 351, 365, 561, 652, 653, 654, 655, 925, 1187, 1204], "inlin": [7, 144, 194, 200, 212, 226, 242, 271, 274, 276, 298, 325, 329, 335, 438, 460, 463, 584, 599, 613, 652, 689, 741, 759, 775, 777, 779, 780, 781, 782, 789, 1032, 1112], "ohn": [7, 23, 190, 192, 200, 226, 229, 341, 860, 926, 1186, 1206, 1207, 1208], "funktion": [7, 23, 196, 200, 206, 217, 218, 219, 223, 226, 229, 232, 253, 255, 258, 261, 293, 325, 365, 1200], "666": [7, 42, 50, 109, 116, 122, 132, 134, 192, 193, 206, 216, 221, 223, 226, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 361, 362, 363, 365, 366, 401, 481, 500, 555, 556, 557, 558, 559, 563, 564, 565, 566, 568, 569, 571, 578, 590, 597, 601, 610, 612, 635, 636, 637, 638, 639, 641, 644, 652, 655, 675, 679, 708, 710, 717, 719, 720, 721, 725, 745, 749, 752, 754, 759, 762, 775, 777, 779, 785, 786, 787, 796, 797, 1031, 1035, 1077, 1078, 1081, 1182], "var1": [7, 216, 226, 1102], "var2": [7, 216, 226, 1102], "6712": [7, 226, 248], "isn": [7, 67, 172, 188, 226, 292, 295, 378, 392, 443, 630, 634, 673, 696, 723, 743, 942, 1080, 1177], "fehler": [7, 200, 206, 226, 370, 375], "link": [7, 13, 17, 27, 32, 44, 105, 106, 126, 132, 137, 148, 166, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 190, 192, 200, 206, 213, 226, 249, 251, 279, 280, 288, 289, 297, 302, 309, 310, 315, 331, 341, 353, 354, 370, 383, 384, 433, 446, 452, 456, 460, 465, 469, 474, 475, 480, 483, 485, 486, 491, 501, 515, 538, 543, 544, 545, 546, 547, 548, 549, 550, 553, 573, 580, 581, 595, 610, 697, 703, 711, 735, 745, 746, 788, 789, 790, 791, 799, 800, 804, 805, 808, 816, 819, 828, 829, 838, 840, 842, 847, 853, 856, 859, 868, 918, 920, 925, 934, 943, 950, 980, 983, 985, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1024, 1030, 1136, 1164, 1174, 1177, 1184, 1185, 1192], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 209, 210, 212, 213, 214, 215, 217, 219, 220, 227, 230, 233, 234, 235, 236, 240, 243, 246, 249, 251, 252, 256, 259, 262, 264, 267, 273, 277, 278, 279, 280, 281, 288, 289, 291, 298, 299, 300, 301, 302, 309, 310, 315, 316, 317, 320, 323, 324, 327, 328, 331, 332, 337, 338, 343, 353, 354, 355, 356, 357, 358, 359, 361, 370, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 630, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 662, 664, 666, 667, 669, 670, 671, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 722, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 775, 777, 779, 780, 781, 782, 789, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 809, 815, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 840, 841, 843, 845, 846, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 869, 870, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 894, 895, 896, 897, 898, 899, 900, 901, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 936, 937, 938, 939, 942, 945, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 996, 998, 999, 1000, 1012, 1013, 1014, 1015, 1020, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1172, 1173, 1200], "mittwoch": [8, 217, 219, 227], "00": [8, 124, 154, 175, 176, 178, 183, 188, 196, 200, 208, 209, 210, 212, 213, 214, 215, 217, 219, 221, 223, 225, 227, 230, 234, 240, 242, 248, 258, 261, 262, 289, 290, 297, 298, 300, 363, 471, 479, 493, 748, 770, 774, 778, 789, 865, 866, 920, 942, 943, 944, 996, 1015, 1024, 1062, 1170], "cours": [8, 13, 40, 68, 106, 144, 148, 151, 169, 170, 171, 172, 173, 175, 188, 201, 202, 212, 220, 224, 230, 235, 240, 251, 262, 279, 281, 289, 298, 300, 301, 315, 316, 324, 327, 328, 331, 332, 370, 388, 389, 391, 440, 441, 457, 484, 495, 501, 507, 552, 789, 813, 838, 850, 865, 866, 927, 936, 965, 972, 1014, 1036, 1037, 1059, 1092, 1124, 1133, 1137, 1150, 1151, 1164, 1190, 1193, 1205], "tectrain": [8, 11, 196, 208, 217, 219, 227, 230, 233, 234, 235, 236, 240, 252, 264, 388], "html": [8, 17, 18, 23, 39, 40, 66, 154, 170, 179, 192, 200, 217, 227, 230, 233, 237, 240, 243, 246, 249, 265, 296, 351, 365, 675, 794, 809, 815, 898, 920, 1006, 1010, 1081, 1148], "download": [8, 17, 62, 108, 154, 161, 172, 178, 180, 184, 188, 193, 196, 205, 212, 217, 225, 227, 230, 233, 234, 235, 240, 243, 246, 256, 259, 262, 264, 267, 270, 273, 282, 285, 292, 296, 303, 320, 340, 346, 350, 361, 390, 480, 483, 544, 545, 546, 547, 548, 549, 550, 553, 554, 599, 684, 686, 690, 691, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 745, 747, 898, 900, 920, 922, 935, 942, 943, 944, 954, 1020, 1026, 1060, 1094, 1106, 1115, 1125, 1126, 1128, 1139, 1141, 1143, 1165], "repositori": [8, 23, 79, 99, 111, 124, 151, 160, 169, 176, 179, 187, 191, 200, 202, 209, 210, 220, 225, 227, 230, 234, 235, 236, 240, 243, 246, 251, 252, 256, 259, 262, 264, 267, 273, 281, 289, 299, 300, 302, 306, 312, 316, 317, 320, 324, 328, 332, 334, 338, 340, 346, 350, 355, 369, 370, 375, 543, 560, 595, 791, 838, 1179, 1184], "kurssprach": [8, 217, 227, 236, 252, 264], "kurs": [8, 23, 170, 187, 208, 219, 227, 236, 252, 264, 1184, 1185, 1186, 1194, 1201, 1208], "viel": [8, 23, 191, 196, 200, 206, 217, 227, 236, 242, 252, 253, 264, 283, 1187, 1188, 1194, 1202, 1203], "spezifisch": [8, 217, 227, 236, 252, 264, 1185, 1204, 1207], "unterrichtet": [8, 217, 227, 236, 252, 264], "themenreihenfolg": [8, 217, 227, 236, 252, 264], "herdt": [8, 166, 227, 236, 252, 264], "skriptum": [8, 217, 227, 236, 252, 264, 1200], "\u00fcbernommen": [8, 217, 227, 236, 252, 264], "etwa": [8, 23, 181, 182, 191, 196, 206, 208, 217, 227, 229, 236, 252, 264, 388, 1185, 1187, 1194, 1200, 1201, 1203, 1208], "allgemein": [8, 217, 227, 236, 252, 264, 1200], "allgemeinen": [8, 217, 221, 227, 236, 252, 264, 1203], "dadurch": [8, 217, 227, 236, 252, 264, 388, 1187, 1207], "verwirrend": [8, 217, 227, 236, 252, 264, 1200], "weswegen": [8, 217, 227, 236, 252, 264], "vielen": [8, 23, 191, 216, 227, 236, 252, 264, 388, 1194, 1196], "f\u00e4llen": [8, 23, 149, 217, 227, 236, 252, 264], "ausnahmen": [8, 149, 217, 227, 236, 252, 264], "gemacht": [8, 23, 181, 187, 217, 227, 236, 252, 264, 1200, 1208], "kursstruktur": [8, 227], "sieh": [8, 23, 149, 190, 191, 192, 196, 200, 206, 217, 219, 222, 227, 236, 252, 264, 388, 1185, 1186, 1200], "jjj": [8, 137, 170, 214, 219, 227, 249, 297, 302, 379, 793, 794, 795, 799, 807], "hello": [8, 29, 62, 92, 166, 184, 206, 212, 216, 217, 219, 223, 227, 229, 230, 234, 236, 238, 240, 242, 243, 246, 248, 251, 252, 253, 255, 256, 262, 263, 264, 265, 267, 268, 270, 272, 285, 286, 292, 295, 303, 305, 306, 311, 312, 325, 333, 334, 335, 339, 340, 345, 346, 349, 350, 351, 356, 357, 358, 359, 360, 361, 365, 366, 370, 405, 408, 412, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 602, 605, 675, 697, 703, 706, 723, 728, 729, 730, 731, 735, 788, 790, 791, 795, 798, 800, 803, 805, 808, 815, 819, 823, 829, 835, 840, 842, 847, 850, 853, 856, 859, 865, 866, 869, 870, 902, 904, 909, 910, 917, 934, 945, 967, 991, 1012, 1013, 1014, 1024, 1026, 1028, 1029, 1030, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1063, 1064, 1070, 1073, 1075, 1079, 1080, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1161, 1164, 1186, 1200], "py": [8, 17, 21, 32, 40, 62, 65, 66, 153, 154, 169, 188, 192, 193, 196, 204, 205, 206, 209, 210, 212, 214, 224, 227, 233, 239, 242, 246, 248, 249, 252, 253, 256, 258, 259, 261, 262, 264, 265, 271, 273, 285, 291, 292, 293, 301, 302, 306, 307, 312, 323, 324, 329, 342, 350, 351, 355, 370, 479, 737, 942, 998, 1000, 1033, 1036, 1038, 1039, 1043, 1044, 1046, 1062, 1063, 1065, 1071, 1088, 1091, 1092, 1093, 1094, 1098, 1099, 1101, 1102, 1104, 1106, 1111, 1115, 1117, 1119, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1139, 1140, 1145, 1153, 1158, 1159, 1170, 1171], "swap": [8, 29, 175, 211, 217, 227, 229, 236, 248, 251, 252, 264, 269, 270, 279, 288, 289, 309, 310, 351, 353, 445, 449, 452, 456, 465, 469, 474, 475, 573, 697, 735, 788, 790, 791, 824, 868, 879, 880, 934, 1066, 1096, 1098, 1099, 1100, 1101, 1103, 1135, 1200, 1204], "exercis": [8, 29, 80, 95, 99, 104, 106, 108, 126, 127, 139, 142, 143, 144, 148, 170, 192, 200, 205, 212, 213, 217, 219, 224, 227, 230, 236, 240, 243, 246, 247, 249, 252, 256, 259, 262, 264, 267, 269, 270, 279, 281, 288, 292, 294, 295, 309, 310, 314, 328, 332, 339, 353, 355, 356, 357, 358, 359, 361, 369, 372, 375, 383, 384, 401, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 494, 502, 542, 563, 564, 565, 566, 568, 569, 570, 575, 595, 662, 663, 677, 697, 735, 763, 790, 791, 792, 799, 861, 865, 866, 868, 872, 879, 889, 891, 893, 918, 928, 934, 950, 973, 975, 984, 992, 1011, 1018, 1059, 1060, 1095, 1124, 1135, 1136, 1170, 1190, 1193, 1195, 1200, 1205], "greet": [8, 29, 206, 217, 227, 230, 236, 242, 243, 252, 253, 255, 261, 262, 264, 267, 270, 285, 286, 366, 489, 791, 1013, 1014, 1020, 1030, 1096, 1098, 1100, 1103, 1135, 1200], "depend": [8, 13, 28, 29, 62, 80, 116, 121, 122, 126, 144, 166, 169, 170, 173, 174, 180, 184, 203, 205, 217, 227, 230, 235, 236, 242, 243, 248, 249, 252, 258, 261, 262, 264, 267, 270, 285, 302, 310, 316, 332, 370, 385, 393, 409, 411, 419, 422, 438, 455, 467, 473, 477, 481, 485, 488, 492, 495, 502, 508, 542, 554, 580, 582, 590, 670, 696, 744, 767, 789, 791, 797, 850, 861, 868, 872, 879, 882, 893, 918, 928, 935, 943, 961, 1013, 1024, 1028, 1030, 1037, 1059, 1060, 1062, 1096, 1100, 1109, 1135, 1164, 1165, 1195, 1197, 1200], "time": [8, 29, 36, 38, 43, 53, 62, 75, 78, 87, 91, 100, 112, 113, 124, 126, 127, 131, 139, 144, 148, 154, 163, 172, 173, 174, 175, 177, 178, 180, 193, 194, 197, 205, 209, 211, 212, 213, 217, 223, 225, 227, 230, 232, 234, 235, 236, 242, 243, 245, 248, 249, 252, 253, 261, 262, 264, 267, 268, 270, 271, 285, 286, 289, 292, 293, 295, 298, 299, 301, 302, 303, 307, 310, 320, 323, 324, 327, 329, 334, 335, 340, 341, 347, 356, 377, 388, 405, 413, 427, 433, 436, 459, 461, 466, 467, 470, 471, 472, 473, 477, 482, 493, 495, 496, 499, 505, 554, 584, 597, 604, 606, 647, 648, 702, 709, 723, 737, 745, 747, 758, 765, 769, 789, 791, 809, 811, 815, 816, 818, 830, 836, 838, 840, 853, 856, 859, 863, 869, 870, 871, 877, 878, 882, 898, 929, 934, 935, 942, 943, 944, 954, 964, 970, 971, 972, 976, 979, 980, 982, 985, 988, 994, 996, 997, 998, 999, 1000, 1005, 1027, 1028, 1034, 1038, 1044, 1047, 1048, 1059, 1060, 1061, 1064, 1071, 1074, 1077, 1078, 1096, 1098, 1100, 1103, 1135, 1141, 1150, 1155, 1165, 1195, 1200, 1206], "dai": [8, 12, 29, 174, 175, 177, 183, 186, 189, 192, 193, 197, 211, 217, 227, 230, 236, 238, 247, 252, 261, 262, 264, 267, 270, 285, 293, 297, 320, 376, 378, 379, 388, 478, 483, 484, 495, 516, 791, 855, 894, 959, 996, 1037, 1059, 1066, 1075, 1096, 1098, 1100, 1103, 1135, 1136, 1143, 1164, 1191, 1192, 1193, 1195, 1200, 1205], "hen": [8, 227], "vehikelkauf": [8, 227], "datentypen": [8, 196, 200, 217, 218, 224, 227, 258, 276, 371, 1187, 1200, 1207], "\u00fcbersicht": [8, 217, 227, 230, 240, 243, 246], "git": [8, 13, 23, 60, 66, 74, 75, 76, 80, 125, 126, 127, 143, 152, 160, 165, 177, 179, 187, 200, 201, 202, 205, 222, 224, 225, 227, 249, 251, 262, 273, 278, 280, 298, 299, 300, 376, 377, 383, 384, 480, 541, 552, 615, 791, 813, 838, 839, 898, 937, 942, 1026, 1027, 1092, 1179, 1184], "scm": [8, 60, 66, 176, 200, 227, 811], "com": [8, 13, 20, 23, 37, 42, 44, 50, 66, 87, 108, 124, 126, 138, 148, 151, 153, 154, 169, 178, 179, 180, 184, 188, 200, 201, 202, 203, 209, 210, 213, 214, 222, 227, 229, 235, 249, 251, 261, 273, 278, 280, 286, 289, 292, 293, 298, 299, 300, 302, 306, 312, 316, 317, 320, 324, 328, 332, 334, 338, 340, 346, 350, 369, 370, 375, 381, 390, 538, 552, 573, 615, 635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 656, 675, 757, 838, 839, 898, 937, 942, 945, 953, 954, 1026, 1092, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "pep": [8, 169, 217, 227, 299, 301, 302, 323, 324], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 61, 62, 63, 80, 86, 92, 101, 108, 109, 110, 111, 112, 113, 121, 126, 128, 129, 130, 131, 132, 134, 136, 137, 143, 144, 148, 149, 152, 154, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 188, 189, 190, 193, 194, 196, 197, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 224, 225, 227, 230, 233, 236, 240, 241, 242, 243, 246, 247, 248, 251, 252, 255, 256, 258, 259, 261, 264, 265, 267, 270, 272, 275, 277, 278, 279, 280, 282, 285, 288, 291, 292, 295, 298, 300, 302, 305, 306, 308, 309, 311, 312, 328, 330, 333, 334, 335, 339, 340, 342, 345, 346, 349, 350, 352, 353, 356, 357, 358, 359, 360, 361, 367, 370, 371, 372, 373, 375, 376, 387, 388, 389, 392, 394, 402, 408, 416, 418, 420, 421, 422, 423, 428, 432, 436, 439, 445, 449, 452, 455, 456, 459, 465, 467, 469, 474, 478, 480, 482, 495, 496, 497, 500, 501, 506, 515, 516, 517, 519, 521, 523, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 557, 560, 562, 595, 596, 598, 602, 603, 605, 614, 615, 616, 617, 618, 621, 624, 632, 640, 646, 650, 659, 662, 663, 668, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 696, 697, 700, 704, 706, 711, 716, 722, 735, 736, 745, 746, 747, 751, 760, 767, 768, 772, 776, 785, 788, 789, 791, 792, 799, 801, 811, 813, 816, 832, 838, 840, 843, 861, 863, 865, 866, 867, 868, 871, 872, 875, 876, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 897, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 916, 928, 934, 938, 942, 943, 944, 957, 959, 963, 965, 968, 969, 970, 971, 973, 975, 978, 982, 983, 985, 986, 989, 992, 995, 996, 997, 1006, 1009, 1010, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1037, 1038, 1041, 1042, 1045, 1046, 1047, 1049, 1050, 1051, 1058, 1060, 1062, 1064, 1065, 1072, 1076, 1079, 1083, 1084, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1143, 1144, 1146, 1147, 1150, 1151, 1153, 1157, 1159, 1164, 1167, 1170, 1172, 1174, 1177, 1187, 1189, 1190, 1191, 1193, 1200], "zen": [8, 176, 217, 227, 255, 266, 299, 712], "corei": [8, 194, 205, 208, 209, 212, 214, 217, 219, 225, 227, 230, 233, 240, 243, 246, 256, 259, 270, 273, 282, 306, 312, 340, 370, 375, 1137, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173], "schaefer": [8, 214, 217, 219, 225, 227], "youtub": [8, 20, 180, 194, 205, 208, 210, 212, 214, 217, 219, 227, 234, 301, 302, 323, 327, 341, 356], "channel": [8, 139, 178, 194, 217, 227, 935, 943, 1005], "trainer": [8, 12, 23, 24, 61, 63, 67, 180, 199, 200, 205, 217, 227, 278, 280, 298, 482, 484, 552, 599, 747, 943, 1037, 1044, 1059, 1060, 1136, 1151, 1163, 1164, 1170, 1190, 1195], "hacker": [8, 217, 227, 1195], "schier": [8, 217, 227], "anzahl": [8, 217, 227], "sehr": [8, 23, 37, 149, 181, 182, 196, 200, 206, 208, 216, 217, 221, 227, 258, 388, 1185, 1187, 1194, 1197, 1200, 1201, 1203, 1208], "guten": [8, 196, 206, 208, 217, 227, 261, 265, 388, 1189], "tutori": [8, 154, 180, 194, 205, 208, 213, 217, 225, 227, 233, 234, 236, 243, 246, 256, 259, 282, 312, 324, 340, 356, 370, 375, 898, 944, 1088, 1091, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173], "stil": [8, 217, 227], "besser": [8, 23, 181, 192, 216, 217, 227, 237, 1200], "ander": [8, 196, 206, 217, 227, 237, 245, 258, 365, 370, 375, 379, 388, 864, 1185, 1186, 1189, 1194, 1197, 1202, 1206, 1207], "auswahl": [8, 217, 227], "einleitung": [9, 228], "datatyp": [9, 29, 92, 166, 205, 209, 212, 217, 218, 219, 222, 224, 228, 230, 231, 236, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 254, 256, 257, 262, 263, 264, 266, 267, 269, 272, 282, 284, 287, 294, 302, 304, 308, 314, 324, 326, 328, 330, 336, 342, 348, 352, 356, 357, 358, 359, 360, 361, 370, 375, 409, 416, 601, 630, 698, 791, 1005, 1037, 1042, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164, 1200], "number": [9, 24, 27, 29, 36, 53, 57, 61, 62, 63, 70, 80, 82, 84, 86, 87, 112, 113, 124, 127, 131, 133, 143, 163, 166, 172, 174, 175, 178, 180, 183, 184, 188, 191, 193, 196, 202, 205, 209, 212, 215, 216, 217, 219, 224, 225, 228, 230, 231, 233, 236, 240, 242, 243, 245, 246, 248, 249, 252, 254, 255, 256, 258, 261, 262, 264, 266, 267, 269, 270, 271, 273, 278, 280, 282, 285, 286, 292, 293, 298, 299, 300, 301, 302, 303, 305, 306, 307, 311, 312, 315, 323, 324, 327, 328, 329, 331, 333, 334, 335, 339, 340, 341, 345, 346, 349, 350, 351, 356, 361, 370, 377, 388, 393, 395, 397, 399, 401, 402, 403, 409, 413, 415, 416, 427, 438, 454, 458, 463, 467, 471, 477, 479, 489, 507, 508, 516, 541, 549, 551, 554, 556, 567, 573, 600, 620, 628, 631, 638, 654, 679, 688, 691, 700, 712, 738, 745, 747, 789, 791, 797, 799, 806, 809, 818, 820, 832, 834, 840, 848, 852, 863, 871, 878, 904, 923, 925, 927, 929, 931, 943, 954, 955, 958, 962, 963, 964, 969, 970, 971, 972, 991, 996, 997, 1005, 1006, 1010, 1012, 1015, 1035, 1036, 1038, 1040, 1041, 1042, 1052, 1064, 1065, 1066, 1071, 1072, 1082, 1083, 1084, 1086, 1087, 1096, 1099, 1100, 1103, 1106, 1107, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1131, 1135, 1136, 1137, 1140, 1145, 1163, 1165, 1170, 1183, 1192, 1195, 1200], "integ": [9, 38, 77, 78, 90, 191, 193, 195, 210, 211, 212, 214, 218, 222, 228, 231, 235, 242, 245, 246, 248, 251, 254, 257, 258, 259, 261, 266, 269, 275, 287, 294, 307, 314, 326, 330, 336, 342, 352, 370, 393, 394, 399, 409, 412, 414, 415, 416, 427, 438, 440, 442, 443, 454, 455, 459, 465, 469, 474, 475, 516, 517, 520, 538, 573, 601, 627, 630, 678, 692, 696, 697, 699, 735, 738, 764, 788, 790, 791, 797, 972, 982, 983, 984, 991, 1031, 1044, 1047, 1075, 1081, 1087, 1114, 1158, 1160, 1187, 1191, 1206], "string": [9, 29, 42, 50, 58, 92, 99, 108, 116, 120, 131, 132, 170, 175, 200, 210, 211, 212, 214, 217, 218, 221, 224, 228, 230, 231, 233, 234, 236, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 254, 256, 257, 260, 262, 263, 264, 266, 267, 269, 272, 275, 277, 278, 280, 282, 284, 285, 287, 291, 292, 294, 295, 297, 305, 306, 308, 311, 312, 314, 323, 324, 326, 327, 328, 330, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 366, 370, 375, 381, 394, 397, 401, 408, 417, 423, 432, 438, 439, 445, 449, 452, 456, 461, 465, 469, 474, 475, 479, 487, 498, 502, 504, 519, 521, 522, 523, 526, 528, 531, 532, 533, 535, 536, 537, 538, 554, 555, 556, 561, 572, 573, 581, 587, 590, 596, 598, 601, 602, 605, 620, 622, 639, 642, 643, 644, 648, 651, 652, 653, 654, 655, 656, 659, 663, 674, 676, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 697, 698, 699, 701, 703, 704, 708, 723, 727, 729, 730, 731, 732, 735, 737, 739, 740, 744, 754, 755, 756, 757, 759, 771, 776, 788, 789, 790, 791, 870, 961, 972, 976, 979, 983, 991, 996, 1005, 1009, 1036, 1037, 1040, 1048, 1057, 1059, 1064, 1072, 1086, 1094, 1095, 1096, 1101, 1106, 1109, 1110, 1111, 1114, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1148, 1149, 1150, 1151, 1153, 1156, 1187, 1200], "compound": [9, 29, 92, 166, 209, 212, 217, 218, 219, 228, 230, 236, 240, 241, 243, 244, 246, 247, 249, 250, 252, 254, 256, 257, 262, 263, 264, 266, 267, 269, 270, 272, 284, 285, 292, 295, 302, 304, 305, 306, 308, 311, 312, 314, 323, 324, 326, 327, 328, 330, 333, 334, 339, 340, 342, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 393, 424, 443, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1093, 1094, 1095, 1096, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164, 1200], "list": [9, 27, 29, 37, 62, 65, 92, 101, 126, 148, 153, 166, 169, 170, 173, 180, 184, 195, 200, 202, 205, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 228, 230, 231, 233, 236, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 254, 256, 257, 258, 263, 264, 266, 267, 269, 270, 272, 274, 278, 279, 282, 284, 285, 287, 288, 289, 292, 294, 295, 298, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 314, 323, 324, 326, 327, 328, 329, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 352, 353, 354, 355, 362, 365, 367, 370, 374, 375, 376, 388, 446, 452, 456, 457, 465, 469, 471, 473, 474, 475, 479, 480, 483, 492, 499, 501, 502, 541, 543, 551, 554, 587, 589, 591, 595, 599, 600, 605, 630, 646, 659, 663, 682, 692, 697, 700, 735, 743, 749, 754, 767, 768, 788, 789, 790, 791, 792, 800, 804, 805, 808, 815, 816, 819, 829, 840, 842, 846, 847, 853, 856, 859, 864, 865, 866, 867, 868, 871, 872, 878, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 905, 906, 909, 910, 912, 913, 914, 915, 916, 918, 926, 934, 943, 963, 965, 967, 973, 975, 983, 985, 989, 992, 995, 997, 1012, 1014, 1029, 1033, 1036, 1037, 1040, 1041, 1042, 1055, 1057, 1059, 1060, 1066, 1067, 1072, 1073, 1074, 1075, 1078, 1084, 1086, 1087, 1088, 1094, 1096, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1127, 1129, 1132, 1134, 1135, 1136, 1137, 1142, 1145, 1155, 1158, 1162, 1172, 1177, 1184, 1187, 1200, 1201], "arrai": [9, 99, 110, 126, 196, 217, 218, 223, 228, 230, 234, 235, 237, 243, 251, 256, 261, 270, 273, 277, 278, 298, 306, 312, 351, 393, 402, 408, 412, 423, 432, 439, 449, 452, 456, 458, 460, 461, 464, 465, 469, 474, 475, 553, 556, 579, 587, 590, 628, 629, 631, 633, 635, 638, 639, 644, 648, 660, 680, 687, 688, 689, 690, 691, 692, 695, 697, 735, 743, 758, 775, 788, 790, 791, 809, 870, 875, 991, 1068, 1072, 1084, 1137, 1140, 1142, 1165, 1200], "javascript": [9, 23, 171, 206, 216, 228, 237, 261, 266, 1031, 1077], "std": [9, 42, 50, 58, 108, 110, 111, 112, 113, 116, 120, 122, 123, 126, 131, 132, 135, 184, 200, 201, 228, 276, 289, 298, 300, 481, 482, 487, 495, 498, 500, 502, 504, 509, 516, 519, 521, 522, 523, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 541, 543, 544, 549, 551, 553, 554, 555, 557, 558, 559, 560, 571, 573, 581, 591, 595, 598, 599, 601, 606, 607, 608, 612, 620, 622, 626, 627, 628, 629, 630, 635, 636, 637, 638, 639, 641, 642, 643, 647, 648, 650, 653, 654, 655, 656, 659, 660, 663, 664, 666, 667, 670, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 692, 697, 699, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 737, 739, 740, 742, 747, 750, 753, 757, 760, 762, 768, 772, 775, 777, 779, 785, 787, 788, 790, 791, 942, 976, 979, 983, 991, 993, 1005, 1009, 1142, 1177, 1182, 1190], "vector": [9, 13, 108, 110, 112, 113, 126, 131, 132, 135, 200, 228, 234, 251, 277, 278, 291, 297, 298, 300, 338, 351, 500, 502, 526, 527, 543, 544, 551, 557, 558, 559, 560, 571, 589, 591, 595, 599, 601, 606, 611, 635, 637, 638, 639, 641, 644, 646, 659, 663, 677, 679, 680, 687, 688, 689, 690, 692, 698, 699, 703, 708, 709, 710, 717, 718, 719, 720, 721, 723, 743, 744, 747, 776, 785, 787, 791, 1009, 1065, 1144, 1161, 1182], "dictionari": [9, 29, 62, 92, 195, 205, 210, 211, 212, 214, 217, 218, 219, 222, 224, 228, 230, 231, 236, 240, 241, 243, 244, 246, 247, 249, 250, 252, 254, 256, 257, 260, 263, 264, 266, 267, 269, 270, 272, 275, 282, 284, 285, 287, 292, 294, 295, 299, 301, 302, 304, 305, 306, 308, 311, 312, 314, 317, 320, 323, 324, 326, 327, 328, 330, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 352, 370, 375, 378, 744, 791, 1037, 1040, 1044, 1045, 1046, 1047, 1050, 1051, 1055, 1059, 1094, 1096, 1104, 1109, 1114, 1115, 1120, 1123, 1124, 1125, 1127, 1129, 1130, 1135, 1137, 1145, 1155, 1162, 1164, 1200], "valu": [9, 58, 86, 110, 126, 127, 131, 132, 138, 143, 144, 173, 175, 177, 188, 190, 192, 193, 194, 206, 210, 212, 214, 216, 221, 223, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 242, 243, 245, 246, 248, 249, 251, 253, 255, 256, 258, 261, 265, 268, 270, 271, 282, 283, 286, 289, 291, 293, 303, 306, 307, 312, 313, 325, 329, 335, 338, 340, 342, 347, 351, 356, 364, 370, 392, 397, 399, 401, 402, 412, 415, 416, 417, 425, 427, 428, 436, 438, 440, 441, 446, 457, 461, 463, 465, 469, 474, 475, 479, 482, 487, 489, 492, 497, 500, 502, 516, 517, 519, 522, 526, 528, 531, 533, 534, 536, 547, 548, 549, 551, 554, 561, 573, 590, 599, 600, 601, 604, 610, 613, 651, 653, 655, 656, 697, 699, 700, 706, 708, 717, 723, 726, 729, 730, 731, 735, 744, 755, 769, 785, 788, 790, 791, 794, 797, 816, 818, 820, 822, 838, 848, 870, 883, 934, 943, 964, 972, 974, 975, 977, 978, 979, 982, 985, 991, 994, 1005, 1006, 1009, 1010, 1029, 1031, 1033, 1036, 1040, 1044, 1046, 1048, 1055, 1066, 1067, 1068, 1076, 1078, 1081, 1083, 1084, 1088, 1094, 1097, 1102, 1104, 1107, 1114, 1116, 1137, 1140, 1142, 1145, 1148, 1149, 1155, 1156, 1159, 1160, 1161, 1177], "map": [9, 32, 34, 42, 61, 63, 108, 110, 111, 131, 132, 175, 182, 200, 206, 220, 222, 224, 228, 230, 231, 233, 234, 237, 245, 246, 248, 263, 277, 278, 280, 286, 298, 300, 307, 326, 337, 340, 341, 370, 473, 498, 502, 531, 535, 536, 537, 543, 554, 560, 589, 591, 595, 650, 653, 654, 655, 656, 659, 663, 692, 695, 699, 703, 709, 735, 754, 755, 756, 758, 790, 791, 822, 834, 996, 1005, 1006, 1054, 1058, 1067, 1068, 1087, 1144, 1194, 1204], "mathematisch": [9, 228, 286], "mengen": [9, 217, 218, 228, 1200], "while": [9, 13, 29, 53, 54, 62, 92, 116, 122, 166, 177, 179, 180, 188, 194, 205, 209, 210, 212, 213, 214, 215, 217, 218, 219, 221, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 240, 242, 243, 246, 247, 248, 251, 252, 254, 256, 257, 259, 260, 262, 263, 264, 265, 267, 269, 270, 272, 282, 285, 286, 292, 294, 295, 299, 301, 305, 306, 307, 311, 312, 313, 323, 324, 325, 327, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 362, 370, 373, 375, 393, 395, 399, 401, 403, 410, 415, 417, 431, 432, 438, 439, 443, 445, 449, 452, 453, 456, 458, 460, 465, 467, 469, 474, 475, 485, 497, 502, 516, 523, 541, 590, 626, 630, 631, 634, 636, 638, 641, 656, 679, 685, 695, 697, 708, 723, 724, 725, 731, 735, 756, 767, 769, 785, 788, 790, 791, 815, 818, 826, 828, 838, 840, 846, 847, 853, 856, 859, 871, 875, 882, 934, 935, 942, 943, 955, 960, 961, 962, 963, 970, 979, 985, 990, 991, 994, 996, 1002, 1005, 1009, 1024, 1029, 1037, 1038, 1039, 1040, 1044, 1047, 1059, 1060, 1064, 1069, 1074, 1086, 1093, 1094, 1095, 1096, 1100, 1106, 1108, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1143, 1144, 1147, 1151, 1164, 1187, 1191, 1193, 1195, 1200], "function": [9, 21, 29, 38, 50, 61, 62, 63, 80, 82, 84, 92, 99, 112, 113, 126, 127, 144, 148, 166, 170, 173, 175, 184, 192, 205, 206, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 228, 230, 231, 233, 234, 236, 240, 241, 243, 244, 246, 247, 248, 249, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 272, 275, 276, 283, 285, 287, 289, 291, 292, 294, 295, 298, 300, 301, 302, 303, 305, 306, 308, 311, 312, 313, 319, 326, 328, 329, 336, 342, 348, 352, 355, 365, 366, 372, 373, 375, 388, 392, 393, 399, 402, 406, 407, 408, 413, 418, 422, 423, 431, 432, 433, 434, 436, 438, 443, 445, 446, 449, 450, 451, 452, 454, 456, 457, 458, 460, 465, 467, 469, 471, 474, 475, 478, 486, 492, 500, 505, 517, 538, 542, 543, 554, 557, 558, 559, 560, 562, 571, 584, 590, 595, 599, 602, 605, 607, 608, 609, 610, 616, 621, 624, 626, 640, 646, 650, 659, 662, 663, 670, 673, 676, 677, 678, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 697, 699, 700, 703, 704, 712, 715, 721, 723, 732, 733, 734, 735, 737, 739, 740, 745, 751, 755, 757, 758, 768, 775, 776, 777, 779, 780, 781, 788, 789, 790, 791, 802, 805, 808, 809, 815, 819, 822, 826, 829, 832, 838, 840, 842, 847, 853, 854, 856, 857, 858, 859, 868, 871, 872, 934, 942, 955, 957, 963, 964, 965, 972, 973, 975, 980, 981, 982, 988, 989, 991, 992, 995, 997, 1010, 1012, 1020, 1030, 1037, 1040, 1041, 1042, 1043, 1051, 1059, 1061, 1064, 1065, 1069, 1071, 1093, 1094, 1095, 1096, 1099, 1102, 1103, 1106, 1107, 1108, 1109, 1114, 1117, 1118, 1120, 1121, 1122, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1147, 1153, 1166, 1170, 1182, 1190, 1191, 1192, 1200], "xx": [10, 242, 273, 307, 313, 329, 335, 351], "yy": 10, "kur": [11, 23, 191, 193, 196, 208, 388, 1185, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1203, 1204, 1206], "fand": [11, 208, 388], "team": [11, 124, 127, 144, 180, 185, 188, 189, 200, 208, 209, 210, 225, 234, 259, 301, 388, 877, 883, 890, 892, 1038, 1136, 1184, 1192], "statt": [11, 23, 149, 208, 388, 1201, 1202, 1208], "wurd": [11, 182, 196, 200, 206, 208, 217, 370, 375, 388, 1189, 1200, 1201, 1207], "\u00fcber": [11, 23, 149, 181, 182, 187, 191, 192, 196, 200, 208, 217, 218, 222, 231, 236, 262, 371, 388, 1184, 1194, 1200, 1201, 1206, 1207], "meinen": [11, 23, 208, 236, 252, 264, 388], "partner": [11, 23, 208, 388, 1184], "durat": [12, 27, 178, 188, 450, 484, 554, 765, 769, 770, 1037, 1059, 1136, 1164, 1192, 1193, 1195, 1205], "each": [12, 40, 62, 78, 108, 112, 113, 132, 135, 173, 174, 175, 188, 194, 212, 213, 225, 242, 245, 248, 258, 261, 265, 298, 300, 307, 355, 361, 367, 370, 375, 443, 468, 471, 473, 497, 505, 538, 552, 553, 609, 695, 770, 776, 789, 826, 834, 838, 865, 871, 892, 896, 898, 942, 943, 944, 982, 986, 994, 1028, 1040, 1043, 1048, 1054, 1115, 1136, 1142, 1144, 1145, 1146, 1161, 1165, 1195, 1205], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 62, 65, 66, 70, 77, 82, 85, 86, 92, 99, 124, 126, 144, 154, 161, 166, 167, 169, 173, 174, 175, 177, 180, 188, 197, 201, 202, 205, 209, 210, 211, 212, 213, 214, 217, 224, 225, 230, 233, 234, 235, 236, 240, 242, 243, 246, 249, 250, 251, 252, 254, 256, 258, 259, 261, 262, 264, 266, 267, 270, 279, 282, 284, 285, 287, 288, 289, 295, 299, 300, 305, 306, 309, 311, 312, 314, 323, 324, 327, 328, 333, 334, 336, 338, 339, 342, 345, 346, 348, 349, 352, 353, 356, 357, 358, 359, 360, 361, 370, 372, 375, 381, 411, 416, 425, 427, 455, 458, 459, 461, 467, 471, 473, 477, 491, 497, 590, 599, 600, 623, 630, 696, 705, 709, 710, 740, 744, 749, 758, 759, 789, 791, 807, 809, 838, 848, 857, 865, 866, 884, 901, 935, 942, 943, 944, 955, 959, 965, 980, 997, 1005, 1031, 1037, 1038, 1040, 1047, 1048, 1055, 1059, 1067, 1078, 1086, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1150, 1151, 1152, 1153, 1157, 1165, 1170, 1179, 1192, 1193, 1200, 1205], "book": [12, 29, 32, 169, 173, 178, 188, 189, 200, 209, 234, 256, 292, 301, 302, 388, 478, 484, 898, 1037, 1059, 1136, 1151, 1164, 1191, 1193, 1195, 1205], "separ": [12, 38, 80, 105, 106, 126, 173, 200, 202, 212, 232, 245, 251, 261, 265, 268, 271, 286, 289, 292, 293, 295, 303, 307, 315, 329, 331, 335, 341, 347, 400, 438, 459, 479, 482, 489, 501, 505, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 573, 590, 595, 620, 741, 769, 789, 791, 806, 807, 840, 874, 878, 883, 929, 931, 934, 944, 980, 996, 1012, 1014, 1017, 1018, 1019, 1020, 1022, 1030, 1035, 1093, 1110, 1115, 1136, 1145, 1177, 1187, 1192, 1205], "requir": [12, 13, 27, 37, 39, 42, 60, 91, 110, 124, 126, 154, 165, 169, 173, 174, 175, 178, 180, 184, 193, 201, 203, 205, 209, 213, 221, 232, 235, 246, 249, 251, 253, 258, 259, 273, 289, 298, 300, 301, 324, 381, 392, 425, 455, 457, 480, 489, 492, 500, 520, 522, 542, 551, 554, 573, 622, 635, 651, 688, 699, 705, 706, 712, 715, 720, 721, 745, 752, 781, 782, 935, 943, 944, 955, 960, 996, 998, 1005, 1024, 1029, 1037, 1050, 1059, 1060, 1078, 1087, 1088, 1092, 1145, 1151, 1164, 1165, 1170, 1172, 1173, 1179, 1191, 1193, 1195, 1205, 1208], "particip": [12, 178, 180, 202, 205, 289, 320, 538, 937, 1060, 1074, 1095, 1205], "should": [12, 37, 43, 45, 55, 57, 79, 82, 124, 127, 128, 131, 143, 144, 154, 169, 174, 175, 178, 180, 184, 188, 195, 201, 205, 209, 234, 235, 249, 255, 261, 265, 289, 324, 327, 329, 356, 361, 376, 377, 391, 416, 438, 453, 463, 467, 477, 482, 489, 495, 500, 505, 506, 508, 509, 517, 554, 598, 605, 607, 703, 706, 708, 712, 723, 767, 797, 816, 828, 830, 834, 838, 863, 882, 898, 905, 910, 942, 943, 944, 951, 970, 986, 997, 1035, 1044, 1048, 1056, 1067, 1102, 1106, 1115, 1143, 1153, 1165, 1170, 1171, 1205], "fluent": [12, 312, 371, 372, 1137, 1205], "target": [12, 17, 40, 62, 110, 174, 176, 184, 225, 234, 316, 332, 372, 461, 464, 480, 483, 484, 490, 493, 506, 610, 791, 811, 813, 818, 838, 900, 965, 990, 1014, 1015, 1024, 1026, 1033, 1037, 1044, 1046, 1059, 1144, 1151, 1164, 1172, 1195], "audienc": [12, 173, 175, 205, 210, 327, 1037, 1059, 1092, 1151, 1164, 1190, 1195], "english": [12, 29, 108, 166, 193, 212, 219, 230, 240, 243, 252, 256, 262, 264, 267, 269, 270, 285, 292, 297, 305, 306, 311, 312, 324, 333, 334, 339, 340, 345, 346, 349, 350, 368, 369, 370, 375, 484, 791, 1037, 1059, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135, 1136, 1150, 1151, 1164], "german": [12, 14, 484, 1037, 1059, 1136, 1150, 1151, 1153, 1164], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 62, 79, 80, 87, 91, 101, 108, 124, 126, 127, 129, 131, 132, 133, 134, 135, 137, 139, 142, 143, 144, 148, 154, 158, 159, 161, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 188, 190, 193, 194, 195, 203, 205, 209, 210, 219, 224, 225, 229, 232, 234, 235, 240, 242, 245, 246, 248, 249, 251, 252, 258, 261, 265, 270, 273, 282, 286, 289, 291, 295, 297, 298, 299, 300, 302, 306, 307, 315, 316, 324, 328, 331, 332, 343, 350, 356, 361, 370, 373, 374, 376, 381, 384, 389, 392, 401, 402, 403, 405, 411, 428, 441, 447, 450, 460, 466, 479, 480, 485, 489, 490, 491, 492, 496, 497, 500, 501, 502, 510, 511, 512, 513, 514, 518, 521, 522, 538, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 561, 562, 571, 572, 573, 581, 587, 590, 595, 597, 598, 599, 600, 605, 607, 608, 613, 614, 616, 631, 635, 648, 662, 666, 667, 669, 670, 682, 686, 688, 689, 691, 695, 698, 703, 705, 706, 707, 708, 710, 717, 723, 737, 738, 740, 743, 744, 745, 747, 749, 753, 754, 755, 756, 757, 758, 767, 769, 775, 777, 779, 780, 781, 782, 786, 789, 792, 794, 797, 799, 801, 802, 804, 806, 807, 809, 811, 813, 816, 818, 824, 826, 828, 830, 832, 834, 838, 841, 845, 846, 852, 854, 864, 865, 866, 870, 873, 876, 877, 894, 898, 899, 901, 902, 904, 907, 909, 925, 935, 942, 943, 944, 965, 968, 970, 971, 972, 976, 979, 981, 983, 986, 993, 1005, 1009, 1012, 1013, 1014, 1015, 1020, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1040, 1048, 1049, 1052, 1053, 1055, 1058, 1060, 1062, 1065, 1073, 1076, 1077, 1078, 1088, 1092, 1095, 1104, 1108, 1111, 1122, 1133, 1134, 1140, 1142, 1145, 1150, 1151, 1153, 1155, 1158, 1159, 1160, 1164, 1167, 1170, 1175, 1177, 1182, 1192, 1193, 1195, 1205], "also": [12, 13, 23, 27, 31, 57, 62, 124, 127, 129, 132, 134, 135, 137, 139, 142, 143, 154, 169, 174, 175, 177, 178, 180, 181, 183, 184, 185, 192, 194, 195, 196, 197, 200, 202, 203, 205, 206, 209, 215, 217, 235, 242, 248, 258, 259, 261, 265, 271, 277, 278, 280, 289, 291, 298, 299, 300, 306, 307, 316, 324, 328, 332, 356, 388, 479, 480, 485, 490, 497, 506, 516, 519, 521, 522, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 561, 562, 572, 597, 598, 599, 600, 605, 607, 613, 631, 648, 651, 666, 667, 669, 695, 703, 706, 707, 708, 710, 723, 734, 737, 740, 743, 744, 745, 747, 749, 753, 755, 758, 759, 767, 769, 775, 780, 781, 782, 789, 828, 838, 843, 864, 876, 882, 883, 898, 902, 904, 907, 909, 929, 935, 945, 954, 955, 968, 972, 976, 983, 993, 1014, 1015, 1022, 1027, 1029, 1031, 1033, 1034, 1035, 1037, 1040, 1048, 1052, 1058, 1060, 1064, 1067, 1077, 1078, 1081, 1092, 1104, 1108, 1111, 1122, 1142, 1143, 1151, 1155, 1158, 1159, 1160, 1164, 1167, 1170, 1192, 1194, 1200, 1201, 1205], "train": [12, 13, 14, 23, 29, 30, 32, 37, 108, 152, 168, 169, 174, 178, 185, 186, 188, 196, 197, 200, 201, 202, 205, 208, 232, 242, 248, 258, 261, 291, 298, 300, 303, 315, 331, 341, 354, 378, 388, 480, 482, 483, 484, 485, 486, 488, 489, 491, 493, 495, 496, 497, 498, 499, 500, 502, 504, 507, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 551, 553, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 595, 675, 755, 789, 792, 794, 797, 802, 807, 813, 816, 824, 945, 951, 953, 954, 955, 976, 979, 1002, 1005, 1009, 1036, 1037, 1039, 1059, 1060, 1088, 1092, 1095, 1139, 1140, 1143, 1144, 1151, 1164, 1175, 1179, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "sourc": [13, 23, 28, 30, 39, 60, 66, 70, 75, 88, 112, 113, 126, 144, 154, 172, 173, 174, 175, 178, 179, 180, 184, 188, 190, 191, 193, 194, 201, 214, 219, 224, 242, 248, 256, 258, 261, 265, 270, 278, 280, 282, 285, 286, 289, 310, 317, 433, 434, 437, 472, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 501, 552, 555, 556, 670, 703, 706, 712, 717, 723, 753, 806, 836, 839, 850, 882, 898, 899, 931, 972, 1012, 1013, 1015, 1016, 1018, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1067, 1124, 1133, 1172, 1179, 1185, 1195, 1202], "under": [13, 21, 35, 55, 135, 139, 143, 172, 173, 175, 180, 201, 212, 214, 324, 388, 502, 517, 554, 874, 875, 942, 943, 944, 945, 946, 947, 954, 955, 997, 1012, 1036, 1043, 1050, 1084, 1170], "why": [13, 24, 28, 45, 50, 66, 71, 117, 121, 122, 125, 126, 144, 157, 169, 173, 174, 179, 185, 205, 209, 210, 212, 214, 225, 234, 254, 292, 295, 301, 302, 323, 337, 370, 373, 374, 377, 391, 403, 409, 416, 419, 437, 448, 453, 454, 459, 463, 466, 473, 478, 516, 539, 598, 613, 631, 644, 670, 673, 689, 695, 696, 712, 743, 759, 762, 776, 787, 806, 818, 834, 838, 869, 875, 878, 935, 988, 991, 1009, 1024, 1026, 1034, 1035, 1038, 1084, 1086, 1137, 1142, 1152, 1160], "appli": [13, 78, 85, 170, 175, 214, 232, 291, 297, 324, 335, 420, 455, 461, 479, 610, 710, 745, 776, 811, 838, 878, 881, 898, 942, 943, 968, 1029, 1156], "websit": [13, 23, 174, 188, 1166, 1179], "contain": [13, 17, 29, 35, 38, 60, 108, 109, 110, 112, 113, 124, 126, 154, 169, 170, 176, 179, 184, 188, 193, 195, 200, 201, 203, 205, 206, 209, 212, 214, 232, 234, 235, 242, 248, 258, 259, 261, 265, 272, 273, 276, 277, 278, 291, 298, 307, 324, 341, 354, 355, 356, 365, 372, 373, 379, 381, 418, 437, 451, 471, 473, 479, 481, 482, 486, 500, 516, 538, 541, 543, 552, 553, 554, 560, 561, 562, 595, 596, 598, 606, 615, 632, 635, 648, 659, 663, 677, 686, 691, 692, 698, 703, 743, 755, 758, 776, 785, 786, 787, 789, 791, 794, 799, 807, 809, 811, 832, 834, 838, 858, 865, 866, 869, 878, 880, 903, 904, 905, 910, 917, 942, 943, 944, 951, 972, 980, 981, 996, 1006, 1012, 1015, 1020, 1024, 1029, 1036, 1038, 1043, 1060, 1082, 1085, 1092, 1094, 1106, 1115, 1119, 1134, 1137, 1139, 1143, 1145, 1148, 1150, 1155, 1165, 1166, 1170, 1176, 1177, 1189, 1190], "give": [13, 27, 40, 53, 61, 63, 67, 112, 113, 131, 166, 170, 172, 173, 175, 180, 183, 194, 197, 201, 202, 209, 214, 225, 233, 265, 270, 282, 298, 300, 328, 389, 403, 404, 419, 435, 438, 446, 471, 477, 479, 482, 497, 549, 551, 567, 584, 620, 635, 681, 689, 712, 741, 838, 864, 871, 889, 891, 943, 944, 963, 964, 976, 979, 998, 1000, 1005, 1006, 1012, 1015, 1024, 1033, 1036, 1059, 1076, 1088, 1137, 1141, 1142, 1165, 1170, 1172, 1190, 1193, 1195], "structur": [13, 29, 80, 91, 110, 131, 173, 188, 210, 224, 251, 252, 259, 261, 262, 264, 267, 270, 273, 276, 285, 292, 295, 302, 306, 312, 316, 317, 320, 324, 328, 332, 334, 338, 340, 346, 370, 374, 376, 378, 393, 403, 411, 416, 445, 447, 451, 452, 456, 465, 468, 469, 474, 475, 479, 480, 484, 492, 499, 517, 542, 552, 571, 620, 653, 686, 695, 697, 735, 788, 790, 791, 826, 828, 832, 836, 838, 858, 894, 925, 961, 967, 983, 988, 1006, 1076, 1078, 1119, 1125, 1162, 1164, 1171, 1178, 1190], "much": [13, 27, 35, 38, 62, 67, 82, 131, 135, 137, 142, 148, 172, 173, 174, 175, 180, 183, 188, 197, 203, 205, 209, 210, 211, 213, 235, 246, 248, 249, 251, 253, 259, 273, 274, 277, 278, 280, 292, 295, 301, 302, 323, 324, 327, 337, 338, 373, 405, 416, 427, 463, 467, 477, 492, 517, 596, 606, 612, 631, 652, 672, 695, 696, 705, 706, 710, 723, 735, 736, 737, 741, 743, 745, 755, 759, 779, 780, 782, 790, 791, 794, 809, 816, 824, 826, 832, 834, 838, 877, 878, 927, 935, 938, 941, 943, 955, 997, 1006, 1009, 1010, 1012, 1014, 1024, 1031, 1034, 1035, 1048, 1049, 1054, 1055, 1058, 1067, 1084, 1137, 1143, 1144, 1170, 1172, 1190], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 61, 62, 63, 67, 79, 80, 116, 122, 126, 127, 131, 132, 134, 137, 139, 142, 144, 148, 166, 172, 173, 174, 175, 177, 178, 180, 183, 184, 188, 193, 196, 197, 201, 202, 203, 205, 209, 211, 214, 224, 225, 232, 234, 235, 242, 248, 249, 251, 252, 258, 261, 274, 276, 278, 280, 286, 289, 291, 292, 295, 298, 300, 324, 327, 351, 356, 361, 373, 381, 402, 405, 409, 431, 433, 438, 443, 455, 459, 467, 470, 477, 483, 487, 489, 492, 495, 496, 497, 517, 541, 551, 552, 553, 554, 555, 567, 573, 581, 584, 590, 599, 602, 605, 609, 610, 611, 613, 634, 651, 660, 667, 669, 672, 675, 676, 685, 686, 694, 695, 698, 699, 705, 706, 723, 741, 743, 744, 754, 755, 758, 759, 765, 780, 782, 787, 789, 792, 794, 796, 799, 807, 809, 811, 816, 822, 828, 830, 832, 834, 838, 843, 851, 854, 858, 866, 869, 870, 874, 875, 877, 880, 898, 900, 903, 905, 910, 927, 935, 936, 938, 942, 943, 944, 945, 954, 955, 959, 963, 965, 968, 972, 978, 980, 981, 999, 1006, 1010, 1012, 1014, 1015, 1028, 1031, 1033, 1035, 1038, 1040, 1048, 1053, 1058, 1060, 1062, 1064, 1066, 1068, 1072, 1076, 1078, 1081, 1082, 1085, 1088, 1091, 1094, 1102, 1105, 1115, 1116, 1119, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1139, 1142, 1144, 1145, 1153, 1155, 1156, 1161, 1170, 1171, 1172, 1177, 1179, 1190, 1195], "topic": [13, 16, 27, 28, 29, 61, 63, 71, 80, 92, 99, 108, 114, 115, 126, 148, 166, 170, 175, 179, 180, 193, 197, 210, 213, 214, 215, 217, 225, 230, 240, 243, 249, 259, 261, 262, 277, 278, 282, 300, 302, 306, 328, 356, 357, 358, 359, 361, 369, 370, 375, 376, 381, 383, 384, 387, 389, 573, 614, 616, 675, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 789, 838, 840, 850, 861, 868, 870, 872, 879, 884, 888, 890, 892, 893, 918, 928, 941, 943, 946, 947, 949, 965, 1015, 1024, 1025, 1029, 1037, 1042, 1059, 1060, 1064, 1092, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1144, 1150, 1164, 1167, 1170, 1174, 1192, 1193, 1200], "other": [13, 27, 29, 33, 39, 40, 51, 53, 61, 62, 63, 65, 80, 82, 84, 112, 113, 124, 143, 151, 154, 161, 173, 174, 175, 176, 177, 180, 184, 188, 197, 201, 205, 209, 210, 212, 213, 214, 225, 233, 242, 248, 249, 258, 261, 265, 286, 307, 314, 315, 324, 327, 331, 351, 356, 373, 377, 381, 401, 407, 416, 425, 443, 446, 457, 473, 477, 480, 482, 488, 489, 492, 493, 494, 500, 581, 596, 598, 599, 605, 607, 608, 611, 612, 613, 623, 651, 673, 696, 705, 706, 737, 741, 753, 755, 757, 759, 770, 771, 776, 789, 791, 809, 828, 830, 864, 871, 874, 875, 891, 896, 898, 900, 920, 937, 942, 943, 944, 947, 951, 954, 963, 964, 970, 971, 983, 988, 991, 997, 1006, 1010, 1012, 1014, 1024, 1031, 1033, 1035, 1044, 1047, 1048, 1049, 1052, 1055, 1058, 1062, 1064, 1065, 1066, 1067, 1073, 1074, 1078, 1080, 1082, 1084, 1085, 1099, 1115, 1142, 1146, 1149, 1151, 1153, 1170, 1182, 1190, 1192, 1193, 1195, 1205], "exampl": [13, 17, 24, 29, 39, 40, 66, 80, 89, 124, 126, 127, 144, 166, 167, 169, 172, 173, 174, 175, 180, 183, 184, 188, 192, 193, 194, 197, 201, 205, 209, 211, 213, 224, 232, 234, 238, 242, 245, 248, 249, 251, 257, 258, 259, 262, 263, 264, 266, 270, 273, 282, 289, 291, 292, 295, 299, 301, 302, 306, 307, 315, 317, 320, 323, 324, 327, 331, 337, 350, 358, 361, 370, 378, 381, 394, 400, 401, 402, 410, 416, 468, 480, 491, 492, 493, 500, 504, 506, 516, 517, 519, 521, 541, 542, 554, 573, 609, 611, 613, 622, 631, 638, 676, 685, 703, 712, 717, 732, 733, 737, 738, 742, 745, 749, 755, 759, 789, 791, 797, 809, 816, 838, 865, 866, 870, 875, 895, 898, 908, 920, 927, 935, 942, 943, 944, 945, 954, 958, 965, 968, 969, 970, 971, 972, 980, 987, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1022, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1040, 1047, 1054, 1057, 1059, 1060, 1061, 1063, 1071, 1076, 1085, 1092, 1094, 1110, 1115, 1133, 1134, 1135, 1143, 1144, 1150, 1152, 1158, 1159, 1164, 1169, 1177, 1179, 1192, 1193], "here": [13, 14, 62, 70, 75, 76, 79, 80, 82, 83, 87, 108, 116, 122, 124, 131, 148, 154, 159, 161, 170, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 193, 195, 201, 202, 203, 205, 209, 211, 214, 224, 225, 229, 232, 233, 234, 235, 240, 243, 251, 252, 256, 259, 261, 265, 278, 280, 282, 286, 289, 291, 295, 298, 300, 307, 310, 325, 340, 343, 354, 356, 361, 367, 370, 373, 374, 376, 389, 392, 457, 459, 466, 473, 488, 489, 495, 497, 517, 522, 533, 536, 539, 541, 552, 554, 556, 571, 573, 581, 595, 598, 599, 602, 608, 614, 616, 620, 632, 660, 666, 686, 688, 689, 695, 706, 712, 717, 723, 733, 737, 742, 745, 747, 753, 755, 758, 767, 781, 792, 806, 811, 813, 816, 828, 834, 838, 864, 898, 935, 937, 942, 943, 944, 951, 955, 962, 968, 972, 978, 983, 996, 1005, 1009, 1010, 1021, 1024, 1028, 1030, 1033, 1034, 1035, 1036, 1048, 1051, 1055, 1060, 1063, 1064, 1071, 1077, 1087, 1088, 1095, 1116, 1119, 1136, 1142, 1143, 1144, 1145, 1150, 1170, 1172, 1175, 1179, 1193, 1195], "discuss": [13, 42, 50, 65, 126, 205, 209, 210, 212, 214, 249, 259, 295, 299, 300, 323, 338, 370, 374, 377, 378, 381, 383, 384, 388, 490, 578, 581, 584, 587, 590, 593, 763, 769, 818, 851, 898, 1005, 1009, 1038, 1177, 1179, 1182, 1193], "over": [13, 33, 34, 35, 38, 42, 60, 65, 91, 99, 131, 132, 144, 166, 169, 170, 172, 173, 175, 177, 178, 183, 193, 197, 205, 209, 211, 212, 213, 224, 229, 232, 234, 235, 242, 247, 248, 249, 251, 254, 257, 285, 289, 292, 295, 301, 302, 318, 323, 327, 338, 355, 370, 373, 416, 427, 428, 443, 457, 477, 487, 495, 505, 519, 596, 602, 630, 648, 660, 688, 695, 743, 744, 762, 785, 838, 935, 939, 943, 945, 951, 972, 986, 994, 997, 1012, 1024, 1026, 1031, 1034, 1071, 1084, 1088], "lwn": [13, 39, 190, 818, 830, 848, 1185], "attribut": [13, 122, 170, 173, 175, 190, 209, 223, 229, 233, 242, 245, 248, 253, 255, 260, 261, 265, 268, 271, 275, 276, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 363, 365, 374, 381, 455, 471, 473, 485, 500, 767, 789, 870, 876, 897, 901, 968, 980, 981, 998, 999, 1006, 1010, 1034, 1035, 1048, 1050, 1061, 1087, 1142, 1206], "sharealik": 13, "cc": [13, 23, 32, 151, 191, 199, 200, 201, 278, 480, 502, 551, 553, 554, 574, 577, 580, 581, 583, 584, 586, 587, 589, 590, 592, 615, 753, 754, 759, 816, 1004, 1005, 1008, 1009, 1014, 1176, 1177, 1179, 1181, 1182], "BY": [13, 23, 35, 723], "sa": [13, 23, 32, 996], "don": [13, 24, 58, 60, 80, 86, 126, 131, 139, 161, 166, 172, 173, 174, 175, 178, 179, 180, 188, 203, 205, 209, 213, 224, 225, 235, 242, 246, 248, 249, 251, 258, 261, 313, 325, 354, 378, 402, 443, 455, 458, 459, 461, 467, 473, 477, 479, 496, 553, 581, 587, 596, 597, 612, 613, 620, 630, 666, 673, 703, 706, 708, 723, 737, 738, 750, 759, 764, 769, 806, 811, 830, 838, 843, 873, 898, 900, 905, 911, 922, 935, 938, 942, 943, 947, 955, 959, 960, 961, 962, 981, 982, 983, 988, 1009, 1010, 1015, 1036, 1044, 1046, 1060, 1063, 1067, 1092, 1146, 1152, 1159, 1165, 1176, 1182], "t": [13, 24, 43, 50, 58, 60, 62, 67, 80, 86, 126, 131, 139, 143, 161, 166, 170, 172, 174, 175, 178, 179, 180, 183, 184, 188, 190, 192, 203, 205, 206, 209, 212, 213, 216, 221, 223, 224, 225, 229, 235, 238, 242, 245, 246, 248, 249, 251, 253, 255, 258, 259, 261, 265, 268, 271, 274, 280, 283, 286, 291, 292, 293, 295, 297, 303, 307, 313, 325, 328, 329, 335, 341, 347, 351, 354, 356, 362, 364, 365, 367, 378, 390, 392, 393, 395, 401, 402, 412, 427, 433, 435, 438, 443, 453, 455, 457, 458, 459, 461, 467, 473, 477, 479, 482, 496, 549, 551, 553, 573, 581, 587, 596, 597, 599, 606, 612, 613, 620, 622, 623, 630, 634, 666, 673, 695, 696, 698, 703, 705, 706, 708, 712, 713, 714, 715, 723, 726, 737, 738, 743, 749, 750, 753, 754, 755, 757, 759, 762, 764, 767, 769, 797, 806, 811, 818, 830, 832, 838, 843, 855, 858, 864, 865, 866, 873, 875, 898, 899, 900, 904, 905, 911, 917, 920, 922, 935, 938, 942, 943, 944, 947, 951, 955, 959, 960, 961, 962, 969, 981, 982, 983, 988, 998, 1005, 1006, 1009, 1010, 1012, 1013, 1015, 1024, 1027, 1030, 1036, 1037, 1044, 1046, 1048, 1060, 1063, 1066, 1067, 1068, 1074, 1080, 1084, 1086, 1087, 1088, 1092, 1094, 1141, 1146, 1150, 1152, 1159, 1165, 1176, 1177, 1182, 1192], "want": [13, 17, 27, 29, 30, 45, 50, 60, 62, 80, 86, 127, 132, 137, 139, 143, 151, 154, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 188, 193, 196, 201, 205, 209, 212, 213, 224, 225, 232, 235, 242, 249, 253, 255, 289, 291, 292, 295, 317, 356, 367, 381, 403, 415, 431, 459, 471, 473, 477, 481, 482, 497, 500, 521, 540, 549, 554, 573, 584, 597, 602, 605, 613, 638, 673, 689, 703, 708, 723, 744, 749, 755, 757, 758, 759, 777, 789, 794, 813, 838, 843, 873, 875, 877, 880, 895, 898, 899, 917, 935, 938, 942, 943, 944, 955, 959, 960, 961, 962, 967, 981, 996, 998, 999, 1000, 1009, 1012, 1014, 1024, 1026, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1043, 1050, 1055, 1059, 1066, 1075, 1078, 1088, 1093, 1095, 1131, 1136, 1146, 1150, 1151, 1153, 1155, 1159, 1170, 1172, 1173, 1177, 1190, 1195], "anybodi": [13, 173, 178, 205, 224, 225, 460, 970, 981, 1182], "monei": [13, 174, 177, 180, 248, 877, 1094], "my": [13, 17, 24, 28, 32, 39, 61, 62, 63, 65, 67, 99, 124, 148, 151, 154, 161, 170, 172, 173, 174, 176, 177, 179, 180, 183, 184, 188, 201, 205, 209, 212, 225, 232, 259, 273, 275, 289, 299, 341, 367, 370, 375, 388, 467, 478, 500, 554, 590, 608, 619, 673, 755, 776, 789, 822, 834, 838, 840, 866, 873, 888, 890, 895, 901, 922, 935, 942, 944, 946, 947, 954, 955, 960, 961, 962, 971, 1006, 1036, 1039, 1048, 1067, 1091, 1131, 1153, 1158, 1159, 1170, 1190], "without": [13, 121, 172, 173, 174, 175, 183, 184, 209, 253, 317, 338, 403, 427, 434, 460, 463, 467, 472, 477, 488, 500, 505, 517, 584, 590, 596, 602, 666, 673, 695, 696, 697, 723, 735, 741, 743, 744, 749, 755, 761, 762, 769, 788, 790, 791, 809, 822, 838, 877, 878, 920, 944, 946, 955, 981, 1000, 1005, 1006, 1010, 1033, 1034, 1037, 1038, 1040, 1047, 1048, 1049, 1051, 1053, 1055, 1062, 1067, 1084, 1170, 1172, 1190, 1195], "modif": [13, 55, 108, 144, 188, 251, 403, 405, 411, 416, 447, 477, 500, 505, 552, 610, 770, 789, 811, 838, 883, 899, 920, 1047, 1067, 1084, 1146, 1182], "back": [13, 29, 32, 62, 65, 124, 157, 174, 175, 178, 184, 209, 211, 213, 238, 246, 251, 262, 264, 282, 297, 317, 320, 453, 468, 519, 544, 573, 593, 613, 627, 632, 670, 703, 717, 752, 759, 771, 791, 806, 811, 820, 838, 840, 869, 901, 935, 942, 955, 996, 1006, 1012, 1031, 1038, 1051, 1055, 1067, 1096, 1130, 1131, 1132, 1135, 1161], "m": [13, 23, 32, 38, 60, 153, 154, 159, 174, 175, 176, 178, 180, 183, 188, 201, 206, 211, 216, 225, 229, 238, 239, 240, 242, 246, 261, 265, 271, 273, 278, 290, 325, 335, 351, 366, 370, 371, 372, 377, 391, 479, 502, 548, 551, 552, 553, 554, 590, 615, 723, 745, 754, 806, 807, 813, 816, 848, 875, 877, 898, 937, 942, 955, 1000, 1053, 1091, 1092, 1099, 1124, 1125, 1142, 1152, 1165, 1170, 1172, 1177], "lawyer": 13, "understand": [13, 126, 172, 173, 175, 179, 180, 183, 184, 188, 197, 205, 209, 234, 261, 292, 295, 298, 300, 301, 302, 317, 320, 323, 327, 372, 381, 409, 457, 466, 473, 505, 541, 682, 703, 712, 733, 744, 838, 877, 883, 935, 1055, 1094, 1137, 1142, 1143, 1160, 1190, 1191, 1192], "permit": [13, 175, 180, 225, 289, 367, 578, 599, 606, 942, 953, 997, 1061, 1162], "exactli": [13, 80, 173, 175, 197, 203, 232, 302, 361, 395, 435, 541, 552, 630, 706, 743, 838, 944, 969, 970, 1010, 1028, 1145, 1164], "gnu": [13, 184, 189, 225, 234, 367, 373, 389, 474, 475, 480, 482, 605, 754, 791, 818, 839, 898, 1013, 1014, 1024, 1026, 1028, 1188, 1192], "free": [13, 32, 179, 184, 200, 225, 367, 450, 464, 502, 579, 599, 605, 607, 667, 686, 687, 689, 690, 706, 733, 752, 753, 754, 774, 802, 809, 840, 960, 961, 962, 974, 997, 1010, 1012, 1143, 1153, 1162, 1187], "document": [13, 24, 40, 42, 66, 80, 88, 126, 131, 154, 170, 173, 175, 177, 184, 185, 191, 194, 201, 213, 225, 231, 232, 240, 242, 247, 248, 249, 251, 258, 261, 265, 278, 280, 282, 291, 298, 300, 303, 324, 326, 344, 351, 356, 361, 370, 377, 378, 453, 454, 457, 464, 480, 481, 482, 483, 485, 488, 489, 490, 491, 492, 493, 505, 552, 571, 612, 616, 630, 631, 675, 686, 688, 698, 703, 710, 712, 717, 733, 734, 740, 742, 745, 747, 754, 755, 756, 758, 765, 766, 767, 769, 771, 785, 789, 809, 811, 834, 838, 839, 846, 850, 864, 870, 877, 884, 888, 890, 892, 922, 923, 924, 926, 927, 929, 930, 938, 942, 943, 944, 978, 985, 993, 1026, 1028, 1029, 1033, 1035, 1036, 1040, 1044, 1046, 1048, 1054, 1071, 1081, 1082, 1133, 1145, 1148, 1155, 1156, 1159, 1161, 1168, 1171, 1178, 1179, 1198, 1199], "ago": [13, 175, 179, 235, 863], "wa": [13, 37, 53, 80, 124, 132, 139, 144, 154, 169, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 188, 190, 192, 193, 194, 196, 200, 201, 206, 208, 209, 212, 216, 222, 223, 229, 232, 235, 238, 239, 249, 251, 253, 255, 262, 265, 274, 286, 293, 299, 302, 307, 325, 337, 341, 370, 375, 388, 391, 438, 463, 483, 587, 595, 596, 605, 606, 651, 680, 687, 688, 689, 690, 691, 692, 699, 703, 706, 761, 789, 791, 813, 820, 828, 834, 873, 895, 925, 927, 935, 944, 971, 991, 1010, 1035, 1067, 1142, 1156, 1159, 1165, 1170, 1172, 1175, 1185, 1187, 1188, 1189, 1190, 1202, 1208], "debian": [13, 80, 161, 162, 163, 180, 184, 188, 190, 202, 213, 225, 310, 367, 388, 567, 791, 838, 937, 1014, 1026, 1172, 1177], "resolut": [13, 263, 265, 460, 708, 770, 816, 848, 944], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 60, 61, 62, 63, 65, 67, 70, 72, 73, 76, 79, 80, 83, 84, 86, 87, 88, 90, 91, 99, 108, 109, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 142, 143, 144, 148, 165, 166, 168, 169, 170, 172, 173, 175, 176, 179, 183, 185, 188, 190, 193, 197, 199, 200, 202, 205, 209, 211, 212, 224, 225, 230, 233, 240, 242, 243, 245, 246, 249, 250, 252, 256, 258, 259, 261, 265, 268, 270, 271, 273, 278, 280, 282, 286, 289, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 306, 307, 312, 315, 320, 323, 324, 327, 328, 329, 331, 335, 337, 338, 341, 347, 355, 356, 361, 367, 370, 373, 375, 376, 379, 388, 399, 402, 403, 406, 407, 408, 411, 413, 422, 423, 425, 427, 428, 432, 433, 434, 437, 438, 439, 441, 445, 446, 449, 452, 456, 460, 461, 465, 467, 468, 469, 473, 474, 475, 477, 479, 480, 482, 487, 488, 489, 490, 493, 495, 496, 498, 499, 502, 505, 506, 507, 509, 516, 519, 520, 521, 539, 541, 542, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 567, 571, 572, 573, 574, 577, 580, 583, 586, 589, 592, 597, 599, 600, 604, 605, 608, 610, 612, 613, 614, 616, 617, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 639, 642, 643, 644, 648, 651, 652, 653, 654, 655, 656, 660, 666, 669, 670, 672, 673, 676, 677, 679, 680, 682, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 697, 698, 699, 700, 702, 704, 706, 710, 712, 717, 723, 725, 732, 733, 735, 737, 738, 740, 742, 745, 750, 754, 755, 756, 757, 759, 761, 765, 767, 770, 775, 776, 785, 788, 789, 790, 791, 796, 797, 799, 801, 804, 806, 807, 809, 811, 813, 816, 818, 822, 824, 826, 830, 832, 834, 838, 839, 841, 843, 851, 852, 854, 857, 858, 864, 865, 866, 869, 873, 874, 877, 878, 880, 882, 884, 890, 895, 898, 900, 903, 904, 905, 907, 917, 923, 925, 929, 934, 935, 938, 939, 941, 945, 946, 947, 954, 955, 958, 964, 965, 968, 969, 970, 972, 976, 978, 979, 981, 983, 984, 985, 987, 988, 991, 993, 994, 997, 998, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1015, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1034, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1053, 1055, 1057, 1059, 1060, 1061, 1063, 1067, 1069, 1071, 1075, 1076, 1077, 1078, 1081, 1084, 1086, 1088, 1092, 1094, 1097, 1098, 1099, 1102, 1103, 1104, 1108, 1110, 1113, 1114, 1115, 1116, 1120, 1122, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1149, 1150, 1153, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1170, 1173, 1176, 1177, 1179, 1181, 1182, 1190, 1192, 1193, 1195], "gfdl": 13, "becaus": [13, 17, 38, 60, 82, 124, 154, 157, 167, 172, 173, 175, 184, 188, 197, 205, 209, 211, 225, 235, 242, 248, 258, 261, 395, 416, 455, 464, 467, 470, 477, 479, 488, 497, 500, 517, 551, 554, 597, 598, 605, 608, 648, 670, 689, 745, 753, 756, 807, 818, 836, 838, 877, 917, 935, 942, 943, 944, 953, 964, 965, 968, 971, 985, 991, 1006, 1009, 1010, 1033, 1036, 1062, 1093, 1150, 1165, 1172, 1177, 1190], "too": [13, 27, 53, 56, 62, 82, 139, 173, 175, 180, 189, 202, 205, 221, 232, 234, 251, 261, 265, 268, 277, 278, 280, 291, 293, 301, 302, 307, 323, 325, 337, 338, 412, 457, 467, 477, 491, 497, 596, 610, 717, 719, 723, 735, 736, 737, 743, 749, 755, 779, 789, 790, 791, 836, 838, 843, 870, 935, 944, 945, 951, 968, 981, 998, 1014, 1033, 1034, 1035, 1038, 1084, 1088, 1166, 1190], "restrict": [13, 174, 203, 213, 455, 460, 489, 497, 504, 539, 620, 789, 836, 865, 866, 954, 1150], "articl": [13, 188, 190, 818, 830, 848, 942, 944, 1024], "describ": [13, 109, 126, 128, 130, 170, 172, 173, 174, 175, 178, 180, 183, 184, 199, 225, 261, 265, 273, 299, 307, 310, 354, 367, 500, 509, 555, 574, 577, 580, 583, 586, 589, 592, 745, 759, 838, 848, 871, 898, 944, 949, 1001, 1004, 1008, 1013, 1021, 1027, 1028, 1057, 1142, 1176, 1179, 1181], "pretti": [13, 174, 175, 197, 211, 215, 234, 251, 261, 467, 482, 630, 687, 762, 1031, 1162], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 131, 144, 173, 174, 175, 177, 179, 180, 183, 184, 188, 193, 194, 195, 197, 205, 206, 211, 214, 225, 233, 237, 242, 248, 251, 258, 259, 261, 264, 265, 283, 292, 295, 301, 302, 307, 323, 324, 325, 335, 351, 357, 358, 367, 374, 399, 403, 414, 415, 416, 433, 434, 438, 443, 446, 455, 457, 461, 463, 467, 468, 471, 472, 482, 500, 504, 507, 508, 519, 538, 539, 547, 551, 571, 573, 580, 582, 596, 599, 605, 608, 611, 630, 633, 639, 648, 651, 652, 653, 677, 688, 696, 701, 708, 710, 712, 715, 717, 741, 742, 745, 757, 758, 759, 765, 806, 807, 811, 816, 818, 820, 828, 830, 836, 838, 854, 870, 876, 882, 898, 899, 901, 925, 935, 937, 942, 943, 944, 945, 954, 955, 961, 967, 981, 982, 983, 996, 1000, 1006, 1010, 1012, 1028, 1034, 1035, 1038, 1043, 1044, 1047, 1049, 1053, 1055, 1071, 1073, 1076, 1081, 1083, 1084, 1085, 1119, 1127, 1129, 1143, 1145, 1146, 1149, 1150, 1153, 1155, 1158, 1159, 1160, 1170, 1172, 1177], "issu": [13, 154, 173, 176, 183, 184, 235, 300, 301, 302, 323, 338, 341, 390, 403, 461, 974, 1000, 1009, 1026, 1044], "how": [13, 23, 24, 37, 42, 45, 50, 65, 67, 72, 73, 77, 79, 80, 83, 84, 86, 87, 88, 89, 90, 93, 106, 124, 126, 131, 138, 139, 148, 159, 161, 169, 170, 173, 176, 178, 179, 180, 184, 185, 188, 193, 195, 197, 201, 202, 208, 209, 210, 211, 212, 213, 214, 225, 230, 232, 233, 234, 240, 242, 243, 245, 246, 248, 249, 251, 254, 256, 259, 270, 273, 277, 278, 282, 289, 292, 295, 297, 298, 299, 300, 301, 302, 306, 312, 315, 317, 323, 324, 327, 328, 331, 356, 372, 373, 377, 388, 403, 409, 434, 441, 443, 444, 455, 457, 459, 461, 466, 470, 477, 479, 481, 488, 502, 508, 538, 541, 549, 552, 573, 590, 597, 605, 606, 609, 620, 630, 669, 673, 679, 689, 695, 717, 754, 757, 758, 759, 769, 773, 785, 786, 792, 799, 801, 802, 816, 828, 838, 843, 854, 865, 866, 871, 878, 898, 917, 925, 931, 935, 942, 943, 944, 952, 960, 961, 962, 965, 968, 971, 972, 978, 991, 994, 997, 998, 1000, 1005, 1009, 1010, 1022, 1024, 1026, 1028, 1041, 1042, 1059, 1060, 1063, 1077, 1080, 1089, 1095, 1133, 1134, 1137, 1142, 1143, 1156, 1158, 1159, 1162, 1170, 1173, 1179, 1182, 1192, 1193, 1195], "do": [13, 27, 32, 40, 43, 45, 50, 58, 61, 62, 63, 67, 80, 85, 87, 91, 93, 99, 126, 127, 134, 139, 143, 144, 152, 154, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 189, 190, 192, 193, 194, 197, 201, 202, 205, 209, 210, 213, 223, 224, 225, 233, 235, 242, 245, 249, 251, 253, 255, 256, 259, 261, 264, 265, 271, 273, 275, 278, 280, 289, 292, 295, 324, 325, 356, 358, 365, 367, 370, 372, 406, 425, 427, 428, 430, 431, 432, 437, 438, 439, 445, 446, 449, 452, 455, 456, 463, 465, 469, 474, 475, 477, 479, 481, 497, 502, 505, 508, 516, 517, 538, 540, 552, 573, 581, 587, 590, 596, 598, 610, 614, 616, 617, 620, 657, 670, 673, 687, 688, 689, 697, 703, 708, 712, 734, 735, 741, 745, 747, 753, 754, 755, 757, 758, 759, 787, 788, 790, 791, 811, 815, 826, 830, 834, 836, 838, 863, 867, 868, 871, 875, 878, 882, 883, 892, 894, 899, 903, 905, 934, 935, 938, 942, 943, 944, 946, 947, 953, 955, 959, 960, 961, 962, 963, 964, 970, 981, 982, 984, 988, 994, 996, 997, 1000, 1002, 1005, 1010, 1028, 1029, 1031, 1033, 1035, 1036, 1037, 1040, 1049, 1059, 1060, 1061, 1064, 1067, 1071, 1077, 1078, 1092, 1094, 1113, 1137, 1143, 1144, 1151, 1152, 1159, 1162, 1170, 1177, 1179, 1195], "choos": [13, 27, 172, 173, 184, 197, 205, 590, 838, 935, 942, 944, 1027, 1060, 1067, 1080, 1143, 1150, 1172], "altogeth": [13, 183, 232, 301, 302, 323, 706, 846, 1038], "have": [13, 27, 28, 30, 37, 43, 50, 71, 82, 84, 86, 104, 112, 113, 126, 127, 131, 135, 139, 142, 144, 151, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 188, 193, 194, 195, 197, 201, 202, 203, 205, 209, 212, 213, 224, 225, 230, 232, 233, 234, 235, 242, 245, 246, 248, 249, 256, 261, 265, 268, 278, 280, 282, 289, 291, 292, 295, 298, 299, 301, 302, 306, 307, 327, 328, 356, 361, 370, 373, 375, 402, 403, 407, 416, 435, 437, 457, 459, 462, 463, 467, 471, 473, 478, 480, 483, 487, 488, 492, 495, 496, 497, 501, 504, 505, 517, 538, 541, 551, 554, 563, 590, 596, 600, 604, 606, 608, 613, 614, 616, 617, 648, 654, 670, 677, 682, 688, 689, 690, 694, 695, 699, 707, 710, 712, 723, 732, 737, 741, 742, 744, 747, 750, 754, 755, 758, 759, 786, 802, 806, 807, 809, 811, 816, 818, 830, 838, 841, 846, 854, 863, 871, 875, 877, 880, 881, 883, 890, 905, 925, 935, 942, 943, 944, 945, 947, 951, 953, 955, 959, 960, 962, 967, 972, 974, 980, 988, 1005, 1009, 1010, 1013, 1014, 1022, 1026, 1027, 1030, 1031, 1033, 1036, 1044, 1048, 1049, 1053, 1063, 1066, 1067, 1071, 1078, 1085, 1097, 1101, 1111, 1116, 1132, 1137, 1142, 1144, 1145, 1146, 1150, 1153, 1155, 1159, 1162, 1165, 1170, 1172, 1177, 1179, 1192, 1193], "idea": [13, 14, 138, 172, 173, 233, 246, 255, 265, 298, 300, 301, 302, 317, 320, 327, 461, 685, 707, 745, 753, 773, 838, 935, 970, 980, 1000, 1024, 1035, 1059, 1067, 1195], "choosealicens": 13, "appear": [13, 124, 173, 174, 175, 176, 177, 178, 179, 180, 183, 193, 197, 201, 203, 205, 206, 225, 234, 261, 301, 302, 323, 392, 435, 438, 482, 483, 500, 571, 612, 755, 776, 834, 838, 846, 862, 942, 943, 944, 955, 1013, 1035, 1108, 1109, 1119, 1128, 1154, 1159], "help": [13, 29, 128, 172, 173, 175, 176, 184, 188, 206, 225, 229, 234, 242, 248, 253, 255, 258, 261, 265, 268, 271, 273, 286, 293, 298, 302, 307, 325, 329, 335, 341, 347, 351, 354, 361, 365, 370, 388, 438, 459, 461, 463, 464, 473, 482, 599, 602, 608, 695, 708, 743, 753, 755, 809, 877, 937, 942, 1027, 1059, 1062, 1088, 1092, 1162, 1170, 1177, 1192], "happen": [13, 27, 112, 113, 124, 127, 143, 172, 173, 175, 188, 205, 209, 213, 232, 251, 315, 331, 375, 443, 455, 459, 463, 477, 482, 602, 619, 691, 723, 737, 740, 762, 801, 834, 838, 855, 870, 871, 875, 944, 968, 970, 980, 985, 1009, 1047, 1048, 1087, 1102, 1105, 1119, 1136, 1142, 1170, 1179, 1192], "clone": [13, 60, 66, 79, 111, 126, 151, 165, 175, 176, 179, 200, 202, 205, 222, 234, 235, 251, 278, 280, 310, 317, 320, 370, 375, 538, 541, 615, 811, 838, 839, 942, 1026, 1027], "jfasch": [13, 40, 43, 60, 66, 108, 124, 126, 144, 148, 151, 154, 169, 170, 176, 177, 178, 183, 184, 188, 192, 201, 202, 203, 206, 209, 222, 232, 242, 245, 248, 249, 251, 253, 258, 261, 268, 271, 273, 278, 280, 286, 289, 291, 292, 293, 298, 299, 300, 302, 303, 306, 307, 312, 316, 317, 320, 324, 328, 329, 332, 334, 335, 338, 340, 341, 346, 347, 350, 369, 370, 375, 378, 480, 482, 483, 485, 486, 488, 489, 491, 493, 502, 538, 552, 553, 554, 555, 573, 615, 675, 753, 754, 755, 789, 811, 813, 838, 864, 865, 866, 869, 870, 873, 875, 880, 883, 894, 899, 900, 901, 917, 920, 922, 923, 927, 929, 931, 942, 945, 953, 954, 955, 960, 966, 968, 969, 970, 991, 996, 1012, 1013, 1014, 1015, 1024, 1026, 1027, 1028, 1029, 1030, 1033, 1035, 1036, 1039, 1063, 1082, 1088, 1092, 1115, 1158, 1159, 1170, 1172], "home": [13, 32, 40, 42, 43, 50, 60, 66, 102, 124, 151, 154, 169, 170, 174, 176, 177, 178, 180, 184, 188, 201, 202, 203, 206, 225, 232, 242, 245, 246, 248, 253, 258, 261, 268, 271, 273, 278, 280, 286, 289, 291, 293, 303, 307, 329, 335, 341, 347, 354, 378, 473, 480, 482, 483, 485, 486, 488, 489, 491, 493, 502, 552, 553, 554, 555, 615, 675, 708, 753, 754, 755, 789, 791, 813, 838, 864, 865, 866, 868, 873, 875, 877, 878, 880, 883, 888, 890, 892, 894, 895, 898, 899, 901, 902, 903, 904, 905, 909, 912, 915, 918, 920, 922, 923, 929, 934, 945, 946, 951, 953, 954, 991, 993, 1009, 1012, 1013, 1014, 1024, 1026, 1027, 1028, 1029, 1030, 1033, 1036, 1039, 1088, 1115, 1124, 1158, 1159, 1170, 1172], "built": [13, 28, 126, 133, 172, 173, 175, 176, 179, 184, 201, 206, 208, 209, 217, 218, 230, 233, 242, 248, 253, 256, 258, 259, 261, 265, 273, 282, 286, 289, 291, 306, 315, 324, 328, 331, 335, 341, 351, 405, 409, 433, 454, 480, 488, 491, 492, 516, 538, 651, 708, 764, 769, 807, 811, 813, 838, 942, 944, 955, 1013, 1014, 1015, 1020, 1028, 1033, 1036, 1040, 1056, 1071, 1087, 1137, 1143, 1144, 1161, 1170, 1172, 1173, 1188, 1192, 1200], "wonder": [13, 806, 824, 851, 1038], "gener": [13, 23, 24, 29, 39, 65, 67, 70, 71, 80, 82, 83, 111, 112, 113, 154, 166, 170, 173, 177, 180, 185, 192, 195, 205, 209, 210, 212, 213, 214, 215, 224, 232, 240, 241, 242, 246, 247, 249, 250, 251, 252, 254, 256, 257, 258, 262, 263, 264, 265, 270, 271, 285, 287, 291, 300, 305, 307, 311, 312, 314, 326, 328, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 349, 350, 351, 373, 376, 393, 403, 405, 411, 416, 427, 437, 455, 461, 464, 466, 467, 470, 480, 481, 482, 486, 541, 543, 549, 552, 560, 595, 602, 606, 622, 630, 631, 634, 685, 703, 706, 733, 747, 753, 759, 767, 818, 820, 822, 841, 871, 882, 898, 935, 937, 942, 955, 980, 1009, 1010, 1012, 1015, 1026, 1027, 1033, 1034, 1035, 1037, 1055, 1061, 1063, 1064, 1065, 1071, 1075, 1093, 1094, 1095, 1096, 1109, 1135, 1137, 1144, 1146, 1147, 1149, 1150, 1159, 1165, 1170, 1193, 1194, 1201], "content": [13, 27, 39, 49, 50, 57, 62, 124, 148, 205, 212, 213, 214, 225, 233, 251, 253, 261, 283, 289, 329, 362, 437, 440, 442, 555, 598, 648, 656, 744, 840, 843, 864, 865, 866, 880, 883, 885, 886, 920, 923, 931, 943, 947, 970, 1012, 1067, 1086, 1093, 1106, 1136, 1156, 1172, 1205], "which": [13, 14, 17, 28, 57, 70, 80, 82, 85, 91, 112, 113, 116, 117, 121, 122, 125, 127, 143, 154, 158, 165, 166, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 184, 188, 193, 195, 201, 202, 203, 205, 209, 211, 213, 225, 232, 234, 242, 246, 248, 249, 261, 264, 265, 273, 274, 291, 292, 295, 297, 302, 307, 320, 324, 337, 388, 406, 411, 412, 418, 422, 443, 455, 467, 477, 478, 479, 480, 482, 485, 487, 488, 495, 497, 508, 538, 539, 540, 541, 544, 546, 547, 548, 549, 550, 552, 567, 578, 584, 597, 604, 606, 610, 612, 620, 667, 677, 681, 682, 688, 689, 691, 700, 706, 707, 745, 749, 750, 758, 759, 771, 779, 787, 789, 791, 807, 816, 838, 840, 858, 864, 871, 875, 877, 880, 881, 882, 883, 889, 891, 894, 898, 911, 922, 925, 934, 935, 938, 942, 943, 944, 955, 964, 965, 968, 970, 972, 973, 975, 980, 985, 992, 994, 996, 997, 1005, 1010, 1013, 1018, 1026, 1030, 1033, 1035, 1037, 1047, 1048, 1052, 1060, 1064, 1067, 1076, 1108, 1127, 1129, 1132, 1134, 1150, 1152, 1153, 1155, 1158, 1172, 1177, 1190], "differ": [13, 35, 38, 61, 63, 71, 78, 83, 87, 90, 160, 172, 173, 178, 180, 184, 194, 201, 205, 209, 221, 245, 246, 289, 291, 297, 298, 300, 307, 325, 337, 356, 391, 403, 411, 416, 417, 433, 434, 437, 455, 461, 463, 467, 477, 479, 496, 497, 541, 552, 554, 573, 580, 581, 590, 599, 600, 604, 610, 612, 613, 622, 626, 631, 670, 673, 677, 699, 712, 715, 742, 757, 770, 775, 789, 811, 816, 830, 836, 838, 858, 863, 869, 873, 874, 876, 895, 920, 935, 938, 942, 944, 951, 962, 970, 972, 985, 994, 996, 997, 1017, 1022, 1027, 1029, 1030, 1035, 1048, 1055, 1063, 1076, 1080, 1085, 1086, 1087, 1146, 1155, 1172, 1173, 1193, 1195], "so": [13, 17, 23, 32, 37, 39, 49, 55, 124, 127, 132, 144, 148, 154, 157, 160, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 192, 193, 194, 195, 196, 197, 201, 202, 203, 205, 206, 217, 218, 223, 231, 233, 234, 235, 244, 245, 246, 275, 289, 297, 299, 303, 315, 327, 331, 341, 347, 351, 356, 365, 370, 373, 388, 402, 406, 407, 415, 417, 433, 443, 444, 446, 455, 459, 461, 463, 464, 468, 478, 480, 483, 485, 490, 491, 495, 517, 519, 538, 554, 567, 606, 613, 617, 630, 653, 660, 669, 676, 685, 734, 744, 749, 752, 753, 755, 770, 797, 799, 802, 807, 811, 813, 816, 838, 851, 863, 877, 878, 880, 882, 888, 890, 892, 898, 902, 909, 935, 941, 942, 943, 944, 947, 949, 951, 959, 962, 965, 970, 972, 980, 998, 1000, 1009, 1012, 1013, 1014, 1015, 1026, 1028, 1029, 1038, 1039, 1043, 1055, 1060, 1062, 1067, 1084, 1086, 1088, 1091, 1101, 1105, 1111, 1115, 1142, 1145, 1153, 1160, 1163, 1170, 1172, 1176, 1177, 1179, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1200, 1203, 1208], "ye": [13, 32, 50, 60, 116, 119, 175, 176, 179, 184, 225, 367, 653, 762, 865, 866, 883, 885, 886, 944, 955, 1012, 1080, 1114], "realli": [13, 21, 43, 50, 53, 55, 56, 144, 174, 175, 176, 178, 180, 194, 205, 209, 212, 496, 712, 749, 759, 771, 791, 830, 943, 944, 955, 978, 1137, 1144, 1150], "great": [13, 80, 178, 180, 235, 255, 265, 477, 596, 611, 767, 838, 943, 1190, 1195], "static": [13, 23, 99, 105, 106, 112, 113, 126, 154, 173, 175, 177, 179, 180, 190, 200, 234, 235, 242, 248, 251, 258, 261, 265, 289, 298, 300, 307, 370, 376, 439, 445, 449, 452, 454, 456, 463, 465, 467, 469, 474, 475, 480, 485, 486, 490, 492, 501, 515, 523, 535, 536, 537, 538, 539, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 581, 590, 595, 599, 602, 613, 618, 621, 624, 640, 644, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 697, 706, 735, 737, 739, 740, 744, 755, 758, 764, 769, 775, 776, 777, 779, 780, 781, 782, 788, 789, 790, 791, 797, 816, 834, 838, 840, 934, 980, 983, 985, 987, 996, 1002, 1009, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1148, 1182, 1185, 1187, 1188, 1189], "It": [13, 21, 39, 43, 45, 55, 61, 63, 80, 132, 139, 143, 161, 172, 173, 174, 175, 178, 179, 180, 183, 184, 193, 195, 197, 201, 202, 206, 211, 212, 225, 234, 235, 242, 248, 251, 258, 261, 265, 273, 278, 280, 289, 292, 295, 298, 324, 337, 383, 384, 400, 411, 415, 433, 438, 461, 463, 477, 495, 500, 505, 508, 517, 519, 541, 544, 545, 552, 553, 599, 679, 691, 708, 709, 745, 755, 776, 791, 802, 838, 865, 866, 877, 880, 895, 934, 935, 943, 944, 965, 970, 972, 973, 975, 988, 992, 997, 1013, 1014, 1024, 1029, 1034, 1036, 1047, 1055, 1059, 1060, 1094, 1110, 1115, 1119, 1122, 1128, 1143, 1149, 1161, 1170, 1171, 1190, 1192, 1193, 1195], "let": [13, 17, 42, 61, 62, 63, 127, 131, 173, 174, 175, 178, 179, 180, 183, 188, 195, 196, 197, 202, 203, 235, 249, 253, 255, 261, 265, 292, 295, 297, 299, 302, 317, 320, 328, 459, 467, 477, 479, 481, 488, 491, 495, 497, 499, 504, 517, 523, 540, 551, 552, 554, 557, 573, 587, 597, 598, 610, 614, 616, 617, 667, 673, 679, 685, 695, 712, 740, 744, 749, 753, 807, 811, 830, 838, 846, 873, 882, 895, 900, 935, 942, 943, 955, 968, 970, 971, 985, 994, 996, 1012, 1014, 1024, 1027, 1028, 1034, 1036, 1040, 1077, 1084, 1086, 1094, 1102, 1124, 1132, 1137, 1144, 1145, 1150, 1153, 1170, 1190], "me": [13, 23, 32, 37, 61, 63, 67, 126, 154, 167, 172, 173, 174, 175, 178, 179, 180, 183, 184, 188, 201, 202, 203, 205, 209, 232, 234, 235, 259, 310, 328, 354, 370, 459, 461, 462, 477, 480, 584, 608, 673, 708, 749, 755, 811, 873, 900, 935, 943, 944, 955, 959, 1012, 1015, 1024, 1040, 1043, 1084, 1137, 1141, 1171], "focu": [13, 176, 180, 183, 197, 205, 209, 292, 295, 466, 470, 502, 694, 723, 935, 943, 945, 1060, 1144, 1164, 1193], "myself": [13, 169, 170, 180, 201, 209, 224, 240, 811, 873, 895, 900, 917], "ey": [13, 32, 37, 258, 261, 271, 293, 335, 341, 347, 351, 1071], "toward": [13, 205, 376, 459, 519, 648], "consist": [13, 27, 205, 220, 261, 327, 361, 378, 392, 395, 433, 435, 473, 544, 552, 597, 898, 972, 1006, 1060, 1061, 1064, 1106, 1115, 1139, 1160], "won": [13, 143, 183, 184, 261, 291, 356, 390, 457, 482, 551, 553, 599, 749, 755, 806, 818, 943, 955, 962, 1015, 1037, 1086], "break": [13, 36, 38, 166, 196, 205, 206, 211, 218, 224, 225, 233, 245, 248, 254, 255, 258, 261, 264, 265, 268, 271, 286, 293, 307, 335, 341, 347, 351, 362, 427, 431, 432, 439, 445, 449, 452, 456, 459, 463, 465, 467, 469, 474, 475, 477, 638, 669, 679, 681, 688, 697, 723, 731, 735, 756, 769, 776, 788, 790, 791, 828, 960, 961, 970, 996, 1002, 1009, 1040, 1048, 1086, 1150], "move": [13, 54, 62, 101, 116, 120, 126, 139, 148, 153, 161, 170, 174, 184, 202, 210, 213, 224, 235, 251, 276, 279, 288, 289, 300, 309, 310, 344, 353, 354, 355, 370, 373, 477, 478, 491, 535, 544, 573, 598, 599, 606, 607, 608, 609, 611, 657, 703, 723, 735, 745, 747, 751, 754, 756, 757, 760, 767, 768, 769, 787, 788, 790, 791, 807, 840, 862, 865, 866, 867, 868, 901, 902, 903, 904, 907, 908, 909, 910, 912, 918, 934, 935, 959, 960, 997, 1030, 1067, 1166, 1189, 1190, 1191, 1198, 1199], "around": [13, 24, 37, 61, 63, 65, 67, 100, 126, 131, 134, 148, 173, 174, 175, 180, 184, 194, 205, 209, 233, 259, 270, 277, 278, 280, 300, 328, 337, 338, 416, 491, 505, 507, 516, 541, 597, 693, 696, 698, 748, 750, 790, 791, 838, 843, 970, 985, 1006, 1009, 1030, 1036, 1052, 1056, 1058, 1080, 1133, 1137, 1139, 1143, 1144, 1155, 1156, 1159], "last": [13, 61, 63, 67, 124, 126, 169, 173, 174, 175, 190, 195, 205, 206, 212, 224, 225, 232, 240, 242, 245, 248, 249, 258, 261, 271, 286, 291, 293, 307, 329, 361, 367, 374, 376, 443, 461, 625, 627, 628, 629, 630, 634, 637, 726, 729, 730, 731, 789, 791, 838, 898, 901, 904, 920, 929, 931, 934, 962, 967, 975, 984, 989, 991, 996, 1011, 1022, 1033, 1034, 1035, 1036, 1040, 1044, 1048, 1049, 1055, 1056, 1061, 1069, 1077, 1078, 1082, 1084, 1087, 1088, 1099, 1126, 1132, 1134, 1145, 1150, 1158, 1159, 1171, 1178, 1208], "least": [13, 24, 37, 61, 63, 83, 175, 183, 197, 201, 203, 205, 212, 213, 232, 234, 235, 249, 251, 261, 265, 291, 295, 297, 307, 309, 353, 391, 409, 415, 416, 429, 455, 458, 459, 467, 483, 495, 567, 652, 695, 745, 747, 754, 759, 762, 771, 801, 834, 836, 870, 935, 937, 945, 983, 1006, 1010, 1031, 1040, 1044, 1060, 1061, 1071, 1095, 1143, 1178], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 62, 80, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 127, 134, 137, 139, 143, 154, 160, 170, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 188, 193, 195, 197, 201, 202, 205, 209, 211, 212, 213, 223, 225, 229, 230, 232, 233, 235, 242, 245, 248, 251, 253, 255, 256, 258, 261, 265, 268, 271, 274, 282, 283, 286, 289, 290, 291, 292, 293, 295, 297, 298, 300, 303, 306, 307, 313, 315, 324, 325, 328, 329, 331, 335, 338, 341, 344, 347, 351, 356, 363, 365, 367, 376, 390, 399, 402, 412, 415, 416, 425, 428, 436, 437, 444, 450, 451, 454, 458, 460, 461, 467, 473, 477, 479, 482, 488, 490, 491, 492, 493, 495, 496, 497, 500, 505, 506, 509, 517, 522, 536, 538, 548, 571, 581, 596, 598, 599, 600, 601, 604, 605, 606, 609, 610, 613, 620, 630, 651, 652, 669, 670, 673, 682, 683, 688, 689, 691, 700, 702, 705, 708, 717, 718, 719, 723, 732, 733, 734, 737, 745, 753, 755, 758, 759, 761, 767, 771, 789, 791, 792, 802, 807, 832, 834, 836, 838, 848, 851, 852, 854, 858, 865, 869, 870, 871, 873, 875, 876, 877, 883, 894, 896, 901, 927, 935, 941, 942, 943, 944, 953, 955, 958, 964, 970, 980, 982, 983, 985, 993, 994, 996, 997, 998, 999, 1006, 1010, 1012, 1026, 1028, 1029, 1031, 1033, 1034, 1035, 1038, 1040, 1043, 1048, 1049, 1050, 1056, 1058, 1060, 1063, 1066, 1067, 1071, 1076, 1077, 1081, 1099, 1119, 1134, 1136, 1137, 1143, 1144, 1145, 1146, 1150, 1158, 1159, 1161, 1163, 1170, 1172, 1177, 1179, 1190, 1192, 1193, 1195, 1198, 1199], "extens": [13, 14, 23, 28, 32, 37, 40, 154, 168, 183, 205, 232, 234, 242, 248, 258, 261, 341, 356, 437, 477, 505, 596, 734, 789, 792, 863, 875, 1012, 1043, 1060, 1063, 1165, 1170], "interfac": [13, 53, 56, 66, 74, 75, 76, 80, 82, 84, 87, 108, 116, 121, 122, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 143, 144, 148, 169, 170, 173, 190, 192, 193, 200, 209, 235, 249, 251, 263, 281, 282, 289, 298, 316, 328, 332, 359, 360, 370, 371, 372, 376, 379, 388, 389, 477, 483, 484, 489, 494, 495, 496, 497, 500, 501, 507, 515, 519, 521, 522, 543, 547, 549, 573, 595, 620, 668, 670, 692, 734, 741, 742, 758, 759, 775, 776, 790, 791, 934, 935, 940, 942, 944, 978, 1012, 1034, 1149, 1189, 1194, 1195, 1201, 1204, 1207], "lot": [13, 71, 94, 99, 170, 172, 173, 175, 180, 184, 202, 205, 209, 225, 302, 373, 409, 458, 463, 467, 473, 487, 590, 667, 791, 822, 832, 838, 867, 868, 877, 898, 934, 943, 960, 1012, 1027, 1055, 1060, 1082, 1139, 1191], "littl": [13, 27, 44, 175, 177, 180, 183, 184, 193, 205, 233, 242, 248, 249, 251, 258, 261, 283, 289, 300, 388, 438, 466, 467, 478, 607, 610, 613, 669, 675, 755, 758, 794, 935, 937, 943, 991, 1013, 1083, 1153], "maintain": [13, 28, 30, 54, 72, 82, 170, 172, 173, 180, 202, 211, 232, 234, 242, 246, 248, 258, 261, 270, 370, 384, 463, 477, 645, 695, 706, 816, 838, 846, 848, 850, 981, 1012, 1013, 1014, 1016, 1022, 1027, 1028, 1029, 1030, 1078, 1142, 1192], "packag": [13, 21, 23, 29, 32, 60, 99, 106, 126, 149, 152, 162, 163, 169, 174, 188, 203, 205, 206, 209, 210, 212, 219, 224, 230, 232, 233, 234, 240, 242, 246, 248, 249, 252, 256, 258, 259, 261, 262, 264, 267, 270, 273, 291, 301, 302, 306, 310, 315, 320, 324, 327, 328, 331, 334, 341, 346, 350, 370, 371, 372, 373, 377, 388, 389, 480, 482, 485, 486, 791, 811, 934, 942, 943, 1014, 1019, 1022, 1037, 1060, 1067, 1090, 1091, 1093, 1094, 1095, 1096, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1143, 1147, 1151, 1152, 1153, 1158, 1159, 1169, 1170, 1171, 1173, 1174, 1179, 1192], "virtual": [13, 29, 71, 82, 108, 109, 114, 115, 116, 117, 118, 121, 122, 125, 135, 139, 144, 169, 175, 178, 180, 200, 205, 209, 220, 224, 240, 256, 259, 262, 273, 278, 280, 282, 289, 298, 299, 300, 301, 302, 306, 317, 320, 323, 324, 327, 328, 334, 338, 346, 350, 377, 388, 389, 492, 496, 498, 501, 502, 507, 509, 515, 519, 524, 526, 527, 528, 531, 532, 533, 534, 535, 536, 543, 553, 593, 595, 620, 667, 668, 669, 692, 734, 742, 753, 755, 759, 790, 791, 797, 869, 874, 877, 936, 942, 944, 953, 962, 978, 996, 1006, 1060, 1063, 1090, 1091, 1092, 1135, 1137, 1138, 1139, 1143, 1151, 1153, 1164, 1167, 1170, 1189, 1196, 1205], "environ": [13, 21, 29, 77, 80, 99, 106, 126, 161, 169, 173, 184, 188, 209, 215, 224, 225, 230, 240, 243, 246, 256, 259, 262, 273, 279, 282, 288, 301, 302, 306, 309, 310, 317, 320, 323, 324, 327, 328, 334, 341, 346, 350, 351, 353, 354, 371, 372, 383, 384, 502, 522, 536, 551, 552, 553, 554, 615, 753, 754, 776, 791, 868, 872, 876, 877, 898, 899, 918, 934, 935, 975, 992, 997, 1013, 1022, 1023, 1024, 1029, 1031, 1043, 1063, 1065, 1090, 1091, 1092, 1135, 1137, 1138, 1139, 1143, 1144, 1151, 1153, 1158, 1159, 1164, 1165, 1167, 1170, 1171, 1177, 1181, 1183], "repo": [13, 124, 151, 184, 188, 200, 203, 214, 341, 356, 361, 370, 374, 375, 563, 564, 565, 566, 568, 569, 570, 811, 838, 840, 1026, 1179], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 60, 61, 62, 63, 65, 79, 101, 103, 104, 111, 116, 120, 126, 130, 131, 148, 152, 159, 166, 169, 173, 174, 175, 177, 180, 183, 184, 188, 190, 192, 193, 194, 209, 210, 211, 212, 213, 214, 225, 230, 238, 243, 248, 249, 251, 256, 258, 261, 265, 270, 273, 278, 279, 280, 288, 289, 297, 300, 301, 302, 306, 307, 309, 310, 312, 317, 320, 324, 327, 328, 353, 354, 370, 375, 394, 471, 473, 479, 480, 493, 495, 497, 500, 501, 502, 515, 516, 517, 521, 523, 524, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 595, 597, 600, 611, 651, 653, 669, 684, 687, 689, 698, 700, 723, 737, 740, 749, 755, 756, 768, 769, 776, 786, 787, 789, 790, 791, 794, 797, 801, 802, 807, 809, 811, 813, 816, 822, 834, 838, 867, 868, 869, 870, 871, 872, 878, 880, 881, 885, 886, 887, 889, 891, 893, 896, 902, 903, 905, 907, 908, 909, 910, 912, 918, 934, 942, 943, 944, 946, 947, 948, 950, 951, 953, 955, 957, 963, 964, 965, 972, 973, 974, 975, 980, 981, 982, 988, 989, 992, 995, 996, 997, 1004, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1028, 1033, 1034, 1036, 1038, 1040, 1044, 1048, 1049, 1050, 1052, 1066, 1067, 1076, 1077, 1078, 1087, 1091, 1092, 1093, 1105, 1113, 1114, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1137, 1139, 1140, 1141, 1143, 1146, 1149, 1153, 1162, 1170, 1172, 1173, 1192], "popul": [13, 175, 179, 265, 298, 794], "yourself": [13, 173, 180, 184, 195, 251, 422, 598, 615, 620, 843, 900, 983, 1006, 1059, 1195], "root": [13, 38, 62, 82, 126, 151, 172, 178, 180, 183, 184, 195, 200, 201, 202, 209, 213, 223, 245, 251, 261, 265, 268, 271, 286, 289, 293, 303, 307, 329, 335, 341, 347, 354, 355, 356, 361, 390, 457, 466, 470, 473, 482, 490, 496, 554, 616, 672, 789, 802, 838, 839, 840, 869, 873, 875, 894, 898, 910, 911, 917, 920, 922, 923, 924, 926, 927, 929, 935, 942, 943, 944, 946, 947, 951, 960, 965, 970, 978, 998, 1012, 1015, 1024, 1026, 1035, 1115, 1124, 1125, 1162, 1170], "activ": [13, 148, 178, 188, 190, 213, 273, 695, 818, 820, 824, 832, 873, 875, 930, 1091, 1170, 1172], "txt": [13, 33, 42, 44, 124, 126, 131, 144, 168, 175, 191, 192, 196, 199, 200, 201, 202, 203, 232, 234, 239, 242, 251, 252, 261, 273, 283, 317, 320, 351, 361, 362, 402, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 538, 551, 552, 553, 554, 555, 574, 577, 580, 581, 583, 586, 589, 592, 686, 789, 809, 864, 865, 866, 878, 882, 892, 902, 903, 904, 905, 909, 910, 917, 938, 942, 943, 944, 978, 1001, 1004, 1008, 1013, 1014, 1024, 1035, 1082, 1106, 1124, 1172, 1173, 1176, 1179, 1181], "fedorish": [13, 811, 955, 1153], "your": [13, 43, 66, 104, 111, 126, 143, 154, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 188, 189, 202, 205, 208, 209, 213, 225, 233, 234, 251, 259, 265, 278, 280, 282, 289, 292, 295, 337, 354, 356, 367, 376, 378, 422, 457, 465, 467, 469, 474, 475, 477, 486, 496, 500, 521, 538, 541, 552, 554, 555, 612, 686, 687, 689, 690, 697, 703, 711, 735, 776, 788, 790, 791, 813, 830, 838, 843, 864, 865, 866, 868, 875, 877, 878, 887, 888, 889, 890, 891, 892, 893, 899, 902, 903, 904, 905, 907, 916, 934, 935, 942, 944, 946, 947, 951, 955, 970, 972, 1024, 1027, 1038, 1049, 1055, 1060, 1064, 1106, 1120, 1124, 1125, 1137, 1142, 1153, 1163, 1165, 1170, 1171, 1172, 1179, 1195], "mileag": [13, 278, 280, 1153, 1170], "might": [13, 27, 60, 61, 63, 124, 132, 137, 143, 172, 173, 174, 176, 178, 180, 183, 184, 188, 201, 203, 205, 213, 234, 242, 248, 253, 258, 261, 292, 295, 298, 324, 356, 381, 453, 467, 477, 482, 491, 492, 497, 500, 521, 554, 604, 613, 732, 742, 755, 756, 757, 789, 813, 824, 828, 834, 838, 880, 935, 942, 943, 944, 955, 960, 969, 991, 998, 1009, 1024, 1027, 1035, 1044, 1047, 1060, 1139, 1153, 1170, 1173, 1177], "vari": [13, 242, 248, 258, 261, 265, 278, 280, 301, 302, 323, 327, 393, 467, 651, 770, 838, 944, 1029, 1149, 1153, 1170, 1190], "dnf": [13, 60, 134, 154, 169, 176, 184, 188, 202, 341, 390, 483, 490, 567, 811, 839, 937, 955, 1014, 1026, 1153, 1177, 1179], "pandoc": 13, "graphviz": [13, 486, 1014], "dia": [13, 245, 303, 920, 1094], "gtest": [13, 44, 126, 200, 201, 202, 203, 390, 495, 496, 497, 499, 500, 502, 504, 517, 519, 520, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 590, 597, 598, 599, 610, 611, 613, 614, 615, 616, 617, 675, 700, 702, 705, 706, 707, 738, 744, 749, 753, 754, 755, 756, 758, 771, 785, 786, 787, 789, 791, 1175], "devel": [13, 134, 154, 169, 184, 202, 483, 485, 490, 811, 1177, 1179], "markdown": [13, 23, 365, 1092], "handl": [13, 21, 29, 46, 76, 131, 167, 173, 193, 205, 209, 210, 212, 214, 220, 233, 235, 240, 242, 246, 249, 250, 258, 263, 270, 282, 289, 299, 306, 307, 317, 320, 328, 333, 339, 345, 349, 370, 375, 377, 383, 384, 391, 431, 438, 443, 459, 463, 483, 543, 573, 595, 610, 620, 653, 657, 679, 688, 689, 690, 723, 725, 752, 755, 767, 768, 790, 791, 797, 801, 820, 832, 868, 871, 872, 934, 942, 957, 959, 960, 961, 962, 963, 964, 965, 967, 970, 972, 973, 975, 983, 989, 992, 995, 997, 1000, 1006, 1009, 1037, 1055, 1060, 1061, 1076, 1086, 1089, 1135, 1137, 1189, 1195, 1204], "jupyt": [13, 188, 193, 194, 196, 205, 206, 208, 216, 256, 258, 259, 261, 262, 291, 292, 295, 296, 302, 306, 312, 317, 320, 324, 328, 334, 341, 351, 370, 375, 920, 1060, 1139, 1140, 1144, 1200], "notebook": [13, 32, 188, 192, 193, 194, 196, 205, 208, 216, 249, 256, 259, 261, 262, 264, 267, 270, 273, 282, 285, 291, 292, 295, 296, 302, 306, 312, 317, 320, 324, 328, 334, 335, 340, 346, 350, 351, 355, 375, 1060, 1139, 1144, 1200], "those": [13, 24, 80, 124, 135, 144, 166, 173, 174, 180, 183, 188, 203, 205, 209, 214, 232, 234, 235, 242, 246, 251, 252, 253, 255, 261, 265, 297, 298, 299, 300, 302, 317, 355, 367, 370, 376, 381, 402, 457, 467, 477, 479, 481, 482, 483, 496, 497, 500, 501, 567, 610, 632, 673, 676, 683, 698, 733, 749, 757, 759, 789, 804, 807, 838, 865, 866, 882, 883, 935, 942, 943, 944, 1009, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1043, 1048, 1059, 1101, 1111, 1132, 1142, 1150, 1151, 1156, 1158, 1170, 1192, 1193, 1195], "funki": [13, 17, 175], "graph": [13, 29, 80, 89, 144, 243, 256, 270, 273, 306, 312, 370, 377, 472, 486, 492, 1014, 1028, 1029, 1137, 1143], "histor": [13, 24, 80, 175, 197, 403, 416, 461, 694, 797, 876, 955, 1010, 1128, 1182], "baggag": [13, 403, 416, 694, 1010, 1128], "convert": [13, 17, 29, 42, 166, 194, 224, 232, 238, 242, 245, 248, 251, 255, 258, 261, 262, 265, 282, 307, 317, 320, 335, 355, 416, 438, 463, 473, 481, 486, 496, 551, 666, 673, 707, 708, 791, 792, 972, 1012, 1051, 1094, 1096, 1101, 1108, 1111, 1130, 1131, 1132, 1135, 1150], "draw": [13, 154, 170, 213, 324, 378, 413, 549, 747, 795, 799, 807, 828, 851], "svg": [13, 170], "ani": [13, 39, 45, 49, 65, 121, 144, 153, 166, 169, 172, 173, 174, 175, 178, 180, 184, 188, 193, 197, 208, 211, 213, 225, 232, 234, 242, 248, 258, 261, 265, 276, 277, 278, 286, 302, 307, 324, 337, 356, 377, 378, 411, 455, 463, 477, 500, 505, 547, 548, 549, 550, 554, 555, 567, 584, 602, 605, 631, 669, 677, 682, 695, 698, 700, 717, 723, 741, 742, 745, 754, 755, 756, 758, 759, 767, 789, 796, 797, 809, 811, 830, 838, 848, 855, 865, 866, 875, 878, 885, 886, 889, 890, 891, 898, 910, 920, 935, 942, 943, 944, 947, 970, 981, 985, 1005, 1031, 1033, 1034, 1035, 1036, 1040, 1047, 1048, 1055, 1058, 1067, 1072, 1074, 1085, 1086, 1092, 1116, 1118, 1133, 1144, 1159, 1160, 1164, 1165, 1177, 1190, 1195], "That": [13, 86, 100, 101, 124, 126, 127, 131, 135, 172, 173, 174, 175, 178, 183, 184, 188, 197, 205, 209, 212, 251, 275, 279, 281, 295, 298, 300, 381, 445, 446, 449, 452, 456, 465, 469, 474, 475, 483, 496, 497, 507, 519, 521, 523, 539, 541, 554, 601, 605, 687, 697, 735, 761, 767, 768, 788, 790, 791, 865, 866, 868, 869, 871, 872, 874, 875, 884, 887, 888, 889, 890, 891, 892, 893, 898, 934, 935, 943, 946, 947, 948, 949, 950, 953, 971, 975, 989, 995, 997, 1022, 1023, 1034, 1060, 1067, 1127, 1129, 1134, 1163, 1170, 1180, 1190], "sloppili": [13, 968], "track": [13, 124, 176, 180, 188, 212, 232, 242, 248, 258, 261, 754, 811, 838, 839, 843, 875, 1047], "opentrain": [13, 22, 28, 153, 170, 210, 217, 235, 378, 389, 1170, 1200], "recip": [13, 39, 165, 169, 173, 174, 371, 372, 457, 622], "sphinx": [14, 17, 23, 39, 156, 169, 170, 185, 376, 792, 1170], "togeth": [14, 24, 43, 50, 106, 108, 112, 113, 131, 135, 163, 180, 183, 184, 188, 193, 203, 205, 209, 213, 225, 234, 251, 278, 280, 297, 298, 300, 315, 324, 327, 331, 378, 388, 434, 467, 468, 544, 554, 573, 595, 613, 614, 616, 617, 767, 769, 802, 815, 838, 865, 866, 924, 925, 943, 944, 974, 988, 1012, 1018, 1022, 1024, 1027, 1031, 1110, 1143, 1163, 1165, 1173, 1175, 1177, 1190, 1192], "form": [14, 29, 175, 180, 193, 197, 221, 242, 248, 249, 258, 261, 298, 300, 389, 454, 470, 509, 517, 519, 558, 559, 571, 669, 792, 838, 843, 846, 870, 920, 944, 1071, 1091, 1094, 1127, 1129, 1132, 1133, 1139, 1145, 1165, 1170, 1190], "short": [14, 32, 35, 43, 108, 144, 173, 180, 188, 201, 205, 209, 212, 213, 214, 224, 225, 242, 246, 247, 248, 253, 256, 258, 259, 263, 281, 297, 298, 299, 300, 301, 302, 393, 409, 411, 416, 420, 421, 446, 455, 501, 515, 543, 555, 595, 600, 604, 791, 834, 840, 843, 877, 898, 923, 942, 944, 955, 962, 972, 994, 999, 1032, 1046, 1069, 1072, 1088, 1161, 1170, 1172, 1190], "video": [14, 22, 167, 176, 178, 180, 191, 205, 208, 209, 212, 217, 230, 233, 234, 256, 300, 303, 306, 478, 745, 935, 943, 1137, 1144, 1153], "explain": [14, 62, 65, 99, 131, 167, 172, 178, 184, 197, 205, 209, 211, 235, 246, 251, 253, 255, 256, 264, 265, 302, 355, 385, 388, 457, 467, 587, 878, 898, 901, 935, 944, 1000, 1083, 1137, 1170, 1195], "case": [14, 24, 43, 99, 106, 108, 111, 124, 129, 132, 144, 172, 173, 174, 177, 180, 183, 184, 188, 194, 197, 209, 211, 213, 215, 235, 248, 249, 255, 261, 265, 268, 277, 278, 280, 281, 289, 292, 295, 307, 324, 327, 337, 378, 400, 407, 426, 428, 459, 461, 479, 482, 485, 494, 501, 505, 508, 543, 551, 552, 554, 560, 562, 581, 595, 602, 612, 651, 657, 677, 689, 695, 712, 723, 735, 742, 745, 753, 767, 777, 779, 789, 790, 791, 811, 838, 851, 854, 866, 870, 873, 880, 894, 910, 927, 934, 935, 944, 954, 955, 961, 972, 991, 996, 1010, 1017, 1019, 1022, 1024, 1026, 1028, 1035, 1036, 1066, 1067, 1078, 1082, 1106, 1145, 1161, 1170, 1178, 1193], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 92, 152, 217, 230, 233, 240, 243, 244, 246, 252, 254, 256, 257, 262, 263, 264, 267, 270, 272, 280, 285, 287, 291, 292, 295, 305, 306, 308, 311, 314, 328, 333, 336, 338, 339, 340, 342, 345, 346, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 378, 389, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791, 792, 934, 964, 965, 970, 973, 975, 989, 992, 1037, 1059, 1090, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1143, 1144, 1150, 1153, 1157, 1164, 1167, 1174, 1189, 1190, 1191, 1200], "s5": [16, 23, 169, 1006, 1010, 1204], "slide": [16, 23, 24, 27, 37, 64, 68, 169, 170, 173, 191, 198, 200, 205, 209, 213, 214, 215, 224, 225, 234, 235, 251, 277, 278, 289, 381, 384, 389, 590, 850, 1007, 1011, 1109, 1150, 1186, 1187, 1188, 1196, 1197, 1203, 1204, 1206, 1207, 1208], "work": [16, 24, 27, 40, 42, 43, 44, 57, 60, 65, 67, 73, 80, 82, 100, 101, 106, 108, 111, 125, 127, 129, 143, 144, 149, 151, 154, 158, 159, 169, 172, 173, 174, 176, 178, 179, 180, 183, 184, 188, 197, 201, 202, 203, 212, 213, 215, 225, 230, 232, 234, 242, 243, 246, 248, 249, 251, 256, 258, 261, 265, 270, 279, 282, 288, 289, 291, 292, 295, 302, 303, 306, 307, 309, 310, 312, 340, 341, 353, 354, 356, 370, 375, 376, 378, 383, 384, 389, 390, 434, 435, 455, 457, 467, 477, 479, 480, 482, 483, 485, 486, 488, 489, 491, 493, 496, 497, 500, 501, 502, 515, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 590, 595, 615, 644, 651, 684, 686, 688, 696, 698, 700, 743, 749, 753, 754, 755, 759, 761, 768, 787, 790, 791, 792, 801, 806, 816, 818, 822, 836, 838, 843, 846, 860, 864, 865, 866, 867, 868, 871, 872, 873, 875, 877, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 920, 922, 931, 934, 935, 943, 947, 951, 955, 957, 962, 963, 965, 968, 971, 973, 975, 980, 989, 992, 994, 995, 997, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1029, 1035, 1058, 1061, 1062, 1063, 1082, 1088, 1091, 1092, 1114, 1124, 1125, 1137, 1144, 1153, 1155, 1156, 1158, 1159, 1161, 1170, 1179, 1190, 1195, 1196, 1202], "progress": [16, 154, 169, 389, 792, 900, 1179], "web": [16, 23, 74, 76, 80, 152, 170, 180, 209, 212, 233, 236, 282, 306, 328, 791, 1137, 1144, 1150, 1153], "note": [16, 32, 36, 40, 44, 59, 62, 124, 126, 139, 143, 149, 152, 158, 172, 173, 175, 180, 193, 194, 205, 224, 232, 234, 245, 246, 248, 273, 302, 307, 324, 327, 328, 361, 362, 479, 483, 485, 489, 519, 567, 590, 599, 600, 606, 611, 670, 712, 732, 733, 734, 745, 747, 753, 754, 755, 757, 797, 838, 855, 865, 866, 925, 943, 961, 972, 1024, 1077, 1080, 1082, 1086, 1142, 1153, 1155, 1158, 1177], "screencast": [16, 23, 152, 1137], "written": [16, 42, 43, 80, 108, 127, 134, 172, 173, 178, 188, 211, 261, 372, 434, 437, 453, 461, 463, 467, 480, 517, 607, 673, 686, 706, 792, 877, 964, 971, 1006, 1013, 1014, 1022, 1054, 1061, 1092, 1192], "draft": [16, 29, 205, 790, 791, 934, 1088, 1135, 1136, 1151], "convers": [17, 212, 224, 231, 234, 235, 242, 247, 248, 251, 254, 257, 258, 263, 266, 269, 287, 298, 300, 304, 308, 314, 326, 330, 334, 336, 342, 348, 370, 394, 409, 423, 432, 439, 445, 449, 452, 456, 463, 465, 469, 474, 475, 479, 516, 578, 666, 670, 694, 696, 697, 699, 735, 788, 790, 791, 841, 1086, 1104, 1108, 1111, 1122], "old": [17, 29, 132, 170, 173, 175, 178, 203, 213, 245, 246, 261, 293, 303, 307, 332, 389, 412, 451, 472, 477, 500, 573, 626, 633, 638, 653, 685, 691, 694, 699, 700, 741, 759, 770, 795, 801, 811, 830, 935, 943, 999, 1075, 1081, 1094, 1115, 1161, 1191], "latex": [17, 23, 24, 573], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 60, 80, 104, 114, 115, 117, 118, 124, 125, 132, 152, 172, 173, 175, 177, 188, 197, 201, 205, 220, 232, 242, 248, 258, 261, 262, 265, 269, 277, 278, 280, 282, 302, 317, 320, 324, 403, 406, 461, 473, 497, 542, 555, 651, 665, 676, 692, 694, 735, 751, 786, 790, 791, 811, 815, 826, 838, 867, 873, 934, 935, 942, 943, 948, 950, 963, 972, 1028, 1037, 1051, 1096, 1102, 1125, 1130, 1131, 1132, 1135, 1143, 1150], "put": [17, 58, 71, 82, 135, 139, 154, 166, 172, 173, 174, 201, 209, 324, 327, 479, 483, 487, 488, 551, 595, 681, 705, 741, 767, 807, 815, 828, 830, 855, 935, 943, 972, 997, 1012, 1027, 1030, 1035, 1094, 1175], "more": [17, 21, 27, 29, 43, 45, 61, 63, 67, 71, 80, 84, 92, 99, 103, 108, 116, 122, 126, 127, 130, 131, 134, 144, 166, 170, 173, 174, 177, 178, 180, 183, 184, 186, 188, 194, 195, 197, 202, 205, 209, 210, 211, 212, 213, 214, 215, 217, 219, 224, 225, 230, 232, 233, 234, 235, 236, 240, 243, 246, 247, 249, 250, 251, 252, 254, 255, 256, 259, 262, 263, 264, 266, 267, 269, 273, 277, 278, 279, 280, 284, 287, 288, 298, 299, 300, 307, 309, 310, 314, 316, 324, 328, 332, 336, 337, 338, 342, 348, 352, 353, 356, 357, 358, 359, 360, 361, 373, 375, 381, 388, 389, 400, 405, 409, 412, 416, 426, 427, 428, 437, 439, 445, 446, 449, 452, 456, 457, 462, 463, 465, 467, 469, 471, 472, 473, 474, 475, 479, 482, 484, 485, 488, 501, 508, 515, 517, 521, 522, 533, 538, 543, 551, 553, 573, 590, 595, 599, 603, 652, 666, 667, 668, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 694, 697, 704, 705, 716, 723, 732, 735, 736, 744, 745, 747, 749, 751, 752, 754, 755, 758, 760, 768, 769, 788, 789, 790, 791, 794, 797, 809, 811, 816, 822, 824, 826, 830, 832, 834, 838, 864, 869, 874, 898, 901, 931, 935, 937, 941, 942, 943, 944, 955, 961, 964, 967, 970, 981, 983, 994, 998, 1000, 1006, 1010, 1012, 1013, 1014, 1022, 1024, 1028, 1029, 1030, 1036, 1038, 1040, 1044, 1045, 1046, 1047, 1051, 1054, 1055, 1059, 1060, 1062, 1066, 1067, 1078, 1090, 1093, 1094, 1095, 1096, 1106, 1108, 1109, 1115, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1142, 1143, 1144, 1146, 1147, 1150, 1151, 1153, 1156, 1160, 1164, 1165, 1167, 1169, 1171, 1172, 1174, 1179, 1183, 1190, 1192, 1193, 1200], "precis": [17, 205, 209, 265, 282, 306, 328, 335, 351, 393, 411, 675, 770, 838, 1081, 1137], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 792], "turn": [17, 77, 112, 113, 173, 175, 178, 183, 184, 205, 209, 225, 234, 251, 297, 370, 467, 482, 483, 519, 544, 545, 702, 717, 894, 935, 937, 942, 943, 944, 1012, 1014, 1018, 1028, 1036, 1041, 1042, 1052, 1054, 1163], "rst2s5": 17, "tool": [17, 32, 60, 70, 126, 180, 184, 189, 205, 213, 215, 225, 235, 261, 279, 288, 303, 308, 309, 326, 341, 353, 370, 373, 375, 388, 389, 390, 435, 470, 472, 473, 477, 669, 723, 741, 791, 862, 868, 869, 882, 934, 944, 955, 958, 1013, 1014, 1022, 1026, 1060, 1061, 1064, 1092, 1156, 1164, 1188, 1190, 1192, 1194, 1201], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 60, 61, 62, 63, 67, 71, 79, 80, 86, 87, 91, 92, 99, 106, 108, 111, 112, 113, 116, 122, 124, 126, 135, 144, 152, 154, 163, 167, 170, 172, 173, 174, 176, 177, 178, 179, 188, 190, 192, 193, 195, 197, 199, 200, 201, 202, 205, 209, 210, 211, 212, 213, 214, 215, 225, 232, 234, 235, 242, 245, 246, 248, 251, 253, 255, 256, 258, 261, 264, 265, 271, 274, 278, 280, 282, 289, 297, 298, 300, 302, 307, 317, 320, 324, 325, 327, 335, 338, 344, 351, 356, 361, 370, 373, 376, 388, 389, 391, 395, 402, 403, 416, 425, 426, 450, 454, 455, 457, 458, 459, 461, 466, 467, 477, 481, 482, 487, 488, 489, 493, 499, 507, 508, 519, 521, 523, 541, 543, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 567, 568, 571, 572, 573, 574, 577, 580, 581, 583, 584, 586, 587, 589, 590, 592, 595, 597, 598, 599, 601, 602, 605, 607, 608, 610, 613, 618, 621, 624, 626, 628, 629, 632, 640, 644, 646, 650, 652, 657, 659, 660, 662, 663, 667, 670, 673, 677, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 695, 704, 705, 706, 717, 723, 725, 726, 729, 730, 731, 732, 733, 734, 735, 740, 743, 745, 747, 748, 751, 753, 755, 757, 758, 759, 760, 767, 768, 769, 770, 775, 776, 788, 789, 790, 791, 792, 797, 802, 807, 811, 813, 820, 834, 838, 843, 850, 858, 865, 866, 869, 870, 877, 880, 882, 883, 892, 894, 895, 898, 903, 905, 935, 940, 941, 942, 943, 944, 947, 954, 955, 961, 968, 969, 970, 971, 972, 976, 979, 988, 991, 1000, 1001, 1004, 1005, 1008, 1010, 1013, 1014, 1016, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1037, 1040, 1042, 1044, 1046, 1048, 1055, 1058, 1059, 1060, 1062, 1064, 1071, 1074, 1076, 1077, 1078, 1081, 1082, 1084, 1086, 1087, 1088, 1093, 1109, 1124, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1162, 1164, 1165, 1170, 1172, 1175, 1176, 1177, 1179, 1181, 1182, 1190, 1192, 1193, 1195, 1198, 1199, 1205], "sens": [17, 80, 175, 177, 194, 197, 202, 205, 224, 492, 500, 517, 602, 613, 620, 667, 695, 708, 799, 838, 877, 944, 968, 991, 998, 1005, 1055, 1085, 1142, 1193], "entir": [17, 24, 30, 82, 112, 113, 154, 166, 170, 173, 174, 175, 178, 184, 188, 197, 202, 209, 212, 230, 233, 234, 242, 256, 259, 262, 265, 277, 278, 280, 282, 292, 299, 302, 306, 312, 317, 320, 324, 328, 334, 340, 346, 407, 436, 440, 447, 450, 455, 463, 471, 479, 497, 703, 734, 754, 838, 865, 866, 871, 895, 900, 909, 917, 935, 942, 944, 947, 953, 970, 981, 1014, 1043, 1047, 1061, 1066, 1067, 1084, 1086, 1106, 1137, 1170, 1173, 1176, 1193], "site": [17, 23, 27, 39, 60, 152, 154, 169, 170, 173, 185, 188, 200, 201, 202, 206, 232, 242, 248, 258, 261, 324, 341, 612, 758, 877, 1141, 1158, 1159, 1165, 1172, 1179], "massag": [17, 32, 163, 184, 202, 278, 280, 792, 942, 1014], "itself": [17, 27, 131, 134, 144, 173, 175, 201, 205, 211, 242, 248, 258, 261, 307, 335, 359, 405, 437, 473, 482, 488, 516, 517, 539, 554, 600, 607, 666, 743, 758, 767, 770, 813, 816, 838, 858, 864, 865, 866, 880, 898, 927, 997, 1010, 1024, 1052, 1055, 1060, 1081, 1122, 1163, 1179], "upon": [17, 27, 71, 99, 175, 176, 205, 209, 213, 220, 259, 291, 298, 317, 320, 337, 459, 477, 505, 557, 573, 612, 630, 753, 770, 811, 944, 1010, 1099, 1163, 1170, 1190], "you": [17, 21, 43, 58, 61, 63, 111, 124, 126, 127, 131, 132, 134, 137, 139, 143, 154, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 188, 189, 193, 194, 195, 197, 201, 202, 205, 209, 211, 212, 213, 225, 230, 232, 233, 234, 235, 242, 245, 248, 249, 251, 255, 256, 258, 259, 261, 265, 273, 282, 289, 292, 295, 298, 300, 302, 306, 328, 337, 356, 361, 367, 370, 373, 375, 378, 401, 402, 415, 431, 457, 461, 477, 519, 538, 539, 540, 541, 545, 548, 551, 552, 554, 587, 598, 599, 605, 610, 613, 614, 616, 617, 631, 652, 660, 667, 673, 681, 682, 686, 703, 709, 737, 747, 758, 786, 787, 789, 811, 813, 830, 838, 843, 864, 865, 866, 869, 870, 873, 877, 878, 884, 888, 890, 892, 898, 899, 900, 902, 903, 904, 905, 909, 910, 935, 938, 942, 943, 944, 945, 946, 947, 949, 951, 954, 955, 959, 961, 965, 970, 972, 980, 981, 982, 983, 984, 988, 1012, 1013, 1014, 1015, 1017, 1020, 1024, 1027, 1028, 1031, 1036, 1037, 1046, 1048, 1059, 1060, 1064, 1067, 1080, 1086, 1094, 1103, 1105, 1120, 1124, 1125, 1134, 1137, 1143, 1150, 1153, 1159, 1170, 1171, 1172, 1179, 1182, 1190, 1195], "view": [17, 62, 178, 179, 183, 194, 196, 209, 211, 277, 278, 282, 289, 337, 338, 351, 388, 405, 407, 470, 697, 735, 744, 746, 790, 791, 865, 866, 875, 882, 935, 944, 946, 1067, 1136, 1190, 1193, 1195], "state": [17, 45, 121, 126, 131, 169, 180, 185, 205, 213, 235, 242, 245, 248, 258, 259, 261, 410, 427, 459, 477, 544, 545, 549, 550, 597, 703, 737, 767, 796, 834, 855, 869, 927, 937, 981, 985, 996, 997, 1034, 1040], "rather": [17, 87, 139, 143, 144, 173, 175, 176, 177, 178, 179, 180, 183, 184, 188, 197, 201, 205, 209, 225, 234, 252, 253, 327, 356, 381, 393, 435, 467, 468, 477, 495, 546, 547, 548, 549, 550, 555, 590, 597, 599, 613, 620, 631, 651, 676, 682, 696, 717, 767, 769, 811, 838, 843, 875, 877, 923, 935, 942, 943, 944, 946, 953, 958, 981, 982, 1009, 1013, 1028, 1053, 1060, 1063, 1071, 1112, 1113, 1116, 1127, 1129, 1144, 1151, 1172, 1177, 1190, 1192], "huge": [17, 179, 184, 194, 508, 744, 816, 834, 1059, 1061, 1166], "tabl": [17, 39, 62, 144, 166, 170, 172, 205, 211, 212, 229, 237, 242, 248, 249, 251, 252, 255, 256, 258, 261, 268, 273, 307, 389, 393, 408, 422, 423, 427, 428, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 675, 697, 735, 744, 788, 790, 791, 877, 1084, 1094, 1126, 1128, 1149, 1150], "isnot": 17, "big": [17, 106, 144, 170, 173, 174, 180, 205, 209, 229, 235, 249, 256, 259, 302, 328, 370, 416, 461, 473, 552, 602, 632, 695, 759, 958, 1137, 1149, 1205], "fat": [17, 144, 170, 172, 176, 180, 249, 689, 759, 869, 1149], "sai": [17, 24, 108, 135, 144, 157, 161, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 188, 193, 194, 205, 209, 246, 251, 273, 292, 295, 299, 301, 302, 323, 324, 356, 370, 461, 467, 473, 483, 493, 497, 506, 517, 523, 538, 540, 552, 581, 590, 599, 609, 657, 670, 682, 691, 695, 723, 727, 729, 730, 731, 733, 738, 745, 748, 749, 754, 797, 811, 838, 877, 880, 882, 917, 935, 942, 944, 955, 959, 970, 972, 982, 994, 1005, 1009, 1015, 1024, 1027, 1028, 1034, 1038, 1060, 1076, 1088, 1094, 1124, 1145, 1179, 1193], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 70, 80, 82, 87, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 124, 126, 127, 131, 132, 139, 143, 148, 149, 153, 154, 160, 165, 166, 169, 170, 172, 173, 174, 175, 178, 179, 184, 188, 192, 195, 197, 199, 200, 201, 202, 204, 205, 207, 209, 210, 212, 213, 214, 215, 220, 222, 223, 224, 225, 230, 233, 234, 235, 238, 239, 240, 243, 244, 246, 247, 248, 249, 251, 252, 255, 256, 258, 259, 262, 263, 264, 265, 267, 269, 272, 273, 277, 278, 279, 282, 286, 288, 291, 292, 294, 295, 301, 302, 304, 308, 309, 313, 315, 316, 323, 324, 327, 328, 330, 331, 332, 336, 339, 342, 348, 351, 353, 355, 356, 357, 358, 359, 360, 367, 370, 371, 372, 373, 374, 375, 381, 383, 384, 388, 399, 402, 403, 433, 434, 436, 437, 438, 439, 445, 449, 452, 456, 460, 465, 469, 471, 473, 474, 475, 478, 480, 482, 484, 485, 486, 491, 492, 495, 501, 515, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 574, 577, 580, 582, 583, 586, 589, 592, 595, 600, 602, 614, 615, 616, 617, 623, 675, 679, 686, 689, 697, 712, 735, 741, 745, 755, 768, 788, 789, 790, 791, 794, 799, 800, 804, 805, 807, 808, 815, 816, 819, 829, 834, 840, 842, 845, 847, 853, 854, 856, 859, 862, 863, 864, 867, 868, 870, 871, 872, 874, 875, 877, 878, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 894, 896, 897, 898, 902, 906, 907, 908, 909, 910, 912, 915, 918, 923, 926, 931, 934, 935, 938, 942, 943, 944, 945, 947, 948, 950, 951, 957, 958, 961, 962, 963, 972, 975, 976, 979, 980, 986, 989, 992, 995, 997, 1001, 1003, 1004, 1005, 1008, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1035, 1036, 1037, 1040, 1043, 1048, 1051, 1054, 1059, 1063, 1065, 1067, 1078, 1084, 1087, 1088, 1095, 1096, 1106, 1109, 1120, 1121, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1150, 1151, 1158, 1159, 1162, 1165, 1170, 1171, 1172, 1173, 1176, 1178, 1181, 1187, 1192, 1194, 1195, 1196, 1203, 1204, 1205, 1207], "rst": [17, 23, 32, 34, 35, 36, 38, 126, 153, 169, 192, 199, 204, 207, 213, 261, 271, 335, 378, 574, 577, 580, 583, 586, 589, 592, 1001, 1004, 1008, 1176, 1181], "render": [17, 40, 178, 341, 351], "dure": [17, 27, 45, 46, 106, 108, 163, 172, 173, 174, 175, 179, 180, 184, 188, 193, 205, 209, 261, 373, 436, 440, 441, 455, 467, 472, 516, 523, 549, 552, 633, 651, 708, 747, 834, 838, 843, 870, 876, 942, 944, 953, 1014, 1028, 1029, 1048, 1061, 1063, 1078, 1163, 1170], "regular": [17, 173, 197, 208, 222, 238, 245, 246, 253, 272, 273, 275, 277, 278, 287, 306, 307, 336, 342, 395, 461, 479, 610, 612, 744, 789, 826, 838, 883, 917, 920, 922, 931, 944, 955, 1005, 1006, 1048, 1078, 1080, 1137], "process": [17, 28, 60, 62, 75, 80, 82, 99, 101, 112, 113, 126, 148, 149, 178, 183, 190, 197, 203, 205, 212, 213, 215, 249, 279, 288, 301, 302, 309, 323, 353, 354, 372, 373, 380, 385, 438, 444, 473, 482, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 762, 768, 789, 790, 791, 800, 805, 808, 810, 815, 819, 821, 824, 825, 828, 829, 830, 831, 833, 835, 838, 842, 843, 844, 847, 849, 852, 853, 855, 856, 858, 859, 865, 866, 867, 868, 869, 872, 873, 874, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 934, 943, 946, 947, 948, 949, 950, 953, 957, 958, 959, 963, 964, 965, 967, 968, 970, 972, 973, 975, 980, 981, 982, 989, 994, 995, 997, 998, 999, 1006, 1009, 1010, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1030, 1039, 1047, 1060, 1061, 1065, 1116, 1182, 1195, 1204, 1205], "mean": [17, 29, 75, 76, 112, 113, 126, 131, 173, 175, 178, 180, 194, 196, 197, 209, 229, 232, 233, 246, 248, 261, 265, 292, 307, 315, 323, 327, 331, 355, 356, 393, 414, 415, 416, 438, 457, 462, 467, 521, 599, 607, 610, 611, 677, 723, 745, 749, 757, 758, 791, 797, 813, 873, 880, 883, 885, 886, 894, 935, 942, 943, 944, 971, 978, 994, 998, 1000, 1028, 1031, 1040, 1055, 1063, 1066, 1080, 1081, 1086, 1115, 1135, 1138, 1142, 1144, 1145, 1151, 1156, 1177, 1192, 1195], "specif": [17, 62, 66, 124, 176, 242, 248, 249, 258, 261, 307, 313, 324, 356, 390, 438, 455, 467, 497, 544, 547, 549, 552, 698, 741, 755, 789, 797, 811, 834, 838, 864, 874, 935, 942, 944, 958, 964, 980, 981, 1006, 1012, 1024, 1035, 1043, 1044, 1146, 1162, 1170, 1205, 1206], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 62, 71, 72, 75, 76, 87, 94, 99, 108, 109, 110, 112, 113, 116, 119, 120, 121, 122, 123, 126, 127, 131, 132, 134, 135, 137, 139, 143, 144, 149, 180, 191, 192, 193, 195, 200, 209, 210, 211, 212, 214, 216, 217, 229, 233, 235, 242, 245, 246, 248, 249, 253, 257, 259, 260, 263, 265, 268, 271, 273, 275, 277, 278, 280, 285, 286, 290, 292, 293, 295, 299, 300, 301, 302, 304, 305, 306, 307, 311, 313, 323, 324, 325, 327, 328, 329, 333, 335, 337, 338, 339, 340, 341, 345, 346, 347, 349, 350, 352, 356, 358, 364, 365, 372, 373, 374, 381, 407, 453, 477, 479, 487, 495, 496, 497, 498, 499, 501, 502, 504, 505, 509, 515, 516, 517, 519, 520, 522, 523, 524, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 560, 562, 567, 573, 581, 584, 587, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 608, 609, 611, 613, 618, 620, 621, 624, 630, 639, 640, 646, 650, 656, 659, 662, 663, 668, 669, 670, 672, 673, 677, 678, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 699, 700, 701, 702, 703, 704, 705, 708, 712, 717, 719, 720, 721, 723, 725, 726, 729, 730, 731, 732, 733, 734, 735, 737, 738, 740, 742, 749, 751, 754, 755, 758, 759, 760, 767, 768, 769, 775, 776, 777, 779, 781, 785, 786, 787, 788, 790, 791, 793, 935, 942, 943, 944, 976, 978, 979, 1033, 1035, 1037, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1056, 1057, 1058, 1059, 1061, 1064, 1066, 1067, 1075, 1096, 1123, 1124, 1125, 1130, 1132, 1135, 1150, 1164, 1170, 1171, 1182, 1190, 1200], "handout": [17, 125, 126], "warn": [17, 32, 40, 144, 169, 184, 225, 235, 286, 298, 367, 378, 403, 427, 458, 459, 461, 482, 496, 551, 553, 597, 601, 652, 696, 708, 791, 807, 813, 816, 875, 934, 964, 975, 989, 1011, 1035, 1086, 1165], "produc": [17, 110, 193, 195, 234, 248, 347, 455, 467, 472, 723, 729, 731, 767, 769, 955, 985, 986, 1004, 1012, 1015, 1028, 1041, 1042, 1075, 1078, 1080, 1145], "error": [17, 21, 27, 29, 46, 90, 99, 127, 131, 132, 143, 154, 169, 172, 173, 174, 175, 178, 179, 188, 192, 195, 203, 206, 209, 212, 219, 230, 234, 240, 242, 245, 249, 250, 251, 255, 258, 261, 265, 268, 270, 273, 282, 283, 286, 289, 292, 295, 306, 307, 320, 325, 355, 370, 375, 377, 381, 400, 403, 405, 412, 416, 430, 431, 437, 443, 444, 446, 459, 460, 461, 464, 481, 482, 483, 485, 486, 487, 488, 491, 498, 502, 521, 522, 523, 535, 543, 554, 573, 590, 595, 597, 599, 600, 604, 605, 606, 607, 608, 610, 612, 620, 623, 628, 670, 672, 673, 682, 689, 696, 699, 703, 705, 706, 707, 708, 712, 732, 733, 734, 742, 745, 747, 749, 754, 755, 757, 768, 769, 771, 789, 790, 791, 794, 801, 816, 826, 830, 834, 838, 854, 868, 871, 872, 878, 881, 934, 935, 943, 945, 957, 959, 960, 961, 962, 963, 964, 972, 973, 975, 983, 989, 991, 992, 995, 996, 997, 1005, 1009, 1010, 1014, 1015, 1024, 1029, 1035, 1065, 1066, 1077, 1078, 1082, 1086, 1088, 1089, 1096, 1109, 1135, 1137, 1144, 1165, 1170, 1172, 1177, 1190], "output": [17, 23, 33, 40, 51, 53, 55, 56, 60, 62, 87, 88, 109, 117, 125, 137, 143, 144, 169, 175, 177, 178, 179, 192, 195, 201, 213, 214, 225, 234, 242, 248, 251, 252, 258, 261, 289, 355, 370, 375, 393, 394, 399, 400, 401, 402, 406, 438, 472, 473, 479, 480, 481, 521, 523, 538, 553, 556, 557, 558, 559, 571, 573, 581, 584, 610, 660, 678, 679, 692, 740, 745, 753, 791, 796, 851, 862, 869, 878, 881, 882, 883, 894, 898, 920, 924, 925, 930, 931, 935, 945, 956, 964, 967, 970, 978, 981, 982, 986, 1006, 1009, 1010, 1012, 1042, 1081, 1086, 1087, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1111, 1117, 1119, 1121, 1126, 1127, 1128, 1129, 1140, 1143, 1144, 1149, 1153, 1162, 1165, 1178, 1185, 1201], "must": [17, 39, 43, 44, 112, 113, 126, 132, 176, 180, 195, 201, 205, 206, 208, 209, 212, 216, 217, 230, 232, 234, 242, 248, 249, 256, 258, 259, 261, 282, 307, 324, 393, 410, 413, 427, 435, 453, 455, 470, 477, 479, 483, 489, 500, 505, 506, 519, 522, 523, 536, 537, 551, 554, 557, 558, 559, 571, 581, 607, 608, 610, 612, 622, 623, 657, 670, 677, 684, 691, 699, 700, 702, 703, 723, 747, 749, 761, 765, 791, 816, 822, 830, 836, 843, 865, 866, 882, 892, 900, 934, 945, 951, 954, 964, 965, 968, 973, 975, 983, 992, 994, 996, 1006, 1012, 1015, 1030, 1035, 1036, 1053, 1058, 1064, 1077, 1078, 1080, 1081, 1083, 1086, 1116, 1137, 1171, 1182], "role": [17, 39, 176, 180, 473, 554, 935], "somewher": [17, 194, 213, 225, 232, 265, 277, 278, 355, 367, 438, 455, 457, 477, 502, 523, 590, 723, 981, 1038, 1063, 1150], "top": [17, 28, 32, 34, 35, 38, 39, 50, 172, 173, 175, 176, 188, 194, 196, 197, 213, 215, 242, 248, 251, 258, 261, 480, 841, 850, 935, 955, 994, 996, 1035, 1043, 1065, 1112, 1116, 1190, 1194, 1196, 1201], "insid": [17, 35, 39, 42, 50, 126, 131, 144, 172, 173, 201, 203, 225, 242, 248, 258, 261, 278, 298, 300, 315, 324, 331, 355, 370, 399, 403, 413, 431, 434, 436, 437, 455, 460, 479, 541, 552, 557, 605, 611, 613, 769, 789, 799, 809, 877, 907, 917, 942, 944, 967, 981, 1000, 1026, 1031, 1034, 1043, 1080, 1086, 1155, 1158, 1162, 1173, 1192, 1195], "ideal": [17, 184, 200, 242, 248, 258, 261, 278, 280, 466, 482, 493, 500, 548, 669, 723, 797, 816, 834, 838, 931, 951, 1015, 1055, 1057], "slideshow": [17, 23, 252, 264, 291, 301, 312, 320, 323, 327, 333, 334, 339, 340, 345, 346, 349, 350, 795, 798, 800, 803, 805, 808, 810, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 842, 844, 847, 849, 853, 856, 859, 1079, 1167, 1174], "manual": [17, 60, 62, 127, 137, 139, 143, 170, 180, 188, 211, 212, 242, 243, 248, 251, 258, 261, 291, 293, 401, 402, 405, 412, 450, 455, 479, 596, 638, 688, 695, 706, 732, 744, 745, 776, 777, 779, 780, 790, 791, 793, 794, 797, 838, 865, 866, 935, 942, 943, 965, 968, 981, 983, 985, 1026, 1028, 1033, 1041, 1042, 1046, 1050, 1092], "theme": [17, 362, 1067, 1086], "url": [17, 170, 177, 179, 188, 200, 552, 1034, 1092], "_static": 17, "ui": [17, 32, 67, 180, 416, 675], "default": [17, 23, 58, 60, 99, 112, 113, 121, 124, 126, 134, 135, 173, 174, 179, 180, 184, 190, 201, 210, 212, 214, 221, 223, 234, 242, 245, 248, 251, 254, 257, 258, 261, 265, 268, 271, 276, 279, 286, 288, 289, 293, 297, 298, 300, 303, 307, 309, 310, 329, 335, 338, 341, 347, 353, 354, 363, 370, 416, 427, 459, 467, 473, 479, 480, 482, 485, 489, 492, 498, 501, 515, 517, 526, 527, 543, 553, 595, 597, 598, 603, 604, 607, 608, 632, 651, 652, 668, 673, 675, 677, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 695, 696, 703, 704, 733, 735, 751, 760, 765, 767, 768, 769, 775, 776, 781, 788, 790, 791, 834, 862, 865, 866, 868, 880, 893, 898, 917, 929, 930, 934, 935, 937, 942, 943, 945, 951, 954, 968, 972, 978, 981, 983, 985, 997, 1009, 1011, 1013, 1015, 1026, 1055, 1057, 1063, 1082, 1084, 1086, 1092, 1128, 1145, 1155, 1158, 1160, 1165, 1170, 1172, 1190], "given": [17, 39, 61, 63, 71, 83, 104, 108, 109, 112, 113, 116, 119, 120, 158, 173, 175, 178, 180, 184, 194, 242, 248, 258, 261, 265, 289, 297, 298, 300, 307, 335, 351, 356, 403, 418, 461, 520, 549, 552, 554, 573, 597, 666, 677, 702, 789, 799, 809, 820, 838, 875, 880, 889, 891, 898, 920, 942, 1022, 1034, 1122, 1131, 1137, 1139, 1145, 1156, 1159, 1193, 1205], "path": [17, 21, 99, 101, 126, 132, 148, 161, 162, 169, 178, 201, 205, 213, 216, 233, 244, 245, 246, 250, 253, 257, 258, 261, 279, 288, 289, 309, 310, 313, 315, 316, 331, 332, 335, 342, 347, 352, 353, 354, 355, 356, 361, 363, 370, 375, 437, 473, 479, 481, 484, 485, 487, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 595, 620, 752, 768, 790, 791, 802, 816, 828, 838, 864, 865, 866, 867, 868, 871, 872, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 899, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 934, 954, 957, 963, 964, 965, 973, 974, 975, 989, 991, 992, 993, 995, 997, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1033, 1043, 1060, 1063, 1125, 1165, 1170, 1172, 1180, 1192], "commit": [17, 46, 79, 124, 151, 176, 179, 187, 188, 230, 234, 235, 246, 249, 259, 378, 811, 1137, 1146, 1149, 1170, 1202], "place": [17, 55, 126, 139, 161, 170, 174, 175, 177, 178, 179, 180, 188, 193, 202, 206, 229, 245, 251, 261, 297, 298, 393, 409, 431, 438, 455, 478, 487, 491, 495, 519, 521, 535, 554, 567, 612, 626, 628, 629, 640, 651, 659, 662, 663, 673, 692, 758, 761, 769, 786, 789, 791, 816, 838, 867, 888, 889, 890, 891, 942, 943, 951, 997, 1027, 1029, 1038, 1068, 1077, 1081, 1083, 1102, 1159, 1172], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 80, 101, 126, 148, 173, 180, 209, 225, 246, 279, 288, 289, 309, 310, 353, 354, 388, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 712, 717, 768, 790, 791, 838, 865, 866, 867, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 934, 942, 954, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1141, 1142, 1149, 1162], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 80, 124, 135, 139, 143, 163, 170, 172, 173, 174, 176, 178, 180, 183, 188, 192, 193, 224, 230, 235, 240, 242, 246, 248, 258, 261, 273, 278, 280, 289, 298, 324, 337, 355, 373, 377, 383, 384, 451, 458, 467, 468, 473, 477, 481, 482, 502, 551, 552, 553, 554, 567, 590, 614, 615, 616, 617, 620, 667, 672, 737, 740, 753, 754, 767, 789, 797, 801, 806, 807, 809, 820, 822, 830, 834, 838, 839, 877, 898, 899, 917, 930, 935, 937, 942, 943, 944, 951, 961, 994, 1000, 1005, 1010, 1012, 1015, 1024, 1033, 1036, 1047, 1051, 1057, 1080, 1094, 1098, 1115, 1120, 1132, 1137, 1142, 1145, 1153, 1165, 1171, 1177, 1182, 1193], "uri": 17, "well": [17, 42, 173, 175, 178, 179, 180, 184, 197, 201, 209, 232, 234, 261, 297, 299, 307, 315, 324, 331, 356, 416, 438, 467, 477, 505, 545, 551, 554, 555, 578, 598, 602, 613, 627, 695, 702, 709, 732, 745, 755, 759, 863, 882, 898, 931, 938, 943, 944, 955, 968, 970, 988, 1012, 1014, 1027, 1035, 1036, 1039, 1043, 1046, 1050, 1053, 1056, 1067, 1071, 1081, 1140, 1142, 1150, 1166, 1192], "blah": [19, 23, 39, 61, 65, 151, 173, 176, 195, 206, 213, 216, 221, 229, 232, 238, 242, 248, 249, 251, 253, 258, 261, 268, 271, 283, 290, 293, 303, 307, 325, 335, 341, 362, 363, 370, 378, 381, 461, 708, 771, 789, 794, 802, 961, 962, 1005, 1006, 1031, 1066, 1072, 1092, 1153], "watch": [20, 32, 174, 175, 176, 194, 201, 205, 209, 210, 214, 300, 302, 306, 478, 745, 935, 943, 979, 1039, 1060, 1163], "w5g8k7a2gbg": 20, "bore": [20, 234, 256, 270, 286, 312, 898, 1006, 1010, 1067, 1137], "good": [20, 27, 29, 43, 99, 126, 148, 170, 172, 173, 174, 175, 180, 188, 197, 205, 209, 212, 230, 233, 234, 242, 246, 251, 252, 253, 255, 256, 259, 265, 280, 282, 292, 295, 298, 300, 306, 307, 328, 337, 389, 412, 416, 457, 461, 463, 471, 472, 477, 500, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 578, 595, 599, 603, 604, 618, 621, 624, 640, 646, 650, 653, 659, 662, 663, 668, 672, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 706, 735, 746, 751, 757, 760, 766, 768, 770, 776, 779, 788, 790, 791, 795, 797, 830, 838, 843, 863, 877, 881, 931, 935, 943, 944, 968, 970, 987, 996, 999, 1000, 1006, 1009, 1035, 1048, 1066, 1067, 1078, 1081, 1083, 1086, 1099, 1109, 1136, 1137, 1144, 1163, 1192], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 286], "staticmethod": [21, 286], "member": [21, 35, 38, 43, 57, 62, 112, 113, 126, 188, 194, 195, 196, 206, 211, 233, 251, 263, 276, 291, 298, 307, 338, 374, 446, 455, 462, 499, 541, 543, 546, 549, 573, 587, 595, 597, 598, 600, 601, 602, 603, 609, 613, 614, 616, 618, 651, 652, 656, 677, 680, 683, 684, 685, 687, 688, 689, 690, 691, 692, 695, 703, 707, 708, 717, 723, 733, 749, 755, 776, 787, 789, 791, 799, 804, 806, 826, 834, 838, 851, 857, 864, 865, 866, 881, 882, 883, 884, 885, 886, 892, 927, 931, 942, 970, 1024, 1085, 1162, 1182], "final": [21, 38, 42, 60, 66, 80, 108, 169, 195, 205, 209, 212, 232, 234, 242, 248, 249, 258, 263, 276, 282, 306, 328, 338, 479, 552, 554, 619, 620, 669, 695, 706, 735, 776, 790, 791, 801, 832, 838, 865, 866, 931, 937, 943, 944, 1012, 1029, 1033, 1046, 1099, 1115, 1137, 1190], "exec": [21, 29, 180, 205, 214, 245, 259, 260, 268, 275, 287, 291, 293, 301, 302, 303, 307, 314, 323, 327, 334, 336, 791, 926, 931, 964, 967, 988, 1012, 1037, 1135, 1203], "dict": [21, 192, 205, 206, 210, 221, 223, 224, 229, 232, 246, 247, 248, 249, 252, 254, 257, 258, 259, 263, 269, 283, 286, 293, 303, 307, 313, 318, 325, 329, 335, 340, 342, 348, 351, 362, 365, 370, 695, 1033, 1036, 1048, 1049, 1058, 1084], "There": [21, 45, 55, 57, 70, 83, 99, 135, 170, 172, 174, 175, 176, 177, 180, 184, 185, 201, 202, 206, 208, 209, 212, 216, 217, 230, 235, 251, 254, 255, 256, 259, 265, 292, 295, 298, 299, 300, 301, 302, 323, 324, 338, 356, 391, 401, 407, 416, 431, 434, 455, 457, 464, 467, 478, 479, 483, 492, 497, 522, 523, 573, 581, 598, 603, 648, 673, 691, 692, 704, 706, 712, 735, 740, 751, 755, 759, 760, 768, 788, 790, 791, 811, 838, 843, 869, 898, 935, 942, 943, 988, 998, 1009, 1010, 1061, 1067, 1078, 1137, 1146, 1171, 1177], "half": [21, 36, 173, 174, 175, 235, 463, 482, 836, 877, 943, 996, 1033], "heart": [21, 32, 38, 66, 163, 482, 877, 1143], "split": [21, 170, 193, 196, 229, 233, 238, 239, 242, 245, 246, 248, 253, 257, 263, 271, 274, 286, 291, 293, 307, 313, 329, 336, 341, 347, 351, 361, 370, 455, 479, 501, 573, 1033, 1143], "pimp": 21, "elabor": [21, 184, 249, 259, 457, 480, 943], "namespac": [21, 205, 242, 248, 255, 258, 261, 265, 276, 286, 502, 504, 519, 555, 556, 557, 558, 559, 561, 571, 572, 590, 612, 620, 625, 626, 627, 628, 629, 635, 636, 638, 639, 642, 643, 644, 648, 662, 679, 685, 686, 695, 710, 732, 742, 745, 767, 769, 770, 942, 976, 979, 991, 993, 1043], "__init__": [21, 62, 169, 192, 193, 204, 206, 209, 211, 229, 232, 233, 245, 246, 248, 255, 258, 261, 265, 271, 274, 283, 286, 293, 303, 307, 325, 329, 347, 351, 479, 1033, 1034, 1035, 1043, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1170], "__all__": [21, 261, 265], "etc": [21, 23, 29, 62, 92, 102, 126, 154, 162, 166, 170, 174, 178, 187, 190, 191, 195, 202, 209, 212, 216, 217, 219, 222, 223, 230, 231, 233, 234, 236, 240, 243, 245, 246, 248, 252, 253, 256, 262, 263, 264, 265, 267, 268, 270, 272, 275, 285, 286, 289, 292, 293, 295, 303, 305, 306, 308, 311, 312, 328, 329, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 354, 356, 357, 358, 359, 360, 361, 370, 375, 378, 388, 411, 416, 472, 482, 490, 504, 587, 675, 737, 743, 770, 789, 791, 797, 811, 838, 850, 860, 868, 870, 873, 875, 878, 880, 881, 882, 883, 894, 898, 901, 912, 915, 917, 918, 920, 922, 923, 924, 925, 926, 927, 929, 931, 934, 944, 945, 946, 954, 955, 958, 959, 960, 965, 971, 980, 991, 1005, 1006, 1010, 1012, 1033, 1035, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1082, 1086, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1162, 1164, 1185, 1186, 1194, 1196, 1200, 1201, 1204, 1206], "user": [21, 23, 29, 31, 47, 53, 62, 65, 86, 103, 104, 112, 113, 126, 132, 153, 154, 159, 169, 170, 172, 173, 174, 175, 177, 178, 180, 188, 195, 201, 204, 205, 206, 209, 213, 220, 229, 232, 234, 236, 245, 251, 253, 258, 259, 261, 262, 264, 265, 268, 271, 273, 282, 283, 286, 289, 292, 293, 295, 303, 307, 310, 317, 318, 320, 324, 329, 335, 337, 341, 347, 353, 354, 355, 367, 370, 379, 435, 466, 477, 479, 480, 482, 487, 495, 505, 522, 523, 543, 557, 573, 595, 598, 599, 605, 612, 656, 660, 679, 681, 682, 683, 684, 691, 692, 708, 712, 744, 755, 768, 790, 791, 797, 799, 809, 811, 836, 838, 851, 852, 865, 866, 868, 872, 876, 877, 878, 882, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 898, 922, 926, 929, 934, 935, 936, 945, 951, 958, 963, 964, 965, 968, 970, 973, 975, 980, 989, 992, 993, 995, 997, 998, 1009, 1012, 1026, 1028, 1029, 1030, 1033, 1050, 1051, 1088, 1096, 1098, 1099, 1103, 1115, 1116, 1122, 1127, 1129, 1132, 1134, 1135, 1148, 1153, 1156, 1160, 1163, 1172, 1179, 1190], "import": [21, 29, 62, 161, 169, 175, 180, 183, 193, 194, 195, 196, 205, 206, 209, 211, 212, 217, 221, 223, 224, 225, 233, 237, 238, 239, 244, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 277, 278, 283, 286, 290, 291, 292, 293, 295, 297, 303, 307, 313, 318, 321, 325, 329, 335, 340, 341, 347, 351, 363, 365, 393, 409, 479, 482, 483, 620, 637, 703, 741, 755, 758, 776, 791, 820, 838, 880, 898, 935, 938, 942, 951, 963, 990, 1000, 1011, 1032, 1033, 1034, 1036, 1044, 1046, 1048, 1054, 1055, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1080, 1088, 1090, 1091, 1092, 1125, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1142, 1143, 1145, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1167, 1170, 1171, 1174, 1177, 1195, 1200], "pythonpath": [21, 40, 60, 205, 291, 1043, 1092], "goto": [21, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791, 1009], "orgi": [21, 487, 699], "perspect": [21, 38, 180, 202], "alwai": [21, 43, 82, 124, 169, 170, 175, 185, 202, 209, 232, 254, 265, 291, 292, 295, 337, 362, 370, 375, 393, 411, 437, 438, 450, 462, 463, 467, 468, 470, 471, 487, 488, 507, 517, 547, 596, 602, 612, 631, 634, 690, 695, 699, 710, 734, 743, 747, 750, 754, 759, 797, 816, 834, 838, 843, 864, 898, 899, 942, 943, 944, 958, 964, 970, 998, 1009, 1014, 1024, 1029, 1035, 1063, 1067, 1081, 1137, 1142, 1143, 1144, 1170, 1171, 1190], "valgrind": [21, 99, 200, 234, 388, 465, 469, 470, 472, 474, 475, 502, 567, 577, 579, 587, 590, 605, 740, 753, 754, 791, 1187, 1188], "supervis": [21, 1144], "hack": [21, 53, 61, 63, 99, 144, 167, 170, 188, 196, 200, 205, 209, 210, 234, 235, 249, 251, 259, 270, 277, 278, 279, 280, 288, 300, 301, 309, 310, 317, 320, 324, 337, 338, 353, 354, 370, 374, 378, 379, 381, 388, 389, 437, 480, 501, 502, 515, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 573, 615, 630, 631, 651, 693, 704, 735, 736, 737, 741, 753, 768, 776, 789, 790, 791, 792, 868, 893, 894, 934, 975, 1022, 1060, 1157, 1163, 1170, 1189, 1190, 1204], "someth": [21, 43, 55, 74, 75, 76, 80, 85, 86, 89, 131, 139, 157, 166, 172, 173, 175, 176, 178, 180, 184, 188, 194, 201, 205, 213, 221, 223, 224, 225, 235, 245, 249, 256, 271, 274, 298, 300, 317, 320, 337, 365, 428, 429, 443, 497, 519, 552, 554, 590, 601, 605, 610, 613, 620, 644, 688, 689, 690, 700, 703, 717, 747, 755, 757, 758, 785, 786, 787, 791, 799, 811, 815, 826, 834, 838, 840, 843, 858, 910, 934, 935, 938, 942, 943, 944, 959, 960, 968, 970, 971, 983, 994, 996, 997, 1009, 1024, 1031, 1033, 1034, 1036, 1040, 1057, 1064, 1066, 1071, 1081, 1087, 1119, 1144, 1195], "malloc": [21, 200, 450, 451, 464, 579, 824, 958, 1010, 1012, 1187], "seomth": 21, "cleanup": [21, 173, 192, 381, 596, 672, 708, 752, 1010, 1033, 1171], "obviou": [21, 57, 121, 180, 188, 194, 255, 265, 292, 295, 367, 438, 457, 479, 554, 596, 703, 712, 753, 759, 776, 964, 1006, 1031, 1067, 1078, 1193], "lead": [21, 112, 113, 116, 120, 131, 173, 175, 179, 180, 197, 234, 261, 265, 289, 307, 327, 397, 405, 415, 487, 677, 689, 838, 864, 877, 943, 996, 1005, 1006, 1024, 1051, 1077, 1088, 1099, 1150, 1164], "sever": [21, 89, 126, 173, 233, 234, 435, 504, 509, 683, 694, 836, 894, 935, 1035, 1061, 1072], "duplic": [21, 42, 49, 99, 127, 131, 143, 193, 206, 251, 259, 269, 291, 355, 397, 399, 460, 461, 504, 563, 571, 584, 605, 612, 623, 701, 758, 791, 845, 881, 934, 970, 973, 975, 992, 1119, 1170, 1172], "when": [21, 28, 30, 43, 62, 77, 82, 112, 113, 134, 139, 144, 154, 160, 161, 170, 172, 173, 174, 175, 178, 180, 188, 190, 202, 205, 211, 234, 235, 242, 246, 248, 249, 251, 258, 259, 261, 264, 265, 278, 280, 289, 297, 298, 300, 307, 315, 331, 338, 356, 361, 370, 381, 388, 395, 403, 405, 411, 416, 427, 434, 438, 453, 458, 459, 460, 461, 462, 467, 477, 479, 482, 485, 489, 492, 493, 496, 497, 501, 521, 523, 554, 555, 599, 601, 602, 605, 613, 635, 651, 666, 667, 670, 672, 677, 679, 684, 688, 690, 695, 698, 700, 702, 703, 706, 723, 737, 742, 745, 750, 754, 755, 758, 762, 765, 767, 769, 789, 806, 809, 816, 820, 832, 834, 836, 838, 852, 871, 873, 877, 880, 882, 894, 898, 920, 931, 943, 944, 951, 955, 959, 960, 964, 967, 968, 986, 988, 994, 997, 998, 1000, 1005, 1009, 1010, 1012, 1014, 1029, 1033, 1034, 1035, 1040, 1044, 1047, 1053, 1055, 1060, 1063, 1066, 1067, 1069, 1071, 1076, 1077, 1078, 1088, 1128, 1145, 1150, 1155, 1165, 1170, 1172, 1179, 1190, 1192, 1193], "void": [21, 42, 44, 55, 58, 109, 121, 123, 131, 135, 137, 139, 143, 175, 176, 184, 216, 234, 246, 370, 392, 393, 395, 399, 401, 403, 407, 413, 417, 431, 433, 434, 435, 436, 438, 441, 443, 444, 447, 450, 451, 453, 454, 460, 461, 464, 480, 487, 496, 497, 498, 502, 504, 508, 517, 526, 527, 531, 532, 535, 536, 537, 539, 551, 553, 554, 555, 578, 590, 597, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 612, 613, 620, 626, 630, 639, 652, 666, 669, 670, 673, 675, 676, 685, 687, 695, 696, 701, 705, 708, 709, 723, 725, 726, 728, 729, 730, 731, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 747, 752, 753, 754, 755, 757, 759, 762, 764, 767, 769, 771, 789, 799, 802, 809, 816, 818, 820, 822, 824, 832, 834, 843, 848, 852, 858, 875, 895, 956, 960, 961, 962, 964, 974, 981, 983, 985, 987, 991, 996, 1002, 1005, 1006, 1009, 1010, 1012, 1024, 1028, 1030, 1182], "f": [21, 31, 38, 43, 62, 65, 111, 126, 138, 154, 159, 174, 175, 176, 184, 196, 206, 211, 212, 217, 218, 221, 223, 229, 230, 232, 233, 239, 241, 242, 245, 246, 248, 252, 254, 255, 258, 261, 265, 268, 270, 272, 274, 282, 283, 286, 290, 293, 298, 303, 307, 312, 314, 321, 325, 329, 336, 341, 347, 351, 362, 364, 366, 381, 407, 412, 422, 424, 433, 436, 441, 460, 461, 463, 467, 471, 479, 496, 602, 606, 622, 696, 702, 708, 709, 738, 759, 762, 797, 802, 864, 875, 882, 898, 917, 924, 926, 927, 942, 943, 944, 945, 967, 998, 1000, 1005, 1020, 1024, 1027, 1031, 1033, 1034, 1035, 1036, 1048, 1050, 1052, 1053, 1056, 1057, 1058, 1077, 1078, 1086, 1094, 1099, 1132, 1134, 1137, 1145, 1170, 1200], "alloc": [21, 134, 175, 176, 193, 195, 234, 242, 245, 248, 258, 261, 283, 405, 434, 450, 455, 458, 461, 464, 502, 586, 588, 602, 604, 605, 612, 631, 636, 643, 648, 659, 663, 667, 692, 703, 706, 740, 745, 754, 755, 759, 789, 791, 794, 797, 799, 824, 826, 840, 843, 875, 881, 960, 961, 962, 982, 1042, 1094], "variabl": [21, 29, 89, 91, 92, 99, 106, 112, 113, 169, 174, 175, 184, 188, 192, 194, 195, 201, 205, 206, 209, 210, 211, 212, 214, 217, 218, 219, 224, 225, 230, 231, 233, 234, 236, 240, 243, 244, 246, 247, 248, 251, 252, 254, 256, 262, 263, 264, 265, 267, 269, 270, 272, 276, 279, 284, 285, 286, 288, 289, 292, 295, 298, 302, 304, 305, 306, 308, 309, 310, 311, 312, 318, 323, 324, 325, 327, 328, 330, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 370, 372, 373, 392, 394, 395, 403, 408, 416, 423, 427, 428, 431, 432, 433, 437, 439, 440, 443, 445, 449, 450, 452, 453, 455, 456, 457, 463, 464, 465, 467, 469, 474, 475, 481, 483, 487, 489, 508, 516, 522, 531, 536, 541, 582, 587, 602, 610, 611, 618, 630, 670, 677, 692, 697, 703, 706, 708, 735, 737, 749, 768, 787, 788, 789, 790, 791, 807, 826, 838, 868, 869, 872, 875, 899, 918, 934, 975, 980, 983, 987, 988, 989, 994, 1012, 1022, 1023, 1024, 1029, 1031, 1033, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1051, 1059, 1063, 1065, 1070, 1074, 1076, 1078, 1079, 1082, 1087, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1144, 1147, 1150, 1151, 1157, 1159, 1164, 1165, 1191, 1193, 1200, 1206], "filenam": [21, 42, 50, 55, 58, 172, 192, 196, 221, 239, 242, 245, 246, 248, 253, 258, 261, 271, 286, 289, 302, 303, 307, 335, 341, 351, 362, 479, 538, 541, 555, 789, 838, 864, 865, 927, 965, 968, 969, 970, 971, 972, 976, 979, 1005, 1033, 1043, 1088, 1094, 1106, 1115, 1117, 1121, 1127, 1129], "getenv": [21, 536, 993], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 66, 75, 76, 85, 87, 126, 148, 172, 173, 174, 175, 176, 178, 180, 183, 184, 188, 201, 205, 209, 210, 212, 214, 220, 230, 233, 240, 243, 246, 248, 249, 251, 253, 259, 261, 262, 267, 268, 270, 273, 280, 281, 282, 285, 289, 291, 293, 299, 303, 305, 306, 307, 310, 311, 312, 329, 333, 334, 335, 337, 338, 340, 341, 345, 346, 347, 349, 350, 355, 356, 357, 358, 359, 360, 370, 374, 376, 381, 400, 401, 408, 416, 423, 432, 439, 445, 449, 452, 453, 455, 456, 457, 459, 461, 464, 465, 469, 473, 474, 475, 478, 494, 501, 522, 538, 543, 554, 555, 578, 584, 595, 598, 599, 601, 604, 607, 610, 656, 660, 679, 682, 694, 697, 704, 712, 735, 749, 757, 785, 788, 789, 790, 791, 797, 811, 822, 838, 840, 864, 865, 866, 869, 875, 880, 881, 882, 883, 885, 886, 889, 898, 899, 931, 934, 938, 942, 943, 944, 951, 956, 958, 959, 961, 962, 965, 968, 971, 973, 974, 975, 976, 978, 979, 986, 988, 992, 996, 1002, 1005, 1006, 1009, 1010, 1029, 1035, 1036, 1051, 1054, 1056, 1064, 1072, 1095, 1096, 1106, 1115, 1125, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1143, 1145, 1153, 1160, 1203], "onli": [21, 29, 42, 43, 91, 110, 112, 113, 126, 127, 131, 134, 144, 163, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 188, 193, 194, 201, 205, 209, 211, 212, 230, 232, 235, 242, 245, 248, 251, 252, 253, 255, 258, 259, 261, 262, 264, 265, 270, 272, 273, 274, 285, 286, 289, 291, 292, 298, 302, 305, 307, 311, 312, 315, 324, 331, 333, 339, 340, 345, 346, 349, 350, 361, 364, 378, 385, 395, 401, 403, 404, 405, 407, 412, 413, 415, 420, 427, 428, 431, 433, 435, 436, 437, 438, 454, 455, 459, 460, 461, 462, 463, 472, 477, 479, 480, 482, 483, 486, 488, 491, 492, 496, 497, 498, 500, 508, 516, 517, 519, 521, 522, 523, 535, 536, 551, 552, 555, 558, 559, 573, 584, 597, 598, 599, 600, 602, 604, 606, 607, 610, 612, 613, 619, 633, 635, 651, 652, 656, 666, 667, 669, 673, 677, 681, 682, 689, 691, 695, 702, 706, 708, 712, 717, 723, 733, 737, 740, 744, 745, 749, 750, 754, 755, 761, 763, 765, 767, 769, 775, 779, 781, 782, 791, 794, 796, 799, 802, 807, 818, 824, 834, 838, 843, 846, 851, 855, 863, 864, 865, 866, 873, 876, 880, 882, 883, 888, 894, 898, 899, 920, 927, 935, 936, 937, 942, 943, 944, 945, 955, 960, 961, 964, 966, 967, 968, 972, 974, 978, 980, 983, 988, 991, 994, 996, 997, 998, 999, 1005, 1006, 1009, 1010, 1012, 1013, 1024, 1028, 1029, 1033, 1034, 1035, 1038, 1044, 1048, 1050, 1053, 1055, 1056, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1076, 1081, 1082, 1086, 1088, 1092, 1096, 1101, 1109, 1111, 1112, 1115, 1116, 1120, 1122, 1135, 1137, 1142, 1143, 1144, 1146, 1149, 1158, 1162, 1163, 1170, 1176, 1177, 1179, 1182, 1190, 1192, 1195, 1207], "bullshit": [21, 217, 229, 265, 482, 745, 1200], "everyon": [21, 173, 178, 188, 209, 477, 682, 733, 885, 886, 896, 998], "get": [21, 55, 62, 67, 99, 112, 113, 154, 161, 162, 169, 170, 173, 175, 176, 183, 184, 192, 205, 206, 209, 211, 216, 223, 224, 225, 232, 234, 235, 242, 245, 248, 249, 251, 254, 255, 258, 261, 268, 274, 278, 280, 283, 286, 289, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 373, 375, 390, 416, 461, 470, 493, 497, 502, 517, 526, 531, 608, 615, 687, 695, 705, 723, 729, 749, 750, 753, 754, 755, 756, 758, 771, 781, 789, 791, 799, 804, 811, 838, 840, 854, 857, 871, 873, 877, 878, 898, 934, 944, 951, 954, 960, 961, 962, 975, 977, 982, 999, 1006, 1010, 1027, 1033, 1046, 1049, 1055, 1059, 1067, 1084, 1155, 1162, 1172, 1177, 1182, 1195], "point": [21, 34, 36, 38, 40, 60, 67, 91, 99, 108, 111, 114, 115, 116, 119, 124, 126, 144, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 188, 193, 194, 195, 196, 200, 205, 209, 210, 211, 212, 214, 232, 234, 235, 242, 245, 248, 251, 258, 261, 266, 269, 291, 300, 307, 324, 325, 327, 351, 356, 376, 377, 378, 381, 392, 393, 394, 399, 405, 407, 409, 411, 415, 437, 440, 443, 446, 447, 450, 451, 461, 463, 492, 497, 500, 507, 508, 516, 539, 541, 553, 573, 574, 575, 598, 600, 602, 604, 605, 606, 608, 609, 611, 614, 618, 629, 630, 638, 653, 654, 667, 672, 673, 692, 695, 698, 700, 702, 706, 712, 723, 745, 749, 754, 758, 770, 789, 791, 834, 838, 867, 875, 877, 881, 882, 898, 935, 936, 937, 944, 954, 958, 961, 964, 997, 1010, 1013, 1026, 1030, 1031, 1032, 1034, 1038, 1046, 1072, 1076, 1078, 1081, 1144, 1146, 1148, 1150, 1170, 1172, 1179, 1182, 1187, 1191], "unobvi": [21, 838], "best": [21, 30, 39, 48, 57, 131, 173, 174, 175, 184, 197, 254, 403, 435, 457, 464, 467, 468, 477, 556, 600, 605, 669, 734, 747, 767, 826, 828, 830, 834, 836, 875, 898, 920, 936, 943, 944, 980, 994, 998, 1026, 1040, 1046, 1083, 1088, 1091, 1148, 1158], "resourc": [21, 82, 99, 112, 113, 173, 175, 178, 190, 200, 235, 251, 292, 295, 300, 337, 338, 373, 381, 509, 573, 587, 598, 602, 603, 667, 692, 703, 704, 706, 735, 740, 751, 752, 754, 755, 760, 767, 768, 788, 790, 791, 822, 824, 832, 871, 875, 876, 943, 960, 961, 962, 980, 994, 997, 1033, 1086], "leaki": 21, "erron": [21, 464, 1099], "worst": [21, 173, 435, 944, 996, 1009, 1190, 1193], "extract": [21, 29, 55, 99, 162, 166, 233, 259, 262, 267, 270, 282, 285, 305, 306, 311, 312, 333, 334, 340, 345, 346, 349, 350, 419, 438, 542, 543, 573, 584, 595, 789, 791, 838, 851, 864, 1026, 1051, 1073, 1096, 1130, 1131, 1132, 1133, 1135, 1143], "common": [21, 24, 165, 173, 230, 246, 247, 259, 265, 270, 341, 438, 447, 478, 553, 631, 758, 775, 779, 789, 863, 935, 936, 944, 968, 1005, 1035, 1040, 1041, 1042, 1058, 1067, 1068, 1072, 1078, 1082, 1085, 1137, 1145, 1146, 1170, 1193], "hm": [21, 32, 62, 65, 213, 223, 242, 245, 248, 255, 362, 828, 854, 855, 962, 1055, 1141, 1172, 1177, 1179], "end": [21, 23, 32, 37, 42, 108, 167, 172, 175, 176, 178, 180, 183, 205, 206, 211, 212, 217, 221, 225, 245, 246, 248, 249, 251, 261, 265, 268, 271, 285, 286, 307, 313, 320, 325, 341, 347, 351, 361, 362, 399, 402, 406, 427, 443, 455, 459, 460, 461, 463, 466, 467, 470, 500, 522, 523, 531, 532, 535, 536, 537, 587, 590, 602, 626, 628, 630, 631, 632, 634, 635, 637, 638, 639, 641, 642, 644, 648, 651, 655, 656, 662, 679, 695, 723, 726, 730, 737, 743, 744, 745, 747, 752, 753, 766, 767, 830, 836, 838, 854, 881, 882, 883, 898, 926, 930, 931, 942, 944, 960, 961, 962, 964, 970, 986, 1005, 1038, 1058, 1062, 1064, 1071, 1074, 1078, 1082, 1086, 1158, 1160, 1162, 1165, 1200, 1203], "sketch": [21, 131, 144, 170, 176, 205, 212, 213, 225, 234, 235, 302, 324, 374, 378, 440, 441, 451, 463, 695, 795, 807, 1005], "clearest": 21, "ach": 21, "bad": [21, 43, 132, 169, 172, 175, 182, 197, 205, 230, 236, 252, 253, 255, 264, 265, 280, 301, 302, 323, 337, 416, 459, 463, 477, 619, 685, 735, 746, 753, 771, 790, 791, 806, 818, 843, 846, 955, 956, 981, 983, 987, 988, 1009, 1028, 1033, 1035, 1048, 1049, 1060, 1067, 1078, 1109, 1137, 1190], "earliest": 21, "noth": [21, 43, 62, 131, 163, 172, 173, 175, 178, 183, 188, 202, 213, 232, 245, 271, 324, 391, 430, 437, 461, 479, 486, 590, 669, 703, 710, 723, 737, 740, 806, 816, 834, 836, 870, 920, 935, 943, 944, 959, 961, 983, 1005, 1010, 1036, 1043, 1055, 1076, 1078, 1084, 1170, 1177, 1179], "jump": [21, 45, 106, 172, 427, 431, 590, 737, 740, 747, 877, 930, 1009, 1145], "outest": 21, "level": [21, 80, 173, 174, 184, 242, 248, 258, 261, 282, 315, 331, 381, 405, 431, 437, 477, 480, 482, 483, 489, 497, 505, 716, 717, 789, 820, 822, 834, 841, 850, 874, 935, 942, 951, 955, 1014, 1022, 1035, 1043, 1055, 1076, 1086, 1112, 1116, 1146, 1149, 1159, 1165, 1192], "cleanup_stage1": 21, "screenplai": [22, 59, 166, 175, 196, 200, 252, 264, 273, 291, 299, 301, 312, 320, 323, 324, 327, 328, 333, 334, 339, 340, 345, 346, 349, 350, 370, 478, 494, 502, 573, 576, 579, 582, 585, 588, 591, 594, 630, 631, 651, 795, 798, 803, 808, 812, 814, 850, 853, 856, 859, 1003, 1007, 1011, 1079, 1167, 1174, 1178, 1180, 1183], "dies": [23, 149, 181, 182, 187, 190, 191, 192, 200, 206, 216, 217, 221, 229, 236, 253, 255, 261, 262, 265, 370, 375, 388, 1185, 1187, 1188, 1189, 1194, 1200, 1201, 1203, 1207, 1208], "einreichungsunterlagen": 23, "diesem": [23, 182, 216, 1187, 1204], "formular": 23, "projekten": [23, 1201, 1202], "mehrer": [23, 149, 1194], "projektpartn": 23, "muss": [23, 196, 206, 216, 221, 262, 370, 375, 1185, 1187, 1194, 1201], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 149, 181], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 187, 217], "soll": [23, 182, 208, 237, 276, 1184], "punkt": [23, 149, 182, 192, 208, 218, 262], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 65, 149, 182, 191, 205, 208, 216, 221, 265, 276, 419, 427, 545, 717, 723, 820, 978, 979, 996, 1139, 1159], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 234], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 62, 70, 116, 121, 122, 126, 144, 172, 173, 176, 180, 188, 190, 194, 196, 210, 212, 214, 223, 232, 233, 235, 239, 242, 245, 246, 248, 253, 256, 261, 268, 271, 273, 286, 289, 291, 293, 298, 300, 303, 307, 329, 335, 341, 347, 351, 362, 377, 416, 477, 479, 485, 804, 832, 840, 865, 866, 874, 875, 877, 880, 882, 923, 942, 951, 959, 960, 965, 968, 970, 971, 974, 976, 979, 980, 1002, 1005, 1009, 1012, 1029, 1035, 1036, 1106, 1132, 1134, 1145, 1170, 1185, 1202, 1203], "wer": [23, 181], "unser": [23, 209, 217, 1185], "motiv": [23, 28, 99, 877, 896, 994, 1041, 1042], "300": [23, 192, 194, 206, 242, 245, 248, 253, 255, 261, 265, 268, 286, 307, 313, 329, 335, 341, 347, 351, 362, 393, 395, 397, 413, 437, 625, 626, 627, 628, 629, 631, 632, 633, 634, 648, 811], "zeichen": [23, 255], "lebe": 23, "einerseit": [23, 187], "kleineren": [23, 149], "gr\u00f6\u00dferen": [23, 1202], "andererseit": [23, 187], "haupts\u00e4chlich": [23, 217, 1200], "unternehmen": 23, "halt": [23, 112, 113, 216, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 871, 929, 944], "bringen": [23, 1185], "schulungsunterlagen": [23, 1184], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 82, 109, 121, 126, 131, 161, 173, 180, 189, 192, 194, 196, 197, 203, 205, 206, 209, 210, 212, 214, 225, 229, 234, 251, 253, 259, 273, 278, 280, 291, 295, 298, 299, 301, 302, 310, 315, 316, 324, 327, 331, 332, 337, 338, 356, 377, 388, 416, 427, 437, 438, 441, 455, 461, 463, 479, 484, 508, 523, 567, 573, 608, 622, 635, 667, 670, 694, 767, 773, 784, 790, 791, 838, 877, 937, 998, 1022, 1024, 1028, 1033, 1038, 1040, 1043, 1044, 1055, 1067, 1081, 1132, 1137, 1139, 1143, 1162, 1170, 1171, 1185, 1192, 1193], "darstellt": 23, "wen": 23, "nutzen": [23, 1203], "400": [23, 170, 175, 192, 206, 216, 245, 248, 290, 307, 325, 341, 351, 479, 648, 1094, 1097], "stellen": [23, 187], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 149, 1184], "bereiten": [23, 216], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 955, 1058], "gel\u00f6st": [23, 206], "500": [23, 216, 223, 242, 245, 248, 290, 335, 341, 351, 648, 935, 962, 1094, 1097], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1187, 1197, 1206], "aufeinand": [23, 925], "explizit": [23, 190, 200, 206, 216, 276, 303, 1187, 1188, 1204], "abh\u00e4ngigkeitsbeziehungen": [23, 1197], "fehlen": 23, "extrem": [23, 173, 232, 253, 261, 268, 271, 293, 370, 375, 438, 477, 630, 699, 747, 838, 865, 866, 1149, 1185, 1197], "verringert": 23, "zusammenarbeit": [23, 1184], "trainern": 23, "fehlend": [23, 192], "aggregierbarkeit": 23, "bzw": [23, 181, 190, 196, 200, 222, 388, 1194, 1201, 1203], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 206, 1005, 1155], "librari": [23, 62, 67, 73, 76, 80, 87, 99, 105, 106, 108, 110, 112, 113, 126, 144, 149, 173, 175, 184, 192, 194, 196, 201, 202, 203, 210, 212, 214, 233, 235, 242, 248, 258, 261, 265, 277, 278, 289, 291, 315, 316, 331, 332, 338, 371, 372, 373, 388, 389, 392, 393, 402, 410, 433, 450, 460, 467, 473, 483, 484, 488, 489, 491, 492, 501, 515, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 562, 581, 595, 596, 640, 646, 650, 658, 659, 660, 662, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 712, 717, 743, 768, 789, 790, 791, 816, 868, 871, 872, 934, 955, 956, 957, 962, 963, 965, 972, 973, 975, 980, 983, 989, 992, 995, 997, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1024, 1059, 1061, 1076, 1078, 1081, 1149, 1166, 1179, 1187, 1189, 1191, 1192, 1203, 1205], "anfangen": 23, "geben": [23, 1188, 1189], "trainingsunterlagen": 23, "ging": [23, 181, 388], "funktioniert": [23, 206, 255], "projektergebni": 23, "basiert": [23, 276, 1185, 1188, 1197, 1204], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 200, 1184, 1194], "eigentlich": [23, 192, 206, 1185, 1188], "kern": 23, "begleitet": [23, 208], "meinem": [23, 182, 191, 217, 926, 1200], "eigenen": [23, 1194, 1201], "quasi": [23, 149, 196, 200], "spin": [23, 767, 841, 875], "off": [23, 65, 127, 134, 172, 174, 175, 178, 183, 194, 205, 225, 268, 416, 419, 458, 466, 467, 482, 488, 489, 544, 545, 550, 590, 670, 723, 758, 832, 843, 869, 894, 922, 935, 942, 944, 970, 979, 988, 998, 1005, 1064, 1082, 1117, 1142, 1195], "anwendbar": [23, 1207], "klarer": 23, "bezug": [23, 262], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 181, 200, 206, 216, 217, 351, 1184, 1200], "gehen": 23, "folgenden": [23, 149, 200, 388, 926], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1186, 1194, 1201, 1204], "klaren": 23, "mehrwert": 23, "technologi": [23, 245, 996, 1012, 1094], "infrastruktur": [23, 1185, 1194, 1201], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 208], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 67, 80, 190, 200, 209, 235, 251, 493, 552, 942, 944, 1163, 1170, 1171, 1206, 1208], "jeglich": [23, 1194], "art": [23, 32, 45, 1024, 1193], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 217, 1200], "erm\u00f6glicht": [23, 208, 388], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 187, 1184], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 181, 192, 196, 206, 255, 365, 388, 1185, 1188, 1189, 1194, 1208], "commun": [23, 62, 74, 75, 76, 80, 83, 85, 89, 124, 158, 161, 173, 188, 197, 205, 220, 289, 324, 367, 376, 377, 453, 497, 768, 769, 790, 791, 797, 838, 850, 871, 934, 935, 942, 943, 944, 959, 964, 975, 980, 989, 996, 999, 1005, 1010, 1044, 1133, 1136, 1153, 1190, 1193, 1195, 1204, 1205], "trainerinnen": 23, "kann": [23, 37, 181, 182, 190, 196, 200, 206, 216, 229, 236, 276, 329, 370, 375, 388, 1184, 1185, 1187, 1189, 1194, 1201, 1202, 1203, 1206, 1208], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 190, 192, 206, 365, 926, 1187, 1204, 1206, 1207], "die_der": 23, "adressat_in": 23, "je": [23, 32, 182, 216], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 181, 200, 216, 268, 365, 388, 1184, 1185, 1186, 1194, 1196, 1197, 1203, 1204], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 196, 1194, 1201], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 192, 206, 208, 229, 268, 325, 388, 1185, 1187, 1189], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 217, 262, 1200], "zielgruppen": 23, "beziehung": [23, 200], "zueinand": 23, "stehen": [23, 206, 1206], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 149, 181, 192, 200, 206, 216, 221, 223, 242, 245, 253, 255, 258, 261, 268, 271, 286, 293, 303, 307, 313, 325, 329, 347, 351, 365], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 253, 370, 375, 1194, 1201], "jeweiligen": [23, 1184], "sein": [23, 182, 190, 191, 208, 216, 217, 229, 255, 293, 1185, 1187, 1200, 1201, 1203, 1206, 1207, 1208], "dann": [23, 182, 192, 200, 206, 217, 255, 261, 262, 268, 303, 388, 1185, 1197, 1200, 1208], "einzelnen": 23, "aussieht": [23, 1186], "erst": [23, 200, 216, 229, 255, 262, 268, 286, 325, 341, 365, 1185, 1187], "bestandteil": [23, 1206], "n": [23, 35, 38, 40, 50, 62, 113, 123, 154, 175, 184, 192, 193, 194, 200, 206, 216, 221, 223, 224, 232, 234, 237, 238, 239, 242, 245, 246, 248, 251, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 297, 303, 307, 325, 329, 335, 341, 347, 351, 361, 362, 363, 365, 370, 392, 393, 395, 399, 401, 403, 405, 407, 412, 415, 425, 427, 433, 434, 438, 443, 451, 455, 460, 479, 480, 487, 554, 587, 606, 612, 630, 676, 677, 680, 681, 683, 684, 687, 688, 689, 690, 691, 692, 700, 702, 717, 791, 816, 852, 871, 875, 885, 895, 898, 911, 927, 929, 930, 944, 956, 958, 959, 960, 961, 962, 968, 969, 971, 996, 1002, 1006, 1009, 1012, 1018, 1024, 1028, 1030, 1055, 1056, 1058, 1073, 1075, 1080, 1081, 1086, 1087, 1132, 1134, 1170, 1182], "l\u00f6sen": 23, "wollen": [23, 37, 221, 388, 1189, 1194, 1197, 1201, 1203], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 60, 124, 154, 165, 176, 179, 188, 292, 295, 431, 472, 473, 781, 811, 838, 840, 850, 942, 944, 1071, 1202, 1208], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 104, 109, 116, 121, 122, 126, 144, 175, 187, 188, 200, 202, 209, 210, 213, 233, 246, 251, 263, 282, 298, 300, 320, 354, 369, 370, 375, 487, 491, 496, 498, 502, 504, 509, 519, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 541, 581, 587, 596, 600, 602, 604, 605, 607, 608, 609, 611, 613, 623, 638, 639, 656, 666, 668, 669, 681, 692, 695, 698, 699, 701, 702, 705, 706, 717, 719, 720, 721, 723, 725, 726, 729, 730, 731, 732, 738, 739, 740, 753, 754, 755, 758, 759, 767, 769, 775, 777, 779, 781, 791, 832, 867, 868, 873, 887, 893, 934, 951, 1056, 1165, 1182, 1204], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 238], "land": [23, 485, 776], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 61, 63, 126, 151, 154, 175, 178, 183, 193, 203, 206, 209, 211, 217, 234, 245, 249, 253, 255, 258, 261, 283, 290, 307, 327, 415, 446, 471, 755, 807, 813, 848, 875, 883, 894, 895, 897, 898, 922, 935, 942, 944, 963, 1000, 1009, 1012, 1022, 1030, 1067, 1069, 1094, 1145, 1149, 1153, 1165, 1170, 1177, 1193, 1200], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 173, 794, 822], "grupp": [23, 221, 379, 926], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 237, 368, 369, 1184], "fl\u00fcchtling": 23, "posit": [23, 29, 62, 124, 180, 206, 209, 210, 212, 214, 216, 221, 229, 233, 242, 249, 253, 258, 259, 261, 268, 271, 282, 285, 292, 295, 297, 299, 301, 302, 305, 307, 311, 313, 317, 320, 323, 324, 327, 328, 329, 335, 341, 356, 401, 438, 451, 590, 631, 638, 647, 648, 771, 791, 898, 935, 943, 959, 960, 964, 1005, 1033, 1034, 1037, 1078, 1079, 1081, 1082, 1083, 1135, 1150, 1158, 1172, 1177], "zielgruppentyp": 23, "350": [23, 245, 248, 293, 307, 335, 341, 347, 351, 1094], "bereitet": 23, "vor": [23, 181, 182, 196, 206, 218, 253, 351, 1197, 1206], "lt": [23, 32, 35, 36, 175, 180, 192, 195, 200, 201, 206, 211, 216, 221, 223, 229, 232, 237, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 364, 365, 366, 543, 560, 562, 595, 640, 646, 650, 659, 662, 663, 692, 791], "zielvorgaben": 23, "basierend": [23, 192, 1184, 1189], "existierendem": 23, "f\u00fchrt": [23, 182, 1204], "jederzeit": [23, 187, 196, 388], "\u00fcberblick": [23, 196, 200, 262, 276, 388, 389, 1184, 1192, 1194, 1200, 1201, 1204, 1206], "behaltend": 23, "behandelten": 23, "fragen": [23, 208, 224, 370, 375, 388, 1184, 1194, 1201], "antworten": [23, 208], "info": [23, 183, 290, 291, 341, 467, 471, 472, 473, 479, 480, 482, 605, 754, 813, 943, 983, 1013, 1014, 1170], "bed\u00fcrfni": [23, 181], "schulungsagenden": 23, "erstellen": [23, 388, 1189, 1194], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 155, 181, 190, 191, 192, 206, 216, 217, 236, 261, 265, 1194, 1200, 1201, 1208], "erwartet": [23, 182, 206], "w\u00e4hrend": [23, 149, 1184], "einzugehen": [23, 208, 1207], "geplanten": [23, 1184], "verlassen": [23, 860], "birgt": 23, "chao": [23, 896, 1067], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 181], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 184, 277, 278, 280, 337, 338, 693, 697, 723, 735, 762, 788, 790, 791, 813, 876, 943, 981, 990, 996, 1044], "inklus": [23, 193, 206, 216, 229, 341, 1184, 1189, 1194], "betroffen": 23, "eu": [23, 32], "20000": [23, 172, 248], "erkennung": 23, "abstand": 23, "erfordert": [23, 1194], "vgl": [23, 206, 1204, 1207], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 196, 206, 216, 860, 1184, 1185, 1194, 1197, 1203, 1208], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 337], "besten": [23, 196, 262, 1187], "einsatz": [23, 1185], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": [23, 149], "erheblichen": [23, 1187], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 62, 188, 205, 356, 923, 1060, 1064, 1144, 1163], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1185, 1203], "neue": [23, 206, 216, 248, 276, 325, 341, 365, 388, 1204], "verliert": [23, 1208], "aufbaubeziehungen": 23, "verlangt": [23, 1184], "grundlag": 23, "folienmateri": 23, "meist": [23, 1203], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 149, 192, 1184], "unm\u00f6glich": 23, "macht": [23, 190, 192, 196, 200, 206, 212, 216, 258, 262, 365, 1187, 1194, 1201, 1208], "artefakttypen": 23, "livehack": [23, 24, 59, 66, 126, 166, 192, 198, 200, 209, 210, 217, 236, 249, 251, 252, 264, 273, 278, 280, 281, 289, 292, 299, 301, 306, 312, 317, 320, 323, 324, 327, 328, 333, 334, 339, 340, 345, 346, 349, 350, 370, 388, 478, 494, 501, 573, 789, 791, 803, 840, 1079, 1167, 1174, 1200], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 132, 149, 181, 206, 217, 223, 1200], "zielt": 23, "darauf": [23, 181, 192, 1184, 1187], "transpar": [23, 29, 37, 822, 824, 874, 1150], "wiederzuverwenden": 23, "sodass": [23, 37, 200, 1203, 1208], "aufgebrochen": 23, "schwer": [23, 196, 206, 388, 1194, 1201, 1206], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 181, 182, 192, 196, 208, 221, 236, 276, 388, 1185, 1187, 1188, 1189, 1201], "dorthin": 23, "m\u00fcssen": [23, 149, 206, 370, 375, 1194, 1201], "unterst\u00fctzt": [23, 1208], "kursf\u00fchrung": [23, 388], "fragt": [23, 182], "unklarheiten": 23, "weist": [23, 181], "etwaig": 23, "verwandt": [23, 1187], "hin": [23, 388], "plausibl": [23, 175], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 217], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 206, 208, 1188, 1189, 1203, 1208], "keinen": [23, 181, 325, 1187], "einfluss": 23, "wahl": [23, 1208], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 149, 190, 1185, 1194], "vorau": 23, "beziehungen": 23, "passt": [23, 216, 217, 1200], "ganz": [23, 181, 182, 191, 192, 196, 206, 208, 222, 223, 237, 254, 255, 351, 388, 1188, 1189, 1203], "gut": [23, 149, 181, 182, 206, 217, 388, 706, 1184, 1200], "y": [23, 113, 151, 154, 184, 193, 194, 196, 223, 232, 238, 239, 245, 246, 248, 249, 261, 271, 274, 283, 286, 293, 303, 307, 313, 329, 335, 347, 351, 416, 422, 440, 443, 446, 447, 451, 463, 467, 479, 541, 551, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 611, 613, 615, 616, 623, 630, 638, 677, 698, 699, 700, 702, 717, 719, 720, 721, 738, 749, 758, 806, 807, 838, 839, 871, 885, 898, 900, 911, 917, 942, 943, 944, 1018, 1026, 1032, 1091, 1094, 1142], "algorithmen": [23, 276, 1189], "automatisch": [23, 1204, 1208], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1189], "text": [23, 27, 39, 40, 59, 169, 183, 194, 205, 208, 213, 214, 221, 233, 234, 239, 246, 253, 255, 273, 276, 279, 286, 288, 307, 309, 351, 353, 412, 486, 791, 868, 930, 934, 961, 1012, 1060, 1067, 1073, 1082, 1092, 1115, 1149, 1156, 1161, 1163, 1197], "restrukturierung": 23, "o": [23, 29, 32, 38, 62, 66, 80, 87, 92, 99, 100, 102, 109, 112, 113, 126, 139, 143, 148, 151, 166, 173, 175, 176, 183, 184, 192, 196, 200, 210, 212, 213, 214, 216, 221, 223, 224, 230, 233, 234, 238, 240, 243, 244, 245, 246, 249, 250, 251, 252, 257, 258, 262, 263, 264, 265, 267, 269, 272, 274, 276, 279, 283, 285, 288, 289, 290, 292, 293, 295, 298, 299, 302, 304, 305, 306, 308, 309, 311, 313, 323, 325, 327, 328, 333, 334, 335, 339, 340, 342, 345, 346, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361, 370, 375, 377, 388, 390, 392, 408, 423, 432, 438, 439, 443, 445, 449, 452, 455, 456, 465, 467, 469, 471, 472, 474, 475, 479, 480, 486, 491, 505, 532, 543, 554, 595, 613, 697, 735, 761, 767, 768, 769, 788, 789, 790, 791, 806, 807, 815, 816, 838, 845, 864, 865, 866, 867, 868, 869, 871, 872, 874, 875, 883, 895, 898, 902, 903, 905, 906, 909, 910, 912, 918, 926, 927, 931, 934, 935, 942, 943, 955, 965, 968, 969, 970, 971, 972, 975, 980, 981, 989, 992, 995, 996, 997, 1006, 1012, 1013, 1014, 1018, 1020, 1024, 1028, 1029, 1030, 1033, 1035, 1037, 1038, 1039, 1043, 1059, 1062, 1065, 1067, 1073, 1081, 1088, 1089, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1150, 1151, 1165, 1170, 1177, 1187, 1194, 1207], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1184], "korrekt": [23, 1187], "vorbereitet": [23, 388], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 187, 1207], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1187, 1204], "aktuel": 23, "inhalt": [23, 206, 208, 238, 371, 860, 1184, 1208], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 194, 196, 1139], "kein": [23, 149, 191, 192, 196, 206, 216, 223, 238, 274, 293, 351, 365, 388, 1202], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 230], "erkl\u00e4ren": [23, 1187], "gew\u00fcnscht": [23, 206], "erreicht": [23, 181, 182, 1201], "hatt": [23, 181, 182, 196, 206, 208], "button": [23, 65, 67, 126, 172, 180, 259, 935], "gew\u00e4hlt": [23, 181, 182], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1203], "bearbeiten": 23, "daher": [23, 1208], "konvertiert": 23, "unten": [23, 132, 182, 196, 206, 1185], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 177], "angab": 23, "quellen": 23, "literatur": [23, 234, 610], "lightweight": [23, 163, 188, 205, 209, 225, 259, 261, 273, 698, 756, 759, 1137, 1149, 1190], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 61, 63, 65, 66, 67, 70, 108, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 148, 151, 154, 163, 169, 170, 173, 174, 176, 178, 179, 180, 185, 192, 194, 196, 202, 205, 209, 212, 219, 224, 233, 252, 256, 259, 262, 289, 292, 299, 306, 338, 374, 375, 381, 383, 388, 389, 459, 466, 470, 478, 480, 481, 482, 485, 486, 488, 490, 493, 494, 495, 501, 541, 542, 551, 554, 614, 616, 617, 761, 791, 838, 877, 933, 935, 937, 942, 943, 954, 972, 1012, 1013, 1014, 1027, 1028, 1036, 1039, 1090, 1096, 1123, 1125, 1135, 1136, 1138, 1139, 1143, 1151, 1153, 1167, 1169, 1173, 1174, 1179], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 62, 66, 93, 139, 143, 173, 177, 179, 194, 196, 210, 212, 213, 214, 215, 222, 224, 225, 233, 234, 247, 263, 279, 286, 288, 294, 309, 310, 324, 330, 336, 353, 354, 358, 370, 373, 375, 377, 392, 596, 789, 791, 815, 834, 835, 850, 868, 871, 879, 934, 943, 944, 997, 1005, 1026, 1033, 1086, 1186, 1194, 1196, 1201, 1203, 1207], "generatoren": [23, 196, 263, 388], "staticgen": 23, "learn": [23, 29, 70, 72, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 152, 173, 175, 193, 194, 196, 205, 209, 213, 234, 243, 323, 327, 352, 356, 371, 373, 477, 741, 791, 880, 935, 943, 997, 1059, 1060, 1135, 1139, 1143, 1151, 1172], "moodl": [23, 108, 111, 112, 113, 126, 148, 149, 180, 354, 374, 376, 377, 678, 692, 791, 868, 872, 887, 893, 912, 918, 934, 1019, 1022], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 196], "hinblick": [23, 1196], "ihnen": [23, 182, 925, 1184, 1194, 1201], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1187], "schw\u00e4chen": [23, 1189], "konkurrierenden": 23, "relevant": [23, 196, 388, 1207], "anbiet": 23, "ziel": [23, 1185, 1201], "allumfassend": 23, "eh": [23, 32, 206, 216, 221, 229, 255, 261, 265, 268, 313, 335], "vielmehr": 23, "bietet": [23, 187, 190, 1203], "beim": [23, 181, 182, 192, 196, 206, 1187], "verfassen": 23, "kernthema": 23, "zwischen": [23, 190, 206, 216, 223, 229, 388, 1187, 1188, 1189, 1201, 1208], "benutz": [23, 1204], "vorgaben": 23, "existiert": [23, 206, 218], "wald": 23, "dass": [23, 181, 182, 190, 192, 196, 200, 206, 217, 221, 223, 237, 370, 375, 388, 1184, 1187, 1188, 1189, 1194, 1200, 1201, 1204, 1208], "beisteuert": 23, "eben": [23, 187, 190, 216], "\u00fcbergreifend": 23, "definiert": [23, 192, 206, 1184, 1187], "ansatz": 23, "mir": [23, 181, 182, 196, 206, 217, 221, 253, 370, 375, 388, 1187, 1200], "verfolgt": [23, 1201], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 169, 236, 252, 264, 388], "licht": 23, "lesen": [23, 190, 191, 192, 206, 218, 370, 375], "einig": [23, 182, 193, 208, 388, 1187, 1194], "plugin": [23, 175, 505, 742, 1026], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 65, 99, 103, 108, 111, 112, 113, 126, 148, 151, 173, 175, 188, 209, 225, 235, 251, 267, 269, 277, 278, 280, 283, 289, 295, 298, 337, 351, 370, 455, 461, 470, 473, 505, 543, 551, 640, 659, 663, 692, 695, 735, 743, 762, 790, 791, 816, 839, 843, 868, 871, 872, 934, 936, 942, 944, 951, 955, 956, 959, 963, 970, 973, 975, 992, 1000, 1010, 1015, 1022, 1023, 1027, 1065, 1153, 1157, 1172, 1190], "zentral": [23, 169], "ergebni": [23, 258], "niemand": 23, "doc": [23, 37, 39, 66, 127, 139, 143, 154, 177, 179, 192, 193, 195, 225, 233, 240, 242, 248, 257, 258, 261, 265, 268, 283, 326, 355, 367, 370, 375, 378, 379, 390, 590, 794, 809, 815, 818, 898, 920, 978, 1081, 1148], "show": [23, 24, 27, 29, 43, 58, 62, 65, 67, 121, 126, 135, 139, 144, 172, 173, 175, 176, 180, 201, 209, 212, 213, 225, 234, 242, 248, 251, 258, 259, 261, 289, 301, 302, 315, 323, 331, 337, 338, 351, 355, 356, 374, 376, 377, 378, 381, 440, 480, 482, 491, 522, 538, 544, 590, 679, 776, 801, 820, 822, 854, 865, 866, 898, 920, 923, 925, 927, 935, 937, 942, 943, 944, 963, 994, 996, 1000, 1005, 1009, 1022, 1024, 1032, 1071, 1088, 1091, 1142, 1143, 1165, 1172, 1179, 1192], "revealj": 23, "option": [23, 31, 80, 167, 173, 174, 175, 179, 183, 188, 192, 197, 213, 225, 249, 261, 265, 273, 276, 277, 278, 286, 291, 295, 307, 315, 316, 324, 327, 331, 332, 337, 341, 370, 390, 399, 400, 416, 427, 428, 467, 480, 483, 484, 492, 493, 499, 526, 554, 776, 791, 807, 858, 862, 865, 866, 874, 926, 944, 945, 947, 955, 968, 972, 1006, 1014, 1070, 1088, 1092, 1165, 1172, 1179, 1187, 1192, 1205], "webslid": 23, "tv": [23, 32, 180], "sicht": [23, 191, 262, 1187], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1187], "600": [23, 242, 248, 648], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 191, 206, 303, 388, 1185, 1189, 1202], "versagen": 23, "implementierung": 23, "solcher": [23, 190, 206], "featur": [23, 29, 42, 46, 55, 56, 80, 82, 124, 126, 144, 178, 180, 190, 201, 206, 209, 210, 212, 214, 219, 224, 233, 242, 248, 251, 258, 259, 261, 262, 264, 265, 304, 337, 372, 388, 389, 465, 469, 474, 475, 477, 478, 480, 669, 694, 697, 704, 711, 722, 736, 746, 747, 751, 755, 760, 768, 787, 788, 790, 791, 830, 838, 935, 943, 944, 964, 996, 1006, 1013, 1014, 1030, 1044, 1045, 1046, 1047, 1051, 1054, 1061, 1073, 1074, 1090, 1093, 1094, 1095, 1096, 1109, 1120, 1123, 1124, 1125, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1143, 1147, 1151, 1153, 1155, 1164, 1167, 1169, 1170, 1174, 1185, 1187, 1188, 1190, 1194, 1201], "indem": [23, 216, 371, 1194], "foku": [23, 388], "schulbetrieb": 23, "legen": [23, 925], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1197], "fett": [23, 206, 223], "datenbanken": [23, 229, 388], "webserv": [23, 943], "hintergrund": [23, 216], "redaktionel": 23, "arbeit": [23, 196, 1185], "offlin": 23, "laptop": [23, 174, 176, 183, 954], "zug": 23, "erledigen": [23, 1185], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1184], "sinn": [23, 200, 1187], "prinzip": [23, 1204, 1206, 1208], "kostenlo": 23, "genutzt": [23, 190], "weiterentwickelt": [23, 1189, 1194], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 149, 191, 206, 217, 238, 253, 265, 325, 365, 1202], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 206], "sourcecod": [23, 190], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 61, 63, 172, 173, 175, 176, 205, 208, 212, 217, 230, 245, 256, 259, 261, 268, 271, 286, 290, 293, 303, 307, 329, 335, 341, 347, 393, 405, 450, 494, 495, 502, 507, 521, 522, 553, 605, 610, 703, 733, 753, 809, 813, 838, 875, 913, 929, 994, 997, 998, 1009, 1010, 1026, 1094, 1137, 1142, 1155, 1156, 1158, 1159, 1170, 1205], "reih": [23, 187, 200, 208], "direct": [23, 37, 39, 62, 126, 143, 154, 170, 173, 234, 292, 295, 356, 427, 438, 473, 486, 613, 759, 797, 874, 931, 958, 960, 976, 978, 979, 1014, 1028, 1055, 1142, 1150, 1159, 1192, 1195], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 605, 754, 794], "pypi": [23, 65, 66, 152, 169, 205, 209, 224, 240, 256, 282, 1164, 1165, 1170], "installierbar": 23, "paket": [23, 190, 1185], "generiert": [23, 206], "readthedoc": [23, 32, 39, 66], "gehostet": 23, "verf\u00fcgbar": [23, 998, 1197], "obigen": 23, "bisherigen": [23, 1189], "aktuellen": [23, 216], "bereich": [23, 196, 388], "umfeld": 23, "projektantrag": 23, "bisher": [23, 169, 1184], "softwarebasi": 23, "grundlegend": [23, 218, 1189, 1194, 1201, 1203, 1206], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 60, 172, 196, 205, 240, 249, 259, 324, 369, 370, 374, 378, 384, 477, 593, 703, 761, 838, 1170, 1177], "kurz": [23, 181, 182, 206, 208, 217, 222, 237, 262, 1186, 1200, 1203], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1197], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 182, 1206], "projektinhalt": 23, "verdeutlichen": [23, 1185], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 191], "walkner": 23, "1983": [23, 596], "hallein": 23, "master": [23, 60, 151, 176, 179, 188, 371, 372, 834, 838, 927, 939], "scienc": [23, 28, 80, 180, 194, 205, 209, 214, 243, 312, 326, 348, 372, 596, 649, 1061, 1141, 1142, 1143, 1144], "salzburg": 23, "consult": [23, 61, 63, 67, 170, 173, 186, 224, 242, 248, 258, 261, 265, 376, 502], "isamberth": 23, "adnet": 23, "2000": [23, 229, 232, 248, 253, 265, 286, 479, 505, 998], "2002": [23, 248, 605, 754], "divers": [23, 197, 1186], "2005": [23, 596], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 208, 209, 230, 233, 248, 256, 282, 289, 297, 306, 328, 1137], "programmiererfahrung": [23, 1194, 1201, 1208], "bash": [23, 101, 126, 148, 170, 180, 189, 213, 223, 225, 245, 253, 261, 268, 271, 279, 286, 288, 289, 293, 300, 303, 307, 309, 329, 335, 341, 347, 353, 370, 371, 372, 375, 377, 389, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 745, 748, 768, 789, 790, 791, 861, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 879, 880, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 898, 899, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 923, 928, 929, 934, 957, 960, 963, 965, 967, 970, 973, 975, 976, 989, 991, 992, 995, 997, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1033, 1115, 1185, 1196], "davon": [23, 181, 192, 1187, 1206], "teamleit": 23, "m\u00f6chten": [23, 1208], "ggf": 23, "kennenlernen": 23, "knackig": [23, 169], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 926], "millionen": 23, "ihren": [23, 206, 218], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 200, 388, 1184, 1197], "un": [23, 200, 208, 388, 816, 922, 1055, 1185], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 182, 216, 217, 388, 1187, 1200], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 192, 196], "mindesten": [23, 192], "vier": [23, 192, 206, 216, 221, 223, 238, 242, 245, 253, 255, 258, 265, 271, 283, 286, 290, 293, 303, 313, 325, 329, 341, 351, 365, 1194, 1207], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 748, 752], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 182], "wenig": [23, 191, 206, 276, 388, 1185], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 206], "erfolg": [23, 1187], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 187, 200, 926], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 206, 217, 1200, 1208], "bekundet": 23, "medien": [23, 1207], "berichtet": 23, "migrat": [23, 200], "zehn": [23, 216], "migrieren": 23, "verwenden": [23, 187, 200, 206, 212, 216, 221, 1207], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 181, 196, 206, 388, 1206], "eingesetzt": [23, 1185, 1202], "basisarbeit": 23, "workflow": [23, 124, 200, 234, 249, 811, 1006, 1202], "datenstrukturen": [23, 218, 236, 257, 1189], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1086], "know": [23, 42, 61, 63, 71, 82, 86, 144, 170, 172, 173, 174, 175, 178, 179, 180, 188, 193, 194, 197, 201, 202, 205, 209, 213, 224, 225, 232, 235, 292, 295, 299, 324, 354, 372, 403, 405, 411, 416, 433, 443, 455, 457, 459, 461, 465, 466, 467, 469, 473, 474, 475, 477, 486, 492, 496, 497, 509, 546, 554, 581, 597, 599, 605, 607, 611, 630, 667, 670, 673, 694, 695, 697, 706, 708, 710, 733, 735, 744, 753, 755, 759, 769, 788, 790, 791, 793, 809, 816, 838, 877, 898, 935, 938, 942, 944, 955, 960, 962, 971, 981, 1009, 1030, 1038, 1043, 1044, 1055, 1060, 1063, 1066, 1067, 1086, 1094, 1132, 1136, 1170, 1195], "welchem": [23, 192], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 149, 217, 218, 1200], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1186, 1189, 1201, 1203], "200": [23, 169, 170, 192, 194, 206, 223, 225, 232, 239, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 290, 297, 307, 313, 325, 329, 335, 341, 347, 351, 362, 367, 625, 626, 627, 628, 629, 631, 632, 633, 634, 648, 702, 816, 996, 1111], "stunden": 23, "webprogrammierung": 23, "css": [23, 170, 171], "150": [23, 192, 206, 216, 223, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 695], "kreativarbeit": 23, "erreichen": [23, 1201, 1204], "pers\u00f6nlich": [23, 388], "freund": 23, "ebenfal": [23, 149, 1202], "t\u00e4tig": 23, "mich": [23, 181, 196, 216, 224, 388, 1184], "ermutigt": 23, "\u00fcberhaupt": [23, 1194, 1201, 1208], "starten": [23, 1206], "repr\u00e4sent": 23, "post": [23, 95, 157, 169, 173, 175, 177, 178, 179, 180, 183, 234, 249, 298, 403, 417, 501, 597, 935, 1004, 1006, 1009, 1136], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 217, 1187], "projektbeginn": 23, "abschluss": [23, 182, 370], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 180, 875, 942, 951, 958, 997], "sachbearbeiter_in": 23, "social": [23, 45, 497, 504, 508, 521, 522, 523, 526, 532, 535, 536, 537], "media": [23, 80, 190, 838, 943], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 248], "teilzeitbesch\u00e4ftigten": 23, "aliquot": [23, 149], "reduziert": [23, 196, 351], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 248], "frontendprogrammierung": 23, "4500": [23, 248], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 362], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 182, 290], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 370], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 248], "beantragt": 23, "differenz": [23, 268], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 209, 775, 926, 1029], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 223, 229, 237, 293], "bleiben": [23, 182, 206, 216, 1194, 1201, 1204], "reich": [23, 206], "nein": [23, 217, 223, 229, 274, 283, 341, 1200], "neben": [23, 196], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 62, 65, 112, 113, 116, 120, 121, 132, 143, 157, 169, 172, 173, 174, 175, 176, 178, 183, 190, 193, 195, 203, 209, 211, 232, 240, 242, 248, 253, 256, 258, 263, 265, 270, 271, 274, 289, 291, 293, 306, 307, 315, 324, 329, 331, 370, 375, 377, 388, 392, 399, 403, 404, 407, 418, 434, 436, 440, 446, 447, 450, 460, 463, 464, 472, 480, 483, 495, 502, 506, 521, 522, 523, 539, 543, 548, 551, 552, 554, 555, 567, 581, 595, 599, 602, 605, 607, 611, 620, 666, 667, 670, 672, 673, 677, 679, 684, 691, 699, 700, 708, 712, 723, 726, 729, 730, 731, 732, 742, 745, 753, 758, 759, 767, 768, 769, 771, 775, 790, 791, 792, 806, 816, 818, 820, 824, 826, 828, 830, 832, 834, 836, 838, 843, 846, 852, 857, 858, 864, 868, 871, 872, 873, 874, 876, 878, 881, 882, 895, 898, 934, 938, 946, 956, 957, 960, 961, 962, 963, 965, 967, 973, 974, 975, 980, 981, 988, 989, 991, 992, 995, 996, 997, 1006, 1009, 1010, 1012, 1014, 1031, 1033, 1034, 1035, 1040, 1046, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1077, 1078, 1082, 1084, 1087, 1088, 1094, 1112, 1116, 1137, 1142, 1150, 1153, 1158, 1159, 1171, 1172, 1173, 1192, 1196, 1204, 1205, 1207], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 181, 182, 191, 196, 212, 341, 388], "zuge": [23, 149], "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 177, 178, 183, 554, 877, 898, 944, 1141], "group": [23, 29, 103, 104, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 144, 166, 188, 193, 205, 210, 212, 221, 224, 225, 232, 238, 245, 253, 262, 265, 271, 274, 286, 300, 307, 310, 313, 335, 341, 347, 353, 354, 370, 383, 384, 388, 399, 424, 467, 468, 543, 573, 791, 838, 865, 866, 868, 871, 872, 873, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 920, 924, 925, 926, 927, 931, 934, 937, 942, 954, 955, 963, 964, 965, 970, 973, 975, 989, 992, 997, 1010, 1033, 1089, 1115, 1170], "wirtschaftkamm": 23, "nehmen": [23, 182, 1186], "larg": [24, 30, 38, 80, 175, 178, 180, 205, 224, 225, 234, 245, 251, 292, 295, 446, 455, 457, 461, 467, 468, 507, 732, 741, 789, 832, 838, 1012, 1036, 1038, 1040, 1060, 1067, 1094, 1115, 1151, 1155, 1159, 1177], "amount": [24, 108, 112, 113, 173, 174, 175, 178, 184, 205, 212, 240, 290, 291, 467, 479, 610, 732, 733, 869, 871, 955, 972, 1060], "pdf": [24, 37, 198, 200, 205, 209, 212, 213, 215, 265, 279, 288, 289, 309, 310, 332, 353, 354, 369, 370, 373, 375, 378, 389, 898, 920, 921, 944, 976, 1014, 1109, 1186, 1187, 1188, 1196, 1197, 1203, 1204, 1206, 1207, 1208], "Not": [24, 43, 47, 53, 82, 111, 114, 115, 117, 118, 125, 148, 175, 176, 177, 180, 183, 205, 208, 209, 249, 251, 252, 253, 266, 275, 302, 306, 407, 416, 438, 450, 453, 455, 461, 477, 480, 543, 560, 562, 595, 602, 604, 606, 611, 612, 680, 692, 712, 723, 727, 729, 730, 731, 749, 756, 759, 765, 770, 789, 791, 801, 809, 816, 820, 822, 936, 974, 994, 996, 998, 1000, 1010, 1033, 1035, 1040, 1041, 1042, 1043, 1053, 1055, 1067, 1076, 1081, 1137, 1141, 1146, 1160, 1162, 1178, 1190], "satisfi": [24, 32, 209, 496, 612, 700, 712, 745], "colleagu": [24, 28, 184, 225, 457, 669, 1038, 1055, 1067], "aren": [24, 170, 255, 265, 708, 899, 988, 998], "either": [24, 39, 42, 43, 173, 175, 183, 184, 289, 292, 295, 455, 522, 695, 703, 706, 767, 865, 866, 895, 898, 930, 944, 1035, 1103, 1153, 1190], "nobodi": [24, 43, 173, 175, 194, 205, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 458, 460, 597, 638, 710, 793, 865, 866, 875, 890, 892, 898, 899, 951, 959, 1088, 1143, 1173, 1179], "doe": [24, 38, 45, 48, 49, 60, 71, 80, 85, 86, 112, 113, 116, 120, 124, 126, 144, 154, 169, 172, 173, 174, 177, 178, 179, 180, 183, 184, 188, 193, 201, 205, 209, 211, 223, 232, 235, 248, 265, 268, 274, 292, 293, 295, 298, 300, 302, 324, 337, 341, 354, 370, 381, 397, 403, 411, 415, 416, 417, 418, 425, 434, 435, 444, 447, 450, 451, 453, 455, 457, 459, 461, 466, 467, 468, 471, 472, 473, 477, 479, 480, 481, 485, 491, 492, 495, 497, 500, 505, 509, 517, 519, 521, 547, 548, 549, 550, 551, 554, 555, 578, 587, 590, 597, 598, 599, 602, 605, 607, 608, 610, 613, 636, 643, 651, 657, 666, 669, 670, 676, 677, 684, 695, 700, 701, 703, 710, 712, 732, 734, 742, 743, 745, 749, 753, 754, 755, 758, 759, 761, 765, 766, 771, 787, 789, 801, 802, 806, 807, 809, 816, 830, 838, 843, 854, 864, 873, 877, 878, 880, 883, 931, 935, 942, 943, 944, 955, 960, 961, 963, 967, 970, 981, 985, 988, 994, 996, 997, 1006, 1010, 1012, 1013, 1014, 1015, 1020, 1024, 1028, 1029, 1031, 1033, 1034, 1035, 1036, 1038, 1040, 1049, 1053, 1055, 1056, 1060, 1063, 1066, 1084, 1085, 1086, 1106, 1114, 1116, 1143, 1145, 1146, 1148, 1155, 1156, 1159, 1160, 1161, 1163, 1165, 1170, 1190, 1192], "even": [24, 29, 61, 63, 67, 80, 124, 161, 173, 174, 175, 180, 184, 194, 195, 205, 209, 212, 213, 217, 219, 224, 230, 232, 233, 235, 236, 245, 249, 252, 253, 256, 259, 262, 264, 265, 267, 270, 271, 282, 292, 295, 306, 307, 325, 328, 335, 341, 347, 434, 443, 457, 463, 467, 495, 500, 596, 604, 607, 653, 700, 742, 745, 752, 761, 789, 791, 830, 838, 875, 894, 935, 943, 960, 961, 994, 996, 997, 1013, 1032, 1044, 1055, 1081, 1084, 1096, 1099, 1100, 1135, 1137, 1158, 1165, 1172, 1192, 1200], "tech": [24, 45, 172], "although": [24, 29, 80, 139, 143, 173, 175, 179, 184, 195, 205, 211, 235, 255, 265, 388, 551, 695, 696, 737, 759, 877, 880, 951, 1031, 1036, 1094, 1143], "gain": [24, 180, 292, 295, 467, 838, 877], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 172, 175, 221, 242, 248, 249, 258, 261, 268, 293, 307, 325, 327, 329, 444, 482, 497, 540, 605, 670, 723, 732, 745, 811, 822, 935, 943, 944, 983, 1000, 1009, 1055, 1065, 1078, 1109, 1119, 1142, 1176, 1177, 1180], "context": [24, 29, 61, 63, 112, 113, 173, 194, 197, 209, 212, 214, 216, 223, 254, 258, 259, 261, 265, 268, 274, 282, 286, 291, 301, 302, 303, 306, 313, 317, 320, 323, 324, 327, 328, 335, 388, 454, 516, 517, 531, 599, 605, 733, 754, 789, 791, 800, 805, 808, 810, 815, 818, 819, 820, 821, 824, 825, 829, 830, 831, 833, 834, 835, 842, 843, 844, 846, 847, 848, 849, 852, 853, 856, 858, 859, 871, 875, 934, 935, 958, 998, 1009, 1010, 1037, 1046, 1135, 1146], "defin": [24, 53, 127, 131, 134, 135, 139, 142, 144, 166, 176, 193, 195, 210, 212, 214, 216, 221, 229, 232, 233, 235, 242, 246, 248, 251, 255, 258, 261, 265, 273, 275, 286, 297, 307, 324, 325, 337, 341, 347, 365, 376, 397, 402, 407, 412, 413, 416, 433, 434, 435, 436, 437, 438, 451, 459, 460, 461, 463, 467, 480, 481, 486, 487, 488, 505, 509, 517, 538, 539, 551, 573, 581, 598, 599, 600, 602, 604, 605, 607, 608, 611, 612, 613, 620, 623, 644, 648, 669, 676, 695, 696, 705, 706, 707, 708, 709, 712, 732, 737, 741, 750, 753, 758, 759, 782, 797, 799, 811, 875, 895, 935, 936, 944, 955, 962, 980, 1002, 1012, 1014, 1028, 1030, 1034, 1036, 1038, 1050, 1055, 1067, 1077, 1133, 1146, 1150, 1182, 1190, 1192, 1195], "solv": [24, 45, 82, 91, 125, 126, 170, 173, 174, 203, 205, 209, 210, 212, 214, 225, 230, 243, 251, 256, 259, 270, 273, 295, 299, 306, 310, 312, 315, 327, 331, 356, 437, 479, 488, 694, 768, 773, 776, 790, 791, 838, 877, 934, 975, 989, 1022, 1024, 1026, 1055, 1132, 1137, 1143, 1192, 1193], "provid": [24, 27, 37, 58, 70, 154, 173, 175, 176, 177, 179, 180, 183, 184, 188, 201, 242, 248, 249, 258, 261, 265, 299, 315, 331, 453, 482, 487, 488, 497, 508, 516, 669, 732, 759, 838, 874, 877, 886, 917, 943, 944, 951, 965, 997, 1006, 1038, 1047, 1065, 1078, 1142, 1164, 1172, 1192], "depth": [24, 205, 209, 230, 242, 248, 258, 259, 261, 457, 757, 1040, 1137, 1141, 1142], "repres": [24, 173, 175, 197, 242, 248, 258, 261, 265, 286, 297, 356, 466, 500, 517, 519, 606, 789, 809, 834, 871, 874, 942, 944, 972, 1067, 1094, 1132, 1136, 1155, 1162, 1195], "own": [24, 28, 40, 43, 65, 66, 112, 113, 148, 173, 174, 176, 177, 183, 188, 201, 205, 251, 275, 280, 289, 299, 324, 337, 338, 457, 463, 478, 492, 500, 517, 522, 586, 587, 596, 686, 687, 689, 690, 704, 708, 711, 723, 733, 735, 747, 755, 770, 789, 790, 791, 838, 871, 873, 874, 883, 885, 886, 894, 895, 917, 927, 942, 943, 955, 962, 980, 985, 996, 997, 1009, 1028, 1035, 1052, 1057, 1058, 1060, 1144, 1177, 1192, 1193, 1195], "yield": [24, 29, 192, 193, 206, 209, 210, 212, 221, 233, 240, 246, 250, 252, 254, 255, 261, 265, 270, 272, 282, 285, 286, 293, 301, 302, 303, 306, 307, 312, 314, 325, 328, 329, 335, 341, 345, 346, 347, 350, 351, 438, 507, 516, 723, 726, 729, 730, 731, 791, 1033, 1037, 1039, 1040, 1042, 1061, 1071, 1093, 1094, 1095, 1096, 1109, 1120, 1135, 1147], "multipl": [24, 35, 36, 61, 63, 78, 108, 112, 113, 173, 174, 176, 190, 205, 209, 212, 232, 233, 234, 246, 248, 265, 300, 324, 393, 395, 399, 400, 403, 412, 414, 417, 426, 433, 437, 455, 460, 473, 478, 485, 517, 531, 544, 599, 612, 670, 677, 690, 717, 723, 745, 747, 754, 762, 765, 769, 770, 789, 791, 807, 809, 815, 819, 820, 828, 829, 830, 838, 840, 842, 843, 846, 847, 853, 856, 859, 871, 874, 875, 878, 880, 885, 886, 931, 934, 943, 964, 980, 985, 1005, 1018, 1055, 1066, 1067, 1080, 1081, 1086, 1137, 1162], "artifact": [24, 179, 183, 197, 202, 315, 331, 473, 799, 1012, 1013, 1014, 1024, 1179, 1192], "complet": [24, 42, 62, 80, 126, 127, 143, 169, 172, 173, 194, 205, 213, 221, 230, 243, 246, 249, 256, 270, 271, 273, 300, 306, 312, 317, 324, 337, 355, 356, 437, 454, 467, 480, 492, 544, 553, 598, 599, 673, 742, 757, 789, 832, 838, 865, 866, 876, 938, 944, 959, 996, 1033, 1037, 1059, 1060, 1137, 1142, 1143, 1145, 1151, 1153, 1164, 1165, 1182, 1190], "prepar": [27, 124, 126, 142, 169, 172, 205, 262, 370, 388, 501, 542, 573, 635, 672, 1005, 1029, 1133, 1142, 1171], "base": [27, 29, 30, 42, 45, 53, 65, 80, 82, 99, 109, 123, 126, 139, 144, 165, 173, 175, 176, 188, 195, 200, 205, 206, 209, 212, 213, 216, 220, 223, 225, 235, 249, 251, 254, 258, 259, 263, 268, 270, 276, 283, 286, 291, 293, 297, 298, 299, 300, 301, 302, 307, 312, 323, 324, 325, 327, 328, 329, 335, 338, 341, 346, 347, 351, 366, 370, 374, 381, 403, 411, 438, 455, 473, 478, 479, 497, 501, 506, 507, 509, 516, 541, 553, 557, 573, 584, 626, 628, 629, 630, 631, 633, 634, 638, 670, 672, 673, 675, 717, 734, 735, 742, 747, 754, 758, 770, 775, 777, 779, 781, 785, 788, 790, 791, 811, 818, 822, 834, 838, 840, 889, 891, 931, 935, 994, 1006, 1010, 1012, 1013, 1026, 1027, 1029, 1037, 1044, 1046, 1051, 1052, 1093, 1099, 1115, 1135, 1144, 1145, 1159, 1189, 1190, 1193], "exist": [27, 38, 46, 47, 53, 55, 56, 111, 112, 113, 154, 166, 169, 179, 184, 213, 225, 232, 298, 302, 355, 367, 370, 373, 455, 477, 479, 495, 500, 520, 523, 543, 554, 560, 562, 595, 605, 653, 688, 690, 699, 753, 789, 791, 838, 865, 866, 871, 873, 880, 889, 891, 900, 904, 905, 917, 934, 942, 944, 955, 960, 964, 970, 973, 975, 992, 999, 1006, 1024, 1028, 1029, 1034, 1035, 1044, 1049, 1084, 1086, 1105, 1146, 1154, 1155, 1165, 1170, 1172], "navig": [27, 1162], "through": [27, 34, 38, 60, 75, 80, 106, 170, 172, 173, 175, 180, 184, 188, 201, 205, 209, 211, 214, 225, 233, 234, 235, 240, 246, 299, 301, 302, 317, 320, 323, 328, 354, 377, 381, 388, 407, 427, 446, 466, 470, 483, 492, 523, 545, 548, 614, 616, 617, 666, 667, 670, 673, 695, 710, 712, 737, 745, 749, 755, 759, 809, 836, 869, 877, 925, 935, 943, 944, 953, 1006, 1009, 1010, 1035, 1040, 1043, 1058, 1060, 1063, 1099, 1144, 1159, 1190, 1191, 1195], "deviat": [27, 180, 193, 201, 210, 234, 265, 388, 838], "after": [27, 43, 169, 170, 173, 174, 175, 180, 183, 193, 202, 205, 212, 225, 232, 242, 248, 258, 261, 264, 265, 271, 286, 291, 298, 300, 307, 335, 351, 356, 395, 403, 404, 437, 457, 464, 483, 485, 521, 522, 545, 552, 604, 607, 620, 655, 703, 705, 706, 708, 717, 723, 770, 789, 816, 820, 826, 878, 881, 898, 899, 931, 942, 982, 1000, 1005, 1006, 1009, 1012, 1031, 1033, 1035, 1060, 1061, 1065, 1102, 1115, 1133, 1141, 1150, 1162, 1171, 1172, 1177], "writeup": [27, 184, 1024], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 61, 63, 67, 71, 80, 85, 88, 89, 99, 100, 101, 106, 109, 123, 126, 131, 132, 139, 144, 170, 172, 173, 174, 175, 176, 177, 178, 179, 184, 188, 192, 193, 194, 195, 196, 197, 199, 201, 205, 206, 209, 210, 211, 212, 213, 214, 215, 224, 232, 234, 235, 249, 250, 251, 260, 265, 273, 279, 289, 292, 295, 299, 301, 302, 315, 320, 323, 331, 335, 337, 338, 354, 355, 356, 362, 370, 373, 375, 377, 378, 381, 392, 400, 405, 415, 416, 418, 431, 440, 443, 450, 453, 455, 457, 458, 461, 462, 463, 467, 471, 473, 478, 479, 482, 487, 489, 496, 498, 500, 521, 522, 532, 538, 540, 549, 552, 573, 574, 577, 580, 583, 586, 589, 590, 592, 602, 605, 607, 608, 609, 610, 611, 613, 620, 623, 630, 666, 673, 682, 700, 703, 706, 712, 717, 723, 733, 744, 745, 753, 754, 755, 759, 762, 766, 768, 769, 775, 787, 789, 790, 791, 799, 802, 806, 809, 811, 816, 834, 841, 846, 851, 864, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 882, 883, 884, 887, 888, 889, 890, 891, 892, 893, 898, 913, 914, 916, 934, 935, 942, 943, 944, 946, 947, 948, 949, 950, 961, 962, 968, 969, 970, 971, 973, 975, 980, 981, 982, 983, 984, 989, 992, 995, 997, 998, 1000, 1001, 1004, 1005, 1006, 1008, 1010, 1013, 1022, 1023, 1027, 1029, 1030, 1031, 1033, 1035, 1037, 1038, 1041, 1042, 1046, 1047, 1055, 1059, 1060, 1078, 1084, 1088, 1089, 1094, 1097, 1105, 1132, 1136, 1144, 1146, 1153, 1162, 1170, 1172, 1176, 1177, 1179, 1181, 1192, 1195], "collect": [27, 29, 169, 172, 174, 217, 224, 233, 239, 240, 257, 259, 260, 261, 273, 282, 284, 291, 299, 301, 302, 306, 317, 320, 323, 324, 327, 328, 340, 346, 350, 351, 355, 466, 473, 584, 630, 745, 754, 766, 791, 838, 869, 941, 1022, 1033, 1037, 1043, 1051, 1085, 1092, 1096, 1125, 1130, 1132, 1135, 1136, 1151, 1164, 1165, 1170, 1172, 1200], "question": [27, 29, 32, 35, 36, 38, 65, 104, 125, 126, 138, 175, 180, 188, 193, 205, 209, 211, 233, 234, 235, 245, 246, 248, 249, 251, 271, 354, 370, 377, 384, 412, 441, 447, 459, 478, 481, 485, 489, 542, 606, 666, 673, 761, 765, 791, 816, 830, 846, 865, 866, 868, 887, 893, 917, 934, 942, 944, 955, 959, 975, 994, 995, 1028, 1036, 1037, 1040, 1045, 1135, 1137], "ask": [27, 173, 178, 180, 188, 205, 208, 209, 274, 306, 370, 377, 477, 496, 497, 519, 538, 590, 602, 613, 734, 756, 894, 949, 951, 1055, 1137], "answer": [27, 45, 116, 177, 180, 193, 205, 209, 211, 212, 235, 246, 253, 325, 335, 377, 481, 485, 542, 666, 673, 675, 745, 750, 769, 802, 846, 865, 866, 871, 883, 885, 886, 889, 891, 942, 944, 951, 955, 994, 997, 1028, 1035, 1036, 1040, 1047, 1064, 1067, 1137], "cover": [27, 80, 83, 127, 166, 180, 197, 205, 209, 213, 215, 233, 234, 246, 259, 298, 300, 328, 477, 496, 782, 942, 944, 1026, 1035, 1037, 1060, 1109, 1132, 1137, 1141, 1142, 1164, 1170, 1193, 1195], "been": [27, 61, 63, 67, 124, 154, 172, 173, 174, 175, 177, 178, 179, 184, 188, 193, 194, 205, 213, 242, 248, 258, 261, 292, 295, 297, 307, 324, 367, 376, 436, 450, 451, 480, 491, 500, 517, 573, 732, 792, 834, 852, 858, 863, 873, 877, 881, 901, 935, 942, 944, 955, 964, 974, 985, 1010, 1013, 1014, 1031, 1038, 1076, 1172, 1190, 1192, 1193], "further": [27, 170, 172, 179, 183, 199, 248, 280, 295, 324, 337, 338, 378, 443, 454, 492, 554, 574, 577, 580, 583, 586, 589, 592, 704, 735, 781, 790, 791, 809, 832, 838, 920, 945, 981, 1001, 1004, 1008, 1043, 1176, 1181, 1195], "inform": [27, 28, 29, 108, 154, 172, 175, 176, 178, 183, 192, 193, 194, 196, 201, 221, 242, 248, 258, 261, 286, 301, 302, 323, 327, 328, 454, 464, 471, 472, 482, 491, 759, 789, 797, 809, 873, 898, 931, 935, 942, 944, 946, 978, 1034, 1062, 1137, 1145, 1150, 1165, 1172], "internet": [27, 80, 172, 174, 177, 178, 180, 201, 213, 221, 249, 262, 301, 302, 317, 323, 327, 367, 479, 935, 936, 938, 996, 1036, 1193, 1207], "subtract": [27, 116, 242, 265, 297, 414, 517, 531, 745, 897, 997, 1047, 1055, 1067], "known": [27, 169, 174, 185, 225, 242, 248, 258, 261, 278, 280, 298, 315, 331, 367, 413, 415, 427, 434, 461, 467, 632, 809, 898, 1027, 1144, 1192, 1193], "calcul": [27, 84, 87, 175, 209, 233, 242, 265, 413, 415, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 516, 546, 551, 553, 697, 702, 735, 762, 788, 790, 791, 980, 997, 1038, 1040, 1112, 1144, 1149, 1170], "minimum": [27, 62, 265, 717, 776, 838, 1033, 1140, 1141, 1142, 1143], "come": [27, 43, 80, 112, 113, 124, 132, 139, 143, 154, 169, 170, 172, 173, 174, 175, 178, 179, 180, 183, 184, 195, 201, 202, 205, 225, 251, 278, 280, 291, 298, 299, 324, 337, 361, 367, 391, 393, 394, 410, 437, 473, 480, 517, 551, 633, 670, 673, 678, 692, 744, 747, 749, 759, 769, 791, 806, 838, 869, 871, 875, 881, 894, 898, 935, 942, 943, 944, 970, 996, 1024, 1035, 1036, 1040, 1058, 1059, 1060, 1061, 1067, 1078, 1086, 1088, 1094, 1099, 1117, 1128, 1145, 1148, 1153, 1166, 1193], "she": [27, 232, 670, 703, 873, 875, 1080, 1088], "who": [27, 29, 45, 131, 170, 173, 177, 180, 184, 203, 205, 251, 261, 286, 317, 388, 463, 467, 477, 482, 505, 522, 554, 675, 745, 755, 811, 838, 846, 865, 866, 873, 877, 883, 894, 935, 943, 944, 959, 970, 1012, 1029, 1031, 1037, 1059, 1136, 1151, 1163, 1170, 1190, 1193, 1195], "repetit": [27, 286, 898, 1190], "prone": [27, 412, 600, 610, 630, 703, 747, 826, 1014, 1082, 1177, 1190], "possibl": [27, 60, 61, 63, 108, 123, 124, 126, 144, 151, 160, 163, 172, 173, 180, 183, 188, 195, 205, 209, 225, 235, 242, 248, 251, 253, 258, 259, 261, 278, 280, 289, 298, 301, 302, 307, 324, 328, 338, 402, 413, 416, 433, 446, 453, 459, 463, 467, 468, 471, 477, 483, 492, 495, 497, 500, 505, 509, 517, 519, 554, 587, 597, 599, 600, 605, 612, 613, 631, 648, 689, 695, 696, 703, 717, 721, 734, 745, 753, 754, 755, 759, 816, 843, 873, 882, 907, 936, 937, 942, 943, 953, 956, 985, 1033, 1034, 1035, 1043, 1048, 1056, 1058, 1067, 1076, 1081, 1083, 1084, 1086, 1136, 1137, 1146, 1158], "abl": [27, 28, 30, 43, 172, 173, 175, 176, 178, 180, 188, 205, 225, 232, 314, 457, 463, 489, 496, 500, 554, 702, 712, 865, 866, 883, 889, 891, 892, 935, 943, 944, 970, 1006, 1037, 1149, 1195], "fix": [27, 46, 62, 78, 109, 143, 169, 173, 186, 188, 209, 230, 235, 245, 246, 251, 270, 273, 300, 301, 302, 323, 370, 395, 418, 461, 477, 479, 485, 522, 555, 567, 578, 590, 596, 615, 631, 681, 688, 709, 791, 806, 811, 815, 818, 819, 839, 840, 846, 847, 853, 856, 859, 882, 934, 938, 958, 968, 999, 1009, 1029, 1031, 1034, 1061, 1094, 1137], "inconsist": [27, 597, 1160], "easi": [27, 70, 131, 161, 173, 175, 176, 177, 178, 179, 180, 184, 193, 194, 197, 209, 255, 265, 338, 416, 431, 457, 473, 695, 712, 754, 775, 818, 820, 824, 836, 843, 877, 942, 943, 944, 971, 988, 1006, 1015, 1029, 1055, 1059, 1067, 1076, 1078, 1143, 1170, 1171, 1195], "plain": [27, 134, 175, 235, 381, 573, 609, 612, 691, 744, 759, 841, 943, 1034, 1047], "happi": [27, 178, 205, 461, 605, 1142], "clear": [27, 43, 173, 175, 180, 192, 225, 235, 264, 325, 371, 372, 438, 463, 467, 482, 492, 498, 504, 611, 666, 699, 717, 754, 838, 846, 874, 877, 898, 958, 1032, 1047, 1067, 1069, 1141, 1142, 1172], "front": [27, 80, 170, 180, 205, 261, 307, 467, 648, 767, 1193], "later": [27, 82, 127, 143, 172, 173, 176, 183, 194, 205, 327, 393, 397, 403, 405, 407, 463, 467, 473, 480, 599, 600, 602, 614, 616, 617, 651, 706, 737, 740, 797, 799, 801, 806, 822, 824, 834, 841, 880, 942, 964, 980, 981, 983, 994, 998, 1048, 1056, 1066, 1069, 1071, 1150, 1156], "menu": [27, 65, 169, 213, 838, 1185], "mine": [28, 172, 173, 176, 184, 201, 205, 209, 388, 587, 838], "hi": [28, 45, 188, 193, 205, 209, 212, 230, 256, 259, 460, 549, 1048, 1137], "data": [28, 29, 49, 72, 75, 80, 91, 110, 112, 113, 136, 144, 148, 173, 174, 175, 176, 180, 183, 192, 194, 196, 205, 209, 210, 214, 222, 224, 229, 239, 242, 243, 248, 249, 251, 258, 261, 265, 271, 286, 290, 291, 292, 293, 295, 298, 300, 301, 302, 307, 312, 315, 317, 320, 326, 329, 331, 335, 341, 348, 351, 372, 373, 388, 402, 416, 423, 432, 439, 445, 446, 449, 451, 452, 456, 461, 465, 466, 468, 469, 474, 475, 478, 485, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 560, 562, 571, 595, 596, 598, 602, 605, 618, 621, 623, 624, 635, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 697, 701, 704, 735, 747, 751, 759, 760, 768, 769, 776, 788, 789, 790, 791, 793, 796, 797, 828, 832, 836, 843, 851, 869, 875, 880, 882, 890, 936, 938, 942, 943, 944, 945, 955, 959, 961, 969, 974, 980, 983, 986, 988, 1000, 1024, 1033, 1035, 1040, 1044, 1047, 1060, 1061, 1072, 1074, 1075, 1076, 1084, 1096, 1124, 1125, 1135, 1139, 1140, 1141, 1143, 1145, 1146, 1150, 1151, 1155, 1156, 1159, 1161, 1162, 1165, 1170, 1191, 1192, 1206], "convinc": [28, 416], "him": [28, 205, 209, 212, 230, 233, 256, 282, 306, 328, 744, 985, 1137], "wai": [28, 43, 50, 61, 62, 63, 82, 83, 163, 169, 170, 172, 175, 180, 184, 185, 188, 194, 197, 201, 206, 208, 209, 211, 212, 213, 216, 217, 225, 230, 233, 245, 246, 251, 254, 255, 256, 258, 259, 263, 265, 273, 277, 278, 291, 292, 295, 299, 301, 302, 323, 324, 358, 362, 412, 416, 420, 421, 431, 437, 453, 454, 455, 463, 479, 480, 487, 497, 499, 500, 504, 520, 522, 541, 551, 555, 567, 573, 581, 597, 598, 605, 610, 613, 651, 653, 679, 685, 696, 712, 733, 743, 755, 759, 773, 794, 807, 816, 830, 832, 838, 865, 866, 874, 880, 882, 885, 886, 935, 943, 944, 955, 962, 970, 996, 999, 1009, 1010, 1014, 1020, 1024, 1035, 1047, 1052, 1058, 1061, 1062, 1065, 1076, 1080, 1081, 1083, 1086, 1088, 1094, 1122, 1137, 1155, 1163, 1170, 1177, 1195], "go": [28, 40, 42, 60, 61, 62, 63, 82, 99, 137, 143, 170, 173, 176, 177, 179, 180, 202, 205, 212, 216, 225, 234, 235, 251, 292, 295, 297, 327, 373, 477, 479, 497, 538, 699, 737, 749, 755, 767, 791, 799, 802, 806, 838, 840, 869, 881, 898, 900, 934, 935, 942, 943, 970, 973, 975, 980, 988, 992, 1012, 1015, 1029, 1060, 1095], "relev": [28, 175, 248, 273, 403, 492, 554, 759, 838, 851, 942, 943, 1035, 1136, 1152, 1165], "part": [28, 43, 82, 94, 108, 126, 166, 173, 174, 175, 176, 178, 180, 183, 194, 197, 205, 212, 213, 214, 235, 261, 273, 292, 295, 307, 372, 379, 393, 416, 450, 477, 500, 505, 519, 540, 554, 597, 695, 767, 789, 809, 816, 838, 858, 865, 866, 898, 933, 935, 942, 943, 944, 945, 960, 1012, 1059, 1060, 1073, 1078, 1080, 1127, 1129, 1143, 1144, 1155, 1156, 1158, 1159, 1160, 1161, 1180], "natur": [28, 38, 77, 173, 175, 180, 205, 259, 265, 307, 388, 393, 411, 455, 496, 497, 649, 651, 695, 755, 943, 1071], "straighforward": 28, "approach": [28, 35, 38, 172, 173, 212, 316, 332, 395, 479, 483, 484, 492, 753, 781, 791, 877, 943, 996, 998, 1154], "would": [28, 57, 106, 109, 116, 119, 120, 144, 172, 174, 175, 177, 178, 184, 193, 195, 202, 205, 209, 211, 224, 235, 248, 261, 265, 300, 302, 338, 427, 446, 453, 455, 466, 467, 481, 482, 485, 492, 495, 553, 567, 571, 605, 609, 611, 613, 660, 667, 676, 700, 706, 745, 755, 767, 787, 789, 838, 841, 865, 866, 889, 891, 894, 920, 943, 944, 954, 955, 971, 980, 988, 1009, 1028, 1029, 1033, 1035, 1036, 1056, 1067, 1071, 1075, 1078, 1084, 1088, 1094, 1115, 1142, 1145, 1155, 1162], "copi": [28, 36, 42, 50, 72, 99, 101, 103, 104, 116, 120, 126, 130, 134, 139, 143, 148, 163, 165, 169, 173, 174, 175, 176, 179, 184, 188, 194, 200, 203, 213, 220, 223, 235, 245, 251, 257, 261, 265, 268, 271, 277, 278, 279, 280, 283, 288, 289, 293, 297, 298, 300, 307, 309, 310, 313, 325, 338, 347, 353, 354, 373, 403, 405, 417, 423, 432, 437, 439, 441, 445, 446, 449, 452, 456, 465, 469, 474, 475, 490, 522, 523, 536, 537, 538, 543, 560, 572, 573, 575, 584, 589, 591, 593, 595, 596, 597, 603, 613, 614, 616, 617, 626, 630, 640, 648, 657, 659, 662, 663, 675, 677, 683, 686, 689, 692, 697, 698, 699, 703, 704, 705, 723, 735, 737, 747, 751, 755, 756, 760, 768, 787, 788, 789, 790, 791, 813, 818, 838, 839, 854, 864, 865, 866, 867, 868, 869, 878, 898, 904, 905, 907, 908, 909, 910, 912, 918, 934, 945, 948, 950, 955, 967, 972, 973, 974, 975, 982, 983, 988, 992, 1005, 1022, 1023, 1024, 1026, 1028, 1029, 1033, 1034, 1068, 1083, 1086, 1150, 1154, 1159, 1172, 1177, 1179, 1190, 1202], "dumb": [28, 45, 193, 224, 355, 809, 983, 985], "reason": [28, 60, 144, 160, 175, 188, 194, 205, 234, 253, 367, 450, 457, 459, 461, 467, 470, 483, 495, 614, 616, 617, 651, 695, 738, 757, 806, 822, 834, 838, 889, 891, 988, 996, 997, 1010, 1024, 1029, 1067, 1076, 1078, 1142], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 60, 61, 62, 63, 67, 70, 80, 82, 83, 91, 108, 110, 111, 112, 113, 116, 121, 122, 124, 131, 139, 144, 153, 154, 160, 166, 167, 170, 172, 175, 176, 177, 179, 180, 183, 184, 188, 189, 190, 193, 194, 195, 197, 201, 203, 205, 209, 210, 211, 212, 213, 214, 225, 232, 233, 234, 235, 242, 245, 246, 248, 249, 251, 252, 254, 256, 257, 258, 259, 261, 265, 269, 273, 278, 280, 282, 289, 291, 292, 295, 297, 298, 299, 300, 302, 307, 310, 315, 319, 324, 325, 328, 329, 331, 338, 354, 355, 356, 357, 361, 367, 370, 372, 373, 375, 376, 392, 394, 395, 397, 400, 402, 403, 405, 407, 410, 411, 414, 415, 416, 422, 425, 428, 433, 434, 437, 441, 443, 444, 446, 447, 448, 453, 454, 455, 457, 458, 461, 464, 467, 470, 477, 478, 480, 482, 485, 486, 491, 492, 495, 496, 497, 507, 517, 519, 522, 541, 544, 551, 552, 553, 554, 555, 558, 562, 567, 571, 581, 587, 590, 597, 598, 599, 600, 602, 605, 606, 609, 610, 611, 613, 620, 623, 630, 631, 632, 635, 645, 651, 652, 657, 660, 667, 669, 670, 672, 673, 677, 683, 684, 685, 686, 690, 696, 698, 699, 700, 703, 706, 707, 708, 712, 717, 734, 737, 738, 743, 744, 745, 747, 749, 753, 754, 755, 756, 758, 759, 761, 764, 766, 770, 771, 789, 791, 793, 794, 797, 807, 809, 811, 816, 822, 824, 826, 830, 832, 834, 836, 838, 843, 857, 864, 865, 866, 869, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 889, 891, 898, 899, 901, 911, 916, 920, 922, 925, 935, 936, 942, 943, 944, 945, 951, 953, 955, 958, 960, 961, 964, 965, 972, 978, 980, 981, 983, 985, 986, 988, 991, 997, 998, 999, 1000, 1005, 1009, 1010, 1012, 1013, 1014, 1015, 1018, 1020, 1024, 1026, 1027, 1029, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1044, 1047, 1048, 1049, 1050, 1054, 1056, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1069, 1072, 1076, 1084, 1086, 1087, 1088, 1091, 1099, 1104, 1132, 1136, 1137, 1142, 1143, 1144, 1145, 1146, 1149, 1150, 1151, 1153, 1155, 1156, 1159, 1161, 1162, 1164, 1170, 1172, 1173, 1176, 1177, 1180, 1192, 1193, 1195], "need": [28, 43, 45, 46, 47, 51, 55, 56, 60, 62, 106, 127, 129, 131, 134, 144, 173, 174, 175, 178, 180, 184, 188, 189, 194, 205, 212, 213, 215, 225, 235, 249, 251, 273, 317, 358, 370, 400, 402, 405, 425, 433, 434, 453, 459, 460, 466, 470, 472, 473, 477, 480, 482, 485, 487, 490, 492, 496, 497, 519, 549, 551, 552, 553, 554, 584, 590, 596, 597, 612, 632, 652, 666, 673, 677, 706, 712, 741, 755, 758, 764, 769, 771, 777, 791, 797, 811, 813, 826, 830, 834, 838, 877, 881, 894, 899, 935, 936, 937, 938, 942, 943, 944, 951, 955, 961, 962, 965, 968, 979, 983, 994, 1015, 1024, 1028, 1029, 1030, 1034, 1039, 1052, 1060, 1061, 1063, 1066, 1075, 1080, 1092, 1093, 1142, 1143, 1150, 1164, 1172, 1193], "mechan": [28, 32, 91, 160, 173, 174, 197, 205, 209, 220, 235, 289, 495, 673, 985, 1006, 1044, 1137, 1165, 1190, 1195, 1205], "where": [28, 53, 91, 111, 124, 126, 144, 154, 158, 159, 169, 172, 173, 174, 175, 176, 178, 180, 183, 188, 193, 194, 201, 202, 205, 206, 209, 232, 233, 234, 235, 242, 245, 248, 249, 251, 258, 261, 265, 273, 282, 289, 307, 315, 324, 328, 331, 370, 375, 376, 411, 415, 425, 433, 434, 436, 437, 438, 451, 455, 466, 468, 478, 488, 501, 508, 539, 541, 552, 567, 573, 590, 609, 670, 673, 677, 695, 753, 754, 758, 776, 832, 836, 838, 850, 880, 881, 895, 898, 901, 922, 927, 935, 942, 943, 944, 951, 956, 962, 964, 967, 970, 971, 987, 997, 998, 1005, 1009, 1010, 1013, 1024, 1028, 1029, 1036, 1038, 1040, 1043, 1065, 1067, 1077, 1119, 1137, 1144, 1149, 1170, 1192, 1195], "could": [28, 50, 57, 112, 113, 126, 131, 139, 143, 169, 170, 173, 174, 178, 180, 184, 194, 203, 205, 211, 225, 234, 235, 245, 255, 261, 289, 299, 301, 302, 320, 323, 335, 388, 416, 460, 481, 483, 496, 497, 521, 554, 605, 613, 677, 689, 695, 708, 709, 717, 732, 742, 757, 792, 809, 838, 851, 877, 895, 943, 944, 951, 962, 968, 1005, 1067, 1119, 1133, 1149, 1159, 1165, 1177, 1190], "exchang": [28, 80, 202, 245, 335, 340, 342, 477, 505, 521, 551, 705, 706, 809, 882, 1000, 1094, 1102], "meta": [28, 39, 165, 180, 838, 850, 898], "retriev": [28, 184, 723, 838, 1040, 1088], "check": [28, 29, 38, 90, 99, 106, 121, 124, 131, 158, 172, 173, 175, 176, 177, 178, 179, 184, 188, 193, 205, 209, 213, 217, 242, 248, 251, 258, 261, 265, 289, 302, 355, 378, 381, 403, 418, 427, 429, 430, 435, 443, 450, 454, 462, 464, 480, 544, 545, 567, 578, 590, 597, 605, 612, 613, 630, 651, 689, 705, 706, 717, 754, 789, 791, 811, 813, 818, 838, 854, 855, 857, 934, 935, 942, 943, 965, 970, 976, 979, 983, 1013, 1014, 1019, 1022, 1024, 1031, 1060, 1065, 1078, 1088, 1092, 1096, 1098, 1100, 1116, 1122, 1135, 1165, 1170, 1179, 1190, 1200], "everyth": [28, 42, 43, 100, 126, 139, 148, 166, 173, 179, 180, 197, 205, 209, 213, 224, 232, 250, 251, 279, 288, 289, 292, 295, 309, 310, 324, 327, 353, 354, 381, 388, 405, 425, 428, 453, 467, 473, 477, 538, 596, 597, 599, 606, 610, 615, 620, 670, 712, 741, 745, 761, 768, 789, 790, 791, 807, 816, 836, 840, 843, 868, 871, 872, 874, 875, 899, 920, 934, 935, 936, 942, 943, 944, 961, 963, 964, 975, 988, 989, 995, 997, 1000, 1010, 1032, 1038, 1043, 1047, 1144, 1159, 1203, 1204, 1205, 1207], "clearli": [28, 43, 129, 188, 205, 455, 702, 723, 750, 838, 857, 971, 1036, 1067, 1088, 1192], "intersphinx": [28, 170], "spinx": 28, "possibli": [29, 79, 87, 133, 173, 205, 479, 613, 689, 703, 712, 717, 732, 744, 754, 766, 767, 883, 920, 943, 991, 1026, 1153], "arrang": [29, 86, 112, 113, 177, 320, 554, 759, 871, 931], "subgroup": [29, 35, 38, 573], "refer": [29, 92, 99, 112, 113, 126, 132, 144, 154, 157, 172, 178, 179, 193, 195, 200, 209, 212, 214, 217, 218, 229, 230, 232, 234, 235, 240, 243, 244, 246, 247, 249, 250, 251, 256, 257, 258, 261, 265, 267, 269, 270, 272, 276, 284, 285, 287, 292, 294, 295, 299, 300, 302, 305, 306, 308, 311, 312, 314, 315, 323, 324, 326, 327, 328, 331, 333, 338, 339, 340, 342, 345, 346, 348, 349, 350, 352, 354, 356, 357, 358, 359, 360, 361, 370, 434, 440, 447, 486, 543, 551, 560, 562, 573, 595, 596, 597, 598, 613, 614, 616, 617, 618, 621, 624, 640, 646, 650, 659, 662, 663, 664, 672, 677, 680, 683, 684, 687, 688, 689, 690, 691, 692, 703, 723, 735, 736, 744, 747, 751, 755, 760, 768, 788, 789, 790, 791, 797, 798, 800, 802, 805, 808, 815, 819, 829, 838, 842, 847, 850, 853, 856, 859, 881, 911, 920, 934, 935, 942, 943, 967, 1006, 1012, 1028, 1031, 1036, 1037, 1059, 1086, 1087, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151, 1170, 1172, 1190, 1191, 1192, 1200], "veri": [29, 35, 37, 38, 172, 173, 175, 194, 205, 209, 212, 214, 225, 230, 233, 256, 259, 282, 306, 328, 381, 388, 409, 416, 426, 427, 447, 463, 464, 466, 472, 479, 482, 497, 584, 595, 608, 623, 641, 669, 698, 699, 737, 740, 743, 754, 757, 776, 838, 843, 848, 876, 877, 936, 941, 943, 944, 961, 962, 978, 983, 998, 1012, 1040, 1048, 1064, 1067, 1071, 1072, 1078, 1082, 1086, 1092, 1137, 1144, 1145, 1166, 1175, 1182, 1190], "unawar": [29, 188, 205, 212], "simpli": [29, 60, 65, 131, 167, 173, 176, 178, 180, 184, 188, 197, 261, 262, 301, 302, 323, 324, 416, 458, 500, 538, 605, 614, 616, 617, 666, 676, 687, 723, 744, 745, 750, 755, 769, 816, 870, 883, 942, 964, 968, 1012, 1028, 1036], "interest": [29, 124, 174, 175, 188, 194, 205, 213, 370, 482, 497, 1035, 1037, 1156], "catalog": [29, 1193], "chapter": [29, 42, 144, 225, 234, 242, 248, 258, 261, 262, 350, 573, 898], "subchapt": 29, "cluster_python": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174], "cluster_python_exercis": [29, 230, 370, 791, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "cluster_python_exercises_legaci": [29, 230, 370, 791, 1096, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135], "legaci": [29, 230, 370, 500, 791, 1096, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135, 1185], "cluster_python_exercises_csv": [29, 791, 1093, 1094, 1095, 1096, 1135], "csv": [29, 44, 51, 53, 54, 55, 56, 80, 108, 131, 133, 136, 209, 212, 221, 224, 230, 234, 235, 238, 240, 242, 243, 246, 247, 249, 253, 256, 259, 261, 267, 268, 271, 286, 290, 291, 293, 296, 297, 301, 302, 308, 313, 317, 320, 323, 325, 329, 335, 341, 347, 351, 478, 791, 880, 883, 898, 920, 1048, 1051, 1054, 1088, 1096, 1130, 1131, 1132, 1133, 1135, 1137, 1140, 1141, 1142, 1143, 1151], "databas": [29, 42, 43, 55, 80, 170, 192, 193, 212, 234, 240, 245, 246, 249, 251, 252, 255, 259, 273, 301, 302, 323, 361, 497, 498, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 791, 894, 925, 946, 1054, 1094, 1096, 1115, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1151, 1155, 1166, 1182], "cluster_python_exercises_herdt": [29, 791, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1135], "cluster_python_exercises_userdb": [29, 791, 1096, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "seri": [29, 102, 174, 245, 249, 290, 291, 292, 293, 295, 297, 299, 324, 329, 335, 457, 478, 507, 791, 947, 1061, 1094, 1096, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1142, 1151, 1156, 1157, 1158, 1160, 1161, 1205], "cluster_python_exercises_sensor": [29, 791, 1096, 1123, 1124, 1125, 1135], "sensor": [29, 71, 74, 75, 76, 80, 83, 86, 99, 108, 111, 114, 115, 116, 117, 118, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 142, 143, 144, 148, 200, 209, 213, 249, 270, 281, 289, 298, 301, 302, 317, 320, 323, 327, 338, 341, 370, 374, 376, 494, 499, 501, 509, 515, 516, 519, 520, 524, 530, 533, 539, 543, 544, 545, 546, 547, 548, 549, 560, 563, 564, 565, 566, 567, 568, 569, 570, 595, 603, 668, 705, 754, 755, 756, 780, 782, 791, 838, 934, 941, 973, 975, 992, 1048, 1096, 1124, 1135, 1201], "And": [29, 68, 99, 101, 104, 105, 106, 108, 126, 136, 148, 173, 174, 175, 177, 180, 203, 209, 212, 232, 235, 240, 242, 251, 253, 262, 270, 277, 278, 279, 281, 282, 284, 285, 287, 288, 291, 295, 305, 306, 308, 309, 311, 316, 325, 330, 332, 333, 336, 339, 340, 342, 345, 346, 349, 350, 352, 353, 478, 484, 490, 494, 501, 503, 515, 529, 543, 544, 545, 546, 547, 548, 549, 550, 553, 556, 560, 572, 573, 595, 603, 625, 633, 638, 648, 651, 659, 663, 669, 692, 704, 735, 736, 737, 746, 751, 758, 760, 768, 779, 788, 789, 790, 791, 861, 867, 868, 871, 872, 876, 880, 888, 890, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 918, 928, 934, 941, 948, 950, 957, 963, 965, 970, 973, 975, 979, 989, 992, 995, 997, 1000, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1023, 1035, 1037, 1042, 1045, 1046, 1047, 1051, 1052, 1076, 1093, 1094, 1095, 1096, 1109, 1120, 1130, 1131, 1132, 1135, 1147, 1151, 1157, 1164, 1190], "acquisit": [29, 131, 173, 200, 301, 302, 317, 320, 323, 324, 327, 587, 791, 1092, 1096, 1124, 1125, 1135], "cluster_python_advanc": [29, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1090, 1093, 1094, 1095, 1096, 1109, 1120, 1123, 1124, 1125, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1147, 1151, 1153, 1164, 1167, 1169, 1174], "cluster_python_advanced_multithread": [29, 791, 1037, 1044, 1045, 1046, 1047, 1135], "cluster_python_advanced_oo": [29, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1096, 1123, 1124, 1125, 1130, 1132, 1135, 1164], "object": [29, 62, 72, 75, 76, 80, 92, 99, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 131, 132, 135, 144, 149, 166, 188, 190, 193, 195, 200, 205, 212, 221, 223, 224, 229, 232, 233, 235, 238, 240, 242, 245, 246, 249, 250, 251, 252, 253, 257, 258, 263, 264, 266, 268, 271, 275, 283, 287, 289, 290, 292, 293, 295, 297, 300, 303, 307, 313, 319, 325, 329, 335, 338, 340, 341, 347, 351, 357, 359, 360, 363, 365, 370, 371, 372, 373, 407, 433, 460, 478, 480, 485, 486, 490, 491, 492, 497, 499, 501, 506, 515, 517, 523, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 560, 562, 567, 573, 587, 595, 596, 598, 600, 603, 604, 606, 608, 609, 614, 616, 617, 618, 620, 621, 624, 640, 646, 650, 651, 652, 659, 662, 663, 666, 667, 669, 672, 673, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 695, 703, 704, 706, 707, 717, 723, 735, 737, 739, 740, 744, 745, 750, 751, 753, 755, 756, 759, 760, 766, 768, 769, 775, 776, 781, 785, 786, 788, 789, 790, 791, 881, 934, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1022, 1028, 1031, 1033, 1034, 1036, 1037, 1040, 1044, 1045, 1046, 1047, 1048, 1050, 1052, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1067, 1076, 1078, 1084, 1085, 1096, 1123, 1124, 1125, 1130, 1132, 1135, 1142, 1156, 1158, 1160, 1161, 1162, 1164, 1170, 1190, 1191, 1193, 1195], "orient": [29, 72, 75, 76, 80, 99, 126, 144, 193, 212, 224, 233, 235, 240, 246, 249, 252, 263, 264, 273, 275, 287, 292, 295, 298, 300, 338, 340, 357, 359, 360, 370, 371, 372, 405, 478, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 560, 562, 595, 596, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 759, 760, 768, 776, 788, 790, 791, 1037, 1044, 1045, 1046, 1047, 1061, 1096, 1123, 1124, 1125, 1130, 1132, 1135, 1164, 1170, 1191, 1193], "cluster_python_misc": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1090, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1150, 1151, 1153, 1157, 1164, 1167, 1174], "cluster_python_misc_ai": [29, 791, 1135, 1138, 1139, 1143, 1144, 1151], "machin": [29, 104, 112, 113, 126, 165, 175, 180, 194, 209, 225, 232, 233, 242, 243, 246, 248, 258, 261, 315, 323, 327, 331, 341, 369, 373, 393, 409, 411, 419, 427, 455, 459, 473, 554, 555, 791, 838, 865, 866, 871, 874, 877, 927, 934, 948, 949, 950, 951, 953, 954, 955, 997, 1012, 1015, 1022, 1036, 1135, 1139, 1143, 1151, 1192], "artifici": [29, 209, 234, 292, 323, 327, 455, 689, 791, 955, 1028, 1135, 1139, 1143, 1144, 1151], "intellig": [29, 173, 209, 249, 285, 292, 295, 305, 311, 323, 327, 345, 346, 376, 791, 809, 1033, 1037, 1135, 1139, 1143, 1144, 1151], "cluster_python_misc_panda": [29, 791, 1135, 1151, 1157], "panda": [29, 194, 205, 224, 230, 243, 256, 270, 273, 291, 294, 306, 323, 325, 327, 330, 334, 336, 347, 388, 479, 791, 1060, 1135, 1137, 1140, 1143, 1151], "cluster_python_db": [29, 791, 1093, 1095, 1096, 1135, 1147], "cluster_python_bas": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "fundament": [29, 61, 63, 75, 92, 196, 205, 208, 210, 212, 214, 217, 219, 224, 227, 230, 233, 236, 246, 252, 256, 264, 267, 356, 357, 358, 359, 360, 361, 370, 388, 389, 477, 507, 791, 816, 1037, 1044, 1045, 1046, 1047, 1051, 1070, 1079, 1084, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1147, 1150, 1151, 1157, 1164, 1165], "cluster_python_swdev": [29, 791, 1090, 1135, 1138, 1139, 1143, 1151, 1153, 1164, 1167, 1169, 1174], "cluster_python_swdev_pytest": [29, 791, 1135, 1164, 1169], "pytest": [29, 249, 259, 262, 270, 273, 282, 291, 299, 301, 306, 317, 320, 323, 324, 327, 328, 346, 378, 479, 791, 1125, 1133, 1134, 1135, 1164], "cluster_python_draft": [29, 791, 1090, 1135], "python_python_5550_xml_etre": [29, 791, 1135], "xml": [29, 131, 169, 170, 320, 341, 791, 1135, 1151], "elementtre": [29, 273, 791, 1135, 1151], "etre": [29, 273, 791, 1135, 1151], "python_advanced_modul": [29, 791, 1037, 1090, 1093, 1094, 1095, 1096, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1147, 1151, 1153, 1164, 1167, 1169, 1174], "gt": [29, 32, 35, 36, 53, 55, 56, 74, 75, 76, 89, 92, 127, 128, 129, 130, 132, 134, 135, 136, 137, 143, 162, 192, 195, 206, 211, 216, 223, 229, 230, 232, 237, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 356, 357, 358, 359, 360, 361, 364, 365, 370, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 484, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 711, 735, 736, 746, 751, 760, 768, 776, 788, 790, 791, 795, 798, 800, 803, 805, 808, 810, 814, 815, 817, 819, 821, 823, 829, 831, 833, 835, 842, 844, 847, 849, 853, 856, 859, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 941, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 977, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1147, 1150, 1151, 1153, 1157, 1164, 1167, 1169, 1174, 1175], "python_basics_python_0220_for": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1093, 1094, 1095, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1151], "loop": [29, 32, 34, 38, 42, 61, 63, 65, 91, 92, 99, 112, 113, 126, 131, 135, 144, 161, 166, 173, 188, 197, 209, 212, 214, 217, 218, 219, 222, 230, 232, 233, 234, 236, 240, 243, 246, 251, 252, 254, 256, 257, 262, 264, 266, 267, 269, 270, 272, 282, 285, 292, 295, 302, 305, 306, 311, 312, 320, 324, 328, 333, 334, 336, 338, 339, 340, 345, 346, 349, 350, 352, 356, 357, 358, 359, 360, 361, 362, 370, 375, 393, 396, 399, 408, 411, 423, 430, 431, 432, 439, 445, 449, 452, 453, 456, 457, 465, 469, 474, 475, 542, 543, 584, 595, 626, 631, 688, 695, 697, 723, 735, 758, 769, 788, 790, 791, 826, 836, 841, 855, 869, 871, 875, 882, 938, 960, 961, 962, 970, 996, 1000, 1006, 1009, 1010, 1037, 1038, 1041, 1042, 1047, 1059, 1093, 1094, 1095, 1096, 1098, 1100, 1106, 1108, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1147, 1151, 1153, 1189, 1190, 1191, 1200], "python_basics_python_0450_dictionari": [29, 92, 791, 1037, 1059, 1096, 1109, 1120, 1135], "python_exercises_legacy_dict_keyerror": [29, 791, 1096, 1105, 1109, 1135], "python_basics_python_0150_datatypes_overview_compound": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1093, 1094, 1095, 1096, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "python_exercises_legacy_uniq_gener": [29, 791, 1096, 1109, 1120, 1135], "uniq": [29, 192, 193, 210, 212, 224, 230, 240, 243, 246, 252, 256, 262, 264, 267, 285, 292, 305, 306, 311, 312, 328, 333, 334, 339, 340, 345, 346, 349, 350, 571, 791, 931, 1096, 1106, 1109, 1110, 1117, 1118, 1121, 1135], "python_exercises_legacy_passwd": [29, 791, 1096, 1109, 1120, 1135], "pars": [29, 192, 229, 230, 240, 241, 243, 246, 252, 256, 261, 262, 264, 270, 273, 301, 306, 323, 327, 356, 361, 374, 791, 1090, 1096, 1109, 1120, 1135, 1137, 1162], "passwd": [29, 102, 103, 126, 213, 223, 232, 245, 246, 248, 252, 253, 256, 261, 262, 264, 268, 270, 271, 279, 286, 288, 289, 293, 303, 307, 309, 310, 329, 335, 341, 347, 353, 354, 789, 791, 868, 870, 873, 875, 878, 880, 882, 893, 912, 915, 917, 918, 920, 923, 925, 929, 931, 934, 935, 945, 946, 954, 955, 959, 960, 965, 971, 991, 1005, 1033, 1035, 1082, 1086, 1096, 1109, 1120, 1135, 1165], "python_exercises_legacy_uniq_funct": [29, 230, 791, 1096, 1106, 1109, 1110, 1117, 1118, 1119, 1120, 1121, 1135], "python_advanced_python_1010_generators_yield": [29, 791, 1037, 1093, 1094, 1095, 1096, 1109, 1120, 1135, 1147], "python_exercises_legacy_python_1011_generators_yield": [29, 791, 1096, 1109, 1135], "fibonacci": [29, 193, 196, 212, 233, 246, 285, 299, 301, 302, 306, 312, 323, 324, 327, 702, 724, 791, 1040, 1041, 1042, 1096, 1109, 1135], "python_exercises_legacy_function_prim": [29, 230, 791, 1096, 1106, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "prime": [29, 38, 192, 193, 212, 216, 217, 219, 224, 230, 236, 240, 252, 256, 259, 264, 270, 285, 292, 305, 306, 311, 312, 333, 334, 339, 340, 345, 346, 349, 350, 352, 455, 791, 1096, 1106, 1109, 1110, 1112, 1117, 1118, 1119, 1120, 1121, 1135, 1200], "python_exercises_legacy_max_numbers_funct": [29, 230, 791, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "determin": [29, 104, 126, 166, 172, 196, 201, 203, 211, 212, 217, 219, 224, 230, 236, 240, 242, 243, 246, 252, 256, 262, 264, 267, 269, 270, 285, 292, 305, 306, 311, 312, 333, 334, 339, 340, 345, 346, 349, 350, 354, 673, 707, 708, 745, 791, 846, 868, 887, 888, 889, 890, 891, 892, 893, 930, 934, 943, 961, 998, 999, 1029, 1096, 1098, 1099, 1100, 1103, 1106, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1165, 1200], "python_basics_python_0270_funct": [29, 92, 230, 791, 1037, 1059, 1079, 1093, 1094, 1095, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147], "python_basics_python_0139_commandline_argv": [29, 92, 230, 370, 791, 1059, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "argument": [29, 57, 62, 92, 99, 126, 166, 172, 175, 178, 192, 193, 206, 209, 221, 230, 233, 240, 242, 246, 248, 249, 251, 252, 254, 256, 258, 259, 262, 263, 264, 265, 267, 270, 285, 286, 289, 292, 295, 299, 301, 302, 305, 306, 307, 311, 312, 320, 323, 324, 327, 328, 329, 333, 334, 339, 340, 345, 346, 349, 350, 370, 392, 393, 438, 445, 449, 452, 456, 465, 469, 474, 475, 479, 541, 573, 597, 607, 608, 697, 712, 732, 735, 745, 757, 788, 789, 790, 791, 796, 797, 898, 920, 934, 968, 970, 972, 975, 992, 1030, 1033, 1037, 1059, 1061, 1062, 1079, 1087, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1148, 1170, 1172], "sy": [29, 32, 92, 127, 139, 143, 174, 191, 193, 195, 196, 221, 223, 224, 230, 233, 239, 242, 246, 248, 253, 256, 258, 261, 262, 264, 265, 267, 268, 270, 283, 285, 286, 291, 292, 295, 301, 305, 306, 307, 311, 312, 323, 327, 329, 333, 334, 339, 340, 341, 345, 346, 349, 350, 351, 355, 356, 363, 370, 466, 479, 538, 554, 555, 791, 793, 797, 818, 895, 924, 935, 942, 943, 944, 960, 961, 962, 964, 968, 969, 970, 971, 972, 974, 976, 978, 979, 993, 1000, 1002, 1005, 1009, 1026, 1036, 1043, 1058, 1059, 1078, 1086, 1088, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1162, 1170, 1185], "argv": [29, 42, 50, 92, 175, 192, 193, 196, 206, 224, 230, 233, 234, 239, 242, 246, 248, 251, 252, 256, 258, 261, 262, 264, 267, 270, 285, 291, 292, 295, 301, 305, 306, 311, 312, 323, 327, 333, 334, 339, 340, 341, 345, 346, 349, 350, 355, 363, 370, 444, 479, 480, 502, 541, 791, 942, 968, 969, 970, 971, 972, 976, 979, 993, 1000, 1009, 1030, 1036, 1043, 1059, 1088, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1177, 1182], "python_exercises_legacy_mixed_list_interact": [29, 230, 791, 1096, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "interact": [29, 62, 87, 137, 139, 143, 148, 169, 180, 212, 213, 219, 230, 240, 242, 243, 246, 248, 256, 258, 261, 266, 285, 286, 292, 305, 306, 311, 312, 314, 333, 334, 339, 340, 345, 346, 349, 350, 791, 898, 946, 951, 954, 964, 1026, 1061, 1096, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135, 1142, 1150], "interpret": [29, 62, 169, 175, 193, 194, 205, 209, 212, 219, 230, 233, 240, 242, 243, 246, 248, 256, 258, 261, 265, 281, 282, 285, 291, 292, 305, 306, 307, 311, 312, 314, 323, 324, 328, 333, 334, 339, 340, 345, 346, 349, 350, 370, 455, 490, 494, 501, 505, 515, 529, 543, 595, 791, 838, 922, 944, 965, 1012, 1013, 1060, 1061, 1062, 1063, 1094, 1096, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1137, 1150, 1172, 1193], "python_basics_python_0160_boolean": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1070, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1151], "boolean": [29, 58, 86, 92, 193, 194, 210, 212, 214, 217, 218, 219, 230, 236, 240, 243, 244, 246, 247, 248, 252, 254, 256, 257, 262, 263, 264, 266, 267, 269, 270, 285, 292, 295, 305, 306, 311, 312, 333, 334, 336, 339, 340, 342, 345, 346, 349, 350, 351, 356, 357, 358, 359, 360, 361, 370, 375, 399, 422, 438, 791, 985, 1037, 1059, 1067, 1070, 1071, 1082, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1149, 1151, 1200], "python_basics_python_0140_vari": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "python_basics_python_0150_datatypes_overview": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "python_exercises_legacy_join_funct": [29, 230, 791, 1096, 1106, 1109, 1110, 1117, 1118, 1120, 1121, 1135], "join": [29, 35, 62, 184, 212, 230, 232, 233, 238, 240, 242, 245, 246, 248, 253, 257, 263, 271, 286, 293, 303, 307, 313, 329, 336, 341, 347, 352, 355, 364, 479, 572, 695, 756, 762, 767, 769, 791, 981, 986, 1009, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1135, 1170], "python_exercises_legacy_mixed_list_execut": [29, 230, 791, 1096, 1106, 1109, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "execut": [29, 44, 62, 110, 112, 113, 126, 154, 166, 169, 173, 175, 183, 184, 188, 193, 200, 205, 212, 219, 225, 230, 240, 242, 243, 246, 248, 256, 258, 261, 285, 292, 305, 306, 311, 312, 315, 316, 331, 332, 333, 334, 339, 340, 345, 346, 349, 350, 355, 356, 363, 370, 392, 393, 427, 429, 433, 455, 460, 464, 473, 481, 484, 485, 497, 516, 519, 526, 533, 538, 552, 581, 605, 620, 723, 789, 791, 836, 838, 864, 865, 866, 873, 875, 880, 885, 886, 894, 898, 945, 954, 983, 996, 1010, 1012, 1013, 1014, 1015, 1018, 1022, 1024, 1028, 1030, 1036, 1040, 1044, 1047, 1060, 1070, 1071, 1074, 1094, 1096, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1146, 1149, 1178, 1180, 1192, 1203, 1204], "python_basics_python_0120_helloworld": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "world": [29, 80, 92, 133, 166, 169, 170, 173, 178, 184, 203, 212, 216, 217, 219, 223, 230, 234, 236, 238, 240, 242, 243, 246, 248, 251, 252, 253, 255, 256, 262, 263, 264, 265, 267, 268, 270, 273, 285, 286, 292, 295, 305, 306, 311, 312, 325, 333, 334, 335, 339, 340, 345, 346, 349, 350, 351, 356, 357, 358, 359, 360, 361, 365, 370, 403, 408, 412, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 480, 485, 493, 516, 521, 523, 694, 697, 735, 761, 769, 788, 790, 791, 795, 798, 800, 803, 805, 808, 815, 819, 823, 829, 835, 840, 842, 847, 850, 853, 856, 859, 876, 889, 901, 934, 972, 983, 998, 999, 1012, 1024, 1026, 1028, 1029, 1030, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1063, 1064, 1070, 1073, 1075, 1079, 1080, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1147, 1150, 1151, 1157, 1164, 1186, 1190, 1200], "python_exercises_legacy_revert": [29, 230, 791, 1096, 1106, 1109, 1117, 1120, 1135], "revert": [29, 143, 173, 230, 791, 816, 834, 996, 1055, 1096, 1106, 1109, 1120, 1135], "line": [29, 34, 35, 36, 38, 62, 65, 124, 132, 154, 169, 170, 173, 175, 178, 188, 192, 195, 196, 209, 213, 223, 225, 229, 230, 232, 233, 238, 239, 242, 243, 245, 246, 248, 249, 251, 252, 253, 256, 258, 259, 261, 262, 264, 265, 268, 270, 271, 273, 274, 285, 286, 291, 292, 293, 295, 299, 303, 305, 306, 307, 311, 312, 313, 325, 329, 333, 335, 339, 340, 341, 345, 346, 347, 349, 350, 351, 361, 370, 393, 399, 400, 408, 412, 415, 417, 423, 432, 434, 439, 445, 449, 452, 456, 461, 465, 468, 469, 471, 474, 475, 479, 482, 485, 492, 522, 523, 673, 676, 679, 697, 735, 788, 790, 791, 807, 811, 818, 820, 838, 865, 866, 869, 878, 880, 882, 904, 925, 927, 929, 930, 931, 935, 939, 942, 943, 944, 986, 996, 1027, 1033, 1034, 1035, 1038, 1039, 1040, 1048, 1049, 1055, 1056, 1063, 1077, 1078, 1080, 1082, 1084, 1086, 1087, 1088, 1094, 1096, 1109, 1115, 1120, 1134, 1135, 1137, 1140, 1145, 1150, 1158, 1159, 1171], "python_exercises_legacy_wc": [29, 230, 791, 1096, 1106, 1109, 1117, 1120, 1121, 1135], "word": [29, 43, 166, 173, 193, 201, 205, 209, 212, 219, 224, 230, 234, 240, 243, 251, 252, 256, 259, 261, 262, 264, 267, 269, 270, 277, 278, 280, 285, 292, 299, 305, 306, 307, 311, 312, 324, 333, 334, 337, 338, 339, 340, 345, 346, 349, 350, 370, 375, 400, 453, 495, 500, 573, 673, 751, 760, 768, 790, 791, 878, 880, 927, 999, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1122, 1135], "charact": [29, 175, 191, 216, 221, 225, 230, 234, 238, 245, 251, 261, 268, 271, 289, 292, 307, 313, 329, 393, 394, 400, 408, 411, 417, 418, 423, 432, 439, 445, 449, 452, 455, 456, 460, 462, 465, 469, 474, 475, 660, 697, 735, 788, 789, 790, 791, 800, 805, 808, 815, 819, 829, 832, 840, 842, 847, 853, 854, 856, 859, 878, 880, 898, 920, 934, 942, 997, 1047, 1066, 1080, 1081, 1082, 1086, 1088, 1096, 1099, 1106, 1109, 1117, 1120, 1135, 1150, 1177], "python_basics_python_0500_fil": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1151], "python_exercises_legacy_python_0350_exercis": [29, 230, 791, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1135], "right": [29, 34, 35, 36, 38, 42, 62, 82, 86, 131, 154, 166, 172, 173, 175, 178, 193, 213, 224, 225, 230, 235, 240, 253, 255, 261, 265, 273, 286, 299, 307, 350, 356, 362, 394, 414, 415, 416, 422, 433, 463, 493, 544, 552, 599, 614, 616, 617, 695, 707, 723, 749, 754, 759, 771, 791, 799, 818, 822, 838, 857, 880, 881, 883, 898, 953, 983, 1033, 1055, 1066, 1072, 1096, 1106, 1109, 1117, 1120, 1121, 1135], "justifi": [29, 193, 205, 230, 240, 261, 307, 394, 761, 791, 1060, 1096, 1106, 1109, 1117, 1120, 1121, 1135], "python_exercises_legacy_distil": [29, 230, 791, 1096, 1106, 1109, 1120, 1135], "elimin": [29, 58, 166, 230, 252, 259, 261, 262, 264, 270, 285, 292, 305, 311, 312, 333, 339, 340, 345, 346, 349, 350, 522, 567, 695, 758, 776, 777, 791, 931, 1038, 1096, 1109, 1120, 1135], "empti": [29, 38, 42, 48, 50, 173, 176, 183, 191, 211, 213, 230, 242, 245, 252, 253, 259, 261, 262, 264, 265, 268, 270, 271, 274, 285, 286, 291, 292, 293, 303, 305, 307, 311, 312, 329, 333, 335, 339, 340, 341, 345, 346, 347, 349, 350, 365, 399, 451, 590, 599, 600, 604, 614, 616, 632, 633, 651, 669, 689, 695, 744, 754, 755, 767, 789, 791, 801, 838, 865, 866, 878, 882, 892, 929, 938, 951, 985, 1005, 1043, 1084, 1096, 1109, 1110, 1114, 1120, 1135], "comment": [29, 34, 35, 36, 38, 44, 121, 122, 166, 175, 210, 230, 231, 233, 246, 252, 254, 258, 259, 262, 264, 269, 270, 285, 292, 294, 305, 311, 312, 333, 339, 340, 345, 346, 349, 350, 370, 393, 438, 457, 485, 522, 523, 551, 791, 943, 1081, 1096, 1109, 1120, 1135, 1150], "python_basics_python_0210_indexing_sl": [29, 92, 791, 1059, 1096, 1109, 1120, 1135, 1151, 1157], "python_exercises_legacy_cmdline_digit": [29, 230, 370, 791, 1096, 1104, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135], "digit": [29, 166, 192, 193, 212, 219, 224, 230, 240, 243, 252, 256, 261, 262, 264, 265, 267, 269, 270, 285, 292, 305, 306, 307, 311, 312, 324, 333, 334, 335, 339, 340, 345, 346, 349, 350, 351, 355, 375, 401, 410, 791, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135], "python_exercises_legacy_while_prim": [29, 230, 791, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1135], "python_basics_python_0193_whil": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1093, 1094, 1095, 1096, 1098, 1100, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1151], "python_exercises_legacy_for_prim": [29, 230, 791, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "python_basics_python_0225_rang": [29, 92, 230, 791, 1037, 1059, 1093, 1094, 1095, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135, 1147], "python_exercises_legacy_max_numb": [29, 230, 791, 1096, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1135], "python_basics_python_0170_if": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1070, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1151], "statement": [29, 54, 92, 112, 113, 116, 120, 193, 205, 209, 210, 211, 212, 217, 219, 224, 230, 233, 234, 236, 240, 243, 246, 252, 256, 262, 264, 267, 270, 276, 282, 285, 292, 295, 299, 301, 302, 305, 306, 311, 312, 317, 320, 323, 324, 327, 328, 333, 334, 339, 340, 345, 346, 349, 350, 356, 357, 358, 359, 360, 361, 370, 375, 392, 395, 399, 412, 425, 427, 428, 431, 432, 437, 439, 445, 449, 452, 456, 459, 465, 469, 474, 475, 651, 677, 696, 697, 735, 788, 790, 791, 799, 871, 911, 997, 1018, 1032, 1035, 1037, 1038, 1043, 1047, 1049, 1059, 1066, 1069, 1071, 1078, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1147, 1151, 1153, 1164, 1167, 1170, 1174, 1200], "python_basics_python_0300_str": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151], "python_basics_python_0310_strings_format": [29, 92, 230, 791, 1059, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1135], "python_basics_python_0320_strings_method": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151], "method": [29, 42, 43, 54, 55, 57, 62, 71, 72, 75, 92, 99, 108, 109, 112, 113, 123, 131, 137, 139, 143, 144, 178, 209, 210, 211, 212, 214, 217, 230, 231, 233, 235, 240, 243, 244, 246, 251, 252, 254, 256, 257, 260, 262, 263, 264, 265, 267, 270, 272, 282, 285, 287, 291, 292, 295, 297, 299, 300, 301, 302, 305, 306, 308, 311, 312, 314, 317, 320, 323, 324, 326, 327, 328, 330, 333, 334, 336, 338, 339, 340, 342, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 374, 375, 451, 477, 497, 499, 501, 505, 515, 522, 523, 541, 543, 548, 553, 554, 555, 560, 562, 567, 573, 586, 588, 595, 596, 597, 600, 609, 621, 623, 624, 640, 646, 650, 656, 659, 662, 663, 666, 667, 668, 669, 672, 677, 678, 680, 683, 684, 687, 688, 689, 690, 691, 692, 695, 704, 717, 734, 735, 738, 742, 751, 759, 760, 768, 769, 775, 776, 782, 785, 786, 788, 789, 790, 791, 799, 801, 806, 807, 816, 818, 828, 840, 851, 983, 1033, 1034, 1037, 1040, 1044, 1048, 1049, 1050, 1051, 1052, 1056, 1059, 1064, 1073, 1076, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1146, 1150, 1151, 1156, 1159, 1161, 1193, 1200, 1207], "python_exercises_csv_csv_db": [29, 791, 1093, 1095, 1096, 1135], "sqlite3": [29, 87, 209, 240, 246, 252, 259, 791, 1095, 1096, 1135, 1146, 1147, 1151], "python_db_sqlite3": [29, 791, 1093, 1095, 1096, 1135, 1147], "dbapi": [29, 209, 240, 252, 791, 1093, 1095, 1096, 1135, 1147], "python_exercises_csv_csv_modul": [29, 791, 1094, 1095, 1096, 1135], "python_misc_csv": [29, 791, 1094, 1095, 1096, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1151], "python_exercises_herdt_while_even_numb": [29, 791, 1096, 1098, 1100, 1135], "python_exercises_herdt_username_password": [29, 791, 1096, 1098, 1100, 1103, 1135], "usernam": [29, 188, 217, 225, 246, 367, 791, 865, 873, 882, 945, 955, 1082, 1096, 1098, 1100, 1115, 1135, 1200], "password": [29, 180, 183, 188, 213, 217, 225, 246, 367, 370, 375, 791, 873, 895, 935, 945, 946, 951, 1096, 1098, 1100, 1115, 1135, 1148, 1200], "python_exercises_herdt_max_numb": [29, 791, 1096, 1098, 1099, 1100, 1101, 1103, 1135], "python_exercises_herdt_swap": [29, 791, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1135], "python_exercises_herdt_greet": [29, 791, 1096, 1098, 1099, 1100, 1103, 1135], "python_exercises_herdt_boolean": [29, 791, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1135], "express": [29, 61, 63, 192, 208, 209, 211, 212, 222, 232, 241, 246, 247, 249, 253, 272, 273, 275, 276, 277, 278, 281, 282, 287, 306, 307, 312, 325, 336, 342, 393, 395, 399, 403, 412, 413, 415, 416, 417, 420, 422, 425, 427, 428, 430, 432, 438, 439, 445, 449, 452, 456, 465, 469, 474, 475, 479, 494, 503, 515, 516, 519, 523, 529, 530, 543, 551, 595, 597, 675, 697, 708, 712, 717, 735, 788, 790, 791, 898, 931, 1012, 1032, 1042, 1048, 1069, 1071, 1078, 1080, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1133, 1134, 1135, 1137, 1158, 1189, 1190, 1191], "python_exercises_userdb_user_class_person": [29, 791, 1096, 1130, 1132, 1135], "awai": [29, 62, 79, 86, 172, 173, 174, 178, 197, 213, 234, 240, 248, 282, 285, 305, 306, 311, 317, 320, 333, 339, 340, 345, 349, 359, 491, 754, 791, 877, 898, 1009, 1033, 1051, 1096, 1130, 1135], "raw": [29, 62, 139, 218, 221, 224, 229, 241, 244, 253, 257, 263, 277, 278, 282, 284, 285, 289, 291, 305, 306, 311, 314, 317, 320, 324, 333, 339, 340, 345, 349, 355, 365, 391, 479, 480, 486, 509, 516, 554, 634, 755, 791, 874, 1051, 1067, 1072, 1088, 1096, 1130, 1135], "python_exercises_userdb_userdb_modul": [29, 791, 1096, 1130, 1131, 1132, 1133, 1134, 1135], "refactor": [29, 43, 55, 139, 170, 259, 262, 267, 270, 282, 285, 301, 305, 306, 311, 312, 333, 334, 340, 345, 346, 349, 350, 438, 478, 495, 742, 791, 799, 805, 815, 819, 829, 840, 842, 847, 853, 856, 859, 934, 1051, 1096, 1130, 1131, 1132, 1133, 1135], "both": [29, 54, 62, 67, 87, 126, 127, 129, 135, 139, 143, 163, 173, 175, 180, 193, 205, 211, 232, 248, 251, 259, 262, 265, 267, 270, 282, 285, 297, 305, 306, 311, 312, 333, 334, 340, 345, 346, 349, 350, 471, 477, 479, 480, 505, 551, 553, 573, 605, 613, 686, 742, 753, 791, 809, 832, 838, 877, 978, 982, 986, 999, 1022, 1028, 1035, 1048, 1051, 1055, 1062, 1069, 1076, 1080, 1085, 1096, 1099, 1102, 1108, 1130, 1131, 1132, 1133, 1135, 1143, 1170, 1177, 1190], "Into": [29, 99, 251, 256, 259, 262, 267, 270, 282, 285, 291, 305, 306, 311, 312, 333, 334, 340, 345, 346, 349, 350, 408, 423, 432, 438, 439, 445, 449, 452, 456, 465, 469, 473, 474, 475, 542, 543, 595, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 697, 735, 788, 790, 791, 1026, 1051, 1096, 1130, 1131, 1132, 1133, 1135], "python_exercises_userdb_user_json": [29, 791, 1096, 1130, 1131, 1132, 1133, 1135], "json": [29, 80, 87, 94, 126, 131, 134, 170, 206, 212, 222, 236, 240, 241, 249, 250, 258, 261, 262, 266, 269, 275, 284, 317, 319, 320, 322, 324, 327, 341, 390, 791, 1051, 1096, 1130, 1131, 1132, 1135, 1153, 1166], "python_advanced_oo_namedtupl": [29, 791, 1037, 1051, 1096, 1130, 1132, 1135], "namedtupl": [29, 209, 217, 224, 239, 240, 242, 248, 258, 261, 282, 299, 301, 302, 306, 317, 320, 323, 324, 327, 328, 340, 346, 350, 351, 791, 1037, 1051, 1096, 1130, 1132, 1135, 1155, 1200], "python_exercises_userdb_csvread": [29, 791, 1096, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "reader": [29, 170, 245, 259, 262, 267, 270, 282, 285, 305, 306, 311, 312, 333, 334, 340, 341, 345, 346, 349, 350, 460, 479, 502, 791, 882, 1048, 1051, 1078, 1096, 1126, 1127, 1130, 1131, 1132, 1133, 1134, 1135], "python_exercises_userdb_csvdictreader_funct": [29, 791, 1096, 1127, 1130, 1131, 1132, 1133, 1134, 1135], "dictread": [29, 224, 245, 246, 259, 262, 267, 270, 282, 285, 305, 306, 311, 312, 329, 333, 334, 340, 345, 346, 349, 350, 791, 1051, 1094, 1096, 1130, 1131, 1132, 1133, 1134, 1135], "python_exercises_userdb_csvreader_funct": [29, 791, 1096, 1129, 1130, 1135], "python_exercises_userdb_mqtt_publish_csv": [29, 791, 1096, 1130, 1131, 1135], "mqtt": [29, 124, 130, 131, 133, 136, 222, 224, 238, 240, 249, 262, 263, 267, 301, 302, 317, 320, 323, 376, 379, 381, 791, 1051, 1092, 1096, 1130, 1133, 1135, 1151], "publish": [29, 124, 134, 177, 179, 188, 249, 261, 262, 282, 324, 367, 376, 378, 791, 1051, 1096, 1130, 1133, 1135, 1137, 1168], "python_exercises_userdb_csvdictread": [29, 791, 1096, 1126, 1127, 1130, 1131, 1132, 1133, 1134, 1135], "python_exercises_sensors_sensor_const": [29, 791, 1096, 1123, 1124, 1125, 1135], "python_exercises_sensors_project_setup": [29, 791, 1096, 1123, 1124, 1125, 1135], "setup": [29, 108, 126, 139, 148, 153, 161, 170, 188, 200, 204, 205, 243, 245, 261, 268, 271, 273, 278, 280, 286, 289, 293, 303, 307, 329, 335, 341, 347, 367, 370, 375, 376, 461, 494, 508, 519, 521, 535, 549, 552, 554, 555, 688, 690, 791, 806, 832, 929, 934, 942, 944, 959, 961, 972, 1009, 1013, 1017, 1019, 1022, 1023, 1033, 1040, 1048, 1092, 1096, 1123, 1135, 1171, 1181, 1183], "python_advanced_oo_method": [29, 791, 1037, 1051, 1096, 1123, 1124, 1125, 1135], "python_advanced_context_mgr": [29, 791, 1037, 1135], "python_advanced_except": [29, 791, 1037, 1135], "python_advanced_iteration_gener": [29, 791, 1037, 1135], "comprehens": [29, 62, 70, 193, 194, 206, 209, 212, 218, 232, 233, 234, 241, 246, 247, 249, 250, 251, 254, 257, 263, 266, 282, 285, 287, 294, 299, 305, 306, 311, 312, 323, 324, 326, 327, 328, 333, 334, 336, 339, 340, 342, 345, 346, 348, 349, 350, 740, 791, 809, 826, 834, 1037, 1042, 1135, 1156], "python_advanced_oo_classes_and_dict": [29, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1096, 1123, 1124, 1125, 1130, 1132, 1135, 1164], "python_advanced_comprehens": [29, 791, 1037, 1135], "python_advanced_exec": [29, 791, 1037, 1135], "python_advanced_decor": [29, 791, 1037, 1135], "decor": [29, 61, 63, 193, 205, 208, 209, 224, 233, 249, 259, 273, 328, 494, 501, 515, 529, 543, 595, 791, 1033, 1037, 1048, 1055, 1056, 1058, 1079, 1135, 1137, 1170, 1193], "python_advanced_closur": [29, 791, 1037, 1135], "closur": [29, 61, 62, 63, 192, 205, 209, 217, 218, 233, 246, 249, 259, 292, 295, 324, 328, 739, 791, 1034, 1037, 1077, 1079, 1135, 1200], "python_advanced_stararg": [29, 791, 1037, 1135], "keyword": [29, 39, 62, 153, 168, 206, 209, 210, 211, 212, 214, 233, 235, 249, 254, 259, 261, 282, 285, 286, 292, 295, 299, 301, 302, 305, 307, 311, 317, 320, 323, 324, 327, 328, 370, 437, 467, 610, 611, 613, 631, 682, 742, 791, 987, 1033, 1034, 1035, 1037, 1061, 1077, 1079, 1092, 1135, 1148, 1187, 1189], "python_advanced_oo_inherit": [29, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1135, 1164], "inherit": [29, 71, 75, 108, 144, 190, 200, 209, 233, 246, 263, 265, 298, 299, 300, 301, 302, 306, 323, 324, 327, 328, 338, 346, 379, 501, 515, 543, 551, 553, 593, 595, 596, 620, 669, 672, 692, 734, 776, 790, 791, 830, 870, 873, 876, 897, 899, 1006, 1035, 1037, 1045, 1046, 1047, 1048, 1051, 1053, 1056, 1135, 1164, 1206], "python_basics_python_0200_sequential_typ": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1093, 1094, 1095, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157], "sequenti": [29, 62, 92, 108, 110, 209, 210, 212, 214, 217, 218, 219, 222, 230, 235, 240, 243, 246, 251, 252, 254, 256, 264, 266, 267, 270, 274, 282, 285, 292, 295, 298, 300, 302, 303, 305, 306, 311, 312, 323, 324, 327, 328, 333, 334, 336, 338, 339, 340, 345, 346, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 375, 468, 543, 556, 560, 595, 630, 640, 648, 659, 663, 692, 791, 942, 944, 974, 1037, 1042, 1059, 1093, 1094, 1095, 1096, 1106, 1109, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1200], "python_advanced_multithreading_bas": [29, 791, 1037, 1044, 1045, 1046, 1047, 1135], "python_advanced_multithreading_mutex": [29, 791, 1037, 1045, 1046, 1047, 1135], "race": [29, 74, 75, 76, 80, 89, 173, 191, 251, 277, 278, 280, 289, 300, 301, 302, 323, 324, 327, 337, 378, 379, 385, 454, 464, 573, 745, 761, 768, 790, 791, 815, 819, 840, 842, 847, 851, 853, 856, 859, 934, 964, 974, 975, 980, 988, 989, 995, 1037, 1045, 1047, 1135, 1195, 1205, 1206], "condit": [29, 74, 75, 76, 80, 89, 91, 143, 173, 184, 191, 232, 251, 271, 277, 278, 280, 289, 300, 301, 302, 323, 324, 327, 337, 378, 379, 385, 393, 395, 399, 422, 423, 425, 426, 428, 430, 432, 439, 445, 449, 452, 454, 456, 464, 465, 469, 474, 475, 482, 487, 488, 489, 573, 590, 679, 697, 735, 745, 755, 761, 768, 769, 788, 790, 791, 815, 819, 840, 842, 847, 851, 853, 855, 856, 859, 934, 964, 970, 974, 975, 980, 988, 989, 991, 995, 1037, 1045, 1047, 1070, 1071, 1086, 1135, 1141, 1156, 1195, 1205, 1206], "mutex": [29, 74, 75, 76, 78, 80, 89, 91, 191, 220, 251, 276, 277, 278, 280, 289, 300, 301, 302, 323, 324, 327, 337, 378, 379, 385, 573, 762, 764, 766, 767, 768, 790, 791, 815, 819, 836, 840, 841, 842, 847, 853, 856, 857, 859, 934, 975, 980, 985, 988, 989, 1037, 1045, 1047, 1135, 1190, 1195, 1206], "python_advanced_multithreading_exam_quest": [29, 791, 1037, 1045, 1047, 1135], "exam": [29, 98, 99, 108, 234, 250, 279, 288, 309, 353, 372, 384, 791, 868, 934, 975, 995, 1037, 1045, 1135], "python_advanced_oo_constructor": [29, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1135, 1164], "constructor": [29, 43, 53, 56, 72, 99, 112, 113, 121, 126, 131, 134, 137, 139, 143, 144, 200, 206, 212, 232, 233, 235, 246, 251, 259, 263, 282, 285, 287, 292, 295, 298, 299, 300, 301, 302, 303, 305, 306, 311, 317, 320, 323, 324, 327, 328, 333, 338, 339, 340, 345, 346, 349, 350, 372, 373, 374, 447, 501, 515, 541, 543, 546, 549, 553, 554, 573, 582, 588, 595, 596, 597, 603, 620, 651, 667, 668, 677, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 695, 703, 704, 705, 707, 733, 735, 751, 754, 755, 756, 760, 765, 766, 767, 768, 769, 776, 788, 790, 791, 797, 799, 830, 983, 1037, 1044, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1067, 1135, 1164, 1170, 1182, 1190], "python_advanced_oo_properti": [29, 791, 1037, 1051, 1135], "properti": [29, 40, 193, 209, 233, 246, 263, 265, 282, 286, 299, 301, 302, 306, 316, 317, 320, 323, 324, 327, 328, 332, 340, 346, 350, 374, 483, 484, 485, 490, 493, 791, 1037, 1051, 1135, 1176, 1179], "python_advanced_oo_operator_overload": [29, 791, 1037, 1051, 1135], "overload": [29, 99, 144, 192, 200, 209, 235, 263, 298, 299, 300, 301, 302, 323, 327, 328, 330, 337, 346, 463, 543, 551, 560, 562, 595, 597, 618, 621, 622, 624, 630, 640, 646, 650, 651, 659, 662, 663, 677, 678, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 703, 704, 708, 735, 751, 760, 768, 788, 790, 791, 797, 1037, 1051, 1135, 1156, 1189], "python_advanced_oo_abc": [29, 791, 1037, 1051, 1135], "abstract": [29, 68, 80, 86, 209, 249, 281, 298, 299, 300, 301, 302, 323, 324, 327, 328, 346, 374, 438, 477, 479, 494, 501, 505, 507, 509, 515, 517, 529, 543, 553, 595, 630, 669, 670, 747, 779, 791, 871, 875, 944, 959, 1037, 1051, 1135, 1193, 1195], "abc": [29, 32, 192, 206, 209, 211, 216, 221, 223, 229, 232, 234, 238, 242, 245, 248, 249, 253, 255, 258, 261, 265, 268, 271, 274, 282, 283, 286, 293, 299, 301, 302, 303, 307, 313, 317, 320, 323, 324, 325, 327, 328, 329, 335, 341, 346, 347, 351, 357, 365, 479, 553, 622, 643, 660, 662, 779, 791, 1037, 1051, 1067, 1135, 1159], "duck": [29, 32, 208, 209, 263, 282, 299, 301, 302, 306, 323, 324, 327, 328, 338, 346, 494, 553, 695, 697, 735, 743, 744, 749, 755, 776, 781, 788, 790, 791, 1037, 1044, 1051, 1135, 1137, 1142, 1190], "python_advanced_oo_str_repr": [29, 791, 1037, 1051, 1135], "str": [29, 154, 192, 195, 206, 216, 221, 223, 224, 229, 232, 234, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 282, 283, 285, 286, 290, 291, 292, 293, 295, 297, 299, 301, 302, 303, 305, 306, 307, 311, 313, 317, 318, 320, 321, 323, 324, 325, 327, 328, 329, 333, 335, 339, 340, 341, 345, 346, 347, 349, 351, 355, 361, 364, 365, 366, 370, 443, 461, 479, 528, 533, 614, 615, 616, 617, 732, 744, 791, 1035, 1037, 1049, 1051, 1052, 1055, 1064, 1066, 1067, 1078, 1082, 1086, 1094, 1102, 1104, 1135, 1150, 1156, 1161, 1162], "repr": [29, 223, 242, 248, 258, 261, 265, 268, 271, 282, 285, 286, 292, 295, 299, 301, 302, 305, 306, 307, 311, 317, 318, 320, 323, 324, 327, 328, 333, 339, 345, 346, 349, 791, 1035, 1037, 1051, 1052, 1135], "python_misc_import": [29, 791, 1090, 1135, 1138, 1139, 1143, 1151, 1153, 1164, 1167, 1174], "incomplet": [29, 116, 119, 203, 242, 248, 258, 261, 265, 488, 595, 670, 776, 791, 941, 1090, 1135, 1138, 1139, 1143, 1151, 1153, 1164, 1167, 1174, 1175], "python_misc_mqtt": [29, 791, 1135, 1151, 1153], "python_swdev_venv": [29, 791, 1090, 1135, 1138, 1139, 1143, 1151, 1153, 1164, 1174], "python_misc_vscod": [29, 791, 1135, 1151], "visual": [29, 80, 106, 200, 205, 209, 210, 212, 214, 225, 234, 235, 240, 243, 256, 262, 270, 273, 285, 289, 292, 295, 299, 305, 306, 311, 312, 333, 334, 339, 340, 345, 349, 350, 370, 375, 390, 791, 877, 943, 1014, 1060, 1094, 1135, 1151], "studio": [29, 106, 200, 205, 209, 210, 212, 214, 225, 234, 235, 240, 243, 256, 262, 270, 285, 289, 292, 295, 299, 305, 306, 311, 312, 333, 334, 339, 340, 345, 349, 350, 370, 375, 390, 791, 877, 1060, 1135, 1151], "python_misc_encod": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151], "encod": [29, 43, 92, 192, 209, 210, 212, 214, 230, 233, 240, 242, 245, 248, 249, 252, 258, 259, 261, 267, 269, 272, 286, 290, 291, 293, 306, 307, 314, 324, 325, 327, 328, 330, 335, 341, 347, 355, 356, 357, 358, 359, 360, 361, 375, 479, 791, 1037, 1059, 1067, 1072, 1086, 1094, 1095, 1096, 1106, 1109, 1117, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1145, 1151, 1153], "python_misc_ai_linear_regress": [29, 791, 1135, 1138, 1139, 1143, 1151], "linear": [29, 194, 196, 206, 209, 211, 229, 237, 292, 323, 327, 446, 468, 620, 745, 791, 874, 943, 1009, 1071, 1135, 1138, 1139, 1144, 1151], "regress": [29, 209, 261, 292, 323, 327, 791, 1135, 1138, 1139, 1144, 1151], "python_misc_ai_machine_learning_intro": [29, 791, 1135, 1138, 1139, 1143, 1144, 1151], "concept": [29, 80, 99, 100, 101, 125, 126, 148, 149, 173, 183, 197, 205, 209, 211, 213, 215, 225, 276, 279, 288, 289, 292, 309, 323, 327, 353, 372, 373, 388, 391, 438, 461, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 637, 694, 735, 745, 768, 790, 791, 861, 865, 866, 867, 868, 871, 877, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 979, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1066, 1074, 1084, 1135, 1138, 1139, 1143, 1150, 1151, 1153, 1205], "terminologi": [29, 100, 101, 126, 148, 149, 179, 197, 209, 244, 279, 288, 289, 292, 309, 323, 327, 353, 428, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 610, 768, 790, 791, 861, 865, 866, 867, 868, 871, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 927, 928, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 989, 992, 995, 996, 997, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1135, 1138, 1139, 1143, 1151, 1208], "python_misc_ai_k_mean": [29, 791, 1135, 1138, 1139, 1151], "python_misc_pandas_mod_col": [29, 791, 1135, 1151, 1157], "ad": [29, 32, 33, 39, 87, 127, 131, 144, 179, 183, 184, 185, 188, 193, 213, 225, 235, 291, 292, 295, 299, 324, 345, 349, 350, 367, 418, 437, 459, 486, 496, 500, 505, 614, 616, 617, 652, 706, 742, 781, 782, 791, 807, 942, 944, 994, 998, 999, 1034, 1052, 1067, 1086, 1135, 1151, 1157, 1158, 1162, 1171], "modifi": [29, 42, 77, 90, 112, 113, 127, 131, 142, 144, 175, 180, 188, 191, 193, 213, 232, 289, 291, 292, 295, 299, 300, 301, 302, 323, 324, 345, 349, 350, 381, 396, 398, 404, 441, 453, 460, 477, 479, 481, 490, 500, 502, 505, 521, 522, 542, 551, 554, 555, 557, 558, 559, 571, 584, 587, 597, 604, 607, 608, 610, 613, 625, 677, 681, 683, 686, 689, 703, 717, 740, 745, 757, 768, 770, 785, 786, 789, 790, 791, 811, 826, 846, 865, 866, 878, 883, 934, 947, 951, 956, 975, 983, 989, 1027, 1028, 1034, 1036, 1047, 1068, 1112, 1116, 1134, 1135, 1151, 1157, 1159, 1202, 1206], "column": [29, 62, 116, 120, 123, 166, 175, 178, 193, 196, 242, 261, 290, 291, 292, 293, 295, 299, 324, 325, 329, 335, 345, 347, 349, 350, 468, 479, 791, 878, 883, 894, 1094, 1106, 1118, 1135, 1142, 1145, 1151, 1157], "python_misc_pandas_bas": [29, 791, 1135, 1151, 1157], "datafram": [29, 291, 292, 293, 295, 299, 302, 324, 329, 345, 349, 350, 479, 791, 1135, 1140, 1143, 1151, 1154, 1156, 1157, 1158, 1160, 1161], "python_misc_pandas_add_row": [29, 791, 1135, 1151, 1157], "row": [29, 174, 196, 212, 232, 245, 249, 251, 253, 265, 290, 291, 292, 295, 299, 312, 324, 325, 329, 335, 345, 347, 349, 350, 426, 468, 791, 878, 983, 1035, 1054, 1074, 1094, 1126, 1128, 1135, 1142, 1145, 1149, 1151, 1155, 1156, 1157, 1161], "python_misc_pandas_filt": [29, 791, 1135, 1151, 1157], "python_misc_pandas_index": [29, 791, 1135, 1151, 1157], "python_misc_pandas_iloc": [29, 791, 1135, 1151, 1157], "select": [29, 62, 172, 173, 175, 179, 232, 237, 245, 262, 292, 295, 324, 345, 349, 350, 416, 438, 791, 838, 882, 939, 944, 978, 979, 998, 1001, 1003, 1006, 1026, 1094, 1135, 1140, 1149, 1151, 1157, 1159, 1170, 1178, 1205, 1207], "iloc": [29, 292, 293, 295, 297, 299, 324, 329, 345, 349, 350, 479, 791, 1135, 1151, 1155, 1157, 1160], "python_misc_pandas_loc": [29, 791, 1135, 1151, 1157], "loc": [29, 193, 286, 290, 291, 292, 293, 295, 297, 299, 324, 345, 349, 350, 454, 791, 983, 1046, 1135, 1151, 1154, 1155, 1156, 1157, 1158], "python_db_postgr": [29, 791, 1135, 1147], "postgresql": [29, 791, 1135, 1146, 1147], "python_db_dbapi2": [29, 791, 1093, 1095, 1096, 1135, 1147], "python_basics_python_0250_refs_flat_deep_copi": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1059, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151], "mutabl": [29, 92, 205, 209, 210, 212, 214, 217, 218, 224, 230, 231, 240, 243, 244, 246, 247, 248, 249, 254, 256, 257, 260, 263, 267, 269, 270, 272, 275, 285, 287, 292, 294, 295, 299, 301, 302, 304, 305, 306, 308, 311, 312, 314, 323, 324, 326, 327, 328, 330, 333, 336, 339, 340, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 370, 745, 791, 1037, 1059, 1068, 1072, 1094, 1095, 1096, 1106, 1109, 1117, 1118, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1151, 1200], "python_basics_python_0400_list": [29, 92, 791, 1059, 1135], "python_basics_python_0460_set": [29, 92, 791, 1059, 1135], "python_basics_python_1000_function_object": [29, 92, 791, 1059, 1135], "python_basics_python_0130_syntax_etc": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "syntax": [29, 70, 92, 166, 196, 205, 212, 213, 215, 217, 218, 219, 224, 230, 231, 236, 240, 243, 246, 252, 256, 258, 262, 263, 264, 267, 270, 272, 283, 285, 292, 294, 295, 305, 306, 308, 311, 312, 333, 334, 336, 337, 339, 340, 345, 346, 348, 349, 350, 356, 357, 358, 359, 360, 361, 370, 517, 596, 597, 700, 717, 744, 757, 791, 926, 1032, 1034, 1035, 1036, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1061, 1070, 1078, 1079, 1081, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164, 1190, 1200], "python_basics_python_0110_blahblah": [29, 92, 230, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164], "blahblah": [29, 92, 212, 217, 219, 230, 236, 240, 243, 246, 252, 256, 262, 263, 264, 266, 267, 269, 270, 272, 285, 292, 295, 305, 306, 311, 312, 333, 334, 336, 339, 340, 341, 345, 346, 349, 350, 356, 357, 358, 359, 360, 361, 370, 791, 1037, 1044, 1045, 1046, 1047, 1051, 1059, 1070, 1079, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1147, 1150, 1151, 1157, 1164, 1200], "python_basics_python_0125_run": [29, 92, 230, 370, 791, 1059, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "run": [29, 42, 61, 62, 63, 65, 92, 99, 110, 112, 113, 139, 154, 163, 166, 169, 172, 173, 174, 175, 176, 179, 180, 183, 184, 192, 204, 205, 212, 213, 225, 230, 234, 235, 240, 245, 253, 261, 262, 265, 268, 271, 273, 278, 285, 286, 289, 292, 293, 295, 303, 305, 306, 307, 311, 312, 316, 325, 329, 332, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 355, 370, 373, 395, 413, 455, 458, 466, 467, 471, 472, 484, 485, 497, 502, 521, 522, 523, 551, 553, 554, 555, 577, 604, 617, 626, 638, 695, 753, 754, 789, 791, 811, 826, 836, 838, 839, 848, 871, 873, 875, 876, 877, 878, 894, 895, 898, 899, 929, 942, 943, 944, 945, 953, 955, 963, 965, 981, 994, 996, 997, 998, 1000, 1005, 1010, 1012, 1015, 1020, 1022, 1024, 1028, 1033, 1044, 1047, 1059, 1060, 1062, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1139, 1153, 1165, 1171, 1176, 1177, 1182, 1195], "python_basics_instal": [29, 92, 791, 1059, 1135], "python_swdev_pip": [29, 791, 1090, 1135, 1138, 1139, 1143, 1151, 1153, 1164, 1167, 1174], "python_swdev_unittest": [29, 791, 1135, 1164], "unittest": [29, 126, 169, 170, 186, 189, 200, 202, 205, 208, 209, 219, 222, 233, 235, 240, 282, 291, 302, 360, 370, 378, 379, 388, 389, 789, 791, 1078, 1135, 1137, 1164, 1175], "python_swdev_pytest_intro": [29, 791, 1135, 1164, 1169], "By": [29, 51, 53, 173, 175, 180, 184, 188, 200, 206, 242, 248, 249, 251, 258, 259, 261, 262, 266, 270, 273, 277, 278, 280, 282, 291, 299, 301, 302, 306, 317, 320, 323, 324, 327, 337, 338, 350, 378, 410, 437, 460, 463, 680, 681, 683, 684, 687, 689, 691, 692, 735, 736, 788, 790, 791, 807, 880, 929, 942, 978, 997, 1013, 1024, 1048, 1055, 1133, 1134, 1135, 1144, 1164, 1169], "python_drafts_matplotlib": [29, 791, 1090, 1135], "matplotlib": [29, 205, 224, 243, 244, 256, 270, 271, 273, 275, 306, 325, 330, 334, 336, 347, 379, 791, 1032, 1090, 1135, 1137, 1143], "python_drafts_asyncio": [29, 791, 1090, 1135], "asyncio": [29, 68, 205, 209, 259, 300, 328, 723, 791, 1090, 1135, 1137], "python_drafts_setuptool": [29, 791, 1090, 1135], "setuptool": [29, 60, 169, 282, 317, 327, 791, 1090, 1135, 1172], "python_drafts_argpars": [29, 791, 1090, 1135], "argpars": [29, 249, 270, 301, 323, 327, 356, 791, 1090, 1135], "As": [30, 46, 70, 82, 126, 170, 173, 175, 180, 184, 190, 202, 205, 209, 240, 253, 315, 331, 373, 390, 428, 459, 462, 538, 540, 554, 605, 610, 612, 613, 690, 773, 811, 838, 864, 873, 942, 943, 951, 953, 970, 998, 1006, 1028, 1034, 1055, 1060, 1064, 1122, 1126, 1139, 1180, 1192], "follow": [30, 39, 43, 80, 108, 109, 111, 116, 119, 120, 121, 122, 123, 129, 132, 163, 172, 173, 175, 176, 177, 178, 180, 188, 193, 197, 201, 202, 205, 209, 213, 214, 225, 242, 248, 258, 259, 261, 265, 274, 278, 280, 297, 298, 300, 306, 307, 367, 389, 391, 394, 411, 412, 425, 428, 455, 457, 459, 461, 466, 467, 470, 478, 480, 485, 495, 496, 499, 500, 516, 517, 519, 520, 521, 522, 523, 541, 544, 545, 548, 549, 551, 552, 553, 554, 555, 567, 573, 599, 614, 615, 616, 617, 670, 677, 679, 684, 686, 687, 690, 691, 694, 712, 745, 785, 786, 789, 799, 801, 807, 838, 864, 865, 866, 871, 873, 875, 877, 889, 891, 892, 898, 902, 910, 911, 935, 942, 943, 944, 965, 968, 969, 970, 971, 980, 997, 1006, 1010, 1012, 1018, 1020, 1022, 1024, 1026, 1027, 1028, 1031, 1035, 1036, 1040, 1047, 1066, 1080, 1088, 1094, 1097, 1102, 1106, 1108, 1112, 1115, 1116, 1119, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1159, 1163, 1172, 1193], "version": [30, 60, 117, 125, 172, 176, 178, 179, 180, 183, 186, 188, 201, 202, 203, 205, 212, 221, 223, 232, 233, 242, 246, 248, 252, 258, 261, 268, 273, 276, 285, 291, 297, 298, 299, 300, 307, 340, 363, 378, 438, 477, 478, 480, 481, 483, 490, 493, 590, 687, 689, 690, 737, 741, 753, 776, 786, 811, 813, 830, 838, 839, 854, 898, 942, 943, 1013, 1014, 1024, 1026, 1027, 1029, 1060, 1061, 1067, 1092, 1165, 1172, 1173, 1179, 1185], "control": [30, 45, 61, 62, 63, 88, 127, 129, 135, 136, 143, 144, 172, 179, 186, 188, 191, 202, 205, 210, 212, 213, 214, 215, 224, 225, 240, 243, 256, 261, 267, 281, 338, 371, 372, 373, 375, 378, 416, 430, 431, 477, 480, 494, 501, 544, 545, 548, 554, 596, 791, 811, 836, 838, 843, 898, 934, 936, 937, 941, 942, 944, 960, 1009, 1014, 1033, 1036, 1044, 1056, 1069, 1071, 1156, 1171, 1173, 1191, 1201, 1207], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 62, 77, 86, 89, 93, 104, 112, 113, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 143, 144, 154, 160, 165, 169, 170, 172, 174, 175, 177, 178, 179, 180, 183, 188, 193, 194, 197, 201, 205, 212, 234, 249, 253, 259, 261, 277, 278, 280, 292, 295, 302, 307, 325, 356, 362, 373, 379, 394, 395, 443, 450, 451, 453, 455, 466, 477, 479, 480, 481, 485, 519, 538, 552, 555, 597, 609, 610, 638, 652, 660, 665, 689, 690, 692, 695, 702, 723, 726, 730, 731, 741, 747, 755, 759, 767, 769, 791, 797, 807, 809, 828, 830, 838, 840, 865, 866, 870, 871, 873, 874, 882, 894, 917, 935, 936, 938, 943, 944, 960, 961, 962, 972, 986, 994, 1000, 1009, 1013, 1014, 1022, 1026, 1028, 1035, 1038, 1039, 1040, 1058, 1067, 1078, 1086, 1087, 1088, 1092, 1095, 1116, 1149, 1170, 1195], "No": [30, 43, 62, 82, 116, 119, 163, 169, 173, 175, 179, 180, 188, 215, 232, 248, 249, 265, 291, 381, 401, 403, 417, 433, 437, 444, 455, 460, 472, 477, 481, 482, 485, 487, 490, 491, 492, 493, 505, 551, 590, 600, 601, 613, 620, 630, 645, 648, 666, 684, 694, 696, 699, 703, 706, 710, 754, 755, 762, 769, 816, 818, 820, 822, 836, 838, 843, 855, 874, 880, 882, 885, 886, 901, 909, 917, 920, 936, 938, 944, 958, 965, 970, 971, 980, 981, 983, 985, 994, 998, 1006, 1009, 1015, 1029, 1031, 1048, 1055, 1061, 1064, 1067, 1068, 1076, 1080, 1084, 1086, 1144, 1145, 1149, 1150, 1159, 1162, 1170, 1172, 1178], "proprietari": 30, "accept": [30, 32, 59, 143, 175, 201, 297, 477, 479, 745, 755, 757, 806, 938, 964, 1034, 1058, 1205, 1207], "proven": [30, 466, 470, 614, 616, 617, 706], "difficult": [30, 70, 232, 422, 440, 590, 824, 836, 998], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1032], "dev": [31, 62, 66, 102, 134, 173, 174, 184, 190, 191, 201, 202, 245, 251, 261, 268, 271, 286, 289, 293, 298, 300, 303, 307, 329, 335, 341, 354, 376, 466, 485, 549, 791, 793, 794, 796, 802, 809, 818, 832, 834, 838, 851, 868, 869, 878, 880, 881, 898, 912, 915, 918, 920, 934, 937, 942, 943, 944, 967, 974, 994, 997, 1000, 1002, 1005, 1006, 1026, 1177, 1179, 1195], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 173, 176, 178, 184, 242, 248, 258, 261, 438, 830, 836, 841, 843, 998, 1165, 1185], "audio": [31, 152, 161, 175, 180, 791, 1194], "appar": [31, 57, 60, 62, 157, 175, 177, 178, 180, 184, 234, 245, 297, 482, 496, 667, 712, 723, 755, 806, 942, 1000, 1150], "next": [31, 39, 42, 62, 100, 126, 148, 154, 169, 174, 175, 180, 188, 193, 195, 206, 211, 213, 221, 225, 232, 238, 242, 245, 246, 248, 251, 253, 255, 258, 261, 265, 271, 277, 278, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 355, 362, 376, 410, 428, 430, 451, 479, 517, 521, 535, 545, 554, 590, 627, 703, 716, 723, 725, 747, 828, 838, 857, 882, 898, 930, 942, 944, 964, 974, 994, 1013, 1039, 1040, 1043, 1071, 1074, 1089, 1142, 1178], "mention": [31, 144, 173, 174, 201, 205, 209, 235, 259, 301, 302, 323, 324, 328, 540, 554, 738, 850, 943, 1031, 1137, 1153], "frame": [31, 167, 178, 190, 212, 242, 248, 258, 261, 291, 297, 329, 450, 463, 467, 517, 708, 936, 937, 1155], "size": [31, 102, 111, 131, 172, 174, 175, 192, 194, 200, 242, 243, 248, 251, 256, 258, 261, 265, 270, 273, 289, 306, 307, 312, 354, 370, 401, 418, 423, 432, 439, 443, 445, 449, 450, 452, 455, 456, 458, 463, 464, 465, 467, 469, 474, 475, 497, 498, 504, 543, 555, 556, 560, 561, 562, 563, 564, 568, 569, 572, 578, 590, 595, 597, 601, 605, 610, 614, 616, 617, 630, 631, 632, 633, 638, 643, 644, 648, 652, 654, 655, 660, 662, 689, 691, 697, 700, 701, 706, 717, 718, 719, 721, 735, 745, 754, 758, 759, 767, 775, 788, 789, 790, 791, 797, 809, 824, 834, 854, 863, 868, 869, 875, 882, 912, 915, 918, 920, 926, 930, 934, 938, 943, 964, 966, 1005, 1006, 1012, 1029, 1032, 1137, 1150], "input": [31, 40, 70, 88, 134, 193, 194, 195, 196, 206, 209, 212, 214, 236, 242, 248, 251, 258, 261, 264, 265, 286, 289, 370, 375, 399, 400, 406, 430, 438, 461, 466, 478, 556, 557, 558, 559, 571, 610, 660, 679, 702, 789, 809, 864, 882, 913, 931, 935, 945, 961, 964, 976, 978, 979, 986, 1042, 1057, 1086, 1099, 1103, 1104, 1116, 1119, 1122, 1128, 1131, 1139, 1140, 1143, 1144, 1201], "rate": [31, 183, 205, 265, 324, 459, 857, 996], "hz": [31, 848], "bitrat": [31, 937], "If": [31, 43, 45, 47, 53, 55, 56, 57, 91, 124, 126, 144, 172, 173, 174, 175, 178, 179, 180, 188, 189, 197, 205, 242, 248, 255, 258, 261, 265, 273, 278, 280, 289, 295, 307, 324, 370, 375, 416, 425, 455, 467, 487, 489, 495, 545, 551, 552, 567, 597, 602, 666, 673, 689, 690, 703, 708, 754, 758, 759, 767, 769, 791, 811, 816, 830, 838, 843, 855, 864, 873, 877, 880, 898, 899, 907, 910, 934, 935, 942, 943, 944, 945, 951, 965, 973, 975, 983, 988, 992, 1005, 1027, 1028, 1040, 1048, 1050, 1060, 1067, 1075, 1077, 1088, 1114, 1142, 1145, 1159, 1171, 1190], "instead": [31, 58, 62, 131, 138, 144, 166, 172, 173, 174, 175, 193, 194, 202, 234, 251, 253, 261, 291, 307, 355, 376, 381, 418, 467, 495, 538, 541, 555, 617, 633, 689, 691, 708, 712, 754, 755, 769, 776, 806, 807, 816, 869, 898, 920, 943, 985, 1005, 1012, 1014, 1024, 1030, 1061, 1108, 1120, 1132, 1156, 1177], "stdout": [31, 144, 192, 225, 229, 233, 242, 248, 258, 261, 271, 279, 286, 288, 289, 309, 310, 324, 353, 355, 363, 365, 370, 374, 376, 666, 791, 862, 864, 868, 879, 880, 923, 926, 929, 934, 964, 1009, 1036, 1086, 1088, 1094, 1099, 1103, 1106, 1121, 1153, 1162, 1196], "hold": [31, 131, 172, 174, 193, 209, 211, 212, 232, 259, 393, 405, 425, 497, 627, 682, 689, 740, 745, 759, 767, 771, 776, 802, 836, 840, 841, 935, 942, 998, 1036, 1049, 1071, 1120, 1142], "mplayer": [31, 303, 341], "stdin": [31, 42, 225, 233, 242, 248, 251, 258, 261, 363, 370, 402, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791, 864, 880, 881, 913, 964, 1084, 1086, 1087, 1099, 1150, 1162, 1196], "unicod": [32, 34, 35, 36, 38, 233, 242, 246, 248, 258, 261, 283, 307, 341, 405, 1066, 1072, 1086, 1150], "sphinxemojicod": 32, "pip": [32, 60, 153, 154, 169, 205, 209, 230, 259, 273, 964, 1060, 1091, 1092, 1124, 1137, 1153, 1164, 1165, 1166, 1170, 1172, 1173], "conf": [32, 154, 174, 176, 178, 341, 490, 838, 944, 1036], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 286, 554, 797, 809], "innoc": [32, 179, 460, 761, 877, 1011, 1055], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 80, 82, 89, 91, 173, 388, 935, 943, 944], "muscl": 32, "nerd": [32, 898], "ok_hand": 32, "penguin": 32, "pig": [32, 455], "point_up": 32, "sleep": [32, 62, 65, 116, 122, 173, 248, 277, 278, 301, 302, 323, 356, 428, 437, 767, 791, 815, 818, 820, 830, 840, 843, 847, 853, 855, 856, 859, 934, 935, 943, 972, 976, 979, 994, 996, 997, 1000, 1005, 1044], "sunglass": 32, "think": [32, 42, 43, 71, 173, 174, 188, 211, 235, 337, 438, 459, 460, 463, 549, 553, 600, 620, 695, 703, 705, 754, 865, 866, 869, 959, 1005, 1067], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 223, 229, 245, 265, 307], "ac": [32, 183, 221], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1056], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 183], "aerial_tramwai": 32, "af": [32, 183], "afghanistan": 32, "ai": [32, 209, 1144, 1151], "airplan": [32, 935], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 297], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 1012, 1078], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 78, 90, 196, 251, 276, 277, 278, 280, 289, 300, 337, 338, 573, 705, 754, 767, 768, 790, 791, 800, 805, 808, 810, 815, 818, 819, 821, 824, 825, 829, 830, 831, 833, 835, 840, 843, 844, 847, 848, 849, 853, 856, 858, 859, 934, 974, 984, 985, 1047, 1190], "atom_symbol": 32, "australia": 32, "austria": [32, 173, 388], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 194, 1032], "az": 32, "azerbaijan": 32, "ba": [32, 183], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 479], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1172], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 91, 205, 370, 935, 1059, 1060, 1061, 1087, 1166], "bb": [32, 165, 176, 942], "bd": [32, 183], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 983, 1160], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 457], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1055, 1058], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 183], "bg": [32, 479], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 214, 685], "bison": [32, 184, 818, 942, 1026], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1049], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1149], "bookmark_tab": 32, "boom": [32, 723, 740], "boomerang": 32, "boot": [32, 163, 174, 176, 180, 192, 293, 473, 770, 811, 816, 834, 838, 848, 876, 942, 943, 944, 1185], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 271, 329], "brain": [32, 61, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 172, 185], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 471, 898], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 809], "bug": [32, 46, 55, 56, 109, 154, 174, 175, 176, 216, 235, 251, 262, 379, 435, 437, 438, 453, 458, 460, 464, 477, 482, 487, 578, 580, 582, 590, 596, 597, 600, 605, 667, 670, 723, 733, 752, 769, 791, 828, 956, 987, 996, 997, 1029, 1049, 1050, 1064, 1067], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 66, 67, 83, 127, 220, 245, 261, 268, 270, 271, 286, 289, 293, 303, 307, 329, 335, 341, 347, 495, 509, 524, 538, 554, 555, 791, 809, 834, 898, 934, 936, 941, 942, 943, 972, 978, 1034, 1136, 1194, 1201, 1205, 1207], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 144, 148, 178, 180, 943], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 291, 479, 935], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 148, 154, 175, 179, 213, 225, 279, 288, 289, 291, 309, 310, 353, 354, 355, 356, 455, 479, 554, 791, 796, 801, 818, 838, 854, 865, 866, 868, 869, 878, 880, 882, 910, 917, 925, 926, 928, 929, 931, 934, 935, 942, 943, 944, 945, 969, 971, 972, 976, 1000, 1006, 1009, 1196], "cayman_island": 32, "cd": [32, 60, 66, 159, 176, 177, 179, 180, 183, 184, 188, 201, 202, 235, 245, 265, 273, 278, 280, 356, 370, 375, 480, 552, 555, 615, 811, 813, 838, 839, 862, 864, 865, 866, 869, 875, 883, 888, 890, 898, 922, 935, 942, 943, 951, 964, 1013, 1014, 1026, 1027, 1092], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 335, 864, 981], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 166, 172, 183, 193, 255, 272, 457, 843, 991], "chair": [32, 205], "champagn": 32, "champagne_glass": 32, "chart": [32, 219, 234, 243, 256, 270, 273, 306, 312, 1137, 1144], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 101, 148, 190, 279, 288, 289, 309, 310, 353, 354, 789, 791, 868, 870, 872, 873, 884, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 907, 909, 910, 934, 946, 947, 948, 949, 950, 975, 981, 988, 993, 1010, 1022, 1023, 1053, 1162], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1170], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 261, 286, 1052, 1053], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 138, 248, 249, 466, 937, 942], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 103, 180, 225, 249, 369, 370, 373, 698, 700, 951, 1141, 1142, 1165], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 183], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 297], "cocos_island": 32, "coffe": [32, 176, 670, 942], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 124, 174, 188, 279, 288, 289, 309, 353, 791, 862, 868, 934, 1022, 1023, 1024, 1027], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 173, 177, 205, 234, 412, 420, 466, 613, 623, 699, 710, 1078, 1163], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 205, 211, 292, 295, 415, 428, 438, 467, 477, 581, 632, 651, 652, 708, 756, 1050, 1057, 1074, 1085], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 289], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 820, 834], "cool": [32, 159, 174, 175, 178, 180, 188, 193, 194, 205, 206, 209, 224, 289, 302, 388, 473, 479, 507, 516, 653, 695, 696, 712, 715, 734, 744, 747, 769, 838, 894, 944, 1029, 1033, 1036, 1053, 1072, 1086, 1137, 1144, 1149, 1190], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 184, 225, 242, 248, 258, 261, 286, 363, 367, 605, 754, 1062], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 144, 172, 173, 174, 175, 180, 193, 205, 209, 391, 428, 462, 467, 743, 931, 966, 985], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 101, 126, 148, 174, 176, 179, 213, 215, 279, 288, 289, 309, 310, 353, 354, 370, 375, 791, 838, 865, 866, 867, 868, 869, 898, 902, 903, 905, 906, 909, 910, 912, 918, 934, 942, 954, 965, 1026, 1196], "cr": [32, 1086], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 105, 106, 108, 134, 149, 172, 185, 209, 303, 315, 316, 331, 332, 371, 372, 373, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 972, 973, 975, 989, 992, 995, 997, 1014, 1018, 1019, 1020, 1021, 1023, 1026, 1192], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 173], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 234], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 639], "date": [32, 124, 148, 170, 176, 184, 188, 205, 211, 241, 273, 289, 291, 334, 383, 384, 479, 839, 1031, 1126, 1128, 1132, 1134, 1141, 1146], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 154, 161, 173, 178, 234, 303, 920, 997, 1194, 1201], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 233, 246], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 265, 1144], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 455], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 251, 573, 828, 1046], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 99, 235, 251, 298, 300, 338, 573, 597, 598, 603, 692, 704, 706, 735, 740, 751, 755, 760, 768, 788, 790, 791, 1009], "dragon_fac": 32, "dress": [32, 170], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 170, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929, 1150, 1184], "ea": [32, 183], "eagl": [32, 245, 1094], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 99, 183, 225, 367, 370, 375, 378, 387, 791, 867, 868, 898, 934], "ecuador": 32, "ee": [32, 183], "eg": [32, 35, 131], "egg": [32, 60, 1080], "eggplant": 32, "egypt": 32, "eight": [32, 135, 175, 193, 206, 216, 224, 253, 255, 341, 370, 944, 1150], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 181, 184, 216, 232, 242, 485, 581, 981, 1012, 1013, 1029, 1063, 1204], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 838], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 182, 191, 206, 208, 216, 253, 1185, 1186, 1187], "eritrea": 32, "estonia": 32, "et": [32, 99, 605, 754, 958, 1013, 1014, 1055], "ethiopia": 32, "euro": [32, 521, 522, 523, 535, 536, 537], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 108, 233, 246, 281, 300, 379, 494, 501, 515, 529, 543, 595, 791, 964, 1193], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 197, 938, 944], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 291, 972], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 968, 976, 991], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 62, 457], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1172], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 62, 116, 121, 122, 173, 193, 206, 216, 224, 245, 255, 261, 271, 286, 307, 325, 329, 337, 341, 347, 351, 370, 388, 1094, 1136], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 173, 175, 190, 201, 212, 242, 248, 251, 255, 258, 261, 286, 289, 300, 302, 316, 332, 363, 482, 483, 484, 489, 492, 678, 692, 769, 791, 797, 806, 820, 843, 846, 848, 936, 938, 967, 968, 969, 971, 985, 1006, 1010, 1071], "flame": [32, 176], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 169, 265, 631], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 864, 935], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 71, 431, 900], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 205, 1060], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 172, 177, 193, 205, 206, 209, 216, 223, 224, 232, 248, 253, 255, 265, 268, 271, 282, 286, 289, 303, 306, 307, 313, 328, 329, 335, 341, 347, 351, 370, 838, 904, 1074, 1082, 1136, 1137, 1145, 1170, 1193], "four_leaf_clov": 32, "fox": [32, 455], "fox_fac": 32, "fr": [32, 184], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 71, 1190], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 341], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 966], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 173, 174, 388], "gf": 32, "gg": [32, 35, 38], "gh": [32, 169, 1159], "ghana": 32, "ghost": 32, "gi": [32, 169, 256], "gibraltar": 32, "gift": [32, 209, 240], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 70, 173, 292, 295, 355, 479, 489, 758, 777, 865, 866, 1028, 1037], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 313, 329, 1150], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 235, 251, 487, 766, 767, 769], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 173, 249, 289, 818, 828], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 169, 181, 188, 193, 200, 209, 224, 235, 251, 270, 297, 378, 405, 416, 435, 437, 500, 519, 587, 598, 614, 616, 617, 743, 882, 898, 943, 944, 960, 988, 1022, 1040, 1055, 1062, 1190, 1196, 1208], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 767], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 205, 211, 212, 223, 229, 242, 248, 249, 252, 256, 258, 261, 265, 286, 293, 307, 347, 370, 490, 838, 1084, 1165], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 251, 791, 934, 964, 973, 974, 975, 992, 1005], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 224, 242, 248, 258, 261, 291, 324, 471, 506, 762, 797], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 178, 388], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 361, 362, 379], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 416, 497, 526, 1189], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 109, 112, 113, 114, 115, 116, 117, 118, 125, 154, 175, 178, 188, 192, 195, 205, 206, 216, 223, 229, 242, 245, 248, 255, 258, 259, 261, 268, 271, 275, 283, 286, 293, 299, 303, 307, 313, 318, 325, 330, 335, 341, 347, 351, 365, 486, 521, 522, 523, 535, 536, 537, 554, 802, 834, 836, 858, 865, 866, 871, 873, 882, 883, 884, 894, 901, 922, 924, 925, 936, 942, 944, 951, 970, 980, 1022, 1049, 1060, 1076, 1115, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1143, 1145, 1163, 1206], "ideograph_advantag": 32, "ie": 32, "il": [32, 183], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 233, 282, 306, 328, 1137], "indonesia": 32, "infin": [32, 131, 212, 261, 334, 348, 1041, 1042], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 898], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 233, 282, 1137], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 216, 229, 242, 245, 255, 258, 261, 265, 268, 307, 313, 341], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 354, 370, 880, 930], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 214], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 194, 196, 351], "kn": 32, "knife": [32, 797, 964, 1190], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 242, 248, 258, 261], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 194, 196, 243, 256, 270, 273, 306, 312, 351, 427, 432, 439, 445, 449, 452, 456, 459, 465, 469, 474, 475, 696, 697, 735, 788, 790, 791, 818, 1137, 1144, 1156, 1159], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 210], "leafy_green": 32, "leav": [32, 49, 121, 170, 173, 174, 180, 183, 213, 242, 265, 302, 381, 599, 601, 610, 611, 626, 628, 629, 786, 789, 801, 806, 816, 838, 943, 968, 988, 1076, 1150], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 361, 362, 379], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 173, 175, 205, 209, 242, 248, 251, 258, 261, 277, 278, 280, 289, 310, 323, 324, 337, 341, 379, 453, 493, 573, 756, 762, 765, 767, 768, 786, 790, 791, 828, 836, 841, 846, 875, 951, 983, 988, 990, 998, 1005, 1046, 1137, 1190, 1202, 1205], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 194, 265, 419, 834, 885, 886, 897, 980, 1009, 1011], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 259, 890], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 176, 291, 479], "md": [32, 153, 390, 839], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1033], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 417, 473, 596], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 245, 1094], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 178, 180], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 478], "mn": 32, "mo": [32, 587], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 173, 178, 351, 898, 1074, 1082], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 1004, 1005], "mr": [32, 126, 242, 253, 261, 265, 1099], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 379, 1008, 1009], "mu": [32, 265], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 101, 126, 148, 213, 215, 279, 288, 289, 309, 310, 353, 354, 370, 375, 791, 811, 868, 905, 918, 934, 1196], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 242, 245, 248, 261, 268, 286, 341], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 213, 215, 288, 309, 310, 353, 399, 961], "ne": [32, 597, 615, 617, 976], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 174, 1061], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 955], "ng": [32, 174, 185, 289, 791, 934, 1013, 1015, 1022, 1023, 1024], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 154, 193, 206, 216, 224, 242, 253, 341, 370], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 399], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 80, 126, 127, 142, 144, 151, 169, 175, 176, 183, 200, 213, 235, 253, 261, 265, 270, 289, 298, 300, 307, 329, 433, 455, 473, 489, 492, 543, 586, 588, 595, 597, 600, 608, 612, 613, 652, 667, 702, 708, 749, 753, 754, 769, 776, 790, 791, 824, 830, 843, 854, 875, 878, 880, 920, 945, 946, 954, 972, 987, 991, 998, 1006, 1031, 1035, 1047, 1048, 1071, 1084, 1105, 1122, 1158, 1159, 1164, 1178, 1193], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 196, 223, 291, 325, 479, 1140, 1159], "nr": [32, 221, 265, 797], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 467], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 132, 172, 174, 175, 179, 188, 205, 221, 251, 291, 366, 407, 443, 461, 463, 493, 502, 552, 553, 554, 599, 607, 610, 615, 620, 630, 682, 689, 700, 708, 723, 742, 745, 754, 755, 771, 852, 943, 970, 988, 1015, 1026, 1044, 1047, 1060, 1177], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 237], "om": [32, 733], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 242, 248, 258, 261, 443, 627, 629, 630], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 930], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 176, 771], "pg": [32, 471], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 80, 166, 176, 183, 234, 481, 554, 994, 1024, 1029], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 297], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 341], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 261, 276], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 62, 116, 119, 126, 144, 148, 169, 173, 174, 178, 179, 185, 201, 213, 215, 216, 232, 245, 261, 265, 291, 293, 351, 403, 437, 443, 446, 447, 450, 451, 455, 526, 551, 552, 554, 555, 597, 599, 602, 607, 608, 609, 610, 611, 613, 615, 616, 630, 638, 698, 701, 702, 705, 707, 710, 719, 720, 721, 723, 725, 726, 729, 730, 731, 737, 739, 740, 749, 753, 758, 769, 786, 789, 802, 838, 857, 865, 866, 875, 898, 900, 917, 920, 927, 937, 945, 954, 961, 972, 981, 996, 1009, 1024, 1031, 1033, 1094, 1172, 1196], "pt": [32, 757, 869, 996], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 175, 176, 180, 298, 838, 874, 876, 960], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 62, 124, 131, 133, 175, 180, 212, 221, 224, 225, 235, 238, 245, 246, 248, 253, 255, 261, 265, 271, 273, 274, 283, 286, 290, 306, 307, 313, 335, 341, 347, 370, 375, 433, 479, 480, 489, 497, 522, 552, 599, 605, 723, 745, 807, 843, 852, 857, 899, 988, 1009, 1024, 1028, 1033, 1038, 1057, 1080, 1132, 1137, 1159], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 173, 183, 191, 216, 220, 248, 261, 307, 356, 419, 453, 504, 532, 553, 555, 562, 794, 801, 809, 816, 822, 834, 925, 942, 958, 962, 1063, 1153], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 102, 126, 144, 148, 163, 179, 234, 289, 354, 377, 467, 479, 615, 791, 838, 868, 898, 902, 906, 909, 912, 917, 918, 934, 947, 974, 1071], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 362, 745], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 898], "ringed_planet": 32, "ro": 32, "robot": [32, 261], "robot_fac": 32, "rock": [32, 302, 477, 1028, 1030, 1166], "rocket": [32, 180], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1177, 1208], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1150], "rw": [32, 60, 62, 174, 175, 184, 192, 261, 271, 486, 789, 794, 802, 869, 880, 883, 894, 897, 917, 920, 935, 942, 943, 944, 946, 955, 966, 969, 970, 978, 1006, 1012, 1013, 1014, 1024, 1026, 1027, 1063, 1092], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 894], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 290], "sc": [32, 35], "scale": [32, 80, 205, 251, 265, 467, 942, 1015, 1028], "scarf": 32, "school": [32, 265, 538, 573, 1159, 1191], "school_satchel": 32, "scientist": [32, 205, 388, 1060, 1142, 1143, 1144, 1151], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 234, 898], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 179, 538], "sd": [32, 66, 245, 261, 265, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 838], "se": [32, 602], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 682, 703, 951, 1035, 1148], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 86, 193, 206, 216, 224, 253, 341, 347, 370, 1104, 1115], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 60, 180, 184, 273, 811, 865, 866, 883, 944, 966, 976, 1124], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 173], "shinto_shrin": 32, "ship": [32, 178], "shirt": [32, 43, 170], "shit": [32, 232], "shop": [32, 297], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 501], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 193, 206, 216, 224, 242, 341, 347, 370, 1071], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 176, 188, 480, 867], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 362, 996], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 240], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 62], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 174, 175, 180, 602, 689, 838, 944, 996, 1010, 1153], "sound": [32, 61, 63, 172, 176, 179, 180, 249, 759, 880, 935, 943, 944, 1171], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 131, 467, 478], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 776], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 245, 1094], "sri_lanka": 32, "st": [32, 239, 479, 1006, 1008, 1009], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 639, 944, 1026], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 103, 108, 126, 144, 180, 273, 355, 356, 361, 362, 370, 1036, 1172], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 111, 292, 295, 543, 554, 560, 562, 595, 791, 991, 1035], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 521, 522], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 126, 148, 184, 213, 234, 242, 248, 251, 258, 261, 279, 288, 289, 309, 310, 353, 354, 408, 423, 432, 439, 445, 449, 452, 456, 459, 460, 465, 469, 474, 475, 697, 735, 741, 788, 789, 790, 791, 794, 813, 816, 838, 868, 883, 898, 918, 920, 934, 943, 1043], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 175, 178], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 237], "tea": 32, "teacher": [32, 108, 178, 483, 485, 865, 866, 1024], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 175, 196, 216, 255, 261, 347, 929], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 268, 864, 1033], "tg": 32, "th": [32, 209, 237, 401, 443, 552, 630, 1073, 1082], "thailand": 32, "thermomet": [32, 71, 84, 86, 87, 200, 209, 261, 281, 374, 376, 377, 379, 494, 501, 504, 506, 515, 516, 529, 543, 583, 584, 592, 595, 670, 673, 791, 944], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 61, 63, 65, 85, 91, 93, 178, 190, 191, 200, 205, 209, 220, 242, 248, 249, 251, 258, 261, 276, 277, 278, 280, 289, 298, 300, 324, 337, 338, 380, 383, 384, 385, 473, 502, 519, 533, 596, 737, 745, 754, 756, 763, 765, 768, 769, 790, 791, 820, 830, 836, 850, 858, 934, 956, 975, 983, 985, 986, 988, 990, 994, 995, 997, 1008, 1009, 1010, 1046, 1047, 1137, 1179, 1189, 1190, 1191, 1193, 1205, 1206, 1207], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 61, 63, 65, 126, 138, 197, 298, 458, 770, 791, 815, 840, 847, 853, 856, 857, 859, 871, 874, 934, 943, 959, 963, 975, 994, 1000, 1002, 1010, 1204, 1207], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 178], "tm": 32, "tn": [32, 213], "togo": 32, "toilet": [32, 251, 573, 828, 1046], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1190], "toolbox": [32, 194], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 237], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 240, 249, 324], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 765, 767, 769, 830, 836, 983, 1202], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 292, 295], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 151, 179], "ve": [32, 173, 175, 880, 1171], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 771], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 172, 192, 205, 301, 302, 323, 350, 352, 354, 377, 388, 695, 712, 882, 944, 1048], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 297], "wave": [32, 34, 38, 289, 306], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 233, 234, 251, 271, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 479, 697, 735, 788, 790, 791, 878, 881, 931, 945, 1121], "weari": 32, "wed": [32, 232], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 490], "worri": [32, 458], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 209, 213, 216, 238, 242, 248, 258, 261, 268, 289, 303, 371, 372, 391, 479, 614, 675, 883, 897, 943, 944, 978, 1033, 1073, 1086, 1132, 1134, 1162, 1165, 1170], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 341], "za": [32, 313, 341, 410], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": [32, 347], "sheet": [33, 174, 213, 225, 354, 374, 376, 377, 723, 898, 942, 943], "layout": [33, 169, 190, 263, 455, 468, 1170], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 341, 411, 899], "entiti": [33, 173, 419, 433, 460, 477, 497, 505, 612, 807, 996, 1150], "isoamsa": 33, "mathemat": [33, 265, 1085], "arrow": [33, 35, 36, 38, 75, 76, 898, 1028], "isoamsr": 33, "relat": [33, 71, 161, 194, 205, 209, 230, 234, 289, 302, 423, 432, 439, 443, 445, 449, 452, 456, 465, 469, 474, 475, 482, 597, 697, 735, 752, 776, 788, 789, 790, 791, 806, 815, 863, 941, 996, 1006, 1137, 1170, 1171], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 78, 89, 90, 169, 173, 179, 233, 234, 242, 246, 248, 249, 251, 256, 258, 261, 271, 378, 422, 455, 467, 635, 712, 775, 816, 830, 838, 883, 1012, 1015, 1028, 1040, 1067, 1072, 1150], "sphinxish": 33, "send": [33, 103, 126, 144, 151, 170, 173, 184, 209, 210, 212, 213, 214, 215, 248, 249, 268, 270, 271, 289, 310, 354, 370, 375, 519, 862, 878, 894, 937, 938, 942, 951, 961, 1009, 1011, 1133, 1150], "v4l": [33, 144], "ssh": [33, 99, 103, 104, 126, 144, 148, 149, 151, 170, 180, 184, 213, 245, 261, 268, 271, 279, 286, 288, 293, 303, 307, 309, 329, 335, 341, 347, 353, 356, 369, 370, 376, 377, 383, 384, 388, 554, 555, 791, 864, 865, 866, 873, 920, 929, 934, 935, 946, 947, 972, 1022, 1023, 1024, 1194, 1196, 1201], "taken": [34, 35, 36, 38, 40, 75, 76, 130, 154, 172, 176, 177, 184, 233, 354, 457, 489, 554, 563, 610, 765, 841, 863, 873, 898, 1012, 1063, 1150], "definit": [34, 35, 36, 38, 109, 116, 119, 120, 121, 134, 144, 169, 173, 175, 176, 178, 180, 193, 202, 205, 206, 211, 225, 232, 234, 298, 300, 316, 332, 370, 391, 392, 393, 423, 432, 435, 438, 439, 445, 449, 452, 456, 462, 463, 464, 465, 467, 468, 469, 474, 475, 482, 484, 488, 496, 497, 519, 541, 581, 599, 600, 601, 606, 607, 613, 614, 616, 625, 628, 629, 651, 677, 686, 697, 707, 723, 735, 737, 750, 754, 758, 788, 790, 791, 816, 838, 899, 943, 944, 1012, 1031, 1038, 1044, 1049, 1060, 1064, 1077, 1078, 1081, 1146, 1160, 1177, 1187, 1190], "includ": [34, 35, 36, 38, 44, 109, 116, 122, 123, 165, 175, 180, 184, 188, 190, 201, 205, 212, 224, 225, 234, 235, 242, 246, 248, 249, 251, 258, 261, 265, 286, 300, 307, 316, 328, 332, 367, 378, 392, 393, 395, 399, 401, 403, 434, 435, 450, 455, 458, 460, 464, 471, 480, 481, 483, 484, 485, 487, 492, 495, 496, 497, 498, 499, 500, 502, 504, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 581, 587, 590, 597, 598, 599, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 622, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 675, 679, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 698, 700, 702, 705, 706, 707, 708, 710, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 742, 744, 745, 747, 749, 753, 754, 755, 756, 757, 758, 759, 762, 764, 767, 769, 770, 771, 775, 777, 779, 781, 785, 786, 787, 789, 791, 797, 802, 807, 809, 816, 818, 820, 822, 824, 826, 830, 832, 834, 843, 848, 852, 855, 858, 875, 895, 898, 904, 931, 936, 938, 942, 958, 960, 961, 962, 964, 967, 968, 969, 970, 971, 974, 976, 979, 987, 991, 993, 996, 1002, 1005, 1009, 1012, 1015, 1024, 1027, 1028, 1030, 1032, 1060, 1061, 1086, 1087, 1160, 1166, 1172, 1177, 1179, 1182, 1192], "substitut": [34, 35, 36, 38, 108, 116, 121, 122, 144, 225, 261, 307, 367, 461, 477, 481, 712, 955, 1149], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1193], "WITH": [34, 35, 38, 961], "downward": [34, 35, 36, 38, 489], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 412], "circl": [34, 35, 38, 235, 573, 878], "abov": [34, 35, 38, 80, 126, 131, 173, 175, 176, 177, 178, 180, 184, 188, 192, 211, 214, 225, 234, 242, 248, 258, 261, 265, 324, 381, 428, 451, 461, 471, 497, 517, 519, 541, 544, 545, 554, 555, 580, 590, 607, 608, 612, 613, 632, 676, 738, 799, 832, 838, 848, 865, 866, 882, 910, 942, 943, 944, 968, 972, 998, 1005, 1028, 1036, 1067, 1081, 1153, 1159, 1170, 1177], "cudarrl": 34, "02938": 34, "side": [34, 193, 215, 289, 298, 407, 416, 457, 519, 551, 590, 614, 616, 617, 767, 818, 822, 877, 898, 946, 1036, 1069, 1116, 1142, 1144, 1153], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 174, 180, 242, 248, 258, 261, 274, 428, 555, 581, 613, 615, 617, 838, 964], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 253, 615, 758], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 60, 124, 174, 176, 179, 213, 215, 225, 279, 288, 297, 309, 310, 353, 354, 767, 791, 868, 924, 925, 928, 931, 934, 959, 960, 1027, 1094], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 116, 121, 122, 132, 135, 235, 251, 255, 261, 378, 393, 411, 412, 413, 416, 435, 455, 464, 496, 502, 507, 509, 516, 525, 527, 528, 533, 534, 535, 536, 537, 538, 541, 549, 551, 553, 554, 555, 566, 597, 599, 605, 607, 608, 612, 616, 648, 675, 699, 702, 705, 708, 712, 717, 718, 719, 720, 733, 752, 753, 755, 758, 767, 775, 777, 779, 780, 781, 782, 838, 898, 942, 1036, 1056, 1080, 1158], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 103, 104, 131, 132, 188, 230, 240, 243, 246, 251, 255, 256, 261, 268, 270, 282, 283, 306, 312, 340, 347, 498, 502, 505, 555, 573, 651, 652, 653, 656, 698, 744, 745, 749, 791, 802, 807, 934, 946, 947, 948, 950, 1030, 1040, 1084, 1137, 1148, 1165], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 177, 471, 486, 491, 920, 1014], "stem": [34, 807], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 172, 173, 176, 201, 278, 316, 332, 376, 397, 438, 483, 484, 495, 502, 544, 551, 552, 553, 554, 573, 615, 648, 673, 695, 712, 737, 754, 776, 791, 806, 807, 838, 884, 930, 937, 944, 1012, 1015, 1177, 1182], "tail": [34, 38, 174, 213, 215, 225, 279, 288, 309, 310, 353, 354, 767, 791, 826, 868, 925, 928, 931, 934, 1162], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 62, 86, 112, 113, 131, 172, 173, 175, 193, 224, 235, 261, 307, 414, 415, 422, 428, 500, 544, 551, 597, 600, 604, 612, 613, 670, 677, 703, 880, 881, 898, 942, 951, 970, 1012, 1040, 1044, 1055, 1056, 1067, 1081, 1136, 1142, 1160], "besid": [34, 35, 38, 188], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 182], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 176, 745], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 139, 172, 173, 174, 175, 176, 180, 183, 201, 205, 213, 225, 242, 246, 248, 251, 258, 261, 269, 297, 370, 388, 399, 409, 411, 412, 416, 420, 421, 448, 455, 457, 466, 470, 472, 473, 492, 497, 554, 599, 600, 605, 610, 675, 745, 754, 764, 775, 777, 779, 781, 789, 797, 809, 818, 820, 836, 838, 843, 848, 852, 877, 898, 920, 944, 955, 961, 964, 994, 1002, 1031, 1038, 1078, 1088, 1137, 1144, 1155, 1162, 1190], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 67, 175, 197, 209, 225, 232, 235, 261, 265, 297, 298, 307, 319, 335, 393, 399, 415, 422, 427, 438, 463, 466, 543, 549, 556, 560, 595, 640, 659, 663, 690, 692, 758, 791, 873, 877, 931, 955, 994, 998, 999, 1067, 1122, 1177], "sign": [34, 35, 36, 38, 176, 183, 188, 251, 409, 411, 419, 463, 477, 501, 675, 738, 811, 1067, 1081, 1142, 1187, 1188], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 108, 172, 174, 175, 205, 225, 229, 285, 324, 334, 391, 463, 467, 500, 552, 597, 709, 754, 935, 936, 942, 974, 1006, 1059, 1082, 1149, 1177], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 167, 169, 172, 173, 174, 175, 183, 196, 258, 261, 265, 283, 347, 351, 370, 376, 473, 479, 486, 605, 816, 838, 935, 1139, 1144], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 61, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 179, 200, 220, 243, 256, 261, 270, 273, 303, 306, 307, 312, 325, 329, 335, 341, 347, 351, 379, 479, 544, 759, 1034, 1076, 1137], "TO": [34, 35, 38, 1092], "black": [34, 38, 178, 229, 237, 249, 252, 651, 1024], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 230, 240, 243, 246, 270, 282, 306, 312, 1137], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 134, 142, 154, 169, 173, 174, 175, 178, 180, 184, 193, 205, 214, 232, 265, 278, 324, 402, 404, 471, 478, 489, 522, 536, 544, 545, 551, 554, 689, 691, 705, 717, 737, 738, 754, 758, 767, 769, 786, 787, 789, 811, 832, 873, 877, 881, 898, 935, 944, 965, 1009, 1012, 1177], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 298, 573, 650, 659, 663, 692, 791], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 399, 415, 438, 601, 926, 1055], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 131, 169, 188, 274, 299, 356, 495, 612, 681, 809, 822, 834, 841, 852, 944, 954, 958, 1012, 1035, 1055, 1063, 1127, 1129, 1156], "slash": [34, 38, 922, 1006], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 60, 62, 124, 151, 170, 176, 178, 183, 188, 194, 206, 238, 242, 248, 251, 253, 258, 261, 286, 297, 302, 306, 307, 309, 310, 312, 316, 324, 328, 332, 334, 338, 340, 346, 350, 354, 437, 453, 497, 500, 551, 598, 606, 607, 608, 636, 687, 688, 690, 691, 749, 753, 756, 758, 769, 811, 838, 839, 862, 865, 866, 881, 895, 1033, 1139, 1150, 1172], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 61, 63, 175, 188, 197, 234, 416, 464, 466, 487, 602, 667, 695, 743, 759, 1006], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 613, 945], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 968], "02a70": 35, "approxim": [35, 38, 175, 271], "OR": [35, 38, 248, 399, 415, 438, 455, 926, 1055], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 218, 245, 251, 268, 286, 293, 298, 307, 313, 335, 341, 351, 396, 573, 580, 581, 640, 644, 659, 663, 692, 737, 791, 793, 832, 871, 935, 996, 1083, 1117], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 261, 1015, 1028, 1085], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 265], "equival": [35, 38, 80, 94, 108, 111, 261, 424, 428, 443, 448, 609, 686, 862, 864, 899, 931, 964, 1044, 1066, 1076, 1086], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 71, 91, 105, 139, 173, 174, 175, 177, 183, 184, 194, 209, 221, 234, 242, 245, 248, 253, 255, 258, 261, 265, 268, 283, 286, 293, 307, 312, 325, 335, 338, 341, 347, 356, 366, 400, 403, 416, 438, 443, 450, 463, 468, 477, 488, 509, 519, 541, 549, 613, 630, 689, 745, 755, 759, 770, 792, 793, 797, 843, 869, 870, 875, 935, 942, 972, 982, 996, 997, 998, 999, 1006, 1010, 1044, 1055, 1065, 1067, 1078, 1143, 1195], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1115], "02237": [35, 38], "proport": [35, 38, 174], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 116, 121, 122, 144, 178, 184, 193, 205, 223, 232, 233, 246, 253, 277, 278, 280, 303, 307, 335, 337, 338, 443, 477, 482, 555, 573, 723, 751, 760, 768, 790, 791, 881, 942, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 974, 976, 979, 1005, 1009, 1033, 1146, 1203], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1085, 1189], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 816, 917, 946, 1035], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 225], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 177], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 961], "02a9a": 35, "greater": [35, 36, 38, 108, 126, 300, 415, 543, 549, 557, 560, 595, 737, 791, 824, 1067], "than": [35, 36, 38, 43, 70, 108, 124, 126, 134, 143, 144, 169, 173, 174, 178, 180, 183, 184, 188, 205, 209, 212, 216, 225, 232, 235, 242, 248, 253, 255, 258, 261, 265, 292, 295, 300, 324, 327, 356, 415, 416, 435, 437, 466, 467, 468, 479, 480, 482, 488, 495, 543, 551, 557, 560, 595, 599, 611, 614, 616, 617, 682, 695, 706, 732, 745, 769, 791, 794, 809, 824, 830, 834, 838, 898, 923, 927, 935, 943, 953, 954, 961, 964, 981, 1009, 1013, 1028, 1029, 1044, 1049, 1066, 1067, 1112, 1116, 1146, 1153, 1156, 1172, 1190], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 221, 232, 268], "02a99": 35, "less": [35, 36, 38, 61, 63, 80, 169, 173, 174, 175, 180, 184, 234, 248, 265, 279, 288, 289, 295, 309, 310, 353, 354, 393, 415, 416, 420, 463, 466, 497, 549, 653, 673, 699, 745, 747, 769, 791, 809, 811, 838, 868, 882, 898, 925, 928, 929, 931, 934, 964, 1049, 1067, 1086, 1165, 1166, 1179, 1190, 1196], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 62, 173, 174, 190, 212, 242, 248, 258, 261, 307, 416, 458, 651, 695, 838, 875, 980, 999, 1041, 1042, 1067, 1141, 1163], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 143, 175, 190, 194, 791, 797, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934, 967, 980, 988, 1006, 1203], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 261, 265, 307, 789, 822, 1047], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 61, 63, 132, 173, 175, 205, 209, 213, 215, 246, 259, 273, 418, 425, 496, 523, 552, 553, 584, 596, 605, 723, 758, 759, 786, 787, 809, 824, 838, 882, 1028, 1030, 1137], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 232, 273, 371, 372, 412, 434, 734, 742, 854, 1044, 1046, 1165], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 70, 80, 205, 212, 235, 252, 265, 315, 331, 464, 467, 479, 517, 597, 614, 616, 809, 858, 880, 942, 944, 1009, 1029, 1042, 1192], "late": [35, 173, 175, 298, 300, 758, 759, 944, 1000, 1044, 1061, 1078, 1193], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 517], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 313, 329, 1150], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 61, 63, 126, 172, 173, 174, 176, 178, 180, 183, 188, 189, 201, 203, 213, 215, 229, 258, 261, 289, 292, 295, 538, 552, 614, 616, 617, 838, 864, 935, 944, 955, 970, 1017, 1020, 1026, 1059, 1153], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 90, 154, 161, 173, 175, 180, 188, 191, 196, 205, 265, 455, 482, 487, 492, 611, 613, 854, 870, 875, 996, 1010, 1063, 1143, 1156, 1170, 1182], "mcomma": 35, "02a29": 35, "comma": [35, 36, 211, 224, 245, 325, 1145], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 229, 253, 325, 1085], "model": [35, 124, 276, 291, 297, 300, 454, 1067, 1140, 1143, 1162], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 62, 205, 978], "lazi": [35, 242, 248, 258, 261, 407, 754], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 175, 205, 234, 417, 599, 601, 605, 651, 652, 653, 703, 744, 745, 898, 1060, 1075, 1149], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 61, 62, 63, 86, 108, 112, 113, 116, 121, 122, 126, 131, 134, 144, 151, 173, 175, 193, 232, 233, 242, 246, 248, 254, 255, 258, 261, 265, 289, 393, 399, 411, 412, 424, 470, 473, 477, 479, 482, 508, 521, 606, 660, 734, 745, 753, 755, 766, 797, 807, 809, 871, 873, 874, 875, 898, 903, 904, 905, 907, 923, 935, 943, 947, 983, 994, 996, 997, 1006, 1009, 1013, 1015, 1018, 1024, 1028, 1029, 1030, 1043, 1080, 1081, 1088, 1104, 1110, 1143, 1150, 1158, 1161, 1165, 1170, 1171, 1178], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 265], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 961], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 573], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 251, 265, 393, 455, 464, 479, 1030], "smte": 35, "02aac": 35, "spar": [35, 291, 479], "02225": [35, 38], "parallel": [35, 38, 61, 63, 74, 75, 76, 80, 93, 179, 202, 205, 209, 211, 246, 301, 302, 323, 487, 767, 791, 828, 830, 838, 841, 874, 882, 983, 994, 997, 1044, 1046, 1047, 1132, 1137, 1194, 1195, 1202, 1206], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 62, 193, 206, 216, 232, 238, 245, 248, 253, 255, 261, 265, 274, 286, 300, 307, 325, 329, 335, 341, 347, 505, 616, 1038, 1087, 1091, 1158], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 249, 261, 307, 500, 517, 597, 776, 1034, 1073, 1082, 1088, 1179], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 968], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 882], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 124, 188, 238], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1055], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 62, 193, 194, 229, 242, 245, 246, 248, 255, 258, 261, 268, 271, 283, 307, 329, 351, 362, 410, 479, 609, 732, 828, 898, 1000, 1026, 1044, 1046], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 245], "00026": 36, "ampersand": [36, 708], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 517], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 453, 454, 723, 830, 843, 1048, 1115, 1145], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 180, 816, 877], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 291, 479], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 496, 507, 538, 649, 944, 1061], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 265, 356], "ONE": [36, 696], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 412], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1064], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 121, 127, 169, 216, 245, 265, 282, 405, 437, 473, 477, 482, 505, 528, 541, 544, 545, 549, 753, 755, 820, 834, 874, 942, 998, 1014, 1094, 1192], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 242, 248, 258, 261], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 62, 183, 194, 249, 265, 317, 320, 350, 351, 457, 477, 544, 573, 816, 935, 945, 951, 1012, 1046], "nbsp": [36, 351], "000a0": [36, 38], "NO": [36, 38, 144, 184, 225, 367, 676, 944, 1009], "space": [36, 38, 62, 80, 101, 112, 113, 126, 148, 169, 173, 174, 175, 180, 193, 196, 220, 234, 261, 279, 286, 288, 289, 307, 309, 310, 353, 354, 361, 372, 373, 381, 400, 419, 421, 440, 501, 506, 515, 519, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 604, 613, 648, 768, 790, 791, 799, 836, 851, 865, 866, 867, 868, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934, 943, 946, 947, 948, 949, 950, 957, 961, 962, 963, 964, 965, 973, 975, 980, 988, 989, 991, 992, 995, 997, 1005, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1044, 1047, 1081], "000ac": 36, "NOT": [36, 38, 203, 399, 438, 483, 522, 523, 536, 537, 809, 926, 1156], "num": [36, 178, 192, 193, 206, 216, 232, 246, 248, 253, 255, 261, 265, 283, 286, 325, 329, 347, 351, 443, 628, 630, 712, 713, 714, 715, 724, 744, 775, 777, 779, 781, 926, 931, 1039, 1145], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 261, 268, 271, 307, 313, 329, 335, 341, 1150], "indic": [36, 224, 242, 248, 253, 258, 261, 297, 651, 799], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 265], "period": [36, 86, 135, 139, 190, 213, 471, 604, 770, 848, 935, 943, 962, 972, 994, 996, 1009, 1165], "0002e": 36, "full": [36, 136, 144, 154, 191, 236, 240, 286, 416, 431, 459, 464, 567, 578, 613, 717, 754, 767, 791, 877, 882, 943, 985, 991, 1036, 1055, 1088, 1145, 1153], "stop": [36, 167, 178, 234, 261, 298, 300, 302, 307, 325, 335, 355, 482, 522, 536, 832, 935, 937, 1010, 1035, 1159, 1177], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 193, 241, 244, 248, 255, 261, 269, 412, 863, 926, 927, 945, 1080], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 90, 173, 177, 178, 179, 188, 197, 210, 234, 292, 295, 298, 388, 581, 599, 681, 766, 828, 830, 898, 941, 942, 958, 1012, 1013, 1014, 1016, 1022, 1028, 1029, 1030, 1170], "semi": [36, 293, 327, 509, 753, 980, 1031], "0003b": 36, "semicolon": [36, 482, 1145], "shy": 36, "000ad": 36, "soft": [36, 170, 377, 836], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 60, 154, 172, 174, 175, 184, 203, 205, 225, 234, 235, 261, 419, 467, 473, 477, 483, 599, 605, 614, 616, 617, 695, 703, 706, 710, 744, 745, 755, 830, 838, 877, 898, 988, 1044, 1156, 1170], "hmm": [37, 170, 179, 192, 203, 584, 717, 1009], "annoi": [37, 43, 356, 479, 695, 1170], "thing": [37, 40, 42, 43, 49, 102, 139, 166, 172, 173, 175, 176, 177, 178, 179, 180, 184, 193, 197, 201, 204, 205, 209, 213, 225, 242, 248, 249, 251, 258, 261, 271, 324, 334, 359, 417, 433, 437, 461, 467, 470, 477, 501, 505, 573, 580, 581, 597, 599, 606, 611, 613, 635, 695, 717, 734, 758, 767, 789, 797, 802, 834, 838, 863, 877, 882, 931, 935, 936, 963, 968, 991, 996, 1012, 1024, 1028, 1029, 1035, 1049, 1063, 1086, 1177, 1195], "thin": [37, 38], "border": 37, "anfrag": [37, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "dauer": [37, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "tage": [37, 198, 200, 208, 387, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1201, 1203, 1204, 1206, 1207, 1208], "sysprog": [37, 169, 170, 289, 389, 791, 845, 850, 934, 975, 976, 979, 1203, 1204, 1206, 1207], "catcher": 37, "somehow": [37, 42, 132, 139, 143, 153, 154, 174, 327, 611, 846, 1165, 1166], "einf\u00fchrungskur": [37, 1186, 1203, 1204, 1206, 1207], "richtet": [37, 1188, 1203], "kennen": [37, 149, 371, 1203], "lernen": [37, 1203], "zusammenh\u00e4ng": [37, 1203], "grundpfeil": [37, 1203], "erkl\u00e4rt": [37, 193, 196, 200, 1187, 1203, 1207, 1208], "bild": [37, 196, 1203], "orientieren": [37, 1203], "zurechtfinden": [37, 149, 371, 1203], "somedai": 37, "better": [37, 57, 60, 116, 117, 125, 143, 154, 167, 169, 170, 174, 178, 184, 185, 195, 205, 206, 208, 209, 211, 212, 213, 216, 217, 230, 234, 240, 242, 243, 245, 246, 251, 252, 253, 255, 256, 259, 262, 265, 270, 274, 282, 289, 302, 306, 312, 350, 396, 408, 416, 423, 432, 437, 438, 439, 445, 449, 452, 456, 457, 465, 467, 469, 474, 475, 478, 482, 487, 488, 493, 495, 573, 600, 608, 622, 635, 652, 675, 687, 690, 695, 697, 735, 747, 758, 788, 790, 791, 838, 917, 943, 944, 964, 980, 983, 1009, 1010, 1038, 1049, 1067, 1081, 1094, 1133, 1134, 1137, 1142, 1144, 1149, 1155, 1170, 1179], "yet": [37, 80, 163, 173, 180, 183, 193, 195, 262, 263, 273, 286, 324, 434, 467, 495, 504, 517, 519, 554, 555, 567, 573, 666, 769, 838, 855, 865, 866, 943, 951, 955, 1009, 1036, 1066, 1094, 1161, 1170, 1179], "redefin": 37, "wrap": [37, 62, 65, 232, 270, 324, 516, 755, 761, 838, 1162], "look": [37, 42, 43, 45, 61, 63, 67, 84, 91, 104, 126, 131, 139, 144, 154, 166, 167, 172, 173, 174, 175, 176, 178, 180, 183, 188, 193, 201, 205, 209, 212, 224, 230, 234, 259, 289, 292, 295, 298, 299, 317, 320, 324, 338, 355, 388, 451, 459, 467, 473, 477, 479, 482, 483, 490, 538, 553, 554, 567, 584, 610, 622, 634, 686, 699, 723, 755, 761, 762, 792, 797, 807, 834, 838, 865, 866, 870, 874, 877, 888, 890, 895, 902, 910, 925, 936, 942, 943, 951, 968, 978, 1005, 1006, 1029, 1033, 1043, 1060, 1063, 1102, 1106, 1115, 1137, 1144, 1145, 1156, 1172, 1190, 1193], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 62, 80, 96, 139, 158, 173, 178, 190, 203, 225, 320, 324, 327, 367, 388, 463, 466, 473, 554, 631, 634, 702, 743, 876, 936, 943, 955, 980, 1144], "approx": [38, 1125, 1170], "approxeq": 38, "assign": [38, 99, 193, 194, 195, 200, 206, 216, 223, 231, 242, 245, 248, 251, 253, 257, 258, 263, 265, 269, 293, 297, 298, 300, 325, 330, 341, 348, 352, 370, 376, 377, 399, 416, 422, 423, 432, 439, 445, 446, 449, 452, 456, 461, 463, 465, 469, 474, 475, 509, 516, 522, 523, 531, 536, 537, 599, 600, 603, 610, 666, 675, 682, 692, 696, 697, 699, 703, 710, 733, 735, 740, 749, 755, 787, 788, 790, 791, 942, 944, 983, 994, 997, 999, 1076, 1087, 1159, 1161], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 412, 922, 1080], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 229, 237, 253, 325, 455, 772, 776, 779, 780, 781, 782, 790, 791, 1085, 1191], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 297, 401], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 67, 127, 148, 175, 359, 407, 423, 432, 437, 439, 445, 449, 452, 456, 461, 465, 469, 474, 475, 502, 519, 697, 735, 788, 790, 791, 1156], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1170], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 175, 1144], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 67, 87, 99, 109, 123, 126, 148, 173, 174, 175, 176, 192, 195, 203, 206, 211, 216, 221, 223, 229, 232, 235, 238, 239, 243, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 289, 293, 302, 303, 306, 307, 313, 321, 325, 329, 335, 341, 347, 351, 362, 364, 365, 370, 393, 400, 401, 403, 407, 434, 438, 467, 477, 479, 493, 500, 505, 599, 605, 612, 666, 667, 672, 673, 675, 679, 705, 742, 754, 755, 767, 769, 811, 832, 846, 862, 865, 866, 875, 877, 881, 882, 895, 898, 899, 920, 924, 926, 931, 937, 942, 943, 944, 956, 961, 1009, 1012, 1034, 1036, 1062, 1068, 1073, 1075, 1076, 1080, 1081, 1084, 1105], "caylei": 38, "0212d": 38, "letter": [38, 410, 1066], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 252, 313, 329], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 99, 131, 169, 209, 278, 282, 378, 455, 464, 495, 496, 497, 499, 500, 502, 504, 517, 519, 520, 538, 551, 552, 553, 554, 555, 614, 615, 616, 617, 706, 707, 744, 753, 754, 785, 786, 787, 789, 1171, 1178, 1193, 1208], "coloneq": 38, "complement": [38, 108, 416], "02201": 38, "complex": [38, 71, 173, 184, 188, 205, 211, 231, 248, 253, 255, 261, 265, 269, 271, 286, 293, 307, 335, 370, 391, 434, 446, 461, 770, 942, 943, 967, 983, 1006, 1067, 1076, 1183, 1193], "02102": 38, "02261": 38, "ident": [38, 257, 307, 319, 590, 1055, 1057, 1076], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 467, 517], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 205, 874, 942, 943, 1142, 1144], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 601], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1087], "02200": 38, "FOR": [38, 184, 206, 213], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 234, 242, 248, 251, 252, 253, 258, 261, 265, 303, 324, 399, 407, 408, 413, 423, 427, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 540, 647, 697, 708, 735, 745, 747, 788, 790, 791], "pi": [38, 68, 80, 108, 126, 144, 148, 185, 189, 215, 245, 248, 289, 328, 376, 387, 389, 413, 440, 443, 461, 551, 554, 555, 610, 630, 710, 771, 791, 815, 819, 842, 847, 853, 856, 859, 934, 941, 943, 944, 955, 1000, 1013, 1015, 1022, 1023, 1026, 1067], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 99, 116, 122, 126, 135, 139, 140, 141, 142, 144, 175, 180, 196, 199, 201, 206, 212, 216, 221, 234, 235, 242, 245, 246, 253, 255, 265, 278, 289, 300, 335, 338, 347, 351, 392, 393, 395, 399, 401, 403, 411, 434, 435, 437, 443, 450, 458, 460, 464, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 502, 504, 507, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 574, 580, 581, 583, 584, 587, 590, 592, 597, 598, 599, 600, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 675, 684, 685, 686, 687, 688, 689, 690, 691, 700, 702, 705, 706, 707, 723, 724, 727, 738, 741, 744, 745, 749, 753, 754, 755, 756, 758, 767, 769, 771, 775, 777, 779, 780, 781, 782, 785, 786, 787, 789, 797, 802, 806, 807, 809, 816, 818, 820, 822, 824, 826, 830, 832, 834, 843, 848, 851, 852, 855, 857, 858, 864, 875, 882, 895, 898, 920, 926, 936, 938, 942, 958, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 974, 976, 979, 993, 996, 1000, 1002, 1004, 1005, 1009, 1010, 1012, 1013, 1014, 1015, 1020, 1024, 1027, 1028, 1030, 1073, 1088, 1165, 1172, 1177, 1179, 1182], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 759, 1165], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 523], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 233, 246, 265, 335], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 220, 324, 538, 551, 836, 898, 917, 935, 1035], "corner": [38, 234, 297, 388, 400, 480, 492, 551, 767], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 206, 229, 253, 255, 261, 271, 286, 293, 307, 329, 341, 355, 364, 393, 397, 413, 437, 997, 1098], "lower": [38, 175, 229, 242, 248, 253, 258, 261, 265, 271, 286, 307, 355, 364, 393, 397, 413, 437, 497, 641, 998, 1006, 1055, 1161], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 99, 131, 134, 144, 175, 265, 298, 302, 324, 334, 463, 470, 516, 520, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 595, 673, 775, 791, 797, 864, 873, 964, 1005, 1029, 1142, 1144], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 175, 303], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 242, 248, 251, 252, 258, 261, 283, 291, 307, 393, 416, 505, 590, 614, 935, 1006, 1081, 1145, 1194, 1201], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 193, 495, 522, 536, 706, 883, 885, 886, 968, 1077], "nor": [38, 193, 249, 522, 536, 606, 706, 883, 885, 886, 935, 955, 968, 1077], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 175, 178, 183, 188, 205, 232, 242, 248, 251, 258, 261, 265, 292, 295, 297, 327, 373, 497, 507, 666, 673, 695, 753, 797, 935, 943, 967, 1010, 1033, 1049, 1058, 1092, 1140, 1142, 1144, 1163, 1177], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 116, 120, 299, 328, 816, 1141], "differenti": [38, 71, 689, 757, 838, 883, 942, 1067, 1136, 1150], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 126, 213, 265, 437, 443, 597, 615, 616, 630, 758, 875, 898, 930, 1005, 1165], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 75, 127, 133, 137, 139, 142, 143, 144, 164, 180, 183, 188, 191, 193, 209, 230, 243, 248, 249, 256, 258, 261, 265, 270, 273, 283, 291, 297, 306, 312, 324, 347, 356, 417, 466, 473, 487, 493, 499, 516, 538, 546, 547, 548, 549, 550, 554, 596, 597, 602, 717, 732, 750, 753, 799, 838, 875, 876, 898, 935, 943, 955, 996, 1082, 1137, 1140, 1142, 1171, 1190, 1193], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 233, 246, 335, 597, 599, 607, 608, 616, 702, 717, 718, 719, 720, 721, 758], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 245, 1094], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 303, 341], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 163, 173], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 67, 87, 110, 112, 113, 148, 176, 194, 225, 281, 422, 433, 438, 455, 463, 494, 503, 515, 529, 543, 595, 630, 669, 747, 791, 820, 878, 880, 882, 898, 920, 931, 968, 969, 971, 1018, 1071, 1086, 1103, 1156, 1190], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 265], "varsubsetneq": 38, "variant": [38, 116, 120, 217, 233, 246, 276, 277, 278, 337, 393, 409, 526, 590, 743, 747, 749, 772, 776, 779, 790, 791, 816, 1197, 1200], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 153, 178, 188, 209, 234, 390, 470, 548, 700, 809, 824, 877], "author": [39, 176, 183, 261, 613, 811, 942, 1092, 1146], "overridden": [39, 416, 667, 734, 1170], "titl": [39, 40, 169, 179, 243, 256, 261, 270, 273, 306, 307, 312, 1052, 1137, 1142], "favorit": [39, 205, 209, 212, 230, 234, 256, 259, 356, 838, 944, 996, 1060, 1137], "__": [39, 190, 192, 200, 307, 748, 752, 1056], "ref": [39, 126, 149, 188, 277, 278, 695, 710, 754, 786], "uniqu": [39, 188, 235, 277, 278, 280, 554, 573, 755, 767, 786, 788, 790, 791, 944, 958, 972, 1031, 1084, 1088, 1159], "across": [39, 43, 173, 180, 190, 242, 248, 258, 261, 291, 300, 324, 388, 416, 436, 460, 495, 500, 519, 582, 758, 769, 789, 865, 866, 877, 895, 942, 944, 964, 972, 1006, 1067, 1078, 1146], "tree": [39, 42, 66, 102, 104, 126, 148, 163, 165, 174, 176, 179, 184, 188, 201, 202, 209, 233, 246, 249, 252, 256, 289, 317, 320, 354, 446, 468, 473, 485, 517, 552, 554, 651, 654, 791, 813, 816, 830, 840, 863, 865, 866, 868, 882, 898, 899, 906, 910, 912, 918, 927, 934, 943, 948, 950, 955, 975, 983, 992, 1015, 1020, 1040, 1052, 1144, 1162, 1170, 1172], "_dummi": 39, "dummi": [39, 179, 376, 377, 818, 857, 1177], "One": [39, 43, 61, 62, 63, 78, 82, 84, 99, 108, 117, 125, 173, 175, 184, 201, 212, 233, 251, 272, 273, 298, 351, 356, 370, 381, 397, 437, 450, 459, 462, 471, 473, 478, 484, 489, 495, 554, 573, 581, 596, 615, 620, 630, 635, 700, 734, 759, 769, 838, 843, 869, 871, 874, 882, 898, 942, 943, 944, 968, 980, 985, 996, 997, 1005, 1010, 1015, 1047, 1071, 1145, 1146, 1150, 1155, 1192, 1206], "a_footnot": 39, "footer": 39, "block": [39, 65, 100, 112, 113, 149, 172, 173, 174, 175, 213, 215, 233, 240, 242, 246, 248, 258, 261, 270, 273, 282, 303, 306, 324, 355, 370, 375, 379, 393, 395, 413, 432, 438, 439, 445, 449, 452, 456, 464, 465, 467, 469, 474, 475, 502, 602, 605, 697, 723, 735, 754, 765, 766, 767, 768, 769, 788, 789, 790, 791, 824, 840, 850, 854, 868, 869, 871, 872, 874, 875, 920, 934, 943, 967, 974, 975, 980, 985, 989, 990, 995, 997, 1005, 1006, 1009, 1011, 1033, 1035, 1061, 1064, 1071, 1074, 1137], "rubric": 39, "nbsphinx": 40, "capabl": [40, 80, 173, 174, 180, 764, 838, 864, 927, 935, 943, 996, 1163, 1193], "nice": [40, 65, 170, 173, 190, 213, 235, 300, 472, 473, 493, 541, 608, 695, 857, 864, 937, 943, 994, 1057, 1094, 1142, 1144, 1153, 1159, 1173], "few": [40, 127, 173, 174, 175, 176, 179, 180, 205, 209, 242, 391, 461, 712, 838, 876, 1035, 1039, 1171, 1195], "keep": [40, 43, 112, 113, 174, 175, 188, 197, 209, 212, 216, 232, 265, 338, 356, 381, 405, 461, 467, 468, 677, 717, 830, 838, 843, 862, 877, 880, 936, 988, 1024, 1027, 1047, 1064, 1142, 1143, 1190], "mind": [40, 132, 173, 174, 394, 761, 1064], "though": [40, 43, 45, 53, 70, 172, 173, 178, 180, 183, 184, 188, 189, 194, 201, 205, 209, 211, 212, 230, 233, 235, 246, 248, 249, 251, 256, 259, 273, 282, 291, 292, 295, 306, 327, 328, 356, 397, 407, 416, 428, 433, 495, 496, 497, 500, 509, 517, 519, 552, 553, 554, 573, 597, 599, 600, 604, 607, 610, 613, 614, 616, 617, 630, 631, 666, 673, 695, 703, 705, 712, 717, 723, 740, 744, 749, 754, 755, 758, 765, 777, 779, 792, 793, 797, 816, 830, 869, 876, 877, 880, 883, 917, 931, 935, 942, 943, 944, 954, 962, 964, 991, 996, 998, 1000, 1006, 1015, 1033, 1035, 1036, 1039, 1044, 1046, 1053, 1055, 1063, 1067, 1080, 1106, 1137, 1144, 1145, 1158, 1165, 1166, 1170, 1172, 1190, 1193], "toplevel": [40, 44, 111, 126, 144, 201, 234, 283, 481, 483, 487, 488, 489, 491, 538, 811, 839, 864, 1033, 1179], "begin": [40, 42, 43, 124, 128, 129, 130, 134, 136, 137, 143, 144, 151, 172, 173, 183, 211, 232, 233, 245, 248, 261, 265, 277, 278, 282, 299, 307, 328, 387, 393, 401, 413, 416, 437, 443, 460, 461, 463, 493, 500, 590, 600, 613, 626, 628, 630, 631, 632, 634, 635, 637, 638, 639, 641, 642, 643, 644, 648, 651, 662, 695, 710, 723, 726, 730, 737, 743, 744, 747, 761, 791, 864, 898, 922, 930, 956, 964, 1040, 1064, 1086, 1137, 1171], "deeper": [40, 174, 205, 292, 295, 482, 991], "trail": [40, 177, 261, 303, 307, 325, 361, 362], "underscor": [40, 410, 1036, 1043, 1056, 1066], "ipynb": [40, 192, 212, 222, 224, 261, 271, 292, 296, 302, 306, 312, 317, 320, 324, 328, 334, 335, 340, 346, 350, 1139, 1143], "labels_": [40, 194, 196, 351], "result": [40, 80, 127, 132, 143, 166, 175, 184, 190, 192, 212, 216, 232, 242, 248, 251, 258, 261, 265, 274, 283, 303, 307, 400, 416, 451, 458, 460, 461, 467, 497, 522, 526, 613, 641, 702, 708, 717, 745, 809, 954, 1000, 1028, 1040, 1055, 1069, 1075, 1087, 1145], "cluster": [40, 196, 351, 1139, 1144], "membership": [40, 194, 211, 212, 254, 509, 1068, 1085], "sequenc": [40, 108, 111, 116, 120, 166, 193, 194, 196, 206, 212, 233, 235, 244, 246, 247, 248, 251, 254, 258, 261, 265, 283, 298, 300, 307, 313, 352, 392, 446, 497, 543, 558, 559, 560, 595, 640, 659, 663, 679, 692, 700, 747, 791, 997, 1040, 1041, 1042, 1058, 1067, 1068, 1073, 1075, 1078, 1082, 1083, 1107, 1119, 1150, 1193], "bring": [40, 45, 124, 132, 144, 154, 166, 173, 175, 183, 184, 205, 209, 212, 215, 251, 289, 292, 295, 298, 300, 324, 327, 378, 383, 384, 388, 573, 612, 651, 675, 686, 694, 834, 838, 850, 942, 943, 944, 1013, 1060, 1109, 1132, 1150, 1190, 1193], "bigplan": [40, 196, 1139], "686": [40, 194, 248, 351, 1026], "unknown": [40, 291, 479, 776, 794, 943, 1049], "cmd": [40, 179, 832, 857, 1172], "color": [40, 178, 196, 351, 920, 1139, 1165], "tmp": [40, 151, 154, 169, 174, 176, 179, 216, 229, 232, 248, 253, 261, 265, 268, 271, 273, 278, 280, 283, 286, 293, 303, 307, 313, 329, 335, 341, 347, 351, 402, 444, 467, 480, 485, 486, 493, 554, 555, 675, 752, 771, 816, 838, 860, 864, 869, 878, 882, 883, 896, 897, 898, 900, 902, 903, 905, 907, 910, 917, 920, 921, 926, 947, 954, 965, 966, 968, 969, 971, 996, 1002, 1035, 1086, 1093, 1149, 1171, 1172], "craft": [41, 53, 259, 301, 302, 477, 522, 759, 792], "tar": [42, 60, 66, 111, 126, 160, 169, 184, 213, 215, 279, 288, 289, 309, 310, 353, 354, 473, 791, 838, 860, 861, 863, 868, 934, 1020, 1022, 1023, 1024, 1026, 1027, 1033, 1092, 1172, 1196], "xz": [42, 60, 66, 176, 184, 289, 466, 1020, 1024, 1026, 1027], "push": [42, 79, 151, 177, 179, 188, 191, 234, 249, 259, 316, 332, 376, 438, 483, 484, 495, 519, 629, 632, 767, 791, 838, 980, 998, 1112, 1116, 1170], "cmakelist": [42, 44, 124, 126, 131, 144, 199, 200, 201, 202, 203, 234, 251, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 538, 551, 552, 553, 554, 555, 574, 577, 580, 581, 583, 586, 589, 592, 686, 1001, 1004, 1008, 1013, 1014, 1176, 1179, 1181], "src": [42, 173, 174, 176, 234, 248, 278, 280, 286, 376, 405, 417, 467, 491, 492, 502, 538, 541, 551, 552, 553, 554, 556, 615, 632, 753, 754, 864, 882, 926, 1086, 1092, 1170], "load": [42, 43, 53, 56, 62, 77, 90, 172, 183, 184, 191, 192, 196, 212, 220, 221, 237, 238, 242, 248, 258, 261, 265, 268, 274, 283, 300, 301, 302, 318, 321, 323, 324, 341, 351, 453, 473, 485, 768, 790, 791, 794, 795, 797, 798, 800, 803, 805, 806, 808, 813, 815, 818, 819, 823, 829, 832, 834, 835, 838, 840, 842, 847, 850, 853, 856, 859, 874, 934, 943, 944, 975, 983, 989, 1012, 1029, 1137, 1155, 1195, 1204, 1206], "store": [42, 57, 62, 77, 90, 108, 131, 135, 172, 174, 191, 193, 201, 202, 232, 235, 242, 300, 301, 302, 323, 324, 401, 453, 497, 679, 723, 737, 740, 747, 768, 775, 777, 781, 790, 791, 804, 838, 877, 890, 934, 951, 975, 983, 989, 1013, 1031, 1035, 1036, 1040, 1084, 1115, 1149, 1165, 1206], "search": [42, 51, 53, 108, 154, 166, 168, 169, 173, 194, 197, 203, 205, 211, 212, 221, 232, 233, 235, 238, 242, 245, 246, 248, 251, 252, 253, 256, 258, 261, 274, 283, 286, 290, 293, 298, 303, 307, 313, 315, 331, 335, 341, 347, 437, 464, 467, 479, 543, 554, 556, 560, 595, 640, 645, 659, 663, 680, 692, 791, 816, 880, 898, 930, 991, 1013, 1026, 1043, 1072, 1143, 1170, 1192], "payload": [42, 799, 826, 936, 938], "primari": [42, 173, 184, 205, 291, 292, 295, 471, 836, 865, 866, 873, 875, 1115], "insert": [42, 62, 65, 111, 124, 167, 172, 188, 192, 209, 211, 216, 246, 248, 251, 253, 255, 261, 265, 268, 286, 307, 313, 325, 341, 351, 370, 434, 451, 455, 471, 498, 504, 526, 532, 543, 560, 561, 562, 573, 590, 595, 631, 632, 645, 655, 656, 680, 688, 689, 690, 692, 699, 706, 708, 723, 744, 787, 789, 791, 816, 822, 832, 834, 838, 898, 942, 955, 986, 996, 1068, 1083, 1084, 1093, 1149, 1170], "const": [42, 58, 72, 99, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 126, 131, 144, 200, 235, 251, 298, 300, 337, 405, 413, 417, 435, 437, 443, 451, 463, 465, 467, 469, 474, 475, 480, 496, 497, 498, 499, 500, 502, 504, 519, 520, 526, 527, 528, 531, 532, 533, 535, 536, 537, 543, 547, 551, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 581, 586, 588, 590, 595, 597, 598, 599, 600, 602, 604, 605, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 623, 624, 630, 634, 636, 637, 638, 639, 640, 646, 650, 652, 655, 656, 659, 662, 663, 666, 669, 670, 673, 675, 676, 677, 680, 681, 684, 685, 687, 688, 689, 690, 691, 692, 699, 701, 702, 703, 704, 705, 706, 707, 708, 717, 718, 719, 720, 721, 723, 725, 726, 729, 730, 731, 732, 733, 735, 737, 738, 739, 740, 742, 743, 745, 747, 751, 753, 754, 755, 756, 757, 760, 768, 769, 771, 777, 781, 785, 786, 787, 788, 789, 790, 791, 794, 797, 802, 818, 820, 824, 832, 834, 848, 852, 858, 956, 964, 968, 969, 970, 971, 974, 976, 979, 981, 983, 985, 993, 999, 1002, 1005, 1006, 1010, 1030, 1048, 1125, 1148, 1182, 1188, 1189], "care": [42, 46, 48, 82, 144, 172, 173, 175, 178, 180, 205, 213, 245, 361, 393, 416, 425, 427, 443, 467, 468, 491, 522, 523, 598, 612, 630, 673, 744, 745, 749, 758, 781, 782, 785, 792, 816, 828, 830, 838, 843, 864, 865, 866, 943, 951, 955, 967, 980, 988, 1014, 1036, 1060, 1064, 1076, 1083, 1086, 1087, 1094, 1117, 1141, 1149, 1162, 1172], "dump": [42, 173, 192, 221, 237, 238, 248, 261, 265, 268, 274, 283, 318, 321, 324, 502, 521, 522, 605, 610, 733, 753, 876, 1009, 1010], "db": [42, 50, 183, 209, 234, 235, 236, 240, 246, 259, 274, 483, 497, 498, 504, 526, 532, 687, 688, 689, 690, 691, 759, 1093], "pull": [42, 44, 50, 62, 65, 79, 126, 127, 143, 177, 188, 225, 234, 235, 249, 355, 378, 479, 483, 495, 612, 695, 811, 838, 1040, 1043, 1161], "paramet": [42, 58, 62, 112, 113, 114, 115, 116, 117, 118, 121, 125, 131, 139, 172, 175, 180, 190, 193, 200, 201, 205, 210, 211, 212, 214, 216, 224, 225, 229, 232, 233, 234, 235, 242, 246, 248, 251, 252, 254, 257, 258, 261, 268, 271, 292, 293, 295, 297, 342, 356, 361, 370, 392, 401, 403, 407, 418, 422, 437, 438, 443, 445, 446, 449, 452, 456, 457, 463, 465, 469, 474, 475, 478, 480, 485, 541, 551, 557, 573, 587, 597, 599, 602, 606, 609, 610, 613, 617, 622, 623, 677, 683, 697, 700, 707, 723, 735, 737, 742, 755, 767, 776, 788, 790, 791, 796, 797, 804, 818, 841, 846, 851, 854, 857, 858, 878, 880, 943, 958, 981, 991, 1006, 1014, 1027, 1031, 1036, 1050, 1053, 1058, 1065, 1081, 1088, 1094, 1104, 1110, 1112, 1116, 1122, 1131, 1142, 1145, 1148, 1155, 1158, 1159, 1161, 1186, 1187], "entri": [42, 132, 170, 174, 175, 179, 237, 248, 392, 492, 508, 651, 653, 673, 826, 864, 877, 881, 882, 883, 920, 926, 958, 964, 978, 1029, 1036, 1084, 1148, 1179], "o_creat": [42, 791, 934, 964, 965, 969, 973, 975, 992, 1005], "o_trunc": [42, 48, 964], "o_wronli": [42, 791, 934, 964, 965, 967, 968, 969, 973, 974, 975, 976, 979, 992, 1005], "0666": [42, 897, 968, 969, 1005], "assert": [42, 46, 209, 233, 246, 258, 261, 275, 291, 324, 326, 479, 502, 644, 685, 688, 690, 696, 769, 962, 974, 976, 979, 1005, 1009, 1010, 1048, 1125, 1132, 1133, 1134, 1170, 1176, 1177, 1179, 1187], "ing": [42, 970], "mode": [42, 103, 126, 176, 188, 190, 225, 233, 242, 245, 246, 248, 258, 261, 265, 268, 286, 289, 293, 307, 310, 324, 341, 353, 354, 467, 543, 595, 768, 790, 791, 797, 830, 836, 864, 865, 866, 868, 871, 872, 875, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 898, 934, 937, 944, 958, 963, 964, 965, 973, 975, 989, 992, 995, 997, 1005, 1006, 1061, 1063, 1165], "binaryus": 42, "hton": [42, 961], "arpa": [42, 961], "inet": [42, 190, 961], "again": [42, 65, 101, 126, 148, 172, 173, 175, 178, 180, 184, 188, 189, 201, 205, 209, 211, 212, 213, 225, 234, 259, 264, 273, 279, 282, 288, 289, 306, 309, 312, 328, 353, 370, 371, 372, 375, 376, 381, 388, 389, 438, 479, 501, 505, 515, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 590, 595, 597, 599, 612, 613, 617, 627, 706, 717, 759, 767, 768, 786, 789, 790, 791, 858, 861, 865, 866, 867, 868, 871, 872, 879, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 928, 934, 944, 951, 954, 957, 959, 961, 962, 963, 965, 970, 973, 975, 976, 985, 989, 991, 992, 995, 997, 1006, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1033, 1053, 1058, 1076, 1081, 1086, 1137, 1155, 1158, 1190], "od": [42, 261], "hardwir": [42, 62, 338, 799, 960, 1053], "enter": [42, 112, 113, 135, 206, 213, 242, 247, 248, 258, 261, 270, 271, 273, 274, 291, 324, 325, 355, 370, 375, 395, 590, 613, 672, 706, 712, 723, 755, 816, 838, 854, 871, 894, 996, 997, 1071, 1124], "joerg": [42, 50, 151, 192, 206, 207, 209, 210, 212, 214, 221, 225, 229, 232, 238, 245, 248, 251, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 300, 302, 303, 307, 313, 318, 325, 329, 335, 341, 347, 351, 364, 367, 462, 489, 497, 504, 538, 554, 556, 572, 610, 644, 656, 675, 685, 686, 687, 688, 690, 707, 865, 866, 873, 875, 880, 894, 910, 923, 929, 954, 991, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1065, 1087, 1092, 1115, 1132, 1145, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "huber": [42, 255, 261, 1145], "caro": [42, 245, 255, 258, 265, 268, 271, 274, 283, 286, 293, 307, 325, 335, 351, 497, 504, 556, 572, 644, 656, 688, 690, 1052, 1054, 1074, 1126, 1128, 1132, 1134, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "johanna": [42, 245, 255, 258, 265, 268, 286, 293, 307, 325, 335, 351, 497, 556, 572, 644, 656, 1074, 1126, 1128, 1132, 1134, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "bodi": [42, 50, 55, 112, 113, 179, 392, 393, 395, 399, 428, 438, 467, 557, 590, 599, 600, 604, 607, 677, 695, 696, 699, 758, 1040, 1171], "compil": [42, 43, 105, 106, 110, 112, 113, 116, 119, 126, 148, 174, 175, 184, 193, 200, 201, 202, 221, 235, 238, 251, 258, 274, 283, 286, 289, 290, 298, 307, 313, 315, 331, 335, 338, 341, 347, 378, 390, 403, 412, 413, 422, 425, 427, 434, 435, 444, 446, 453, 456, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 474, 475, 479, 483, 486, 488, 491, 492, 495, 501, 515, 517, 522, 523, 536, 537, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 581, 587, 590, 595, 597, 600, 602, 606, 608, 612, 623, 651, 670, 677, 682, 684, 695, 696, 697, 698, 700, 702, 703, 705, 706, 708, 710, 712, 717, 720, 723, 732, 733, 735, 741, 744, 745, 747, 749, 753, 754, 788, 790, 791, 806, 807, 822, 934, 942, 1013, 1014, 1017, 1018, 1019, 1020, 1022, 1036, 1061, 1066, 1078, 1080, 1177, 1179, 1187, 1188, 1190, 1191, 1192, 1203], "still": [42, 54, 60, 161, 167, 172, 173, 174, 175, 183, 184, 193, 194, 195, 235, 245, 251, 289, 291, 361, 381, 390, 441, 453, 479, 482, 488, 541, 563, 584, 587, 605, 606, 627, 633, 666, 681, 706, 723, 740, 744, 749, 753, 754, 756, 757, 758, 801, 806, 838, 841, 881, 895, 917, 942, 943, 944, 994, 996, 998, 1009, 1031, 1039, 1042, 1048, 1061, 1064, 1067, 1092, 1128, 1151, 1159, 1179, 1187], "funni": [42, 44, 50, 102, 126, 148, 205, 289, 354, 500, 791, 868, 906, 912, 918, 934, 1013], "temp": [42, 44, 261, 379, 753, 754, 755], "got": [42, 45, 173, 183, 235, 307, 329, 341, 437, 709, 964, 1037], "overwritten": [42, 47, 53, 55, 56, 632, 791, 965, 1043], "suspect": [42, 175, 177], "inmem": 42, "loos": [42, 43, 209, 225, 391, 416, 463, 828], "foolishli": 42, "main": [42, 50, 62, 65, 66, 109, 116, 122, 123, 135, 148, 166, 175, 178, 179, 184, 212, 234, 246, 258, 259, 261, 278, 289, 297, 300, 302, 315, 317, 320, 324, 331, 370, 390, 392, 393, 395, 399, 401, 403, 404, 418, 433, 434, 435, 437, 441, 453, 460, 464, 467, 468, 471, 473, 479, 480, 482, 486, 502, 516, 521, 522, 523, 538, 539, 541, 549, 551, 553, 554, 573, 581, 584, 587, 601, 605, 606, 608, 610, 612, 613, 615, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 679, 684, 685, 686, 687, 688, 689, 690, 691, 695, 700, 710, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 737, 739, 740, 742, 745, 747, 753, 754, 756, 757, 758, 759, 762, 767, 769, 789, 799, 806, 807, 809, 838, 875, 877, 895, 942, 944, 945, 958, 960, 961, 962, 968, 969, 970, 971, 976, 979, 980, 982, 986, 991, 993, 996, 997, 1002, 1005, 1006, 1009, 1012, 1020, 1024, 1030, 1044, 1047, 1062, 1127, 1129, 1177, 1182, 1195], "chang": [42, 45, 46, 47, 51, 55, 56, 65, 79, 82, 126, 128, 135, 142, 143, 172, 175, 177, 178, 179, 180, 183, 184, 188, 196, 209, 225, 234, 265, 273, 377, 416, 453, 455, 459, 462, 463, 467, 477, 480, 495, 540, 546, 551, 552, 554, 555, 606, 631, 688, 742, 767, 773, 789, 791, 811, 816, 864, 873, 875, 877, 895, 904, 907, 922, 935, 937, 942, 943, 954, 958, 979, 1009, 1012, 1027, 1043, 1067, 1076, 1116, 1127, 1129, 1132, 1155, 1159, 1173, 1190], "errorhandl": 42, "just": [42, 46, 62, 67, 71, 86, 110, 133, 134, 139, 163, 172, 173, 174, 175, 176, 177, 179, 180, 184, 188, 195, 197, 201, 205, 212, 235, 246, 249, 274, 315, 324, 331, 358, 399, 418, 443, 446, 455, 473, 477, 482, 492, 497, 538, 541, 551, 553, 554, 555, 578, 597, 598, 599, 605, 608, 609, 610, 613, 632, 660, 667, 673, 677, 681, 695, 702, 706, 708, 709, 723, 738, 741, 755, 757, 759, 775, 789, 796, 801, 809, 811, 818, 822, 828, 830, 838, 854, 877, 898, 901, 902, 931, 935, 943, 944, 959, 961, 962, 968, 969, 971, 980, 981, 991, 998, 1006, 1024, 1031, 1034, 1035, 1038, 1040, 1058, 1059, 1065, 1066, 1067, 1074, 1078, 1086, 1087, 1142, 1143, 1150, 1155, 1156, 1160, 1161, 1166, 1170, 1182, 1192], "silent": [42, 255, 265, 699, 942], "truncat": [42, 261, 307, 393, 414, 516, 880, 964, 1086], "faschingb": 42, "echo": [42, 174, 225, 261, 289, 356, 554, 679, 811, 820, 838, 865, 866, 869, 870, 878, 882, 892, 901, 904, 908, 917, 935, 937, 942, 943, 944, 945, 965, 967, 976, 978, 979, 991, 994, 1000, 1009, 1172], "success": [42, 202, 242, 248, 258, 261, 454, 483, 712, 765, 816, 820, 910, 1103], "failur": [42, 43, 242, 248, 258, 261, 273, 278, 307, 355, 463, 473, 479, 493, 551, 555, 1170, 1171, 1178, 1179, 1182], "renam": [42, 50, 57, 62, 101, 124, 126, 148, 157, 166, 232, 279, 288, 289, 309, 310, 353, 354, 590, 742, 791, 806, 807, 868, 905, 918, 934, 1030, 1149], "most": [43, 44, 57, 61, 63, 89, 122, 124, 169, 172, 173, 175, 176, 179, 184, 195, 197, 203, 205, 209, 211, 233, 242, 245, 248, 249, 258, 259, 261, 265, 271, 291, 293, 307, 327, 328, 329, 355, 391, 399, 428, 431, 438, 453, 455, 461, 466, 467, 471, 472, 482, 496, 509, 552, 612, 613, 651, 703, 747, 752, 755, 761, 776, 816, 824, 838, 843, 863, 865, 866, 869, 876, 900, 931, 935, 942, 944, 956, 964, 970, 983, 998, 1006, 1009, 1010, 1012, 1033, 1034, 1035, 1040, 1047, 1048, 1049, 1055, 1056, 1064, 1066, 1067, 1068, 1071, 1074, 1077, 1078, 1082, 1084, 1087, 1088, 1094, 1136, 1137, 1146, 1150, 1154, 1158, 1159, 1164, 1166, 1170, 1171, 1177, 1192, 1193, 1195], "somebodi": [43, 180, 188, 201, 235, 405, 462, 483, 581, 605, 657, 717, 723, 734, 765, 828, 846, 1000], "concis": [43, 172, 205, 209, 259, 328, 371, 372, 482, 838, 1137], "longer": [43, 188, 1000, 1061, 1190], "necessari": [43, 60, 143, 166, 174, 180, 184, 193, 202, 216, 232, 235, 292, 295, 327, 328, 395, 405, 437, 477, 479, 483, 495, 541, 600, 604, 672, 698, 699, 733, 743, 755, 767, 834, 838, 873, 942, 944, 945, 960, 998, 1009, 1029, 1056, 1063, 1067, 1092, 1149, 1170], "gosh": [43, 169, 416, 461, 463, 657, 740, 988, 1033, 1034, 1040, 1067], "hungarian": [43, 457], "notat": [43, 200, 240, 256, 261, 266, 307, 457, 770, 943, 1049], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 235, 237, 251, 259, 306, 317, 320, 680, 688, 689, 690, 692, 791, 1126, 1127, 1128, 1129, 1134], "bolt": [43, 235], "onto": [43, 61, 63, 124, 132, 135, 183, 194, 235, 251, 324, 519, 601, 678, 692, 755, 791, 838, 923, 935, 943, 962, 994, 1017, 1024], "unclear": [43, 544, 1010], "semant": [43, 49, 83, 173, 197, 277, 278, 280, 298, 337, 448, 462, 463, 517, 598, 651, 657, 696, 703, 735, 751, 754, 755, 756, 757, 760, 768, 788, 790, 791, 797, 802, 830, 1009, 1010, 1067, 1146, 1190], "backingstor": [43, 53, 56, 791], "mangl": [43, 232, 233, 246, 263, 1061], "prefix": [43, 60, 66, 169, 184, 242, 246, 248, 258, 261, 307, 363, 609, 639, 695, 838, 1024, 1026, 1033, 1055, 1056, 1081, 1088, 1172], "m_": 43, "enough": [43, 176, 180, 197, 205, 255, 265, 298, 307, 381, 405, 496, 672, 942, 955, 983, 1013, 1035, 1052, 1060, 1081, 1150, 1155, 1162, 1164, 1171, 1192], "take": [43, 48, 88, 104, 112, 113, 127, 132, 134, 166, 167, 172, 173, 174, 177, 178, 179, 180, 183, 188, 190, 193, 194, 196, 201, 205, 206, 211, 212, 213, 233, 246, 251, 253, 261, 265, 271, 295, 334, 355, 356, 361, 370, 400, 437, 440, 457, 459, 466, 468, 472, 473, 477, 478, 480, 495, 496, 519, 520, 522, 523, 541, 551, 554, 567, 573, 587, 599, 606, 610, 613, 615, 653, 677, 695, 700, 707, 708, 717, 745, 747, 753, 757, 767, 781, 782, 801, 828, 838, 864, 865, 866, 942, 972, 1000, 1024, 1030, 1034, 1038, 1060, 1076, 1077, 1094, 1101, 1104, 1106, 1110, 1111, 1112, 1115, 1116, 1117, 1119, 1121, 1131, 1136, 1144, 1145, 1150, 1155, 1165, 1172], "dogmat": [43, 251, 388, 1150], "switch": [43, 45, 54, 58, 61, 63, 112, 113, 121, 124, 126, 127, 128, 129, 130, 134, 135, 136, 139, 174, 178, 180, 192, 193, 234, 242, 248, 258, 259, 261, 338, 356, 357, 359, 376, 379, 382, 412, 426, 430, 432, 439, 445, 449, 452, 454, 456, 465, 469, 472, 474, 475, 479, 482, 495, 509, 543, 544, 545, 595, 656, 696, 697, 735, 777, 779, 788, 790, 791, 818, 836, 843, 852, 855, 857, 871, 875, 935, 938, 996, 1029, 1187, 1191], "bool": [43, 50, 53, 55, 56, 121, 137, 143, 216, 223, 245, 248, 251, 253, 255, 258, 261, 268, 271, 286, 290, 291, 293, 297, 307, 335, 341, 487, 489, 556, 557, 561, 563, 568, 597, 599, 613, 614, 615, 616, 617, 635, 638, 644, 653, 700, 712, 713, 714, 715, 723, 726, 730, 737, 767, 769, 771, 791, 851, 858, 996, 1002, 1009, 1067, 1094, 1156, 1161], "wear": [43, 170, 174], "incorrect": [43, 242, 248, 258, 261, 265, 416, 435, 1162], "metaphor": 43, "But": [43, 173, 174, 175, 178, 189, 225, 234, 324, 399, 405, 434, 437, 443, 446, 459, 461, 467, 477, 596, 597, 605, 610, 611, 612, 630, 648, 666, 667, 705, 708, 744, 753, 757, 759, 776, 790, 791, 820, 822, 838, 848, 865, 866, 920, 934, 942, 943, 944, 951, 965, 973, 975, 980, 988, 992, 1015, 1029, 1031, 1052, 1055, 1061, 1142, 1145, 1156], "support": [43, 80, 132, 174, 176, 180, 184, 193, 197, 209, 221, 223, 242, 245, 248, 253, 255, 258, 261, 265, 268, 283, 286, 293, 325, 335, 341, 347, 366, 435, 459, 473, 479, 596, 597, 599, 703, 755, 759, 775, 785, 789, 794, 830, 920, 942, 943, 944, 954, 1006, 1012, 1040, 1048, 1055, 1061, 1078, 1092, 1142, 1144, 1159, 1177], "copy_process": 43, "law": [43, 225, 367, 410, 455, 1035, 1161], "tdd": [43, 126, 204, 209, 219, 259, 301, 317, 320, 324, 338, 389, 1170], "until": [43, 55, 99, 100, 101, 104, 107, 112, 113, 126, 131, 139, 143, 148, 161, 163, 173, 175, 177, 179, 224, 233, 245, 264, 282, 302, 328, 427, 433, 458, 461, 555, 615, 679, 723, 729, 767, 769, 806, 826, 836, 846, 848, 854, 871, 875, 882, 898, 910, 917, 959, 960, 961, 962, 985, 999, 1006, 1010, 1039, 1040, 1061, 1069, 1071, 1137], "fail": [43, 44, 154, 169, 173, 175, 183, 184, 188, 200, 205, 235, 261, 278, 310, 355, 381, 480, 483, 493, 497, 502, 504, 551, 682, 703, 705, 712, 717, 771, 789, 791, 816, 838, 917, 934, 944, 965, 970, 973, 975, 990, 991, 992, 1009, 1029, 1033, 1035, 1044, 1086, 1103, 1159, 1171, 1172, 1176, 1178, 1180], "suffici": [43, 128, 188, 193, 205, 356, 604, 632, 673, 677, 688, 696, 776, 811, 920, 1010, 1058, 1060, 1088, 1171], "pass": [43, 44, 48, 55, 57, 58, 62, 112, 113, 114, 115, 117, 118, 121, 125, 193, 201, 205, 210, 211, 212, 214, 221, 232, 234, 238, 242, 248, 251, 253, 255, 258, 261, 265, 268, 271, 273, 274, 278, 283, 286, 291, 292, 295, 303, 307, 325, 347, 351, 355, 381, 401, 403, 405, 416, 437, 441, 444, 446, 463, 493, 495, 500, 502, 541, 551, 552, 553, 554, 556, 557, 597, 607, 608, 614, 615, 616, 617, 626, 677, 683, 707, 737, 745, 750, 754, 757, 785, 786, 787, 804, 841, 882, 942, 968, 971, 982, 991, 1014, 1031, 1033, 1034, 1035, 1036, 1048, 1049, 1050, 1052, 1058, 1076, 1078, 1086, 1088, 1125, 1154, 1170, 1177], "current": [43, 101, 111, 126, 131, 148, 159, 161, 174, 175, 176, 178, 180, 183, 184, 188, 213, 235, 242, 248, 258, 261, 279, 286, 288, 289, 307, 309, 310, 353, 354, 362, 381, 384, 389, 438, 471, 479, 495, 497, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 595, 685, 689, 754, 755, 768, 776, 790, 791, 807, 838, 846, 860, 864, 865, 866, 867, 868, 871, 872, 873, 875, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 898, 899, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 920, 922, 934, 943, 957, 963, 964, 965, 973, 975, 980, 982, 989, 992, 995, 996, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1034, 1039, 1060, 1063, 1071, 1074, 1196], "initi": [43, 45, 62, 112, 113, 116, 120, 124, 126, 137, 151, 172, 173, 176, 180, 188, 190, 200, 205, 209, 214, 220, 229, 233, 234, 244, 245, 246, 261, 265, 268, 271, 276, 286, 293, 298, 300, 303, 307, 320, 329, 335, 341, 347, 393, 395, 402, 446, 451, 461, 465, 469, 471, 474, 475, 497, 499, 517, 522, 523, 536, 537, 541, 543, 544, 545, 546, 547, 548, 551, 573, 587, 590, 595, 599, 600, 601, 603, 608, 610, 612, 614, 616, 631, 632, 633, 638, 651, 656, 677, 682, 684, 685, 686, 691, 692, 706, 717, 735, 743, 754, 755, 757, 769, 788, 790, 791, 796, 799, 801, 802, 809, 816, 824, 834, 838, 865, 866, 874, 899, 929, 943, 944, 959, 962, 980, 983, 996, 1005, 1006, 1012, 1047, 1050, 1080, 1142, 1146, 1190, 1195], "mess": [43, 173, 259, 278, 280, 335, 337, 338, 697, 735, 790, 791, 1067, 1080, 1171], "roughli": [43, 175, 180, 324, 466, 863, 996, 1005], "took": [43, 172, 179, 209, 1102], "our": [43, 53, 61, 63, 72, 79, 106, 125, 126, 137, 139, 143, 144, 151, 174, 175, 177, 179, 184, 188, 195, 209, 224, 225, 234, 235, 249, 251, 289, 300, 302, 338, 370, 463, 466, 477, 488, 496, 500, 505, 517, 521, 538, 549, 554, 688, 691, 811, 818, 838, 942, 943, 968, 971, 996, 1006, 1010, 1012, 1024, 1027, 1030, 1036, 1134, 1142, 1145], "craftsmanship": [43, 45], "anoth": [43, 62, 65, 67, 80, 124, 172, 173, 174, 175, 179, 180, 183, 184, 188, 195, 197, 202, 205, 211, 212, 235, 242, 248, 251, 258, 263, 265, 271, 286, 289, 292, 295, 298, 324, 407, 425, 426, 440, 448, 460, 467, 478, 495, 496, 499, 504, 519, 522, 523, 536, 537, 541, 546, 555, 607, 610, 611, 613, 695, 700, 723, 747, 755, 759, 769, 776, 781, 782, 826, 838, 864, 865, 866, 871, 880, 882, 894, 931, 942, 944, 954, 955, 969, 983, 985, 997, 1005, 1010, 1027, 1030, 1031, 1034, 1035, 1052, 1059, 1067, 1083, 1087, 1093, 1145, 1153, 1159, 1162, 1170, 1193], "isol": [43, 54, 203, 205, 209, 259, 273, 942, 996, 997, 1047, 1137, 1149, 1165, 1181, 1183], "wrong": [43, 80, 116, 173, 175, 298, 416, 438, 457, 673, 759, 811, 968, 983, 997, 1031, 1035, 1047, 1066, 1131, 1142], "oracl": [43, 1146], "conduct": [43, 1170], "serious": 43, "safeti": [43, 144, 251, 459, 462, 465, 469, 474, 475, 478, 573, 696, 766, 791, 797, 935, 1009, 1010, 1033], "architectur": [43, 110, 170, 180, 232, 387, 411, 438, 455, 478, 759, 799, 935, 962, 1012, 1013, 1022, 1024, 1193], "treat": [43, 83, 265, 403, 433, 880], "them": [43, 62, 112, 113, 157, 166, 170, 172, 173, 175, 178, 179, 180, 183, 184, 188, 193, 194, 195, 202, 205, 209, 210, 212, 214, 230, 232, 235, 246, 270, 273, 282, 302, 312, 324, 433, 455, 486, 497, 501, 517, 553, 614, 616, 617, 670, 677, 679, 682, 695, 745, 759, 838, 864, 870, 871, 877, 880, 905, 917, 944, 951, 996, 997, 1006, 1009, 1012, 1013, 1024, 1029, 1034, 1035, 1036, 1037, 1058, 1060, 1082, 1115, 1118, 1137, 1143, 1150, 1161, 1177], "carefulli": [43, 175, 188, 463, 522, 712, 1143], "independ": [43, 62, 253, 265, 405, 438, 610, 922, 936, 944, 1014], "self": [43, 61, 62, 63, 67, 154, 173, 174, 184, 192, 193, 200, 206, 209, 211, 229, 232, 233, 245, 246, 248, 255, 258, 263, 265, 271, 274, 286, 293, 303, 307, 313, 325, 329, 351, 471, 479, 597, 599, 703, 705, 706, 740, 753, 759, 765, 799, 830, 834, 993, 1029, 1033, 1034, 1035, 1044, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1067, 1158, 1159, 1171, 1176, 1177, 1179, 1190], "valid": [43, 172, 175, 183, 261, 264, 307, 381, 436, 443, 459, 463, 622, 630, 654, 689, 703, 740, 743, 769, 851, 1066, 1067, 1081, 1082, 1099, 1104, 1158, 1159, 1165], "first": [43, 53, 60, 62, 89, 131, 154, 163, 170, 172, 175, 176, 178, 179, 180, 184, 188, 193, 203, 205, 212, 232, 245, 246, 253, 255, 259, 261, 265, 289, 291, 302, 307, 324, 355, 361, 367, 391, 399, 422, 437, 438, 443, 451, 467, 468, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 493, 543, 584, 590, 595, 597, 603, 605, 609, 628, 629, 630, 634, 653, 656, 688, 690, 695, 717, 724, 725, 744, 745, 747, 785, 786, 787, 791, 805, 808, 815, 819, 829, 838, 840, 842, 847, 853, 856, 859, 876, 877, 878, 883, 894, 898, 904, 920, 922, 925, 929, 931, 934, 935, 942, 943, 961, 965, 985, 993, 996, 999, 1005, 1013, 1014, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1047, 1049, 1053, 1061, 1062, 1063, 1064, 1066, 1067, 1076, 1077, 1080, 1086, 1087, 1094, 1117, 1126, 1132, 1134, 1143, 1145, 1153, 1171, 1177, 1190, 1195], "debug": [43, 173, 174, 202, 232, 242, 248, 258, 261, 312, 316, 332, 370, 375, 388, 438, 464, 467, 471, 472, 473, 481, 483, 484, 500, 578, 723, 740, 791, 796, 818, 820, 880, 898, 964, 988, 1009, 1086, 1165, 1188, 1191, 1196, 1205], "fact": [43, 53, 173, 174, 205, 324, 435, 443, 467, 477, 838, 883, 968, 1006, 1146], "hard": [43, 72, 80, 87, 126, 131, 139, 143, 148, 163, 173, 175, 178, 179, 184, 189, 194, 201, 205, 212, 234, 249, 255, 265, 279, 288, 289, 309, 310, 324, 353, 354, 416, 435, 464, 477, 505, 581, 789, 791, 838, 868, 874, 877, 918, 920, 934, 937, 943, 1024, 1033, 1035, 1055, 1072, 1086, 1139, 1160, 1190, 1206], "principl": [43, 53, 54, 85, 108, 116, 121, 122, 144, 169, 175, 184, 299, 300, 301, 302, 478, 501, 502, 791, 838, 942, 944, 955, 1015, 1145], "mayb": [43, 45, 57, 58, 60, 62, 80, 126, 131, 163, 166, 173, 174, 175, 178, 179, 188, 201, 205, 232, 248, 249, 299, 300, 301, 302, 317, 373, 376, 378, 379, 480, 499, 500, 501, 533, 586, 587, 657, 705, 787, 943, 1027, 1049, 1179], "overview": [43, 67, 100, 126, 148, 169, 180, 197, 213, 215, 230, 234, 246, 279, 280, 288, 292, 295, 298, 300, 309, 310, 326, 353, 354, 384, 388, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 615, 711, 722, 735, 746, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 946, 947, 948, 949, 950, 957, 958, 961, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1059, 1137, 1190, 1191, 1193, 1195], "respons": [43, 53, 56, 91, 116, 121, 122, 139, 144, 158, 172, 183, 188, 236, 477, 519, 533, 541, 599, 607, 755, 791, 834, 846, 943, 944, 967, 996, 997, 1063, 1144, 1195], "googl": [44, 168, 173, 180, 182, 194, 197, 200, 201, 205, 206, 209, 230, 235, 354, 390, 552, 753, 754, 927, 1061, 1137, 1177, 1179, 1208], "cloner": 44, "init": [44, 151, 172, 174, 190, 194, 271, 278, 280, 341, 401, 428, 526, 527, 549, 552, 580, 597, 615, 633, 793, 801, 806, 826, 828, 840, 874, 926, 1010], "cpp": [44, 50, 99, 124, 126, 127, 128, 129, 130, 131, 134, 135, 144, 148, 184, 199, 209, 234, 235, 251, 278, 289, 298, 300, 390, 481, 482, 483, 488, 495, 496, 497, 499, 500, 502, 504, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 597, 598, 599, 600, 601, 605, 606, 608, 610, 611, 612, 613, 614, 615, 616, 617, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 675, 679, 684, 685, 686, 687, 688, 689, 690, 691, 695, 700, 702, 705, 706, 707, 710, 712, 717, 723, 732, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 747, 749, 753, 754, 755, 756, 757, 758, 767, 769, 771, 775, 777, 779, 781, 785, 786, 787, 789, 942, 972, 976, 979, 991, 993, 996, 1012], "assert_eq": [44, 495, 497, 500, 504, 517, 544, 545, 551, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 568, 569, 570, 571, 572, 590, 597, 598, 599, 610, 611, 613, 614, 615, 616, 617, 675, 700, 702, 705, 706, 707, 738, 749, 753, 754, 755, 756, 758, 771, 785, 786, 787, 789, 1177, 1182], "test_f": [44, 519, 554, 555, 789, 1182], "simplefixtur": 44, "public": [44, 55, 103, 104, 109, 116, 119, 120, 121, 122, 123, 126, 131, 135, 139, 148, 170, 183, 188, 225, 233, 246, 274, 279, 288, 289, 297, 303, 309, 310, 353, 354, 367, 370, 375, 451, 487, 488, 489, 491, 496, 498, 502, 504, 507, 508, 509, 519, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 541, 554, 555, 567, 581, 587, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 620, 623, 638, 639, 656, 666, 667, 669, 670, 672, 673, 681, 682, 687, 689, 690, 695, 698, 699, 700, 701, 702, 705, 706, 708, 717, 719, 720, 721, 723, 725, 726, 729, 730, 731, 732, 733, 734, 738, 739, 740, 742, 753, 754, 755, 758, 759, 767, 769, 775, 777, 779, 781, 789, 791, 802, 806, 867, 868, 873, 887, 893, 934, 946, 947, 948, 949, 950, 955, 1056, 1061, 1182], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 126, 211, 242, 247, 248, 251, 253, 271, 310, 590, 605, 791, 934, 959, 963, 975, 1009, 1011, 1034], "tallk": 44, "morph": [44, 62, 200, 209, 234, 235, 300, 575, 587, 590, 593, 599, 695, 747, 840, 1038], "fixtur": [44, 200, 209, 301, 302, 317, 323, 324, 327, 328, 338, 378, 508, 519, 555, 791, 1175, 1208], "trivial": [44, 173, 184, 315, 331, 417, 433, 590, 607, 703, 708, 759, 843, 851, 944, 960, 996, 1192], "tempfil": [44, 1033], "crap": [44, 174, 249, 291, 347, 352, 463, 479, 482, 657, 696, 776, 944, 1009], "null": [44, 62, 121, 174, 175, 176, 191, 216, 232, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 392, 405, 412, 440, 451, 461, 466, 479, 554, 610, 709, 796, 802, 809, 834, 869, 878, 880, 881, 898, 913, 920, 962, 967, 974, 981, 983, 985, 987, 993, 996, 997, 1002, 1005, 1009], "deriv": [44, 109, 123, 127, 143, 195, 249, 261, 328, 357, 381, 555, 573, 599, 669, 670, 672, 673, 734, 742, 775, 1035, 1048, 1182], "seminar": [45, 152], "psycho": 45, "rule": [45, 174, 180, 205, 255, 261, 265, 298, 337, 378, 393, 412, 414, 415, 416, 431, 437, 455, 466, 467, 468, 470, 478, 480, 505, 517, 522, 623, 669, 703, 706, 710, 712, 732, 758, 759, 877, 898, 959, 1035, 1058, 1066, 1067, 1077, 1086, 1150, 1197], "dont": [45, 265, 477, 811], "scenario": [45, 175, 188, 197, 205, 209, 400, 521, 673, 767, 997, 998, 1005], "robert": [45, 505], "martin": [45, 477, 478, 505], "someon": [45, 128, 205, 246, 261, 268, 271, 302, 377, 612, 767, 830, 895, 901, 922, 944, 968, 1012, 1060], "mistak": [45, 173, 179, 180, 230, 246, 270, 942, 1137, 1150], "kill": [45, 174, 175, 251, 898, 952, 981, 1000, 1009, 1010, 1039, 1196], "peopl": [45, 62, 170, 173, 175, 177, 178, 180, 188, 193, 205, 234, 268, 388, 477, 505, 523, 712, 838, 877, 1044, 1060, 1088, 1144, 1146], "polit": [45, 745], "thei": [45, 55, 80, 124, 161, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 193, 195, 197, 201, 213, 235, 242, 246, 248, 251, 258, 261, 265, 307, 315, 331, 381, 407, 413, 433, 461, 464, 467, 473, 477, 478, 482, 491, 496, 497, 517, 522, 523, 551, 553, 573, 590, 600, 605, 631, 635, 667, 695, 696, 699, 706, 707, 754, 755, 761, 797, 811, 830, 838, 863, 873, 877, 899, 935, 942, 943, 944, 955, 980, 1009, 1010, 1015, 1030, 1040, 1048, 1055, 1058, 1109, 1132, 1139, 1142, 1143, 1150, 1153, 1156, 1170, 1176, 1192, 1195], "regul": 45, "ethic": 45, "everi": [45, 53, 61, 62, 63, 80, 91, 112, 113, 132, 166, 173, 179, 209, 232, 261, 302, 402, 459, 473, 477, 500, 505, 521, 540, 541, 610, 620, 672, 694, 696, 701, 789, 809, 822, 838, 863, 871, 873, 875, 876, 892, 899, 901, 943, 958, 993, 996, 1009, 1010, 1029, 1031, 1040, 1076, 1095, 1106, 1117, 1143, 1177, 1192], "particular": [45, 124, 172, 184, 205, 446, 471, 497, 521, 573, 789, 884, 1059, 1060], "electr": 45, "seem": [45, 161, 172, 174, 175, 194, 299, 496, 942, 944, 1009, 1192], "adher": [45, 880], "immedi": [45, 62, 173, 174, 179, 180, 251, 292, 295, 298, 300, 356, 438, 648, 762, 767, 820, 830, 834, 935, 985, 994, 997, 999, 1080, 1177], "survei": [45, 194], "had": [45, 124, 172, 174, 175, 179, 180, 184, 188, 193, 205, 209, 238, 240, 259, 407, 446, 517, 584, 596, 681, 695, 832, 865, 866, 877, 902, 942, 955, 1026, 1060, 1067, 1086, 1156, 1160], "life": [45, 137, 143, 169, 180, 185, 188, 191, 193, 201, 602, 732, 753, 768, 790, 791, 838, 877, 934, 975, 989, 995, 1061, 1082, 1140], "accomplish": [45, 57, 80, 213, 299, 301, 302, 463, 478, 942], "befor": [45, 127, 131, 139, 143, 169, 173, 174, 176, 177, 178, 180, 183, 188, 193, 209, 212, 216, 234, 261, 277, 278, 280, 301, 302, 307, 323, 324, 325, 328, 335, 337, 395, 403, 404, 413, 433, 482, 554, 584, 590, 629, 655, 670, 696, 708, 723, 735, 740, 741, 751, 755, 756, 761, 762, 767, 769, 770, 789, 790, 791, 802, 816, 826, 832, 838, 864, 900, 935, 944, 983, 998, 1000, 1012, 1035, 1040, 1058, 1102, 1127, 1129, 1133, 1142, 1155, 1159, 1162, 1171, 1172, 1178], "formal": [45, 183, 197, 234, 235, 324, 327, 544, 1171], "googletest": [45, 99, 200, 202, 203, 235, 278, 280, 315, 331, 493, 502, 538, 551, 553, 554, 615, 753, 754, 755, 789, 791, 792, 1177, 1179, 1192], "messag": [45, 131, 154, 168, 170, 178, 179, 188, 191, 197, 203, 211, 212, 238, 242, 245, 248, 258, 261, 268, 271, 286, 293, 301, 302, 303, 307, 329, 335, 341, 347, 358, 370, 375, 478, 481, 483, 502, 607, 623, 682, 712, 717, 737, 739, 740, 749, 759, 767, 791, 813, 838, 871, 875, 880, 934, 956, 975, 985, 989, 1064, 1078, 1088, 1131, 1172, 1176, 1178, 1204, 1205, 1206], "saniti": [45, 469, 474, 475, 478, 482, 486, 612, 697, 735, 788, 790, 791], "perform": [45, 116, 120, 173, 179, 188, 190, 212, 231, 232, 261, 302, 329, 376, 417, 420, 443, 450, 455, 463, 466, 467, 470, 473, 474, 475, 481, 590, 630, 648, 651, 673, 694, 708, 750, 776, 791, 822, 1000, 1017, 1027, 1028, 1086, 1170, 1188, 1191], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 791], "Or": [45, 46, 47, 51, 55, 56, 114, 115, 117, 118, 125, 127, 143, 173, 280, 337, 462, 478, 581, 709, 735, 746, 790, 791, 929, 955, 965, 991, 1066, 1080, 1158, 1162], "Will": [45, 46, 47, 51, 55, 56, 173, 206, 265, 356, 791, 799, 1012, 1078, 1089, 1165, 1179, 1185, 1204], "high": [46, 53, 121, 127, 194, 234, 248, 265, 477, 505, 528, 541, 545, 549, 753, 755, 770, 820, 832, 836, 848, 857], "speed": [46, 53, 163, 168, 173, 242, 246, 248, 258, 261, 265, 329, 468, 758, 832, 838, 998, 1000, 1141, 1142], "hype": [46, 776], "we": [46, 47, 50, 51, 55, 56, 60, 61, 63, 65, 70, 127, 131, 135, 139, 142, 143, 144, 151, 154, 163, 172, 173, 175, 176, 177, 178, 179, 180, 184, 188, 189, 192, 193, 194, 195, 196, 197, 201, 202, 205, 209, 210, 211, 212, 213, 215, 224, 225, 232, 233, 234, 235, 239, 242, 245, 246, 248, 249, 251, 278, 280, 282, 289, 292, 295, 297, 299, 301, 302, 320, 324, 327, 328, 356, 373, 376, 377, 381, 392, 407, 418, 425, 433, 446, 455, 457, 461, 463, 466, 471, 478, 480, 488, 489, 495, 496, 497, 500, 502, 504, 507, 516, 517, 521, 522, 538, 539, 540, 541, 549, 552, 553, 554, 584, 590, 599, 611, 635, 666, 670, 687, 688, 689, 690, 691, 695, 706, 717, 723, 749, 750, 755, 758, 769, 773, 791, 799, 802, 806, 807, 811, 813, 816, 834, 838, 840, 846, 854, 865, 866, 880, 881, 895, 901, 902, 917, 935, 942, 943, 944, 951, 955, 960, 961, 962, 968, 969, 970, 971, 983, 996, 1005, 1022, 1026, 1027, 1028, 1036, 1055, 1060, 1086, 1088, 1093, 1095, 1124, 1131, 1132, 1133, 1137, 1142, 1143, 1144, 1145, 1152, 1153, 1159, 1162, 1178, 1179, 1195], "did": [46, 174, 175, 177, 179, 180, 183, 184, 192, 201, 205, 212, 297, 457, 461, 477, 502, 540, 688, 757, 759, 786, 811, 816, 838, 877, 935, 946, 955, 1036, 1190], "consequ": [46, 172, 173, 292, 295, 437, 458, 461, 462, 505, 968, 1055, 1156, 1190], "unsign": [46, 116, 122, 139, 246, 251, 409, 411, 419, 448, 451, 455, 463, 509, 524, 539, 553, 554, 555, 605, 675, 676, 685, 733, 767, 769, 775, 777, 779, 781, 789, 794, 797, 802, 809, 818, 820, 822, 828, 834, 843, 848, 852, 964, 1005, 1006, 1187, 1188], "introduc": [46, 58, 80, 99, 234, 251, 259, 300, 315, 331, 459, 467, 479, 495, 500, 522, 540, 541, 542, 543, 573, 595, 681, 791, 857, 1009, 1038, 1064, 1078, 1144, 1192], "throw": [46, 131, 177, 180, 251, 497, 521, 522, 526, 532, 533, 535, 536, 537, 555, 573, 651, 689, 731, 752, 755, 766, 769, 1182], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 791], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 791], "clean_code_bugs_find_error": [46, 47, 53, 791], "twice": [47, 53, 55, 56, 57, 173, 399, 438, 460, 480, 703, 706, 765, 791, 858, 898, 935, 951, 983, 1028], "crash": [47, 53, 62, 112, 113, 171, 173, 174, 175, 178, 230, 232, 242, 248, 258, 261, 388, 428, 435, 521, 605, 632, 677, 753, 791, 996, 1010, 1137], "found": [47, 53, 110, 111, 132, 154, 160, 169, 172, 184, 193, 205, 238, 242, 245, 248, 251, 253, 255, 258, 261, 271, 286, 293, 307, 315, 325, 329, 331, 335, 341, 347, 351, 356, 370, 464, 473, 483, 485, 493, 531, 535, 536, 537, 543, 554, 556, 560, 561, 562, 590, 595, 635, 638, 641, 651, 655, 656, 680, 688, 690, 692, 700, 786, 791, 809, 870, 873, 880, 927, 944, 1012, 1015, 1024, 1029, 1035, 1043, 1052, 1082, 1115, 1141, 1144, 1180, 1192], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 791], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 791], "explicitli": [48, 174, 175, 179, 205, 245, 255, 265, 298, 415, 416, 434, 472, 478, 522, 599, 602, 610, 651, 700, 703, 706, 759, 771, 869, 997, 1006, 1034, 1044, 1063, 1150, 1158], "solut": [48, 126, 178, 180, 188, 189, 197, 199, 205, 224, 234, 235, 240, 243, 246, 251, 256, 262, 278, 281, 292, 301, 302, 306, 312, 337, 338, 350, 437, 438, 441, 460, 463, 481, 494, 521, 543, 573, 595, 601, 602, 622, 659, 661, 663, 670, 684, 692, 707, 712, 717, 743, 759, 784, 790, 791, 899, 900, 917, 980, 985, 998, 999, 1015, 1040, 1076, 1108, 1120, 1150, 1193], "force_overwrit": 48, "descriptor": [48, 173, 197, 229, 261, 265, 286, 307, 325, 377, 602, 797, 818, 854, 874, 880, 881, 938, 960, 961, 962, 1006], "mani": [49, 53, 56, 61, 63, 67, 91, 116, 122, 144, 173, 175, 179, 180, 197, 202, 205, 221, 232, 253, 263, 268, 289, 293, 297, 298, 300, 306, 325, 356, 377, 381, 405, 417, 419, 428, 443, 457, 459, 464, 479, 480, 492, 493, 496, 499, 504, 507, 546, 573, 620, 630, 649, 651, 670, 682, 694, 695, 703, 723, 744, 749, 757, 765, 791, 797, 799, 816, 824, 830, 834, 838, 864, 874, 875, 877, 878, 931, 943, 961, 962, 981, 991, 994, 1009, 1010, 1012, 1022, 1031, 1033, 1035, 1040, 1049, 1059, 1064, 1067, 1070, 1074, 1082, 1086, 1088, 1093, 1142, 1144, 1145, 1146, 1150, 1159, 1177, 1190, 1193], "overwrit": [49, 111, 521, 522, 535, 543, 560, 562, 595, 605, 651, 653, 682, 791, 838, 900, 905, 917, 969, 1084], "present": [49, 60, 144, 170, 176, 180, 184, 188, 193, 206, 261, 307, 315, 324, 331, 489, 601, 834, 838, 873, 944, 955, 974, 1035, 1119, 1159, 1192], "continu": [50, 53, 62, 67, 91, 101, 108, 112, 113, 124, 127, 144, 166, 174, 183, 184, 196, 205, 206, 209, 218, 223, 224, 225, 254, 259, 265, 271, 281, 367, 431, 432, 438, 439, 445, 449, 452, 456, 461, 465, 469, 474, 475, 477, 479, 482, 483, 500, 614, 616, 617, 677, 697, 705, 735, 786, 787, 788, 789, 790, 791, 935, 937, 941, 947, 970, 971, 1009, 1010, 1015, 1026, 1033, 1040, 1044, 1077, 1080, 1099, 1144, 1159, 1177], "expected_cont": 50, "fill": [50, 175, 176, 188, 210, 261, 262, 307, 419, 695, 699, 744, 754, 809, 834, 838, 904, 961, 1038], "strategi": [50, 245, 453, 943, 1094, 1170], "hurri": [50, 438], "read_fil": 50, "compar": [50, 126, 233, 235, 246, 261, 302, 307, 416, 458, 472, 473, 482, 551, 597, 754, 946, 981, 1078, 1083, 1108, 1112, 1142], "binaryfil": 50, "doesn": [50, 175, 178, 286, 335, 433, 435, 438, 453, 467, 749, 797, 858, 865, 866, 900, 904, 917, 1013, 1024, 1080], "belong": [50, 202, 205, 405, 425, 451, 478, 573, 597, 611, 613, 883, 891, 970, 1051, 1065], "test_write_csv": 50, "test_read_csv": [50, 1134], "ah": [50, 61, 63, 65, 179, 195, 232, 234, 248, 652, 1012, 1088, 1153], "altern": [51, 53, 55, 56, 62, 70, 80, 85, 143, 172, 173, 180, 206, 225, 251, 312, 341, 412, 489, 597, 606, 620, 631, 634, 703, 752, 758, 779, 791, 838, 877, 898, 938, 942, 944, 956, 964, 970, 981, 987, 1005, 1012, 1060, 1080, 1083, 1158, 1162, 1165, 1172, 1182, 1185, 1201, 1202, 1204, 1207], "cluster_clean_code_featur": [51, 53, 55, 56, 791], "clean_code_features_other_index": [51, 53, 791], "clean_code_features_csv": [51, 53, 55, 56, 791], "establish": [53, 73, 213, 225, 289, 301, 302, 323, 327, 367, 477, 838, 996, 1193], "were": [53, 124, 143, 166, 173, 175, 179, 188, 205, 209, 388, 437, 493, 596, 605, 606, 632, 699, 738, 865, 866, 944, 971, 1026, 1034, 1058, 1067, 1086, 1092, 1150, 1156, 1190], "occas": [53, 91, 174, 754], "ourselv": [53, 205, 935], "gather": [53, 180, 212, 301, 302, 323, 324, 327, 355, 471, 473, 1121], "wreak": [53, 112, 113, 453, 677], "havoc": [53, 112, 113, 453, 677], "shoehorn": 53, "violat": [53, 116, 121, 122, 144, 173, 477, 505, 733, 755, 852, 996, 1010], "nearli": [53, 205, 211, 455, 988], "solid": [53, 114, 115, 116, 117, 118, 125, 144, 169, 185, 298, 300, 478, 505, 1188, 1189, 1203, 1204, 1206, 1207], "chanc": [53, 173, 175, 210, 457, 477, 793, 838, 963, 1195], "cluster_clean_code_refactor": [53, 55, 56, 791], "clean_code_refactoring_backingstore_interfac": [53, 56, 791], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 791], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 791], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 791], "now": [54, 60, 124, 172, 173, 174, 175, 176, 177, 179, 180, 188, 192, 201, 211, 221, 238, 245, 251, 255, 265, 273, 293, 297, 318, 356, 357, 370, 433, 446, 461, 466, 491, 497, 504, 517, 522, 544, 545, 552, 611, 635, 638, 644, 648, 656, 699, 750, 755, 770, 771, 796, 816, 838, 846, 848, 854, 870, 873, 935, 942, 943, 944, 970, 971, 979, 1024, 1026, 1031, 1034, 1049, 1052, 1076, 1132, 1142, 1144, 1162, 1171, 1190], "violatin": 54, "respect": [54, 61, 63, 121, 166, 174, 188, 235, 297, 299, 362, 409, 457, 477, 522, 540, 599, 606, 669, 703, 754, 755, 869, 877, 942, 996, 1010, 1055], "mainli": [55, 173, 209, 298, 307, 651, 789, 978, 1038], "bugfix": 55, "ongo": [55, 124, 998], "scene": [55, 1012, 1055], "pleas": [55, 126, 154, 174, 175, 178, 180, 184, 201, 205, 209, 210, 212, 213, 214, 215, 225, 251, 278, 280, 289, 310, 351, 354, 361, 403, 437, 467, 555, 612, 614, 615, 616, 617, 877, 935, 943, 944, 959, 988, 1006, 1014, 1015, 1060, 1163], "wait": [55, 74, 75, 76, 80, 85, 89, 139, 143, 162, 173, 174, 175, 176, 177, 179, 220, 324, 356, 667, 695, 762, 770, 791, 815, 830, 836, 840, 843, 846, 848, 871, 874, 882, 934, 935, 961, 963, 967, 979, 991, 994, 997, 1004, 1006, 1009, 1084, 1153, 1177, 1195, 1203], "unnecessarili": [55, 71, 1006], "conflict": [55, 77, 79, 124, 127, 143, 300, 301, 302, 323, 403, 454, 606, 696, 768, 790, 791, 794, 797, 807, 934, 943, 975, 983, 989, 1009, 1043, 1173], "rip": [55, 176, 479, 538, 996, 1152], "detail": [55, 86, 170, 175, 178, 183, 187, 188, 200, 206, 220, 231, 232, 234, 235, 242, 248, 258, 262, 263, 265, 269, 291, 302, 341, 348, 352, 370, 477, 482, 505, 542, 552, 554, 602, 754, 816, 898, 937, 942, 944, 998, 1030, 1139, 1179, 1188], "instanc": [55, 57, 109, 112, 113, 134, 180, 221, 229, 233, 242, 245, 246, 253, 255, 260, 263, 265, 268, 283, 286, 293, 307, 325, 335, 341, 347, 366, 381, 495, 500, 508, 519, 521, 522, 523, 535, 536, 537, 540, 553, 666, 677, 684, 689, 737, 740, 799, 804, 807, 1005, 1006, 1033, 1035, 1049, 1050, 1052, 1055, 1078], "its": [55, 57, 61, 63, 86, 89, 110, 112, 113, 121, 139, 167, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 190, 195, 197, 201, 202, 203, 205, 225, 232, 233, 235, 242, 246, 248, 258, 261, 265, 274, 289, 291, 292, 295, 298, 300, 307, 324, 361, 372, 403, 425, 436, 438, 453, 455, 457, 464, 466, 488, 496, 500, 519, 522, 523, 538, 539, 540, 541, 546, 551, 554, 596, 597, 598, 600, 602, 607, 637, 677, 695, 707, 717, 743, 762, 789, 802, 811, 816, 838, 843, 865, 866, 869, 871, 875, 880, 885, 886, 898, 899, 920, 922, 943, 946, 947, 954, 964, 965, 970, 985, 991, 994, 996, 997, 998, 1006, 1028, 1033, 1035, 1038, 1043, 1048, 1052, 1058, 1066, 1076, 1078, 1083, 1087, 1094, 1142, 1144, 1163, 1170, 1172, 1190, 1192, 1193, 1195], "replac": [55, 62, 65, 99, 131, 178, 223, 234, 242, 245, 246, 248, 249, 251, 258, 261, 293, 307, 324, 355, 397, 412, 453, 479, 542, 543, 595, 628, 629, 688, 695, 723, 740, 754, 769, 776, 789, 791, 841, 944, 984, 996, 1010, 1034], "symptom": [57, 183], "mismatch": [57, 579], "onc": [57, 116, 121, 122, 127, 154, 172, 174, 175, 178, 179, 180, 183, 188, 193, 194, 355, 373, 395, 420, 429, 437, 467, 480, 496, 497, 498, 502, 507, 519, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 552, 554, 612, 630, 631, 685, 726, 737, 747, 765, 775, 777, 779, 780, 781, 782, 789, 799, 802, 834, 935, 944, 986, 1009, 1010, 1029, 1035, 1036, 1037, 1071, 1093, 1102, 1115, 1146, 1149, 1172], "sync": [57, 144, 174, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 453, 457, 838, 929], "imho": [57, 734], "forbidden": [58, 455], "accord": [58, 62, 126, 139, 172, 175, 261, 686, 882, 898, 931, 935, 943, 944], "uncl": [58, 388], "bob": [58, 261, 388, 477], "enum": [58, 234, 235, 338, 412, 427, 465, 469, 474, 475, 479, 482, 697, 735, 777, 779, 788, 790, 791, 797, 799, 807, 996, 1190], "submiss": [59, 64, 68], "submit": [59, 111, 832], "linuxtag": [59, 212, 328, 940], "pure": [60, 71, 134, 180, 370, 433, 506, 669, 695, 734, 759, 877, 1067, 1190], "local": [60, 149, 154, 173, 174, 176, 179, 188, 201, 205, 206, 213, 214, 218, 234, 235, 249, 251, 252, 258, 261, 264, 265, 286, 289, 301, 303, 312, 315, 323, 324, 327, 328, 331, 333, 334, 339, 340, 341, 345, 346, 347, 349, 350, 356, 370, 403, 407, 431, 433, 450, 488, 492, 501, 515, 517, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 595, 602, 620, 703, 706, 708, 737, 791, 811, 838, 843, 865, 866, 870, 920, 934, 942, 944, 945, 946, 947, 953, 955, 961, 972, 980, 1022, 1024, 1031, 1034, 1079, 1165, 1192, 1193, 1206], "easili": [60, 144, 167, 174, 180, 356, 412, 431, 464, 477, 496, 669, 745, 820, 836, 964, 994, 1000, 1030, 1043, 1075, 1190], "guess": [60, 255, 265, 291, 457, 462, 712, 951, 1006], "autotool": [60, 184], "portabl": [60, 197, 405, 467, 762, 980, 987, 1006, 1010, 1067, 1146], "configur": [60, 61, 62, 63, 66, 67, 70, 75, 80, 84, 86, 87, 88, 106, 124, 126, 131, 137, 139, 143, 144, 148, 158, 159, 172, 174, 175, 178, 180, 203, 213, 279, 288, 289, 298, 309, 310, 316, 317, 320, 324, 332, 353, 354, 370, 376, 480, 484, 485, 487, 488, 500, 502, 507, 544, 545, 546, 554, 791, 811, 818, 838, 852, 868, 869, 870, 873, 882, 918, 931, 934, 935, 943, 955, 962, 976, 978, 1006, 1013, 1014, 1026, 1036, 1107, 1145, 1149, 1158, 1165, 1193], "archiv": [60, 105, 106, 126, 184, 185, 213, 215, 279, 288, 289, 309, 353, 473, 486, 492, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 791, 868, 898, 934, 1014, 1017, 1019, 1020, 1022, 1023, 1024, 1029, 1033, 1165], "m4": 60, "macro": [60, 251, 316, 332, 397, 408, 411, 423, 432, 439, 445, 449, 452, 456, 459, 465, 469, 474, 475, 483, 484, 488, 489, 492, 697, 735, 741, 788, 790, 791, 807, 826, 840, 880, 958, 964, 970, 980, 1014, 1086, 1177, 1182, 1187, 1191], "stock": [60, 245, 246, 1093, 1094], "sudo": [60, 66, 103, 126, 134, 154, 169, 176, 178, 180, 188, 202, 213, 251, 279, 288, 289, 298, 300, 309, 310, 341, 353, 354, 483, 490, 567, 791, 868, 893, 895, 934, 935, 944, 998, 1026, 1172], "pwd": [60, 111, 124, 201, 278, 280, 341, 370, 375, 486, 552, 554, 615, 813, 816, 865, 866, 875, 920, 922, 935, 1013, 1014, 1027, 1029, 1170], "pub": [60, 66, 176, 213, 811, 951, 1131], "lib": [60, 66, 126, 169, 178, 184, 212, 232, 235, 245, 261, 268, 271, 286, 293, 300, 303, 307, 329, 335, 341, 347, 485, 551, 816, 828, 834, 838, 929, 944, 1009, 1013, 1015, 1024, 1026, 1165, 1172], "remot": [60, 104, 106, 149, 154, 176, 178, 180, 188, 225, 234, 281, 356, 494, 515, 529, 543, 595, 791, 811, 838, 839, 843, 864, 867, 934, 943, 945, 948, 949, 950, 953, 961, 1024, 1036, 1193, 1194, 1201], "v0": 60, "v1": [60, 291, 502, 517, 699], "v2": [60, 62, 180, 200, 291, 502, 517, 699], "autotooleri": 60, "autogen": 60, "step": [60, 62, 67, 172, 173, 179, 180, 184, 188, 209, 248, 251, 252, 278, 280, 293, 297, 302, 325, 393, 395, 397, 413, 437, 479, 482, 499, 542, 552, 590, 615, 620, 753, 838, 865, 866, 1012, 1020, 1158, 1159, 1171], "noconfigur": 60, "suppress": [60, 179, 225, 471, 496, 605, 754, 917, 1165], "absorb": [60, 166, 211, 476, 478, 706, 1094], "Be": [60, 99, 114, 115, 117, 118, 125, 251, 298, 300, 338, 356, 410, 443, 552, 573, 598, 603, 665, 692, 704, 706, 735, 737, 740, 751, 760, 768, 788, 790, 791, 864, 1009, 1024], "awar": [60, 356, 454, 487, 998], "enabl": [60, 172, 178, 205, 213, 234, 242, 248, 258, 261, 289, 299, 416, 467, 493, 500, 522, 578, 836, 838, 843, 890, 935, 939, 943, 955, 998, 1022, 1026, 1036, 1195], "mkdir": [60, 102, 126, 148, 159, 174, 179, 183, 201, 202, 278, 280, 289, 354, 370, 375, 552, 554, 555, 615, 789, 791, 838, 865, 866, 867, 868, 902, 903, 904, 905, 906, 909, 910, 912, 918, 934, 951, 955, 1005, 1024, 1026, 1027, 1033], "dist": [60, 153, 758, 1092], "406332": 60, "apr": [60, 62, 232, 242, 271, 363, 1013, 1014, 1027, 1035], "transfer": [60, 173, 235, 238, 315, 331, 356, 473, 555, 605, 706, 809, 838, 851, 852, 864, 865, 866, 925, 945, 951, 954, 1153, 1190, 1192], "scp": [60, 99, 103, 126, 148, 159, 184, 213, 279, 288, 289, 309, 310, 353, 554, 555, 791, 811, 865, 866, 934, 945, 946, 947, 948, 950, 955, 972, 1022, 1023, 1024], "192": [60, 206, 213, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 376, 811, 873, 955, 1207], "168": [60, 206, 213, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 376, 811, 873, 955, 1024, 1207], "82": [60, 183, 192, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1094, 1141, 1142], "prerequisit": [60, 106, 251, 811, 942, 1063], "apt": [60, 66, 134, 184, 188, 202, 251, 298, 300, 567, 818, 937, 942, 944, 955, 1014, 1026, 1172, 1177], "python3": [60, 62, 66, 88, 153, 154, 169, 184, 193, 206, 212, 232, 242, 248, 258, 261, 265, 341, 990, 1000, 1026, 1036, 1063, 1158, 1159, 1165, 1172], "along": [60, 154, 174, 180, 233, 246, 388, 437, 507, 789, 883, 991, 1012, 1043], "omit": [60, 62, 179, 188, 193, 242, 248, 258, 261, 262, 265, 335, 351, 374, 418, 455, 467, 479, 499, 673, 695, 742, 816, 832, 881, 942, 943, 944, 951, 967, 968, 972, 983, 1033, 1036, 1088, 1170], "bind": [60, 66, 67, 144, 174, 276, 298, 300, 328, 338, 415, 422, 653, 695, 708, 735, 759, 760, 762, 768, 790, 791, 938, 1012, 1044, 1048, 1067, 1078, 1156, 1190, 1205, 1207], "cxx": [60, 170, 480, 495, 496, 497, 498, 499, 500, 502, 504, 507, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 551, 553, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 789, 1013, 1014], "xf": [60, 66, 184, 864, 1026], "ld_library_path": [60, 485, 1029], "gpiod": [60, 62, 68, 818], "py3": [60, 153, 169, 1092], "aarch64": [60, 184, 1024], "born": [61, 63, 67, 876, 1061], "bound": [61, 62, 63, 67, 251, 255, 286, 298, 313, 454, 464, 469, 474, 475, 579, 607, 609, 611, 629, 708, 791, 876, 880, 936, 997, 1000, 1053, 1074, 1098, 1158], "employe": [61, 63, 67, 200, 232, 1052], "year": [61, 63, 67, 172, 173, 174, 175, 179, 184, 205, 245, 251, 293, 297, 477, 596, 680, 681, 683, 684, 687, 688, 689, 690, 691, 692, 694, 741, 791, 1094], "emploi": [61, 63, 67, 174, 184, 209, 438, 838], "pattern": [61, 63, 65, 84, 108, 144, 169, 170, 186, 189, 208, 209, 235, 238, 261, 300, 341, 378, 387, 389, 477, 494, 495, 496, 497, 499, 500, 502, 504, 505, 506, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 543, 595, 758, 759, 776, 791, 792, 898, 927, 994, 1041, 1042, 1177, 1197], "led": [61, 63, 74, 75, 76, 80, 93, 128, 129, 130, 135, 136, 144, 191, 213, 289, 356, 379, 544, 791, 797, 935, 943], "hei": [61, 63, 173, 213, 265, 612, 613, 873, 959, 1081, 1150], "reinvent": [61, 63, 233, 282, 1137], "wheel": [61, 63, 127, 153, 169, 840, 875, 970, 1165], "admit": [61, 63, 180], "notori": [61, 63], "fun": [61, 63, 133, 173, 178, 231, 233, 269, 298, 388, 501, 738, 838, 877, 935, 942, 943, 1040, 1052, 1064, 1080, 1136, 1137, 1164, 1171, 1190], "live": [61, 63, 72, 99, 100, 126, 131, 148, 170, 174, 178, 196, 200, 205, 209, 214, 225, 233, 234, 235, 236, 249, 251, 259, 270, 277, 278, 279, 280, 282, 288, 290, 291, 298, 299, 300, 301, 302, 306, 309, 310, 324, 328, 337, 338, 353, 354, 370, 374, 378, 379, 381, 388, 389, 390, 450, 467, 479, 480, 485, 501, 506, 515, 517, 519, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 573, 630, 631, 651, 693, 704, 735, 736, 737, 754, 768, 789, 790, 791, 792, 802, 838, 868, 871, 872, 877, 893, 894, 934, 975, 1043, 1060, 1094, 1137, 1163, 1171, 1189, 1190, 1204], "session": [61, 63, 169, 178, 180, 198, 205, 209, 213, 217, 242, 248, 258, 261, 273, 277, 278, 280, 291, 299, 376, 840, 869, 870, 952, 963, 1125, 1137, 1163, 1170, 1200], "simpl": [61, 63, 74, 76, 77, 80, 88, 124, 160, 169, 173, 177, 178, 180, 183, 184, 188, 193, 197, 200, 201, 205, 209, 212, 235, 251, 253, 255, 261, 265, 317, 320, 391, 392, 399, 438, 440, 454, 457, 464, 479, 480, 481, 482, 483, 487, 488, 490, 500, 598, 605, 606, 644, 672, 680, 681, 683, 684, 687, 688, 689, 690, 691, 692, 712, 745, 755, 764, 791, 797, 811, 818, 830, 838, 840, 848, 874, 927, 935, 936, 942, 943, 972, 978, 980, 983, 998, 1006, 1009, 1013, 1014, 1015, 1020, 1036, 1040, 1060, 1061, 1069, 1088, 1137, 1143, 1145, 1161, 1176, 1177], "thu": [61, 63, 173, 174, 175, 211, 422, 497, 811, 816, 858, 865, 968, 1149, 1195], "techniqu": [61, 63, 71, 72, 73, 457, 467, 553, 677, 938], "usag": [61, 63, 82, 108, 116, 122, 127, 144, 148, 149, 175, 180, 225, 235, 246, 259, 273, 298, 300, 301, 323, 338, 356, 376, 388, 438, 463, 464, 471, 482, 486, 492, 501, 502, 515, 541, 542, 543, 595, 605, 612, 613, 631, 666, 668, 669, 672, 673, 692, 694, 706, 717, 723, 737, 744, 776, 790, 791, 840, 875, 898, 927, 930, 945, 976, 979, 994, 1030, 1035, 1038, 1088, 1131, 1133, 1165, 1172, 1179, 1190], "At": [61, 63, 139, 173, 174, 177, 180, 184, 188, 205, 209, 235, 245, 249, 251, 285, 402, 431, 435, 467, 495, 753, 830, 1031, 1048, 1137], "flow": [61, 63, 174, 205, 210, 212, 213, 214, 215, 219, 224, 225, 240, 243, 256, 267, 371, 372, 373, 375, 411, 431, 439, 445, 449, 452, 456, 465, 467, 469, 474, 475, 697, 735, 744, 788, 790, 791, 1009, 1044, 1069, 1071, 1078, 1156, 1191], "event": [61, 62, 63, 65, 67, 88, 134, 138, 176, 197, 233, 242, 246, 248, 258, 261, 289, 301, 302, 473, 723, 767, 774, 778, 791, 806, 807, 815, 840, 841, 853, 854, 855, 856, 859, 871, 875, 934, 938, 963, 975, 978, 994, 997, 998, 1002, 1006, 1047, 1153, 1162, 1195, 1204, 1206, 1207], "save": [61, 62, 63, 87, 154, 169, 172, 173, 185, 193, 196, 242, 248, 258, 261, 292, 295, 298, 351, 419, 421, 695, 726, 729, 730, 731, 882, 900, 954, 963, 1000, 1029, 1033, 1039, 1049, 1082, 1142, 1172, 1190], "schedul": [61, 62, 63, 101, 112, 113, 126, 138, 148, 149, 173, 190, 213, 215, 279, 288, 289, 309, 353, 354, 383, 384, 495, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 820, 830, 836, 843, 858, 865, 866, 867, 868, 872, 874, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 980, 989, 991, 992, 996, 1000, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1149, 1185, 1195, 1196, 1206], "overhead": [61, 63, 467, 473, 584, 593, 758, 759], "usual": [61, 63, 86, 110, 126, 173, 174, 180, 183, 188, 193, 203, 205, 265, 299, 315, 331, 393, 433, 434, 460, 473, 477, 483, 485, 490, 495, 509, 517, 523, 552, 597, 613, 654, 708, 743, 744, 758, 767, 770, 789, 797, 809, 811, 816, 826, 832, 834, 838, 852, 854, 858, 874, 876, 880, 899, 935, 936, 943, 964, 978, 996, 997, 1012, 1013, 1014, 1015, 1024, 1033, 1034, 1035, 1036, 1040, 1043, 1046, 1047, 1053, 1055, 1057, 1058, 1060, 1063, 1069, 1074, 1136, 1143, 1144, 1150, 1172, 1173, 1179, 1192], "exhibit": [61, 63, 251, 689, 944, 965, 970], "glitch": [61, 63, 175, 180, 943, 944], "caus": [61, 63, 173, 176, 188, 242, 248, 258, 261, 265, 944, 991, 996, 1159], "hiccup": [61, 63, 180, 291, 1014], "twist": [61, 63, 822], "amazingli": [61, 63, 882], "multi": [62, 1143, 1150], "chmod": [62, 180, 370, 865, 866, 883, 888, 890, 892, 895, 947, 951], "snippet": [62, 65, 116, 119, 193, 212, 334, 355, 660, 943, 1036], "subdirectori": [62, 144, 179, 188, 200, 202, 225, 316, 332, 480, 484, 485, 538, 552, 791, 813, 864, 865, 866, 878, 888, 890, 907, 922, 926, 943, 944, 1024, 1125, 1177], "stuff": [62, 65, 72, 80, 102, 126, 135, 148, 172, 175, 179, 188, 193, 205, 209, 212, 225, 234, 235, 256, 270, 289, 291, 312, 354, 356, 374, 473, 479, 581, 628, 789, 791, 797, 806, 838, 868, 898, 906, 912, 918, 934, 942, 972, 1033, 1035, 1092, 1132, 1137, 1139, 1170], "strace": [62, 65, 99, 148, 173, 175, 388, 796, 801, 854, 961, 967, 980, 996, 1005, 1203], "pid": [62, 65, 173, 175, 176, 472, 857, 870, 874, 876, 980, 996, 999, 1005, 1009, 1010], "4677": 62, "11hello": 62, "clock_gettime64": 62, "clock_monoton": [62, 770, 962, 996], "tv_sec": [62, 996], "164646": 62, "tv_nsec": [62, 996], "833862215": 62, "_newselect": 62, "tv_usec": 62, "500000": [62, 937, 943, 1142], "unfinish": [62, 175], "4679": 62, "resum": [62, 725, 726, 729, 730, 731, 834, 996], "timeout": [62, 765, 767, 769, 961, 1165], "mi": [62, 253], "845864201": 62, "4678": [62, 248], "fd": [62, 183, 245, 289, 555, 797, 942, 956, 960, 961, 962, 964, 968, 969, 970, 971, 974, 976, 979, 1002, 1005, 1009, 1094], "fourth": 62, "involv": [62, 80, 173, 176, 180, 183, 235, 289, 301, 302, 323, 376, 453, 461, 467, 473, 538, 605, 607, 696, 809, 838, 935, 1013, 1022, 1024], "occasion": [62, 161, 188, 205, 234, 251, 463, 477, 487, 689, 838, 882, 1060, 1074, 1151], "due": [62, 180, 205, 495, 759, 1165], "weird": [62, 289, 334, 342, 463, 733, 771, 797, 822, 991, 1009], "gil": [62, 205, 209, 301, 302, 323, 324, 327, 1137], "jitter": [62, 998, 1000], "heavi": [62, 197, 205, 505, 944, 1060, 1195], "usr": [62, 154, 173, 174, 178, 184, 193, 196, 201, 203, 225, 232, 233, 242, 245, 248, 258, 261, 265, 268, 271, 286, 291, 293, 303, 307, 329, 335, 341, 347, 367, 370, 480, 482, 483, 485, 486, 490, 712, 745, 755, 789, 811, 838, 864, 870, 882, 894, 926, 929, 942, 944, 990, 1000, 1009, 1012, 1013, 1014, 1015, 1024, 1027, 1029, 1036, 1039, 1063, 1125, 1140, 1153, 1165, 1172, 1179], "env": [62, 169, 174, 196, 291, 990, 1000, 1063, 1091, 1125, 1140, 1153], "hello_left": 62, "hello_right": 62, "rjust": [62, 193, 261, 307], "hello_middl": 62, "center": [62, 65, 196, 238, 253, 255, 261, 265, 286, 293, 307, 325, 329, 335, 341, 347, 351, 364, 471, 551], "t1": [62, 192, 255, 265, 286, 290, 307, 329, 341, 981], "t2": [62, 192, 248, 255, 265, 286, 329, 341, 981], "t3": 62, "async": [62, 65, 66, 67, 173, 205, 209, 242, 248, 258, 259, 261, 324, 328, 723, 988, 1011, 1137, 1205], "await": [62, 66, 324], "epoll_wait": 62, "201": [62, 176, 206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "multiplex": [62, 943, 962, 996, 1207], "create_task": 62, "sysf": [62, 126, 127, 128, 130, 136, 137, 148, 170, 220, 289, 357, 358, 554, 791, 794, 795, 840, 934, 935, 942, 944, 975, 976, 979, 1194, 1201], "unmaintain": [62, 279, 288, 289, 332, 389, 1014, 1078, 1187], "immun": [62, 612, 770], "hotplug": [62, 942], "reset": [62, 172, 502, 504, 754, 755, 756, 789, 1159, 1206], "pullup": 62, "pulldown": 62, "rpi": [62, 151, 184, 356, 838, 839, 942], "hope": [62, 173, 175, 178, 180, 184], "major": [62, 178, 191, 242, 248, 258, 261, 298, 300, 477, 481, 612, 797, 804, 869, 997, 1061, 1067, 1082], "releas": [62, 154, 176, 202, 316, 332, 341, 438, 484, 755, 766, 767, 769, 791, 797, 811, 935, 942, 985, 990, 1026, 1029, 1061, 1171, 1202], "ton": [62, 753, 877, 939, 964, 996, 1000, 1190], "bartosz": 62, "golaszewski": 62, "gpiochip0": [62, 818, 978], "ioctl": [62, 289, 459, 804, 806, 832, 840, 841, 846, 852, 938, 942], "crw": [62, 802, 869, 920, 942, 943, 944], "254": [62, 194, 245, 248, 253, 255, 258, 265, 268, 286, 293, 303, 307, 313, 329, 341, 347, 351], "request": [62, 65, 95, 100, 127, 143, 174, 175, 178, 235, 237, 262, 268, 324, 341, 478, 497, 519, 533, 702, 703, 706, 707, 796, 840, 964, 979, 1170], "request_lin": [62, 65], "consum": [62, 144, 175, 178, 195, 245, 324, 471, 488, 517, 767, 769, 863, 871, 878, 985, 986, 997, 1002, 1004, 1006, 1009, 1036, 1058, 1067, 1094, 1149, 1195], "mytest": 62, "config": [62, 99, 131, 132, 162, 163, 169, 174, 176, 178, 184, 192, 286, 303, 307, 374, 381, 390, 554, 755, 791, 811, 839, 920, 942, 943, 944, 951, 1026, 1036, 1165], "lineset": 62, "set_valu": [62, 65, 769], "all_io": 62, "transform": [62, 65, 157, 193, 208, 209, 212, 214, 224, 229, 230, 232, 233, 240, 251, 253, 256, 259, 282, 289, 291, 300, 306, 324, 337, 355, 467, 558, 559, 571, 573, 626, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 723, 747, 791, 1022, 1042, 1086, 1120, 1137], "ntime": [62, 1046], "task": [62, 65, 79, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 188, 230, 243, 256, 270, 273, 276, 306, 312, 374, 377, 379, 380, 383, 384, 385, 388, 791, 865, 866, 883, 925, 934, 942, 945, 960, 975, 981, 994, 995, 997, 998, 1137, 1170], "interv": [62, 91, 131, 212, 242, 248, 249, 258, 261, 265, 286, 324, 374, 539, 541, 554, 555, 695, 769, 770, 962, 972, 996, 1000], "none": [62, 139, 153, 169, 172, 173, 178, 183, 192, 194, 206, 216, 223, 224, 233, 238, 239, 242, 245, 248, 254, 255, 258, 261, 265, 268, 274, 283, 286, 290, 291, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 457, 458, 479, 482, 602, 688, 690, 961, 978, 1006, 1033, 1036, 1058, 1084, 1092, 1162, 1177], "itertool": [62, 270, 272, 324, 1040], "cram": [62, 166, 203, 806, 996, 1033, 1150], "goe": [62, 87, 124, 134, 176, 178, 193, 298, 467, 502, 567, 670, 690, 699, 749, 802, 838, 880, 881, 967, 994, 1000, 1010, 1013, 1020, 1063, 1066, 1086], "stuff_raw": 62, "mod": [62, 261, 286, 306, 816], "sidewai": [62, 209, 212, 267, 383, 384, 1041, 1042], "numpi": [62, 205, 209, 224, 243, 249, 256, 291, 297, 325, 327, 330, 352, 479, 1060, 1136, 1140, 1143, 1151, 1155, 1165, 1172], "transpos": [62, 898], "col": 62, "tolist": 62, "outsid": [62, 261, 506, 519, 599, 607, 612, 754, 755, 828, 899, 981, 997, 1036], "instanti": [62, 135, 232, 374, 497, 508, 522, 523, 536, 537, 538, 541, 623, 652, 670, 691, 717, 723, 745, 758, 759, 1048, 1049, 1140], "coro": [62, 723, 725, 726, 728, 729, 730, 731], "cannot": [62, 112, 113, 169, 173, 174, 175, 180, 184, 195, 196, 202, 203, 205, 212, 232, 265, 292, 295, 329, 356, 433, 434, 437, 438, 457, 459, 461, 464, 467, 485, 488, 500, 523, 551, 590, 599, 602, 604, 607, 608, 631, 666, 667, 669, 670, 672, 673, 677, 696, 699, 702, 708, 734, 744, 745, 749, 755, 757, 767, 769, 776, 834, 838, 843, 858, 875, 880, 883, 894, 909, 917, 953, 997, 1006, 1028, 1029, 1030, 1034, 1036, 1048, 1053, 1060, 1068, 1069, 1075, 1076, 1086, 1156, 1158, 1159, 1170, 1195], "stuff_raw2": 62, "05": [62, 99, 126, 176, 183, 188, 232, 267, 290, 297, 308, 317, 320, 369, 387, 486, 1141], "runtimeerror": [62, 196, 232, 286, 355, 1033, 1035], "reus": [62, 124, 188, 194, 1028, 1078], "alreadi": [62, 82, 126, 135, 173, 174, 176, 184, 195, 197, 205, 209, 265, 292, 295, 450, 461, 467, 499, 519, 521, 532, 535, 554, 571, 651, 791, 797, 811, 818, 826, 836, 838, 841, 858, 934, 942, 943, 944, 951, 964, 965, 967, 972, 973, 975, 992, 1027, 1033, 1060, 1086, 1165, 1170, 1172, 1179], "bare": [62, 80, 82, 89, 91, 110, 151, 173, 388, 935, 943], "create_coro": 62, "ctor": [62, 200, 209, 258, 307, 340, 551, 573, 581, 598, 601, 602, 605, 615, 617, 652, 675, 699, 700, 702, 706, 707, 732, 740, 755, 771, 857], "nest": [62, 169, 233, 246, 255, 265, 272, 276, 293, 303, 401, 430, 431, 457, 717, 769, 785, 843, 1033, 1076], "_blink": 62, "coro_cr": 62, "creator": [62, 167, 184], "create_factory_for_blink": 62, "blinkfunc": 62, "blink_func": 62, "stuff_decorator_stage1": 62, "stage1": 62, "stararg": [62, 1034, 1037, 1058], "func": [62, 232, 242, 248, 258, 261, 292, 306, 557, 626, 695, 710, 717, 758, 1034, 1038], "becom": [62, 70, 80, 91, 94, 134, 139, 143, 173, 175, 201, 213, 292, 295, 315, 317, 320, 331, 416, 446, 448, 455, 458, 479, 495, 499, 538, 699, 754, 755, 756, 838, 875, 894, 927, 943, 944, 951, 994, 997, 998, 1033, 1039, 1069, 1171, 1177, 1192, 1193], "obsolet": [62, 205, 1060], "prog": [62, 246, 355], "demo": [62, 65, 99, 100, 124, 126, 134, 144, 148, 173, 196, 200, 205, 208, 210, 213, 214, 217, 225, 232, 240, 243, 246, 249, 251, 256, 262, 279, 282, 285, 288, 289, 309, 310, 353, 354, 370, 388, 480, 481, 485, 486, 490, 493, 541, 549, 679, 756, 791, 868, 871, 872, 893, 894, 934, 963, 1005, 1014, 1060, 1143, 1176, 1196, 1200], "opposit": [62, 177, 431, 944, 997, 1150], "futur": [62, 65, 126, 142, 180, 245, 265, 277, 278, 280, 289, 337, 361, 383, 384, 455, 519, 689, 723, 765, 767, 768, 790, 791, 848, 1190], "glt": [68, 170], "2024": [68, 125, 148, 149, 248, 387], "biographi": [68, 233, 282, 328, 1137], "evolut": [233, 282, 328, 898, 1137], "intro": [68, 95, 126, 143, 144, 148, 170, 200, 224, 234, 243, 256, 257, 270, 273, 292, 295, 300, 306, 312, 324, 595, 695, 703, 723, 747, 791, 934, 958, 975, 977, 979, 1137, 1191, 1193, 1205], "textual": [67, 68, 203, 205, 552], "taskgroup": 68, "love": [67, 154, 299, 1132], "allow": [67, 211, 212, 232, 261, 410, 477, 682, 755, 789, 820, 843, 1099, 1170, 1190], "style": [67, 131, 169, 173, 178, 242, 248, 251, 258, 261, 300, 463, 478, 479, 573, 598, 599, 604, 638, 672, 675, 686, 695, 700, 731, 747, 772, 776, 780, 781, 782, 790, 791, 806, 855, 978, 1064, 1106, 1131, 1142], "subsystem": [67, 88, 99, 100, 105, 106, 126, 148, 191, 213, 220, 225, 262, 278, 280, 282, 288, 289, 298, 300, 301, 317, 323, 354, 791, 816, 834, 848, 868, 872, 874, 934, 935, 942, 943, 944, 978, 994, 1035, 1170, 1194, 1195, 1201], "stori": [67, 173, 174, 175, 179, 180, 184, 201, 202, 234, 297, 448, 581, 599, 613, 776, 813, 816, 839, 877, 938, 955], "pointlessli": 67, "light": [67, 86, 183, 877, 1059, 1170], "notifi": [67, 501, 767, 959, 1006, 1153], "press": [67, 172, 818, 855, 898, 935], "hint": [67, 126, 139, 188, 261, 273, 302, 394, 497, 557, 567, 571, 682, 865, 866, 878, 947, 996], "asyncron": 67, "fit": [67, 106, 184, 189, 194, 196, 351, 411, 416, 496, 620, 695, 717, 797, 838, 935, 1140, 1142, 1151], "addition": [67, 108, 172, 175, 416, 500, 517], "termin": [65, 67, 131, 172, 174, 178, 192, 203, 225, 271, 273, 289, 292, 295, 298, 300, 302, 392, 395, 399, 402, 405, 412, 424, 430, 453, 473, 479, 491, 495, 521, 522, 554, 573, 602, 723, 729, 756, 762, 854, 873, 876, 880, 881, 882, 898, 920, 930, 931, 964, 982, 986, 991, 996, 1008, 1009, 1010, 1065, 1067, 1071, 1086, 1099, 1116, 1144, 1150, 1153, 1201], "sdbu": [67, 68], "systemd": [66, 67, 190, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 354, 838, 876, 929, 944, 1009, 1185], "client": [67, 124, 134, 151, 178, 180, 191, 236, 240, 268, 282, 477, 505, 506, 519, 758, 759, 938, 951, 953, 961, 1006, 1149, 1165], "blueprint": 65, "complain": [65, 175, 184, 188, 202, 417, 590, 605, 606, 813, 841, 951], "quickli": [65, 213, 300, 315, 327, 328, 331, 373, 437, 497, 943, 1192], "glt2024": [65, 66], "box": [65, 159, 163, 205, 935, 942, 1060], "matrix": [65, 194, 196, 297, 377, 379, 468], "coroutin": [242, 248, 258, 261, 337, 725, 726, 728, 729, 730, 731, 735, 790, 791, 1137], "fom": [], "create_futur": [], "launch_isol": [], "forev": [65, 195, 437, 438], "edg": [65, 191, 235, 820, 978, 979], "timestamp": [65, 131, 238, 248, 268, 297, 301, 302, 323, 325, 327, 329, 335, 479, 759, 799, 900, 920, 954, 1005], "bounc": [65, 468, 857], "debounce_period": 65, "second": [65, 91, 172, 175, 176, 180, 192, 205, 211, 232, 238, 242, 246, 248, 253, 258, 261, 265, 291, 293, 356, 391, 401, 455, 471, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 531, 535, 536, 537, 541, 544, 554, 590, 605, 653, 655, 656, 695, 724, 725, 744, 755, 756, 769, 770, 785, 786, 787, 848, 875, 880, 883, 943, 962, 965, 972, 996, 1005, 1009, 1013, 1014, 1028, 1029, 1030, 1080, 1088, 1165, 1177, 1190], "print_ev": 65, "aha": [65, 175, 195, 206, 355, 801, 818, 943, 1150, 1177], "asynchron": [65, 66, 173, 242, 248, 258, 261, 328, 356, 959, 976, 979, 1009, 1010, 1089], "wait_button": 65, "imageview": 65, "libssl": [66, 818, 942], "libreadlin": 66, "libffi": 66, "libsystemd": 66, "wget": [66, 159, 178, 180, 184, 303, 1024, 1026], "ftp": [66, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 925, 1026], "readlin": [66, 196, 223, 225, 232, 233, 245, 246, 252, 261, 268, 293, 303, 329, 335, 341, 347, 354, 362, 898, 1086], "libgpiod": [68, 136, 143, 151, 170, 328, 356, 358, 791], "raspberri": [68, 80, 99, 106, 108, 134, 148, 151, 168, 185, 189, 215, 289, 328, 373, 375, 376, 387, 389, 555, 791, 815, 819, 838, 842, 847, 853, 856, 859, 934, 941, 943, 944, 955, 1000, 1013, 1015, 1019, 1022, 1024, 1026, 1037, 1059, 1063, 1151, 1153, 1164, 1185, 1194], "increasingli": 70, "whose": [70, 184, 242, 248, 258, 261, 297, 307, 383, 384, 517, 587, 690, 691, 935, 1036, 1170, 1177], "mainten": [70, 412, 438, 457, 1029], "easier": [70, 82, 87, 94, 194, 235, 479, 505, 610, 694, 838, 1190], "never": [70, 112, 113, 173, 174, 175, 180, 193, 255, 261, 265, 307, 325, 416, 437, 453, 464, 467, 477, 495, 517, 596, 677, 755, 776, 777, 779, 781, 877, 935, 958, 983, 1013], "simpler": [70, 184, 235, 299, 302, 395, 454, 488, 634, 834, 838, 943, 955], "wors": [70, 161, 176, 261, 463, 479, 717, 960, 1173], "makefil": [66, 70, 99, 154, 235, 278, 280, 480, 491, 807, 811, 839, 840, 1017, 1020, 1022, 1029, 1030], "everytbodi": 71, "runtim": [71, 154, 173, 184, 206, 210, 234, 258, 261, 341, 392, 413, 461, 471, 472, 485, 490, 521, 522, 535, 549, 584, 593, 633, 651, 652, 695, 737, 744, 758, 759, 981, 1012, 1048, 1066, 1078, 1143, 1144], "dispatch": [71, 324, 341, 584, 593, 669, 672, 673, 775, 776, 777, 779, 790, 791], "hell": [71, 225, 259, 463, 496, 709, 740, 762, 828, 863, 988, 1150], "destructor": [71, 72, 99, 108, 134, 144, 235, 251, 272, 298, 300, 338, 372, 373, 501, 515, 543, 553, 567, 573, 582, 588, 595, 596, 597, 598, 603, 605, 620, 668, 669, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 708, 735, 751, 760, 766, 768, 771, 776, 788, 790, 791, 799, 830, 843, 855, 1182], "opportun": [71, 180, 183, 193, 205, 224, 467, 686, 1049, 1193], "shoot": [71, 900], "oneself": [71, 1195], "encapsul": [72, 75, 233, 246, 251, 298, 300, 324, 356, 477, 497, 501, 515, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 573, 595, 596, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 704, 735, 751, 760, 768, 776, 788, 790, 791, 807, 840, 1006, 1061, 1191], "hide": [72, 234, 246, 302, 1061], "fanci": [72, 1081, 1143, 1163], "whatnot": [72, 249, 767, 838, 935, 943, 961, 991], "boost": [73, 251, 490, 493, 573, 723, 999, 1208], "feel": [73, 173, 175, 184, 205, 590, 687, 689, 690, 695, 980, 998, 1060], "cluster_ecpropos": [74, 75, 76, 89, 791], "cluster_ecproposal_ec1": [74, 75, 76, 89, 791], "cluster_ecproposal_ec1_cxx": [74, 75, 76, 89, 791], "cluster_ecproposal_ec1_linux": [74, 75, 76, 791], "cluster_ecproposal_ec1_mt": [74, 75, 76, 89, 791], "cluster_ecproposal_ec2": [74, 76, 791], "cluster_ecproposal_ec2_python": [74, 76, 791], "ecproposal_ec1_git": [74, 75, 76, 791], "ecproposal_ec1_cxx_build": [74, 75, 76, 89, 791], "ecproposal_ec1_cxx_oo_bas": [74, 75, 76, 791], "ecproposal_ec1_cxx_unittest": [74, 75, 76, 791], "ecproposal_ec1_cxx_ifac": [74, 75, 76, 791], "ecproposal_ec1_linux_exercise_avg_sensor": [74, 75, 76, 791], "ex": [74, 75, 76, 80, 89, 161, 233, 246, 567, 584, 745, 791, 883, 898, 1172], "averag": [74, 75, 76, 80, 86, 87, 209, 245, 249, 265, 300, 324, 500, 516, 546, 553, 791, 1000, 1094], "ecproposal_ec1_linux_exercise_sensor": [74, 75, 76, 791], "temperatur": [74, 75, 76, 80, 84, 93, 96, 99, 116, 121, 122, 126, 127, 128, 129, 134, 135, 136, 144, 148, 209, 242, 289, 324, 337, 338, 376, 379, 394, 396, 398, 496, 502, 507, 528, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 566, 584, 595, 673, 705, 775, 777, 779, 781, 791, 838, 934, 941, 973, 975, 992, 1048, 1125, 1140, 1141, 1142, 1143], "ecproposal_ec1_linux_gpio": [74, 75, 76, 791], "ecproposal_ec1_linux_dev_mgmt": [74, 75, 76, 791], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [74, 75, 76, 791], "ecproposal_ec1_mt_wait": [74, 75, 76, 89, 791], "ecproposal_ec1_mt_exercise_mt_race_fix": [74, 75, 76, 89, 791], "avoid": [74, 75, 76, 80, 89, 173, 180, 188, 265, 403, 438, 516, 551, 553, 563, 597, 601, 652, 791, 836, 927, 943, 1191], "ecproposal_ec1_linux_exercise_led_displai": [74, 75, 76, 791], "displai": [74, 75, 76, 80, 114, 115, 117, 118, 125, 127, 136, 144, 178, 242, 248, 258, 261, 286, 289, 291, 293, 298, 303, 307, 329, 335, 341, 347, 379, 471, 544, 791, 873, 920, 929, 942, 996, 1172], "ecproposal_ec1_linux_bas": [74, 75, 76, 791], "ecproposal_ec1_mt_lock": [74, 75, 76, 89, 791], "semaphor": [74, 75, 76, 78, 80, 89, 91, 168, 197, 198, 220, 242, 248, 258, 261, 388, 767, 791, 830, 985, 1195, 1205], "ecproposal_ec1_mt_exercise_mt_rac": [74, 75, 76, 89, 791], "ecproposal_ec2_python_web_sensor": [74, 76, 791], "ecproposal_ec2_python_exercise_avg_displai": [74, 76, 791], "ecproposal_ec2_python_flask": [74, 76, 791], "ecproposal_ec2_python_exercise_sensor": [74, 76, 791], "ecproposal_ec2_python_bas": [74, 76, 791], "qualiti": [75, 180, 234, 297, 943, 1164], "assur": 75, "characterist": 75, "polymorph": [76, 108, 126, 127, 142, 232, 233, 246, 298, 300, 302, 317, 320, 479, 501, 515, 543, 595, 668, 669, 672, 673, 692, 753, 758, 775, 776, 777, 790, 791, 1190, 1193], "concurr": [76, 205, 209, 259, 328, 745, 828, 1044, 1137], "increment": [77, 191, 234, 248, 251, 274, 297, 395, 399, 403, 423, 432, 439, 443, 445, 449, 452, 456, 465, 469, 474, 475, 573, 590, 697, 735, 788, 790, 791, 870, 982, 983, 984, 1005, 1006, 1044], "lossi": 77, "access": [78, 80, 90, 112, 113, 116, 122, 131, 170, 174, 175, 176, 178, 180, 193, 203, 213, 220, 232, 242, 245, 248, 251, 258, 261, 268, 271, 286, 289, 293, 303, 307, 317, 329, 334, 335, 341, 347, 356, 370, 373, 375, 407, 446, 467, 468, 506, 522, 547, 548, 549, 550, 573, 596, 608, 610, 613, 614, 616, 617, 631, 656, 670, 677, 680, 683, 684, 687, 688, 689, 690, 691, 692, 706, 723, 738, 742, 754, 791, 796, 806, 809, 815, 826, 834, 838, 840, 856, 871, 874, 883, 885, 886, 909, 934, 944, 953, 954, 960, 964, 968, 970, 974, 978, 982, 996, 997, 1005, 1010, 1031, 1036, 1043, 1044, 1047, 1066, 1073, 1075, 1088, 1105, 1141, 1158, 1172, 1195], "flavor": [78, 89, 173, 480, 744, 749], "stash": 79, "resolv": [79, 124, 157, 184, 188, 242, 245, 248, 251, 258, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 434, 460, 609, 955, 1012, 1015, 1141, 1142], "suffic": [79, 180, 405, 455], "purpos": [79, 80, 82, 131, 142, 166, 174, 178, 184, 205, 224, 242, 248, 258, 261, 273, 286, 373, 401, 479, 491, 598, 630, 670, 759, 838, 871, 880, 943, 965, 970, 991, 1012, 1030, 1060, 1142, 1171, 1194, 1201], "unifi": [80, 139, 212, 623], "intention": [80, 234, 307, 710], "power": [80, 91, 172, 174, 189, 194, 234, 251, 371, 372, 373, 391, 403, 404, 446, 455, 838, 848, 855, 869, 935, 939, 942, 943, 944, 963, 978, 996, 1000, 1037, 1055, 1059, 1061, 1067, 1072, 1084, 1089, 1160], "being": [80, 83, 127, 161, 173, 176, 177, 183, 197, 205, 211, 232, 261, 265, 324, 338, 370, 416, 443, 460, 496, 499, 584, 608, 651, 753, 755, 759, 761, 767, 789, 820, 834, 838, 873, 955, 970, 996, 1043, 1050, 1060, 1063, 1141, 1179, 1182, 1195], "address": [80, 101, 108, 112, 113, 126, 127, 148, 173, 175, 176, 177, 180, 213, 220, 225, 232, 234, 235, 251, 253, 279, 288, 289, 300, 309, 310, 351, 353, 354, 367, 372, 373, 381, 434, 436, 445, 449, 452, 455, 456, 464, 465, 469, 474, 475, 495, 501, 506, 509, 515, 517, 519, 524, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 595, 605, 610, 697, 707, 708, 735, 749, 768, 788, 790, 791, 818, 822, 834, 836, 865, 866, 867, 868, 871, 872, 874, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934, 936, 938, 943, 944, 946, 947, 948, 949, 950, 955, 957, 961, 963, 965, 972, 973, 975, 980, 988, 989, 991, 992, 995, 997, 1005, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1044, 1047, 1141, 1142, 1161, 1170], "crucial": [80, 173, 197, 470, 632], "piec": [80, 166, 174, 457, 573, 625, 943, 974], "mmu": [80, 173, 809, 852, 875, 996], "sophist": [80, 242, 496, 517, 554, 691], "permiss": [80, 99, 102, 103, 104, 126, 149, 154, 208, 209, 213, 215, 225, 232, 248, 268, 279, 288, 303, 306, 309, 324, 353, 356, 365, 370, 371, 372, 373, 375, 543, 595, 681, 768, 789, 790, 791, 797, 838, 865, 866, 868, 871, 872, 875, 881, 884, 888, 889, 890, 891, 892, 894, 895, 896, 900, 912, 915, 917, 918, 920, 934, 935, 945, 948, 950, 951, 954, 955, 960, 963, 964, 965, 968, 970, 971, 973, 975, 989, 992, 995, 997, 998, 1010, 1035, 1137, 1165, 1172, 1196, 1205], "nativ": [80, 99, 106, 126, 172, 178, 180, 206, 242, 278, 280, 298, 377, 791, 838, 934, 1013, 1017, 1019, 1022, 1146, 1149, 1155], "varieti": [80, 473, 874, 1012, 1193], "storag": [80, 178, 183, 480, 708, 838, 874, 935, 943, 960, 980, 1206], "underli": [80, 154, 233, 240, 256, 265, 306, 370, 375, 745, 944, 1137, 1142, 1146], "platform": [80, 154, 180, 233, 242, 246, 248, 258, 261, 265, 273, 291, 341, 363, 372, 390, 818, 838, 943, 944, 978, 996, 1125, 1170, 1172], "offer": [80, 173, 183, 224, 299, 431, 608, 612], "popular": [80, 184, 197, 201, 426, 703, 863, 944, 996, 1012, 1028, 1054, 1139, 1145, 1153, 1166, 1193], "often": [80, 91, 172, 173, 174, 175, 205, 255, 265, 292, 295, 315, 331, 412, 422, 443, 482, 497, 509, 623, 745, 838, 898, 974, 1040, 1060, 1074, 1192, 1193], "appropri": [80, 128, 139, 160, 166, 173, 183, 188, 193, 225, 265, 412, 426, 438, 553, 759, 834, 942, 954, 1005, 1143, 1149, 1193], "prototyp": [80, 356, 403, 495, 557, 590, 706, 838, 935, 943, 956, 1033, 1149], "higher": [80, 173, 184, 242, 248, 258, 261, 789, 836, 935, 997, 999, 1006, 1014, 1022, 1149, 1192], "fulli": [80, 177, 180, 184, 209, 459, 554, 1006], "distribut": [80, 178, 183, 188, 200, 205, 225, 235, 253, 265, 367, 495, 541, 549, 762, 809, 838, 876, 877, 998, 1060], "en": [66, 80, 154, 178, 190, 200, 261, 289, 675], "vogu": 80, "serial": [80, 172, 173, 183, 213, 248, 249, 261, 871, 873, 1194, 1201], "groundwork": 80, "lai": 80, "instruct": [80, 172, 176, 180, 203, 234, 289, 298, 300, 467, 538, 754, 769, 984, 996, 1027, 1125], "consolid": [80, 205], "makeri": 80, "everybodi": [80, 178, 299, 459, 505, 599, 638, 681, 869, 1063, 1067, 1170, 1190], "clarifi": 80, "earli": [80, 172, 205, 209, 214, 299, 843, 855, 870, 998, 1031, 1048, 1086, 1192], "matter": [80, 172, 177, 178, 180, 188, 205, 211, 213, 397, 441, 473, 480, 487, 497, 597, 598, 610, 613, 699, 738, 745, 755, 757, 813, 838, 840, 883, 894, 936, 942, 944, 955, 1035, 1060, 1162, 1172, 1182, 1193], "rewrit": [80, 82, 173, 479], "translat": [80, 93, 94, 193, 206, 224, 261, 265, 268, 271, 307, 744, 1104], "flask": [80, 95, 170, 209, 212, 1034], "network": [80, 112, 113, 159, 168, 169, 170, 173, 180, 190, 191, 213, 215, 220, 245, 261, 268, 271, 282, 286, 288, 289, 293, 303, 307, 309, 324, 329, 335, 341, 347, 353, 372, 388, 389, 473, 506, 791, 792, 815, 855, 871, 873, 874, 876, 934, 937, 938, 943, 944, 945, 955, 959, 960, 963, 964, 975, 994, 1201, 1205], "oppos": [82, 126, 172, 212, 246, 253, 263, 298, 354, 438, 482, 487, 584, 922, 936, 943, 951, 985, 998, 1005, 1010, 1029, 1055, 1066, 1067, 1150, 1158], "ahead": [82, 188, 477, 1050], "optimz": 82, "donald": [82, 466], "knuth": [82, 466], "prematur": [82, 466, 470], "optim": [82, 174, 286, 298, 329, 453, 469, 470, 474, 475, 482, 776, 791, 822, 1149, 1189, 1191], "evil": [82, 251, 407, 457, 466, 470, 482, 610], "knowledg": [83, 87, 292, 295, 298, 554, 688, 690, 838, 936, 944, 1037, 1059, 1164], "onewir": [83, 87, 99, 108, 126, 127, 128, 136, 144, 148, 289, 300, 337, 370, 373, 542, 543, 595, 791, 934, 941, 942, 973, 975, 992], "protocol": [83, 165, 178, 211, 212, 222, 244, 247, 249, 250, 254, 257, 260, 263, 272, 285, 287, 292, 295, 301, 302, 304, 305, 308, 311, 323, 324, 326, 327, 328, 330, 334, 336, 342, 345, 346, 376, 379, 411, 419, 506, 519, 796, 925, 936, 938, 942, 944, 945, 953, 954, 974, 1033, 1037, 1041, 1048], "aspect": [83, 131, 205, 209, 235, 259, 298, 300, 328, 502, 869, 942, 944, 1137, 1164, 1170, 1195], "regard": [83, 180, 205, 356, 898, 1060, 1067, 1166, 1170], "filesystem": [83, 87, 108, 126, 172, 175, 184, 213, 215, 225, 276, 341, 370, 375, 554, 790, 791, 838, 864, 943, 955, 971, 978, 996, 1015, 1170, 1196, 1201, 1203, 1207], "hwmon": [83, 87, 127, 376, 379], "composit": [84, 108, 130, 133, 144, 209, 235, 281, 299, 300, 317, 494, 501, 515, 529, 543, 595, 791, 1040, 1193], "mock": [84, 126, 127, 142, 143, 144, 299, 301, 302, 323, 327, 338, 357, 359, 543, 544, 545, 546, 548, 584, 595, 791, 1177], "pin": [86, 143, 289, 356, 935, 939, 942, 943], "emit": [86, 157, 522, 523, 880], "linearli": [86, 265, 637, 874], "cold": [86, 224], "hot": [86, 175, 468, 471, 820], "queri": [86, 1068], "feed": [86, 170, 1142], "said": [86, 112, 113, 175, 188, 205, 292, 295, 302, 517, 630, 677, 761, 767, 799, 935, 943, 944, 955, 982, 997, 1040, 1060, 1080, 1150, 1163], "ds18s20": [87, 376, 1170], "datasheet": [87, 158, 834, 935, 944], "lm73": [87, 289, 376, 379, 791, 934, 941, 944], "ti": [87, 172, 477, 555, 599, 756], "hoc": [87, 235, 437], "report": [87, 127, 130, 136, 144, 154, 172, 175, 176, 188, 190, 192, 381, 463, 473, 596, 791, 956, 991, 1177, 1179], "sort": [87, 108, 110, 160, 173, 200, 206, 214, 218, 233, 235, 245, 246, 251, 253, 255, 256, 261, 269, 283, 286, 293, 298, 307, 313, 335, 341, 351, 467, 468, 471, 472, 482, 573, 631, 649, 659, 663, 692, 733, 737, 745, 758, 767, 769, 791, 878, 882, 920, 931, 944, 1035, 1083, 1084, 1139, 1165], "experi": [87, 161, 180, 205, 477, 482, 581, 943, 944, 1171], "especi": [88, 94, 124, 134, 174, 178, 197, 205, 289, 370, 388, 390, 416, 427, 457, 477, 699, 813, 944], "deprec": [88, 143, 148, 302, 664, 964, 978, 1190], "foremost": 89, "osen": [89, 91, 183, 761, 789, 996], "recurs": [89, 90, 209, 233, 242, 248, 258, 261, 765, 830, 843, 882, 883, 898, 910, 920, 927, 947, 954, 991, 1072, 1076, 1190], "mother": [90, 110, 189, 251, 573, 1053, 1190], "protect": [90, 144, 173, 175, 225, 233, 245, 298, 300, 418, 437, 535, 536, 596, 599, 610, 666, 668, 669, 692, 767, 791, 822, 830, 836, 875, 917, 943, 984, 985, 996, 1044, 1047, 1056, 1182, 1195], "critic": [90, 173, 183, 473, 766, 828, 830, 1165], "kind": [90, 121, 173, 175, 183, 188, 193, 205, 209, 242, 248, 249, 258, 259, 261, 273, 289, 301, 302, 323, 327, 502, 554, 602, 649, 699, 708, 753, 767, 869, 935, 942, 943, 1044, 1137, 1163, 1164, 1195], "poll": [91, 179, 190, 830, 832, 855, 978, 983, 985, 1002, 1006, 1194, 1201, 1205, 1207], "readi": [91, 172, 935, 1170], "rare": [91, 178, 195, 209, 480, 490, 552, 554, 605, 703, 754, 920, 942, 959, 1071, 1075, 1088, 1171], "btw": [91, 177, 183, 205, 211, 225, 232, 252, 255, 370, 454, 807, 873, 1126, 1128], "increas": [91, 175, 467, 935, 998, 1000, 1028, 1193], "tight": [91, 197, 411, 769, 841, 1162], "bui": [91, 173, 496], "bigger": [91, 173, 205, 467, 1143], "avail": [91, 134, 139, 144, 172, 173, 175, 176, 178, 184, 188, 197, 201, 205, 225, 234, 242, 248, 258, 261, 315, 323, 324, 327, 331, 389, 481, 483, 488, 492, 497, 522, 523, 723, 759, 765, 769, 811, 838, 843, 870, 894, 935, 939, 942, 943, 994, 997, 998, 1015, 1026, 1031, 1036, 1043, 1067, 1085, 1086, 1136, 1145, 1162, 1165, 1172, 1173, 1192, 1195], "rout": [95, 209, 1034], "jinja2": 95, "ss2022": [98, 791, 867, 868, 934], "ws2022": 98, "lab": [98, 108, 126, 370], "vo": [99, 108, 126, 376], "ku": [99, 107, 108, 126], "g1": [99, 791, 867, 868, 934], "g2": [99, 370, 791, 867, 868, 934], "08": [99, 101, 107, 126, 176, 183, 184, 185, 239, 242, 267, 271, 297, 335, 387, 491, 935, 942, 944, 966, 1027, 1141], "cont": [99, 126, 148, 243, 306], "command": [99, 101, 124, 126, 148, 169, 172, 177, 183, 213, 225, 230, 240, 242, 248, 249, 256, 258, 261, 270, 273, 279, 281, 288, 289, 306, 309, 310, 353, 354, 356, 370, 375, 388, 438, 459, 470, 482, 492, 493, 494, 501, 515, 519, 529, 543, 552, 595, 605, 754, 768, 790, 791, 838, 864, 865, 866, 867, 868, 871, 872, 873, 875, 876, 877, 878, 880, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 900, 901, 902, 903, 905, 906, 907, 909, 910, 912, 913, 914, 916, 918, 926, 931, 934, 943, 944, 945, 946, 947, 954, 958, 963, 965, 973, 975, 989, 991, 992, 995, 996, 997, 998, 1012, 1013, 1020, 1024, 1028, 1088, 1137, 1165, 1172, 1179, 1193], "wsl": [99, 100, 105, 106, 126, 148, 262, 282, 288, 301, 317, 323, 354, 791, 868, 872, 934, 1015, 1022, 1023, 1027], "homework": [99, 104, 107, 126, 148, 175], "sshf": [99, 103, 126, 279, 288, 289, 309, 310, 353, 354, 377, 791, 934, 945, 950, 1015, 1024], "toolchain": [99, 105, 106, 108, 110, 125, 126, 134, 149, 168, 185, 200, 202, 289, 388, 479, 480, 486, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 595, 768, 790, 791, 839, 868, 871, 872, 934, 957, 963, 965, 972, 973, 975, 989, 992, 995, 997, 1014, 1015, 1016, 1017, 1020, 1028, 1029, 1030, 1061, 1185, 1187, 1188, 1189, 1197, 1203, 1205], "bashrc": [99, 106, 126, 148, 172, 184, 245, 279, 288, 289, 303, 309, 310, 341, 353, 354, 791, 868, 870, 918, 920, 934, 954, 1024, 1026], "studi": [99, 106, 148, 234, 277, 278, 280, 281, 289, 337, 494, 501, 695, 735, 790, 791, 934, 1017, 1019, 1022], "ds18b20": [99, 126, 128, 144, 148, 289, 337, 370, 791, 934, 941, 972], "slave": [99, 126, 128, 144, 148, 289, 337, 791, 934, 939, 941, 972], "redirect": [99, 102, 126, 148, 174, 177, 213, 215, 225, 242, 248, 258, 261, 279, 288, 289, 309, 353, 355, 370, 375, 791, 865, 866, 867, 868, 882, 902, 903, 905, 906, 909, 910, 912, 918, 931, 934, 964, 1086, 1186, 1196, 1203], "pipe": [99, 173, 178, 180, 193, 213, 215, 225, 279, 288, 289, 291, 309, 353, 355, 370, 375, 789, 791, 868, 875, 880, 920, 925, 934, 964, 1008, 1009, 1010, 1024, 1086, 1186, 1196, 1203], "06": [99, 108, 125, 126, 183, 214, 258, 277, 290, 297, 314, 317, 320, 369, 387, 479, 490, 573, 789, 1063, 1141], "past": [99, 173, 177, 178, 235, 251, 443, 628, 630, 634, 637, 641, 706, 811, 813, 877, 1132, 1136, 1187], "2p": [99, 106], "3p": [99, 106], "5p": [99, 106], "pointer": [99, 110, 121, 126, 135, 144, 176, 200, 276, 337, 362, 371, 372, 373, 388, 401, 403, 405, 446, 447, 449, 450, 452, 454, 455, 456, 465, 469, 474, 475, 509, 554, 567, 584, 589, 591, 596, 597, 599, 607, 614, 616, 625, 629, 633, 637, 638, 641, 647, 651, 664, 697, 704, 705, 706, 733, 735, 740, 742, 744, 749, 754, 756, 759, 760, 768, 771, 775, 776, 779, 781, 786, 787, 788, 790, 791, 797, 804, 809, 820, 826, 855, 858, 956, 982, 1010, 1086, 1187, 1188, 1189, 1190, 1191, 1193], "exit": [99, 126, 169, 173, 175, 203, 224, 242, 248, 251, 258, 261, 283, 289, 324, 363, 388, 392, 444, 486, 493, 502, 605, 672, 752, 754, 791, 801, 806, 840, 934, 944, 960, 961, 962, 964, 965, 970, 972, 975, 976, 992, 1002, 1009, 1010, 1029, 1035, 1043, 1044, 1062, 1065, 1078, 1088, 1099, 1116, 1165, 1172], "statu": [99, 126, 127, 136, 144, 169, 174, 176, 188, 242, 248, 251, 258, 261, 273, 283, 289, 388, 392, 444, 482, 486, 493, 672, 789, 791, 840, 854, 934, 965, 970, 972, 975, 992, 996, 1009, 1029, 1065, 1092, 1151], "yai": [99, 169, 245, 253, 255, 268, 274, 293, 303, 335, 347, 351, 638, 689, 695, 991], "ol": [99, 126, 251, 298, 300, 307, 379, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 599, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 747, 751, 757, 760, 768, 776, 779, 788, 790, 791, 931, 1006, 1081, 1086, 1109], "randomsensor": [99, 144, 502, 507, 516, 528, 542, 543, 549, 553, 563, 564, 565, 566, 568, 569, 595, 753, 754, 755, 756, 791, 1048], "rectangl": [99, 166, 505, 573, 602, 618, 692, 791], "mystr": [99, 199, 251], "point3d": [99, 618, 692, 791], "cuboid": [99, 618, 692, 791], "hierarchi": [101, 108, 112, 113, 116, 122, 131, 148, 209, 210, 212, 214, 232, 233, 246, 249, 261, 279, 288, 289, 309, 310, 320, 353, 354, 381, 468, 495, 496, 497, 500, 501, 515, 516, 520, 522, 543, 553, 595, 791, 868, 871, 872, 873, 884, 887, 888, 889, 890, 891, 892, 893, 898, 904, 910, 917, 934, 946, 947, 948, 949, 950, 975, 993, 1022, 1023], "parent": [101, 111, 112, 113, 148, 175, 188, 190, 279, 288, 289, 309, 310, 353, 354, 789, 791, 818, 868, 870, 871, 872, 873, 874, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 901, 902, 903, 904, 905, 907, 909, 910, 911, 922, 934, 946, 947, 948, 949, 950, 975, 981, 1022, 1023], "login": [101, 126, 144, 148, 178, 180, 213, 225, 279, 341, 369, 370, 791, 865, 866, 868, 869, 870, 872, 874, 875, 876, 884, 887, 888, 889, 890, 891, 892, 893, 899, 934, 935, 943, 946, 947, 948, 949, 950, 951, 953, 955, 972, 1022, 1023, 1115, 1185, 1194, 1201], "bourn": [101, 126, 148, 189, 213, 215, 279, 288, 289, 309, 353, 370, 371, 372, 375, 388, 389, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 789, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 928, 934, 957, 963, 965, 973, 975, 976, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "verifi": [102, 104, 126, 139, 143, 148, 161, 183, 189, 201, 213, 225, 289, 354, 381, 590, 608, 791, 868, 873, 902, 905, 906, 909, 912, 918, 934, 947, 948, 950, 1103, 1140, 1143, 1165], "joke": [102, 173], "mostli": [102, 116, 121, 122, 259, 388, 393, 399, 411, 427, 457, 466, 611, 652, 754, 759, 806, 874, 877, 898, 964, 991, 994, 1015, 1192], "secur": [103, 126, 148, 149, 176, 178, 180, 225, 245, 251, 279, 288, 309, 341, 353, 354, 369, 791, 865, 866, 871, 873, 876, 894, 898, 934, 935, 945, 946, 947, 948, 949, 953, 964, 972, 1022, 1023, 1029, 1031, 1063, 1094], "account": [103, 112, 113, 126, 178, 180, 200, 205, 209, 210, 245, 251, 261, 268, 271, 286, 290, 291, 293, 303, 307, 329, 335, 341, 347, 370, 375, 400, 473, 479, 677, 695, 811, 942, 955, 1060, 1141], "authent": [103, 126, 148, 213, 225, 234, 279, 288, 289, 309, 310, 353, 354, 367, 370, 791, 865, 866, 934, 945, 946, 947, 948, 949, 950, 955, 1103], "ownership": [103, 126, 200, 235, 289, 310, 324, 353, 354, 543, 563, 567, 573, 595, 708, 750, 753, 754, 768, 790, 791, 865, 866, 868, 871, 872, 875, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 934, 963, 964, 965, 973, 975, 989, 992, 995, 997, 1190, 1193], "setuid": [103, 126, 213, 279, 288, 289, 309, 310, 353, 354, 791, 868, 873, 893, 934], "quick": [104, 126, 205, 212, 230, 234, 240, 249, 256, 270, 282, 312, 522, 759, 925, 935, 1137, 1163], "credenti": [104, 126, 180, 273, 354, 791, 866, 867, 868, 873, 887, 888, 889, 890, 891, 892, 893, 934, 951, 980, 1033], "share": [104, 105, 108, 112, 113, 126, 151, 168, 173, 175, 180, 184, 188, 197, 198, 200, 201, 203, 206, 225, 235, 242, 245, 248, 258, 261, 265, 268, 271, 276, 277, 278, 280, 286, 289, 293, 303, 307, 316, 329, 332, 335, 337, 341, 347, 354, 367, 388, 389, 433, 460, 461, 467, 473, 480, 484, 491, 492, 496, 508, 553, 573, 581, 695, 756, 758, 759, 767, 769, 788, 790, 791, 816, 820, 836, 843, 867, 868, 871, 877, 887, 890, 891, 893, 929, 934, 943, 967, 980, 982, 988, 994, 1000, 1012, 1015, 1022, 1024, 1044, 1047, 1179, 1194, 1195, 1203, 1205], "adjust": [104, 163, 167, 791, 838, 934, 943, 948, 950, 1006, 1013], "ubuntu": [105, 134, 174, 180, 184, 188, 200, 201, 202, 203, 213, 278, 280, 289, 388, 791, 877, 934, 937, 955, 1014, 1015, 1022, 1023, 1027, 1172, 1177], "zoom": [105, 106, 126, 180, 189, 205, 289, 303, 388, 480, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 791, 920, 934, 1014, 1017, 1018, 1019, 1020, 1022, 1184], "recap": [106, 126, 209, 213, 222, 251, 298, 299, 326, 370, 591, 1042], "endeavor": 106, "hoop": [106, 877, 1009], "doze": [106, 179, 234, 235, 248, 370, 377, 455, 789, 877, 922, 1080, 1086, 1172], "pictur": [106, 170, 173, 194, 205, 209, 302, 303, 467, 473, 552, 850, 898, 900, 920, 935, 954, 958, 1205], "theori": [108, 209, 440, 467, 1142], "Of": [108, 126, 144, 175, 178, 208, 209, 259, 277, 278, 280, 282, 289, 298, 300, 338, 501, 515, 543, 553, 595, 628, 668, 669, 679, 692, 776, 788, 790, 791, 867, 882, 929, 934, 972, 975, 977, 1042, 1137, 1150, 1193], "ece20": [108, 111, 538, 554, 615, 865, 866, 873], "uml": [108, 144, 281, 299, 301, 302, 501, 515, 543, 553, 595, 791], "foundat": [108, 256, 286, 501, 515, 543, 595, 791, 838, 1201], "adapt": [108, 144, 176, 209, 281, 299, 494, 501, 503, 504, 515, 519, 529, 533, 543, 595, 759, 791, 943, 944, 1193], "syllabu": [108, 147, 378], "vote": 108, "beurteilungsschema": 108, "grade": [108, 111, 126, 144, 374, 384, 1170], "total": [108, 111, 114, 115, 124, 175, 184, 188, 192, 245, 261, 271, 278, 466, 471, 479, 493, 502, 517, 551, 552, 553, 554, 605, 615, 754, 920, 922, 935, 942, 943, 944, 955, 978, 1006, 1013, 1014, 1015, 1024, 1027, 1092, 1094, 1177], "compos": [108, 130, 131, 151, 189, 251, 324, 405, 497, 676, 838, 1026, 1029, 1038, 1052, 1099, 1150], "practic": [108, 246, 255, 265, 440, 477, 630, 669, 706, 741, 748, 942, 968, 1010, 1145, 1190, 1193], "theoret": [108, 372, 391, 762], "semest": [108, 111, 148, 149, 374, 376], "deliv": [108, 173, 938, 1009, 1010], "variou": [108, 175, 251, 277, 278, 753, 767, 769, 838, 870, 1195], "weight": [108, 196, 205, 462, 832, 944, 1060], "decid": [108, 174, 175, 180, 205, 259, 466, 496, 557, 571, 635, 834, 838, 858, 942, 1043, 1060], "excerpt": [108, 209, 212, 372, 373, 1094, 1151], "w1": [108, 116, 122, 126, 127, 141, 289, 338, 538, 554, 555, 972], "soup": [108, 170, 354, 480, 482, 483, 485, 486, 488, 489, 491, 493, 495, 496, 497, 498, 499, 500, 502, 504, 507, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 551, 553, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 675, 755, 789, 976, 979, 1036, 1039, 1088, 1170, 1179], "armv8": [108, 184, 289, 555, 1013, 1026, 1027], "rpi4": [108, 184, 289, 555, 1013, 1026, 1027], "gnueabihf": [108, 184, 289, 555, 838, 1013, 1024, 1026, 1027], "shape": [108, 166, 194, 196, 235, 297, 298, 329, 351, 543, 573, 595, 615, 695, 791, 838, 964, 1142, 1145, 1155], "algorithm": [108, 174, 183, 194, 242, 248, 256, 258, 261, 269, 271, 277, 278, 298, 307, 467, 543, 560, 584, 591, 595, 622, 633, 635, 636, 638, 639, 642, 643, 659, 662, 663, 692, 737, 745, 747, 758, 762, 791, 1116, 1139, 1143], "find_if": [108, 110, 235, 251, 298, 337, 637, 640, 659, 663, 680, 689, 692, 758, 791], "customiz": [108, 298, 640, 659, 663, 692, 791], "binary_search": [108, 110, 235, 251, 298, 640, 659, 663, 692, 791], "associ": [108, 184, 202, 210, 212, 214, 230, 235, 289, 292, 295, 298, 300, 338, 414, 415, 423, 428, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 543, 544, 560, 562, 595, 630, 659, 663, 692, 695, 697, 723, 735, 788, 790, 791, 797, 804, 862, 936, 964, 1036, 1066, 1067, 1068, 1084, 1086, 1144, 1193], "hour": [108, 178, 180, 205, 209, 242, 264, 282, 293, 306, 328, 376, 1099, 1137, 1144], "sent": [108, 173, 174, 213, 318, 473, 519, 878, 986, 1006, 1010, 1153], "015": 108, "voluntari": 108, "odd": [108, 126, 265, 300, 455, 543, 557, 560, 595, 791, 943, 1038, 1040], "char": [109, 175, 191, 234, 251, 261, 307, 393, 400, 405, 406, 409, 411, 412, 413, 416, 417, 430, 435, 438, 443, 444, 451, 455, 461, 462, 464, 480, 498, 502, 532, 536, 541, 555, 556, 587, 602, 605, 606, 610, 620, 660, 675, 676, 690, 706, 708, 733, 740, 757, 771, 789, 794, 797, 802, 818, 820, 832, 858, 942, 956, 960, 961, 964, 968, 969, 970, 971, 974, 976, 979, 993, 996, 1002, 1005, 1006, 1009, 1030, 1075, 1081, 1148, 1177, 1182], "cout": [109, 116, 119, 122, 123, 131, 184, 481, 487, 502, 516, 521, 522, 523, 535, 536, 537, 538, 541, 549, 553, 554, 581, 599, 601, 606, 608, 612, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 676, 679, 686, 689, 695, 700, 710, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 737, 739, 740, 742, 743, 745, 747, 756, 757, 758, 759, 767, 769, 770, 775, 777, 779, 781, 881, 942, 976, 979, 991, 993, 1005, 1009, 1177], "endl": [109, 116, 119, 122, 184, 481, 502, 516, 521, 522, 523, 535, 536, 537, 538, 541, 549, 553, 554, 581, 599, 601, 606, 608, 612, 613, 620, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 676, 679, 686, 689, 695, 710, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 737, 739, 740, 742, 743, 745, 747, 756, 757, 758, 759, 767, 769, 770, 775, 777, 779, 781, 942, 976, 979, 991, 993, 1005, 1009, 1177], "constitut": 109, "_id": [109, 116, 122], "objectcontain": 109, "add_object": 109, "_contain": [109, 745], "push_back": [109, 526, 527, 590, 631, 632, 633, 638, 641, 644, 648, 652, 699, 700, 703, 708, 767, 1009, 1182], "fragment": [109, 468, 1040, 1177], "iostream": [109, 116, 122, 123, 242, 248, 258, 261, 502, 516, 521, 522, 523, 531, 535, 536, 537, 538, 541, 549, 553, 581, 599, 601, 606, 608, 612, 613, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 642, 643, 644, 648, 652, 653, 654, 655, 656, 662, 666, 667, 670, 672, 673, 679, 685, 686, 687, 688, 689, 690, 695, 700, 710, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 737, 739, 740, 742, 745, 747, 756, 757, 758, 759, 767, 769, 775, 777, 779, 781, 789, 942, 976, 979, 983, 991, 993, 1005, 1009, 1010, 1177], "my_vector": 109, "sysroot": [110, 184, 1013, 1027], "intel": [110, 158, 162, 176, 791, 1012], "header": [110, 169, 201, 235, 251, 276, 306, 315, 316, 331, 332, 437, 438, 439, 445, 449, 452, 456, 460, 465, 469, 474, 475, 479, 484, 485, 486, 491, 492, 502, 623, 697, 712, 717, 735, 741, 788, 790, 791, 882, 939, 944, 1013, 1015, 1024, 1094, 1127, 1131, 1132, 1134, 1142, 1145, 1192], "match": [110, 154, 172, 179, 208, 221, 238, 245, 246, 248, 253, 261, 271, 273, 274, 283, 286, 306, 307, 313, 324, 335, 341, 347, 435, 479, 554, 708, 712, 732, 745, 749, 873, 882, 955, 1015, 1035, 1081, 1137, 1177], "linker": [110, 112, 113, 168, 200, 315, 331, 434, 460, 467, 471, 472, 483, 490, 612, 623, 838, 1012, 1015, 1018, 1022, 1029, 1187, 1188, 1189, 1192, 1197, 1203], "uniquifi": [111, 300, 543, 560, 595, 791], "lookup": [111, 132, 193, 210, 223, 242, 248, 253, 258, 261, 275, 307, 462, 517, 543, 560, 562, 595, 710, 791, 1048, 1077, 1084, 1115, 1150, 1159, 1207], "leak": [111, 175, 450, 464, 502, 522, 523, 543, 560, 562, 563, 579, 587, 590, 595, 596, 602, 667, 741, 752, 754, 791, 1036], "sure": [111, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 213, 225, 232, 249, 251, 291, 367, 461, 496, 497, 500, 519, 522, 523, 552, 578, 675, 749, 786, 838, 943, 944, 965, 969, 1024, 1036, 1193], "gz": [111, 169, 838, 839, 862, 863, 864, 1092, 1172], "whatev": [111, 132, 139, 143, 172, 173, 175, 180, 196, 211, 271, 356, 473, 519, 598, 698, 723, 789, 903, 905, 955, 960, 996, 998, 1066, 1134, 1142, 1149, 1150, 1172], "quiz": [112, 113, 126, 148, 678, 692, 791, 868, 872, 887, 893, 912, 918, 934, 1019, 1022], "servic": [112, 113, 169, 178, 179, 180, 213, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 354, 473, 479, 762, 830, 836, 841, 871, 874, 925, 944, 953, 955, 962, 998, 1065], "owner": [112, 113, 174, 213, 370, 375, 755, 797, 838, 871, 885, 886, 894, 920, 955, 983], "dimension": [112, 113, 194, 717, 871, 1142, 1143], "identifi": [112, 113, 174, 183, 242, 248, 258, 261, 307, 416, 438, 459, 461, 471, 686, 796, 836, 871, 942, 944, 1082, 1144], "pthread": [112, 113, 173, 184, 190, 242, 248, 258, 261, 761, 767, 871, 980, 985, 988, 996, 1010, 1015], "timeslic": [112, 113, 173, 871, 994, 999], "suspend": [112, 113, 173, 174, 347, 723, 725, 765, 834, 869, 871, 882, 985, 1010], "favor": [112, 113, 871, 997, 1190], "fair": [112, 113, 173, 836, 871, 997, 999], "ensur": [112, 113, 261, 497, 545, 871], "evenli": [112, 113, 253, 871], "cpu": [112, 113, 133, 148, 172, 173, 176, 180, 183, 206, 216, 220, 300, 347, 381, 385, 453, 454, 466, 468, 473, 631, 762, 769, 791, 809, 822, 836, 843, 848, 858, 869, 871, 874, 878, 934, 942, 943, 944, 958, 975, 983, 985, 995, 996, 997, 998, 999, 1046, 1063, 1195], "infinit": [112, 113, 173, 193, 212, 242, 246, 248, 251, 253, 258, 261, 269, 302, 306, 428, 446, 453, 871, 875, 994, 997, 1040, 1041, 1042, 1071, 1107], "illus": [112, 113, 871, 875, 994, 997, 1195], "action": [112, 113, 183, 212, 268, 480, 486, 598, 677, 897, 898, 959, 964, 996, 1009, 1011, 1144, 1165], "undefin": [112, 113, 234, 409, 416, 443, 486, 604, 612, 636, 643, 648, 672, 677, 708, 737, 1009], "behavior": [112, 113, 131, 173, 175, 178, 210, 232, 234, 261, 416, 636, 643, 648, 677, 708, 725, 871, 965, 969, 1010, 1013, 1033, 1038, 1055], "declar": [112, 113, 233, 234, 246, 251, 392, 408, 423, 432, 437, 439, 445, 446, 449, 452, 453, 456, 459, 460, 461, 465, 467, 469, 474, 475, 480, 600, 610, 670, 677, 686, 687, 697, 708, 717, 733, 735, 755, 788, 790, 791, 944, 964, 968, 970, 971, 997, 1179], "promis": [112, 113, 175, 277, 278, 280, 289, 337, 403, 461, 519, 587, 599, 608, 677, 723, 725, 726, 729, 730, 767, 768, 790, 791, 1009, 1061, 1190], "caller": [112, 113, 175, 251, 403, 405, 441, 447, 471, 473, 610, 677, 689, 706, 755, 757, 762, 765, 830, 841, 981, 985, 1036, 1116], "uniniti": [112, 113, 464, 590, 597, 599, 600, 601, 604, 677, 793], "guarante": [112, 113, 173, 211, 242, 261, 455, 500, 677, 802, 809, 943, 944, 997, 998, 1006, 1033], "contigu": [112, 113, 468, 631, 648, 677, 824, 974, 1158], "vec": [112, 113, 597, 599, 606, 613, 614, 615, 616, 617, 677], "hysteresi": [114, 115, 117, 118, 125, 127, 137, 142, 143, 144, 338, 379, 545], "_x": [116, 119, 541, 599, 600, 602, 604, 606, 607, 608, 609, 611, 613, 623, 638, 702, 717, 719, 720, 721], "firstnam": [116, 120, 126, 144, 148, 206, 232, 245, 253, 255, 258, 261, 265, 268, 271, 273, 274, 283, 286, 293, 307, 313, 318, 325, 341, 356, 361, 497, 498, 526, 532, 541, 542, 555, 610, 656, 682, 686, 688, 690, 707, 865, 866, 902, 903, 905, 907, 910, 1036, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1065, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1145, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "lastnam": [116, 120, 126, 144, 148, 206, 235, 245, 251, 253, 255, 258, 261, 265, 268, 271, 273, 274, 286, 293, 307, 313, 318, 325, 341, 356, 361, 497, 498, 526, 532, 541, 542, 555, 610, 656, 680, 682, 686, 689, 692, 707, 791, 865, 866, 902, 903, 905, 907, 910, 1036, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1065, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1145, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "chosen": [116, 120, 184, 482, 935, 942, 944, 970, 974, 994, 998, 1143, 1156], "shorter": [116, 120, 193, 1043, 1054, 1086, 1136], "temporari": [116, 120, 174, 183, 200, 242, 248, 251, 258, 261, 301, 302, 323, 327, 482, 554, 555, 703, 707, 708, 723, 737, 745, 789, 882, 1012, 1038, 1120], "consid": [116, 121, 122, 173, 175, 205, 209, 233, 242, 248, 258, 259, 261, 265, 289, 307, 328, 431, 458, 459, 467, 519, 673, 898, 942, 997, 1052, 1060, 1137, 1164, 1165, 1192], "imagin": [116, 122, 173, 175, 457, 462, 463, 495, 508, 838, 877, 894, 935, 944, 983, 1010], "w1sensor": [116, 122, 144, 539, 540, 541, 542, 554], "pragma": [116, 121, 122, 455, 496, 498, 502, 507, 519, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 554, 612, 629, 632, 726, 775, 777, 779, 780, 781, 782, 789], "get_temperatur": [116, 121, 122, 209, 261, 324, 496, 499, 500, 502, 507, 509, 519, 520, 525, 527, 528, 530, 533, 534, 538, 541, 546, 547, 548, 549, 553, 554, 555, 566, 584, 705, 753, 754, 755, 756, 775, 777, 779, 780, 781, 782, 1048, 1125], "unus": [116, 122, 461, 496, 551, 553, 597, 601, 612, 651, 652, 705, 816, 875, 991, 1005], "cstdint": [116, 122, 696, 724, 725], "uint64_t": [116, 122, 411, 448, 554, 724, 725, 759, 962, 1005], "w1_address": [116, 122], "_w1_address": [116, 122], "overrid": [116, 122, 123, 144, 169, 233, 246, 261, 276, 338, 496, 502, 504, 509, 524, 526, 527, 528, 530, 531, 533, 555, 669, 670, 734, 735, 775, 790, 791, 1033, 1048, 1182], "physic": [116, 122, 175, 178, 213, 220, 301, 302, 323, 327, 468, 673, 822, 874, 943, 962, 966, 996, 997], "samp": [116, 122], "unistd": [116, 122, 175, 458, 555, 587, 895, 942, 958, 960, 961, 962, 964, 967, 968, 969, 970, 971, 974, 976, 979, 993, 996, 1002, 1005, 1009], "0xdeadbe": [116, 122], "correct": [116, 172, 180, 184, 212, 232, 234, 245, 370, 416, 453, 457, 458, 465, 468, 469, 474, 475, 477, 505, 573, 605, 670, 672, 673, 705, 750, 753, 761, 791, 881, 885, 886, 910, 942, 943, 944, 997, 1039, 1047, 1142, 1165], "liskov": [116, 121, 122, 477], "segreg": [116, 121, 122, 144, 477], "invers": [116, 121, 122, 144, 265, 385, 477, 495, 502, 802, 997, 998, 1206], "question2": [117, 125], "set_stat": [121, 137, 143, 338], "nullptr": [121, 535, 536, 554, 565, 569, 695, 705, 706, 753, 754, 755, 767, 769, 771, 786, 787, 979, 1190], "_sensor": [121, 502, 509, 527, 528, 530, 533, 534, 755], "_switch": [121, 509], "_displai": 121, "_low": 121, "_high": 121, "current_temperatur": 121, "obvious": [122, 175, 176, 178, 184, 196, 393, 457, 461, 488, 517, 581, 607, 613, 651, 666, 667, 695, 706, 740, 744, 749, 776, 789, 836, 838, 851, 874, 875, 881, 895, 943, 944, 954, 970, 971, 998, 1010, 1012, 1028, 1049, 1052, 1192], "remain": [122, 173, 174, 184, 193, 206, 253, 261, 307, 558, 559, 571, 600, 648, 654, 685, 691, 696, 758, 766, 820, 951, 999, 1010, 1012, 1112, 1115, 1116, 1119, 1127, 1129, 1145, 1179], "carri": [124, 175, 180, 195, 459, 491, 500, 517, 789, 942, 999, 1012, 1035], "norm": [124, 251, 1150], "meantim": [124, 502, 959], "fresh": [124, 174], "made": [124, 131, 143, 166, 167, 172, 173, 174, 176, 179, 180, 184, 188, 225, 240, 265, 289, 324, 370, 402, 440, 441, 443, 446, 477, 497, 501, 517, 523, 723, 822, 838, 869, 870, 875, 935, 942, 968, 974, 979, 997, 1015, 1040, 1047, 1057, 1094, 1142], "arbitrari": [124, 173, 194, 261, 265, 397, 413, 431, 467, 482, 620, 647, 648, 700, 758, 770, 797, 939, 964, 968, 996, 1036, 1072, 1086, 1115], "sinc": [124, 151, 184, 190, 235, 241, 272, 366, 467, 470, 599, 607, 608, 638, 651, 694, 695, 723, 744, 749, 755, 770, 789, 838, 942, 955, 962, 968, 971, 983, 998, 1005, 1066, 1191], "whichev": 124, "enumer": [124, 188, 194, 196, 206, 212, 217, 218, 222, 224, 230, 231, 233, 254, 258, 263, 269, 283, 287, 304, 307, 326, 336, 348, 351, 412, 459, 479, 696, 799, 834, 944, 1200], "pack": [124, 184, 188, 234, 552, 573, 864, 898, 936, 938], "unpack": [124, 188, 192, 212, 218, 222, 224, 229, 233, 237, 242, 245, 250, 254, 255, 261, 266, 268, 272, 273, 284, 289, 291, 294, 303, 307, 325, 328, 330, 336, 338, 348, 351, 355, 370, 735, 790, 791, 838, 864, 936, 938, 942, 1013, 1020, 1026, 1027, 1066, 1084, 1190], "kib": [124, 188], "222": [124, 206, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 329, 335, 341, 347, 351, 486], "addit": [124, 175, 193, 205, 232, 261, 264, 355, 414, 461, 482, 516, 517, 531, 553, 599, 611, 617, 688, 838, 875, 951, 1055, 1067, 1083, 1085, 1165], "checkout": [124, 151, 165, 176, 188, 202, 811, 838, 839, 1202], "previou": [124, 177, 193, 324, 538, 590, 606, 688, 898, 930, 970, 1037, 1039, 1059, 1061, 1106, 1164], "9bfda12": 124, "mosquitto": [124, 245, 249, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 1131, 1153], "smoothli": 124, "forward": [124, 188, 251, 277, 278, 279, 288, 309, 310, 337, 353, 408, 423, 432, 438, 439, 445, 449, 452, 456, 465, 469, 474, 475, 660, 697, 704, 735, 745, 788, 790, 791, 838, 898, 922, 930, 934, 935, 945, 950, 1190], "diverg": [124, 996], "00aea42": 124, "delet": [124, 200, 212, 242, 261, 276, 286, 307, 338, 365, 464, 495, 498, 537, 554, 563, 567, 579, 587, 602, 605, 664, 667, 672, 695, 705, 706, 707, 735, 740, 752, 753, 754, 755, 771, 781, 790, 791, 816, 846, 875, 1146, 1172, 1189, 1190], "footnot": [124, 176, 178, 179, 180, 183, 184, 189, 196, 202, 205, 208, 292, 295, 496, 523, 567, 614, 616, 617, 630, 660, 679, 807, 809, 870, 877, 892, 942, 943, 944, 965, 968, 1028, 1060, 1063, 1094, 1128, 1143, 1190, 1193], "term": [124, 131, 173, 175, 197, 225, 265, 298, 300, 367, 467, 610, 613, 677, 755, 758, 871, 944, 963, 997, 1009, 1142, 1177], "ss2023": 125, "ws2023": [125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 791], "ece21": [125, 126, 143, 144], "bouncem": [126, 144, 148, 554, 555, 865, 866], "procf": [126, 213, 215, 289, 791, 876, 934, 975, 992, 1194, 1201], "umask": [126, 279, 288, 289, 309, 310, 353, 354, 370, 375, 791, 868, 893, 917, 934, 968, 980], "diff": [126, 229, 248, 341, 597, 599, 1055, 1196], "raspi": [126, 169, 303, 370, 376, 791, 815, 838, 839, 840, 842, 847, 853, 856, 859, 934, 936, 937, 938, 939, 942, 943, 944, 1026, 1027], "spirit": [126, 431], "readm": [126, 153, 192, 298, 300, 942, 943], "modular": [126, 205, 210, 212, 240, 259, 291, 372, 373, 403, 480, 1012, 1039], "plc": 126, "sallok": 126, "constantsensor_nopoli": [126, 144, 543, 549, 595, 791], "randomsensor_nopoli": [126, 144, 543, 595, 791], "labexam": 126, "hysteresis_nopoli": [126, 127, 144, 543, 544, 595, 791], "upload": [126, 179, 898, 1092, 1164], "j": [126, 170, 178, 184, 221, 236, 238, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 307, 313, 325, 329, 341, 417, 420, 437, 461, 468, 517, 610, 699, 710, 758, 848, 864, 1020, 1024, 1040, 1150, 1156], "bz2": [126, 174, 473, 838, 860, 863, 1033], "influenc": [126, 1013, 1190], "felber": 126, "vscode": [126, 203, 376, 390, 920], "folder": [126, 179], "comprehend": [126, 259, 416, 422, 1009], "workspacefold": 126, "suppli": [126, 175, 213, 555, 557, 601, 797, 838, 854, 873, 935, 939, 942, 944, 959, 968, 1098], "cpprefer": [126, 635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 656, 675], "averagingsensor_nopoli": [126, 144, 543, 595, 791], "toolcas": [126, 139, 144, 298, 300, 712], "mocksensor_nopoli": [126, 144, 543, 544, 545, 546, 595, 791], "figur": [126, 159, 165, 170, 178, 179, 194, 249, 1032], "specifi": [126, 173, 190, 261, 273, 307, 411, 479, 488, 541, 544, 549, 552, 601, 681, 695, 710, 734, 745, 838, 898, 955, 968, 972, 998, 1010, 1063, 1078, 1086, 1091, 1108, 1127, 1129, 1158, 1160, 1165], "target_link_librari": [126, 201, 483, 485, 486, 487, 488, 492, 538, 574, 577, 583, 589, 592, 1008, 1013, 1014, 1176, 1179, 1181], "inter": [126, 173, 191, 197, 997, 1194, 1201, 1204, 1206], "likewis": [126, 248, 584, 615, 864, 883, 954, 970, 1020, 1142, 1179], "ledstripedisplay_nopoli": [126, 144, 543, 595, 791], "somewhat": [127, 193, 234, 467, 500], "02131d959eaa": [127, 538, 554, 555, 972], "heat": [127, 281, 494, 501, 545, 554, 791, 944, 1141, 1142], "hwmon2": [127, 347, 942], "temp1_input": [127, 942, 944], "boilingpot": [127, 129], "knob": [127, 1064], "steer": 127, "desir": [127, 178, 242, 248, 258, 261, 412, 416, 427, 549, 599, 601, 607, 689, 836, 969, 971, 1144], "hardcod": [127, 174, 374, 573, 797, 801, 1103], "ledstripedisplai": [127, 137, 139, 142, 143], "unreason": 127, "cluster_fh2021": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 791], "fh2021_boiling_pot": [127, 128, 129, 130, 136, 143, 791], "fh2021_switch_interfac": [127, 128, 129, 130, 135, 136, 137, 143, 791], "fh2021_sensor_interfac": [127, 128, 129, 130, 136, 143, 791], "fh2021_sysfs_gpio_switch": [127, 128, 130, 136, 143, 791], "breadboard": [128, 130, 944, 1194, 1201], "acrobat": [128, 130], "boilingpot_suit": 129, "status_report": 129, "percentage_displai": 129, "fh2021_boiling_pot_displai": [129, 136, 791], "fh2021_display_infrastructur": [129, 135, 136, 791], "infrastructur": [129, 130, 136, 144, 173, 472, 791, 794, 1006], "fh2021_pwm_displai": [129, 135, 136, 139, 791], "pwm": [129, 130, 135, 136, 144, 148, 289, 298, 791, 838, 934, 935, 941, 978, 1194, 1201], "stripe": [130, 135, 139, 544], "reusabl": 131, "compon": [131, 233, 246, 338, 470, 922, 997], "dedic": [131, 173, 174, 205, 210, 259, 289, 292, 295, 463, 479, 806, 876, 877, 942, 943, 944, 978, 980, 1014, 1032, 1043, 1076, 1193], "constrain": [131, 776, 876], "decoupl": [131, 249, 495, 996], "sink": [131, 133, 136, 301, 302, 317, 320, 323, 327, 791], "datalogg": [131, 148, 302, 324], "target_include_directori": [131, 488, 489, 491, 492], "announc": [131, 377, 488, 489, 666, 942, 943], "anyon": [131, 173, 587, 809], "node": [131, 166, 178, 183, 193, 451, 471, 488, 651, 794, 797, 801, 807, 816, 1028, 1153, 1170], "startlog": 131, "uint16_t": [131, 411], "special": [131, 166, 173, 220, 253, 255, 261, 265, 289, 392, 444, 505, 516, 519, 522, 523, 567, 590, 595, 708, 710, 764, 787, 864, 875, 880, 936, 958, 964, 986, 1010, 1029, 1034, 1053, 1055, 1063, 1072, 1074, 1078, 1139, 1144, 1175, 1195, 1196], "unif": [131, 596], "leftov": 131, "gettim": 131, "defer": [131, 173, 477, 836, 858], "sinkfil": 131, "sinkmock": 131, "usabl": [131, 261, 307, 421, 500, 551, 706, 945], "sensorconfig": [131, 144, 328], "sensorvalu": [131, 132, 134, 516, 530], "runtime_error": [131, 521, 522, 533, 535, 536, 537, 555, 769], "logger_suit": 131, "loggerbasictest": 131, "sensor_values_suit": 131, "sensor_config_suit": 131, "duplicate_sensor": 131, "outlook": [131, 144, 148, 877], "prebuilt": [131, 942], "order": [131, 160, 166, 172, 178, 179, 183, 184, 193, 205, 206, 209, 211, 242, 248, 253, 263, 265, 268, 298, 315, 331, 396, 422, 433, 455, 467, 482, 497, 516, 571, 573, 580, 582, 645, 691, 789, 793, 809, 822, 838, 927, 935, 942, 944, 960, 999, 1024, 1040, 1060, 1109, 1119, 1192], "acquisitionloop": [131, 324, 328], "n_iter": 131, "doit": [131, 245, 502], "write_measur": [131, 324], "mockingsink": 131, "receiv": [131, 174, 193, 248, 251, 289, 318, 403, 519, 610, 708, 797, 809, 830, 838, 898, 935, 938, 944, 951, 959, 964, 986, 994, 1009, 1010, 1033, 1036, 1086, 1118, 1133, 1150], "yaml": 131, "ini": [131, 153, 178, 192, 378, 381, 1170], "fh2021_datalogg": [131, 132, 133, 134, 136, 791], "predecessor": [132, 134, 259, 267, 273, 317, 320], "sinklogg": [132, 134], "csvsink": [132, 324], "logfil": [132, 174, 212, 880, 931], "linksoben": 132, "rechtsunten": 132, "addmeasur": 132, "rememb": [132, 178, 179, 194, 201, 211, 232, 422, 455, 505, 631, 632, 666, 669, 706, 707, 755, 834, 838, 880, 895, 898, 917, 942, 951, 953, 1034, 1101, 1111], "csvname": [132, 246, 291, 479], "valuenam": 132, "_config": 132, "sensor_valu": 132, "getmeasur": 132, "rotat": [132, 174, 935, 960], "backup": [132, 179, 213, 480, 867, 869, 951, 1155], "fh2021_datalogger_csv_sink": [132, 136, 791], "boil": [133, 134, 137, 143, 791, 838], "pot": [133, 134, 137, 143, 791], "struct": [134, 176, 200, 234, 235, 251, 352, 438, 443, 449, 450, 451, 452, 455, 456, 459, 461, 463, 465, 469, 474, 475, 497, 502, 519, 554, 555, 599, 600, 605, 607, 609, 610, 630, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 695, 697, 698, 699, 700, 707, 723, 726, 728, 729, 730, 731, 735, 740, 758, 759, 769, 771, 779, 780, 782, 788, 789, 790, 791, 797, 799, 802, 804, 806, 807, 809, 822, 826, 828, 830, 832, 834, 840, 841, 846, 848, 851, 855, 857, 858, 936, 938, 942, 961, 962, 974, 985, 996, 999, 1005, 1006, 1009, 1010, 1191], "sensor_config": 134, "getallmeasur": 134, "localhost": [134, 1148, 1153], "1883": [134, 1153], "port": [134, 169, 170, 175, 180, 185, 245, 279, 288, 309, 310, 324, 353, 356, 388, 791, 871, 877, 925, 934, 945, 950, 954, 972, 1094, 1149, 1153, 1165, 1194, 1201], "transport": [134, 197, 249, 251, 552, 769, 1133, 1153], "sensor1": [134, 283, 502, 775, 777, 779, 781, 782], "sensor2": [134, 502, 775, 777, 779, 781, 782], "api": [66, 134, 173, 180, 197, 220, 234, 261, 381, 385, 791, 794, 801, 809, 816, 820, 832, 934, 975, 987, 995, 998, 1006, 1092, 1148, 1166, 1194, 1195], "burden": [134, 154, 479, 612, 1038, 1171], "handmad": 134, "fedora": [134, 154, 169, 178, 184, 185, 188, 202, 289, 341, 567, 791, 795, 798, 800, 803, 805, 808, 815, 817, 818, 819, 823, 829, 835, 839, 842, 847, 853, 856, 859, 894, 898, 934, 937, 1014, 1015, 1022, 1023, 1024, 1027, 1153, 1177], "mosquitto_new": 134, "mosquitto_connect": 134, "mosquitto_destroi": 134, "prohibit": [134, 607], "wide": [134, 180, 184, 393, 394, 870, 951, 1006, 1012], "iot": [134, 136, 144, 249, 289, 791], "broadcast": [134, 767, 936, 943, 985, 1010, 1207], "flexibl": [134, 281, 488, 494, 508, 515, 529, 543, 595, 641, 791, 981, 996, 1012, 1013, 1014, 1029, 1030, 1081, 1185], "fh2021_datalogger_mqtt_sink": [134, 136, 791], "percentag": [135, 139, 471], "show_percentag": [135, 139], "wire": [135, 935, 945, 1024], "connect": [135, 158, 173, 180, 193, 213, 225, 246, 289, 318, 367, 375, 376, 451, 769, 869, 931, 935, 936, 943, 944, 953, 958, 964, 978, 1146, 1148, 1153, 1165, 1193, 1205, 1207], "shown": [135, 178, 211, 361, 920, 1006, 1150], "src_demo": [135, 139], "fh2021_mqtt_tkinter": [136, 138, 791], "subscrib": [136, 170, 249, 261, 791], "fh2021_libgpiod_switch": [136, 137, 791], "fh2021_boiling_pot_basic_integr": [136, 791], "fh2021_sensor_w1": [136, 791], "logger": [136, 144, 148, 302, 320, 324, 327, 759, 791], "fh2021_boiling_pot_full_integr": [136, 791], "fh2021_datalogger_integr": [136, 791], "mockswitch": [137, 142, 143], "libgpiodswitch": 137, "tkinter": 138, "stackoverflow": [138, 370, 375, 453], "2400262": 138, "simul": [138, 205, 376, 377, 554], "random": [138, 144, 191, 193, 209, 221, 233, 245, 246, 249, 253, 255, 258, 261, 266, 268, 271, 293, 302, 335, 341, 347, 351, 365, 370, 413, 500, 502, 507, 516, 542, 553, 563, 564, 565, 566, 568, 569, 570, 600, 753, 869, 944, 955, 974, 1002, 1036, 1048, 1071, 1144, 1153], "pca9685": [139, 144, 148, 289, 791, 934, 935, 941], "pwmchip0": [139, 935, 943], "pwm0": [139, 935, 943], "danc": [139, 179, 554, 858, 1028], "phase": [139, 221, 521, 535, 937, 1006, 1040], "cumbersom": [139, 175, 177, 212, 608, 631, 699, 743, 794, 980, 1006, 1177], "percentagedisplai": 139, "round": [139, 173, 240, 245, 255, 265, 281, 286, 335, 337, 351, 494, 501, 502, 504, 506, 515, 516, 529, 543, 595, 791, 999, 1206], "hood": [139, 175, 1012], "relationship": [139, 338, 370, 509, 542, 584, 666, 759, 981, 1014, 1028, 1044, 1048, 1143], "pwmdisplai": 139, "pwm_control": 139, "bit": [139, 143, 167, 172, 173, 175, 178, 180, 183, 184, 205, 206, 209, 216, 235, 246, 248, 249, 255, 279, 282, 288, 289, 292, 295, 309, 310, 328, 353, 354, 365, 370, 375, 381, 393, 399, 405, 411, 416, 423, 432, 439, 440, 445, 449, 452, 455, 456, 465, 469, 474, 475, 538, 552, 613, 697, 732, 735, 745, 755, 788, 789, 790, 791, 834, 838, 857, 868, 869, 893, 895, 897, 934, 935, 936, 938, 943, 945, 968, 996, 1013, 1022, 1032, 1072, 1137, 1150, 1185, 1190], "pwm5": 139, "visibl": [139, 143, 188, 214, 234, 300, 356, 403, 405, 407, 431, 433, 464, 465, 469, 474, 475, 539, 688, 791, 809, 942, 944, 1006, 1077, 1106, 1146], "10000000": [139, 175, 248, 419, 982, 1038, 1046], "set_percentag": 139, "duti": [139, 935, 943], "duty_cycl": [139, 935, 943], "unbuff": 139, "automat": [139, 143, 161, 175, 177, 179, 180, 188, 223, 225, 229, 235, 242, 248, 258, 261, 265, 298, 300, 407, 416, 443, 460, 463, 467, 479, 508, 509, 598, 601, 666, 670, 708, 737, 776, 790, 791, 794, 809, 838, 942, 944, 971, 1033, 1086, 1094, 1099], "serv": [142, 177, 179, 428, 1143, 1171, 1205], "ground": [142, 943, 944], "mocksensor": [142, 144], "upstream": [143, 176, 179, 184, 188, 816], "sysfsgpioswitch": 143, "wherea": 143, "gpio20": 143, "voltag": [143, 935, 942], "constructur": 143, "proid": 143, "lifecycl": 143, "avg": [144, 261, 341, 460, 499, 516, 527, 546, 553, 775, 777, 779, 781], "lifetim": [144, 174, 232, 234, 251, 263, 408, 423, 432, 439, 445, 449, 450, 452, 456, 465, 469, 474, 475, 509, 602, 685, 697, 708, 735, 788, 790, 791, 1031], "averagingsensor": [144, 499, 527], "scheme": [144, 261, 307, 324, 327, 611, 1031, 1035], "constantsensor": [144, 499, 502, 507, 519, 520, 528, 540, 547, 553, 563, 564, 565, 566, 568, 569, 705, 753, 754, 755, 756, 1048, 1125], "meet": [144, 178, 180, 205, 455, 882, 1024, 1037], "liskow": [144, 505], "gcc": [144, 174, 175, 201, 221, 223, 242, 248, 258, 261, 363, 390, 392, 416, 433, 437, 455, 458, 459, 461, 471, 472, 480, 482, 581, 629, 632, 764, 838, 839, 875, 895, 960, 961, 962, 968, 969, 970, 971, 980, 983, 1013, 1024, 1026, 1027, 1028, 1029, 1030, 1062, 1179, 1185], "cycl": [144, 235, 270, 477, 479, 723, 754, 768, 790, 791, 934, 935, 943, 975, 989, 995], "todai": [144, 174, 225, 233, 249, 282, 299, 315, 328, 331, 379, 405, 1137, 1192, 1195], "minut": [144, 173, 179, 180, 205, 209, 212, 249, 944, 1137, 1153], "suppos": [144, 188, 209, 265, 355, 519, 816, 838, 855, 877, 935, 983, 1131, 1170], "deploi": [144, 185, 213, 370, 375, 495, 828, 865, 866, 943, 944, 949, 951, 955], "leddisplai": 144, "pwmcontrol": 144, "minor": [144, 180, 184, 242, 248, 258, 261, 291, 797, 804, 869], "tweak": [144, 1170], "standup": 144, "followup": [144, 256, 317, 320, 540, 1126], "bonu": 144, "donat": [144, 936], "relai": 144, "board": [144, 172, 174, 838, 942], "cooker": 144, "gapher": 144, "tape": 144, "coordin": [144, 551, 597, 599, 606, 607, 717, 960], "notic": [144, 172, 173, 175, 188, 242, 248, 258, 261, 463, 482, 483, 540, 787, 878, 982, 984, 1044, 1159], "wikipedia": [144, 190, 251, 467, 610, 944, 955, 999, 1031, 1150], "summer": [145, 149, 369, 370, 376], "stece2022": 148, "winter": 148, "gl\u00fchwein": 148, "trinken": 148, "blob": [148, 173, 289, 300, 390, 573, 838], "deploy": [148, 149, 173, 205, 209, 230, 316, 332, 484, 490, 791, 813, 1137], "findet": [149, 191], "bachelorstudium": 149, "elektronik": [149, 1194, 1201], "semesterwochenstunden": 149, "ect": 149, "lehrveranstaltungsleit": 149, "studierenden": 149, "vorkenntniss": 149, "lehrveranstaltungen": 149, "vorausgesetzt": [149, 1186, 1188, 1189, 1197, 1203, 1204, 1206, 1207], "informatik": [149, 371], "wissen": [149, 190, 388, 1187, 1194], "grundaufgaben": 149, "betriebssystemen": [149, 388, 1196, 1201, 1203], "bescheid": 149, "abstraktionen": 149, "programmierparadigmen": 149, "gesamtnot": 149, "praktischen": 149, "theoretischen": 149, "teil": [149, 181, 191, 200, 208, 1185, 1187], "laborklausuren": 149, "klausur": 149, "besteht": 149, "m\u00f6glichkeit": [149, 187, 190, 208, 1187, 1206, 1207], "hausaufgaben": 149, "sammeln": 149, "diesen": [149, 388, 1204], "hinzugerechnet": 149, "ausfallsicherung": 149, "dienen": [149, 1187], "einzelergebniss": 149, "erfolgt": [149, 1194], "punkten": 149, "gesamtergebniss": 149, "umrechnung": 149, "prozent": 149, "notwendigen": 149, "unterricht": 149, "klausuren": 149, "abgehalten": 149, "endnot": 149, "ergibt": 149, "erreichten": 149, "wobei": [149, 216], "anwendung": [149, 187, 1206], "kommt": [149, 208, 223, 233, 236, 262, 1197, 1206, 1208], "91": [149, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1141, 1142], "81": [149, 183, 192, 194, 206, 216, 221, 223, 229, 232, 234, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1014, 1038, 1141, 1142], "90": [149, 176, 183, 192, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 479, 1141, 1142, 1170], "80": [149, 178, 183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 471, 544, 920, 996, 1026, 1038, 1094, 1141, 1142, 1170], "befriedigend": 149, "gen\u00fcgend": 149, "einzuloggen": 149, "abschlussklausur": 149, "zugelassen": 149, "beschrieben": 149, "negativen": 149, "beurteilung": 149, "sowohl": [149, 1194, 1201], "laborklausur": 149, "theoretisch": 149, "schriftlich": [149, 371], "wiederholt": 149, "kommissionel": 149, "wiederholung": [149, 200, 217, 224, 260, 1200], "immer": [149, 181, 182, 196, 200, 206, 208, 221, 293, 1185, 1189, 1196, 1206], "gesamtpr\u00fcfung": 149, "vergleichbar": [149, 206], "antritt": 149, "bestanden": 149, "einmalig": 149, "positiv": 149, "absolvierten": 149, "innerhalb": [149, 998, 1207], "wochen": 149, "bekanntgab": 149, "pr\u00fcfungsergebniss": 149, "melden": 149, "teilleistungen": 149, "erbringen": 149, "legt": 149, "fest": [149, 182], "welch": [149, 206, 246], "wiederholen": [149, 196, 388], "anmeldung": [149, 388], "erforderlich": 149, "gesamtzahl": 149, "pr\u00fcfungsversuch": 149, "angerechnet": 149, "jeder": [149, 181, 1184, 1187, 1188, 1207], "wiederholungspr\u00fcfung": 149, "z\u00e4hlt": 149, "zumindest": [149, 181, 206, 1187], "besuchen": 149, "labor\u00fcbungen": [149, 371], "gilt": [149, 182, 196, 237, 388], "anwesenheitspflicht": 149, "begr\u00fcndeten": 149, "einzelf\u00e4llen": 149, "krankheit": 149, "m\u00f6glich": [149, 1189, 1194], "solchen": [149, 206, 216], "nachzuholen": 149, "ersatzleistungen": 149, "bjarn": [149, 596, 776], "stroustrup": [149, 596, 776], "4th": 149, "edit": [149, 176, 178, 179, 188, 220, 225, 261, 289, 354, 391, 551, 811, 838, 943, 1092, 1163, 1203], "brian": [149, 371, 372, 391, 1187], "kernighan": [149, 391, 1187, 1188], "denni": [149, 391, 431, 630, 1187], "ritchi": [149, 391, 431, 630, 1187, 1188], "bl\u00f6cken": 149, "crossdevelop": 149, "tats\u00e4chlich": 149, "vorgetragen": [149, 208], "stoff": [149, 236], "tagesaktuel": 149, "verf\u00fcgung": [149, 187, 206, 1189, 1206], "gestellt": [149, 196, 206, 388, 1189], "stece": 150, "dir": [151, 206, 225, 233, 246, 255, 258, 265, 283, 286, 306, 307, 325, 347, 351, 355, 363, 444, 479, 480, 486, 491, 883, 1013, 1014, 1026, 1049, 1165, 1172], "wo": [151, 181, 191, 192, 200, 206, 208, 388, 1187, 1188, 1206], "jf": [151, 166, 180, 217, 218, 276, 293, 370, 375, 389, 519, 533, 813, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1195, 1200], "aon": 151, "biz": 151, "svn": [151, 169, 235, 388, 389], "recommend": [66, 151, 184, 205, 213, 225, 258, 467, 620, 651, 838, 898, 943, 1092, 1146, 1154], "lokalen": 151, "fetch": [151, 174, 188, 838, 981, 1009], "myremot": 151, "orig": [151, 176, 223], "stia": 151, "improv": [152, 467, 470, 482, 738, 753, 789, 1031, 1089], "stack": [152, 194, 195, 196, 203, 217, 218, 236, 242, 245, 248, 258, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 461, 467, 517, 601, 632, 752, 871, 875, 943, 968, 980, 1200], "hang": [152, 216, 597, 841, 864], "seo": [152, 850], "playground": [152, 154], "i2": [152, 158, 163, 268, 303, 791], "kontron": [152, 165, 791], "smarc": [152, 165, 791], "proper": [153, 173, 201, 453, 813, 838, 970, 1055], "manifest": [153, 1024, 1173], "cfg": [153, 165, 341], "author_email": 153, "classifi": [153, 1092, 1139], "tox": 153, "travi": 153, "yml": 153, "upgrad": [153, 161, 162, 192, 791, 1165, 1172], "zip": [153, 165, 169, 233, 253, 259, 273, 286, 336, 341, 898, 904, 920], "zipfil": [153, 233], "99": [153, 183, 192, 206, 216, 223, 229, 232, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 471, 999, 1075, 1111, 1141], "999": [153, 245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341], "whl": [153, 169, 1092, 1165], "uninstal": [153, 485, 1165, 1170], "pypa": 153, "sampleproject": 153, "gnome3": [154, 873], "fedoraproject": [154, 176, 811], "workstat": [154, 838], "redhat": [154, 188, 310, 341, 473], "thirti": 154, "flatpak": [154, 245, 261, 268, 271, 286, 293, 303, 307, 310, 329, 335, 341, 347, 929], "flathub": [154, 203], "x86_64": [154, 169, 176, 178, 225, 232, 341, 367, 390, 416, 554, 615, 811, 816, 1015, 1024], "stabl": [154, 163, 180, 184, 477, 816, 838, 877, 996, 1028, 1030, 1092, 1166], "gnome": [154, 161, 173, 178, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 473, 838, 873, 929, 997], "ipc": [154, 168, 169, 170, 173, 387, 389, 789, 791, 934, 975, 1003, 1205], "fallback": [154, 1035, 1055], "x11": [154, 161, 341], "wayland": [154, 161, 178], "dri": 154, "op": [154, 901, 1087], "kb": [154, 169, 175, 1172], "369": [154, 248, 293, 307, 335, 341], "mb": [154, 175, 876], "230": [154, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "375": [154, 248, 255, 265, 293, 307, 325, 335, 341, 351, 466], "diagram": [154, 251, 499, 517, 519, 851, 935, 942, 944], "latest": [66, 154, 184, 794, 809, 815, 1165], "first_model": 154, "unavail": [154, 765], "cairo": [154, 169], "gobject": [154, 169], "introspect": [65, 154, 169, 996], "regogn": 154, "cental": 154, "phycial": 154, "gaphor_model": 154, "fh_source_sink": 154, "sourceandsink": 154, "stuck": [154, 183], "assum": [154, 175, 261, 265, 307, 461, 608, 769, 816, 898, 942, 944, 955, 1027, 1097, 1172], "lib64": [154, 169, 201, 206, 232, 242, 248, 258, 261, 265, 341, 473, 483, 485, 490, 1012, 1015, 1029, 1036, 1158, 1159, 1165, 1179], "pathlib": [154, 342, 350, 352, 1170], "682": [154, 248, 920], "relative_to": 154, "rais": [154, 195, 196, 210, 212, 214, 232, 233, 242, 246, 248, 249, 253, 255, 258, 259, 261, 265, 273, 274, 307, 324, 355, 381, 1033, 1040, 1046, 1056, 1082, 1084, 1158, 1159], "valueerror": [154, 206, 216, 232, 238, 245, 253, 255, 258, 261, 265, 268, 271, 274, 286, 293, 307, 325, 329, 335, 341, 347, 351, 1035, 1082], "subpath": 154, "occur": [154, 203, 265, 397, 412, 417, 418, 464, 488, 571, 765, 836, 898, 927, 997, 1081, 1082, 1086, 1195], "traceback": [154, 169, 195, 242, 248, 258, 261, 271, 291, 293, 307, 329, 1033, 1034, 1035, 1040, 1048, 1049, 1055, 1056, 1077, 1078, 1082, 1084, 1087, 1088, 1150, 1158, 1159, 1171], "err": [154, 173, 212, 232, 297, 338, 554, 651, 695, 697, 735, 743, 755, 788, 790, 791, 802, 832, 834, 869, 936, 938, 942, 1055, 1159], "niho62fg": 154, "tracker": [154, 378, 379], "thank": [154, 178, 259, 286, 709, 745, 820, 980, 1142], "steig": [155, 181], "normalweg": 155, "w\u00e4r": 155, "umst\u00e4nden": [155, 1185, 1189, 1204], "renat": 155, "beschreibung": [155, 217, 219, 227, 230, 233, 234, 236, 252, 264, 926], "bergfex": 155, "reden": 155, "sie": [155, 181, 187, 192, 196, 253, 258, 325, 365, 371, 388, 860, 925, 1184, 1186, 1187, 1188, 1194, 1204, 1206, 1207, 1208], "tagen": [155, 1194], "wir": [155, 191, 196, 200, 206, 208, 216, 217, 222, 236, 255, 261, 268, 321, 388, 656, 1185, 1200, 1201], "w\u00fcrden": 155, "denk": [155, 181, 237, 1204], "beiden": [155, 192, 206, 253, 261, 268], "h\u00fctten": [155, 182], "schlafen": 155, "gaphor": 156, "hochk\u00f6nig": 156, "buildenviron": 157, "resolve_refer": 157, "builder": [157, 245, 1094], "get_and_resolve_doctre": 157, "apply_post_transform": 157, "addnod": 157, "docstr": [157, 169, 229, 232, 242, 248, 254, 266, 269, 272, 294, 326, 348, 370, 1064], "doctre": 157, "devicetre": [158, 943], "signal": [158, 169, 170, 198, 300, 388, 471, 769, 791, 809, 830, 875, 934, 935, 943, 975, 980, 988, 996, 997, 1002, 1006, 1196, 1203, 1204, 1207], "audio_mck": 158, "i2s0_ck": 158, "i2s0_lrck": 158, "i2s0_sdout": 158, "alsa": [158, 176, 341], "tlv320dac3203irg": 158, "tlv320dac3203": 158, "drive": [158, 291, 457, 545, 943, 964, 1144], "suggest": [158, 172, 173, 175, 177, 179, 180, 188, 197, 205, 212, 213, 214, 215, 278, 280, 298, 300, 431, 1060, 1088, 1170], "tlv320aic32x4": 158, "compat": [158, 178, 194, 297, 606, 696, 712, 789, 794, 813, 1015, 1061, 1084, 1150, 1165, 1166], "tlv320aic31xxsw": 158, "tlv320aic31xx": 158, "cdimag": 159, "amd64": [159, 225, 367, 411], "iso": [159, 233, 251, 252, 268, 271, 291, 313, 325, 329, 391, 479, 596, 612, 862], "netinst": 159, "img": [65, 159, 194, 196, 351, 466, 838, 942], "qcow2": 159, "virtualdebian": 159, "30g": [159, 180], "kvm": [159, 176], "hda": 159, "cdrom": 159, "2048": [159, 183, 248], "nic": 159, "sic": [159, 184], "deliveri": [160, 164, 173, 1008, 1011], "outcom": [66, 161, 209, 214, 300, 838, 897, 898, 1020, 1093], "dirti": [161, 162, 175, 189, 437, 502, 791], "forget": [161, 166, 173, 174, 175, 249, 402, 405, 450, 479, 1146, 1152, 1171, 1190], "graphic": [161, 472, 873, 874, 943], "plug": [161, 174, 176, 501], "monitor": [161, 176, 190], "4k": [161, 175, 996, 1005], "dual": [161, 163], "applianc": [161, 175, 473], "benchmark": 161, "glxgear": 161, "su": [161, 1026], "pect": 161, "cluster_project_xxx": [162, 791], "project_xxx_debian_kernel_packag": [162, 791], "finish": [162, 205, 224, 762, 791, 848, 1047], "project_xxx_dirty_upgrad": [162, 791], "project_xxx_audio_chip": [162, 791], "chip": [162, 191, 245, 791, 935, 939, 942, 960, 962, 996, 1094], "bringup": [162, 163, 791], "project_xxx_hardware_bringup": [162, 791], "project_xxx_yocto_kernel": [162, 791], "bsp": [162, 791], "project_xxx_debian_config": [162, 791], "project_xxx_wait_hardwar": [162, 791], "shot": [163, 180, 431, 695, 769, 789], "dac": 163, "massacr": [163, 192, 251, 370, 431, 437, 463, 487, 695, 1043], "distro": [163, 485, 1067, 1179], "bootload": [163, 172, 183, 473, 874, 942, 944], "oldconfig": [163, 174, 811, 818, 838, 839], "qemu": [163, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "grub": [163, 183, 341], "yoctoproject": 165, "v5": [165, 176], "bsp_smarc": 165, "sxal4_smarc": 165, "sxal_r1": 165, "0_combin": 165, "sxal4_5": 165, "sxal4": 165, "inc": [165, 176, 297, 454, 491, 492, 764, 983, 1046], "filesextrapaths_prepend": 165, "thisdir": 165, "linux_vers": 165, "linux_version_extens": 165, "linux_kernel_typ": 165, "kbranch": 165, "kmeta": 165, "lic_files_chksum": 165, "md5": 165, "bbea815ee2795b2f4230826c0c6b8814": 165, "srcrev_machine_pn": 165, "3604bc07c035939266d78d65084c6cd54ffc6d56": 165, "srcrev_meta_pn": 165, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 165, "src_uri": 165, "bareclon": 165, "cach": [165, 169, 174, 300, 303, 341, 453, 467, 472, 473, 631, 648, 776, 920, 997, 1165, 1172, 1188], "destsuffix": 165, "scc": 165, "pv": 165, "srcpv": 165, "include_patch": 165, "patch": [165, 184, 185, 998, 1026, 1185], "compatible_machin": 165, "therebi": [166, 205, 703, 929, 1009, 1055, 1094], "simplifi": 166, "fine": [166, 175, 180, 209, 482, 483, 598, 710, 712, 818, 848, 955, 959, 1027, 1044, 1056, 1065, 1071, 1086, 1150], "grain": [166, 180, 479, 482, 848, 1056, 1071], "surround": [166, 696, 737, 749], "cut": [166, 194, 212, 225, 265, 279, 288, 309, 310, 353, 354, 416, 451, 791, 828, 868, 882, 928, 931, 934, 944], "linewis": 166, "wherev": [166, 395], "obs studio": 167, "video edit": 167, "screen record": 167, "These": [167, 175, 177, 178, 242, 248, 258, 261, 482, 495, 811, 838, 942, 1014], "offici": [167, 209, 210, 213, 214, 215, 220, 595, 1026, 1175], "jonathan": [167, 371, 372, 776, 1185], "thoma": 167, "himself": [167, 944], "paus": [167, 175, 996, 1009], "meanwhil": 167, "freez": [167, 1165, 1173], "photo": 167, "length": [167, 229, 232, 242, 248, 258, 261, 290, 297, 307, 329, 335, 347, 479, 551, 602, 614, 675, 809, 822, 834, 936, 938, 964, 974, 1006, 1142, 1150, 1154, 1161], "grab": [167, 935, 943], "neil": 168, "patel": 168, "insight": [168, 172, 482, 1024, 1164], "consol": [168, 225, 873, 876, 931, 1116, 1196], "crawlabl": 168, "dn": [168, 177, 180, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 1207], "domain": [168, 169, 179, 180, 185, 463, 477, 489, 997, 1136, 1139, 1205, 1207], "queue": [168, 169, 174, 183, 184, 191, 197, 217, 218, 220, 249, 277, 278, 280, 289, 301, 302, 323, 324, 327, 337, 519, 768, 790, 791, 832, 840, 858, 871, 875, 934, 975, 985, 989, 1200, 1204, 1205, 1206], "pydbu": 169, "openh": [169, 170, 191, 232], "blog": [66, 169, 173, 176, 183, 188, 757], "recent": [169, 172, 175, 180, 195, 203, 242, 248, 258, 261, 271, 291, 293, 307, 329, 391, 838, 917, 1033, 1034, 1035, 1040, 1048, 1049, 1055, 1056, 1077, 1078, 1082, 1084, 1087, 1088, 1150, 1158, 1159, 1171], "oh_test": 169, "easysuit": 169, "oh_dbus_easysuit": 169, "easysuite_error": 169, "error_suit": 169, "dbusheatingerror": 169, "modulenotfounderror": [169, 286, 291, 1035], "research": [169, 172, 173, 286, 1143], "pygobject": 169, "714": [169, 248], "venv": [169, 206, 232, 242, 248, 258, 259, 261, 273, 303, 341, 377, 378, 920, 1091, 1124, 1137, 1152, 1164, 1170, 1172, 1173], "standalon": [169, 455, 708, 1009, 1177], "ss_9wmug": 169, "__env_pip__": 169, "ignor": [169, 190, 202, 261, 307, 381, 417, 437, 467, 489, 497, 629, 632, 695, 710, 723, 745, 796, 880, 943, 968, 1010, 1033, 1165], "9lrqmi4l": 169, "overlai": [169, 838, 942, 943], "locat": [169, 170, 174, 179, 184, 205, 242, 248, 258, 261, 265, 315, 331, 370, 388, 440, 453, 461, 467, 495, 517, 610, 630, 706, 754, 813, 838, 942, 943, 944, 964, 982, 1006, 1013, 1033, 1141, 1158, 1192], "pycairo": 169, "cwd": [169, 341, 552, 789, 864, 875, 901, 920, 922, 926, 1014], "821": [169, 248], "py2": 169, "344": [169, 248, 261, 293, 307, 325, 335, 341, 347], "517": [169, 248, 293, 341], "tmpabab356k_in_process": 169, "build_wheel": 169, "tmpt1yod7mc": 169, "o4u45fjc": 169, "pycairo_33865a19ad6b4a719885f07926efe16d": 169, "bdist_wheel": [169, 1092], "build_pi": 169, "pyi": 169, "build_ext": 169, "pkg": 169, "perhap": [169, 265, 807, 1145], "pkg_config_path": 169, "cp39": 169, "linux_x86_64": 169, "_vendor": 169, "pep517": 169, "in_process": 169, "_in_process": 169, "tmpf2wjv23h": 169, "4rtfumdz": 169, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 169, "pygtkcompat": 169, "generictreemodel": 169, "_signalhelp": 169, "_propertyhelp": 169, "_ossighelp": 169, "_option": 169, "_gtktemplat": 169, "_error": [169, 526], "_constant": 169, "keysym": 169, "pango": 169, "gio": 169, "gdkpixbuf": 169, "gdk": 169, "glib": 169, "gimarshallingtest": 169, "tmp56g_ixbz": 169, "bvay4iv4": 169, "pygobject_6777f13e15934fb2b13139399b143557": 169, "todo": [169, 214, 249, 277, 278, 383, 384, 553, 695, 776, 792], "summari": [169, 210, 502, 605, 754, 1170], "c1": [169, 183, 500, 614, 699], "misc": [169, 170, 192, 193, 352, 573, 807, 851, 1189], "w3school": 169, "howto": [169, 170, 809], "howto_css_image_transpar": 169, "asp": 169, "titelseit": 169, "mitt": 169, "howto_js_read_mor": 169, "subdir": [169, 351, 789, 1033], "gegen": [169, 1185], "clutter": [169, 202], "404": [169, 179, 248, 255, 293, 307, 325, 341, 351], "prio": [169, 211, 998, 999, 1005], "beagleboard": [169, 174, 185], "repair": [169, 185, 245], "nand": [169, 185], "40w": [169, 185], "suck": [169, 170, 185], "disk": [169, 172, 173, 176, 180, 185, 466, 874, 875, 895, 924, 959, 960, 1029, 1086, 1185], "contact": [169, 1192], "ssl": [169, 180, 341, 1165], "certif": [169, 180, 183, 230, 1165], "070": [169, 695], "fortgeschritten": [169, 389, 1187], "700": [169, 248, 648, 756, 951], "lf": [169, 232, 533, 1086], "descr": [169, 253, 329, 347], "050": [169, 695, 1008, 1009], "080": [169, 675, 695], "020": [169, 248, 289, 675, 695, 1004, 1005, 1008, 1009], "060": [169, 170, 209, 378, 695], "_hidden": 169, "010": [169, 335, 695, 897, 1001, 1002, 1004, 1005, 1008, 1009], "190": [169, 206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "propos": [169, 463, 541], "030": [169, 695, 705, 755, 1004, 1005, 1008, 1009], "040": [169, 335, 695, 1004, 1005, 1008, 1009], "central": [170, 202, 235, 324, 327, 391, 435, 495, 789, 1029, 1074, 1086, 1193], "rstjinja": 170, "105": [170, 192, 206, 216, 221, 223, 229, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1000], "110": [170, 177, 192, 206, 216, 223, 229, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 535, 536, 695, 897, 1004, 1005], "cxx_class_templ": [170, 595, 791], "cxx_dynamic_memori": [170, 595, 791], "cxx_global_initi": [170, 595, 791], "cxx_inheritance_virtu": [170, 595, 791], "cxx_ownership_raii": [170, 595, 791], "cxx_stl_container_intro": [170, 595, 791], "cxx_templates_vs_interfac": [170, 595, 791], "maj": [170, 795], "min": [170, 286, 773, 795, 1142], "cdev": [170, 794, 795, 797, 801, 802, 807], "fop": [170, 795, 802], "devtmpf": [170, 794, 795, 840], "dynam": [170, 200, 208, 209, 242, 248, 258, 259, 261, 304, 388, 452, 456, 465, 469, 474, 475, 485, 516, 553, 584, 593, 595, 602, 667, 669, 672, 673, 692, 697, 706, 735, 759, 775, 776, 777, 788, 790, 791, 795, 800, 805, 808, 810, 815, 819, 829, 833, 835, 840, 842, 847, 853, 856, 859, 864, 875, 934, 983, 985, 994, 1012, 1013, 1052, 1066, 1087, 1137, 1191, 1195], "sysprog_ev": 170, "sysprog_ipc": 170, "sysprog_sign": 170, "unittest_gtest_bas": [170, 791, 1175], "unittest_gtest_fixtur": [170, 791, 1175], "brows": [170, 172, 188, 877, 943], "rtd": 170, "blender": 170, "corda": 170, "figclass": 170, "homebrain": [170, 291, 303, 920, 921], "literalinclud": 170, "within": [170, 175, 251, 261, 307, 388, 544, 545, 549, 554, 599, 670, 733, 802, 935, 1047, 1064, 1076, 1161], "045": [170, 289, 335], "tex": 170, "055": 170, "056": 170, "910": [170, 248, 920], "virtmem": 170, "fart": 170, "ungern": 170, "lost": [170, 180, 245, 251, 464, 573, 695, 754, 951, 985, 988, 1005, 1047, 1170, 1171, 1177], "he": [170, 174, 188, 196, 205, 209, 212, 225, 230, 233, 235, 256, 259, 282, 301, 302, 306, 323, 328, 708, 710, 745, 748, 953, 986, 999, 1010, 1052, 1080, 1137, 1163], "friend": [172, 173, 220, 241, 277, 278, 280, 289, 300, 337, 338, 473, 536, 613, 768, 769, 790, 791, 809, 830, 935, 1179], "alia": [172, 177, 225, 251, 449, 452, 456, 465, 469, 474, 475, 483, 697, 735, 788, 790, 791, 898, 899, 1026], "rm": [172, 174, 178, 179, 213, 215, 370, 375, 945, 955, 1172], "rf": [172, 174, 898, 908, 1172], "creativ": [172, 250], "variat": [172, 757, 843, 880], "thereof": [172, 289, 297, 500, 617, 1052], "happili": [172, 173, 251, 463, 612], "stage3": 172, "decad": [172, 180, 197, 838, 942, 944, 955, 1034, 1193], "busybox": [172, 173], "initramf": [172, 863], "resid": [172, 175], "flash": [172, 175, 180, 473, 876, 935, 996], "eras": [172, 532, 590, 651, 756, 785, 895], "hit": [172, 174, 175, 194, 197, 235, 789, 898, 927, 930, 1165], "sole": 172, "liter": [172, 195, 211, 216, 223, 233, 241, 242, 246, 253, 258, 261, 265, 268, 277, 278, 286, 293, 307, 325, 329, 335, 337, 341, 347, 362, 366, 370, 397, 405, 412, 461, 516, 531, 551, 695, 708, 838, 1010, 1067, 1080, 1084], "told": [172, 175, 483, 522, 935], "reboot": [172, 174, 191, 838, 899, 942, 943, 944], "fatal": [172, 200, 481, 491, 838, 1178], "saw": [172, 175, 205, 234, 381, 418, 599, 968, 970], "115200": 172, "8n1": 172, "remaind": [172, 173, 176, 178, 201, 205, 289, 816, 838, 935, 943, 1014], "recov": [172, 192], "fauxpa": 172, "explan": [172, 175, 201, 205, 212, 235, 266, 326, 370, 471, 492, 573, 773, 838, 869, 935, 943, 970, 1000, 1005, 1140, 1143, 1172], "annot": [172, 233, 282, 322, 472, 596, 1137], "beagl": 172, "omap": 172, "rom": 172, "stage": [172, 188, 234, 1144], "processor": [172, 173, 232, 233, 246, 411, 455, 648, 759, 838, 843, 980, 997, 1012], "sram": 172, "dram": 172, "latter": [172, 175, 996, 1036, 1076, 1144], "abil": [172, 695], "wrote": [172, 175, 378, 1190], "ones": [172, 188, 195, 197, 261, 299, 307, 399, 467, 943, 944, 1069, 1154], "revis": [172, 176, 179, 276, 596, 694, 1190], "slightli": [172, 184, 205, 234, 251, 252, 573, 1064], "season": 172, "c4": [172, 183], "valuabl": [172, 471, 865, 866, 1028, 1030, 1036], "c3": [172, 176, 183], "angstrom": 172, "mlo": 172, "ift": 172, "fdisk": [172, 1185], "obvoiusli": 172, "fat32": [172, 838], "fat16": 172, "partit": [172, 173, 174, 261, 307, 838], "mount": [172, 174, 289, 376, 794, 838, 869, 978, 1005, 1006, 1015, 1024, 1026], "sector": [172, 245, 1094], "intend": [172, 178, 179, 180, 190, 225, 242, 248, 258, 261, 482, 811, 943, 970, 971, 1092], "slot": [172, 974, 1055], "partli": [172, 174, 459], "meaning": [172, 180, 820], "scr": 172, "omap3": 172, "mmc1": 172, "arch": [172, 176, 818, 838, 839, 942], "mach": [172, 234, 239, 255], "omap2": 172, "omap3beagl": 172, "Near": 172, "offset": [172, 789, 809, 967, 1029], "128k": 172, "0x80000": 172, "byte": [172, 175, 188, 190, 192, 242, 248, 258, 261, 268, 271, 286, 307, 313, 329, 335, 341, 347, 355, 370, 393, 401, 411, 412, 443, 446, 455, 458, 464, 468, 502, 597, 602, 605, 610, 617, 630, 754, 789, 852, 869, 875, 898, 929, 936, 942, 959, 960, 961, 964, 966, 968, 969, 970, 971, 994, 997, 1002, 1005, 1009, 1061, 1067, 1072, 1086, 1150], "reli": [172, 205, 744, 848, 1067], "ecc": [172, 176], "nandecc": 172, "hw": 172, "80000": 172, "0x0": [172, 942], "0x60000": 172, "unlik": [172, 225, 276, 759, 766, 935, 1075, 1155, 1195], "intermedi": [172, 193, 500, 1012, 1061], "nevertheless": [172, 173, 180, 292, 295, 838], "0x20000": 172, "fatload": 172, "80200000": 172, "20392": 172, "131072": [172, 796], "40000": 172, "0x40000": 172, "60000": 172, "incarn": [172, 180, 437, 743], "choic": [172, 173, 174, 197, 233, 246, 265, 467, 477, 487, 552, 600, 669, 754, 942, 996, 1024, 1153], "finger": [172, 183, 467, 877, 935], "sw": [172, 550], "0x1e0000": 172, "1e0000": 172, "0x240000": 172, "275928": 172, "1966080": 172, "prompt": [172, 180, 183, 193, 225, 236, 264, 273, 870, 898, 900, 951, 1061, 1062, 1099, 1103, 1116, 1122, 1172], "280000": 172, "400000": [172, 943, 1142], "month": [173, 235, 245, 293, 297, 412], "met": [173, 459, 944], "microcontrol": [173, 428, 935, 943, 996], "clue": 173, "minim": [173, 175, 184, 193, 461, 467, 620, 920, 1024, 1035], "vxwork": 173, "ce": [173, 183, 1026], "quit": [173, 175, 178, 300, 438, 453, 455, 673, 688, 839, 898, 899, 930, 935, 943, 986, 1009, 1024], "presenc": [173, 175, 489, 1195], "probabl": [173, 179, 205, 265, 295, 362, 488, 493, 598, 703, 838, 850, 898, 944, 996, 1072, 1086, 1150, 1153], "sooner": [173, 188, 463, 841], "chose": [173, 184, 251, 689, 922, 955, 1024], "opinion": [173, 184, 205, 259, 789, 877, 1044], "unless": [173, 255, 261, 265, 307, 667, 700, 864, 920, 981, 1067, 1086, 1158], "hire": 173, "cheap": [173, 175, 480, 610, 703, 708, 744, 745, 843, 1190], "misl": 173, "posix": [173, 175, 198, 761, 768, 770, 790, 791, 875, 934, 964, 975, 981, 985, 987, 995, 1003, 1086, 1204, 1205], "tell": [173, 174, 175, 178, 179, 180, 188, 202, 249, 460, 631, 864, 944, 1012], "pitfal": [173, 257, 277, 278, 280, 337, 338, 370, 631, 710, 735, 736, 737, 755, 790, 791, 935, 1190], "seen": [173, 175, 180, 193, 206, 234, 403, 422, 460, 495, 505, 809, 834, 863, 983, 1144, 1148, 1182], "didn": [173, 174, 175, 184, 205, 209, 225, 235, 259, 328, 838, 917, 969, 1086, 1088, 1137, 1141], "rtoss": 173, "commonli": [173, 242, 265, 292, 295, 509, 770, 789, 824, 858, 900, 964, 1012, 1162], "tear": [173, 278, 502, 551, 552, 553, 554, 615, 754, 807, 1012, 1177], "notif": [173, 178, 197, 767, 939, 1010], "dread": 173, "segment": [173, 175, 435, 544, 610, 733, 753, 996, 1006], "fault": [173, 175, 383, 384, 435, 610, 753, 996], "arriv": [173, 830, 855, 994, 1009], "handler": [173, 242, 248, 258, 261, 300, 307, 320, 471, 818, 820, 848, 980, 996, 1008, 1011], "pai": [173, 297, 466, 489, 869], "attent": [173, 229, 245, 253, 401, 422, 424, 453, 472, 482, 632, 637, 706, 737, 740, 830, 998, 1033, 1160, 1182], "safe": [173, 242, 248, 249, 258, 261, 271, 463, 703, 745, 747, 755, 769, 951, 956, 980, 983, 988, 1011], "pthread_": 173, "trick": [173, 230, 240, 243, 246, 270, 282, 306, 312, 438, 1137], "sigwait": [173, 1009], "sigwaitinfo": 173, "sigtimedwait": 173, "caught": [173, 242, 248, 258, 261, 470, 620], "synchron": [173, 245, 251, 261, 268, 271, 286, 293, 301, 302, 303, 307, 323, 324, 327, 329, 335, 341, 347, 762, 768, 790, 791, 929, 934, 959, 975, 981, 982, 989, 995, 996, 1006, 1008, 1011, 1195], "signalfd": [173, 964, 1002, 1204, 1205], "Its": [173, 175, 178, 551, 927, 997], "emb": 173, "among": [173, 197, 205, 242, 248, 258, 261, 460, 754, 883, 942, 964, 970, 994, 1010, 1060, 1145, 1146, 1170, 1193], "epol": [173, 978, 1002, 1006, 1205, 1207], "naiv": [173, 193, 248, 251, 315, 331, 455, 488, 497, 589, 591, 605, 672, 753, 787, 846, 980, 1000, 1011, 1041, 1042, 1144, 1149, 1182, 1192], "intra": 173, "primit": [173, 217, 218, 298, 1042, 1190, 1200], "oss": 173, "synchronis": [173, 980, 1206], "pthread_mutex_init": [173, 767, 983], "critical_sect": 173, "closest": [173, 703], "pendant": [173, 590, 797], "expir": [173, 848, 962, 994, 996, 1010], "sometim": [173, 188, 265, 427, 443, 467, 604, 694, 869, 876, 969, 981, 1026, 1032, 1063, 1170], "setitim": 173, "timer_cr": [173, 996], "drawback": [173, 437, 454, 459, 464, 508, 631, 951], "unfortun": [173, 174, 197, 234, 522, 935, 1155], "straightforward": [173, 252, 717, 755, 806, 1038, 1055, 1073, 1142], "nanosleep": [173, 769, 996], "timerfd_cr": [173, 962, 964, 1204, 1205], "conjunct": 173, "emul": [173, 278, 280, 298, 455, 464, 470], "stupid": [173, 175, 232, 248, 251, 253, 412, 437, 443, 461, 467, 477, 703, 758, 855, 917, 959, 1040, 1086], "screw": [173, 657], "otherwis": [173, 174, 259, 261, 265, 302, 307, 335, 351, 361, 416, 427, 453, 463, 613, 651, 708, 737, 744, 759, 765, 809, 822, 830, 838, 846, 865, 866, 951, 980, 985, 991, 1006, 1035, 1064, 1067, 1084, 1086, 1106, 1117, 1159, 1182], "millisecond": [173, 242, 248, 258, 261, 756, 770, 846, 943], "etern": 173, "nowadai": [173, 175, 177, 178, 234, 301, 302, 323, 393, 411, 813, 848, 873, 876, 964, 1010, 1150], "moder": [173, 180, 240], "tri": [173, 174, 175, 184, 188, 194, 205, 253, 351, 381, 552, 682, 765, 789, 935, 944, 997, 1190], "achiev": [173, 232, 265, 673, 994, 1047], "albeit": [173, 517, 743, 991, 1072, 1190], "lose": [173, 224, 235, 255, 258, 261, 271, 335, 341, 347, 1071], "wealth": 173, "socket": [173, 191, 212, 282, 789, 791, 871, 874, 934, 959, 963, 964, 975, 1006, 1010, 1165, 1204, 1205, 1207], "uart": [173, 459, 871], "previous": [173, 242, 248, 258, 261, 265, 1010, 1190], "regardless": [173, 438, 943], "surpris": [173, 175, 289, 461, 666, 1031, 1055], "alon": [173, 174, 175, 188, 298, 300, 467, 471, 712, 1076, 1144, 1195], "advantag": [173, 459, 610], "regularli": [173, 464], "buffer": [173, 261, 286, 301, 302, 307, 323, 327, 399, 528, 533, 708, 854, 882, 956, 959, 960, 961, 962, 970, 1009, 1086], "ttys0": 173, "stream": [173, 178, 180, 220, 246, 261, 286, 596, 613, 882, 936, 994, 1040, 1162, 1207], "eventfd": [173, 964, 1002, 1204, 1205], "complic": [173, 174, 183, 212, 255, 265, 409, 428, 467, 492, 623, 706, 712, 732, 797, 834, 936, 944, 1009, 1012, 1040, 1153, 1192, 1195], "unregist": [173, 504], "callback": [173, 209, 242, 248, 258, 261, 379, 723, 848, 857, 1153], "comfort": [173, 225, 373, 747, 942, 1162], "excit": 173, "hundr": [173, 175, 180, 283, 286, 964], "panel": 173, "deal": [173, 249, 461, 607, 838, 944, 1065, 1139, 1150, 1190, 1195], "touch": [173, 179, 205, 242, 248, 258, 261, 479, 883, 892, 897, 942, 965, 971, 1195], "stai": [173, 197, 209, 240, 1009], "harder": [173, 759, 945], "buggi": [173, 605, 733, 745, 996], "examin": [173, 175, 463, 613, 754, 781, 898, 991], "debugg": [173, 242, 248, 258, 259, 261, 500, 1188, 1203], "gdb": [173, 225, 388, 1188], "spidev": 173, "bluntli": 173, "whether": [173, 193, 261, 265, 286, 297, 307, 402, 466, 557, 602, 635, 789, 834, 943, 1116, 1122, 1165], "deadlin": 173, "howev": [173, 183, 202, 265, 496, 811, 813, 935, 978, 980], "sched_setschedul": [173, 190, 999], "pthread_attr_setschedparam": [173, 999], "runnabl": [173, 836, 997, 998, 999], "prioriti": [173, 190, 261, 830, 836, 838, 840, 875, 997, 998, 1006, 1206], "anymor": [173, 179, 184, 197, 234, 251, 479, 483, 612, 706, 708, 717, 741, 754, 755, 759, 873, 942, 985, 996, 998, 1029, 1067, 1069, 1159], "potenti": [173, 480, 610, 717, 765, 955, 1035, 1047, 1093], "harm": [173, 431, 459, 755, 757, 1035], "polici": [173, 178, 190, 341, 479, 495, 669, 673, 816, 997, 998, 1206], "sched_fifo": [173, 998, 999, 1185], "sched_rr": [173, 175, 999, 1185], "robin": [173, 240, 999, 1206], "manner": [173, 437, 838, 942], "troubl": 173, "trigger": [173, 381, 820, 824, 942, 1055, 1146], "certain": [173, 205, 212, 458, 463, 521, 544, 545, 723, 745, 834, 869, 882, 985, 1012, 1060], "circumst": [173, 997], "deadlock": [173, 573, 765, 766, 830, 843, 983, 997, 998], "inspect": [173, 175, 242, 248, 258, 261, 279, 288, 299, 309, 324, 353, 791, 868, 934, 955], "uclibc": 173, "investig": 173, "spend": [173, 180, 194, 205, 209, 230, 233, 256, 282, 306, 328, 466, 1137], "browser": [174, 180, 192, 203, 236], "significantli": [174, 1009], "decreas": [174, 175, 455, 898, 1000], "week": [174, 189, 457], "forth": [174, 468, 869, 942, 955, 1067], "spare": 174, "volum": 174, "undertak": 174, "indirectli": [174, 754], "pocket": 174, "purchas": [174, 265], "corsair": 174, "120": [174, 192, 206, 216, 223, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 614, 695, 1004, 1005], "overhaul": 174, "reserv": [174, 180, 197, 209, 245, 261, 286, 307, 410, 632, 802, 834, 894, 999, 1094], "livecd": 174, "ssd": [174, 466, 960], "vanish": 174, "gone": [174, 195, 245, 723, 755, 818, 841, 899, 988], "nowher": [174, 313, 565], "depart": 174, "unusu": 174, "cope": 174, "bet": 174, "themselv": [174, 437, 477, 517], "aggress": 174, "harddisk": 174, "treatment": [174, 265, 898, 1029], "proud": 174, "120g": 174, "fresher": 174, "plenti": [174, 176, 471], "4g": [174, 175], "shouldn": [174, 695, 838, 1084], "hibern": 174, "fstab": [174, 341], "room": [174, 180, 209, 324, 497, 648, 832, 944, 1150, 1193], "swapon": 174, "sda1": 174, "swapoff": 174, "overal": 174, "mitig": [174, 832], "perfect": [174, 180, 188, 234, 282, 337, 391, 648, 704, 735, 758, 790, 791, 1038, 1092, 1137, 1168, 1190], "portag": [174, 838, 927], "openoffic": 174, "tmpdir": [174, 299, 328, 479, 554, 789, 1033, 1132, 1134, 1170], "500m": 174, "2g": 174, "6g": 174, "throwawai": 174, "1tb": 174, "sdc1": [174, 869], "mnt": [174, 869, 877, 1006], "emerg": 174, "umount": 174, "runnung": 174, "offend": [174, 176, 178, 188, 522, 996], "trap": [174, 235, 450, 455, 473, 601, 1189, 1191], "candid": [174, 193, 234, 467, 712, 732, 745, 1035, 1108], "destin": [174, 418, 485, 590, 631, 706, 954, 961], "app": [174, 178, 996, 1149], "admin": [174, 180, 370, 949, 953], "cron": [174, 881, 1065], "rc": [174, 341, 935], "grep": [174, 178, 184, 213, 215, 225, 279, 288, 309, 310, 353, 354, 791, 857, 862, 868, 873, 875, 880, 882, 894, 925, 928, 931, 934, 942, 944, 945, 981, 991, 996, 1153, 1194, 1196, 1201], "tune": [174, 175, 184, 467, 865, 866, 888, 890, 892, 899, 947, 1064], "exce": [174, 209, 799, 996, 1006], "20m": [174, 935, 994], "compresscmd": 174, "bzip2": [174, 184, 213, 215, 863, 864, 1026], "compressopt": 174, "compressext": 174, "missingok": 174, "sharedscript": 174, "postrot": 174, "reload": [174, 213], "endscript": 174, "adjac": [174, 377, 754, 809], "sda": [174, 942, 944], "cfq": 174, "noop": [174, 937], "believ": [174, 180, 935, 944, 972], "r5": 174, "menuconfig": [174, 184, 838, 942, 1026], "xorg": [174, 178], "emerge_log_dir": 174, "unionf": 174, "fuse": [174, 176, 341, 945, 955], "persist": [174, 190, 407, 411, 419, 489, 899, 943], "held": [175, 317, 320, 388, 776, 796, 830, 843], "compani": [175, 178, 179, 180, 215, 225, 265, 291, 302, 317, 388, 477, 495, 496, 877, 1092, 1139], "z\u00fcrich": [175, 387], "hardcor": 175, "attitud": [175, 180, 299], "began": 175, "dive": [175, 292, 295, 1151], "inevit": [175, 388, 747], "came": [175, 242, 246, 248, 258, 261, 895, 901, 942, 1067, 1120, 1190], "heap": [175, 450, 502, 602, 605, 657, 737, 754, 799, 824], "128": [175, 178, 192, 206, 216, 223, 229, 232, 238, 242, 245, 248, 251, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 466, 610, 942, 970, 1027, 1150], "dead": [175, 184, 467], "attempt": [175, 180, 203, 261, 389, 703, 705, 776, 1165], "reject": [175, 188], "proof": [175, 197, 455, 466, 470, 500, 584], "evid": 175, "fortun": [175, 180, 467, 479, 708, 1142], "overnight": [175, 240], "night": [175, 209], "instinct": 175, "defens": [175, 409, 410], "grow": [175, 631, 875, 1028], "growth": [175, 245, 1094], "handi": [175, 1201], "tricki": 175, "alloca": 175, "essenti": [175, 202, 251, 298, 300, 685], "stdio": [175, 234, 246, 392, 393, 395, 399, 401, 403, 434, 460, 480, 606, 612, 875, 895, 942, 960, 961, 962, 964, 965, 968, 969, 970, 971, 983, 996, 1002, 1005, 1009, 1010, 1012, 1015, 1024, 1028, 1030, 1086], "stdlib": [175, 450, 464, 942, 960, 961, 962, 993, 1002, 1009], "size_t": [175, 450, 463, 498, 578, 587, 590, 633, 638, 644, 648, 654, 675, 689, 701, 706, 717, 718, 719, 720, 721, 785, 786, 787, 789, 797, 824, 956, 964, 974, 1006, 1009], "stack_growth": 175, "argc": [175, 444, 502, 541, 942, 968, 969, 970, 971, 976, 979, 993, 1009, 1030, 1177, 1182], "mem": [175, 191, 587, 802], "fprintf": [175, 425, 438, 956, 996, 1030], "stderr": [175, 224, 233, 242, 248, 258, 261, 271, 279, 288, 289, 309, 310, 353, 363, 370, 425, 438, 482, 791, 868, 879, 880, 934, 956, 964, 996, 1030, 1065, 1078, 1086, 1196], "atoi": [175, 972], "printf": [175, 184, 234, 246, 392, 393, 395, 401, 403, 407, 433, 434, 437, 438, 460, 480, 606, 612, 875, 895, 958, 962, 1002, 1009, 1010, 1012, 1024, 1028, 1030, 1075, 1081], "getpid": [175, 1009], "memset": [175, 961, 996, 1005, 1009], "24299": 175, "vsz": 175, "rss": 175, "3944": [175, 248], "986": [175, 245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "188": [175, 206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 283, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "320": [175, 248, 258, 261, 286, 293, 307, 313, 325, 341, 347, 351], "exact": [175, 225, 265, 367, 431, 742, 759, 811, 813, 1165], "glibc": [175, 818, 1024, 1026, 1027, 1185], "presum": 175, "writabl": [175, 461, 883, 898, 970], "eater": [175, 1000], "1k": 175, "furthermor": 175, "188k": 175, "anyth": [175, 179, 180, 205, 232, 248, 252, 275, 297, 298, 377, 477, 488, 492, 509, 544, 619, 688, 708, 785, 786, 787, 935, 947, 955, 959, 965, 994, 1028, 1033, 1034, 1035, 1078, 1086, 1142, 1159, 1163], "proce": [175, 183, 262, 295, 376, 554], "million": [175, 211, 495, 673, 838, 1038], "24908": 175, "4800": [175, 248], "1200": [175, 248, 648], "1044": [175, 248], "1376": [175, 248], "grown": [175, 178], "reflect": [175, 838, 997, 1027, 1028, 1055], "greedi": 175, "24960": 175, "8mb": 175, "barrier": [175, 453, 754, 769, 822], "against": [175, 184, 225, 233, 245, 246, 437, 479, 483, 487, 538, 554, 770, 811, 813, 818, 822, 830, 873, 970, 1015, 1020, 1030, 1044, 1103, 1170, 1195], "ulimit": [175, 875], "8192": [175, 248, 438, 875], "8000000": 175, "25018": 175, "11632": [175, 248], "2908": [175, 248], "7876": [175, 248], "8236": [175, 248], "demand": [175, 178, 195, 295, 461, 838, 889, 891, 1040, 1075], "magic": [175, 177, 341, 444, 479, 723, 797, 838, 1040, 1170], "bother": [175, 955, 959], "pthread_attr_setstacks": 175, "2mb": 175, "rlimit_stack": 175, "pthread_creat": [175, 981, 996], "nthread": 175, "act": [175, 232, 562, 632, 944, 955, 958, 1010, 1046], "shut": [175, 806, 838], "sit": [175, 251, 376, 507, 882, 942, 943, 953, 955, 959, 1009, 1153], "stack_limit": 175, "thread_func": 175, "arg": [175, 192, 206, 232, 233, 242, 246, 248, 258, 259, 261, 265, 271, 286, 307, 325, 480, 797, 981, 1033, 1037, 1058, 1065, 1088, 1179, 1185], "pthread_attr_t": [175, 981, 999], "attr": [175, 190, 981, 983, 985, 999, 1005, 1006], "pthread_attr_init": 175, "ld": [175, 341, 486, 490, 581, 599, 672, 816, 838, 865, 866, 883, 896, 920, 1002, 1012, 1013, 1024, 1029], "strerror": [175, 248, 956, 965, 996, 1009], "p_attr": 175, "pthread_t": [175, 981, 996, 999], "rv": [175, 221, 283, 341, 347], "31524": 175, "825840": 175, "206460": 175, "819936": 175, "1404": [175, 248], "800mb": 175, "writeabl": [175, 886, 894, 917], "worth": [175, 838, 944, 1064, 1136, 1190, 1205], "eaten": 175, "field": [175, 178, 180, 192, 197, 203, 239, 246, 253, 261, 271, 274, 291, 293, 297, 307, 341, 362, 381, 394, 777, 779, 873, 878, 897, 931, 1082, 1094, 1115, 1144, 1145], "alleg": 175, "wast": [175, 183, 184, 463, 750, 767, 1150], "moment": [175, 209, 463, 495, 497, 691, 740], "771": [175, 248, 335], "766604": 175, "hasn": [175, 178, 179, 188, 832, 855, 1066], "effect": [175, 179, 200, 371, 372, 407, 457, 467, 519, 666, 793, 822, 894, 899, 942, 954, 955, 997, 1011, 1036, 1048, 1069, 1116, 1144, 1164, 1172], "4096": [175, 192, 248, 789, 865, 866, 935, 942, 943, 944, 955, 978, 1005], "1026": [175, 248], "invalid": [175, 216, 223, 253, 258, 259, 261, 265, 268, 286, 293, 300, 307, 325, 329, 335, 341, 347, 366, 381, 464, 522, 533, 536, 590, 605, 688, 689, 690, 703, 706, 712, 753, 755, 769, 796, 985, 1088], "insist": [175, 205, 612, 1179], "pthread_stack_min": 175, "16384": [175, 180, 248, 942, 943, 944], "1125": 175, "7840": [175, 248], "1960": [175, 248], "1936": [175, 248], "risk": [175, 495, 935, 953, 998, 1063], "512": [175, 248, 293, 325, 341, 351, 468, 875], "513": [175, 248, 293, 341, 754], "2212": [175, 248], "4210920": 175, "1052730": 175, "4205016": 175, "4576": [175, 248], "misunderstand": [175, 763], "overcommit": 175, "kept": [175, 180, 205, 211, 438, 453, 875, 936, 1012, 1040], "plai": [175, 183, 225, 455, 473, 838, 935, 1053, 1056, 1144], "stutter": 175, "4353": 175, "red": [175, 176, 221, 223, 229, 237, 249, 252, 265, 297, 363, 651, 935, 1062, 1153], "chili": 175, "pepper": 175, "overli": [175, 881, 1039], "adob": 175, "riddanc": 175, "8462": [175, 248], "3284640": 175, "821160": 175, "3278736": 175, "3064580": 175, "lie": [175, 745], "constraint": [175, 183, 712, 715, 717, 944], "800": [175, 216, 248, 648, 1097], "4000000": 175, "11338": [175, 248], "900": [175, 248, 648], "12156": [175, 248], "shrink": [175, 631], "inadvert": 175, "3mb": 175, "nois": 175, "henc": [175, 180, 554, 608, 652, 960, 964, 1012], "14386": [175, 248], "child_stack": 175, "0x7f5813f22ff0": 175, "clone_vm": 175, "clone_f": 175, "clone_fil": 175, "clone_sigha": 175, "14413": 175, "mmap": [175, 1004, 1006, 1204], "8392704": 175, "prot_read": [175, 1005], "prot_writ": [175, 1005], "map_priv": [175, 1005], "map_anonym": 175, "map_stack": 175, "0x7fd14f9af000": 175, "mprotect": 175, "0x7fd14f1ae000": 175, "prot_non": 175, "placehold": [175, 523, 555, 710, 759, 944], "proc": [175, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 801, 818, 820, 822, 838, 839, 964, 981, 1005, 1009, 1203], "7fd14f1af000": 175, "7fd14f9af000": 175, "00000000": 175, "7fd14f9b0000": 175, "topmost": [175, 1170], "pseudo": [175, 193], "redund": [175, 438, 467], "smap": 175, "7fd14f1ae000": 175, "pss": 175, "shared_clean": 175, "shared_dirti": 175, "private_clean": 175, "private_dirti": 175, "referenc": [175, 193, 216, 324, 327, 494, 612, 754, 755, 756, 972, 1179], "anonym": [175, 497, 811, 1005], "anonhugepag": 175, "kernelpages": 175, "mmupages": 175, "miss": [175, 194, 201, 203, 205, 221, 248, 253, 258, 265, 324, 327, 370, 427, 472, 473, 481, 483, 491, 553, 584, 605, 696, 732, 813, 816, 962, 996, 1014, 1037], "shallow": [175, 245, 257, 347, 698], "extent": [175, 205, 212, 225, 367, 458, 463, 838, 1012, 1060], "8k": [175, 882], "swamp": 175, "panic": [175, 188, 846, 898], "meaningless": 175, "global": [175, 176, 194, 200, 205, 209, 214, 218, 221, 234, 242, 245, 248, 251, 252, 258, 261, 264, 275, 278, 286, 298, 301, 303, 307, 312, 316, 323, 327, 328, 332, 333, 334, 339, 340, 345, 346, 347, 349, 350, 365, 370, 416, 433, 439, 445, 449, 452, 456, 460, 463, 465, 469, 470, 474, 475, 483, 484, 489, 502, 508, 517, 551, 552, 553, 554, 595, 602, 615, 697, 735, 738, 753, 754, 764, 788, 790, 791, 807, 944, 980, 983, 987, 988, 990, 1012, 1033, 1036, 1044, 1046, 1079, 1094, 1137, 1165, 1173, 1177], "dig": [175, 177], "thorough": [175, 184, 1059, 1144, 1163, 1205], "counter": [175, 258, 395, 401, 402, 411, 467, 472, 473, 597, 706, 1005], "delai": [175, 242, 248, 258, 261, 943], "substanti": 175, "overcom": [175, 324, 370, 457], "beforehand": 175, "mlock": [175, 1204], "mlockal": [175, 1204], "contradictori": 175, "lengthi": 175, "felt": 175, "lucki": [175, 605], "agre": [175, 205, 209, 376, 505, 997, 1143], "glad": 175, "outdat": [176, 184, 838, 1165], "halfwai": 176, "procedur": [176, 184, 403, 747, 935, 1094], "thunderbolt": 176, "hdmi": 176, "unplug": 176, "oop": [176, 1189], "feb": [176, 221, 223, 225, 367, 412, 920, 978, 1024], "derefer": [176, 610], "0000000000000080": 176, "supervisor": 176, "error_cod": 176, "0x0000": 176, "pgd": 176, "p4d": 176, "0000": [176, 261, 307, 944], "smp": [176, 225, 232, 367], "pti": 176, "281": [176, 245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 307, 313, 325, 335, 341, 347], "comm": 176, "kworker": 176, "taint": 176, "fc31": 176, "asustek": 176, "zenbook": 176, "ux391ua": 176, "bio": 176, "204": [176, 206, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351, 502], "workqueu": [176, 791, 815, 840, 853, 856, 934], "ucsi_connector_chang": 176, "typec_ucsi": 176, "0010": 176, "ucsi_displayport_remove_partn": 176, "0xa": 176, "0x20": [176, 828], "c7": [176, 183, 1165], "83": [176, 183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 789, 839, 1141, 1142], "5b": [176, 183], "e9": [176, 183], "6d": [176, 183, 394, 395], "f3": [176, 183], "3d": [176, 183, 194], "fb": [176, 183], "2e": [176, 183, 699], "0f": [176, 183], "1f": [176, 183], "84": [176, 183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1141, 1142], "85": [176, 183, 192, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1013, 1014, 1141, 1142, 1177], "ff": [176, 183, 388, 778, 944], "8b": 176, "78": [176, 183, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 551, 1141, 1142], "c6": 176, "rsp": [176, 245, 1094], "0018": 176, "ffff9daa002d3df8": 176, "eflag": 176, "00010202": 176, "rax": 176, "0000000000000008": 176, "rbx": 176, "ffff901f4ce35710": 176, "rcx": 176, "0000000000003c7d": 176, "rdx": 176, "0000000000003c7c": 176, "rsi": [176, 898], "0000000000000001": 176, "rdi": 176, "rbp": 176, "0000000000000000": [176, 1030], "r08": 176, "ffffffffbc7dbe60": 176, "r09": 176, "ffff9daa002d3cf0": 176, "r10": 176, "ffff901f54951a18": 176, "r11": 176, "ffff901f56a68a78": 176, "r12": 176, "r13": 176, "r14": 176, "ffff901f4ce35860": 176, "r15": 176, "ffff901f4ce355d8": 176, "ffff901f56a00000": 176, "knlg": 176, "cr0": 176, "0000000080050033": 176, "cr2": 176, "cr3": 176, "000000028fbbc003": 176, "cr4": 176, "00000000003606f0": 176, "trace": [176, 195, 242, 248, 258, 261, 482, 828], "ucsi_unregister_altmod": 176, "0x77": 176, "0x90": [176, 828], "ucsi_unregister_partn": 176, "0x13": 176, "0x30": [176, 419], "0x247": 176, "0x340": 176, "process_one_work": 176, "0x1b5": 176, "0x360": 176, "worker_thread": 176, "0x50": 176, "0x3c0": 176, "kthread": 176, "0xf9": 176, "0x130": 176, "kthread_park": 176, "ret_from_fork": 176, "0x35": 176, "0x40": [176, 943], "cdc_ether": 176, "usbnet": 176, "r8152": 176, "mii": 176, "rc_cec": 176, "typec_displayport": 176, "uinput": 176, "rfcomm": 176, "ccm": 176, "xt_checksum": 176, "xt_masquerad": 176, "nf_nat_tftp": 176, "nf_conntrack_tftp": 176, "tun": [176, 181, 196, 200, 216, 223, 262, 1187, 1188, 1189], "bridg": 176, "stp": 176, "llc": 176, "nf_conntrack_netbios_n": 176, "nf_conntrack_broadcast": 176, "xt_ct": 176, "ip6t_reject": 176, "nf_reject_ipv6": 176, "ip6t_rpfilt": 176, "ipt_reject": 176, "nf_reject_ipv4": 176, "xt_conntrack": 176, "ebtable_nat": 176, "ebtable_brout": 176, "ip6table_nat": 176, "ip6table_mangl": 176, "ip6table_raw": 176, "ip6table_secur": 176, "iptable_nat": 176, "nf_nat": 176, "iptable_mangl": 176, "iptable_raw": 176, "iptable_secur": 176, "nf_conntrack": 176, "nf_defrag_ipv6": 176, "nf_defrag_ipv4": 176, "libcrc32c": 176, "ip_set": 176, "nfnetlink": 176, "ebtable_filt": 176, "ebtabl": 176, "ip6table_filt": 176, "ip6_tabl": 176, "iptable_filt": 176, "cmac": 176, "bnep": 176, "sunrpc": 176, "vfat": [176, 838, 869], "snd_hda_codec_hdmi": 176, "snd_soc_skl": 176, "snd_soc_sst_ipc": 176, "snd_soc_sst_dsp": 176, "snd_hda_ext_cor": 176, "x86_pkg_temp_therm": 176, "intel_powerclamp": 176, "snd_soc_acpi_intel_match": 176, "coretemp": 176, "snd_soc_acpi": 176, "kvm_intel": 176, "snd_soc_cor": 176, "snd_hda_codec_realtek": 176, "snd_hda_codec_gener": 176, "snd_compress": 176, "ledtrig_audio": 176, "ac97_bu": 176, "snd_pcm_dmaengin": 176, "iwlmvm": 176, "snd_hda_intel": 176, "snd_intel_dspcfg": 176, "irqbypass": 176, "snd_hda_codec": 176, "uvcvideo": 176, "mac80211": 176, "btusb": 176, "itco_wdt": 176, "btrtl": 176, "crct10dif_pclmul": 176, "videobuf2_vmalloc": 176, "itco_vendor_support": 176, "videobuf2_memop": 176, "mei_hdcp": 176, "btbcm": 176, "btintel": 176, "crc32_pclmul": 176, "intel_rapl_msr": 176, "snd_hda_cor": 176, "videobuf2_v4l2": 176, "libarc4": 176, "ghash_clmulni_intel": 176, "videobuf2_common": 176, "snd_hwdep": 176, "intel_cst": 176, "bluetooth": [176, 341, 1194, 1207], "snd_seq": 176, "asus_nb_wmi": 176, "iwlwifi": 176, "videodev": 176, "snd_seq_devic": 176, "intel_uncor": 176, "asus_wmi": 176, "snd_pcm": 176, "intel_rapl_perf": 176, "cdc_acm": 176, "sparse_keymap": 176, "wmi_bmof": 176, "ecdh_gener": 176, "cfg80211": 176, "intel_wmi_thunderbolt": 176, "pcspkr": 176, "snd_timer": 176, "snd": 176, "i2c_i801": 176, "soundcor": 176, "joydev": 176, "idma64": 176, "intel_xhci_usb_role_switch": 176, "mei_m": 176, "ucsi_acpi": 176, "processor_thermal_devic": 176, "intel_rapl_common": 176, "mei": [176, 248], "intel_soc_dts_iosf": 176, "intel_pch_therm": 176, "typec": 176, "int3403_therm": 176, "int340x_thermal_zon": 176, "int3400_therm": 176, "acpi_thermal_rel": 176, "acpi_pad": 176, "binfmt_misc": 176, "ip_tabl": 176, "rfkill": 176, "i915": 176, "i2c_algo_bit": 176, "drm_kms_helper": 176, "hid_multitouch": 176, "drm": 176, "nvme": 176, "crc32c_intel": 176, "nvme_cor": 176, "serio_raw": 176, "wmi": 176, "i2c_hid": 176, "76d248e576fee192": 176, "deferenc": 176, "dp": 176, "ness": [176, 212, 297], "ucsi": 176, "displayport": 176, "linu": [176, 830, 838], "typec_altmod": 176, "alt": [176, 206, 898, 926, 1187, 1194, 1201], "ucsi_dp": 176, "typec_altmode_get_drvdata": 176, "271": [176, 245, 248, 253, 255, 261, 286, 293, 307, 313, 335, 341, 347, 351], "bugzilla": 176, "1785972": 176, "john": [176, 467], "stebbin": 176, "roundtrip": 176, "wiki": [66, 176, 190, 301, 302, 323, 327, 811, 838], "explod": [176, 351, 813, 1075], "jwboyer": [176, 811], "f31": 176, "quiet": [176, 209, 1165], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 176, "tag": [176, 178, 181, 182, 206, 222, 224, 266, 482, 490, 811, 1026, 1029, 1202], "josh": 176, "boyer": 176, "mon": 176, "rpmdevtool": [176, 811], "koji": 176, "rpmdev": 176, "setuptre": 176, "spec": [176, 261, 811, 834], "srpm": 176, "unam": [176, 811, 816, 834, 838, 839], "correspond": [176, 188, 261, 392, 435, 943, 1020, 1028, 1067, 1104, 1139, 1165], "kenrel": 176, "ivh": [176, 178], "crypto": [176, 341], "ccp": 176, "sha": 176, "drop": [176, 188, 324, 498, 517, 526, 747, 754, 756, 857, 1005, 1010], "zips": 176, "ko": [176, 807, 816, 838], "endif": [176, 435, 437, 438, 480, 482, 487, 488, 581, 590, 599, 605, 607, 608, 648, 706, 707, 753, 769, 1012, 1028, 1030, 1179], "buildid": [176, 811, 1013], "primary_target": 176, "825": [176, 248], "asoc": 176, "patch601": 176, "patch999": 176, "roedel": [176, 552, 555, 1014, 1027, 1124, 1172], "patienc": [176, 205, 1060], "oldpackag": 176, "uefi": [176, 183], "market": [177, 180, 245, 289, 297, 1094], "unprofession": 177, "intent": [177, 179, 183, 184, 500, 755, 759, 811, 968, 970, 971], "remark": 177, "organ": [177, 202, 433, 468, 479, 507, 648, 874, 960, 1027], "numer": [177, 194, 210, 212, 214, 248, 258, 261, 265, 297, 307, 347, 482, 654, 955], "enforc": [177, 235, 455, 477, 612, 797, 944], "cname": [177, 179], "propag": [177, 409, 467, 483, 488, 491, 492, 673, 723, 945], "1100": [177, 242, 248, 265, 648], "3600": [177, 248], "185": [177, 206, 223, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "199": [177, 206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 838, 1094], "109": [177, 192, 206, 216, 221, 223, 229, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375], "153": [177, 192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 377], "111": [177, 192, 194, 206, 216, 223, 229, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365], "108": [177, 192, 206, 216, 223, 229, 232, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365], "strip": [177, 196, 205, 239, 241, 242, 245, 253, 257, 258, 263, 265, 271, 274, 286, 293, 303, 307, 313, 329, 335, 341, 347, 351, 370, 379, 776, 1012, 1013, 1015, 1024, 1043, 1117, 1162], "breviti": 177, "fqdn": 177, "qualifi": [177, 461, 607, 608, 745], "surf": 177, "consequenti": [177, 180, 183, 211, 869, 942, 1032, 1053, 1179], "microsoft team": 178, "chrome": 178, "google chrom": 178, "confer": [178, 180, 209, 233, 256, 282, 328, 776, 1089], "virtual classroom": 178, "classroom": [178, 180], "remote train": 178, "dr": [178, 1027], "chromium": [178, 213, 341], "frequent": [178, 180, 188, 205, 265, 923, 943, 1060, 1081], "face": [178, 180, 205, 255, 265, 761], "travel": [178, 898], "corona": [178, 180, 205], "viru": [178, 180], "conferenc": 178, "dramat": 178, "march": 178, "spent": [178, 466, 770, 1034, 1143], "weston": 178, "invest": [178, 180, 184, 265], "smooth": 178, "layer": [178, 278, 280, 298, 797, 869, 943, 955, 965, 974], "cornercas": 178, "hover": 178, "sharer": 178, "gdm": [178, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 873, 929], "daemon": [178, 225, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 473, 873, 876, 923, 924, 927, 929, 945, 953, 958, 960, 990, 1046], "uncom": [178, 522, 523, 717, 942], "waylanden": 178, "defaultsess": 178, "deb": [178, 310], "5153": 178, "marjan": 178, "javorka": 178, "fashion": 178, "efl": [178, 857, 945, 996], "61762": 178, "1670": [178, 248], "947213": 178, "61764": 178, "98775": 178, "zygot": 178, "sandbox": [178, 205, 209, 259, 273, 291, 1137, 1172, 1173], "61800": 178, "239615": 178, "gpu": 178, "sharedarraybuff": 178, "sparerendererforsiteperprocess": 178, "prefer": [178, 255, 265, 411, 467, 509, 613, 700, 708, 712, 830, 882, 1088], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 178, "token": [178, 235, 251, 397, 437, 873, 986, 1092, 1187], "4327801531638606376": 178, "61825": 178, "420846": 178, "autoplai": 178, "gestur": 178, "12993561460135093079": 178, "asar": 178, "agent": [178, 951, 1144], "mozilla": [178, 303, 920], "applewebkit": 178, "537": [178, 248, 335, 341, 351], "khtml": 178, "gecko": 178, "microsoftteam": 178, "preview": [178, 263, 316, 332, 484, 791], "3497": 178, "safari": 178, "webview": 178, "preload": 178, "preload_notif": 178, "fff": 178, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 178, "raster": 178, "v8_context_snapshot_data": 178, "v8_natives_data": 178, "101": [178, 192, 206, 216, 223, 229, 238, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1071, 1141, 1142], "msteam": 178, "notificationsmanag": 178, "61973": 178, "790018": 178, "432557619363765409": 178, "mainwindow": 178, "62033": 178, "1259666": 178, "5585537623314398260": 178, "pluginhost": 178, "wish": [178, 180, 188, 209, 471, 480, 619, 686, 767, 1059, 1155, 1156, 1172], "insan": [178, 317, 869], "killal": [178, 1000, 1010], "63500": 178, "298385": 178, "63502": 178, "blood": 178, "pressur": [178, 242], "rise": [178, 545, 820, 978, 979, 996], "wipe": 178, "logout": 178, "pop": [178, 191, 253, 255, 268, 283, 293, 303, 313, 325, 341, 347, 351, 438, 629, 632, 767, 1058, 1083], "morn": [178, 214, 224, 242, 251, 253, 259, 328, 1099], "webassembli": 178, "blow": 178, "water": [178, 297], "tab": [65, 178, 179, 192, 261, 289, 307, 361, 412, 838, 898, 1080, 1106, 1196], "firefox": [178, 341, 473, 981, 1010, 1149], "dom": [178, 237], "gave": [178, 180, 193, 205, 940, 1142], "3987": 178, "132": [178, 192, 194, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "plagu": 178, "invent": [178, 405, 437, 497, 519, 520, 1192, 1193], "game": [178, 245, 261, 268, 271, 286, 293, 303, 307, 324, 329, 335, 341, 347, 894, 958, 1074], "pornwatch": 178, "teamview": 178, "webpag": 179, "properli": [179, 691, 769, 838, 1024], "retrospect": 179, "jekyl": 179, "bend": [179, 549], "companion": [179, 297], "pollut": [179, 438, 461, 467, 500, 696, 1014], "distinguish": [179, 606, 759, 870, 1024], "handwritten": [179, 277, 278, 280, 337, 338, 605, 705, 735, 736, 737, 753, 790, 791], "remind": 179, "pile": [179, 188, 507, 1010], "incomprehens": [179, 259, 669, 776, 1190], "blame": [179, 944], "technic": [179, 180, 202, 338, 492, 496, 596, 651, 695, 1040, 1150, 1182], "nojekyl": 179, "eof": [179, 229, 232, 251, 252, 268, 362, 399, 400, 401, 402, 415, 679, 840, 854, 960, 961, 964, 970, 1002, 1009, 1062], "doctyp": 179, "constel": 179, "machineri": [179, 301, 302, 323, 327], "eventu": [179, 188, 470, 978, 1027], "click": [179, 180], "cri": [179, 758], "haven": [179, 180, 205, 573, 935, 942], "subdomain": 179, "afterthough": 179, "preserv": [179, 190, 211, 268, 455, 865, 866, 900, 954, 1162], "_build": 179, "restor": [179, 188, 195, 242, 248, 258, 261, 811, 1010, 1033], "shini": 179, "nervous": 179, "marketinges": [179, 289], "familiar": [179, 205, 261, 372, 373, 762, 943, 1060], "big blue button": 180, "strongli": [180, 242, 248, 258, 261, 292, 295, 338, 553, 651, 697, 735, 788, 790, 791, 1190], "shame": 180, "pursu": 180, "collabor": [180, 190, 197, 202, 209, 282], "moreov": 180, "focus": 180, "teach": [180, 205, 388], "trust": [180, 183, 245, 301, 302, 323, 341, 351, 703, 951, 953, 1094, 1165, 1182], "benefit": [180, 292, 295, 298, 300, 461, 1132], "beat": [180, 255, 265, 776, 1136], "talent": [180, 388], "whiteboard": [180, 1005], "chat": 180, "breakout": [180, 942], "stabil": [180, 502, 944, 1166], "thousand": [180, 286, 335, 869], "curiou": [180, 1137], "curious": 180, "licens": [180, 286, 489, 794, 1062, 1092], "lgpl": 180, "blindsid": 180, "govern": [180, 824, 964], "html5": 180, "exception": [180, 944], "modern": [180, 184, 186, 189, 197, 200, 205, 212, 234, 256, 483, 757, 776, 791, 798, 800, 805, 808, 815, 819, 829, 840, 842, 847, 853, 856, 859, 934, 1012, 1031, 1061, 1137, 1163, 1191, 1193], "heavili": [180, 202, 205, 289, 291, 388, 553, 748, 838, 935, 944, 1060], "webrtc": 180, "pain": [180, 838, 1015, 1024], "death": [180, 232, 1010], "firewal": [180, 213, 953], "busi": [180, 324, 477, 487, 612, 843, 855, 867, 902, 904, 909, 910], "couldn": [180, 184, 209, 212, 351, 1074], "indefinit": [180, 685], "vm": [180, 373], "encrypt": [180, 873, 894, 945, 953, 954, 955, 1115, 1153], "bbb": [180, 192, 253, 271, 341], "provis": 180, "gcp": 180, "expertis": [180, 554], "n1": [180, 206, 265], "accordingli": [180, 213, 541, 551, 554, 584, 942, 944, 1029, 1064, 1067, 1162], "500gb": 180, "10gb": 180, "spars": [180, 255, 265, 615, 617, 834], "mandatori": [180, 944, 1061], "issuanc": 180, "udp": [180, 936, 938, 1205, 1207], "32768": 180, "clickabl": 180, "7443": 180, "755": [180, 248, 370, 883, 1063], "xenial": 180, "220": [180, 206, 221, 232, 242, 245, 248, 253, 255, 261, 265, 268, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "hostnam": [180, 341, 1165], "certbot": 180, "greenlight": 180, "letsencrypt": 180, "docker": [180, 184, 341], "bundl": [180, 203, 1149, 1165], "rake": 180, "succesfulli": 180, "screenshot": [180, 203, 370], "tryout": [180, 944], "kid": [180, 225, 243, 356], "layman": 180, "knew": [180, 209, 710, 1029], "reproduc": [180, 183, 299, 464, 944], "thought": [180, 438, 750, 838, 1150], "cite": [180, 194, 205, 327], "fred": [180, 936, 1036], "dixon": 180, "leader": 180, "aka": [180, 225, 248, 251, 253, 273, 573, 757], "canva": 180, "bradlei": 180, "schreffler": 180, "upfront": 180, "far": [180, 205, 213, 234, 240, 248, 251, 291, 407, 422, 443, 444, 446, 457, 461, 466, 491, 620, 630, 695, 758, 816, 880, 944, 1038, 1060, 1142, 1190], "exhaust": [180, 994, 997, 1040], "heard": 180, "tast": [180, 397, 613, 669, 695, 738, 758], "era": 180, "budget": [180, 229], "advertis": [180, 748], "viabl": 180, "shout": [180, 737, 740], "loud": [180, 416, 631, 699, 737, 743, 744], "gmunden": [181, 388], "traunse": 181, "hike": [181, 182, 209], "bergsteigen": [181, 182], "climb": [181, 182, 209, 240], "klettern": [181, 182], "outdoor": [181, 182], "donnerstag": 181, "geistigen": 181, "ersch\u00f6pfung": 181, "k\u00f6rperlich": 181, "erfahren": [181, 182, 388, 1188], "dazu": [181, 190, 191, 196, 200, 217, 370, 375, 388, 1186, 1200, 1208], "ausgesucht": [181, 182], "zwar": [181, 1185, 1189, 1201], "lo": [181, 182, 223, 261, 297, 549, 818, 1048], "gmundner": [181, 209], "h\u00fctte": [181, 182, 209], "n\u00e4chsten": 181, "naturfreundesteig": 181, "zusammenfassung": [181, 187], "wunsch": 181, "vollend": 181, "erf\u00fcllt": 181, "unversichert": 181, "unmarkiert": 181, "leicht": [181, 217, 1185, 1200, 1206, 1207], "panik": 181, "geraten": 181, "h\u00e4nde": [181, 182], "braucht": [181, 182], "fingern\u00e4gel": 181, "z\u00e4hne": 181, "mitunt": [181, 182, 1197], "verkoffert": 181, "augen": [181, 268], "offenhalten": 181, "spur": 181, "folgen": [181, 217, 218, 1187, 1200], "fr\u00fcher": [181, 262], "umdrehen": 181, "sackgass": 181, "erweist": 181, "vielleicht": [181, 206, 217, 268, 1189, 1200], "weggehen": 181, "stirnlamp": 181, "mitnehmen": 181, "war": [181, 191, 196, 198, 206, 217, 221, 388, 477, 1185, 1187, 1189, 1200, 1206, 1207], "sch\u00f6nsten": 181, "jemal": 181, "zuletzt": 181, "traumhaften": 181, "gegend": 181, "griffweit": 181, "erscheint": 181, "paar": [181, 191, 206, 208, 216, 223, 255, 370, 375, 1185, 1208], "eindr\u00fcck": 181, "m\u00fcder": 181, "abklatsch": 181, "erinnerungen": 181, "hirn": 181, "eingebrannt": 181, "einstieg": [181, 217, 1200], "traunsteinstra\u00df": 181, "hundert": [181, 192, 265], "meter": 181, "s\u00fcdlich": 181, "hoisn": [181, 209], "wirt": [181, 209], "markiert": [181, 182], "wanderweg": [181, 182], "wegweisern": [181, 182], "bergauf": [181, 182], "kupp": 181, "klamm": 181, "einsteigt": 181, "bergab": 181, "touristisch": 181, "erschlossen": 181, "trifft": 181, "familien": 181, "kindern": [181, 1201], "rechter": 181, "felsstock": 181, "adlerhorst": 181, "sieht": [181, 192, 196, 206], "rau": [181, 255], "touristenzon": 181, "rauf": 181, "schart": 181, "durchschnaufen": 181, "einstellen": 181, "gen\u00fcsslich": 181, "h\u00f6henmet": 181, "verspeisen": 181, "steinmanderl": 181, "verfehlen": 181, "erkennbar": [181, 192, 1203], "kamm": 181, "r\u00fcber": 181, "traunsteinfelsen": 181, "erstreckt": [181, 182], "sch\u00f6nste": 181, "meditativ": 181, "wundersch\u00f6n": [181, 182], "steil": 181, "voll": 181, "zecken": 181, "schon": [181, 182, 191, 206, 208, 216, 246, 388, 1187, 1189, 1194, 1201, 1203, 1206], "bl\u00fcht": 181, "rinnen": 181, "leichtest": [181, 192], "dahin": [181, 1185], "wieder": [181, 206, 208, 216, 221, 223, 237, 1187, 1201], "vertun": 181, "manderl": 181, "aufstellen": 181, "nachwelt": 181, "nemesi": 181, "bergverr\u00fcckten": 181, "gleich": [181, 192, 206, 216, 217, 221, 223, 255, 303, 335, 341, 351, 365, 1185, 1200, 1207], "schl\u00fcsselstel": 181, "quert": 181, "latschen": 181, "\u00f6fter": [181, 182], "festhalten": 181, "gel\u00e4nd": 181, "einsam": 181, "bohrhaken": 181, "verrotteten": 181, "schuhband": 181, "festh\u00e4lt": 181, "runterfallen": 181, "glaub": [181, 190, 191], "stell": [181, 206, 237], "umgehen": [181, 1194], "querung": 181, "hierher": 181, "st\u00fcck": 181, "reinzum\u00fcnden": 181, "scheint": [181, 190], "gibt": [181, 182, 187, 190, 192, 193, 196, 206, 217, 218, 229, 255, 365, 1184, 1185, 1186, 1187, 1189, 1194, 1200, 1206], "foto": [181, 900], "mittendrin": 181, "besch\u00e4ftigt": 181, "hose": 181, "kacken": 181, "gesagt": [181, 196, 206, 216, 388, 1185], "manderln": 181, "aufnahmen": 181, "zunehmenden": 181, "sonnenuntergang": 181, "unvergesslich": 181, "nacht": [181, 182], "geworden": 181, "halten": [181, 182], "hinauf": 181, "stund": [181, 925, 1208], "gekostet": 181, "exklus": [181, 206, 216], "schneck": 181, "j\u00e4gerbrot": 181, "schein": 181, "ausstieg": 181, "hernlersteig": 181, "m\u00fcndet": 181, "gmundnerh\u00fctt": 181, "gem\u00fctlich": [181, 182], "nett": [181, 182, 196, 307, 388, 1194, 1201], "wirtsleut": 181, "h\u00fcttenruh": 181, "ansitzen": 181, "schweinsbraten": 181, "reinkommt": 181, "k\u00fcche": 181, "geputzt": 181, "backerbsen": 181, "morgen": [181, 261, 265], "hochnebel": 181, "blick": [181, 182, 1186], "flugzeug": 181, "gipfel": [181, 182], "dolin": 181, "nebel": 181, "dabei": [181, 192, 196, 232, 351, 388, 1184], "verziehen": 181, "r\u00fcckweg": 181, "hoisnwirt": 181, "miesweg": 181, "karibik": 181, "steiner alpen": 182, "kamni\u0161ke alp": 182, "kamni\u0161ko savinjskih alp": 182, "alten": [182, 1189], "tradit": [182, 245, 248, 463, 478, 614, 616, 617, 619, 639, 880, 944, 1083, 1115, 1204], "bleiburg": [182, 240], "k\u00e4rnten": [182, 388], "umliegenden": 182, "bergen": 182, "interessantesten": 182, "2558m": [182, 240], "steiner": 182, "alpen": 182, "davor": [182, 224], "gekannt": 182, "nun": [182, 200, 206, 229, 236, 261, 656], "gesehen": [182, 206, 212, 246], "steht": [182, 206, 216, 217, 1197, 1200], "n\u00e4chste": [182, 200], "jahr": [182, 206], "\u00fcberschreitung": 182, "soweit": [182, 1194, 1201], "h\u00f6chst": 182, "interessant": [182, 1186], "steinhaufen": 182, "unge\u00fcbt": 182, "verloren": [182, 221, 224], "h\u00f6henangst": 182, "schauen": [182, 217, 1200], "helm": 182, "schaden": 182, "schottersurf": 182, "kommen": [182, 187, 255, 370, 375, 388, 926], "ihr": [182, 187, 191, 196, 206, 351, 860, 1184, 1186, 1188, 1189, 1194, 1201, 1207], "artikel": [182, 190], "rein": [182, 192, 217, 1200, 1201], "ins": [182, 191, 388, 764, 1185, 1201], "eisenkappel": 182, "seebergsattel": 182, "openstreetmap": 182, "klein": [182, 191, 192, 196, 1185, 1187, 1188], "dorf": 182, "uhren": 182, "stehengeblieben": 182, "scheinen": 182, "parkplatz": 182, "geparkt": 182, "wissend": 182, "hinten": 182, "tal": 182, "beginnt": [182, 216, 1208], "ahnen": 182, "stetig": 182, "verzagen": 182, "eingang": [182, 1185], "kar": 182, "pl\u00f6tzlich": 182, "freundlich": 182, "vorhanden": [182, 1194, 1201], "fr\u00fchst\u00fcck": 182, "lager": [182, 297], "respektvol": 182, "erklimmenden": 182, "zieht": 182, "haltend": 182, "wand": 182, "wiederum": [182, 206], "mittlerweil": [182, 1185, 1202], "akzeptiert": 182, "deswegen": [182, 216, 221, 1187], "schliesslich": [182, 1185], "stehend": 182, "denn": [182, 206, 216, 1206, 1208], "hinaufkomm": 182, "passiert": [182, 206, 223], "anf\u00e4ngern": 182, "geschehen": [182, 341], "jung": [182, 388], "izola": 182, "slowenien": 182, "stellten": 182, "ankam": 182, "ob": [182, 190, 216, 1189, 1208], "beantwortet": 182, "adoptivs\u00f6hn": 182, "gewonnen": 182, "nachbarberg": 182, "ko\u010dna": 182, "sichtlich": 182, "spa\u00df": [182, 262, 1203], "abstieg": 182, "erweitert": 182, "rund": 182, "fertig": [182, 216, 233, 261, 341, 716, 723], "empfehl": [182, 1185], "runterzugehen": 182, "raufgekommen": 182, "ostseitigen": 182, "westseitig": 182, "sch\u00f6ner": [182, 206], "langen": 182, "grat": 182, "felst\u00fcrm": 182, "daf\u00fcr": [182, 200, 206, 216, 217, 1185], "anstrengend": 182, "200m": 182, "pulverhangerl": 182, "zur\u00fcck": [182, 206, 218, 1194, 1201], "wohlverdient": 182, "la\u0161ko": 182, "geschmack": 182, "schroff": 182, "selektiv": 182, "jedermann": 182, "kett": 182, "2000m": 182, "umschlossen": 182, "gletschergeformten": 182, "karen": 182, "steilen": 182, "w\u00e4nden": 182, "ost": 182, "richtung": [182, 1196], "schlafm\u00f6glichkeiten": 182, "biwak": 182, "einladung": 182, "\u00fcberquerung": 182, "dringend": 182, "f\u00e4llig": [182, 388], "fu\u00dfnoten": [182, 1184], "belieben": 182, "gummi": 182, "reifen": 182, "fahren": 182, "mehrplatzlag": 182, "reserviert": 182, "h\u00fcttenschl\u00e4fer": 182, "ohrenst\u00f6psel": 182, "f\u00e4lle": 182, "eingetreten": 182, "fassen": [182, 261], "typ": [182, 218, 229, 239, 926, 1149], "geschnarcht": 182, "geschrien": 182, "modules sign": 183, "secure boot": 183, "shim": 183, "dell xps 13": 183, "unresolv": [183, 813, 816, 1012], "upset": [183, 748], "tendenc": 183, "vendor": [183, 184, 493, 495, 554, 834, 838, 942, 972], "efi": [183, 341], "implementor": [183, 277, 278, 280, 337, 338, 697, 735, 744, 790, 791, 797, 1170, 1190], "shine": 183, "cryptographi": 183, "third": [183, 220, 232, 261, 307, 483, 611, 613, 724, 725, 816, 818, 883, 925, 968], "parti": [183, 188, 501, 613, 809, 816, 964, 1005, 1153], "signatur": [183, 229, 261, 265, 286, 307, 599, 695, 742, 758, 759, 1006], "openssl": [183, 894], "req": 183, "x509": 183, "newkei": 183, "rsa": [183, 951], "keyout": 183, "xps13": 183, "priv": [183, 832], "outform": 183, "36500": [183, 554], "subj": 183, "passphras": [183, 213, 951], "expiri": 183, "0x2": 183, "97": [183, 192, 206, 216, 221, 223, 229, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 471, 1141], "e5": 183, "ef": 183, "88": [183, 192, 206, 216, 221, 223, 229, 232, 234, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 473, 1080, 1141, 1142, 1177], "3a": 183, "b3": 183, "9c": 183, "1b": 183, "a4": 183, "d7": 183, "sha256withrsaencrypt": 183, "issuer": [183, 497], "sep": [183, 184, 212, 232, 245, 248, 253, 261, 265, 268, 286, 307, 325, 341, 352, 479, 676, 920, 942, 944, 955, 1012], "gmt": 183, "aug": [183, 248, 935, 943], "2121": 183, "subject": [183, 480, 799, 836, 1170], "rsaencrypt": 183, "modulu": [183, 242, 248, 258, 261], "b5": 183, "2d": [183, 235, 613, 1081], "5c": 183, "6f": [183, 341, 1000], "b0": 183, "95": [183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1141, 1142], "f6": 183, "9e": 183, "9d": 183, "0d": 183, "bc": [183, 818, 942], "f5": 183, "6e": 183, "fe": [183, 479], "94": [183, 192, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 522, 523, 1141], "2b": [183, 944], "e6": 183, "b2": 183, "a0": [183, 943], "f8": 183, "7d": 183, "1c": 183, "2c": 183, "9f": 183, "4d": [183, 1081], "86": [183, 192, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1141, 1142], "e3": [183, 516], "dd": [183, 869, 898, 1185], "7b": 183, "3f": 183, "aa": 183, "b8": 183, "a5": [183, 943], "d5": 183, "0b": 183, "d1": [183, 255, 318, 341, 670], "e8": 183, "dc": [183, 497], "c5": 183, "d2": [183, 255, 318, 347, 670], "c2": [183, 500, 614, 699], "0a": [183, 399], "a1": [183, 245, 290, 1094], "e1": [183, 233, 246, 516, 696], "89": [183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 471, 942, 943, 944, 1014, 1141, 1142], "4c": 183, "4a": 183, "77": [183, 206, 214, 216, 221, 223, 225, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 367, 370, 375, 1141, 1142], "a9": 183, "68": [183, 206, 211, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 362, 365, 920, 1141, 1142], "b6": 183, "a8": 183, "9b": 183, "d8": 183, "7f": [183, 944], "e2": [183, 233, 246, 516, 696], "a3": 183, "79": [183, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1141, 1142], "f4": 183, "96": [183, 192, 206, 216, 221, 223, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 471, 1013, 1014, 1141, 1142], "4f": [183, 1081], "1d": 183, "7e": 183, "4e": 183, "0e": 183, "d9": 183, "8c": 183, "d3": [183, 670], "c8": 183, "f7": 183, "8e": 183, "d6": 183, "3b": 183, "1e": 183, "4b": [183, 944, 1000], "5e": [183, 1067], "5f": [183, 771], "7c": 183, "expon": [183, 1067], "65537": 183, "0x10001": 183, "x509v3": 183, "98": [183, 192, 206, 216, 223, 229, 232, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 596, 633, 1014], "0c": [183, 944], "keyid": 183, "c0": 183, "8f": 183, "b1": 183, "b7": 183, "9a": 183, "fa": 183, "7a": 183, "df": [183, 209, 325, 329, 335, 347, 479], "a6": 183, "c9": 183, "76": [183, 206, 216, 221, 223, 229, 232, 234, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 490, 491, 755, 789, 1094, 1141, 1142], "f0": 183, "b4": 183, "f9": 183, "eb": 183, "f1": 183, "6c": [183, 944], "2f": [183, 395, 1081], "5a": 183, "e0": 183, "d0": 183, "93": [183, 192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1141], "8d": 183, "2a": 183, "fc": [183, 496, 497], "1a": 183, "b9": 183, "cb": [183, 660], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 183, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 183, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 183, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 183, "wl72mzqr": 183, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 183, "hmszvaowukuzi2kflrpvc": 183, "79gwnr4": 183, "jc": 183, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 183, "valspcvotvjdokib4eyxnavjbdjdldd": 183, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 183, "nb3kgq7zt5ym": 183, "b8ce2f": 183, "ettmprmfi94x": 183, "7i5tuqrbsylistict": 183, "rf1kw6": 183, "zuzvmwyow9cyzwc5rar": 183, "ys0exg3v": 183, "hyjl7vaxa23rb": 183, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 183, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 183, "dz1idzapbgnvhrmbaf8ebtadaqh": 183, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 183, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 183, "xra": 183, "kdtflvc7uuvwtp": 183, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 183, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 183, "yqfvxbjphkw": 183, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 183, "ahemjzbycfiiq65b5x": 183, "y7aq": 183, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 183, "rk": 183, "b3lljngstu2g": 183, "mokutil": 183, "mokmanag": 183, "bloodi": [183, 1009, 1150], "fan": [183, 205, 209, 235, 259, 328, 1137], "highest": [183, 242, 248, 258, 261, 307, 422, 467, 943, 999], "melt": 183, "7390": [183, 248], "cross develop": 184, "raspberry pi": [184, 935, 936, 937, 938, 939, 942, 943, 944], "crosstool-ng": 184, "c++": [184, 186, 1189, 1190, 1191, 1193], "sadli": [184, 235, 461, 807, 942, 976, 979, 1013, 1035], "linaro": [184, 791, 934, 1022, 1023], "libstdc": [184, 1024, 1026], "unsatisfi": 184, "libpthread": [184, 1015], "feedback": [184, 200, 203, 212, 213, 214], "thankfulli": 184, "gperf": [184, 1026], "flex": [184, 818, 942, 1026], "texinfo": [184, 1026], "help2man": [184, 1026], "libtool": [184, 1026], "ncurs": [184, 811], "unzip": [184, 839, 1026], "rsync": [184, 1026], "diffutil": 184, "libncurses5": [184, 1026], "gawk": [184, 1026], "util": [184, 191, 212, 341, 494, 500, 519, 533, 648, 703, 706, 708, 789, 1026, 1033, 1165], "ct": [184, 1026], "zlib": [184, 1026], "extra": [184, 206, 216, 242, 428, 489, 581, 752, 838], "prior": [184, 864, 880, 905, 942, 1012, 1028, 1082], "bootstrap": [184, 1026, 1172], "yann": 184, "morin": 184, "warranti": [184, 225, 367], "merchant": 184, "rpi3": 184, "armv7": 184, "rpi2": 184, "23179": 184, "libc": [184, 1012, 1029], "glibc_2": [184, 1012], "ldd": [184, 483, 485, 1029], "0xb6e06000": 184, "invok": [184, 214, 233, 246, 356, 361, 497, 599, 611, 670, 700, 991, 1013, 1050, 1062, 1063, 1088], "rpt2": 184, "rpi1": 184, "deb10u1": 184, "quirk": [184, 935], "werror": [184, 403, 416, 459, 482, 497, 504, 789, 806, 807, 1179], "behind": [184, 224, 416, 467, 497, 519, 629, 838, 953, 1012, 1055, 1154], "glibcxx_3": 184, "libgcc_": 184, "downgrad": 184, "cmake_find_root_path": [184, 1013], "cmake_sysroot": [184, 1013], "viewpoint": 184, "bye": [184, 723, 727, 729, 730, 731, 1150], "relocat": 184, "fragil": 184, "sdk": 184, "buildroot": 184, "encount": [184, 213, 261, 265, 943, 944, 970], "ct_prefix": 184, "categori": [185, 197, 479, 1139], "crosstool": [185, 289, 791, 934, 1013, 1015, 1022, 1023, 1024], "1399": 185, "dell": 185, "xp": [185, 477], "grintovec": [185, 240], "plan\u0161arsko": 185, "jezero": 185, "\u010de\u0161ka": [185, 240], "ko\u010da": [185, 240], "traunstein": [185, 209, 388], "zierlersteig": [185, 209], "bigbluebutton": [185, 189, 1184], "consumpt": 185, "buildmanag": 186, "embeddedentwicklung": 186, "anpassungen": 186, "paketen": 186, "rootfilesystem": [186, 1015], "dient": 187, "vermarktung": 187, "referenz": [187, 276], "kursteilnehm": [187, 388], "beendigung": 187, "entstandenen": 187, "zur\u00fcckgreifen": 187, "finden": [187, 191, 200, 1184], "sofern": 187, "kund": [187, 200], "w\u00fcnscht": 187, "abstufungen": 187, "\u00f6ffentlichkeit": [187, 1201], "besprochen": 187, "hierbei": 187, "g\u00e4nzlich": 187, "abgesehen": 187, "ausdr\u00fccklich": 187, "zustimmt": 187, "namen": [187, 206, 216, 265, 325, 926, 1208], "individuen": 187, "prinzipiel": 187, "erw\u00e4hnt": [187, 200], "erlaubni": 187, "sollten": [187, 255, 293], "vorgehen": [187, 273, 1201, 1208], "anbietet": 187, "nie": [187, 196, 208, 388, 1189], "zug\u00e4nglich": 187, "onlinekursen": 187, "\u00fcbungsmateri": 187, "zustimmen": 187, "einzeln": [187, 200], "keinesfal": 187, "ver\u00f6ffentlicht": 187, "verschiedenst": 187, "m\u00f6glichkeiten": [187, 200, 1203, 1206], "entstanden": [187, 200, 208], "nichtsdestotrotz": [187, 1187], "accompani": [188, 209, 298, 300, 1140, 1195], "privaci": [188, 205, 209, 210], "guidelin": [188, 205, 324, 944], "certainli": [188, 970], "gitk": [188, 898], "traine": [188, 215], "respositori": [188, 200], "user1": 188, "user2": 188, "user3": 188, "untrack": 188, "beast": 188, "similarli": 188, "unstag": 188, "accident": [188, 610, 742, 822, 865, 866, 905, 969, 1077], "7434a5b": 188, "100755": 188, "cowork": 188, "employ": [188, 477], "favourit": 188, "869": [188, 248, 335], "124": [188, 192, 206, 213, 216, 223, 229, 232, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1094], "a4b9666": 188, "bf5bb75": 188, "went": [188, 209], "retri": [188, 956, 1055, 1165], "noon": [188, 328, 998, 1086], "lack": [188, 457, 482, 554, 688, 690, 944, 1024], "unavoid": 188, "her": [188, 192, 217, 261, 264, 690, 873, 894, 1103, 1145, 1200], "confid": 188, "merg": [188, 234, 840, 998, 1084, 1202], "gentl": [189, 1191], "tinker": 189, "solder": 189, "sysv": [190, 1013], "grace": [190, 302, 762], "sigterm": [190, 1009, 1010], "sigkil": 190, "beeinflussen": 190, "shutdown": [190, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 338, 341, 347, 378, 816, 929, 1006, 1044], "herausgefunden": [190, 196, 388], "nachfolgend": [190, 1185], "manpag": 190, "verhindern": 190, "genehm": 190, "inhibit": [190, 337, 695, 733], "children": [190, 471], "vererbt": 190, "attributen": 190, "setprior": 190, "execv": [190, 967, 1012], "sched_reset_on_fork": 190, "ORed": 190, "privileg": [190, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 894, 929], "playback": 190, "prevent": [190, 193, 242, 248, 251, 258, 261, 289, 453, 459, 463, 875, 964, 969, 998, 1009, 1035, 1047, 1077], "evad": 190, "rlimit_rttim": 190, "getr": 190, "anstel": 190, "prozessen": 190, "teilen": 190, "prozess": [190, 371, 1194, 1196, 1203, 1204, 1207], "startenden": 190, "gestarteten": 190, "weitergegeben": 190, "ausser": [190, 217, 365, 1200], "unterbunden": 190, "pthread_attr_setinheritsch": 190, "pthread_inherit_sch": 190, "pthread_explicit_sch": 190, "newli": [190, 459], "sowa": [190, 196, 388, 1185], "\u00e4hnlich": [190, 221], "filter_driv": 190, "offenbar": [190, 206, 388, 1187], "miser": [190, 648], "netzwerkdrivern": 190, "hoher": 190, "interruptlast": 190, "verbessern": 190, "n\u00f6tig": [190, 1196], "diesbez\u00fcglich": 190, "\u00fcberlegt": 190, "schaltet": 190, "netzwerkdriv": 190, "30107": 190, "linuxfound": 190, "workgroup": 190, "napi": [190, 220, 832], "implementationen": 190, "libmodbu": 190, "freemodbu": 190, "konfiguriert": [190, 191], "jumbo": 190, "jumbo_fram": 190, "mtu": [190, 937], "1500": [190, 248], "eth0": 190, "9000": [190, 248], "ifconfig": [190, 832], "abgelegt": 190, "konfigur": [190, 192], "ifac": [190, 522, 536, 759], "vorsicht": [190, 216, 926], "routern": 190, "fragmentieren": 190, "tracerout": 190, "netzwerkverbindung": 190, "g\u00fcte": 190, "sar": 190, "sysstat": 190, "schmerzvol": 190, "netter": 190, "ausprogrammiert": 191, "konflikt": [191, 1202], "parallelen": [191, 1206], "demonstr": [191, 193, 213, 285, 549, 598, 1139, 1143, 1182], "mutter": [191, 388, 389, 1206], "aller": [191, 200, 388, 389, 1185, 1206], "danach": [191, 1184], "hilf": [191, 216, 370, 375, 1196], "gefixt": 191, "kommunk": 191, "variablen": [191, 192, 217, 218, 221, 224, 229, 257, 275, 276, 362, 365, 371, 1186, 1196, 1197, 1200], "frontal": 191, "vorgef\u00fchrt": 191, "diskuss": [191, 200, 222, 388], "dank": [191, 196, 388, 1185], "beispielcod": 191, "h\u00e4ndisch": [191, 1188], "zweier": [191, 217, 1200], "bewundern": 191, "k\u00f6nnt": 191, "euch": 191, "erinnern": [191, 388], "blinken": 191, "liess": 191, "irgendwo": [191, 265], "hatten": [191, 196, 388], "kleinen": 191, "empf": 191, "unbedingt": [191, 206, 1185], "beispielprogramm": 191, "horcht": 191, "gesprochen": 191, "ausf\u00fchrlich": [191, 276], "schamlos": 191, "eigenwerbung": 191, "\u00fcberbleibsel": 191, "ehemaligen": 191, "socketcan": [191, 936, 937], "absorbiert": 191, "worden": [191, 200, 1185], "enth\u00e4lt": [191, 206], "schnuckelig": 191, "aufzeichnen": 191, "replai": [191, 937], "folien": [191, 200, 208, 1184], "freitag": [191, 1185], "kerneldrivertag": 191, "sorri": [191, 197, 877], "emanuel": 191, "beispieldriv": 191, "han": 191, "angeboten": [191, 1184], "promin": [191, 752, 834], "implementiert": [191, 206, 237, 1194, 1208], "gute": [191, 208, 1194, 1201], "anfang": [191, 192, 200, 351], "mcp2515": [191, 838], "angesprochen": [191, 208], "fortgeschrittener": [191, 208], "einpflegt": 191, "agiert": 191, "mcp251x": 191, "at91": 191, "soc": [191, 942, 943, 944, 978], "deinem": 191, "stecker": 191, "verbaut": 191, "at91_can": 191, "lacht": 191, "zeilenweisen": 192, "nutzdaten": [192, 245], "extrahieren": [192, 219], "wollend": [192, 1201], "spalt": 192, "offensichtlich": [192, 1188], "separiert": 192, "felder": 192, "antwort": [192, 293, 335], "stdtype": 192, "gscheitesten": 192, "aufeinanderfolgend": 192, "whitespac": [192, 253, 261, 307, 401, 1082, 1106, 1162], "nimmt": [192, 217, 229, 253, 255, 261, 293, 1187, 1200], "tupl": [192, 205, 210, 212, 214, 218, 222, 224, 230, 231, 233, 237, 240, 243, 244, 246, 247, 249, 250, 254, 256, 257, 258, 263, 266, 269, 270, 272, 282, 284, 287, 290, 291, 294, 304, 306, 308, 312, 313, 325, 328, 330, 336, 338, 340, 342, 348, 351, 355, 370, 526, 735, 790, 791, 1040, 1058, 1059, 1066, 1067, 1072, 1081, 1084, 1114, 1137, 1190], "weiss": [192, 196, 206, 325, 1203, 1208], "rauskommen": 192, "aaa": [192, 253, 265, 271, 307, 341], "tbbb": 192, "tccc": 192, "feld0": 192, "feld1": 192, "feld2": 192, "ccc": [192, 271], "optional": [192, 1187], "splittet": 192, "bearbeitet": [192, 1207], "manuel": [192, 216, 221], "ddd": 192, "eee": 192, "maxsplit": [192, 261, 307, 479], "restfield": 192, "len": [192, 193, 194, 196, 206, 216, 221, 223, 224, 229, 232, 233, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 314, 325, 329, 335, 341, 347, 351, 362, 365, 479, 834, 938, 1039, 1052, 1065, 1067, 1073, 1075, 1082, 1084, 1086, 1087, 1132, 1150, 1154, 1158, 1161], "10101010": 192, "switchnumb": 192, "rsplit": [192, 261, 307, 479, 1082], "l1": [192, 195, 206, 223, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 517], "l2": [192, 195, 206, 223, 229, 232, 237, 242, 245, 248, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "\u00e4nderung": [192, 206, 1208], "87": [192, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 1094, 1141, 1142], "zeigen": [192, 925], "dasselb": 192, "objekt": [192, 206, 216, 307], "140070310441600": 192, "ver\u00e4ndert": 192, "140070371015728": 192, "92": [192, 193, 216, 221, 223, 225, 229, 232, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375, 922, 1141, 1142], "attributeerror": [192, 206, 242, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1035, 1048, 1049, 1056], "gottseidank": 192, "alternativ": [192, 351], "aufruf": [192, 206, 212, 216, 261, 366], "paaren": 192, "keyerror": [192, 195, 206, 216, 223, 232, 242, 245, 248, 253, 255, 258, 261, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1035, 1084, 1159], "nix": [192, 193, 206, 224, 232, 253, 255, 258, 283, 303, 335, 341, 365, 555], "umstaendlich": 192, "102": [192, 206, 216, 221, 223, 229, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 375], "103": [192, 206, 216, 223, 229, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365], "104": [192, 194, 206, 216, 221, 223, 229, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1094], "106": [192, 206, 216, 221, 223, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 920], "setdefault": [192, 233, 253, 268, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1084], "107": [192, 206, 216, 221, 223, 225, 229, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 367, 466], "meinvoelligsinnlosertyp": 192, "sinnlose_addit": 192, "sinnlobj": 192, "112": [192, 206, 213, 216, 221, 223, 229, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 920], "113": [192, 206, 216, 221, 223, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 290, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 502], "__main__": [192, 196, 206, 211, 229, 232, 242, 245, 246, 248, 253, 255, 258, 261, 265, 268, 271, 274, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 370, 1036, 1039, 1043, 1049, 1057, 1165, 1171], "0x7f64a8934890": 192, "114": [192, 194, 206, 216, 223, 229, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "115": [192, 206, 216, 221, 223, 229, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "116": [192, 206, 216, 223, 229, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "nochwenigersinnvol": 192, "der_absolute_unsinn": 192, "super": [192, 208, 209, 216, 230, 232, 233, 248, 256, 259, 263, 282, 286, 297, 306, 328, 347, 516, 1033, 1035, 1052, 1137, 1144], "unsinn": 192, "uebertreibs_jetzt_bitt": 192, "117": [192, 206, 216, 223, 229, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "118": [192, 206, 216, 223, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 920, 1094], "0x7f64a894a790": 192, "119": [192, 206, 216, 223, 225, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 367], "121": [192, 194, 206, 216, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "1335": 192, "122": [192, 194, 206, 216, 221, 223, 229, 232, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1014], "819508": 192, "123": [192, 206, 216, 223, 224, 229, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 412, 937, 1094, 1101, 1171], "uptim": 192, "timedelta": [192, 211, 238, 240, 293], "358": [192, 248, 293, 307, 325, 335, 341, 351, 473], "125": [192, 216, 221, 223, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 937], "irgendwann_einmal_gewesen": 192, "834972": 192, "126": [192, 206, 216, 221, 223, 229, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "datetime_from_batteri": 192, "840837": 192, "127": [192, 206, 216, 221, 223, 229, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 953, 961], "846889": 192, "woher": [192, 255], "ausschauen": 192, "sinnlo": [192, 255], "sinnlos": [192, 229, 307], "repraesent": 192, "129": [192, 206, 216, 223, 225, 232, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 367], "130": [192, 206, 216, 223, 238, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 695, 811, 1080], "completedprocess": [192, 261, 271], "returncod": [192, 261, 271], "erfolgreich": 192, "beendet": [192, 1206], "schau": 192, "du": [192, 206, 261, 268, 274, 961, 966], "verwendest": 192, "anzuzeigen": [192, 347], "cell": [192, 205, 352, 935, 1033, 1034, 1035, 1040, 1048, 1049, 1055, 1056, 1060, 1077, 1078, 1082, 1142, 1158, 1159], "gesendet": 192, "ausf\u00fchrt": 192, "krieg": 192, "131": [192, 206, 216, 223, 232, 238, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 745], "capture_output": [192, 271], "ndrwxrwxr": [192, 271], "mar": [192, 261, 412, 865, 866, 869, 883, 895, 917, 920, 922, 946, 960, 970, 1012, 1015, 1024], "2607": 192, "33768": 192, "ndrwxr": 192, "xr": [192, 490, 865, 866, 883, 885, 886, 894, 895, 920, 935, 942, 943, 944, 1012, 1024, 1026, 1027, 1063], "switchzeug": 192, "keiner": [192, 206, 325, 1189], "seinen": [192, 206], "formuliert": [192, 200], "logisch": [192, 216], "irgendwa": [192, 238, 253, 255], "konverti": 192, "musst": 192, "dich": 192, "festlegen": 192, "133": [192, 206, 216, 223, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "stdout_as_utf8": 192, "utf": [192, 233, 242, 245, 246, 248, 252, 258, 261, 271, 293, 307, 313, 325, 329, 335, 341, 347, 1067, 1086, 1134], "134": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 754], "135": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "drwxrwxr": [192, 271, 920, 978, 1013, 1014, 1015, 1024, 1026], "drwxr": [192, 865, 866, 883, 920, 935, 942, 943, 944, 1024, 1026], "136": [192, 194, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 491], "fuer": [192, 253, 258, 265], "listdir": [192, 299, 303, 335, 341, 352, 377, 479], "ipynb_checkpoint": [192, 271, 335], "gitignor": [192, 480, 1014], "137": [192, 203, 206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "rekurs": 192, "iterieren": [192, 196, 206, 221, 229], "dirpath": 192, "dirnam": [192, 245, 248, 299, 479, 554, 789, 1170], "checkpoint": [192, 242, 248, 258, 261], "itg": 192, "scope": [192, 200, 206, 217, 218, 221, 252, 264, 277, 278, 280, 289, 301, 312, 323, 327, 328, 333, 334, 337, 339, 340, 345, 346, 349, 350, 370, 407, 413, 517, 567, 587, 600, 602, 611, 696, 737, 749, 752, 767, 768, 790, 791, 1034, 1079, 1190, 1200, 1204], "getter": [192, 608, 656], "setter": [192, 232, 1056], "fibo": [192, 193, 212, 232, 246, 723, 725, 1039], "listcomprehens": 192, "generatorexpress": [192, 193], "switchdb": 192, "schema": [192, 273, 597, 1093], "michi": 192, "pyexec": 192, "ifadminstatu": 192, "ifdescr": 192, "iflastchang": 192, "snmpenginetim": 192, "ifoperstatu": 192, "fein": [192, 216], "helferlein": 192, "hochtrabend": 192, "nennt": 192, "funktional": 192, "138": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1094], "139": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "140": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 303, 307, 313, 325, 329, 335, 341, 347, 351, 695], "l_quadrat": 192, "141": [192, 206, 216, 223, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 412, 920], "kompliziert": [192, 206, 258, 261, 283, 1185, 1204], "anm": 192, "versionen": [192, 262], "aufgebaut": 192, "rausnehmen": 192, "konfigurationsfil": 192, "configpars": 192, "142": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 290, 303, 307, 313, 325, 329, 335, 341, 347, 351, 955, 1000], "143": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "liste_als_str": 192, "144": [192, 206, 216, 223, 232, 239, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 491], "145": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1155], "herbert": 192, "146": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "heraussen": 192, "147": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 873], "148": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 614], "149": [192, 206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "151": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 377], "152": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 377, 1159], "mein_dict": 192, "gerhard": 192, "175": [192, 206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 307, 313, 325, 329, 335, 341, 347, 351], "154": [192, 206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 920], "dict_as_json_str": 192, "155": [192, 206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 377], "gelesenes_dict_von_json": 192, "nahm": 193, "woch": [193, 213, 388, 389, 1185], "anspruch": 193, "platz": 193, "gesammelten": 193, "notizen": 193, "schnell": [193, 196, 216, 237, 262, 1188], "sachen": [193, 219], "is_prim": [193, 216, 219, 224, 1116], "divisor": [193, 224, 351, 789, 1108], "unmodifi": [193, 206, 242, 253, 500, 551, 597, 611, 942, 944, 1035, 1048, 1119], "randomnumb": 193, "howmani": 193, "randrang": [193, 221, 245, 253, 255, 258, 261, 265, 268, 271, 293, 335, 341, 347, 351, 365, 1036, 1071], "prev": [193, 828], "cur": [193, 313, 417], "fibonum": 193, "tend": [193, 292, 295, 302, 467, 811, 877, 1027], "input_list_str": 193, "input_list": [193, 268, 1119], "__n": [193, 789], "__lt__": [193, 255, 258, 261, 265, 283, 286, 307, 325, 347], "rh": [193, 242, 246, 261, 351, 405, 447, 463, 517, 531, 597, 611, 613, 737], "__le__": [193, 255, 258, 261, 265, 283, 286, 307, 325, 347, 1055], "__eq__": [193, 255, 258, 261, 265, 283, 286, 307, 325, 347, 1055], "__iadd__": 193, "iadd": 193, "__add__": [193, 258, 261, 265, 283, 307, 325, 347, 1055], "new_numb": [193, 248], "__radd__": [193, 258, 265, 283, 347, 1055], "radd": 193, "lh": [193, 242, 246, 351, 405, 447, 463, 517, 531, 587, 597, 611, 613, 737, 869], "makesnosens": 193, "__number": 193, "input_numb": 193, "numnber": 193, "list_of_squar": 193, "compehens": 193, "effort": [193, 265, 299, 460, 461, 478, 943], "local_assign": 193, "read_global_vari": 193, "enclos": [193, 261, 430], "local_shadows_glob": 193, "explicit_global_assign": 193, "creation": [193, 302, 324, 761, 763, 768, 790, 791, 897, 934, 964, 975, 980, 989, 995, 1006, 1015, 1077, 1086, 1087, 1172], "captur": [193, 276, 277, 278, 280, 300, 337, 338, 355, 370, 735, 736, 739, 790, 791, 935, 1031, 1190], "create_funct": 193, "inner_funct": 193, "whic": 193, "f_one": 193, "f_two": 193, "launch": [193, 209], "discov": [193, 205, 212], "area": [193, 202, 235, 265, 834, 943, 1201, 1207], "scikit": [194, 196, 243, 352, 1172], "manipul": [194, 482, 631, 754, 789, 836, 942, 955, 964, 999, 1011, 1074, 1093], "appreci": [194, 245, 877, 1094], "beauti": [194, 208, 209, 212, 230, 232, 233, 240, 251, 255, 256, 259, 265, 282, 306, 370, 443, 573, 631, 980, 1037, 1086, 1094, 1137], "spectral": [194, 1139], "mat": 194, "scipi": [194, 196, 224, 243, 1172], "loadmat": [194, 196], "sklearn": [194, 196, 351, 1140, 1142, 1172], "pixel": [194, 351], "rgb": [194, 196, 351, 379], "dimens": [194, 196, 1142, 1193], "xkcd": 194, "schafer": [194, 205, 208, 209, 212, 230, 233, 240, 243, 246, 256, 259, 270, 273, 282, 306, 312, 340, 370, 375, 1137, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173], "keith": [194, 205, 209, 230, 243, 256, 270, 273, 306, 312, 1137], "galli": [194, 205, 209, 230, 243, 256, 270, 273, 306, 312, 1137], "sci": 194, "kit": [194, 379], "spyder": [194, 205, 1060], "pycharm": [194, 205, 299, 1060], "retain": [194, 436, 1078], "invoc": [194, 517], "comparison": [194, 211, 234, 248, 251, 261, 269, 307, 412, 416, 422, 573, 737, 1069, 1112], "misfeatur": 194, "png": [194, 196, 341, 351, 486, 1014, 1139], "imgfil": 194, "veggi": [194, 196, 351, 1139], "pillow": [194, 196], "welcom": 194, "cooper": [194, 762], "477x686": 194, "imgarrai": [194, 196], "ndim": [194, 1142], "477": [194, 248, 293, 341, 351], "dtype": [194, 196, 290, 293, 297, 329, 335, 347, 351, 1142, 1155, 1156, 1158, 1159, 1160, 1161], "uint8": [194, 351], "255": [194, 229, 245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 991], "172": [194, 206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 462], "nrow": [194, 196], "ncol": [194, 196], "reshap": [194, 196, 230, 243, 256, 270, 273, 306, 312, 351, 1137, 1140, 1142], "irrelev": [194, 211, 216, 249, 412, 454, 477, 883, 1067, 1150], "colorspac": 194, "mpl_toolkit": 194, "mplot3d": 194, "axes3d": 194, "pyplot": [194, 223, 242, 271, 274, 325, 329, 335, 347, 1032, 1091, 1142], "plt": [194, 223, 242, 271, 274, 325, 329, 335, 347, 1032, 1091, 1142], "fig": 194, "add_subplot": 194, "set_xlabel": 194, "set_ylabel": 194, "set_zlabel": 194, "ndindex": 194, "scatter": [194, 809], "rgb_linear": [194, 351], "n_cluster": [194, 196, 351], "copy_x": 194, "max_it": 194, "n_init": 194, "n_job": 194, "precompute_dist": 194, "random_st": [194, 1140, 1142], "tol": 194, "verbos": [194, 201, 482, 755, 864, 898, 900, 1071, 1165], "cluster_cent": 194, "int32": [194, 351, 463], "327222": 194, "cluster_centers_": [194, 196, 351], "20529747": 194, "50360681": 194, "3796182": 194, "94408609": 194, "75471018": 194, "53133237": 194, "226": [194, 206, 225, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351, 367], "64913628": 194, "76939951": 194, "92569235": 194, "71464963": 194, "47333306": 194, "60640492": 194, "8888303": 194, "92275244": 194, "84313209": 194, "157": [194, 206, 216, 223, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "30685398": 194, "43988931": 194, "03959132": 194, "225": [194, 206, 245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 307, 313, 329, 335, 341, 347, 351, 486, 1094], "55934051": 194, "182": [194, 206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "98255893": 194, "3232048": 194, "241": [194, 245, 248, 253, 255, 258, 261, 268, 271, 286, 303, 307, 313, 329, 341, 347, 351, 1094], "37322907": 194, "159": [194, 206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "54158234": 194, "51775529": 194, "idx": [194, 196, 261, 347, 351], "cube": [194, 351], "concaten": [194, 196, 233, 245, 246, 253, 261, 307, 335, 351, 364, 412, 478, 923, 1072, 1080], "axi": [194, 196, 297, 351, 1158, 1159], "reduced_img": [194, 196, 351], "fromarrai": [194, 196, 351], "float": [195, 206, 210, 212, 214, 216, 223, 224, 229, 232, 242, 245, 246, 248, 251, 253, 255, 258, 261, 266, 269, 283, 286, 291, 303, 307, 313, 324, 326, 329, 335, 341, 347, 351, 365, 366, 393, 394, 395, 399, 409, 411, 412, 416, 446, 455, 460, 479, 507, 516, 622, 623, 712, 771, 942, 1000, 1010, 1048, 1066, 1081, 1088, 1094, 1187, 1191], "franziska": [195, 196], "baseexcept": [195, 232, 261, 265, 286, 1035], "callabl": [195, 209, 245, 258, 268, 271, 286, 293, 303, 307, 314, 341, 695, 737, 759, 767, 1049, 1050, 1087], "rescu": [195, 253, 610, 631, 753, 755, 838, 1033], "pooh": [195, 623], "hex": [195, 206, 216, 223, 238, 248, 258, 271, 283, 286, 293, 303, 313, 329, 335, 341, 351, 365, 381, 554, 944, 1081], "0x7f03d41165f0": 195, "nonexist": 195, "react": [195, 210, 212, 214, 315, 331, 459, 620, 942, 959, 1035, 1192], "ensu": 195, "catch": [195, 235, 251, 274, 300, 355, 381, 497, 504, 526, 543, 560, 562, 595, 621, 624, 640, 646, 650, 655, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 723, 731, 769, 771, 789, 791, 1010], "jessa": [195, 216, 223, 245, 274, 325], "verdammt": [195, 370], "ipython": [195, 232, 242, 248, 258, 261, 286, 303, 341, 920], "bd3a1af9b474": 195, "issubclass": [195, 232, 248, 261, 286], "bummer": [195, 248, 769, 1080], "peter": [195, 218, 255, 265, 361, 362, 1073], "paul": [195, 361, 362, 1073], "mari": [195, 1073], "pet": 195, "perfectli": [195, 251], "bloh": [195, 232], "blech": [195, 303, 708, 1153], "range_iter": [195, 206, 221, 238, 245, 253, 255, 258, 261, 271, 283, 286, 293, 303, 351], "0x7f03d402e570": 195, "stopiter": [195, 206, 221, 232, 238, 242, 245, 248, 253, 255, 258, 261, 265, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 723, 731, 1035, 1040], "beantwortung": [196, 388], "herrschaft": [196, 388], "schulungsr\u00e4umen": [196, 388], "platzhirsch": [196, 388], "schlagen": [196, 388], "spass": [196, 388, 1194, 1196, 1201], "unglaublich": [196, 388], "lustig": [196, 217, 388, 1185, 1196], "vermittelt": [196, 388, 1206], "gelernt": [196, 388, 1194], "anwend": [196, 388], "beachten": [196, 217, 388, 1200], "zudem": [196, 388], "kursleit": [196, 388], "sympathisch": [196, 388], "kompet": [196, 388], "w\u00fcrde": [196, 206, 388], "weiterempfehlen": [196, 388], "christoph": [196, 238, 388], "jemand": [196, 388], "lassen": [196, 206, 217, 388, 1188, 1194, 1200, 1204, 1208], "bevor": [196, 1194, 1201, 1208], "anf\u00e4ngerthemen": 196, "vorbei": [196, 255, 261, 1197], "herumzureiten": 196, "gehackt": [196, 236], "zeug": [196, 325, 1203], "chef": 196, "vorgespr\u00e4ch": 196, "\u00fcbungsbeispiel": [196, 206], "mitgegeben": 196, "ausgehend": [196, 217, 388], "spektralbild": 196, "sagt": [196, 253], "verwend": [196, 229, 388], "clusteringalgorithmu": 196, "kategorisieren": 196, "abgebildeten": 196, "st\u00fccke": [196, 200], "erkennen": [196, 1189], "hab": 196, "erlaubt": [196, 206, 1185], "kursvorbereitung": 196, "appet": 196, "reduzieren": 196, "farbredukt": 196, "farben": 196, "bilddaten": 196, "interoperiert": 196, "nahtlo": [196, 1194, 1201], "zufal": [196, 222, 1188], "alpha": [196, 261, 307, 351, 1092], "ausgangsbild": 196, "abzuschneiden": 196, "restoren": 196, "algorithmu": [196, 216, 261, 265, 268], "reduc": [196, 351, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 495, 697, 735, 788, 790, 791, 944, 1139], "acht": [196, 216, 217, 261, 293, 313, 341, 1200], "\u00fcberschaubar": 196, "ausdrucksst\u00e4rk": 196, "bemerkbar": 196, "wegschneiden": 196, "pil": [196, 351], "kmean": [196, 351], "nrgba": 196, "disregard": [196, 416], "arbitrarili": [196, 797, 970, 974, 1033], "linear_rgb": 196, "rgba": 196, "ergeben": 196, "testprogramm": 196, "imndata": 196, "teilzeitmitarbeiterin": 196, "studiert": 196, "folgendem": [196, 238, 1208], "bekackten": 196, "inputformat": 196, "parsen": [196, 221], "zwischendurch": 196, "gruppenarbeit": 196, "h2o": 196, "dat": 196, "mass": [196, 302], "0000000e": 196, "2662399e": 196, "5994910e": 196, "4391972e": 196, "0048070e": 196, "0078250e": 196, "hessian": 196, "hartre": 196, "bohr": 196, "kamu": 196, "05054e": 196, "61610e": 196, "00000e": 196, "20781e": 196, "08051e": 196, "83024e": 196, "06829e": 196, "42629e": 196, "65256e": 196, "52600e": 196, "69570e": 196, "91733e": 196, "04388e": 196, "34292e": 196, "04780e": 196, "63758e": 196, "19019e": 196, "41217e": 196, "11622e": 196, "21912e": 196, "11752e": 196, "04198e": 196, "36702e": 196, "14839e": 196, "71613e": 196, "96373e": 196, "40456e": 196, "21369e": 196, "24236e": 196, "60956e": 196, "84350e": 196, "29686e": 196, "92365e": 196, "einigen": [196, 217, 388], "runden": [196, 206], "nachdenken": 196, "einigerma\u00dfen": 196, "zufrieden": 196, "load_dat": 196, "matrix_lin": 196, "vergeigt": 196, "matrix_el": 196, "unnecessari": [196, 407, 437], "triangular": 196, "max": [196, 206, 224, 229, 242, 248, 251, 253, 255, 258, 263, 268, 286, 340, 341, 351, 421, 437, 573, 622, 875, 936, 1142], "row_no": 196, "__name__": [196, 232, 233, 246, 255, 261, 265, 286, 303, 307, 363, 370, 1034, 1036, 1039, 1043], "bildverarbeitung": 196, "ahnung": [196, 238], "beeeeeep": 197, "broad": [197, 496, 1144, 1190, 1191], "histori": [197, 233, 251, 277, 278, 280, 282, 328, 337, 338, 416, 693, 697, 699, 735, 788, 790, 791, 797, 840, 869, 875, 926, 1137, 1143, 1149, 1192, 1196, 1203], "responsibl": [197, 997, 1170], "sane": [197, 341, 381, 875, 1145, 1170], "interfer": [197, 467, 480, 943], "paradigm": [197, 874, 882, 935, 943, 1205], "breakag": [197, 818], "nontrivi": [197, 205, 209, 372, 1060, 1164], "inappropri": [197, 394, 399, 500, 796], "conclus": [197, 205, 212, 836], "awkward": 197, "encourag": [197, 797], "hear": 197, "predat": [197, 801, 927, 1006], "doubt": [197, 242, 248, 258, 261, 265, 754, 1067], "schulungsbeschreibung": [198, 1184], "drehbuch": 198, "workshop": 198, "infolgedessen": 198, "virtuel": [198, 262, 1194, 1204, 1205], "konzipiert": [198, 208, 388], "add_subdirectori": [199, 487, 491, 1004, 1179], "group1": 199, "group2": 199, "montag": [200, 208, 209, 230, 234, 1185], "vorbereitung": [200, 388, 1187], "mitbringen": 200, "teilzunehmen": 200, "stattfinden": [200, 276], "folgt": 200, "hierzu": 200, "privatheitsrichtlinien": 200, "bauanleitung": 200, "ausprobieren": 200, "willkommen": 200, "schulungsbeschreibungen": 200, "raii": [200, 302, 595, 791], "stl": [200, 379, 443, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 595, 596, 634, 638, 660, 662, 663, 677, 692, 703, 791, 1189, 1190, 1191], "scott": [200, 702, 757], "meyer": [200, 505, 757], "primer": [200, 1177], "sonstig": 200, "argh": [200, 438, 689, 717, 1035, 1165, 1177], "kursanforderung": 200, "erg\u00e4nzend": 200, "lasst": 200, "testgetrieben": 200, "testcas": [200, 1171], "aufgab": [200, 206, 236, 1197], "hacken": 200, "diskutieren": 200, "niederschrift": 200, "geschehenen": 200, "geh\u00f6renden": 200, "privaten": 200, "verl\u00e4uft": 200, "ansehen": 200, "clonen": 200, "wann": [200, 208], "zugeh\u00f6rigen": 200, "entspricht": 200, "unbetr\u00e4chtlich": 200, "gcc5": 200, "laufen": [200, 1185], "darau": [200, 208], "installationsanleitung": 200, "benutzung": [200, 370, 375], "zuerst": [200, 1208], "aggreg": [200, 468, 479, 597, 850, 1155, 1177], "klassen": [200, 206, 212, 371, 1189], "konstruktoren": [200, 224, 276, 371, 1189], "methoden": [200, 206, 218, 365, 1189], "referenzen": [200, 206, 217, 218, 276, 1189, 1200], "klass": [200, 229, 325], "\u00e4quival": 200, "\u00fcbergab": 200, "langsam": [200, 206, 255], "ausbauen": 200, "dynmem": 200, "demonstrieren": 200, "alloziert": [200, 206, 223], "konstruktor": 200, "destruktor": 200, "vermeiden": [200, 206, 1206], "dtor": [200, 495, 581, 667, 672, 703, 706, 740], "ausflug": [200, 216, 257], "capac": [200, 648], "\u00fcbung": [200, 217, 218, 1200], "handgestrickt": 200, "fallen": [200, 1188, 1189], "lustvol": 200, "erleiden": 200, "teufel": [200, 1188], "smart": [200, 276, 298, 337, 371, 372, 373, 388, 477, 554, 664, 704, 705, 735, 755, 760, 768, 776, 788, 790, 791, 1190, 1193], "shared_ptr": [200, 235, 251, 277, 278, 280, 298, 300, 337, 338, 509, 573, 664, 695, 704, 735, 750, 756, 757, 760, 768, 788, 790, 791, 1190], "unique_ptr": [200, 235, 251, 277, 278, 280, 298, 300, 337, 338, 495, 502, 509, 535, 536, 573, 664, 703, 704, 735, 750, 753, 760, 768, 787, 788, 789, 790, 791, 1190], "demonstriert": 200, "vorgriff": 200, "sortieren": [200, 1189], "employeerecord": 200, "parametrisierbarem": 200, "koordinatentyp": 200, "102ff": 200, "arten": [200, 1187], "containern": 200, "pointerarithmetik": 200, "iteratoren": [200, 263], "laufzeitverhalten": [200, 218], "verbesserungen": 200, "gegen\u00fcb": [200, 1187], "6ff": 200, "lambda": [200, 232, 233, 246, 248, 251, 263, 276, 283, 300, 303, 308, 325, 329, 341, 479, 573, 638, 710, 735, 740, 745, 747, 759, 762, 767, 790, 791, 1031, 1189, 1190, 1191], "gegen\u00fcberstellung": 200, "sort_algorithm_reverse_lambda": 200, "vererbung": [200, 1189], "fallstudi": 200, "livegehackt": 200, "angebunden": 200, "komplex": [200, 253, 255, 261, 268, 293, 1206], "aufbauen": 200, "vergleichbaren": 200, "anbinden": 200, "wurden": [200, 208], "eigen": [200, 219, 1189, 1194, 1201, 1206, 1207], "kapitel": [200, 370, 375, 1187], "behandelt": [200, 1184], "vorbeigehen": 200, "dcmake_cxx_flag": 201, "dcmake_install_prefix": [201, 485], "libgtest": [201, 202, 298, 300, 1177, 1179], "claim": [201, 405, 614, 616, 617, 873, 966], "simlp": 201, "concret": [201, 209, 235, 298, 495, 502, 507, 522, 584, 670, 672, 767, 775, 1048, 1144], "find_packag": [201, 203, 1179], "add_execut": [201, 480, 486, 492, 538, 574, 577, 580, 583, 586, 589, 592, 686, 1001, 1008, 1013, 1014, 1176, 1179, 1181], "add_test": [201, 493, 577, 1176, 1179], "emphasi": 201, "ultim": [201, 232, 252, 605, 770, 943], "luke": [201, 261, 1179], "thetoplevel": 201, "findgtest": [201, 203, 1179], "gtest_root": 201, "dgtest_root": 201, "paranoidli": 201, "bitrot": [202, 1179], "var": [202, 206, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 531, 838, 870, 900, 920, 925, 926, 929, 1026], "libgmock": [202, 298, 300], "gmock": [202, 1177], "dcmake_build_typ": [202, 482], "loudli": [202, 605, 841, 951], "appstream": [203, 341], "visualstudio": [203, 262, 390], "flatpakref": 203, "stone": 203, "snap": 203, "hate": [203, 599], "findpackagehandlestandardarg": 203, "gtest_librari": 203, "gtest_include_dir": 203, "gtest_main_librari": 203, "378": [203, 245, 248, 255, 293, 335, 341, 351, 1094], "_fphsa_failure_messag": 203, "197": [203, 206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "find_package_handle_standard_arg": 203, "gessmann": 203, "cpoint_demo": 203, "cmakefil": [203, 480, 486, 491, 1013, 1014], "cmakeoutput": 203, "sigh": [203, 235, 554, 757, 1128], "jail": 203, "dict_extensions_suit": 204, "thing_suit": 204, "xsv": 204, "dict_extens": 204, "wednesdai": [205, 213, 295], "thursdai": [205, 209], "publicli": [205, 587], "freedom": [205, 467, 673], "spontan": 205, "cost": 205, "agil": [205, 219, 477, 1164], "methodologi": 205, "formul": [205, 301, 479, 712, 770, 961, 1193], "diadact": [205, 1060], "anaconda": [205, 299, 341, 1060], "dictat": [205, 315, 331, 416, 455, 1006, 1060, 1061, 1146, 1163, 1165, 1192], "volumin": [205, 1060], "nodepad": [205, 1060], "configurabilti": [205, 1163], "eclips": [205, 1060, 1153], "pydev": [205, 1060], "seemingli": [205, 209, 1012, 1060, 1137], "strang": [205, 942, 1060], "emac": [205, 225, 303, 354, 898, 920, 1012, 1060, 1163], "immutabilii": 205, "crisi": 205, "slept": 205, "lunch": 205, "squeez": 205, "Such": [205, 284, 1012, 1170], "takeawai": 205, "nonverb": 205, "antenna": 205, "Being": [205, 881, 922, 944, 1076], "stubborn": 205, "greybeard": 205, "distutil": 205, "azur": 205, "devop": [205, 1059], "heavyweight": [205, 376, 759], "reach": [205, 253, 679, 754, 777, 779, 797, 802, 869, 970, 1081], "afternoon": [205, 328], "simplic": [205, 517, 869, 936, 959, 1033], "paral": 205, "imposs": [205, 265, 463, 499, 723, 734, 836, 988], "expand": [205, 261, 307, 437, 438, 941, 970, 1012, 1014], "entertain": [205, 209, 230, 233, 256, 282, 306, 328, 1137], "david": [66, 205, 208, 209, 217, 230, 233, 256, 282, 297, 301, 302, 306, 323, 327, 328, 371, 372, 703, 752], "beazlei": [66, 205, 208, 209, 217, 230, 233, 256, 282, 301, 302, 306, 323, 327, 328, 371, 372], "freelanc": 205, "raymond": [205, 208, 209, 212, 216, 217, 230, 233, 240, 256, 259, 282, 306, 328], "hetting": [205, 208, 209, 212, 216, 217, 230, 233, 240, 256, 259, 282, 306, 328], "bias": 205, "humor": [205, 942, 1081], "emphas": [205, 212, 234, 590, 793, 801, 818, 1165], "hehe": [205, 212], "dissect": [205, 209, 297, 740, 1040, 1137], "multiprocess": [205, 209, 259, 301, 302, 328, 1137, 1194, 1201, 1205], "truli": [205, 209, 1137], "chri": [205, 209, 230, 1137], "wilcox": [205, 209, 230, 1137], "frontier": [205, 209, 282, 306, 328, 1137], "whop": [205, 209, 282, 306, 328, 1027, 1137, 1144], "covid": 205, "apart": [205, 265, 302, 430, 696, 936, 1038], "ipykernel_launch": [206, 258, 261, 341], "57bd7d77": 206, "6e54": 206, "4dcd": 206, "b7a8": 206, "452f82f88569": 206, "welt": [206, 216, 229, 365, 388, 1185, 1206], "doku": [206, 216, 283], "aeh": 206, "__doc__": [206, 229, 232, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 307, 325, 329, 335, 341, 347, 363, 365, 1036, 1064, 1087], "interaktiven": 206, "modu": 206, "formatierung": [206, 216, 276], "\u00fcbernimmt": 206, "nachdem": [206, 216], "hamma": 206, "bieten": [206, 1204], "sech": [206, 216, 229, 261, 268, 293, 307], "zurueck": [206, 265, 303], "objektidentit\u00e4t": [206, 224], "0x7fe9d8578dc0": 206, "referenzieren": 206, "wechselt": 206, "zeigt": [206, 216, 1201], "identit\u00e4t": 206, "0x7fe9c4454d90": 206, "listen": [206, 212, 217, 218, 222, 257, 276, 329, 370, 822, 937, 953, 1153, 1200, 1205, 1207], "ausdrucksstark": 206, "trotzdem": [206, 1194, 1201], "lesbar": [206, 255], "beid": [206, 221, 237, 341, 1208], "modifizieren": 206, "modifik": 206, "sichtbar": [206, 388], "gerechnet": 206, "typeerror": [206, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 325, 329, 335, 341, 347, 364, 1034, 1035, 1048, 1055, 1078, 1087, 1158, 1159], "gel\u00f6scht": 206, "retten": 206, "uff": 206, "140641996429568": 206, "\u00e4ndern": [206, 218, 1208], "erzeugt": [206, 216], "operanden": 206, "unver\u00e4ndert": 206, "new_l": [206, 261, 1068], "140641996429632": 206, "hurra": [206, 223, 286], "killerfeatur": 206, "abcabc": [206, 245], "sequentiel": [206, 216, 255, 260, 1189], "suche": 206, "Suche": [206, 218, 229, 237, 255], "umst\u00e4ndlich": [206, 216], "andrea": [206, 207, 265, 716, 723], "pfeifer": 206, "gefundener_us": 206, "glauben": 206, "klammern": 206, "begrenz": 206, "interpretiert": 206, "overriden": 206, "ausdruck": 206, "evaluierungsreihenfolg": 206, "9223372036854775808": 206, "einstellig": 206, "schreibt": [206, 926, 1208], "datenmengen": 206, "abzulegen": 206, "sucht": 206, "vorstellungsvermoegen": 206, "milliarden": 206, "sebastian": 206, "hugo": [206, 248], "machma": 206, "behandeln": 206, "nichtvorhandensein": 206, "ausnahm": 206, "regel": 206, "mim": 206, "victor": 206, "festzustellen": 206, "evaluiert": 206, "aufgerufen": 206, "operand": [206, 223, 242, 245, 271, 414, 415, 416, 422, 613, 614, 616, 617, 712, 745, 1055, 1069], "bereit": [206, 217, 1184, 1189, 1200], "gesamtergebni": 206, "jaja": [206, 261], "rechten": 206, "sparen": 206, "potschert": [206, 218, 221, 224, 248, 255, 268, 335, 347], "berechnung": [206, 255], "summ": [206, 229, 255, 261, 265, 268, 293, 318, 341, 347, 351], "einzig": [206, 523, 537, 1203, 1206], "iteriert": [206, 216], "bildet": [206, 261], "primitiveren": 206, "intelligenteren": 206, "0x7fe9c43c3c90": 206, "letzt": [206, 221, 266], "schleif": [206, 217, 218, 222, 1200], "jede": [206, 370, 375, 1184, 1207, 1208], "selb": [206, 216], "k\u00fcrzer": 206, "vergleicht": 206, "objektidentit\u00e4ten": 206, "objektinhalt": 206, "modifiziert": 206, "kopieren": [206, 370, 375, 1189], "vermeintlich": 206, "modifiktionen": 206, "sch\u00fctzen": 206, "l3": [206, 223, 255, 261, 271, 283, 293, 303, 313, 335, 517], "kopi": [206, 255], "klar": [206, 216, 1185], "geschachtelt": [206, 217, 218, 1200], "gleicher": 206, "referenziert": [206, 216], "erachtet": 206, "ersparst": 206, "kopien": 206, "ran": [206, 278, 328, 485, 502, 551, 552, 553, 554, 615, 754, 1029, 1177], "parametern": [206, 229], "beliebigen": [206, 926], "definieren": 206, "unterst\u00fctzen": 206, "ihn": [206, 265], "\u00e4pfel": 206, "birnen": 206, "verglichen": 206, "hingegen": [206, 216, 1203], "php": [206, 236, 252, 757], "falschem": 206, "uebergeben": 206, "vergleich": [206, 229, 237, 266, 276], "aepfeln": 206, "140641996137808": 206, "add_to_list": 206, "__defaults__": [206, 255, 265, 286, 307, 1078], "meine_list": [206, 216], "defaultwert": 206, "benutzt": [206, 1194], "allerhand": 206, "seiteneffekten": 206, "aufpassen": 206, "ewig": 206, "existierend": 206, "unf\u00e4ll": 206, "wechselwirkungen": 206, "eventuellen": 206, "globalen": [206, 216], "156": [206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "erzwingt": 206, "158": [206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 290, 303, 307, 313, 325, 329, 335, 341, 347, 351], "160": [206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 283, 286, 297, 303, 307, 313, 325, 329, 335, 341, 347, 351, 484, 791], "gesucht": 206, "genauer": 206, "n\u00e4chst\u00e4u\u00dferen": 206, "162": [206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "nirgend": 206, "163": [206, 216, 223, 239, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "gibtsnetglob": 206, "gibtsnet": 206, "164": [206, 216, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "nameerror": [206, 221, 255, 261, 286, 307, 313, 341, 347, 1035, 1077], "aufgabenstellung": 206, "kandidat": 206, "ersten": [206, 208, 221, 313, 362, 1186, 1206, 1208], "unsportlich": 206, "zweiten": [206, 208, 313], "unnachhaltig": 206, "dritten": [206, 313], "gelegenheit": 206, "gab": [206, 208], "erz\u00e4hlen": [206, 1187], "165": [206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1094], "seq": [206, 224, 286, 341, 351, 828, 1000, 1038], "fromkei": [206, 252, 257, 269, 341], "166": [206, 216, 223, 245, 248, 253, 255, 261, 265, 268, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "167": [206, 216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "xxx": [206, 223, 245, 253, 255, 261, 271, 293, 325, 329, 335, 341, 347, 364, 366, 446, 522], "kksvjhbsk": 206, "sgkysdudsvvc": 206, "dict_kei": [206, 274, 303, 1084], "diesmal": 206, "169": [206, 216, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "170": [206, 223, 232, 239, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "irgendein": [206, 238], "171": [206, 223, 225, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 367], "sonst": [206, 216, 253, 255, 268], "kategori": 206, "number_str": 206, "173": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 929], "ihm": [206, 208, 217], "174": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 920], "176": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 307, 313, 325, 329, 335, 341, 347, 351], "177": [206, 223, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "178": [206, 223, 232, 245, 248, 253, 255, 261, 265, 268, 274, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "179": [206, 213, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "180": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 479, 822], "181": [206, 223, 245, 248, 253, 255, 261, 265, 268, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 479, 1159], "heisst": [206, 218, 222, 223, 1188, 1194], "sequenz": 206, "kopiert": 206, "unterschi": [206, 223, 229, 253], "sobald": [206, 208], "183": [206, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "\u00fcbergeben": 206, "184": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "it1": 206, "it2": 206, "multipli": [206, 233, 246, 265, 307, 702], "n2": [206, 265], "combined_iter": 206, "186": [206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "schlecht": 206, "simplen": 206, "transformationen": 206, "generieren": 206, "quadratzahlen": [206, 255], "187": [206, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "quadrat": 206, "naeherung": 206, "performant": 206, "gen_squar": 206, "189": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 303, 307, 313, 325, 329, 341, 347, 351], "syntaktisch": [206, 229], "191": [206, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 274, 283, 286, 303, 307, 313, 325, 329, 341, 347, 351], "genexpr": [206, 232, 325, 335, 341], "0x7fe9c43f2900": 206, "193": [206, 223, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "194": [206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351], "195": [206, 223, 245, 248, 253, 255, 258, 261, 265, 268, 274, 286, 307, 313, 325, 329, 335, 341, 347, 351], "indent": [206, 221, 239, 246, 252, 261, 262, 425, 1058, 1061, 1071, 1162], "196": [206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "userlist": 206, "nochwa": [206, 255, 293, 351], "dropdown": 206, "dropdownlist": 206, "fehleranf\u00e4llig": 206, "198": [206, 223, 232, 245, 248, 253, 255, 258, 261, 265, 268, 274, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "202": [206, 223, 232, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 307, 313, 325, 329, 341, 347, 351, 479, 502], "203": [206, 223, 232, 234, 245, 248, 253, 255, 258, 261, 265, 268, 283, 286, 307, 313, 325, 329, 335, 341, 347, 351], "205": [206, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "206": [206, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 307, 313, 325, 329, 335, 341, 347, 351], "207": [206, 232, 245, 248, 253, 255, 261, 265, 268, 271, 286, 307, 313, 329, 335, 341, 347, 351], "208": [206, 245, 248, 253, 255, 261, 265, 268, 271, 286, 307, 313, 325, 329, 335, 341, 347, 351], "209": [206, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 307, 313, 325, 329, 335, 341, 347, 351], "user_a": 206, "user_b": 206, "n\u00e4herung": 206, "nackten": [206, 1187], "210": [206, 232, 245, 248, 253, 255, 261, 265, 268, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351], "hantiert": [206, 1188], "anderem": [206, 1194, 1201], "211": [206, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 329, 335, 341, 347, 351], "reviewten": 206, "funktionsaufruf": [206, 268], "sonder": 206, "stackoverflowprogrammierung": 206, "entgegenwirken": 206, "ausholen": 206, "212": [206, 232, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 307, 313, 325, 335, 341, 347, 351], "veloc": [206, 232, 366, 1078], "length_m": [206, 232, 366, 1078], "time_": [206, 232, 366, 1078], "213": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 307, 313, 335, 341, 347, 351], "spiel": 206, "214": [206, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 307, 313, 325, 335, 341, 347, 351], "liegen": 206, "positionel": 206, "215": [206, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 307, 313, 335, 341, 347, 351], "param": [206, 216, 229, 246, 274, 307, 708, 757, 758, 943, 999], "216": [206, 232, 245, 248, 253, 255, 261, 265, 268, 283, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351], "217": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "218": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "219": [206, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 335, 341, 347, 351], "entpacken": 206, "positionellen": 206, "221": [206, 232, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "kwarg": [206, 232, 259, 261, 265, 286, 307, 1033, 1037, 1058], "explizi": 206, "rauskletzeln": 206, "223": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351, 1150], "celebrate_another_birthdai": 206, "224": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 307, 313, 329, 335, 341, 347, 351], "227": [206, 245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 335, 341, 347, 351], "228": [206, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 307, 313, 325, 335, 341, 347, 351], "zeiterfassung": 207, "__pycache__": [207, 233, 246], "supp": 207, "cpython": [207, 232, 242, 248, 258, 261], "pyc": 207, "dienstag": 208, "anleitung": 208, "offen": [208, 388, 1184], "vorwissen": [208, 1189], "konkreten": [208, 388], "aufgabenstellungen": 208, "dienstgeb": 208, "mitgebracht": 208, "quickstart": [208, 1195], "wenngleich": [208, 388, 1194, 1204, 1206, 1207], "un\u00fcblichen": 208, "reihenfolg": [208, 1185], "verbrachten": 208, "firmenprojekt": 208, "entspringenden": 208, "festgehalten": 208, "empfehlungen": 208, "weitergehen": 208, "k\u00f6nnte": [208, 1208], "idiomat": [208, 209, 212, 230, 233, 240, 256, 259, 282, 306, 1137], "lieblingsphras": 208, "bringt": [208, 1187, 1206], "forgiv": [208, 209, 306, 1137], "eafp": [208, 209, 306, 1137], "begriff": [208, 222], "viertelstund": 208, "regex": [208, 221, 246, 248, 273, 274, 283, 306, 313, 341, 1080, 1137], "unumg\u00e4nglich": [208, 1202], "textuel": 208, "analysieren": 208, "hero": [208, 209, 230, 233, 256, 282, 306, 328, 1137], "unterhaltsamen": 208, "keynot": [208, 209, 230, 233, 256, 259, 282, 306, 328, 1137], "konferenz": 208, "pydata": [208, 209, 230, 233, 256, 282, 306, 328, 1137], "chicago": [208, 209, 230, 233, 256, 282, 306, 328, 1137], "witzig": 208, "selten": 208, "l\u00e4nge": 208, "ganzen": [208, 217, 1200], "abend": 208, "totalschaden": 208, "\u00fcbertragen": 208, "jedem": 208, "angemeldet": 208, "experienc": [209, 298, 300, 327, 388, 1064, 1195], "machinelearn": 209, "fuzzi": [209, 248], "improvis": 209, "shall": 209, "jango": 209, "rush": 209, "strong": [209, 259, 415, 1144, 1146], "claus": [209, 212, 242, 248, 258, 263, 285, 717, 1038, 1071, 1074], "whet": [209, 292], "appetit": [209, 292], "__dict__": [209, 229, 232, 233, 245, 246, 255, 258, 261, 265, 274, 286, 303, 307, 325, 347, 1049, 1055], "con": [209, 775, 923, 1029], "fiction": 209, "get_temperature_celsiu": 209, "competitor": 209, "eana": 209, "get_temperature_fahrenheit": 209, "eanaadapt": 209, "unserthermomet": 209, "revisit": [209, 251, 259, 282, 300, 324, 630], "shift": [209, 250, 455, 467, 599, 648, 943, 1055], "visitor": [209, 771, 780, 782], "gang": [209, 1193], "idiom": [209, 596, 733], "classic": [209, 454, 505, 596, 776, 790, 791, 830, 1193], "travers": [209, 468, 741, 753, 1035, 1040, 1076], "convolut": 209, "__call__": [209, 255, 265, 286, 307, 313, 1034], "__str__": [209, 232, 233, 246, 255, 258, 261, 265, 283, 286, 307, 324, 325, 347, 381, 1035], "__repr__": [209, 255, 258, 261, 265, 283, 286, 307, 325, 347], "poor": [209, 251, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791, 828, 935, 965, 1010], "deleg": [209, 338, 605, 735, 790, 791, 1190], "deck": [209, 234, 573], "sensordata": 209, "sensordata_test": 209, "historydata": 209, "slowli": [209, 590, 695, 820, 935], "csvreport": 209, "csv2sqlite3": 209, "frontend": [209, 606, 1012, 1030, 1166], "flaskerl": 209, "reiter": [209, 230, 249, 251, 256, 259, 378, 607, 1137], "phrase": [209, 212, 230, 253, 255, 256, 259, 261, 286, 865, 866, 1053, 1137], "impress": [209, 453], "brought": [209, 467, 1044], "cloth": 209, "extraordinari": 209, "mondai": [210, 212, 214, 215, 240, 289, 295, 298, 300, 354], "preliminari": [210, 212, 213, 214, 215], "homogen": [210, 388], "versu": [210, 212, 214], "immut": [210, 212, 214, 216, 217, 224, 231, 233, 244, 245, 246, 248, 254, 260, 263, 269, 275, 284, 292, 294, 295, 308, 325, 329, 336, 342, 365, 437, 1059, 1066, 1067, 1068, 1072, 1200], "datastructur": [210, 234, 252, 1072], "exercise4": 210, "uh2ebfw8oym": [210, 214], "f26namfjggw": 210, "5qqq3yzbkp8": 210, "ugharkscop9uthgcoaec": 210, "pairwis": [211, 245, 612], "vale": 211, "bewar": [211, 416, 942, 1010, 1142, 1144], "simplest": [211, 273, 480, 497, 630, 637, 744, 765, 843, 873, 927, 991, 1024, 1062, 1067, 1170, 1178], "cheaper": [211, 467, 614, 616, 617, 695], "memorywis": 211, "johann": 211, "syntact": [211, 232, 424, 567, 607, 695, 747], "sugar": [211, 695, 747], "retval": [211, 463, 653, 981], "dlc": 211, "msg1": 211, "readabl": [211, 255, 265, 299, 403, 434, 438, 458, 459, 460, 467, 477, 479, 538, 652, 673, 688, 696, 699, 734, 745, 747, 753, 758, 759, 873, 883, 889, 894, 898, 920, 945, 1012, 1038, 1057, 1078, 1086, 1088, 1108], "0x7f41f5ff26a0": 211, "msglist": 211, "0x7f41f5ff4160": 211, "0x7f41f5ff41c0": 211, "291130": 211, "now_timestamp": 211, "1603884859": 211, "3412576": 211, "fromtimestamp": 211, "341258": 211, "372": [211, 248, 255, 293, 341, 351], "45259": 211, "microsecond": [211, 458, 875], "programmverweis": 212, "xy": [212, 255, 258, 293, 615, 1076], "zab": 212, "eventcodefil": 212, "definedlisaev": 212, "event_id": 212, "bla": [212, 335, 341], "blubb": 212, "verbessert": 212, "stringformatierung": 212, "ctype": 212, "headerfil": [212, 926], "lst": [212, 248, 880, 1185], "callbackfunc": 212, "datetim": [212, 233, 239, 240, 241, 246, 294, 297, 334, 335, 1094], "observ": [212, 281, 299, 355, 494, 501, 515, 518, 529, 543, 595, 791, 1041, 1042, 1149, 1193], "longish": 212, "resurrect": [212, 480, 898], "outputsequ": 212, "resist": 212, "uncondition": [212, 841, 1035], "suitabl": [212, 261, 307, 811, 935, 984, 1048, 1057], "analysi": [212, 467, 776, 1139, 1142, 1155], "cp1252": [212, 1131, 1132, 1134], "csvlog": 212, "csv_reader": 212, "recv": [212, 213, 938], "tuesdai": [213, 295, 310], "246": [213, 245, 248, 253, 255, 258, 261, 268, 286, 303, 307, 313, 335, 341, 347, 351, 1150], "corpor": [213, 286], "commandin": [213, 215], "comress": [213, 215], "gzip": [213, 215, 279, 288, 309, 310, 353, 354, 791, 838, 861, 863, 864, 868, 934, 1022, 1023, 1196], "diagnos": [213, 215, 371, 372, 1194, 1201], "netstat": [213, 215, 288, 309, 310, 353, 1153, 1194, 1201], "netcat": [213, 215, 288, 309, 310, 353], "subshel": [213, 215, 225], "telnetd": 213, "insecur": [213, 951], "proto": 213, "foreign": [213, 289, 438], "34490": 213, "56062": 213, "sshd": [213, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 870, 874, 876, 929, 945, 955], "systemctl": [213, 1026, 1153], "freedesktop": [66, 213], "systemd1": 213, "unprivileg": 213, "putti": [213, 225, 367], "puttygen": 213, "id_rsa": [213, 951], "authorized_kei": [213, 951], "trivia": 213, "hoorai": [213, 258, 271, 293, 347, 1071], "idiot": 213, "blinker": 213, "briana": 213, "mac": [213, 230, 246, 898, 1062, 1137, 1173], "wakeup": [214, 251, 328, 347, 381, 385, 767, 791, 834, 934, 943, 962, 975, 985, 995, 997], "patrick": 214, "1996": [214, 248], "wagna": 214, "gernot": 214, "1982": [214, 248], "birthplac": 214, "txt2json": 214, "equip": [215, 289, 378, 935, 1194, 1201], "deppert": [216, 229, 365], "sidestep": 216, "builtin_function_or_method": [216, 286, 313, 335], "sozusagen": 216, "genauso": [216, 1184], "aufrufen": [216, 926], "zaehler": 216, "initialwert": 216, "zaehlen": 216, "naechsten": 216, "schleifendurchlauf": 216, "locker": [216, 836], "mein_integ": 216, "1024": [216, 248, 869, 875, 898, 937, 960], "sch\u00fctzt": 216, "passen": [216, 283], "gehandhabt": 216, "1267650600228229401496703205376": [216, 242, 245, 253, 265, 271, 293], "hoch": 216, "rechnen": [216, 370, 375], "tut": [216, 325, 365, 1187], "ausschliesslich": [216, 1196], "ganzzahldivis": 216, "ganzzahligen": 216, "resultat": 216, "gleichen": [216, 1194, 1207], "vorrang": 216, "ghi": [216, 255, 341, 347], "viert": 216, "nwelt": 216, "nwie": 216, "linefe": [216, 225, 246, 253, 399, 400, 1080, 1086, 1117, 1162], "bedeutung": [216, 1189, 1196], "unangetastet": 216, "glump": 216, "nebenlaeufigkeitsdemo": 216, "ebenlaeufigkeitsdemo": 216, "l\u00f6sung": [216, 229, 238, 388, 937], "formatierungsm\u00f6glichkeit": 216, "pfx_var1": 216, "pfx_var2": 216, "ausgab": [216, 1187], "notwendig": [216, 1186, 1202, 1203], "abzubrechen": 216, "ignorieren": [216, 217, 223, 1200], "gefunden": [216, 286, 926], "value1": [216, 1097], "501": [216, 248, 341, 351, 1097], "value2": [216, 1097], "799": [216, 245, 248, 1094, 1097], "value3": [216, 1097], "sprachen": [216, 217, 1187, 1200], "neg": [216, 261, 265, 335, 351, 416, 458, 463, 675, 816, 929, 1177], "indiz": 216, "erscheinen": 216, "komisch": 216, "bequem": 216, "mapping_t": 216, "f\u00fcnf": [216, 1194], "sieben": [216, 229, 255, 653], "neun": [216, 341, 351], "explicit": [216, 235, 242, 246, 255, 263, 265, 413, 422, 450, 463, 467, 480, 522, 523, 536, 537, 573, 599, 601, 602, 626, 652, 695, 696, 705, 712, 717, 725, 732, 737, 752, 755, 809, 964, 978, 1010, 1030, 1031, 1061, 1064, 1067, 1145, 1158], "implicit": [216, 242, 255, 265, 403, 409, 413, 578, 694, 696, 712, 898, 967, 1053, 1067], "primzahlen": 216, "checken": 216, "primzahl": [216, 217, 1200], "checkenden": 216, "zahl": [216, 223, 229, 254, 255, 258, 268, 365], "probier": 216, "gach": [216, 255], "teiler": 216, "teiler_kandidaten": 216, "prim": 216, "gleichema\u00dfen": 216, "vollst\u00e4ndigkeit": 216, "halber": 216, "startend": [216, 255], "schrittweit": 216, "0x7f24f2ac0e50": 216, "ablegen": 216, "0x7f24f2ac0e70": 216, "arschlangsam": 216, "num_comparison": 216, "datenstruktur": [216, 237], "suchen": [216, 237, 925, 1189, 1196], "einf\u00fcgen": [216, 1194], "optimiert": [216, 229], "perfekt": 216, "einitreten": 216, "himmi": 216, "list_reverseiter": [216, 245, 268, 293], "0x7f24ec31d190": 216, "bricht": 216, "beinhart": 216, "liefert": [216, 1196], "lieber": 216, "zweit": [216, 229, 255, 286, 325, 341, 365, 1194], "po": [216, 255, 261, 265, 286, 291, 303, 307, 329, 335, 351, 479, 555, 648, 675], "wirklichkeit": 216, "ordin\u00e4r": 216, "alternativen": 216, "fruit": 216, "gemma": 216, "divisor_candid": [216, 351], "161": [216, 223, 245, 248, 253, 255, 258, 261, 265, 268, 271, 283, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "wegen": 216, "dogma": 216, "zugewiesen": 216, "meine_vari": 216, "eine_vari": [216, 293, 303, 335], "angelegt": 216, "streng": 216, "obigem": 216, "dazusagen": 216, "noch_eine_globale_vari": 216, "increment_diese_vari": 216, "offiziel": [217, 219, 227, 230, 233, 234, 236, 252, 264], "leitfaden": 217, "kommentar": [217, 218, 229, 293, 365, 1200], "platziert": [217, 237], "hackereien": 217, "gleicherma\u00dfen": 217, "sogenannten": 217, "semantik": [217, 218, 1200], "sprach": [217, 218, 1187, 1188, 1189, 1200, 1201, 1208], "standarddatentypen": [217, 218, 1200], "literal": [217, 218, 276, 1200], "python2": [217, 255, 1200], "endg\u00fcltig": [217, 1200], "rausl\u00f6schen": [217, 1200], "konstanten": [217, 218, 1200], "typen": [217, 223, 1196, 1200, 1206], "operatoren": [217, 218, 926, 1189, 1200], "angeschnitten": [217, 1200], "vertiefung": [217, 233, 1200], "nocheinm": [217, 388, 1200], "ausdr\u00fcck": [217, 218, 276, 1200], "operatorrangfolgen": [217, 218, 1200], "grundlegenden": [217, 371, 1196, 1200], "sprachelementen": [217, 1200], "rede": [217, 1200], "syntaxdiagramm": [217, 1200], "gespritzt": [217, 1200], "gesamt": [217, 1200], "sperrig": [217, 1200], "n\u00fctzt": [217, 1200], "menschlich": [217, 1200], "abzubilden": [217, 1200], "tabel": [217, 1200], "anweisungen": [217, 218, 1200], "gro\u00dfen": [217, 1200], "fisch": [217, 1200], "instruktiv": [217, 1200], "bedingungen": [217, 218, 1186, 1200], "verzweigungen": [217, 218, 1200], "bedingt": [217, 218, 1187, 1200], "anweisung": [217, 218, 1200], "formulierungen": [217, 1200], "mehrfach": [217, 218, 1200], "fallauswahl": [217, 218, 1200], "benutzereingaben": [217, 1200], "\u00fcberpr\u00fcfen": [217, 1200], "schleifenkonstrukt": [217, 1200], "weitgehend": [217, 1200], "unserem": [217, 1200], "vehikel": [217, 1200], "hilfreich": [217, 1196, 1200], "klarstellung": [217, 1200], "fu\u00dfgesteuert": [217, 218, 1200], "z\u00e4hlergesteuert": [217, 218, 1200], "auslassen": [217, 1200], "kopfgesteuert": [217, 218, 1200], "gewinnt": [217, 1200], "konsol": [217, 1200], "anzeigen": [217, 1196, 1200], "voraussetzung": [217, 1200], "ausblick": [217, 1200], "schnell\u00fcbersicht": [217, 218, 1200], "sprunganweisungen": [217, 218, 1200], "endlosschleifen": [217, 218, 1200], "naja": [217, 1200], "reinschauen": [217, 1200], "mager": [217, 1200], "ausgelassen": [217, 1200], "eindimensional": [217, 218, 1200], "gefolgt": [217, 255, 1200], "zeichenketten": [217, 218, 1200], "tupel": [217, 218, 221, 1200], "besonder": [217, 218, 1200], "stapel": [217, 218, 1200], "schlangen": [217, 218, 1200], "tempo": [217, 1200], "schauma": [217, 223, 1200], "fallt": [217, 1200], "gscheit": [217, 224, 335, 1200], "gemeinsam": [217, 1184, 1186, 1200, 1203], "dr\u00fcber": [217, 1200], "vielzahl": [217, 1200, 1204, 1207], "l\u00f6sungsm\u00f6glichkeiten": [217, 1200], "eingegangen": [217, 1184, 1200, 1204], "pythonischst": [217, 1200], "bestritten": [217, 1200], "unterprogramm": [217, 218, 1200], "parameter\u00fcbergab": [217, 218, 1200], "r\u00fcckgabewert": [217, 218, 1200], "inner": [217, 218, 238, 347, 479, 1034, 1200], "standardbibliotheken": [217, 218, 1200], "funktionalit\u00e4ten": [217, 218, 1200], "berechnet": [217, 253, 261, 1200], "satz": 217, "gepr\u00e4gt": 217, "konferenzen": 217, "definitiv": 217, "sehenswert": 217, "anf\u00e4nger": [217, 1203], "hochinteress": 217, "sprachelement": 218, "elementar": 218, "beliebig": [218, 253, 1201], "gro\u00df": [218, 1206], "vergleichsoperatoren": 218, "strichrechnung": 218, "modulo": [218, 229, 242, 248, 253, 261, 365, 414, 1055, 1067], "un\u00e4rer": 218, "negat": [218, 242, 265, 927, 1055, 1067, 1085], "konvertierungen": [218, 1187], "pr\u00e4zendenzregeln": 218, "vertauschen": [218, 229, 365], "kontrollstrukturen": [218, 254, 1187], "verzweigung": 218, "schleifen": [218, 276, 1186], "versuch": [218, 230, 341, 347], "hybrid": [218, 669], "supergscheit": 218, "prozeduren": 218, "funktionen": [218, 222, 276, 371, 1186, 1187, 1189, 1197], "funktionspoint": 218, "funktionsobjekt": 218, "primzahlenbeispiel": 218, "laufzeitfehl": 218, "lokal": [218, 229, 275, 276, 1207], "zuweisen": 218, "fehlerfal": 218, "anschliessend": 219, "interaktiv": 219, "uebungen": 219, "idealerweis": [219, 293], "ueblichen": 219, "negoti": 220, "deiniti": [220, 816, 1195], "unload": [220, 818, 832, 834, 1195], "synchronizt": 220, "spinlock": [220, 791, 815, 830, 836, 840, 842, 846, 847, 853, 856, 857, 859, 934, 998, 1195], "rcu": 220, "halv": 220, "softirq": 220, "tasklet": [220, 836], "irss": 220, "kmalloc": [220, 791, 800, 805, 808, 809, 810, 815, 819, 828, 829, 833, 835, 842, 847, 850, 853, 856, 859, 934], "dma": [220, 791, 815, 833, 835, 877, 934, 959, 960, 961, 1195], "coher": [220, 809], "20201125": [221, 223], "unbekannten": 221, "lookup_t": [221, 224, 365], "12345": [221, 253, 265, 293, 341, 1171], "noch_eine_list": 221, "gesamte_list": 221, "vorl\u00e4ufig": 221, "letz": 221, "indented_text": 221, "nebenbei": [221, 223, 365], "eine_zum_sterben_verurteilte_vari": 221, "ein_set": 221, "sequenzen": 221, "grottenlangsam": 221, "subscript": [221, 255, 325, 347, 443, 630, 651, 655, 1158], "multiple_return_valu": 221, "xyz": [221, 223, 229, 248, 255, 286], "mein_formatierter_str": 221, "my_rang": [221, 261, 307, 313, 335], "retlist": 221, "zeichenkett": 221, "funktionieren": [221, 1189, 1207], "my_list": [221, 232, 274], "airms_eth": 221, "simplizistisch": 221, "bl\u00f6d": 221, "i_oder_v": 221, "iv": 221, "rms_eth": 221, "vorcompilieren": 221, "acirms_eth": 221, "my_regex": 221, "zeilennumm": 221, "dazuhaben": 221, "meine_zu_sendenden_daten": 221, "345": [221, 242, 248, 261, 293, 325, 335, 341, 347, 351], "234": [221, 245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365], "meine_zu_sendenden_daten_in_string_form": 221, "ueblicherweis": 221, "ueber": 221, "verschickt": 221, "empfangen": [221, 236], "geschrieben": [221, 1207], "empfaeng": 221, "empfangenen": 221, "natuerlich": 221, "zurueckkonvertieren": 221, "meine_empfangenen_daten_python_form": 221, "gegangen": [221, 274], "wurscht": [221, 261, 335, 926], "returnwerten": 222, "containerdatentypen": 222, "untypisiert": 222, "zeilen": [223, 265, 1196], "neiner": 223, "nund": [223, 242], "nb": 223, "stoppt": 223, "newlin": [223, 225, 238, 261, 286, 303, 361, 392, 399, 412, 1064, 1080], "ndrin": 223, "drin": [223, 224, 229, 265, 293, 303, 341, 365, 370], "zuviel": [223, 1189], "mischt": 223, "unsupport": [223, 245, 271, 1055], "140546731085392": 223, "0x7fd395fb0e50": 223, "0x7fd3900395b0": 223, "new_t": [223, 1068], "0x7fd390052800": 223, "667": [223, 245, 248, 268, 274, 590], "2923750584022716461": 223, "529344067295497451": 223, "unhash": [223, 283, 293, 307, 335, 347], "fuenf": [223, 245, 255, 283, 293, 307, 325, 341, 351, 365], "verschluckt": 223, "6000000": 223, "elementen": [223, 237], "nonetyp": [223, 233, 247, 248, 303, 313, 325, 341, 347], "_io": [223, 242, 245, 248, 258, 261, 293, 307, 341, 362, 840], "textiowrapp": [223, 242, 245, 248, 258, 261, 293, 307, 341, 362, 1033], "oi": 223, "456": [223, 224, 248, 255, 293, 341, 412], "hansi": [223, 261, 265, 268], "linspac": [223, 329], "11111111": 223, "22222222": 223, "33333333": 223, "44444444": 223, "55555556": 223, "66666667": 223, "77777778": 223, "88888889": 223, "sin": 223, "8961922": 223, "79522006": 223, "19056796": 223, "96431712": 223, "66510151": 223, "37415123": 223, "99709789": 223, "51060568": 223, "54402111": 223, "plot": [223, 242, 271, 274, 325, 329, 335, 347, 1032, 1091, 1143, 1144], "line2d": [223, 271, 274, 325, 329, 335, 347], "0x7fd35cd3ef40": 223, "splev": 223, "splrep": 223, "spline": 223, "represent": [223, 242, 261, 351, 741, 848, 942, 943], "spl": 223, "evalu": [223, 242, 247, 253, 263, 395, 415, 420, 422, 430, 437, 438, 516, 517, 530, 531, 702, 712, 881, 898, 1035, 1069, 1071, 1078, 1177], "x2": [223, 265], "y2": 223, "0x7fd341a486d0": 223, "speicher": [224, 1187, 1194, 1201], "sch\u00fctze": 224, "gemischten": 224, "operationen": [224, 1206], "interpol": [224, 265, 1142], "lag": 224, "gib": [224, 303], "depp": [224, 253], "ret_l": 224, "uniq_l": 224, "read_excel": [224, 1142], "invit": [225, 669], "effici": [225, 270, 324, 427, 466, 468, 470, 631, 635, 645, 648, 750, 882, 929, 931, 1040, 1144, 1155, 1158, 1195], "expans": [225, 926, 927, 1186], "ecdsa": [225, 367], "fingerprint": [225, 367, 946, 997], "sha256": [225, 367, 946], "in22o4vcd400x0bb4flcb5": [225, 367], "vqnrvkvoirgfqq6mapo": [225, 367], "perman": [225, 367], "individu": [225, 367, 419, 477], "sat": [225, 367], "straight": [225, 717, 1159], "startung": 225, "standpoint": 225, "suboptim": [225, 274], "pwned": 225, "hidden": [225, 508, 703, 811, 1012], "clumsi": [225, 251, 252, 292, 295, 493, 497, 597, 605, 613, 626, 653, 695, 758, 1032, 1033, 1049, 1050, 1158, 1190], "clumsier": 225, "dumpbin": 225, "hmoe": 225, "frcoll": 225, "bunch": [225, 759, 865, 1024, 1048], "oom": [225, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 1039], "killer": [225, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 1073], "amoc": 225, "snapshot": [225, 737, 770, 876, 1024], "tinkernut": 225, "raspberi": 225, "awesom": [66, 225, 1170], "tunnel": [225, 291, 945, 953, 964], "centric": [225, 1195], "virtualbox": [225, 877], "cygwin": [225, 278, 280, 298, 877], "assort": 225, "nano": 225, "univers": [225, 300, 554, 964, 1061, 1195], "scripe": 225, "voellig": 229, "wohl": [229, 313, 1187, 1208], "selbsterklaerend": 229, "printet": 229, "builtin": [229, 235, 242, 248, 249, 258, 261, 265, 286, 307, 324, 325, 335, 341, 351, 898, 1036], "accur": [229, 261, 265, 286, 307, 472], "__weakref__": [229, 245, 255, 258, 261, 265, 274, 286, 307, 325], "weak": [229, 261, 265, 286, 307, 325, 756, 1144], "_abc": [229, 242, 248, 258, 261], "_1": [229, 758, 759], "a123": 229, "vernichten": 229, "laufzeit": 229, "140032702361168": 229, "refcount": [229, 754, 756, 1033, 1190], "dezim": 229, "oktal": 229, "0o755": [229, 265, 365], "493": [229, 248, 265, 341, 351], "0b11": [229, 265, 268], "sql": [229, 240, 252, 1146, 1149], "0b11111111": 229, "ordnung": 229, "uhrzeit": 229, "vormittag": 229, "6666666666666666": [229, 265], "nda": [229, 283], "python_dir": 229, "jan": [229, 258, 261, 361, 362, 379, 412, 776, 802, 894, 920, 978, 1012, 1026, 1063], "lowercas": [229, 261, 307, 898, 945, 1081, 1099, 1104], "140032636418048": 229, "ein_iterierbares_d": 229, "extraw\u00fcrschtl": 229, "sex": [229, 242, 264, 265, 1099], "diver": 229, "translation_t": [229, 265, 268, 271, 341], "bag": [229, 277, 278, 280, 480, 490, 788, 790, 791, 1006, 1068], "green": [229, 265, 519, 554, 555, 615, 935], "blue": [229, 237, 245, 265, 1094], "mengenoperationen": 229, "set1": 229, "set2": 229, "symm_diff": 229, "lisa": 229, "eugeni": [229, 232], "okan": 229, "mcguir": 229, "sinner": 229, "implicitli": [229, 234, 245, 444, 494, 602, 610, 700, 708, 801, 968, 1033, 1065, 1150], "vornam": [229, 237, 238], "nachnam": [229, 237, 238], "persnr": 229, "personalnumm": 229, "5000": [229, 242, 248, 1052], "4000": [229, 248], "3000": [229, 242, 248, 268, 307], "15000": [229, 248], "uppercas": [229, 261, 307, 898, 1081, 1099], "verfuegbar": 229, "restlichen": 229, "gehaelt": 229, "konstant": [229, 237, 260], "unexpect": [229, 457], "pcap": [230, 250], "certifi": 230, "math": [230, 233, 243, 245, 246, 248, 256, 265, 270, 273, 306, 312, 335, 597, 599, 1061, 1137], "statist": [230, 243, 256, 265, 270, 273, 306, 312, 471, 1000, 1121, 1137, 1142, 1170], "undo": [230, 898, 1137], "brad": [230, 1137], "traversi": [230, 1137], "evaluierung": 231, "eval": [231, 259, 260, 269, 287, 301, 302, 307, 314, 323, 326, 327, 1057], "openfil": 232, "hanld": 232, "soemth": [232, 852], "zf": [232, 341], "namelist": 232, "zipdemo": 232, "extracted_nam": 232, "isinst": [232, 233, 246, 248, 261, 274, 286, 1055, 1159], "superclass": [232, 233, 246, 261], "subclass": [232, 233, 246, 261, 265, 1035, 1052], "class1": 232, "class2": 232, "salari": 232, "selina": 232, "orgl": 232, "8010": [232, 248, 479], "birth": [232, 258, 271, 597, 789, 1126, 1127, 1128, 1129, 1132, 1133, 1134], "1622102062": 232, "4778333": 232, "019427776336669922": 232, "009679079055786133": 232, "daniel": [232, 235, 361, 362, 379], "ortner": 232, "num_employe": 232, "__first": 232, "__last": 232, "__address": 232, "_person__first": 232, "_person__last": 232, "_person__address": 232, "_first": 232, "_last": 232, "_address": 232, "do_debug": 232, "val": [232, 261, 758, 943], "ueberhaupt": 232, "l_float": 232, "0x7fd9881b04a0": 232, "functool": [232, 299], "wrapper": [232, 261, 271, 276, 313, 335, 500, 698, 723, 958, 1006, 1034, 1055, 1139], "komplexen": 232, "testfil": 232, "nzeil": [232, 261, 329], "seek": [232, 307, 341, 362], "nth_fibo": 232, "accomod": 232, "0x7fd9801cec10": 232, "0x7fd9801b8d60": 232, "0x7fd9801b4900": 232, "0x7fd98014cd40": 232, "gen": [232, 307], "sequenceno": 232, "kv_pair": 232, "permissionerror": [232, 248, 268, 286, 303, 1035], "deni": [232, 248, 268, 303, 341, 522, 536, 881, 917, 945, 953, 965, 970, 971, 1035, 1165], "eacc": 232, "filenotfounderror": [232, 248, 286, 1035], "64bit": 232, "utc": 232, "python_implement": [232, 233, 246], "python_version_tupl": [232, 233, 246], "python39": 232, "dynload": [232, 341], "isfil": [232, 355, 479], "isdir": [232, 479], "my_path": 232, "hopefulli": 232, "the_except": 232, "__class__": [232, 255, 258, 261, 265, 274, 283, 286, 307, 325, 347], "__bases__": [232, 233, 246, 263], "distrust": 232, "guido": [232, 1161], "incompet": 232, "precondit": [232, 867], "abdefg": 232, "beg": [232, 438, 1036], "bdefg": 232, "stringifi": 232, "0x7ffa9c2ac3a0": 232, "formatstr": 232, "ding": [232, 262, 1005], "formatierter_str": 232, "oserror": [233, 261, 286, 1035], "errno": [233, 246, 248, 268, 303, 463, 816, 965, 980, 1009, 1010, 1027, 1035, 1165], "assertionerror": [233, 258, 274, 286, 325, 1035, 1048, 1170, 1171], "jjjj": [233, 383, 384, 476], "line_count": 233, "aud": 233, "qualifii": [233, 246], "trunc": [233, 246], "hypot": [233, 246], "seed": [233, 246, 265, 549], "ascii": [233, 246, 261, 268, 271, 286, 307, 313, 329, 335, 341, 399, 402, 405, 411, 1066, 1067, 1080, 1086, 1145], "codepoint": [233, 246], "escap": [233, 246, 253, 261, 283, 392, 1145], "ord": [233, 246, 265, 286, 1075], "chr": [233, 246, 286], "isxxx": [233, 246], "rfind": [233, 246, 261, 307, 313, 347, 1082], "grammar": [233, 246], "instrospect": [233, 246], "hasattr": [233, 246, 261, 274, 286, 1049, 1055], "__module__": [233, 245, 246, 255, 258, 261, 265, 274, 286, 307, 325], "bytearrai": [233, 246, 261, 286], "histogram": [233, 234, 251, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 583, 584, 592, 697, 735, 788, 790, 791], "defaultdict": [233, 259, 260, 284], "make_histogram": [233, 584, 593], "fileobj": 233, "stringio": [233, 261], "8859": [233, 251, 252, 268, 271, 291, 313, 325, 329, 479], "pycon": [233, 259, 282, 306, 328, 1137], "2017": [233, 259, 282, 328, 605, 703, 754, 1137], "metaprogram": [233, 260, 282, 712, 1048, 1137, 1191], "contract": [233, 235, 282, 1137], "unauthor": [233, 282, 328, 1137], "lesson": [233, 282, 328, 367, 373, 478, 741, 1028, 1137], "evolv": [233, 282, 328, 738, 1137], "assembli": [233, 282, 306, 328, 1012, 1014, 1137, 1192], "revolv": [233, 259, 328, 1137, 1143], "mro": [233, 259, 263, 328, 1137], "cpa": 234, "fahr": [234, 393, 395], "tomorrow": [234, 249, 377, 378], "correctli": [234, 324, 356, 455, 942, 965, 1088, 1145], "consecut": [234, 418, 747, 931], "becam": [234, 320], "44ff": 234, "gig": 234, "upcom": 234, "msi": 234, "wswitch": [234, 459, 696, 807], "wall": [234, 248, 249, 416, 466, 482, 770, 806, 807, 1179], "77ff": 234, "skip": [234, 261, 362, 480, 482, 813, 943, 1013, 1014, 1035, 1172], "89ff": 234, "alongsid": [234, 832], "num_us": 234, "199ff": 234, "204ff": 234, "208ff": 234, "220ff": 234, "222ff": 234, "db_get_user_at_index": 234, "298ff": 234, "strcpy": [234, 251, 405, 451, 587, 602, 605, 706, 740, 938, 996], "strlen": [234, 405, 430, 458, 602, 605, 706, 740, 976, 979, 1009], "bahavior": 234, "dest": [234, 405], "strtol": 234, "stringif": [234, 1187], "db_error_str": 234, "sexi": [234, 988], "caleb": 234, "discret": [235, 265, 324, 465, 469, 474, 475, 697, 735, 788, 790, 791], "bleed": 235, "rect": [235, 446, 573], "sphere": [235, 573], "preprocessor": [235, 251, 412, 439, 445, 449, 452, 456, 461, 465, 469, 474, 475, 694, 697, 735, 788, 790, 791, 1012, 1177, 1191], "julia": 235, "yesterdai": [235, 251, 259, 299], "distanc": [235, 599, 607, 608, 628, 745, 758], "has_lastnam": 235, "botton": 235, "mingw": [235, 278, 280, 298, 377, 390, 877], "resembl": 235, "tortur": 235, "functor": [235, 277, 278, 280, 337, 338, 639, 735, 736, 790, 791], "rudimentarili": [235, 1065, 1140], "gotten": [235, 771], "recourc": 235, "outright": [235, 291, 453, 1040, 1071], "geniu": [235, 291, 630, 1040, 1071], "livehackingli": 235, "zuordnung": [236, 252, 264], "bissl": 236, "commandlineargument": [236, 1186], "summenbeispiel": 236, "showcas": 236, "datenbank": 236, "formulieren": 236, "verbindung": [236, 1184, 1194, 1201, 1207], "schicken": [236, 1184], "schickman": 236, "muessen": 236, "verwandlen": 236, "fractal": [236, 252], "schatzi": 237, "zeitkomplexit\u00e4t": 237, "foreach": 237, "assozi": [237, 1189], "color_transl": 237, "gelb": 237, "yellow": 237, "hashtabl": [237, 1159], "englisch": [237, 1184], "sack": 237, "my_color": 237, "her_color": 237, "pink": 237, "gr\u00fcn": 237, "beig": 237, "vereiningungsmeng": 237, "schnittmeng": 237, "symmetrisch": 237, "differenzmeng": 237, "sei": 237, "gewesen": 237, "waer": [237, 313], "1037190666": [237, 253, 255, 261, 265, 268, 271, 274, 497, 504, 521, 522, 523, 535, 536, 537, 656, 1049], "6666010185": 237, "schwarzbauer": 237, "json_string_fuer_den_brows": 237, "response_dict": 237, "svnr": [237, 245, 248, 255, 261, 265, 268, 271, 273, 274, 313, 498, 504, 526, 532, 1049, 1154], "pprint": [237, 239, 246, 248, 283, 1036, 1145], "formatieren": 237, "endlich": 237, "transfer_string_in_php_am_serv": 237, "u00f6rg": 237, "transfer_string_in_js_am_brows": 237, "response_dict_am_brows": 237, "verwandeln": [237, 1203], "schlussendlich": 237, "geeignet": [237, 1185], "platzieren": 237, "meine_t": 237, "sozialversicherungsnumm": 237, "simmer": 238, "mein_str": 238, "sq": [238, 245, 248, 255, 265, 286, 307, 325, 329, 341], "docu": 238, "nmehrzeilig": 238, "nvon": 238, "mehrzeilig": 238, "deppertem": 238, "irrelevant": 238, "quargel": [238, 239], "190666": 238, "inkorrekt": 238, "geburtsdatum": 238, "endswith": [238, 253, 255, 261, 271, 286, 290, 293, 307, 313, 329, 335, 341, 347, 351, 1082], "sss": 238, "isalpha": [238, 242, 253, 255, 261, 265, 286, 307, 313, 335, 351, 1082], "isidentifi": [238, 242, 255, 261, 271, 286, 307, 313, 1082], "islow": [238, 261, 271, 286, 307, 341, 347, 1082], "arg1": 238, "arg2": 238, "arg3": 238, "abcblah": 238, "blahabcbcabcc": 238, "lah": 238, "rstrip": [238, 242, 246, 253, 257, 258, 261, 271, 286, 303, 307, 313, 329, 347, 351, 361, 370], "lstrip": [238, 253, 257, 261, 286, 307, 313, 347, 351, 370], "wieviel": [238, 1194, 1201], "995237": 238, "datestr": 238, "dt": [238, 335, 838, 942], "strptime": [238, 239, 240, 246, 335], "uuid": 238, "msg_aussi": 238, "sea": [238, 253, 286, 366, 716], "oida": [238, 255, 258, 307, 482], "msgid": 238, "uuid4": 238, "345654325678": 238, "json_aussi": 238, "6563515ef0824d42b459389cefd09127": 238, "json_eini": 238, "sender": [238, 1010], "msg_eini": 238, "sauberestextfil": 239, "12345678": 239, "2270": [239, 248], "20333": 239, "360": [239, 248, 325, 335, 341, 347, 351], "91011121": 239, "30333": 239, "36756788": 239, "1112": [239, 248], "1244": [239, 248], "31333": 239, "45011121": 239, "44444": 239, "340": [239, 248, 255, 261, 293, 307, 335, 341, 347, 351], "sauber": 239, "read_sauberes_text_fil": 239, "item1": [239, 335], "item13": 239, "werk": 239, "lort": 239, "charg": [239, 501, 508, 521, 522, 523, 535, 536, 537], "sonderbestandsnumm": 239, "materialkurztext": 239, "lagerplatz": 239, "verfueg_bestand": 239, "bme": 239, "we_datum": 239, "verf\u00fcg": 239, "bestand": 239, "datum": [239, 1144], "api2": 240, "opc": [240, 249, 324], "rrdtool": 240, "rrd": 240, "subprocess": [240, 256, 261, 270, 272, 282, 306, 355, 370, 375, 1137], "commmon": [242, 438], "140576769461632": 242, "simplicit": 242, "inputfil": [242, 479], "450": [242, 248, 255, 290, 293, 341, 351], "paragraph": [242, 492], "highli": [242, 388, 554], "pathnam": [242, 248, 258, 261, 797, 964, 968, 1080], "displayhook": [242, 248, 258, 261, 363], "excepthook": [242, 248, 258, 261, 363], "uncaught": [242, 248, 258, 261, 573], "systemexit": [242, 248, 258, 261, 283, 286, 363, 1035], "behav": [242, 248, 251, 258, 261, 552, 573, 699, 754, 755, 786, 854, 880, 1000], "last_typ": [242, 248, 258, 261, 363], "last_valu": [242, 248, 258, 261, 363, 723, 726, 729, 730, 731], "last_traceback": [242, 248, 258, 261, 363], "builtin_module_nam": [242, 248, 258, 261, 363], "pertain": [242, 248, 258, 261], "exec_prefix": [242, 248, 258, 261, 363], "float_info": [242, 248, 258, 261, 363], "float_repr_styl": [242, 248, 258, 261, 363], "hash_info": [242, 248, 258, 261, 363], "hexvers": [242, 248, 258, 261, 363], "int_info": [242, 248, 258, 261, 363], "maxsiz": [242, 248, 258, 261, 363], "largest": [242, 248, 258, 261, 455], "maxunicod": [242, 248, 258, 261, 363], "thread_info": [242, 248, 258, 261, 363], "version_info": [242, 248, 258, 261, 363], "__stdin__": [242, 248, 258, 261, 363], "__stdout__": [242, 248, 258, 261, 363], "__stderr__": [242, 248, 258, 261, 363], "__displayhook__": [242, 248, 258, 261, 363], "__excepthook__": [242, 248, 258, 261, 363], "screen": [242, 248, 258, 261, 874, 880, 898], "exc_info": [242, 248, 258, 261, 363], "getdlopenflag": [242, 248, 258, 261, 363], "dlopen": [242, 248, 258, 261, 1204], "getprofil": [242, 248, 258, 261, 363], "profil": [242, 248, 258, 261, 341, 388, 466, 472, 475, 791, 838, 870, 1188, 1191], "getrefcount": [242, 248, 258, 261, 268, 363], "getrecursionlimit": [242, 248, 258, 261, 363], "getsizeof": [242, 248, 258, 261, 283, 286, 329, 351, 363], "gettrac": [242, 248, 258, 261, 363], "setdlopenflag": [242, 248, 258, 261, 363], "setprofil": [242, 248, 258, 261, 363], "setrecursionlimit": [242, 248, 258, 261, 363], "settrac": [242, 248, 258, 261, 363], "__breakpointhook__": [242, 248, 258, 261, 363], "breakpointhook": [242, 248, 258, 261, 363], "breakpoint": [242, 248, 258, 261, 286], "exctyp": [242, 248, 258, 261], "__unraisablehook__": [242, 248, 258, 261, 363], "unraisablehook": [242, 248, 258, 261, 363], "unrais": [242, 248, 258, 261], "exc_typ": [242, 248, 258, 261, 1033], "exc_valu": [242, 248, 258, 261, 1033], "exc_traceback": [242, 248, 258, 261, 1033], "err_msg": [242, 248, 258, 261], "addaudithook": [242, 248, 258, 261, 363], "audit": [242, 248, 258, 261, 341, 363], "call_trac": [242, 248, 258, 261, 363], "afterward": [242, 248, 258, 261, 417, 467, 604, 754, 755, 756, 769, 834, 1006, 1171], "older": [242, 248, 258, 261, 863, 1006], "get_asyncgen_hook": [242, 248, 258, 261, 363], "firstit": [242, 248, 258, 261], "get_coroutine_origin_tracking_depth": [242, 248, 258, 261, 363], "getallocatedblock": [242, 248, 258, 261, 363], "getdefaultencod": [242, 248, 258, 261, 307, 363], "getfilesystemencodeerror": [242, 248, 258, 261, 363], "getfilesystemencod": [242, 248, 258, 261, 363], "getswitchinterv": [242, 248, 258, 261, 363], "setswitchinterv": [242, 248, 258, 261, 363], "is_fin": [242, 248, 258, 261, 363], "set_asyncgen_hook": [242, 248, 258, 261, 363], "set_coroutine_origin_tracking_depth": [242, 248, 258, 261, 363], "cr_origin": [242, 248, 258, 261], "rtld_global": [242, 248, 258, 261], "rtld_xxx": [242, 248, 258, 261], "rtld_lazi": [242, 248, 258, 261], "frequenc": [242, 248, 258, 261, 265, 301, 302, 323, 327, 356, 381, 385, 791, 934, 935, 943, 975, 995, 997], "uninterrupt": [242, 248, 258, 261, 830], "workload": [242, 248, 258, 261], "typic": [242, 248, 258, 261, 289, 299, 315, 327, 331, 438, 478, 482, 499, 523, 552, 679, 809, 858, 883, 1013, 1058, 1068, 1190, 1192], "005": [242, 248, 258, 261], "abiflag": [242, 248, 258, 261, 363], "api_vers": [242, 248, 258, 261, 363], "1013": [242, 248, 258, 261], "ipyk": 242, "base_exec_prefix": [242, 248, 258, 261, 363], "base_prefix": [242, 248, 258, 261, 363], "_ast": [242, 248, 258, 261], "_codec": [242, 248, 258, 261], "_collect": [242, 248, 258, 261], "_f": [242, 248, 258, 261], "byteord": [242, 248, 258, 261, 283, 363, 936], "foundati": [242, 248, 258, 261], "emati": [242, 248, 258, 261], "ipykernel": [242, 248, 258, 261, 286], "zmqshelldisplayhook": [242, 248, 258, 261], "dont_write_bytecod": [242, 248, 258, 261, 363], "opt": [242, 248, 258, 261, 341, 444], "ation": [242, 248, 258, 261], "7976931348623157e": [242, 248, 258, 261], "308": [242, 248, 255, 258, 261, 303, 313, 325, 335, 341, 347], "max_": [242, 248, 258, 261], "epsilo": [242, 248, 258, 261], "2305843009213693": [242, 248, 258, 261], "iphash2": [242, 248, 258, 261], "50922736": 242, "cache_tag": [242, 248, 258, 261], "xv": [242, 248, 258, 261], "bits_per_digit": [242, 248, 258, 261], "sizeof_digit": [242, 248, 258, 261], "syntaxerror": [242, 258, 265, 286, 1035], "eol": [242, 265], "scan": [242, 265, 268, 335, 942, 944], "9223372036854775807": [242, 248, 258, 261, 789], "1114111": [242, 248, 258, 261], "meta_path": [242, 248, 258, 261, 363], "_frozen_importlib": [242, 248, 258, 261, 286], "builtinimport": [242, 248, 258, 261, 286], "_fro": [242, 248, 258, 261], "homepa": 242, "path_hook": [242, 248, 258, 261, 363], "zipimport": [242, 248, 258, 261], "filefind": [242, 248, 258, 261], "path_importer_cach": [242, 248, 258, 261, 363], "jfa": [242, 248, 258, 261], "platlibdir": [242, 248, 258, 261, 363], "ps1": [242, 248, 258, 261, 363, 1172], "ps2": [242, 248, 258, 261, 363], "ps3": [242, 248, 258, 261, 363], "pycache_prefix": [242, 248, 258, 261, 363], "outstream": [242, 248, 258, 261], "versio": [242, 248, 258, 261], "202103": 242, "releaselev": [242, 248, 258, 261], "warnopt": [242, 248, 258, 261, 363], "isdigit": [242, 253, 261, 265, 286, 293, 307, 313, 341, 351, 1082], "pp": [242, 293, 443, 630], "list_of_str": 242, "tensorflow": 243, "kesselfal": 243, "rettenbachklamm": 243, "hochtor": 243, "hochschwab": 243, "_a": [245, 261, 286], "_123": 245, "140575811317328": 245, "140575811316208": 245, "0xffffffff": [245, 246, 351, 416], "4294967296": [245, 253], "0x48": [245, 942], "330": [245, 248, 261, 286, 293, 307, 325, 335, 341, 347], "332": [245, 248, 261, 293, 307, 325, 341, 347], "333": [245, 248, 261, 293, 307, 335, 341, 347, 366], "334": [245, 248, 261, 293, 335, 341, 347], "dstr": 245, "777": [245, 248, 335], "aliv": [245, 436, 988, 1031], "bcd": 245, "dusan": 245, "alex": [245, 259, 1053], "mist": [245, 293], "span": [245, 271, 274, 276, 283, 307, 341, 393, 412, 436, 813], "141592653589793": [245, 248], "roll": [245, 264, 285, 301, 302, 1071, 1187], "dice": [245, 264, 285, 301, 302, 1071], "win": [245, 261, 271, 335, 347, 929, 996, 1071], "rnd": [245, 268], "convention": 245, "wise": [245, 289, 461, 605, 677, 708, 776, 789, 791, 806, 816, 836, 934, 975, 1035], "resultset": [245, 248, 1149], "sbin": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 870, 874, 876, 923, 929, 960, 970], "nologin": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 923, 929, 960, 970], "adm": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 924, 927, 929], "lp": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "spool": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "lpd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "65534": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "apach": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "httpd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "coredump": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929, 1009], "997": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "dumper": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "998": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "996": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "timesync": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "995": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "tss": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "tpm": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "dbu": [65, 66, 245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 876], "polkitd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 876], "994": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "avahi": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 876], "mdn": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "unbound": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 1067], "992": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "dnsmasq": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 876], "991": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "dhcp": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "nm": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 473, 606, 838, 1024, 1030], "openconnect": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "993": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "989": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "networkmanag": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 473, 876], "usbmuxd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "gluster": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "988": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "glusterf": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "rtkit": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "realtimekit": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "pipewir": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "987": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "geoclu": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "990": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "chroni": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "984": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "saslauth": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "saslauthd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "radvd": [245, 261, 268, 271], "rpc": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "rpcbind": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "openvpn": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "982": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "981": [245, 248, 261, 268, 271, 347], "spawn": [245, 261, 268, 271, 286, 293, 303, 307, 324, 329, 335, 341, 347], "colord": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "985": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "rpcuser": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347], "abrt": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 876, 929], "979": [245, 248, 261, 268, 271], "helper": [245, 261, 265, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 411, 605, 669, 717, 758, 832, 929, 1162, 1165], "983": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "978": [245, 248, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 929], "vboxadd": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "tcpdump": [245, 261, 268, 271, 286, 293, 303, 307, 329, 335, 341, 347, 929], "974": [245, 248, 261, 268, 271], "broker": [245, 249, 261, 268, 271, 286, 293, 303, 307, 324, 329, 335, 341, 876, 1131], "mappingproxi": [245, 261, 274], "229": [245, 248, 253, 255, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "231": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 307, 313, 329, 335, 341, 347, 351, 521, 522, 523, 535, 536, 537], "232": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 307, 313, 329, 335, 341, 347, 351], "233": [245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 303, 307, 313, 329, 335, 341, 347, 351], "inputlist": [245, 1038], "ret": [245, 248, 253, 479, 717, 1002, 1038, 1083], "235": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "236": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 307, 313, 325, 329, 335, 341, 347, 351, 464], "237": [245, 248, 253, 255, 261, 265, 268, 271, 286, 303, 307, 313, 329, 335, 341, 347, 351], "238": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "239": [245, 248, 253, 255, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "240": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 303, 307, 313, 329, 335, 341, 347, 351], "242": [245, 248, 253, 255, 258, 261, 268, 271, 286, 303, 307, 313, 325, 329, 335, 341, 347, 351], "243": [245, 248, 253, 255, 261, 268, 271, 286, 303, 307, 313, 325, 335, 341, 347, 351], "244": [245, 248, 253, 255, 258, 261, 268, 271, 286, 307, 313, 325, 335, 341, 347, 351], "245": [245, 248, 253, 255, 268, 286, 303, 307, 313, 325, 335, 341, 347, 351], "247": [245, 248, 253, 255, 261, 265, 268, 286, 303, 307, 313, 329, 335, 341, 347, 351], "248": [245, 248, 253, 255, 258, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351], "249": [245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 307, 313, 325, 329, 335, 341, 347, 351], "250": [245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 297, 303, 307, 313, 335, 341, 347, 351, 927], "251": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 325, 329, 341, 347, 351], "252": [245, 248, 253, 255, 258, 265, 268, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 1150], "253": [245, 248, 253, 255, 258, 261, 268, 271, 286, 293, 307, 313, 329, 341, 347, 351], "256": [245, 248, 253, 255, 261, 268, 271, 286, 293, 303, 307, 313, 329, 335, 341, 347, 351, 402, 610, 1139, 1150], "257": [245, 248, 253, 255, 258, 261, 265, 268, 271, 286, 293, 303, 307, 313, 335, 341, 347, 351], "258": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 341, 347, 351], "0x7fda5444e6a0": 245, "259": [245, 248, 253, 255, 258, 261, 268, 286, 293, 303, 307, 313, 335, 341, 347, 351], "260": [245, 248, 253, 255, 258, 261, 268, 286, 293, 303, 307, 313, 325, 335, 341, 347, 351], "261": [245, 248, 253, 255, 261, 265, 271, 286, 293, 303, 307, 313, 341, 347, 351], "262": [245, 248, 253, 255, 261, 271, 286, 293, 303, 307, 313, 325, 335, 341, 347, 351], "263": [245, 248, 253, 255, 261, 265, 268, 271, 286, 293, 303, 307, 313, 325, 341, 347, 351], "264": [245, 248, 253, 255, 258, 261, 268, 271, 286, 293, 307, 313, 325, 335, 341, 347, 351], "265": [245, 248, 253, 255, 261, 268, 286, 293, 307, 313, 325, 335, 341, 347, 351], "266": [245, 248, 253, 255, 258, 261, 265, 271, 286, 307, 313, 341, 347, 351], "267": [245, 248, 253, 255, 258, 261, 268, 271, 286, 293, 307, 313, 325, 341, 347, 351], "268": [245, 248, 253, 255, 261, 268, 271, 286, 293, 307, 313, 335, 341, 347, 351], "269": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 341, 347, 351, 1014], "270": [245, 248, 253, 255, 261, 265, 268, 286, 293, 303, 307, 313, 325, 335, 341, 347, 351], "other_map": 245, "272": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 325, 341, 347, 351], "273": [245, 248, 253, 255, 261, 265, 286, 293, 307, 313, 335, 341, 347, 351, 545, 563, 564, 565, 566, 568, 569, 777, 779, 781, 1048], "274": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 303, 307, 313, 335, 341, 347, 351], "140575811316304": 245, "275": [245, 248, 253, 255, 261, 265, 268, 286, 293, 303, 307, 313, 325, 341, 347, 351], "276": [245, 248, 253, 255, 258, 268, 286, 293, 303, 307, 313, 325, 341, 347, 351], "277": [245, 248, 253, 255, 258, 261, 265, 268, 286, 303, 307, 313, 335, 341, 347], "278": [245, 248, 253, 255, 261, 268, 286, 293, 307, 313, 325, 335, 341, 347], "279": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 307, 313, 325, 341, 347], "280": [245, 248, 253, 255, 258, 261, 265, 286, 293, 307, 313, 325, 341, 347, 1013, 1014], "140575692459008": 245, "282": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 307, 313, 325, 341, 347], "283": [245, 248, 253, 255, 258, 261, 265, 268, 286, 307, 313, 341, 347], "284": [245, 248, 253, 255, 261, 265, 268, 286, 290, 313, 325, 335, 341, 347], "elementwis": 245, "285": [245, 248, 253, 255, 258, 261, 286, 293, 307, 313, 325, 341, 347], "286": [245, 248, 253, 255, 258, 261, 265, 286, 307, 313, 325, 341, 347], "287": [245, 248, 253, 255, 258, 261, 265, 268, 286, 293, 313, 325, 335, 341, 347], "140575692438848": 245, "288": [245, 248, 253, 255, 261, 265, 268, 286, 293, 307, 313, 325, 335, 341, 347], "140575692448960": 245, "289": [245, 248, 253, 255, 261, 286, 293, 307, 313, 325, 335, 341, 347], "290": [245, 248, 253, 255, 261, 286, 293, 307, 313, 341, 347], "292": [245, 248, 253, 261, 265, 286, 293, 303, 307, 341, 347], "293": [245, 248, 253, 255, 261, 286, 293, 303, 307, 313, 341, 347], "295": [245, 248, 253, 255, 261, 265, 286, 293, 303, 307, 341, 347], "296": [245, 248, 253, 255, 261, 286, 293, 303, 307, 313, 341, 347], "298": [245, 248, 253, 261, 265, 286, 293, 303, 307, 313, 335, 341, 347], "deep": [245, 257, 325, 712, 717, 1000], "301": [245, 248, 253, 258, 261, 265, 286, 293, 303, 307, 313, 325, 341, 347], "302": [245, 248, 253, 255, 261, 265, 286, 293, 307, 313, 325, 341, 347, 1094], "deepcopi": [245, 255, 268, 293, 313, 325, 1076], "303": [245, 248, 253, 255, 258, 261, 293, 307, 313, 325, 335, 341, 347, 1014], "304": [245, 248, 253, 255, 258, 261, 265, 325, 341, 347], "305": [245, 248, 258, 261, 286, 303, 307, 313, 325, 341, 347], "314": [245, 248, 255, 258, 261, 286, 293, 303, 307, 313, 335, 341, 347], "315": [245, 248, 261, 286, 307, 313, 335, 341, 347], "rdr": [245, 246, 329, 479, 502, 1145], "delimit": [245, 246, 261, 290, 291, 307, 329, 335, 347, 626, 924, 1064, 1145], "fund_nam": [245, 246, 1094], "fund_isin": [245, 246, 1094], "fund_tick": [245, 246, 1094], "as_of_d": [245, 246, 1094], "fund_in_univers": [245, 246, 1094], "fund_of_fund": [245, 246, 1094], "fund_holdings_count": [245, 246, 1094], "fund_holding_funds_count": [245, 246, 1094], "american": [245, 251, 678, 692, 791, 1094, 1150], "fund": [245, 1094], "balanc": [245, 249, 446, 1094], "us0240711020": [245, 1094], "abalx": [245, 1094], "20210103": [245, 1094], "084": [245, 1094], "dodg": [245, 1094], "cox": [245, 1094], "us2562011047": [245, 1094], "dodbx": [245, 1094], "410": [245, 248, 293, 307, 341, 351, 1094], "us2562191062": [245, 1094], "dodgx": [245, 1094], "franklin": [245, 1094], "incom": [245, 261, 324, 1094, 1153], "us3534963000": [245, 1094], "fkinx": [245, 1094], "america": [245, 1094], "us3998741066": [245, 1094], "agthx": [245, 1094], "price": [245, 265, 472, 495, 1094], "us7414791092": [245, 1094], "prgfx": [245, 1094], "fidel": [245, 1094], "puritan": [245, 1094], "us3163451079": [245, 1094], "fpurx": [245, 1094], "contrafund": [245, 1094], "us3160711095": [245, 1094], "fcntx": [245, 1094], "363": [245, 248, 293, 307, 325, 335, 341, 347, 351, 1094], "us77954m1053": [245, 1094], "prwcx": [245, 1094], "westburi": [245, 1094], "us6804141090": [245, 1094], "owlsx": [245, 1094], "us1401931035": [245, 1094], "caibx": [245, 1094], "582": [245, 248, 341, 1094], "harbor": [245, 1094], "institut": [245, 246, 508, 523, 1094], "us4115115044": [245, 1094], "hacax": [245, 1094], "us77954q1067": [245, 1094], "trbcx": [245, 1094], "dreyfu": [245, 1094], "treasuri": [245, 1094], "cash": [245, 1094], "inst": [245, 1094], "us2619411083": [245, 1094], "dirxx": [245, 1094], "blackrock": [245, 1094], "us09251t5092": [245, 1094], "malox": [245, 1094], "us3163453059": [245, 1094], "flpsx": [245, 1094], "liquid": [245, 1094], "us09248u5517": [245, 1094], "tttxx": [245, 1094], "dfa": [245, 1094], "portfolio": [245, 265, 1094], "us2332038841": [245, 1094], "dfgbx": [245, 1094], "feder": [245, 1094], "herm": [245, 1094], "us60934n6821": [245, 1094], "utixx": [245, 1094], "oakmark": [245, 1094], "investor": [245, 265, 1094], "us4138382027": [245, 1094], "oakix": [245, 1094], "asset": [245, 1094], "us00767h4939": [245, 1094], "787": [245, 248, 1094], "fpa": [245, 1094], "crescent": [245, 1094], "us30254t7596": [245, 1094], "fpacx": [245, 1094], "us3534968058": [245, 1094], "fcisx": [245, 1094], "us5529836943": [245, 1094], "meiix": [245, 1094], "goldman": [245, 1094], "sach": [245, 1094, 1208], "instrument": [245, 470, 472, 942, 1094], "us38142b5003": [245, 1094], "ftixx": [245, 1094], "schwab": [245, 1094], "us8085098551": [245, 1094], "swppx": [245, 1094], "508": [245, 248, 293, 325, 341, 1094], "templeton": [245, 1094], "bond": [245, 1094], "advisor": [245, 1094], "us8802084009": [245, 1094], "tgbax": [245, 1094], "us32008f6060": [245, 1094], "sgiix": [245, 1094], "ishar": [245, 1094], "etf": [245, 1094], "us4642872000": [245, 1094], "ivv": [245, 1094], "507": [245, 248, 325, 1094], "vanguard": [245, 1094], "admir": [245, 1094], "us9229087104": [245, 1094], "vfiax": [245, 1094], "510": [245, 248, 325, 335, 341, 1094], "us9229087286": [245, 1094], "vtsax": [245, 1094], "370": [245, 248, 293, 307, 335, 341, 347, 351, 1094], "spdr": [245, 1094], "midcap": [245, 1094], "us78467y1073": [245, 1094], "mdy": [245, 1094], "dow": [245, 1094], "jone": [245, 371, 372, 1094], "industri": [245, 838, 1094], "us78467x1090": [245, 1094], "health": [245, 1094], "us81369y2090": [245, 1094], "xlv": [245, 1094], "discretionari": [245, 1094], "us81369y4070": [245, 1094], "xly": [245, 1094], "energi": [245, 1094], "us81369y5069": [245, 1094], "xle": [245, 1094], "financi": [245, 1094], "us81369y6059": [245, 1094], "xlf": [245, 1094], "us81369y8030": [245, 1094], "xlk": [245, 1094], "invesco": [245, 1094], "qqq": [245, 1094], "us46090e1038": [245, 1094], "us2562061034": [245, 1094], "dodfx": [245, 1094], "msci": [245, 1094], "eaf": [245, 1094], "us4642874659": [245, 1094], "efa": [245, 1094], "897": [245, 248, 1094], "jpmorgan": [245, 1094], "sec": [245, 493, 996, 1094, 1165], "mny": [245, 1094], "mkt": [245, 1094], "us4812a28358": [245, 1094], "jtsxx": [245, 1094], "eql": [245, 1094], "wght": [245, 1094], "us46137v3574": [245, 1094], "us4812a03757": [245, 1094], "cjtxx": [245, 1094], "us00143w8753": [245, 1094], "odvyx": [245, 1094], "dividend": [245, 1094], "us78464a7634": [245, 1094], "sdy": [245, 1094], "equiti": [245, 1094], "us2332033719": [245, 1094], "dfiex": [245, 1094], "888": [245, 248, 1094], "edgewood": [245, 1094], "us0075w07594": [245, 1094], "egfix": [245, 1094], "prudenti": [245, 1094], "us00767h7585": [245, 1094], "r6": [245, 1094], "us55273h3536": [245, 1094], "meikx": [245, 1094], "327": [245, 248, 261, 286, 293, 303, 335, 341, 347, 351], "328": [245, 248, 255, 261, 293, 341, 347, 351], "geschieht": [246, 388, 925], "wunder": 246, "groesser": 246, "jave": 246, "shorthand": [246, 403, 917, 1049], "lin": 246, "lout": 246, "faster": [246, 265, 324, 455, 467, 1000, 1006], "outputlist": 246, "getus": [246, 1115], "userdatabas": [246, 1115], "userid": [246, 258], "groupid": 246, "loginshel": [246, 347], "userrecord": 246, "dens": [246, 255, 265], "pratic": 246, "_fix_float_numb": 246, "fieldnam": [246, 1145], "_fix_bool": 246, "elif": [246, 253, 329, 401, 438, 479, 1055, 1070, 1071], "_fix_dat": 246, "read_stock": [246, 1094], "csvfile": [246, 1048], "converted_record": 246, "dbname": [246, 1148], "stmt": 246, "predefin": [246, 970, 1005, 1010, 1183], "circuit": [247, 253, 263, 943, 1069, 1194, 1201], "windows_path": [248, 253], "festplatt": [248, 1204], "eue": [248, 325, 341, 365], "lehrer": 248, "50923504": 248, "202107": 248, "140106795875920": 248, "140106669190640": 248, "669": [248, 265], "140106669191024": 248, "0j": 248, "copied_l": [248, 255], "140106669249856": 248, "copied_t": 248, "tuple_containing_one_el": 248, "tran": 248, "satan": [248, 258], "queen": [248, 268, 1126, 1128, 1132, 1134, 1145], "10000000000": [248, 303, 365], "prod": 248, "resultset_to_local_db": 248, "my_local_db": 248, "basenam": 248, "normalized_path": 248, "normpath": [248, 255, 1043], "291": [248, 253, 261, 286, 303, 313, 325, 335, 341, 347, 471], "294": [248, 253, 261, 286, 303, 307, 313, 341, 347], "297": [248, 253, 255, 261, 265, 307, 335, 341, 347], "299": [248, 253, 258, 261, 265, 286, 293, 303, 307, 313, 335, 341, 347], "306": [248, 258, 265, 286, 303, 307, 313, 325, 335, 341, 347], "307": [248, 255, 261, 286, 303, 307, 313, 325, 335, 341, 347], "309": [248, 255, 258, 261, 293, 303, 307, 313, 325, 329, 341, 347, 351], "310": [248, 255, 258, 261, 307, 313, 325, 341, 347, 416], "311": [248, 255, 286, 307, 313, 335, 341, 347], "312": [248, 255, 261, 286, 293, 303, 313, 335, 341, 347], "313": [248, 255, 261, 293, 307, 313, 335, 341, 347], "316": [248, 255, 258, 261, 286, 307, 325, 335, 341, 347], "317": [248, 255, 258, 286, 293, 303, 307, 325, 335, 341, 347], "318": [248, 258, 261, 293, 307, 335, 341, 347], "319": [248, 255, 258, 261, 286, 303, 307, 325, 335, 341, 347], "321": [248, 258, 261, 293, 303, 307, 313, 325, 341, 347, 351], "322": [248, 258, 261, 293, 313, 325, 335, 341, 347], "323": [248, 255, 258, 261, 286, 307, 313, 325, 335, 341, 347], "324": [248, 258, 261, 286, 303, 307, 313, 325, 335, 341, 347, 554], "325": [248, 255, 261, 293, 303, 313, 335, 341, 347], "326": [248, 255, 261, 286, 303, 313, 325, 335, 341, 347], "329": [248, 261, 286, 293, 325, 341, 347, 351], "331": [248, 255, 261, 286, 307, 341, 347, 351], "335": [248, 255, 261, 293, 307, 335, 341, 347], "336": [248, 255, 261, 307, 335, 341, 347, 486], "337": [248, 261, 293, 307, 335, 341, 347, 351], "338": [248, 255, 293, 307, 335, 341, 347], "339": [248, 255, 261, 307, 335, 341, 347, 351], "341": [248, 255, 261, 293, 307, 325, 335, 341, 347, 351], "342": [248, 255, 261, 293, 313, 335, 341, 347], "343": [248, 261, 293, 307, 325, 341, 347, 351], "346": [248, 261, 307, 325, 335, 341, 347, 652, 653, 654, 655], "347": [248, 293, 307, 325, 335, 341, 347], "348": [248, 261, 325, 335, 341, 347], "349": [248, 261, 307, 325, 335, 341, 347, 466], "351": [248, 255, 261, 307, 335, 341, 347], "352": [248, 255, 261, 293, 307, 335, 341, 347], "353": [248, 255, 261, 293, 307, 335, 341, 347], "354": [248, 261, 307, 335, 341, 347, 500], "355": [248, 293, 307, 335, 341, 347, 351], "356": [248, 268, 307, 325, 341, 347, 351], "357": [248, 293, 307, 325, 335, 341, 347, 351], "359": [248, 307, 335, 341], "361": [248, 307, 325, 335, 341, 351], "362": [248, 293, 307, 325, 335, 341], "364": [248, 307, 341, 347, 351], "365": [248, 325, 341, 347], "366": [248, 293, 307, 341, 347, 351], "367": [248, 307, 325, 335, 341, 347, 351], "368": [248, 307, 335, 341, 347, 351], "371": [248, 293, 335, 341, 347, 351], "373": [248, 255, 293, 325, 335, 341, 351], "374": [248, 255, 307, 325, 341, 351], "376": [248, 293, 307, 325, 335, 341, 351], "377": [248, 255, 293, 307, 325, 335, 341], "379": [248, 293, 307, 325, 335, 341], "380": [248, 293, 307, 325, 341], "381": [248, 255, 293, 307, 341], "382": [248, 293, 307, 325, 341], "383": [248, 255, 293, 297, 325, 335, 341], "384": [248, 293, 307, 325, 335, 341, 351], "385": [248, 293, 307, 325, 341, 351], "386": [248, 293, 307, 325, 341, 351], "387": [248, 341, 351], "388": [248, 293, 307, 325, 341, 351], "389": [248, 325, 341, 351], "390": [248, 307, 325, 341, 351], "391": [248, 293, 325, 341], "392": [248, 293, 341, 351], "393": [248, 255, 293, 307, 325, 341, 351], "394": [248, 255, 293, 307, 325, 341, 351], "395": [248, 255, 293, 307, 325, 335, 341, 351], "396": [248, 255, 293, 341, 351, 883], "397": [248, 255, 307, 325, 341, 351], "398": [248, 255, 307, 341, 351], "399": [248, 255, 307, 325, 341, 351], "401": [248, 255, 293, 307, 341, 351], "402": [248, 293, 325, 341, 351], "403": [248, 255, 307, 325, 341, 351], "405": [248, 307, 341, 351], "406": [248, 255, 293, 307, 325, 341], "407": [248, 293, 307, 325, 341, 351], "408": [248, 255, 293, 307, 325, 341, 351], "409": [248, 255, 293, 307, 325, 335, 341, 351], "411": [248, 255, 293, 307, 335, 341], "412": [248, 307, 341], "413": [248, 255, 293, 307, 341], "414": [248, 255, 293, 307, 325, 341], "415": [248, 307, 325, 341], "416": [248, 255, 293, 325, 341], "417": [248, 255, 293, 307, 341], "418": [248, 255, 293, 325, 341, 351], "419": [248, 255, 293, 307, 325, 341], "420": [248, 255, 293, 307, 325, 341], "421": [248, 255, 293, 307, 325, 341], "422": [248, 255, 335, 341, 351], "423": [248, 293, 307, 325, 341, 351, 789], "424": [248, 255, 293, 307, 341, 351], "425": [248, 293, 341], "426": [248, 325], "427": [248, 255, 293, 325, 341, 351], "428": [248, 255, 293, 325, 341, 351], "429": [248, 293, 325, 341, 351], "430": [248, 255, 293, 325, 341, 351], "431": [248, 293, 325, 335, 341, 351, 789], "432": [248, 255, 293, 325, 351], "433": [248, 293, 325, 335, 351], "434": [248, 293, 341, 351], "435": [248, 351], "436": [248, 293, 325, 341, 351], "437": [248, 255, 293, 325, 335, 341, 351], "438": [248, 255, 325, 341, 351], "439": [248, 293, 341, 351], "440": [248, 255, 293, 341, 351], "441": [248, 255, 293, 341, 351], "442": [248, 255, 293, 335, 351], "443": [248, 255, 325, 341, 351], "444": [248, 255, 325, 341, 351], "445": [248, 255, 325, 335, 341, 351], "446": [248, 293, 351], "447": [248, 255, 293, 325, 335, 341, 351], "448": [248, 293, 341, 351], "449": [248, 255, 341], "451": [248, 255, 325, 341], "452": [248, 255, 293, 341, 351], "453": [248, 255, 325, 341, 351], "454": [248, 255, 293, 341, 351], "455": [248, 255, 341, 351], "457": 248, "458": [248, 293, 341, 351], "459": [248, 335], "460": [248, 293], "461": [248, 293, 351], "462": [248, 293, 351], "463": [248, 341], "464": [248, 293, 341, 351], "465": [248, 293, 297, 335, 341, 351], "466": [248, 293, 351], "467": [248, 293, 335, 341, 351], "468": [248, 293, 341, 351], "469": [248, 293, 341, 351, 755], "470": [248, 293, 341], "471": [248, 293, 335, 341, 351], "472": [248, 293, 341, 351], "473": [248, 341], "474": [248, 293, 341, 351], "475": [248, 293, 341, 351], "476": [248, 293, 335, 341, 351], "478": [248, 351], "479": [248, 293, 341, 351], "480": [248, 293, 341, 351], "481": [248, 293, 341], "482": [248, 293, 335, 351], "483": [248, 293, 335, 341, 351], "484": [248, 351], "485": [248, 351], "486": [248, 293, 341, 351], "487": [248, 293, 341, 351], "488": [248, 293, 341, 351], "489": 248, "490": [248, 341, 920], "491": [248, 341], "492": [248, 341, 351], "494": [248, 293, 341], "495": [248, 351], "496": [248, 351], "497": [248, 293, 341], "498": [248, 293, 341], "499": [248, 341, 351], "502": [248, 293, 341, 351], "503": [248, 341], "504": [248, 293], "505": [248, 261, 293, 341], "506": [248, 293, 341], "509": [248, 325, 351], "511": [248, 325, 335, 341], "514": [248, 341], "515": [248, 293, 341, 754], "516": [248, 293], "518": [248, 293, 341, 351], "519": [248, 341, 351], "520": [248, 293, 351], "521": [248, 293, 351, 774, 778], "522": 248, "523": 248, "524": [248, 293], "525": [248, 293, 341], "526": 248, "527": [248, 341], "528": 248, "529": [248, 335, 341], "530": 248, "531": [248, 293, 341, 351], "532": [248, 351, 789], "533": [248, 341, 351], "534": [248, 341, 351], "535": [248, 341, 351], "536": [248, 920], "538": [248, 341], "539": [248, 341], "540": [248, 335, 351], "541": [248, 341], "542": [248, 341], "543": [248, 351], "544": [248, 335, 341, 351], "545": [248, 335, 341], "546": [248, 341], "547": [248, 341, 351], "548": [248, 297, 341], "549": [248, 341], "550": [248, 341], "551": 248, "552": [248, 335, 341, 351], "553": [248, 335, 341, 351], "554": [248, 922], "555": [248, 351], "556": [248, 335], "557": [248, 341], "558": [248, 341], "559": [248, 341], "560": [248, 351], "561": [248, 341, 351], "562": [248, 341, 351], "563": [248, 341, 351], "564": [248, 341, 351], "565": [248, 341], "566": 248, "567": [248, 341, 351], "568": [248, 351], "569": [248, 341, 351], "570": 248, "571": 248, "572": 248, "573": 248, "574": [248, 341], "575": [248, 341], "576": 248, "577": [248, 341], "578": [248, 341], "579": [248, 341], "580": [248, 341], "581": [248, 341], "583": [248, 335], "584": 248, "585": [248, 341], "586": 248, "587": 248, "588": [248, 329, 341], "589": [248, 341], "590": [248, 341], "591": [248, 335], "592": 248, "593": [248, 341], "594": [248, 335], "595": [248, 341], "596": [248, 1026], "597": 248, "598": 248, "599": 248, "601": 248, "602": 248, "603": 248, "604": 248, "605": 248, "606": 248, "607": [248, 335], "608": 248, "609": [248, 335], "610": [248, 920], "611": 248, "612": [248, 883], "613": 248, "614": 248, "615": [248, 335], "616": 248, "617": 248, "618": 248, "619": 248, "620": 248, "621": 248, "622": 248, "623": 248, "624": 248, "625": [248, 265], "626": 248, "627": 248, "628": 248, "629": 248, "630": 248, "631": 248, "632": 248, "633": 248, "634": 248, "635": 248, "636": 248, "637": 248, "638": 248, "639": 248, "640": [248, 605], "641": 248, "642": 248, "643": 248, "644": [248, 1063], "645": 248, "646": 248, "647": 248, "648": 248, "649": 248, "650": [248, 335], "651": 248, "652": 248, "653": 248, "654": 248, "655": [248, 335], "656": 248, "657": [248, 335], "658": 248, "659": 248, "660": 248, "661": 248, "662": 248, "663": 248, "665": [248, 335], "668": [248, 335, 1067], "670": 248, "671": [248, 335], "672": 248, "673": 248, "674": 248, "675": 248, "676": 248, "677": 248, "678": 248, "679": 248, "680": [248, 335], "681": [248, 335], "683": 248, "684": 248, "685": 248, "687": 248, "688": 248, "689": 248, "690": 248, "691": 248, "692": 248, "693": 248, "694": 248, "695": [248, 335], "696": 248, "697": [248, 335], "698": [248, 920, 960], "699": 248, "701": [248, 335], "702": 248, "703": [248, 301, 302, 323], "704": 248, "705": 248, "706": [248, 335], "707": 248, "708": [248, 261], "709": 248, "710": [248, 605], "711": 248, "712": 248, "713": 248, "715": [248, 679], "716": [248, 335], "717": 248, "718": 248, "719": 248, "720": 248, "721": 248, "722": 248, "723": 248, "724": 248, "725": 248, "726": 248, "727": [248, 335], "728": 248, "729": 248, "730": [248, 290], "731": 248, "732": 248, "733": 248, "734": 248, "735": 248, "736": 248, "737": 248, "738": 248, "739": 248, "740": 248, "741": 248, "742": 248, "743": 248, "744": 248, "745": 248, "746": [248, 335, 1014], "747": 248, "748": 248, "749": 248, "750": 248, "751": 248, "752": 248, "753": 248, "754": 248, "756": 248, "757": 248, "758": 248, "759": 248, "760": 248, "761": 248, "762": 248, "763": 248, "764": 248, "765": 248, "766": 248, "767": 248, "768": [248, 335], "769": 248, "770": [248, 335], "772": 248, "773": 248, "774": [248, 335], "775": 248, "776": 248, "778": 248, "779": 248, "780": 248, "781": [248, 335], "782": [248, 297], "783": 248, "784": 248, "785": 248, "786": 248, "788": [248, 335], "789": [248, 255], "790": 248, "791": [248, 754], "792": 248, "793": 248, "794": 248, "795": 248, "796": 248, "797": 248, "798": 248, "801": [248, 290], "802": 248, "803": 248, "804": [248, 335], "805": 248, "806": 248, "807": 248, "808": 248, "809": [248, 329], "810": 248, "811": [248, 335], "812": [248, 335], "813": [248, 335], "814": 248, "815": [248, 265], "816": [248, 271, 335], "817": 248, "818": 248, "819": 248, "820": 248, "822": 248, "823": 248, "824": 248, "826": 248, "827": [248, 335], "828": [248, 297, 335], "829": 248, "830": 248, "831": 248, "832": 248, "833": 248, "834": 248, "835": 248, "836": 248, "837": 248, "838": 248, "839": [248, 335], "840": 248, "841": 248, "842": 248, "843": 248, "844": [248, 335], "845": 248, "846": 248, "847": 248, "848": 248, "849": 248, "850": 248, "851": 248, "852": 248, "853": 248, "854": 248, "855": 248, "856": 248, "857": 248, "858": 248, "859": 248, "860": 248, "861": 248, "862": [248, 335], "863": 248, "864": 248, "865": 248, "866": 248, "867": 248, "868": 248, "870": 248, "871": 248, "872": 248, "873": 248, "874": [248, 502], "875": [248, 937], "876": 248, "877": [248, 335], "878": 248, "879": [248, 466], "880": 248, "881": [248, 335], "882": 248, "883": [248, 335], "884": 248, "885": 248, "886": 248, "887": [248, 335], "889": 248, "890": 248, "891": [248, 335], "892": 248, "893": 248, "894": 248, "895": 248, "896": 248, "898": [248, 335], "899": 248, "901": 248, "902": [248, 920], "903": 248, "904": 248, "905": 248, "906": 248, "907": 248, "908": 248, "909": [248, 335], "911": 248, "912": 248, "913": 248, "914": 248, "915": 248, "916": 248, "917": [248, 297], "918": [248, 335], "919": 248, "920": 248, "921": [248, 335], "922": [248, 335], "923": 248, "924": 248, "925": 248, "926": [248, 335], "927": 248, "928": 248, "929": [248, 335], "930": 248, "931": 248, "932": 248, "933": [248, 335], "934": 248, "935": [248, 335], "936": 248, "937": 248, "938": 248, "939": [248, 335], "940": [248, 335], "941": [248, 335], "942": 248, "943": 248, "944": 248, "945": 248, "946": [248, 335], "947": 248, "948": 248, "949": [248, 335], "950": 248, "951": [248, 329], "952": 248, "953": 248, "954": 248, "955": 248, "956": 248, "957": 248, "958": 248, "959": 248, "960": 248, "961": 248, "962": 248, "963": 248, "964": [248, 335], "965": 248, "966": 248, "967": [248, 335], "968": 248, "969": 248, "970": 248, "971": [248, 335], "972": 248, "973": 248, "975": 248, "976": [248, 286, 293, 303, 307, 329, 335, 341], "977": [248, 286, 293, 303, 307, 329, 335, 341, 929], "timeaxi": 248, "myrang": 248, "1002": [248, 652, 653, 654, 655, 883], "1004": 248, "1006": 248, "1008": 248, "1010": 248, "1012": 248, "1014": 248, "1016": 248, "1018": 248, "1020": [248, 865, 866, 873], "1022": 248, "1028": 248, "1030": 248, "1032": 248, "1034": 248, "1036": 248, "1038": 248, "1040": 248, "1042": [248, 1000], "1046": 248, "1048": 248, "1050": 248, "1052": 248, "1054": 248, "1056": 248, "1058": 248, "1060": 248, "1062": 248, "1064": 248, "1066": 248, "1068": [248, 297], "1070": [248, 297], "1072": [248, 297], "1074": 248, "1076": 248, "1078": 248, "1080": 248, "1082": 248, "1084": 248, "1086": 248, "1088": 248, "1090": 248, "1092": 248, "1094": 248, "1096": 248, "1098": 248, "1102": 248, "1104": 248, "1106": 248, "1108": 248, "1110": 248, "1114": 248, "1116": 248, "1118": 248, "1120": 248, "1122": 248, "1124": 248, "1126": 248, "1128": 248, "1130": 248, "1132": 248, "1134": 248, "1136": 248, "1138": 248, "1140": 248, "1142": 248, "1144": 248, "1146": 248, "1148": 248, "1150": [248, 1158, 1159], "1152": [248, 1158, 1159], "1154": 248, "1156": 248, "1158": 248, "1160": 248, "1162": 248, "1164": 248, "1166": 248, "1168": 248, "1170": 248, "1172": 248, "1174": 248, "1176": 248, "1178": 248, "1180": 248, "1182": 248, "1184": 248, "1186": 248, "1188": 248, "1190": 248, "1192": 248, "1194": 248, "1196": 248, "1198": 248, "1202": 248, "1204": 248, "1206": 248, "1208": 248, "1210": 248, "1212": 248, "1214": 248, "1216": 248, "1218": 248, "1220": 248, "1222": 248, "1224": 248, "1226": 248, "1228": 248, "1230": 248, "1232": 248, "1236": 248, "1238": 248, "1240": 248, "1242": 248, "1246": 248, "1248": 248, "1250": 248, "1252": 248, "1254": [248, 521, 522, 523, 535, 536, 537], "1256": 248, "1258": 248, "1260": [248, 486], "1262": 248, "1264": 248, "1266": 248, "1268": 248, "1270": 248, "1272": 248, "1274": 248, "1276": 248, "1278": 248, "1280": 248, "1282": 248, "1284": 248, "1286": 248, "1288": 248, "1290": 248, "1292": 248, "1294": 248, "1296": 248, "1298": 248, "1300": 248, "1302": 248, "1304": 248, "1306": 248, "1308": 248, "1310": 248, "1312": 248, "1314": 248, "1316": 248, "1318": 248, "1320": 248, "1322": 248, "1324": 248, "1326": 248, "1328": 248, "1330": 248, "1332": 248, "1334": 248, "1336": 248, "1338": 248, "1340": 248, "1342": [248, 1159], "1344": 248, "1346": 248, "1348": 248, "1350": 248, "1352": [248, 970], "1354": 248, "1356": 248, "1358": 248, "1360": 248, "1362": 248, "1364": 248, "1366": 248, "1368": 248, "1370": 248, "1372": 248, "1374": 248, "1378": 248, "1380": 248, "1382": 248, "1384": 248, "1386": 248, "1388": 248, "1390": 248, "1392": [248, 502, 1159], "1394": 248, "1396": 248, "1398": 248, "1400": 248, "1402": 248, "1406": 248, "1408": 248, "1410": 248, "1412": 248, "1414": 248, "1416": [248, 1081], "1418": 248, "1420": 248, "1422": 248, "1424": 248, "1426": 248, "1428": 248, "1430": 248, "1432": 248, "1434": 248, "1436": 248, "1438": 248, "1440": 248, "1442": 248, "1444": 248, "1446": 248, "1448": 248, "1450": 248, "1452": 248, "1454": 248, "1456": 248, "1458": 248, "1460": 248, "1462": 248, "1464": 248, "1466": 248, "1468": 248, "1470": 248, "1472": 248, "1474": 248, "1476": 248, "1478": 248, "1480": 248, "1482": 248, "1484": 248, "1486": 248, "1488": 248, "1490": 248, "1492": 248, "1494": 248, "1496": 248, "1498": 248, "1502": 248, "1504": 248, "1506": 248, "1508": 248, "1510": 248, "1512": 248, "1514": 248, "1516": 248, "1518": 248, "1520": 248, "1522": 248, "1524": 248, "1526": 248, "1528": 248, "1530": 248, "1532": 248, "1534": 248, "1536": [248, 1012], "1538": 248, "1540": 248, "1542": 248, "1544": 248, "1546": 248, "1548": 248, "1550": 248, "1552": 248, "1554": 248, "1556": 248, "1558": [248, 881], "1560": 248, "1562": 248, "1564": 248, "1566": 248, "1568": 248, "1570": 248, "1572": 248, "1574": 248, "1576": 248, "1578": 248, "1580": 248, "1582": 248, "1584": 248, "1586": 248, "1588": 248, "1590": 248, "1592": 248, "1594": 248, "1596": 248, "1598": 248, "1600": 248, "1602": 248, "1604": [248, 1006], "1606": 248, "1608": 248, "1610": 248, "1612": 248, "1614": 248, "1616": 248, "1618": 248, "1620": 248, "1622": 248, "1624": 248, "1626": 248, "1628": 248, "1630": 248, "1632": 248, "1634": [248, 521, 522], "1636": 248, "1638": 248, "1640": 248, "1642": 248, "1644": 248, "1646": [248, 1158], "1648": 248, "1650": 248, "1652": 248, "1654": 248, "1656": 248, "1658": 248, "1660": 248, "1662": 248, "1664": 248, "1666": 248, "1668": 248, "1672": 248, "1674": 248, "1676": 248, "1678": 248, "1680": 248, "1682": 248, "1684": 248, "1686": 248, "1688": [248, 1013, 1014], "1690": 248, "1692": 248, "1694": 248, "1696": 248, "1698": 248, "1700": 248, "1702": 248, "1704": 248, "1706": [248, 1024], "1708": 248, "1710": 248, "1712": 248, "1714": [248, 1158], "1716": [248, 1158], "1718": 248, "1722": 248, "1724": 248, "1726": 248, "1728": 248, "1730": 248, "1732": 248, "1734": 248, "1736": 248, "1738": 248, "1740": 248, "1742": 248, "1744": 248, "1746": 248, "1748": 248, "1750": 248, "1752": 248, "1754": 248, "1756": 248, "1758": 248, "1760": 248, "1762": 248, "1764": [248, 307], "1766": 248, "1768": 248, "1770": 248, "1772": 248, "1774": 248, "1776": 248, "1778": 248, "1780": 248, "1782": 248, "1784": 248, "1786": 248, "1788": 248, "1790": 248, "1792": 248, "1794": 248, "1796": 248, "1798": 248, "1800": [248, 1012], "1802": 248, "1804": 248, "1806": 248, "1808": 248, "1810": 248, "1812": 248, "1814": 248, "1816": 248, "1818": 248, "1820": 248, "1822": 248, "1824": 248, "1826": 248, "1828": 248, "1830": 248, "1832": 248, "1834": 248, "1836": 248, "1838": 248, "1840": 248, "1842": 248, "1844": 248, "1846": 248, "1848": 248, "1850": 248, "1852": 248, "1854": 248, "1856": 248, "1858": 248, "1860": 248, "1862": 248, "1864": 248, "1866": 248, "1868": 248, "1870": 248, "1872": 248, "1874": 248, "1876": 248, "1878": 248, "1880": 248, "1882": 248, "1884": 248, "1886": 248, "1888": 248, "1890": 248, "1892": 248, "1894": 248, "1896": 248, "1898": 248, "1900": [248, 258, 1126, 1128, 1132, 1134], "1902": 248, "1904": 248, "1906": 248, "1908": 248, "1910": 248, "1912": 248, "1914": 248, "1916": 248, "1918": 248, "1920": 248, "1922": 248, "1924": 248, "1926": 248, "1928": 248, "1930": 248, "1932": 248, "1934": 248, "1938": 248, "1940": 248, "1942": 248, "1944": 248, "1946": 248, "1948": 248, "1950": 248, "1952": 248, "1954": [248, 1092], "1956": [248, 1061], "1958": 248, "1962": 248, "1964": 248, "1968": [248, 431], "1970": [248, 770], "1972": 248, "1974": 248, "1976": 248, "1978": [248, 391], "1980": [248, 596, 1012], "1984": 248, "1986": [248, 1126, 1128, 1132, 1134], "1988": [248, 391, 505], "1990": [248, 596], "1992": 248, "1994": 248, "2004": 248, "2026": 248, "2028": 248, "2030": 248, "2032": 248, "2034": 248, "2036": 248, "2038": 248, "2040": 248, "2042": 248, "2044": 248, "2046": 248, "2050": 248, "2052": 248, "2054": 248, "2056": 248, "2058": 248, "2060": 248, "2062": 248, "2064": 248, "2066": 248, "2068": 248, "2070": 248, "2072": 248, "2074": 248, "2076": 248, "2078": 248, "2080": 248, "2082": 248, "2084": 248, "2086": 248, "2088": 248, "2090": 248, "2092": 248, "2094": 248, "2096": 248, "2098": 248, "2100": 248, "2102": 248, "2104": 248, "2106": 248, "2108": 248, "2110": 248, "2112": 248, "2114": 248, "2116": 248, "2118": 248, "2120": 248, "2122": 248, "2124": 248, "2126": 248, "2128": 248, "2130": 248, "2132": 248, "2134": 248, "2136": 248, "2138": 248, "2140": 248, "2142": 248, "2144": 248, "2146": 248, "2148": 248, "2150": 248, "2152": 248, "2154": 248, "2156": 248, "2158": 248, "2160": 248, "2162": 248, "2164": 248, "2166": 248, "2168": 248, "2170": 248, "2172": 248, "2174": 248, "2176": 248, "2178": 248, "2180": 248, "2182": 248, "2184": 248, "2186": 248, "2188": 248, "2190": 248, "2192": 248, "2194": 248, "2196": [248, 789], "2198": 248, "2200": 248, "2202": 248, "2204": 248, "2206": 248, "2208": 248, "2210": 248, "2214": 248, "2216": 248, "2218": 248, "2220": 248, "2222": 248, "2224": 248, "2226": 248, "2228": 248, "2230": 248, "2232": 248, "2234": 248, "2236": 248, "2238": 248, "2240": 248, "2242": 248, "2244": 248, "2246": 248, "2248": 248, "2250": 248, "2252": 248, "2254": 248, "2256": 248, "2258": 248, "2260": 248, "2262": 248, "2264": 248, "2266": 248, "2268": 248, "2272": 248, "2274": 248, "2276": 248, "2278": 248, "2280": 248, "2282": 248, "2284": 248, "2286": 248, "2288": 248, "2290": 248, "2292": 248, "2294": 248, "2296": 248, "2298": 248, "2300": 248, "2302": 248, "2304": 248, "2306": 248, "2308": 248, "2310": 248, "2312": 248, "2314": 248, "2316": 248, "2318": 248, "2320": 248, "2322": 248, "2324": 248, "2326": 248, "2328": 248, "2330": 248, "2332": [248, 920], "2334": 248, "2336": 248, "2338": 248, "2340": 248, "2342": 248, "2344": 248, "2346": 248, "2348": 248, "2350": 248, "2352": 248, "2354": 248, "2356": 248, "2358": 248, "2360": 248, "2362": 248, "2364": 248, "2366": 248, "2368": 248, "2370": 248, "2372": 248, "2374": 248, "2376": 248, "2378": 248, "2380": 248, "2382": 248, "2384": 248, "2386": 248, "2388": 248, "2390": 248, "2392": 248, "2394": 248, "2396": 248, "2398": 248, "2400": 248, "2402": 248, "2404": 248, "2406": 248, "2408": 248, "2410": 248, "2412": 248, "2414": 248, "2416": 248, "2418": 248, "2420": 248, "2422": 248, "2424": 248, "2426": 248, "2428": 248, "2430": 248, "2432": 248, "2434": 248, "2436": 248, "2438": 248, "2440": [248, 329, 335, 341], "2442": 248, "2444": 248, "2446": 248, "2448": 248, "2450": 248, "2452": 248, "2454": 248, "2456": 248, "2458": 248, "2460": [248, 745], "2462": 248, "2464": 248, "2466": 248, "2468": 248, "2470": 248, "2472": 248, "2474": 248, "2476": 248, "2478": 248, "2480": 248, "2482": 248, "2484": 248, "2486": 248, "2488": 248, "2490": 248, "2492": 248, "2494": 248, "2496": 248, "2498": 248, "2500": 248, "2502": 248, "2504": 248, "2506": 248, "2508": 248, "2510": 248, "2512": 248, "2514": 248, "2516": 248, "2518": 248, "2520": 248, "2522": 248, "2524": 248, "2526": 248, "2528": 248, "2530": 248, "2532": 248, "2534": 248, "2536": 248, "2538": 248, "2540": 248, "2542": 248, "2544": 248, "2546": 248, "2548": 248, "2550": 248, "2552": 248, "2554": 248, "2556": 248, "2558": 248, "2560": 248, "2562": 248, "2564": 248, "2566": 248, "2568": 248, "2570": 248, "2572": 248, "2574": 248, "2576": 248, "2578": 248, "2580": 248, "2582": 248, "2584": 248, "2586": 248, "2588": 248, "2590": 248, "2592": 248, "2594": 248, "2596": 248, "2598": 248, "2600": 248, "2602": 248, "2604": 248, "2606": 248, "2608": 248, "2610": 248, "2612": 248, "2614": 248, "2616": 248, "2618": 248, "2620": 248, "2622": 248, "2624": 248, "2626": 248, "2628": 248, "2630": 248, "2632": 248, "2634": 248, "2636": 248, "2638": 248, "2640": [248, 307], "2642": 248, "2644": 248, "2646": 248, "2648": 248, "2650": 248, "2652": 248, "2654": 248, "2656": 248, "2658": 248, "2660": 248, "2662": 248, "2664": 248, "2666": 248, "2668": 248, "2670": 248, "2672": 248, "2674": 248, "2676": 248, "2678": 248, "2680": 248, "2682": 248, "2684": 248, "2686": 248, "2688": 248, "2690": 248, "2692": 248, "2694": 248, "2696": 248, "2698": 248, "2700": 248, "2702": 248, "2704": 248, "2706": [248, 253], "2708": 248, "2710": 248, "2712": 248, "2714": 248, "2716": 248, "2718": 248, "2720": 248, "2722": 248, "2724": 248, "2726": 248, "2728": 248, "2730": [248, 303], "2732": 248, "2734": 248, "2736": 248, "2738": 248, "2740": 248, "2742": 248, "2744": 248, "2746": [248, 920, 946, 970], "2748": [248, 268, 286, 293, 325, 329, 335, 341], "2750": 248, "2752": 248, "2754": 248, "2756": 248, "2758": 248, "2760": 248, "2762": 248, "2764": 248, "2766": 248, "2768": 248, "2770": 248, "2772": 248, "2774": 248, "2776": 248, "2778": 248, "2780": 248, "2782": 248, "2784": 248, "2786": 248, "2788": 248, "2790": 248, "2792": 248, "2794": 248, "2796": 248, "2798": 248, "2800": [248, 291, 479], "2802": [248, 479], "2804": 248, "2806": 248, "2808": 248, "2810": 248, "2812": 248, "2814": 248, "2816": 248, "2818": 248, "2820": 248, "2822": 248, "2824": 248, "2826": 248, "2828": [248, 473], "2830": 248, "2832": 248, "2834": 248, "2836": 248, "2838": 248, "2840": 248, "2842": 248, "2844": 248, "2846": 248, "2848": 248, "2850": 248, "2852": 248, "2854": 248, "2856": 248, "2858": 248, "2860": 248, "2862": 248, "2864": 248, "2866": 248, "2868": 248, "2870": 248, "2872": 248, "2874": 248, "2876": 248, "2878": 248, "2880": 248, "2882": 248, "2884": 248, "2886": 248, "2888": 248, "2890": 248, "2892": 248, "2894": 248, "2896": 248, "2898": 248, "2900": 248, "2902": 248, "2904": 248, "2906": 248, "2910": 248, "2912": 248, "2914": 248, "2916": 248, "2918": 248, "2920": 248, "2922": 248, "2924": 248, "2926": 248, "2928": 248, "2930": 248, "2932": 248, "2934": 248, "2936": 248, "2938": 248, "2940": 248, "2942": 248, "2944": 248, "2946": 248, "2948": 248, "2950": 248, "2952": 248, "2954": 248, "2956": 248, "2958": 248, "2960": 248, "2962": 248, "2964": 248, "2966": 248, "2968": 248, "2970": 248, "2972": 248, "2974": 248, "2976": 248, "2978": 248, "2980": 248, "2982": 248, "2984": 248, "2986": 248, "2988": 248, "2990": 248, "2992": 248, "2994": 248, "2996": 248, "2998": 248, "3002": 248, "3004": 248, "3006": 248, "3008": 248, "3010": 248, "3012": 248, "3014": 248, "3016": 248, "3018": 248, "3020": 248, "3022": 248, "3024": 248, "3026": 248, "3028": 248, "3030": 248, "3032": 248, "3034": 248, "3036": 248, "3038": 248, "3040": 248, "3042": 248, "3044": 248, "3046": 248, "3048": 248, "3050": 248, "3052": 248, "3054": 248, "3056": 248, "3058": 248, "3060": 248, "3062": 248, "3064": 248, "3066": 248, "3068": 248, "3070": 248, "3072": 248, "3074": 248, "3076": 248, "3078": 248, "3080": 248, "3082": 248, "3084": 248, "3086": 248, "3088": 248, "3090": 248, "3092": 248, "3094": 248, "3096": 248, "3098": 248, "3100": 248, "3102": 248, "3104": 248, "3106": 248, "3108": 248, "3110": [248, 297], "3112": 248, "3114": 248, "3116": 248, "3118": 248, "3120": 248, "3122": 248, "3124": 248, "3126": 248, "3128": 248, "3130": 248, "3132": 248, "3134": 248, "3136": 248, "3138": 248, "3140": 248, "3142": 248, "3144": 248, "3146": 248, "3148": 248, "3150": 248, "3152": 248, "3154": 248, "3156": 248, "3158": 248, "3160": 248, "3162": 248, "3164": 248, "3166": 248, "3168": 248, "3170": 248, "3172": 248, "3174": 248, "3176": 248, "3178": 248, "3180": 248, "3182": 248, "3184": 248, "3186": 248, "3188": 248, "3190": 248, "3192": 248, "3194": 248, "3196": 248, "3198": 248, "3200": 248, "3202": 248, "3204": 248, "3206": 248, "3208": 248, "3210": 248, "3212": 248, "3214": 248, "3216": 248, "3218": 248, "3220": 248, "3222": 248, "3224": 248, "3226": 248, "3228": 248, "3230": 248, "3232": 248, "3234": 248, "3236": 248, "3238": 248, "3240": 248, "3242": 248, "3244": 248, "3246": 248, "3248": 248, "3250": 248, "3252": 248, "3254": 248, "3256": 248, "3258": 248, "3260": 248, "3262": 248, "3264": 248, "3266": 248, "3268": 248, "3270": 248, "3272": 248, "3274": 248, "3276": 248, "3278": 248, "3280": 248, "3282": 248, "3284": 248, "3286": 248, "3288": 248, "3290": 248, "3292": 248, "3294": 248, "3296": 248, "3298": 248, "3300": 248, "3302": 248, "3304": 248, "3306": 248, "3308": 248, "3310": 248, "3312": 248, "3314": 248, "3316": 248, "3318": 248, "3320": 248, "3322": 248, "3324": 248, "3326": 248, "3328": 248, "3330": 248, "3332": 248, "3334": 248, "3336": 248, "3338": 248, "3340": 248, "3342": 248, "3344": 248, "3346": 248, "3348": 248, "3350": 248, "3352": 248, "3354": 248, "3356": 248, "3358": 248, "3360": 248, "3362": 248, "3364": 248, "3366": 248, "3368": 248, "3370": 248, "3372": 248, "3374": 248, "3376": 248, "3378": 248, "3380": 248, "3382": 248, "3384": 248, "3386": 248, "3388": 248, "3390": 248, "3392": 248, "3394": 248, "3396": 248, "3398": 248, "3400": 248, "3402": 248, "3404": 248, "3406": 248, "3408": 248, "3410": 248, "3412": 248, "3414": 248, "3416": 248, "3418": 248, "3420": 248, "3422": 248, "3424": 248, "3426": 248, "3428": 248, "3430": 248, "3432": 248, "3434": 248, "3436": 248, "3438": 248, "3440": 248, "3442": 248, "3444": 248, "3446": 248, "3448": 248, "3450": 248, "3452": 248, "3454": 248, "3456": 248, "3458": 248, "3460": 248, "3462": 248, "3464": 248, "3466": 248, "3468": 248, "3470": 248, "3472": 248, "3474": 248, "3476": 248, "3478": 248, "3480": 248, "3482": 248, "3484": 248, "3486": 248, "3488": 248, "3490": 248, "3492": 248, "3494": 248, "3496": 248, "3498": 248, "3500": 248, "3502": 248, "3504": 248, "3506": 248, "3508": 248, "3510": 248, "3512": 248, "3514": 248, "3516": 248, "3518": 248, "3520": 248, "3522": 248, "3524": 248, "3526": 248, "3528": 248, "3530": 248, "3532": 248, "3534": 248, "3536": 248, "3538": 248, "3540": 248, "3542": 248, "3544": 248, "3546": 248, "3548": 248, "3550": 248, "3552": 248, "3554": 248, "3556": 248, "3558": 248, "3560": 248, "3562": 248, "3564": 248, "3566": 248, "3568": 248, "3570": 248, "3572": 248, "3574": 248, "3576": 248, "3578": 248, "3580": 248, "3582": 248, "3584": 248, "3586": 248, "3588": 248, "3590": 248, "3592": 248, "3594": 248, "3596": 248, "3598": 248, "3602": 248, "3604": 248, "3606": 248, "3608": 248, "3610": 248, "3612": 248, "3614": 248, "3616": 248, "3618": 248, "3620": 248, "3622": 248, "3624": 248, "3626": 248, "3628": 248, "3630": 248, "3632": 248, "3634": 248, "3636": 248, "3638": 248, "3640": 248, "3642": 248, "3644": 248, "3646": 248, "3648": 248, "3650": 248, "3652": 248, "3654": 248, "3656": 248, "3658": 248, "3660": 248, "3662": 248, "3664": 248, "3666": 248, "3668": 248, "3670": 248, "3672": 248, "3674": 248, "3676": 248, "3678": 248, "3680": 248, "3682": 248, "3684": 248, "3686": 248, "3688": 248, "3690": 248, "3692": 248, "3694": 248, "3696": 248, "3698": 248, "3700": 248, "3702": 248, "3704": 248, "3706": 248, "3708": 248, "3710": 248, "3712": 248, "3714": 248, "3716": 248, "3718": 248, "3720": 248, "3722": [248, 967], "3724": 248, "3726": 248, "3728": 248, "3730": 248, "3732": 248, "3734": 248, "3736": 248, "3738": 248, "3740": 248, "3742": 248, "3744": 248, "3746": 248, "3748": 248, "3750": 248, "3752": 248, "3754": 248, "3756": 248, "3758": 248, "3760": 248, "3762": 248, "3764": 248, "3766": 248, "3768": 248, "3770": [248, 297], "3772": 248, "3774": 248, "3776": 248, "3778": 248, "3780": 248, "3782": 248, "3784": 248, "3786": 248, "3788": 248, "3790": [248, 1159], "3792": [248, 1159], "3794": [248, 1159], "3796": [248, 1159], "3798": [248, 1159], "3800": [248, 1159], "3802": [248, 1159], "3804": 248, "3806": 248, "3808": 248, "3810": 248, "3812": 248, "3814": 248, "3816": 248, "3818": 248, "3820": 248, "3822": 248, "3824": 248, "3826": 248, "3828": 248, "3830": 248, "3832": 248, "3834": 248, "3836": 248, "3838": 248, "3840": 248, "3842": 248, "3844": 248, "3846": 248, "3848": 248, "3850": 248, "3852": 248, "3854": 248, "3856": 248, "3858": 248, "3860": 248, "3862": 248, "3864": 248, "3866": 248, "3868": 248, "3870": 248, "3872": 248, "3874": 248, "3876": 248, "3878": 248, "3880": 248, "3882": 248, "3884": 248, "3886": 248, "3888": 248, "3890": 248, "3892": 248, "3894": 248, "3896": 248, "3898": 248, "3900": 248, "3902": 248, "3904": 248, "3906": 248, "3908": 248, "3910": 248, "3912": 248, "3914": 248, "3916": 248, "3918": 248, "3920": 248, "3922": 248, "3924": 248, "3926": 248, "3928": 248, "3930": 248, "3932": 248, "3934": 248, "3936": 248, "3938": 248, "3940": 248, "3942": 248, "3946": 248, "3948": 248, "3950": 248, "3952": 248, "3954": 248, "3956": 248, "3958": 248, "3960": 248, "3962": 248, "3964": 248, "3966": 248, "3968": 248, "3970": 248, "3972": 248, "3974": 248, "3976": 248, "3978": 248, "3980": 248, "3982": 248, "3984": 248, "3986": 248, "3988": 248, "3990": 248, "3992": 248, "3994": 248, "3996": 248, "3998": 248, "4002": 248, "4004": 248, "4006": 248, "4008": 248, "4010": 248, "4012": 248, "4014": 248, "4016": 248, "4018": 248, "4020": 248, "4022": 248, "4024": 248, "4026": 248, "4028": 248, "4030": 248, "4032": 248, "4034": 248, "4036": 248, "4038": 248, "4040": 248, "4042": 248, "4044": 248, "4046": 248, "4048": 248, "4050": 248, "4052": 248, "4054": 248, "4056": 248, "4058": 248, "4060": 248, "4062": 248, "4064": 248, "4066": 248, "4068": 248, "4070": 248, "4072": 248, "4074": 248, "4076": 248, "4078": 248, "4080": 248, "4082": 248, "4084": 248, "4086": 248, "4088": 248, "4090": 248, "4092": 248, "4094": 248, "4098": 248, "4100": 248, "4102": 248, "4104": 248, "4106": 248, "4108": 248, "4110": 248, "4112": 248, "4114": 248, "4116": 248, "4118": 248, "4120": 248, "4122": 248, "4124": 248, "4126": 248, "4128": 248, "4130": 248, "4132": 248, "4134": 248, "4136": 248, "4138": 248, "4140": 248, "4142": 248, "4144": 248, "4146": 248, "4148": 248, "4150": 248, "4152": 248, "4154": 248, "4156": 248, "4158": 248, "4160": 248, "4162": 248, "4164": 248, "4166": 248, "4168": 248, "4170": 248, "4172": 248, "4174": 248, "4176": 248, "4178": 248, "4180": 248, "4182": 248, "4184": 248, "4186": 248, "4188": 248, "4190": 248, "4192": 248, "4194": 248, "4196": 248, "4198": 248, "4200": 248, "4202": 248, "4204": 248, "4206": 248, "4208": 248, "4210": 248, "4212": 248, "4214": 248, "4216": 248, "4218": 248, "4220": 248, "4222": 248, "4224": 248, "4226": 248, "4228": 248, "4230": 248, "4232": 248, "4234": [248, 1159], "4236": [248, 1159], "4238": [248, 1159], "4240": 248, "4242": 248, "4244": 248, "4246": 248, "4248": 248, "4250": 248, "4252": 248, "4254": 248, "4256": 248, "4258": 248, "4260": 248, "4262": 248, "4264": 248, "4266": 248, "4268": 248, "4270": 248, "4272": 248, "4274": 248, "4276": 248, "4278": 248, "4280": 248, "4282": 248, "4284": 248, "4286": 248, "4288": 248, "4290": 248, "4292": 248, "4294": 248, "4296": 248, "4298": 248, "4300": 248, "4302": 248, "4304": 248, "4306": 248, "4308": 248, "4310": 248, "4312": 248, "4314": 248, "4316": 248, "4318": 248, "4320": 248, "4322": 248, "4324": 248, "4326": 248, "4328": 248, "4330": 248, "4332": 248, "4334": 248, "4336": 248, "4338": 248, "4340": 248, "4342": 248, "4344": 248, "4346": 248, "4348": 248, "4350": 248, "4352": 248, "4354": 248, "4356": 248, "4358": 248, "4360": 248, "4362": 248, "4364": 248, "4366": 248, "4368": 248, "4370": 248, "4372": 248, "4374": 248, "4376": 248, "4378": 248, "4380": 248, "4382": 248, "4384": 248, "4386": 248, "4388": 248, "4390": 248, "4392": 248, "4394": 248, "4396": 248, "4398": 248, "4400": 248, "4402": 248, "4404": 248, "4406": 248, "4408": 248, "4410": 248, "4412": 248, "4414": 248, "4416": 248, "4418": 248, "4420": 248, "4422": 248, "4424": 248, "4426": 248, "4428": 248, "4430": 248, "4432": 248, "4434": 248, "4436": 248, "4438": 248, "4440": 248, "4442": 248, "4444": 248, "4446": 248, "4448": 248, "4450": 248, "4452": 248, "4454": 248, "4456": 248, "4458": 248, "4460": 248, "4462": 248, "4464": 248, "4466": 248, "4468": 248, "4470": 248, "4472": 248, "4474": 248, "4476": 248, "4478": 248, "4480": 248, "4482": 248, "4484": 248, "4486": 248, "4488": 248, "4490": 248, "4492": 248, "4494": 248, "4496": 248, "4498": 248, "4502": 248, "4504": 248, "4506": 248, "4508": 248, "4510": 248, "4512": 248, "4514": 248, "4516": 248, "4518": 248, "4520": 248, "4522": 248, "4524": 248, "4526": 248, "4528": 248, "4530": 248, "4532": 248, "4534": 248, "4536": 248, "4538": 248, "4540": 248, "4542": 248, "4544": 248, "4546": 248, "4548": 248, "4550": 248, "4552": 248, "4554": 248, "4556": 248, "4558": 248, "4560": 248, "4562": 248, "4564": 248, "4566": 248, "4568": 248, "4570": 248, "4572": 248, "4574": 248, "4578": 248, "4580": 248, "4582": 248, "4584": 248, "4586": 248, "4588": 248, "4590": 248, "4592": 248, "4594": 248, "4596": 248, "4598": 248, "4600": 248, "4602": 248, "4604": 248, "4606": 248, "4608": 248, "4610": 248, "4612": 248, "4614": 248, "4616": 248, "4618": 248, "4620": 248, "4622": 248, "4624": 248, "4626": 248, "4628": [248, 261], "4630": [248, 473], "4632": 248, "4634": 248, "4636": 248, "4638": 248, "4640": 248, "4642": 248, "4644": 248, "4646": 248, "4648": 248, "4650": 248, "4652": 248, "4654": 248, "4656": 248, "4658": 248, "4662": 248, "4664": 248, "4666": 248, "4668": 248, "4670": 248, "4672": 248, "4674": 248, "4676": 248, "4680": 248, "4682": 248, "4684": 248, "4686": 248, "4688": 248, "4690": 248, "4692": 248, "4694": 248, "4696": 248, "4698": 248, "4700": 248, "4702": 248, "4704": 248, "4706": 248, "4708": 248, "4710": 248, "4712": 248, "4714": 248, "4716": 248, "4718": 248, "4720": 248, "4722": 248, "4724": 248, "4726": 248, "4728": 248, "4730": 248, "4732": 248, "4734": 248, "4736": 248, "4738": 248, "4740": 248, "4742": 248, "4744": 248, "4746": 248, "4748": 248, "4750": 248, "4752": 248, "4754": 248, "4756": 248, "4758": 248, "4760": 248, "4762": 248, "4764": 248, "4766": 248, "4768": 248, "4770": 248, "4772": 248, "4774": 248, "4776": 248, "4778": 248, "4780": 248, "4782": 248, "4784": 248, "4786": 248, "4788": 248, "4790": 248, "4792": 248, "4794": 248, "4796": 248, "4798": 248, "4802": 248, "4804": 248, "4806": 248, "4808": 248, "4810": 248, "4812": 248, "4814": 248, "4816": 248, "4818": 248, "4820": 248, "4822": 248, "4824": 248, "4826": 248, "4828": 248, "4830": 248, "4832": 248, "4834": 248, "4836": 248, "4838": 248, "4840": 248, "4842": 248, "4844": 248, "4846": 248, "4848": 248, "4850": 248, "4852": 248, "4854": 248, "4856": 248, "4858": 248, "4860": 248, "4862": 248, "4864": 248, "4866": [248, 258], "4868": 248, "4870": 248, "4872": 248, "4874": 248, "4876": 248, "4878": 248, "4880": 248, "4882": [248, 883], "4884": 248, "4886": 248, "4888": 248, "4890": 248, "4892": 248, "4894": 248, "4896": 248, "4898": 248, "4900": 248, "4902": 248, "4904": 248, "4906": 248, "4908": 248, "4910": 248, "4912": 248, "4914": 248, "4916": 248, "4918": 248, "4920": 248, "4922": 248, "4924": 248, "4926": [248, 261], "4928": 248, "4930": 248, "4932": 248, "4934": 248, "4936": 248, "4938": 248, "4940": 248, "4942": 248, "4944": 248, "4946": 248, "4948": 248, "4950": [248, 265], "4952": 248, "4954": 248, "4956": 248, "4958": 248, "4960": 248, "4962": 248, "4964": 248, "4966": 248, "4968": 248, "4970": 248, "4972": 248, "4974": 248, "4976": 248, "4978": 248, "4980": 248, "4982": 248, "4984": 248, "4986": 248, "4988": 248, "4990": 248, "4992": 248, "4994": 248, "4996": 248, "4998": 248, "5002": 248, "5004": 248, "5006": 248, "5008": 248, "5010": 248, "5012": 248, "5014": 248, "5016": 248, "5018": 248, "5020": 248, "5022": 248, "5024": 248, "5026": 248, "5028": 248, "5030": 248, "5032": 248, "5034": 248, "5036": 248, "5038": 248, "5040": 248, "5042": 248, "5044": 248, "5046": 248, "5048": 248, "5052": 248, "5054": 248, "5056": 248, "5058": 248, "5060": 248, "5062": 248, "5064": 248, "5066": 248, "5068": 248, "5070": 248, "5072": 248, "5074": 248, "5076": 248, "5078": 248, "5080": [248, 920], "5082": 248, "5084": 248, "5086": 248, "5088": 248, "5090": 248, "5092": 248, "5094": 248, "5096": 248, "5098": 248, "5100": 248, "5102": 248, "5104": 248, "5106": 248, "5108": 248, "5110": 248, "5112": 248, "5114": 248, "5116": 248, "5118": 248, "5120": 248, "5122": 248, "5124": 248, "5126": 248, "5128": 248, "5130": 248, "5132": 248, "5134": 248, "5136": 248, "5138": 248, "5140": 248, "5142": 248, "5144": 248, "5146": 248, "5148": 248, "5150": 248, "5152": 248, "5154": 248, "5156": 248, "5158": 248, "5160": 248, "5162": 248, "5164": 248, "5166": 248, "5168": 248, "5170": 248, "5172": 248, "5174": 248, "5176": 248, "5178": 248, "5180": 248, "5182": 248, "5184": 248, "5186": 248, "5188": 248, "5190": 248, "5192": 248, "5194": 248, "5196": 248, "5198": 248, "5200": 248, "5202": 248, "5204": 248, "5206": 248, "5208": 248, "5210": 248, "5212": 248, "5214": 248, "5216": 248, "5218": 248, "5220": 248, "5222": 248, "5224": 248, "5226": 248, "5228": 248, "5230": 248, "5232": 248, "5234": 248, "5236": 248, "5238": 248, "5240": 248, "5242": 248, "5244": 248, "5246": 248, "5248": 248, "5250": 248, "5252": 248, "5254": 248, "5256": 248, "5258": 248, "5260": 248, "5262": 248, "5264": 248, "5266": 248, "5268": 248, "5270": 248, "5272": 248, "5274": 248, "5276": 248, "5278": 248, "5280": 248, "5282": 248, "5284": 248, "5286": 248, "5288": 248, "5290": 248, "5292": 248, "5294": 248, "5296": 248, "5298": 248, "5300": 248, "5302": 248, "5304": 248, "5306": 248, "5308": 248, "5310": 248, "5312": 248, "5314": 248, "5316": 248, "5318": 248, "5320": 248, "5322": 248, "5324": 248, "5326": 248, "5328": 248, "5330": 248, "5332": 248, "5334": 248, "5336": 248, "5338": 248, "5340": 248, "5342": 248, "5344": 248, "5346": 248, "5348": 248, "5350": 248, "5352": 248, "5354": 248, "5356": 248, "5358": 248, "5360": 248, "5362": [248, 291, 479], "5364": 248, "5366": 248, "5368": 248, "5370": 248, "5372": 248, "5374": 248, "5376": 248, "5378": 248, "5380": 248, "5382": 248, "5384": 248, "5386": 248, "5388": 248, "5390": 248, "5392": 248, "5394": 248, "5396": 248, "5398": 248, "5400": 248, "5402": 248, "5404": 248, "5406": 248, "5408": 248, "5410": [248, 473], "5412": 248, "5414": 248, "5416": 248, "5418": 248, "5420": 248, "5422": 248, "5424": 248, "5426": 248, "5428": 248, "5430": 248, "5432": 248, "5434": 248, "5436": 248, "5438": 248, "5440": 248, "5442": 248, "5444": 248, "5446": 248, "5448": 248, "5450": 248, "5452": 248, "5454": 248, "5456": 248, "5458": 248, "5460": 248, "5462": 248, "5464": 248, "5466": 248, "5468": 248, "5470": 248, "5472": 248, "5474": 248, "5476": 248, "5478": 248, "5480": 248, "5482": 248, "5484": 248, "5486": 248, "5488": 248, "5490": 248, "5492": 248, "5494": 248, "5496": 248, "5498": 248, "5500": 248, "5502": 248, "5504": 248, "5506": 248, "5508": 248, "5510": 248, "5512": 248, "5514": 248, "5516": 248, "5518": 248, "5520": 248, "5522": 248, "5524": 248, "5526": 248, "5528": 248, "5530": 248, "5532": 248, "5534": 248, "5536": 248, "5538": 248, "5540": 248, "5542": 248, "5544": 248, "5546": 248, "5548": 248, "5550": 248, "5552": 248, "5554": 248, "5556": 248, "5558": 248, "5560": 248, "5562": 248, "5564": 248, "5566": 248, "5568": 248, "5570": 248, "5572": 248, "5574": 248, "5576": 248, "5578": 248, "5580": 248, "5582": 248, "5584": 248, "5586": 248, "5588": 248, "5590": 248, "5592": 248, "5594": 248, "5596": 248, "5598": 248, "5600": 248, "5602": 248, "5604": 248, "5606": 248, "5608": 248, "5610": 248, "5612": 248, "5614": 248, "5616": 248, "5618": 248, "5620": 248, "5622": 248, "5624": 248, "5626": 248, "5628": 248, "5630": 248, "5632": 248, "5634": 248, "5636": 248, "5638": 248, "5640": 248, "5642": 248, "5644": 248, "5646": 248, "5648": 248, "5650": 248, "5652": 248, "5654": 248, "5656": 248, "5658": 248, "5660": 248, "5662": 248, "5664": 248, "5666": 248, "5668": 248, "5670": 248, "5672": 248, "5674": 248, "5676": 248, "5678": [248, 953], "5680": 248, "5682": 248, "5684": 248, "5686": 248, "5688": 248, "5690": 248, "5692": 248, "5694": 248, "5696": 248, "5698": 248, "5700": 248, "5702": 248, "5704": 248, "5706": 248, "5708": 248, "5710": 248, "5712": 248, "5714": 248, "5716": 248, "5718": 248, "5720": 248, "5722": 248, "5724": 248, "5726": 248, "5728": 248, "5730": 248, "5732": 248, "5734": 248, "5736": 248, "5738": 248, "5740": 248, "5742": 248, "5744": 248, "5746": 248, "5748": 248, "5750": 248, "5752": 248, "5754": 248, "5756": 248, "5758": 248, "5760": 248, "5762": 248, "5764": 248, "5766": 248, "5768": 248, "5770": 248, "5772": 248, "5774": 248, "5776": 248, "5778": 248, "5780": 248, "5782": 248, "5784": 248, "5786": 248, "5788": 248, "5790": 248, "5792": 248, "5794": 248, "5796": 248, "5798": 248, "5800": 248, "5802": 248, "5804": 248, "5806": 248, "5808": 248, "5810": 248, "5812": 248, "5814": 248, "5816": 248, "5818": 248, "5820": 248, "5822": 248, "5824": 248, "5826": 248, "5828": 248, "5830": 248, "5832": [248, 258], "5834": 248, "5836": 248, "5838": 248, "5840": 248, "5842": 248, "5844": 248, "5846": 248, "5848": 248, "5850": 248, "5852": 248, "5854": 248, "5856": 248, "5858": 248, "5860": 248, "5862": 248, "5864": 248, "5866": 248, "5868": 248, "5870": 248, "5872": 248, "5874": 248, "5876": 248, "5878": 248, "5880": 248, "5882": 248, "5884": 248, "5886": 248, "5888": 248, "5890": 248, "5892": 248, "5894": 248, "5896": 248, "5898": 248, "5900": 248, "5902": 248, "5904": 248, "5906": 248, "5908": 248, "5910": 248, "5912": 248, "5914": 248, "5916": 248, "5918": 248, "5920": 248, "5922": 248, "5924": 248, "5926": 248, "5928": 248, "5930": 248, "5932": 248, "5934": 248, "5936": 248, "5938": 248, "5940": 248, "5942": 248, "5944": 248, "5946": 248, "5948": 248, "5950": 248, "5952": 248, "5954": 248, "5956": 248, "5958": 248, "5960": 248, "5962": 248, "5964": 248, "5966": 248, "5968": 248, "5970": 248, "5972": 248, "5974": 248, "5976": 248, "5978": 248, "5980": 248, "5982": 248, "5984": 248, "5986": 248, "5988": 248, "5990": 248, "5992": 248, "5994": 248, "5996": 248, "5998": 248, "6000": [248, 1052], "6002": 248, "6004": 248, "6006": 248, "6008": 248, "6010": 248, "6012": 248, "6014": 248, "6016": 248, "6018": 248, "6020": 248, "6022": 248, "6024": 248, "6026": 248, "6028": 248, "6030": 248, "6032": 248, "6034": 248, "6036": 248, "6038": 248, "6040": 248, "6042": 248, "6044": 248, "6046": 248, "6048": 248, "6050": 248, "6052": 248, "6054": 248, "6056": 248, "6058": 248, "6060": 248, "6062": 248, "6064": 248, "6066": 248, "6068": 248, "6070": 248, "6072": 248, "6074": 248, "6076": 248, "6078": 248, "6080": 248, "6082": 248, "6084": 248, "6086": 248, "6088": 248, "6090": 248, "6092": 248, "6094": 248, "6096": 248, "6098": 248, "6100": 248, "6102": 248, "6104": 248, "6106": 248, "6108": 248, "6110": 248, "6112": 248, "6114": 248, "6116": 248, "6118": 248, "6120": 248, "6122": 248, "6124": 248, "6126": 248, "6128": 248, "6130": 248, "6132": 248, "6134": 248, "6136": 248, "6138": 248, "6140": 248, "6142": 248, "6144": 248, "6146": 248, "6148": 248, "6150": 248, "6152": 248, "6154": 248, "6156": 248, "6158": 248, "6160": 248, "6162": 248, "6164": 248, "6166": 248, "6168": 248, "6170": 248, "6172": 248, "6174": 248, "6176": 248, "6178": 248, "6180": 248, "6182": 248, "6184": 248, "6186": 248, "6188": 248, "6190": 248, "6192": 248, "6194": 248, "6196": 248, "6198": 248, "6200": 248, "6202": 248, "6204": 248, "6206": 248, "6208": 248, "6210": 248, "6212": 248, "6214": 248, "6216": 248, "6218": 248, "6220": 248, "6222": 248, "6224": 248, "6226": 248, "6228": 248, "6230": 248, "6232": 248, "6234": 248, "6236": 248, "6238": 248, "6240": 248, "6242": 248, "6244": 248, "6246": 248, "6248": 248, "6250": 248, "6252": 248, "6254": 248, "6256": 248, "6258": 248, "6260": 248, "6262": 248, "6264": 248, "6266": 248, "6268": 248, "6270": 248, "6272": 248, "6274": 248, "6276": 248, "6278": 248, "6280": 248, "6282": 248, "6284": 248, "6286": 248, "6288": 248, "6290": 248, "6292": 248, "6294": 248, "6296": 248, "6298": 248, "6300": 248, "6302": 248, "6304": 248, "6306": 248, "6308": 248, "6310": 248, "6312": 248, "6314": 248, "6316": 248, "6318": 248, "6320": 248, "6322": 248, "6324": 248, "6326": 248, "6328": 248, "6330": 248, "6332": 248, "6334": 248, "6336": 248, "6338": 248, "6340": 248, "6342": 248, "6344": 248, "6346": 248, "6348": 248, "6350": 248, "6352": 248, "6354": 248, "6356": 248, "6358": 248, "6360": 248, "6362": 248, "6364": 248, "6366": 248, "6368": 248, "6370": 248, "6372": 248, "6374": 248, "6376": 248, "6378": 248, "6380": 248, "6382": 248, "6384": 248, "6386": 248, "6388": 248, "6390": 248, "6392": 248, "6394": 248, "6396": 248, "6398": 248, "6400": 248, "6402": 248, "6404": 248, "6406": 248, "6408": 248, "6410": 248, "6412": 248, "6414": 248, "6416": 248, "6418": 248, "6420": 248, "6422": 248, "6424": 248, "6426": 248, "6428": 248, "6430": 248, "6432": 248, "6434": 248, "6436": 248, "6438": 248, "6440": 248, "6442": 248, "6444": 248, "6446": 248, "6448": 248, "6450": 248, "6452": 248, "6454": 248, "6456": 248, "6458": 248, "6460": 248, "6462": 248, "6464": 248, "6466": 248, "6468": 248, "6470": 248, "6472": 248, "6474": 248, "6476": 248, "6478": 248, "6480": 248, "6482": 248, "6484": 248, "6486": 248, "6488": 248, "6490": 248, "6492": 248, "6494": 248, "6496": 248, "6498": 248, "6500": 248, "6502": 248, "6504": 248, "6506": 248, "6508": 248, "6510": 248, "6512": 248, "6514": 248, "6516": 248, "6518": 248, "6520": 248, "6522": 248, "6524": 248, "6526": 248, "6528": 248, "6530": 248, "6532": 248, "6534": 248, "6536": 248, "6538": 248, "6540": 248, "6542": 248, "6544": 248, "6546": 248, "6548": 248, "6550": 248, "6552": 248, "6554": 248, "6556": 248, "6558": 248, "6560": 248, "6562": 248, "6564": 248, "6566": 248, "6568": 248, "6570": 248, "6572": 248, "6574": 248, "6576": 248, "6578": 248, "6580": 248, "6582": 248, "6584": 248, "6586": 248, "6588": 248, "6590": 248, "6592": 248, "6594": 248, "6596": 248, "6598": 248, "6600": 248, "6602": 248, "6604": 248, "6606": 248, "6608": 248, "6610": 248, "6612": 248, "6614": 248, "6616": 248, "6618": 248, "6620": 248, "6622": 248, "6624": 248, "6626": 248, "6628": 248, "6630": 248, "6632": 248, "6634": 248, "6636": 248, "6638": 248, "6640": 248, "6642": 248, "6644": 248, "6646": 248, "6648": 248, "6650": 248, "6652": 248, "6654": 248, "6656": 248, "6658": 248, "6660": 248, "6662": 248, "6664": 248, "6666": 248, "6668": 248, "6670": 248, "6672": 248, "6674": 248, "6676": 248, "6678": 248, "6680": 248, "6682": 248, "6684": 248, "6686": 248, "6688": 248, "6690": 248, "6692": 248, "6694": 248, "6696": 248, "6698": 248, "6700": 248, "6702": 248, "6704": 248, "6706": 248, "6708": 248, "6710": 248, "6714": 248, "6716": [248, 271], "6718": 248, "6720": 248, "6722": 248, "6724": 248, "6726": 248, "6728": 248, "6730": 248, "6732": 248, "6734": 248, "6736": 248, "6738": 248, "6740": 248, "6742": 248, "6744": 248, "6746": 248, "6748": 248, "6750": 248, "6752": 248, "6754": 248, "6756": 248, "6758": 248, "6760": 248, "6762": 248, "6764": 248, "6766": 248, "6768": 248, "6770": 248, "6772": 248, "6774": 248, "6776": 248, "6778": 248, "6780": 248, "6782": 248, "6784": 248, "6786": 248, "6788": 248, "6790": 248, "6792": 248, "6794": 248, "6796": 248, "6798": 248, "6800": 248, "6802": 248, "6804": 248, "6806": 248, "6808": 248, "6810": 248, "6812": 248, "6814": 248, "6816": 248, "6818": 248, "6820": 248, "6822": 248, "6824": 248, "6826": 248, "6828": 248, "6830": 248, "6832": 248, "6834": 248, "6836": 248, "6838": 248, "6840": 248, "6842": 248, "6844": 248, "6846": 248, "6848": 248, "6850": 248, "6852": 248, "6854": 248, "6856": 248, "6858": [248, 297], "6860": 248, "6862": 248, "6864": 248, "6866": 248, "6868": 248, "6870": 248, "6872": 248, "6874": 248, "6876": 248, "6878": 248, "6880": 248, "6882": 248, "6884": 248, "6886": 248, "6888": 248, "6890": 248, "6892": 248, "6894": 248, "6896": 248, "6898": 248, "6900": 248, "6902": 248, "6904": 248, "6906": 248, "6908": 248, "6910": 248, "6912": 248, "6914": 248, "6916": 248, "6918": 248, "6920": 248, "6922": 248, "6924": 248, "6926": 248, "6928": 248, "6930": 248, "6932": 248, "6934": 248, "6936": 248, "6938": 248, "6940": 248, "6942": 248, "6944": 248, "6946": 248, "6948": 248, "6950": 248, "6952": 248, "6954": 248, "6956": 248, "6958": 248, "6960": 248, "6962": 248, "6964": 248, "6966": 248, "6968": 248, "6970": 248, "6972": 248, "6974": 248, "6976": 248, "6978": 248, "6980": 248, "6982": 248, "6984": 248, "6986": 248, "6988": 248, "6990": 248, "6992": 248, "6994": 248, "6996": 248, "6998": 248, "7000": 248, "7002": 248, "7004": 248, "7006": 248, "7008": 248, "7010": 248, "7012": 248, "7014": 248, "7016": 248, "7018": 248, "7020": 248, "7022": 248, "7024": 248, "7026": 248, "7028": 248, "7030": 248, "7032": 248, "7034": 248, "7036": 248, "7038": 248, "7040": 248, "7042": 248, "7044": 248, "7046": 248, "7048": 248, "7050": 248, "7052": 248, "7054": 248, "7056": 248, "7058": 248, "7060": 248, "7062": 248, "7064": 248, "7066": 248, "7068": 248, "7070": 248, "7072": 248, "7074": 248, "7076": 248, "7078": 248, "7080": [248, 1159], "7082": 248, "7084": 248, "7086": 248, "7088": [248, 1159], "7090": 248, "7092": 248, "7094": 248, "7096": 248, "7098": 248, "7100": 248, "7102": 248, "7104": 248, "7106": 248, "7108": 248, "7110": 248, "7112": 248, "7114": 248, "7116": 248, "7118": 248, "7120": 248, "7122": 248, "7124": 248, "7126": 248, "7128": 248, "7130": 248, "7132": 248, "7134": 248, "7136": 248, "7138": 248, "7140": 248, "7142": 248, "7144": 248, "7146": 248, "7148": 248, "7150": 248, "7152": 248, "7154": 248, "7156": 248, "7158": 248, "7160": 248, "7162": 248, "7164": 248, "7166": 248, "7168": 248, "7170": 248, "7172": 248, "7174": 248, "7176": 248, "7178": 248, "7180": 248, "7182": 248, "7184": 248, "7186": 248, "7188": 248, "7190": 248, "7192": 248, "7194": 248, "7196": 248, "7198": 248, "7200": 248, "7202": 248, "7204": 248, "7206": 248, "7208": 248, "7210": 248, "7212": 248, "7214": 248, "7216": 248, "7218": 248, "7220": 248, "7222": 248, "7224": 248, "7226": 248, "7228": 248, "7230": 248, "7232": 248, "7234": 248, "7236": 248, "7238": 248, "7240": 248, "7242": 248, "7244": 248, "7246": 248, "7248": 248, "7250": 248, "7252": 248, "7254": 248, "7256": 248, "7258": 248, "7260": 248, "7262": 248, "7264": 248, "7266": 248, "7268": 248, "7270": 248, "7272": 248, "7274": 248, "7276": 248, "7278": 248, "7280": 248, "7282": 248, "7284": 248, "7286": 248, "7288": 248, "7290": 248, "7292": 248, "7294": 248, "7296": 248, "7298": 248, "7300": 248, "7302": 248, "7304": 248, "7306": 248, "7308": 248, "7310": 248, "7312": 248, "7314": 248, "7316": 248, "7318": 248, "7320": 248, "7322": 248, "7324": 248, "7326": 248, "7328": 248, "7330": 248, "7332": 248, "7334": 248, "7336": 248, "7338": 248, "7340": 248, "7342": 248, "7344": 248, "7346": 248, "7348": 248, "7350": 248, "7352": 248, "7354": 248, "7356": 248, "7358": 248, "7360": 248, "7362": 248, "7364": 248, "7366": 248, "7368": 248, "7370": 248, "7372": 248, "7374": 248, "7376": 248, "7378": 248, "7380": 248, "7382": 248, "7384": 248, "7386": 248, "7388": 248, "7392": 248, "7394": 248, "7396": 248, "7398": 248, "7400": 248, "7402": 248, "7404": 248, "7406": 248, "7408": 248, "7410": 248, "7412": 248, "7414": 248, "7416": 248, "7418": 248, "7420": 248, "7422": 248, "7424": 248, "7426": 248, "7428": 248, "7430": 248, "7432": 248, "7434": 248, "7436": 248, "7438": 248, "7440": 248, "7442": 248, "7444": 248, "7446": 248, "7448": 248, "7450": 248, "7452": 248, "7454": 248, "7456": 248, "7458": 248, "7460": 248, "7462": 248, "7464": 248, "7466": 248, "7468": 248, "7470": 248, "7472": 248, "7474": 248, "7476": 248, "7478": 248, "7480": 248, "7482": 248, "7484": 248, "7486": 248, "7488": 248, "7490": 248, "7492": 248, "7494": 248, "7496": 248, "7498": 248, "7500": 248, "7502": 248, "7504": 248, "7506": 248, "7508": 248, "7510": 248, "7512": 248, "7514": 248, "7516": 248, "7518": 248, "7520": 248, "7522": 248, "7524": 248, "7526": 248, "7528": 248, "7530": 248, "7532": 248, "7534": 248, "7536": 248, "7538": 248, "7540": 248, "7542": 248, "7544": 248, "7546": 248, "7548": 248, "7550": 248, "7552": 248, "7554": 248, "7556": 248, "7558": 248, "7560": 248, "7562": 248, "7564": 248, "7566": 248, "7568": 248, "7570": 248, "7572": 248, "7574": 248, "7576": 248, "7578": 248, "7580": 248, "7582": 248, "7584": 248, "7586": 248, "7588": 248, "7590": 248, "7592": 248, "7594": 248, "7596": 248, "7598": 248, "7600": 248, "7602": 248, "7604": 248, "7606": 248, "7608": 248, "7610": 248, "7612": 248, "7614": 248, "7616": 248, "7618": 248, "7620": 248, "7622": 248, "7624": 248, "7626": 248, "7628": 248, "7630": 248, "7632": 248, "7634": 248, "7636": 248, "7638": 248, "7640": 248, "7642": 248, "7644": 248, "7646": 248, "7648": 248, "7650": 248, "7652": 248, "7654": 248, "7656": 248, "7658": 248, "7660": 248, "7662": 248, "7664": 248, "7666": 248, "7668": 248, "7670": 248, "7672": 248, "7674": 248, "7676": 248, "7678": 248, "7680": 248, "7682": 248, "7684": 248, "7686": 248, "7688": 248, "7690": 248, "7692": 248, "7694": 248, "7696": 248, "7698": 248, "7700": 248, "7702": 248, "7704": 248, "7706": 248, "7708": 248, "7710": 248, "7712": 248, "7714": 248, "7716": 248, "7718": 248, "7720": 248, "7722": 248, "7724": 248, "7726": 248, "7728": 248, "7730": 248, "7732": 248, "7734": 248, "7736": 248, "7738": 248, "7740": 248, "7742": 248, "7744": 248, "7746": 248, "7748": 248, "7750": 248, "7752": 248, "7754": 248, "7756": 248, "7758": 248, "7760": 248, "7762": 248, "7764": 248, "7766": 248, "7768": 248, "7770": 248, "7772": 248, "7774": 248, "7776": 248, "7778": 248, "7780": 248, "7782": 248, "7784": 248, "7786": 248, "7788": 248, "7790": 248, "7792": 248, "7794": 248, "7796": 248, "7798": 248, "7800": 248, "7802": 248, "7804": 248, "7806": 248, "7808": 248, "7810": 248, "7812": 248, "7814": 248, "7816": 248, "7818": 248, "7820": 248, "7822": 248, "7824": 248, "7826": 248, "7828": 248, "7830": 248, "7832": 248, "7834": 248, "7836": 248, "7838": 248, "7842": 248, "7844": 248, "7846": 248, "7848": 248, "7850": 248, "7852": 248, "7854": 248, "7856": 248, "7858": 248, "7860": 248, "7862": 248, "7864": 248, "7866": 248, "7868": 248, "7870": 248, "7872": 248, "7874": 248, "7878": 248, "7880": 248, "7882": 248, "7884": 248, "7886": 248, "7888": 248, "7890": 248, "7892": 248, "7894": 248, "7896": 248, "7898": 248, "7900": 248, "7902": 248, "7904": 248, "7906": 248, "7908": 248, "7910": 248, "7912": 248, "7914": 248, "7916": 248, "7918": 248, "7920": 248, "7922": 248, "7924": 248, "7926": 248, "7928": 248, "7930": 248, "7932": 248, "7934": 248, "7936": 248, "7938": 248, "7940": 248, "7942": 248, "7944": 248, "7946": 248, "7948": 248, "7950": 248, "7952": 248, "7954": 248, "7956": 248, "7958": 248, "7960": 248, "7962": 248, "7964": 248, "7966": 248, "7968": 248, "7970": 248, "7972": 248, "7974": 248, "7976": 248, "7978": 248, "7980": 248, "7982": 248, "7984": 248, "7986": 248, "7988": 248, "7990": 248, "7992": 248, "7994": 248, "7996": 248, "7998": 248, "8002": 248, "8004": 248, "8006": 248, "8008": 248, "8012": 248, "8014": 248, "8016": 248, "8018": 248, "8022": 248, "8024": 248, "8026": 248, "8028": 248, "8030": 248, "8032": 248, "8034": 248, "8036": 248, "8038": 248, "8040": 248, "8042": 248, "8044": 248, "8046": 248, "8048": 248, "8050": 248, "8052": 248, "8054": 248, "8056": 248, "8058": 248, "8060": 248, "8062": 248, "8064": 248, "8066": 248, "8068": 248, "8070": 248, "8072": 248, "8074": 248, "8076": 248, "8078": 248, "8080": 248, "8082": 248, "8084": 248, "8086": 248, "8088": 248, "8090": 248, "8092": 248, "8094": 248, "8096": 248, "8098": 248, "8100": 248, "8102": [248, 1013, 1014], "8104": 248, "8106": 248, "8108": 248, "8110": 248, "8112": 248, "8114": 248, "8116": 248, "8118": 248, "8120": 248, "8122": 248, "8124": 248, "8126": 248, "8128": 248, "8130": 248, "8132": 248, "8134": 248, "8136": 248, "8138": 248, "8140": 248, "8142": 248, "8144": 248, "8146": 248, "8148": 248, "8150": 248, "8152": 248, "8154": 248, "8156": 248, "8158": 248, "8160": 248, "8162": 248, "8164": 248, "8166": 248, "8168": 248, "8170": 248, "8172": 248, "8174": 248, "8176": 248, "8178": 248, "8180": 248, "8182": 248, "8184": 248, "8186": 248, "8188": 248, "8190": 248, "8194": 248, "8196": 248, "8198": 248, "8200": 248, "8202": 248, "8204": 248, "8206": 248, "8208": 248, "8210": 248, "8212": 248, "8214": 248, "8216": 248, "8218": 248, "8220": 248, "8222": 248, "8224": 248, "8226": 248, "8228": 248, "8230": 248, "8232": 248, "8234": 248, "8238": 248, "8240": 248, "8242": 248, "8244": 248, "8246": 248, "8248": 248, "8250": 248, "8252": 248, "8254": 248, "8256": 248, "8258": 248, "8260": [248, 838], "8262": 248, "8264": 248, "8266": 248, "8268": 248, "8270": 248, "8272": 248, "8274": 248, "8276": 248, "8278": 248, "8280": 248, "8282": 248, "8284": 248, "8286": 248, "8288": 248, "8290": 248, "8292": 248, "8294": 248, "8296": 248, "8298": 248, "8300": 248, "8302": 248, "8304": 248, "8306": 248, "8308": 248, "8310": 248, "8312": 248, "8314": 248, "8316": 248, "8318": 248, "8320": 248, "8322": 248, "8324": 248, "8326": 248, "8328": 248, "8330": 248, "8332": 248, "8334": 248, "8336": 248, "8338": 248, "8340": 248, "8342": 248, "8344": 248, "8346": 248, "8348": 248, "8350": 248, "8352": 248, "8354": 248, "8356": 248, "8358": 248, "8360": 248, "8362": 248, "8364": 248, "8366": 248, "8368": 248, "8370": 248, "8372": 248, "8374": 248, "8376": 248, "8378": 248, "8380": 248, "8382": 248, "8384": 248, "8386": 248, "8388": 248, "8390": 248, "8392": 248, "8394": 248, "8396": 248, "8398": 248, "8400": 248, "8402": 248, "8404": 248, "8406": 248, "8408": 248, "8410": 248, "8412": 248, "8414": 248, "8416": 248, "8418": 248, "8420": 248, "8422": 248, "8424": 248, "8426": 248, "8428": 248, "8430": 248, "8432": 248, "8434": 248, "8436": 248, "8438": 248, "8440": 248, "8442": 248, "8444": 248, "8446": 248, "8448": 248, "8450": 248, "8452": 248, "8454": 248, "8456": 248, "8458": 248, "8460": 248, "8464": 248, "8466": 248, "8468": 248, "8470": 248, "8472": 248, "8474": 248, "8476": 248, "8478": 248, "8480": 248, "8482": 248, "8484": 248, "8486": 248, "8488": 248, "8490": 248, "8492": 248, "8494": 248, "8496": 248, "8498": 248, "8500": 248, "8502": 248, "8504": 248, "8506": 248, "8508": 248, "8510": 248, "8512": 248, "8514": 248, "8516": 248, "8518": 248, "8520": 248, "8522": 248, "8524": 248, "8526": 248, "8528": 248, "8530": 248, "8532": 248, "8534": 248, "8536": 248, "8538": 248, "8540": 248, "8542": 248, "8544": 248, "8546": 248, "8548": 248, "8550": 248, "8552": 248, "8554": 248, "8556": 248, "8558": 248, "8560": 248, "8562": 248, "8564": 248, "8566": 248, "8568": 248, "8570": 248, "8572": 248, "8574": 248, "8576": 248, "8578": 248, "8580": 248, "8582": 248, "8584": 248, "8586": 248, "8588": 248, "8590": 248, "8592": 248, "8594": 248, "8596": 248, "8598": 248, "8600": 248, "8602": 248, "8604": 248, "8606": 248, "8608": 248, "8610": 248, "8612": 248, "8614": 248, "8616": 248, "8618": 248, "8620": 248, "8622": 248, "8624": 248, "8626": 248, "8628": 248, "8630": 248, "8632": 248, "8634": 248, "8636": 248, "8638": 248, "8640": 248, "8642": 248, "8644": 248, "8646": 248, "8648": 248, "8650": 248, "8652": 248, "8654": 248, "8656": 248, "8658": 248, "8660": 248, "8662": 248, "8664": 248, "8666": 248, "8668": 248, "8670": 248, "8672": 248, "8674": 248, "8676": 248, "8678": 248, "8680": 248, "8682": 248, "8684": 248, "8686": 248, "8688": 248, "8690": 248, "8692": 248, "8694": 248, "8696": 248, "8698": 248, "8700": 248, "8702": 248, "8704": 248, "8706": 248, "8708": 248, "8710": 248, "8712": 248, "8714": 248, "8716": 248, "8718": 248, "8720": 248, "8722": 248, "8724": 248, "8726": 248, "8728": 248, "8730": 248, "8732": 248, "8734": 248, "8736": 248, "8738": 248, "8740": 248, "8742": 248, "8744": 248, "8746": 248, "8748": 248, "8750": 248, "8752": 248, "8754": 248, "8756": 248, "8758": 248, "8760": 248, "8762": 248, "8764": 248, "8766": 248, "8768": 248, "8770": 248, "8772": 248, "8774": 248, "8776": 248, "8778": 248, "8780": 248, "8782": 248, "8784": 248, "8786": 248, "8788": 248, "8790": 248, "8792": 248, "8794": 248, "8796": 248, "8798": 248, "8800": 248, "8802": 248, "8804": 248, "8806": 248, "8808": 248, "8810": 248, "8812": 248, "8814": 248, "8816": 248, "8818": 248, "8820": 248, "8822": 248, "8824": 248, "8826": 248, "8828": 248, "8830": 248, "8832": 248, "8834": 248, "8836": 248, "8838": 248, "8840": 248, "8842": 248, "8844": 248, "8846": 248, "8848": 248, "8850": 248, "8852": 248, "8854": 248, "8856": 248, "8858": 248, "8860": 248, "8862": 248, "8864": 248, "8866": 248, "8868": 248, "8870": 248, "8872": 248, "8874": 248, "8876": 248, "8878": 248, "8880": 248, "8882": 248, "8884": 248, "8886": 248, "8888": 248, "8890": 248, "8892": 248, "8894": 248, "8896": 248, "8898": 248, "8900": 248, "8902": 248, "8904": 248, "8906": 248, "8908": 248, "8910": 248, "8912": 248, "8914": 248, "8916": 248, "8918": 248, "8920": 248, "8922": 248, "8924": 248, "8926": 248, "8928": 248, "8930": 248, "8932": 248, "8934": 248, "8936": 248, "8938": 248, "8940": 248, "8942": 248, "8944": 248, "8946": 248, "8948": 248, "8950": 248, "8952": 248, "8954": 248, "8956": 248, "8958": 248, "8960": 248, "8962": 248, "8964": 248, "8966": 248, "8968": 248, "8970": 248, "8972": 248, "8974": 248, "8976": 248, "8978": 248, "8980": 248, "8982": 248, "8984": 248, "8986": 248, "8988": 248, "8990": 248, "8992": 248, "8994": 248, "8996": 248, "8998": 248, "9002": 248, "9004": 248, "9006": 248, "9008": 248, "9010": 248, "9012": 248, "9014": 248, "9016": 248, "9018": 248, "9020": 248, "9022": 248, "9024": 248, "9026": 248, "9028": 248, "9030": 248, "9032": 248, "9034": 248, "9036": 248, "9038": 248, "9040": 248, "9042": 248, "9044": 248, "9046": 248, "9048": 248, "9050": 248, "9052": 248, "9054": 248, "9056": 248, "9058": 248, "9060": 248, "9062": 248, "9064": 248, "9066": 248, "9068": 248, "9070": 248, "9072": 248, "9074": 248, "9076": 248, "9078": 248, "9080": 248, "9082": 248, "9084": 248, "9086": 248, "9088": 248, "9090": 248, "9092": 248, "9094": 248, "9096": 248, "9098": 248, "9100": 248, "9102": 248, "9104": 248, "9106": 248, "9108": 248, "9110": 248, "9112": 248, "9114": 248, "9116": 248, "9118": 248, "9120": 248, "9122": 248, "9124": 248, "9126": 248, "9128": 248, "9130": 248, "9132": 248, "9134": 248, "9136": 248, "9138": 248, "9140": 248, "9142": 248, "9144": 248, "9146": 248, "9148": 248, "9150": 248, "9152": 248, "9154": 248, "9156": 248, "9158": 248, "9160": 248, "9162": 248, "9164": 248, "9166": 248, "9168": 248, "9170": 248, "9172": 248, "9174": 248, "9176": 248, "9178": 248, "9180": 248, "9182": 248, "9184": 248, "9186": 248, "9188": 248, "9190": 248, "9192": 248, "9194": 248, "9196": 248, "9198": 248, "9200": 248, "9202": 248, "9204": 248, "9206": 248, "9208": 248, "9210": 248, "9212": 248, "9214": 248, "9216": 248, "9218": 248, "9220": 248, "9222": 248, "9224": 248, "9226": 248, "9228": 248, "9230": 248, "9232": 248, "9234": 248, "9236": 248, "9238": 248, "9240": 248, "9242": 248, "9244": 248, "9246": 248, "9248": 248, "9250": 248, "9252": 248, "9254": 248, "9256": 248, "9258": 248, "9260": 248, "9262": 248, "9264": 248, "9266": 248, "9268": 248, "9270": 248, "9272": 248, "9274": 248, "9276": 248, "9278": 248, "9280": 248, "9282": 248, "9284": 248, "9286": 248, "9288": 248, "9290": 248, "9292": 248, "9294": 248, "9296": 248, "9298": 248, "9300": 248, "9302": 248, "9304": 248, "9306": 248, "9308": 248, "9310": 248, "9312": 248, "9314": 248, "9316": 248, "9318": 248, "9320": 248, "9322": 248, "9324": 248, "9326": 248, "9328": 248, "9330": 248, "9332": 248, "9334": 248, "9336": 248, "9338": 248, "9340": 248, "9342": 248, "9344": 248, "9346": 248, "9348": 248, "9350": 248, "9352": 248, "9354": 248, "9356": 248, "9358": 248, "9360": 248, "9362": 248, "9364": 248, "9366": 248, "9368": 248, "9370": 248, "9372": 248, "9374": 248, "9376": 248, "9378": 248, "9380": 248, "9382": 248, "9384": 248, "9386": 248, "9388": 248, "9390": 248, "9392": 248, "9394": [248, 898], "9396": 248, "9398": 248, "9400": 248, "9402": 248, "9404": 248, "9406": 248, "9408": 248, "9410": 248, "9412": 248, "9414": 248, "9416": 248, "9418": 248, "9420": 248, "9422": 248, "9424": 248, "9426": 248, "9428": 248, "9430": 248, "9432": 248, "9434": 248, "9436": 248, "9438": 248, "9440": 248, "9442": 248, "9444": 248, "9446": 248, "9448": 248, "9450": 248, "9452": 248, "9454": 248, "9456": 248, "9458": 248, "9460": 248, "9462": 248, "9464": 248, "9466": 248, "9468": 248, "9470": 248, "9472": 248, "9474": 248, "9476": 248, "9478": 248, "9480": 248, "9482": 248, "9484": 248, "9486": 248, "9488": 248, "9490": 248, "9492": 248, "9494": 248, "9496": 248, "9498": 248, "9500": 248, "9502": 248, "9504": 248, "9506": 248, "9508": 248, "9510": 248, "9512": 248, "9514": 248, "9516": 248, "9518": 248, "9520": 248, "9522": 248, "9524": 248, "9526": 248, "9528": 248, "9530": 248, "9532": 248, "9534": 248, "9536": 248, "9538": 248, "9540": 248, "9542": 248, "9544": 248, "9546": 248, "9548": 248, "9550": 248, "9552": 248, "9554": 248, "9556": 248, "9558": 248, "9560": 248, "9562": 248, "9564": 248, "9566": 248, "9568": 248, "9570": 248, "9572": 248, "9574": 248, "9576": 248, "9578": 248, "9580": 248, "9582": 248, "9584": 248, "9586": 248, "9588": 248, "9590": 248, "9592": 248, "9594": 248, "9596": 248, "9598": 248, "9600": 248, "9602": 248, "9604": 248, "9606": 248, "9608": 248, "9610": 248, "9612": 248, "9614": 248, "9616": 248, "9618": 248, "9620": 248, "9622": 248, "9624": 248, "9626": 248, "9628": 248, "9630": 248, "9632": 248, "9634": 248, "9636": 248, "9638": 248, "9640": 248, "9642": 248, "9644": 248, "9646": 248, "9648": 248, "9650": 248, "9652": 248, "9654": 248, "9656": 248, "9658": 248, "9660": 248, "9662": 248, "9664": 248, "9666": 248, "9668": 248, "9670": 248, "9672": 248, "9674": 248, "9676": 248, "9678": 248, "9680": 248, "9682": 248, "9684": 248, "9686": 248, "9688": 248, "9690": 248, "9692": 248, "9694": 248, "9696": 248, "9698": 248, "9700": 248, "9702": 248, "9704": 248, "9706": 248, "9708": 248, "9710": 248, "9712": 248, "9714": 248, "9716": 248, "9718": 248, "9720": 248, "9722": 248, "9724": 248, "9726": 248, "9728": 248, "9730": 248, "9732": 248, "9734": 248, "9736": 248, "9738": 248, "9740": 248, "9742": 248, "9744": 248, "9746": 248, "9748": 248, "9750": 248, "9752": 248, "9754": 248, "9756": 248, "9758": 248, "9760": 248, "9762": 248, "9764": 248, "9766": 248, "9768": [248, 258], "9770": 248, "9772": 248, "9774": 248, "9776": 248, "9778": 248, "9780": 248, "9782": 248, "9784": 248, "9786": 248, "9788": 248, "9790": 248, "9792": 248, "9794": 248, "9796": 248, "9798": 248, "9800": 248, "9802": 248, "9804": 248, "9806": 248, "9808": 248, "9810": 248, "9812": 248, "9814": 248, "9816": 248, "9818": 248, "9820": 248, "9822": 248, "9824": 248, "9826": 248, "9828": 248, "9830": 248, "9832": 248, "9834": 248, "9836": 248, "9838": 248, "9840": 248, "9842": 248, "9844": 248, "9846": 248, "9848": 248, "9850": 248, "9852": 248, "9854": 248, "9856": 248, "9858": 248, "9860": 248, "9862": 248, "9864": 248, "9866": 248, "9868": 248, "9870": 248, "9872": 248, "9874": 248, "9876": 248, "9878": 248, "9880": 248, "9882": 248, "9884": 248, "9886": 248, "9888": 248, "9890": 248, "9892": 248, "9894": 248, "9896": 248, "9898": 248, "9900": 248, "9902": 248, "9904": 248, "9906": 248, "9908": 248, "9910": 248, "9912": 248, "9914": 248, "9916": 248, "9918": 248, "9920": 248, "9922": 248, "9924": 248, "9926": 248, "9928": 248, "9930": 248, "9932": 248, "9934": 248, "9936": 248, "9938": 248, "9940": 248, "9942": 248, "9944": 248, "9946": 248, "9948": 248, "9950": 248, "9952": 248, "9954": 248, "9956": 248, "9958": 248, "9960": 248, "9962": 248, "9964": 248, "9966": 248, "9968": 248, "9970": 248, "9972": 248, "9974": 248, "9976": 248, "9978": 248, "9980": 248, "9982": 248, "9984": 248, "9986": 248, "9988": 248, "9990": 248, "9992": 248, "9994": 248, "9996": 248, "9998": 248, "10002": 248, "10004": 248, "10006": 248, "10008": 248, "10010": 248, "10012": 248, "10014": 248, "10016": 248, "10018": 248, "10020": 248, "10022": 248, "10024": 248, "10026": 248, "10028": 248, "10030": 248, "10032": 248, "10034": 248, "10036": 248, "10038": 248, "10040": 248, "10042": 248, "10044": 248, "10046": 248, "10048": 248, "10050": 248, "10052": 248, "10054": 248, "10056": 248, "10058": 248, "10060": 248, "10062": 248, "10064": 248, "10066": 248, "10068": 248, "10070": 248, "10072": 248, "10074": 248, "10076": 248, "10078": 248, "10080": 248, "10082": 248, "10084": 248, "10086": 248, "10088": 248, "10090": 248, "10092": 248, "10094": 248, "10096": 248, "10098": 248, "10100": 248, "10102": 248, "10104": 248, "10106": 248, "10108": 248, "10110": 248, "10112": 248, "10114": 248, "10116": 248, "10118": 248, "10120": 248, "10122": 248, "10124": 248, "10126": 248, "10128": 248, "10130": 248, "10132": 248, "10134": 248, "10136": 248, "10138": 248, "10140": 248, "10142": 248, "10144": 248, "10146": 248, "10148": 248, "10150": 248, "10152": 248, "10154": 248, "10156": 248, "10158": 248, "10160": 248, "10162": 248, "10164": 248, "10166": 248, "10168": 248, "10170": 248, "10172": 248, "10174": 248, "10176": 248, "10178": 248, "10180": 248, "10182": 248, "10184": 248, "10186": 248, "10188": 248, "10190": 248, "10192": 248, "10194": 248, "10196": 248, "10198": 248, "10200": 248, "10202": 248, "10204": 248, "10206": 248, "10208": 248, "10210": 248, "10212": 248, "10214": 248, "10216": 248, "10218": 248, "10220": 248, "10222": 248, "10224": 248, "10226": [248, 297], "10228": 248, "10230": 248, "10232": 248, "10234": 248, "10236": 248, "10238": 248, "10240": 248, "10242": 248, "10244": 248, "10246": 248, "10248": 248, "10250": 248, "10252": 248, "10254": 248, "10256": 248, "10258": 248, "10260": 248, "10262": 248, "10264": 248, "10266": 248, "10268": 248, "10270": 248, "10272": 248, "10274": 248, "10276": 248, "10278": 248, "10280": 248, "10282": 248, "10284": 248, "10286": 248, "10288": 248, "10290": 248, "10292": 248, "10294": 248, "10296": 248, "10298": 248, "10300": 248, "10302": 248, "10304": 248, "10306": 248, "10308": 248, "10310": 248, "10312": 248, "10314": 248, "10316": 248, "10318": 248, "10320": 248, "10322": 248, "10324": 248, "10326": 248, "10328": 248, "10330": 248, "10332": 248, "10334": 248, "10336": 248, "10338": 248, "10340": 248, "10342": 248, "10344": 248, "10346": 248, "10348": 248, "10350": 248, "10352": 248, "10354": 248, "10356": 248, "10358": 248, "10360": 248, "10362": 248, "10364": 248, "10366": 248, "10368": 248, "10370": 248, "10372": 248, "10374": 248, "10376": 248, "10378": 248, "10380": 248, "10382": 248, "10384": 248, "10386": 248, "10388": 248, "10390": 248, "10392": 248, "10394": 248, "10396": 248, "10398": 248, "10400": 248, "10402": 248, "10404": 248, "10406": 248, "10408": 248, "10410": 248, "10412": 248, "10414": 248, "10416": 248, "10418": 248, "10420": 248, "10422": 248, "10424": 248, "10426": 248, "10428": 248, "10430": 248, "10432": 248, "10434": 248, "10436": 248, "10438": 248, "10440": 248, "10442": 248, "10444": 248, "10446": 248, "10448": 248, "10450": 248, "10452": 248, "10454": 248, "10456": 248, "10458": 248, "10460": 248, "10462": 248, "10464": 248, "10466": 248, "10468": 248, "10470": 248, "10472": 248, "10474": 248, "10476": 248, "10478": 248, "10480": 248, "10482": 248, "10484": 248, "10486": 248, "10488": 248, "10490": 248, "10492": 248, "10494": 248, "10496": 248, "10498": 248, "10500": 248, "10502": 248, "10504": 248, "10506": 248, "10508": 248, "10510": 248, "10512": 248, "10514": 248, "10516": 248, "10518": 248, "10520": 248, "10522": 248, "10524": 248, "10526": 248, "10528": 248, "10530": 248, "10532": 248, "10534": 248, "10536": 248, "10538": 248, "10540": 248, "10542": 248, "10544": 248, "10546": 248, "10548": 248, "10550": 248, "10552": [248, 1024], "10554": 248, "10556": 248, "10558": 248, "10560": 248, "10562": 248, "10564": 248, "10566": 248, "10568": 248, "10570": 248, "10572": 248, "10574": 248, "10576": 248, "10578": 248, "10580": 248, "10582": 248, "10584": 248, "10586": 248, "10588": 248, "10590": 248, "10592": 248, "10594": 248, "10596": 248, "10598": 248, "10600": 248, "10602": 248, "10604": 248, "10606": 248, "10608": 248, "10610": 248, "10612": 248, "10614": 248, "10616": 248, "10618": 248, "10620": 248, "10622": 248, "10624": 248, "10626": 248, "10628": 248, "10630": 248, "10632": 248, "10634": 248, "10636": 248, "10638": 248, "10640": 248, "10642": 248, "10644": 248, "10646": 248, "10648": 248, "10650": 248, "10652": 248, "10654": 248, "10656": 248, "10658": 248, "10660": 248, "10662": 248, "10664": 248, "10666": 248, "10668": 248, "10670": 248, "10672": 248, "10674": 248, "10676": 248, "10678": 248, "10680": 248, "10682": 248, "10684": 248, "10686": 248, "10688": 248, "10690": 248, "10692": 248, "10694": 248, "10696": 248, "10698": 248, "10700": 248, "10702": 248, "10704": 248, "10706": 248, "10708": 248, "10710": 248, "10712": 248, "10714": 248, "10716": 248, "10718": 248, "10720": 248, "10722": 248, "10724": 248, "10726": 248, "10728": 248, "10730": 248, "10732": 248, "10734": 248, "10736": 248, "10738": 248, "10740": 248, "10742": 248, "10744": 248, "10746": 248, "10748": 248, "10750": 248, "10752": 248, "10754": 248, "10756": 248, "10758": 248, "10760": 248, "10762": 248, "10764": 248, "10766": 248, "10768": 248, "10770": 248, "10772": 248, "10774": 248, "10776": 248, "10778": 248, "10780": 248, "10782": 248, "10784": 248, "10786": 248, "10788": 248, "10790": 248, "10792": 248, "10794": 248, "10796": 248, "10798": 248, "10800": 248, "10802": 248, "10804": 248, "10806": 248, "10808": 248, "10810": 248, "10812": 248, "10814": 248, "10816": 248, "10818": 248, "10820": 248, "10822": 248, "10824": 248, "10826": 248, "10828": 248, "10830": 248, "10832": 248, "10834": 248, "10836": 248, "10838": 248, "10840": 248, "10842": 248, "10844": 248, "10846": 248, "10848": 248, "10850": 248, "10852": 248, "10854": 248, "10856": 248, "10858": 248, "10860": 248, "10862": 248, "10864": 248, "10866": 248, "10868": 248, "10870": 248, "10872": 248, "10874": 248, "10876": 248, "10878": 248, "10880": 248, "10882": 248, "10884": 248, "10886": 248, "10888": 248, "10890": 248, "10892": 248, "10894": 248, "10896": 248, "10898": 248, "10900": 248, "10902": 248, "10904": 248, "10906": 248, "10908": 248, "10910": 248, "10912": 248, "10914": 248, "10916": 248, "10918": 248, "10920": 248, "10922": 248, "10924": 248, "10926": 248, "10928": 248, "10930": 248, "10932": 248, "10934": 248, "10936": 248, "10938": 248, "10940": 248, "10942": 248, "10944": 248, "10946": 248, "10948": 248, "10950": 248, "10952": 248, "10954": 248, "10956": 248, "10958": 248, "10960": 248, "10962": 248, "10964": 248, "10966": 248, "10968": 248, "10970": 248, "10972": 248, "10974": 248, "10976": 248, "10978": 248, "10980": 248, "10982": 248, "10984": 248, "10986": 248, "10988": 248, "10990": 248, "10992": 248, "10994": 248, "10996": 248, "10998": 248, "11000": 248, "11002": 248, "11004": 248, "11006": 248, "11008": 248, "11010": 248, "11012": 248, "11014": 248, "11016": 248, "11018": 248, "11020": 248, "11022": 248, "11024": 248, "11026": 248, "11028": 248, "11030": 248, "11032": 248, "11034": 248, "11036": 248, "11038": 248, "11040": 248, "11042": 248, "11044": 248, "11046": 248, "11048": 248, "11050": 248, "11052": 248, "11054": 248, "11056": 248, "11058": 248, "11060": 248, "11062": 248, "11064": 248, "11066": 248, "11068": 248, "11070": 248, "11072": 248, "11074": 248, "11076": 248, "11078": 248, "11080": 248, "11082": 248, "11084": 248, "11086": 248, "11088": 248, "11090": 248, "11092": 248, "11094": 248, "11096": 248, "11098": 248, "11100": 248, "11102": 248, "11104": 248, "11106": 248, "11108": 248, "11110": 248, "11112": 248, "11114": 248, "11116": 248, "11118": 248, "11120": 248, "11122": 248, "11124": 248, "11126": 248, "11128": 248, "11130": 248, "11132": 248, "11134": 248, "11136": 248, "11138": 248, "11140": 248, "11142": 248, "11144": 248, "11146": 248, "11148": 248, "11150": 248, "11152": 248, "11154": 248, "11156": 248, "11158": 248, "11160": 248, "11162": 248, "11164": 248, "11166": 248, "11168": 248, "11170": 248, "11172": 248, "11174": 248, "11176": 248, "11178": 248, "11180": 248, "11182": 248, "11184": 248, "11186": 248, "11188": 248, "11190": 248, "11192": 248, "11194": 248, "11196": 248, "11198": 248, "11200": 248, "11202": 248, "11204": 248, "11206": 248, "11208": 248, "11210": 248, "11212": 248, "11214": 248, "11216": 248, "11218": 248, "11220": 248, "11222": 248, "11224": 248, "11226": 248, "11228": 248, "11230": 248, "11232": 248, "11234": 248, "11236": 248, "11238": 248, "11240": 248, "11242": 248, "11244": 248, "11246": 248, "11248": 248, "11250": 248, "11252": 248, "11254": 248, "11256": 248, "11258": 248, "11260": 248, "11262": 248, "11264": 248, "11266": 248, "11268": 248, "11270": 248, "11272": 248, "11274": 248, "11276": 248, "11278": 248, "11280": 248, "11282": 248, "11284": 248, "11286": 248, "11288": 248, "11290": 248, "11292": 248, "11294": 248, "11296": 248, "11298": 248, "11300": 248, "11302": 248, "11304": 248, "11306": 248, "11308": 248, "11310": 248, "11312": 248, "11314": 248, "11316": 248, "11318": 248, "11320": 248, "11322": 248, "11324": 248, "11326": 248, "11328": 248, "11330": 248, "11332": 248, "11334": 248, "11336": 248, "11340": 248, "11342": 248, "11344": 248, "11346": 248, "11348": [248, 297], "11350": 248, "11352": 248, "11354": 248, "11356": 248, "11358": 248, "11360": 248, "11362": 248, "11364": 248, "11366": 248, "11368": 248, "11370": 248, "11372": 248, "11374": 248, "11376": 248, "11378": 248, "11380": 248, "11382": 248, "11384": 248, "11386": 248, "11388": 248, "11390": 248, "11392": 248, "11394": 248, "11396": 248, "11398": 248, "11400": 248, "11402": 248, "11404": 248, "11406": 248, "11408": 248, "11410": 248, "11412": 248, "11414": 248, "11416": 248, "11418": 248, "11420": 248, "11422": 248, "11424": 248, "11426": 248, "11428": 248, "11430": 248, "11432": 248, "11434": 248, "11436": 248, "11438": 248, "11440": 248, "11442": 248, "11444": 248, "11446": 248, "11448": 248, "11450": 248, "11452": 248, "11454": 248, "11456": 248, "11458": 248, "11460": 248, "11462": 248, "11464": 248, "11466": 248, "11468": 248, "11470": 248, "11472": 248, "11474": 248, "11476": 248, "11478": 248, "11480": 248, "11482": 248, "11484": 248, "11486": 248, "11488": 248, "11490": 248, "11492": 248, "11494": 248, "11496": 248, "11498": 248, "11500": 248, "11502": 248, "11504": 248, "11506": 248, "11508": 248, "11510": 248, "11512": 248, "11514": 248, "11516": 248, "11518": 248, "11520": 248, "11522": 248, "11524": 248, "11526": 248, "11528": 248, "11530": 248, "11532": 248, "11534": 248, "11536": 248, "11538": 248, "11540": 248, "11542": 248, "11544": 248, "11546": 248, "11548": 248, "11550": 248, "11552": 248, "11554": 248, "11556": 248, "11558": 248, "11560": 248, "11562": 248, "11564": 248, "11566": 248, "11568": 248, "11570": 248, "11572": 248, "11574": 248, "11576": 248, "11578": 248, "11580": 248, "11582": 248, "11584": 248, "11586": 248, "11588": 248, "11590": 248, "11592": 248, "11594": 248, "11596": 248, "11598": 248, "11600": 248, "11602": 248, "11604": 248, "11606": 248, "11608": 248, "11610": 248, "11612": 248, "11614": 248, "11616": 248, "11618": 248, "11620": 248, "11622": 248, "11624": 248, "11626": 248, "11628": 248, "11630": 248, "11634": 248, "11636": 248, "11638": 248, "11640": 248, "11642": 248, "11644": 248, "11646": 248, "11648": 248, "11650": 248, "11652": 248, "11654": 248, "11656": 248, "11658": 248, "11660": 248, "11662": 248, "11664": 248, "11666": 248, "11668": 248, "11670": 248, "11672": 248, "11674": 248, "11676": 248, "11678": 248, "11680": 248, "11682": 248, "11684": 248, "11686": 248, "11688": 248, "11690": 248, "11692": 248, "11694": 248, "11696": 248, "11698": 248, "11700": 248, "11702": 248, "11704": 248, "11706": 248, "11708": 248, "11710": 248, "11712": 248, "11714": 248, "11716": 248, "11718": 248, "11720": 248, "11722": 248, "11724": 248, "11726": 248, "11728": 248, "11730": 248, "11732": 248, "11734": 248, "11736": 248, "11738": 248, "11740": 248, "11742": 248, "11744": 248, "11746": 248, "11748": 248, "11750": 248, "11752": 248, "11754": 248, "11756": 248, "11758": 248, "11760": 248, "11762": 248, "11764": 248, "11766": 248, "11768": 248, "11770": 248, "11772": 248, "11774": 248, "11776": 248, "11778": 248, "11780": 248, "11782": 248, "11784": 248, "11786": 248, "11788": 248, "11790": 248, "11792": 248, "11794": 248, "11796": 248, "11798": 248, "11800": 248, "11802": 248, "11804": 248, "11806": 248, "11808": 248, "11810": 248, "11812": 248, "11814": 248, "11816": 248, "11818": 248, "11820": 248, "11822": 248, "11824": 248, "11826": 248, "11828": 248, "11830": 248, "11832": 248, "11834": 248, "11836": 248, "11838": 248, "11840": 248, "11842": 248, "11844": 248, "11846": 248, "11848": 248, "11850": 248, "11852": 248, "11854": 248, "11856": 248, "11858": 248, "11860": 248, "11862": 248, "11864": 248, "11866": 248, "11868": 248, "11870": 248, "11872": 248, "11874": 248, "11876": 248, "11878": 248, "11880": 248, "11882": 248, "11884": 248, "11886": 248, "11888": 248, "11890": 248, "11892": 248, "11894": 248, "11896": 248, "11898": 248, "11900": 248, "11902": 248, "11904": 248, "11906": 248, "11908": 248, "11910": 248, "11912": 248, "11914": 248, "11916": 248, "11918": 248, "11920": 248, "11922": 248, "11924": 248, "11926": 248, "11928": 248, "11930": 248, "11932": 248, "11934": 248, "11936": 248, "11938": 248, "11940": 248, "11942": 248, "11944": 248, "11946": 248, "11948": 248, "11950": 248, "11952": 248, "11954": 248, "11956": 248, "11958": 248, "11960": 248, "11962": 248, "11964": 248, "11966": 248, "11968": 248, "11970": 248, "11972": 248, "11974": 248, "11976": 248, "11978": 248, "11980": 248, "11982": 248, "11984": 248, "11986": 248, "11988": 248, "11990": 248, "11992": 248, "11994": 248, "11996": 248, "11998": 248, "12000": 248, "12002": 248, "12004": 248, "12006": 248, "12008": 248, "12010": 248, "12012": 248, "12014": 248, "12016": 248, "12018": 248, "12020": 248, "12022": 248, "12024": 248, "12026": 248, "12028": 248, "12030": 248, "12032": 248, "12034": 248, "12036": 248, "12038": 248, "12040": 248, "12042": 248, "12044": 248, "12046": 248, "12048": 248, "12050": 248, "12052": 248, "12054": 248, "12056": 248, "12058": 248, "12060": 248, "12062": 248, "12064": 248, "12066": 248, "12068": 248, "12070": 248, "12072": 248, "12074": 248, "12076": 248, "12078": 248, "12080": 248, "12082": 248, "12084": 248, "12086": 248, "12088": 248, "12090": 248, "12092": 248, "12094": 248, "12096": 248, "12098": 248, "12100": 248, "12102": 248, "12104": 248, "12106": 248, "12108": 248, "12110": 248, "12112": 248, "12114": 248, "12116": 248, "12118": 248, "12120": 248, "12122": 248, "12124": 248, "12126": 248, "12128": 248, "12130": 248, "12132": 248, "12134": 248, "12136": 248, "12138": 248, "12140": 248, "12142": 248, "12144": 248, "12146": 248, "12148": 248, "12150": 248, "12152": 248, "12154": 248, "12158": 248, "12160": 248, "12162": 248, "12164": 248, "12166": 248, "12168": 248, "12170": 248, "12172": 248, "12174": 248, "12176": 248, "12178": 248, "12180": 248, "12182": 248, "12184": 248, "12186": 248, "12188": 248, "12190": 248, "12192": 248, "12194": 248, "12196": 248, "12198": 248, "12200": 248, "12202": 248, "12204": 248, "12206": 248, "12208": 248, "12210": 248, "12212": 248, "12214": 248, "12216": 248, "12218": 248, "12220": 248, "12222": 248, "12224": 248, "12226": 248, "12228": 248, "12230": 248, "12232": 248, "12234": 248, "12236": 248, "12238": 248, "12240": 248, "12242": 248, "12244": 248, "12246": 248, "12248": 248, "12250": 248, "12252": 248, "12254": 248, "12256": 248, "12258": 248, "12260": 248, "12262": 248, "12264": 248, "12266": 248, "12268": 248, "12270": 248, "12272": 248, "12274": 248, "12276": 248, "12278": 248, "12280": 248, "12282": 248, "12284": 248, "12286": 248, "12288": 248, "12290": 248, "12292": 248, "12294": 248, "12296": 248, "12298": 248, "12300": 248, "12302": 248, "12304": 248, "12306": 248, "12308": 248, "12310": 248, "12312": 248, "12314": 248, "12316": 248, "12318": 248, "12320": 248, "12322": 248, "12324": 248, "12326": 248, "12328": 248, "12330": 248, "12332": 248, "12334": 248, "12336": 248, "12338": 248, "12340": 248, "12342": 248, "12344": 248, "12346": 248, "12348": 248, "12350": 248, "12352": 248, "12354": 248, "12356": 248, "12358": 248, "12360": 248, "12362": 248, "12364": 248, "12366": 248, "12368": 248, "12370": 248, "12372": 248, "12374": 248, "12376": 248, "12378": 248, "12380": 248, "12382": 248, "12384": 248, "12386": 248, "12388": 248, "12390": 248, "12392": 248, "12394": 248, "12396": 248, "12398": 248, "12400": 248, "12402": 248, "12404": 248, "12406": 248, "12408": 248, "12410": 248, "12412": 248, "12414": 248, "12416": 248, "12418": 248, "12420": 248, "12422": 248, "12424": 248, "12426": 248, "12428": 248, "12430": 248, "12432": 248, "12434": 248, "12436": 248, "12438": 248, "12440": 248, "12442": 248, "12444": 248, "12446": 248, "12448": 248, "12450": 248, "12452": 248, "12454": 248, "12456": 248, "12458": 248, "12460": 248, "12462": 248, "12464": 248, "12466": 248, "12468": 248, "12470": 248, "12472": 248, "12474": 248, "12476": 248, "12478": 248, "12480": 248, "12482": 248, "12484": 248, "12486": 248, "12488": 248, "12490": 248, "12492": 248, "12494": 248, "12496": 248, "12498": 248, "12500": 248, "12502": 248, "12504": 248, "12506": 248, "12508": 248, "12510": 248, "12512": 248, "12514": 248, "12516": 248, "12518": 248, "12520": 248, "12522": 248, "12524": 248, "12526": 248, "12528": 248, "12530": 248, "12532": 248, "12534": 248, "12536": 248, "12538": 248, "12540": 248, "12542": 248, "12544": 248, "12546": 248, "12548": 248, "12550": 248, "12552": 248, "12554": 248, "12556": 248, "12558": 248, "12560": 248, "12562": 248, "12564": 248, "12566": 248, "12568": 248, "12570": 248, "12572": 248, "12574": 248, "12576": 248, "12578": 248, "12580": 248, "12582": 248, "12584": 248, "12586": 248, "12588": 248, "12590": 248, "12592": 248, "12594": 248, "12596": 248, "12598": 248, "12600": 248, "12602": 248, "12604": 248, "12606": 248, "12608": 248, "12610": 248, "12612": 248, "12614": 248, "12616": 248, "12618": 248, "12620": 248, "12622": 248, "12624": 248, "12626": 248, "12628": 248, "12630": 248, "12632": 248, "12634": 248, "12636": 248, "12638": 248, "12640": 248, "12642": 248, "12644": 248, "12646": 248, "12648": 248, "12650": 248, "12652": 248, "12654": 248, "12656": 248, "12658": 248, "12660": 248, "12662": 248, "12664": 248, "12666": 248, "12668": 248, "12670": 248, "12672": 248, "12674": 248, "12676": 248, "12678": 248, "12680": 248, "12682": 248, "12684": 248, "12686": 248, "12688": 248, "12690": 248, "12692": 248, "12694": 248, "12696": 248, "12698": 248, "12700": 248, "12702": 248, "12704": 248, "12706": 248, "12708": 248, "12710": 248, "12712": 248, "12714": 248, "12716": 248, "12718": 248, "12720": 248, "12722": 248, "12724": 248, "12726": 248, "12728": 248, "12730": 248, "12732": 248, "12734": 248, "12736": 248, "12738": 248, "12740": 248, "12742": 248, "12744": 248, "12746": 248, "12748": 248, "12750": 248, "12752": 248, "12754": 248, "12756": 248, "12758": 248, "12760": 248, "12762": 248, "12764": 248, "12766": 248, "12768": 248, "12770": 248, "12772": 248, "12774": 248, "12776": 248, "12778": 248, "12780": 248, "12782": 248, "12784": 248, "12786": 248, "12788": 248, "12790": 248, "12792": 248, "12794": 248, "12796": 248, "12798": 248, "12800": 248, "12802": 248, "12804": 248, "12806": 248, "12808": 248, "12810": 248, "12812": 248, "12814": 248, "12816": 248, "12818": 248, "12820": 248, "12822": 248, "12824": 248, "12826": 248, "12828": 248, "12830": 248, "12832": 248, "12834": 248, "12836": 248, "12838": 248, "12840": 248, "12842": 248, "12844": 248, "12846": 248, "12848": 248, "12850": 248, "12852": 248, "12854": 248, "12856": 248, "12858": 248, "12860": 248, "12862": 248, "12864": 248, "12866": 248, "12868": 248, "12870": 248, "12872": 248, "12874": 248, "12876": 248, "12878": 248, "12880": 248, "12882": 248, "12884": 248, "12886": 248, "12888": 248, "12890": 248, "12892": 248, "12894": 248, "12896": 248, "12898": 248, "12900": 248, "12902": 248, "12904": 248, "12906": 248, "12908": 248, "12910": 248, "12912": 248, "12914": 248, "12916": 248, "12918": 248, "12920": 248, "12922": 248, "12924": 248, "12926": 248, "12928": 248, "12930": 248, "12932": 248, "12934": 248, "12936": 248, "12938": 248, "12940": 248, "12942": 248, "12944": 248, "12946": 248, "12948": 248, "12950": 248, "12952": 248, "12954": 248, "12956": 248, "12958": 248, "12960": 248, "12962": 248, "12964": 248, "12966": 248, "12968": 248, "12970": 248, "12972": 248, "12974": 248, "12976": 248, "12978": 248, "12980": 248, "12982": 248, "12984": 248, "12986": 248, "12988": 248, "12990": 248, "12992": 248, "12994": 248, "12996": 248, "12998": 248, "13000": 248, "13002": 248, "13004": 248, "13006": 248, "13008": 248, "13010": 248, "13012": 248, "13014": 248, "13016": 248, "13018": 248, "13020": 248, "13022": 248, "13024": 248, "13026": 248, "13028": 248, "13030": 248, "13032": 248, "13034": 248, "13036": 248, "13038": 248, "13040": 248, "13042": 248, "13044": 248, "13046": 248, "13048": 248, "13050": 248, "13052": 248, "13054": 248, "13056": 248, "13058": 248, "13060": 248, "13062": 248, "13064": 248, "13066": 248, "13068": 248, "13070": 248, "13072": 248, "13074": 248, "13076": 248, "13078": 248, "13080": 248, "13082": 248, "13084": 248, "13086": 248, "13088": 248, "13090": 248, "13092": 248, "13094": 248, "13096": 248, "13098": 248, "13100": 248, "13102": 248, "13104": 248, "13106": 248, "13108": 248, "13110": 248, "13112": 248, "13114": 248, "13116": 248, "13118": 248, "13120": 248, "13122": 248, "13124": 248, "13126": 248, "13128": 248, "13130": 248, "13132": 248, "13134": 248, "13136": 248, "13138": 248, "13140": 248, "13142": 248, "13144": 248, "13146": 248, "13148": 248, "13150": 248, "13152": 248, "13154": 248, "13156": 248, "13158": 248, "13160": 248, "13162": 248, "13164": 248, "13166": 248, "13168": 248, "13170": 248, "13172": 248, "13174": 248, "13176": 248, "13178": 248, "13180": 248, "13182": 248, "13184": 248, "13186": 248, "13188": 248, "13190": 248, "13192": 248, "13194": 248, "13196": 248, "13198": 248, "13200": 248, "13202": 248, "13204": 248, "13206": 248, "13208": 248, "13210": 248, "13212": 248, "13214": 248, "13216": 248, "13218": 248, "13220": 248, "13222": 248, "13224": 248, "13226": 248, "13228": 248, "13230": 248, "13232": 248, "13234": 248, "13236": 248, "13238": 248, "13240": 248, "13242": 248, "13244": 248, "13246": 248, "13248": 248, "13250": 248, "13252": 248, "13254": 248, "13256": 248, "13258": 248, "13260": 248, "13262": 248, "13264": 248, "13266": 248, "13268": 248, "13270": 248, "13272": 248, "13274": 248, "13276": 248, "13278": 248, "13280": 248, "13282": 248, "13284": 248, "13286": 248, "13288": 248, "13290": 248, "13292": 248, "13294": 248, "13296": 248, "13298": 248, "13300": 248, "13302": 248, "13304": 248, "13306": 248, "13308": 248, "13310": 248, "13312": 248, "13314": 248, "13316": 248, "13318": 248, "13320": 248, "13322": 248, "13324": 248, "13326": 248, "13328": 248, "13330": 248, "13332": 248, "13334": 248, "13336": 248, "13338": 248, "13340": 248, "13342": 248, "13344": 248, "13346": 248, "13348": 248, "13350": 248, "13352": 248, "13354": 248, "13356": 248, "13358": 248, "13360": 248, "13362": 248, "13364": 248, "13366": 248, "13368": 248, "13370": 248, "13372": 248, "13374": 248, "13376": 248, "13378": 248, "13380": 248, "13382": 248, "13384": 248, "13386": 248, "13388": 248, "13390": 248, "13392": 248, "13394": 248, "13396": 248, "13398": 248, "13400": 248, "13402": 248, "13404": 248, "13406": 248, "13408": 248, "13410": 248, "13412": 248, "13414": 248, "13416": 248, "13418": 248, "13420": 248, "13422": 248, "13424": 248, "13426": 248, "13428": 248, "13430": 248, "13432": 248, "13434": 248, "13436": 248, "13438": 248, "13440": 248, "13442": 248, "13444": 248, "13446": 248, "13448": 248, "13450": 248, "13452": 248, "13454": 248, "13456": 248, "13458": 248, "13460": 248, "13462": 248, "13464": 248, "13466": 248, "13468": 248, "13470": 248, "13472": 248, "13474": 248, "13476": 248, "13478": 248, "13480": 248, "13482": 248, "13484": 248, "13486": 248, "13488": 248, "13490": 248, "13492": 248, "13494": 248, "13496": 248, "13498": 248, "13502": 248, "13504": 248, "13506": 248, "13508": 248, "13510": 248, "13512": 248, "13514": 248, "13516": 248, "13518": 248, "13520": 248, "13522": 248, "13524": 248, "13526": 248, "13528": 248, "13530": 248, "13532": 248, "13534": 248, "13536": 248, "13538": 248, "13540": 248, "13542": 248, "13544": 248, "13546": 248, "13548": 248, "13550": 248, "13552": 248, "13554": 248, "13556": 248, "13558": 248, "13560": 248, "13562": 248, "13564": 248, "13566": 248, "13568": 248, "13570": 248, "13572": 248, "13574": 248, "13576": 248, "13578": 248, "13580": 248, "13582": 248, "13584": 248, "13586": 248, "13588": 248, "13590": 248, "13592": 248, "13594": 248, "13596": 248, "13598": 248, "13600": 248, "13602": 248, "13604": 248, "13606": 248, "13608": 248, "13610": 248, "13612": 248, "13614": 248, "13616": 248, "13618": 248, "13620": 248, "13622": 248, "13624": 248, "13626": 248, "13628": 248, "13630": 248, "13632": 248, "13634": 248, "13636": 248, "13638": 248, "13640": 248, "13642": 248, "13644": 248, "13646": 248, "13648": 248, "13650": 248, "13652": 248, "13654": 248, "13656": 248, "13658": 248, "13660": 248, "13662": 248, "13664": 248, "13666": 248, "13668": 248, "13670": 248, "13672": 248, "13674": 248, "13676": 248, "13678": 248, "13680": 248, "13682": 248, "13684": 248, "13686": 248, "13688": 248, "13690": 248, "13692": 248, "13694": 248, "13696": 248, "13698": 248, "13700": 248, "13702": 248, "13704": 248, "13706": 248, "13708": 248, "13710": 248, "13712": 248, "13714": 248, "13716": 248, "13718": 248, "13720": 248, "13722": 248, "13724": 248, "13726": 248, "13728": 248, "13730": 248, "13732": 248, "13734": 248, "13736": 248, "13738": 248, "13740": 248, "13742": 248, "13744": 248, "13746": 248, "13748": 248, "13750": 248, "13752": 248, "13754": 248, "13756": 248, "13758": 248, "13760": 248, "13762": 248, "13764": 248, "13766": 248, "13768": 248, "13770": 248, "13772": 248, "13774": 248, "13776": 248, "13778": 248, "13780": 248, "13782": 248, "13784": 248, "13786": 248, "13788": 248, "13790": 248, "13792": 248, "13794": 248, "13796": 248, "13798": 248, "13800": 248, "13802": 248, "13804": 248, "13806": 248, "13808": 248, "13810": 248, "13812": 248, "13814": 248, "13816": 248, "13818": 248, "13820": 248, "13822": 248, "13824": 248, "13826": 248, "13828": 248, "13830": 248, "13832": 248, "13834": 248, "13836": 248, "13838": 248, "13840": 248, "13842": 248, "13844": 248, "13846": 248, "13848": 248, "13850": 248, "13852": 248, "13854": 248, "13856": 248, "13858": 248, "13860": 248, "13862": 248, "13864": 248, "13866": 248, "13868": 248, "13870": 248, "13872": 248, "13874": 248, "13876": 248, "13878": 248, "13880": 248, "13882": 248, "13884": 248, "13886": 248, "13888": 248, "13890": 248, "13892": 248, "13894": 248, "13896": 248, "13898": 248, "13900": 248, "13902": 248, "13904": 248, "13906": 248, "13908": 248, "13910": 248, "13912": 248, "13914": 248, "13916": 248, "13918": 248, "13920": 248, "13922": 248, "13924": 248, "13926": 248, "13928": 248, "13930": 248, "13932": 248, "13934": 248, "13936": 248, "13938": 248, "13940": 248, "13942": 248, "13944": 248, "13946": 248, "13948": 248, "13950": 248, "13952": 248, "13954": 248, "13956": 248, "13958": 248, "13960": [248, 981], "13962": 248, "13964": 248, "13966": 248, "13968": 248, "13970": 248, "13972": 248, "13974": 248, "13976": 248, "13978": 248, "13980": 248, "13982": 248, "13984": 248, "13986": 248, "13988": 248, "13990": 248, "13992": 248, "13994": 248, "13996": 248, "13998": 248, "14000": 248, "14002": 248, "14004": 248, "14006": 248, "14008": 248, "14010": 248, "14012": 248, "14014": 248, "14016": 248, "14018": 248, "14020": 248, "14022": 248, "14024": 248, "14026": 248, "14028": 248, "14030": 248, "14032": 248, "14034": 248, "14036": 248, "14038": 248, "14040": 248, "14042": 248, "14044": 248, "14046": 248, "14048": 248, "14050": 248, "14052": 248, "14054": 248, "14056": 248, "14058": 248, "14060": 248, "14062": 248, "14064": 248, "14066": 248, "14068": 248, "14070": 248, "14072": 248, "14074": 248, "14076": 248, "14078": 248, "14080": 248, "14082": 248, "14084": 248, "14086": 248, "14088": 248, "14090": 248, "14092": 248, "14094": 248, "14096": 248, "14098": 248, "14100": 248, "14102": 248, "14104": 248, "14106": 248, "14108": 248, "14110": 248, "14112": 248, "14114": 248, "14116": 248, "14118": 248, "14120": 248, "14122": 248, "14124": 248, "14126": 248, "14128": 248, "14130": 248, "14132": 248, "14134": 248, "14136": 248, "14138": 248, "14140": 248, "14142": 248, "14144": 248, "14146": 248, "14148": 248, "14150": 248, "14152": 248, "14154": 248, "14156": 248, "14158": 248, "14160": 248, "14162": 248, "14164": 248, "14166": 248, "14168": 248, "14170": 248, "14172": 248, "14174": 248, "14176": 248, "14178": 248, "14180": 248, "14182": 248, "14184": 248, "14186": 248, "14188": 248, "14190": 248, "14192": 248, "14194": 248, "14196": 248, "14198": 248, "14200": 248, "14202": 248, "14204": 248, "14206": 248, "14208": 248, "14210": 248, "14212": 248, "14214": 248, "14216": 248, "14218": 248, "14220": 248, "14222": 248, "14224": 248, "14226": 248, "14228": 248, "14230": 248, "14232": 248, "14234": 248, "14236": 248, "14238": 248, "14240": 248, "14242": 248, "14244": 248, "14246": 248, "14248": 248, "14250": 248, "14252": 248, "14254": 248, "14256": 248, "14258": 248, "14260": 248, "14262": 248, "14264": 248, "14266": 248, "14268": 248, "14270": 248, "14272": 248, "14274": 248, "14276": 248, "14278": 248, "14280": 248, "14282": 248, "14284": 248, "14286": 248, "14288": 248, "14290": 248, "14292": 248, "14294": 248, "14296": 248, "14298": 248, "14300": 248, "14302": 248, "14304": 248, "14306": 248, "14308": 248, "14310": 248, "14312": 248, "14314": 248, "14316": 248, "14318": 248, "14320": 248, "14322": 248, "14324": 248, "14326": 248, "14328": 248, "14330": 248, "14332": 248, "14334": 248, "14336": 248, "14338": 248, "14340": 248, "14342": 248, "14344": 248, "14346": 248, "14348": 248, "14350": 248, "14352": 248, "14354": 248, "14356": 248, "14358": 248, "14360": 248, "14362": 248, "14364": 248, "14366": 248, "14368": 248, "14370": 248, "14372": 248, "14374": 248, "14376": 248, "14378": 248, "14380": 248, "14382": 248, "14384": 248, "14388": 248, "14390": 248, "14392": 248, "14394": 248, "14396": 248, "14398": 248, "14400": 248, "14402": 248, "14404": 248, "14406": 248, "14408": 248, "14410": 248, "14412": 248, "14414": 248, "14416": 248, "14418": 248, "14420": 248, "14422": 248, "14424": 248, "14426": 248, "14428": 248, "14430": 248, "14432": 248, "14434": 248, "14436": 248, "14438": 248, "14440": 248, "14442": 248, "14444": 248, "14446": 248, "14448": 248, "14450": 248, "14452": 248, "14454": 248, "14456": 248, "14458": 248, "14460": 248, "14462": 248, "14464": 248, "14466": 248, "14468": 248, "14470": 248, "14472": 248, "14474": 248, "14476": 248, "14478": 248, "14480": 248, "14482": 248, "14484": 248, "14486": 248, "14488": 248, "14490": 248, "14492": 248, "14494": 248, "14496": 248, "14498": 248, "14500": 248, "14502": 248, "14504": 248, "14506": 248, "14508": 248, "14510": 248, "14512": 248, "14514": 248, "14516": 248, "14518": 248, "14520": 248, "14522": 248, "14524": 248, "14526": 248, "14528": 248, "14530": 248, "14532": 248, "14534": 248, "14536": 248, "14538": 248, "14540": 248, "14542": 248, "14544": 248, "14546": 248, "14548": 248, "14550": 248, "14552": 248, "14554": 248, "14556": 248, "14558": 248, "14560": 248, "14562": 248, "14564": 248, "14566": 248, "14568": 248, "14570": 248, "14572": 248, "14574": 248, "14576": 248, "14578": 248, "14580": 248, "14582": 248, "14584": 248, "14586": 248, "14588": 248, "14590": 248, "14592": 248, "14594": 248, "14596": 248, "14598": 248, "14600": 248, "14602": 248, "14604": 248, "14606": 248, "14608": 248, "14610": 248, "14612": 248, "14614": 248, "14616": 248, "14618": 248, "14620": 248, "14622": 248, "14624": 248, "14626": 248, "14628": 248, "14630": 248, "14632": 248, "14634": 248, "14636": 248, "14638": 248, "14640": 248, "14642": 248, "14644": 248, "14646": 248, "14648": 248, "14650": 248, "14652": 248, "14654": 248, "14656": 248, "14658": 248, "14660": 248, "14662": 248, "14664": 248, "14666": 248, "14668": 248, "14670": 248, "14672": 248, "14674": 248, "14676": 248, "14678": 248, "14680": 248, "14682": 248, "14684": 248, "14686": 248, "14688": 248, "14690": 248, "14692": 248, "14694": 248, "14696": 248, "14698": 248, "14700": 248, "14702": 248, "14704": 248, "14706": 248, "14708": 248, "14710": 248, "14712": 248, "14714": 248, "14716": 248, "14718": 248, "14720": 248, "14722": 248, "14724": 248, "14726": 248, "14728": 248, "14730": 248, "14732": 248, "14734": 248, "14736": 248, "14738": 248, "14740": 248, "14742": 248, "14744": 248, "14746": 248, "14748": 248, "14750": 248, "14752": 248, "14754": 248, "14756": 248, "14758": 248, "14760": 248, "14762": 248, "14764": 248, "14766": 248, "14768": 248, "14770": 248, "14772": 248, "14774": 248, "14776": 248, "14778": 248, "14780": 248, "14782": 248, "14784": 248, "14786": 248, "14788": 248, "14790": 248, "14792": 248, "14794": 248, "14796": 248, "14798": 248, "14800": 248, "14802": 248, "14804": 248, "14806": 248, "14808": 248, "14810": 248, "14812": 248, "14814": 248, "14816": 248, "14818": 248, "14820": 248, "14822": 248, "14824": 248, "14826": 248, "14828": 248, "14830": 248, "14832": 248, "14834": 248, "14836": 248, "14838": 248, "14840": 248, "14842": 248, "14844": 248, "14846": 248, "14848": 248, "14850": 248, "14852": 248, "14854": 248, "14856": 248, "14858": 248, "14860": 248, "14862": 248, "14864": 248, "14866": 248, "14868": 248, "14870": 248, "14872": 248, "14874": 248, "14876": 248, "14878": 248, "14880": 248, "14882": [248, 596], "14884": 248, "14886": 248, "14888": 248, "14890": 248, "14892": 248, "14894": 248, "14896": 248, "14898": 248, "14900": 248, "14902": 248, "14904": 248, "14906": 248, "14908": 248, "14910": 248, "14912": 248, "14914": 248, "14916": 248, "14918": 248, "14920": 248, "14922": 248, "14924": 248, "14926": 248, "14928": 248, "14930": 248, "14932": 248, "14934": 248, "14936": 248, "14938": 248, "14940": 248, "14942": 248, "14944": 248, "14946": 248, "14948": 248, "14950": 248, "14952": 248, "14954": 248, "14956": 248, "14958": 248, "14960": 248, "14962": 248, "14964": 248, "14966": 248, "14968": 248, "14970": 248, "14972": 248, "14974": 248, "14976": 248, "14978": 248, "14980": 248, "14982": 248, "14984": 248, "14986": 248, "14988": 248, "14990": [248, 297], "14992": 248, "14994": 248, "14996": 248, "14998": 248, "15002": 248, "15004": 248, "15006": 248, "15008": 248, "15010": 248, "15012": 248, "15014": 248, "15016": 248, "15018": 248, "15020": 248, "15022": 248, "15024": 248, "15026": 248, "15028": 248, "15030": 248, "15032": 248, "15034": 248, "15036": 248, "15038": 248, "15040": 248, "15042": 248, "15044": 248, "15046": 248, "15048": 248, "15050": 248, "15052": 248, "15054": 248, "15056": 248, "15058": 248, "15060": 248, "15062": 248, "15064": 248, "15066": 248, "15068": 248, "15070": 248, "15072": 248, "15074": 248, "15076": 248, "15078": 248, "15080": 248, "15082": 248, "15084": 248, "15086": 248, "15088": 248, "15090": 248, "15092": 248, "15094": 248, "15096": 248, "15098": 248, "15100": 248, "15102": 248, "15104": 248, "15106": 248, "15108": 248, "15110": 248, "15112": 248, "15114": 248, "15116": 248, "15118": 248, "15120": 248, "15122": 248, "15124": 248, "15126": 248, "15128": 248, "15130": 248, "15132": 248, "15134": 248, "15136": 248, "15138": 248, "15140": 248, "15142": 248, "15144": 248, "15146": 248, "15148": 248, "15150": 248, "15152": 248, "15154": 248, "15156": 248, "15158": 248, "15160": 248, "15162": 248, "15164": 248, "15166": 248, "15168": 248, "15170": 248, "15172": 248, "15174": 248, "15176": 248, "15178": 248, "15180": 248, "15182": 248, "15184": 248, "15186": 248, "15188": 248, "15190": 248, "15192": 248, "15194": 248, "15196": 248, "15198": 248, "15200": 248, "15202": 248, "15204": 248, "15206": 248, "15208": 248, "15210": 248, "15212": 248, "15214": 248, "15216": 248, "15218": 248, "15220": 248, "15222": 248, "15224": 248, "15226": 248, "15228": 248, "15230": 248, "15232": 248, "15234": 248, "15236": 248, "15238": 248, "15240": 248, "15242": 248, "15244": [248, 1026], "15246": 248, "15248": 248, "15250": 248, "15252": 248, "15254": 248, "15256": 248, "15258": 248, "15260": 248, "15262": 248, "15264": 248, "15266": 248, "15268": 248, "15270": 248, "15272": 248, "15274": 248, "15276": 248, "15278": 248, "15280": 248, "15282": 248, "15284": 248, "15286": 248, "15288": 248, "15290": 248, "15292": 248, "15294": 248, "15296": 248, "15298": 248, "15300": 248, "15302": 248, "15304": 248, "15306": 248, "15308": 248, "15310": 248, "15312": 248, "15314": 248, "15316": 248, "15318": 248, "15320": 248, "15322": 248, "15324": 248, "15326": 248, "15328": 248, "15330": 248, "15332": 248, "15334": 248, "15336": 248, "15338": 248, "15340": 248, "15342": 248, "15344": 248, "15346": 248, "15348": 248, "15350": 248, "15352": 248, "15354": 248, "15356": 248, "15358": 248, "15360": 248, "15362": 248, "15364": 248, "15366": 248, "15368": 248, "15370": 248, "15372": 248, "15374": 248, "15376": 248, "15378": 248, "15380": 248, "15382": 248, "15384": 248, "15386": 248, "15388": 248, "15390": 248, "15392": 248, "15394": 248, "15396": 248, "15398": 248, "15400": 248, "15402": 248, "15404": 248, "15406": 248, "15408": 248, "15410": 248, "15412": 248, "15414": 248, "15416": 248, "15418": 248, "15420": 248, "15422": 248, "15424": 248, "15426": 248, "15428": 248, "15430": 248, "15432": 248, "15434": 248, "15436": 248, "15438": 248, "15440": 248, "15442": 248, "15444": 248, "15446": 248, "15448": 248, "15450": 248, "15452": 248, "15454": 248, "15456": 248, "15458": 248, "15460": 248, "15462": 248, "15464": 248, "15466": 248, "15468": 248, "15470": 248, "15472": 248, "15474": 248, "15476": 248, "15478": 248, "15480": 248, "15482": 248, "15484": 248, "15486": 248, "15488": 248, "15490": 248, "15492": 248, "15494": 248, "15496": 248, "15498": 248, "15500": 248, "15502": 248, "15504": 248, "15506": 248, "15508": 248, "15510": 248, "15512": 248, "15514": 248, "15516": 248, "15518": 248, "15520": 248, "15522": 248, "15524": 248, "15526": 248, "15528": 248, "15530": 248, "15532": 248, "15534": 248, "15536": 248, "15538": 248, "15540": 248, "15542": 248, "15544": 248, "15546": 248, "15548": 248, "15550": 248, "15552": 248, "15554": 248, "15556": 248, "15558": 248, "15560": 248, "15562": 248, "15564": 248, "15566": 248, "15568": 248, "15570": 248, "15572": 248, "15574": 248, "15576": 248, "15578": 248, "15580": 248, "15582": 248, "15584": 248, "15586": 248, "15588": 248, "15590": 248, "15592": 248, "15594": 248, "15596": 248, "15598": 248, "15600": 248, "15602": 248, "15604": 248, "15606": 248, "15608": 248, "15610": 248, "15612": 248, "15614": 248, "15616": 248, "15618": 248, "15620": 248, "15622": 248, "15624": 248, "15626": 248, "15628": 248, "15630": 248, "15632": 248, "15634": 248, "15636": 248, "15638": 248, "15640": 248, "15642": 248, "15644": 248, "15646": 248, "15648": 248, "15650": 248, "15652": 248, "15654": 248, "15656": 248, "15658": 248, "15660": 248, "15662": 248, "15664": 248, "15666": 248, "15668": 248, "15670": 248, "15672": 248, "15674": 248, "15676": 248, "15678": 248, "15680": 248, "15682": 248, "15684": 248, "15686": 248, "15688": 248, "15690": 248, "15692": 248, "15694": 248, "15696": 248, "15698": 248, "15700": 248, "15702": 248, "15704": 248, "15706": 248, "15708": 248, "15710": 248, "15712": 248, "15714": 248, "15716": 248, "15718": 248, "15720": 248, "15722": 248, "15724": 248, "15726": 248, "15728": 248, "15730": 248, "15732": 248, "15734": 248, "15736": 248, "15738": 248, "15740": 248, "15742": 248, "15744": 248, "15746": 248, "15748": 248, "15750": 248, "15752": 248, "15754": 248, "15756": 248, "15758": 248, "15760": 248, "15762": 248, "15764": 248, "15766": 248, "15768": 248, "15770": 248, "15772": 248, "15774": 248, "15776": 248, "15778": 248, "15780": 248, "15782": 248, "15784": 248, "15786": 248, "15788": 248, "15790": 248, "15792": 248, "15794": 248, "15796": 248, "15798": 248, "15800": 248, "15802": 248, "15804": 248, "15806": 248, "15808": 248, "15810": 248, "15812": 248, "15814": 248, "15816": 248, "15818": 248, "15820": 248, "15822": 248, "15824": 248, "15826": 248, "15828": 248, "15830": 248, "15832": 248, "15834": 248, "15836": 248, "15838": 248, "15840": 248, "15842": 248, "15844": 248, "15846": 248, "15848": 248, "15850": 248, "15852": 248, "15854": 248, "15856": 248, "15858": 248, "15860": 248, "15862": 248, "15864": 248, "15866": 248, "15868": 248, "15870": 248, "15872": 248, "15874": 248, "15876": 248, "15878": 248, "15880": 248, "15882": 248, "15884": 248, "15886": 248, "15888": 248, "15890": 248, "15892": 248, "15894": 248, "15896": 248, "15898": 248, "15900": 248, "15902": 248, "15904": 248, "15906": 248, "15908": 248, "15910": 248, "15912": 248, "15914": 248, "15916": 248, "15918": 248, "15920": 248, "15922": 248, "15924": 248, "15926": 248, "15928": 248, "15930": 248, "15932": 248, "15934": 248, "15936": 248, "15938": 248, "15940": 248, "15942": 248, "15944": 248, "15946": 248, "15948": 248, "15950": 248, "15952": 248, "15954": 248, "15956": 248, "15958": 248, "15960": 248, "15962": 248, "15964": 248, "15966": 248, "15968": 248, "15970": 248, "15972": 248, "15974": 248, "15976": 248, "15978": 248, "15980": 248, "15982": 248, "15984": 248, "15986": 248, "15988": 248, "15990": 248, "15992": 248, "15994": 248, "15996": 248, "15998": 248, "16000": 248, "16002": 248, "16004": 248, "16006": 248, "16008": 248, "16010": 248, "16012": 248, "16014": 248, "16016": 248, "16018": 248, "16020": 248, "16022": 248, "16024": 248, "16026": 248, "16028": 248, "16030": 248, "16032": 248, "16034": 248, "16036": 248, "16038": 248, "16040": 248, "16042": 248, "16044": 248, "16046": 248, "16048": 248, "16050": 248, "16052": 248, "16054": 248, "16056": 248, "16058": 248, "16060": 248, "16062": 248, "16064": 248, "16066": 248, "16068": 248, "16070": 248, "16072": 248, "16074": 248, "16076": 248, "16078": 248, "16080": 248, "16082": 248, "16084": 248, "16086": 248, "16088": 248, "16090": 248, "16092": 248, "16094": 248, "16096": 248, "16098": 248, "16100": 248, "16102": 248, "16104": 248, "16106": 248, "16108": 248, "16110": 248, "16112": 248, "16114": 248, "16116": 248, "16118": 248, "16120": 248, "16122": 248, "16124": 248, "16126": 248, "16128": 248, "16130": 248, "16132": 248, "16134": 248, "16136": 248, "16138": 248, "16140": 248, "16142": 248, "16144": 248, "16146": 248, "16148": 248, "16150": 248, "16152": 248, "16154": 248, "16156": 248, "16158": 248, "16160": 248, "16162": 248, "16164": 248, "16166": 248, "16168": 248, "16170": 248, "16172": 248, "16174": 248, "16176": 248, "16178": 248, "16180": 248, "16182": 248, "16184": 248, "16186": 248, "16188": 248, "16190": 248, "16192": 248, "16194": 248, "16196": 248, "16198": 248, "16200": 248, "16202": 248, "16204": 248, "16206": 248, "16208": 248, "16210": 248, "16212": 248, "16214": 248, "16216": 248, "16218": 248, "16220": 248, "16222": 248, "16224": 248, "16226": 248, "16228": 248, "16230": 248, "16232": 248, "16234": 248, "16236": 248, "16238": 248, "16240": 248, "16242": 248, "16244": 248, "16246": 248, "16248": 248, "16250": 248, "16252": 248, "16254": 248, "16256": 248, "16258": 248, "16260": 248, "16262": 248, "16264": 248, "16266": 248, "16268": 248, "16270": 248, "16272": 248, "16274": 248, "16276": 248, "16278": 248, "16280": 248, "16282": 248, "16284": 248, "16286": 248, "16288": 248, "16290": 248, "16292": 248, "16294": 248, "16296": 248, "16298": 248, "16300": 248, "16302": 248, "16304": 248, "16306": 248, "16308": 248, "16310": 248, "16312": 248, "16314": 248, "16316": 248, "16318": 248, "16320": 248, "16322": 248, "16324": 248, "16326": 248, "16328": 248, "16330": 248, "16332": 248, "16334": 248, "16336": 248, "16338": 248, "16340": 248, "16342": 248, "16344": 248, "16346": 248, "16348": 248, "16350": 248, "16352": 248, "16354": 248, "16356": 248, "16358": 248, "16360": 248, "16362": 248, "16364": 248, "16366": 248, "16368": 248, "16370": 248, "16372": 248, "16374": 248, "16376": 248, "16378": 248, "16380": 248, "16382": 248, "16386": 248, "16388": 248, "16390": 248, "16392": 248, "16394": 248, "16396": 248, "16398": 248, "16400": 248, "16402": 248, "16404": 248, "16406": 248, "16408": 248, "16410": 248, "16412": 248, "16414": 248, "16416": 248, "16418": 248, "16420": 248, "16422": 248, "16424": 248, "16426": 248, "16428": 248, "16430": 248, "16432": 248, "16434": 248, "16436": 248, "16438": 248, "16440": 248, "16442": 248, "16444": 248, "16446": 248, "16448": 248, "16450": 248, "16452": 248, "16454": 248, "16456": 248, "16458": 248, "16460": 248, "16462": 248, "16464": 248, "16466": 248, "16468": 248, "16470": 248, "16472": 248, "16474": 248, "16476": 248, "16478": 248, "16480": 248, "16482": 248, "16484": 248, "16486": 248, "16488": 248, "16490": 248, "16492": 248, "16494": 248, "16496": 248, "16498": 248, "16500": 248, "16502": 248, "16504": 248, "16506": 248, "16508": 248, "16510": 248, "16512": 248, "16514": 248, "16516": 248, "16518": 248, "16520": 248, "16522": 248, "16524": 248, "16526": 248, "16528": 248, "16530": 248, "16532": 248, "16534": 248, "16536": 248, "16538": 248, "16540": 248, "16542": 248, "16544": 248, "16546": 248, "16548": 248, "16550": 248, "16552": 248, "16554": 248, "16556": 248, "16558": 248, "16560": 248, "16562": 248, "16564": 248, "16566": 248, "16568": 248, "16570": 248, "16572": 248, "16574": 248, "16576": 248, "16578": 248, "16580": 248, "16582": 248, "16584": 248, "16586": 248, "16588": 248, "16590": 248, "16592": 248, "16594": 248, "16596": 248, "16598": 248, "16600": 248, "16602": 248, "16604": 248, "16606": 248, "16608": 248, "16610": 248, "16612": 248, "16614": 248, "16616": 248, "16618": 248, "16620": 248, "16622": 248, "16624": 248, "16626": 248, "16628": 248, "16630": 248, "16632": 248, "16634": 248, "16636": 248, "16638": 248, "16640": 248, "16642": 248, "16644": 248, "16646": 248, "16648": 248, "16650": 248, "16652": 248, "16654": 248, "16656": 248, "16658": 248, "16660": 248, "16662": 248, "16664": 248, "16666": 248, "16668": 248, "16670": 248, "16672": 248, "16674": 248, "16676": 248, "16678": 248, "16680": 248, "16682": 248, "16684": 248, "16686": 248, "16688": 248, "16690": 248, "16692": 248, "16694": 248, "16696": 248, "16698": 248, "16700": 248, "16702": 248, "16704": 248, "16706": 248, "16708": 248, "16710": 248, "16712": 248, "16714": 248, "16716": 248, "16718": 248, "16720": 248, "16722": 248, "16724": 248, "16726": 248, "16728": 248, "16730": 248, "16732": 248, "16734": 248, "16736": 248, "16738": 248, "16740": 248, "16742": 248, "16744": 248, "16746": 248, "16748": 248, "16750": 248, "16752": 248, "16754": 248, "16756": 248, "16758": 248, "16760": 248, "16762": 248, "16764": 248, "16766": 248, "16768": 248, "16770": 248, "16772": 248, "16774": 248, "16776": 248, "16778": 248, "16780": 248, "16782": 248, "16784": 248, "16786": 248, "16788": 248, "16790": 248, "16792": 248, "16794": 248, "16796": 248, "16798": 248, "16800": 248, "16802": 248, "16804": 248, "16806": 248, "16808": 248, "16810": 248, "16812": 248, "16814": 248, "16816": 248, "16818": 248, "16820": 248, "16822": 248, "16824": 248, "16826": 248, "16828": 248, "16830": 248, "16832": 248, "16834": 248, "16836": 248, "16838": 248, "16840": 248, "16842": 248, "16844": 248, "16846": 248, "16848": 248, "16850": 248, "16852": 248, "16854": 248, "16856": 248, "16858": 248, "16860": 248, "16862": 248, "16864": 248, "16866": 248, "16868": 248, "16870": 248, "16872": 248, "16874": 248, "16876": 248, "16878": 248, "16880": 248, "16882": 248, "16884": 248, "16886": 248, "16888": 248, "16890": 248, "16892": 248, "16894": 248, "16896": 248, "16898": 248, "16900": 248, "16902": 248, "16904": 248, "16906": 248, "16908": 248, "16910": 248, "16912": 248, "16914": 248, "16916": 248, "16918": 248, "16920": 248, "16922": 248, "16924": 248, "16926": 248, "16928": 248, "16930": 248, "16932": 248, "16934": 248, "16936": 248, "16938": 248, "16940": 248, "16942": 248, "16944": 248, "16946": 248, "16948": 248, "16950": 248, "16952": 248, "16954": 248, "16956": 248, "16958": 248, "16960": 248, "16962": 248, "16964": 248, "16966": 248, "16968": 248, "16970": 248, "16972": 248, "16974": 248, "16976": 248, "16978": 248, "16980": 248, "16982": 248, "16984": 248, "16986": 248, "16988": 248, "16990": 248, "16992": 248, "16994": 248, "16996": 248, "16998": 248, "17000": 248, "17002": 248, "17004": 248, "17006": 248, "17008": 248, "17010": 248, "17012": 248, "17014": 248, "17016": 248, "17018": 248, "17020": 248, "17022": 248, "17024": 248, "17026": 248, "17028": 248, "17030": 248, "17032": 248, "17034": 248, "17036": 248, "17038": 248, "17040": 248, "17042": 248, "17044": 248, "17046": 248, "17048": 248, "17050": 248, "17052": 248, "17054": 248, "17056": 248, "17058": 248, "17060": 248, "17062": 248, "17064": 248, "17066": 248, "17068": 248, "17070": 248, "17072": 248, "17074": 248, "17076": 248, "17078": 248, "17080": 248, "17082": 248, "17084": 248, "17086": 248, "17088": 248, "17090": 248, "17092": 248, "17094": 248, "17096": 248, "17098": 248, "17100": 248, "17102": 248, "17104": 248, "17106": 248, "17108": 248, "17110": 248, "17112": 248, "17114": 248, "17116": 248, "17118": 248, "17120": 248, "17122": 248, "17124": 248, "17126": [248, 297], "17128": 248, "17130": 248, "17132": 248, "17134": 248, "17136": 248, "17138": 248, "17140": 248, "17142": 248, "17144": 248, "17146": 248, "17148": 248, "17150": 248, "17152": 248, "17154": 248, "17156": 248, "17158": 248, "17160": 248, "17162": 248, "17164": 248, "17166": 248, "17168": 248, "17170": 248, "17172": 248, "17174": 248, "17176": 248, "17178": 248, "17180": 248, "17182": 248, "17184": 248, "17186": 248, "17188": 248, "17190": 248, "17192": 248, "17194": 248, "17196": 248, "17198": 248, "17200": 248, "17202": 248, "17204": 248, "17206": 248, "17208": 248, "17210": 248, "17212": 248, "17214": 248, "17216": 248, "17218": 248, "17220": 248, "17222": 248, "17224": 248, "17226": 248, "17228": 248, "17230": 248, "17232": 248, "17234": 248, "17236": 248, "17238": 248, "17240": 248, "17242": 248, "17244": 248, "17246": 248, "17248": 248, "17250": 248, "17252": 248, "17254": 248, "17256": 248, "17258": 248, "17260": 248, "17262": 248, "17264": 248, "17266": 248, "17268": 248, "17270": 248, "17272": 248, "17274": 248, "17276": 248, "17278": 248, "17280": 248, "17282": 248, "17284": 248, "17286": 248, "17288": 248, "17290": 248, "17292": 248, "17294": 248, "17296": 248, "17298": 248, "17300": 248, "17302": 248, "17304": 248, "17306": 248, "17308": 248, "17310": 248, "17312": 248, "17314": 248, "17316": 248, "17318": 248, "17320": 248, "17322": 248, "17324": 248, "17326": 248, "17328": 248, "17330": 248, "17332": 248, "17334": 248, "17336": 248, "17338": 248, "17340": 248, "17342": 248, "17344": 248, "17346": 248, "17348": 248, "17350": 248, "17352": 248, "17354": 248, "17356": 248, "17358": 248, "17360": 248, "17362": 248, "17364": 248, "17366": 248, "17368": 248, "17370": 248, "17372": 248, "17374": 248, "17376": 248, "17378": 248, "17380": 248, "17382": 248, "17384": 248, "17386": 248, "17388": 248, "17390": 248, "17392": 248, "17394": 248, "17396": 248, "17398": 248, "17400": 248, "17402": 248, "17404": 248, "17406": 248, "17408": 248, "17410": 248, "17412": 248, "17414": 248, "17416": 248, "17418": 248, "17420": 248, "17422": 248, "17424": 248, "17426": 248, "17428": 248, "17430": 248, "17432": 248, "17434": 248, "17436": 248, "17438": 248, "17440": 248, "17442": 248, "17444": 248, "17446": 248, "17448": 248, "17450": 248, "17452": 248, "17454": 248, "17456": 248, "17458": 248, "17460": 248, "17462": 248, "17464": 248, "17466": 248, "17468": 248, "17470": 248, "17472": 248, "17474": 248, "17476": 248, "17478": 248, "17480": 248, "17482": 248, "17484": 248, "17486": 248, "17488": 248, "17490": 248, "17492": 248, "17494": 248, "17496": 248, "17498": 248, "17500": 248, "17502": 248, "17504": 248, "17506": 248, "17508": 248, "17510": 248, "17512": 248, "17514": 248, "17516": 248, "17518": 248, "17520": 248, "17522": 248, "17524": 248, "17526": 248, "17528": 248, "17530": 248, "17532": 248, "17534": 248, "17536": 248, "17538": 248, "17540": 248, "17542": 248, "17544": 248, "17546": 248, "17548": 248, "17550": 248, "17552": 248, "17554": 248, "17556": 248, "17558": 248, "17560": 248, "17562": 248, "17564": 248, "17566": 248, "17568": 248, "17570": 248, "17572": 248, "17574": 248, "17576": 248, "17578": 248, "17580": 248, "17582": 248, "17584": 248, "17586": 248, "17588": 248, "17590": 248, "17592": 248, "17594": 248, "17596": 248, "17598": 248, "17600": 248, "17602": 248, "17604": 248, "17606": 248, "17608": 248, "17610": 248, "17612": 248, "17614": 248, "17616": 248, "17618": 248, "17620": 248, "17622": 248, "17624": 248, "17626": 248, "17628": 248, "17630": 248, "17632": 248, "17634": 248, "17636": 248, "17638": 248, "17640": 248, "17642": 248, "17644": 248, "17646": 248, "17648": 248, "17650": 248, "17652": 248, "17654": 248, "17656": 248, "17658": 248, "17660": 248, "17662": 248, "17664": 248, "17666": 248, "17668": 248, "17670": 248, "17672": 248, "17674": 248, "17676": 248, "17678": 248, "17680": 248, "17682": 248, "17684": 248, "17686": 248, "17688": 248, "17690": 248, "17692": 248, "17694": 248, "17696": 248, "17698": 248, "17700": 248, "17702": 248, "17704": 248, "17706": 248, "17708": 248, "17710": 248, "17712": 248, "17714": 248, "17716": 248, "17718": 248, "17720": 248, "17722": 248, "17724": 248, "17726": 248, "17728": 248, "17730": 248, "17732": 248, "17734": 248, "17736": 248, "17738": 248, "17740": 248, "17742": 248, "17744": 248, "17746": 248, "17748": 248, "17750": 248, "17752": 248, "17754": 248, "17756": 248, "17758": 248, "17760": 248, "17762": 248, "17764": 248, "17766": 248, "17768": 248, "17770": 248, "17772": 248, "17774": 248, "17776": 248, "17778": 248, "17780": 248, "17782": 248, "17784": 248, "17786": 248, "17788": 248, "17790": 248, "17792": 248, "17794": 248, "17796": 248, "17798": 248, "17800": 248, "17802": 248, "17804": 248, "17806": 248, "17808": 248, "17810": 248, "17812": 248, "17814": 248, "17816": 248, "17818": 248, "17820": 248, "17822": 248, "17824": 248, "17826": 248, "17828": 248, "17830": 248, "17832": 248, "17834": 248, "17836": 248, "17838": 248, "17840": 248, "17842": 248, "17844": 248, "17846": 248, "17848": 248, "17850": 248, "17852": 248, "17854": 248, "17856": 248, "17858": 248, "17860": 248, "17862": 248, "17864": 248, "17866": 248, "17868": 248, "17870": 248, "17872": 248, "17874": 248, "17876": 248, "17878": 248, "17880": 248, "17882": 248, "17884": 248, "17886": 248, "17888": 248, "17890": 248, "17892": 248, "17894": 248, "17896": 248, "17898": 248, "17900": 248, "17902": 248, "17904": 248, "17906": 248, "17908": 248, "17910": 248, "17912": 248, "17914": 248, "17916": 248, "17918": 248, "17920": 248, "17922": 248, "17924": 248, "17926": 248, "17928": 248, "17930": 248, "17932": 248, "17934": 248, "17936": 248, "17938": 248, "17940": 248, "17942": 248, "17944": 248, "17946": 248, "17948": 248, "17950": 248, "17952": 248, "17954": 248, "17956": 248, "17958": 248, "17960": 248, "17962": 248, "17964": 248, "17966": 248, "17968": 248, "17970": 248, "17972": 248, "17974": 248, "17976": 248, "17978": 248, "17980": 248, "17982": 248, "17984": 248, "17986": 248, "17988": 248, "17990": 248, "17992": 248, "17994": 248, "17996": 248, "17998": 248, "18000": [248, 944], "18002": 248, "18004": 248, "18006": 248, "18008": 248, "18010": 248, "18012": 248, "18014": 248, "18016": 248, "18018": 248, "18020": 248, "18022": 248, "18024": 248, "18026": 248, "18028": 248, "18030": 248, "18032": 248, "18034": 248, "18036": 248, "18038": 248, "18040": 248, "18042": 248, "18044": 248, "18046": 248, "18048": 248, "18050": 248, "18052": 248, "18054": 248, "18056": 248, "18058": 248, "18060": 248, "18062": 248, "18064": 248, "18066": 248, "18068": 248, "18070": 248, "18072": 248, "18074": 248, "18076": 248, "18078": 248, "18080": 248, "18082": 248, "18084": 248, "18086": 248, "18088": 248, "18090": 248, "18092": 248, "18094": 248, "18096": 248, "18098": 248, "18100": 248, "18102": 248, "18104": 248, "18106": 248, "18108": 248, "18110": 248, "18112": 248, "18114": 248, "18116": 248, "18118": 248, "18120": 248, "18122": 248, "18124": 248, "18126": 248, "18128": 248, "18130": 248, "18132": 248, "18134": 248, "18136": 248, "18138": 248, "18140": 248, "18142": 248, "18144": 248, "18146": 248, "18148": 248, "18150": 248, "18152": 248, "18154": 248, "18156": 248, "18158": 248, "18160": 248, "18162": 248, "18164": 248, "18166": 248, "18168": 248, "18170": 248, "18172": 248, "18174": 248, "18176": 248, "18178": 248, "18180": 248, "18182": 248, "18184": 248, "18186": 248, "18188": 248, "18190": 248, "18192": 248, "18194": 248, "18196": 248, "18198": 248, "18200": 248, "18202": 248, "18204": 248, "18206": 248, "18208": 248, "18210": 248, "18212": 248, "18214": 248, "18216": 248, "18218": 248, "18220": 248, "18222": 248, "18224": 248, "18226": 248, "18228": 248, "18230": 248, "18232": 248, "18234": 248, "18236": 248, "18238": 248, "18240": 248, "18242": 248, "18244": 248, "18246": 248, "18248": 248, "18250": 248, "18252": 248, "18254": 248, "18256": 248, "18258": 248, "18260": 248, "18262": 248, "18264": 248, "18266": 248, "18268": 248, "18270": 248, "18272": 248, "18274": 248, "18276": 248, "18278": 248, "18280": 248, "18282": 248, "18284": 248, "18286": 248, "18288": 248, "18290": 248, "18292": 248, "18294": 248, "18296": 248, "18298": 248, "18300": 248, "18302": 248, "18304": 248, "18306": 248, "18308": 248, "18310": 248, "18312": 248, "18314": 248, "18316": 248, "18318": 248, "18320": 248, "18322": 248, "18324": 248, "18326": 248, "18328": 248, "18330": 248, "18332": 248, "18334": 248, "18336": 248, "18338": 248, "18340": 248, "18342": 248, "18344": 248, "18346": 248, "18348": 248, "18350": 248, "18352": 248, "18354": 248, "18356": 248, "18358": 248, "18360": 248, "18362": 248, "18364": 248, "18366": 248, "18368": 248, "18370": 248, "18372": 248, "18374": 248, "18376": 248, "18378": 248, "18380": 248, "18382": 248, "18384": [248, 1012], "18386": 248, "18388": 248, "18390": 248, "18392": 248, "18394": 248, "18396": 248, "18398": 248, "18400": 248, "18402": 248, "18404": 248, "18406": 248, "18408": 248, "18410": 248, "18412": 248, "18414": 248, "18416": 248, "18418": 248, "18420": 248, "18422": 248, "18424": 248, "18426": 248, "18428": 248, "18430": 248, "18432": 248, "18434": 248, "18436": 248, "18438": 248, "18440": 248, "18442": 248, "18444": 248, "18446": 248, "18448": 248, "18450": 248, "18452": 248, "18454": 248, "18456": 248, "18458": 248, "18460": 248, "18462": 248, "18464": 248, "18466": 248, "18468": 248, "18470": 248, "18472": 248, "18474": 248, "18476": 248, "18478": 248, "18480": 248, "18482": 248, "18484": 248, "18486": 248, "18488": 248, "18490": 248, "18492": 248, "18494": 248, "18496": 248, "18498": 248, "18500": 248, "18502": 248, "18504": 248, "18506": 248, "18508": 248, "18510": 248, "18512": 248, "18514": 248, "18516": 248, "18518": 248, "18520": 248, "18522": 248, "18524": 248, "18526": 248, "18528": 248, "18530": 248, "18532": 248, "18534": 248, "18536": 248, "18538": 248, "18540": 248, "18542": 248, "18544": 248, "18546": 248, "18548": 248, "18550": 248, "18552": 248, "18554": 248, "18556": 248, "18558": 248, "18560": 248, "18562": 248, "18564": 248, "18566": 248, "18568": 248, "18570": 248, "18572": 248, "18574": 248, "18576": 248, "18578": 248, "18580": 248, "18582": 248, "18584": 248, "18586": 248, "18588": 248, "18590": 248, "18592": 248, "18594": 248, "18596": 248, "18598": 248, "18600": 248, "18602": 248, "18604": 248, "18606": 248, "18608": 248, "18610": 248, "18612": 248, "18614": 248, "18616": 248, "18618": 248, "18620": 248, "18622": 248, "18624": 248, "18626": 248, "18628": 248, "18630": 248, "18632": 248, "18634": 248, "18636": 248, "18638": 248, "18640": 248, "18642": 248, "18644": 248, "18646": 248, "18648": 248, "18650": 248, "18652": 248, "18654": 248, "18656": 248, "18658": 248, "18660": 248, "18662": 248, "18664": 248, "18666": 248, "18668": 248, "18670": 248, "18672": 248, "18674": 248, "18676": 248, "18678": 248, "18680": 248, "18682": 248, "18684": 248, "18686": 248, "18688": 248, "18690": 248, "18692": 248, "18694": 248, "18696": 248, "18698": 248, "18700": 248, "18702": 248, "18704": 248, "18706": 248, "18708": 248, "18710": 248, "18712": 248, "18714": 248, "18716": 248, "18718": 248, "18720": 248, "18722": 248, "18724": 248, "18726": 248, "18728": 248, "18730": 248, "18732": 248, "18734": 248, "18736": 248, "18738": 248, "18740": 248, "18742": 248, "18744": 248, "18746": 248, "18748": 248, "18750": 248, "18752": 248, "18754": 248, "18756": 248, "18758": 248, "18760": 248, "18762": 248, "18764": 248, "18766": 248, "18768": 248, "18770": 248, "18772": 248, "18774": 248, "18776": 248, "18778": 248, "18780": 248, "18782": 248, "18784": 248, "18786": 248, "18788": 248, "18790": 248, "18792": 248, "18794": 248, "18796": 248, "18798": 248, "18800": 248, "18802": 248, "18804": 248, "18806": 248, "18808": 248, "18810": 248, "18812": 248, "18814": 248, "18816": 248, "18818": 248, "18820": 248, "18822": 248, "18824": 248, "18826": 248, "18828": 248, "18830": 248, "18832": 248, "18834": 248, "18836": 248, "18838": 248, "18840": 248, "18842": 248, "18844": 248, "18846": 248, "18848": 248, "18850": 248, "18852": 248, "18854": 248, "18856": 248, "18858": 248, "18860": 248, "18862": 248, "18864": 248, "18866": 248, "18868": 248, "18870": 248, "18872": 248, "18874": 248, "18876": 248, "18878": 248, "18880": 248, "18882": 248, "18884": 248, "18886": 248, "18888": 248, "18890": 248, "18892": 248, "18894": 248, "18896": 248, "18898": 248, "18900": 248, "18902": 248, "18904": 248, "18906": 248, "18908": 248, "18910": 248, "18912": 248, "18914": 248, "18916": 248, "18918": 248, "18920": 248, "18922": 248, "18924": 248, "18926": 248, "18928": 248, "18930": 248, "18932": 248, "18934": 248, "18936": 248, "18938": 248, "18940": 248, "18942": 248, "18944": 248, "18946": 248, "18948": 248, "18950": 248, "18952": 248, "18954": 248, "18956": 248, "18958": 248, "18960": 248, "18962": 248, "18964": 248, "18966": 248, "18968": 248, "18970": 248, "18972": 248, "18974": 248, "18976": 248, "18978": 248, "18980": 248, "18982": 248, "18984": 248, "18986": 248, "18988": 248, "18990": 248, "18992": 248, "18994": 248, "18996": 248, "18998": 248, "19000": 248, "19002": 248, "19004": 248, "19006": 248, "19008": 248, "19010": 248, "19012": 248, "19014": 248, "19016": 248, "19018": 248, "19020": 248, "19022": 248, "19024": 248, "19026": 248, "19028": 248, "19030": 248, "19032": 248, "19034": 248, "19036": 248, "19038": 248, "19040": 248, "19042": 248, "19044": 248, "19046": 248, "19048": 248, "19050": 248, "19052": 248, "19054": 248, "19056": 248, "19058": 248, "19060": 248, "19062": 248, "19064": 248, "19066": 248, "19068": 248, "19070": 248, "19072": 248, "19074": 248, "19076": 248, "19078": 248, "19080": 248, "19082": 248, "19084": 248, "19086": 248, "19088": 248, "19090": 248, "19092": 248, "19094": 248, "19096": 248, "19098": 248, "19100": 248, "19102": 248, "19104": 248, "19106": 248, "19108": 248, "19110": 248, "19112": 248, "19114": 248, "19116": 248, "19118": 248, "19120": 248, "19122": 248, "19124": 248, "19126": 248, "19128": 248, "19130": 248, "19132": 248, "19134": 248, "19136": 248, "19138": 248, "19140": 248, "19142": 248, "19144": 248, "19146": 248, "19148": 248, "19150": 248, "19152": 248, "19154": 248, "19156": 248, "19158": 248, "19160": 248, "19162": 248, "19164": 248, "19166": 248, "19168": 248, "19170": 248, "19172": 248, "19174": 248, "19176": 248, "19178": 248, "19180": 248, "19182": 248, "19184": 248, "19186": 248, "19188": 248, "19190": 248, "19192": 248, "19194": 248, "19196": 248, "19198": 248, "19200": 248, "19202": 248, "19204": 248, "19206": 248, "19208": 248, "19210": 248, "19212": 248, "19214": 248, "19216": 248, "19218": 248, "19220": 248, "19222": 248, "19224": 248, "19226": 248, "19228": 248, "19230": 248, "19232": 248, "19234": 248, "19236": 248, "19238": 248, "19240": 248, "19242": 248, "19244": 248, "19246": 248, "19248": 248, "19250": 248, "19252": 248, "19254": 248, "19256": 248, "19258": 248, "19260": 248, "19262": 248, "19264": 248, "19266": 248, "19268": 248, "19270": 248, "19272": 248, "19274": 248, "19276": 248, "19278": 248, "19280": 248, "19282": 248, "19284": 248, "19286": 248, "19288": 248, "19290": 248, "19292": 248, "19294": 248, "19296": 248, "19298": 248, "19300": 248, "19302": 248, "19304": 248, "19306": 248, "19308": 248, "19310": 248, "19312": 248, "19314": 248, "19316": 248, "19318": 248, "19320": 248, "19322": 248, "19324": 248, "19326": 248, "19328": 248, "19330": 248, "19332": 248, "19334": 248, "19336": 248, "19338": 248, "19340": 248, "19342": 248, "19344": 248, "19346": 248, "19348": 248, "19350": 248, "19352": 248, "19354": 248, "19356": 248, "19358": 248, "19360": 248, "19362": 248, "19364": 248, "19366": 248, "19368": 248, "19370": 248, "19372": 248, "19374": 248, "19376": 248, "19378": 248, "19380": 248, "19382": 248, "19384": 248, "19386": 248, "19388": 248, "19390": 248, "19392": 248, "19394": 248, "19396": 248, "19398": 248, "19400": 248, "19402": 248, "19404": 248, "19406": 248, "19408": 248, "19410": 248, "19412": 248, "19414": 248, "19416": 248, "19418": 248, "19420": 248, "19422": 248, "19424": 248, "19426": 248, "19428": 248, "19430": 248, "19432": 248, "19434": 248, "19436": 248, "19438": 248, "19440": 248, "19442": 248, "19444": 248, "19446": 248, "19448": 248, "19450": 248, "19452": 248, "19454": 248, "19456": 248, "19458": 248, "19460": 248, "19462": 248, "19464": 248, "19466": 248, "19468": 248, "19470": 248, "19472": 248, "19474": 248, "19476": 248, "19478": 248, "19480": 248, "19482": 248, "19484": 248, "19486": 248, "19488": 248, "19490": 248, "19492": 248, "19494": 248, "19496": 248, "19498": 248, "19500": 248, "19502": 248, "19504": 248, "19506": 248, "19508": 248, "19510": 248, "19512": 248, "19514": 248, "19516": 248, "19518": 248, "19520": 248, "19522": 248, "19524": 248, "19526": 248, "19528": 248, "19530": 248, "19532": 248, "19534": 248, "19536": 248, "19538": 248, "19540": 248, "19542": 248, "19544": 248, "19546": 248, "19548": 248, "19550": 248, "19552": 248, "19554": 248, "19556": 248, "19558": 248, "19560": 248, "19562": 248, "19564": 248, "19566": 248, "19568": 248, "19570": 248, "19572": 248, "19574": 248, "19576": 248, "19578": 248, "19580": 248, "19582": 248, "19584": 248, "19586": 248, "19588": 248, "19590": 248, "19592": 248, "19594": 248, "19596": 248, "19598": 248, "19600": 248, "19602": 248, "19604": 248, "19606": 248, "19608": 248, "19610": 248, "19612": 248, "19614": 248, "19616": 248, "19618": 248, "19620": 248, "19622": 248, "19624": 248, "19626": 248, "19628": 248, "19630": 248, "19632": 248, "19634": 248, "19636": 248, "19638": 248, "19640": 248, "19642": 248, "19644": 248, "19646": 248, "19648": 248, "19650": 248, "19652": 248, "19654": 248, "19656": 248, "19658": 248, "19660": 248, "19662": 248, "19664": 248, "19666": 248, "19668": 248, "19670": 248, "19672": 248, "19674": 248, "19676": 248, "19678": 248, "19680": 248, "19682": 248, "19684": 248, "19686": 248, "19688": 248, "19690": 248, "19692": 248, "19694": 248, "19696": 248, "19698": 248, "19700": 248, "19702": 248, "19704": 248, "19706": 248, "19708": 248, "19710": 248, "19712": 248, "19714": 248, "19716": 248, "19718": 248, "19720": 248, "19722": 248, "19724": 248, "19726": 248, "19728": 248, "19730": 248, "19732": 248, "19734": 248, "19736": 248, "19738": 248, "19740": 248, "19742": 248, "19744": 248, "19746": 248, "19748": 248, "19750": 248, "19752": 248, "19754": 248, "19756": 248, "19758": 248, "19760": 248, "19762": 248, "19764": 248, "19766": 248, "19768": 248, "19770": 248, "19772": 248, "19774": 248, "19776": 248, "19778": 248, "19780": 248, "19782": 248, "19784": 248, "19786": 248, "19788": 248, "19790": 248, "19792": 248, "19794": 248, "19796": 248, "19798": 248, "19800": 248, "19802": 248, "19804": 248, "19806": 248, "19808": 248, "19810": 248, "19812": 248, "19814": 248, "19816": 248, "19818": 248, "19820": 248, "19822": 248, "19824": 248, "19826": 248, "19828": 248, "19830": 248, "19832": 248, "19834": 248, "19836": 248, "19838": 248, "19840": 248, "19842": 248, "19844": 248, "19846": 248, "19848": 248, "19850": 248, "19852": 248, "19854": 248, "19856": 248, "19858": 248, "19860": 248, "19862": 248, "19864": 248, "19866": 248, "19868": 248, "19870": 248, "19872": 248, "19874": 248, "19876": 248, "19878": 248, "19880": 248, "19882": 248, "19884": 248, "19886": 248, "19888": 248, "19890": 248, "19892": 248, "19894": 248, "19896": 248, "19898": 248, "19900": 248, "19902": 248, "19904": 248, "19906": 248, "19908": 248, "19910": 248, "19912": 248, "19914": 248, "19916": 248, "19918": 248, "19920": 248, "19922": 248, "19924": 248, "19926": 248, "19928": 248, "19930": 248, "19932": 248, "19934": 248, "19936": 248, "19938": 248, "19940": 248, "19942": 248, "19944": 248, "19946": 248, "19948": 248, "19950": 248, "19952": 248, "19954": 248, "19956": 248, "19958": 248, "19960": 248, "19962": 248, "19964": 248, "19966": 248, "19968": 248, "19970": 248, "19972": 248, "19974": 248, "19976": 248, "19978": 248, "19980": 248, "19982": 248, "19984": 248, "19986": 248, "19988": 248, "19990": 248, "19992": 248, "19994": 248, "19996": 248, "19998": 248, "l_to_send": 248, "json_to_send": 248, "json_receiv": 248, "l_receiv": 248, "sine": [248, 289, 306], "140106668681968": 248, "wallclock_axi": 248, "1638538131": 248, "1975703": 248, "2978473": 248, "3981225": 248, "498449": 248, "5987027": 248, "698947": 248, "7996597": 248, "899947": 248, "1638538132": 248, "0001943": 248, "1010473": 248, "0b10110": 248, "0x16": [248, 828], "0b1011": [248, 283], "bit_3": 248, "0b00001": 248, "0b1": [248, 265, 335], "0b1000": [248, 265], "0b11110": 248, "bitwis": [248, 422, 455, 964, 968, 1055], "num1": [248, 265], "0b110101101": 248, "num2": [248, 265], "0b101110100": 248, "0b100100100": 248, "0b111111101": 248, "0b1010": 248, "0b10100": [248, 265], "1fuzzi2fuzzi3fuzzi4": 248, "0b11011001": 248, "abcdef": [248, 255, 261, 265], "cde": 248, "lexic": [248, 482, 789], "indexerror": [248, 265, 268, 286, 325, 347, 351, 370, 1035, 1088, 1158], "auer": 248, "aue": 248, "zerodivisionerror": [248, 261, 286, 1035], "lst1": 248, "lst2": 248, "toc": 249, "treeset": 249, "searchabl": [249, 252], "diesel": 249, "vibrat": 249, "lighter": 249, "sensorrandom": 249, "sensorsin": 249, "sensorconst": 249, "wild": [249, 251, 256, 291], "yesterai": 249, "deseri": [249, 261], "decod": [249, 261, 268, 271, 307, 313, 324, 327, 329, 335, 341, 1086, 1133], "swallow": [249, 869, 1035], "walkthrough": [249, 251, 256, 1205], "1h": 249, "exchangeformat": 249, "test_mqtt_format": 249, "parser": [249, 261, 315, 331, 381, 709, 1088, 1192], "mosquitto_sub": [249, 1153], "writer": [249, 797, 882], "deserializeerror": 249, "dangl": [249, 425, 596, 610], "fahrenheit": [251, 393, 395, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 496, 697, 735, 788, 790, 791], "nonconst": [251, 608], "getchar": [251, 399, 401, 406, 415], "dry": 251, "verif": [251, 1142], "umlaut": [251, 252, 355, 1067, 1150], "\u00f6": [251, 271, 1150], "canari": 251, "asid": [251, 433, 434, 446, 708, 997], "brainfuck": 251, "nok": [251, 745, 991], "singli": [251, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "typedef": [251, 449, 452, 456, 465, 469, 474, 475, 695, 697, 735, 743, 759, 788, 790, 791, 858, 1006], "commonplac": [251, 1195], "boundari": [251, 261, 307, 455, 769, 936], "neighborhood": 251, "signed": [251, 409, 458], "unsigned": 251, "excurs": [251, 499, 1136], "pointerarith": 251, "lower_bound": [251, 298, 337, 635, 640, 659, 663, 692, 791], "for_each": [251, 298, 640, 659, 663, 692, 743, 791], "search_by_lastnam": [251, 688, 689, 690], "const_iter": [251, 590, 634, 637, 638, 639, 641, 656, 695, 710, 743, 744], "calloper": [251, 573], "exc": [251, 573], "ostream": [251, 573, 599, 759, 789, 1177], "paint": [251, 678, 692, 791], "reverse_copi": [251, 298, 573, 640, 659, 663, 692, 791], "cin": [251, 642, 660, 662, 678, 692, 791], "accumul": [251, 573], "raci": [251, 573], "wsl2": [251, 278, 280, 298, 300, 377], "libsqlite3": [251, 483], "libboost": 251, "libgtk": 251, "prosaic": 251, "roman": 251, "mad": [251, 457], "wxwidget": 251, "whole": [252, 264, 265, 267, 270, 273, 282, 285, 324, 355, 479, 708, 717, 759, 813, 816, 838, 883, 965, 1034, 1106, 1193], "lieb": [252, 313, 329], "gr\u00fc\u00dfe": [252, 313, 329], "utf8": 252, "distil": [252, 312, 342, 350, 356, 1033, 1106], "4j": 253, "unlimitxdeadbeef": [253, 255, 261, 307, 313, 365, 554], "3735928559": [253, 255, 261, 265, 307, 313, 365], "0b10010011": 253, "ippi": 253, "0b0101": 253, "0101": 253, "teifl": [253, 341], "fun1": 253, "fun2": 253, "nsecond": [253, 1080], "rline": 253, "carriag": [253, 412, 1080], "linet": 253, "neuer": 253, "ordner": 253, "euer": 253, "syntaxwarn": [253, 286, 1035], "ipykernel_258993": 253, "837361033": 253, "regex_str": [253, 271], "calim": 253, "yaaai": 253, "needl": [253, 351, 1074, 1082], "haystack": [253, 351, 1074, 1082], "finit": [253, 302, 427, 927], "haystack_s": 253, "0x7fe78c576ee0": 253, "list_iter": [253, 271, 325, 335, 341, 351], "0x7fe78c577910": 253, "unicode_code_point": 253, "l_new": 253, "ijk": 253, "mengenlehr": 253, "s1": [253, 261, 265, 268, 271, 286, 293, 303, 313, 325, 335, 341, 351, 499, 516, 546, 605, 699, 705, 753, 775, 777, 779, 781, 1085], "s2": [253, 261, 265, 268, 271, 286, 293, 303, 313, 325, 335, 341, 351, 499, 516, 546, 605, 699, 705, 753, 775, 777, 779, 1085], "gunnar": 253, "liam": 253, "maximumum": 253, "variable2": 253, "maximum2": 253, "mrmr": 253, "einser": 253, "square_numb": [253, 1083], "squares_gener": 253, "other_d": [253, 286], "nove": 253, "isspac": [253, 255, 258, 261, 286, 307, 335, 341, 1082], "buchhaltung": [253, 898, 920, 921], "startswith": [253, 261, 290, 291, 293, 307, 347, 479, 1082, 1156], "buch": [253, 1187], "oooo": 253, "isupp": [253, 261, 271, 307, 341, 347, 351, 1082], "zz": 253, "traurig": 253, "substr": [253, 255, 261, 271, 286, 293, 307, 325, 329, 335, 341, 347, 351, 1177], "gid": [253, 261, 329, 347, 789, 865, 866, 873, 875, 883, 955, 970, 1115], "count_byt": 253, "nbyte": 253, "miscellanea": [254, 958], "brace": [254, 261, 307, 399, 422, 425, 437, 497, 590, 599, 631, 633, 638, 651, 652, 695, 735, 744, 788, 790, 791, 1064, 1067], "hour_of_dai": 254, "ein_str": 255, "ein_anderer_str": 255, "fghjgfgh": 255, "dfghgfgh": 255, "do_someth": [255, 274, 365, 428, 430, 438, 453, 467, 752, 1064], "komplett": [255, 341], "returnwert": [255, 1187], "sinnloser": 255, "weis": [255, 1208], "vorgenommen": 255, "obacht": 255, "140672599989840": 255, "140672464974720": 255, "hoechst": [255, 293], "rechnern": 255, "100000": [255, 271, 708, 943, 1142], "": [255, 271], "exponenti": [255, 1067, 1081], "__annotations__": [255, 265, 286, 307, 321, 1036], "__closure__": [255, 265, 286, 307], "__code__": [255, 265, 286, 307], "__delattr__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__dir__": [255, 258, 265, 283, 286, 307, 325, 347], "__format__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__ge__": [255, 258, 261, 265, 283, 286, 307, 325, 347, 1055], "__get__": [255, 265, 286, 307], "__getattribute__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__globals__": [255, 265, 286, 307], "__gt__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__hash__": [255, 258, 261, 265, 283, 286, 307, 325, 335, 347], "__init_subclass__": [255, 258, 265, 283, 286, 307, 325, 347], "__kwdefaults__": [255, 265, 286, 307], "__ne__": [255, 258, 261, 265, 283, 286, 307, 325, 347, 1055], "__new__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__qualname__": [255, 265, 286, 307], "__reduce__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__reduce_ex__": [255, 258, 265, 283, 286, 307, 325, 347], "__setattr__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__sizeof__": [255, 258, 261, 265, 283, 286, 307, 325, 347], "__subclasshook__": [255, 258, 265, 283, 286, 307, 325, 347], "karteikart": 255, "my_formatted_person": 255, "123425041997": 255, "caros_str": 255, "joergs_str": 255, "0x7ff0dc48b490": 255, "next_po": 255, "tim": [255, 265, 361, 362], "ugli": [255, 265, 279, 288, 289, 302, 309, 310, 353, 354, 394, 399, 573, 791, 863, 868, 893, 894, 934, 1033, 1034], "flat": [255, 265, 446, 472, 473, 1005, 1006], "puriti": [255, 265], "silenc": [255, 265, 438, 881], "ambigu": [255, 265, 425, 460, 461, 462, 609, 709, 898], "refus": [255, 265, 274, 489, 811, 864, 935, 951, 1010], "temptat": [255, 265], "dutch": [255, 265], "honk": [255, 265], "wahr": 255, "falsch": [255, 268, 1194], "kriegt": 255, "nachkommastellen": 255, "moeglichkeit": 255, "f_str": 255, "punkt_po": 255, "nachkomma_str": 255, "praezedenz": 255, "wandel": 255, "vorn": 255, "anhaengen": 255, "wuenschen": 255, "wuerd": 255, "appendleft": 255, "extendleft": 255, "relem": 255, "popleft": 255, "sorted_l": 255, "sorted_t": 255, "sorted_": 255, "subtext": 255, "ssissippi": 255, "140672464726576": 255, "copied_text": 255, "140672464784832": 255, "140672464784064": 255, "140672599989872": 255, "140672464751872": 255, "140672464768512": 255, "140672464594880": 255, "jkl": 255, "suesser": [255, 261, 268, 271, 274, 290], "sechser_gewuerfelt": 255, "n_tri": [255, 258, 293, 335, 341, 347, 351, 1071], "versag": [255, 293], "eva": [255, 307, 351, 1074], "xrang": [255, 1075], "0x7ff0dc48bed0": 255, "hann": 255, "gruess": 255, "gott": [255, 286, 388], "fill_in_us": 255, "scho": 255, "my_db": 255, "uniq_dict": 255, "konfigurierbaren": 255, "startwert": 255, "ausgibt": 255, "sqnum": 255, "0x7ff014b01820": 255, "xslx": 255, "yz": 255, "lret": 255, "ochwa": 255, "unbalanc": 256, "geospati": 256, "gdal": 256, "sweigart": [256, 270, 312, 1137], "datenypen": 257, "libarari": 257, "chainmap": 257, "dequ": [257, 767], "suchalgorithmen": 257, "51139385": 258, "77397a312b47": 258, "50924272": [258, 261], "20210728": [258, 261, 1062], "eine_komplizierte_funkt": 258, "endeffekt": 258, "zusammenzuzaehlen": 258, "tarnt": 258, "vergeblich": 258, "komplexitaet": 258, "zahl_als_str": 258, "bledsinn": 258, "try_no": 258, "blahblahblah": 258, "cxyxyyyyxi": 258, "table_str": 258, "table_dict": 258, "139769175732912": 258, "139769175738624": 258, "satan_str": 258, "satan_int": 258, "result_of_print": 258, "result_of_evald_print": 258, "code_str": [258, 268], "compiled_cod": 258, "woswasi": [258, 265], "0x7f1e91eb42f0": 258, "philipp": [258, 265, 268, 286, 293, 307, 325, 335, 497, 572, 644, 656, 688, 690, 1126, 1128, 1132, 1134, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "lastnma": 258, "0x7f1e8c0fe2e0": 258, "__abs__": [258, 265, 283, 347], "__and__": [258, 265, 325, 347, 1055], "__bool__": [258, 265, 283, 347], "__ceil__": [258, 265, 283, 347], "__divmod__": [258, 265, 283, 347], "__float__": [258, 265, 283, 307, 347], "__floor__": [258, 265, 283, 347], "__floordiv__": [258, 265, 283, 347, 1055], "__getnewargs__": [258, 261, 265, 283, 307, 347], "__index__": [258, 265, 347], "__int__": [258, 265, 283, 307, 324, 347], "__invert__": [258, 265, 347], "__lshift__": [258, 265, 347, 1055], "__mod__": [258, 261, 265, 283, 307, 347, 1055], "__mul__": [258, 261, 265, 283, 307, 347, 1055], "__neg__": [258, 265, 283, 347], "__or__": [258, 265, 325, 347, 1055], "__pos__": [258, 265, 283, 347], "__pow__": [258, 265, 283, 347, 1055], "__rand__": [258, 265, 325, 347], "__rdivmod__": [258, 265, 283, 347], "__rfloordiv__": [258, 265, 283, 347], "__rlshift__": [258, 265, 347], "__rmod__": [258, 261, 265, 283, 307, 347], "__rmul__": [258, 261, 265, 283, 307, 347], "__ror__": [258, 265, 325, 347], "__round__": [258, 265, 283, 347], "__rpow__": [258, 265, 283, 347], "__rrshift__": [258, 265, 347, 1055], "__rshift__": [258, 265, 347, 1055], "__rsub__": [258, 265, 283, 325, 329, 347, 1055], "__rtruediv__": [258, 265, 283, 347], "__rxor__": [258, 265, 325, 347], "__sub__": [258, 265, 283, 325, 329, 347, 1055], "__truediv__": [258, 265, 283, 347, 1055], "__trunc__": [258, 265, 283, 347], "__xor__": [258, 265, 325, 347, 1055], "as_integer_ratio": [258, 265, 283, 347], "bit_length": [258, 265, 347], "conjug": [258, 265, 283, 347], "denomin": [258, 265, 347], "from_byt": [258, 265, 347], "to_byt": [258, 265, 347], "0x7f1e8c0b3130": 258, "int_list": 258, "0x7f1e8c0fe340": 258, "0x7f1e8c0fe760": 258, "u1": 258, "u2": 258, "type_of_us": 258, "scrambl": 258, "hansj\u00f6rg": [258, 479], "gr\u00f6jsnah": 258, "class_str": 258, "1997": [258, 268, 1061, 1126, 1128, 1132, 1134], "0x7f1e8c1c2e50": 258, "joleckmi": 258, "cmdline": 259, "excess": [259, 428], "provocantli": 259, "pybai": [259, 328, 1137], "suchzeit": 260, "everywher": [260, 275, 458, 473, 489, 699, 850, 988, 1074], "d_as_str": 261, "received_d": 261, "1939": 261, "145415": 261, "bytes_or_buff": [261, 307], "expos": [261, 307, 587, 673, 869, 935, 943, 944, 978], "strict": [261, 281, 307, 325, 494, 508, 515, 529, 543, 595, 791, 1085, 1166], "__contains__": [261, 307, 325], "format_spec": [261, 286, 307], "getattr": [261, 265, 286, 307, 1049], "__getitem__": [261, 307, 1158, 1159], "__iter__": [261, 307, 325, 1040], "__len__": [261, 307, 325], "casefold": [261, 307], "caseless": [261, 307], "fillchar": [261, 307], "pad": [261, 307, 1081], "occurr": [261, 307, 402], "codec": [261, 268, 271, 307, 313, 329, 335, 341, 1150], "unicodeencodeerror": [261, 268, 271, 286, 307, 313, 329, 1035, 1150], "xmlcharrefreplac": [261, 307], "register_error": [261, 307], "suffix": [261, 307], "expandtab": [261, 286, 307, 335], "tabsiz": [261, 307], "lowest": [261, 307, 422, 428, 998, 999, 1086], "format_map": [261, 307], "isalnum": [261, 307, 347, 1082], "alphabet": [261, 307, 402, 457, 479, 882, 1150], "isascii": [261, 307], "007f": [261, 307], "isdecim": [261, 307], "iskeyword": [261, 271, 307], "isnumer": [261, 307], "isprint": [261, 307, 402, 430], "printabl": [261, 307, 402, 1035], "istitl": [261, 307], "uncas": [261, 307], "pq": [261, 307], "ljust": [261, 307], "removeprefix": [261, 307], "removesuffix": [261, 307], "rindex": [261, 307, 1082], "rpartit": [261, 307], "discard": [261, 307, 325, 461, 607, 608, 745, 880, 881], "splitlin": [261, 307], "keepend": [261, 307], "swapcas": [261, 307], "titlecas": [261, 307], "lookuperror": [261, 286, 307, 1035], "untouch": [261, 307, 838], "zfill": [261, 307], "maketran": [261, 307], "numerischen": 261, "ecma": 261, "3rd": [261, 797], "interchang": [261, 677, 759, 1150], "marshal": 261, "pickl": [261, 265], "simplejson": 261, "foo": [261, 293, 303, 307, 325, 329, 335, 341, 347, 351, 567, 708, 741, 759, 771, 1035, 1076], "baz": 261, "u1234": 261, "sort_kei": 261, "getvalu": 261, "compact": [261, 428], "mydict": 261, "obj": [261, 286, 329, 341, 535, 806, 807, 816, 1049, 1057, 1158, 1159], "x08ar": 261, "as_complex": 261, "dct": 261, "__complex__": 261, "object_hook": 261, "2j": 261, "parse_float": 261, "encode_complex": 261, "serializ": 261, "1j": 261, "jsonencod": 261, "iterencod": 261, "scanner": 261, "jsondecodeerror": 261, "jsondecod": 261, "msg": [261, 274, 335, 347, 413, 498, 502, 1002, 1004, 1005, 1009, 1031, 1034, 1035], "unformat": 261, "lineno": [261, 268, 335], "colno": 261, "delattr": [261, 265, 286], "setattr": [261, 265, 286, 1049], "__setstate__": [261, 265], "with_traceback": [261, 265], "tb": [261, 265, 341], "__traceback__": [261, 265], "__cause__": [261, 265], "__context__": [261, 265], "__suppress_context__": [261, 265], "parse_int": 261, "parse_const": 261, "object_pairs_hook": 261, "nan": [261, 293, 1142, 1154], "num_str": 261, "_w": 261, "0x7f99fff1bb70": 261, "raw_decod": 261, "extran": 261, "skipkei": 261, "ensure_ascii": 261, "check_circular": 261, "allow_nan": 261, "recogn": [261, 623, 944, 1193], "sensibl": 261, "circular": 261, "recursionerror": [261, 286, 1035], "compliant": [261, 1048], "item_separ": 261, "key_separ": 261, "_one_shot": 261, "chunk": [261, 370, 458, 832, 970, 1139, 1150], "bigobject": 261, "mysocket": 261, "fp": 261, "inf": 261, "complianc": 261, "ippolito": 261, "redivi": 261, "140299267714496": 261, "140299267930496": 261, "schweissparameter_aussi": 261, "strom_ma": 261, "200004": 261, "spannung_v": 261, "aufs_kabel": 261, "maschine_112": 261, "kabel": [261, 265], "vom_kabel": 261, "schweissparameter_eini": 261, "strom_a": 261, "hal": 261, "2c445fb3": 261, "6ca4": 261, "b9d9": 261, "7cfbbff55326": 261, "doesnt_exist": 261, "_a666": 261, "140299402960464": 261, "0b10000000000000000000000000000000000000000000000000000000000000000": [261, 265, 286, 303, 341, 347, 351], "140299327492352": 261, "func_fals": 261, "func_tru": 261, "sex_opt": 261, "140298898107648": 261, "t_mit_einem_el": 261, "supi": 261, "squares_map": 261, "squares_set": 261, "numtri": 261, "even_numb": [261, 325], "mississppi": 261, "xxxx": 261, "nbin": [261, 268, 293, 307, 329], "ndaemon": [261, 268, 293, 307, 329], "nadm": [261, 268, 293, 307, 329, 341, 347], "nlp": [261, 268, 293, 307, 329, 341, 347], "nsync": [261, 268, 293, 307, 329, 341, 347], "nshutdown": [261, 268, 293, 307, 329, 341, 347], "nhalt": [261, 268, 293, 307, 329, 341, 347], "nmail": [261, 268, 293, 307, 329, 341, 347], "noper": [261, 268, 293, 307, 329, 341, 347], "ngame": [261, 268, 293, 307, 329, 341, 347], "nftp": [261, 268, 293, 307, 329, 341, 347], "nnobodi": [261, 268, 293, 307, 329, 341, 347], "napach": [261, 268, 293, 307, 329, 341, 347], "nsystemd": [261, 268, 293, 307, 329, 341, 347], "ntss": [261, 268, 293, 307, 329, 341, 347], "ndbu": [261, 268, 293, 307, 329, 341, 347], "npolkitd": [261, 268, 293, 307, 329, 341, 347], "navahi": [261, 268, 293, 307, 329, 341, 347], "nunbound": [261, 268, 293, 307, 329, 341, 347], "ndnsmasq": [261, 268, 293, 307, 329, 341, 347], "nnm": [261, 268, 293, 307, 329, 341, 347], "nusbmuxd": [261, 268, 293, 307, 329, 341, 347], "ngluster": [261, 268, 293, 307, 329, 341, 347], "nrtkit": [261, 268, 293, 307, 329, 341, 347], "npipewir": [261, 268, 293, 307, 329, 341, 347], "ngeoclu": [261, 268, 293, 307, 329, 341, 347], "nchroni": [261, 268, 293, 307, 329, 341, 347], "nsaslauth": [261, 268, 293, 307, 329, 341, 347], "nradvd": [261, 268], "nrpc": [261, 268, 293, 307, 329, 341, 347], "nqemu": [261, 268, 293, 307, 329, 341, 347], "nopenvpn": [261, 268, 293, 307, 329, 341, 347], "ncolord": [261, 268, 293, 307, 329, 341, 347, 960], "nrpcuser": [261, 268, 293, 307, 329, 341, 347], "nabrt": [261, 268, 293, 307, 329, 341, 347], "nflatpak": [261, 268, 293, 307, 329, 341, 347], "ngdm": [261, 268, 293, 307, 329, 341, 347], "ngnome": [261, 268, 293, 307, 329, 341, 347], "nvboxadd": [261, 268, 293, 307, 329, 341, 347], "nsshd": [261, 268, 293, 307, 329, 341, 347], "ntcpdump": [261, 268, 293, 307, 329, 341, 347], "njfasch": [261, 268, 293, 307, 329, 341, 347], "nmosquitto": [261, 268, 293, 307, 329, 341], "nsomeon": [261, 268], "1001": [261, 268, 271, 652, 653, 654, 655, 883, 895, 926, 955], "move_to_end": 261, "thermometera": 261, "thermometerb": 261, "get_average_temperatur": 261, "th_list": 261, "ipykernel_9164": 261, "859664274": 261, "2942790015": 261, "0x7fac83797be0": 261, "basisklass": 261, "level2_1": 261, "l21": 261, "level2_2": 261, "level3": 261, "jedi": 261, "blueey": 261, "droid": 261, "r2d2": 261, "derivednoctor": 261, "dnoctor": 261, "derivedctorcallingsup": 261, "derivedctorcallingbasector": 261, "__firstnam": 261, "__lastnam": 261, "_user__firstnam": 261, "_user__lastnam": 261, "lightsab": 261, "padawan": 261, "arithmeticerror": [261, 286, 1035], "waaah": 261, "abgebrannt": 261, "puh": 261, "intakt": 261, "is_even": [261, 265, 335, 341, 712, 713, 714, 715], "0x7fac81f52df0": 261, "0x7fac81cb5700": 261, "progamm": 261, "tumpfback": 261, "och": 261, "umpfback": 261, "rt": [261, 791, 815, 819, 829, 840, 842, 847, 850, 853, 856, 859, 934], "wholefil": 261, "notepad": 262, "betreiben": [262, 1194, 1201, 1202], "unterschiedlichen": 262, "sinnvol": 262, "umgebungen": 262, "unausweichlich": 262, "installationsverzeichni": 262, "verzeichniss": [262, 1196], "ausf\u00fchren": 262, "hernimmt": 262, "wei\u00df": 262, "rennt": 262, "ordereddict": 263, "__mro__": 263, "udemi": 263, "successor": [264, 422], "repeatedli": [264, 652, 1149], "kantenlaeng": 265, "ipykernel_101004": 265, "2437887948": 265, "0x10": [265, 268, 351, 486], "0b1111111111111111111111111111111111111111111111111111111111111111": [265, 286, 303, 307, 335, 341, 347, 351], "1267650600228229401496703205381": 265, "735611673": 265, "ndigit": [265, 286, 335, 351, 401], "0b101": 265, "0b100": [265, 268], "register_statu": 265, "0b1001000": 265, "0b00001000": 265, "strom": [265, 335], "liegt_strom_an": 265, "0b00111110": 265, "ever": [265, 325, 477, 486, 517, 877, 943, 1066, 1190], "deadbeef": [265, 554, 937], "gross": 265, "doktor": 265, "jawui": 265, "akademik": 265, "ndef": [265, 335], "tdef": [265, 286], "geh": 265, "hochkomplex": [265, 341], "verendet": 265, "euler": 265, "sche": 265, "dokumentiern": 265, "koennt": 265, "varianc": 265, "fmean": 265, "geometric_mean": 265, "harmonic_mean": 265, "harmon": 265, "median": 265, "median_low": 265, "median_high": 265, "median_group": 265, "50th": 265, "percentil": 265, "multimod": 265, "quantil": 265, "centr": 265, "nearest": [265, 520, 1144], "doctest": 265, "ellipsi": [265, 286], "8333333333": 265, "8333": 265, "spread": 265, "pvarianc": 265, "pstdev": 265, "stdev": [265, 998, 1000], "38961843444": 265, "recalcul": 265, "statisticserror": 265, "normaldist": 265, "x1": 265, "unchang": [265, 696, 1029], "jointli": 265, "rescal": 265, "cdf": 265, "cumul": [265, 471], "inv_cdf": 265, "coeffici": 265, "ovl": 265, "agreement": 265, "densiti": 265, "8035050657330205": 265, "dx": 265, "quartil": 265, "decil": 265, "zscore": 265, "score": 265, "from_sampl": 265, "readonli": 265, "dataset": [265, 1140, 1142, 1155, 1157, 1159, 1161], "subcontrari": 265, "reciproc": 265, "quantiti": [265, 297, 1144], "earn": 265, "5625": 265, "midpoint": 265, "estim": 265, "nomin": 265, "taught": [265, 1059, 1195], "aabbbbbbbbcc": 265, "aabbbbccddddeeffffgg": 265, "986893273527251": 265, "0th": 265, "100th": 265, "xbar": 265, "0810874155219827": 265, "3720238095238095": 265, "01875": 265, "gesamter_gruss": 265, "excelsheet": 265, "hinters": 265, "gabali": 265, "helen": 265, "fischer": 265, "sssklndkfgv": 265, "fosvh": 265, "worl": [265, 268, 1073], "lowr": 265, "dlrow": [265, 1073], "olleh": [265, 1073], "even_numbers_fun": 265, "even_numbers_gen": 265, "evennum": 265, "even_filt": 265, "tausend": 265, "1234250497": [265, 268, 271, 274, 497, 504, 656], "1234250597": 265, "users_json_str": 265, "liest": 265, "kontrah": 265, "verwandelt": 265, "gelesenes_ding_wieder_als_dict": 265, "schatz": 265, "erich": 265, "koxi": 265, "hatkeinenwert": 265, "fn": [265, 462, 479, 789, 1161], "ul": [265, 416], "ln": [265, 462], "1st": [266, 1179], "einschub": 266, "filterketten": 266, "datensatz": 266, "letzten": 266, "recapitul": 267, "naeherungsverfahren": 268, "addieren": 268, "140606563548752": 268, "wirklich": [268, 1185], "0o10": 268, "teilbar": 268, "00001": 268, "abd": [268, 622], "i1": [268, 303], "140606428182128": 268, "140606428182896": 268, "2345010101": 268, "elizabeth": [268, 1126, 1128, 1132, 1134, 1145], "1901": 268, "evi": 268, "maxim": [268, 477, 944], "wuerfeln": [268, 352], "freuen": 268, "sechser": 268, "faellt": 268, "jammern": 268, "versuch_numm": 268, "versuchen": 268, "jammert": 268, "hlo": [268, 1073], "output_list": [268, 1119], "nullt": 268, "34567654567": 268, "gsd": 268, "another_t": 268, "symmetisch": 268, "netzwerkkommunik": 268, "request_to_send": 268, "request_str_to_send": 268, "1651046407": 268, "3633313": 268, "cabl": [268, 869], "request_str_from_c": 268, "request_from_c": 268, "1651046335": 268, "8477345": 268, "139909434561408": 268, "139909544402512": 268, "139909544402544": 268, "139909543772528": 268, "139909433666288": 268, "roo": [268, 307, 929], "xf6": [268, 271, 313, 1067, 1150], "joerg_latin": 268, "xf6rg": [268, 271, 313, 325, 329, 1150], "j\u0456rg": [268, 271, 313, 329, 1150], "cyclic": 270, "140616191009600": 271, "140616191012720": 271, "140116274372176": 271, "0x7f6f5cc2de50": 271, "0x7f6f5cc2df30": 271, "18446744073709551617": 271, "multi_dict": 271, "ipykernel_189565": 271, "1743780635": 271, "140115753096128": 271, "ntri": 271, "bytes_joerg": 271, "bytes_joerg_iso_latin_1": 271, "bytes_joerg_utf_32": 271, "xff": [271, 313, 329], "xfe": [271, 313, 329], "x00": [271, 313, 329, 942], "x00j": [271, 313], "x00r": [271, 313], "x00g": [271, 313], "bytes_joerg_utf_16": 271, "xfej": 271, "bytes_joerg_utf_8": 271, "xc3": [271, 307, 313, 329, 1067, 1150], "xb6rg": [271, 307, 313, 329, 1150], "iso_latin_1": 271, "russian": 271, "bytes_received_by_russian": 271, "2435": 271, "010d": 271, "0000000666": 271, "ssi": 271, "garbag": [271, 472, 479, 495, 754, 766, 944, 971, 1033], "ipykernel_4000": 271, "3227798639": 271, "ahja": 271, "24000": 271, "24500": 271, "25000": 271, "25500": 271, "26000": 271, "26500": 271, "__del__": 271, "whe": 271, "13397": 271, "116985": 271, "120725": 271, "118110": 271, "0x7fe3a392aa30": 271, "test_person_bas": 273, "pluggi": [273, 291, 1125, 1170], "rootdir": [273, 291, 838, 1125, 1170], "test_persondb_bas": 273, "test_pytest_demo": 273, "xfail": [273, 1170], "test_persondb": 273, "test_duplicate_svnr": 273, "test_update_sunnycas": 273, "test_update_notexist": 273, "test_update_exact_dupl": 273, "former": [273, 1076], "persondb": 273, "sqlite": [273, 483, 1093, 1146], "ics_demand": 273, "maco": [273, 370, 375], "woe": 273, "homebrew": 273, "brew": 273, "flaviocop": 273, "str_mit_666": 274, "140240419976192": 274, "140240419593568": 274, "aclass": 274, "almostempti": 274, "beenther": 274, "kuckucksei": 274, "chirp": 274, "some_bullshit": 274, "bad_thing_happen": 274, "do_some_bullshit": 274, "boah": [274, 335], "python_cod": 274, "a_global_vari": 274, "globale_vari": 274, "140240513015376": 274, "140240513014256": 274, "140240419270768": 274, "140240419271792": 274, "storesanintegerandmodifiesit": 274, "the_int": 274, "my_int": 274, "saiami": 274, "storesalistandmodifiesit": 274, "the_list": 274, "append_someth": 274, "salami": 274, "compute_squar": 274, "satanicerror": 274, "jess": 274, "invalidsvnr": 274, "rex_lin": 274, "json_str": [274, 1133], "python_l": 274, "0x7f8c0551f490": 274, "behandlung": 276, "kurzer": 276, "reicht": [276, 1185], "unwichtig": 276, "weggelassen": 276, "\u00fc": [276, 1150], "jeden": 276, "teilnehmer\u00fcbung": 276, "kernsprach": 276, "rvalu": [276, 298, 338, 598, 703, 735, 745, 751, 754, 755, 756, 757, 760, 768, 788, 790, 791, 1189, 1190, 1191], "constexpr": [276, 277, 278, 298, 300, 338, 735, 745, 769, 789, 790, 791, 1190], "uniform": [276, 277, 278, 280, 337, 477, 497, 599, 631, 651, 652, 695, 735, 744, 788, 790, 791, 1048, 1190], "initialisierung": [276, 1206], "infer": 276, "speichermodel": 276, "atomar": [276, 1188, 1206], "standardbibliothek": 276, "regu\u00e4r": 276, "trait": 276, "zufallszahlen": 276, "zeitbibliothek": 276, "sprachsyntax": 276, "deduct": [276, 710, 712], "erweiterungen": 276, "ge\u00e4ndert": 276, "definitionen": 276, "bibliothek": 276, "zusatzvari": 276, "constinit": 276, "modularisierung": [276, 371, 1187], "versionierung": 276, "routinen": 276, "synchronisierung": 276, "werkzeug": [276, 1187, 1194, 1196, 1201, 1204], "kalend": [276, 1184], "zeitzonen": 276, "zus\u00e4tz": 276, "chrono": [276, 277, 278, 280, 289, 337, 502, 695, 756, 767, 768, 772, 790, 791], "initializer_list": [277, 278, 280, 337, 338, 498, 499, 526, 527, 695, 697, 735, 790, 791], "handwrit": [277, 278, 280, 337, 735, 751, 790, 791], "weak_ptr": [277, 278, 280, 337, 338, 751, 788, 790, 791], "boilerpl": [277, 278, 280, 316, 332, 337, 338, 484, 735, 736, 737, 755, 790, 791, 1014, 1186], "condition_vari": [277, 278, 280, 289, 337, 768, 790, 791, 1190], "emplace_back": [277, 278, 631], "cref": [277, 278], "interoper": [278, 280, 298, 300], "wazoo": [278, 280, 298, 300], "anviron": [278, 280], "submodul": [278, 280, 552, 615], "chdir": [278, 280, 341], "gtest_main": [278, 502, 551, 553, 554, 574, 577, 589, 615, 753, 754, 1176, 1181], "dummy_suit": 278, "sticki": [279, 288, 289, 309, 310, 353, 354, 370, 375, 791, 868, 893, 934], "insod": 280, "lvalu": [280, 337, 338, 703, 704, 707, 735, 745, 751, 755, 760, 768, 788, 790, 791], "afterword": [280, 337, 338, 704, 735, 790, 791], "ain": [280, 477, 1063], "singleton": [281, 341, 494, 495, 501, 515, 529, 543, 595, 791, 1193], "inflex": [281, 397, 494, 508, 515, 521, 522, 529, 543, 595, 791], "proxi": [281, 299, 301, 302, 323, 327, 376, 494, 501, 503, 504, 515, 529, 543, 595, 791, 1165, 1193], "serverthread": [281, 519, 533], "my_si": [283, 1043], "function_returns_two_valu": 283, "140134238766608": 283, "sizeof": [283, 401, 411, 422, 443, 450, 451, 455, 458, 578, 590, 602, 630, 696, 758, 938, 956, 960, 961, 962, 968, 969, 970, 971, 996, 1002, 1005, 1009, 1075], "__getformat__": 283, "__setformat__": 283, "fromhex": 283, "0b0010": 283, "0b1001": 283, "key_list": 283, "key_tupl": 283, "evil_list": 283, "evil_list_2": 283, "neinem": 283, "nviel": 283, "doze_path": [283, 286], "compiled_regex": 283, "l_json": 283, "l_json_sent": 283, "received_data": 283, "0x7f73869f06c0": 283, "create_avg_item": 283, "ninetynin": 283, "koppel": 285, "netzwerk": [285, 371, 1194, 1204, 1207], "condens": [285, 340, 478], "nprint": 286, "noption": 286, "nfile": 286, "nsep": 286, "nend": 286, "nflush": 286, "forcibli": 286, "didact": [286, 388, 391, 614, 616, 617, 1193], "fullnam": [286, 293, 1052, 1056], "nerst": 286, "nzweit": [286, 341, 365], "andere_list": 286, "neue_list": 286, "140323934455312": 286, "140323934455344": 286, "140323934455376": 286, "140323852147712": 286, "140323933649904": 286, "140323833601584": 286, "frozenset": [286, 303, 324], "__builtins__": [286, 307, 341, 1036], "gr\u00fc\u00df": 286, "nocheinprogramm": 286, "ocheinprogramm": 286, "dfghgfdfghj": 286, "jhghgh": 286, "matchstr": 286, "compiled_match": 286, "tprint": 286, "num_ss": 286, "isi": [286, 351, 556, 572, 1154], "strippeditem": 286, "yet_another_d": 286, "s3": [286, 293, 516], "s4": 286, "isdisjoint": [286, 293, 325, 1085], "nnoteworthi": 286, "nil": 286, "__package__": [286, 363, 1036], "__loader__": [286, 363, 1036], "__spec__": [286, 363, 1036], "modulespec": 286, "loader": [286, 467, 485, 490, 1012, 1029, 1204], "__build_class__": 286, "__import__": 286, "dont_inherit": 286, "_feature_vers": 286, "divmod": 286, "raw_input": 286, "ipkernel": 286, "ipythonkernel": 286, "0x7f9fb16abcd0": 286, "class_or_tupl": 286, "aiter": 286, "async_iter": 286, "anext": 286, "oct": [286, 920, 942, 944], "pow": [286, 607, 608, 758], "exp": [286, 531], "notimpl": [286, 325, 329, 347, 1055], "memoryview": 286, "__debug__": 286, "stopasynciter": [286, 1035], "generatorexit": [286, 1035], "keyboardinterrupt": [286, 302, 1035], "importerror": [286, 1035], "environmenterror": [286, 1165], "ioerror": [286, 1171], "eoferror": [286, 1035], "notimplementederror": [286, 1035], "unboundlocalerror": [286, 1035], "indentationerror": [286, 1035], "taberror": [286, 1035], "unicodeerror": [286, 1035], "unicodedecodeerror": [286, 329, 335, 341, 1035], "unicodetranslateerror": [286, 1035], "floatingpointerror": [286, 1035], "overflowerror": [286, 1035], "systemerror": [286, 1035], "referenceerror": [286, 1035], "memoryerror": [286, 1035], "buffererror": [286, 1035], "userwarn": [286, 1035], "encodingwarn": [286, 1035], "deprecationwarn": [286, 1035], "pendingdeprecationwarn": [286, 1035], "runtimewarn": [286, 1035], "futurewarn": [286, 1035, 1154], "importwarn": [286, 1035], "unicodewarn": [286, 1035], "byteswarn": [286, 1035], "resourcewarn": [286, 1035], "connectionerror": [286, 1035], "blockingioerror": [286, 1035], "brokenpipeerror": [286, 1035], "childprocesserror": [286, 1035], "connectionabortederror": [286, 1035], "connectionrefusederror": [286, 1035], "connectionreseterror": [286, 1035], "fileexistserror": [286, 1035], "isadirectoryerror": [286, 1035], "notadirectoryerror": [286, 1035], "interruptederror": [286, 1035], "processlookuperror": [286, 1035], "timeouterror": [286, 1035], "closefd": 286, "beopen": 286, "1995": [286, 505, 1126, 1128, 1132, 1134], "nation": [286, 942], "1991": [286, 1061], "sticht": 286, "centrum": 286, "amsterdam": [286, 1061], "credit": [286, 809, 1062], "cwi": 286, "cnri": 286, "zope": 286, "cast": [286, 422, 578, 666, 673, 797], "execfil": 286, "_pydev_imp": 286, "_pydev_execfil": 286, "glob": [286, 454, 926, 983, 1031, 1046, 1177], "runfil": 286, "_pydev_bundl": 286, "pydev_umd": 286, "wdir": 286, "__ipython__": 286, "exclud": [286, 473, 600], "transient": 286, "display_id": 286, "get_ipython": 286, "interactiveshel": 286, "zmqshell": 286, "zmqinteractiveshel": 286, "0x7f9fb1516200": 286, "config_fil": 286, "srcdir": 286, "dstdir": 286, "dst": [286, 417, 467, 556, 597, 616, 625, 626, 632, 1086], "untrust": 289, "lan": 289, "programmat": [289, 523, 935, 943, 991, 1011, 1162], "stty": 289, "termio": 289, "ioctl_tti": 289, "setseri": 289, "tty": [289, 869, 924, 996, 1002, 1026], "tty_io": 289, "bidirection": 289, "nake": 289, "tiocgseri": 289, "tiocsseri": 289, "async_low_lat": 289, "cfmakeraw": 289, "ttyusb0": [289, 869], "low_lat": 289, "serial_struct": 289, "bidir": 289, "advantec": 289, "nonetheless": [289, 292, 295, 324, 712, 1177], "mycat": 289, "mimick": [289, 753], "make_realtim": 289, "interfaceri": 289, "cif": [289, 341], "samba": [289, 341], "automationadmin": 289, "gsc": 289, "pd": [290, 291, 293, 297, 325, 479, 1140, 1142, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "read_csv": [290, 291, 297, 325, 329, 335, 347, 479, 1140, 1142], "txn": 290, "iso8859": 290, "time_book": [290, 291, 479], "time_valuta": [290, 291, 479], "at66666666666666": 290, "bezahlung": [290, 291, 293, 479], "kart": [290, 291, 293, 479], "eur": [290, 291, 479], "95111243": [290, 479], "abbuchung": [290, 479], "onlinebank": [290, 479], "gutschrift": 290, "000000144919": 290, "339099446722187": 290, "000": [290, 325, 329, 335, 479, 897, 935], "card_pay": 290, "filt": 290, "9325008697": 290, "339099446790254": 290, "og": [290, 467], "237811001182": 290, "auszahlung": 290, "200075787001": 290, "tzb": 290, "anl": 290, "347159strom": 290, "200004871820": 290, "200004876265": 290, "200004848862": 290, "200004871863": 290, "dauerauftrag": 290, "qsnng6xau": 290, "00121672661": 290, "120016487112": [290, 479], "bx": 290, "000009219": 290, "entgelt": 290, "nichtdurchf\u00fchrung": 290, "032300005522384": 290, "saldo": 290, "messtechnik": 290, "602674240071": 290, "0004325259000023": 290, "oeamtc": 290, "mitgliedschaft": 290, "re_liv": 290, "billa": [290, 293, 479], "rew": 290, "dankt": [290, 291, 293, 479], "pipe_stag": 291, "max_colwidth": 291, "max_column": 291, "max_row": 291, "039": 291, "consolut": 291, "insuffici": [291, 709], "categor": [291, 478, 1144], "fuction": 291, "filt_uncat": 291, "uncat_row": 291, "unspecif": [291, 381, 816], "useless": [291, 703, 761, 882, 929, 985, 1057], "food": [291, 297], "luxuri": 291, "categorize_card_pay": 291, "jet": 291, "uncertainti": 291, "categorize_v1": 291, "categorize_v2": 291, "secondari": 291, "test_categori": [291, 479], "test_bas": [291, 1125], "000009258": 291, "k002": [291, 479], "impos": [292, 295], "hurt": [292, 295, 416], "strength": [292, 295, 443, 1059], "overengin": [292, 295, 416, 477, 478, 1185, 1193], "140480285361680": 293, "0xffffffffffffffff": [293, 313, 329], "0x10000000000000000": [293, 313, 329], "140479638276224": 293, "140480203220736": 293, "140480210406176": 293, "7940943354778932823": 293, "0x7fc4189e7c90": 293, "28800": 293, "237988": 293, "produce_dai": 293, "374557": 293, "l_mal_2": 293, "140480285361712": 293, "140479638477760": 293, "140479638427520": 293, "l4": 293, "l5": 293, "140480202528192": 293, "140479638428736": 293, "140480203212992": 293, "l6": 293, "140479598069936": 293, "is_old": 293, "ipykernel_370861": 293, "4290492544": 293, "abc123": [293, 347], "0x7fc4189e5030": 293, "yyi": [293, 335, 347], "lichtenberg": [293, 497, 656, 688, 690, 1126, 1128, 1132, 1134, 1154, 1155, 1156, 1158, 1159, 1160, 1161], "persons2": [293, 1154, 1155], "set_index": [293, 1159], "sort_valu": 293, "inplac": [293, 297, 951, 1155], "flt": [293, 1156], "isin": [293, 1156], "reset_index": 293, "dropna": 293, "value_count": [293, 297], "int64": [293, 297, 1161], "conversiosn": 294, "9am": 295, "woven": [295, 299], "pipelin": [295, 388, 863, 878, 881, 882, 931, 945, 1024], "accountid": 297, "accountdescript": 297, "accountparentid": 297, "storeid": 297, "storedescript": 297, "locationid": 297, "locationdescript": 297, "productid": 297, "productdescript": 297, "sales_managerid": 297, "dateyear": 297, "datequart": 297, "datemonth": 297, "datedai": 297, "categoryvers": 297, "categorycategori": 297, "categorytyp": 297, "valueunit": 297, "original_sales_pric": 297, "sale": 297, "st43": 297, "franchescini": 297, "ct14": 297, "salem": 297, "pd23": 297, "ipa": 297, "sm1": 297, "20144": 297, "201412": 297, "1779": 297, "763910": 297, "usd": 297, "st35": 297, "pd2": 297, "pepsi": 297, "sm4": 297, "201410": 297, "957113": 297, "st98": 297, "walter": 297, "pd24": 297, "amber": 297, "20142": 297, "201406": 297, "449395": 297, "st188": 297, "arrowhead": 297, "ct1": 297, "pd19": 297, "sm8": 297, "20164": 297, "201611": 297, "078689": 297, "st107": 297, "spire": 297, "ct5": 297, "san": 297, "jose": 297, "pd15": 297, "juic": 297, "sm5": 297, "20154": 297, "201512": 297, "303679": 297, "quantity_sold": 297, "sold": 297, "st4": 297, "gstore": 297, "ct13": 297, "portland": 297, "pd26": 297, "wine": 297, "000000": [297, 1142], "1069": 297, "st49": 297, "bai": 297, "depot": 297, "ct4": 297, "sacramento": 297, "pd27": 297, "20151": 297, "201501": 297, "592904": 297, "discount": 297, "st36": 297, "pricelow": 297, "arena": [297, 774, 776], "ct10": 297, "reno": 297, "pd22": 297, "sm3": 297, "20162": 297, "201605": 297, "4351": 297, "045830": 297, "1071": 297, "st7": 297, "street": [297, 904], "pd16": 297, "7905": 297, "590606": 297, "pd12": 297, "lemonad": 297, "20153": 297, "201507": 297, "1073": 297, "modified_model": 297, "sales_managerdescript": 297, "janet": 297, "buri": 297, "nanci": 297, "miller": 297, "setp": 297, "nan_field": 297, "bitfield": 297, "bitfi": 297, "nan_column": 297, "gabriel": [297, 741], "walton": 297, "carl": 297, "jjjjj": 297, "ref_t": 297, "datetime64": 297, "damn": 297, "ref_2015_12_04": 297, "flt_before_2015_12_04": 297, "rows_before_2015_12_04": 297, "st119": 297, "ct2": 297, "francisco": 297, "pd11": 297, "orang": [297, 1078], "pulp": 297, "sm7": 297, "kiran": 297, "raj": 297, "201503": 297, "226847": 297, "13627": 297, "793342": 297, "3427": 297, "896898": 297, "15569": 297, "353983": 297, "float64": [297, 329, 335, 347, 1142], "1957": 297, "740301": 297, "572676": 297, "686587": 297, "289381": 297, "flt_product_pd2": 297, "flt_2015": 297, "flt_only_sold": 297, "flt_combin": 297, "st139": 297, "farlo": 297, "ct15": 297, "eugen": 297, "sm11": 297, "jame": 297, "frank": 297, "201511": 297, "st178": 297, "rai": 297, "ct8": 297, "beverli": 297, "hill": 297, "201508": 297, "facet": [298, 300, 651], "rich": [298, 300, 1155, 1164], "toolset": [298, 300, 669], "conceptu": [298, 300, 468, 809, 816, 954], "undergon": [298, 300], "revolut": [298, 300], "odr": [298, 741], "explor": [298, 943], "rodata": [298, 1029], "unspecifi": [298, 422, 509, 581, 1009, 1010], "bookkeep": [299, 478], "fewer": 299, "closer": 299, "augment": [299, 838, 1151], "test_blah": 299, "monkeypatch": [299, 301, 302, 317, 323, 324, 327], "contextlib": 299, "chatgpt": 300, "ludwig": 300, "registri": [300, 562], "memleak": 300, "jason": [301, 302, 323], "brownle": [301, 302, 323], "contriv": [301, 302, 323, 500, 1036, 1071], "subthread": [301, 302], "introductori": [301, 302, 323, 328, 791, 934, 975, 1143, 1144, 1190], "mindset": [301, 302, 323, 327, 838], "develp": 301, "10am": 302, "reopen": 302, "drei_millionen_int": 303, "3_000_000": 303, "odd_numb": [303, 1040], "odd_numbers_func": 303, "ret_num": 303, "0x7f32ccc4c610": 303, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [303, 351, 365], "139855258515840": 303, "139856078033344": 303, "139856078226432": 303, "139856160540176": 303, "i3": 303, "i4": 303, "nope": [303, 991], "0101010101010": 303, "bash_logout": [303, 920], "bash_profil": [303, 920], "thunderbird": [303, 341, 900, 920], "gnupg": [303, 341, 920], "hst": 303, "gitconfig": [303, 920], "pki": [303, 341, 920], "daham": 303, "20230403": 303, "222915": 303, "bash_histori": [303, 920], "python_histori": [303, 920], "lesshst": [303, 920], "139855258795072": 303, "139855260513728": 303, "139856085569920": 303, "doppelt": 303, "gemoppelt": 303, "trag": 303, "exakt": 303, "paarweis": 303, "read_lines_of_fil": 303, "0x7f32c7d8d390": 303, "nohead": [306, 1131, 1132, 1134], "userdb_csv": [306, 1132, 1133, 1134], "interleav": 306, "dosometh": 307, "0x7fe7fbf80df0": 307, "140634424624656": 307, "140634424623536": 307, "0o644": 307, "0b01110101": 307, "setting_blah": 307, "setting_foo": 307, "config_context": 307, "140634341074320": 307, "140634424624688": 307, "140634341076688": 307, "140634341077776": 307, "140634343012864": 307, "140634341099856": 307, "ipykernel_61373": 307, "1125713270": 307, "1234567876543234567654321234565432123456": 307, "140634281233520": 307, "140634341798400": 307, "140634341995008": 307, "140634341576640": 307, "140634341773312": 307, "140634281802304": 307, "global_vari": 307, "bar2": 307, "bar3": 307, "bar4": 307, "bar5": 307, "bar6": 307, "0x7fe7f869b7d0": 307, "0x7fe7f869b920": 307, "0x7fe7f869bbc0": 307, "punctuat": 307, "abcabcabcabcabc": [307, 335], "rex": [307, 341], "cba": [307, 660], "another_d": 307, "rb": [307, 347], "30000": 307, "coreutil": 310, "autopoint": 310, "rpm": [310, 341, 490], "fcntl": [310, 942, 960, 964, 968, 969, 970, 971, 976, 979, 1002, 1005, 1009], "luciano": [312, 371, 372, 1137], "ramalho": [312, 371, 372, 1137], "140640823526928": 313, "0x7fe97e53c610": 313, "140640823526960": 313, "140640741310912": 313, "140640741034048": 313, "140640741341184": 313, "wasjetzt": 313, "140640722624768": 313, "140640722715136": 313, "l1_copi": [313, 341], "my_funky_gener": 313, "meine_dumme_sequenz": 313, "0x7fe9785083a0": 313, "0x7fe98c21bce0": 313, "greeter": [313, 481, 482, 483, 487, 488, 1028], "0x7fe9796976d0": 313, "140640740502720": 313, "140640722823952": 313, "140640741119552": 313, "l_copi": 313, "140640741312256": 313, "140640722734080": 313, "140640722760768": 313, "140640722739712": 313, "140640741402496": 313, "owher": 313, "0000042": [313, 1081], "bled": 313, "xfc": [313, 329, 1067, 1150], "xdfe": [313, 329, 1150], "gr\u045c\u043fe": [313, 329, 1150], "\u795d\u597d": [313, 329], "big5": [313, 329, 1150], "xaf": [313, 329], "xac": [313, 329], "xa6n": [313, 329], "unterschrift": 313, "illeg": [313, 459, 1150], "multibyt": [313, 405, 1150], "xe7": [313, 329, 1150], "xa5": [313, 329, 1150], "x9d": [313, 329, 1150], "xe5": [313, 329, 1150], "xbd": [313, 329, 1150], "incorpor": [315, 331, 1192], "tradition": [315, 331, 745, 937, 1058, 1192], "lexer": [315, 331, 1192], "aris": [315, 331, 508, 1192], "compili": [315, 331, 1192], "rant": [316, 332, 484, 791, 1160], "blacklist": [316, 332, 341, 483, 484, 489, 492, 791], "acquaint": [317, 320], "data_to_send": 318, "data_receiv": 318, "user_receiv": [318, 1133], "140048588115008": 318, "140048588341376": 318, "d_str": [321, 675], "uebertragen": 321, "d_str_receiv": 321, "d_receiv": 321, "ala": [324, 327, 522, 613, 894, 960, 1000, 1165], "frozendict": [324, 325], "filesensor": 324, "sergei": 324, "test_acquisition_loop": 324, "test_mock_csv_sink": 324, "mymockedth": 324, "nonloc": [324, 1077], "millcelsiu": 324, "acquisition_loop_util": 324, "ont": 324, "necessarili": [324, 443, 473, 630, 789, 824, 838, 875, 955, 1053, 1172, 1179], "10m": [324, 1000], "acquir": [324, 379, 769, 843, 985, 990, 999], "slower": [324, 467, 875], "packet": [324, 519, 832, 938, 961, 994], "transmit": 324, "datatim": 324, "read_measur": 324, "fourier": 324, "fft": 324, "011": [324, 335], "ifft": 324, "print_": 325, "0x7f0b165fdf00": 325, "dos_path": [325, 341, 365], "vernuenftigen": 325, "__class_getitem__": 325, "__iand__": 325, "__ior__": 325, "__isub__": 325, "__ixor__": 325, "difference_upd": 325, "intersection_upd": 325, "issubset": 325, "issuperset": 325, "symmetric_differ": 325, "symmetric_difference_upd": 325, "hallohallohallohallohallo": 325, "139685905188368": 325, "139685905188400": 325, "0x7f0b14487be0": 325, "fasschingbau": 325, "139685602274352": 325, "139685561461616": 325, "139685561690240": 325, "139685561316032": 325, "139685595970464": 325, "139685561151488": 325, "30000000": 325, "my_iter": 325, "my_print": [325, 1058], "my_arg": [325, 1033], "even_squar": [325, 335, 347], "squares_fun": 325, "squares_gen": 325, "0x7f0aefb94f20": 325, "0x7f0aefb955b0": 325, "squares_list": 325, "foobar": 325, "expr_str": 325, "expr": [325, 428, 438, 898], "skiprow": 325, "hz2": 325, "hz3_5": 325, "000566": 325, "000729": 325, "132363": 325, "229977": 325, "260597": 325, "444942": 325, "385433": 325, "638212": 325, "502710": 325, "796519": 325, "936250": 325, "972326": 325, "974442": 325, "999992": 325, "995683": 325, "973719": 325, "999245": 325, "895850": 325, "985202": 325, "768778": 325, "arang": 325, "001": [325, 335, 419], "002": 325, "003": 325, "004": 325, "0x7f0ad44b8f70": 325, "0x7f0ad23371f0": 325, "aaarghhh": 326, "expresss": 326, "realist": [327, 954], "postpon": [327, 858], "coverag": [328, 1042], "hackin": 328, "mocksink": 328, "139680347735568": 329, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 329, "0xabc": 329, "convert_to_int": 329, "konvertieren": 329, "drei_int": 329, "fooabc": 329, "userlin": 329, "tjr": 329, "\u00f6rg": 329, "0xc3": [329, 335, 341], "enc_": 329, "enc_s_recvd": 329, "ipykernel_81650": 329, "1521975281": 329, "lg_joerg": 329, "concat": [329, 479, 1154], "linksunten": 329, "rechtsoben": 329, "meinsinussensor": 329, "sinvalu": 329, "ndarrai": [329, 1143, 1159], "0x7f67142f53c0": 329, "timeit": 334, "0x64": 335, "0b1100100": 335, "0b100101100": 335, "0b0": 335, "type_of_i": 335, "schade": 335, "worldhello": 335, "140572055569936": 335, "500001": 335, "499999999999999999999999": 335, "4999": 335, "my_round": 335, "diff_to_next": 335, "5001": 335, "500000001": 335, "str_i": 335, "int_i": 335, "float_i": 335, "nocheinelist": 335, "140571746172800": 335, "140571753417312": 335, "my_": 335, "2282548071841868421": 335, "oioi": 335, "ueberbleibsel": 335, "my_sum": 335, "doom": 335, "0x7f48e8543060": 335, "doedel": 335, "sdhcbdhcb": 335, "kjsdskbh": 335, "akjsdhvksb": 335, "item2": [335, 786, 787], "line_r": 335, "tyyi": 335, "mp_left": 335, "mp_top": 335, "mp_right": 335, "mp_righ": 335, "brenner": 335, "kupfer": 335, "koax": 335, "oberflaech": 335, "gasdues": 335, "fsc": 335, "zellentemp": 335, "raumtemp": 335, "vdc": 335, "077": 335, "090": [335, 695], "76220": 335, "77849": 335, "086": 335, "81216": 335, "99354": 335, "92051": 335, "035": [335, 1008, 1009], "82874": 335, "075": 335, "006": 335, "78855": 335, "098": 335, "036": 335, "007": 335, "76466": 335, "091": 335, "64736": 335, "65062": 335, "transform_t": 335, "transformed_timestamp": 335, "646126e": 335, "646130e": 335, "mpleft_1": 335, "mpleft_2": 335, "0x7f48ab74abf0": 335, "0x7f48a96648b0": 335, "noch_eine_vari": 335, "even_pr": 335, "0x7f48a9505b40": 335, "0x7f48a95250e0": 335, "squaredict": 335, "squaresset": 335, "bloat": [337, 338, 455, 775, 784, 790, 791, 1055], "ugh": 337, "urgh": 337, "nodiscard": 337, "fallthrough": [337, 1009], "noexcept": [337, 498, 532, 703, 706, 708, 723, 725, 726, 728, 729, 730, 731, 745, 755, 769], "string_view": 337, "hierachi": 338, "conveni": [338, 402, 486, 864, 944, 1009, 1029, 1142], "powercontrol": 338, "temperaturecontrol": 338, "get_target_temperatur": 338, "copyabl": [338, 598], "_run": 338, "kochtopftemperaturecontrol": 338, "get_current_temperatur": 338, "debt": [338, 521, 522, 523, 535, 536, 537], "erasur": [338, 775, 784, 790, 791], "align": [338, 388, 456, 465, 469, 474, 475, 697, 735, 774, 788, 790, 791, 936, 938, 1005, 1081, 1188, 1191], "98f8b9be": 341, "ad8f": 341, "4023": 341, "81a2": 341, "d1dc67d0282c": 341, "python310": 341, "139783143835152": 341, "0x7f21cca24610": 341, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 341, "1_000_000": 341, "3267": 341, "139782834179584": 341, "139783143835184": 341, "meng": 341, "m1": 341, "m2": 341, "leeres_set": 341, "d_revers": 341, "yaai": 341, "my_deppertes_rang": 341, "mdr": 341, "objeckt": 341, "139782799029888": 341, "139782798781696": 341, "139782798895952": 341, "139782798895792": 341, "139782798980096": 341, "schuld": 341, "300000": [341, 943, 1142], "compiled_pattern": 341, "__builtin__": 341, "139782799135312": 341, "0x7f21b81bbe60": 341, "getcwd": 341, "extlinux": 341, "favicon": 341, "grub2": 341, "opensc": 341, "packagekit": 341, "upow": 341, "authselect": 341, "bash_complet": 341, "binfmt": 341, "brltty": 341, "ceph": [341, 864], "chkconfig": 341, "cupshelp": 341, "dconf": 341, "debuginfod": 341, "depmod": [341, 816, 834], "dracut": 341, "egl": 341, "firewalld": [341, 876], "flexiblasrc": 341, "font": 341, "fwupd": [341, 876], "gcrypt": 341, "gdbinit": 341, "glvnd": 341, "groff": 341, "gss": 341, "gssproxi": 341, "hp": 341, "iproute2": 341, "iscsi": 341, "jvm": 341, "kdump": 341, "krb5": 341, "libblockdev": 341, "libibverb": 341, "libnl": 341, "libpap": 341, "libreport": 341, "libssh": 341, "libvirt": 341, "logrot": 341, "lvm": 341, "mcelog": 341, "mdevctl": 341, "modprob": [341, 816, 838, 839, 937, 942, 943, 944], "motd": 341, "cnf": 341, "ndctl": 341, "nftabl": 341, "openldap": 341, "ostre": 341, "pam": 341, "pkcs11": 341, "pkgconfig": 341, "plymouth": 341, "polkit": 341, "popt": 341, "ppp": 341, "puls": [341, 935, 1194, 1201], "rwtab": 341, "sasl2": 341, "selinux": 341, "sgml": 341, "skel": 341, "speech": 341, "sssd": 341, "statetab": 341, "sudoer": [341, 881], "swid": 341, "sysconfig": 341, "sysctl": 341, "terminfo": 341, "thermald": 341, "tmpfile": 341, "tpm2": 341, "udev": 341, "udisks2": 341, "vmware": [341, 877], "vpnc": 341, "vulkan": 341, "wireplumb": 341, "wpa_supplic": 341, "xdg": 341, "dir_color": 341, "lightbgcolor": 341, "grep_color": 341, "adjtim": 341, "bindresvport": 341, "brlapi": 341, "dleyna": 341, "fprintd": 341, "jwhoi": 341, "libaudit": 341, "libus": 341, "mailcap": 341, "man_db": 341, "mime": 341, "mke2f": 341, "nanorc": 341, "netconfig": 341, "papers": 341, "passwdqc": 341, "pinforc": 341, "sestatu": 341, "tcsd": 341, "usb_modeswitch": 341, "vconsol": 341, "wgetrc": 341, "xattr": 341, "crypttab": 341, "localtim": 341, "mtab": 341, "subuid": 341, "subgid": 341, "timid": 341, "vdpau_wrapp": 341, "asound": 341, "idmapd": 341, "mtool": 341, "rsyncd": 341, "anthi": 341, "trolltech": 341, "rygel": 341, "virc": 341, "swtpm": 341, "localca": 341, "swtpm_setup": 341, "uresourc": 341, "ethertyp": 341, "inputrc": 341, "printcap": 341, "csh": [341, 1172], "nfsmount": 341, "nsswitch": 341, "gshadow": 341, "shadow": [341, 873, 894, 970, 1077, 1115], "rhashrc": 341, "imagemagick": 341, "cshrc": 341, "gimp": 341, "updatedb": 341, "dl": 341, "containerd": [341, 1026], "lftp": 341, "rc0": 341, "rc1": 341, "rc2": 341, "rc3": 341, "rc4": 341, "rc5": 341, "rc6": 341, "cpe": 341, "inittab": 341, "makedumpfil": 341, "sensors3": 341, "posixpath": [341, 351], "kadjckk": 341, "xxddjh": 341, "blahblahblahblah": 341, "schuetzen": 342, "regexen": 342, "afterthought": [346, 1067], "__getstate__": 347, "bit_count": 347, "maximum_numb": 347, "140526007219432": 347, "0x42": 347, "0x7fceb0516c20": 347, "cnt": [347, 1038], "140525696085312": 347, "create_print_funct": [347, 737, 739, 740], "140526007219464": 347, "140525697462832": 347, "140525697462736": 347, "140525697463408": 347, "140525697463280": 347, "match_express": 347, "compiled_express": 347, "joined_l": 347, "hwmon4": 347, "hwmon5": 347, "hwmon7": 347, "hwmon8": 347, "0x7fce70506000": 347, "varibl": 351, "139818180670696": 351, "0x7f29f4fdf4e8": 351, "139817897762928": 351, "0b11111111111111111111111111111111": 351, "0b100000000000000000000000000000000": 351, "139817896921728": 351, "139817466913504": 351, "142334567876545678765456787654": 351, "max_tri": 351, "fuck": [351, 809], "straw": [351, 1074, 1082], "ipaddress": 351, "addr": [351, 809, 822, 834, 938, 943, 961, 1005, 1170], "ip_address": 351, "ipv4address": 351, "is_loopback": 351, "gueltig": 351, "a_tupl": [351, 1073], "139818180670728": 351, "139817467481600": 351, "modifyit": 351, "sjdgosi": 351, "gfosvbsisvbsok": 351, "file1": [351, 789, 807, 923], "file2": [351, 789, 807, 923], "csv_file": 351, "subdir1": [351, 789], "subdir2": [351, 789], "mein_dir": 351, "mein_csv_fil": 351, "null_eins_zwei": 351, "0x7f296befbc40": 351, "shuffl": 351, "kvpair": 351, "reduct": 351, "img_arrai": 351, "rerun": [351, 605, 754], "unabl": [351, 945], "nbviewer": 351, "kmeansifittedkmean": 351, "18423981": 351, "51866902": 351, "40779841": 351, "94278979": 351, "7484102": 351, "52017749": 351, "71821931": 351, "48415009": 351, "61361798": 351, "10754686": 351, "97606427": 351, "93141702": 351, "5569347": 351, "5296816": 351, "4875877": 351, "85174112": 351, "87099894": 351, "85349982": 351, "35345614": 351, "73043954": 351, "19387197": 351, "7373525": 351, "19961382": 351, "95700493": 351, "richtigen": [351, 1185], "bildern": 351, "austauschen": 351, "einzelenen": 351, "urspruenglich": 351, "veraendert": 351, "reduced_arrai": 351, "datatyo": 352, "einlesen": 352, "00am": 354, "currect": [354, 816, 911], "shortcut": [354, 370, 447, 898, 930, 1067, 1196], "sysvinit": 354, "commmandlin": 355, "omg": [355, 437, 797, 1171], "checker": [356, 361, 370], "horribl": 356, "gpio25": [356, 939], "embarass": 356, "winscp": 356, "cluster_ece19": [356, 357, 358, 359, 360, 361, 370, 791], "ece19": [356, 357, 358, 359, 361, 369, 370, 376, 377, 381, 791], "ece19_file_read": [356, 357, 358, 359, 360, 361, 370, 791], "ece19_blinklicht": [356, 357, 358, 359, 360, 370, 791], "ece19_blinklicht_oo": [357, 358, 359, 360, 370, 791], "ece19_blinklicht_unittest": [359, 360, 370, 791], "ece19_blinklicht_abc": [359, 360, 370, 791], "blinklicht": [360, 370, 375, 791], "1910420003": [361, 362], "corinna": [361, 362], "baumgartn": [361, 362, 379], "1910420002": [361, 362], "anzhelika": [361, 362, 370], "chernykh": [361, 362, 370, 379], "1910420005": [361, 362], "simon": [361, 362], "1910420006": [361, 362], "matthia": [361, 362, 379], "kappel": [361, 362, 379], "1810420009": [361, 362], "kolter": [361, 362], "1920420033": [361, 362], "kornberg": [361, 362, 379, 382], "1910420007": [361, 362], "lui": [361, 362, 379], "kraker": [361, 362, 379, 382], "1810420010": [361, 362], "leonid": [361, 362], "kudriaschov": [361, 362], "1910420008": [361, 362], "michael": [361, 362, 371, 372], "1910420010": [361, 362], "sonja": [361, 362, 379], "luka": [361, 362, 379, 382], "1910420013": [361, 362], "behnaz": [361, 362], "mehrabadi": [361, 362, 379], "1910420014": [361, 362], "moser": [361, 362, 379], "1910420015": [361, 362], "moritz": [361, 362], "nagelschmi": [361, 362, 379], "1910420018": [361, 362], "bianca": [361, 362], "reimer": [361, 362], "1910420020": [361, 362], "schmid": [361, 362, 379], "1910420021": [361, 362], "sch\u00fcttler": [361, 362], "1910420022": [361, 362], "schweiger": [361, 362, 379], "1910420024": [361, 362], "sinabel": [361, 362], "1910420025": [361, 362], "slovik": [361, 362, 379], "1910420026": [361, 362], "s\u00f6l": [361, 362, 379], "1910420027": [361, 362], "stangl": [361, 362, 379], "1910420028": [361, 362], "felix": [361, 362, 379], "themessl": [361, 362, 379], "1920420035": [361, 362], "astrid": [361, 362], "vogel": [361, 362, 379], "1810420029": [361, 362], "florian": [361, 362, 379], "zwittnigg": [361, 362], "matricul": [361, 1036], "studentdb": 361, "greatli": [361, 463, 1190], "matnr": 361, "rid": [361, 461, 502, 840, 857], "zuweisung": 362, "n1910420002": 362, "n1910420005": 362, "n1910420006": 362, "n1810420009": 362, "n1920420033": 362, "n1910420007": 362, "n1810420010": 362, "n1910420008": 362, "n1910420010": 362, "n1910420013": 362, "n1910420014": 362, "n1910420015": 362, "n1910420018": 362, "n1910420020": 362, "n1910420021": 362, "n1910420022": 362, "n1910420024": 362, "n1910420025": 362, "n1910420026": 362, "n1910420027": 362, "n1910420028": 362, "n1920420035": 362, "n1810420029": 362, "n666": 362, "5g": 362, "n19": 362, "10420013": 362, "n181": 362, "0420029": 362, "20210324": 363, "orig_si": 363, "__interactivehook__": 363, "_base_execut": 363, "_clear_type_cach": 363, "_current_fram": 363, "_debugmallocstat": 363, "_framework": 363, "_getfram": 363, "_git": 363, "_home": 363, "_xoption": 363, "flo": 364, "ted": 364, "rainer": 364, "rg": 364, "some_numb": [365, 1064], "auszuspucken": 365, "eine_neue_vari": 365, "klassisch": 365, "140705292246608": 365, "register_cont": 365, "0b11010001110101000": 365, "107432": 365, "erzwungen": 365, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 365, "groesst": 365, "darstellbar": 365, "ein_string_der_aussieht_wie_ein_integ": 365, "ein_integ": 365, "ver\u00e4ndernd": 365, "say_hello": [366, 1053], "333333333333336": 366, "disclos": [367, 951], "formalit\u00e4ten": 369, "daili": [369, 881], "organiz": 370, "baustein": [370, 375], "navigieren": [370, 375], "sitzen": [370, 375], "nat\u00fcrlich": [370, 375, 388, 1184], "verstehen": [370, 375, 388, 1197], "pr\u00fcfung": [370, 375], "trocken": [370, 375], "pfade": [370, 375, 1185, 1196], "symbolisch": [370, 375, 925], "verschieben": [370, 375], "textfil": [370, 375], "113ff": [370, 375], "ansatzweis": [370, 375], "durchgegangen": [370, 375], "133ff": [370, 375], "durchgemacht": [370, 375], "wirkungsweis": [370, 375], "verstanden": [370, 375, 1187], "verkn\u00fcpfen": [370, 375], "aufw\u00e4rmen": 370, "fremden": 370, "fragerund": 370, "tire": [370, 375], "transact": [370, 375], "wertebereich": 370, "vpn": [370, 945], "gitlab": 370, "sidenot": 370, "swoop": [370, 496], "hashbang": 370, "student1": 370, "student2": 370, "student3": 370, "undescript": 370, "contribut": [370, 1012], "crlf": 370, "bang": [370, 490], "trial": [370, 1015, 1024, 1144], "systemkonzept": [371, 388, 1203], "adressr\u00e4um": [371, 388, 1194], "ger\u00e4t": 371, "destruktoren": [371, 1189], "containertempl": 371, "ausz\u00fcg": 371, "absolventinnen": 371, "absolventen": 371, "entwicklungsplatform": 371, "zielplattform": [371, 1189], "dortigen": 371, "betriebssystemkonzept": [371, 1194, 1201], "verinnerlichen": 371, "eckpfeil": [371, 1189], "ansteuern": 371, "merkmal": 371, "nichttrivial": 371, "kerrisk": [371, 372], "handbook": [371, 372], "corbet": [371, 372, 1185], "allessandro": [371, 372], "rubini": [371, 372], "greg": [371, 372], "kroah": [371, 372], "hartman": [371, 372], "richard": [371, 372, 1012], "steven": [371, 372, 467], "stephen": [371, 372], "rago": [371, 372], "cookbook": [371, 372, 1177], "lutz": [371, 372], "integriert": 371, "\u00fcbungsanteil": 371, "einzelpr\u00fcfung": 371, "vorlesung": 371, "graduat": 372, "copver": 372, "warm": 373, "briefli": [374, 935], "filethermomet": 374, "ue": 376, "arduino": [376, 378, 935, 943, 1153], "homedirectori": [376, 926], "vbox": 376, "subnet": 376, "mgmt": 377, "64ff": 377, "readdir": [377, 789], "ow": [377, 521, 522, 523, 535, 536, 537], "readlink": 377, "thermometers_docu": 378, "toctre": 378, "execconfig": 378, "wacom": [378, 440, 441], "schuettler": 379, "zwittnig": 379, "simu": 379, "kudriaschow": 379, "hysteres": 379, "impl": 379, "marku": 379, "stepper": 379, "motor": [379, 791, 934, 941], "wasserfal": 379, "influxdb": 379, "grafana": 379, "nachmittag": 379, "multitask": [380, 385, 768, 790, 791, 934, 975, 989, 995, 997, 998, 1000, 1201], "latenc": [381, 385, 769, 791, 836, 934, 975, 995, 997], "gotcha": [381, 385, 670, 791, 934, 955, 975, 995, 997, 1005], "type_from_ini": 381, "ece19error": 381, "configfil": [381, 1036], "prettier": [381, 612], "support_address": 381, "invalidtypeerror": 381, "newcom": [383, 384], "individualtrain": 387, "baden": 387, "w\u00fcrttemberg": 387, "beginnend": 387, "kursnotizen": 387, "qualivis": 387, "logbuch": 388, "kursteilnehmern": 388, "zustandegekommen": 388, "zukommen": 388, "potentiellen": 388, "zuk\u00fcnftigen": 388, "eindruck": [388, 1184], "zukommt": 388, "publizieren": 388, "einverst\u00e4ndni": 388, "richtlinien": 388, "young": 388, "physicist": 388, "raaba": 388, "thalheim": 388, "aachen": 388, "herzogenrath": 388, "mixtur": [388, 631], "gr\u00e4felf": 388, "wel": 388, "regensburg": 388, "pr\u00e4sent": 388, "inhous": [388, 1139, 1184], "linuxcampu": 388, "sch\u00f6nen": 388, "aktiv": 388, "mitgestaltet": 388, "kursabschluss": 388, "dran": 388, "provok": 388, "kam": 388, "zustand": 388, "freiheiten": 388, "gestanden": 388, "zusatzaufgab": 388, "gef\u00fchrt": [388, 1184], "einschr\u00e4nkungen": [388, 1202], "eintagesworkshop": 388, "leuten": 388, "kenn": 388, "einhergehend": 388, "l\u00f6sungen": [388, 1184, 1185], "darauffolgend": 388, "vertiefen": 388, "ausgew\u00e4hlten": 388, "bereichen": 388, "dbapi2": [388, 1149], "objektorientierung": 388, "r\u00e4umen": 388, "zweit\u00e4gig": 388, "gemisch": 388, "kursen": 388, "ziemlich": 388, "eingemacht": 388, "bestellt": 388, "neugier": 388, "leichtfertig": 388, "tief": 388, "hinabgestiegen": 388, "feiner": 388, "internen": 388, "forschungsprojekt": 388, "gebracht": 388, "zusammenschnitt": 388, "workshopcharakt": [388, 1208], "angegraut": 388, "bewusst": [388, 1206], "verwendung": 388, "wunderbar": 388, "automatisieren": 388, "zurerst": 388, "shellbenutzung": 388, "angeordnet": 388, "ge\u00fcbt": 388, "herk\u00f6mmlichen": [388, 1189], "auffrischung": 388, "eingerostet": 388, "neuigkeiten": 388, "querbeet": 388, "aufbauend": 388, "zuvor": 388, "grundkur": 388, "wichtigsten": 388, "neuerungen": [388, 1189], "tobak": 388, "lieblingsschulungen": 388, "basiswissen": 388, "hoeri": 388, "bastelwoch": 388, "betrachtung": 388, "realtimef\u00e4higkeit": 388, "xenomai": [388, 1185], "fad": 388, "auszugsweis": 388, "richtig": [388, 1204], "n\u00e4chten": 388, "schulungstagen": 388, "kurzweil": 388, "beschert": 388, "einf\u00fchrungscharakt": 388, "kernelprogrammierung": 388, "auftrag": 388, "hardwarenah": [388, 1194, 1201], "ausgew\u00e4ht": 388, "kernelstruktur": 388, "crosscompil": 388, "newer": [389, 792, 955, 1028, 1193], "msys2": 390, "5595": 390, "17619": 390, "pacman": 390, "mingw64": 390, "w64": 390, "x64": 390, "medium": [390, 480, 757, 1010, 1207], "swlh": 390, "2b2e66352456": 390, "ansi": 391, "iec": [391, 596], "9899": 391, "c11": 391, "pdp": [391, 405], "ken": 391, "thompson": 391, "tabul": [392, 400], "celsiu": [393, 394, 496, 507, 538, 942, 944], "brutal": [393, 412, 416, 437, 695, 712, 998], "ordinari": [393, 613, 667, 717, 822, 830, 901, 978, 1058, 1065], "everytim": [395, 413, 942], "ascend": [396, 1159], "unread": [397, 415, 472, 758, 1013, 1014, 1034, 1078], "putchar": 399, "caution": [399, 605, 864, 938], "obscur": [399, 407, 552, 673, 855, 964, 1006], "alright": [399, 425], "inequ": [399, 613], "word1": [400, 572], "word2": [400, 572], "word3": [400, 572], "word4": 400, "word5": 400, "unixen": [400, 789, 1006, 1172, 1185], "nonsens": [401, 419, 438, 598, 602, 605, 695, 754, 901, 996, 1033, 1143, 1182], "illustr": [401, 1036], "countchar": 401, "nwhite": 401, "nother": 401, "stat": [401, 789, 960, 968, 969, 970, 971, 996, 1002, 1005, 1009, 1170], "nonprint": [402, 430], "decis": [402, 477, 557, 604, 620, 754, 935, 998, 1038, 1144, 1193], "xxxxxxxxxxxxxxxxxxxxxxxxx": 402, "xxxxxxxxxxxxxxxxxx": 402, "subroutin": [403, 471], "outer": [403, 430], "wimplicit": [403, 806], "hygien": 403, "dear": 403, "assembl": [405, 1012], "contradict": [405, 700], "640k": 405, "a_str": 405, "strncpy": 405, "maxlen": [405, 406], "strcat": 405, "strncat": 405, "strcmp": [405, 706, 707], "strncmp": 405, "another_str": 405, "nonsensi": 406, "read_lin": 406, "longest": 406, "confin": [407, 1036], "cluster_c": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cluster_c_introduct": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 735, 751, 760, 768, 776, 788, 790, 791], "c_introduction_introduct": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_instal": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 704, 735, 751, 760, 768, 776, 788, 790, 791], "c_introduction_exercise_power_declar": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_funct": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_arrai": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_wc": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_fahrenheit_for": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_for_loop": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_string_read_lin": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_character_arrai": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_fahrenheit_float": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_variables_and_arithmetic_express": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_histogram": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_hello_world": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_external_variables_and_scop": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_exercise_fahrenheit_cpp": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_cpp_symbolic_const": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_introduction_character_io": [408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "z0": 410, "abbrevi": [411, 712, 715, 717, 721, 775, 777, 779, 780, 781], "char_bit": 411, "x86": [411, 490, 1012, 1029], "stdint": [411, 942, 962, 1005], "int8_t": 411, "uint8_t": [411, 509, 524, 696, 942], "int16_t": 411, "int32_t": 411, "uint32_t": 411, "int64_t": 411, "052": 412, "0x2a": 412, "0b010010": 412, "42l": 412, "456f": 412, "456l": 412, "x61": 412, "alert": [412, 455, 461, 755, 1067, 1075, 1084, 1086], "backspac": [412, 898, 1080], "formfe": 412, "ooo": 412, "octal": [412, 1067, 1080, 1081], "xhh": 412, "some_funct": 413, "some_vari": 413, "1415926535897932": 413, "some_nonsensical_numb": 413, "legal": [415, 459, 605, 703, 968, 1010], "truth": [415, 965, 991], "eleg": [415, 758], "blank": 415, "num_lf": 415, "narrow": [416, 1144], "4294967295u": 416, "wsign": [416, 458], "wconvers": 416, "4294967296u": 416, "unscrupul": 416, "0x100000000": 416, "weaker": 416, "stronger": [416, 1048, 1156], "1l": 416, "1u": 416, "losslessli": 416, "1ul": 416, "wtype": [416, 458], "wextra": [416, 458], "pedant": 416, "anti": [416, 843, 980], "sloppi": 416, "advic": [416, 1067], "immens": [416, 1010], "hazard": 416, "messi": [416, 487], "subtl": [417, 437, 460, 552, 1061], "copy_and_omit": 417, "0x4b": 419, "01001011": 419, "0x0c": 419, "00001100": 419, "0x08": 419, "00001000": 419, "0x4f": 419, "01001111": 419, "0x47": 419, "01000111": 419, "0x03": 419, "00000011": 419, "0x80": 419, "00110000": 419, "0x4c": [419, 828], "01001100": 419, "0xb3": 419, "10110011": 419, "arr": [420, 699], "unari": [422, 1067], "strongest": [422, 1067], "intuit": [422, 470], "danger": [422, 440, 598, 838, 988, 1009, 1076, 1190], "decrement": [423, 432, 439, 443, 445, 449, 452, 456, 465, 469, 474, 475, 648, 697, 735, 754, 788, 790, 791, 797], "cluster_c_types_operators_express": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_exercise_string_reduc": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_increment_decrement_oper": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_type_convers": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_relational_logical_oper": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_datatypes_s": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_variable_nam": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_arithmetic_oper": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_declar": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_introduct": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_const": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_bit_oper": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_assignment_operators_and_express": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_conditional_express": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_types_operators_expressions_precedence_and_order_of_evalu": [423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "doabl": 428, "cond": [428, 985], "precedenceof": 428, "innermost": [430, 667, 672], "concern": [430, 431, 479, 797, 874, 944, 1035, 1192], "edsger": 431, "dijkstra": 431, "plea": 431, "manifold": 431, "judici": [431, 467, 1192], "do_complicated_stuff": 431, "cleanup_mess": 431, "cluster_c_program_flow": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_break_and_continu": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_loops_do_whil": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_if_els": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_statements_and_block": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_loops_while_and_for": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_goto_and_label": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_switch": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_flow_else_if": [432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "vice": 433, "versa": 433, "g_lobal": [434, 435, 437], "print_g": [434, 435], "linkag": 435, "percept": [435, 874], "disciplin": [435, 457, 467, 477, 1143], "convent": [435, 479, 854, 898, 920, 958, 1035, 1050], "ifndef": [435, 437, 438, 480, 487, 581, 599, 605, 607, 608, 706, 707, 753, 1012, 1028, 1030], "g_h": 435, "programx": 436, "cautious": 437, "c99": [437, 1188], "slow": [437, 468, 472, 648, 944, 955], "have_c_h": 437, "clash": [437, 460], "include_onc": 437, "newbi": [437, 699], "hurdl": 437, "ifdef": [438, 495, 648], "defined": 438, "unequ": 438, "tempt": 438, "horror": 438, "do_much": 438, "do_thi": [438, 759], "do_that": [438, 759], "do_less": 438, "__pragma": 438, "4127": 438, "warn_if": 438, "statem": 438, "function_help": 438, "function_quit": 438, "function_": 438, "inject_viru": 438, "doomed_process": 438, "win32": [438, 1206], "foreign_mem": 438, "virtualallocex": 438, "mem_commit": 438, "page_execut": 438, "page_readwrit": 438, "infect": 438, "__file__": [438, 1036, 1170], "__line__": 438, "smell": [438, 492], "pest": 438, "cluster_c_functions_and_program_structur": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_static_vari": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_header_fil": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_bas": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_c_preprocessor": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_external_vari": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_functions_and_program_structure_c_preprocessor_advanc": [439, 445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "dereferenc": [440, 708, 743, 747], "35129": 440, "calle": [441, 471, 473, 610, 1031], "tablet": 441, "excang": 442, "pa1": 443, "pa2": 443, "cluster_c_pointers_and_arrai": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_pointers_and_arrays_pointers_and_function_argu": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_pointers_and_arrays_pointers_and_address": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_pointers_and_arrays_command_line_argu": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_pointers_and_arrays_pointers_and_arrai": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_pointers_and_arrays_exercise_swap": [445, 449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "scalar": [446, 461, 1084], "fantasi": [446, 935, 937], "p1": [446, 551, 597, 599, 605, 611, 613, 615, 616, 700], "p2": [446, 551, 597, 599, 605, 611, 613, 616, 700], "laid": 446, "makepoint": 447, "addpoint": [447, 463], "addtopoint": 447, "pid_t": [448, 981, 999, 1010], "cluster_c_structur": [449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_structures_bas": [449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_structures_structures_and_funct": [449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_structures_typedef": [449, 452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "dealloc": [450, 588, 740, 799, 826, 832], "ptr": [450, 573, 705, 753, 754, 755, 756], "do_something_with": [450, 698, 744], "list_init": 451, "list_destroi": 451, "list_insert": 451, "list_remov": 451, "list_count": 451, "list_print": 451, "keylen": 451, "cluster_c_memori": [452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_memory_exercise_linked_list": [452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_memory_malloc": [452, 456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "corollari": [453, 455, 761, 1044], "reorder": [453, 769, 822], "use_count": [453, 454, 754, 756, 786], "use_resourc": [453, 454], "do_something_with_shared_resourc": [453, 454], "conceiv": [453, 1061], "completion_flag": 453, "out_word": 453, "in_word": 453, "unforese": 453, "volatil": [454, 456, 465, 469, 474, 475, 697, 735, 763, 788, 790, 791, 848, 1010, 1188, 1191], "instr": [454, 472, 983, 1046], "pthread_mutex_t": [454, 767, 830, 983, 985], "use_count_mutex": 454, "pthread_mutex_initi": [454, 983], "pthread_mutex_lock": [454, 767, 983, 985], "pthread_mutex_unlock": [454, 767, 983, 985], "expens": [454, 461, 597, 610, 613, 703, 708, 744, 745, 754, 843, 980, 1190], "fetch_and_add": [454, 983], "__sync_fetch_and_add": [454, 764, 983, 984], "sheer": [454, 600], "neglig": 455, "penalti": 455, "memcpi": 455, "freeli": 455, "rearrang": [455, 647], "anim": 455, "textit": 455, "bogu": [455, 467, 608, 706, 707, 733, 944, 1010], "__pad0": 455, "__pad1": 455, "misalign": 455, "intrins": [456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "cluster_c_advanced_language_featur": [456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_advanced_language_features_align": [456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_advanced_language_features_atom": [456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "c_advanced_language_features_volatil": [456, 465, 469, 474, 475, 697, 735, 788, 790, 791], "matur": 457, "odditi": 457, "rectifi": 457, "fortran": 457, "lazy": [457, 738], "meant": [457, 1009], "shortcom": [457, 522, 683, 688, 691], "holidai": 457, "handcraft": [457, 505, 1071], "clariti": [458, 462, 967], "baud": 459, "idl": 459, "writing_request": 459, "reading_respons": 459, "wait_retri": 459, "protocol_engin": [459, 463], "deduc": [459, 695, 698, 723], "obligatori": 459, "anyhow": 459, "forgot": 459, "unambigu": [459, 695], "protocol_error": 459, "eat": [459, 467], "unintend": 461, "wwrite": 461, "max_bucket": 461, "pj": 461, "pointe": 461, "ppi": 461, "height": [462, 505, 614], "beman": 462, "daw": 462, "obfusc": 463, "ssize_t": [463, 555, 797, 956, 960, 961, 962, 964, 968, 969, 970, 971, 974, 976, 979, 1002, 1005, 1006, 1009], "send_fram": 463, "eng": 463, "send_sum": 463, "v_int32": 463, "spectacular": 463, "adequ": 463, "unix_error": 463, "app_error": 463, "unix_error_cr": 463, "unix_error_ok": 463, "uerr": 463, "app_error_cr": 463, "app_os_error": 463, "impact": [463, 467], "enhanc": [463, 871], "beyond": [464, 964], "consider": [464, 898], "slowdown": 464, "0x400552": 464, "0x51bb072": 464, "0x4c28c6d": 464, "vg_replace_malloc": [464, 605], "0x400545": 464, "loss": [464, 946], "rec": [464, 1127, 1129], "uncov": 464, "readabilti": [465, 469, 474, 475, 697, 735, 788, 790, 791], "explict": [465, 469, 474, 475, 791], "cluster_c_program_san": [465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_sanity_valgrind": [465, 469, 474, 475, 791], "c_program_sanity_explicit_type_safeti": [465, 469, 474, 475, 791], "c_program_sanity_stat": [465, 469, 474, 475, 791], "c_program_sanity_discrete_valu": [465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_sanity_integral_typ": [465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_sanity_struct_initi": [465, 469, 474, 475, 791], "c_program_sanity_introduct": [465, 469, 474, 475, 697, 735, 788, 790, 791], "c_program_sanity_const": [465, 469, 474, 475, 791], "hotspot": [466, 470], "checksum": [466, 946, 994], "externel": 466, "sha1sum": [466, 994, 997, 1000], "8g": 466, "0m38": 466, "0m3": 466, "0m0": 466, "perceiv": 466, "daze": 466, "mp3": 466, "018": 466, "mult": 467, "rumour": 467, "uncondit": 467, "finlin": 467, "o3": [467, 482, 789, 1179], "heurist": 467, "o1": 467, "magnitud": [467, 468], "overus": [467, 509, 1049, 1190], "spill": 467, "fira": 467, "rtfm": [467, 1082, 1177], "compromis": [467, 477, 505], "transit": [467, 492], "fmove": 467, "outweigh": 467, "thrash": [467, 997, 1188], "understood": [467, 477, 554, 759, 838, 1192], "misnom": [467, 1086], "o0": [467, 482], "unagress": 467, "chew": [467, 769], "agress": 467, "muchnik": 467, "levin": 467, "nearbi": 468, "4x3": 468, "rectangular": 468, "cluster_c_perform": [469, 474, 475, 791], "c_performance_memori": [469, 474, 475, 791], "c_performance_computebound": [469, 474, 475, 791], "c_performance_introduct": [469, 474, 475, 791], "bust": 470, "haul": 470, "cheater": 470, "fallibl": 470, "supplement": 470, "gprof": [470, 472, 473, 474, 475, 791, 1188], "callgrind": [470, 473, 474, 475, 791, 1188], "oprofil": [470, 474, 475, 791, 1188], "gmon": 471, "spot": 471, "38000000": 471, "find_dupl": [471, 473], "criterion": [471, 638], "37000000": 471, "luck": [471, 942, 1033, 1035], "gprof2dot": 471, "tjpeg": 471, "predict": [472, 473, 1140, 1142, 1143], "sluggishli": 472, "16761": 472, "callgrind_annot": 472, "atstart": 472, "callgrind_control": 472, "nmi": 473, "ophelp": 473, "operf": 473, "oprofile_data": 473, "opreport": 473, "opannot": 473, "oparch": 473, "opgprof": 473, "Their": 473, "2085": 473, "2505": 473, "maskabl": 473, "callgraph": 473, "pxe": 473, "vmlinux": [473, 813], "debuginfo": 473, "userland": [473, 797], "routin": [473, 479, 584, 789, 830, 836, 841, 962, 998, 1030, 1131, 1133], "analyz": 473, "jcf": [473, 838, 864], "jxf": [473, 838, 864], "gdf": 473, "op2calltre": 473, "oprof": 473, "applet": 473, "viewabl": [473, 486], "kcachegrind": 473, "cluster_c_profil": [474, 475, 791], "c_profiling_callgrind": [474, 475, 791], "c_profiling_gprof": [474, 475, 791], "c_profiling_oprofil": [474, 475, 791], "c_profiling_introduct": [474, 475, 791], "worker": [477, 703], "consensu": [477, 500], "consent": [477, 1056], "male": [477, 1099], "prcess": 477, "obei": [477, 479], "antipattern": [477, 505], "gonna": 477, "indecis": [477, 1193], "road": 477, "manufactur": [477, 944], "pcb": [477, 942], "bom": 477, "requiremenet": 477, "yyyi": 478, "testabl": [478, 1171], "yagni": 478, "fraunhof": 478, "make_categori": 479, "outputfil": 479, "to_datetim": 479, "make_float": 479, "orpheum": 479, "goingout": 479, "hervi": 479, "sport": 479, "card": [479, 838, 867, 902, 904, 909, 910], "to_csv": 479, "read_from_csv": 479, "write_to_csv": 479, "clean_data": 479, "csvname_or_list_thereof": 479, "workaround": [479, 696, 699, 811, 1170], "read_from_dir": 479, "re_yyyy_mm": 479, "inputdir": 479, "libreoffic": 479, "monolith": [479, 1012], "factor": [479, 806, 807, 838], "test_data_clean": 479, "test_make_float": 479, "1999": 479, "test_date_convers": 479, "at666666666666666666": 479, "000009173": 479, "bawaatwwxxx": 479, "at211420020010848041": 479, "ausgleich": 479, "firmenkonto": 479, "test_input": 479, "read_from_csv_singl": 479, "read_from_csv_multipl": 479, "deliber": 479, "test_read_csv_singl": 479, "000009284": 479, "2371": 479, "000009283": 479, "at613400000005077508": 479, "world4you": 479, "writelin": [479, 1086, 1132, 1134], "test_read_csv_multipl": 479, "lines_2023_02": 479, "lines_2023_01": 479, "000009229": 479, "4111": 479, "bp": 479, "tankstel": 479, "000009228": 479, "at081400086210003454": 479, "\u00f6sterreichisch": 479, "gesundheitskass": 479, "_write_csv": 479, "read_from_csv_dir": 479, "test_read_csv_dir": 479, "testutil": 479, "write_csv": 479, "test_category_csv": 479, "000009168": 479, "000009169": 479, "2801": 479, "strassenbahn": 479, "eas": [479, 1149], "finer": 479, "refact": 479, "str_categori": 479, "cardunknown": 479, "flughafen": 479, "wien": 479, "test_more_of_it": 479, "000009153": 479, "parken": 479, "fl": 479, "inputread": 479, "recursivecsvinputread": 479, "singlecsvinputread": 479, "compositeinputread": 479, "input_abc": 479, "abstractmethod": [479, 1048], "multiplecsvinputread": 479, "test_input_abc": 479, "cmake_minimum_requir": [480, 1014, 1179], "identif": [480, 942, 1013, 1014], "abi": [480, 490, 816, 818, 958, 1013, 1014], "hello_nam": [480, 486], "hello_name_h": 480, "democonfig": [481, 483, 487, 488, 489], "libhello": [481, 482, 483, 485, 488, 491], "configure_fil": 481, "demo_version_major": 481, "demo_version_minor": 481, "cmake_current_binary_dir": 481, "demo_major": 481, "demo_minor": 481, "include_directori": [481, 492], "overkil": 481, "cmake_cxx_standard": [482, 1179], "dndebug": 482, "cmake_": 482, "_compiler_id": 482, "IF": [482, 487, 488, 489], "g3": 482, "strequal": 482, "cmake_c_compiler_id": 482, "cmake_c_flag": [482, 1179], "cmake_cxx_compiler_id": 482, "cmake_cxx_flag": [482, 1179], "howdi": [482, 606, 737, 739, 740, 878, 882, 968, 969, 971, 1053], "bullshithowdi": 482, "fatal_error": 482, "send_error": 482, "attract": [482, 699], "findsqlite3": 483, "sqlite3_include_dir": 483, "sqlite3_librari": 483, "typo": [483, 1049, 1050], "sqlite3_vers": 483, "sqlite3_found": 483, "olden": 483, "0x00007f76ae011000": 483, "libz": 483, "0x00007f76adef7000": 483, "cluster_cmak": [484, 791], "cmake_cxx_and_r": [484, 791], "cmake_structur": [484, 791], "cmake_instal": [484, 791, 1013, 1014], "cmake_shared_libraries_preview": [484, 791], "cmake_librari": [484, 791], "cmake_test": [484, 791], "cmake_external_depend": [484, 791], "cmake_optional_code_approach_1": [484, 791], "cmake_optional_code_problem": [484, 791], "cmake_configure_fil": [484, 791], "cmake_targets_properti": [484, 791], "cmake_optional_code_approach_2": [484, 791], "cmake_bas": [484, 791], "cmake_install_prefix": 485, "set_properti": [485, 490], "dbuild_shared_lib": [485, 490], "ON": [485, 488, 489, 490, 544, 545, 550, 996], "readelf": [485, 1012, 1024, 1029], "0x0000000000000001": [485, 1029], "0x000000000000001d": 485, "0x00007f773aefe000": 485, "ldconfig": [485, 1185], "sonam": [485, 490], "add_librari": [486, 488, 490, 492, 538, 583, 592, 1013, 1014], "0x29": 486, "collect2": [486, 672, 1029], "acycl": [486, 1014, 1028], "dag": 486, "jul": [486, 490], "tpng": [486, 1014], "descend": [487, 488, 489, 491, 538, 899, 1006], "use_blacklist": [487, 488], "macro_use_blacklist": [487, 489], "demo_use_blacklist": [487, 488], "namegreet": 487, "_blacklist": 487, "implic": [487, 822, 894, 955], "sayhello": 487, "is_forbidden": 487, "_name": [487, 528, 531, 535, 536, 537], "goodby": [487, 1010], "use_backlist": 487, "condition": 487, "duse_blacklist": [488, 489], "target_compile_opt": [488, 492], "manyfold": 489, "target_compile_definit": [489, 492], "lightli": 489, "symlink": [490, 789, 942, 1172, 1196], "build_shared_lib": 490, "qf": 490, "libboost_regex": 490, "lrwxrwxrwx": [490, 920, 942, 943, 944, 978, 1012], "rwxr": [490, 883, 885, 886, 895, 1012, 1024, 1063], "289264": 490, "temporarili": [490, 999, 1012], "project_vers": 490, "makefile2": 491, "compile_definit": 492, "dname": 492, "compile_opt": 492, "widest": 492, "asymmetr": 492, "enable_test": 493, "toplavel": 493, "set_tests_properti": [493, 1176, 1179], "pass_regular_express": 493, "ctest": 493, "cdash": 493, "kitwar": 493, "socialdb": [494, 497, 501, 526, 532], "i2csensor_vendor1": [495, 524], "0x37": 495, "suddenli": [495, 838, 878, 1145], "vener": [495, 516, 598, 613, 741], "pour": [495, 864], "damag": [495, 1159], "slip": 495, "cascad": 495, "i2csensor": [495, 509, 524], "create_i2c_sensor": 495, "i2csensorfactori": 495, "speak": [495, 925, 943, 1040, 1065], "vendor1": [495, 524], "abstract_factory_suit": 495, "instantiate_vendor1": 495, "i2csensorfactory_vendor1": 495, "i2c_factory_vendor1": 495, "i2c_sensor": 495, "assert_tru": [495, 550, 551, 556, 561, 563, 568, 597, 599, 614, 615, 616, 617, 700, 754, 755, 771, 789, 1177], "dynamic_cast": [495, 522, 536], "a_sensor": [495, 705], "vendor2": [495, 524], "instantiate_vendor2": 495, "i2csensorfactory_vendor2": [495, 524], "i2c_factory_vendor2": 495, "i2csensor_vendor2": [495, 524], "pu": 495, "tinto": 495, "fahrenheitsensor": [496, 525], "get_temperature_f": [496, 525], "formula": 496, "adapter_suit": 496, "constantfahrenheitsensor": 496, "assert_float_eq": [496, 499, 500, 502, 519, 520, 546, 547, 548, 549, 551, 554, 555, 566, 597, 599, 616, 702, 705, 771], "fahrenheitsensor_adapt": [496, 525], "adapter__is_a__sensor": 496, "adapter__knows__an_a_sensor": 496, "variablefahrenheitsensor": 496, "initial_valu": 496, "_valu": [496, 531], "change_temperatur": [496, 546, 554, 555], "adapter__definitely_knows__a_sensor__hel": 496, "multitud": 497, "socialdbcommand": [497, 526], "command_suit": 497, "2345110695": [497, 656], "socialdbinsertcommand": [497, 526], "3456060486": [497, 656], "insert_by_bas": 497, "socialdbfindcommand": [497, 526], "socialdbdropcommand": [497, 526], "notfound": [497, 498, 526, 688, 689, 690], "assert_throw": [497, 504, 789], "notinsert": [497, 498, 526], "bulkinsert": 497, "bulk_insert": 497, "socialdbbulkinsertcommand": [497, 526], "bic": 497, "std_initializer_list": 497, "bulk_insert__std_initializer_list": 497, "_msg": 498, "c_str": [498, 533, 555, 701, 706, 707, 1009], "_db": 498, "hypthet": 499, "composite_suit": 499, "cs1": 499, "cs2": 499, "recompil": [500, 1029], "decorator_suit": 500, "average_with_base_sensor": 500, "decoratedsensor": [500, 528], "propon": 500, "diagnost": [500, 629, 632], "decorated_sensor_const_added_function": 500, "decorated_sensor_random_added_function": 500, "decorated_sensor_const__is_a__sensor": 500, "decorated_sensor_random__is_a__sensor": 500, "assert_g": [500, 549, 566], "assert_l": [500, 549, 566], "average_with_decorated_sensor": 500, "mtqueue": [501, 519], "devis": 501, "cluster_linux": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 795, 798, 800, 803, 805, 808, 810, 812, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 842, 844, 847, 849, 853, 856, 859, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 940, 941, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 977, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cluster_linux_bas": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cluster_linux_basics_shel": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cluster_linux_basics_intro": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cluster_linux_toolchain": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cluster_cxx": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 791], "cluster_cxx_exercis": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 791], "cluster_cxx_exercises_design_pattern": [501, 515, 543, 595, 791], "cluster_cxx_design_pattern": [501, 515, 543, 595, 791], "cluster_cxx03": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 658, 659, 660, 662, 663, 665, 668, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cluster_cxx03_data_encapsul": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cluster_cxx03_inheritance_oo": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "linux_basics_shell_file_dir_create_rm": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 865, 866, 867, 868, 871, 872, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 918, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_basics_shell_path": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 865, 866, 867, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_basics_shell_cwd": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 865, 866, 867, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_basics_shell_commandlin": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_basics_intro_overview": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 861, 865, 866, 867, 868, 871, 872, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_basics_intro_process": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 865, 866, 867, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934, 946, 947, 948, 949, 950, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linux_toolchain_cmake_loc": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 791, 934, 1014, 1022], "linux_toolchain_static_librari": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 791, 934, 1014, 1017, 1019, 1020, 1022], "linux_toolchain_separate_compil": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 791, 934, 1014, 1017, 1018, 1019, 1020, 1022], "linux_toolchain_bas": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "cxx_exercises_sensor_interfac": [501, 515, 543, 553, 595, 791], "cxx03_inheritance_oo_interfac": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "cxx_exercises_design_patterns_proxy_round": [501, 515, 543, 595, 791], "cxx_design_patterns_sensor_hierarchi": [501, 515, 543, 595, 791], "cxx_design_patterns_proxi": [501, 515, 543, 595, 791], "cxx_design_patterns_uml": [501, 515, 543, 595, 791], "cxx_design_patterns_oo_principl": [501, 791], "cxx_design_patterns_composit": [501, 515, 543, 595, 791], "cxx_design_patterns_decor": [501, 515, 543, 595, 791], "cxx_design_patterns_adapt": [501, 515, 543, 595, 791], "cxx_design_patterns_singleton": [501, 515, 543, 595, 791], "cxx_design_patterns_abstract_factori": [501, 515, 543, 595, 791], "cxx_design_patterns_heating_screenplai": [501, 791], "cxx_design_patterns_command": [501, 515, 543, 595, 791], "cxx_design_patterns_observ": [501, 515, 543, 595, 791], "cxx_design_patterns_interpret": [501, 515, 543, 595, 791], "cxx03_introduct": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_data_encapsulation_ctor_dtor": [501, 515, 543, 553, 595, 603, 668, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_data_encapsulation_ctor_custom": [501, 515, 543, 546, 549, 553, 595, 603, 668, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_data_encapsulation_ctor_default": [501, 515, 543, 553, 595, 603, 668, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_data_encapsulation_c": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_data_encapsulation_classes_object": [501, 515, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 562, 595, 603, 618, 621, 624, 640, 646, 650, 659, 662, 663, 668, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 776, 788, 790, 791], "cxx03_inheritance_oo_polymorph": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "cxx03_inheritance_oo_virtual_method": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "cxx03_inheritance_oo_bas": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "cxx03_inheritance_oo_destructor": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "cxx03_inheritance_oo_virtual_destructor": [501, 515, 543, 553, 595, 668, 692, 776, 790, 791], "sensorread": 502, "chrono_liter": [502, 695, 767, 769, 770], "demologg": 502, "cerr": [502, 541, 620, 689, 759, 769, 942, 976, 979], "demovaluestor": 502, "_store": 502, "namedsensor": 502, "_logger": 502, "_value_stor": 502, "sensora": 502, "sensorb": 502, "sensorc": 502, "200000": [502, 943, 1142], "this_thread": [502, 695, 756, 767, 769], "sleep_for": [502, 695, 756, 767, 769], "12597": 502, "valuestor": 502, "2895": 502, "158243": 502, "cassert": [502, 644, 685, 688, 690, 696, 769], "boss": 502, "v3": 502, "abort": [502, 521, 522, 605, 733, 956], "mocklogg": 502, "lines_log": 502, "mockvaluestor": 502, "sensorreader_suit": 502, "141320": 502, "memcheck": [502, 605, 754], "detector": [502, 605, 754], "myobserv": 504, "socialdb_observ": [504, 532], "newcitizenobserv": [504, 532], "new_citizen": 504, "_new_citizen_svnr": 504, "new_citizen_ad": [504, 532], "observer_suit": 504, "register_on": 504, "register_new_citizen_notif": [504, 532], "register_mani": 504, "observer1": 504, "observer2": 504, "register_dupl": 504, "observeralreadyregist": [504, 532], "unregister_new_citizen_notif": [504, 532], "unregister_not_regist": 504, "observernotregist": [504, 532], "addict": [505, 877, 898, 1163, 1171], "bertrand": 505, "barbara": 505, "polish": 505, "be_sick": 508, "insur": [508, 521, 522, 523, 535, 536, 537], "teardown": [508, 555, 1033, 1171, 1181, 1183], "purest": 509, "lightest": 509, "pidcontrol": 509, "cluster_cxx_exercises_design_patterns_solut": [515, 543, 595, 791], "cxx_exercises_design_patterns_singleton_flexible_strict": [515, 543, 595, 791], "cxx_exercises_design_patterns_singleton_flex": [515, 543, 595, 791], "cxx_exercises_design_patterns_singleton_inflex": [515, 543, 595, 791], "cxx_exercises_design_patterns_command": [515, 543, 595, 791], "cxx_exercises_design_patterns_abstract_factori": [515, 543, 595, 791], "cxx_exercises_design_patterns_decor": [515, 543, 595, 791], "cxx_exercises_design_patterns_interpreter_bas": [515, 543, 595, 791], "cxx_exercises_design_patterns_proxy_remot": [515, 543, 595, 791], "cxx_exercises_design_patterns_adapt": [515, 543, 595, 791], "cxx_exercises_design_patterns_observ": [515, 543, 595, 791], "cxx_exercises_design_patterns_interpreter_and_adapt": [515, 543, 595, 791], "cxx_exercises_design_patterns_composit": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_proxy_round": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_singleton_flex": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_proxy_remot": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_abstract_factori": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_composit": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_interpreter_bas": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_adapt": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_singleton_inflex": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_observ": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_decor": [515, 543, 595, 791], "cxx_exercises_design_patterns_solutions_command": [515, 543, 595, 791], "cla": 516, "roundingsensor": [516, 520, 534], "r1": [516, 617, 708], "r2": [516, 617, 708], "r3": 516, "sensorvalueexpress": [516, 530], "e1_e2": 516, "e1_e2_e3": 516, "num_measur": 516, "v_avg": 516, "v_ass": 516, "combinatin": 517, "interpreter_suit": 517, "e_lh": 517, "e_rh": 517, "e_add": 517, "e_sub": 517, "mul": 517, "e_mul": 517, "e_div": 517, "arithemet": 517, "arith": [517, 589, 590, 626, 627, 628, 629, 634], "combined_arith": 517, "l7": 517, "a_7_plus_3": 517, "s_3_minus_1": 517, "variable_not_set": 517, "analogi": [517, 541, 944, 1006, 1046], "assignment_valu": 517, "variable_assign": 517, "ass": 517, "variable_used_as_express": 517, "ass_v1": 517, "ass_v2": 517, "reachabl": [519, 754, 942, 944], "remoteadapt": [519, 533], "response_promis": 519, "_adapt": 519, "_queue": [519, 767], "_thread": 519, "fulfil": [519, 554], "proxy_remote_suit": 519, "_c": 519, "remotesensoradapt": [519, 533], "remotesensor": [519, 533], "remote_sensor__is_a__sensor": 519, "somth": 519, "simplist": 519, "fullfil": 520, "proxy_round_suit": 520, "round_down": 520, "round_up": 520, "rouding_sensor__is_a__sensor": 520, "advis": [521, 1133], "hypothet": [521, 553, 554, 604, 935], "fee": 521, "socialinsur": [521, 522, 523, 537], "oegk": [521, 522], "startup": [521, 522, 523, 535, 870, 1006, 1012, 1044], "set_inst": [521, 522, 535], "make_uniqu": [521, 535, 787], "socinsur": [522, 536], "inisur": 522, "reimplement": [522, 691], "compiabl": [522, 536], "iface_inst": [522, 536], "svs_instanc": [522, 536], "oegk_inst": [522, 536], "another_inst": [522, 523, 536, 537], "1485": [522, 523], "unset": [522, 985], "sozialversicherung": [523, 537], "unrealist": 523, "adapte": 525, "_adapte": 525, "_svnr": 526, "_firstnam": [526, 656, 1056], "_lastnam": [526, 656, 1056], "_result": 526, "_command": 526, "get_if": [526, 781], "decoratedconstantsensor": 528, "sstream": [528, 533, 615, 617], "iomanip": 528, "ostringstream": [528, 533, 614, 615, 616, 617], "decoratedrandomsensor": 528, "_variabl": 531, "_lh": 531, "_rh": 531, "_context": 531, "_var": 531, "_exp": 531, "stdexcept": [531, 533, 535, 536, 537, 555, 789], "_new_citizen_observ": 532, "num_eras": 532, "_server": 533, "cstdio": 533, "num_item": 533, "sscanf": 533, "cmath": [534, 599, 607, 608, 616, 702, 718, 719, 720, 721, 758], "_instanc": [535, 536, 537], "_databas": [535, 536, 537], "0l": [535, 536], "cstdlib": [536, 555], "ssocinsur": 536, "toi": [538, 695, 1010], "millidegre": 538, "parameteriz": [539, 1139], "loop_and_measur": 539, "niter": 539, "counterpart": 540, "stod": 541, "uniform_real_distribut": [541, 549, 753], "default_random_engin": [541, 549, 753], "random_devic": [541, 549, 753], "_distribut": [541, 753], "_engin": [541, 753, 1159], "_y": [541, 599, 600, 602, 604, 606, 607, 608, 609, 611, 613, 623, 638, 702, 717, 719, 720, 721], "spit": [541, 1145], "cluster_cxx03_stl": [543, 560, 562, 595, 640, 646, 650, 658, 659, 660, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cluster_cxx03_stl_associative_contain": [543, 560, 562, 595, 650, 659, 663, 692, 791], "cluster_cxx03_stl_algorithm": [543, 560, 595, 640, 659, 662, 663, 692, 791], "cluster_cxx03_templ": [543, 560, 562, 595, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cluster_cxx03_functions_and_method": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 677, 678, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cluster_cxx03_except": [543, 560, 562, 595, 621, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cluster_cxx_exercises_stl": [543, 560, 562, 595, 791], "cluster_cxx_exercises_stl_sensor_repositori": [543, 560, 562, 595, 791], "cluster_cxx_exercises_fh_sensor_first_tri": [543, 595, 791], "cluster_linux_sysprog": [543, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 977, 989, 992, 995, 997], "cluster_linux_sysprog_fileio": [543, 595, 768, 790, 791, 868, 871, 872, 934, 963, 965, 973, 975, 989, 992, 995, 997], "cluster_linux_sysprog_bas": [543, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997], "cluster_linux_basics_permiss": [543, 595, 768, 790, 791, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 934, 963, 965, 973, 975, 989, 992, 995, 997], "cxx03_stl_basic": [543, 560, 562, 595, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_templates_class_templ": [543, 560, 562, 595, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_stl_vector_copy_etc": [543, 560, 595, 659, 663, 692, 791], "cxx03_stl_associative_containers_bas": [543, 560, 562, 595, 650, 659, 663, 692, 791], "cxx03_stl_associative_containers_map": [543, 560, 562, 595, 650, 659, 663, 692, 791], "cxx03_stl_algorithm_copi": [543, 560, 595, 640, 659, 663, 692, 791], "cxx03_stl_algorithm_find": [543, 560, 595, 640, 659, 663, 692, 791], "cxx03_data_encapsulation_initializer_list": [543, 546, 549, 595, 603, 692, 791], "cxx03_templates_function_templ": [543, 560, 562, 595, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_exceptions_try_catch": [543, 560, 562, 595, 621, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_functions_and_methods_const": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 683, 684, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cxx03_functions_and_methods_method": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cxx03_functions_and_methods_thi": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 683, 684, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cxx03_functions_and_methods_oper": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_functions_and_methods_stat": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx03_functions_and_methods_overload": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 677, 678, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cxx03_functions_and_methods_refer": [543, 560, 562, 595, 618, 621, 624, 640, 646, 650, 659, 662, 663, 680, 683, 684, 687, 688, 689, 690, 691, 692, 704, 735, 751, 760, 768, 788, 790, 791], "cxx03_exceptions_bas": [543, 560, 562, 595, 621, 624, 640, 646, 650, 659, 662, 663, 680, 687, 688, 689, 690, 691, 692, 791], "cxx_exercises_oo_shap": [543, 595, 791], "cxx_exercises_sensor_w1_factori": [543, 595, 791], "cxx_exercises_sensor_w1": [543, 595, 791], "cxx_exercises_sensor_const_nopoli": [543, 547, 549, 595, 791], "linux_sysprog_fileio_exercise_w1_sensor": [543, 595, 791, 934, 973, 975, 992], "cxx_exercises_sensor_mock_nopoli": [543, 544, 545, 546, 548, 595, 791], "cxx_exercises_sensor_random_nopoli": [543, 549, 595, 791], "cxx_exercises_switch_mock_nopoli": [543, 544, 545, 550, 595, 791], "cxx_exercises_sensor_avg_nopoli": [543, 546, 595, 791], "cxx_exercises_display_led_stripe_nopoli": [543, 544, 595, 791], "cxx_exercises_hysteresis_nopoli": [543, 545, 595, 791], "cxx_exercises_stl_filter_odd": [543, 560, 595, 791], "cxx_exercises_stl_uniq": [543, 560, 595, 791], "cxx_exercises_stl_vector": [543, 560, 595, 791], "cxx_exercises_stl_map": [543, 560, 562, 595, 791], "cxx_exercises_stl_algo": [543, 560, 595, 791], "cxx_exercises_stl_filter_gener": [543, 560, 595, 791], "cxx_exercises_stl_filter_greater_10": [543, 560, 595, 791], "cxx_exercises_stl_sensor_repository_size_const": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_insert_sunni": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_memory_leak": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_lookup_not_found": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_remove_sunni": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_remove_not_found": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_lookup_sunni": [543, 560, 562, 595, 791], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [543, 560, 562, 595, 791], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [543, 595, 791], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [543, 595, 791], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [543, 595, 791], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [543, 595, 791], "linux_sysprog_fileio_bas": [543, 595, 768, 790, 791, 868, 871, 872, 934, 963, 965, 973, 975, 989, 992, 995, 997], "linux_sysprog_basics_errorhandl": [543, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997], "linux_basics_permissions_bas": [543, 595, 768, 790, 791, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 934, 963, 965, 973, 975, 989, 992, 995, 997], "linux_sysprog_basics_groupnod": [543, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997], "linux_sysprog_basics_syscal": [543, 595, 768, 790, 791, 868, 871, 872, 934, 957, 963, 965, 973, 975, 989, 992, 995, 997], "linux_basics_shell_l": [543, 595, 768, 790, 791, 865, 866, 867, 868, 871, 872, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 902, 905, 906, 909, 910, 912, 913, 914, 915, 916, 918, 934, 963, 965, 973, 975, 989, 992, 995, 997], "mockswitch_nopoli": [544, 545, 550], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 544, "nopoli": [544, 545, 546, 547, 548, 549, 550], "display_led_stripe_nopoly_suit": 544, "somewhere_in_the_middl": 544, "sw0": 544, "sw1": 544, "sw2": 544, "sw3": 544, "sw4": 544, "sw5": 544, "sw6": 544, "sw7": 544, "display_led_stripe_nopoly_suite__below_rang": 544, "below_rang": 544, "display_led_stripe_nopoly_suite__above_rang": 544, "above_rang": 544, "display_led_stripe_nopoly_suite__mov": 544, "movement": [544, 935], "set_temperatur": [544, 545, 546, 548], "display_led_stripe_nopoly_suite__vari": 544, "variation_2_switch": 544, "variation_interval_not_from_0": 544, "thermostat": 545, "threshold": 545, "nop_when_within_rang": 545, "hysteresis_suit": 545, "hyst": 545, "falls_below_rang": 545, "rises_above_rang": 545, "rises_above_range_when_on": 545, "sensor_avg_nopoly_suit": 546, "sensor_const_nopoly_suit": 547, "subsequ": 548, "sensor_mock_nopoly_suit": 548, "sensor_random_suit": [549, 553, 554], "uniformli": 549, "rd": 549, "obtain": [549, 766, 1086], "rng": 549, "tailor": 549, "switch_mock_suit": 550, "initial_st": [550, 1182], "set_on_off": 550, "initial_failur": 551, "failit": 551, "point_suit": [551, 615], "ctor_and_gett": 551, "ctor_and_getters_const": 551, "default_ctor": [551, 614, 615, 616, 617, 771], "equal_method": 551, "p3": 551, "p4": [551, 898], "assert_fals": [551, 556, 561, 563, 568, 597, 614, 615, 616, 617, 789], "equal_method_const": 551, "operator_equ": 551, "operator_equals_const": 551, "move_method": 551, "operator_plus_equ": 551, "add_method": 551, "new_p": 551, "add_method_const": 551, "operator_plu": [551, 614, 615, 616], "operator_plus_const": 551, "radiu": 551, "circle_suit": 551, "ctor_and_getters_using_operator_equ": 551, "14159": 551, "53981634": 551, "area_const": 551, "square_suit": 551, "bottom_left": [551, 617], "side_length": 551, "shape_suit": 551, "circle_is_a_shap": 551, "square_is_a_shap": 551, "area_is_shape_functionality__circl": 551, "area_is_shape_functionality__squar": 551, "human": [552, 554, 759, 898, 920, 1012, 1057, 1144], "ineffici": [552, 675, 855, 974], "epath": 552, "bag_copy_suit": [552, 785], "find_by_int_ok": [552, 785, 786, 787], "find_by_int_nok": [552, 785, 786, 787], "remove_by_int_ok": [552, 785, 786, 787], "bag_unique_suit": [552, 787], "bag_shared_suit": [552, 786], "insert_const_ref": [552, 786], "insert_mov": [552, 786], "unrel": [553, 584, 593, 759, 776, 777, 781, 790, 791, 996, 1006, 1035, 1052, 1151], "tyo": 553, "sensor_const_suit": [553, 554], "is_a_sensor": [553, 554], "5731": 553, "aptli": 554, "23062": 554, "w1sensorfactori": 554, "find_by_address": 554, "sensor_w1_factory_suit": 554, "fstream": [554, 789], "tmpdir_fixtur": 554, "device_dir": 554, "create_directori": 554, "ofstream": [554, 789], "42459": 554, "temp_milli": [554, 555], "w1_fs_root": 554, "sensor_factori": 554, "0x02131d959eaa": 554, "assert_n": [554, 590, 613, 614, 749, 771, 786, 787], "horizon": 554, "0x012345678901": 554, "w1_sensor_suit": [554, 555], "test_read_sensor": [554, 555], "36700": 554, "basedir": 554, "0x2131d959eaa": 554, "dcmake_toolchain_fil": [555, 1013, 1027], "20687": 555, "write_temperatur": 555, "thaht": 555, "filename_pattern": 555, "xxxxxx": 555, "mkstemp": 555, "unlink": [555, 1004, 1006], "to_str": [555, 675], "off_t": [555, 964, 974, 979, 1005], "lseek": [555, 974, 979, 1005], "seek_set": [555, 964, 979, 1005], "nwritten": [555, 968, 969, 970, 971, 976, 979, 1005, 1009], "algo": [556, 589, 590, 625, 626], "copy_into_vector": 556, "stl_exercises_suit": [556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572], "required_cont": 556, "find_in_vector": 556, "my_vec": [556, 572], "wladimir": 556, "sort_in_plac": 556, "required_output": [556, 557, 558, 559, 571], "orig_input": [556, 557, 558, 559, 571], "alement": 557, "is_odd": 557, "filter_greater_10": 558, "filter_odd": 559, "map_insert": 561, "my_map": [561, 651, 652, 653, 654, 655], "map_insert_simpl": 561, "insert_check_dupl": 561, "map_insert_check_dupl": 561, "insert_remove_by_kei": 561, "map_insert_remove_by_kei": 561, "map_remove_by_kei": 561, "map_find": 561, "sensorrepositori": [562, 563, 564, 565, 566, 567, 568, 569, 570], "decript": 562, "sensor_repository_insert_dupl": 563, "add_sensor": [563, 564, 565, 566, 568, 569], "ofen": [563, 564, 565, 566, 568, 569], "weltraum": [563, 564, 565, 566, 568, 569], "mond": [563, 568], "sucess": 563, "sensor_repository_insert": 564, "sensor_repository_lookup_neg": 565, "get_sensor": [565, 566, 569], "sensor_repository_lookup_posit": 566, "complaint": 567, "ish": 567, "sensor_repository_remove_nonexist": 568, "remove_sensor": [568, 569], "sensor_repository_remov": 569, "sensor_repository_size_const": 570, "vector_append": 572, "vector_join": 572, "joined_cont": 572, "userdb_map": 573, "userdb_vector": 573, "dan": 573, "sak": 573, "cppcon": [573, 700, 702, 703, 716, 723, 741, 752, 773, 776], "transcrib": 573, "mallocfre": 578, "arrayofinteg": 578, "memoryleak": 578, "arrayboundswrit": 578, "newdelet": 578, "singleinteg": 578, "deletemismatch": 578, "thing1": [580, 581], "thing2": [580, 581], "global_str": 581, "__have_thing_h__": 581, "_content": 581, "denstruct": 581, "destruct": [581, 602, 672, 703, 753, 880], "essenc": [581, 1177], "collaps": 584, "thoroughli": [584, 942], "_mem": [587, 733], "determinist": [587, 752, 766, 1033, 1084], "maybeown": 587, "pointerarithmet": 590, "bugp": 590, "105ff": 590, "num_el": 590, "another_arrai": 590, "yet_another_arrai": 590, "108ff": 590, "basics_cxx03": 590, "basics_cxx11": 590, "cbegin": [590, 643, 662, 699, 710], "my_copi": 590, "naivecopi": 590, "cend": [590, 643, 662, 699], "algocopi": 590, "backinsert": 590, "back_insert_iter": [590, 631], "nah": [590, 1179], "insertfind": 590, "make_pair": [590, 653, 656, 744], "erasebyposit": 590, "erasebykei": 590, "domin": 596, "1985": 596, "2003": [596, 1190], "point_c_suit": [597, 599], "struct_initi": 597, "point_init_default": 597, "c_default_constructor_init": 597, "point_create_default": 597, "c_default_constructor_cr": 597, "point_creat": [597, 599], "c_constructor": [597, 599], "eq": [597, 613, 615, 617], "point_equ": 597, "point_not_equ": 597, "eq_n": 597, "point_mov": [597, 599, 607, 609], "point_add": 597, "point_sub": 597, "add_sub": 597, "point_dist": 597, "point_ab": [597, 599], "hyp": [597, 599, 607], "unwant": [597, 648, 744, 816, 1035, 1056, 1080], "cpp_copy_suit": 598, "generated_copy_ctor": 598, "copy1": [598, 754], "copy2": [598, 754], "copy3": 598, "manual_copy_suit": 598, "copy_ctor": [598, 753], "assignment_oper": 598, "earlier": 599, "point_h": [599, 607, 608], "point_cpp_suit": 599, "constructor_coordin": 599, "inaccessibil": 599, "move_op_pluseq": 599, "whenev": [600, 607, 617, 703], "sth": 601, "dirty_stack": 601, "use_uniniti": 601, "onward": [601, 605, 612], "nw": 602, "memberwis": 602, "_c_str": [602, 605, 706], "cxx03_data_encapsulation_copy_bas": [603, 692, 791], "cxx03_data_encapsulation_object_copi": [603, 692, 704, 735, 751, 760, 768, 788, 790, 791], "string_h": [605, 706], "cstring": [605, 706, 707, 740], "tcach": [605, 733], "221601": 605, "julian": [605, 754], "seward": [605, 754], "libvex": [605, 754], "realloc": [605, 648], "0x484465b": 605, "1103": 605, "0x401210": 605, "0x401194": 605, "0x4dc8c80": 605, "0x401188": 605, "0x484222f": 605, "0x4011c5": 605, "0x40116f": 605, "freed": [605, 797, 967, 1033], "destroi": [605, 667, 689, 708, 725, 740, 755, 766, 828], "221807": 605, "twostr": 605, "twotwostr": 605, "s21": 605, "s22": 605, "segfault": [605, 852, 1010], "paraamet": 606, "__pretty_function__": 606, "0000000000401176": 606, "_z1fi": 606, "00000000004011a0": 606, "_z1fpc": 606, "demangl": 606, "anywher": [607, 1031], "fab": [607, 608], "distance_origin": [607, 608, 758], "hid": 607, "standardes": 607, "d_orig": 608, "fpermiss": [608, 745], "arrog": 608, "goodi": [608, 936], "pascal": 610, "uninitil": 610, "pass_by_copi": 610, "references_suit": 610, "voila": [610, 942, 1000, 1013, 1014, 1024, 1055], "tediou": [610, 961, 1014, 1088], "pass_by_point": 610, "pass_by_refer": 610, "pass_by_const_point": 610, "const_point": 610, "pass_by_const_refer": 610, "const_refer": 610, "pass_by_copy_expens": 610, "copy_expens": 610, "pass_by_const_reference_cheap": 610, "const_reference_cheap": 610, "addend": [611, 738, 758], "straightforwardli": [611, 1094], "add_point": 611, "static_suit": 611, "global_funct": 611, "static_method": 611, "bss": 612, "definition1": 612, "definition2": 612, "forbid": 612, "trickeri": 612, "points_equ": 613, "oddli": 613, "operators_suit": 613, "equals_glob": 613, "difficulti": 613, "equals_object": 613, "vector_addition_glob": 613, "vector_addition_object": 613, "point_plus_equ": 613, "combo": [614, 616], "cuboid_suit": 614, "front_bottom_left": 614, "point_whl_ctor": 614, "operator_eq_n": [614, 615, 616, 617], "operator_pluseq": [614, 615, 616], "operator_minuseq": [614, 616], "operator_minu": [614, 616], "operator_ostream": [614, 615, 616, 617], "buf": [614, 615, 616, 617, 956, 964, 974], "entirei": [614, 616, 617], "starting_point": 615, "implementation_in_cpp_fil": 615, "rectangle_suit": [615, 617], "pluseq": 615, "operator_unary_minu": [615, 616], "minus_p": [615, 616], "point3d_suit": 616, "coordinates_ctor": 616, "071067812": 616, "69041576": 616, "top_right": 617, "top_left": 617, "bottom_right": 617, "rational": [617, 651], "operator_plus_equal_vec": 617, "plus_vec": 617, "cxx03_functions_and_methods_exercise_class_point": [618, 692, 791], "cxx03_functions_and_methods_exercise_class_point3d": [618, 692, 791], "cxx03_functions_and_methods_exercise_class_cuboid": [618, 692, 791], "cxx03_functions_and_methods_exercise_class_rectangl": [618, 692, 791], "cxx03_functions_and_methods_static_member_vari": [618, 692, 791], "dothat": [619, 620], "dothi": [619, 620], "dothos": [619, 620], "dammit": [619, 620, 699], "thisexcept": 620, "thatexcept": 620, "thrown": [620, 1009], "myexcept": 620, "error_detect": 620, "granular": [620, 809, 996], "typenam": [622, 623, 705, 712, 713, 714, 715, 717, 719, 720, 721, 726, 747, 753, 757, 767, 769], "a_begin": [626, 628], "a_end": [626, 628], "src_begin": [626, 630], "src_end": [626, 630], "dst_begin": [626, 630], "decai": 627, "zeroth": 627, "warrai": 629, "unflex": 631, "shrink_to_fit": 631, "prealloc": [631, 632], "wnonnul": 632, "gool": [633, 700], "cplusplu": [635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 656], "int_arrai": [635, 637, 641, 644], "binarili": 635, "is_el": 635, "original_begin": 636, "original_end": 636, "copy_run": 636, "original_run": 636, "int_array_c": 637, "match_666": 638, "match_42": 638, "x_equals_666": 638, "x_equals_4": 638, "x_equal": 638, "_criterion": 638, "yesno": [638, 865, 866], "output_stern": 639, "output_bindestrich": 639, "output_with_prefix": 639, "_prefix": 639, "cxx03_stl_algorithm_revers": [640, 659, 662, 663, 692, 791], "cxx03_stl_algorithm_binary_search": [640, 659, 663, 692, 791], "cxx03_stl_algorithm_sort": [640, 659, 663, 692, 791], "cxx03_stl_algorithm_for_each": [640, 659, 663, 692, 791], "cxx03_stl_algorithm_reverse_copi": [640, 659, 662, 663, 692, 791], "cxx03_stl_algorithm_find_if": [640, 659, 663, 692, 791], "cxx03_stl_algorithm_lower_bound": [640, 659, 663, 692, 791], "reversed_": [643, 662], "less_revers": 644, "greater_than": 644, "cluster_cxx03_stl_sequential_contain": [646, 659, 663, 692, 791], "cxx03_stl_sequential_containers_bas": [646, 659, 663, 692, 791], "cxx03_stl_sequential_containers_vector": [646, 659, 663, 692, 791], "cxx03_stl_sequential_containers_list": [646, 659, 663, 692, 791], "liek": 648, "logarithm": 648, "mein_int_arrai": 648, "insert_po": 648, "new_elems_as_vector": 648, "elems_to_insert": 648, "cxx03_stl_associative_containers_multimap": [650, 659, 663, 692, 791], "realiz": [651, 1084], "parameter": [651, 757, 762, 1020, 1034], "keytyp": [651, 695], "valuetyp": [651, 695], "some_map": 651, "key_typ": [651, 652], "mapped_typ": [651, 652], "value_typ": [651, 652], "emplac": 651, "collis": 651, "zweiundvierzig": 651, "out_of_rang": [651, 655], "mymap": [652, 653, 654, 655], "sechshundersechsundsechzig": 652, "kv": 652, "pre11": [652, 653], "einundfuenfzig": [652, 653, 654, 655], "vierundfuenfzig": [652, 653, 654, 655], "dreihundertsechsundvierzig": [652, 653, 654, 655], "tausendein": [652, 653, 654, 655], "tausendzwei": [652, 653, 654, 655], "retval_7": 653, "retval_2": 653, "n_remov": 654, "found_value_1001": 655, "found_value_666": 655, "found_valu": 655, "joerg_svnr": 656, "caro_svnr": 656, "johanna_svnr": 656, "philipp_svnr": 656, "datenzwilling_von_joerg": 656, "faschingzwil": 656, "meine_map": 656, "datenzwil": 656, "equal_rang": 656, "found_rang": 656, "svnr_notexist": 656, "1234567": 656, "memory_resourc": 657, "cluster_cxx03_stl_alloc": [658, 659, 663, 692, 791], "cxx03_stl_allocator_bas": [658, 659, 663, 692, 791], "cluster_cxx03_stl_exercis": [659, 660, 662, 663, 692, 791], "cluster_cxx03_stl_exercises_reverse_str": [659, 660, 662, 663, 692, 791], "cxx03_stl_exercises_reverse_string_solut": [659, 662, 663, 692, 791], "cxx03_stl_exercises_reverse_string_exercis": [659, 660, 662, 663, 692, 791], "auto_ptr": [664, 703, 1190], "cluster_cxx03_dynamic_memori": [665, 692, 791], "cxx03_dynamic_memory_todo": [665, 692, 791], "inher": [666, 667, 670, 672, 673, 998, 1086], "novirtu": [666, 667, 673], "mantra": [667, 863], "spoiler": [667, 1044], "cxx03_inheritance_oo_private_protect": [668, 692, 791], "derived1": 670, "derived2": 670, "countless": 670, "derived3": 670, "unimpl": [670, 1048], "polymorp": [672, 775], "strictli": [672, 942, 943, 1044], "indirect": [673, 759, 875, 1029], "cluster_cxx03_standard_library_miscellanea": [674, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 791], "cxx03_standard_library_miscellanea_str": [674, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 791], "string_suit": 675, "another_hello": 675, "greeting1": 675, "greeting2": 675, "convert_to_signed_integ": 675, "stol": 675, "stoll": 675, "numstr": 675, "stoi": [675, 976, 979], "convert_to_unsigned_integ": 675, "stoull": 675, "stoui": 675, "stoul": 675, "convert_from_someth": 675, "basic_str": [675, 757, 789], "i_str": 675, "ui_str": 675, "666000": 675, "sprintf": [675, 976, 979, 1009, 1010], "print_char": 676, "cluster_cxx03_exercises_misc": [676, 677, 678, 679, 692, 791], "cxx03_exercises_misc_american_flag": [676, 678, 692, 791], "cxx03_exercises_misc_fh_moodle_quiz": [677, 678, 692, 791], "cxx03_exercises_misc_sum_integers_from_stdin": [678, 679, 692, 791], "ctrl": [679, 1010, 1062], "cluster_cxx03_exercises_userdb": [680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_userdb_search_notfound_except": [680, 689, 692, 791], "cxx03_exercises_userdb_userdb_search_find_if": [680, 688, 689, 692, 791], "cxx03_exercises_userdb_user_default_ctor": [680, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_user_const": [680, 683, 684, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_userdb_search": [680, 688, 689, 690, 692, 791], "cxx03_exercises_userdb_userdb_insert": [680, 687, 688, 689, 690, 692, 791], "cxx03_exercises_userdb_user_simple_method": [680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_user_const_memb": [680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_userdb_vector_bas": [680, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_user_access_method": [680, 681, 683, 684, 687, 688, 689, 690, 691, 692, 791], "cxx03_exercises_userdb_user_ctor": [680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 791], "architecton": 682, "celebr": 685, "trittsich": [685, 686], "age_by_n_year": 685, "user_init": 686, "userdb_insert": 687, "doesnotexist": [688, 690], "isvalid": [688, 689, 690], "unnatur": 689, "_user": [689, 840], "thereaft": 689, "wrinkl": 689, "usernotfound": 689, "unreach": [689, 953], "userdb_search_by_lastnam": 690, "undetect": 690, "userdb_init": 691, "cluster_cxx11": [693, 697, 704, 711, 722, 735, 736, 746, 751, 760, 768, 772, 776, 788, 790, 791], "cluster_cxx11_introduct": [693, 697, 735, 788, 790, 791], "cxx11_introduction_histori": [693, 697, 735, 788, 790, 791], "cxx11_introduction_overview_livehack": [693, 790, 791], "ugliest": 694, "todo_list": 695, "tdl": 695, "desc": 695, "key_value_pair": 695, "up_1_to_10": 695, "down_1000_to_980": 695, "todo_item": 695, "make_shar": [695, 756, 786], "todolist": 695, "nocopi": 695, "add_item": 695, "_list": 695, "evangelist": 695, "wchar_t": 696, "cluster_cxx11_new_language_featur": [697, 704, 711, 722, 735, 736, 746, 751, 760, 768, 788, 790, 791], "cluster_cxx11_new_language_features_brace_initi": [697, 735, 788, 790, 791], "cxx11_new_language_features_strongly_typed_enum": [697, 735, 788, 790, 791], "cxx11_new_language_features_auto": [697, 735, 788, 790, 791], "cxx11_new_language_features_brace_initialization_mess": [697, 735, 790, 791], "cxx11_new_language_features_brace_initialization_implementor_view": [697, 735, 790, 791], "cxx11_new_language_features_brace_initialization_intro": [697, 735, 788, 790, 791], "pointcloud": [698, 700], "_point": 698, "data_": [699, 701], "memoriz": 699, "brace_initialization_suit": 700, "explicit_ctor_cal": 700, "initlist_ctor_cal": 700, "explicit_ctor": 700, "initlist_ctor": 700, "disabigu": 700, "nightmar": [700, 703, 1029], "size_": 701, "constexpr_suit": 702, "basic_const_is_constexpr": 702, "constexpr_function_request": 702, "constexpr_function_not_request": 702, "constexpr_recursive_funct": 702, "6765": 702, "constexpr_ctor": 702, "schurr": 702, "olsen": [703, 752], "nicolai": [703, 745, 748], "josutti": [703, 745, 748], "smartptr": [704, 735, 753, 754, 790, 791], "cluster_cxx11_new_language_features_move_pf": [704, 735, 751, 760, 768, 788, 790, 791], "cluster_cxx11_smart_point": [704, 735, 751, 760, 768, 788, 790, 791], "cxx11_perfect_forward": [704, 735, 790, 791], "cxx11_new_language_features_move_pf_overview": [704, 735, 751, 760, 768, 788, 790, 791], "cxx11_new_language_features_miscellan": [704, 735, 751, 760, 768, 788, 790, 791], "cxx11_new_language_features_move_pf_afterword": [704, 735, 790, 791], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [704, 735, 790, 791], "cxx11_new_language_features_move_pf_livehack_string_mov": [704, 735, 790, 791], "cxx11_smart_pointers_unique_ptr": [704, 735, 751, 760, 768, 788, 790, 791], "cxx11_smart_pointers_introduct": [704, 735, 751, 760, 768, 788, 790, 791], "_p": [705, 753], "handwritten_suit": [705, 753], "explicit_mov": [705, 753], "assert_double_eq": [705, 753, 754], "create_constant_sensor": [705, 755], "prove": [705, 877], "return_by_copi": 705, "another_sensor": 705, "assigne": 705, "dubiou": 705, "bugfre": 706, "string_move_suit": 706, "make_a_string_from": 706, "ret_": 706, "move_return": 706, "move_assign": 706, "assig": 706, "person_h": 707, "person_suit": 707, "contructor": 707, "outliv": [708, 1031], "rvr": 708, "ado": [710, 981, 1146], "mytyp": 710, "spellabl": 710, "0x7ffcd604846c": 710, "0x7ffcd6048468": 710, "iref": 710, "0x7ffffefe2b54": 710, "0x7ffffefe2b50": 710, "0x7ffc59ebd7bc": 710, "ciref": 710, "0x7ffc23e46284": 710, "0x7ffe4a148064": 710, "0x7ffc528e013c": 710, "cluster_cxx11_new_language_features_concept": [711, 735, 790, 791], "cxx11_new_language_features_concepts_intro": [711, 735, 790, 791], "cxx11_new_language_features_concepts_writing_concept": [711, 735, 790, 791], "cxx11_new_language_features_concepts_link": [711, 735, 790, 791], "conceptless": 712, "4ul": [712, 713], "4l": [712, 713], "satisfact": 712, "is_integral_v": 712, "_tp": [712, 745, 755], "hendrik": 716, "niemey": 716, "hypotenus": [717, 718, 719, 720, 721], "sumsq": [717, 718, 719, 720, 721], "point2d": [717, 719, 720, 721], "dozen": 717, "ruin": 717, "5l": 717, "same_a": 717, "commone_reference_with": 717, "common_reference_with": [717, 721], "has_siz": [720, 721], "index_returns_doubl": 721, "cluster_cxx11_new_language_features_coroutin": [722, 735, 790, 791], "cxx11_new_language_features_coroutines_intro": [722, 735, 790, 791], "stackless": 723, "asio": 723, "co_return": [723, 727, 728, 729, 730, 731], "hello_inst": [723, 727, 728, 729, 730, 731], "promise_typ": [723, 725, 726, 728, 729, 730, 731], "get_return_object": [723, 725, 726, 728, 729, 730, 731], "suspend_alwai": [723, 725, 726, 728, 729, 730, 731], "initial_suspend": [723, 725, 726, 728, 729, 730, 731], "final_suspend": [723, 725, 726, 728, 729, 730, 731], "return_void": [723, 726, 728, 729, 730, 731], "unhandled_except": [723, 725, 726, 728, 729, 730, 731], "suspend_nev": [723, 725, 726, 730], "coroutine_handl": [723, 725, 726, 729, 730, 731], "from_promis": [723, 725, 726, 729, 730, 731], "_coro": [723, 725], "yield_valu": [723, 725, 726, 729, 730, 731], "sentinel": [723, 726, 730, 731, 745], "_promis": [723, 726, 729, 730, 731], "glue": 723, "deciph": 723, "diagrammat": 723, "wei": 723, "co_yield": [724, 725, 726, 727, 729, 730, 731], "_elem": 725, "ed": [726, 729, 730, 731, 927, 964], "lackingdefaultconstructor": 732, "ldc": 732, "hasdefaultconstructor": 732, "hmpf": 732, "hdc": 732, "ownsmemori": 733, "om_copi": 733, "incontin": 734, "leaf": [734, 917], "method1": 734, "method2": 734, "cluster_cxx11_new_language_features_rang": [735, 746, 790, 791], "cluster_cxx11_new_language_features_lambda": [735, 736, 790, 791], "cxx11_smart_pointers_introduction_livehack": [735, 751, 790, 791], "cxx11_new_language_features_overrid": [735, 790, 791], "cxx11_new_language_features_delegating_ctor": [735, 790, 791], "cxx11_new_language_features_range_based_for": [735, 788, 790, 791], "cxx11_new_language_features_structured_bind": [735, 790, 791], "cxx11_new_language_features_default": [735, 790, 791], "cxx11_new_language_features_delet": [735, 790, 791], "cxx11_new_language_features_range_based_for_map": [735, 790, 791], "cxx11_new_language_features_modul": [735, 790, 791], "cxx11_new_language_features_fin": [735, 790, 791], "cxx11_new_language_features_livehack_smartptr_mov": [735, 790, 791], "cxx11_new_language_features_constexpr": [735, 790, 791], "cxx11_new_language_features_ranges_intro": [735, 746, 790, 791], "cxx11_new_language_features_ranges_good_bad": [735, 746, 790, 791], "cxx11_new_language_features_ranges_link": [735, 746, 790, 791], "cxx11_new_language_features_lambda_lambda": [735, 736, 790, 791], "cxx11_new_language_features_lambda_lambda_is_functor": [735, 736, 790, 791], "cxx11_new_language_features_lambda_lambda_captur": [735, 736, 790, 791], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [735, 736, 790, 791], "elsewher": [737, 838, 1038], "lamda": 737, "print_messag": [737, 739, 740], "constantli": [738, 855, 997], "mere": 738, "catur": 738, "akin": 738, "lambda_capture_suit": 738, "explicit_by_copi": 738, "lambda_capure_suit": 738, "explicit_by_refer": 738, "dubio": 738, "explicit_mix": 738, "initialized_captur": 738, "all_by_refer": 738, "all_by_copi": 738, "all_by_copy_except": 738, "this_captur": 738, "_i": [738, 758], "add_to_yourself_and_guarantee_programmers_job_secur": 738, "print_message_func": [739, 740], "_messag": [739, 740], "piti": 740, "mpp": 741, "precompil": [741, 838, 1012], "speedup": 741, "rei": 741, "bori": 741, "kolpackov": 741, "abandon": 741, "inde": 743, "range_based_for_suit": 744, "map_pre_11": 744, "map_bas": 744, "map_basic_const_auto_refer": 744, "ific": [744, 749], "map_unpack_copi": 744, "map_unpack_refer": 744, "map_unpack_const_refer": 744, "min_el": 745, "forward_rang": [745, 747], "drop_view": 745, "filter_view": 745, "ref_view": 745, "ranges_util": 745, "view_interfac": 745, "_deriv": 745, "sized_sentinel_for": 745, "decltyp": 745, "__cust": 745, "declval": 745, "__cust_access": 745, "__begin": 745, "_s_size": 745, "_m_deriv": 745, "forward_iter": 745, "coll": 745, "2nd": [745, 1179], "__cxx11": [745, 757, 789], "_vp": 745, "__simple_view": 745, "random_access_rang": [745, 747], "sized_rang": 745, "pretend": 745, "comitte": [745, 748], "lazili": 747, "first_two_drop": 747, "first_two_dropped_next_two_taken": 747, "oldstyl": 747, "inspir": 747, "refin": 747, "input_rang": 747, "bidirectional_rang": 747, "backward": [747, 813, 898, 930, 935, 1061, 1166], "contiguous_rang": 747, "tristan": 748, "brindl": 748, "cppnorth": 748, "l0bhzp6hmdm": 748, "nico": 748, "accu": 748, "rust": [748, 1012], "parrai": 749, "decompos": 749, "structured_binding_suit": 749, "struct_copi": 749, "struct_refer": 749, "struct_const_refer": 749, "tuple_copi": 749, "make_tupl": 749, "affect": 749, "tuple_refer": 749, "tuple_const_refer": 749, "array_copi": 749, "array_refer": 749, "array_const_refer": 749, "suspici": 749, "designwis": 750, "uptr": 750, "cxx11_smart_pointers_closing_word": [751, 760, 768, 790, 791], "cxx11_smart_pointers_shared_ptr": [751, 760, 768, 788, 790, 791], "cxx11_smart_pointers_weak_ptr": [751, 788, 790, 791], "myclass": [752, 754], "unwind": 752, "yoky6hzlkx": 752, "steal": [753, 998], "cxx11_unique_ptr_sensors_h": 753, "_temp": 753, "basic_const": 753, "raw_": 753, "raw_s_ref": 753, "copy_ctor_bad": 753, "assignment_operator_bad": 753, "gtest_filt": [753, 754, 1177], "reveal": [753, 1031], "vtabl": 753, "autoptr": 753, "copy_ctor_good_autoptr_styl": 753, "unexpectedli": 753, "assignment_operator_good_autoptr_styl": 753, "destiat": 753, "excus": 754, "shared_ptr_suit": 754, "rs1": [754, 755], "rs2": [754, 755], "rand1": [754, 755, 756], "rand2": [754, 755, 756], "cann": 754, "basic_make_shar": 754, "set_refer": 754, "_ref": 754, "cyclic_refer": 754, "303549": 754, "unique_ptr_suit": 755, "threw": 755, "ownership_error": 755, "cxx11": [755, 789], "unique_ptr_suite_ownership_error_test": 755, "testbodi": 755, "_dp": 755, "default_delet": 755, "verbose_ctor": 755, "make_unique_auto": 755, "tranfer": 755, "create_random_sensor": 755, "implicit_ownership_transf": 755, "holdsasensor": 755, "taking_ownership_in_own_cod": 755, "sompil": 755, "raw1": 755, "tie": 756, "unti": 756, "weak_ptr_suit": 756, "borrowed_sensor": 756, "another_refer": 756, "sensor_ref": 756, "measurement_thread": 756, "rvref": 757, "lo_funct": 757, "adventur": 757, "grimm": 757, "jaud": 757, "factset": 757, "570f242261f8": 757, "suffer": [758, 943], "origin_dist": 758, "criteria": [758, 882, 1166], "predic": 758, "void_funct": 758, "bind_suit": 758, "plain_void_funct": 758, "one_parameter_funct": 758, "plain_one_parameter_funct": 758, "minus_hardcod": 758, "_1_minus_2": 758, "minus_swap_paramet": 758, "second_minus_first": 758, "_2": [758, 759], "minus_hardcode_first_paramet": 758, "_42_minus_param": 758, "funcfunc": 758, "tradeoff": [758, 843], "oneimplement": 759, "anotherimplement": 759, "do_much_work": 759, "c_using_on": 759, "c_using_anoth": 759, "explanatori": 759, "trampolin": 759, "rtti": 759, "pod": 759, "metaphys": 759, "ostreamlogg": 759, "databaselogg": 759, "logfunc_t": 759, "funcptrlogg": 759, "somebusinessclasswithneedforlog": 759, "successfulli": [759, 858, 873, 1165, 1172], "do_stupid_log": 759, "ostream_logg": 759, "database_logg": 759, "funcptr_logg": 759, "busy_logging_to_ostream": 759, "busy_logging_to_databas": 759, "busy_logging_to_funcptr": 759, "foo_func": 759, "explos": 759, "cluster_cxx11_functions_funct": [760, 768, 790, 791], "cxx11_functions_functions_bind": [760, 768, 790, 791], "cxx11_functions_functions_funct": [760, 768, 790, 791], "msdn": 761, "devil": 761, "singlethread": 761, "god": 761, "paralleliz": 762, "cancel": [762, 988], "interlockedincr": 764, "mutual": [765, 1046], "try_lock": 765, "try_lock_for": 765, "try_lock_until": 765, "time_point": [765, 770], "do_something_errorpron": 766, "do_more_of_it": 766, "wake": [767, 820, 830, 961, 985, 994, 1000], "waiter": [767, 830, 855, 985], "stop_wait": 767, "wait_for": [767, 769], "wait_until": [767, 769], "notify_on": 767, "notify_al": 767, "thunder": 767, "herd": 767, "condvar": 767, "threadsafequeu": 767, "maxelem": 767, "_maxelem": 767, "dur": [767, 769], "scoped_lock": [767, 769], "_lock": [767, 769], "pop_front": 767, "2m": [767, 769, 935], "1m": [767, 863, 935], "consumer1": 767, "consumer2": 767, "pthread_cond_init": [767, 985], "_not_empti": 767, "_not_ful": 767, "pthread_cond_wait": [767, 985], "pthread_cond_sign": [767, 985], "pthread_cond_t": [767, 985], "unique_lock": 767, "cluster_cxx11_multithread": [768, 790, 791], "cluster_linux_sysprog_posix_thread": [768, 790, 791, 934, 975, 989, 995], "cluster_linux_sysprog_schedul": [768, 790, 791, 934, 975, 989, 995, 997], "cluster_linux_sysprog_blocking_io": [768, 790, 791, 868, 871, 872, 934, 963, 975, 989, 995, 997], "cxx11_multithreading_condition_vari": [768, 790, 791], "cxx11_multithreading_promise_futur": [768, 790, 791], "cxx11_multithreading_mutex": [768, 790, 791], "linux_sysprog_posix_threads_condition_vari": [768, 790, 791, 934, 975, 989], "cxx11_multithreading_thread": [768, 790, 791], "cxx11_multithreading_introduct": [768, 790, 791], "linux_sysprog_posix_threads_lifecycl": [768, 790, 791, 934, 975, 989, 995], "cxx11_multithreading_atom": [768, 790, 791], "cxx11_multithreading_race_condit": [768, 790, 791], "linux_sysprog_posix_threads_mutex": [768, 790, 791, 934, 975, 989, 995], "cxx11_multithreading_chrono": [768, 790, 791], "cxx11_multithreading_scoped_lock": [768, 790, 791], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [768, 790, 791, 934, 975, 989, 995], "linux_sysprog_posix_threads_exercise_mutex": [768, 790, 791, 934, 975, 989], "linux_sysprog_posix_threads_bas": [768, 790, 791, 934, 975, 989, 995], "linux_sysprog_scheduling_bas": [768, 790, 791, 934, 975, 989, 995, 997], "linux_sysprog_blocking_io_blocking_io": [768, 790, 791, 868, 871, 872, 934, 963, 975, 989, 995, 997], "get_futur": 769, "set_except": 769, "exception_ptr": 769, "shared_futur": 769, "uncoordin": 769, "ten_million_years_": 769, "answer_poll_interval_m": 769, "answer_valid": 769, "chew_answ": 769, "timespec": [769, 985, 996, 1006], "reaction": [769, 953, 1035], "answer_computation_tim": 769, "answer_poll_interv": 769, "ten_million_year": 769, "lockguard": 769, "_answer_valid": 769, "_answer": 769, "_data": [769, 1026], "binary_semaphor": 769, "__cplusplu": 769, "202001l": 769, "_notifi": 769, "answer_promis": 769, "answer_futur": 769, "make_exception_ptr": 769, "epoch": [770, 1005], "time_t": 770, "notion": 770, "system_clock": 770, "monoton": [770, 846, 848], "ntp": 770, "steady_clock": 770, "timepoint": 770, "steadili": 770, "high_resolution_clock": 770, "brand": 770, "spent_milli": 770, "duration_cast": 770, "variant_suit": 771, "holds_altern": 771, "converting_ctor": 771, "bad_access": 771, "visit": [771, 776, 780, 790, 791], "int_seen": 771, "float_seen": 771, "charp": 771, "string_charp": 771, "no_default_ctor": 771, "cluster_cxx11_miscellan": [772, 776, 790, 791], "cxx11_miscellaneous_vari": [772, 776, 790, 791], "timur": 773, "doumler": 773, "aligned_alloc": 774, "alignof": 774, "pmr": 774, "heis": [774, 778], "_temperatur": [775, 777, 779, 781], "klau": 776, "iglberg": 776, "steve": 776, "bush": 776, "bielak": 776, "gopel": 776, "cluster_cxx11_embedded_problem": [776, 790, 791], "cxx11_embedded_problems_classic_virtu": [776, 790, 791], "cxx11_embedded_problems_variant_manual_if": [776, 790, 791], "cxx11_embedded_problems_unrel": [776, 790, 791], "cxx11_embedded_problems_related_no_virtu": [776, 790, 791], "cxx11_embedded_problems_variant_manual_visit": [776, 790, 791], "cxx11_embedded_problems_variant_automatic_visit": [776, 790, 791], "static_cast": [777, 789], "derivedtyp": 777, "sensorptr": 779, "get_temperature_visitor": [780, 782], "crtp": 784, "bagcopi": 785, "find_by_int": [785, 786, 787], "remove_by_int": [785, 786, 787], "nremov": [785, 786, 787], "bagshar": 786, "weakref": 786, "sharedref": 786, "baguniqu": 787, "constbag": 787, "cluster_cxx11_exercis": [788, 790, 791], "cxx11_exercises_bag_shar": [788, 790, 791], "cxx11_exercises_bag_uniqu": [788, 790, 791], "cxx11_exercises_bag_copi": [788, 790, 791], "withing": 789, "filesystem_suit": 789, "cd_to_tmpdir_fixtur": 789, "path_compose_compar": 789, "path_compose_compare_2": 789, "is_absolut": 789, "is_rel": 789, "path_abs_rel": 789, "abspath": 789, "relpath": 789, "parent_path": 789, "remove_filenam": 789, "replace_filenam": 789, "replace_extens": 789, "path_component_access": 789, "filename_part": 789, "dir_part": 789, "path_iter": 789, "current_directori": 789, "cwd_chdir": 789, "current_path": 789, "create_directory_error": 789, "filesystem_error": 789, "char_trait": 789, "char_typ": 789, "_chart": 789, "_trait": 789, "_alloc": 789, "_s_copi": 789, "size_typ": 789, "_m_replac": 789, "tcc": 789, "2171": 789, "canonicalizeforstdlibvers": 789, "__builtin_memcpi": 789, "9223372036854775810": 789, "9223372036854775813": 789, "__s1": 789, "__s2": 789, "create_directory_singl": 789, "is_regular_fil": 789, "create_directory_multipl": 789, "is_directori": 789, "is_block_fil": 789, "is_character_fil": 789, "is_empti": 789, "is_fifo": 789, "is_oth": 789, "is_socket": 789, "is_symlink": 789, "greatest": 789, "2691": [789, 894], "nov": [789, 828, 894, 920, 942, 1026, 1062, 1092], "inod": [789, 797, 804], "919153": 789, "0644": [789, 883, 897], "system_u": 789, "object_r": 789, "passwd_file_t": 789, "s0": 789, "111282886": 789, "0100": 789, "737858445": 789, "743858359": 789, "file_s": 789, "hard_link_count": 789, "last_write_tim": 789, "ext4": [789, 838], "btrf": 789, "ntf": 789, "directory_iter": 789, "dirit": 789, "recursive_directory_iter": 789, "cxx11_filesystem": [790, 791], "cluster_linux_sysprog_process": [791, 934, 975], "cluster_linux_sysprog_intro_hw": [791, 934, 975, 977], "cluster_linux_hardwar": [791, 934, 940, 941], "cluster_linux_hardware_can": [791, 934, 940, 941], "cluster_linux_toolchain_exercis": [791, 934, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_linux_toolchain_raspi": [791, 934, 1017, 1019, 1022, 1023], "cluster_linux_toolchain_cross": [791, 934, 1016, 1017, 1019, 1021, 1022, 1023], "cluster_linux_basics_permissions_exercis": [791, 868, 884, 887, 888, 889, 890, 891, 892, 893, 934], "cluster_linux_basics_archiving_compress": [791, 861, 868, 934, 1022, 1023], "cluster_linux_basics_shell_exercis": [791, 865, 866, 867, 868, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 934], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [791, 865, 866, 867, 868, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 918, 934], "cluster_linux_basics_shell_exercises_l": [791, 868, 912, 913, 914, 915, 916, 918, 934], "cluster_linux_basics_io_redir_pip": [791, 868, 879, 934], "cluster_linux_basics_text_tool": [791, 868, 928, 934], "cluster_linux_basics_exercis": [791, 865, 866, 867, 868, 934], "cluster_linux_kernel": [791, 795, 798, 800, 803, 805, 808, 810, 812, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 842, 844, 847, 849, 853, 856, 859, 934], "cluster_linux_ssh": [791, 934, 946, 947, 948, 949, 950, 1022, 1023], "cluster_linux_ssh_exercis": [791, 934, 946, 947, 948, 949, 950], "cluster_unittest": [791, 1175], "linux_sysprog_sign": [791, 934, 975], "linux_sysprog_ipc": [791, 934, 975], "linux_sysprog_ev": [791, 934, 975], "linux_sysprog_posix_threads_exercise_condition_vari": [791, 934, 975, 989], "linux_sysprog_posix_threads_last_warn": [791, 934, 975, 989], "linux_sysprog_posix_threads_miscellan": [791, 934, 975, 989], "linux_sysprog_posix_threads_mutex_trylock": [791, 934, 975, 989], "trylock": [791, 934, 975, 983, 989], "islock": [791, 934, 975, 983, 989], "linux_sysprog_scheduling_processes_and_thread": [791, 934, 975, 995, 997], "linux_sysprog_scheduling_realtime_api": [791, 934, 975, 995], "linux_sysprog_scheduling_realtim": [791, 934, 975, 995, 997], "linux_sysprog_scheduling_wakeup_lat": [791, 934, 975, 995, 997], "linux_sysprog_scheduling_exam_quest": [791, 934, 975, 995, 997], "linux_sysprog_blocking_io_blocking_io_tim": [791, 934, 963, 975], "linux_sysprog_blocking_io_blocking_io_network": [791, 934, 963, 975], "linux_sysprog_blocking_io_blocking_io_fil": [791, 868, 871, 872, 934, 963, 975], "linux_sysprog_fileio_example_o_excl": [791, 934, 973, 975, 992], "o_excl": [791, 934, 964, 965, 973, 975, 992, 1005], "linux_sysprog_fileio_example_o_creat": [791, 934, 973, 975, 992], "linux_sysprog_fileio_example_o_wronli": [791, 934, 973, 975, 992], "linux_sysprog_fileio_dupl": [791, 934, 973, 975, 992], "linux_sysprog_fileio_example_o_rdonli": [791, 934, 973, 975, 992], "o_rdonli": [791, 796, 934, 960, 964, 965, 968, 971, 972, 973, 975, 976, 979, 992, 1002, 1005, 1009], "linux_sysprog_fileio_misc": [791, 934, 973, 975, 992], "linux_sysprog_fileio_basics_exercise_hol": [791, 934, 973, 975, 992], "linux_sysprog_fileio_basics_exercise_copi": [791, 934, 965, 973, 975, 992], "linux_sysprog_fileio_fileio_group": [791, 934, 973, 975, 992], "linux_sysprog_process_commandlin": [791, 934, 975], "linux_sysprog_process_tre": [791, 934, 975], "linux_basics_intro_process_tre": [791, 868, 872, 884, 887, 888, 889, 890, 891, 892, 893, 934, 946, 947, 948, 949, 950, 975, 1022, 1023], "linux_basics_intro_environ": [791, 868, 872, 918, 934, 975, 1022, 1023], "linux_sysprog_intro_hw_get": [791, 934, 975, 977], "linux_sysprog_intro_hw_sysfs_gpio": [791, 934, 975, 977], "linux_sysprog_intro_hw_watch": [791, 934, 975, 977], "linux_hardware_i2c": [791, 934, 941], "linux_hardware_brushless_motor": [791, 934, 941], "brushless": [791, 934, 941], "linux_hardware_pwm": [791, 934, 941], "linux_hardware_w1": [791, 934, 941], "linux_hardware_can_intro": [791, 934, 940, 941], "linux_hardware_can_interfac": [791, 934, 940, 941], "linux_hardware_can_hardwar": [791, 934, 940, 941], "linux_hardware_can_program": [791, 934, 940, 941], "linux_toolchain_cmake_cross": [791, 934, 1022], "linux_toolchain_shared_librari": [791, 934, 1022], "linux_toolchain_exercises_native_build": [791, 934, 1019, 1020, 1022], "linux_toolchain_exercises_cross_build": [791, 934, 1017, 1019, 1022], "linux_toolchain_raspi_toolchain_setup": [791, 934, 1017, 1019, 1022, 1023], "linux_toolchain_exercises_fh_moodle_quiz": [791, 934, 1018, 1019, 1022], "linux_toolchain_exercises_raspberry_toolchain": [791, 934, 1019, 1021, 1022], "linux_toolchain_cross_bas": [791, 934, 1016, 1017, 1019, 1021, 1022, 1023], "linux_toolchain_raspi_detail": [791, 934, 1022, 1023], "linux_basics_archiving_compression_tar": [791, 861, 868, 934, 1022, 1023], "linux_ssh_scp": [791, 934, 946, 947, 948, 950, 1022, 1023], "linux_ssh_bas": [791, 934, 946, 947, 948, 949, 950, 1022, 1023], "linux_toolchain_raspi_linaro_pi": [791, 934, 1022, 1023], "defunct": [791, 934, 1022, 1023], "linux_toolchain_raspi_docker_fedora_wsl": [791, 934, 1022, 1023], "linux_basics_intro_login": [791, 868, 872, 884, 887, 888, 889, 890, 891, 892, 893, 934, 946, 947, 948, 949, 950, 1022, 1023], "linux_basics_intro_wsl": [791, 868, 872, 934], "linux_basics_intro_fh_moodle_quiz": [791, 868, 871, 872, 934], "linux_basics_intro_demo_everything_is_a_fil": [791, 868, 871, 872, 934], "linux_basics_permissions_umask": [791, 868, 893, 934], "linux_basics_permissions_fh_moodle_quiz_nocheat": [791, 868, 886, 893, 934], "linux_basics_permissions_sticki": [791, 868, 893, 934], "linux_basics_permissions_fh_moodle_quiz": [791, 868, 885, 893, 934], "linux_basics_permissions_setuid": [791, 868, 893, 934], "linux_basics_permissions_setuid_livedemo": [791, 868, 893, 934], "linux_basics_permissions_exercises_public_directori": [791, 868, 887, 890, 891, 893, 934], "linux_basics_permissions_exercises_credenti": [791, 868, 884, 887, 888, 889, 890, 891, 892, 893, 934], "linux_basics_permissions_exercises_public_directory_quest": [791, 868, 887, 891, 893, 934], "linux_basics_permissions_exercises_private_directori": [791, 868, 887, 888, 889, 893, 934], "linux_basics_permissions_exercises_private_directory_quest": [791, 868, 887, 889, 893, 934], "linux_basics_permissions_exercises_shared_fil": [791, 868, 887, 892, 893, 934], "linux_basics_archiving_compression_gzip": [791, 861, 868, 934, 1022, 1023], "linux_basics_archiving_compression_exercis": [791, 861, 868, 934], "linux_basics_archiving_compression_overview": [791, 861, 868, 934, 1022, 1023], "linux_basics_shell_cp": [791, 865, 866, 867, 868, 902, 903, 905, 906, 909, 910, 912, 918, 934], "linux_basics_shell_configfil": [791, 868, 918, 934], "linux_basics_shell_mv": [791, 868, 918, 934], "linux_basics_shell_link": [791, 868, 918, 934], "linux_basics_shell_fh_moodle_quiz": [791, 868, 911, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [791, 868, 902, 903, 906, 909, 910, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [791, 865, 866, 867, 868, 902, 903, 904, 905, 906, 907, 909, 910, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [791, 865, 866, 867, 868, 902, 903, 904, 905, 906, 909, 910, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [791, 868, 902, 906, 909, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [791, 868, 902, 906, 909, 910, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [791, 868, 902, 905, 906, 909, 910, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [791, 868, 906, 909, 912, 918, 934], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [791, 868, 906, 908, 912, 918, 934], "linux_basics_shell_exercises_ls_etc_passwd_s": [791, 868, 912, 914, 915, 918, 934], "linux_basics_shell_exercises_ls_dev_typ": [791, 868, 912, 913, 915, 918, 934], "linux_basics_shell_exercises_ls_home_permiss": [791, 868, 912, 915, 916, 918, 934], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [791, 868, 879, 934], "linux_basics_io_redir_pipes_io_redir": [791, 868, 879, 934], "linux_basics_io_redir_pipes_pip": [791, 868, 879, 934], "linux_basics_io_redir_pipes_exercis": [791, 868, 879, 934], "linux_basics_text_tools_overview": [791, 868, 928, 934], "linux_basics_text_tools_cut": [791, 868, 928, 934], "linux_basics_text_tools_head_tail": [791, 868, 928, 934], "linux_basics_text_tools_cat": [791, 868, 928, 934], "linux_basics_text_tools_exercis": [791, 868, 928, 934], "linux_basics_text_tools_grep": [791, 868, 928, 934], "linux_basics_text_tools_less": [791, 868, 928, 934], "linux_basics_text_tools_find": [791, 868, 928, 934], "linux_basics_exercises_fh_ss2022_exam_01_g2": [791, 866, 867, 868, 934], "linux_basics_exercises_fh_ss2022_exam_01_g1": [791, 865, 867, 868, 934], "linux_kernel_pci": [791, 815, 835, 934], "linux_kernel_interrupt": [791, 815, 819, 821, 833, 835, 842, 847, 853, 856, 859, 934], "linux_kernel_iomemori": [791, 815, 823, 835, 934], "linux_kernel_dma": [791, 810, 815, 833, 835, 934], "linux_kernel_process_vs_atom": [791, 800, 805, 808, 810, 815, 819, 821, 825, 829, 831, 833, 835, 837, 842, 844, 847, 849, 853, 856, 859, 934], "linux_kernel_modules_hello_world": [791, 795, 798, 800, 803, 805, 808, 815, 817, 819, 823, 829, 835, 842, 847, 853, 856, 859, 934], "linux_kernel_kmalloc": [791, 800, 805, 808, 810, 815, 819, 829, 833, 835, 842, 847, 853, 856, 859, 934], "linux_kernel_cdev_auto": [791, 795, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_cdev_manu": [791, 795, 798, 800, 803, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_workqueu": [791, 815, 853, 856, 859, 934], "linux_kernel_timer_cod": [791, 815, 847, 853, 856, 859, 934], "linux_kernel_spinlock_cod": [791, 815, 842, 847, 853, 856, 859, 934], "linux_kernel_tim": [791, 815, 847, 849, 853, 856, 859, 934], "linux_kernel_spinlock": [791, 815, 842, 844, 847, 853, 856, 859, 934], "linux_kernel_fedora_module_build": [791, 795, 798, 800, 803, 805, 808, 814, 815, 817, 819, 823, 829, 835, 842, 847, 853, 856, 859, 934], "linux_kernel_fedora_kernel_build": [791, 795, 798, 800, 803, 805, 808, 812, 814, 815, 817, 819, 823, 829, 835, 842, 847, 853, 856, 859, 934], "linux_kernel_interrupt_cod": [791, 815, 819, 842, 847, 853, 856, 859, 934], "linux_kernel_raspi_kernel_build": [791, 815, 819, 839, 842, 847, 853, 856, 859, 934], "linux_kernel_mutex_cod": [791, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_multiple_devic": [791, 805, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_cdev_refactor": [791, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_cdev_first_function": [791, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_waitqueu": [791, 815, 856, 934], "linux_kernel_usermem": [791, 815, 853, 856, 934], "linux_kernel_cdev_file_oper": [791, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "linux_kernel_stub_sysprog_dup": [791, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934], "dup": [791, 797, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 881, 934, 967, 1006], "stub": [791, 798, 800, 805, 808, 815, 819, 829, 842, 847, 853, 856, 859, 934, 1025], "linux_kernel_netdev": [791, 815, 833, 934], "linux_kernel_list": [791, 800, 805, 808, 815, 819, 827, 829, 842, 847, 853, 856, 859, 934], "doubli": [791, 800, 804, 805, 808, 815, 819, 828, 829, 840, 842, 847, 853, 856, 859, 934], "linux_kernel_mutex": [791, 815, 819, 829, 831, 842, 847, 853, 856, 859, 934], "linux_ssh_key_pair": [791, 934, 946, 947, 948, 949, 950], "linux_ssh_portforward": [791, 934, 950], "linux_ssh_sshf": [791, 934, 950], "linux_ssh_link": [791, 934, 950], "linux_ssh_exercises_copy_fil": [791, 934, 946, 947, 948, 950], "linux_ssh_exercises_pubkei": [791, 934, 946, 947, 948, 949, 950], "linux_ssh_exercises_copy_tre": [791, 934, 947, 948, 950], "unittest_gtest_cmak": [791, 1175], "interconnect": 792, "device_cr": [793, 794, 797], "cdev_init": [793, 801, 802], "cdev_add": [793, 801, 802], "unhappi": 793, "device_destroi": 793, "my_class": 793, "my_driv": [793, 796, 806, 807, 818, 828, 834, 840, 846, 857], "mknod": [793, 801, 802], "character devic": [794, 797, 802, 1195], "relatim": 794, "register_chrdev_region": [794, 801, 802], "alloc_chrdev_region": [794, 802], "htmldoc": 794, "chrdev": 794, "dev_t": [794, 802], "baseminor": 794, "highlight": 794, "bug_on": 794, "module_licens": [794, 816], "openat": [796, 960], "at_fdcwd": [796, 960], "0x7f3d11330000": 796, "einval": [796, 801, 816, 854], "enotti": 796, "file_oper": [797, 801, 802, 840], "citizenship": 797, "__user": [797, 852], "loff_t": 797, "unlocked_ioctl": 797, "my_op": 797, "this_modul": 797, "my_open": 797, "my_read": 797, "my_writ": 797, "my_ioctl": [797, 828], "mode_t": [797, 964, 968, 1006], "filp": [797, 840, 854], "vf": 797, "swiss": [797, 964, 1190], "armi": [797, 964, 1190], "my_ioctl_request": [797, 799], "my_request_such": 797, "my_request_such_and_such": 797, "laden": [797, 1204], "endod": 797, "_iow": 797, "_ior": 797, "_ioc": 797, "_ioc_non": 797, "_ioc_read": 797, "_ioc_typecheck": 797, "_ioc_writ": 797, "_iowr": 797, "my_ev": [799, 806, 807, 846, 851], "my_event_typ": 799, "my_event_ioctl": 799, "jiffi": [799, 840, 846], "my_event_list": [799, 806, 807, 828], "list_head": [799, 826, 828, 851], "num_ev": 799, "my_event_list_init": 799, "my_event_list_destroi": 799, "my_event_list_add": [799, 828, 841, 846, 857], "my_ioctl_add_ev": 799, "printk": [799, 816, 818, 857], "unregister_chrdev_region": [801, 802], "caveat": [801, 840, 943], "register_chrdev": 801, "unregister_chrdev": 801, "kern_err": 801, "cdev_del": [801, 802], "my_driver_henkel": 801, "kmem": 802, "opaqu": 802, "majmin": 802, "mkdev": 802, "drivernam": 802, "my_fop": 802, "my_cdev": 802, "devicefil": 802, "ndevic": 804, "module_param": 804, "my_devic": [804, 806, 807, 818, 834, 846], "private_data": [804, 834, 840], "kbuild": [806, 807], "torn": [806, 1182], "ccflag": [806, 807], "container_of": [807, 858], "file3": 807, "distinct": [807, 874, 958, 1085], "my_device_init": 807, "my_device_destroi": [807, 846], "everyt": 809, "vmalloc": 809, "ioremap": [809, 822], "iommu": 809, "pysic": 809, "dma_addr_t": 809, "alloc_pag": 809, "gfp_mask": 809, "get_free_pag": 809, "__get_free_pag": 809, "2order": 809, "__get_dma_pag": 809, "zone": 809, "__free_pag": 809, "free_pag": 809, "dma_handl": 809, "cpu_addr": [809, 834], "dma_alloc_coher": 809, "gfp": [809, 824, 850], "dma_free_coher": 809, "pci_dev": [809, 834], "gfp_kernel": [809, 824, 841], "gfp_atom": [809, 824], "dma_bidirect": 809, "dma_to_devic": 809, "dma_from_devic": 809, "dma_map_singl": 809, "dma_mapping_error": 809, "dma_unmap_singl": 809, "dma_map_pag": 809, "dma_unmap_pag": 809, "dma_address": 809, "sglist": 809, "sg_run": 809, "dma_map_sg": 809, "for_each_sg": 809, "hw_address": 809, "sg_dma_address": 809, "hw_len": 809, "sg_dma_len": 809, "dma_unmap_sg": 809, "nent": 809, "unmap": [809, 834], "recreat": [809, 910, 1028], "dma_sync_single_for_cpu": 809, "dma_sync_sg_for_cpu": 809, "mel": [809, 824], "gorman": [809, 824], "incredibli": 809, "transcript": [811, 838, 1136], "building_a_custom_kernel": 811, "fc33": [811, 816], "extravers": [811, 839], "cleanli": 811, "uncommit": 811, "j6": 811, "fedpkg": 811, "pesign": 811, "grubbi": 811, "33rd": 811, "f33": 811, "builddep": 811, "libexec": [811, 1024], "symver": [813, 816], "modpost": [813, 816], "module_src": 813, "kernel_build": 813, "install_mod_path": [813, 838], "modules_instal": [813, 838, 942], "fedora_kernel_build": 815, "fedora_module_build": 815, "modules_hello_world": 815, "cdev_manu": 815, "process_vs_atom": 815, "stub_sysprog_dup": 815, "cdev_auto": 815, "cdev_file_oper": 815, "cdev_first_function": 815, "cdev_refactor": 815, "multiple_devic": 815, "mutex_cod": 815, "raspi_kernel_build": 815, "interrupt_cod": 815, "spinlock_cod": 815, "timer_cod": 815, "usermem": 815, "iomemori": 815, "waitqueu": [815, 1195], "netdev": 815, "ldd3": [815, 826], "reilli": [815, 927], "probe": [816, 942, 943, 944], "hello_init": 816, "kern_debug": 816, "hello_exit": 816, "module_init": 816, "module_exit": 816, "exot": 816, "lsmod": [816, 942, 943, 944], "insmod": 816, "rmmod": [816, 846], "dep": 816, "softdep": 816, "rebuilt": 816, "cross_compil": [818, 838, 839], "gpio_request": 818, "gpio_fre": 818, "gpio_direction_input": 818, "gpio_direction_output": 818, "gpio_to_irq": 818, "my_device_activate_gpio": 818, "_destroi": 818, "3f200000": 818, "pinctrl": 818, "bcm2835": [818, 939], "request_irq": [818, 820, 834], "free_irq": [818, 820, 834], "priorit": [820, 836, 936, 994, 1006], "preempt_rt": [820, 830, 1185], "mainlin": [820, 838, 998, 1185], "irqreturn_t": [820, 834], "irq_handl": [820, 834], "irq": [820, 834, 836, 840, 996], "opqu": 820, "irq_non": 820, "irq_wake_thread": 820, "irq_handler_t": 820, "irqf_shar": [820, 834], "irqf_trigger_ris": 820, "irqf_trigger_fal": 820, "irqf_trigger_high": 820, "irqf_trigger_low": 820, "iomem": 822, "ioport": 822, "request_mem_region": 822, "0x20200000": 822, "release_mem_region": 822, "asm": [822, 1027], "iounmap": 822, "ioread8": 822, "ioread16": 822, "ioread32": 822, "iowrite8": 822, "u8": 822, "iowrite16": 822, "u16": 822, "iowrite32": 822, "u32": 822, "kmalloc kfre": 824, "dynamic memori": 824, "slab": 824, "gfp_t": [824, 841, 857], "kzalloc": 824, "kfree": 824, "scarc": 824, "discourag": 824, "stolen": [826, 935], "some_list": 826, "init_list_head": 826, "some_data": 826, "list_add": 826, "list_add_tail": 826, "new_payload": 826, "existing_payload": 826, "prepend": [826, 838, 870, 1073], "list_for_each": 826, "list_entri": 826, "cursor": [826, 898, 1146], "run_payload": 826, "list_empti": 826, "list_first_entri": 826, "list_del": [826, 828], "a_payload": 826, "inject": [828, 841, 846, 1149], "opfer": 828, "corrupt": 828, "ffff91285ae68f00": 828, "ffff9128406cec00": 828, "list_debug": 828, "0x70": [828, 943], "0xb0": 828, "0xdd": 828, "ksys_ioctl": 828, "0x82": 828, "0xc0": 828, "__x64_sys_ioctl": 828, "do_syscall_64": 828, "0x4d": 828, "entry_syscall_64_after_hwfram": 828, "0x44": 828, "0xa9": 828, "unprotect": [828, 840, 1056], "nevent": [828, 851], "my_device_list": 828, "preemptibl": [830, 998], "preemption": [830, 836, 843, 943, 994, 997, 998], "holder": [830, 1054], "mutex_init": 830, "mutex_destroi": 830, "mutex_lock": 830, "mutex_lock_interrupt": 830, "eintr": [830, 956, 1009, 1010], "mutex_lock_interruptible_nest": 830, "mutex_trylock": 830, "eagain": [830, 840, 854], "mutex_unlock": 830, "torvald": [830, 838], "trickl": 830, "rtmutex": 830, "rt_mutex": 830, "net_devic": 832, "alloc_netdev": 832, "sizeof_priv": 832, "netdev_priv": 832, "funcion": 832, "ethernet": 832, "etherdevic": 832, "alloc_etherdev": 832, "free_netdev": 832, "register_netdev": 832, "unregister_netdev": 832, "devinc": 832, "hard_start_xmit": 832, "sk_buff": 832, "skb": 832, "transmiss": [832, 961, 1133], "tx_timeout": 832, "quota": [832, 864], "stead": 832, "do_ioctl": 832, "ifreq": [832, 938], "ifr": [832, 938], "netif_start_queu": 832, "netif_stop_queu": 832, "netif_wake_queu": 832, "udevd": 834, "pci_device_id": 834, "my_id": 834, "pci_devic": 834, "0xdead": 834, "0xbeef": 834, "0xbeee": 834, "module_device_t": 834, "my_prob": 834, "my_remov": 834, "my_suspend": 834, "pm_message_t": 834, "my_resum": 834, "my_shutdown": 834, "pci_driv": 834, "id_tabl": 834, "my_init": 834, "pci_register_driv": 834, "my_exit": [834, 1043], "pci_unregister_driv": 834, "subsystem_vendor": 834, "subsystem_devic": 834, "u64": [834, 848], "dma_mask": 834, "device_count_resourc": 834, "pci_enable_devic": 834, "pdev": 834, "wizardri": 834, "pci_request_region": 834, "pci_set_mast": 834, "pci_clear_mast": 834, "pci_set_dma_mask": 834, "pci_set_drvdata": 834, "ioread": 834, "iowrit": 834, "pci_resource_len": 834, "bar_no": 834, "__iomem": 834, "pci_iomap": 834, "pci_iounmap": 834, "pci_alloc_consist": 834, "os_devic": 834, "_o": 834, "dma_addr": 834, "pci_free_consist": 834, "_size": 834, "_cpu_addr": 834, "t_os_dma_addr__get_n": 834, "_dma_addr": 834, "_os_devic": 834, "dma_bit_mask": 834, "pci_set_consistent_dma_mask": 834, "config_debug_atomic_sleep": [836, 841], "cross compil": 838, "educ": 838, "raspberrypi": [838, 839, 942, 1014, 1021], "borrow": 838, "pi2": 838, "1gb": 838, "canon": [838, 955], "hf": 838, "armv6j": 838, "hardfloat": 838, "gnueabi": 838, "objcopi": 838, "raspberry_pi": 838, "local_overlai": 838, "ebuild": 838, "binutil": [838, 839], "repo_nam": 838, "9999": 838, "sourcedir": 838, "builddir": 838, "buildparam": 838, "kconfig": 838, "zconf": 838, "raspbian": 838, "bootdir": 838, "bootf": 838, "rootf": 838, "kernel7": 838, "Then": [838, 953, 1153], "assimil": 838, "bcmrpi_defconfig": 838, "bcm2709_defconfig": 838, "config_localvers": 838, "config_ikconfig": 838, "eveytim": 838, "config_can_mcp251x": 838, "config_sensors_lm73": 838, "zimag": [838, 839, 942], "dtb": [838, 839, 942], "j3": 838, "mkknlimg": 838, "te": 838, "superus": 838, "jtf": 838, "bcm2709": 838, "smi": 838, "ft5406": 838, "can1": [838, 937], "v7": [838, 839], "ipv4": [838, 1207], "xfrm4_mode_beet": 838, "inet_lro": 838, "esp4": 838, "xfrm4_mode_transport": 838, "udp_tunnel": 838, "sdb": 838, "57344": 838, "sdb1": 838, "4162560": 838, "sdb2": 838, "enjoi": 838, "ec2aa3d2": 838, "eee7": 838, "454e": 838, "d145df5ddcba": 838, "agnost": 838, "urg": 838, "rasperri": [839, 942, 944, 1194, 1201], "patchlevel": 839, "sublevel": 839, "_morph": [840, 850], "my_driver_hello": 840, "my_driver_cdev_manu": 840, "my_driver_cdev_dynamic_major": 840, "my_driver_cdev_file_oper": 840, "my_driver_cdev_first_function": 840, "my_driver_cdev_refactor": 840, "my_driver_multiple_devic": 840, "my_driver_mutex": 840, "my_driver_interrupt": 840, "my_driver_spinlock_atom": 840, "my_driver_time_tim": 840, "my_driver_workqueu": 840, "my_driver_usermem": 840, "copy_": 840, "my_driver_waitqueu": 840, "nonblock": [840, 854, 1006, 1207], "spinlock_t": [841, 843], "isr": [841, 998, 1195], "spin_unlock": [841, 843], "reenabl": 841, "uniprocessor": 843, "multiprocessor": 843, "spin_lock_init": 843, "spin_lock": 843, "spin_trylock": 843, "irqflag": 843, "spin_lock_irqsav": 843, "spin_unlock_irqrestor": 843, "pend": [846, 875, 998, 1011], "my_inject_deferred_ev": 846, "my_device_add_deferred_ev": 846, "del_timer_sync": [846, 848], "paranoia": 846, "symmetri": 846, "my_device_add_ev": 846, "my_inject_ev": 846, "tick": 848, "config_hz": 848, "friendli": [848, 1086, 1156, 1160], "hrtimer": 848, "jiffies_to_msec": 848, "jiffies_to_usec": 848, "jiffies_to_nsec": 848, "msecs_to_jiffi": 848, "usecs_to_jiffi": 848, "timespec64_to_jiffi": 848, "timespec64": 848, "jiffies_to_timespec64": 848, "timer_list": 848, "my_tim": 848, "timerfunc": 848, "timer_setup": 848, "add_tim": 848, "del_tim": 848, "0520": 850, "0521": 850, "0525": 850, "0532": 850, "0710": 850, "preempt": [850, 994, 998], "caption": 850, "backlink": 850, "my_event_nod": 851, "my_get_one_ev": [851, 854], "my_device_get_one_ev": 851, "my_event_get_one_ev": 851, "efault": [851, 852], "uaccess": 852, "copy_to_us": 852, "copy_from_us": 852, "enosi": 854, "timerfd": [854, 962, 1002], "f_flag": 854, "wait_queue_head_t": 855, "wq": [855, 857, 858], "init_waitqueue_head": 855, "sched": 855, "wait_ev": 855, "wait_event_interrupt": 855, "wait_event_timeout": 855, "timeout_jiffi": 855, "wait_event_interruptible_timeout": 855, "wake_up": 855, "wake_up_interrupt": 855, "task_interrupt": 855, "create_workqueu": [857, 858], "destroy_workqueu": [857, 858], "eo": 857, "rtprio": 857, "work_struct": [857, 858], "init_work": [857, 858], "chrt": [857, 998], "workqueue_struct": 858, "work_func_t": 858, "queue_work": 858, "packen": 860, "gunzip": 862, "zgrep": 862, "zcat": 862, "zless": 862, "intact": [862, 1112, 1116], "viro": 863, "cpio": 863, "cleaner": 863, "archivformat": 863, "lzma": 863, "430mb": 863, "95mb": 863, "74mb": 863, "5m": [863, 935], "64mb": 863, "togeht": 864, "gfs2": 864, "zcf": 864, "decompress": [864, 1024], "zxf": 864, "ztf": 864, "dirt": 864, "livingroom": 864, "grumbl": 864, "reat": 864, "tract": 864, "ell": [864, 898], "vv": 864, "supplementari": [865, 866, 873, 875], "1021": [865, 866, 873], "somefil": [865, 866, 904], "chgrp": [865, 866, 883, 890, 892], "fellow": [865, 866], "picki": [865, 866, 1048], "ttyusb1": 869, "stick": [869, 873], "2006854": 869, "sdc": 869, "2006823": 869, "deserv": [869, 927, 988, 1014], "trash": [869, 898], "burn": [869, 944], "1mib": 869, "1mibf": 869, "0m": [869, 920, 996], "mkf": 869, "entropi": 869, "my_vari": 870, "1034184": 870, "1035812": 870, "ancestor": [870, 876, 954], "decriptor": [871, 970], "getti": 873, "kerbero": [873, 875], "agetti": 873, "cleartext": [873, 894], "brute": [873, 951, 1014], "crack": 873, "attack": [873, 951, 1029, 1149, 1193], "hierarch": 874, "peripher": [874, 1194, 1201], "grand": 874, "ten_integ": 875, "unfair": [875, 998], "dialout": [875, 970], "seg": [875, 937], "kbyte": 875, "62715": 875, "819200": 875, "pstree": 876, "modemmanag": 876, "journ": 876, "abrtd": 876, "auditd": 876, "bluetoothd": 876, "cupsd": 876, "lau": 876, "tini": [876, 1012], "enemi": 877, "guidanc": 877, "dicdat": 877, "acknowledg": [877, 935], "fight": 877, "seamless": [877, 1162], "exampk": 877, "altruism": 877, "mkfifo": [878, 882], "stdin_fileno": [880, 964, 974, 1010, 1086], "stdout_fileno": [880, 960, 961, 964, 970, 996, 1005, 1009, 1010, 1086], "stderr_fileno": [880, 964, 1086], "religi": 880, "fed": 880, "filefor": 880, "weekli": 881, "compet": [882, 943], "award": [882, 929], "plumber": 882, "sniff": 882, "fifo": [882, 964, 1206], "rendezv": 882, "unnam": 882, "chown": [883, 895, 1026], "useradd": [883, 1026], "groupadd": 883, "usermod": 883, "groupmod": 883, "teammember42": 883, "manfromthestreet": 883, "jun": [883, 1014], "triplet": 883, "1003": 883, "110100100": 883, "110000000": 883, "0600": 883, "111101101": 883, "0755": 883, "bitmask": [883, 894, 1010], "1317": 894, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 894, "0g2rqr9cnydnqq5unt": 894, "wpu8jyzeuxktapl0": 894, "burnout": 894, "retyp": 894, "rwsr": [894, 895], "32712": 894, "rwxrwxrwx": 894, "4755": [894, 895], "uid_t": 895, "getuid": 895, "geteuid": 895, "rwxrwxr": [895, 960, 1012, 1013, 1014], "24456": 895, "drwxrwxrwt": 896, "0022": 897, "strain": 898, "injuri": 898, "diseas": 898, "outout": 898, "20k": 898, "olevel": 898, "debugopt": 898, "expr1": 898, "expr2": 898, "daystart": 898, "regextyp": 898, "synopsi": 898, "findu": 898, "til": 898, "findutil": 898, "pression": 898, "print0": 898, "keystrok": 898, "noob": [898, 1059], "pos1": 898, "misconfigur": 898, "esc": 898, "freak": 898, "cvsserver": 898, "gitview": 898, "oesterreich": 898, "clearanc": 898, "e7d76d19": 898, "dd3d": 898, "4d52": 898, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 898, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 898, "gif": [898, 1150], "einkommensteuerbescheid1": 898, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 898, "einkommensteuervorauszahlungsbescheid1": 898, "immobilienbewertung": 898, "etw": 898, "confirm": 898, "ova": 898, "umsatzsteuerbescheid1": [898, 920, 921], "h0020211105124337": 898, "vk9vst311192021_0022021": 898, "img_": 900, "jpg": 900, "bilder": 900, "121751": 901, "garbage1": [902, 903, 905, 909, 910], "garbage2": [902, 903, 905, 909, 910], "diretori": 904, "sweetheart": [904, 910, 917, 991], "citi": 904, "mqueue": [913, 1005], "leavel": 917, "hintingx": 920, "1048576": 920, "drwx": [920, 922], "36817": 920, "umsatzsteuerbescheid": 921, "finanzamt": 921, "abgab": 921, "neighbor": [922, 1144], "enat": 923, "dereferenzieren": 925, "50k": [925, 926], "rekursiv": 926, "eintr\u00e4g": 926, "unterhalb": 926, "gefiltert": 926, "un\u00fcblich": 926, "gebr\u00e4uchlich": 926, "geh\u00f6ren": 926, "mmin": 926, "h\u00f6chsten": 926, "gefundenem": 926, "eintrag": 926, "heissen": 926, "beginnen": 926, "versteht": 926, "vergessen": 926, "j\u00fcnger": 926, "verkn\u00fcpft": 926, "metacharact": [926, 945], "gr\u00f6\u00dfer": 926, "lobal": 927, "egular": 927, "xpression": 927, "rint": 927, "sed": [927, 1194, 1201], "tream": 927, "itor": 927, "verb": 927, "insensit": [927, 1161], "entor": 927, "perlr": 927, "perlretut": 927, "perlrequick": 927, "jeffrei": 927, "friedl": 927, "philosopi": 931, "toether": 931, "hc": 931, "325324": 931, "xarg": 931, "bitbak": 933, "behan": 933, "webster": 933, "drone": 935, "electronic speed control": 935, "vehicl": 935, "rack": 935, "recognit": [935, 1144], "flight": 935, "fritz": [935, 943], "brigh": 935, "heinrich": 935, "polar": 935, "uevent": [935, 942, 943, 944, 978], "cheapest": 935, "quicrun": 935, "16bl30": 935, "brake": 935, "11v": 935, "conclud": [935, 943], "lipo": 935, "madli": 935, "transmitt": 935, "throttl": 935, "neutral": [935, 1146], "chop": 935, "kindli": [935, 1150], "mechatron": 935, "50hz": 935, "nanosecond": [935, 943, 962], "20000000": [935, 1046], "oscil": 935, "10bl60": 935, "000n": 935, "1500000": [935, 1000], "2000000": 935, "1550000": 935, "1600000": 935, "acceler": 935, "1650000": 935, "1700000": 935, "1750000": 935, "1800000": 935, "1850000": 935, "1900000": 935, "1950000": 935, "logist": [935, 1144], "hobbi": 935, "can bu": [936, 937, 938, 939], "sinowatz": [936, 1036], "volkswagen": 936, "traffic": 936, "octet": 936, "arbitr": 936, "can_fram": [936, 938], "canid_t": [936, 938], "can_id": [936, 938], "eff": [936, 938], "rtr": [936, 938], "__u8": [936, 938], "can_dlc": [936, 938], "__attribute__": [936, 938], "can0": [937, 938], "noarp": 937, "qdisc": 937, "qlen": 937, "txqueuelen": 937, "pfifo_fast": 937, "promiscu": 937, "allmulti": 937, "minmtu": 937, "maxmtu": 937, "restart": 937, "tq": 937, "prop": 937, "seg1": 937, "seg2": 937, "sjw": 937, "brp": 937, "gs_usb": 937, "tseg1": 937, "tseg2": 937, "brp_inc": 937, "48000000": 937, "numtxqueu": 937, "numrxqueu": 937, "gso_max_s": 937, "65536": 937, "gso_max_seg": 937, "65535": [937, 942], "tso_max_s": 937, "tso_max_seg": 937, "gro_max_s": 937, "gso_ipv4_max_s": 937, "gro_ipv4_max_s": 937, "parentbu": 937, "parentdev": 937, "relic": 937, "cansend": 937, "candump": 937, "canplay": 937, "cangen": 937, "snif": 937, "loopback": 937, "pf_can": 938, "sockaddr_can": 938, "sock_raw": 938, "can_raw": 938, "ifr_nam": 938, "siocgifindex": 938, "can_famili": 938, "af_can": 938, "can_ifindex": 938, "ifr_ifindex": 938, "sockaddr": [938, 961], "can_socket": 938, "packt": 938, "frame_layout": 938, "ib3x8": 938, "frame_s": 938, "calcsiz": 938, "recvfrom": 938, "sendto": 938, "lnxpp": 939, "can2udp": 939, "openwrt": 939, "asymmetrisch": 939, "mosi": 939, "miso": 939, "sclk": 939, "broadcom": 939, "ce0": 939, "3v": [939, 942], "5v": [939, 942], "transceiv": 939, "inter intergrated circuit": 942, "lm-sensor": 942, "handwork": [942, 944], "texa": 942, "maker": 942, "dtparam": [942, 943, 944], "i2c_arm": [942, 943, 944], "gpio2": 942, "gpio3": 942, "i2c_bcm2835": [942, 943, 944], "fe804000": [942, 944, 978], "i2c_dev": [942, 943], "sot": 942, "7v": 942, "rail": 942, "capacitor": 942, "idc": 942, "gnd": [942, 944], "vdd": 942, "smbdat": 942, "smbclk": 942, "unconnect": 942, "0x49": 942, "0x4a": 942, "jumper": 942, "3v3": [942, 944], "scl": [942, 944], "probl": 942, "i2c_slav": 942, "0x0703": 942, "o_rdwr": [942, 964, 971, 1005], "msb_lsb": 942, "msb": 942, "lsb": [942, 1013], "dev_fd": 942, "perror": [942, 956, 960, 961, 962, 968, 969, 970, 971, 976, 979, 996, 1002, 1005, 1009], "libncurs": 942, "bcm2711_defconfig": 942, "v7l": 942, "semiconductor": 942, "j4": 942, "kernel7l": 942, "fake": 942, "new_devic": [942, 944], "0048": 942, "modalia": 942, "preinstal": 942, "hwmon0": 942, "thermal": 942, "thermal_zone0": 942, "hwmon1": [942, 944], "temp1_max": 942, "temp1_max_alarm": 942, "temp1_min": 942, "temp1_min_alarm": 942, "update_interv": 942, "milli": [942, 944], "22000": 942, "randomli": [942, 944], "nomenclatur": 942, "pulse width modul": 943, "resistor": 943, "bright": 943, "potentiomet": 943, "ssop": 943, "0b1000000": 943, "buse": [943, 944], "i2cdetect": [943, 944], "charactr": 943, "pca": 943, "simultan": [943, 1009], "peculiar": 943, "pca9685a": 943, "nxp": 943, "dtoverlai": [943, 944], "pwm_pca9685": 943, "regmap_i2c": 943, "3f804000": 943, "0040": [943, 978], "npwm": 943, "unexport": [943, 978], "butt": [943, 1024], "intercept": [943, 1035], "dim": 943, "fade": 943, "800000": [943, 1142], "600000": [943, 1142], "50000": 943, "apolog": 943, "kenel": 943, "devlop": 943, "pleasur": 943, "cornerston": 944, "unstabl": 944, "parasit": 944, "bitbang": 944, "gpiopin": 944, "profession": 944, "addon": 944, "pinout": 944, "01144fe43baa": 944, "w1_bus_master8": 944, "w1_bus_master1": 944, "amaz": 944, "400000000000": 944, "800000000000": 944, "behalf": [944, 958, 1012], "ad0": 944, "ad1": 944, "ad2": 944, "vcc": 944, "0x18": 944, "0b0011000": 944, "shortli": [944, 1035], "execstart": 944, "36864": 944, "w1_bus_master2": 944, "w1_bus_master3": 944, "w1_bus_master4": 944, "w1_bus_master5": 944, "w1_bus_master6": 944, "w1_bus_master7": 944, "busno": 944, "abtract": 944, "prepackag": 944, "afford": 944, "alarm": [944, 1008, 1011], "conv_tim": 944, "w1_slave_driv": 944, "eeprom": 944, "ext_pow": 944, "w1_slave": 944, "22750": 944, "crc": 944, "rpi_volt": 944, "isa": 944, "in0": 944, "cpu_therm": 944, "temp1": 944, "w1_slave_temp": 944, "reliabl": 944, "radiou": 944, "disappear": 944, "0c4000000000": 944, "0x28": 944, "dalla": [944, 972], "02131d9920aa": 944, "5d": 944, "011432f138f9": 944, "misbehavior": 944, "instabl": 944, "pump": 944, "nuclear": 944, "plant": 944, "ssh-keygen": [945, 951], "password authent": [945, 951], "key based authent": [945, 951], "remote login": [945, 951], "unencrypt": 945, "rlogin": 945, "telnet": 945, "nsa": 945, "primarili": [945, 1038, 1158], "sftp": 945, "portno": 945, "propaget": 945, "sha256sum": 946, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 946, "mitm": 951, "uncomfort": 951, "keygen": 951, "safeguard": 951, "unrespons": 952, "port forward": 953, "portforward": 953, "secure copi": [953, 954], "hmmm": 953, "whateer": 953, "mydocu": 954, "recus": 954, "mobil": 954, "bandwidth": 954, "mediat": 954, "descriptiotn": 954, "file system": 955, "network file system": 955, "smb": 955, "crawl": 955, "debianish": 955, "mountpoint": 955, "grant": 955, "idmap": 955, "errnum": 956, "strerror_r": 956, "buflen": 956, "cleanest": 956, "_r": 956, "reentrant": 956, "syscal": 958, "getaddrinfo": 958, "ri": 960, "nbytes_read": [960, 961, 962], "24608": 960, "1024root": 960, "nager": 960, "698nager": 960, "gatewai": 961, "peer": [961, 964], "netinet": 961, "af_inet": 961, "sock_stream": 961, "sockaddr_in": 961, "sin_famili": 961, "sin_port": 961, "inet_aton": 961, "sin_addr": 961, "ipproto_ip": 961, "sa_famili": 961, "inet_addr": 961, "10hallo": 961, "16thi": 961, "ong": 961, "14ong": 961, "timerfd_settim": 962, "itimerspec": [962, 996], "nasti": [963, 996], "ingenu": 964, "smae": 964, "o_append": 964, "o_cloexec": 964, "sigpip": [964, 1010], "whenc": 964, "seek_cur": 964, "seek_end": 964, "occupi": [964, 966, 967], "status": 965, "srcfile": 965, "dstfile": 965, "1073741825": 966, "0k": 966, "texttt": 967, "dup2": 967, "oldfd": 967, "newfd": 967, "o_": 967, "bytes_to_writ": [968, 969, 971], "wxr": 968, "o_tmpfil": 968, "speci": 968, "pli": 968, "nread": [970, 976, 979, 1002, 1005, 1009], "thats": [970, 971], "litter": 971, "misspel": 971, "24625": 972, "24562": 972, "pread": 974, "pwrite": 974, "readv": 974, "writev": 974, "uio": 974, "iovec": 974, "iov": 974, "iovcnt": 974, "preadv": 974, "pwritev": 974, "ftruncat": [974, 1005, 1006], "filedescriptor": 974, "gpio26": [976, 978, 979], "subtre": 978, "fe200000": 978, "gpiochip488": 978, "gpiochip504": 978, "active_low": 978, "fd_set": [979, 1002], "exc_fd": 979, "fd_zero": [979, 1002], "nreadi": 979, "fd_isset": [979, 1002], "eek": 979, "intens": 980, "ppid": 980, "tid": 980, "tsd": 980, "spezif": 980, "_reentrant": 980, "lpthread": [980, 996, 1015], "start_routin": 981, "pthread_exit": 981, "pthread_cancel": 981, "pthread_attr_setdetachst": 981, "detachst": 981, "pthread_create_detach": 981, "pthread_detach": 981, "pthread_self": 981, "pthread_equ": 981, "30650": 981, "13961": 981, "correl": 981, "gettid": 981, "pthread_mutexattr_t": [983, 999], "pthread_mutex_destroi": 983, "pthread_mutex_trylock": 983, "global_mutex": 983, "pthread_mutexattr_settyp": 983, "pthread_mutex_norm": 983, "pthread_mutex_errorcheck": 983, "pthread_mutex_recurs": 983, "pthread_mutex_default": 983, "pthread_cond_destroi": 985, "pthread_cond_broadcast": 985, "parlanc": 985, "set_autoreset_ev": 985, "ev": 985, "is_set": 985, "wait_autoreset_ev": 985, "acquiriert": 985, "autoreset": 985, "spuriou": 985, "woken": 985, "pthread_condattr_t": 985, "pthread_cond_initi": 985, "pthread_cond_timedwait": 985, "abstim": 985, "use_glob": 987, "pthread_once_t": 987, "global_onc": 987, "pthread_once_init": 987, "init_glob": 987, "pthread_onc": 987, "once_control": 987, "init_routin": 987, "pthread_key_cr": 987, "__thread": 987, "pthread_atfork": 988, "legales": 988, "lock_rac": 990, "succeed": [990, 1177], "foreground": [991, 1044], "huh": 991, "paradox": 991, "setenv": 993, "putenv": 993, "unsetenv": 993, "clearenv": 993, "customvar": 993, "timesl": 994, "starv": 994, "throughput": 994, "sha1": [994, 997, 1013], "voluntarili": [994, 997], "lrt": 996, "app_statu": 996, "tick_count": 996, "update_statu": 996, "sigact": [996, 1009, 1010], "sa_handl": [996, 1009, 1010], "sigrtmin": 996, "sigev": [996, 1006], "sev": 996, "sigev_notifi": 996, "sigev_sign": 996, "sigev_signo": 996, "timer_t": 996, "tspec": 996, "nsec": 996, "timer_settim": 996, "show_statu": 996, "freerto": [996, 999], "syncron": 996, "update_status_func": 996, "initial_t": 996, "interval_t": 996, "show_status_func": 996, "update_task": 996, "show_task": 996, "231765": 996, "225819": 996, "5635": 996, "lwp": 996, "231766": 996, "231767": 996, "tracer": 996, "restart_syscal": 996, "clock_nanosleep": 996, "clock_realtim": 996, "500000000": 996, "033": 996, "7m": 996, "flash_func": 996, "is_revers": 996, "flash_task": 996, "flasher": 996, "indepen": 996, "toggl": 996, "fore": [996, 1046], "particularli": 997, "suscept": 997, "nicer": 998, "renic": 998, "din": 998, "44300": 998, "echtzeitbetrieb": 998, "betrieb": 998, "rechensystem": 998, "verarbeitung": 998, "anfallend": 998, "st\u00e4ndig": 998, "derart": 998, "betriebsbereit": 998, "da\u00df": 998, "verarbeitungsergebniss": 998, "vorgegebenen": 998, "zeitspann": 998, "000014": 998, "013914m": 998, "91410827636698u": 998, "000002": [998, 1000], "002382m": 998, "3820173632900326u": 998, "intrus": 998, "controversi": 998, "sched_oth": 999, "relinquish": 999, "sched_param": 999, "sched_getschedul": 999, "sched_prior": 999, "pthread_setschedparam": 999, "pthread_getschedparam": 999, "predefini": 999, "pthread_attr_setschedpolici": 999, "spoken": 999, "pthread_mutexattr_setprotocol": 999, "pthread_prio_inherit": 999, "pthread_prio_protect": 999, "risen": 999, "pthread_mutexattr_setprioceil": 999, "000105": 1000, "105247m": 1000, "24749755859354u": 1000, "000015": 1000, "014643m": 1000, "64260525619006u": 1000, "105u": 1000, "000067": 1000, "067263m": 1000, "2626495361326u": 1000, "000003": 1000, "002883m": 1000, "8827592917392217u": 1000, "ondemand": 1000, "governor": 1000, "cpufreq": 1000, "scaling_governor": 1000, "cpuinfo_cur_freq": 1000, "067036m": 1000, "03615188598611u": 1000, "000001": 1000, "001257m": 1000, "2571678380193383u": 1000, "000065": 1000, "065188m": 1000, "188407897949u": 1000, "002376m": 1000, "3758434034066656u": 1000, "001042": 1000, "042438m": 1000, "4375534057617u": 1000, "000017": 1000, "017123m": 1000, "123423079175748u": 1000, "000143": 1000, "142646m": 1000, "6458358764593u": 1000, "000005": 1000, "004995m": 1000, "994855006705264u": 1000, "_syse": 1002, "exit_failur": 1002, "consume_fd": 1002, "random_fd": 1002, "tty_fd": 1002, "nfd": 1002, "ttys4": 1002, "in_fd": 1002, "eof_detect": 1002, "shm": [1004, 1005, 1006], "099": 1004, "sem": [1004, 1005, 1006], "shared memori": 1005, "message queu": 1005, "mman": 1005, "fstat": 1005, "st_size": 1005, "map_fail": 1005, "shm_open": [1005, 1006], "tmpf": [1005, 1006], "resiz": 1005, "4095": 1005, "weigh": 1005, "map_shar": 1005, "counter_loc": 1005, "sem_t": [1005, 1006], "sem_open": 1005, "sem_fail": 1005, "sem_wait": 1005, "sem_post": 1005, "mq_attr": [1005, 1006], "mq_maxmsg": [1005, 1006], "mq_msgsize": [1005, 1006], "mqd_t": [1005, 1006], "mq_open": 1005, "mq_send": 1005, "mq_receiv": 1005, "shm_unlink": 1006, "overtak": 1006, "mq_overview": 1006, "oflag": 1006, "mq_flag": 1006, "mqde": 1006, "msg_ptr": 1006, "msg_len": 1006, "msg_prio": 1006, "sevp": 1006, "disturb": [1006, 1009], "elegantli": 1006, "qsize": 1006, "signo": 1006, "notify_pid": 1006, "goiven": 1006, "sem_overview": 1006, "sem_trywait": 1006, "sem_timedwait": 1006, "abs_timeout": 1006, "shm_close": 1006, "shm_overview": 1006, "051": [1008, 1009], "segv": [1009, 1010], "mortem": [1009, 1136], "core_pattern": 1009, "termination_handl": 1009, "sigint": [1009, 1010], "sig_atomic_t": [1009, 1010], "term_act": 1009, "alarm_handl": 1009, "alarm_act": 1009, "sigset_t": [1009, 1011], "termination_sign": 1009, "sigemptyset": [1009, 1010], "sigaddset": [1009, 1010], "sigquit": 1009, "sigprocmask": [1009, 1010], "sig_block": 1009, "impolit": 1009, "sig": [1009, 1010], "consume_pip": 1009, "pipenam": 1009, "puzzl": 1009, "pthread_sigmask": [1009, 1010], "sigtstp": 1010, "sigalrm": [1010, 1011], "sigchld": 1010, "abnorm": 1010, "sigabrt": 1010, "sigsegv": 1010, "sigbu": 1010, "sigil": 1010, "sigfp": 1010, "unblock": 1010, "oldset": 1010, "sigpend": 1010, "sigfillset": 1010, "signum": 1010, "sigdelset": 1010, "sigismemb": 1010, "sigsetop": 1010, "recept": 1010, "sa_mask": 1010, "sa_flag": 1010, "oldact": 1010, "sig_ign": 1010, "sig_dfl": 1010, "sighandler_t": 1010, "_exit": 1010, "barebon": 1011, "louder": 1011, "stallman": 1012, "risc": 1012, "llvm": 1012, "24360": 1012, "hello_h": [1012, 1028, 1030], "24416": 1012, "linkabl": [1012, 1149, 1204], "0000000000401040": 1012, "_start": 1012, "0000000000401000": 1012, "_init": 1012, "00000000004011b8": 1012, "_fini": 1012, "crt": 1012, "crt1": 1012, "crti": 1012, "crtn": 1012, "0000000000404000": 1012, "_global_offset_table_": 1012, "reloc": 1012, "1762320": 1012, "0000000000401126": 1012, "1224008": 1012, "greetdemo": 1013, "cmake_system_nam": 1013, "toolchain_base_dir": [1013, 1027], "cmake_c_compil": 1013, "cmake_cxx_compil": 1013, "find_xxx": 1013, "cmake_find_root_path_mode_program": 1013, "cmake_find_root_path_mode_librari": 1013, "cmake_find_root_path_mode_includ": 1013, "toolchian": 1013, "cmake_toolchain_fil": 1013, "libgreet": [1013, 1014, 1020, 1029, 1030], "13921": [1013, 1014], "cmakecach": [1013, 1014], "26192": [1013, 1014], "27920": [1013, 1014], "8503": [1013, 1014], "eabi5": 1013, "armhf": 1013, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1013, "debug_info": 1013, "armv7l": 1015, "challeng": 1015, "metadistribut": 1015, "miniumum": 1015, "realiti": 1015, "rasberri": 1017, "clickabout": 1022, "workabl": 1024, "tarbal": 1024, "lastest": 1024, "x86_64_arm": 1024, "precompos": 1024, "uncompress": 1024, "73812": 1024, "1107168": 1024, "1481768": 1024, "1968456": 1024, "1091864": 1024, "1030432": 1024, "1221816": 1024, "lynxbe": 1026, "y3p9kn7mjei": 1026, "cli": 1026, "dockerhub": 1026, "hub": 1026, "sh_18_04": 1026, "78683068": 1026, "1292296": 1026, "70mb": 1027, "73018472": 1027, "auxvec": 1027, "bitsperlong": 1027, "bpf_perf_ev": 1027, "rapidli": 1028, "phoni": [1028, 1029, 1030], "origaniz": 1029, "relink": 1029, "0x2e20": 1029, "vdso": 1029, "0x00007fffe9fa7000": 1029, "0x00007f75ca289000": 1029, "0x00007f75ca46d000": 1029, "r_x86_64_32": 1029, "fpic": 1029, "whom": 1030, "hello_flex": 1030, "hello_flexible_h": 1030, "cq": 1030, "lisp": 1031, "create_f": 1031, "create_print": 1031, "print_blah": 1031, "print_someth": 1031, "sytax": 1032, "shutil": 1033, "tarfil": 1033, "temporarydirectori": 1033, "tmpd": 1033, "tarnam": 1033, "expandvar": 1033, "contrain": 1033, "__enter__": 1033, "__exit__": 1033, "openforread": 1033, "myprint": 1033, "orig_print": 1033, "exc_val": 1033, "exc_tb": 1033, "myarg": 1033, "total_ord": 1034, "a_vari": 1035, "baseexceptiongroup": 1035, "exceptiongroup": 1035, "subtyp": 1035, "maybe_fail": 1035, "lone": 1035, "mysubsystemerror": 1035, "reallybaderror": 1035, "someothererror": 1035, "definitelybad": 1035, "evenwors": 1035, "collapsingtheworld": 1035, "errorcod": 1035, "__cached__": 1036, "_frozen_importlib_extern": 1036, "sourcefileload": 1036, "0x7f9b7e7fc3e0": 1036, "blindli": 1036, "ansibl": 1036, "matno": 1036, "conffil": 1036, "confcod": 1036, "confdict": 1036, "9369": 1036, "7847": 1036, "object ori": [1037, 1193], "keyword argu": 1037, "starstararg": [1037, 1058], "for loop": 1037, "iterator protocol": 1037, "operator overload": 1037, "drawn": 1038, "inputrang": 1038, "disgust": 1038, "gentli": 1038, "smarter": 1038, "nolimit": 1039, "fibo_numb": 1039, "jerki": 1039, "max_numb": 1039, "satisfactori": 1039, "python_1010_generators_yield": 1039, "glossari": 1040, "breadth": 1040, "subnamespac": 1043, "mysupermodul": 1043, "mysuperfunct": 1043, "subpackage1": 1043, "module1": 1043, "module2": 1043, "subpackage2": 1043, "disambigu": 1043, "increment_background": [1044, 1046], "background_integ": 1044, "foreground_integ": 1044, "runn": 1044, "backgroundincrement": 1044, "uncool": 1044, "14784035": 1046, "quack": 1048, "mockup": 1048, "224290895723854": 1048, "1761260014402": 1048, "806591629603105": 1048, "670648386743224": 1048, "12081255071345": 1048, "__next__": 1048, "brokensensor": 1048, "gettemperatur": 1048, "refect": 1049, "emp": 1052, "add_employe": 1052, "mgr": 1052, "isold": [1052, 1053, 1154], "haubentauch": [1052, 1053, 1056, 1154], "parentcl": 1052, "funnili": 1052, "make_child": 1053, "parent1": 1053, "parent2": 1053, "vvv": 1053, "father": 1053, "vvvvvv": 1053, "tabular": 1054, "someclass": 1054, "persons_from_csv": 1054, "person_dict": 1054, "operators object oriented program": 1055, "behaivor": 1055, "number2": 1055, "int2": 1055, "whistl": [1055, 1058], "symmetr": [1055, 1085], "commut": 1055, "summar": 1055, "attrnam": 1056, "meier": 1056, "expicitli": 1057, "0x7f83fd5356d0": 1057, "toolkit": 1059, "marker": 1061, "eighti": 1061, "monti": 1061, "incompat": [1061, 1067, 1075, 1086], "benevol": 1061, "bdfl": [1061, 1146], "overse": 1061, "januari": 1061, "dropbox": 1061, "awk": 1063, "sensit": 1066, "throughout": 1066, "0o01234": 1067, "14159265359": [1067, 1081], "3e12": 1067, "\u00e4\u00f6\u00fc": 1067, "xa4": 1067, "xb6": 1067, "xbc": 1067, "xe4": 1067, "compel": 1067, "codebas": 1067, "ancient": 1067, "sequencish": 1071, "sixtim": 1071, "seen_sixey": 1071, "blahblahblahblahblah": 1072, "aah": 1073, "a_list": 1073, "hlow": 1073, "hlowrd": 1073, "heritag": 1075, "139942931855272": 1076, "139942931855304": 1076, "139942931855528": 1076, "139942593485248": 1076, "139942647940496": 1076, "parameterizab": 1078, "program_exit": 1078, "exitstatu": 1078, "spam": [1080, 1144], "dec": 1080, "x58": 1080, "07d": 1081, "0x": 1081, "5x": 1081, "0x2f": 1081, "4x": 1081, "0x002f": 1081, "5o": 1081, "0o31": 1081, "04d": 1081, "0042": 1081, "05d": 1081, "00042": 1081, "thistl": 1082, "thorn": 1082, "annoy": 1082, "sqn": 1083, "defval": 1084, "iterkei": 1084, "keyiter": 1084, "0x7ff2e8753418": 1084, "unord": 1085, "tunabl": 1086, "shoudn": 1086, "0x7fca2c785b70": 1087, "tof": 1087, "outputfilenam": 1088, "argumentpars": 1088, "add_argu": 1088, "parse_arg": 1088, "ou": 1088, "\u0142ukasz": 1089, "langa": 1089, "yuri": [66, 1089], "selivanov": [66, 1089], "pybay2018": 1089, "ylabel": [1091, 1142], "xmin": 1091, "xmax": 1091, "ymin": 1091, "ymax": 1091, "twine": 1092, "lotsa": [1092, 1165], "long_descript": 1092, "long_description_content_typ": 1092, "beta": 1092, "osi": 1092, "approv": 1092, "package_dir": 1092, "python_requir": 1092, "install_requir": 1092, "paho": [1092, 1153], "pyproject": 1092, "toml": 1092, "backend": 1092, "build_meta": 1092, "yadda": 1092, "sdist": 1092, "python_course_2022_11_07": 1092, "12549": 1092, "BE": 1092, "mydb": 1093, "hardli": 1094, "femal": 1099, "miracl": [1102, 1119], "previouslin": 1106, "ifi": 1119, "uniqifi": 1120, "sensor_const": 1125, "test_sensor_const": 1125, "ii": [1126, 1128, 1132, 1134, 1145], "user_record": [1127, 1129], "read_csv_head": [1127, 1134], "read_csv_nohead": [1129, 1133, 1134], "csvfilenam": 1131, "test_noheader_person": 1132, "read_noheader_person": 1132, "test_must_not_use_global_variables_as_return_object": 1132, "filename1": 1132, "noheader1": 1132, "filename2": 1132, "noheader2": 1132, "users1": 1132, "users2": 1132, "test_header_person": 1132, "read_header_person": 1132, "test_user_json_person": 1132, "userdb_json": [1132, 1133], "test_person_to_json": 1132, "joerg_sent": 1132, "to_json_person": 1132, "joerg_receiv": 1132, "from_json_person": 1132, "envis": [1133, 1191], "to_json": 1133, "test_user_json": 1133, "test_user_to_json": 1133, "user_s": 1133, "json_user_s": 1133, "from_json": 1133, "test_nohead": 1134, "test_head": 1134, "lectur": [1136, 1205], "unsupervis": [1139, 1144], "conveyor": 1139, "belt": 1139, "linear_regress": [1140, 1143], "model_select": [1140, 1142], "train_test_split": [1140, 1142], "linear_model": [1140, 1142], "linearregress": [1140, 1142], "history_data": [1140, 1141, 1142, 1143], "inputfeatur": [1140, 1142], "outputfeatur": [1140, 1142], "input_train": [1140, 1142], "input_test": [1140, 1142], "output_train": [1140, 1142], "output_test": [1140, 1142], "test_siz": [1140, 1142], "output_predict": [1140, 1142], "visualcross": 1141, "york": [1141, 1142], "wind": [1141, 1142], "chill": [1141, 1142], "precipit": [1141, 1142], "snow": [1141, 1142], "gust": [1141, 1142], "humid": [1141, 1142], "rain": 1141, "cloudi": 1141, "995833": 1142, "688889": 1142, "287500": 1142, "327273": 1142, "012222": 1142, "690278": 1142, "470769": 1142, "369444": 1142, "513421": 1142, "946106": 1142, "574023": 1142, "313256": 1142, "994536": 1142, "070695": 1142, "025980": 1142, "302423": 1142, "214825": 1142, "665492": 1142, "900000": 1142, "700000": 1142, "090000": 1142, "050000": 1142, "377500": 1142, "750000": 1142, "950000": 1142, "650000": 1142, "330000": 1142, "325000": 1142, "850000": 1142, "425000": 1142, "825000": 1142, "715000": 1142, "470000": 1142, "970000": 1142, "multidimension": 1142, "xlabel": 1142, "coef_": 1142, "80189231": 1142, "intercept_": 1142, "95355086": 1142, "609608": 1142, "571879": 1142, "736988": 1142, "170933": 1142, "798254": 1142, "189739": 1142, "180394": 1142, "449230": 1142, "661530": 1142, "057745": 1142, "850176": 1142, "284120": 1142, "685067": 1142, "weather": [1143, 1144], "splice": [1143, 1144], "cute": 1143, "paper": 1143, "aspir": [1143, 1170], "dilig": 1144, "bite": 1144, "forecast": 1144, "agi": 1144, "asi": 1144, "forest": 1144, "predictor": 1144, "accuraci": 1144, "classif": 1144, "unlabel": 1144, "reinforc": 1144, "reward": 1144, "bay": 1144, "sepp": 1145, "tupleunpack": 1145, "spell": 1145, "redundantli": 1145, "quotechar": 1145, "spreadsheet": 1145, "odbc": 1146, "mysql": 1146, "informix": 1146, "berkeleydb": 1146, "mongodb": 1146, "rollback": 1146, "initd": 1148, "psycopg": 1148, "libpq": 1148, "conninfo": 1148, "psycopg2": 1148, "schwammerldb": 1148, "android": 1149, "schwammerln": 1149, "giftig": 1149, "geniessbar": 1149, "dbm": 1149, "steinpilz": 1149, "roehren": 1149, "speisetaeubl": 1149, "lamellen": 1149, "speitaeubl": 1149, "eierschwammerl": 1149, "teufelsroehrl": 1149, "overcod": 1150, "512119": 1150, "european": 1150, "steroid": 1150, "htmlhelp": 1150, "charset": 1150, "latin1": 1150, "chines": 1150, "enc": 1150, "0xfc": 1150, "0xdf": 1150, "0xf6": 1150, "\u00df": 1150, "cyril": 1150, "received_enc": 1150, "lg_enc": 1150, "bye_enc": 1150, "artificial intellig": 1151, "postgr": 1151, "mssql": 1151, "data sci": 1151, "ecosystem": 1151, "antp": 1153, "53767": 1153, "tcp6": 1153, "mosquitto_pub": 1153, "easiest": 1153, "message_receiv": 1153, "userdata": 1153, "on_messag": 1153, "loop_forev": 1153, "mosqitto_pub": 1153, "styrian": 1153, "esp": 1153, "666608091972": 1154, "ignore_index": 1154, "new_person": 1154, "saskia": 1154, "456710042003": 1154, "irrevers": 1155, "1153": [1158, 1159], "_locationindex": [1158, 1159], "maybe_cal": [1158, 1159], "apply_if_cal": [1158, 1159], "_getitem_axi": [1158, 1159], "_ilocindex": 1158, "1711": 1158, "1713": 1158, "_validate_integ": 1158, "_ix": 1158, "1647": 1158, "1645": 1158, "len_axi": 1158, "_get_axi": 1158, "rangeindex": 1159, "3791": 1159, "get_loc": 1159, "casted_kei": 1159, "pyx": 1159, "_lib": 1159, "indexengin": 1159, "hashtable_class_help": 1159, "pxi": 1159, "pyobjecthasht": 1159, "get_item": 1159, "1393": 1159, "_locindex": 1159, "1391": 1159, "thru": 1159, "_validate_kei": 1159, "_get_label": 1159, "1343": 1159, "1341": 1159, "axisint": 1159, "5567": 1159, "ndframe": 1159, "drop_level": 1159, "new_index": 1159, "4235": 1159, "4239": 1159, "bool_": 1159, "3793": 1159, "3795": 1159, "3797": 1159, "invalidindexerror": 1159, "3799": 1159, "listlik": 1159, "_check_indexing_error": 1159, "3801": 1159, "3803": 1159, "sort_index": 1159, "multiindex": 1159, "contrari": 1160, "lower_email": 1161, "rentner": 1161, "is_palindrom": 1161, "facto": [1162, 1186], "subel": 1162, "attrib": 1162, "getroot": 1162, "package manag": 1164, "project manag": [1164, 1192], "unit test": 1164, "virtual environ": 1164, "affin": 1164, "witch": 1165, "gnore": 1165, "ackup": 1165, "bort": 1165, "cert": 1165, "pem": 1165, "pythonhost": 1165, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1165, "cp38": 1165, "manylinux2010_x86_64": 1165, "ext": 1165, "argcomplet": 1165, "asn1crypto": 1165, "ensurepip": [1166, 1172], "test_project": 1170, "test_soup": 1170, "test_task": 1170, "stringent": 1170, "discoveri": 1170, "syndrom": [1170, 1171, 1177], "test_person_point": 1170, "deselect": 1170, "test_": 1170, "test_simpl": 1170, "test_trivi": 1170, "test_trivial_but_fail": 1170, "___________________________": 1170, "____________________________": 1170, "test_stat": 1170, "implementation_point": 1170, "implementor1": 1170, "implementor2": 1170, "documentation_point": 1170, "integration_point": 1170, "implementation_perc": 1170, "documentation_perc": 1170, "integration_perc": 1170, "total_perc": 1170, "total_point": 1170, "gathered_point": 1170, "test_another_task_aspect": 1170, "test_ini_file_pars": 1170, "my_test_fil": 1170, "mytestcas": 1171, "runtest": 1171, "assertequ": 1171, "texttestrunn": 1171, "__db": 1171, "create_databas": 1171, "fill_test_data": 1171, "remove_databas": 1171, "testfeature1": 1171, "testfeature2": 1171, "testsuit": 1171, "addtest": 1171, "testload": 1171, "loadtestsfromtestcas": 1171, "testsometh": 1171, "failif": 1171, "failunless": 1171, "failunlessequ": 1171, "failifequ": 1171, "failunlessalmostequ": 1171, "failunlessrais": 1171, "env_dir": 1172, "my_venv": 1172, "easy_instal": 1172, "pip3": 1172, "powershel": 1172, "joblib": 1172, "threadpoolctl": 1172, "deactiv": 1172, "my_recreated_venv": 1172, "persuad": 1172, "will_fail": [1176, 1179], "initgoogletest": [1177, 1182], "run_all_test": [1177, 1182], "lgtest": [1177, 1179], "onesuit": 1177, "test1": 1177, "test2": 1177, "anothersuit": 1177, "postive_pattern": 1177, "negative_pattern": 1177, "gtest_list_test": 1177, "faildemo": 1177, "failisfat": 1177, "assertdemo": 1177, "assertisfat": 1177, "expect_": 1177, "expectdemo": 1177, "expectisnonfat": 1177, "expect_tru": 1177, "expect_eq": 1177, "0x58": 1177, "0x55": 1177, "assert_": 1178, "repoqueri": 1179, "dpkg": 1179, "listfil": 1179, "joergfaschingbau": 1179, "cmake_compiler_is_gnucc": 1179, "ggdb": 1179, "googlebenchmark": 1179, "predef": [1181, 1182], "predefinedtestenviron": 1182, "paranoidtest": 1182, "untechn": 1182, "thefixtur": 1182, "testthatmodifiesst": 1182, "complexfixtur": 1182, "first_n": 1182, "sometest": 1182, "egal": 1184, "welcher": 1184, "schulungstyp": 1184, "problemlo": 1184, "verifiziert": 1184, "formlos": 1184, "anliegen": 1184, "umgehend": 1184, "setzen": 1184, "besprechen": 1184, "gestaltung": 1184, "schl\u00fcssigkeit": 1184, "chronologisch": 1184, "gehaltenen": 1184, "querzulesen": 1184, "roter": 1184, "faden": 1184, "ablaufen": 1184, "\u00e4nderungen": 1184, "kursgeschehen": 1184, "passieren": 1184, "detailliert": 1184, "kosten": 1184, "terminen": 1184, "inhouseschulungen": 1184, "buchenden": 1184, "terminisiert": 1184, "zustandekommt": 1184, "zeitlich": 1184, "\u00f6rtlich": 1184, "flexibel": [1184, 1185], "zul\u00e4sst": 1184, "besond": 1184, "onlineschulungen": 1184, "erwiesen": 1184, "dedizierten": 1184, "implementieren": [1184, 1189], "instruktionen": [1184, 1188], "datenschutzrichtlinien": 1184, "genug": 1184, "durchweg": 1184, "wahlweis": 1184, "offenen": 1184, "anmelden": 1184, "inhouseschulung": 1184, "exklusiv": 1184, "\u00fcblicherweis": 1184, "firmenstandort": 1184, "basteln": [1184, 1201], "schwierig": 1184, "z\u00fcgig": 1185, "uhr": 1185, "punktlandung": 1185, "mbr": 1185, "bootet": 1185, "nachs\u00e4tz": 1185, "wahllos": 1185, "reinen": [1185, 1201], "gebastelt": 1185, "leichtfertigerweis": 1185, "richtigerweis": 1185, "multilib": 1185, "ausgestattet": [1185, 1194, 1201, 1208], "l\u00e4uft": 1185, "seltsamerweis": 1185, "dar\u00fcber": 1185, "zeitersparnisgr\u00fcnden": 1185, "hinweggeholfen": 1185, "vorcompilierten": 1185, "statisch": [1185, 1203], "gelinkten": 1185, "christof": 1185, "sourcen": 1185, "crosszucompilieren": 1185, "gescheitert": 1185, "ungl\u00fccklichen": 1185, "umstand": 1185, "schulungsrechn": 1185, "neu": 1185, "aufzusetzen": 1185, "kompil": 1185, "verschwunden": 1185, "buildscript": 1185, "konnt": 1185, "kreativen": 1185, "wiederhergestellt": 1185, "v\u00f6llig": 1185, "sinnfrei": 1185, "distributionen": 1185, "compilieren": [1185, 1187], "architekturen": 1185, "versucht": [1185, 1186, 1188], "leben": [1185, 1201], "anzuwenden": 1185, "leut": 1185, "anzusehen": 1185, "wort": [1185, 1187], "gefallen": 1185, "hart": 1185, "garantien": 1185, "durchau": 1185, "gerechtfertigt": 1185, "gesch\u00fctz": 1185, "auffahren": 1185, "enthaltenen": 1185, "n\u00fctzen": 1185, "stichwort": [1185, 1194, 1201], "mittelweg": 1185, "diffundieren": 1185, "aufruft": 1185, "startet": 1185, "ausgekl\u00fcgelt": 1185, "funktionsweis": 1185, "jeher": 1185, "kennt": [1185, 1207], "gewaltig": 1185, "geschichtsbelastet": 1185, "tr\u00e4gt": 1185, "intelligent": [1185, 1194, 1201], "trotz": 1185, "behauptungen": 1185, "gar": 1185, "lieblingsseit": 1185, "linuxthemen": 1185, "zentrisch": 1185, "bourne shel": [1186, 1196], "\u00fcbel": 1186, "sprechen": [1186, 1194, 1201], "vollst\u00e4ndig": 1186, "shellprogrammierung": 1186, "ruf": 1186, "schmutzigen": 1186, "stattdessen": 1186, "hauch": 1186, "pervers": 1186, "\u00e4sthetik": 1186, "verpassen": 1186, "geschicht": 1186, "kram": 1186, "environmentvariablen": 1186, "kontrollkonstrukt": [1186, 1187], "hauptteil": 1186, "stringmanipul": 1186, "obskur": 1186, "konstrukt": [1186, 1196], "auskommt": 1186, "umgang": [1186, 1196], "bibel": 1187, "hinzuf\u00fcgen": 1187, "erfind": 1187, "tickt": 1187, "wozu": 1187, "grenzen": 1187, "vorlag": 1187, "didaktik": 1187, "erg\u00e4nzt": 1187, "kontext": 1187, "heutigen": 1187, "sprachkern": 1187, "unterrichten": 1187, "standardlibrari": 1187, "zugunsten": 1187, "bequemeren": 1187, "verzichten": 1187, "sprachdesign": 1187, "geachtet": 1187, "isoliert": 1187, "abseit": [1187, 1189, 1207], "mitbringt": 1187, "h\u00e4lt": 1187, "eignet": 1187, "hervorragend": [1187, 1194, 1202, 1207], "systemprogrammierung": 1187, "weglassen": 1187, "programmiert": [1187, 1189], "dementsprechend": [1187, 1207], "sinngem\u00e4ss": 1187, "aufgeteilt": 1187, "manipulieren": [1187, 1196], "maschineninstruktionen": 1187, "ausgef\u00fchrt": [1187, 1188], "geschwindigkeitsvorteil": 1187, "interpretierten": 1187, "nachteil": 1187, "verst\u00e4ndni": [1187, 1196, 1206], "speicherverwaltung": [1187, 1189, 1204], "integral": 1187, "zusammengesetzt": 1187, "speicherlayout": 1187, "wenigst": 1187, "worin": 1187, "programmstrukturierung": 1187, "deklar": 1187, "beliebtest": 1187, "unmeng": 1187, "flexibilit\u00e4t": [1187, 1204], "einbringen": 1187, "unbeliebtest": 1187, "fehlerm\u00f6glichkeiten": 1187, "verkettet": 1187, "fehlerszenarien": [1187, 1207], "absturz": 1187, "dahinsiechen": 1187, "debugginghilfen": 1187, "typumwandlungen": 1187, "hauptkritikpunkt": 1187, "sorglos": 1187, "integertypen": 1187, "breit": [1187, 1194], "regelwerk": 1187, "historisch": 1187, "aufarbeitung": 1187, "historischem": 1187, "ballast": 1187, "compileroptionen": 1187, "pr\u00e4prozessor": [1187, 1188], "leid": 1187, "grundz\u00fcgen": 1187, "gezeigt": [1187, 1196, 1201], "compilierung": 1187, "heutzutag": 1187, "wegzudenken": [1187, 1194], "damal": [1187, 1189], "programmen": [1187, 1188, 1203], "separat": 1187, "verbinden": 1187, "spielt": 1187, "archivieren": 1187, "linken": 1187, "programmgesundheit": 1187, "bedeutungen": 1187, "optimierungsm\u00f6glichkeiten": 1187, "memoryfehlern": 1187, "verwalten": 1187, "formatiert": 1187, "_und_": 1187, "komfort": 1187, "m\u00e4chtige": [1187, 1204], "jedoch": [1187, 1194, 1201, 1207], "weit": 1187, "fehlerimmunit\u00e4t": 1187, "allein": 1187, "verdienen": 1187, "erw\u00e4hnung": 1187, "stringbearbeitung": 1187, "heutig": 1187, "eigenwillig": 1187, "f\u00fclle": 1187, "erleichtern": 1187, "lauern": [1187, 1206], "gefahren": [1187, 1206, 1207], "sprachumfang": 1188, "angeht": 1188, "compiliert": 1188, "maschinencod": 1188, "pointern": 1188, "sofort": 1188, "beipflichten": 1188, "einmal": [1188, 1203, 1204, 1208], "beinharten": 1188, "typenkonvertierungen": 1188, "aufgesessen": 1188, "beleuchtet": [1188, 1206], "beschrittenen": 1188, "dunklen": 1188, "ecken": 1188, "widmet": 1188, "intensiv": 1188, "fehlersuch": 1188, "erkl\u00e4rungen": 1188, "sprachdefinit": 1188, "greifbar": 1188, "verdacht": 1188, "manch": 1188, "typkonversionen": 1188, "l\u00fccken": 1188, "typensystem": [1188, 1189], "techniken": [1188, 1194], "typensicherheit": 1188, "dunkl": 1188, "unn\u00f6tig": 1188, "programmhygien": 1188, "wege": 1188, "sauberen": 1188, "weisen": 1188, "optimierungstechniken": 1188, "anwenden": 1188, "optimierung": 1188, "erschweren": 1188, "lesbarkeit": 1188, "memoryzugriff": 1188, "ur": 1188, "beziehungsweis": 1188, "hardwareunterst\u00fctzung": 1188, "Ins": 1188, "kenntniss": [1188, 1189, 1197, 1203, 1204, 1206, 1207], "urspr\u00fcnglich": 1189, "erfunden": 1189, "leichter": 1189, "handhabbar": 1189, "erm\u00f6glichen": [1189, 1204], "ressourcenverwaltung": 1189, "kontrolliert": 1189, "mainstream": 1189, "einzug": 1189, "hie\u00df": 1189, "treffend": 1189, "seitdem": 1189, "vereinzelt": 1189, "soviel": 1189, "dampflokomot": 1189, "stellt": [1189, 1207], "vielfalt": 1189, "sprachkonstrukt": 1189, "genial": 1189, "gewagt": 1189, "behaupten": 1189, "anbelangt": 1189, "sprachmittel": 1189, "wichtigst": 1189, "n\u00e4mlich": 1189, "reichlich": [1189, 1194, 1201], "umstieg": 1189, "erw\u00e4gen": 1189, "embeddedbetriebssystem": 1189, "einsetzen": 1189, "vielerort": 1189, "datenkapselung": 1189, "objekten": 1189, "fallstrick": 1189, "korrektheit": 1189, "100ste": 1189, "strukturiert": 1189, "fehlerbehandlung": 1189, "generisch": 1189, "mechanismen": [1189, 1204, 1206, 1208], "mehrfachvererbung": 1189, "teilweis": 1189, "kapiteln": 1189, "unterschied": 1189, "erl\u00e4utert": [1189, 1194], "c++ 11": 1190, "enjoy": 1190, "overrrid": 1190, "coolest": 1190, "optinion": 1190, "oneshot": 1190, "communict": 1190, "unlearn": 1190, "inventor": 1191, "weren": 1192, "intricaci": 1192, "interdepend": 1192, "rudimentari": 1192, "graviti": 1193, "vocabulari": 1193, "confront": 1193, "reusab": 1193, "nicknam": 1193, "zentrum": [1194, 1201], "vollwertig": 1194, "selben": 1194, "betriessystemkonzept": 1194, "jahrzehnten": 1194, "bew\u00e4hrt": 1194, "automot": 1194, "sektor": 1194, "vertreten": 1194, "altbew\u00e4hrten": 1194, "konsequ": [1194, 1204], "ausbaut": 1194, "hardwareschnittstellen": 1194, "echtzeitf\u00e4higkeit": 1194, "dahint": 1194, "rundet": 1194, "hardwarebastelworkshop": 1194, "embeddedprogrammier": [1194, 1201], "l\u00e4nger": [1194, 1201], "normalen": [1194, 1201], "dateisystem": [1194, 1201], "versagt": [1194, 1201], "teuer": [1194, 1201], "erkauft": [1194, 1201], "testen": [1194, 1201, 1208], "hostsoftwar": [1194, 1201], "architekten": [1194, 1201], "plattformzusammensetzung": [1194, 1201], "entscheiden": [1194, 1201, 1208], "rechtfertigen": [1194, 1201], "logik": [1194, 1201], "steck": [1194, 1201], "beantworten": [1194, 1201, 1208], "eingeladen": [1194, 1201], "l\u00f6tmateri": [1194, 1201], "mitzubringen": [1194, 1201], "bastelei": 1194, "vorhandenen": [1194, 1201, 1208], "minicomputern": 1194, "prototypen": 1194, "desktopbetriebssystem": [1194, 1201], "verh\u00e4ltniss": [1194, 1201], "512mb": [1194, 1201], "m\u00fchsam": [1194, 1201], "produktivsystem": [1194, 1201], "ohnehin": [1194, 1201], "unangebracht": [1194, 1201], "anf\u00e4ng": [1194, 1201], "filesystemen": [1194, 1201], "durchzuf\u00fchren": 1194, "filedeskriptoren": [1194, 1196], "getrennt": 1194, "abl\u00e4uf": 1194, "adressraum": 1194, "sorgfalt": 1194, "bloss": 1194, "gef\u00e4chert": 1194, "gewissen": 1194, "szenarien": 1194, "steuerungen": 1194, "gef\u00e4hrlich": 1194, "umfangreich": 1194, "hauptthema": 1194, "dennoch": 1194, "n\u00fctzlich": 1194, "haub": 1194, "schalten": [1194, 1201], "ausg\u00e4ngen": [1194, 1201], "abfragen": [1194, 1201], "eing\u00e4ngen": [1194, 1201], "dumm": [1194, 1201], "ereignisgesteuert": [1194, 1201], "mikrocontrollern": [1194, 1201], "aufgaben": [1194, 1201], "temperaturmessung": [1194, 1201], "expandierung": [1194, 1201], "ausgelagert": [1194, 1201, 1204], "dediziert": [1194, 1201], "angesteuert": [1194, 1201], "gegeben": [1194, 1201, 1203, 1204], "driverframework": 1194, "netzwerkstack": [1194, 1201], "einpasst": [1194, 1201], "schnittstellen": [1194, 1204], "implementationssprachen": 1194, "hardwareerfahrung": [1194, 1201], "linux kernel": 1195, "kernel driv": [1195, 1205], "wait queu": 1195, "block devic": 1195, "interrupt handl": 1195, "dose": 1195, "curios": 1195, "userpac": 1195, "massiv": 1195, "vital": 1195, "einblick": 1196, "gingen": 1196, "vieler": 1196, "demosess": 1196, "vertrackt": 1196, "entmystifiziert": 1196, "gef\u00fcrchteten": 1196, "erlernt": 1196, "inbetriebsetz": 1196, "hardwareingenieur": 1196, "angehend": 1196, "administratoren": 1196, "editieren": 1196, "bl\u00e4ttern": 1196, "textdateien": 1196, "schnittstel": 1196, "kombinationen": 1196, "kombin": 1196, "abschweifen": 1196, "programmierkenntniss": 1196, "zwingend": [1196, 1203], "make gnu": 1197, "gnu mak": 1197, "build manag": 1197, "seiner": [1197, 1204, 1208], "m\u00e4chtigen": 1197, "daran": 1197, "wendet": 1197, "interessiert": 1197, "gr\u00f6\u00dfere": 1197, "gebaut": 1197, "komplizierten": 1197, "griff": 1197, "regeln": 1197, "selbstdefiniert": 1197, "gewiss": [1197, 1202, 1204], "fertigkeit": 1197, "hemmenhofen": 1201, "gleichnamigen": 1201, "gerufen": 1201, "produktivem": 1201, "n\u00e4herzubringen": 1201, "spielekonsumenten": 1201, "kinder": 1201, "enden": 1201, "erstem": 1201, "breiteren": 1201, "drauf": 1201, "vorhandensein": 1201, "basisinfrastruktur": 1201, "vielem": 1201, "hervorragenden": 1201, "gestandenen": 1201, "obwohl": [1201, 1204], "sprachunabh\u00e4ngig": 1201, "brauchen": 1201, "computerspielen": 1201, "spielerischen": 1201, "f\u00fchren": 1201, "w\u00e4hlt": 1201, "lm": 1201, "netzwerkprotokol": [1201, 1207], "behaupt": 1202, "allen": 1202, "gro\u00dfkopferten": 1202, "kommerziellen": 1202, "systemen": 1202, "perforc": 1202, "etabliert": 1202, "erh\u00e4ltlich": 1202, "nachfolg": 1202, "abgel\u00f6st": 1202, "prim\u00e4r": 1202, "publikum": 1202, "sekund\u00e4r": 1202, "versionieren": 1202, "arbeitsweis": 1202, "bereinigung": 1202, "strategien": 1202, "programmierern": 1202, "vertrautheit": 1202, "vorteil": [1202, 1203], "umsteig": 1203, "\u00e4rgerni": 1203, "schl\u00e4gt": 1203, "ausgekl\u00fcgeltst": 1203, "systemcal": [1203, 1204, 1207], "sogenannt": 1203, "inspizieren": 1203, "grundprinzip": [1203, 1207], "sammlung": [1203, 1204], "ausf\u00fchrbar": 1203, "bedient": 1203, "handhabung": 1203, "gew\u00f6hnungsbed\u00fcrftig": 1203, "filedescriptoren": 1203, "lowlevel": 1203, "tiefen": 1204, "steigen": 1204, "alltagsprogrammier": 1204, "normalerweis": 1204, "verborgen": 1204, "hochperformant": 1204, "anwendungen": 1204, "modernen": [1204, 1206], "bertriebssystemen": 1204, "sogenanntem": 1204, "virtuellen": 1204, "speicherbereich": 1204, "instanzen": 1204, "desselben": 1204, "hauptspeich": 1204, "speicherzugriff": 1204, "schutzmechanismen": 1204, "miteinand": 1204, "kommunizieren": [1204, 1207], "semaphoren": 1204, "steinalt": 1204, "\u00fcberlebt": 1204, "keinesweg": 1204, "fehlerfrei": 1204, "benutzen": 1204, "verpasst": 1204, "beruht": 1204, "ladbar": 1204, "ressourcenschonung": 1204, "wasserdichten": 1204, "upgradepfad": 1204, "grundkenntni": [1204, 1206, 1207], "memory manag": 1205, "tcp-ip": 1205, "unverst\u00e4ndlich": 1206, "ungeachtet": 1206, "effizient": 1206, "propagiert": 1206, "soliden": 1206, "unbedacht": 1206, "handeln": 1206, "lebenszyklu": 1206, "gestartet": 1206, "versuchung": 1206, "gewalt": 1206, "terminieren": 1206, "konsequenzen": 1206, "joinabl": 1206, "detach": 1206, "eigenschaften": 1206, "racecondit": 1206, "vermeidung": 1206, "\u00fcberal": 1206, "vermutet": 1206, "integeroperationen": 1206, "kommunikationsmechanismen": 1206, "werkzeugkasten": 1206, "kommunikationskan\u00e4l": 1206, "niemal": 1206, "reihen": 1206, "traditionellen": 1206, "aufgenommen": 1206, "codebasi": 1206, "verzweigt": 1206, "ansehnlich": 1206, "realtimef\u00e4higkeiten": 1206, "priorit\u00e4ten": 1206, "f\u00fcgt": 1207, "benutzend": 1207, "programmierparadigma": 1207, "dar": 1207, "beschr\u00e4nkt": 1207, "streamverbindungen": 1207, "verbindungsaufnahm": 1207, "datagramm": 1207, "verbindungslos": 1207, "adressfamilien": 1207, "auffassung": 1207, "adress": 1207, "endpoint": 1207, "nummern": 1207, "adressen": 1207, "verbindungen": 1207, "hilfsfunktionen": 1207, "adresskonvertierung": 1207, "ipv6": 1207, "\u00e4quivalent": 1207, "ungleich": 1207, "ressourcenschonend": 1207, "pfadnamen": 1207, "bedienbar": 1207, "mittlerweis": 1207, "eingepasst": 1207, "angenehm": 1207, "umzugehen": 1207, "widmen": 1207, "verbundenen": 1207, "auszusetzen": 1207, "reagiert": 1207, "gelesen": 1207, "eventgetrieben": 1207, "knopfdruck": 1208, "abnimmt": 1208, "zahlreichen": 1208, "abgeklopft": 1208, "angst": 1208, "kaputtmachen": 1208, "konstruktiv": 1208, "einfachheit": 1208, "klarzumachen": 1208, "umzusetzen": 1208, "anstatt": 1208, "auszustatten": 1208, "gedanken": 1208, "erkannt": 1208, "entscheidung": 1208, "verbockt": 1208, "softwareentwickl": 1208, "jedwed": 1208, "stabilen": 1208, "abliefern": 1208, "entscheidungstr\u00e4g": 1208, "vorgesetzt": 1208, "schl\u00fcssige": 1208, "kan\u00e4l": 1208, "etablieren": 1208, "unittestframework": 1208, "tragen": 1208, "schwerf\u00e4llig": 1208, "halben": 1208, "\u00fcbrige": 1208, "zurechtzufinden": 1208, "vortragend": 1208, "aufgrund": 1208, "aufwarten": 1208, "beibringen": 1208, "\u00fcppigen": 1208, "verbergen": 1208, "pr\u00e4ferierten": 1208, "vortragenden": 1208, "async_watch_line_valu": 66, "find_line_by_nam": 66, "get_chip_info": 66, "get_line_info": 66, "get_line_valu": 66, "get_multiple_line_valu": 66, "reconfigure_input_to_output": 66, "toggle_line_valu": 66, "toggle_multiple_line_valu": 66, "watch_line_info": 66, "watch_line_ris": 66, "watch_line_valu": 66, "watch_multiple_line_valu": 66, "m28fin9y_r8": [], "rd9wqgmzehon4k": [], "ifram": [], "k3v6yidj9x11dttp": [], "player": [], "framebord": [], "acceleromet": [], "gyroscop": [], "referrerpolici": [], "allowfullscreen": [], "lennart": 66, "p\u00f6ttere": 66, "0pointer": 66, "vimg": 65, "busctl": 65}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 898], "googl": 0, "map": [0, 7, 144, 221, 226, 229, 232, 235, 251, 261, 325, 365, 561, 562, 590, 651, 652, 743, 744, 809, 955], "streetview": 0, "curriculum": [1, 75, 76], "vita": 1, "\u00fcber": [2, 206, 216, 221, 229, 237], "mich": [2, 223], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 170], "angebot": 5, "In": [5, 32, 45, 124, 156, 178, 180, 181, 183, 213, 216, 277, 278, 280, 299, 301, 324, 337, 388, 479, 481, 487, 488, 549, 554, 556, 597, 601, 612, 613, 614, 615, 616, 617, 642, 699, 703, 707, 737, 738, 744, 757, 816, 865, 866, 873, 929, 979, 1012, 1014, 1028, 1035, 1076, 1190], "hous": 5, "schulungen": [5, 1184], "zu": [5, 23, 199, 216], "meiner": 5, "person": [5, 274, 508, 707], "schwerpunk": 5, "c": [5, 7, 69, 70, 71, 72, 73, 99, 109, 110, 112, 113, 126, 148, 170, 184, 199, 200, 216, 226, 234, 235, 251, 276, 277, 278, 280, 281, 289, 298, 300, 337, 338, 343, 373, 379, 388, 397, 437, 438, 475, 482, 487, 494, 501, 543, 549, 560, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 599, 605, 606, 610, 611, 612, 624, 630, 632, 669, 677, 692, 694, 695, 696, 699, 700, 732, 733, 737, 744, 745, 753, 762, 767, 771, 790, 938, 958, 976, 979, 1081, 1187, 1188, 1189, 1190, 1191, 1193], "python": [5, 8, 11, 59, 61, 62, 63, 64, 65, 66, 67, 92, 97, 138, 166, 193, 196, 205, 206, 208, 209, 210, 212, 214, 216, 219, 221, 224, 230, 231, 233, 236, 238, 240, 243, 244, 245, 246, 247, 249, 250, 252, 255, 256, 259, 262, 264, 267, 269, 270, 271, 272, 273, 275, 277, 278, 280, 282, 283, 284, 285, 286, 287, 292, 294, 295, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 370, 373, 375, 388, 695, 723, 737, 744, 938, 940, 1037, 1040, 1044, 1059, 1060, 1061, 1063, 1065, 1067, 1075, 1086, 1090, 1135, 1136, 1137, 1150, 1151, 1153, 1163, 1164, 1165, 1166, 1167, 1198, 1199], "linux": [5, 81, 82, 83, 99, 112, 113, 126, 148, 173, 178, 186, 188, 189, 191, 198, 213, 215, 220, 225, 279, 288, 289, 309, 310, 353, 354, 373, 375, 388, 390, 815, 867, 868, 871, 877, 934, 936, 940, 941, 942, 944, 957, 975, 998, 1185, 1195, 1196, 1203, 1204, 1205, 1206, 1207], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 62, 63, 80, 166, 168, 189, 225, 234, 278, 280, 288, 317, 320, 372, 478, 1136, 1192, 1195], "materi": [6, 24, 28, 30, 66, 125, 148, 196, 198, 213, 234, 369, 384, 385, 389, 478, 1135, 1136, 1157], "einleitung": [7, 226], "datatyp": [7, 216, 221, 223, 226, 229, 238, 242, 245, 248, 253, 255, 261, 265, 268, 270, 271, 283, 285, 286, 292, 293, 295, 303, 305, 306, 307, 311, 312, 313, 323, 325, 327, 329, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 351, 365, 393, 443, 446, 1038, 1067, 1068, 1072], "number": [7, 226, 229, 232, 253, 265, 268, 365, 723, 794, 801, 802, 965, 1039, 1055, 1058, 1067, 1075, 1076, 1098, 1101, 1111, 1112, 1154, 1158, 1159, 1182], "integ": [7, 206, 216, 221, 226, 229, 253, 255, 265, 268, 274, 286, 293, 313, 325, 329, 335, 341, 351, 365, 411, 458, 463, 679, 1046, 1067, 1076], "string": [7, 192, 193, 199, 206, 216, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 270, 271, 274, 283, 286, 290, 293, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 365, 392, 405, 406, 412, 418, 482, 660, 661, 662, 675, 706, 707, 1067, 1080, 1081, 1082, 1118, 1161], "compound": [7, 216, 226, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 303, 307, 313, 325, 329, 341, 347, 351, 446, 1068], "list": [7, 11, 23, 192, 193, 206, 216, 223, 226, 229, 232, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 335, 341, 347, 351, 451, 482, 549, 573, 590, 604, 647, 695, 708, 745, 799, 826, 827, 828, 850, 920, 1032, 1035, 1038, 1039, 1048, 1068, 1076, 1083, 1113, 1114, 1165], "arrai": [7, 194, 216, 226, 392, 401, 405, 443, 445, 455, 468, 578, 630, 632, 640, 684, 699, 710, 749], "javascript": [7, 226, 265], "std": [7, 109, 144, 226, 235, 251, 277, 278, 280, 337, 338, 497, 556, 561, 562, 572, 590, 613, 614, 615, 616, 617, 625, 631, 632, 633, 634, 644, 651, 652, 662, 675, 688, 691, 695, 698, 700, 707, 743, 744, 745, 749, 751, 754, 755, 756, 758, 759, 764, 765, 766, 767, 769, 770, 771, 774, 776, 780, 781, 782, 786, 789], "vector": [7, 109, 226, 556, 572, 590, 597, 613, 631, 632, 633, 634, 648, 691, 700, 745, 774, 991], "java": [7, 226], "dictionari": [7, 192, 206, 216, 221, 223, 226, 229, 237, 238, 242, 245, 248, 253, 255, 258, 261, 265, 268, 271, 274, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 365, 1032, 1036, 1049, 1068, 1084, 1105, 1132], "kei": [7, 183, 226, 274, 341, 365, 654, 655, 898, 949, 951], "valu": [7, 62, 211, 226, 297, 298, 341, 365, 403, 459, 616, 976, 998, 1069], "set": [7, 38, 62, 211, 216, 221, 226, 229, 237, 238, 242, 245, 248, 253, 255, 261, 265, 268, 271, 283, 286, 293, 303, 307, 313, 325, 329, 335, 341, 347, 351, 894, 895, 1010, 1032, 1068, 1085, 1124, 1149, 1159], "mathematisch": [7, 226], "mengen": [7, 216, 226], "while": [7, 193, 206, 216, 226, 245, 253, 255, 258, 261, 268, 271, 293, 335, 341, 347, 351, 428, 429, 836, 841, 842, 1071, 1098, 1122], "function": [7, 43, 180, 193, 211, 216, 226, 229, 232, 235, 238, 242, 245, 253, 255, 261, 265, 270, 271, 274, 277, 278, 280, 282, 286, 293, 299, 307, 317, 318, 320, 323, 324, 325, 327, 333, 334, 335, 337, 338, 339, 340, 341, 345, 346, 347, 349, 350, 351, 370, 403, 405, 410, 437, 439, 441, 442, 447, 479, 480, 539, 573, 597, 606, 611, 613, 618, 622, 638, 695, 702, 705, 706, 707, 708, 717, 747, 759, 760, 799, 800, 862, 956, 958, 996, 1031, 1033, 1034, 1036, 1038, 1039, 1058, 1075, 1077, 1078, 1079, 1087, 1110, 1112, 1116, 1119, 1127, 1129, 1161], "basic": [8, 62, 72, 92, 128, 172, 184, 193, 205, 210, 212, 213, 214, 215, 219, 220, 224, 225, 234, 243, 246, 249, 256, 262, 267, 270, 273, 279, 285, 288, 292, 295, 302, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 320, 323, 324, 325, 327, 328, 329, 333, 334, 335, 336, 339, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 365, 388, 433, 437, 440, 446, 473, 480, 496, 497, 551, 554, 619, 624, 627, 630, 631, 633, 637, 640, 651, 657, 666, 702, 710, 744, 749, 753, 754, 755, 756, 789, 801, 802, 803, 864, 867, 868, 871, 881, 920, 931, 936, 945, 957, 964, 972, 980, 1012, 1034, 1035, 1088, 1091, 1125, 1144, 1155, 1156, 1176, 1177, 1178, 1196, 1199], "2021": [8, 11, 125, 217, 219, 222, 224, 225, 227, 230, 233, 234, 235, 236, 240, 243, 245, 246, 248, 249, 251, 362, 363, 370, 373, 374, 375, 376, 377, 378, 379, 388], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 166, 170, 180, 189, 194, 209, 210, 212, 213, 214, 215, 217, 219, 220, 224, 227, 230, 233, 234, 235, 236, 240, 243, 252, 256, 259, 262, 264, 267, 270, 273, 282, 285, 292, 295, 389, 1136, 1142], "inform": [8, 39, 158, 168, 180, 205, 208, 209, 210, 212, 213, 214, 215, 217, 219, 220, 224, 227, 230, 233, 234, 235, 236, 240, 243, 252, 256, 259, 262, 264, 267, 270, 273, 282, 285, 292, 295, 361, 370, 473, 757, 1065, 1136], "\u00fcberblick": [8, 217, 227, 236, 252, 264, 1189], "log": [8, 107, 153, 174, 209, 210, 213, 214, 222, 224, 225, 227, 230, 234, 236, 240, 243, 252, 264, 273, 370, 383, 384, 865, 866, 873], "tag": [8, 200, 219, 223, 227, 230, 236, 252, 264, 265], "1": [8, 19, 23, 37, 75, 80, 99, 109, 116, 119, 120, 123, 126, 147, 148, 149, 175, 178, 190, 198, 200, 205, 209, 210, 212, 213, 214, 216, 217, 219, 224, 225, 227, 230, 234, 235, 236, 240, 243, 246, 249, 252, 256, 264, 289, 292, 295, 298, 299, 300, 301, 302, 306, 310, 312, 317, 323, 324, 327, 328, 338, 350, 354, 369, 371, 372, 379, 386, 388, 391, 392, 393, 395, 399, 403, 412, 414, 415, 416, 417, 421, 422, 425, 428, 434, 435, 436, 437, 438, 441, 443, 447, 451, 453, 455, 458, 459, 460, 461, 463, 464, 466, 467, 473, 487, 497, 500, 502, 538, 600, 602, 609, 620, 623, 630, 632, 713, 718, 759, 764, 770, 785, 786, 797, 802, 809, 820, 830, 898, 937, 938, 944, 953, 967, 980, 981, 983, 985, 987, 988, 999, 1006, 1010, 1013, 1014, 1030, 1038, 1043, 1064, 1066, 1067, 1073, 1076, 1081, 1082, 1084, 1085, 1086, 1087, 1150, 1161, 1162, 1185], "2": [8, 19, 23, 37, 76, 80, 99, 109, 114, 115, 116, 119, 123, 126, 148, 175, 178, 200, 205, 206, 209, 210, 212, 213, 214, 216, 219, 223, 224, 225, 227, 230, 234, 235, 236, 240, 243, 245, 246, 249, 252, 256, 264, 289, 292, 295, 298, 299, 300, 301, 302, 306, 310, 317, 323, 324, 327, 328, 334, 338, 350, 354, 384, 386, 388, 391, 392, 393, 395, 399, 403, 412, 414, 415, 416, 417, 421, 422, 425, 428, 434, 435, 437, 438, 441, 443, 447, 451, 453, 455, 458, 459, 460, 461, 463, 464, 466, 467, 473, 488, 497, 500, 502, 538, 587, 600, 602, 609, 620, 623, 630, 632, 714, 719, 759, 764, 770, 785, 786, 802, 809, 830, 898, 937, 938, 944, 953, 967, 980, 981, 983, 985, 987, 988, 999, 1006, 1010, 1013, 1014, 1026, 1030, 1038, 1043, 1064, 1066, 1067, 1073, 1075, 1076, 1082, 1084, 1085, 1086, 1087, 1146, 1148, 1149, 1150, 1161, 1162], "live": [8, 42, 44, 45, 192, 195, 217, 227, 230, 240, 289, 595, 635, 636, 638, 639, 642, 643, 644, 656, 695, 706, 739, 740, 767, 769, 869, 895, 959, 977], "hack": [8, 42, 44, 45, 192, 195, 217, 227, 230, 240, 289, 292, 296, 299, 302, 328, 595, 635, 636, 638, 639, 642, 643, 644, 656, 695, 706, 739, 740, 767, 769, 896, 977], "jupyt": [8, 9, 40, 154, 217, 218, 222, 223, 224, 227, 228, 230, 231, 240, 241, 243, 244, 246, 247, 250, 252, 254, 257, 260, 263, 266, 269, 271, 272, 275, 284, 287, 290, 294, 303, 304, 308, 314, 319, 322, 325, 326, 329, 330, 336, 352, 365, 1142, 1143], "notebook": [8, 9, 40, 154, 212, 217, 218, 222, 223, 224, 227, 228, 230, 231, 233, 240, 241, 243, 244, 246, 247, 248, 250, 252, 254, 257, 260, 263, 266, 269, 271, 272, 275, 284, 287, 290, 294, 303, 304, 308, 314, 319, 322, 325, 326, 329, 330, 336, 352, 365, 370, 1140, 1142, 1143], "link": [8, 23, 39, 153, 154, 176, 194, 205, 208, 210, 212, 214, 217, 219, 224, 225, 227, 236, 240, 243, 246, 252, 259, 270, 273, 306, 312, 375, 377, 451, 453, 702, 716, 723, 741, 748, 752, 815, 826, 827, 877, 898, 919, 937, 944, 952, 1028, 1029, 1060, 1091, 1092, 1137, 1153, 1155, 1156, 1158, 1159, 1160, 1161, 1168, 1173], "programmierung": [9, 11, 192, 217, 218, 227, 228, 236, 252, 254, 264, 266, 388], "grundlagen": [9, 11, 205, 216, 217, 218, 227, 228, 230, 231, 236, 240, 244, 247, 250, 252, 254, 264, 266, 269, 272, 275, 284, 287, 308, 388], "detail": [10, 80, 225, 229, 261, 268, 300, 347, 351, 365, 387, 463, 541, 631, 1066], "content": [11, 24, 37, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 188, 197, 201, 202, 232, 372, 476, 578, 581, 587, 590, 596, 678, 755, 867, 887, 900, 906, 912, 915, 932, 940, 941, 948, 957, 973, 975, 977, 992, 1002, 1005, 1019, 1039, 1095, 1096, 1100, 1109, 1123, 1130, 1177, 1179, 1182, 1190, 1193, 1195], "anhand": [11, 216, 236, 252, 264, 388, 1196], "von": [11, 23, 187, 192, 196, 199, 206, 216, 223, 236, 237, 252, 264, 351, 365, 388, 1196], "12": [11, 23, 45, 66, 127, 128, 131, 139, 144, 196, 215, 216, 220, 227, 235, 248, 249, 251, 282, 333, 334, 335, 338, 339, 340, 341, 342, 370, 375, 379, 381, 388], "und": [11, 23, 186, 190, 206, 216, 217, 221, 223, 227, 229, 232, 236, 252, 255, 261, 264, 268, 274, 341, 351, 371, 388, 413, 422, 1189, 1200], "13": [11, 23, 41, 45, 183, 205, 216, 217, 227, 280, 289, 292, 293, 295, 353, 354, 388], "4": [11, 23, 109, 175, 200, 209, 212, 216, 224, 225, 227, 230, 234, 235, 252, 264, 289, 379, 388, 393, 451, 455, 461, 497, 500, 602, 720, 1038], "templat": [12, 144, 234, 251, 300, 560, 573, 574, 575, 576, 592, 593, 594, 622, 623, 624, 630, 663, 709, 712, 717, 719, 747, 780], "descript": [12, 61, 63, 67, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 508, 595, 603, 618, 621, 624, 660, 665, 674, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 693, 735, 736, 760, 768, 772, 784, 788, 790, 932, 940, 941, 995], "sidebar": [12, 37], "metadata": [12, 277, 278, 280, 920], "about": [13, 109, 170, 189, 248, 253, 265, 283, 286, 292, 296, 313, 320, 335, 340, 341, 347, 350, 351, 490, 700, 737, 927, 1028, 1080, 1083, 1084, 1085], "thi": [13, 32, 37, 127, 131, 132, 134, 137, 139, 143, 153, 175, 180, 181, 183, 184, 194, 203, 609, 623, 738, 857, 936, 959, 1012, 1029, 1036, 1038], "site": [13, 28, 32, 153, 177, 179, 203], "licens": 13, "gplv3": 13, "github": [13, 124, 144, 177, 179, 209, 210, 222, 230, 370, 538, 552, 1137], "sphinx": [13, 40, 154, 157, 179], "instal": [13, 60, 66, 134, 154, 176, 180, 184, 188, 201, 202, 205, 230, 234, 235, 315, 331, 370, 375, 390, 485, 813, 955, 1010, 1021, 1026, 1027, 1060, 1091, 1092, 1124, 1137, 1153, 1170, 1172, 1177, 1179, 1192], "instruct": [13, 454, 764, 983, 1013, 1030], "pip": [13, 306], "venv": [13, 306], "work": [13, 17, 99, 124, 126, 148, 152, 156, 161, 175, 209, 240, 278, 280, 297, 298, 299, 300, 377, 471, 472, 473, 552, 623, 789, 857, 858, 894, 897, 901, 1026], "progress": [13, 17, 152], "more": [13, 175, 193, 206, 245, 248, 253, 261, 265, 268, 270, 282, 283, 285, 286, 289, 291, 292, 295, 301, 302, 305, 306, 311, 312, 313, 320, 323, 327, 333, 334, 335, 339, 340, 341, 345, 346, 347, 349, 350, 351, 370, 393, 399, 422, 438, 440, 454, 464, 480, 490, 492, 602, 612, 615, 622, 635, 641, 695, 737, 738, 742, 759, 776, 846, 875, 876, 877, 881, 882, 927, 954, 996, 1033, 1035, 1037, 1080, 1083, 1084, 1085, 1136, 1145, 1170, 1182], "opentrain": [14, 23], "draft": [15, 784, 932, 1090], "topic": [15, 21, 75, 76, 100, 101, 103, 104, 105, 106, 144, 169, 205, 209, 212, 233, 234, 235, 246, 251, 270, 273, 289, 292, 295, 298, 299, 323, 327, 337, 338, 360, 374, 378, 379, 388, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 501, 544, 545, 546, 547, 548, 549, 550, 553, 595, 603, 618, 621, 624, 640, 646, 650, 658, 663, 665, 668, 674, 692, 693, 697, 704, 711, 722, 735, 736, 746, 751, 760, 768, 772, 784, 788, 790, 791, 792, 815, 935, 950, 968, 970, 989, 995, 1016, 1022, 1023, 1038, 1043, 1051, 1090, 1139, 1143, 1147, 1151, 1153, 1157, 1169, 1175], "miscellan": [16, 151, 166, 170, 189, 193, 213, 242, 253, 255, 261, 271, 277, 278, 282, 286, 289, 298, 301, 302, 307, 312, 313, 323, 324, 327, 334, 335, 337, 341, 351, 573, 595, 674, 678, 709, 772, 974, 985, 987, 1082, 1151], "s5": [17, 18, 170], "integr": [17, 128, 130, 133, 699, 715], "web": [17, 95, 96, 171], "slide": [17, 18, 30, 45, 66, 193, 373, 385, 1006, 1010], "implement": [17, 127, 131, 132, 134, 135, 137, 139, 143, 144, 261, 324, 337, 356, 362, 502, 509, 519, 524, 534, 535, 536, 537, 541, 549, 554, 555, 599, 600, 605, 611, 613, 671, 695, 706, 796, 799, 818, 854, 1033, 1039, 1055, 1115], "note": [17, 37, 60, 138, 151, 188, 356, 495, 883], "todo": [17, 170, 199, 202, 213, 219, 357, 358, 359, 376, 478, 573, 574, 577, 580, 583, 586, 589, 592, 795, 799, 807, 839, 1001, 1004, 1008, 1089, 1152, 1176, 1181], "test": [18, 37, 42, 43, 44, 45, 50, 73, 127, 131, 132, 134, 135, 137, 139, 143, 184, 205, 235, 259, 270, 273, 282, 291, 292, 295, 296, 297, 301, 302, 315, 317, 320, 323, 324, 327, 331, 350, 378, 384, 388, 479, 493, 502, 522, 538, 552, 554, 555, 615, 799, 818, 851, 943, 972, 1024, 1027, 1092, 1125, 1132, 1133, 1134, 1142, 1170, 1171, 1175, 1177, 1179, 1182, 1192, 1208], "level": [19, 467], "head": [19, 37, 826, 929, 1145], "imag": [19, 194, 213, 1026], "screencast": [20, 167], "written": [21, 126, 598, 601], "new": [21, 135, 144, 169, 235, 251, 277, 278, 280, 337, 338, 388, 541, 578, 694, 695, 735, 771, 790, 818, 851, 1154], "write": [21, 42, 50, 58, 172, 541, 578, 605, 717, 732, 755, 796, 964, 971, 1056, 1086, 1093, 1162], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 229, 237], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 66, 99, 109, 116, 126, 144, 148, 175, 200, 209, 210, 212, 213, 214, 215, 216, 219, 224, 225, 230, 234, 235, 236, 238, 240, 245, 246, 249, 252, 256, 264, 271, 289, 292, 295, 298, 300, 301, 302, 306, 310, 312, 323, 324, 325, 327, 328, 334, 338, 350, 354, 388, 393, 443, 447, 451, 455, 461, 463, 464, 466, 467, 497, 500, 502, 538, 602, 715, 786, 967, 983, 987, 988, 1038, 1067, 1075, 1081, 1086], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 282, 388, 864], "anschlussf\u00f6rderung": 23, "die": [23, 53, 181, 199, 237, 1197], "besonder": [23, 216], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 200, 206, 216, 388, 1188], "da": [23, 196, 206, 223, 232, 265], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 175, 193, 200, 205, 206, 208, 216, 234, 235, 237, 289, 379, 388, 451, 461, 497, 500, 721, 865, 866], "l\u00f6sung": [23, 206], "beschreibung": 23, "der": [23, 149, 216, 221, 237, 371, 388, 1185], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 216, 253, 271, 273, 556, 558, 559, 563, 651, 653, 654, 1072], "ein": [23, 206, 237, 1196, 1201], "nachhaltigen": 23, "impact": 23, "nach": [23, 273], "projektend": 23, "6": [23, 144, 216, 217, 237, 238, 271, 388, 451, 461, 497, 500, 1081, 1200], "umfeldanalys": 23, "wa": [23, 205, 221, 684], "ist": [23, 206], "stand": 23, "technik": 23, "method": [23, 229, 232, 242, 253, 255, 258, 261, 271, 286, 298, 307, 313, 325, 329, 335, 341, 347, 351, 362, 364, 372, 551, 587, 599, 606, 607, 608, 611, 613, 615, 618, 670, 673, 681, 685, 753, 754, 755, 756, 757, 780, 797, 832, 834, 848, 1053, 1055, 1081, 1082, 1083, 1171], "wissen": 23, "welch": 23, "ander": [23, 192, 371], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 181, 221, 237], "genannten": 23, "problemen": 23, "gibt": [23, 216], "e": [23, 470, 754], "schon": 23, "7": [23, 209, 216, 217, 237, 388, 451, 461, 1200], "alleinstellungsmerkm": 23, "8": [23, 216, 217, 236, 237, 388, 451, 461, 944, 1150, 1200], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 209, 210, 216, 217, 237, 388, 451, 461, 1038, 1185, 1200], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 216, 242, 255, 268, 271, 286, 293, 307, 313, 325, 329, 347, 351, 388, 1076], "projektbereich": 23, "angaben": [23, 149], "zur": [23, 149, 187, 206, 216], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 192, 237], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 224, 282, 312, 328, 703], "risiken": 23, "erfolgskriterien": 23, "am": [23, 206, 265, 388], "angestrebt": 23, "jahr": 23, "10": [23, 45, 101, 102, 144, 159, 190, 193, 198, 209, 212, 216, 251, 252, 279, 280, 281, 282, 283, 297, 320, 321, 323, 324, 326, 370, 374, 375, 376, 380, 388, 451, 558, 865, 866], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 127, 131, 139, 143, 144, 191, 196, 214, 215, 216, 245, 246, 251, 276, 280, 282, 285, 286, 320, 327, 328, 329, 330, 331, 332, 333, 334, 335, 353, 354, 377, 378, 388, 451, 573, 696, 699, 732, 733, 744, 753, 790], "projekttermin": 23, "termin": [23, 869, 981, 1044], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 221, 237], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 216], "finanziert": 23, "durch": [23, 206], "sonderprei": 23, "14": [23, 45, 127, 128, 131, 139, 144, 196, 205, 216, 217, 220, 234, 276, 388], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 196, 205, 216, 388], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 223, 229], "haben": [23, 206], "sie": [23, 206], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 235, 259, 273, 285, 286, 388, 1038, 1185], "datenschutz": 23, "screenplai": [24, 62, 355, 479, 575, 578, 581, 584, 587, 590, 593, 625, 626, 627, 628, 629, 632, 633, 634, 652, 653, 654, 655, 793, 796, 801, 806, 811, 813, 851, 854, 857, 1002, 1005, 1009, 1077, 1165, 1172, 1177, 1179, 1182], "The": [24, 39, 43, 45, 60, 102, 124, 127, 171, 184, 216, 232, 235, 238, 245, 262, 271, 274, 289, 297, 299, 301, 307, 310, 317, 320, 323, 324, 327, 329, 337, 338, 341, 351, 354, 391, 399, 400, 437, 438, 453, 460, 461, 470, 471, 475, 476, 485, 553, 554, 606, 630, 651, 652, 674, 694, 695, 703, 708, 710, 712, 737, 755, 758, 769, 790, 834, 864, 873, 874, 881, 898, 901, 912, 915, 918, 920, 929, 931, 935, 951, 953, 955, 956, 958, 964, 972, 976, 991, 993, 1000, 1012, 1014, 1015, 1024, 1025, 1033, 1034, 1036, 1040, 1044, 1052, 1055, 1059, 1061, 1063, 1070, 1075, 1081, 1124, 1145, 1152, 1161, 1171, 1192], "problem": [24, 435, 457, 480, 481, 489, 495, 496, 497, 500, 506, 553, 554, 696, 708, 712, 732, 733, 742, 758, 771, 776, 794, 828, 875, 894, 953, 955, 959, 1014, 1029, 1030, 1034, 1048, 1144, 1166, 1173], "And": [24, 42, 60, 62, 65, 124, 129, 130, 144, 184, 280, 283, 286, 289, 292, 297, 298, 299, 300, 301, 302, 307, 310, 312, 315, 317, 320, 323, 324, 327, 328, 329, 331, 335, 337, 338, 341, 351, 354, 411, 455, 479, 480, 482, 485, 486, 491, 492, 493, 499, 502, 508, 516, 517, 522, 530, 536, 551, 598, 599, 605, 610, 626, 630, 631, 632, 634, 652, 667, 668, 672, 675, 700, 706, 708, 710, 723, 740, 743, 744, 745, 747, 748, 753, 765, 767, 769, 771, 776, 786, 802, 860, 864, 865, 866, 870, 873, 879, 881, 917, 929, 931, 936, 940, 946, 947, 958, 971, 993, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1031, 1036, 1040, 1041, 1044, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1123, 1124, 1125, 1133, 1145, 1150, 1155, 1156, 1158, 1159, 1160, 1170, 1192], "me": [24, 177, 337, 970], "open": [24, 161, 186, 302, 505, 796, 797, 961, 964, 967, 969, 1006, 1033, 1086], "sourc": [24, 40, 176, 186, 202, 480, 498, 794, 797, 799, 802, 804, 807, 811, 816, 818, 828, 830, 838, 841, 846, 965, 1014, 1092, 1150], "walk": [24, 289, 351, 370], "through": [24, 289, 370], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 154, 174, 178, 180, 184, 194, 195, 201, 203, 213, 232, 234, 235, 248, 251, 396, 398, 401, 416, 431, 453, 463, 471, 472, 481, 483, 497, 500, 517, 538, 638, 662, 683, 691, 703, 707, 708, 744, 758, 769, 780, 781, 782, 930, 942, 943, 944, 980, 996, 1013, 1014, 1024, 1025, 1031, 1033, 1036, 1039, 1049, 1058, 1165, 1171, 1172], "case": [25, 26, 27, 28, 29, 30, 234, 427, 431, 502, 564, 566, 569, 743, 744, 965, 969, 970, 971, 1023, 1031, 1058, 1171, 1177], "custom": [25, 161, 164, 177, 360, 599, 600, 614, 620, 644, 698, 1159, 1161, 1177], "subtract": [25, 597], "known": [25, 172], "calcul": [26, 232, 420, 499, 1056], "minimum": [26, 816], "durat": 26, "trainer": [27, 188], "editor": [27, 225], "end": [27, 709], "user": [27, 42, 46, 235, 237, 388, 601, 680, 685, 686, 687, 688, 689, 690, 802, 870, 871, 873, 874, 875, 883, 884, 895, 955, 1035, 1126, 1128, 1130, 1131, 1133, 1165], "audienc": [27, 1192], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 102, 124, 144, 159, 165, 184, 194, 202, 203, 211, 251, 261, 289, 292, 297, 306, 324, 388, 406, 428, 434, 476, 479, 622, 625, 666, 675, 679, 705, 706, 745, 806, 811, 852, 857, 942, 954, 972, 996, 1005, 1012, 1054, 1092, 1132, 1136, 1137, 1142, 1144, 1185], "other": [28, 38, 52, 232, 301, 313, 372, 703, 816, 838, 883, 1043], "menu": 29, "choos": 29, "show": 30, "plain": [30, 638, 666, 667, 695], "text": [30, 310, 354, 437, 925, 928, 931, 1086, 1162], "file": [30, 31, 42, 48, 194, 196, 232, 242, 245, 261, 268, 270, 271, 285, 289, 293, 303, 305, 306, 307, 310, 311, 312, 329, 333, 334, 335, 340, 341, 345, 346, 347, 349, 350, 354, 361, 362, 377, 435, 479, 481, 487, 502, 581, 612, 796, 797, 798, 806, 838, 865, 866, 869, 887, 892, 893, 899, 900, 903, 904, 905, 913, 917, 920, 921, 925, 928, 930, 946, 954, 955, 959, 960, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 978, 1002, 1006, 1012, 1013, 1027, 1033, 1062, 1086, 1092, 1093, 1094, 1115, 1117, 1126, 1128, 1145, 1177], "send": [31, 1006, 1010], "A": [31, 45, 62, 124, 139, 144, 154, 173, 184, 251, 277, 278, 280, 292, 296, 297, 298, 299, 301, 306, 337, 338, 340, 388, 394, 403, 433, 460, 478, 479, 482, 496, 516, 530, 538, 541, 551, 556, 571, 597, 612, 613, 622, 631, 661, 672, 673, 686, 695, 700, 708, 710, 737, 740, 753, 756, 758, 865, 866, 869, 883, 894, 917, 921, 954, 956, 960, 961, 962, 965, 968, 969, 970, 971, 978, 991, 996, 999, 1012, 1025, 1026, 1029, 1030, 1031, 1034, 1039, 1058, 1061, 1124, 1150, 1155, 1158, 1161, 1162, 1170], "v4l": 31, "camera": 31, "devic": [31, 62, 83, 99, 126, 148, 793, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 828, 832, 833, 834, 869, 942, 944, 1002], "output": [31, 50, 123, 132, 194, 206, 361, 493, 676, 880, 1038, 1142, 1177], "over": [31, 245, 253, 255, 789, 944, 1074, 1075], "ssh": [31, 225, 289, 310, 354, 367, 375, 945, 948, 949, 950, 951, 952, 953, 954, 955], "captur": [31, 737, 738, 740], "To": [31, 37, 39, 42, 44, 53, 123, 170, 268, 297, 337, 501, 502, 517, 538, 664, 675, 695, 699, 708, 710, 712, 723, 737, 745, 753, 755, 757, 758, 769, 809, 850, 852, 865, 866, 946, 947, 954, 1014, 1024, 1026, 1031, 1033, 1034, 1054, 1055, 1133, 1154, 1155, 1161], "plai": [31, 62, 723], "remot": [31, 99, 124, 126, 148, 151, 506, 519, 533, 865, 866, 946, 947, 951, 954, 955], "system": [31, 175, 248, 289, 310, 347, 354, 377, 388, 409, 473, 670, 761, 887, 893, 955, 957, 958, 959, 964, 975, 993, 996, 999, 1065, 1165, 1185, 1203, 1204, 1205, 1206, 1207], "emoji": 32, "code": [32, 41, 43, 45, 109, 203, 204, 206, 207, 230, 246, 299, 301, 302, 315, 331, 388, 457, 467, 477, 478, 479, 481, 487, 488, 489, 494, 498, 574, 577, 580, 583, 586, 589, 592, 622, 707, 755, 776, 799, 800, 804, 805, 806, 807, 808, 818, 819, 828, 829, 840, 841, 842, 846, 847, 970, 1001, 1004, 1008, 1028, 1029, 1030, 1132, 1133, 1134, 1137, 1140, 1143, 1150, 1163, 1172, 1176, 1181, 1192], "sphinxemoji": 32, "setup": [32, 62, 80, 111, 176, 180, 202, 209, 210, 212, 213, 214, 235, 285, 291, 292, 295, 298, 300, 302, 305, 306, 310, 311, 312, 333, 334, 339, 340, 345, 349, 350, 354, 493, 551, 553, 935, 943, 951, 962, 1026, 1027, 1060, 1124, 1125, 1172, 1182], "most": [32, 38, 62, 710, 1165], "here": [32, 174, 502, 954], "all": [32, 38, 53, 62, 117, 229, 232, 251, 297, 327, 338, 388, 669, 695, 703, 738, 758, 857, 875, 1012, 1028, 1046, 1135], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 177, 1028, 1154, 1161], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 397, 412, 473, 919, 1012], "arrow": 34, "isoamsr": 35, "relat": [35, 189, 292, 295, 415, 777], "isonum": 36, "binari": [36, 517, 1086], "oper": [36, 193, 206, 216, 229, 245, 248, 251, 258, 261, 265, 268, 282, 297, 317, 329, 365, 399, 414, 415, 416, 419, 420, 422, 423, 428, 440, 551, 573, 598, 599, 605, 613, 653, 753, 761, 767, 796, 797, 798, 880, 959, 996, 1055, 1065, 1067, 1069, 1085, 1156], "layout": [37, 261, 446], "page": [37, 96, 177, 179, 809, 898, 930, 958], "admonit": 37, "i": [37, 45, 120, 174, 175, 192, 232, 242, 248, 253, 258, 261, 268, 270, 271, 303, 307, 310, 312, 341, 347, 354, 362, 374, 399, 425, 472, 478, 496, 551, 570, 597, 604, 666, 672, 673, 708, 710, 733, 737, 742, 745, 754, 758, 762, 766, 776, 811, 822, 843, 858, 869, 873, 874, 879, 880, 881, 894, 904, 917, 944, 954, 955, 956, 959, 960, 961, 962, 963, 964, 967, 969, 971, 973, 974, 991, 994, 1012, 1029, 1031, 1036, 1086, 1144, 1158, 1182], "an": [37, 177, 248, 301, 316, 323, 327, 332, 366, 370, 388, 484, 489, 599, 708, 723, 799, 917, 943, 954, 959, 996, 1029, 1040, 1049, 1076, 1078, 1172, 1190], "tip": 37, "hint": [37, 519, 549], "import": [37, 184, 192, 232, 242, 251, 370, 604, 1010, 1035, 1043, 1152], "attent": [37, 1078], "caution": [37, 673], "error": [37, 43, 184, 248, 301, 302, 323, 324, 327, 438, 463, 497, 619, 629, 630, 714, 717, 880, 944, 956, 965, 969, 970, 971, 1048, 1105], "danger": [37, 405, 766, 895], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1186, 1187, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "local": [37, 39, 99, 124, 126, 148, 151, 193, 216, 436, 468, 485, 506, 951, 954, 987, 1014, 1077, 1172], "bleh": 37, "do": [37, 42, 170, 232, 274, 337, 429, 466, 485, 496, 695, 828, 850, 865, 866, 881, 1012], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 981], "restructuredtext": 39, "cheat": [39, 370], "sheet": [39, 370], "further": [39, 158, 197, 233, 234, 256, 361, 370, 467, 703, 757, 1065], "document": [39, 179, 229, 245, 325, 365, 635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 648, 651, 656, 802, 818, 820, 824, 826, 848, 852, 855, 865, 866, 869, 873, 880, 881, 882, 883, 898, 899, 900, 901, 917, 920, 921, 954, 956, 958, 960, 961, 962, 964, 967, 968, 969, 970, 971, 974, 1012, 1013, 1064, 1088, 1089, 1099, 1162, 1170, 1177], "extern": [39, 315, 331, 356, 434, 483, 612, 813, 814, 943, 1029, 1100, 1192], "section": 39, "refer": [39, 170, 173, 216, 242, 245, 248, 255, 268, 271, 277, 278, 280, 283, 286, 290, 293, 298, 301, 307, 313, 325, 337, 341, 347, 351, 403, 441, 468, 610, 704, 707, 708, 710, 737, 738, 740, 749, 754, 756, 757, 786, 787, 845, 1076], "That": [39, 274, 277, 278, 280, 297, 324, 442, 500, 597, 604, 695, 698, 708, 737, 755, 756, 838, 873, 944, 954, 959, 960, 963, 1031, 1058, 1179], "we": [39, 42, 45, 53, 337, 477, 479, 828, 857, 1024, 1177], "anoth": [39, 261, 477, 996, 1028], "contain": [39, 144, 251, 271, 297, 300, 338, 573, 589, 590, 591, 630, 631, 645, 646, 649, 650, 651, 695, 699, 747, 826, 1026], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 159, 178, 493, 552, 615, 846, 935, 960, 961, 962, 1026, 1027, 1063, 1140, 1143, 1170], "seminar": 41, "clean": [41, 43, 45, 239, 299, 301, 302, 388, 478, 479], "2022": [41, 100, 101, 102, 103, 104, 105, 106, 145, 147, 148, 149, 251, 252, 253, 256, 259, 262, 264, 267, 270, 273, 276, 279, 280, 281, 282, 283, 285, 286, 380, 381, 382, 388], "04": [41, 106, 178, 251, 262, 264, 267, 300, 301, 302, 303, 304, 338, 370, 388, 1026], "agenda": [41, 209, 210, 212, 213, 214, 215, 220, 224, 225, 262, 267, 279, 288, 292, 295, 301, 305, 309, 311, 315, 317, 323, 327, 331, 333, 337, 339, 345, 349, 353, 383, 384, 1192], "timelin": 41, "befor": [42, 62, 161, 194, 317, 320, 753, 1177], "formal": [42, 399], "unit": [42, 43, 45, 73, 205, 235, 273, 282, 292, 295, 350, 378, 538, 554, 615, 1125, 1175], "initi": [42, 242, 277, 278, 280, 337, 338, 401, 413, 462, 549, 580, 581, 582, 597, 604, 615, 652, 675, 695, 697, 698, 699, 700, 744, 766, 771, 832, 843, 855, 985, 987], "structur": [42, 43, 144, 166, 170, 193, 256, 277, 278, 280, 282, 304, 315, 326, 330, 331, 337, 431, 439, 446, 449, 455, 491, 538, 573, 744, 749, 769, 806, 834, 1030, 1043, 1170, 1177, 1192], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 234, 573, 687, 691], "bin": 42, "binaryfil": 42, "cpp": [42, 487, 538, 541, 713, 714, 715, 718, 719, 720, 721, 724, 725, 727, 728, 729, 730, 731], "extend": [42, 229, 615, 1052], "read": [42, 49, 50, 58, 232, 239, 361, 362, 372, 406, 467, 479, 502, 703, 745, 796, 854, 960, 964, 970, 972, 1086, 1093, 1094, 1126, 1127, 1128, 1129, 1142, 1162], "iter": [42, 195, 206, 211, 216, 221, 223, 229, 232, 237, 238, 242, 245, 248, 253, 255, 258, 261, 270, 271, 282, 283, 285, 286, 292, 295, 299, 303, 305, 306, 307, 311, 312, 324, 325, 329, 333, 334, 335, 339, 340, 341, 345, 346, 349, 350, 351, 362, 630, 631, 654, 695, 723, 730, 743, 744, 745, 789, 826, 1038, 1040, 1041, 1042, 1054, 1074, 1075, 1084], "bug": [42, 47, 53, 416, 581, 745], "faschingbau": [42, 177], "As": [42, 154, 500, 517, 708, 747, 944, 978, 1012, 1049, 1179], "last": [42, 416, 437, 438, 467, 620, 623, 759, 988, 1010, 1177], "name": [42, 43, 132, 242, 245, 261, 410, 448, 606, 695, 838, 882, 900, 1006, 1077, 1088], "wrap": [42, 205, 463, 695, 1034], "up": [42, 175, 205, 239, 282, 300, 301, 323, 375, 463, 695, 1049], "what": [42, 45, 49, 53, 180, 183, 248, 258, 425, 466, 477, 601, 670, 689, 695, 707, 708, 737, 758, 807, 828, 838, 854, 858, 873, 881, 899, 938, 951, 954, 955, 959, 960, 963, 967, 999, 1012, 1024, 1028, 1036, 1040, 1044, 1087, 1158, 1161], "have": [42, 45, 477, 828, 1024, 1029], "messag": [43, 173, 174, 476, 482, 986, 1005, 1006, 1153, 1177], "book": [43, 45, 220, 270, 312, 391, 476, 1137], "survei": [43, 477], "comment": [43, 229, 253, 268, 293, 365, 1064, 1106], "format": [43, 50, 232, 238, 253, 313, 341, 1081, 1134], "object": [43, 119, 206, 211, 248, 255, 261, 265, 273, 274, 282, 285, 286, 298, 299, 301, 302, 305, 306, 311, 317, 318, 320, 323, 324, 327, 328, 333, 339, 345, 346, 349, 350, 358, 477, 495, 500, 580, 581, 582, 597, 599, 602, 605, 607, 611, 613, 668, 670, 684, 699, 702, 705, 708, 754, 1006, 1029, 1030, 1035, 1043, 1049, 1051, 1053, 1087, 1155, 1159], "data": [43, 131, 132, 133, 134, 193, 195, 221, 230, 256, 270, 273, 282, 306, 323, 324, 325, 327, 347, 349, 411, 455, 458, 479, 603, 607, 630, 749, 873, 987, 1054, 1123, 1137, 1142, 1144], "handl": [43, 248, 251, 261, 273, 292, 295, 300, 301, 302, 323, 324, 327, 381, 489, 497, 619, 956, 1035, 1088], "boundari": [43, 1150], "class": [43, 206, 232, 251, 255, 258, 261, 274, 282, 298, 303, 317, 320, 351, 482, 500, 507, 508, 525, 526, 538, 541, 555, 574, 575, 576, 599, 606, 607, 612, 614, 615, 616, 617, 623, 638, 666, 667, 686, 695, 696, 698, 706, 707, 739, 753, 794, 1034, 1048, 1049, 1052, 1053, 1054, 1055], "switch": [44, 137, 142, 143, 144, 427, 459, 550], "googletest": [44, 201, 552, 1175], "git": [44, 79, 124, 144, 151, 176, 184, 188, 230, 234, 235, 289, 370, 375, 388, 811, 1137], "submodul": 44, "establish": [44, 45, 1027], "demo": [44, 135, 291, 292, 299, 483, 502, 739, 754, 869, 895, 959, 994, 998], "straightforward": [44, 206], "main": [44, 124, 444, 535, 536, 537, 775, 777, 779, 781, 1028], "convers": [44, 229, 245, 253, 255, 261, 265, 268, 286, 297, 303, 307, 313, 325, 329, 335, 341, 347, 365, 416, 443, 667, 675, 1067, 1081], "fix": [44, 176, 184, 277, 278, 280, 297, 362, 605, 723, 769, 828, 829, 841, 842], "shortcom": 44, "softwar": [45, 144, 202, 299, 477, 478, 944, 1017, 1020, 1194], "craft": [45, 299, 478], "09": [45, 144, 178, 233, 243, 251, 317, 318, 319, 320, 321, 322, 388], "00": 45, "15": [45, 216, 222, 259, 292, 295, 305, 306, 307, 345, 346, 347, 348, 370, 377, 382, 388, 865, 866], "introductori": [45, 289, 723, 977], "word": [45, 268, 437, 438, 467, 470, 620, 623, 750, 759, 898, 1104, 1121], "engin": [45, 270, 944], "disciplin": 45, "coffe": 45, "break": [45, 216, 253, 430, 1071, 1074], "project": [45, 111, 124, 136, 144, 177, 193, 234, 235, 249, 273, 278, 280, 282, 298, 300, 301, 302, 315, 317, 320, 323, 324, 327, 328, 331, 346, 350, 376, 377, 378, 382, 384, 477, 479, 538, 543, 552, 553, 615, 1124, 1164, 1170, 1192, 1195], "enter": [45, 62, 245, 630, 673, 708, 734, 743, 757, 841, 930, 998, 1028, 1036, 1048, 1049, 1145, 1150, 1155], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 178, 900], "small": 45, "23": [45, 214, 240, 256, 262, 280, 288, 298, 309, 310, 388], "59": 45, "extrem": 45, "program": [45, 50, 62, 95, 123, 135, 189, 205, 211, 232, 235, 251, 261, 273, 274, 282, 285, 289, 299, 301, 302, 305, 306, 307, 311, 317, 320, 323, 324, 327, 328, 333, 339, 341, 345, 346, 349, 350, 377, 388, 392, 393, 395, 431, 432, 433, 439, 465, 470, 475, 477, 482, 502, 535, 536, 537, 541, 597, 758, 775, 777, 779, 781, 799, 851, 883, 894, 895, 936, 938, 957, 972, 975, 976, 979, 991, 1001, 1009, 1012, 1044, 1051, 1060, 1061, 1063, 1065, 1113, 1125, 1136, 1163, 1191, 1203, 1204, 1205, 1206, 1207], "session": 45, "find": [46, 158, 176, 194, 497, 556, 637, 655, 785, 926, 1179], "crash": [46, 176], "If": [46, 49, 601, 695, 710, 854, 968, 969, 1035, 1161], "Not": [46, 62, 123, 127, 131, 132, 134, 137, 139, 143, 156, 184, 265, 274, 563, 565, 568, 637, 673, 689, 695, 717, 732, 733, 745, 754, 828, 854, 894, 965, 968, 969, 970, 971, 991, 1012, 1029, 1039, 1155, 1177], "found": [46, 565, 568, 637, 689, 1179], "state": [46, 174, 234, 723, 841, 843], "exist": [48, 135, 170, 563, 965, 968, 969, 971, 1052, 1161], "ar": [48, 173, 174, 253, 255, 268, 318, 463, 479, 601, 607, 695, 723, 996, 1006, 1034, 1043, 1055, 1160, 1179], "overwritten": 48, "done": [49, 124, 127, 131, 140, 141, 142, 338, 501, 664, 758], "twice": 49, "altern": [50, 704], "csv": [50, 132, 144, 245, 262, 270, 273, 282, 285, 305, 306, 307, 311, 312, 327, 333, 334, 340, 345, 346, 349, 350, 479, 1093, 1094, 1095, 1126, 1127, 1128, 1129, 1134, 1145], "frontend": 50, "featur": [51, 53, 62, 285, 301, 302, 303, 305, 306, 311, 323, 327, 338, 456, 479, 735, 1037, 1052, 1071, 1142, 1144], "search": [52, 635, 637, 638, 641, 651, 655, 675, 688, 689, 690, 927, 1029, 1082, 1165], "By": [52, 201, 265, 297, 403, 610, 654, 685, 688, 690, 712, 723, 734, 737, 738, 740, 745, 749, 757, 785, 786, 787, 1035, 1068, 1158, 1159, 1160, 1170], "index": [52, 216, 234, 253, 265, 313, 468, 721, 938, 1073, 1159, 1165, 1166, 1167], "backlog": 53, "need": [53, 362, 502, 717, 719, 996, 1145], "chang": [53, 124, 883, 894, 901], "Or": [53, 123, 479, 487, 488, 502, 706, 745, 958, 1049, 1155], "Will": 53, "refactor": [53, 56, 479, 555, 806, 807, 808, 846, 1127, 1129, 1134], "after": [53, 209, 240, 429, 857, 873, 1052], "backingstor": [54, 55, 57], "ha": [54, 55, 122, 720], "too": [54, 55, 473, 488, 695, 739, 762], "mani": [54, 55, 261, 467, 489, 745, 775, 777, 779, 781, 920, 1000], "respons": [54, 55, 237, 505], "interfac": [54, 71, 88, 135, 140, 142, 213, 261, 300, 338, 357, 488, 492, 502, 505, 509, 517, 528, 535, 536, 551, 553, 583, 584, 585, 592, 593, 594, 669, 797, 869, 937, 938, 941, 943, 1048, 1146], "load": [57, 194, 454, 490, 816, 817, 942, 984, 1046], "constructor": [57, 211, 261, 277, 278, 280, 286, 337, 551, 581, 587, 598, 599, 600, 601, 602, 604, 605, 614, 615, 616, 617, 684, 699, 700, 701, 706, 708, 732, 752, 753, 1050], "bool": 58, "realli": [58, 695, 757], "pointless": [59, 61, 62, 63, 64, 65, 66, 67, 68, 1055], "blink": [59, 61, 62, 63, 64, 65, 66, 67, 68, 370], "With": [59, 61, 62, 63, 99, 121, 126, 148, 203, 234, 281, 297, 299, 301, 323, 327, 388, 472, 480, 501, 516, 530, 552, 623, 705, 758, 771, 864, 865, 866, 927, 930, 935, 940, 966, 1029, 1077, 1158, 1160, 1171, 1172, 1175], "asyncio": [59, 61, 62, 63, 64, 65, 66, 67, 1089], "libgpiod": [59, 60, 61, 62, 63, 64, 65, 66, 67, 137], "raspberri": [59, 61, 62, 63, 184, 213, 356, 388, 818, 839, 935, 939, 942, 1017, 1021, 1023, 1025, 1201], "pi": [59, 60, 61, 62, 63, 184, 213, 388, 818, 838, 839, 935, 942, 1024, 1025, 1201], "fedora": [60, 176, 183, 811, 812, 813, 814, 1026], "prepar": [60, 176, 194, 209, 210, 212, 213, 214, 215, 225, 234, 249, 278, 280, 288, 538, 615, 838], "tarbal": [60, 184], "On": [60, 62, 124, 234, 268, 270, 292, 296, 297, 301, 323, 327, 390, 552, 554, 599, 630, 631, 635, 641, 744, 769, 881, 960, 961, 962, 967, 972, 976, 999, 1026, 1092], "build": [60, 70, 174, 176, 184, 201, 202, 235, 253, 480, 482, 490, 538, 552, 614, 615, 616, 617, 806, 811, 812, 813, 814, 816, 838, 839, 942, 960, 961, 962, 972, 1013, 1014, 1017, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1084, 1179, 1197], "submiss": [61, 63, 67, 111], "biographi": [61, 63, 67], "abstract": [61, 63, 67, 282, 317, 320, 495, 510, 524, 874, 960, 961, 962, 1048], "present": 62, "start": [62, 251, 277, 278, 280, 388, 502, 705, 717, 1029, 1153, 1177], "point": [62, 265, 268, 551, 597, 599, 607, 613, 615, 616, 617, 623, 705, 717, 769, 865, 866, 1024, 1067], "greet": [62, 324, 1099], "multipl": [62, 124, 211, 438, 479, 480, 804, 805, 806, 900, 954, 1012, 1033, 1035, 1072, 1155, 1158, 1171], "background": [62, 178, 180, 596, 694], "thread": [62, 173, 175, 184, 301, 302, 379, 573, 695, 761, 762, 767, 980, 981, 982, 987, 989, 996, 999, 1044], "charact": [62, 392, 399, 402, 405, 412, 793, 794, 795, 796, 797, 798, 801, 802, 803, 1121], "base": [62, 184, 253, 261, 277, 278, 280, 282, 317, 320, 337, 500, 666, 667, 695, 708, 723, 743, 744, 1030, 1035, 1048], "gpio": [62, 88, 143, 144, 191, 213, 356, 357, 358, 359, 370, 818, 819, 942, 944, 976, 977, 978], "entir": [62, 297, 811, 813, 898, 954], "matrix": 62, "off": [62, 234], "bring": [62, 151, 375, 669], "togeth": [62, 485, 669, 900], "modular": [62, 251, 433], "bit": [62, 306, 340, 419, 883, 894, 896, 1061, 1063], "row": [62, 297, 1154, 1158, 1159, 1160], "coroutin": [62, 280, 722, 723], "enough": [62, 597, 673], "sequenc": [62, 242, 245, 253, 285, 292, 295, 305, 306, 311, 312, 333, 334, 339, 340, 345, 346, 349, 350, 351, 412, 571, 635, 641, 1039, 1072, 1080], "loop": [62, 193, 195, 206, 216, 221, 253, 255, 265, 268, 271, 277, 278, 280, 299, 301, 323, 327, 335, 337, 351, 395, 428, 429, 467, 539, 743, 979, 1040, 1071, 1074], "forev": 62, "strip": [62, 238, 255, 261, 362], "down": [62, 488], "factori": [62, 495, 510, 524, 554], "turn": [62, 1039], "Into": [62, 124, 295, 317, 320, 323, 406, 502, 539, 556, 632, 686, 695, 739, 1127, 1129, 1134], "anti": [62, 767, 769], "clumsi": [62, 769], "decor": [62, 232, 282, 292, 295, 299, 301, 302, 317, 323, 324, 327, 500, 514, 528, 1034], "wrapper": [62, 134], "final": [62, 261, 277, 278, 280, 337, 734, 873, 877, 1035], "playground": [62, 156], "cycl": [62, 127, 131, 132, 134, 137, 139, 143, 981], "fast": [62, 211], "forward": [62, 280, 404, 468, 757, 953], "ani": [62, 297, 496, 551, 991], "cancel": 62, "goodby": 62, "glt": [59, 63, 64, 67], "2023": [59, 63, 109, 110, 111, 112, 113, 127, 128, 131, 139, 143, 144, 280, 288, 289, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 347, 388], "2024": [64, 67, 114, 115, 116, 117, 118, 144, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 388], "talk": [65, 230, 306, 936, 942, 943, 1137], "sketch": [], "evolut": 108, "intro": [65, 255, 289, 370, 589, 590, 591, 978, 1032], "gpiod": [65, 66, 88], "interrupt": [65, 173, 818, 819, 820, 821, 834, 843, 979, 996], "textual": [65, 66], "taskgroup": 66, "cmake": [70, 201, 202, 234, 289, 315, 316, 331, 332, 388, 480, 482, 484, 488, 538, 552, 972, 1013, 1014, 1027, 1179, 1180, 1192], "oo": [72, 110, 144, 206, 232, 235, 251, 258, 261, 270, 273, 277, 278, 280, 282, 292, 295, 298, 300, 317, 320, 324, 328, 337, 338, 340, 379, 505, 542, 551, 573, 1044], "graph": [74, 75, 76, 471, 473, 678, 791, 839, 1095, 1096, 1100, 1109, 1123, 1130], "embed": [75, 76, 80, 98, 99, 109, 110, 114, 115, 125, 126, 145, 147, 148, 149, 150, 191, 200, 289, 298, 300, 338, 343, 369, 371, 372, 384, 386, 388, 776, 1194], "comput": [75, 76, 80, 98, 109, 110, 114, 115, 125, 145, 147, 148, 149, 150, 367, 369, 371, 372, 384, 386, 466, 467, 551, 865, 866, 874], "current": [75, 76, 500, 771, 789, 901], "depend": [75, 76, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 202, 315, 317, 331, 356, 357, 358, 359, 361, 483, 484, 486, 487, 491, 501, 505, 515, 538, 543, 560, 562, 573, 581, 640, 646, 650, 658, 660, 663, 668, 676, 677, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 697, 704, 711, 722, 746, 751, 776, 815, 816, 865, 866, 867, 871, 885, 886, 887, 906, 911, 912, 915, 948, 950, 957, 963, 965, 973, 975, 977, 989, 992, 1014, 1016, 1018, 1019, 1022, 1023, 1029, 1044, 1046, 1093, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1139, 1143, 1147, 1150, 1153, 1157, 1169, 1175, 1192], "ex": [77, 78, 84, 85, 86, 87, 93, 94], "race": [77, 78, 90, 763, 828, 829, 836, 982, 983, 1046], "condit": [77, 78, 90, 421, 429, 438, 763, 767, 828, 829, 836, 982, 983, 985, 986, 1046], "avoid": [78, 90], "goal": [78, 84, 85, 86, 87, 89, 90, 91, 93, 158, 160, 161, 163, 194, 298, 300, 1190, 1193], "outcom": [78, 84, 85, 86, 87, 212, 320, 372], "introduct": [79, 82, 193, 277, 278, 280, 292, 295, 299, 300, 310, 315, 316, 331, 332, 337, 338, 354, 373, 388, 391, 408, 466, 470, 484, 501, 509, 596, 693, 699, 743, 752, 761, 818, 838, 872, 1035, 1170, 1190, 1192, 1203], "stece": [80, 98, 125, 145, 147, 148, 149], "2019": [80, 193, 196, 388], "overview": [80, 144, 189, 289, 301, 302, 325, 337, 385, 389, 705, 712, 723, 747, 753, 767, 769, 775, 777, 779, 780, 781, 782, 789, 809, 863, 874, 900, 931, 942, 943, 944, 945, 980, 1012, 1034, 1139, 1143], "knowledg": [80, 1192], "transfer": [80, 755], "unix": [82, 112, 113, 197, 375, 391, 453, 463, 499, 1063], "hardwar": [83, 86, 87, 144, 161, 164, 289, 453, 939, 941, 942, 944, 977, 1194], "manag": [83, 175, 223, 253, 273, 282, 292, 295, 298, 299, 301, 317, 320, 323, 324, 327, 350, 351, 377, 378, 382, 477, 605, 665, 753, 848, 849, 1014, 1033, 1052, 1164, 1194], "averag": [84, 85, 93, 499, 527, 775, 777, 779, 781], "sensor": [84, 85, 87, 93, 94, 96, 122, 140, 141, 300, 324, 337, 495, 496, 500, 502, 507, 525, 527, 528, 534, 538, 540, 541, 542, 553, 554, 555, 562, 753, 775, 777, 779, 781, 942, 944, 972, 1123, 1125], "parallel": 85, "led": [86, 139, 370], "temperatur": [86, 87, 94, 139, 538, 541, 942, 944, 972], "displai": [86, 93, 121, 129, 130, 135, 139], "sysf": [88, 143, 144, 213, 356, 370, 943, 977, 978], "multithread": [89, 191, 251, 277, 278, 280, 289, 323, 324, 327, 337, 378, 385, 767, 768, 1009, 1044, 1045, 1047, 1206], "semaphor": [90, 173, 769, 1005, 1006], "mutex": [90, 173, 454, 765, 769, 828, 829, 830, 831, 843, 844, 983, 984, 999, 1046], "commun": [91, 270, 519, 767, 985, 1006], "wait": [91, 164, 767, 769, 854, 855, 856, 985, 1005], "someth": [91, 206, 597, 695, 769, 854, 855, 856, 1074], "simpl": [95, 211, 493, 597, 607, 622, 673, 685, 841, 843, 869, 883, 1012, 1029, 1034, 1054, 1084, 1162, 1170], "2020": [98, 178, 198, 200, 205, 206, 208, 209, 210, 212, 214, 215, 220, 388], "ss2022": [99, 107, 865, 866], "block": [99, 126, 148, 424, 620, 959, 960, 961, 962, 963, 1010], "cross": [99, 110, 126, 148, 184, 289, 818, 838, 1013, 1015, 1016, 1017, 1022, 1024, 1025, 1027, 1185], "develop": [99, 110, 126, 127, 131, 132, 134, 137, 139, 143, 144, 148, 205, 220, 234, 237, 259, 270, 273, 289, 292, 294, 295, 298, 299, 300, 301, 302, 323, 324, 327, 343, 373, 388, 815, 1015, 1016, 1022, 1193, 1194, 1195, 1208], "03": [100, 101, 102, 103, 104, 105, 144, 222, 225, 230, 249, 251, 259, 262, 279, 292, 293, 295, 298, 299, 315, 353, 354, 370, 388, 695, 696], "08": [100, 144, 240, 243, 251, 264, 388], "homework": [100, 101, 102, 103, 106], "until": 102, "21": [102, 103, 262, 363, 370, 388], "exercis": [102, 111, 166, 188, 193, 194, 206, 209, 210, 214, 222, 223, 225, 234, 235, 245, 251, 268, 273, 277, 278, 280, 282, 285, 289, 293, 298, 300, 301, 305, 306, 311, 312, 313, 317, 320, 323, 324, 327, 333, 334, 340, 345, 346, 349, 350, 354, 360, 362, 370, 376, 394, 396, 398, 400, 402, 404, 406, 418, 442, 451, 495, 496, 497, 499, 500, 501, 503, 504, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 603, 614, 615, 616, 617, 618, 659, 660, 661, 668, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 757, 785, 786, 787, 788, 860, 867, 878, 884, 887, 888, 890, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 925, 946, 947, 948, 949, 965, 966, 972, 1006, 1010, 1017, 1019, 1020, 1021, 1022, 1051, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "creat": [102, 124, 151, 167, 172, 176, 179, 201, 202, 552, 695, 762, 858, 864, 865, 866, 883, 888, 890, 892, 900, 904, 906, 917, 949, 966, 968, 969, 971, 1005, 1006, 1024, 1026, 1031, 1124, 1142, 1144], "copi": [102, 206, 255, 290, 337, 418, 556, 590, 598, 605, 610, 625, 631, 632, 636, 643, 695, 706, 708, 733, 738, 740, 744, 749, 753, 754, 785, 852, 900, 902, 903, 906, 946, 947, 954, 965, 1076, 1155], "move": [102, 277, 278, 280, 298, 337, 338, 551, 597, 613, 704, 705, 706, 707, 708, 753, 755, 786, 818, 898, 905, 906, 921], "remov": [102, 271, 488, 568, 569, 651, 654, 785, 906, 909, 917, 1006], "l": [102, 915, 920], "command": [102, 497, 512, 526, 816, 883, 894, 898, 915, 920, 935, 1026], "22": [104, 212, 219, 224, 311, 312, 313, 327, 328, 329, 330, 388], "24": [104, 136, 144, 219, 251, 281, 301, 302, 303, 304, 323, 324, 326, 327, 328, 329, 330, 388], "ku": 104, "28": [105, 193, 210, 251, 299, 376, 388], "01": [106, 111, 114, 144, 243, 249, 251, 252, 253, 282, 288, 333, 334, 335, 345, 346, 347, 348, 349, 350, 351, 352, 370, 380, 381, 388, 865, 866], "ws2022": [108, 109, 110], "plan": [108, 144, 262, 373], "fh": [109, 110, 124, 150, 538, 539, 540, 541, 542, 614, 615, 616, 617, 677, 871, 885, 886, 911, 1018], "joanneum": [109, 110, 150], "question": [109, 110, 116, 117, 118, 119, 120, 161, 232, 385, 479, 493, 538, 677, 871, 885, 886, 889, 891, 911, 997, 1018, 1047], "inherit": [109, 192, 232, 261, 282, 317, 320, 509, 583, 584, 585, 666, 667, 668, 671, 695, 967, 1044, 1052], "memori": [109, 175, 197, 223, 351, 443, 446, 450, 452, 454, 461, 468, 567, 577, 578, 579, 605, 664, 665, 809, 822, 823, 824, 825, 851, 852, 853, 871, 875, 1005, 1006, 1194, 1204], "leak": [109, 567, 578, 605, 755], "ye": [110, 1150], "No": [110, 174, 213, 517, 695, 712, 758, 1035, 1161, 1177], "lab": 111, "exam": [111, 112, 113, 114, 115, 116, 117, 125, 126, 144, 233, 246, 248, 370, 385, 551, 865, 866, 867, 997, 1047], "17": [111, 144, 245, 246, 248, 252, 253, 259, 276, 283, 289, 305, 306, 307, 345, 346, 347, 348, 388, 612], "ss2023": [112, 113, 126], "06": [112, 113, 233, 234, 251, 280, 311, 312, 313, 338, 370, 388], "30": [112, 113, 191, 200, 210, 215, 262, 388], "handout": 112, "concept": [112, 113, 280, 310, 337, 354, 711, 712, 715, 716, 717, 720, 721, 747, 872, 1144], "toolchain": [112, 113, 184, 235, 315, 331, 838, 1012, 1013, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1192], "solv": [113, 984, 1144, 1166, 1173], "26": [114, 251, 281, 288, 301, 302, 303, 304, 323, 324, 326, 370, 388], "02": [115, 116, 144, 251, 256, 270, 289, 382, 388, 877], "ws2023": [116, 117, 136, 144], "sampl": [116, 144, 248, 758, 840, 895, 1094, 1115, 1136, 1170, 1195], "why": [116, 120, 175, 176, 184, 253, 477, 505, 597, 600, 604, 605, 752, 758, 783, 811, 857, 882, 936, 943, 951, 955, 980, 1033, 1078], "const": [119, 461, 570, 587, 607, 608, 610, 682, 683, 695, 710, 744, 749], "paramet": [120, 206, 253, 255, 299, 341, 366, 405, 441, 444, 447, 461, 479, 483, 708, 712, 747, 758, 838, 968, 1013, 1078, 1149], "pass": [120, 370, 610], "which": [120, 505, 971, 1012], "One": [120, 232, 271, 297, 362, 419, 438, 477, 479, 612, 745, 758, 851, 936, 954, 987, 1012, 1028], "better": [120, 173, 394, 479, 848, 1058, 1150], "question2": 120, "solid": [121, 122, 174, 477], "hysteresi": 121, "id": [122, 274, 302, 329, 875, 895, 955, 981, 993, 1185], "Be": [123, 235, 496, 500, 501, 605, 610, 664, 756, 761], "virtual": [123, 197, 270, 291, 583, 584, 585, 670, 672, 673, 775, 776, 777, 779, 780, 781, 782, 783, 809, 871, 875, 937, 1005, 1124, 1172, 1173, 1174, 1204], "version": [123, 184, 479, 482, 485, 695, 723, 968], "our": [124, 201, 944], "ece21": 124, "fork": [124, 144, 845], "pull": [124, 144, 502], "request": [124, 144, 479, 797, 799, 818, 820, 978], "upstream": [124, 144, 151], "sync": [124, 809], "onli": [124, 271, 297, 443, 710, 758, 811, 1106], "onc": [124, 370], "updat": [124, 144, 178], "It": [124, 176, 205, 297, 374, 443, 669, 894, 955, 968, 969, 1012], "Its": [124, 1049], "fetch": 124, "your": [124, 197, 290, 291, 458, 717, 884], "clone": [124, 184, 188, 201, 552], "merg": 124, "push": [124, 488], "two": [125, 268, 442, 535, 536, 597, 616, 700, 1006, 1101, 1102, 1111, 1112], "semest": 125, "support": [125, 213, 225, 698, 834], "finish": [126, 160, 169, 235, 857], "boil": [127, 128, 129, 130, 136, 144], "pot": [127, 128, 129, 130, 136, 144], "begin": [127, 343, 391, 745], "standup": [127, 128, 129, 130, 131, 135, 139, 143], "record": [127, 128, 129, 130, 131, 135, 139, 143, 216, 1131, 1133], "20": [127, 131, 139, 143, 144, 262, 276, 280, 298, 300, 311, 312, 313, 337, 339, 340, 341, 342, 362, 370, 388, 1026], "requir": [127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 143, 239, 270, 317, 320, 372, 483, 495, 516, 519, 538, 539, 540, 544, 545, 546, 547, 548, 549, 550, 717, 965, 972, 1093, 1094, 1115, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134], "futur": [127, 131, 132, 134, 137, 139, 143, 379, 769], "part": [127, 131, 132, 134, 137, 139, 143, 262, 1179], "Of": [127, 131, 132, 134, 137, 139, 143, 297, 306, 317, 320, 340, 480, 551, 597, 629, 630, 670, 708, 740, 745, 755, 757, 767, 785, 786, 787, 865, 866, 873, 965, 976, 1000, 1014, 1035, 1038, 1058, 1155, 1161], "statu": [129, 945, 981, 991], "report": 129, "full": [130, 237], "iot": 130, "logger": [131, 132, 133, 134, 502], "sink": [132, 134, 144, 324], "column": [132, 297, 1155, 1156, 1158, 1159, 1160, 1161], "configur": [132, 177, 179, 184, 481, 899, 937, 942, 944, 979], "mqtt": [134, 138, 144, 261, 324, 327, 1131, 1153], "mosquitto": 134, "infrastructur": 135, "percentagedisplai": 135, "composit": [135, 499, 509, 513, 527, 789], "breadboard": 135, "acrobat": 135, "group": [136, 234, 235, 249, 282, 289, 301, 302, 317, 320, 323, 324, 327, 328, 346, 376, 408, 423, 432, 439, 445, 449, 452, 456, 465, 469, 474, 475, 595, 603, 618, 621, 624, 665, 674, 693, 735, 736, 760, 768, 772, 784, 788, 790, 875, 883, 892, 932, 940, 941, 995], "task": [136, 144, 376, 996], "datalogg": [136, 144], "peripher": [136, 144], "client": [136, 237, 533, 1153], "subscrib": [138, 1153], "via": [139, 144, 181, 182, 367, 944], "pwm": [139, 943], "control": [139, 270, 285, 292, 295, 305, 306, 311, 312, 333, 334, 339, 340, 345, 346, 349, 350, 502, 723, 935, 943], "onewir": [141, 538, 554, 555, 944, 972], "05": [144, 230, 233, 264, 270, 273, 276, 279, 305, 306, 307, 309, 310, 362, 363, 370, 388], "vo": 144, "recap": [144, 221, 234, 235, 249, 282, 302, 317, 320, 324, 325, 590, 752, 1012, 1038], "polymorph": [144, 235, 338, 544, 545, 546, 547, 548, 549, 550, 553, 670, 759, 778], "collabor": 144, "necessarili": 144, "first": [144, 206, 235, 392, 542, 758, 799, 800, 834, 1172], "round": [144, 520, 534], "organiz": 144, "design": [144, 281, 299, 301, 302, 317, 320, 338, 388, 405, 462, 477, 501, 505, 515, 668, 1193], "At": 144, "larg": 144, "07": [144, 235, 251, 282, 315, 316, 370, 374, 388], "renam": [144, 921], "relev": 144, "gl\u00fchwein": 146, "trinken": 146, "summer": [147, 317, 320, 373], "syllabu": [149, 233, 246], "lehrveranstaltungsbeschreibung": 149, "umfang": 149, "lehrveranstaltung": 149, "inhalt": [149, 193, 196, 1009, 1187], "inhaltlich": 149, "voraussetzungen": [149, 371], "ziel": 149, "pr\u00fcfung": 149, "beurteilungsschema": 149, "bewertung": 149, "leistungen": 149, "bewertungsschl\u00fcssel": 149, "hilfsmittel": 149, "bei": [149, 205, 216, 388], "schriftlichen": 149, "pr\u00fcfungen": 149, "wiederholungsm\u00f6glichkeiten": 149, "anwesenheitsvorgab": 149, "zusatzinformationen": 149, "empfohlen": [149, 371, 1186, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "fachliteratur": [149, 371], "einzelnen": 149, "lehreinheiten": 149, "graz": [150, 196, 198, 205, 243, 388], "branch": [151, 425], "track": [151, 1028], "submit": [151, 857, 858], "appli": [151, 176, 1161], "patch": [151, 176], "packag": [153, 160, 178, 184, 201, 282, 299, 317, 323, 363, 838, 1017, 1020, 1043, 1092, 1164, 1165, 1166, 1167, 1168, 1172], "pypi": [153, 230, 270, 1092, 1137, 1166, 1168], "gaphor": 154, "decad": 154, "manual": [154, 598, 601, 605, 758, 781, 782, 898, 958, 976, 979, 1040], "model": [154, 251, 1142, 1144], "librari": [154, 234, 246, 251, 270, 298, 300, 306, 405, 480, 485, 486, 490, 560, 620, 630, 663, 674, 703, 958, 1029, 1030, 1137, 1204], "hochk\u00f6nig": 155, "k\u00f6nigsjodl": 155, "klettersteig": 155, "tour": [155, 282, 695], "werfen": 155, "ostpreussenh\u00fctt": 155, "matrashau": 155, "yet": [156, 261], "pending_xref": 157, "audio": [158, 162], "chip": [158, 943], "bringup": [158, 161, 944], "get": [159, 172, 202, 253, 338, 769, 826, 851, 976], "debian": [159, 160], "kernel": [159, 160, 161, 165, 174, 176, 220, 388, 473, 802, 811, 812, 813, 814, 815, 816, 830, 832, 838, 839, 871, 874, 939, 942, 1195], "config": [159, 838], "within": 159, "qemu": 159, "extract": [159, 165, 232, 539, 1127, 1129, 1134, 1142], "boot": [159, 172, 183, 388, 874], "etc": [160, 221, 229, 232, 261, 271, 274, 307, 914, 942, 970, 1064, 1115], "yocto": [161, 165, 933], "everyth": [161, 189, 248, 485, 869, 880, 959], "like": [161, 337, 597, 991], "i2": 162, "kontron": 162, "smarc": 162, "modul": [162, 206, 230, 232, 270, 271, 283, 299, 306, 323, 324, 363, 370, 473, 488, 552, 741, 806, 811, 813, 814, 816, 817, 832, 838, 943, 1043, 1134, 1137, 1145, 1171, 1179], "dirti": 163, "upgrad": 163, "path": [163, 184, 232, 242, 248, 255, 341, 350, 351, 491, 789, 870, 922, 1024, 1029, 1124, 1179], "step": [163, 497, 500, 502, 538, 630, 723, 785, 786, 1013, 1014, 1028, 1048, 1073], "intel": 165, "bsp": 165, "improv": 166, "beginn": [166, 230, 242, 265, 270, 282, 306, 1136, 1137], "split": [166, 192, 255, 261, 335, 362, 1082, 1142], "openshot": 167, "seo": [168, 169], "sitemap": 168, "meta": [168, 169], "stack": [169, 175, 216, 237, 450, 708], "hang": 169, "dbu": [169, 502], "stuff": [169, 338, 370, 463, 874, 908], "extens": 170, "rest": [170, 232, 327, 338, 964], "style": [170, 426, 477, 597, 699, 753, 771, 1081], "convert": [170, 193, 297, 1054, 1133], "rst": 170, "exampl": [170, 255, 261, 265, 366, 399, 403, 438, 440, 460, 463, 499, 538, 623, 648, 699, 700, 718, 719, 720, 721, 747, 756, 862, 880, 882, 883, 931, 955, 959, 964, 967, 985, 1010, 1033, 1048, 1068, 1078, 1081, 1082, 1083, 1084, 1106, 1148, 1156, 1161, 1170, 1171], "add": [170, 291, 489, 493, 551, 799, 846, 857, 1009, 1052, 1154], "miss": [170, 282, 354, 699, 968], "past": [170, 438], "blog": 170, "learn": [171, 292, 350, 351, 372, 1138, 1144], "beagleboard": 172, "how": [172, 175, 183, 205, 235, 253, 407, 446, 471, 472, 473, 607, 745, 755, 881, 894, 897, 1040, 1144], "repair": 172, "nand": 172, "also": [172, 444, 869, 874, 875, 880, 881, 960, 961, 962, 964, 991, 994, 998, 1000, 1079, 1144], "40w": 172, "x": [172, 235, 587], "loader": 172, "u": [172, 955], "bootabl": 172, "mmc": 172, "sd": [172, 213], "card": [172, 213, 291, 866], "port": [173, 953], "There": [173, 253, 477, 605, 761, 854, 944, 954, 959, 970, 971], "": [173, 188, 213, 419, 443, 477, 597, 689, 695, 698, 758, 802, 807, 826, 838, 854, 883, 899, 951, 999, 1012, 1040, 1044, 1087], "alwai": [173, 253, 273, 733, 969], "wai": [173, 232, 253, 261, 467, 1000, 1044, 1063], "process": [173, 175, 194, 289, 310, 836, 837, 870, 871, 875, 876, 991, 992, 993, 996, 1000], "signal": [173, 197, 453, 767, 985, 1008, 1009, 1010, 1011], "aren": 173, "t": [173, 230, 745, 1137], "queue": [173, 216, 767, 855, 986, 1005, 1006], "timer": [173, 846, 848, 849, 962, 996], "poll": [173, 767, 769], "event": [173, 799, 818, 828, 846, 847, 851, 979, 985, 1001, 1003], "dispatch": [173, 780, 781, 782], "realtim": [173, 175, 381, 385, 388, 830, 998, 999, 1185, 1194], "save": [174, 755], "disk": [174, 213, 869], "life": [174, 756, 981], "gentoo": [174, 838], "rant": [174, 194, 482, 1014], "swap": [174, 268, 442, 758, 881, 1102], "tmpf": 174, "instanc": [174, 232, 258, 261], "syslog": 174, "var": 174, "mountpoint": 174, "logrot": 174, "o": [174, 232, 242, 248, 255, 256, 261, 268, 270, 271, 303, 307, 310, 312, 341, 347, 350, 351, 354, 362, 399, 822, 879, 880, 881, 904, 917, 959, 960, 961, 962, 963, 964, 973, 974, 994, 1086], "schedul": [174, 310, 380, 381, 385, 871, 875, 981, 994, 995, 997, 998, 999], "ram": 174, "thing": [174, 235, 256, 277, 278, 280], "left": [174, 419, 610], "p": 175, "suck": [175, 818], "count": [175, 754, 845, 881, 1121], "consumpt": 175, "conclus": [175, 843, 935, 943], "pthread": 175, "experi": 175, "100": 175, "default": [175, 206, 253, 255, 277, 278, 280, 337, 366, 551, 599, 601, 602, 614, 615, 616, 617, 684, 732, 753, 771, 897, 1010, 1078, 1159], "eat": 175, "limit": [175, 1039], "than": [175, 558, 1055], "my": [175, 178, 274, 392, 393, 479, 806, 877, 894], "could": [175, 756], "take": [175, 444, 755, 1058], "doe": [175, 623, 881, 894, 897, 965, 968, 969], "differ": [175, 206, 443, 628, 630, 900, 954], "rpm": [176, 178, 203, 811], "prerequisit": [176, 184, 202, 301, 323, 327, 372, 813, 1092], "rpmbuild": 176, "directori": [176, 201, 202, 351, 377, 479, 480, 552, 789, 865, 866, 883, 888, 889, 890, 891, 900, 901, 902, 909, 916, 917, 920, 921, 926, 954, 965, 1013, 1014, 1033, 1170], "download": [176, 222, 224, 370, 375, 389, 555, 1024, 1027, 1184], "For": [176, 178, 184, 262, 265, 289, 292, 294, 295, 298, 300, 343, 388, 400, 525, 599, 610, 695, 723, 744, 769, 873, 959, 1024, 1025, 1026, 1036, 1054, 1124, 1193], "domain": [177, 197, 295, 770], "subdomain": 177, "www": 177, "apex": 177, "microsoft": 178, "team": 178, "screen": [178, 930], "share": [178, 485, 490, 750, 754, 757, 786, 865, 866, 892, 1005, 1006, 1028, 1029, 1204], "x11": 178, "reviv": 178, "meh": 178, "annoy": 178, "re": [178, 1035], "regist": [178, 467], "itself": 178, "autostart": 178, "browser": [178, 237], "recommend": [178, 209, 372, 1171, 1192], "deploi": 179, "gener": [179, 183, 193, 202, 206, 211, 238, 245, 248, 253, 255, 261, 280, 282, 286, 292, 295, 299, 301, 302, 306, 313, 315, 323, 324, 325, 327, 331, 335, 341, 428, 557, 598, 601, 605, 723, 724, 726, 727, 732, 791, 944, 951, 978, 1013, 1014, 1038, 1039, 1040, 1041, 1042, 1067, 1107, 1120, 1192], "public": [179, 232, 492, 599, 865, 866, 890, 891, 951], "repo": [179, 201], "jfasch": [179, 895], "home": [179, 870, 900, 916, 955], "time": [179, 188, 192, 297, 483, 770, 846, 847, 875, 987, 1099], "deploy": [179, 315, 331, 485, 838, 1192], "bigbluebutton": 180, "onlin": [180, 189, 1184], "articl": [180, 181, 183, 184], "tl": 180, "dr": 180, "host": [180, 225, 838, 1026], "check": [180, 493, 517, 883, 944, 985, 1021, 1082, 1103], "els": [180, 248, 255, 261, 271, 301, 323, 327, 341, 351, 401, 425, 426, 427, 604, 619, 921, 938, 951, 1035, 1071, 1074], "traunstein": 181, "zierlersteig": 181, "kaltenbachwildni": 181, "anstieg": 181, "auf": [181, 222], "zierlerberg": 181, "rinn": 181, "abstieg": 181, "grintovec": 182, "plan\u0161arsko": 182, "jezero": 182, "\u010de\u0161ka": 182, "ko\u010da": 182, "anreis": 182, "hinauf": 182, "runter": 182, "zusammenfassung": 182, "brick": 183, "1399": 183, "dell": 183, "xp": 183, "happen": 183, "virtualbox": 183, "secur": [183, 213, 289, 310, 367, 950, 954], "enrol": 183, "machin": [183, 213, 234, 292, 367, 946, 947, 972, 1138, 1144], "owner": [183, 883], "mok": 183, "pair": [183, 695, 949, 951], "stage": 183, "reboot": 183, "diagnost": [183, 942], "crosstool": [184, 1025, 1026], "ng": [184, 1025, 1026], "prebuilt": [184, 1161], "repositori": [184, 188, 384, 552, 562], "releas": [184, 482, 820, 830, 1046], "glibc": 184, "gcc": [184, 454, 467, 1012], "simplest": [184, 723, 728, 766, 1032, 1055, 1171, 1177], "stdio": 184, "h": [184, 726, 930], "iostream": 184, "distribut": [184, 1092], "afterword": [184, 703], "post": [185, 194, 1005], "schulung": [186, 206], "entwicklung": 186, "beratung": 186, "richtlinien": 187, "ver\u00f6ffentlichung": 187, "kursmateri": 187, "window": [188, 225, 242, 298, 300, 390, 877], "workflow": [188, 235], "conflict": [188, 984, 1046], "individu": 189, "languag": [189, 205, 235, 251, 277, 278, 280, 285, 305, 306, 311, 337, 338, 388, 456, 475, 735, 991, 1037, 1059, 1061], "qualivis": [190, 388], "z\u00fcrich": [190, 388], "2013": [190, 388, 1185], "fragen": [190, 223], "antworten": 190, "kursnotizen": 191, "2015": [191, 388], "userspac": [191, 797, 799, 851, 852, 853, 942, 943, 979], "can": [191, 212, 235, 270, 444, 496, 500, 551, 610, 695, 755, 936, 937, 938, 940], "bu": [191, 212, 502, 937, 940, 944], "driver": [191, 220, 291, 388, 815, 816, 834, 942, 1195], "beispiel": [191, 206, 265, 926], "heizungssteuerung": 191, "k\u00f6nnen": [192, 216, 229], "viel": 192, "mutabl": [192, 195, 206, 216, 223, 229, 242, 245, 253, 255, 258, 261, 268, 271, 274, 286, 293, 303, 307, 313, 325, 329, 335, 347, 351, 1076, 1078], "immut": [192, 195, 206, 223, 229, 242, 253, 258, 261, 268, 274, 283, 290, 293, 307, 335, 341, 608, 1076], "kann": [192, 237], "man": [192, 237, 898], "nicht": [192, 206, 216], "oft": 192, "genug": 192, "wiederholen": 192, "hart": 192, "indizieren": 192, "weich": 192, "nettfragen": 192, "shortcut": [192, 1054, 1084], "objektorientiert": 192, "date": [192, 238, 297, 375], "delta": 192, "datetim": [192, 211, 232, 238, 293], "bissl": 192, "potschert": [192, 216], "schreiben": [192, 216], "scho": 192, "formen": 192, "represent": [192, 1057], "__str__": [192, 1052, 1057], "subprocess": [192, 271], "enumer": [192, 216, 221, 223, 229, 232, 253, 261, 268, 286, 303, 325, 335, 347], "zip": [192, 232, 335], "comprehens": [192, 216, 238, 245, 248, 253, 255, 261, 265, 286, 292, 293, 295, 325, 335, 341, 347, 1032, 1038, 1083], "exec": [192, 258, 274, 282, 286, 313, 335, 1036], "eval": [192, 193, 229, 258, 268, 286, 313, 325], "umgebend": 192, "context": [192, 253, 292, 295, 299, 836, 837, 857, 1033, 1036], "eigen": 192, "json": [192, 214, 221, 237, 238, 248, 265, 268, 274, 282, 283, 318, 321, 1133], "individualtrain": [193, 208, 388], "tage": [193, 388], "beginnend": [193, 388], "51": 193, "58": 193, "94": [193, 206], "121": 193, "famou": [193, 470], "overload": [193, 251, 261, 282, 317, 329, 573, 599, 606, 613, 753, 1055, 1057], "getter": [193, 551, 607], "setter": 193, "listcomprehens": 193, "express": [193, 206, 221, 238, 245, 271, 274, 286, 335, 341, 421, 423, 499, 517, 531, 702, 927, 1038, 1097, 1156], "global": [193, 206, 216, 274, 324, 407, 413, 434, 436, 450, 487, 580, 581, 582, 611, 612, 613, 956, 1031, 1077], "scope": [193, 216, 324, 766, 769, 1031, 1077], "variabl": [193, 216, 229, 232, 242, 245, 253, 261, 268, 271, 283, 303, 307, 329, 335, 341, 347, 351, 365, 393, 407, 410, 413, 434, 436, 442, 461, 517, 581, 608, 612, 738, 767, 870, 956, 985, 986, 993, 1066, 1077, 1102], "closur": [193, 216, 282, 299, 301, 302, 317, 323, 327, 737, 1031, 1033], "between": [193, 616, 1142], "walkthrough": 194, "reduc": [194, 418], "eight": 194, "color": 194, "pil": 194, "numpi": [194, 196, 223, 230, 270, 273, 292, 295, 306, 312, 324, 329, 345, 350, 351, 388, 1137, 1142], "cluster": 194, "excurs": [194, 270, 737], "matplotlib": [194, 223, 242, 274, 312, 329, 335, 1091, 1142], "now": [194, 206], "come": [194, 230, 485, 679, 1012, 1137], "let": 194, "kmean": 194, "result": [194, 471, 1149], "properti": [194, 232, 261, 491, 492, 1056], "center": 194, "restor": 194, "alpha": 194, "back": [194, 648, 1133], "rgba": 194, "random": [195, 232, 265, 270, 528, 541, 549, 1157], "type": [195, 221, 245, 248, 258, 261, 268, 277, 278, 280, 282, 283, 297, 299, 317, 320, 321, 325, 337, 347, 366, 409, 411, 412, 416, 423, 448, 458, 463, 482, 492, 601, 630, 651, 652, 695, 696, 699, 710, 712, 749, 771, 776, 778, 779, 809, 818, 913, 920, 983, 1033, 1035, 1048, 1055, 1078, 1144], "except": [195, 232, 248, 251, 258, 261, 273, 274, 282, 292, 295, 299, 300, 317, 320, 333, 339, 345, 349, 381, 573, 620, 621, 689, 738, 745, 769, 1035], "demonstr": 195, "dict": [195, 245, 253, 255, 261, 268, 341, 347, 1054], "access": [195, 234, 401, 454, 455, 599, 607, 615, 681, 771, 775, 777, 779, 780, 781, 782, 789, 822, 851, 852, 853, 1049, 1056, 1083, 1084], "indic": [195, 223], "slice": [195, 206, 221, 232, 255, 261, 265, 286, 307, 313, 875, 1073, 1158, 1160], "protocol": [195, 206, 221, 242, 245, 248, 253, 255, 258, 261, 271, 286, 299, 303, 307, 325, 329, 335, 341, 723, 935, 999, 1040, 1042], "standardthemen": 196, "hauptthema": 196, "numerik": 196, "lesen": [196, 216], "mat": 196, "l\u00f6sen": 196, "uni": 196, "\u00fcbung": [196, 199, 216], "propos": 197, "posix": [197, 767, 980, 989, 1002, 1004, 1005, 1006, 1007], "ipc": [197, 198, 388, 1002, 1004, 1005, 1006, 1007, 1204], "socket": [197, 938, 961], "applic": [197, 996], "compani": 197, "thought": 197, "handgestrickt": 199, "um": 199, "fallen": 199, "lustvol": 199, "erleiden": 199, "programmier": 200, "baden": [200, 388], "w\u00fcrttemberg": [200, 388], "kursinform": 200, "kursaufbau": 200, "kursverlauf": [200, 208], "hand": 201, "privat": [201, 232, 261, 492, 599, 671, 733, 865, 866, 888, 889], "makefil": [202, 552, 806, 816, 1013, 1014, 1028], "argh": 203, "visual": [203, 230, 246, 471, 486, 1137, 1163, 1172], "studio": [203, 230, 246, 1137, 1163, 1172], "flatpak": 203, "issu": [203, 1031], "m": 203, "firma": [205, 388], "environ": [205, 270, 278, 280, 289, 291, 298, 299, 300, 377, 870, 993, 1060, 1124, 1172, 1173, 1174, 1182], "driven": [205, 234, 259, 270, 273, 301, 302, 323, 324, 327, 388, 1001, 1208], "dai": [205, 209, 210, 212, 213, 214, 224, 225, 234, 235, 240, 243, 245, 246, 249, 256, 289, 292, 295, 298, 299, 300, 301, 302, 306, 310, 312, 317, 323, 324, 327, 328, 334, 338, 350, 354, 744, 1099, 1190], "advanc": [205, 209, 212, 221, 224, 233, 249, 259, 262, 273, 282, 285, 295, 301, 302, 303, 304, 305, 306, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 345, 346, 347, 348, 388, 456, 1136, 1137, 1198], "18": [206, 208, 234, 253, 273, 285, 286, 300, 316, 339, 340, 341, 342, 370, 388, 1026], "19": [206, 208, 212, 246, 262, 369, 370, 384, 386, 388], "sy": [206, 232, 869, 1065], "multilin": [206, 238, 242, 335, 365, 1080], "docstr": [206, 253, 265, 268, 271, 293, 325, 347, 365], "datentypen": [206, 216, 223, 236, 252, 264], "ausflug": [206, 255], "variablen": [206, 216, 223, 236, 252, 255, 264, 274], "deren": 206, "unterbau": 206, "zuweisung": 206, "mit": [206, 216, 221, 234, 388, 926, 1185, 1201], "hilf": 206, "tupl": [206, 211, 216, 221, 223, 229, 232, 242, 245, 248, 253, 255, 261, 265, 268, 271, 277, 278, 280, 283, 286, 293, 303, 307, 329, 335, 337, 341, 347, 364, 365, 695, 744, 749, 1068, 1076, 1145], "unpack": [206, 211, 216, 221, 223, 232, 248, 253, 265, 271, 277, 278, 280, 283, 293, 329, 335, 337, 347, 364, 365, 695, 744, 749, 1024, 1145], "unendlich": 206, "breit": 206, "divis": [206, 216], "floor": [206, 216], "konvertierung": 206, "konstruktoren": [206, 223], "welchen": 206, "typ": [206, 216], "typen": 206, "besser": 206, "laufzeitverhalten": [206, 216], "geeigneter": 206, "datenstrukturen": [206, 216, 217, 237, 255, 1200], "boolean": [206, 216, 242, 245, 253, 255, 261, 265, 268, 335, 341, 415, 499, 1069, 1097, 1156], "short": [206, 245, 261, 415, 509, 818], "circuit": [206, 245, 261, 415], "evalu": [206, 245, 261], "warum": [206, 216], "sind": [206, 216], "mehr": [206, 221], "rang": [206, 211, 216, 223, 232, 238, 242, 245, 253, 255, 258, 265, 268, 271, 277, 278, 280, 283, 293, 307, 313, 324, 337, 341, 347, 351, 629, 630, 695, 723, 743, 744, 745, 746, 747, 748, 1038, 1075, 1091], "foli": 206, "161": 206, "shallow": [206, 255, 1076], "deep": [206, 255, 1076], "dem": [206, 1201], "deepcopi": 206, "funktionen": [206, 216, 217, 221, 1200], "gotcha": [206, 816, 846, 1000], "90": 206, "ff": 206, "lokal": [206, 216, 274], "92": 206, "uniq": [206, 1119, 1120], "punkt": [206, 216], "zusammengefasst": 206, "hier": 206, "sch\u00f6nere": 206, "al": [206, 216, 265], "comprens": 206, "125": 206, "lesbarkeit": 206, "perform": [206, 229, 469, 745], "review": [206, 235], "pprint": 206, "praktisch": 206, "debug": [206, 482, 836, 1034], "datentransform": 206, "127ff": 206, "complet": [206, 573, 898], "collect": [206, 255, 258, 283, 1012, 1054, 1155, 1168], "namedtupl": [206, 1054], "parameter\u00fcbergab": [206, 216], "variabel": 206, "lang": 206, "argumentlisten": 206, "erst": 206, "klass": 206, "weiterf\u00fchrend": [208, 230], "workspac": [209, 210, 212, 214], "core": [209, 246, 289, 1013], "special": [209, 328, 922], "tutori": [209, 212, 224, 230, 240, 270, 273, 306, 1137], "parti": [209, 240], "v": [211, 216, 223, 229, 232, 253, 258, 261, 265, 268, 274, 290, 293, 303, 307, 318, 364, 365, 403, 412, 424, 427, 431, 433, 482, 485, 592, 593, 594, 608, 754, 762, 778, 816, 836, 837, 843, 844, 958, 994, 1064, 1067, 1075, 1086, 1165], "return": [211, 274, 341, 447, 705, 706, 708, 723], "orient": [211, 261, 274, 282, 285, 286, 299, 301, 302, 305, 306, 311, 317, 320, 323, 324, 327, 328, 333, 339, 345, 346, 349, 350, 358, 477, 597, 668, 1051], "addit": [212, 597, 613, 675, 1052], "brought": 212, "thoma": 212, "cloud": [213, 338, 367], "particip": 213, "desk": 213, "interlud": [213, 818], "bloodi": 213, "wild": [213, 262, 317, 320, 323], "watchdog": 213, "25": [214, 224, 233, 240, 251, 256, 267, 309, 310, 317, 318, 319, 322, 388], "grundlegend": [216, 217, 1200], "sprachelement": [216, 217, 1200], "syntax": [216, 223, 229, 261, 271, 293, 307, 335, 347, 365, 738, 747, 1064], "semantik": 216, "einr\u00fcckung": 216, "ihren": 216, "\u00e4ndern": 216, "kommentar": 216, "sprach": 216, "standarddatentypen": 216, "elementar": [216, 217, 1200], "beliebig": 216, "gro\u00df": 216, "vergleichsoperatoren": 216, "pr\u00e4zedenz": 216, "vor": 216, "strichrechnung": 216, "modulo": 216, "un\u00e4rer": 216, "negat": [216, 1156], "erzwingen": 216, "auch": 216, "zeichenketten": 216, "raw": [216, 223, 238, 242, 255, 261, 283, 313, 1049, 1080, 1132], "f": [216, 238, 253, 271, 313, 335, 1081], "konvertierungen": 216, "pr\u00e4zendenzregeln": 216, "literal": 216, "primit": [216, 761, 1038], "konstanten": 216, "operatoren": 216, "ausdr\u00fcck": 216, "operatorrangfolgen": 216, "\u00fcbungen": [216, 1184], "zwei": 216, "vertauschen": 216, "kontrollstrukturen": [216, 217, 236, 252, 253, 264, 1200], "anweisungen": 216, "folgen": 216, "bedingungen": 216, "verzweigungen": 216, "bedingt": 216, "anweisung": 216, "verzweigung": [216, 217, 1200], "geschachtelt": 216, "mehrfach": 216, "fallauswahl": 216, "schleifen": [216, 217, 1200], "z\u00e4hlergesteuert": 216, "kopfgesteuert": 216, "schleif": [216, 221], "fu\u00dfgesteuert": 216, "jf": 216, "continu": [216, 251, 253, 292, 300, 302, 324, 334, 354, 430, 1071, 1074], "sequenti": [216, 221, 253, 265, 335, 351, 637, 638, 645, 646, 1038, 1072], "schnell\u00fcbersicht": 216, "sprunganweisungen": 216, "endlosschleifen": 216, "ben\u00f6tigt": 216, "Suche": 216, "eindimensional": 216, "tupel": 216, "listen": [216, 221, 255, 365], "sort": [216, 268, 556, 635, 640, 641, 644, 1159], "revers": [216, 642, 643, 660, 661, 662, 1055], "stapel": 216, "schlangen": 216, "versuch": 216, "zur\u00fcck": 216, "hybrid": 216, "supergscheit": 216, "methoden": [216, 217, 1200], "prozeduren": [216, 217, 1200], "funktionspoint": 216, "so": [216, 229, 232, 242, 274, 298, 477, 597, 695, 708, 710, 737, 1158], "heisst": [216, 221], "funktionsobjekt": 216, "primzahlenbeispiel": 216, "funktion": 216, "laufzeitfehl": 216, "existiert": 216, "zuweisen": 216, "fehlerfal": 216, "peter": 216, "unterprogramm": 216, "wert": 216, "referenzen": 216, "r\u00fcckgabewert": 216, "oder": [216, 371, 1185], "inner": [216, 1031], "standardbibliotheken": 216, "built": [216, 299, 601, 699, 816, 1035], "funktionalit\u00e4ten": 216, "struktur": 217, "herdt": [217, 1200], "kapitel": [217, 1200], "ganz": [221, 253], "kurz": 221, "mehreren": 221, "returnwerten": 221, "bzw": [221, 371], "containerdatentypen": 221, "untypisiert": 221, "l\u00f6schen": 221, "begriff": 221, "zufal": 221, "regular": [221, 234, 235, 271, 274, 286, 335, 341, 927], "hallo": 223, "speicher": 223, "sch\u00fctze": 223, "ich": 223, "davor": 223, "aber": 223, "gemischten": 223, "wiederholung": [223, 258], "objektidentit\u00e4t": 223, "statement": [223, 232, 424, 438, 1031, 1033, 1046, 1064, 1070, 1149, 1152], "operationen": 223, "verloren": 223, "interpol": 223, "mittel": [223, 229], "scipi": 223, "shell": [225, 289, 310, 354, 367, 388, 870, 881, 883, 899, 911, 912, 918, 950, 967, 976, 991, 1186], "script": [65, 225, 310, 388, 945, 976, 1043, 1062, 1186], "29": [225, 299, 333, 334, 335, 349, 350, 351, 352, 370, 378, 388], "assign": [229, 255, 261, 268, 329, 347, 351, 365, 420, 517, 598, 604, 605, 705, 706, 708, 753, 1031, 1066, 1073, 1077, 1154], "fun": [229, 268, 282, 1066], "arithmet": [229, 234, 253, 265, 365, 393, 414, 443, 517, 531, 590, 613, 626, 627, 631, 634, 1055, 1067], "complex": [229, 268, 365, 1182], "nur": 229, "sum": [229, 679], "weiter": 229, "dynamisch": 229, "evaluierung": 229, "scienc": [230, 256, 270, 273, 306, 323, 324, 325, 327, 347, 349, 1137], "don": [230, 745, 1137], "batteri": [230, 365, 1082, 1137], "confer": [230, 306, 1137], "zipfil": 232, "member": [232, 261, 599, 604, 605, 607, 612, 681, 682, 699, 771], "attribut": [232, 258, 274, 337, 875, 978, 1049, 1056, 1162], "protect": [232, 671, 745, 828], "posit": [232, 597, 1029, 1058, 1088], "keyword": [232, 253, 277, 278, 280, 337, 366, 460, 461, 1031, 1058, 1078], "argument": [232, 253, 261, 282, 317, 366, 444, 965, 991, 1034, 1058, 1065, 1078, 1088], "mix": [232, 245, 313, 738, 1113, 1114], "yield": [232, 248, 253, 271, 299, 313, 1038, 1041], "filter": [232, 261, 290, 291, 297, 325, 335, 557, 558, 559, 745, 1156], "nonetyp": [232, 245], "none": [232, 253], "recurs": [232, 446, 605, 702, 789, 900], "fibonacci": [232, 723, 725, 1039, 1107], "sever": 232, "same": [232, 581, 606, 612, 737, 1077, 1171], "oserror": 232, "errno": [232, 956], "platform": [232, 942], "assert": [232, 274, 325], "assertionerror": 232, "27": [233, 251, 267, 317, 318, 319, 322, 331, 332, 388], "predefin": [233, 438, 1182], "stream": [233, 809, 880, 1086], "pcap": [233, 246, 248], "programmieren": [234, 388], "tool": [234, 307, 310, 325, 354, 372, 863, 928, 931, 942, 1197], "massacr": 234, "kick": 234, "encapsul": [234, 463, 603, 769], "flow": [234, 264, 270, 285, 292, 295, 305, 306, 311, 312, 333, 334, 339, 340, 345, 346, 349, 350, 432], "pointer": [234, 235, 251, 277, 278, 280, 298, 300, 338, 440, 441, 443, 445, 461, 573, 590, 605, 609, 610, 626, 627, 628, 630, 631, 634, 654, 695, 710, 750, 751, 752, 753, 755], "standard": [234, 246, 251, 255, 270, 298, 300, 306, 411, 458, 482, 560, 620, 630, 663, 674, 676, 703, 880, 964, 1086, 1137, 1179], "stl": [234, 573, 589, 590, 591, 622, 630, 631, 659], "kid": 235, "recapitul": 235, "some": [235, 253, 258, 297, 300, 310, 738, 769], "jump": [235, 443], "complic": [235, 522, 1028], "toolbox": 235, "databas": [235, 327, 680, 816, 1093, 1095, 1130, 1146, 1147, 1149], "gtest": [235, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183], "smart": [235, 251, 277, 278, 280, 300, 338, 573, 750, 751, 752, 753], "datenbank": 237, "showcas": 237, "kommt": 237, "db": 237, "aufgab": 237, "formulieren": 237, "damit": 237, "dies": 237, "http": [237, 325], "verbindung": 237, "schicken": 237, "jetzt": 237, "schickman": 237, "weg": 237, "vom": [237, 388], "server": [237, 1153], "php": 237, "j": 237, "empfangen": 237, "nun": 237, "muessen": 237, "verwandlen": 237, "liter": [238, 365, 517, 769, 770], "quot": [238, 242, 268, 1145], "friend": [238, 765], "sinc": [238, 271, 277, 278, 280, 612, 1081], "pars": [238, 1065, 1088, 1115], "sap": [239, 292, 294, 295, 296, 297, 344, 388], "export": 239, "solut": [239, 435, 457, 480, 489, 495, 496, 497, 500, 501, 506, 515, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 605, 632, 662, 699, 701, 708, 732, 733, 742, 776, 875, 894, 953, 955, 959, 1028, 1030, 1046, 1173], "terminologi": [242, 310, 354, 872, 1010, 1144], "31": [243, 251, 259, 349, 350, 351, 352, 388], "numer": [243, 345], "ai": 243, "mountain": 243, "io": [245, 261, 289, 293, 329, 335, 350, 466, 822, 823, 878, 978], "common": [245, 467, 479, 645, 1039, 1048], "wtf": [245, 962, 1010], "creativ": [248, 864, 1052], "shift": [248, 419, 613], "hmmm": 249, "undefin": [251, 1077], "behavior": [251, 747], "again": [251, 299, 310, 354, 607, 694, 918, 1055, 1186], "repeat": [251, 910], "quickli": 251, "algorithm": [251, 268, 292, 300, 337, 338, 443, 556, 573, 590, 625, 626, 630, 631, 640, 644, 1142, 1144], "functor": [251, 573, 638, 737, 739, 740, 758], "unifi": 251, "uml": [251, 509], "todai": [251, 1031], "associ": [251, 422, 509, 649, 650], "dynam": [251, 282, 301, 302, 303, 323, 327, 450, 577, 578, 579, 631, 664, 665, 778, 794, 824, 825, 1029, 1049, 1058], "alloc": [251, 337, 467, 587, 632, 657, 658, 665, 774, 776, 809, 832, 974, 1038], "week": 251, "zahl": 253, "miscellanea": 253, "brace": [253, 277, 278, 280, 337, 338, 697, 698, 699, 700, 1156], "singl": [253, 480, 505, 954, 1012, 1177], "hour_of_dai": 253, "membership": [253, 1072], "best": 253, "doc": [255, 325], "ident": [255, 318], "datenypen": 255, "libarari": 255, "chainmap": 255, "dequ": 255, "suchalgorithmen": 255, "pitfal": [255, 298, 301, 366, 601, 670, 695, 723, 740], "fromkei": [255, 268], "join": [255, 261, 335, 350, 351, 1082, 1110], "lstrip": [255, 362], "rstrip": [255, 362], "sequentiel": 258, "konstant": 258, "suchzeit": 258, "metaprogram": 258, "everywher": [258, 274, 605, 1036], "defaultdict": [258, 283], "hello": [261, 271, 392, 727, 816, 817, 1062], "world": [261, 392, 399, 816, 817, 1062], "blahblah": [261, 265, 268, 271, 335, 630, 1061], "commandlin": [261, 289, 327, 356, 361, 444, 472, 479, 898, 953, 976, 1010, 1065, 1088], "lifetim": [261, 407, 436, 740, 754, 762, 1146], "preview": [261, 490], "explicit": [261, 401, 597, 609, 700, 738, 740, 753, 766, 1046], "max": 261, "iteratoren": 261, "generatoren": 261, "ordereddict": 261, "duck": [261, 277, 278, 280, 317, 320, 337, 710, 779, 1048], "resolut": 261, "order": [261, 581, 1035, 1055], "mro": 261, "super": 261, "__bases__": 261, "__mro__": 261, "self": [261, 605, 1050], "call": [261, 437, 441, 467, 471, 473, 573, 841, 958, 964, 993, 999, 1058], "mangl": [261, 606], "udemi": 261, "claus": [261, 301, 323, 327, 1035], "lambda": [261, 277, 278, 280, 307, 337, 338, 695, 736, 737, 738, 739, 758], "oppos": 261, "discuss": [264, 301, 302, 376, 401, 403, 767, 841, 846, 854], "chart": 264, "interact": [265, 313, 1062, 1114], "1st": 265, "explan": [265, 325], "preced": [265, 268, 422, 1067], "float": [265, 268, 325, 1067], "einschub": 265, "vergleich": 265, "filterketten": 265, "zen": 265, "datensatz": 265, "notat": 265, "letzt": 265, "letzten": 265, "infinit": [268, 1039], "long": [268, 695], "comparison": [268, 597, 644, 789, 863, 1055, 1067], "digit": [268, 370, 1104], "english": [268, 372, 1104], "determin": [268, 884, 1101, 1111, 1112], "maximum": [268, 1101, 1111, 1112], "out": [268, 301, 302, 502, 600, 629, 630, 1000, 1014, 1031, 1073], "duplic": [268, 480, 622, 967], "encod": [268, 270, 271, 282, 292, 312, 313, 329, 370, 1150], "nest": [271, 433, 446], "itertool": 271, "chain": [271, 841], "destructor": [271, 581, 587, 602, 667, 672, 752], "prient": 273, "next": [273, 466, 731, 1177], "standesregist": 273, "sqlite3": [273, 483, 1093, 1149], "xml": [273, 1162], "tree": [273, 811, 838, 876, 902, 909, 947, 954, 993], "projektabschlusstag": 273, "anyth": 274, "defin": [274, 489, 601, 738, 1035], "own": [274, 479, 707, 717, 875], "lookup": [274, 565, 566], "vorbesprechung": 276, "legend": 276, "neuerungen": 276, "seit": 276, "2011": [276, 277, 278, 280, 388], "ausblick": 276, "thank": [277, 278, 280], "you": [277, 278, 280, 710], "readablil": [277, 278, 280], "writabl": [277, 278, 280, 965], "err": [277, 278, 280, 337, 654, 710, 744, 749], "bind": [277, 278, 280, 337, 744, 749, 757, 758, 1149], "auto": [277, 278, 280, 337, 695, 710, 743, 744, 985, 1171], "without": [277, 278, 280, 337, 611, 632, 706, 710, 974], "simpli": [277, 278, 280, 338, 955], "deserv": [277, 278, 280], "ag": [277, 278, 280, 685], "overrid": [277, 278, 280, 337, 742], "delet": [277, 278, 280, 337, 578, 647, 733, 898], "strongli": [277, 278, 280, 337, 696], "enum": [277, 278, 280, 337, 459, 696, 806], "deleg": [277, 278, 280, 337, 701], "nullptr": [277, 278, 280, 337, 709], "rvalu": [277, 278, 280, 337, 704, 707, 708], "skeleton": [278, 280, 298, 300, 615, 865, 866], "perfect": [280, 417, 459, 757], "view": [280, 698, 745, 747, 748, 802, 864], "architectur": [281, 388, 477, 695, 734, 838], "pattern": [281, 299, 301, 302, 388, 501, 515, 1039, 1193], "mondai": 281, "tuesdai": 281, "wednesdai": 281, "forc": [282, 416], "front": [282, 301, 323, 1049], "seri": [282, 285, 305, 306, 311, 312, 333, 334, 340, 345, 346, 349, 350, 573, 1123, 1130, 1155], "piec": [282, 354], "go": [282, 967, 1145], "kickoff": [282, 301, 302, 317, 320, 324, 327], "livehack": [282, 291, 479, 502, 704, 801, 1077, 1165, 1172], "Such": [283, 675], "noob": 285, "wsl": [289, 298, 300, 877, 1026], "quick": 289, "permiss": [289, 310, 354, 883, 885, 886, 887, 893, 897, 916, 947], "uart": [289, 869], "susi": 289, "untold": [289, 292, 298, 299, 302, 338], "whet": [290, 291], "appetit": [290, 291], "panda": [290, 292, 293, 295, 297, 299, 312, 324, 329, 335, 345, 349, 350, 1142, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "regex": 290, "pipelin": 291, "categori": 291, "payment": 291, "select": [291, 297, 299, 935, 942, 1002, 1155, 1156, 1158, 1160, 1177], "uncategor": 291, "dataset": [292, 296, 297, 1141, 1143], "origin": [292, 295, 622, 739, 740, 848, 1145], "automat": [292, 295, 315, 331, 413, 436, 732, 780, 1192], "cleanup": [292, 295, 846, 857], "conversiosn": 293, "outlook": [295, 337], "specif": [295, 987, 1125], "usecas": 297, "drop": [297, 497, 745], "nan": 297, "datafram": [297, 1142, 1155, 1159], "isna": 297, "to_datetim": 297, "dated": 297, "workabl": 297, "usag": [297, 302, 337, 446, 450, 473, 489, 493, 538, 553, 599, 636, 637, 643, 670, 698, 702, 710, 754, 755, 756, 797, 841, 881, 920, 937, 944, 968, 1012, 1091], "modifi": [297, 454, 461, 538, 984, 1046, 1076, 1161], "increas": 297, "price": 297, "particular": 297, "store": [297, 454, 502, 984, 1046], "readabl": [297, 457, 769, 970], "combin": [297, 420, 516, 517, 530], "prefer": [298, 300], "ubuntu": [298, 300, 1026], "under": [298, 300, 900, 960, 1033], "unsupport": 298, "heavi": [298, 300, 874], "weight": [298, 300], "resourc": [298, 372, 605, 665, 753, 766, 834], "r": [298, 917, 954], "littl": [298, 428, 479, 1061], "concurr": 298, "far": [298, 762, 1144], "fact": [299, 820, 882, 1049, 1052], "fixtur": [299, 554, 789, 1170, 1171, 1181, 1182, 1183], "omin": [299, 1034], "warm": 300, "resolv": 300, "cont": 300, "d": [300, 502], "insid": [301, 302, 607, 612, 707, 708], "construct": [301, 323, 327, 1054, 1071], "emphasi": [301, 323, 327], "recoveri": [301, 302, 323, 324, 327], "broader": 301, "sens": 301, "morn": [302, 306, 310, 312, 324, 334, 338, 350, 354], "pytest": [302, 350, 1169, 1170], "awaken": [306, 334, 350], "bash": [310, 354, 388, 918, 1186], "bourn": [310, 354, 918, 1186], "inspect": [310, 354, 925, 928], "wakeup": [310, 312, 338, 354, 998, 1000], "redirect": [310, 354, 878, 879, 880, 881, 904, 917, 967], "pipe": [310, 354, 747, 864, 878, 879, 881, 882, 929, 931], "archiv": [310, 354, 860, 861, 863, 864, 1026, 1027, 1030], "compress": [310, 354, 860, 861, 863, 864], "network": [310, 519, 832, 833, 936, 961, 1207], "least": [310, 1177], "day2": 312, "interpret": [313, 471, 503, 516, 517, 530, 531, 1114], "len": 313, "abl": 313, "callabl": [313, 758], "sandbox": [317, 320], "equal": [318, 551, 597, 613, 614, 615, 616, 617, 637, 1055], "spoiler": 320, "annot": 321, "multiprocess": 323, "idea": 323, "veri": [324, 742, 774, 1162], "leftov": 324, "yesterdai": 324, "ifi": 324, "toolcas": [324, 337, 713, 714, 715], "arg": [324, 1034], "kwarg": [324, 1034], "includ": [324, 437, 491, 1082], "receiv": [324, 1006], "udp": 324, "datagram": [324, 936], "compositesink": 324, "timestamp": [324, 846], "org": [325, 370], "aaarghhh": 325, "expresss": 325, "constexpr": [337, 702], "constinit": 337, "constev": 337, "want": [337, 670, 695, 706, 710, 733, 806, 811, 969, 1052], "erasur": [337, 776, 778], "classic": [338, 759, 775], "semant": [338, 704, 705, 706, 707, 708, 1006], "kochtopf": 338, "roundup": 338, "still": [338, 500, 695, 1033, 1038], "weird": 341, "exchang": [341, 936], "schuetzen": 341, "pathlib": [341, 351], "regexen": 341, "distil": 341, "py": 341, "infin": [347, 1039], "listdir": [350, 351], "option": [350, 425, 472, 487, 488, 489, 864, 898, 900, 920, 927, 942, 954, 1145], "scikit": [350, 351], "struct": [351, 446, 447, 462, 597, 686, 749], "cell": 351, "wuerfeln": 351, "prime": [351, 1108, 1116, 1122], "misc": 351, "crap": 351, "datatyo": 351, "einlesen": 351, "sep": 351, "putti": 354, "quiz": [354, 677, 871, 885, 886, 911, 1018], "checker": 355, "blinklicht": [356, 357, 358, 359], "electron": [356, 935], "aspect": 356, "circuitri": 356, "header": [356, 435, 481, 487, 612, 942, 1126], "pinout": [356, 942], "unittest": [359, 1171, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1208], "ece19": 360, "g2": [362, 866], "big": [362, 388, 826], "swoop": 362, "size": [362, 411, 570, 720, 914], "chunk": 362, "line": [362, 406, 438, 600, 881, 898, 1064, 1106, 1117, 1121], "str": [362, 1057], "byte": 364, "btw": 365, "wertebereich": 365, "sidenot": [366, 1078], "pure": [366, 670, 672, 1078], "beauti": [366, 473, 869, 944, 1078], "login": [367, 873, 945], "formalit\u00e4ten": 368, "ec": [369, 384, 386, 865, 866], "daili": 370, "fail": [370, 969, 1170, 1177, 1179], "reiter": 370, "argpars": [370, 1065, 1088], "deutsch": [371, 388], "lehrinhalt": 371, "lernergebniss": 371, "lv": 371, "verpflichtend": 371, "lernressourcen": 371, "instrument": 371, "art": 371, "vermittlung": 371, "begleitbedingungen": 371, "pr\u00fcfungsmethod": 371, "beurteilungskriterien": 371, "mode": [372, 482, 883, 935, 968, 1062, 1086], "deliveri": [372, 1009, 1010], "co": 372, "requisit": 372, "assess": 372, "criteria": [372, 994], "whose": 374, "fault": 374, "newcom": 375, "jjjj": 378, "sidewai": [379, 612, 758, 769, 1034, 1039], "bisher": 388, "gehalten": 388, "entwickl": 388, "fortgeschritten": [388, 1188], "wiener": 388, "neustadt": 388, "einf\u00fchrung": [388, 1187, 1189, 1196], "ober\u00f6sterreich": 388, "pictur": [388, 826], "obersteiermark": 388, "korn": 388, "salzburg": 388, "ausgew\u00e4hlt": 388, "themen": 388, "2018": 388, "raum": 388, "n\u00fcrnberg": 388, "oberb\u00fcren": 388, "schweiz": 388, "2017": 388, "m\u00fcnchen": [388, 1185], "lowlevel": 388, "refresh": 388, "programmiererstandpunkt": 388, "2016": 388, "wien": 388, "workshop": 388, "bodenseo": 388, "hemmenhofen": 388, "bodense": 388, "systemnah": 388, "2014": 388, "mathia": 388, "kettner": 388, "siemen": 388, "braunschweig": 388, "intermedi": [388, 528, 1031, 1048], "scratch": [388, 1185], "lpd": 388, "hannov": 388, "unter": 388, "k\u00f6ln": 388, "projektverwaltung": 388, "subvers": [388, 1202], "lka": 388, "niedersachsen": 388, "konfigur": 388, "gnu": [388, 471, 1012, 1197], "make": [388, 485, 552, 694, 733, 822, 865, 866, 1013, 1014, 1197], "2012": 388, "hamburg": 388, "fehlerdiagnos": 388, "polizei": 388, "stia": 388, "admont": 388, "bi": 388, "2010": 388, "softwareentwicklung": 388, "darmstadt": 388, "ulm": 388, "bundeswehr": 388, "wildflecken": 388, "cool": [391, 1081], "gui": 391, "Their": [391, 411], "hobbi": 391, "histori": [391, 596, 694, 802, 1006, 1031, 1061, 1141], "second": [393, 395], "fahrenheit": [394, 396, 398, 525], "tabl": [394, 396, 398, 551, 1055], "simplif": 395, "revisit": [395, 463, 706], "constant": [397, 412, 437, 467, 528], "preprocessor": [397, 437, 438], "macro": [398, 437, 438, 487, 797, 818], "outsid": 399, "cat": [399, 923], "poor": [399, 400], "wc": 400, "definit": [401, 403, 405, 413, 431, 433, 434, 437, 489, 612, 695, 775, 777, 779, 781, 797, 998, 1075], "memset": 401, "histogram": 402, "nonsens": 403, "signatur": 403, "declar": [403, 404, 433, 434, 435, 612], "mistak": 405, "stdin": [406, 931, 945], "variant": [411, 500, 506, 695, 771, 780, 781, 782, 1006], "qualifi": 411, "width": [411, 443, 617, 630, 943, 1073], "escap": [412, 1080], "logic": 415, "implicit": [416, 755], "sign": 416, "truncat": [416, 974], "propag": 416, "unsign": 416, "compil": [416, 433, 438, 454, 455, 480, 481, 482, 598, 601, 605, 734, 755, 818, 838, 1012, 1015, 1024, 1028], "warn": [416, 422, 438, 988, 1010], "cast": 416, "increment": [417, 630, 723, 1046], "decrement": [417, 630], "confus": [417, 1067, 1156], "manipul": [419, 755, 974, 1010], "bitwis": [419, 1156], "AND": 419, "OR": 419, "xor": 419, "right": [419, 1118], "invert": [419, 1155], "complement": 419, "summari": [422, 597, 758, 838, 864, 1029, 1049, 1158, 1160], "true": [425, 500, 610, 1159], "fals": 425, "truth": 425, "matter": 426, "distinct": 427, "purpos": [428, 978], "closer": 428, "comma": 428, "infam": 428, "idiom": 428, "bodi": 429, "goto": 431, "label": [431, 1160], "monolith": [433, 480, 502, 555], "separ": [433, 434, 480, 502, 767, 922, 1028], "static": [436, 460, 551, 611, 612, 778, 1028, 1029, 1030, 1053], "visibl": [436, 460], "replac": [437, 540, 783], "inlin": [437, 467, 600, 612], "guard": 437, "rule": [438, 477, 598, 601, 612, 700, 708, 745, 876], "span": 438, "stringif": [438, 1057], "token": 438, "address": [440, 809, 852, 875, 942, 996, 1156], "arbitrari": [443, 630, 1034, 1058], "see": [444, 869, 874, 875, 880, 881, 960, 961, 962, 964, 991, 994, 998, 1000, 1079, 1144], "typedef": 448, "alia": 448, "singli": 451, "volatil": [453, 899], "lie": 453, "valid": 453, "handler": [453, 1009, 1010], "intrins": 454, "atom": [454, 764, 769, 836, 837, 841, 842, 857, 983], "builtin": 454, "align": 455, "unalign": 455, "pad": 455, "saniti": [457, 465, 479], "readabilti": 457, "shoot": 457, "offens": 457, "unobvi": 457, "ambigu": [457, 463, 700], "smell": 457, "know": 458, "size_t": 458, "discret": 459, "tradit": [459, 477, 1058], "approach": [459, 487, 488, 489], "wishlist": 459, "close": [459, 505, 750, 1006], "somewhat": 460, "contriv": 460, "hoorai": 460, "correct": [461, 608, 742], "non": [461, 544, 545, 546, 547, 548, 549, 550, 587, 607, 771, 777, 1177], "good": [462, 487, 488, 597, 612, 630, 699, 708, 717, 718, 745, 747], "old": [462, 612, 630, 695, 708, 717, 718, 747], "c99": 462, "explict": 463, "safeti": [463, 479], "scheme": 463, "artifici": [463, 1138], "valgrind": [464, 578], "action": [464, 1010], "optim": [466, 467, 468], "bound": [466, 467, 578, 994], "unnecessari": 467, "peephol": 467, "subexpress": 467, "elimin": [467, 755, 1106], "strength": 467, "reduct": 467, "fold": 467, "invari": 467, "unrol": 467, "tail": [467, 929], "cpu": [467, 875, 994, 1000], "cach": [468, 489, 745], "multidimension": 468, "thrash": 468, "profil": [470, 471, 473, 474], "donald": 470, "knuth": 470, "toni": 470, "hoar": 470, "larri": 470, "wall": 470, "practic": 470, "brian": 470, "w": 470, "kernighan": 470, "rob": 470, "pike": 470, "gprof": 471, "flat": 471, "callgrind": 472, "analysi": 472, "per": [472, 806, 846, 1182], "kcachegrind": 472, "oprofil": 473, "much": [473, 488, 739, 1033], "wide": 473, "offlin": 473, "graphic": 473, "accomplish": 477, "disclaim": [477, 877], "principl": [477, 505], "yagni": 477, "uncl": 478, "bob": 478, "typic": [479, 876, 980, 996], "bookkeep": 479, "effort": 479, "spaghetti": 479, "concaten": [479, 1154], "input": [479, 880, 1038, 1142], "yyyi": 479, "mm": 479, "where": [479, 485, 874, 1012], "testabl": 479, "explicitli": [479, 738, 755], "categor": 479, "net": 479, "place": [479, 556, 601, 642, 865, 866, 1076], "overengin": [479, 612], "boilerpl": [480, 739, 834], "execut": [480, 486, 883, 1029, 1035, 1043, 1063, 1113, 1177, 1179], "consist": [480, 809], "paus": 482, "diagram": 482, "cmake_build_typ": 482, "k": [482, 1139], "printf": [482, 599], "popular": [482, 870], "find_packag": 483, "prefix": [485, 1034], "target": [485, 486, 488, 491, 492, 554, 972, 1013, 1192], "runpath": 485, "abi": 485, "blacklist": [487, 488], "flag": [487, 676, 824, 964, 1081], "libhello": 487, "bad": [487, 488, 745, 776, 807], "target_compile_definit": 488, "backlist": 488, "availablil": 488, "use_blacklist": 489, "normal": 490, "subdirectori": 491, "reorgan": 491, "i2c": [495, 942, 944], "subhierarchi": 495, "instanti": [495, 502, 651, 712, 771, 804], "adapt": [496, 502, 511, 516, 518, 525, 530, 758], "must": [496, 971], "adapte": 496, "asensor": 496, "real": [496, 604, 695, 756, 895], "measur": [496, 539, 770, 998, 1000], "motiv": [497, 500, 516, 517, 613, 696, 699, 701, 710, 712, 737, 743, 858, 1040, 1050, 1056], "insert": [497, 563, 564, 647, 648, 651, 652, 653, 687, 757, 785, 786, 826], "bulk": 497, "6a": 497, "initializer_list": [497, 698, 700], "socialdb": 498, "filesystem": [499, 789, 1006], "thermomet": [499, 519, 520, 533, 534, 553], "aggreg": [500, 509, 699], "conret": 500, "realiz": 500, "situat": [500, 955], "constantsensor": 500, "decoratedconstantsensor": 500, "randomsensor": [500, 541], "decoratedrandomsensor": 500, "verifi": [500, 910, 944, 946, 1142], "hold": [500, 1054], "studi": [502, 743, 744, 1023], "heat": 502, "dbuslogg": 502, "dbusvaluestor": 502, "either": 502, "stop": [502, 753], "help": [502, 898, 930, 1165, 1172], "observ": [504, 532, 1040], "liskov": 505, "substitut": [505, 610], "segreg": 505, "invers": [505, 999], "proxi": [506, 516, 519, 520, 530, 533, 534], "foundat": 507, "hierarchi": [507, 620, 876, 1035], "hypothet": [507, 1055], "singleton": [508, 521, 522, 523, 535, 536, 537], "connector": 509, "uniniti": [517, 610], "flexibl": [521, 522, 535, 536], "strict": [522, 536], "inflex": [523, 537], "i2csensorfactori": 524, "concret": [524, 535, 536], "i2csensorfactory_vendor1": 524, "stub": [533, 845], "socialinsur": [535, 536], "oegk": [535, 536], "sv": [535, 536], "introduc": [538, 599, 745], "relationship": [538, 672, 673, 1142], "firstnam": 538, "lastnam": [538, 688, 690], "w1sensor": [538, 555], "answer": [538, 737], "try": [542, 620, 753, 1035], "ledstripedisplay_nopoli": 544, "cover": [544, 545, 546, 547, 548, 549, 550, 553], "hysteresis_nopoli": 545, "averagingsensor_nopoli": 546, "constantsensor_nopoli": 547, "mocksensor_nopoli": 548, "randomsensor_nopoli": 549, "mock": 550, "shape": [551, 898], "procedur": 551, "circl": 551, "area": [551, 617], "squar": 551, "massag": 552, "sub": 552, "notfound": 554, "find_is_const": 554, "isol": [554, 1146, 1182], "realiti": 554, "pc": 554, "greater": 558, "odd": 559, "overwrit": 563, "sunni": [564, 566, 569, 965, 969, 970, 971], "uniquifi": 571, "transcript": 573, "malloc": 578, "free": 578, "mismatch": [578, 955], "across": [581, 775, 777, 779, 781], "ownership": [586, 587, 588, 755, 883], "raii": [586, 587, 588, 766], "dealloc": 587, "naiv": [590, 611, 662, 854, 1009, 1039, 1155], "ol": [597, 744], "look": [597, 960, 961, 962], "distanc": [597, 616], "length": 597, "specifi": [599, 965], "otherwis": 599, "lifecycl": 602, "dragon": [605, 761], "memberwis": 605, "straighforward": 605, "correctli": 605, "underli": [606, 696], "mechan": 606, "just": 606, "pollut": 608, "hidden": [609, 920], "cannot": 610, "easili": 610, "odr": 612, "litt": 612, "defnit": 612, "ostream": [613, 614, 615, 616, 617], "cout": 613, "cuboid": 614, "upon": [614, 616, 617], "point3d": [614, 616], "surfac": 614, "volum": [614, 1026], "unari": [615, 616], "rectangl": [616, 617], "coordin": [616, 617], "absolut": [616, 789, 922, 1136], "height": 617, "catch": [620, 1035], "throw": [620, 771], "spirit": [630, 754, 755, 756], "pre": [632, 699], "destin": [632, 965], "back_insert_iter": 632, "binary_search": 635, "intellig": [635, 641, 1042, 1138], "find_if": [638, 688], "customiz": 638, "for_each": 639, "lower_bound": 641, "reverse_copi": [643, 662], "characterist": [645, 648], "modif": [648, 1028], "fill": [651, 1149], "definin": 652, "subscript": 653, "eras": 654, "multimap": 656, "deriv": [666, 667], "larger": [670, 1030, 1038], "substr": [675, 1082], "paint": 676, "american": 676, "onto": 676, "moodl": [677, 871, 885, 886, 911, 1018], "cin": 679, "n": 685, "year": 685, "transform": [686, 758, 786, 1038], "wrong": [689, 769, 965], "great": [694, 996], "around": [695, 723], "school": 695, "item": [695, 757, 785, 786, 787, 1033, 1039], "inevit": 695, "union": [695, 771], "consider": [695, 996], "uniform": 697, "implementor": 698, "direct": [698, 809], "inconsist": 699, "heap": 699, "refus": 699, "narrow": 699, "mess": [700, 1150], "realist": [700, 1036, 1170], "int": [700, 991], "nicolai": 700, "josutti": 700, "complain": 700, "said": 703, "guidelin": 703, "well": 703, "smartptr": 705, "lvalu": [708, 757], "wish": [708, 1048], "theori": 708, "Ones": 708, "sai": [710, 900], "decai": 710, "chosen": 712, "rescu": [712, 737, 759, 1014, 1034, 1055, 1161], "syntact": [712, 1034], "variat": [712, 744, 749, 838], "conceptless": [713, 714], "fulfil": 717, "has_siz": 717, "index_returns_doubl": 717, "func": 718, "ret": 721, "doubl": 721, "foreword": 723, "prototyp": 723, "examp": 723, "explain": 723, "drive": [723, 935], "anatomi": [723, 816], "resum": 723, "suspens": 723, "caller": 723, "co_yield": 723, "mimick": 723, "fibo": 724, "suspend": [729, 730, 731], "decis": [734, 994], "cleanli": 734, "care": 737, "handwritten": [739, 740], "proggi": 739, "morph": 739, "possibl": 740, "temporari": [740, 1033, 1170], "made": 740, "hard": [742, 919], "aris": 742, "gool": 744, "prevent": [744, 755], "accident": [744, 786], "dangl": 745, "easi": [745, 762], "constraint": 745, "dogmat": 745, "sigh": 745, "storag": [747, 987], "abbrevi": 747, "avail": [747, 797], "compat": 749, "unique_ptr": [751, 754, 755], "shared_ptr": [751, 754, 786], "handwrit": 753, "ctor": 753, "auto_ptr": 753, "mayb": 753, "uniqu": [754, 787], "But": [754, 777, 969], "juggl": 754, "make_shar": 754, "cyclic": 754, "chanc": 755, "leakag": 755, "keystrok": 755, "make_uniqu": 755, "acknowledg": 755, "prove": 755, "weak_ptr": [756, 786], "borrow": 756, "invalid": 756, "univers": 757, "dual": 757, "bag": [757, 785, 786, 787], "null": 758, "pointlessli": 758, "hardcod": [758, 802], "placehold": 758, "upsid": 759, "technic": 759, "downsid": 759, "joinabl": 762, "detach": [762, 981], "cornercas": 762, "recursive_mutex": 765, "timed_mutex": 765, "recursive_timed_mutex": 765, "lock": [766, 769, 830, 843], "unlock": [766, 843], "consid": 766, "acquisit": [766, 1123], "lock_guard": 766, "condition_vari": 767, "safe": [767, 1010], "predic": [767, 985], "concern": 767, "promis": 769, "chrono": [769, 770], "utterli": 769, "becom": [769, 1030], "readi": 769, "minim": 769, "pro": 769, "clock": 770, "sleep": [770, 836, 841, 842], "bad_variant_access": 771, "accessor": 771, "get_if": 771, "fundament": [771, 1059], "crtp": [773, 776, 778], "incomplet": [774, 1152], "bloat": 776, "string_view": 776, "unrel": 779, "visit": 782, "rel": [789, 922, 1043], "compon": 789, "creation": [789, 870, 981, 982], "create_directori": 789, "entri": 789, "classif": 789, "is_xxx": 789, "directory_entri": 789, "modern": [793, 794, 795, 1190], "slideshow": [794, 797, 799, 802, 804, 807, 809, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 841, 843, 846, 848, 852, 855, 858, 1006, 1010, 1078, 1166, 1173], "hook": 796, "necessari": 796, "ioctl": [796, 797, 799, 818, 851, 964], "vtabl": 797, "kernelspac": 797, "_io": [797, 818], "major": [801, 802], "minor": [801, 802], "space": [802, 852, 871, 874, 875, 996], "hair": 806, "pretti": 806, "wswitch": 806, "dma": [809, 810, 834], "physic": 809, "scatterlist": 809, "when": 811, "explod": 811, "loadabl": 816, "init": [816, 834, 876, 1185], "exit": [816, 945, 981, 991], "unload": 816, "raspi": [818, 819, 955], "legaci": [818, 1109], "api": [818, 848, 980, 999], "my_activate_gpio": 818, "servic": [820, 876, 1153], "routin": [820, 834], "reserv": 822, "kmalloc": [824, 825, 841], "doubli": [826, 827], "node": [826, 967], "empti": [826, 917, 1049, 1106], "consequ": 828, "rt": [830, 831], "mutual": [830, 843], "exclus": [830, 843], "registr": 832, "layer": 832, "util": [832, 937], "pci": [834, 835], "foremost": 834, "probe": 834, "bar": 834, "rasperri": 838, "crossdev": 838, "artifact": [838, 1139], "bootload": 838, "jjj": 839, "mainten": 840, "spinlock": [841, 843, 844], "spin_lock": 841, "irq": 841, "spin_lock_irqsav": 841, "spin_unlock_irqrestor": 841, "ah": [841, 1150], "bulletproof": 843, "dup": 845, "defer": [846, 857], "jiffi": 848, "wheel": [848, 1092], "get_one_ev": 851, "copy_to_us": 851, "noth": 854, "o_nonblock": 854, "wake": 855, "workqueu": [857, 858, 859], "did": 857, "destroi": [858, 1172], "gzip": 862, "tar": 864, "etiquett": 864, "Being": 864, "g1": 865, "lot": [865, 866], "precondit": [865, 866], "credenti": [865, 884], "backup": [865, 866, 900], "busi": 866, "ok": [869, 991], "serial": 869, "pseudo": 869, "partit": 869, "proc": 869, "authent": [873, 951], "prompt": 873, "verif": [873, 1125], "success": 873, "imperson": 873, "uid": [875, 894, 895], "parent": [876, 993], "child": 876, "subsystem": 877, "0": [877, 991, 1146, 1185], "stdout": [881, 931, 945, 967], "stderr": 881, "trick": [881, 1080], "teacher": 883, "constel": 883, "root": [883, 895], "octal": 883, "tune": [883, 998, 1145], "setuid": [894, 895], "passwd": [894, 914, 970, 1115], "sudo": 894, "password": [894, 1103], "chmod": [894, 1063], "toi": 894, "effect": [895, 1010, 1049], "ugli": 896, "sticki": 896, "umask": 897, "edit": 898, "tabul": 898, "filenam": 898, "bashrc": [899, 900], "cp": 900, "similar": 900, "its": [900, 1145], "pwd": 901, "cd": 901, "mkdir": [907, 917], "funni": 908, "dev": 913, "touch": 917, "rm": 917, "rmdir": 917, "mv": 921, "somewher": 921, "cut": [924, 1073], "durchsuchen": 926, "optionen": 926, "verkn\u00fcpfungen": 926, "grep": 927, "less": [930, 1031, 1055], "brushless": 935, "motor": 935, "speed": 935, "esc": 935, "fwd": 935, "rev": 935, "calibr": 935, "packet": 936, "vcan": 937, "frame": [938, 1154], "mcp2515": 939, "schemat": 939, "solder": 939, "spi": 939, "lm73": 942, "slave": [942, 944], "master": [942, 944], "enabl": [942, 944], "bcm2835": 942, "datasheet": 942, "connect": [942, 961, 1149], "i2cdetect": 942, "detect": 942, "hwmon": [942, 944], "monitor": [942, 944], "pca9685": 943, "puls": 943, "wire": [943, 944], "ds18b20": 944, "alter": 944, "w1": 944, "attach": 944, "pin": [944, 978], "ds2482": 944, "800": 944, "channel": 944, "announc": 944, "hotplug": 944, "lm": 944, "caveat": [944, 1146], "topologi": 944, "symptom": 944, "adjust": [947, 1024], "wear": 951, "admin": 951, "hat": 951, "scp": 954, "sshf": 955, "mount": 955, "logdata": 955, "unmount": 955, "fusermount": 955, "umount": 955, "helper": [956, 1156], "simplic": [960, 961, 962], "watch": 960, "strace": 960, "supervis": 960, "descriptor": [964, 967, 974], "filedescriptor": 964, "offset": [964, 974], "lseek": 964, "hole": 966, "o_creat": 968, "bogu": 968, "o_excl": 969, "alreadi": 969, "o_rdonli": 970, "even": [970, 971, 1098], "o_wronli": 971, "writeabl": 971, "implicitli": 971, "scatter": 974, "gather": 974, "retriev": 976, "wise": 977, "legal": 980, "pthread_join": 981, "synchron": [983, 1009], "win32": 985, "reset": 985, "trylock": 990, "islock": 990, "argc": 991, "char": 991, "argv": [991, 1065], "procf": 993, "pid": 993, "ppid": 993, "getpid": 993, "getppid": 993, "multitask": 994, "fair": [994, 998], "runnabl": [994, 1000], "bare": 996, "metal": 996, "hm": 996, "awai": [996, 1132], "stabil": 996, "latenc": [998, 1000], "nice": 998, "inexact": 998, "immedi": 998, "preempt_rt": 998, "polici": 999, "prioriti": 999, "runn": 999, "frequenc": 1000, "scale": 1000, "mysteri": 1000, "remain": 1000, "sysprog": [1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011], "mmap": 1005, "segment": 1005, "produc": [1005, 1039], "consum": 1005, "mq_open": 1006, "mq_send": 1006, "mq_receiv": 1006, "mq_close": 1006, "mq_unlink": 1006, "notif": 1006, "mq_notifi": 1006, "mqueue": 1006, "sem_open": 1006, "sem_wait": 1006, "sem_post": 1006, "sem_clos": 1006, "sem_unlink": 1006, "barebon": 1009, "alarm": 1009, "louder": 1009, "innoc": 1009, "sigalrm": 1009, "programmat": 1010, "mask": 1010, "pend": 1010, "sigset_t": 1010, "async": 1010, "seem": 1012, "nm": 1012, "agnost": 1013, "goodi": 1014, "nativ": [1015, 1020], "sysroot": [1015, 1024], "linaro": 1024, "defunct": 1024, "patienc": 1024, "against": [1024, 1029, 1055], "docker": 1026, "autoconf": 1026, "71": 1026, "zoom": 1028, "rememb": 1028, "reloc": 1029, "independ": 1029, "pic": 1029, "runtim": 1029, "versu": 1029, "def": 1031, "reach": 1031, "theoret": 1031, "nonloc": 1031, "hood": 1033, "monkeypatch": 1033, "print": [1033, 1058], "contextlib": 1033, "contextmanag": 1033, "involv": 1033, "prefixprint": 1033, "mind": 1034, "sugar": 1034, "functool": [1034, 1055], "rais": 1035, "regardless": 1035, "coverag": 1038, "form": 1043, "daemon": 1044, "mother": 1046, "acquir": 1046, "abc": 1048, "late": 1048, "abtract": 1048, "interrelationship": 1051, "salari": 1052, "introspect": 1052, "isinst": 1052, "issubclass": 1052, "classmethod": 1053, "staticmethod": 1053, "_make": 1054, "_asdict": 1054, "dunder": 1055, "compar": 1055, "incompat": 1055, "lotsa": 1055, "magic": 1055, "__gt__": 1055, "term": 1055, "__lt__": 1055, "total_ord": 1055, "them": 1055, "readonli": 1056, "repr": 1057, "__repr__": 1057, "suppli": 1058, "ultim": 1058, "guido": 1061, "van": 1061, "rossum": 1061, "hash": 1063, "bang": 1063, "she": 1063, "doze": 1063, "registri": 1063, "indent": 1064, "cosmet": 1065, "rudimentari": 1065, "python2": 1067, "unicod": 1067, "esoter": 1071, "delimit": 1080, "interv": 1088, "axi": 1091, "setuptool": 1092, "manifest": 1092, "publish": [1092, 1131, 1153], "usernam": 1103, "strategi": 1115, "revert": 1117, "justifi": 1118, "activ": 1124, "dictread": [1126, 1127, 1145], "cp1252": [1126, 1128], "reader": [1128, 1129, 1145], "nohead": 1128, "both": 1134, "interrel": 1135, "product": 1136, "david": 1137, "beazlei": 1137, "raymond": 1137, "hetting": 1137, "mean": 1139, "linear": [1140, 1142, 1143], "regress": [1140, 1142, 1143], "weather": 1141, "ndarrai": 1142, "plot": 1142, "splice": 1142, "mankind": 1144, "god": 1144, "insan": 1145, "scsv": 1145, "dbapi": [1146, 1148, 1149], "transact": 1146, "postgresql": 1148, "postgr": 1148, "cursor": 1149, "queri": 1149, "ascii": 1150, "iso": 1150, "latin": 1150, "8859": 1150, "lieb": 1150, "gr\u00fc\u00dfe": 1150, "j\u00f6rg": 1150, "\u795d\u597d": 1150, "utf": 1150, "decod": 1150, "broker": 1153, "payload": 1153, "append": 1154, "deprec": 1154, "bitmap": 1156, "neat": 1156, "iloc": [1158, 1159], "Then": 1158, "inplac": 1159, "loc": [1159, 1160], "hiccup": 1160, "inclus": 1160, "lowercas": 1161, "email": 1161, "normalized_email": 1161, "ing": 1161, "elementtre": 1162, "etre": 1162, "sax": 1162, "dom": 1162, "invoc": 1165, "subcommand": 1165, "upload": 1168, "pythonpath": 1170, "mark": 1170, "expect": [1170, 1179], "recogn": 1171, "meat": 1171, "freez": 1172, "recreat": 1172, "fatal": 1177, "failur": 1177, "assert_": 1177, "suit": 1177, "teardown": 1182, "organisatorisch": 1184, "buchung": 1184, "kursablauf": 1184, "kursgestaltung": 1184, "unterlagen": 1184, "grub": 1185, "97": 1185, "bauen": 1185, "prozess": 1185, "verschieden": 1185, "zielpublikum": [1186, 1188, 1189, 1194, 1196, 1201, 1202, 1208], "kursinhalt": [1186, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "vorkenntniss": [1186, 1188, 1189, 1194, 1196, 1197, 1201, 1202, 1203, 1204, 1206, 1207, 1208], "three": 1190, "prior": 1192, "beispielen": 1196, "mutter": 1197, "aller": 1197, "woch": 1201, "svn": 1202, "sdbu": [65, 66]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [170, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [97, "python"], [370, "python"], [375, "python"]], "Linux": [[5, "linux"], [81, "linux"], [188, "linux"], [934, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [478, "course-material"], [1136, "course-material"]], "Einleitung": [[7, "Einleitung"], [226, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [223, "Datatypes"], [226, "Datatypes"], [229, "Datatypes"], [242, "Datatypes"], [245, "Datatypes"], [253, "Datatypes"], [255, "Datatypes"], [261, "Datatypes"], [265, "Datatypes"], [268, "Datatypes"], [271, "Datatypes"], [285, "datatypes"], [292, "datatypes"], [295, "datatypes"], [303, "Datatypes"], [305, "datatypes"], [306, "datatypes"], [307, "Datatypes"], [311, "datatypes"], [312, "datatypes"], [329, "Datatypes"], [333, "datatypes"], [334, "datatypes"], [339, "datatypes"], [340, "datatypes"], [341, "Datatypes"], [345, "datatypes"], [346, "datatypes"], [349, "datatypes"], [350, "datatypes"], [351, "Datatypes"], [365, "Datatypes"], [1067, "datatypes"]], "Numbers": [[7, "Numbers"], [226, "Numbers"], [229, "Numbers"], [253, "Numbers"], [365, "Numbers"], [1067, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [226, "Integer-Numbers"], [1067, "integer-numbers"]], "Strings": [[7, "Strings"], [223, "Strings"], [226, "Strings"], [229, "Strings"], [238, "Strings"], [242, "Strings"], [242, "id3"], [245, "Strings"], [253, "Strings"], [265, "Strings"], [283, "Strings"], [286, "Strings"], [286, "id1"], [286, "id3"], [293, "Strings"], [329, "Strings"], [365, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [226, "Compound-Datatypes"], [238, "Compound-Datatypes"], [242, "Compound-Datatypes"], [245, "Compound-Datatypes"], [248, "Compound-Datatypes"], [253, "Compound-Datatypes"], [255, "Compound-Datatypes"], [261, "Compound-Datatypes"], [265, "Compound-Datatypes"], [268, "Compound-Datatypes"], [271, "Compound-Datatypes"], [283, "Compound-Datatypes"], [307, "Compound-Datatypes"], [313, "Compound-Datatypes"], [325, "Compound-Datatypes"], [329, "Compound-Datatypes"], [341, "Compound-Datatypes"], [347, "Compound-Datatypes"], [351, "Compound-Datatypes"], [1068, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [226, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [226, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [226, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [226, "while"], [245, "while"], [261, "while"], [293, "while"], [347, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [226, "Functions"], [229, "Functions"], [242, "Functions"], [253, "Functions"], [255, "Functions"], [261, "Functions"], [265, "Functions"], [270, "functions"], [286, "Functions"], [293, "Functions"], [307, "Functions"], [323, "functions"], [327, "functions"], [333, "functions"], [334, "functions"], [335, "Functions"], [339, "functions"], [340, "functions"], [341, "Functions"], [345, "functions"], [346, "functions"], [347, "Functions"], [349, "functions"], [350, "functions"], [351, "Functions"], [403, "functions"], [403, "id1"], [1079, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [209, null], [210, null], [212, null], [213, null], [214, null], [215, null], [217, null], [219, null], [220, null], [224, null], [227, null], [230, null], [233, null], [234, null], [235, null], [236, null], [240, null], [243, null], [252, null], [256, null], [259, null], [262, null], [264, null], [267, null], [270, null], [273, null], [282, null], [285, null], [292, null], [295, null]], "\u00dcberblick": [[8, "uberblick"], [217, "uberblick"], [227, "uberblick"], [236, "uberblick"], [252, "uberblick"], [264, "uberblick"]], "Log": [[8, "log"], [153, "log"], [209, "log"], [210, "log"], [213, "log"], [214, "log"], [222, "log"], [224, "log"], [225, "log"], [227, "log"], [230, "log"], [234, "log"], [236, "log"], [240, "log"], [243, "log"], [252, "log"], [264, "log"], [273, "log"]], "Tag 1": [[8, "tag-1"], [200, "tag-1"], [219, "tag-1"], [227, "tag-1"], [230, "tag-1"], [236, "tag-1"], [252, "tag-1"], [264, "tag-1"]], "Tag 2": [[8, "tag-2"], [200, "tag-2"], [219, "tag-2"], [227, "tag-2"], [230, "tag-2"], [236, "tag-2"], [252, "tag-2"], [264, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [217, "live-hacking-jupyter-notebook"], [227, "live-hacking-jupyter-notebook"], [230, "live-hacking-jupyter-notebook"], [240, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [153, "links"], [154, "links"], [194, "Links"], [205, "links"], [210, "links"], [212, "links"], [214, "links"], [217, "links"], [224, "links"], [225, "links"], [227, "links"], [236, "links"], [240, "links"], [243, "links"], [246, "links"], [252, "links"], [259, "links"], [270, "links"], [273, "links"], [306, "links"], [312, "links"], [375, "links"], [453, "links"], [702, "links"], [723, "links"], [741, "links"], [752, "links"], [877, "links"], [898, "links"], [937, null], [944, "links"], [1060, null], [1091, null], [1092, "links"], [1153, "links"], [1155, "links"], [1156, "links"], [1158, "links"], [1159, "links"], [1160, "links"], [1161, "links"], [1173, "links"], [815, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [218, "programmierung-grundlagen-jupyter-notebook"], [228, "programmierung-grundlagen-jupyter-notebook"], [254, "programmierung-grundlagen-jupyter-notebook"], [266, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [80, "details"], [387, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [168, null], [170, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [188, null], [197, null], [201, "contents"], [202, null], [476, "contents"], [578, null], [581, null], [587, null], [590, null], [678, "id1"], [867, "id1"], [887, "id1"], [906, "id1"], [912, "id1"], [915, "id1"], [932, "id1"], [940, "id1"], [941, "id1"], [948, "id1"], [957, "id1"], [973, "id1"], [975, "id1"], [977, "id1"], [992, "id1"], [1002, null], [1005, null], [1019, "id1"], [1039, null], [1095, "id1"], [1096, "id1"], [1100, "id1"], [1109, "id1"], [1123, "id1"], [1130, "id1"], [1177, null], [1179, null], [1182, null], [1190, "id2"], [1193, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [388, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [370, "github"]], "Sphinx": [[13, "sphinx"], [154, "sphinx"], [157, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [152, "work-in-progress"]], "More": [[13, "more"], [776, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [151, "miscellaneous"], [166, "miscellaneous"], [193, "miscellaneous"], [213, "miscellaneous"], [277, "miscellaneous"], [278, "miscellaneous"], [298, "miscellaneous"], [312, "miscellaneous"], [323, "miscellaneous"], [324, "miscellaneous"], [327, "miscellaneous"], [334, "miscellaneous"], [337, "miscellaneous"], [573, "miscellaneous"], [573, "id1"], [709, "miscellaneous"], [974, "miscellaneous"], [987, "miscellaneous"], [772, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [356, "implementation-notes"]], "Todo": [[17, "id1"], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [170, null], [199, "id1"], [202, "id2"], [202, "id3"], [478, "todo"], [574, "id1"], [577, "id1"], [580, "id1"], [583, "id1"], [586, "id1"], [589, "id1"], [592, "id1"], [795, "id1"], [799, "id1"], [807, "id2"], [1001, "id1"], [1004, "id1"], [1008, "id1"], [1176, "id1"], [1181, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [285, "setup"], [292, "setup"], [295, "setup"], [305, "setup"], [306, "setup"], [310, "setup"], [311, "setup"], [312, "setup"], [333, "setup"], [334, "setup"], [339, "setup"], [340, "setup"], [345, "setup"], [349, "setup"], [350, "setup"], [935, "setup"], [1060, "setup"], [1172, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1186, null], [1187, null], [1188, null], [1189, null], [1194, null], [1196, null], [1197, null], [1201, null], [1202, null], [1203, null], [1204, null], [1206, null], [1207, null], [1208, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [158, "further-information"], [233, "further-information"], [234, "further-information"], [256, "further-information"], [361, "further-information"], [370, "further-information"], [757, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [477, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [341, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [956, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [554, "unit-tests"]], "Classes": [[43, "classes"], [232, "Classes"], [317, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [555, "refactoring"], [846, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Installation Notes": [[60, "installation-notes"]], "libgpiod": [[60, "libgpiod"]], "Fedora: Prepare Tarballs": [[60, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[60, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[61, "biography"], [63, "biography"], [67, "biography"]], "Abstract": [[61, "abstract"], [63, "abstract"], [67, "abstract"]], "Description": [[61, "description"], [63, "description"], [67, "description"], [508, "description"], [660, "description"], [676, "description"], [679, "description"], [681, "description"], [682, "description"], [683, "description"], [684, "description"], [685, "description"], [686, "description"], [687, "description"], [688, "description"], [690, "description"], [691, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[62, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[62, "setup-before-presentation"]], "Starting Point": [[62, "starting-point"], [705, "starting-point"]], "Greeting": [[62, "greeting"]], "Multiple Background Threads": [[62, "multiple-background-threads"]], "Enter asyncio": [[62, "enter-asyncio"]], "Character Device Based GPIO": [[62, "character-device-based-gpio"]], "GPIO Device": [[62, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[62, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[62, "entire-matrix-on-off"]], "Bringing All Together": [[62, "bringing-all-together"]], "Modularize": [[62, "modularize"]], "Play A Bit: Blink Entire Rows": [[62, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[62, "coroutines"]], "Not Enough: sequence()": [[62, "not-enough-sequence"]], "Looping: forever()": [[62, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[62, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[62, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[62, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[62, "program-finally"]], "Playground: cycle()": [[62, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[62, "fast-forward-any-and-cancellation"]], "Playground: on()": [[62, "playground-on"]], "Goodbye": [[62, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "GLT 2024 Submission: Python, asyncio, libgpiod, and Pointless Blinking": [[67, "glt-2024-submission-python-asyncio-libgpiod-and-pointless-blinking"]], "Pointless Blinking": [[68, "pointless-blinking"]], "C++": [[69, "c"], [112, "c"], [113, "c"], [170, "c"], [692, "c"]], "C++: Building with CMake": [[70, "c-building-with-cmake"]], "C++: Interfaces": [[71, "c-interfaces"]], "C++: OO Basics": [[72, "c-oo-basics"]], "C++: Unit Testing": [[73, "c-unit-testing"]], "Graph": [[74, "graph"], [678, "graph"], [839, "graph"], [1095, "graph"], [1096, "graph"], [1100, "graph"], [1109, "graph"], [1123, "graph"], [1130, "graph"]], "Embedded Computing 1": [[75, "embedded-computing-1"], [80, "embedded-computing-1"]], "Current Curriculum": [[75, "current-curriculum"], [76, "current-curriculum"]], "Topics": [[75, "topics"], [76, "topics"], [100, "topics"], [101, "topics"], [103, "topics"], [104, "topics"], [105, "topics"], [106, "topics"], [169, "topics"], [205, "topics"], [205, "id2"], [233, "topics"], [270, "topics"], [273, null], [374, "topics"], [378, "topics"], [475, "topics"], [603, "topics"], [640, "topics"], [646, "topics"], [650, "topics"], [658, "topics"], [663, "topics"], [668, "topics"], [692, "topics"], [693, "topics"], [697, "topics"], [704, "topics"], [711, "topics"], [722, "topics"], [735, "topics"], [736, "topics"], [746, "topics"], [751, "topics"], [784, "topics"], [788, "topics"], [790, "topics"], [792, "topics"], [950, "topics"], [968, null], [970, null], [970, null], [1016, "topics"], [1022, "topics"], [1023, "topics"], [1043, null], [1051, "topics"], [1147, "topics"], [1157, "topics"], [1169, "topics"], [408, "topics"], [423, "topics"], [432, "topics"], [439, "topics"], [445, "topics"], [449, "topics"], [452, "topics"], [456, "topics"], [465, "topics"], [469, "topics"], [474, "topics"], [595, "topics"], [618, "topics"], [621, "topics"], [624, "topics"], [665, "topics"], [674, "topics"], [760, "topics"], [768, "topics"], [772, "topics"], [989, "topics"], [995, "topics"], [1175, "topics"]], "Dependency Graph": [[75, "dependency-graph"], [76, "dependency-graph"]], "Embedded Computing 2": [[76, "embedded-computing-2"], [80, "embedded-computing-2"]], "EX: Race Conditions": [[77, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[78, "ex-avoiding-race-condition"]], "Goals": [[78, "goals"], [84, "goals"], [85, "goals"], [86, "goals"], [87, "goals"], [89, "goals"], [90, "goals"], [91, "goals"], [93, "goals"]], "Outcome": [[78, "outcome"], [84, "outcome"], [85, "outcome"], [86, "outcome"], [87, "outcome"], [212, "outcome"]], "Git Introduction": [[79, "git-introduction"]], "Embedded Computing (STECE-2019)": [[80, "embedded-computing-stece-2019"]], "Overview": [[80, "overview"], [705, "overview"], [753, "overview"], [767, "overview"], [769, "overview"], [775, "overview"], [777, "overview"], [779, "overview"], [780, "overview"], [781, "overview"], [782, "overview"], [789, "overview"], [863, "overview"], [874, "overview"], [931, "overview"], [942, "overview"], [943, "overview"], [944, "overview"], [944, "id1"], [945, "overview"], [980, "overview"]], "Knowledge Transferred": [[80, "knowledge-transferred"]], "Course Setup": [[80, "course-setup"]], "Introduction to Linux and Unix": [[82, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[83, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[84, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[85, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[86, "ex-led-temperature-display"]], "Hardware": [[86, "hardware"], [87, "hardware"]], "EX: Temperature Sensors": [[87, "ex-temperature-sensors"], [94, "ex-temperature-sensors"]], "GPIO": [[88, "gpio"]], "sysfs Interface": [[88, "sysfs-interface"]], "gpiod Interface": [[88, "gpiod-interface"]], "Multithreading": [[89, "multithreading"], [191, "multithreading"], [251, "multithreading"], [277, "multithreading"], [278, "multithreading"], [280, "multithreading"], [323, "multithreading"], [324, "multithreading"], [327, "multithreading"], [337, "multithreading"], [378, "multithreading"], [385, "multithreading"], [1009, "multithreading"], [1045, "multithreading"], [768, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[90, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[91, "communication-waiting-for-something"]], "Python Basics": [[92, "python-basics"]], "EX: Averaging Sensor, Display": [[93, "ex-averaging-sensor-display"]], "Simple Web Programming": [[95, "simple-web-programming"]], "Sensors Web Pages": [[96, "sensors-web-pages"]], "Embedded Computing STECE-2020)": [[98, "embedded-computing-stece-2020"]], "SS2022": [[99, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[99, "block-1-linux-and-working-with-remote-embedded-devices"], [126, "block-1-linux-and-working-with-remote-embedded-devices"], [148, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[99, "block-2-c-on-linux-local-and-cross-development"], [126, "block-2-c-on-linux-local-and-cross-development"], [148, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[99, "block-3-c"], [126, "block-3-c"], [148, "block-3-c"]], "2022-03-08": [[100, "id1"]], "Homework": [[100, "homework"], [101, "homework"], [103, "homework"], [106, "homework"]], "2022-03-10": [[101, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[102, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[102, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[102, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[103, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[104, "ku"]], "2022-03-28": [[105, "id1"]], "2022-04-01": [[106, "id1"]], "SS2022: Logs": [[107, "ss2022-logs"]], "WS2022": [[108, "ws2022"]], "Plan: Evolution": [[108, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[109, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[109, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[109, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[109, "question-3-memory-leak"]], "Question 4: std::vector": [[109, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[110, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[110, "cross-development"], [289, "cross-development"], [1015, "cross-development"], [1016, "cross-development"]], "C++, OO": [[110, "c-oo"]], "Lab Exam 2023-01-17": [[111, "lab-exam-2023-01-17"]], "Project Setup": [[111, "project-setup"], [553, "project-setup"], [1124, "project-setup"]], "Exercises": [[111, "exercises"], [188, "exercises"], [193, "exercises"], [225, "exercises"], [235, "exercises"], [235, "id1"], [235, "id3"], [293, "Exercises"], [298, "exercises"], [317, "exercises"], [317, "id1"], [320, "exercises"], [324, "exercises"], [354, "exercises"], [354, "id1"], [506, "exercises"], [508, "exercises"], [515, "exercises"], [543, "exercises"], [560, "exercises"], [562, "exercises"], [603, "exercises"], [668, "exercises"], [692, "exercises"], [788, "exercises"], [1022, "exercises"], [1051, "exercises"], [1096, "exercises"], [618, "exercises"]], "Exam Submission": [[111, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[112, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[112, "unix-linux-concepts"], [113, "unix-linux-concepts"]], "Toolchain": [[112, "toolchain"], [113, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[113, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[114, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[115, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[116, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[116, "question-1"], [119, "question-1"]], "Question 1.1": [[116, "question-1-1"]], "Question 1.2": [[116, "question-1-2"]], "Question 2": [[116, "question-2"], [119, "question-2"]], "Question 2.1": [[116, "question-2-1"]], "Question 2.2 (Why?)": [[116, "question-2-2-why"]], "Question 3": [[116, "question-3"]], "Exam WS2023/2024": [[117, "exam-ws2023-2024"]], "All Questions": [[117, "all-questions"]], "All questions": [[117, null]], "Exams": [[117, "exams"], [125, "exams"]], "Questions 2024": [[118, "questions-2024"]], "const Objects": [[119, "const-objects"]], "Parameter Passing": [[120, "parameter-passing"]], "Question 1: Which One Is Better?": [[120, "question-1-which-one-is-better"]], "Question2: Why?": [[120, "question2-why"]], "SOLID: Hysteresis With Display": [[121, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[122, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[123, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[123, "program-output-version-1"]], "Program Output, Version 2": [[123, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[124, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[124, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[124, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[124, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[124, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[124, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[124, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[124, "push-into-fork-on-github"]], "Embedded Computing (STECE-2021)": [[125, "embedded-computing-stece-2021"]], "Two Semesters": [[125, "two-semesters"]], "Supporting Material": [[125, "supporting-material"]], "SS2023": [[126, "ss2023"]], "Finish: Written Exam": [[126, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[127, "done-boiling-pot-the-beginning"]], "Standup Records": [[127, "standup-records"], [128, "standup-records"], [129, "standup-records"], [130, "standup-records"], [131, "standup-records"], [135, "standup-records"], [139, "standup-records"], [143, "standup-records"]], "2023-11-20": [[127, "id1"], [131, "id1"], [139, "id1"], [143, "id1"]], "2023-12-14": [[127, "id2"], [128, "id1"], [131, "id2"], [139, "id2"]], "Requirements": [[127, "requirements"], [128, "requirements"], [129, "requirements"], [130, "requirements"], [131, "requirements"], [132, "requirements"], [133, "requirements"], [134, "requirements"], [135, "requirements"], [137, "requirements"], [139, "requirements"], [143, "requirements"], [495, "requirements"], [519, "requirements"], [550, "requirements"]], "Implementation": [[127, "implementation"], [131, "implementation"], [132, "implementation"], [134, "implementation"], [137, "implementation"], [139, "implementation"], [143, "implementation"], [554, "implementation"]], "Testing": [[127, "testing"], [131, "testing"], [132, "testing"], [134, "testing"], [137, "testing"], [139, "testing"], [143, "testing"], [291, "testing"]], "Future (Not Part Of This Development Cycle)": [[127, "future-not-part-of-this-development-cycle"], [131, "future-not-part-of-this-development-cycle"], [132, "future-not-part-of-this-development-cycle"], [134, "future-not-part-of-this-development-cycle"], [137, "future-not-part-of-this-development-cycle"], [139, "future-not-part-of-this-development-cycle"], [143, "future-not-part-of-this-development-cycle"]], "Dependencies": [[127, "dependencies"], [128, "dependencies"], [129, "dependencies"], [130, "dependencies"], [131, "dependencies"], [132, "dependencies"], [133, "dependencies"], [134, "dependencies"], [135, "dependencies"], [136, "dependencies"], [137, "dependencies"], [138, "dependencies"], [139, "dependencies"], [143, "dependencies"], [356, "dependencies"], [357, "dependencies"], [358, "dependencies"], [359, "dependencies"], [361, "dependencies"], [484, "dependencies"], [501, "dependencies"], [515, "dependencies"], [543, "dependencies"], [560, "dependencies"], [562, "dependencies"], [573, "dependencies"], [640, "dependencies"], [646, "dependencies"], [650, "dependencies"], [658, "dependencies"], [660, "dependencies"], [663, "dependencies"], [668, "dependencies"], [676, "dependencies"], [677, "dependencies"], [679, "dependencies"], [681, "dependencies"], [682, "dependencies"], [683, "dependencies"], [684, "dependencies"], [685, "dependencies"], [686, "dependencies"], [687, "dependencies"], [688, "dependencies"], [689, "dependencies"], [690, "dependencies"], [691, "dependencies"], [697, "dependencies"], [704, "dependencies"], [711, "dependencies"], [722, "dependencies"], [746, "dependencies"], [751, "dependencies"], [776, "dependencies"], [865, "dependencies"], [866, "dependencies"], [867, "dependencies"], [871, "dependencies"], [885, "dependencies"], [886, "dependencies"], [887, "dependencies"], [906, "dependencies"], [911, "dependencies"], [912, "dependencies"], [915, "dependencies"], [948, "dependencies"], [950, "dependencies"], [957, "dependencies"], [963, "dependencies"], [965, "dependencies"], [973, "dependencies"], [975, "dependencies"], [977, "dependencies"], [992, "dependencies"], [1016, "dependencies"], [1018, "dependencies"], [1019, "dependencies"], [1022, "dependencies"], [1023, "dependencies"], [1044, "dependencies"], [1046, "dependencies"], [1093, "dependencies"], [1094, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1099, "dependencies"], [1101, "dependencies"], [1102, "dependencies"], [1103, "dependencies"], [1104, "dependencies"], [1105, "dependencies"], [1106, "dependencies"], [1110, "dependencies"], [1111, "dependencies"], [1112, "dependencies"], [1113, "dependencies"], [1114, "dependencies"], [1116, "dependencies"], [1117, "dependencies"], [1118, "dependencies"], [1119, "dependencies"], [1120, "dependencies"], [1121, "dependencies"], [1122, "dependencies"], [1124, "dependencies"], [1125, "dependencies"], [1126, "dependencies"], [1127, "dependencies"], [1128, "dependencies"], [1129, "dependencies"], [1131, "dependencies"], [1132, "dependencies"], [1133, "dependencies"], [1134, "dependencies"], [1147, "dependencies"], [1150, "dependencies"], [1153, "dependencies"], [1157, "dependencies"], [1169, "dependencies"], [989, "dependencies"], [1175, "dependencies"]], "Boiling Pot: Basic Integration": [[128, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[129, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[130, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[131, "done-data-logger"]], "Data Logger: CSV Sink": [[132, "data-logger-csv-sink"]], "Column name configuration": [[132, "column-name-configuration"]], "output()": [[132, "output"]], "Data Logger: Integration": [[133, "data-logger-integration"]], "Data Logger: MQTT Sink": [[134, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[134, "mqtt-implementation-mosquitto"]], "Installation": [[134, "installation"], [154, "installation"], [390, "installation"], [955, "installation"], [1091, "installation"], [1153, "installation"], [1177, "installation"]], "Wrapper": [[134, "wrapper"]], "Display Interface/Infrastructure": [[135, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[135, "new-interface-percentagedisplay"]], "Existing Implementations": [[135, "existing-implementations"]], "Composite Display": [[135, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[135, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[136, "ws2023-24-group-project-tasks"]], "Tasks": [[136, "tasks"], [144, "tasks"], [996, "tasks"]], "Datalogger": [[136, "datalogger"], [144, "datalogger"]], "Boiling Pot": [[136, "boiling-pot"], [144, "boiling-pot"]], "Peripherals": [[136, "peripherals"], [144, "peripherals"]], "Client": [[136, "client"], [1153, "client"]], "libgpiod Switch": [[137, "libgpiod-switch"]], "Python MQTT Subscriber": [[138, "python-mqtt-subscriber"]], "Notes": [[138, "notes"], [495, "notes"]], "Temperature Display: LED Via A PWM Controller": [[139, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[140, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[141, "done-onewire-sensor"]], "(DONE) Switch Interface": [[142, "done-switch-interface"]], "SysFS GPIO Switch": [[143, "sysfs-gpio-switch"], [144, "sysfs-gpio-switch"]], "WS2023/24": [[144, "ws2023-24"]], "2023-10-05 (6 VO)": [[144, "vo"]], "OO: Recap": [[144, "oo-recap"]], "Plan \ud83d\udcaa": [[144, "plan-muscle"]], "OO: Polymorphism": [[144, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[144, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[144, "tasks-first-round"]], "2023-11-03 (6 VO)": [[144, "id1"]], "Organizational": [[144, "organizational"]], "OO: Design?": [[144, "oo-design"]], "Project": [[144, "project"], [144, "id3"], [144, "id5"], [144, "id7"], [144, "id9"], [144, "id11"], [144, "id13"], [144, "id15"], [144, "id17"], [193, "project"]], "Hardware Overview": [[144, "hardware-overview"]], "2023-11-09 (3 VO)": [[144, "id2"]], "2023-11-10 (3 VO)": [[144, "id4"]], "2023-11-17 (3 VO)": [[144, "id6"]], "OO, And Software Development At Large": [[144, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[144, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[144, "id8"]], "Container Templates (std::map)": [[144, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[144, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[144, "datalogger-pull-request"]], "Boiling Pot, Switches": [[144, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[144, "id10"]], "Structure": [[144, "structure"], [170, "structure"], [538, "structure"]], "Renames": [[144, "renames"]], "2023-12-14 (6 VO)": [[144, "id12"]], "2024-01-08 (6 VO)": [[144, "id14"]], "2024-01-11 (6 VO)": [[144, "id16"]], "2024-02-02 (Exam)": [[144, "exam"]], "Relevant Topics": [[144, "relevant-topics"]], "A Sample Exam": [[144, "a-sample-exam"]], "Embedded Computing (STECE-2022)": [[145, "embedded-computing-stece-2022"]], "Gl\u00fchwein Trinken?": [[146, "gluhwein-trinken"]], "Embedded Computing 1 (STECE-2022): Summer": [[147, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Material": [[148, "embedded-computing-1-stece-2022-material"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[149, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[149, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[149, "umfang-der-lehrveranstaltung"]], "Inhalte": [[149, "inhalte"]], "Inhaltliche Voraussetzungen": [[149, "inhaltliche-voraussetzungen"]], "Ziel": [[149, "ziel"]], "Angaben zur Pr\u00fcfung": [[149, "angaben-zur-prufung"]], "Beurteilungsschema": [[149, "beurteilungsschema"]], "Bewertung der Leistungen": [[149, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[149, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[149, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[149, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[149, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[149, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[149, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[149, "inhalte-der-einzelnen-lehreinheiten"]], "Embedded Computing (FH Joanneum Graz)": [[150, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[151, "git-notes"]], "Bring Local Branch Upstream": [[151, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[151, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[151, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[153, "packaging-this-site-on-pypi"]], "Gaphor": [[154, "gaphor"]], "Decadent": [[154, "decadent"]], "Manual": [[154, "manual"]], "Modeling": [[154, "modeling"]], "Using Gaphor As A Library": [[154, "using-gaphor-as-a-library"]], "Install": [[154, "install"]], "Jupyter Notebook": [[154, "jupyter-notebook"], [222, "jupyter-notebook"], [224, "jupyter-notebook"], [241, "jupyter-notebook"], [243, "jupyter-notebook"], [246, "jupyter-notebook"], [252, "jupyter-notebook"], [257, "jupyter-notebook"], [260, "jupyter-notebook"], [263, "jupyter-notebook"], [365, "Jupyter-Notebook"], [1143, "jupyter-notebook"]], "Hochk\u00f6nig": [[155, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[155, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[155, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Playground": [[156, "playground"]], "In the Works": [[156, "in-the-works"]], "Not Yet in the Works": [[156, "not-yet-in-the-works"]], "pending_xref": [[157, "pending-xref"]], "Audio Chip Bringup": [[158, "audio-chip-bringup"]], "Goal": [[158, "goal"], [160, "goal"], [161, "goal"], [163, "goal"], [298, "goal"], [300, "goal"], [1190, "goal"], [1193, "goal"]], "Findings": [[158, "findings"]], "Get Debian 10 Kernel Config": [[159, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[159, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[159, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[160, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[161, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[161, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[162, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[163, "dirty-upgrade-path"]], "Steps": [[163, "steps"]], "Wait for Customer Hardware": [[164, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[165, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[166, "python-training-improvements"]], "Beginner Course": [[166, "beginner-course"]], "Exercise Structure": [[166, "exercise-structure"]], "Split Exercises": [[166, "split-exercises"]], "Creating Screencasts": [[167, "creating-screencasts"]], "OpenShot": [[167, "openshot"]], "SEO": [[168, "seo"]], "Sitemap": [[168, "sitemap"]], "Meta Information": [[168, "meta-information"]], "Courses": [[168, "courses"]], "Stacks (Hanging)": [[169, "stacks-hanging"]], "DBus (New Topic)": [[169, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[169, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[170, "miscellaneous-to-do"]], "Extensions": [[170, "extensions"]], "reST Todos": [[170, "rest-todos"]], "Styling": [[170, "styling"]], "Convert to RST/S5": [[170, "convert-to-rst-s5"]], "Examples": [[170, "examples"], [499, "examples"], [699, "examples"], [747, "examples"], [862, "examples"], [964, null]], "Convert Existing Content": [[170, "convert-existing-content"]], "Add Missing": [[170, "add-missing"]], "References, Past Trainings": [[170, "references-past-trainings"]], "About": [[170, "about"]], "Blog": [[170, "blog"]], "Learning The Web": [[171, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[172, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[172, "basics"], [243, "basics"], [270, "basics"], [285, "basics"], [305, "basics"], [306, "basics"], [306, "id1"], [311, "basics"], [312, "basics"], [312, "id1"], [333, "basics"], [339, "basics"], [345, "basics"], [346, "basics"], [349, "basics"], [350, "basics"], [365, "Basics"], [433, "basics"], [619, "basics"], [631, "basics"], [651, "basics"], [749, "basics"], [864, "basics"], [980, "basics"], [1088, "basics"]], "Getting X-Loader and U-Boot": [[172, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[172, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[172, "repairing-the-nand"]], "Writing X-Loader to NAND": [[172, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[172, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[173, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[173, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[173, "signals-aren-t-messages"]], "References": [[173, null], [173, null], [173, null], [245, "References"], [248, "References"], [610, "references"]], "Message Queues aren\u2019t Message Queues": [[173, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[173, "semaphores-and-mutexes"]], "Timers": [[173, "timers"]], "Polling": [[173, "polling"]], "Event Dispatching": [[173, "event-dispatching"]], "Interrupts": [[173, "interrupts"], [821, "interrupts"]], "Realtime": [[173, "realtime"], [998, "realtime"], [1185, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[174, "saving-solid-state-disk-life-gentoo"]], "Rant": [[174, "rant"], [194, "Rant"], [1014, null]], "No Swap": [[174, "no-swap"]], "tmpfs instances here and there": [[174, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[174, "syslog-var-log-messages"]], "Mountpoint for messages": [[174, "mountpoint-for-messages"]], "Logrotate": [[174, "logrotate"]], "Kernel I/O Scheduler": [[174, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[174, "use-ram-for-the-kernel-build"]], "Things that are left": [[174, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[175, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[175, "process-stack-management"]], "Conclusion": [[175, "conclusion"], [175, "id1"], [935, "conclusion"], [943, "conclusion"]], "Thread (pthread) Stack Management": [[175, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[175, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[175, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[175, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[175, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[175, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[175, "how-does-this-work"]], "Realtime is different": [[175, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[176, "patching-and-building-the-fedora-kernel"]], "Why?": [[176, "why"], [951, "why"], [1033, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[176, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[176, null], [176, null]], "Prepare the RPM Build": [[176, "prepare-the-rpm-build"]], "Install Prerequisites": [[176, "install-prerequisites"]], "Setup rpmbuild Directory": [[176, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[176, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[176, "apply-the-patch"]], "Build the Kernel RPMs": [[176, "build-the-kernel-rpms"]], "Install Kernel": [[176, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[177, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[177, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[177, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[178, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[178, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[178, "rpm-package-meh"]], "Updated on 2020-04-09": [[178, null]], "Annoyance #1: Keeps Running in Background": [[178, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[178, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[178, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[179, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[179, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[179, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[179, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[180, "using-bigbluebutton-for-online-training"]], "In this Article": [[180, null], [181, null], [183, null]], "TL;DR": [[180, "tl-dr"]], "Background Information": [[180, "background-information"]], "Hosting Setup": [[180, "hosting-setup"]], "BigBlueButton Installation": [[180, "bigbluebutton-installation"]], "Functionality Check": [[180, "functionality-check"]], "What Else?": [[180, "what-else"], [938, "what-else"], [951, "what-else"]], "Traunstein via Zierlersteig": [[181, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[181, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[181, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[181, "die-rinne"]], "Abstieg": [[181, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[182, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[182, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[182, "ceska-koca"]], "Hinauf": [[182, "hinauf"]], "Runter": [[182, "runter"]], "Zusammenfassung": [[182, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[183, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[183, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[183, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[183, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[183, "generate-key-pair"]], "Stage Key for Enrollment": [[183, "stage-key-for-enrollment"]], "Reboot, Brick": [[183, "reboot-brick"]], "Diagnostics": [[183, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[184, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1025, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[184, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[184, "installing-crosstool-ng"]], "Prerequisites": [[184, "prerequisites"], [1092, "prerequisites"]], "Installing From Cloned Git Repository": [[184, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[184, "installing-from-release-tarball"]], "PATH, And Basic Test": [[184, "path-and-basic-test"]], "Configure Toolchain Build": [[184, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[184, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[184, "important-glibc-version"]], "The Error": [[184, "the-error"], [184, "id4"]], "The Fix": [[184, "the-fix"], [184, "id5"]], "Important: GCC Version": [[184, "important-gcc-version"]], "Toolchain Build/Install": [[184, "toolchain-build-install"]], "Test": [[184, "test"], [818, "test"]], "Simplest: C, <stdio.h>": [[184, "simplest-c-stdio-h"]], "C++, <iostream>": [[184, "c-iostream"]], "C++, <thread>": [[184, "c-thread"]], "Packaging/Distributing The Toolchain": [[184, "packaging-distributing-the-toolchain"]], "Afterword": [[184, "afterword"]], "Posts": [[185, "posts"]], "Linux und Open Source": [[186, "linux-und-open-source"]], "Schulung": [[186, "schulung"]], "Entwicklung": [[186, "entwicklung"]], "Beratung": [[186, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[187, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[188, "installing-git"]], "Windows": [[188, "windows"]], "Workflow": [[188, "workflow"]], "Cloning the Repository": [[188, "cloning-the-repository"]], "Exercise Time": [[188, "exercise-time"]], "Conflicts": [[188, "conflicts"]], "Trainer\u2019s Notes": [[188, "trainer-s-notes"]], "Courses: Overview": [[189, "courses-overview"]], "Online Trainings": [[189, null]], "Individual Trainings": [[189, null]], "Everything About Linux": [[189, "everything-about-linux"]], "Programming Languages": [[189, "programming-languages"]], "Miscellaneous but Related": [[189, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[190, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[190, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[191, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[191, "gpios-in-userspace"]], "CAN Bus": [[191, "can-bus"], [212, "can-bus"]], "Driver Beispiele": [[191, "driver-beispiele"]], "Heizungssteuerung": [[191, "heizungssteuerung"]], "Live Hacking": [[192, "Live-Hacking"], [635, "live-hacking"], [636, "live-hacking"], [638, "live-hacking"], [639, "live-hacking"], [642, "live-hacking"], [643, "live-hacking"], [644, "live-hacking"], [656, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[192, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[192, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[192, "Dictionaries"], [221, "Dictionaries"], [293, "Dictionaries"], [307, "Dictionaries"], [365, "Dictionaries"], [1084, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[192, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[192, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[192, "Shortcuts"]], "Objektorientierte Programmierung": [[192, "Objektorientierte-Programmierung"]], "Inheritance": [[192, "Inheritance"], [232, "Inheritance"], [1052, "inheritance"]], "Date and Time and Time Deltas - datetime": [[192, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[192, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[192, "String-Representations:-__str__()"]], "subprocess": [[192, "subprocess"], [271, "subprocess"]], "enumerate(), zip()": [[192, "enumerate(),-zip()"]], "List Comprehension": [[192, "List-Comprehension"], [216, "List-Comprehension"], [255, "List-Comprehension"], [325, "List-Comprehension"], [335, "List-Comprehension"], [341, "List-Comprehension"], [1038, "list-comprehension"], [1083, "list-comprehension"]], "exec(), eval()": [[192, "exec(),-eval()"]], "Umgebender Context": [[192, "Umgebender-Context"]], "Eigener Context": [[192, "Eigener-Context"]], "json": [[192, "json"], [268, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[193, "python-individualtraining-5-tage-beginnend-28-10-2019"], [388, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[193, null], [196, null], [1009, null], [1187, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[193, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[193, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[193, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[193, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[193, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[193, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[193, "operator-overloading"], [251, "operator-overloading"], [261, "Operator-Overloading"], [282, "operator-overloading"], [317, "operator-overloading"], [573, "operator-overloading"], [599, "operator-overloading"], [613, "operator-overloading"], [1055, "operator-overloading"]], "Getters and Setters": [[193, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[193, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[193, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[193, "closures-between-local-and-global"]], "Goals of this Training": [[194, "Goals-of-this-Training"]], "Exercise": [[194, "Exercise"], [235, "exercise"], [277, "exercise"], [277, "id1"], [278, "exercise"], [280, "exercise"], [289, "exercise"], [298, "exercise"], [320, "exercise"], [354, "exercise"], [370, "exercise"], [376, "exercise"], [495, "exercise"], [496, "exercise"], [497, "exercise"], [499, "exercise"], [500, "exercise"], [503, "exercise"], [504, "exercise"], [689, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[194, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[194, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[194, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[194, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[194, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[194, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[194, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[194, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[194, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[194, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[195, "Random-Live-Hacking"]], "Data Types": [[195, "Data-Types"], [325, "Data-Types"]], "Mutable, Immutable": [[195, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[195, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[195, "Indices-and-Slicing"]], "for loops": [[195, "for-loops"]], "Iterator protocol": [[195, "Iterator-protocol"], [258, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[196, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[196, null], [198, null], [369, null]], "Standardthemen": [[196, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[196, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[196, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[196, "losen-einer-uni-ubung"]], "Proposal": [[197, "proposal"]], "Signals": [[197, "signals"]], "Posix IPC (and Virtual Memory)": [[197, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[197, "unix-domain-sockets"]], "Application in your Company": [[197, "application-in-your-company"]], "Further Thoughts": [[197, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[198, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[199, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[200, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[200, null]], "Kursaufbau": [[200, "kursaufbau"]], "Kursverlauf": [[200, "kursverlauf"], [208, "kursverlauf"]], "Tag 3": [[200, "tag-3"], [219, "tag-3"], [230, "tag-3"], [252, "tag-3"], [264, "tag-3"]], "Tag 4": [[200, "tag-4"], [230, "tag-4"], [252, "tag-4"], [264, "tag-4"]], "Tag 5": [[200, "tag-5"]], "Installing googletest By Hand": [[201, "installing-googletest-by-hand"]], "Clone googletest Repo": [[201, "clone-googletest-repo"]], "Create Build Directory": [[201, "create-build-directory"], [202, "create-build-directory"], [552, "create-build-directory"]], "CMake, Build and Install": [[201, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[201, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[202, "software-setup-build"]], "Getting the Source": [[202, "getting-the-source"]], "Install Prerequisites and Dependencies": [[202, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[202, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[203, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[203, "flatpak"]], "Issues": [[203, "issues"]], "RPM From M$": [[203, "rpm-from-m"]], "Code": [[204, "code"], [207, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[205, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[205, null], [208, null]], "Environment": [[205, "environment"], [870, "environment"]], "Unit Testing and Test Driven Development": [[205, "unit-testing-and-test-driven-development"]], "Python Installation": [[205, "python-installation"], [1060, "python-installation"]], "Programming Environment": [[205, "programming-environment"], [289, "programming-environment"], [1060, "programming-environment"]], "Day 1: Language Basics": [[205, "day-1-language-basics"]], "Day 2: Advanced Topics": [[205, "day-2-advanced-topics"]], "Wrap-Up": [[205, "wrap-up"]], "How Was It?": [[205, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[206, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[206, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[206, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[206, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[206, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[206, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[206, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[206, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[206, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[206, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[206, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[206, "list-und-Mutability"]], "Tuple und Immutability": [[206, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[206, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[206, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[206, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[206, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[206, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[206, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[206, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[206, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[206, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[206, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[206, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[206, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[206, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[206, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[206, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[206, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[206, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[206, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[206, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[206, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[206, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[206, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[206, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[208, "python-individualtraining-18-5-2020-19-5-2020"], [388, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[208, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[209, "python-advanced-7-9-2020-10-9-2020"], [388, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[209, "preparation"], [210, "preparation"], [212, "preparation"], [213, "preparation"], [214, "preparation"], [215, "preparation"], [615, "preparation"]], "Workspace Setup": [[209, "workspace-setup"], [210, "workspace-setup"], [212, "workspace-setup"], [214, "workspace-setup"]], "Github for Exercises": [[209, "github-for-exercises"], [210, "github-for-exercises"]], "Agenda": [[209, "agenda"], [210, "agenda"], [212, "agenda"], [213, "agenda"], [214, "agenda"], [215, "agenda"], [220, "agenda"], [224, "agenda"], [225, "agenda"], [262, "agenda"], [267, "agenda"], [279, "agenda"], [288, "agenda"], [309, "agenda"], [317, "agenda"], [353, "agenda"], [1192, "agenda"]], "Advanced Core Python Topics": [[209, "advanced-core-python-topics"]], "Special Topics": [[209, "special-topics"]], "Day 1": [[209, "day-1"], [210, "day-1"], [212, "day-1"], [213, "day-1"], [214, "day-1"], [224, "day-1"], [225, "day-1"], [234, "day-1"], [235, "day-1"], [240, "day-1"], [243, "day-1"], [246, "day-1"], [249, "day-1"], [256, "day-1"], [298, "day-1"], [299, "day-1"], [300, "day-1"], [306, "day-1"], [310, "day-1"], [312, "day-1"], [317, "day-1"], [324, "day-1"], [350, "day-1"], [354, "day-1"]], "Day 2": [[209, "day-2"], [210, "day-2"], [212, "day-2"], [213, "day-2"], [214, "day-2"], [224, "day-2"], [225, "day-2"], [234, "day-2"], [235, "day-2"], [240, "day-2"], [243, "day-2"], [245, "Day-2"], [246, "day-2"], [249, "day-2"], [256, "day-2"], [289, "day-2"], [298, "day-2"], [300, "day-2"], [306, "day-2"], [310, "day-2"], [317, "day-2"], [324, "day-2"], [350, "day-2"], [354, "day-2"]], "Day 3": [[209, "day-3"], [210, "day-3"], [212, "day-3"], [213, "day-3"], [214, "day-3"], [224, "day-3"], [225, "day-3"], [234, "day-3"], [235, "day-3"], [240, "day-3"], [245, "Day-3"], [246, "day-3"], [249, "day-3"], [256, "day-3"], [289, "day-3"], [292, "day-3"], [298, "day-3"], [300, "day-3"], [306, "day-3"], [310, "day-3"], [312, "day-3"], [324, "day-3"], [350, "day-3"], [354, "day-3"]], "Day 4": [[209, "day-4"], [212, "day-4"], [224, "day-4"], [225, "day-4"], [234, "day-4"], [235, "day-4"], [289, "day-4"]], "Recommended Tutorials": [[209, "recommended-tutorials"]], "After Work Party": [[209, "after-work-party"], [240, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[210, "python-basics-28-9-2020-30-9-2020"], [388, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[211, "Iterables"]], "set constructor": [[211, "set-constructor"]], "Fast vs. Simple": [[211, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[211, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[211, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[211, "Object-Oriented-Programming"], [261, "Object-Oriented-Programming"], [274, "Object-Oriented-Programming"], [285, "object-oriented-programming"], [299, "object-oriented-programming"], [301, "object-oriented-programming"], [302, "object-oriented-programming"], [305, "object-oriented-programming"], [306, "object-oriented-programming"], [311, "object-oriented-programming"], [317, "object-oriented-programming"], [320, "object-oriented-programming"], [323, "object-oriented-programming"], [324, "object-oriented-programming"], [327, "object-oriented-programming"], [333, "object-oriented-programming"], [339, "object-oriented-programming"], [345, "object-oriented-programming"], [346, "object-oriented-programming"], [349, "object-oriented-programming"], [350, "object-oriented-programming"], [477, "object-oriented-programming"], [1051, "object-oriented-programming"]], "datetime": [[211, "datetime"], [238, "datetime"], [293, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[212, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[212, "additional-topics-brought-in-by-thomas"]], "Notebook": [[212, "notebook"], [233, "notebook"], [248, "Notebook"], [370, "notebook"]], "Tutorials": [[212, "tutorials"], [240, "tutorials"]], "Linux on Raspberry Pi": [[213, "linux-on-raspberry-pi"]], "Cloud Machine": [[213, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[213, "raspberry-on-participant-s-desks"]], "Basic security": [[213, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[213, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[213, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[213, "in-the-wild-watchdog"]], "TODO": [[213, "todo"], [357, "todo"], [358, "todo"], [359, "todo"], [1089, "todo"], [1152, "todo"]], "Support Material": [[213, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[214, "python-basics-23-11-2020-25-11-2020"], [388, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[214, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[215, "linux-basics-30-11-2020-3-12-2020"], [388, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[216, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[216, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[216, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[216, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[216, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[216, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[216, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[216, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[216, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[216, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[216, "Floor-Division"]], "Modulo Operator: %": [[216, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[216, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[216, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[216, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[216, "Raw-Strings"], [238, "Raw-Strings"], [255, "Raw-Strings"], [261, "Raw-Strings"], [283, "Raw-Strings"], [313, "Raw-Strings"], [1080, "raw-strings"]], "f-Strings": [[216, "f-Strings"], [335, "f-Strings"]], "Konvertierungen": [[216, "Konvertierungen"]], "Boolean": [[216, "Boolean"], [242, "Boolean"], [245, "Boolean"], [253, "Boolean"], [255, "Boolean"], [265, "Boolean"], [268, "Boolean"], [341, "Boolean"], [1069, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[216, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[216, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[216, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[216, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[216, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[216, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[216, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[216, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[216, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[216, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[216, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[216, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[216, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[216, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[216, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[216, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[216, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[216, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[216, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[216, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[216, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[216, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[216, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[216, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[216, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[216, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[216, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[216, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[216, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[216, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[216, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[216, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[216, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[216, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[216, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[216, "Liste"]], "Set": [[216, "Set"], [237, "Set"], [238, "Set"], [242, "Set"], [242, "id1"], [245, "Set"], [248, "Set"], [248, "id1"], [255, "Set"], [268, "Set"], [271, "Set"], [283, "Set"], [286, "Set"], [286, "id5"], [293, "Set"], [303, "Set"], [307, "Set"], [325, "Set"], [329, "Set"], [341, "Set"], [351, "Set"]], "8.2 Arrays": [[216, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[216, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[216, "8.4-Records"]], "8.5 Zeichenketten": [[216, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[216, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[216, "sorted,-reversed"]], "8.7 Dictionaries": [[216, "8.7-Dictionaries"]], "(jf) Records in Python": [[216, "(jf)-Records-in-Python"]], "8.8 Mengen": [[216, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[216, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[216, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[216, "\u00dcbung-1"]], "Versuch 1: in und index()": [[216, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[216, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[216, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[216, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[216, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[216, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[216, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[216, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[216, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[216, "Lokale-Variable"]], "Globale Variable (lesen)": [[216, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[216, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[216, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[216, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[216, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[216, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[216, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[216, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[216, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[216, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[216, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[217, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[217, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[217, "herdt-kapitel-6-grundlegende-sprachelemente"], [1200, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[217, "herdt-kapitel-7-kontrollstrukturen"], [1200, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[217, "verzweigung"], [1200, "verzweigung"]], "Schleifen": [[217, "schleifen"], [1200, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[217, "herdt-kapitel-8-elementare-datenstrukturen"], [1200, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[217, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1200, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[219, "python-basics-22-2-2021-24-2-2021"], [388, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[219, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[220, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[220, "books"], [270, "books"], [312, "books"], [1137, "books"]], "Python Advanced": [[221, "Python-Advanced"]], "Data Types Recap": [[221, "Data-Types-Recap"]], "Sequential Datatypes": [[221, "Sequential-Datatypes"], [253, "Sequential-Datatypes"], [265, "Sequential-Datatypes"], [335, "Sequential-Datatypes"], [1072, "sequential-datatypes"], [1072, "id1"]], "Slicing etc.": [[221, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[221, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[221, "Sets"], [221, "id1"], [229, "Sets"], [347, "Sets"], [1085, "sets"]], "for Schleife, ganz kurz": [[221, "for-Schleife,-ganz-kurz"]], "Tuple": [[221, "Tuple"], [245, "Tuple"], [248, "Tuple"], [255, "Tuple"], [268, "Tuple"], [271, "Tuple"], [283, "Tuple"], [341, "Tuple"], [347, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[221, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[221, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[221, "Listen"], [255, "Listen"], [365, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[221, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[221, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[221, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[221, "Iterable:-Der-Begriff"]], "Zufall": [[221, "Zufall"]], "Regular Expressions": [[221, "Regular-Expressions"], [274, "Regular-Expressions"], [286, "Regular-Expressions"], [335, "Regular-Expressions"], [341, "Regular-Expressions"], [927, "regular-expressions"]], "enumerate()": [[221, "enumerate()"], [229, "enumerate()"], [232, "enumerate()"], [268, "enumerate()"], [286, "enumerate()"], [303, "enumerate()"], [325, "enumerate()"], [347, "enumerate()"]], "JSON": [[221, "JSON"], [238, "JSON"], [248, "JSON"], [274, "JSON"], [283, "JSON"], [318, "JSON"], [321, "JSON"]], "2021-03-15": [[222, "id1"]], "Exercises (auf Github)": [[222, "exercises-auf-github"]], "Download": [[222, null], [224, null]], "Hallo Jupyter Notebook": [[223, "Hallo-Jupyter-Notebook"]], "Syntax": [[223, "Syntax"], [293, "Syntax"], [335, "Syntax"], [347, "Syntax"], [365, "Syntax"], [365, "id1"]], "Raw strings": [[223, "Raw-strings"]], "Variablen": [[223, "Variablen"], [255, "Variablen"]], "Tuple Unpacking": [[223, "Tuple-Unpacking"], [265, "Tuple-Unpacking"], [283, "Tuple-Unpacking"], [293, "Tuple-Unpacking"], [329, "Tuple-Unpacking"], [335, "Tuple-Unpacking"], [347, "Tuple-Unpacking"], [364, "Tuple-Unpacking"], [365, "Tuple-Unpacking"], [365, "id2"]], "Speicher, Memory Management": [[223, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[223, "Mutable-vs.-Immutable"], [274, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[223, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[223, "Aber!!!!"]], "Dictionary": [[223, "Dictionary"], [229, "Dictionary"], [237, "Dictionary"], [238, "Dictionary"], [242, "Dictionary"], [242, "id2"], [245, "Dictionary"], [248, "Dictionary"], [248, "id2"], [255, "Dictionary"], [268, "Dictionary"], [271, "Dictionary"], [283, "Dictionary"], [286, "Dictionary"], [286, "id4"], [293, "Dictionary"], [303, "Dictionary"], [307, "Dictionary"], [313, "Dictionary"], [325, "Dictionary"], [329, "Dictionary"], [341, "Dictionary"], [347, "Dictionary"], [351, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[223, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[223, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[223, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[223, "for-und-range()"]], "Objektidentit\u00e4t": [[223, "Objektidentit\u00e4t"]], "Das with Statement": [[223, "Das-with-Statement"], [232, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[223, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[223, "String-Operationen"]], "enumerate(), und verlorene Indices": [[223, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[223, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[223, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[224, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[224, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[225, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[225, null]], "Course Preparation": [[225, "course-preparation"], [278, "course-preparation"], [280, "course-preparation"], [288, "course-preparation"]], "SSH": [[225, "ssh"], [375, "ssh"]], "Linux and/or Shell on Windows Host": [[225, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[225, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[227, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[229, "Syntax-etc."], [261, "Syntax-etc."], [307, "Syntax-etc."], [1064, "syntax-etc"]], "Comments vs. Documentation": [[229, "Comments-vs.-Documentation"], [1064, "comments-vs-documentation"]], "Variables": [[229, "Variables"], [242, "Variables"], [245, "Variables"], [261, "Variables"], [271, "Variables"], [303, "Variables"], [307, "Variables"], [329, "Variables"], [335, "Variables"], [341, "Variables"], [347, "Variables"], [351, "Variables"], [365, "Variables"], [1066, "variables"]], "Assignment Fun": [[229, "Assignment-Fun"], [268, "Assignment-Fun"], [1066, "assignment-fun"]], "Assignment Details": [[229, "Assignment-Details"], [261, "Assignment-Details"], [268, "Assignment-Details"], [347, "Assignment-Details"], [351, "Assignment-Details"], [365, "Assignment-Details"], [1066, "assignment-details"]], "Operators": [[229, "Operators"], [265, "Operators"]], "Integer Arithmetic": [[229, "Integer-Arithmetic"]], "String Methods": [[229, "String-Methods"], [347, "String-Methods"], [364, "String-Methods"]], "Datatype Conversions": [[229, "Datatype-Conversions"], [253, "Datatype-Conversions"], [255, "Datatype-Conversions"], [261, "Datatype-Conversions"], [265, "Datatype-Conversions"], [268, "Datatype-Conversions"], [286, "Datatype-Conversions"], [303, "Datatype-Conversions"], [307, "Datatype-Conversions"], [313, "Datatype-Conversions"], [325, "Datatype-Conversions"], [329, "Datatype-Conversions"], [335, "Datatype-Conversions"], [347, "Datatype-Conversions"], [365, "Datatype-Conversions"], [1067, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[229, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[229, "Complex-Datatypes"], [365, "Complex-Datatypes"]], "List (mutable)": [[229, "List-(mutable)"], [242, "List-(mutable)"], [335, "List-(mutable)"]], "extend()? Iterable?": [[229, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[229, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[229, "in-Operator"], [268, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[229, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[229, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[229, "sum()"]], "map()": [[229, "map()"], [232, "map()"]], "list() function": [[229, "list()-function"]], "Performance: in Operator, und list und set": [[229, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[229, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[230, "python-grundlagen-2021-05-03-2021-05-05"], [388, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[230, "weiterfuhrende-information"]], "Visual Studio Code": [[230, "visual-studio-code"], [246, "visual-studio-code"], [1137, "visual-studio-code"]], "Python Beginner Tutorials": [[230, "python-beginner-tutorials"], [270, "python-beginner-tutorials"], [1137, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[230, "numpy-and-data-science-tutorials"], [270, "numpy-and-data-science-tutorials"], [273, "numpy-and-data-science-tutorials"], [306, "numpy-and-data-science-tutorials"], [1137, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[230, "pypi-installing-modules-that-don-t-come-as-batteries"], [1137, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[230, "git-and-github"], [1137, "git-and-github"]], "Conference Talks": [[230, "conference-talks"], [306, "conference-talks"], [1137, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[231, "python-grundlagen-jupyter-notebook"], [244, "python-grundlagen-jupyter-notebook"], [247, "python-grundlagen-jupyter-notebook"], [250, "python-grundlagen-jupyter-notebook"], [269, "python-grundlagen-jupyter-notebook"], [272, "python-grundlagen-jupyter-notebook"], [275, "python-grundlagen-jupyter-notebook"], [284, "python-grundlagen-jupyter-notebook"], [287, "python-grundlagen-jupyter-notebook"], [308, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[232, "import-zipfile"]], "Read Contents \u2026": [[232, "Read-Contents-..."]], "Extract One Member": [[232, "Extract-One-Member"]], "All in One, Using with": [[232, "All-in-One,-Using-with"]], "Functionality: Methods": [[232, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[232, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[232, "Instance-Attributes"]], "Class Attributes": [[232, "Class-Attributes"]], "Public, Protected, Private": [[232, "Public,-Protected,-Private"]], "Properties": [[232, "Properties"], [261, "Properties"], [492, "properties"], [1056, "properties"]], "Functions, Positional and Keyword Arguments": [[232, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[232, "Positional-Arguments"]], "Keyword Arguments": [[232, "Keyword-Arguments"], [253, "Keyword-Arguments"], [366, "Keyword-Arguments"], [1078, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[232, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[232, "The-range()-Function"], [238, "The-range()-Function"], [245, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[232, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[232, "Iterable"], [248, "Iterable"]], "list(), and iterable?": [[232, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[232, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[232, "Decorators,-etc."]], "NoneType and None": [[232, "NoneType-and-None"]], "File I/O": [[232, "File-I/O"], [261, "File-I/O"], [268, "File-I/O"], [271, "File-I/O"], [303, "File-I/O"], [307, "File-I/O"], [341, "File-I/O"], [347, "File-I/O"], [362, "File-I/O"], [973, "file-i-o"], [1086, "file-i-o"]], "Iteration, yield, Recursion": [[232, "Iteration,-yield,-Recursion"]], "Recursion": [[232, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[232, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[232, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[232, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[232, "zip()"]], "filter(), and several other methods to do the same": [[232, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[232, "OSError,-errno"]], "The platform Module, sys.path": [[232, "The-platform-Module,-sys.path"]], "os.path": [[232, "os.path"], [248, "os.path"], [255, "os.path"]], "Exceptions und so (assert())": [[232, "Exceptions-und-so-(assert())"]], "AssertionError": [[232, "AssertionError"]], "Random Questions": [[232, "Random-Questions"]], "Slicing": [[232, "Slicing"], [255, "Slicing"], [261, "Slicing"], [286, "Slicing"], [307, "Slicing"], [1158, "slicing"]], "OO": [[232, "OO"], [300, "oo"], [379, "oo"], [573, "oo"]], "String Formatting": [[232, "String-Formatting"], [238, "String-Formatting"], [1081, "string-formatting"]], "import datetime": [[232, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[233, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[233, "predefined-streams"]], "PCAP Exam Syllabus": [[233, "pcap-exam-syllabus"], [246, "pcap-exam-syllabus"]], "2021-06-09": [[233, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[234, "programmieren-mit-c-2021-06-14-2021-06-18"], [388, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[234, "preparation-tools"]], "State machine": [[234, "state-machine"]], "Regular Course Topics": [[234, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[234, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[234, "regular-course-material"], [234, "id1"]], "Group Project Kick-Off :-)": [[234, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[234, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[234, "group-project-use-case-driven-course-flow"]], "Day 5": [[234, "day-5"], [235, "day-5"], [289, "day-5"]], "Pointer Recap": [[234, "pointer-recap"]], "On With Group Project": [[234, "on-with-group-project"]], "C++ Basics": [[234, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[234, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[235, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[235, "setup-for-the-new-kids"]], "Recapitulate some C": [[235, "recapitulate-some-c"]], "Group project review": [[235, "group-project-review"]], "Jump into C++": [[235, "jump-into-c"]], "Regular Topics": [[235, "regular-topics"], [235, "id2"], [235, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[235, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[235, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[235, "finish-first-user-database-functionality"]], "Unit Testing": [[235, "unit-testing"], [292, "unit-testing"], [295, "unit-testing"], [378, "unit-testing"]], "GTest Installation": [[235, "gtest-installation"]], "Git Workflows": [[235, "git-workflows"]], "Day X": [[235, "day-x"]], "Smart Pointers, Recap": [[235, "smart-pointers-recap"]], "std::map": [[235, "std-map"], [651, "std-map"]], "OO, and Polymorphism": [[235, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[236, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [388, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[236, "variablen-und-datentypen"], [252, "variablen-und-datentypen"], [264, "variablen-und-datentypen"]], "Kontrollstrukturen": [[236, "kontrollstrukturen"], [252, "kontrollstrukturen"], [253, "Kontrollstrukturen"], [264, "kontrollstrukturen"]], "Datenstrukturen": [[237, "Datenstrukturen"]], "List": [[237, "List"], [238, "List"], [245, "List"], [248, "List"], [268, "List"], [271, "List"], [283, "List"], [286, "List"], [313, "List"], [325, "List"], [341, "List"], [351, "List"], [1165, "list"]], "Iteration": [[237, "Iteration"], [237, "id1"], [238, "Iteration"], [238, "id1"], [248, "Iteration"], [271, "Iteration"], [283, "Iteration"], [325, "Iteration"], [351, "Iteration"], [351, "id1"]], "User Datenbank: Showcase Full Stack Development": [[237, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[237, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[237, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[237, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[237, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[237, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[238, "Iterable?"]], "List Comprehension, Generator Expression": [[238, "List-Comprehension,-Generator-Expression"]], "Literals": [[238, "Literals"], [517, "literals"]], "Quoting?": [[238, "Quoting?"], [242, "Quoting?"]], "Multiline Strings": [[238, "Multiline-Strings"], [242, "Multiline-Strings"], [335, "Multiline-Strings"], [1080, "multiline-strings"]], "Functionality": [[238, "Functionality"], [862, "functionality"]], "strip() and friends": [[238, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[238, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[238, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[239, "read-a-cleaned-up-sap-export"]], "Requirement": [[239, "requirement"], [516, "requirement"], [538, "requirement"], [539, "requirement"], [540, "requirement"], [544, "requirement"], [545, "requirement"], [546, "requirement"], [547, "requirement"], [548, "requirement"], [549, "requirement"], [965, "requirement"], [972, "requirement"], [1093, "requirement"], [1094, "requirement"], [1115, "requirement"], [1126, "requirement"], [1127, "requirement"], [1128, "requirement"], [1129, "requirement"], [1131, "requirement"], [1132, "requirement"], [1133, "requirement"], [1134, "requirement"]], "Solution": [[239, "solution"], [495, "solution"], [497, "solution"], [500, "solution"], [1173, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[240, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[242, "Initial-Terminology"]], "Sequence": [[242, "Sequence"]], "Tuple (immutable)": [[242, "Tuple-(immutable)"], [335, "Tuple-(immutable)"]], "References, (Im)mutability": [[242, "References,-(Im)mutability"], [255, "References,-(Im)mutability"], [268, "References,-(Im)mutability"], [271, "References,-(Im)mutability"], [286, "References,-(Im)mutability"], [293, "References,-(Im)mutability"], [307, "References,-(Im)mutability"], [313, "References,-(Im)mutability"], [313, "id1"], [325, "References,-(Im)mutability"], [347, "References,-(Im)mutability"], [1076, "references-im-mutability"]], "Iteration, for, and range()": [[242, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[242, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[242, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[242, "List-and-Tuple"]], "matplotlib": [[242, "matplotlib"], [274, "matplotlib"]], "File I/O, and Strings": [[242, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[242, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[242, "Miscellaneous-String-Methods"], [253, "Miscellaneous-String-Methods"], [255, "Miscellaneous-String-Methods"], [261, "Miscellaneous-String-Methods"], [271, "Miscellaneous-String-Methods"], [286, "Miscellaneous-String-Methods"], [307, "Miscellaneous-String-Methods"], [313, "Miscellaneous-String-Methods"], [335, "Miscellaneous-String-Methods"], [341, "Miscellaneous-String-Methods"], [351, "Miscellaneous-String-Methods"], [1082, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[243, "python-basics-2021-08-31-2021-09-01"], [388, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[243, "numerics-and-ai"]], "Mountains near Graz": [[243, "mountains-near-graz"]], "2021-11-17": [[245, "2021-11-17"]], "Enter Tuples": [[245, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[245, "Datatype-Conversions,-Type-Names"]], "NoneType": [[245, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[245, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[245, "Exercise:-Mixed-List"]], "Python Documentation": [[245, "Python-Documentation"]], "for": [[245, "for"], [307, "for"], [351, "for"], [365, "for"]], "Iteration over Compound Datatypes": [[245, "Iteration-over-Compound-Datatypes"], [255, "Iteration-over-Compound-Datatypes"]], "File IO": [[245, "File-IO"], [261, "File-IO"], [289, "file-io"], [293, "File-IO"], [329, "File-IO"], [335, "File-IO"]], "Generators, Iterator Protocol, for": [[245, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[245, "Common-Sequence-Operation"]], "Comprehensions": [[245, "Comprehensions"], [248, "Comprehensions"], [261, "Comprehensions"], [293, "Comprehensions"], [325, "Comprehensions"]], "List, Iterable? WTF?": [[245, "List,-Iterable?-WTF?"]], "Dict and iterable": [[245, "Dict-and-iterable"]], "More on Lists": [[245, "More-on-Lists"], [253, "More-on-Lists"], [268, "More-on-Lists"]], "More on Dictionaries": [[245, "More-on-Dictionaries"], [253, "More-on-Dictionaries"]], "References, Mutability": [[245, "References,-Mutability"]], "CSV": [[245, "CSV"], [262, "csv"], [270, "csv"], [307, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[246, "python-basics-2021-11-17-2021-11-19"], [388, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[246, "python-core-topics"]], "Python Standard Library": [[246, "python-standard-library"]], "More About Strings": [[248, "More-About-Strings"], [265, "More-About-Strings"], [313, "More-About-Strings"], [335, "More-About-Strings"], [341, "More-About-Strings"], [347, "More-About-Strings"], [1080, "more-about-strings"]], "List, Tuple": [[248, "List,-Tuple"], [303, "List,-Tuple"], [307, "List,-Tuple"]], "Tuple Unpacking: What Else": [[248, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[248, "Iterator-Protocol"], [255, "Iterator-Protocol"], [286, "Iterator-Protocol"], [303, "Iterator-Protocol"], [307, "Iterator-Protocol"], [335, "Iterator-Protocol"]], "yield": [[248, "yield"], [271, "yield"]], "Everything is an Object of a Type": [[248, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[248, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[248, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[248, "2021-12-17"]], "Shift Operators": [[248, "Shift-Operators"]], "PCAP Sample Exam": [[248, "PCAP-Sample-Exam"]], "System Errors": [[248, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[249, "python-advanced-2021-12-01-2021-12-03"], [388, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[249, "basics-recap"], [302, "basics-recap"]], "Group Project Preparation": [[249, "group-project-preparation"]], "Hmmm?": [[249, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[251, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [388, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[251, "id1"]], "2021-12-07": [[251, "id2"]], "2021-12-08": [[251, "id3"]], "2021-12-09": [[251, "id4"]], "2022-01-24": [[251, "id5"]], "Undefined Behavior": [[251, "undefined-behavior"]], "Modularization": [[251, "modularization"], [433, "modularization"]], "2022-01-25": [[251, "id6"]], "C++ and OO (Classes)": [[251, "c-and-oo-classes"]], "Modularization (again)": [[251, "modularization-again"]], "2022-01-26": [[251, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[251, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[251, "classes-continued"]], "2022-01-27": [[251, "id8"]], "2022-01-28": [[251, "id9"]], "Standard Template Library: Container Templates": [[251, "standard-template-library-container-templates"]], "2022-01-31": [[251, "id10"]], "2022-02-01": [[251, "id11"]], "Algorithms": [[251, "algorithms"], [640, "algorithms"]], "Functors": [[251, "functors"]], "Unified Modeling Language (UML)": [[251, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[251, "exercise-using-all-from-today"]], "2022-02-02": [[251, "id12"]], "Associative Container: std::map": [[251, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[251, "exceptions-and-exception-handling"]], "2022-02-03": [[251, "id13"]], "2022-02-04": [[251, "id14"]], "C++11: A New Language": [[251, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[251, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[251, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[252, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [388, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[253, "2022-01-17"]], "Variables and Datatypes": [[253, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[253, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[253, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[253, "Integer-Numbers:-Arithmetic"], [265, "Integer-Numbers:-Arithmetic"], [1067, "integer-numbers-arithmetic"]], "Some Methods": [[253, "Some-Methods"]], "String Formatting: f-Strings": [[253, "String-Formatting:-f-Strings"]], "More about Strings": [[253, "More-about-Strings"]], "if": [[253, "if"], [293, "if"]], "2022-01-18": [[253, "2022-01-18"]], "Miscellanea": [[253, "Miscellanea"]], "Braces: Single Element Tuples?": [[253, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[253, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[253, "while-Loops"], [255, "while-Loops"], [268, "while-Loops"], [335, "while-Loops"], [351, "while-Loops"], [1071, "while-loops"], [1071, "id1"]], "break and continue": [[253, "break-and-continue"], [430, "break-and-continue"], [430, "id1"], [1071, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[253, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[253, "Sequence-Membership"], [1072, "sequence-membership"]], "list (mutable)": [[253, "list-(mutable)"]], "tuple (immutable)": [[253, "tuple-(immutable)"]], "dict (mutable)": [[253, "dict-(mutable)"]], "set (mutable)": [[253, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[253, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[253, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[253, "Default-Parameters"], [255, "Default-Parameters"], [366, "Default-Parameters"], [1078, "default-parameters"]], "List Comprehensions": [[253, "List-Comprehensions"], [265, "List-Comprehensions"]], "Iteration over Dictionaries": [[253, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[253, "Building-Dictionaries"], [1084, "building-dictionaries"]], "More on Sets": [[253, "More-on-Sets"]], "with: Context Managers": [[253, "with:-Context-Managers"]], "Strings Intro": [[255, "Strings-Intro"]], "Doc Strings": [[255, "Doc-Strings"]], "Object Identity": [[255, "Object-Identity"]], "Integers": [[255, "Integers"], [265, "Integers"], [268, "Integers"], [286, "Integers"], [293, "Integers"], [313, "Integers"], [329, "Integers"], [335, "Integers"], [341, "Integers"], [351, "Integers"]], "Variablen? Datenypen?": [[255, "Variablen?-Datenypen?"]], "Objects, Classes": [[255, "Objects,-Classes"]], "Python Standard Libarary Examples": [[255, "Python-Standard-Libarary-Examples"]], "collections": [[255, "collections"]], "ChainMap": [[255, "ChainMap"]], "deque": [[255, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[255, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[255, "Slice-Assignment"], [1073, "slice-assignment"]], "Lists are mutable": [[255, "Lists-are-mutable"]], "Shallow copy and deep copy": [[255, "Shallow-copy-and-deep-copy"]], "else": [[255, "else"], [261, "else"], [351, "else"]], "for Loops, range()": [[255, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[255, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[255, "dict.fromkeys()"], [268, "dict.fromkeys()"]], "Generators": [[255, "Generators"], [261, "Generators"], [301, "generators"], [302, "generators"], [306, "generators"], [323, "generators"], [327, "generators"]], "join, split": [[255, "join,-split"]], "strip, lstrip, rstrip": [[255, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[256, "python-basics-2022-02-23-2022-02-25"], [388, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[256, "data-structures"]], "OS Things": [[256, "os-things"]], "Data Science": [[256, "data-science"], [324, "data-science"], [325, "Data-Science"], [347, "Data-Science"]], "Wiederholung": [[258, "Wiederholung"]], "Mutable/Immutable": [[258, "Mutable/Immutable"]], "Attribute": [[258, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[258, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[258, "Exceptions"], [274, "Exceptions"], [299, "exceptions"], [333, "exceptions"], [339, "exceptions"], [345, "exceptions"], [349, "exceptions"], [573, "exceptions"], [620, "exceptions"], [621, "exceptions"]], "for vs. while, range()": [[258, "for-vs.-while,-range()"]], "String Methods (some)": [[258, "String-Methods-(some)"]], "eval()": [[258, "eval()"], [268, "eval()"], [325, "eval()"]], "exec()": [[258, "exec()"], [274, "exec()"], [335, "exec()"]], "Dictionary Iteration": [[258, "Dictionary-Iteration"], [351, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[258, "Classes,-Attributes,-OO"]], "Types and Instances": [[258, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[258, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[258, "OO-Everywhere"]], "Dictionary Operations": [[258, "Dictionary-Operations"]], "collections.defaultdict": [[258, "collections.defaultdict"], [283, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[259, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[259, "id1"]], "2022-03-16": [[259, "id2"]], "Test Driven Development": [[259, "test-driven-development"], [301, "test-driven-development"], [323, "test-driven-development"], [324, "test-driven-development"]], "2022-03-17": [[259, "id3"]], "2022-03-31": [[259, "id4"]], "Hello World": [[261, "Hello-World"], [392, "hello-world"], [1062, "hello-world"]], "Blahblah": [[261, "Blahblah"], [630, "blahblah"], [1061, "blahblah"]], "Object Oriented?": [[261, "Object-Oriented?"]], "MQTT": [[261, "MQTT"], [327, "mqtt"], [1153, "mqtt"]], "Commandline Arguments": [[261, "Commandline-Arguments"], [444, "commandline-arguments"], [444, "id1"]], "Object Lifetime": [[261, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[261, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[261, "More-String-Methods"], [261, "id1"]], "Dictionary Preview": [[261, "Dictionary-Preview"]], "list: Mutable": [[261, "list:-Mutable"]], "list(): explicit constructor": [[261, "list():-explicit-constructor"]], "tuple: Immutable": [[261, "tuple:-Immutable"]], "dict: Mutable": [[261, "dict:-Mutable"]], "set: Mutable": [[261, "set:-Mutable"]], "List comprehension": [[261, "List-comprehension"]], "DIctionary Comprehension": [[261, "DIctionary-Comprehension"]], "Set Comprehension": [[261, "Set-Comprehension"], [325, "Set-Comprehension"], [335, "Set-Comprehension"], [1032, "set-comprehension"]], "max": [[261, "max"]], "for, enumerate()": [[261, "for,-enumerate()"]], "Iteratoren, Generatoren": [[261, "Iteratoren,-Generatoren"]], "Generatoren": [[261, "Generatoren"]], "split und join": [[261, "split-und-join"]], "strip()": [[261, "strip()"]], "dict vs. OrderedDict": [[261, "dict-vs.-OrderedDict"]], "Duck Typing": [[261, "Duck-Typing"], [1048, "duck-typing"]], "Interfaces": [[261, "Interfaces"], [669, "interfaces"]], "Implementation Inheritance": [[261, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[261, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[261, "__bases__"]], "__mro__": [[261, "__mro__"]], "Object Layout (self)": [[261, "Object-Layout-(self)"]], "More from OO": [[261, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[261, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[261, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[261, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[261, "Exception-Handling"], [292, "exception-handling"], [295, "exception-handling"], [300, "exception-handling"], [381, "exception-handling"], [1035, "exception-handling"]], "Order of except Clauses": [[261, "Order-of-except-Clauses"]], "finally": [[261, "finally"]], "lambda": [[261, "lambda"]], "map(), filter()": [[261, "map(),-filter()"], [325, "map(),-filter()"]], "Generators, Iteration Protocol": [[261, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[261, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[262, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [388, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[262, "basics"]], "2022-03-30: Basics": [[262, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[262, "advanced"]], "Plan For The Wild Part": [[262, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[264, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [388, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[264, "discussion-flow-charts"]], "BlahBlah": [[265, "BlahBlah"], [268, "BlahBlah"], [271, "BlahBlah"], [335, "BlahBlah"]], "Interactive": [[265, "Interactive"]], "For Beginners": [[265, "For-Beginners"]], "Not For Beginners?": [[265, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[265, "Strings,-1st-Explanation"]], "Operator Precedence": [[265, "Operator-Precedence"], [268, "Operator-Precedence"], [1067, "operator-precedence"]], "Floating Point Numbers": [[265, "Floating-Point-Numbers"], [1067, "floating-point-numbers"]], "Docstrings": [[265, "Docstrings"], [271, "Docstrings"], [365, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[265, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[265, "Random-Numbers"]], "Indexing and Slicing": [[265, "Indexing-and-Slicing"], [313, "Indexing-and-Slicing"], [1073, "indexing-and-slicing"]], "for Loops": [[265, "for-Loops"], [335, "for-Loops"], [395, "for-loops"], [1074, "for-loops"]], "range()": [[265, "range()"], [293, "range()"], [341, "range()"], [347, "range()"], [351, "range()"]], "Filterketten": [[265, "Filterketten"]], "Zen": [[265, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[265, "Compound-Datatypes-By-Example:-List,-Tuple"], [1068, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[265, "Compound-Datatypes-By-Example:-Dictionary"], [1068, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[265, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[265, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[265, "Compound-Datatypes-By-Example:-Set"], [1068, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[265, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[267, "python-basics-2022-04-25-2022-04-27"], [388, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[268, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[268, "Comments-vs.-Docstrings"]], "Variables and Types": [[268, "Variables-and-Types"]], "Swap": [[268, "Swap"]], "Integers are Infinitely long": [[268, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[268, "Floating-Point-Comparison"]], "Mutability/Immutability": [[268, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[268, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[268, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1101, "exercise-determine-maximum-of-two-numbers"], [1111, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[268, "Ranges"], [746, "ranges"]], "Exercise: Sort out Duplicates": [[268, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[268, "Algorithmic-Complexity"]], "More On Dictionaries": [[268, "More-On-Dictionaries"]], "More On Sets": [[268, "More-On-Sets"]], "eval(), json": [[268, "eval(),-json"]], "Encoding": [[268, "Encoding"], [292, "encoding"], [313, "Encoding"], [329, "Encoding"], [329, "id1"], [370, "encoding"], [1150, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[270, "python-2022-05-02-2022-05-05"], [388, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[270, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[270, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[270, "excursion-can-communication-oo-modules"]], "Modules": [[270, "modules"], [283, "Modules"], [324, "modules"], [370, "modules"], [741, "modules"], [1043, "modules"]], "CSV, Functions": [[270, "csv-functions"]], "PyPI, Virtual Environments": [[270, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[270, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[270, "more-on-datatypes"]], "Random Topics": [[270, "random-topics"]], "Standard Library": [[270, "standard-library"]], "Hello Jupyter Notebook": [[271, "Hello-Jupyter-Notebook"]], "Syntax etc": [[271, "Syntax-etc"]], "Mutability": [[271, "Mutability"], [303, "Mutability"]], "Removing Elements": [[271, "Removing-Elements"], [651, "removing-elements"]], "Nested Lists?": [[271, "Nested-Lists?"]], "while loops, and else": [[271, "while-loops,-and-else"]], "for loops (and else)": [[271, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[271, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[271, "Encoding,-and-String"]], "Regular Expression": [[271, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[271, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[271, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[271, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[271, "itertools.chain()"]], "Destructor?": [[271, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[271, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[273, "python-advanced-2022-05-16-2022-05-18"], [388, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[273, "project-management"], [324, "project-management"], [377, "project-management"], [378, "project-management"], [382, "project-management"]], "Unit Testing, Test Driven Development": [[273, "unit-testing-test-driven-development"]], "Object Priented Programming": [[273, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[273, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[273, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[273, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[273, "xml-element-tree"]], "Projektabschlusstag": [[273, "projektabschlusstag"]], "Basic Python": [[273, "basic-python"], [1199, "basic-python"]], "Assert": [[274, "Assert"]], "The id() function": [[274, "The-id()-function"]], "class Person": [[274, "class-Person"]], "Functions That Do Not Return Anything": [[274, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[274, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[274, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[274, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[274, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[274, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[276, "vorbesprechung-2022-05-11"]], "Legende": [[276, "legende"]], "Neuerungen in C++ seit 2011": [[276, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[276, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[276, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[276, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[277, "c-a-new-language-starting-in-2011"], [278, "c-a-new-language-starting-in-2011"]], "Metadata": [[277, "metadata"], [278, "metadata"], [280, "metadata"], [920, "metadata"]], "Introduction": [[277, "introduction"], [278, "introduction"], [280, "introduction"], [299, "introduction"], [300, "introduction"], [391, "introduction"], [470, "introduction"], [501, "introduction"], [596, "introduction"], [693, "introduction"], [752, "introduction"], [838, "introduction"], [1035, "introduction"], [408, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[277, "pythonicity-thank-you-readablility-and-writability"], [278, "pythonicity-thank-you-readablility-and-writability"], [280, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[277, "range-based-for-loops"], [278, "range-based-for-loops"], [280, "range-based-for-loops"], [337, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[277, "tuple-unpacking-err-structured-binding"], [278, "tuple-unpacking-err-structured-binding"], [280, "tuple-unpacking-err-structured-binding"], [337, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[277, "duck-typing-err-auto-without-a-duck"], [278, "duck-typing-err-auto-without-a-duck"], [280, "duck-typing-err-auto-without-a-duck"], [337, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[277, "things-that-simply-deserved-fixing-since-ages"], [278, "things-that-simply-deserved-fixing-since-ages"], [280, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[277, "brace-initialization"], [278, "brace-initialization"], [280, "brace-initialization"], [337, "brace-initialization"], [338, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[277, "new-oo-keywords-override-final-default-delete"], [278, "new-oo-keywords-override-final-default-delete"], [280, "new-oo-keywords-override-final-default-delete"], [337, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[277, "strongly-typed-enum"], [278, "strongly-typed-enum"], [280, "strongly-typed-enum"], [337, "strongly-typed-enum"], [696, "strongly-typed-enum"]], "Delegating Constructor": [[277, "delegating-constructor"], [278, "delegating-constructor"], [280, "delegating-constructor"], [337, "delegating-constructor"], [701, "delegating-constructor"]], "nullptr": [[277, "nullptr"], [278, "nullptr"], [280, "nullptr"], [337, "nullptr"], [709, "nullptr"]], "Smart Pointers": [[277, "smart-pointers"], [278, "smart-pointers"], [280, "smart-pointers"], [300, "smart-pointers"], [338, "smart-pointers"], [573, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[277, "moving-rvalue-references"], [278, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[277, "functions-std-bind-std-function-lambdas"], [278, "functions-std-bind-std-function-lambdas"], [280, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[278, "work-environment"], [280, "work-environment"], [298, "work-environment"], [299, "work-environment"], [300, "work-environment"], [377, "work-environment"]], "Skeleton Project": [[278, "skeleton-project"], [280, "skeleton-project"], [615, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[279, "linux-basics-2022-10-03-2022-10-05"], [388, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[280, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [388, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[280, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[280, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[280, "coroutines-and-c-23-generators"]], "Ranges And Views": [[280, "ranges-and-views"]], "Concepts": [[280, "concepts"], [337, "concepts"], [711, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[281, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [388, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[281, "monday"]], "Tuesday": [[281, "tuesday"]], "Wednesday": [[281, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[282, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[282, "up-front-project-management"], [301, "up-front-project-management"], [323, "up-front-project-management"]], "Object Oriented Programming: Classes": [[282, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[282, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[282, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[282, "exercise-series-csv-json"]], "Iteration, Generators": [[282, "iteration-generators"]], "Going Dynamic: type(), exec()": [[282, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[282, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[282, "group-project-kickoff"], [302, "group-project-kickoff"], [324, "group-project-kickoff"], [327, "group-project-kickoff"]], "Data Structures Recap": [[282, "data-structures-recap"]], "Miscellaneous Livehacking": [[282, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[282, "function-arguments-closures-decorators"], [317, "function-arguments-closures-decorators"]], "Exceptions, with": [[282, "exceptions-with"], [317, "exceptions-with"], [320, "exceptions-with"]], "Package Management": [[282, "package-management"]], "Videos": [[282, "videos"], [328, "videos"]], "Beginner": [[282, "beginner"], [306, "beginner"]], "Advanced": [[282, "advanced"], [306, "advanced"]], "Fun": [[282, "fun"]], "Python (2022-10-17)": [[283, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[283, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[283, "Variables,-Types"]], "Immutable? References?": [[283, "Immutable?-References?"]], "And range()?": [[283, "And-range()?"]], "More About Dictionaries": [[283, "More-About-Dictionaries"], [283, "id1"], [286, "More-About-Dictionaries"], [313, "More-About-Dictionaries"], [335, "More-About-Dictionaries"], [341, "More-About-Dictionaries"], [347, "More-About-Dictionaries"], [351, "More-About-Dictionaries"], [1084, "more-about-dictionaries"]], "More About Lists": [[283, "More-About-Lists"], [286, "More-About-Lists"], [313, "More-About-Lists"], [335, "More-About-Lists"], [341, "More-About-Lists"], [347, "More-About-Lists"], [351, "More-About-Lists"], [1083, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[285, "python-2022-11-16-2022-11-18"], [286, "Python-(2022-11-16---2022-11-18)"], [388, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[285, "control-flow-sequences-iteration"], [292, "control-flow-sequences-iteration"], [295, "control-flow-sequences-iteration"], [305, "control-flow-sequences-iteration"], [306, "control-flow-sequences-iteration"], [311, "control-flow-sequences-iteration"], [312, "control-flow-sequences-iteration"], [312, "id2"], [333, "control-flow-sequences-iteration"], [334, "control-flow-sequences-iteration"], [339, "control-flow-sequences-iteration"], [340, "control-flow-sequences-iteration"], [345, "control-flow-sequences-iteration"], [346, "control-flow-sequences-iteration"], [349, "control-flow-sequences-iteration"], [350, "control-flow-sequences-iteration"]], "More Datatypes": [[285, "more-datatypes"], [292, "more-datatypes"], [295, "more-datatypes"], [305, "more-datatypes"], [306, "more-datatypes"], [306, "id2"], [311, "more-datatypes"], [312, "more-datatypes"], [333, "more-datatypes"], [334, "more-datatypes"], [339, "more-datatypes"], [345, "more-datatypes"], [346, "more-datatypes"], [349, "more-datatypes"], [393, "more-datatypes"]], "Exercise Series: CSV Files": [[285, "exercise-series-csv-files"], [305, "exercise-series-csv-files"], [306, "exercise-series-csv-files"], [311, "exercise-series-csv-files"], [312, "exercise-series-csv-files"], [333, "exercise-series-csv-files"], [334, "exercise-series-csv-files"], [340, "exercise-series-csv-files"], [345, "exercise-series-csv-files"], [346, "exercise-series-csv-files"], [349, "exercise-series-csv-files"]], "Advanced Language Features": [[285, "advanced-language-features"], [305, "advanced-language-features"], [306, "advanced-language-features"], [311, "advanced-language-features"], [456, "advanced-language-features"]], "Noob Exercises": [[285, "noob-exercises"]], "Object Oriented": [[286, "Object-Oriented"]], "Lists and Tuples": [[286, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[286, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[286, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[286, "And-Lists?-Mutable!"]], "Tuples?": [[286, "Tuples?"]], "set": [[286, "set"]], "More About Sets": [[286, "More-About-Sets"], [313, "More-About-Sets"], [341, "More-About-Sets"], [347, "More-About-Sets"], [351, "More-About-Sets"], [1085, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[286, "Comprehensions-(List,-Dictionary,-Set)"], [335, "Comprehensions-(List,-Dictionary,-Set)"], [347, "Comprehensions-(List,-Dictionary,-Set)"], [1032, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[286, "Generator-Expressions"]], "eval and exec": [[286, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[288, "linux-basics-2023-01-23-2023-01-26"], [388, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[289, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [388, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[289, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[289, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[289, "day-1-overview"]], "Introductory Live Hacking": [[289, "introductory-live-hacking"]], "The Shell": [[289, "the-shell"]], "Processes Quick Walk-Through": [[289, "processes-quick-walk-through"]], "Permissions": [[289, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[289, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[289, "uart"]], "SUSI": [[289, "susi"]], "Secure Shell (SSH)": [[289, "secure-shell-ssh"]], "Miscellaneous Hardware": [[289, "miscellaneous-hardware"]], "Group Exercise": [[289, "group-exercise"]], "Untold": [[289, "untold"], [299, "untold"], [302, "untold"]], "More From The Commandline": [[289, "more-from-the-commandline"]], "Multithreading (And C++)": [[289, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[290, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[290, "Filter-in-Pandas"]], "Copy vs Reference": [[290, "Copy-vs-Reference"]], "Immutable": [[290, "Immutable"]], "String": [[290, "String"]], "Regex": [[290, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[291, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[291, "pipeline-driver"]], "Virtual Environment Setup": [[291, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[291, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[291, "filter-select-uncategorized"]], "More Categories": [[291, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[292, "python-for-sap-developers-2023-03-13-2023-03-15"], [388, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[292, "day-1-basics"]], "Demo": [[292, "demo"]], "Day 2 (Basics, Continued)": [[292, "day-2-basics-continued"]], "Pandas": [[292, "pandas"], [293, "Pandas"], [295, "pandas"], [299, "pandas"], [324, "pandas"], [1157, "pandas"]], "Hacking About On A SAP Test Dataset": [[292, "hacking-about-on-a-sap-test-dataset"], [296, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[292, "untold-from-original-agenda"]], "OO Introduction": [[292, "oo-introduction"], [295, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[292, "context-managers-automatic-cleanup"], [295, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[292, "iteration-generators-comprehensions"], [295, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[292, "decorators-and-related-topics"], [295, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[292, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[293, "2023-03-13"]], "Comment vs Docstring": [[293, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[293, "Mutable?-Immutable?"]], "Lists": [[293, "Lists"], [293, "id2"], [307, "Lists"], [347, "Lists"]], "Tuples": [[293, "Tuples"]], "DataType Conversiosn": [[293, "DataType-Conversiosn"]], "String, File IO Exercise": [[293, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[294, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[295, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[295, "day-1-basics"], [328, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[295, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[295, "day-3-domain-specifics"]], "NumPy": [[295, "numpy"], [324, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[297, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[297, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[297, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[297, "DataFrame.all()-(and-any())"]], "Column Selection": [[297, "Column-Selection"]], "Dropping Columns": [[297, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[297, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[297, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[297, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[297, "Conversion"]], "Usage: A Filter": [[297, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[297, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[297, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[298, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[298, "preferred-ubuntu-under-windows-wsl"], [300, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[298, "unsupported-environments"]], "Skeleton Project Setup": [[298, "skeleton-project-setup"], [300, "skeleton-project-setup"]], "Classes, Objects, Methods": [[298, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[298, "heavy-weight-oo-muscle"], [300, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[298, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[298, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[298, "a-little-concurrency"]], "Untold So Far": [[298, "untold-so-far"]], "C++ Standard Library": [[298, "c-standard-library"]], "Miscellaneous Topics": [[298, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[299, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[299, "clean-code"], [301, "clean-code"], [302, "clean-code"]], "Demo Hacking": [[299, "demo-hacking"]], "Python Development: Select Topics": [[299, "python-development-select-topics"]], "Built-In Types: Facts": [[299, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[299, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[299, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[299, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[299, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[299, "decorators-the-ominous"]], "Modules And Packages": [[299, "modules-and-packages"], [323, "modules-and-packages"]], "Design Patterns": [[299, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[300, "c-for-embedded-developers-2023-04-18-2023-04-20"], [388, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[300, "some-details"]], "Standard Template Library": [[300, "standard-template-library"], [663, "standard-template-library"]], "Warm-Up": [[300, "warm-up"]], "Sensor Exercise, Resolved": [[300, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[300, "oo-cont-d"]], "Smart Pointers (Continued)": [[300, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[300, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[300, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[301, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[301, "day-1-python-inside-out"], [302, "day-1-python-inside-out"]], "Exercise Prerequisites": [[301, "exercise-prerequisites"], [323, "exercise-prerequisites"]], "References And Other Pitfalls": [[301, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[301, "looping-constructs-with-an-emphasis-on-the-else-clause"], [323, "looping-constructs-with-an-emphasis-on-the-else-clause"], [327, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[301, "closures-decorators-and-more"], [302, "closures-decorators-and-more"], [323, "closures-decorators-and-more"], [327, "closures-decorators-and-more"]], "Dynamic Features": [[301, "dynamic-features"], [302, "dynamic-features"], [303, "Dynamic-Features"], [323, "dynamic-features"], [327, "dynamic-features"]], "Error Handling And Recovery": [[301, "error-handling-and-recovery"], [302, "error-handling-and-recovery"], [323, "error-handling-and-recovery"], [324, "error-handling-and-recovery"], [327, "error-handling-and-recovery"]], "Miscellaneous Threading": [[301, "miscellaneous-threading"], [302, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[301, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[301, "group-project-discussion"]], "Design Patterns Overview": [[301, "design-patterns-overview"], [302, "design-patterns-overview"]], "Day 3: Group Project": [[301, "day-3-group-project"], [302, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[302, "python-advanced-2023-04-24-2023-04-26"], [388, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[302, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[302, "morning-opening"]], "Object Oriented Programming (Continued)": [[302, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[302, "project-setup-ide-usage"]], "Continue Hacking": [[302, "continue-hacking"]], "Test Driven Development, pytest": [[302, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[303, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[303, "is-vs.-=="]], "Compound DataTypes": [[303, "Compound-DataTypes"]], "class": [[303, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[304, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[305, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[306, "python-basics-2023-05-15-2023-05-17"], [307, "Python-Basics-(2023-05-15---2023-05-17)"], [388, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[306, "morning-awakening"], [350, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[306, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[306, "modules-from-standard-library"], [1137, "modules-from-standard-library"]], "Immutable vs. Mutable": [[307, "Immutable-vs.-Mutable"]], "The range Function": [[307, "The-range-Function"], [1075, "the-range-function"]], "Lambda, And Functional Programming Tools": [[307, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[309, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[310, "linux-basics-2023-05-23-2023-05-25"], [388, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[310, "introduction-concepts-and-terminology"], [354, "introduction-concepts-and-terminology"], [872, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[310, "the-shell-bash-bourne-again-shell"], [310, "id1"], [354, "the-shell-bash-bourne-again-shell"], [918, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[310, "tools-inspecting-text-files"], [354, "tools-inspecting-text-files"], [928, "tools-inspecting-text-files"]], "File System Permissions": [[310, "file-system-permissions"], [310, "id2"], [354, "file-system-permissions"], [893, "file-system-permissions"]], "Morning Wakeup": [[310, "morning-wakeup"], [312, "morning-wakeup"], [338, "morning-wakeup"], [354, "morning-wakeup"], [354, "id2"]], "I/O Redirection And Pipes": [[310, "i-o-redirection-and-pipes"], [354, "i-o-redirection-and-pipes"], [879, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[310, "archiving-and-compression"], [354, "archiving-and-compression"], [861, "archiving-and-compression"], [863, "archiving-and-compression"]], "Networking": [[310, "networking"]], "Processes And Scheduling": [[310, "processes-and-scheduling"]], "SSH: Secure Shell": [[310, "ssh-secure-shell"], [950, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[310, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[311, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[312, "python-basics-2023-06-20-2023-06-22"], [313, "Python-Basics-(2023-06-20---2023-06-22)"], [388, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[312, "day2"]], "File I/O, And Encoding": [[312, "file-i-o-and-encoding"]], "Python Videos": [[312, "python-videos"]], "NumPy, Pandas, Matplotlib": [[312, "numpy-pandas-matplotlib"]], "DataTypes": [[313, "DataTypes"], [335, "DataTypes"]], "(Im)mutable?": [[313, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[313, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[313, "len(),-range(),-for"]], "Generators, yield": [[313, "Generators,-yield"]], "Other -ables: Callable": [[313, "Other--ables:-Callable"]], "exec() (and eval())": [[313, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[313, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[314, "python-basics-jupyter-notebook"], [336, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[315, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[315, "toolchain-introduction"], [331, "toolchain-introduction"], [1192, "toolchain-introduction"]], "Project Structure, Dependencies": [[315, "project-structure-dependencies"], [331, "project-structure-dependencies"], [1192, "project-structure-dependencies"]], "External Dependencies": [[315, "external-dependencies"], [331, "external-dependencies"], [483, "external-dependencies"], [1192, "external-dependencies"]], "Code Generators": [[315, "code-generators"], [331, "code-generators"], [1192, "code-generators"]], "Automatic Testing": [[315, "automatic-testing"], [331, "automatic-testing"], [1192, "automatic-testing"]], "Installation And Deployment": [[315, "installation-and-deployment"], [331, "installation-and-deployment"], [1192, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[316, "cmake-an-introduction-2023-07-18"], [388, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[317, "python-advanced-2023-09-25-2023-09-27"], [318, "Python-Advanced-(2023-09-25---2023-09-27)"], [388, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[317, "recap-of-python-basics-course-before-summer"], [320, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[317, "project-management-requirements-sandboxing-testing"], [320, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[317, "into-the-wild-group-project-kickoff"], [320, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[317, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [320, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[317, "package-and-dependency-management"]], "Equality vs. Identity": [[318, "Equality-vs.-Identity"]], "Functions Are Objects": [[318, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[319, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [322, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[320, "python-advanced-2023-10-09-2023-10-11"], [388, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[320, "classes-basics"]], "Classes: More": [[320, "classes-more"]], "Spoiler: Group Project Outcome": [[320, "spoiler-group-project-outcome"]], "More About Functions": [[320, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[321, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[321, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[323, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[323, "day-1-basic-python"], [327, "day-1-basic-python"]], "Datatypes, Datatypes": [[323, "datatypes-datatypes"], [327, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[323, "day-2-advanced-python-features"]], "Multiprocessing": [[323, "multiprocessing"]], "Day 3: Into The Wild": [[323, "day-3-into-the-wild"]], "Data Science Topics": [[323, "data-science-topics"], [327, "data-science-topics"]], "Group Project: An Idea": [[323, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[324, "python-advanced-2023-10-24-2023-10-26"], [388, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[324, "python-basics-recap"], [325, "Python-Basics-Recap"]], "The Very Basics": [[324, "the-very-basics"]], "range(), And Iteration In General": [[324, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[324, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[324, "object-oriented-programming-continued"], [324, "id1"]], "Group Project, OO-ified": [[324, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[324, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[324, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[324, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[324, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[324, "compositesink"]], "MQTT Sink Implementation": [[324, "mqtt-sink-implementation"]], "Timestamps?": [[324, "timestamps"]], "Jupyter Notebook: Python Advanced": [[325, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[325, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[325, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[325, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[325, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[325, "assert"]], "Iteration, Generators, Iterator Protocol": [[325, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[325, "AAARGHHH"]], "Generator Expresssions": [[325, "Generator-Expresssions"]], "Dictionary Comprehension": [[325, "Dictionary-Comprehension"], [335, "Dictionary-Comprehension"], [1032, "dictionary-comprehension"]], "Functional Tools": [[325, "Functional-Tools"]], "filter()": [[325, "filter()"], [335, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[326, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[327, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[327, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[327, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[327, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[327, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[327, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[328, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[328, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[328, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[329, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[329, "Assignment,-And-IDs"]], "(Im)Mutability": [[329, "(Im)Mutability"]], "Operator Overloading (Basics)": [[329, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[329, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[329, "Methods"], [607, "methods"], [754, "methods"], [755, "methods"], [756, "methods"], [1053, "methods"]], "numpy, pandas, matplotlib": [[329, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[330, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[331, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[332, "cmake-an-introduction-2023-11-27"], [388, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[333, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[334, "python-basics-2023-11-29-2023-12-01"], [335, "Python-Basics-(2023-11-29---2023-12-01)"], [388, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[334, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[334, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[334, "day-3-morning-awakening"]], "Dictionary (mutable)": [[335, "Dictionary-(mutable)"]], "Set (mutable)": [[335, "Set-(mutable)"]], "Boolean (immutable)": [[335, "Boolean-(immutable)"]], "split() and join()": [[335, "split()-and-join()"]], "Pythonicity (enumerate())": [[335, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[335, "pandas,-matplotlib"]], "Generator Expression": [[335, "Generator-Expression"]], "zip(), And Dictionaries": [[335, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[337, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[337, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[337, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[337, "functions-std-function-lambdas"], [338, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[337, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[337, "moving-usage"]], "Moving: Implementation": [[337, "moving-implementation"]], "Type Erasure": [[337, "type-erasure"]], "Allocators": [[337, "allocators"], [658, "allocators"], [776, "allocators"]], "C++ Pythonic Toolcase": [[337, "c-pythonic-toolcase"]], "Outlook In >=20": [[337, "outlook-in-20"]], "Attributes And The Like": [[337, "attributes-and-the-like"]], "<algorithm> Overview": [[337, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[337, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[338, "c-advanced-topics-2023-12-04-2023-12-06"], [388, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[338, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[338, "pythonicity"]], "New OO Features": [[338, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[338, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[338, "classic-polymorphism-interfaces"]], "Move Semantics": [[338, "move-semantics"]], "Day 3: All The Rest": [[338, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[338, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[338, "moving-roundup"]], "Containers And Algorithms": [[338, "containers-and-algorithms"]], "And Embedded?": [[338, "and-embedded"]], "Still Untold": [[338, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[339, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[340, "python-basics-2023-12-18-2023-12-20"], [341, "Python-Basics-(2023-12-18---2023-12-20)"], [342, "python-basics-2023-12-18-2023-12-20"], [388, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[340, "more-about-datatypes"], [341, "More-About-Datatypes"], [350, "more-about-datatypes"]], "A Bit Of OO": [[340, "a-bit-of-oo"]], "Datatype Conversion": [[341, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[341, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[341, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[341, "Functional-Programming"]], "set(), list(), dict()": [[341, "set(),-list(),-dict()"]], "while (and else)": [[341, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[341, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[341, "Return-Value?-Parameters?"]], "References, Immutability": [[341, "References,-Immutability"]], "Und Schuetzen?": [[341, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[341, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[341, "pathlib,-os.path"]], "Regexen": [[341, "Regexen"]], "distill.py": [[341, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[343, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[344, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[345, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[345, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[346, "python-advanced-2024-01-15-2024-01-17"], [348, "python-advanced-2024-01-15-2024-01-17"], [388, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[346, "group-project"], [376, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[347, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[347, "DocStrings"]], "Type System": [[347, "Type-System"], [409, "type-system"]], "Infinity?": [[347, "Infinity?"]], "dict, and enumerate()": [[347, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[349, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[349, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[350, "python-basics-2024-01-29-2024-01-31"], [351, "Python-Basics-(2024-01-29---2024-01-31)"], [388, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[350, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[350, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[350, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[350, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[350, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[351, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[351, "Wuerfeln"]], "Primeness, while": [[351, "Primeness,-while"]], "The range function": [[351, "The-range-function"]], "Sequences": [[351, "Sequences"]], "Misc Crap": [[351, "Misc-Crap"]], "Sequential Datatyoes": [[351, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[351, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[351, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[351, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[351, "os.walk()"]], "pathlib": [[351, "pathlib"]], "numpy, scikit-learn": [[351, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[352, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Agenda: Linux Basics (2024-03-11 - 2024-03-13)": [[353, "agenda-linux-basics-2024-03-11-2024-03-13"]], "Linux Basics (2024-03-11 - 2024-03-13)": [[354, "linux-basics-2024-03-11-2024-03-13"], [388, "linux-basics-2024-03-11-2024-03-13"]], "SSH/Putty Setup": [[354, "ssh-putty-setup"]], "Quiz \ud83e\udd77": [[354, "quiz-ninja"]], "The Shell (Bash - \u201cBourne Again Shell\u201d) (Continued)": [[354, "the-shell-bash-bourne-again-shell-continued"]], "Missing Pieces": [[354, "missing-pieces"]], "Screenplay Checker": [[355, "screenplay-checker"]], "GPIO: Blinklicht": [[356, "gpio-blinklicht"]], "Commandline": [[356, "commandline"], [361, "commandline"], [898, "commandline"]], "sysfs GPIO": [[356, "sysfs-gpio"]], "Electronic Aspect": [[356, "electronic-aspect"]], "External Circuitry": [[356, "external-circuitry"]], "Raspberry Header Pinout": [[356, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[357, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[358, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[359, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[360, "ece19-exercises-and-custom-topics"]], "Reading a File": [[361, "reading-a-file"], [960, "reading-a-file"]], "Output": [[361, "output"]], "2021-05-20 (G2)": [[362, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[362, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[362, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[362, "Reading-File-Line-by-Line"]], "Iterating a File": [[362, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[362, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[362, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[362, "str.split()"]], "2021-05-21": [[363, "2021-05-21"], [370, "id11"]], "Modules and Packages": [[363, "Modules-and-Packages"], [1043, "modules-and-packages"]], "Strings vs. Bytes": [[364, "Strings-vs.-Bytes"]], "Batteries": [[365, "Batteries"]], "Key Value Map": [[365, "Key-Value-Map"]], "Comments vs Documentation": [[365, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[365, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[365, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[365, "Arithmetic-Operators"], [414, "arithmetic-operators"], [1055, "arithmetic-operators"]], "Wertebereich von Integers": [[365, "Wertebereich-von-Integers"]], "An Example": [[366, "An-Example"], [1078, "an-example"]], "Sidenote: Pure Beauty": [[366, "Sidenote:-Pure-Beauty"], [1078, "sidenote-pure-beauty"]], "Parameters and Types": [[366, "Parameters-and-Types"], [1078, "parameters-and-types"]], "Pitfalls": [[366, "Pitfalls"]], "Cloud Computer, SSH Login": [[367, "cloud-computer-ssh-login"]], "Machine, Logins": [[367, "machine-logins"]], "Login via Secure Shell (SSH)": [[367, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[368, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[369, "embedded-computing-1-ece-19"]], "Daily Log": [[370, "daily-log"]], "2021-03-04": [[370, "id1"]], "2021-03-05": [[370, "id2"]], "Cheat Sheets": [[370, null]], "2021-03-18": [[370, "id3"]], "2021-03-26": [[370, "id4"]], "2021-04-15": [[370, "id5"]], "2021-04-21": [[370, "id6"]], "Git Intro": [[370, "git-intro"]], "Download and Installation": [[370, null], [375, null]], "2021-04-29": [[370, "id7"]], "2021-05-10": [[370, "id8"]], "Org Stuff": [[370, "org-stuff"]], "Python: Functions": [[370, "python-functions"]], "2021-05-12": [[370, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[370, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[370, "id10"]], "Reiterating on Exercise": [[370, "reiterating-on-exercise"]], "import argparse": [[370, "import-argparse"]], "Exercise digit (Once More)": [[370, "exercise-digit-once-more"]], "2021-06-01": [[370, "id12"]], "sysfs GPIO: Blinking an LED": [[370, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[370, "id13"]], "Embedded Computing 1 (Deutsch)": [[371, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[371, "lehrinhalte"]], "Lernergebnisse der LV": [[371, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[371, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[371, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[371, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[371, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[372, "embedded-computing-1-english"]], "Course Content": [[372, "course-content"]], "Learning Outcome": [[372, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[372, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[372, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[372, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[372, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[373, "plan-for-summer-2021"]], "Linux Introduction": [[373, "linux-introduction"]], "Slides": [[373, null], [373, null], [373, null]], "C/C++ Development": [[373, "c-c-development"]], "Python Development": [[373, "python-development"]], "2021-10-07": [[374, "id1"]], "Whose Fault It Is": [[374, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[375, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[375, "linux-unix"]], "Git": [[375, "git"]], "2021-10-28": [[376, "id1"]], "Discussion of Tasks": [[376, "discussion-of-tasks"]], "TODOs": [[376, "todos"]], "2021-11-15": [[377, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[377, "systems-programming-files-directories-links"]], "2021-11-29": [[378, "id1"]], "jjjj": [[378, "jjjj"]], "2021-12-1{4,5}": [[379, "id1"]], "Future Topics": [[379, "future-topics"]], "Threading": [[379, "threading"]], "C++ Sideways": [[379, "c-sideways"]], "2022-01-10": [[380, "id1"]], "Scheduling": [[380, "scheduling"], [994, "scheduling"], [995, "scheduling"]], "2022-01-12": [[381, "id1"]], "Scheduling and Realtime": [[381, "scheduling-and-realtime"], [385, "scheduling-and-realtime"]], "2022-02-15": [[382, "id1"]], "Agenda/Log": [[383, "agenda-log"], [384, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[384, "embedded-computing-2-ece-19"]], "Project Repository": [[384, "project-repository"]], "Test Material": [[384, "test-material"]], "Exam Material Overview": [[385, "exam-material-overview"]], "Questions": [[385, "questions"], [385, "id1"], [677, "questions"], [871, "questions"], [885, "questions"], [886, "questions"], [911, "questions"], [1018, "questions"]], "Slide Material": [[385, "slide-material"], [385, "id2"]], "Embedded Computing 1+2, ECE 19": [[386, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[388, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[388, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[388, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[388, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[388, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[388, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[388, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[388, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[388, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[388, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[388, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[388, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[388, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[388, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[388, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[388, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[388, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[388, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[388, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[388, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[388, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[388, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[388, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[388, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[388, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[388, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[388, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[388, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[388, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[388, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[388, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[388, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[388, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[388, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[388, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[388, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[388, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[388, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[388, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[388, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[388, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[388, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[388, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[388, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[388, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[388, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[388, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[388, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[388, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[388, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[388, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[388, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[388, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[388, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[388, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[388, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[388, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[388, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[388, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[388, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[388, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[388, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[388, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[388, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[388, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[388, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[388, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[388, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[388, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[388, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[388, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[388, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[388, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[388, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[388, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[388, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[388, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[388, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[388, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[388, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[388, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[388, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[388, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[389, "training-material-overview-and-download"]], "On Windows": [[390, "on-windows"]], "On Linux": [[390, "on-linux"]], "The Book (1)": [[391, "the-book-1"]], "The Book (2)": [[391, "the-book-2"]], "The Beginning": [[391, "the-beginning"]], "Cool Guys and Their Hobby": [[391, "cool-guys-and-their-hobby"]], "History of UNIX": [[391, "history-of-unix"]], "My First Program (1)": [[392, "my-first-program-1"]], "My First Program (2)": [[392, "my-first-program-2"]], "Character Arrays - Strings": [[392, "character-arrays-strings"]], "Variables and Arithmetic": [[393, "variables-and-arithmetic"]], "My Second Program (1)": [[393, "my-second-program-1"]], "My Second Program (2)": [[393, "my-second-program-2"]], "My Second Program (3)": [[393, "my-second-program-3"]], "My Second Program (4)": [[393, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[394, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[395, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[395, "for-loop-simplification-2"]], "Second Program, revisited": [[395, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[396, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[397, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[397, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[398, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[399, "character-i-o"]], "The Outside World": [[399, "the-outside-world"]], "cat for the Poor (1)": [[399, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[399, "cat-for-the-poor-2"]], "More Examples \u2026": [[399, "more-examples"]], "More Examples - if": [[399, "more-examples-if"]], "if, Formally": [[399, "if-formally"]], "Operators, Formally": [[399, "operators-formally"]], "Exercise: wc For The Poor": [[400, "exercise-wc-for-the-poor"]], "Arrays": [[401, "arrays"]], "Array Definition, Explicit Initialization": [[401, "array-definition-explicit-initialization"]], "Array Access": [[401, "array-access"]], "Discussion: Initialization": [[401, "discussion-initialization"]], "Discussion: if, else": [[401, "discussion-if-else"]], "Array Initializer": [[401, "array-initializer"]], "Discussion: Initializer": [[401, "discussion-initializer"]], "Initialization using memset()": [[401, "initialization-using-memset"]], "Discussion: memset()": [[401, "discussion-memset"]], "Exercise: Character Histogram": [[402, "exercise-character-histogram"]], "A Nonsensical Example": [[403, "a-nonsensical-example"]], "Function Signature": [[403, "function-signature"]], "Discussion": [[403, "discussion"]], "Definition vs. Declaration (1)": [[403, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[403, "definition-vs-declaration-2"]], "By Value / By Reference": [[403, "by-value-by-reference"]], "Exercise: Forward Declaration": [[404, "exercise-forward-declaration"]], "Character Arrays": [[405, "character-arrays"]], "Strings: Mistake by Design?": [[405, "strings-mistake-by-design"]], "Strings: Definition": [[405, "strings-definition"]], "Strings: Library Functions": [[405, "strings-library-functions"]], "Strings as Parameters": [[405, "strings-as-parameters"]], "Strings: Dangers": [[405, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[406, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[407, "lifetime-of-variables"]], "Lifetime": [[407, "lifetime"]], "Global Variables": [[407, "global-variables"], [581, "global-variables"]], "Global Variables: How?": [[407, "global-variables-how"]], "Variable Names": [[410, "variable-names"]], "Variable- and Function Names": [[410, "variable-and-function-names"]], "Data Types, Sizes": [[411, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[411, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[411, "integer-variants-qualifiers"]], "Widths": [[411, "widths"]], "Constants": [[412, "constants"]], "Constants and Types": [[412, "constants-and-types"]], "Character Constants: Escape Sequences": [[412, "character-constants-escape-sequences"]], "String Constants": [[412, "string-constants"]], "Character vs. String Constants": [[412, "character-vs-string-constants"]], "Symbolic Constants (1)": [[412, "symbolic-constants-1"]], "Symbolic Constants (2)": [[412, "symbolic-constants-2"]], "Variable Definitions": [[413, "variable-definitions"]], "Definitions und Initialization": [[413, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[413, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[413, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[414, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[414, "arithmetic-operators-2"]], "Relational and Logical Operators": [[415, "relational-and-logical-operators"]], "Relational Operators (1)": [[415, "relational-operators-1"]], "Relational Operators (2)": [[415, "relational-operators-2"]], "Logical (Boolean) Operators": [[415, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[415, "boolean-operators-short-circuit"]], "Type Conversions": [[416, "type-conversions"]], "Implicit Type Conversions": [[416, "implicit-type-conversions"]], "Sign Bugs": [[416, "sign-bugs"]], "Truncation": [[416, "truncation"]], "Sign Propagation": [[416, "sign-propagation"]], "Conversion Using Operators": [[416, "conversion-using-operators"]], "Conversion and unsigned (1)": [[416, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[416, "conversion-and-unsigned-2"]], "Compiler Warnings": [[416, "compiler-warnings"]], "Last Warning": [[416, "last-warning"], [988, "last-warning"]], "Forced Conversion - Cast": [[416, "forced-conversion-cast"]], "Increment, Decrement": [[417, "increment-decrement"]], "Confusion: ++, --": [[417, "confusion"]], "Confused to perfection (1)": [[417, "confused-to-perfection-1"]], "Confused to perfection (2)": [[417, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[418, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[419, "bit-operators"]], "Bit Manipulation": [[419, "bit-manipulation"]], "Bitwise AND and OR": [[419, "bitwise-and-and-or"]], "Bitwise XOR": [[419, "bitwise-xor"]], "Shift Left": [[419, "shift-left"]], "Shift Right": [[419, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[419, "inverting-one-s-complement"]], "Assignment with Calculation": [[420, "assignment-with-calculation"]], "Combined Operators": [[420, "combined-operators"]], "?: - Conditional Expression": [[421, "conditional-expression"]], "?: - Conditional Expression (1)": [[421, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[421, "conditional-expression-2"]], "Precedence, Associativity": [[422, "precedence-associativity"]], "Summary: Operators": [[422, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[422, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[422, "operators-precedence-und-associativity-2"]], "More Warnings": [[422, "more-warnings"]], "Statements and Blocks": [[424, "statements-and-blocks"]], "Statement vs. Block": [[424, "statement-vs-block"]], "if - else": [[425, "if-else"]], "Branches": [[425, "branches"]], "True or False? What is Truth?": [[425, "true-or-false-what-is-truth"]], "else is optional (1)": [[425, "else-is-optional-1"]], "else is optional (2)": [[425, "else-is-optional-2"]], "else - if": [[426, "else-if"]], "Style Matters": [[426, "style-matters"]], "switch": [[427, "switch"], [427, "id1"]], "Case Distinctions": [[427, "case-distinctions"]], "if - else if vs. switch": [[427, "if-else-if-vs-switch"]], "Loops: while and for": [[428, "loops-while-and-for"]], "while: general purpose loop": [[428, "while-general-purpose-loop"]], "From while to for (1)": [[428, "from-while-to-for-1"]], "From while to for (2)": [[428, "from-while-to-for-2"]], "for, a Little Closer": [[428, "for-a-little-closer"]], "Comma Operator": [[428, "comma-operator"]], "for: Infamous Idioms": [[428, "for-infamous-idioms"]], "Loops: do - while": [[429, "loops-do-while"]], "do - while: Condition After Body": [[429, "do-while-condition-after-body"]], "goto and Labels": [[431, "goto-and-labels"]], "Structured Programming vs. goto": [[431, "structured-programming-vs-goto"]], "goto: Definition": [[431, "goto-definition"]], "goto: Use Cases": [[431, "goto-use-cases"]], "Nesting": [[433, "nesting"]], "Declaration vs. Definition": [[433, "declaration-vs-definition"]], "A Monolithic Program": [[433, "a-monolithic-program"]], "Separate Compilation": [[433, "separate-compilation"]], "Extern/Global Variables": [[434, "extern-global-variables"]], "Variables: Declaration and Definition": [[434, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[434, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[434, "variables-separating-declaration-from-definition-2"]], "Header Files": [[435, "header-files"]], "Declarations: Problems (1)": [[435, "declarations-problems-1"]], "Declarations: Problems (2)": [[435, "declarations-problems-2"]], "Declarations: Solutions": [[435, "declarations-solutions"]], "Static Variables": [[436, "static-variables"]], "Lifetime and Visibility (1)": [[436, "lifetime-and-visibility-1"]], "Automatic Variables": [[436, "automatic-variables"]], "Local static Variable": [[436, "local-static-variable"]], "Global static Variable": [[436, "global-static-variable"]], "Global Variable": [[436, "global-variable"], [1077, "global-variable"]], "C Preprocessor: Basics": [[437, "c-preprocessor-basics"]], "#include": [[437, "include"]], "Macros: Text Replacement": [[437, "macros-text-replacement"]], "Macros: Constant Definition": [[437, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[437, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[437, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[437, "include-guards-1"]], "Include Guards (2)": [[437, "include-guards-2"]], "The C Preprocessor: Last Words": [[437, "the-c-preprocessor-last-words"], [438, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[438, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[438, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[438, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[438, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[438, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[438, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[438, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[438, "stringification-1"]], "Stringification (2)": [[438, "stringification-2"]], "Token Pasting (1)": [[438, "token-pasting-1"]], "Token Pasting (2)": [[438, "token-pasting-2"]], "Warnings and Errors": [[438, "warnings-and-errors"]], "Predefined Macros (1)": [[438, "predefined-macros-1"]], "Pointers and Addresses": [[440, "pointers-and-addresses"]], "Pointers: Basics": [[440, "pointers-basics"]], "Pointer: Operators": [[440, "pointer-operators"]], "More Examples": [[440, "more-examples"]], "Pointers as Function Parameters": [[441, "pointers-as-function-parameters"]], "Call by Reference (1)": [[441, "call-by-reference-1"]], "Call by Reference (2)": [[441, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[442, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[443, "pointers-and-arrays"], [445, "pointers-and-arrays"]], "It\u2019s Only Memory": [[443, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[443, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[443, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[443, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[443, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[443, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[443, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[443, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[443, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[443, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[444, null], [869, null], [874, null], [874, null], [875, null], [875, null], [875, null], [880, null], [881, null], [964, null], [991, null], [994, null], [998, null], [1000, null], [1079, null]], "main() Can Take Parameters": [[444, "main-can-take-parameters"]], "struct: Basics": [[446, "struct-basics"]], "struct: Compound Datatypes": [[446, "struct-compound-datatypes"]], "struct: How?": [[446, "struct-how"]], "Usage": [[446, "usage"], [636, "usage"], [643, "usage"]], "Nested Structures": [[446, "nested-structures"]], "Memory Layout": [[446, "memory-layout"]], "Recursive Structures?": [[446, "recursive-structures"]], "struct: Functions": [[447, "struct-functions"]], "Parameters and Return (1)": [[447, "parameters-and-return-1"]], "Parameters and Return (2)": [[447, "parameters-and-return-2"]], "Parameters and Return (3)": [[447, "parameters-and-return-3"]], "typedef: Type Alias": [[448, "typedef-type-alias"]], "Alias for Type Names": [[448, "alias-for-type-names"]], "Dynamic Memory": [[450, "dynamic-memory"], [450, "id1"]], "Stack and Global Memory": [[450, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[450, "dynamic-memory-usage"]], "Singly Linked List": [[451, "singly-linked-list"]], "Exercises (1)": [[451, "exercises-1"]], "Exercises (2)": [[451, "exercises-2"]], "Exercises (3)": [[451, "exercises-3"]], "Exercises (4)": [[451, "exercises-4"]], "Exercises (5)": [[451, "exercises-5"]], "Exercises (6)": [[451, "exercises-6"]], "Exercises (7)": [[451, "exercises-7"]], "Exercises (8)": [[451, "exercises-8"]], "Exercises (9)": [[451, "exercises-9"]], "Exercises (10)": [[451, "exercises-10"]], "Exercises (11)": [[451, "exercises-11"]], "Volatile": [[453, "volatile"]], "volatile: The Lie (1)": [[453, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[453, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[453, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[453, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[454, "compiler-intrinsics"]], "Atomic Memory Access": [[454, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[454, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[454, "load-modify-store-mutex"]], "Atomic Instructions": [[454, "atomic-instructions"], [983, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[454, "more-gcc-builtins"]], "Alignment": [[455, "alignment"]], "Data Alignment": [[455, "data-alignment"]], "Data Alignment, Compilers": [[455, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[455, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[455, "unaligned-data-access-2"]], "Padding (1)": [[455, "padding-1"]], "Padding (2)": [[455, "padding-2"]], "Padding (3)": [[455, "padding-3"]], "Padding (4)": [[455, "padding-4"]], "Structure Alignment (1)": [[455, "structure-alignment-1"]], "Structure Alignment (2)": [[455, "structure-alignment-2"]], "And Arrays? (1)": [[455, "and-arrays-1"]], "And Arrays? (2)": [[455, "and-arrays-2"]], "And Arrays? (3)": [[455, "and-arrays-3"]], "Sanity and Readabilty": [[457, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[457, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[457, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[457, "shooting-offenses"]], "Ambiguity": [[457, "ambiguity"]], "Readability": [[457, "readability"]], "Code Smells": [[457, "code-smells"]], "Know Your Integers": [[458, "know-your-integers"]], "Standard Data Types: size_t (1)": [[458, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[458, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[459, "discrete-values-enum"], [459, "id1"]], "Discrete Values": [[459, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[459, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[459, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[459, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[459, "discrete-values-enum-and-switch"], [459, "id2"]], "Discrete Values - Close to Perfection": [[459, "discrete-values-close-to-perfection"]], "Visibility - static": [[460, "visibility-static"]], "Visibility": [[460, "visibility"]], "A Somewhat Contrived Example (1)": [[460, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[460, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[460, "the-static-keyword-hooray"]], "Correctness - const": [[461, "correctness-const"]], "Non-Modifiable Memory (1)": [[461, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[461, "non-modifiable-memory-2"]], "The const Keyword (1)": [[461, "the-const-keyword-1"]], "The const Keyword (2)": [[461, "the-const-keyword-2"]], "const Variables": [[461, "const-variables"]], "const Parameters (1)": [[461, "const-parameters-1"]], "const Parameters (2)": [[461, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[461, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[461, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[461, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[461, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[461, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[461, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[461, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[461, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[461, "pointers-pointers-pointers-9"]], "Struct Initialization": [[462, "struct-initialization"]], "Good Old Struct Initialization": [[462, "good-old-struct-initialization"]], "C99 Designated Initializer": [[462, "c99-designated-initializer"]], "Explict Type Safety": [[463, "explict-type-safety"]], "Integer Types Are Ambiguous": [[463, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[463, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[463, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[463, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[463, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[463, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[463, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[463, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[463, "wrap-up-artificial-type-safety"]], "valgrind": [[464, "valgrind"]], "Valgrind": [[464, "id1"]], "Valgrind in Action (1)": [[464, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[464, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[464, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[464, "valgrind-more"]], "Optimization": [[466, "optimization"]], "Optimization - Introduction": [[466, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[466, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[466, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[466, "compute-bound-or-io-bound-3"]], "What to do Next?": [[466, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[467, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[467, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[467, "unnecessary-optimizations"]], "Inlining (1)": [[467, "inlining-1"]], "Inlining (2)": [[467, "inlining-2"]], "Inlining (3)": [[467, "inlining-3"]], "Register Allocation (1)": [[467, "register-allocation-1"]], "Register Allocation (2)": [[467, "register-allocation-2"]], "Peephole Optimization": [[467, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[467, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[467, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[467, "peephole-optimization-constant-folding"]], "Loop Invariants": [[467, "loop-invariants"]], "Loop Unrolling": [[467, "loop-unrolling"]], "Tail Call Optimization": [[467, "tail-call-optimization"]], "CPU Optimization, Last Words": [[467, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[467, "gcc-optimization-levels"]], "Further Reading": [[467, "further-reading"]], "Optimizations: Memory Optimizations": [[468, "optimizations-memory-optimizations"]], "Memory: Caches": [[468, "memory-caches"]], "Locality of reference": [[468, "locality-of-reference"]], "Multidimensional Arrays": [[468, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[468, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[468, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[470, "profiling-famous-words"]], "Donald E. Knuth": [[470, null]], "Tony Hoare": [[470, null]], "Larry Wall": [[470, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[470, null]], "Profiling - Introduction": [[470, "profiling-introduction"]], "GNU Profiler - gprof": [[471, "gnu-profiler-gprof"]], "gprof - How it Works": [[471, "gprof-how-it-works"]], "Using gprof": [[471, "using-gprof"]], "gprof: Flat Profile": [[471, "gprof-flat-profile"]], "gprof: Call Graph": [[471, "gprof-call-graph"]], "gprof: Interpreting The Results": [[471, "gprof-interpreting-the-results"]], "gprof: Visualization": [[471, "gprof-visualization"]], "callgrind": [[472, "callgrind"]], "callgrind - How it Works": [[472, "callgrind-how-it-works"]], "callgrind - How it is Used": [[472, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[472, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[472, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[472, "callgrind-useful-options"]], "oprofile": [[473, "oprofile"]], "oprofile - How it Works": [[473, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[473, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[473, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[473, "oprofile-too-much-information"]], "oprofile - Call Graph": [[473, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[473, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[473, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[473, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[473, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[473, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[473, "oprofile-graphical-beauty"]], "The C Programming Language": [[475, "the-c-programming-language"]], "Group Description": [[475, "group-description"], [603, "group-description"], [693, "group-description"], [735, "group-description"], [736, "group-description"], [784, "group-description"], [788, "group-description"], [790, "group-description"], [932, "group-description"], [940, "group-description"], [941, "group-description"], [408, "group-description"], [423, "group-description"], [432, "group-description"], [439, "group-description"], [445, "group-description"], [449, "group-description"], [452, "group-description"], [456, "group-description"], [465, "group-description"], [469, "group-description"], [474, "group-description"], [595, "group-description"], [618, "group-description"], [621, "group-description"], [624, "group-description"], [665, "group-description"], [674, "group-description"], [760, "group-description"], [768, "group-description"], [772, "group-description"], [995, "group-description"]], "Messages From The Book": [[476, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[477, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[477, "rules-why-rules"]], "Coding Style": [[477, "coding-style"]], "Disclaimer": [[477, null]], "Design Principles: SOLID": [[477, "design-principles-solid"]], "Another One: YAGNI": [[477, "another-one-yagni"]], "Architecture": [[477, "architecture"]], "Project Management: Traditional": [[477, "project-management-traditional"]], "Project Management: Software": [[477, "project-management-software"]], "So What?": [[477, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[478, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[478, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[479, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[479, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[479, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[479, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[479, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[479, "where-are-we-questions"]], "Testability: Input Cleaning": [[479, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[479, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[479, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[479, "testability-reading-input-from-directory"]], "Testability: Categorization": [[479, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[479, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[479, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[480, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[480, "single-monolithic-executable"]], "Building With CMake": [[480, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[480, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[480, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[480, "problem-duplicate-compilation"]], "Problem: More Functionality": [[480, "problem-more-functionality"]], "Solution: Libraries": [[480, "solution-libraries"], [1030, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[481, "configured-header-files"]], "Problem": [[481, "problem"], [489, "problem"], [495, "problem"], [496, "problem"], [497, "problem"], [500, "problem"], [506, "problem"], [554, "problem"], [828, "problem"], [959, "problem"]], "Configured Files": [[481, "configured-files"]], "Use In Compiled Code": [[481, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[482, "c-debug-release-cmake-programming-rants"]], "Pause": [[482, "pause"]], "Class Diagram": [[482, "class-diagram"]], "C++ Standard Version": [[482, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[482, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[482, "compiler-type"]], "Strings And Lists": [[482, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[482, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[482, "message-popular-modes"]], "FIND_PACKAGE()": [[483, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[483, "find-package-required"]], "SQLite3 Parameters": [[483, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[483, "using-sqlite3-parameters"]], "Demo Time": [[483, "demo-time"]], "CMake: An Introduction": [[484, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[485, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[485, "prefix-where-everything-comes-together"]], "Installing Targets": [[485, "installing-targets"]], "Doing The Installation (make install)": [[485, "doing-the-installation-make-install"]], "And Shared Libraries?": [[485, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[485, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[485, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[486, "libraries-and-dependencies"]], "Libraries And Executables": [[486, "libraries-and-executables"]], "Targets And Dependencies": [[486, "targets-and-dependencies"]], "Visualizing Dependencies": [[486, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[487, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[487, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[487, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[487, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[487, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[487, "good-or-bad"], [488, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[488, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[488, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[488, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[488, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[489, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[489, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[489, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[489, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[490, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[490, "normal-libraries"]], "Building Shared Libraries": [[490, "building-shared-libraries"]], "More About Loading": [[490, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[491, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[491, "reorganization"]], "Dependencies, And Target Properties": [[491, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[492, "targets-properties-and-more"]], "Target Types": [[492, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[492, "properties-private-public-interface"]], "Running Tests": [[493, "running-tests"], [1170, "running-tests"]], "Setup And Usage": [[493, "setup-and-usage"]], "Add Simple Test": [[493, "add-simple-test"]], "Checking Test Output": [[493, "checking-test-output"]], "Questionability": [[493, "questionability"]], "C++ Code": [[494, "c-code"]], "Abstract Factory": [[495, "abstract-factory"]], "I2C Sensor Subhierarchy": [[495, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[495, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[495, "solution-factory-objects"]], "Adapter": [[496, "adapter"]], "Solution: Adaptation": [[496, "solution-adaptation"]], "Basic Adaptation": [[496, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[496, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[496, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[496, "adapter-is-doing-real-measurements"]], "Command": [[497, "command"]], "Motivation": [[497, "motivation"], [500, "motivation"], [516, "motivation"], [517, "motivation"], [613, "motivation"], [710, "motivation"], [712, "motivation"], [737, "motivation"], [743, "motivation"], [1050, "motivation"], [1056, "motivation"]], "Step 1: Basic insert()": [[497, "step-1-basic-insert"]], "Step 2: Basic find()": [[497, "step-2-basic-find"]], "Step 3: drop()": [[497, "step-3-drop"]], "Step 4: Handle find() Errors": [[497, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[497, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[497, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[497, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[498, "socialdb-source-code"]], "Composite": [[499, "composite"]], "Unix Filesystem": [[499, "unix-filesystem"]], "Boolean Expressions": [[499, "boolean-expressions"]], "Thermometers, And Average Calculation": [[499, "thermometers-and-average-calculation"]], "Decorator": [[500, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[500, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[500, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[500, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[500, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[500, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[500, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[500, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[500, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[501, "design-patterns-with-c"]], "Topics/Exercises": [[501, "topics-exercises"]], "Solutions": [[501, "solutions"], [515, "solutions"], [529, "solutions"]], "To Be Done": [[501, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[502, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[502, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[502, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[502, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[502, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[502, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[502, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[502, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[502, "stop-here-need-help"]], "Tests": [[502, "tests"], [522, "tests"]], "Interpreter": [[503, "interpreter"]], "Observer": [[504, "observer"]], "OO Design Principles": [[505, "oo-design-principles"]], "Principles: Why? Which?": [[505, "principles-why-which"]], "Single Responsibility": [[505, "single-responsibility"]], "Open/Closed": [[505, "open-closed"]], "Liskov Substitution": [[505, "liskov-substitution"]], "Interface Segregation": [[505, "interface-segregation"]], "Dependency Inversion": [[505, "dependency-inversion"]], "Proxy": [[506, "proxy"]], "Solution: Proxy": [[506, "solution-proxy"]], "Local Variant": [[506, "local-variant"]], "Remote Variant": [[506, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[507, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[507, "hypothetical"]], "Class Hierarchy": [[507, "class-hierarchy"]], "Singleton": [[508, "singleton"]], "And class Person?": [[508, "and-class-person"]], "UML Short Introduction": [[509, "uml-short-introduction"]], "Interface": [[509, "interface"]], "Interface Implementation, Inheritance": [[509, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[509, "connectors-association-aggregation-composition"]], "Association": [[509, "association"]], "Aggregation": [[509, "aggregation"]], "Composition": [[509, "composition"]], "Exercise: Abstract Factory": [[510, "exercise-abstract-factory"]], "Exercise: Adapter": [[511, "exercise-adapter"], [518, "exercise-adapter"]], "Exercise: Command": [[512, "exercise-command"]], "Exercise: Composite": [[513, "exercise-composite"]], "Exercise: Decorator": [[514, "exercise-decorator"]], "Exercises: Design Patterns": [[515, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[516, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[517, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[517, "expression-interface"]], "Arithmetic (Binary) Expressions": [[517, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[517, "check-combined-arithmetic-expressions"]], "And Variables?": [[517, "and-variables"]], "No Uninitialized Variables!!": [[517, "no-uninitialized-variables"]], "Assigning To Variables": [[517, "assigning-to-variables"]], "Using Variables As Expressions": [[517, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[519, "exercise-proxy-remote-thermometer"]], "Network Communication": [[519, "network-communication"]], "Implementation Hints": [[519, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[520, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[521, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[522, "exercise-singleton-flexible-and-strict"]], "Complications": [[522, "complications"]], "Exercise: Singleton (Inflexible)": [[523, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[524, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[524, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[524, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[524, "i2csensorfactory-vendor1"], [524, "id1"]], "Solution: Adapter": [[525, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[525, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[526, "solution-command"]], "Command Classes": [[526, "command-classes"]], "Solution: Composite": [[527, "solution-composite"]], "Averaging (Composite) Sensor": [[527, "averaging-composite-sensor"]], "Solution: Decorator": [[528, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[528, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[528, "decorated-constant-sensor"]], "Decorated Random Sensor": [[528, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[530, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[531, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[532, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[533, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[533, "client-proxy-thermometer"]], "Remote Stub": [[533, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[534, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[534, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[535, "solution-singleton-flexible"]], "Main Program": [[535, "main-program"], [536, "main-program"], [537, "main-program"], [775, "main-program"], [777, "main-program"], [779, "main-program"], [781, "main-program"]], "SocialInsurance Interface": [[535, "socialinsurance-interface"], [536, "socialinsurance-interface"]], "Two Concrete Implementations": [[535, "two-concrete-implementations"], [536, "two-concrete-implementations"]], "OEGK": [[535, "oegk"], [536, "oegk"]], "SVS": [[535, "svs"], [536, "svs"]], "Solution: Singleton (Flexible And Strict)": [[536, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[537, "solution-singleton-inflexible"]], "Singleton Implementation": [[537, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[538, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[538, "github-project"]], "CMake Build": [[538, "cmake-build"], [972, "cmake-build"]], "Dependencies/Usage Relationships": [[538, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[538, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[538, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[538, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[538, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[539, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[540, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[541, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[541, "new-sensor-class-randomsensor"]], "Implementation Details": [[541, "implementation-details"]], "New Program: random-temperature.cpp": [[541, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[542, "fh-sensor-oo-first-try"]], "C++ Exercises": [[543, "c-exercises"]], "Exercise Projects": [[543, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[544, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[544, "topics-covered"], [545, "topics-covered"], [546, "topics-covered"], [547, "topics-covered"], [548, "topics-covered"], [549, "topics-covered"], [550, "topics-covered"], [553, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[545, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[546, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[547, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[548, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[549, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[549, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[549, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[550, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[551, "oo-basics-interfaces-shapes"]], "Exercise Table": [[551, "exercise-table"]], "Setup, Exam Procedure": [[551, "setup-exam-procedure"]], "Point": [[551, "point"]], "Point: Constructor and Getter Methods": [[551, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[551, "point-default-constructor"]], "Point: Static Method: equal()": [[551, "point-static-method-equal"]], "Point: operator==()": [[551, "point-operator"]], "Point: Method: move()": [[551, "point-method-move"]], "Point: operator+=()": [[551, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[551, "point-static-method-add"]], "Point: operator+()": [[551, "point-suite-operator-plus"]], "Circle": [[551, "circle"]], "Circle: Constructor": [[551, "circle-constructor"]], "Circle: operator==()": [[551, "circle-operator"]], "Circle: Method: area()": [[551, "circle-method-area"]], "Square": [[551, "square"]], "Square: Constructor": [[551, "square-constructor"]], "Square: operator==()": [[551, "square-operator"]], "Square: Method: area()": [[551, "square-method-area"]], "Interface: Shape": [[551, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[551, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[551, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[552, "working-on-exercise-projects"]], "Clone Github Repository": [[552, "clone-github-repository"]], "Massage googletest Sub-Module": [[552, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[552, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[552, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[552, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[553, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[553, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[553, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[554, "exercise-onewire-sensor-factory"]], "Fixture": [[554, "fixture"], [789, "fixture"]], "basic": [[554, "basic"]], "notfound": [[554, "notfound"]], "find_is_const": [[554, "find-is-const"]], "Testing In Isolation": [[554, "testing-in-isolation"]], "Testing In Reality": [[554, "testing-in-reality"]], "On The PC": [[554, "on-the-pc"]], "On The Target": [[554, "on-the-target"]], "Exercise: OneWire Sensor Class": [[555, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[555, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[555, "test-monolithic-implementation"]], "class W1Sensor": [[555, "class-w1sensor"]], "Exercise: Algorithms": [[556, "exercise-algorithms"]], "Copy Into std::vector": [[556, "copy-into-std-vector"]], "Find Element In std::vector": [[556, "find-element-in-std-vector"]], "Sort In-Place": [[556, "sort-in-place"]], "Sort Into A Copy": [[556, "sort-into-a-copy"]], "Exercise: Generic Filter": [[557, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[558, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[559, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[560, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[561, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[562, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[563, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[564, "insert-sunny-case"]], "Lookup - Not Found": [[565, "lookup-not-found"]], "Lookup - Sunny Case": [[566, "lookup-sunny-case"]], "Memory Leaks?": [[567, "memory-leaks"]], "Remove - Not Found": [[568, "remove-not-found"]], "Remove - Sunny Case": [[569, "remove-sunny-case"]], ".size() Is const": [[570, "size-is-const"]], "Exercise: Uniquify A Sequence": [[571, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[572, "exercise-std-vector"]], "C++: TODO List": [[573, "c-todo-list"]], "Structural": [[573, "structural"]], "STL, Containers and Algorithms": [[573, "stl-containers-and-algorithms"]], "Templates/Overloading": [[573, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[573, "functors-overloading-the-function-call-operator"]], "Threads": [[573, "threads"]], "C++ >= 11": [[573, "c-11"]], "UserDB Exercise": [[573, "userdb-exercise"]], "Complete Transcription of C++11": [[573, "complete-transcription-of-c-11"]], "Exercise series": [[573, "exercise-series"]], "Code: C++: Class Templates": [[574, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[575, "screenplay-c-class-templates"]], "C++: Class Templates": [[576, "c-class-templates"]], "Code: C++: Dynamic Memory": [[577, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[578, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[578, "c-malloc-free"]], "valgrind: Memory Leak": [[578, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[578, "valgrind-array-bounds-write"]], "C++: new, delete": [[578, "c-new-delete"]], "C++: new, delete on Arrays": [[578, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[578, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[579, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[580, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[581, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[581, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[581, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[581, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[582, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[583, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[584, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[585, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[586, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[587, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[587, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[587, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[587, "ownership-2-x-non-const"]], "Ownership: const Method": [[587, "ownership-const-method"]], "Ownership: 2 x const": [[587, "ownership-2-x-const"]], "C++: Ownership/RAII": [[588, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[589, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[590, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[590, "pointer-arithmetics-recap"]], "Container: std::vector": [[590, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[590, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[590, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[590, "container-std-list"]], "Container: std::map": [[590, "container-std-map"]], "C++: STL Containers (Intro)": [[591, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[592, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[593, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[594, "c-templates-vs-interfaces"]], "Background": [[596, "background"]], "History": [[596, "history"], [1031, "history"]], "Content": [[596, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[597, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[597, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[597, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[597, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[597, "comparison-functions-in-equality"]], "Moving Points": [[597, "moving-points"]], "Vector Addition and Subtraction": [[597, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[597, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[597, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[597, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[598, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[598, "compiler-generated-copy-constructor"]], "Rule": [[598, null], [601, null], [700, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[598, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[599, "classes-and-objects"]], "Introducing C++: class point": [[599, "introducing-c-class-point"]], "Access Specifiers: public And private": [[599, "access-specifiers-public-and-private"]], "Default Constructor": [[599, "default-constructor"], [601, "default-constructor"], [614, "default-constructor"], [615, "default-constructor"], [616, "default-constructor"], [617, "default-constructor"]], "Custom Constructor: Usage": [[599, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[599, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[599, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[599, "methods-operations-on-an-object"]], "And printf()?!": [[599, "and-printf"]], "Custom Constructor": [[600, "custom-constructor"], [614, "custom-constructor"]], "Constructors: why? (1)": [[600, "constructors-why-1"]], "Constructors: why? (2)": [[600, "constructors-why-2"]], "Constructors: Implementation - Inline": [[600, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[600, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[601, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[601, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[601, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[601, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[602, "more-constructors-destructors"]], "Default Constructor (1)": [[602, "default-constructor-1"]], "Default Constructor (2)": [[602, "default-constructor-2"]], "Object Lifecycle - Destructor": [[602, "object-lifecycle-destructor"]], "Destructors (1)": [[602, "destructors-1"]], "Destructors (2)": [[602, "destructors-2"]], "Destructors (3)": [[602, "destructors-3"]], "Destructors (4)": [[602, "destructors-4"]], "Data Encapsulation": [[603, "data-encapsulation"]], "Constructors: Member Initialization": [[604, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[604, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[604, "real-initialization-initializer-list"]], "Why Is That Important?": [[604, "why-is-that-important"]], "Why Else Is That Important?": [[604, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[605, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[605, "copy-in-c"]], "Copy Constructor": [[605, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[605, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[605, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[605, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[605, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[605, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[605, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[605, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[605, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[605, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[606, "overloading"]], "Functions in C": [[606, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[606, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[606, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[606, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[607, "objects-data-and-methods"]], "class point Again": [[607, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[607, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[607, "how-are-members-accessed-inside-methods"]], "const Methods": [[607, "const-methods"], [608, "const-methods"]], "Non const Methods": [[607, "non-const-methods"]], "const": [[608, "const"]], "const: Immutable Variable": [[608, "const-immutable-variable"]], "const Correctness vs. Pollution": [[608, "const-correctness-vs-pollution"]], "this": [[609, "this"]], "Hidden Pointer: this (1)": [[609, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[609, "hidden-pointer-this-2"]], "Explicit this Pointer": [[609, "explicit-this-pointer"]], "Pass By Copy/Reference": [[610, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[610, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[610, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[610, "copy-reference-c-pointers"]], "C++: True References": [[610, "c-true-references"]], "And const? Pointers?": [[610, "and-const-pointers"]], "const References": [[610, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[610, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[611, "static-methods"]], "Methods without Object": [[611, "methods-without-object"]], "Naive Implementation: Global Function": [[611, "naive-implementation-global-function"]], "C++: static Method": [[611, "c-static-method"]], "static Member Variables": [[612, "static-member-variables"]], "Good Old C: extern Global Variables": [[612, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[612, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[612, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[612, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[612, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[612, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[613, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[613, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[613, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[613, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[613, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[613, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[613, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[613, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[614, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[614, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[614, "in-equality"], [615, "in-equality"], [616, "in-equality"], [617, "in-equality"]], "+=": [[614, "id2"], [615, "id1"], [616, "id2"], [617, "id2"]], "-=": [[614, "id4"], [616, "id4"]], "+": [[614, "id6"], [615, "id2"], [616, "id6"], [617, "id3"]], "-": [[614, "id8"], [616, "id8"]], "<< (std::ostream)": [[614, "std-ostream"], [615, "std-ostream"], [616, "std-ostream"], [617, "std-ostream"]], "Surface": [[614, "surface"]], "Volume": [[614, "volume"]], "Exercise (FH): class point": [[615, "exercise-fh-class-point"]], "Initial Build": [[615, "initial-build"]], "Initial Test Run": [[615, "initial-test-run"]], "Extending class point: More Unit Tests": [[615, "extending-class-point-more-unit-tests"]], "Access Methods": [[615, "access-methods"]], "Unary -": [[615, "unary"], [616, "unary"]], "Exercise (FH): class point3d": [[616, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[616, "building-class-rectangle-upon-class-point"], [617, "building-class-rectangle-upon-class-point"]], "Coordinates": [[616, "coordinates"], [617, "coordinates"]], "Absolute Value": [[616, "absolute-value"]], "Distance Between Two Points": [[616, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[617, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[617, "width-height-area"]], "Error Handling: if - else if - else": [[619, "error-handling-if-else-if-else"]], "try - catch": [[620, "try-catch"]], "try - Block": [[620, "try-block"]], "catch - Block": [[620, "catch-block"]], "Standard Library: Exception-Hierarchy": [[620, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[620, "custom-exceptions-1"]], "Custom Exceptions (2)": [[620, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[620, "throwing-exceptions-throw"]], "Last Words": [[620, "last-words"], [623, "last-words"]], "Function Templates": [[622, "function-templates"]], "Origin: Duplicated Code": [[622, "origin-duplicated-code"]], "A simple Function-Template": [[622, "a-simple-function-template"]], "More Templates from the STL": [[622, "more-templates-from-the-stl"]], "Class Templates": [[623, "class-templates"]], "Does This Work With Classes?": [[623, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[623, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[623, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[625, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[626, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[627, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[628, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[629, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[630, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[630, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[630, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[630, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[630, "pointer-difference"]], "Step Width? (1)": [[630, "step-width-1"]], "Step Width? (2)": [[630, "step-width-2"]], "And Arbitrary Data Types?": [[630, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[630, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[630, "stl-algorithms"]], "STL Containers": [[630, "stl-containers"]], "std::vector (And std::copy())": [[631, "std-vector-and-std-copy"]], "Dynamicity Details": [[631, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[631, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[631, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[632, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[632, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[632, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[632, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[632, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[633, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[634, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[635, null], [636, null], [637, null], [638, null], [639, null], [641, null], [642, null], [643, null], [644, null], [647, null], [648, null], [651, null], [656, null], [802, null], [802, null], [818, null], [820, "documentation"], [820, null], [824, "documentation"], [826, null], [826, null], [826, null], [852, "documentation"], [855, "documentation"], [865, null], [866, null], [869, null], [873, null], [873, null], [880, null], [881, null], [882, null], [882, null], [882, null], [883, null], [898, null], [898, null], [898, null], [899, null], [900, null], [901, null], [917, null], [917, null], [917, null], [920, null], [921, null], [954, null], [956, null], [958, null], [960, null], [961, null], [962, null], [964, null], [964, null], [964, null], [964, null], [964, null], [964, null], [967, null], [968, null], [969, null], [970, null], [970, null], [971, null], [974, null], [974, null], [974, null], [974, null], [1012, null], [1012, null], [1013, null], [1088, null], [1089, null], [1099, null], [1177, "documentation"]], "binary_search<>: On Sorted Sequence": [[635, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[635, "more-intelligent-search"], [641, "more-intelligent-search"]], "copy<>": [[636, "copy"]], "find<>: Sequential Search, by Equality": [[637, "find-sequential-search-by-equality"]], "Basic Usage": [[637, "basic-usage"], [756, "basic-usage"], [920, "basic-usage"], [1091, "basic-usage"]], "Not Found?": [[637, "not-found"]], "find_if<>: Sequential Search, Customizable": [[638, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[638, "if-using-a-plain-function"]], "if, Using a Functor Class": [[638, "if-using-a-functor-class"]], "for_each<>": [[639, "for-each"]], "Basic Algorithms": [[640, "basic-algorithms"]], "Sorted Arrays": [[640, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[641, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[642, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[643, "reverse-copy-copying-and-reversing"]], "sort<>": [[644, "sort"]], "Algorithm: std::sort": [[644, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[644, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[645, "sequential-containers"], [646, "sequential-containers"]], "Common Characteristics": [[645, "common-characteristics"]], "list<>": [[647, "list"]], "Insertion and Deletion": [[647, "insertion-and-deletion"]], "vector<>": [[648, "vector"]], "Characteristics": [[648, "characteristics"]], "Modification at the Back": [[648, "modification-at-the-back"]], "Insertion": [[648, "insertion"]], "Example": [[648, "example"], [1106, "example"]], "Associative Containers": [[649, "associative-containers"], [650, "associative-containers"]], "Type Instantiation": [[651, "type-instantiation"]], "Filling The Container": [[651, "filling-the-container"]], "Inserting Elements": [[651, "inserting-elements"]], "Searching": [[651, "searching"], [675, "searching"]], "Screenplay: std::map Initialization And Inserting": [[652, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[652, "definining-the-type"]], "Initialization": [[652, "initialization"], [675, "initialization"]], "Screenplay: Inserting Elements": [[653, "screenplay-inserting-elements"]], "Subscript Operator": [[653, "subscript-operator"]], "insert()": [[653, "insert"]], "Screenplay: Removing (Erasing) Elements": [[654, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[654, "by-pointer-err-iterator"]], "By Key": [[654, "by-key"]], "Screenplay: Searching": [[655, "screenplay-searching"]], "find(key)": [[655, "find-key"]], "[key]": [[655, "key"]], "at(key)": [[655, "at-key"]], "multimap<>": [[656, "multimap"]], "Allocator Basics": [[657, "allocator-basics"]], "STL: Exercises": [[659, "stl-exercises"]], "Exercise: Reverse a String": [[660, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[661, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[662, "solution-reverse-a-string"]], "Naive": [[662, "naive"]], "Using std::reverse<>": [[662, "using-std-reverse"]], "Using std::reverse_copy<>": [[662, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[664, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[666, "inheritance-basics"]], "Plain (Base) Class": [[666, "plain-base-class"], [667, "plain-base-class"]], "Inheriting (Deriving) From Base": [[666, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[666, "derived-is-a-base"]], "Destructors And Inheritance": [[667, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[667, "derived-class-and-destructor"]], "And Base Class Conversion?": [[667, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[668, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[669, "c-interfaces"]], "Bringing It All Together": [[669, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[670, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[670, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[670, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[670, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[671, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[672, "virtual-destructors"]], "Is-A Relationships And Destructors": [[672, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[672, "pure-virtual-destructor"]], "Virtual Methods": [[673, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[673, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[673, "enter-virtual"]], "Caution: virtual": [[673, "caution-virtual"]], "std::string": [[675, "std-string"]], "Addition, And Such": [[675, "addition-and-such"]], "Conversion From String": [[675, "conversion-from-string"]], "Conversion To String": [[675, "conversion-to-string"]], "Substrings": [[675, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[676, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[677, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[678, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[679, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[680, "exercises-user-database"]], "Exercise: Access Methods for Members": [[681, "exercise-access-methods-for-members"]], "Exercise: const Members": [[682, "exercise-const-members"]], "Exercise: Use const": [[683, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[684, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[685, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[686, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[687, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[688, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[689, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[689, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[690, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[691, "exercise-use-std-vector-in-userdb"]], "History, Background": [[694, "history-background"]], "Make C++ Great Again": [[694, "make-c-great-again"]], "The \u201cNew\u201d C++": [[694, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[695, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[695, "c-03-to-do-list-version"]], "Real Container Initialization": [[695, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[695, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[695, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[695, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[695, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[695, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[695, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[695, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[695, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[695, "inevitable-threads"]], "Unions? std::variant!": [[695, "unions-std-variant"]], "Wrapping All That Into A Class": [[695, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[695, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[695, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[696, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[696, "c-03-enum-types-problems"]], "C++11 enum class": [[696, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[696, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[697, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[698, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[698, "std-initializer-list"]], "Direct Usage": [[698, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[698, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[699, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[699, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[699, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[699, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[699, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[699, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[699, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[699, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[699, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[699, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[700, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[700, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[700, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[700, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[700, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[700, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[701, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[701, "delegating-constructor-solution"]], "constexpr": [[702, "constexpr"]], "Basic Usage: Expressions": [[702, "basic-usage-expressions"]], "constexpr Functions": [[702, "constexpr-functions"]], "Recursive constexpr": [[702, "recursive-constexpr"]], "constexpr Objects": [[702, "constexpr-objects"]], "Afterword, Further Reading": [[703, "afterword-further-reading"]], "Uses In The Standard Library": [[703, "uses-in-the-standard-library"]], "Other Uses": [[703, "other-uses"]], "All Said \u27f6 Guidelines": [[703, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[703, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[704, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[704, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[705, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[705, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[705, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[706, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[706, "copy-semantics-revisited"]], "class String, Without Copy": [[706, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[706, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[706, "move-constructor-move"]], "Implementing Move Constructor": [[706, "implementing-move-constructor"]], "And Move Assignment?": [[706, "and-move-assignment"]], "Implementing Move Assignment": [[706, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[707, "using-move-semantics-in-own-code"]], "Using String: class Person": [[707, "using-string-class-person"]], "What?": [[707, "what"], [881, "what"]], "Using Rvalue References Inside Function: std::move": [[707, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[708, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[708, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[708, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[708, "move-semantics-wish-list"]], "Theory: Lvalues": [[708, "theory-lvalues"]], "Theory: Rvalues": [[708, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[708, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[708, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[708, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[708, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[708, "enter-move-constructor-and-move-assignment"]], "Rules": [[708, null]], "Templates end with \u201c>>\u201d": [[709, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[710, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[710, "most-basic-usage"]], "auto Is Only The Basic Type": [[710, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[710, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[710, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[710, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[710, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[712, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[712, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[712, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[712, "concepts-to-the-rescue"]], "Syntactic Variations": [[712, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[713, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[714, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[715, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[716, "concepts-links"]], "Writing Your Own Concepts": [[717, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[717, "starting-point-good-old-function"]], "Need Template": [[717, "need-template"]], "Error: Requirement Not Fulfilled": [[717, "error-requirement-not-fulfilled"]], "Concept: has_size": [[717, "concept-has-size"]], "Concept: index_returns_double": [[717, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[718, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[719, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[720, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[721, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[722, "coroutines"]], "Coroutines: An Overview": [[723, "coroutines-an-overview"]], "Foreword": [[723, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[723, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[723, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[723, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[723, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[723, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[723, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[723, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[723, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[723, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[723, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[723, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[724, "fibo-generator-cpp"]], "fibonacci.cpp": [[725, "fibonacci-cpp"]], "generator.h": [[726, "generator-h"]], "generator-hello.cpp": [[727, "generator-hello-cpp"]], "simplest.cpp": [[728, "simplest-cpp"]], "suspend.cpp": [[729, "suspend-cpp"]], "suspend-iter.cpp": [[730, "suspend-iter-cpp"]], "suspend-next.cpp": [[731, "suspend-next-cpp"]], "= default": [[732, "default"]], "Problem: Default Constructor Not Automatically Generated": [[732, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[732, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[732, "c-11-solution-default"]], "= delete": [[733, "delete"]], "Problem: Copy Is Not Always Wanted": [[733, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[733, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[733, "c-11-solution-delete-copy"]], "final": [[734, "final"]], "Architectural Decisions": [[734, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[734, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[735, "new-language-features"]], "Lambda": [[736, "lambda"], [737, "lambda"]], "Lambda To The Rescue": [[737, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[737, "excursion-python-closures"]], "Same In C++: Capturing": [[737, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[737, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[737, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[737, "more-about-capturing"]], "Lambda: More Capturing": [[738, "lambda-more-capturing"]], "More Capture Syntax": [[738, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[738, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[738, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[738, "mixed-explicit-capture"]], "Define Variables In Capture": [[738, "define-variables-in-capture"]], "Capturing All By Reference": [[738, "capturing-all-by-reference"]], "Capturing All By Copy": [[738, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[738, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[738, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[739, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[739, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[739, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[740, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[740, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[740, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[740, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[740, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[742, "override"]], "Correct Overriding \u2026": [[742, "correct-overriding"]], "\u2026 Is Very Hard": [[742, "is-very-hard"]], "More Problems Arise": [[742, "more-problems-arise"]], "Solution: override": [[742, "solution-override"]], "Range Based for Loops: Introduction": [[743, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[743, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[743, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[743, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[744, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[744, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[744, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[744, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[744, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[744, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[745, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[745, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[745, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[745, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[745, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[745, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[745, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[745, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[745, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[747, "ranges-overview"]], "Ranges?": [[747, "ranges"]], "Containers And Views (Storage Behavior)": [[747, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[747, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[747, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[747, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[747, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[747, "available-ranges-concepts"]], "Ranges And Views: Links": [[748, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[749, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[749, "variations-compatible-data-types"]], "struct: By Copy": [[749, "struct-by-copy"]], "struct: Reference": [[749, "struct-reference"]], "struct: By const Reference": [[749, "struct-by-const-reference"]], "std::tuple: By Copy": [[749, "std-tuple-by-copy"]], "std::tuple: By Reference": [[749, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[749, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[749, "arrays-by-copy"]], "Arrays: By Reference": [[749, "arrays-by-reference"]], "Arrays: By const Reference": [[749, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[750, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[750, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[751, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[752, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[752, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[753, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[753, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[753, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[753, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[753, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[753, "explicit-move-method-maybe"]], "Stop!!!": [[753, "stop"]], "std::shared_ptr": [[754, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[754, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[754, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[754, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[754, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[754, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[754, "demo-basic-usage"]], "Demo: std::make_shared": [[754, "demo-std-make-shared"]], "Demo: Cyclic References": [[754, "demo-cyclic-references"]], "std::unique_ptr": [[755, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[755, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[755, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[755, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[755, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[755, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[755, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[755, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[755, "manipulating-pointer-content"]], "std::weak_ptr": [[756, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[756, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[756, "a-real-life-example"]], "Perfect Forwarding": [[757, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[757, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[757, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[757, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[757, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[758, "std-bind"]], "Why? What\u2019s The Problem?": [[758, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[758, "sample-program-all-done-manually"]], "Sideway: std::transform": [[758, "sideway-std-transform"]], "Sample Program: Using std::transform": [[758, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[758, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[758, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[758, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[758, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[758, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[758, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[758, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[758, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[758, "summary"], [838, "summary"], [838, "id1"], [1158, "summary"], [1160, "summary"]], "std::function": [[759, "std-function"]], "Classic Polymorphism": [[759, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[759, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[759, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[759, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[759, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[759, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[759, "std-function-last-words"]], "Threads Introduction": [[761, "threads-introduction"]], "Operating System Primitives": [[761, "operating-system-primitives"]], "There Be Dragons": [[761, "there-be-dragons"]], "Threads in C++": [[762, "threads-in-c"]], "Creating Threads is Far Too Easy": [[762, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[762, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[762, "cornercases-in-thread-lifetime"]], "Race Conditions": [[763, "race-conditions"], [836, "race-conditions"]], "std::atomic": [[764, "std-atomic"]], "Atomic Instructions (1)": [[764, "atomic-instructions-1"]], "Atomic Instructions (2)": [[764, "atomic-instructions-2"]], "std::mutex And Friends": [[765, "std-mutex-and-friends"]], "std::mutex": [[765, "std-mutex"]], "std::recursive_mutex": [[765, "std-recursive-mutex"]], "std::timed_mutex": [[765, "std-timed-mutex"]], "std::recursive_timed_mutex": [[765, "std-recursive-timed-mutex"]], "Scoped Locking": [[766, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[766, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[766, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[766, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[767, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[767, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[767, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[767, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[767, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[767, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[769, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[769, "overview-std-promise"]], "Overview: std::future": [[769, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[769, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[769, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[769, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[769, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[769, "pro-readability-encapsulate"]], "Atomics On Structures?": [[769, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[769, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[769, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[769, "and-exceptions"]], "std::chrono": [[770, "std-chrono"], [770, "id1"]], "Clock Domains": [[770, "clock-domains"]], "Measuring Time (1)": [[770, "measuring-time-1"]], "Measuring Time (2)": [[770, "measuring-time-2"]], "Sleeping, and Literals": [[770, "sleeping-and-literals"]], "New-Style Union: std::variant": [[771, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[771, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[771, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[771, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[771, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[771, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[771, "and-non-fundamental-types"]], "CRTP": [[773, "crtp"], [778, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[774, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[775, "classic-virtual"]], "Sensor Definitions": [[775, "sensor-definitions"], [777, "sensor-definitions"], [779, "sensor-definitions"], [781, "sensor-definitions"]], "Virtual Access": [[775, "virtual-access"], [777, "virtual-access"], [779, "virtual-access"], [780, "virtual-access"], [781, "virtual-access"], [782, "virtual-access"]], "Average Across Many": [[775, "average-across-many"], [777, "average-across-many"], [779, "average-across-many"], [781, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[776, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[776, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[776, "and-crtp"]], "std::string_view": [[776, "std-string-view"]], "Non-Virtual, But Related": [[777, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[778, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[779, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[780, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[781, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[782, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[783, "why-replace-virtual"]], "Drafts": [[784, "drafts"], [932, "drafts"]], "Exercise: Bag Of Items, By Copy": [[785, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[785, "step-1-insert-find"]], "Step 2: Remove": [[785, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[786, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[786, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[786, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[786, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[787, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[789, "std-filesystem"]], "Paths: Composition, Comparison": [[789, "paths-composition-comparison"]], "Absolute and Relative Paths": [[789, "absolute-and-relative-paths"], [922, "absolute-and-relative-paths"]], "Path Component Access": [[789, "path-component-access"]], "Iterating Over Path Components": [[789, "iterating-over-path-components"]], "Current Working Directory": [[789, "current-working-directory"], [901, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[789, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[789, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[789, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[789, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[789, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[789, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[789, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[790, "the-new-c-11"]], "Generated Topic Graph": [[791, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[793, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[794, "modern-character-devices-slideshow"]], "Source": [[794, null], [797, null], [799, null], [802, null], [804, null], [807, null], [816, null], [818, null], [828, null], [830, null], [841, null], [846, null]], "Character Devices: Problems": [[794, "character-devices-problems"]], "Dynamic Device Numbers": [[794, "dynamic-device-numbers"]], "Device Classes": [[794, "device-classes"]], "Devices": [[794, "devices"]], "Modern Character Devices": [[795, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[796, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[796, "hooks-necessary"]], "Implement open(), read(), write()": [[796, "implement-open-read-write"]], "ioctl()": [[796, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[797, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[797, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[797, "available-methods"]], "open(): Userspace": [[797, "open-userspace"]], "open(): Kernelspace": [[797, "open-kernelspace"]], "ioctl(): Userspace": [[797, "ioctl-userspace"]], "ioctl(): Kernelspace": [[797, "ioctl-kernelspace"]], "ioctl(): Requests": [[797, "ioctl-requests"]], "_IO*() Macros": [[797, "io-macros"]], "_IO*() Macros: Usage": [[797, "io-macros-usage"]], "File Operations on Character Devices": [[798, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[799, "coding-first-functionality-slideshow"]], "Implement Event List": [[799, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[799, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[799, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[800, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[801, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[801, "major-and-minor-numbers"]], "Character Device": [[801, "character-device"]], "Character Device Basics (Slideshow)": [[802, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[802, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[802, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[802, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[802, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[802, "character-device-1"]], "Character Device (2)": [[802, "character-device-2"]], "And User Space?": [[802, "and-user-space"]], "Character Device Basics": [[803, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[804, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[804, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[805, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[806, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[806, "build-module-from-multiple-files"]], "Per-Device Structure": [[806, "per-device-structure"]], "Want My Hair Pretty": [[806, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[806, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[807, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[807, "what-s-bad"]], "Coding: Refactoring": [[808, "coding-refactoring"]], "DMA (Slideshow)": [[809, "dma-slideshow"]], "Address Types": [[809, "address-types"]], "Physical Memory Allocation": [[809, "physical-memory-allocation"]], "DMA Mappings: Overview": [[809, "dma-mappings-overview"]], "Consistent DMA Mappings": [[809, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[809, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[809, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[809, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[809, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[809, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[809, "streaming-mappings-syncing"]], "DMA": [[810, "dma"]], "Building a Fedora Kernel (Screenplay)": [[811, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[811, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[811, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[811, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[812, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[813, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[813, "prerequisite-build-entire-kernel"]], "Build Modules": [[813, "build-modules"]], "Install Modules": [[813, "install-modules"]], "Fedora: Building External Kernel Modules": [[814, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[816, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[816, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[816, "built-in-vs-loadable-module"]], "Minimum Module Source": [[816, "minimum-module-source"]], "Gotchas: init() and exit()": [[816, "gotchas-init-and-exit"]], "Module Build": [[816, "module-build"]], "Minimum Makefile, Building": [[816, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[816, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[816, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[817, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[818, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[818, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[818, "cross-compilation"]], "Cross Compilation Sucks": [[818, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[818, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[818, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[818, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[818, "interlude-io-macros"]], "Request GPIO": [[818, "request-gpio"]], "Request Interrupt": [[818, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[819, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[820, "interrupts-slideshow"]], "Interrupt Facts": [[820, "interrupt-facts"]], "Interrupt Service Routine": [[820, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[820, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[822, "io-memory-slideshow"]], "I/O Memory": [[822, "i-o-memory"]], "I/O Memory: Reservation": [[822, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[822, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[822, "accessing-i-o-memory"]], "IO Memory": [[823, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[824, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[824, "dynamic-memory-kmalloc"], [825, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[824, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[826, "doubly-linked-lists-slideshow"]], "Big Picture": [[826, "big-picture"]], "List Head": [[826, "list-head"]], "Insert a Node": [[826, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[826, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[826, "emptying-a-list"]], "Doubly Linked Lists": [[827, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[828, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[828, "what-do-we-have"]], "Consequences of Not Protecting": [[828, "consequences-of-not-protecting"]], "Protect Event List": [[828, "protect-event-list"]], "Protect Device List": [[828, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[829, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[830, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[830, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[830, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[830, "mutex-locking-1"]], "Mutex: Locking (2)": [[830, "mutex-locking-2"]], "Mutex: Releasing": [[830, "mutex-releasing"]], "Realtime Mutex": [[830, "realtime-mutex"]], "Mutex (and RT Mutex)": [[831, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[832, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[832, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[832, "module-initialization-device-registration"]], "Device Methods": [[832, "device-methods"]], "Kernel Networking Layer Utilities": [[832, "kernel-networking-layer-utilities"]], "Network Devices": [[833, "network-devices"]], "PCI (Slideshow)": [[834, "pci-slideshow"]], "First and Foremost": [[834, "first-and-foremost"]], "PCI Driver Methods": [[834, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[834, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[834, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[834, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[834, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[834, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[834, "dma-support-routines"]], "PCI": [[835, "pci"]], "Process vs.Atomic Context (Slideshow)": [[836, "process-vs-atomic-context-slideshow"]], "Process Context": [[836, "process-context"]], "Atomic Context": [[836, "atomic-context"]], "Atomic vs. Process Context": [[836, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[836, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[837, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[838, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[838, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[838, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[838, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[838, "other-toolchains"]], "Kernel Source": [[838, "kernel-source"]], "Kernel Compilation": [[838, "kernel-compilation"]], "Parameters for the Build": [[838, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[838, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[838, "building-the-kernel-artifacts"]], "Packaging": [[838, "packaging"], [1092, "packaging"]], "Bootloader Artifacts": [[838, "bootloader-artifacts"]], "Module Tree": [[838, "module-tree"]], "Deployment": [[838, "deployment"]], "Variation": [[838, "variation"]], "Raspberry Pi: Building the Kernel": [[839, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[839, "todo-jjj"]], "Sample Code Maintenance": [[840, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[841, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[841, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[841, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[841, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[841, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[842, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[843, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[843, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[843, "spinlock-initialization"]], "Simple Lock/Unlock": [[843, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[843, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[843, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[844, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[845, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[846, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[846, "per-event-timestamp"]], "Discussion: Deferred Events": [[846, "discussion-deferred-events"]], "Add Timer": [[846, "add-timer"]], "Gotcha: Cleanup Running Timer": [[846, "gotcha-cleanup-running-timer"]], "More Gotchas": [[846, "more-gotchas"]], "Coding: Timed Event": [[847, "coding-timed-event"]], "Timer Management (Slideshow)": [[848, "timer-management-slideshow"]], "Original Timer API": [[848, "original-timer-api"]], "jiffies": [[848, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[848, "timer-wheel-methods"]], "Better Documentation": [[848, "better-documentation"]], "Timer Management": [[849, "timer-management"]], "To Do List": [[850, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[851, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[851, "new-ioctl-get-one-event"]], "Getting One Event": [[851, "getting-one-event"]], "copy_to_user()": [[851, "copy-to-user"]], "Userspace Test Program": [[851, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[852, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[852, "address-spaces"]], "Copying To and From Userspace": [[852, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[853, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[854, "waiting-for-something-screenplay"]], "read() Not Implemented": [[854, "read-not-implemented"]], "Implementing read() Naively": [[854, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[854, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[854, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[855, "waiting-for-something-slideshow"]], "Waiting for Something": [[855, "waiting-for-something"], [856, "waiting-for-something"]], "Wait Queues: Initializing": [[855, "wait-queues-initializing"]], "Wait Queue: Waiting": [[855, "wait-queue-waiting"]], "Wait Queue: Waking": [[855, "wait-queue-waking"]], "Workqueue (Screenplay)": [[857, "workqueue-screenplay"]], "Add Workqueue": [[857, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[857, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[857, "cleanup-why-we-did-this-after-all"]], "Finish": [[857, "finish"]], "Workqueue (Slideshow)": [[858, "workqueue-slideshow"]], "Workqueue: Motivation": [[858, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[858, "creating-destroying-a-workqueue"]], "What is Work?": [[858, "what-is-work"]], "Submitting Work": [[858, "submitting-work"]], "Workqueue": [[859, "workqueue"]], "Exercises: Archiving And Compression": [[860, "exercises-archiving-and-compression"]], "gzip": [[862, "gzip"]], "Compression Tools: Comparison": [[863, "compression-tools-comparison"]], "tar": [[864, "tar"]], "Creating And Viewing Archives": [[864, "creating-and-viewing-archives"]], "(De)Compression": [[864, "de-compression"]], "Etiquette": [[864, "etiquette"]], "Option Summary": [[864, "option-summary"]], "Being Creative With The Pipe": [[864, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[865, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[865, "precondition-logged-in-to-remote-exam-computer"], [866, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[865, "create-exam-skeleton-5-points"], [866, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[865, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[865, "public-place-10-points"], [866, "public-place-10-points"]], "Private Place (10 Points)": [[865, "private-place-10-points"], [866, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[865, "shared-file-in-public-place-10-points"], [866, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[865, "make-a-backup-of-exam-01-15-points"], [866, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[866, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[866, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[867, "exercises-exams-linux-basics"]], "Linux Basics": [[868, "linux-basics"]], "Everything Is A File (Live Demo)": [[869, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[869, "simple-is-beautiful"]], "Ok: a File is a File": [[869, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[869, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[869, "pseudo-terminals"]], "Disks and Partitions": [[869, "disks-and-partitions"]], "/proc and /sys": [[869, "proc-and-sys"]], "Pseudo Devices": [[869, "pseudo-devices"]], "Environment (Variables)": [[870, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[870, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[870, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[870, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[871, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[871, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[871, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[873, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[873, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[873, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[873, "and-after-successful-authentication"]], "Impersonation": [[873, "impersonation"]], "Logged In, Finally": [[873, "logged-in-finally"]], "User Space, Kernel Space?": [[874, "user-space-kernel-space"]], "User Space: Abstractions": [[874, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[874, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[874, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[875, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[875, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[875, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[875, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[875, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[875, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[875, "process-attributes-groups"]], "Processes: More Attributes": [[875, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[876, "process-hierarchy-parent-child-process"]], "More Process Rules": [[876, "more-process-rules"]], "Typical Process Tree": [[876, "typical-process-tree"]], "Services, init": [[876, "services-init"]], "Windows Subsystem for Linux (WSL)": [[877, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[877, null]], "More Links": [[877, "more-links"]], "My $0.02": [[877, "my-0-02"]], "WSL, Finally": [[877, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[878, "exercises-io-redirection-pipes"]], "I/O Redirection": [[880, "i-o-redirection"]], "Standard I/O Streams": [[880, "standard-i-o-streams"]], "I/O Redirection Operators": [[880, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[880, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[880, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[880, "example-standard-error-redirection"]], "Example: Everything Redirection": [[880, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[881, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[881, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[881, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[881, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[881, "more-tricks"]], "Pipes": [[882, "pipes"]], "Why Pipes?": [[882, "why-pipes"]], "Pipe Facts": [[882, "pipe-facts"]], "Pipe Examples": [[882, "pipe-examples"]], "More Pipe Examples": [[882, "more-pipe-examples"]], "Named Pipes": [[882, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[883, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[883, "owner-and-permissions"]], "A Simple Example": [[883, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[883, null]], "Permission Check: User": [[883, "permission-check-user"]], "Permission Check: Group": [[883, "permission-check-group"]], "Permission Check: Others": [[883, "permission-check-others"]], "Programs: Execute Permissions": [[883, "programs-execute-permissions"]], "Directory Permissions": [[883, "directory-permissions"]], "Permission Bits, octal": [[883, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[883, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[883, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[884, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[885, "fh-moodle-quiz-permissions"], [886, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[887, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[888, "exercise-create-private-directory"]], "Question: Private Directory": [[889, "question-private-directory"]], "Exercise: Create Public Directory": [[890, "exercise-create-public-directory"]], "Question: Public Directory": [[891, "question-public-directory"]], "Exercise: Create Group-Shared File": [[892, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[894, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[894, "problem-change-my-password"]], "Solution: Set-UID Bit": [[894, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[894, "set-uid-how-does-it-work"]], "Command: chmod": [[894, "command-chmod"]], "Set-UID Is Not A Toy!": [[894, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[895, "setuid-live-demo"]], "Real and Effective User ID": [[895, "real-and-effective-user-id"]], "Sample Program": [[895, "sample-program"]], "Set-UID jfasch?": [[895, "set-uid-jfasch"]], "Set-UID root? Danger!": [[895, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[896, "ugly-hack-sticky-bit"]], "Sticky Bit": [[896, "sticky-bit"]], "Default Permissions: umask": [[897, "default-permissions-umask"]], "Default Permissions - umask": [[897, "id1"]], "umask: How Does it Work?": [[897, "umask-how-does-it-work"]], "Shape (1)": [[898, "shape-1"]], "Shape (2)": [[898, "shape-2"]], "Options": [[898, "options"], [927, "options"]], "Help and Manual": [[898, "help-and-manual"]], "Man Pages: Navigation": [[898, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[898, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[898, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[898, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[898, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[898, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[899, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[899, "what-s-volatile"]], "Copying: cp": [[900, "copying-cp"]], "Option Overview": [[900, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[900, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[900, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[900, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[900, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[900, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[901, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[901, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[902, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[903, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[904, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[905, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[906, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[907, "exercise-mkdir"]], "Exercise: Funny Stuff": [[908, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[909, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[910, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[911, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[912, "the-shell-exercises"]], "Exercise: File Types in /dev": [[913, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[914, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[915, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[916, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[917, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[917, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[917, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[917, "creating-an-empty-file-touch"]], "Removing A File: rm": [[917, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[917, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[919, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[920, "directory-listings-the-ls-command"]], "Many Options": [[920, "many-options"]], "Hidden Files": [[920, "hidden-files"]], "File Types": [[920, "file-types"]], "Moving and Renaming: mv": [[921, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[921, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[921, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[921, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[922, "path-separator"]], "Relative Paths": [[922, "relative-paths"]], "Absolute Paths": [[922, "absolute-paths"]], "Special Paths": [[922, "special-paths"]], "cat": [[923, "cat"], [923, "id1"]], "cut": [[924, "cut"], [924, "id1"]], "Exercises: Inspecting Text Files": [[925, "exercises-inspecting-text-files"]], "find": [[926, "find"]], "Directories durchsuchen mit find": [[926, "directories-durchsuchen-mit-find"]], "find: Optionen": [[926, "find-optionen"]], "find: Beispiele": [[926, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[926, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[926, "find-verknupfungen-beispiele"]], "grep": [[927, "grep"]], "Searching With grep": [[927, "searching-with-grep"]], "More About Regular Expressions": [[927, "more-about-regular-expressions"]], "head And tail": [[929, "head-and-tail"]], "head": [[929, "head"]], "tail": [[929, "tail"]], "head And tail In The Pipe": [[929, "head-and-tail-in-the-pipe"]], "less": [[930, "less"]], "Paging Files Using less": [[930, "paging-files-using-less"]], "Help Screen (Enter With h)": [[930, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[931, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[931, "stdin-stdout-examples"]], "Pipe: Examples": [[931, "pipe-examples"]], "Basics Text Tools": [[931, "basics-text-tools"]], "Yocto": [[933, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[935, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[935, null]], "Electronic Speed Controller (ESC)": [[935, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[935, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[935, "the-command-protocol-and-calibration"]], "Driving the Motor": [[935, "driving-the-motor"]], "CAN/Linux Basics": [[936, "can-linux-basics"]], "Why This Talk?": [[936, "why-this-talk"]], "Network Programming: Datagram Exchange": [[936, "network-programming-datagram-exchange"]], "And CAN?": [[936, "and-can"]], "One CAN Network Packet \u2026": [[936, "one-can-network-packet"]], "CAN Interfaces": [[937, "can-interfaces"]], "CAN-Interface: Configuration": [[937, "can-interface-configuration"]], "CAN Utils": [[937, "can-utils"]], "CAN Utils: Usage (1)": [[937, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[937, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[937, "vcan-virtual-can-bus"]], "Programming": [[938, "programming"]], "CAN Programming": [[938, "can-programming"]], "CAN in C - Socket, Interface Index": [[938, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[938, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[938, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[938, "can-in-c-frames-2"]], "CAN in Python - Frames": [[938, "can-in-python-frames"]], "Hardware, Kernel": [[939, "hardware-kernel"]], "MCP2515: Schematic": [[939, "mcp2515-schematic"]], "MCP2515: Soldering": [[939, "mcp2515-soldering"]], "MCP2515: SPI": [[939, "mcp2515-spi"]], "MCP2515: Raspberry": [[939, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[940, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[941, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[942, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[942, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[942, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[942, null]], "Enable Userspace I2C": [[942, "enable-userspace-i2c"]], "Slave Device: LM73": [[942, "slave-device-lm73"]], "Datasheet etc.": [[942, null]], "Optional: Address Selection": [[942, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[942, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[942, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[942, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[942, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[942, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[942, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[942, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[943, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[943, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[943, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[943, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[943, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[944, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[944, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[944, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[944, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[944, null]], "Wiring: Attach DS2482-800 via I2C": [[944, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[944, "configure-software"]], "Enable I2C, and Check": [[944, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[944, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[944, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[944, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[944, "over-engineering-beauty"]], "Hardware Bringup": [[944, "hardware-bringup"]], "Device Usage": [[944, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[944, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[944, "using-the-device"]], "As a Generic OneWire Device": [[944, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[944, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[944, "lm-sensors"]], "OneWire Caveats": [[944, "onewire-caveats"]], "Bus Topology": [[944, "bus-topology"]], "Error Symptoms": [[944, "error-symptoms"]], "SSH: Basics": [[945, "ssh-basics"]], "Login": [[945, "login"]], "Exit Status, stdin, stdout: Scripting": [[945, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[946, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[947, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[948, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[949, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[951, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[951, "local-setup-key-generation"]], "Key Pair?": [[951, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[951, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[952, "ssh-links"]], "SSH: Port Forwarding": [[953, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[953, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[953, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[953, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[953, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[953, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[954, "ssh-secure-copy-scp"]], "What Is That?": [[954, "what-is-that"]], "Copy Single File From Local To Remote": [[954, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[954, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[954, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[954, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[954, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[954, "more-options"]], "SSH File System (sshfs)": [[955, "ssh-file-system-sshfs"]], "What Is It?": [[955, "what-is-it"]], "Why Is It?": [[955, "why-is-it"]], "Example Situation: The Raspi": [[955, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[955, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[955, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[955, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[955, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[956, "the-errno-variable"]], "errno Is A Global Variable": [[956, "errno-is-a-global-variable"]], "Helper Functions": [[956, "helper-functions"]], "Linux Systems Programming: Basics": [[957, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[958, "system-calls-vs-library-functions"]], "System Calls": [[958, "system-calls"]], "System Calls And The C-Library": [[958, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[958, "library-function-or-system-call"]], "Manual Pages": [[958, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[959, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[959, null]], "Solution: This Is What An Operating System Is There For": [[959, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[960, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[960, null], [961, null], [962, null], [1144, "see-also"]], "Abstractions": [[960, "abstractions"], [961, "abstractions"], [962, "abstractions"]], "Simplicity": [[960, "simplicity"], [961, "simplicity"], [962, "simplicity"]], "Build, Run, Look": [[960, "build-run-look"], [961, "build-run-look"], [962, "build-run-look"]], "Watch: Run Under strace Supervision": [[960, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[961, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[961, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[962, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[962, "setup-a-timer"]], "Blocking I/O: What Is That?": [[963, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[964, "file-i-o-basics"]], "File Descriptors": [[964, "file-descriptors"]], "Standard Filedescriptors": [[964, "standard-filedescriptors"]], "File I/O: System Calls": [[964, "file-i-o-system-calls"]], "open()": [[964, "open"]], "open() Flags": [[964, "open-flags"]], "read()": [[964, "read"]], "write()": [[964, "write"]], "File Offset: lseek()": [[964, "file-offset-lseek"]], "The Rest: ioctl()": [[964, "the-rest-ioctl"]], "Exercise: Copy A File": [[965, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[965, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[965, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[965, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[965, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[965, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[966, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[967, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[967, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[967, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[967, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[967, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[967, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[967, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[968, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[968, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[968, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[968, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[969, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[969, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[969, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[969, "error-file-exists"]], "O_RDONLY: Reading a File": [[970, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[970, "me-and-etc-passwd"]], "Code: Reading A File": [[970, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[970, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[970, "error-file-not-readable"]], "Error: File Not Even There": [[970, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[971, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[971, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[971, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[971, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[971, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[972, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[972, "onewire-basics"]], "Program": [[972, "program"], [1125, "program"]], "Test On The Target Machine": [[972, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[974, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[974, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[974, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[974, "truncating-files"]], "File Descriptors - Allocation": [[974, "file-descriptors-allocation"]], "Linux Systems Programming": [[975, "linux-systems-programming"], [1205, "linux-systems-programming"]], "Get Value Of GPIO": [[976, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[976, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[976, "shell-script"]], "C Program": [[976, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[977, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[978, "intro-sysfs-gpio"]], "sysfs?": [[978, "sysfs"]], "General Purpose IO (GPIO)": [[978, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[978, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[978, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[979, "interrupts-in-userspace"]], "Manual Configuration": [[979, "manual-configuration"]], "C Program: Configuration, Event Loop": [[979, "c-program-configuration-event-loop"]], "Why Threads?": [[980, "why-threads"]], "Typical Uses": [[980, "typical-uses"]], "Legal (1)": [[980, "legal-1"]], "Legal (2)": [[980, "legal-2"]], "POSIX Thread API": [[980, "posix-thread-api"]], "Thread Life Cycle": [[981, "thread-life-cycle"], [981, "id1"]], "Thread Creation": [[981, "thread-creation"]], "Thread Termination (1)": [[981, "thread-termination-1"]], "Thread Termination (2)": [[981, "thread-termination-2"]], "Exit Status, pthread_join()": [[981, "exit-status-pthread-join"]], "Detached Threads": [[981, "detached-threads"]], "Thread ID": [[981, "thread-id"]], "Scheduled Entities (1)": [[981, "scheduled-entities-1"]], "Scheduled Entities (2)": [[981, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[982, "thread-creation-race-condition"]], "Synchronization": [[983, "synchronization"]], "Race Conditions (1)": [[983, "race-conditions-1"]], "Race Conditions (2)": [[983, "race-conditions-2"]], "Mutex (1)": [[983, "mutex-1"]], "Mutex (2)": [[983, "mutex-2"]], "Mutex (3)": [[983, "mutex-3"]], "Mutex Types": [[983, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[984, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[985, "communication-condition-variable"]], "Condition Variable (1)": [[985, "condition-variable-1"]], "Condition Variable (2)": [[985, "condition-variable-2"]], "Condition Variable: wait()": [[985, "condition-variable-wait"]], "Condition Variable: signal()": [[985, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[985, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[985, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[985, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[985, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[985, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[986, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[987, "one-time-initialization-1"]], "One-Time Initialization (2)": [[987, "one-time-initialization-2"]], "One-Time Initialization (3)": [[987, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[987, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[988, "last-warning-1"]], "Last Warning (2)": [[988, "last-warning-2"]], "Last Warning (3)": [[988, "last-warning-3"]], "Trylock/islocked": [[990, "trylock-islocked"]], "Process: Arguments, Exit Status": [[991, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[991, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[991, "the-shell-a-programming-language"]], "Exit Status": [[991, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[991, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[991, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[991, "argument-vector-int-argc-char-argv"]], "Processes": [[992, "processes"]], "The Process Tree (And Environment, And procfs)": [[993, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[993, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[993, "system-calls-getpid-getppid"]], "Environment Variables": [[993, "environment-variables"]], "Scheduling (and Multitasking)": [[994, "scheduling-and-multitasking"]], "Fairness Criteria": [[994, "fairness-criteria"]], "CPU bound vs. I/O bound": [[994, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[994, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[994, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[996, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[996, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[996, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[996, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[996, "id1"]], "Threads Are Great: More Functionality": [[996, "threads-are-great-more-functionality"]], "Are Threads Great?": [[996, "are-threads-great"]], "Stability Considerations": [[996, "stability-considerations"]], "Processes, Address Spaces": [[996, "processes-address-spaces"]], "Stabilizing": [[996, "stabilizing"]], "Scheduling: Exam Questions": [[997, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[998, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[998, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[998, "enter-realtime-definition"]], "Realtime on Linux": [[998, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[998, "demo-measuring-wakeup-latency"]], "Immediately?": [[998, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[998, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[999, "realtime-api"]], "Scheduling Policies": [[999, "scheduling-policies"]], "Scheduling Priorities": [[999, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[999, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[999, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[999, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[999, "scheduling-threads-2"]], "Priority Inversion": [[999, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[999, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[1000, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[1000, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[1000, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[1000, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[1000, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[1001, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[1002, "screenplay-sysprog-posix-ipc"], [1005, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[1002, "select-on-device-files"]], "Sysprog: Events": [[1003, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[1004, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1005, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1005, "posix-shared-memory"]], "Create Shared Memory Segment": [[1005, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1005, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1005, "consume-from-shared-memory"]], "POSIX Semaphores": [[1005, "posix-semaphores"]], "Create Semaphore": [[1005, "create-semaphore"]], "Wait": [[1005, "wait"]], "Post": [[1005, "post"]], "POSIX Message Queues": [[1005, "posix-message-queues"]], "Create": [[1005, "create"]], "Produce": [[1005, "produce"]], "Consume": [[1005, "consume"]], "Slides: Sysprog: POSIX IPC": [[1006, "slides-sysprog-posix-ipc"]], "Slideshow": [[1006, null], [1010, null]], "History: Two IPC Variants": [[1006, "history-two-ipc-variants"]], "Object Names": [[1006, "object-names"]], "File Semantics": [[1006, "file-semantics"]], "Message Queues": [[1006, "message-queues"]], "Open/Create: mq_open()": [[1006, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[1006, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[1006, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[1006, "notification-mq-notify"]], "Message Queues are Files": [[1006, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[1006, "message-queue-filesystem-mqueue"]], "Semaphores": [[1006, "semaphores"]], "Open/Create: sem_open()": [[1006, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1006, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1006, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1006, "semaphores-are-files"]], "Shared Memory (1)": [[1006, "shared-memory-1"]], "Shared Memory (2)": [[1006, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1006, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1007, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1008, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1009, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1009, "barebones-naive-program"]], "Signal Handler": [[1009, "signal-handler"]], "Alarm": [[1009, "alarm"]], "Alarm (Louder)": [[1009, "alarm-louder"]], "Synchronous Delivery": [[1009, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1009, "innocent-multithreaded-program"]], "Add SIGALRM": [[1009, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1010, "slides-sysprog-signals"]], "Example Signals": [[1010, "example-signals"]], "Terminology": [[1010, "terminology"]], "Default Actions": [[1010, "default-actions"]], "Important Signals": [[1010, "important-signals"]], "Sending, Commandline": [[1010, "sending-commandline"]], "Sending Signals, Programmatically": [[1010, "sending-signals-programmatically"]], "Warning!": [[1010, "warning"]], "Blocking Signals: Signal Mask": [[1010, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1010, "signal-mask-manipulation"]], "Pending Signals": [[1010, "pending-signals"]], "Signal Set: sigset_t": [[1010, "signal-set-sigset-t"]], "Signal Handlers": [[1010, "signal-handlers"]], "Installing a Signal Handler (1)": [[1010, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1010, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1010, "effects-of-signal-delivery"]], "Last Warning!": [[1010, "last-warning"]], "WTF Async Signal Safe?": [[1010, "wtf-async-signal-safe"]], "Exercise: Signals": [[1010, "exercise-signals"]], "Sysprog: Signals": [[1011, "sysprog-signals"]], "Toolchain: Basics": [[1012, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1012, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1012, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[1012, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1012, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1012, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1012, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1012, "recap-toolchain"]], "CMake: Cross Build": [[1013, "cmake-cross-build"]], "Cross Build: Parameters": [[1013, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1013, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1013, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1013, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1013, "step-2-build-using-make"], [1014, "step-2-build-using-make"]], "CMake: Local Build": [[1014, "cmake-local-build"]], "make: Problems": [[1014, "make-problems"]], "CMake To The Rescue": [[1014, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1014, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1014, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1014, "goodie-dependency-management"]], "Native Compilation": [[1015, "native-compilation"]], "Cross?": [[1015, "cross"]], "The sysroot": [[1015, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1017, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[1018, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[1019, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1020, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1021, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1022, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1023, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1024, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1024, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1024, "create-a-sysroot"]], "Patience!": [[1024, null]], "Test Cross Build": [[1024, "test-cross-build"]], "What We Have": [[1024, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1024, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1024, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1026, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1026, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1026, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1026, "create-docker-volume"]], "Container Work": [[1026, "container-work"]], "Command To Run Container On Volumes": [[1026, "command-to-run-container-on-volumes"]], "Setup container": [[1026, "setup-container"]], "Install autoconf 2.71": [[1026, "install-autoconf-2-71"]], "Install crosstool-ng": [[1026, "install-crosstool-ng"]], "Build Toolchain": [[1026, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1026, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1026, "create-toolchain-archive"]], "Install Toolchain On Host": [[1026, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1027, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1027, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1027, "establish-cmake-toolchain-file"]], "Test Run": [[1027, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1028, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1028, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1028, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1028, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1028, "complication-modification-tracking"]], "Enter Makefiles": [[1028, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1029, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1029, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1029, "and-dynamic-libraries"]], "Relocations": [[1029, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1029, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1029, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1029, "and-build-dependencies"]], "And Runtime Dependencies?": [[1029, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1029, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1029, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1029, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1030, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1030, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1030, "code-bases-become-larger-2"]], "Problem: Structure": [[1030, "problem-structure"]], "Build Instructions: Building A Library": [[1030, "build-instructions-building-a-library"]], "Closures": [[1031, "closures"]], "Today": [[1031, "today"]], "def is a Statement": [[1031, "def-is-a-statement"]], "Functions That Create Functions": [[1031, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1031, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1031, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1031, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1031, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1031, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1032, "intro"]], "Simplest: List Comprehension": [[1032, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1033, "context-managers-the-with-statement"]], "Example: Open File": [[1033, "example-open-file"]], "Example: Temporary Directory": [[1033, "example-temporary-directory"]], "Example: Multiple with Items": [[1033, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1033, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1033, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1033, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1033, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1034, "decorators"]], "The Ominous \u201c@\u201d": [[1034, "the-ominous"]], "Decorators Overview": [[1034, "decorators-overview"]], "A Simple Minded Function": [[1034, "a-simple-minded-function"]], "Decorator Basics": [[1034, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1034, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1034, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1034, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1034, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1034, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1035, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1035, "catching-exceptions-by-type"]], "Exception Objects": [[1035, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1035, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1035, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1035, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1035, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1035, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1035, "raising-exceptions"]], "Re-Raising Exceptions": [[1035, "re-raising-exceptions"]], "User-Defined Exceptions": [[1035, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1035, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1035, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1035, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1036, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1036, "dictionaries-everywhere-context"]], "Enter exec()": [[1036, "enter-exec"]], "exec(), and Context": [[1036, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1036, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1037, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1038, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1038, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1038, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1038, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1038, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1038, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1038, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1038, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1039, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1039, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1039, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1039, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1039, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1039, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1040, "the-iterator-protocol"], [1040, "id1"]], "Iteration in Python": [[1040, "iteration-in-python"]], "What\u2019s an Iterator?": [[1040, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1040, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1040, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1040, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1040, "generators-motivation"]], "Generators: How?": [[1040, "generators-how"]], "Observations": [[1040, "observations"]], "Iteration, Generators, And yield": [[1041, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1042, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1043, "modules-are-objects"]], "Other Forms (1)": [[1043, "other-forms-1"]], "Other Forms (2)": [[1043, "other-forms-2"]], "Packages": [[1043, "packages"]], "Executing Modules as Scripts": [[1043, "executing-modules-as-scripts"]], "Package Structure": [[1043, "package-structure"]], "Relative Imports (1)": [[1043, "relative-imports-1"]], "Relative Imports (2)": [[1043, "relative-imports-2"]], "Multithreading (Python)": [[1044, "multithreading-python"]], "What\u2019s a Thread?": [[1044, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1044, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1044, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1044, "and-program-termination"]], "Daemon Threads": [[1044, "daemon-threads"]], "Race Conditions, and Mutexes": [[1046, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1046, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1046, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1046, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1046, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1047, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1048, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1048, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1048, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1048, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1048, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1048, "abtract-base-class"]], "Classes And Dictionaries": [[1049, "classes-and-dictionaries"]], "Facts Up-Front": [[1049, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1049, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1049, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1049, "attributes"], [1162, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1049, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1049, "dynamic-attribute-access"]], "Constructor": [[1050, "constructor"]], "And self?": [[1050, "and-self"]], "Interrelationships": [[1051, "interrelationships"]], "Extending Existing Classes": [[1052, "extending-existing-classes"]], "Additional Feature: Salary": [[1052, "additional-feature-salary"]], "Want Manager": [[1052, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1052, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1052, "isinstance"]], "issubclass()": [[1052, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1052, "add-str-creatively-after-the-fact"]], "Object Methods": [[1053, "object-methods"]], "Class Methods (@classmethod)": [[1053, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1053, "static-methods-staticmethod"]], "collections.namedtuple": [[1054, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1054, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1054, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1054, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1055, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1055, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1055, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1055, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1055, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1055, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1055, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1055, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1055, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1055, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1056, "readonly-attributes"]], "And Write Access?": [[1056, "and-write-access"]], "Calculated Attributes": [[1056, "calculated-attributes"]], "str() And repr()": [[1057, "str-and-repr"]], "Stringification And Representation": [[1057, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1057, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1058, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1058, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1058, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1058, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1058, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1058, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1058, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1058, "use-case-a-better-print"]], "The Python Programming Language": [[1061, "the-python-programming-language"]], "A Little Bit of History": [[1061, "a-little-bit-of-history"]], "Guido Van Rossum": [[1061, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1062, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1062, "hello-world-script-files"]], "Running Python Programs": [[1063, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1063, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1063, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1063, "the-unix-way-running"]], "The Doze Way: Registry": [[1063, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1064, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1064, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1064, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1065, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1065, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1065, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1065, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1065, null]], "Variables (1)": [[1066, "variables-1"]], "Variables (2)": [[1066, "variables-2"]], "Integer Numbers: Comparison": [[1067, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1067, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1067, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1067, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1067, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1067, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1067, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1067, "strings-python-3"]], "Python 3, Generally": [[1067, "python-3-generally"]], "Boolean Values": [[1069, "boolean-values"]], "Boolean Operators": [[1069, "boolean-operators"]], "The if Statement": [[1070, "the-if-statement"], [1070, "id1"]], "Looping Constructs": [[1071, "looping-constructs"]], "Esoteric Feature: while/else": [[1071, "esoteric-feature-while-else"]], "Sequence Elements": [[1072, "sequence-elements"]], "Sequence Multiplication": [[1072, "sequence-multiplication"]], "Indexing (1)": [[1073, "indexing-1"]], "Indexing (2)": [[1073, "indexing-2"]], "Slicing: Cutting Out": [[1073, "slicing-cutting-out"]], "Slicing: Step Width": [[1073, "slicing-step-width"]], "Iteration over \u2026 Something": [[1074, "iteration-over-something"]], "break, continue, else": [[1074, "break-continue-else"]], "Iteration over Numbers: range()": [[1075, "iteration-over-numbers-range"]], "range(): Definition": [[1075, "range-definition"]], "range(): Python 2 vs. Python 3": [[1075, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1076, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1076, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1076, "immutability-tuples"]], "Mutability: Lists (1)": [[1076, "mutability-lists-1"]], "Mutability: Lists (2)": [[1076, "mutability-lists-2"]], "Shallow Copy": [[1076, "shallow-copy"]], "Deep Copy": [[1076, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1077, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1077, "undefined-variable"]], "Local Variable": [[1077, "local-variable"]], "Local and Global Variable With Same Name": [[1077, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1077, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1078, "functions-slideshow"]], "Why Functions?": [[1078, "why-functions"]], "Mutable Default Parameters: Attention!": [[1078, "mutable-default-parameters-attention"]], "String Delimiters": [[1080, "string-delimiters"]], "Escape Sequences": [[1080, "escape-sequences"]], "More String Tricks": [[1080, "more-string-tricks"]], "C-Style Formatting (1)": [[1081, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1081, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1081, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1081, "c-style-formatting-examples"]], "The format Method": [[1081, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1081, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1082, "batteries-included-checks"]], "Batteries Included: Search": [[1082, "batteries-included-search"]], "Substring Search: Examples": [[1082, "substring-search-examples"]], "Split and Join (1)": [[1082, "split-and-join-1"]], "Split and Join (2)": [[1082, "split-and-join-2"]], "List Access": [[1083, "list-access"]], "List Methods: Examples": [[1083, "list-methods-examples"]], "Dictionary Access": [[1084, "dictionary-access"]], "Examples: Simple Access": [[1084, "examples-simple-access"]], "Examples: Shortcuts": [[1084, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1084, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1084, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1085, "operations-on-sets-1"]], "Operations on Sets (2)": [[1085, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1086, "python-2-vs-python-3"]], "Opening Files": [[1086, "opening-files"]], "Reading Files": [[1086, "reading-files"]], "Reading Files: Pythonic": [[1086, "reading-files-pythonic"]], "Writing Files (1)": [[1086, "writing-files-1"]], "Writing Files (2)": [[1086, "writing-files-2"]], "File Modes": [[1086, "file-modes"]], "Text vs. Binary Mode": [[1086, "text-vs-binary-mode"]], "Standard Streams": [[1086, "standard-streams"]], "Function Objects": [[1087, "function-objects"]], "What\u2019s a Function?": [[1087, "what-s-a-function"]], "Function Objects?": [[1087, "id1"]], "Function Objects! (1)": [[1087, "function-objects-1"]], "Function Objects! (2)": [[1087, "function-objects-2"]], "Commandline Parsing with argparse": [[1088, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1088, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1088, "handling-named-arguments-interval"]], "asyncio": [[1089, "asyncio"], [66, "asyncio"]], "Python: Draft Topics": [[1090, "python-draft-topics"]], "Matplotlib": [[1091, "matplotlib"]], "Axis Ranges": [[1091, "axis-ranges"]], "Package Installation (setuptools)": [[1092, "package-installation-setuptools"]], "Files": [[1092, "files"]], "Test \u201cInstallation\u201d": [[1092, "test-installation"]], "Source Distribution": [[1092, "source-distribution"]], "Manifest": [[1092, "manifest"]], "Installing From Wheel File": [[1092, "installing-from-wheel-file"]], "Publishing On PyPI": [[1092, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1093, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1094, "exercise-read-csv-file"]], "Sample CSV File": [[1094, "sample-csv-file"]], "CSV and Databases": [[1095, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1097, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1098, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1099, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1100, "exercises-external"]], "Exercise: Swap Two Variables": [[1102, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1103, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1104, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1105, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1106, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1107, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1108, "exercise-primeness-for"]], "Exercises (Legacy)": [[1109, "exercises-legacy"]], "Exercise: Functions: join()": [[1110, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1112, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1113, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1114, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1115, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1115, null]], "Implementation Strategy": [[1115, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1116, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1117, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1118, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1119, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1120, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1121, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1122, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1123, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1124, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1124, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1124, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1125, "exercise-basic-sensor"]], "Specification, And Setup": [[1125, "specification-and-setup"]], "Verification": [[1125, "verification"]], "Unit Test": [[1125, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1126, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1126, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1127, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1128, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1128, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1129, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1130, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1131, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1132, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1132, "test-code"], [1133, "test-code"], [1134, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1133, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1134, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1135, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1136, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1136, "sample-trainings"]], "More Information": [[1136, "more-information"]], "Python Links": [[1137, "python-links"]], "Advanced Python": [[1137, "advanced-python"], [1198, "advanced-python"]], "David Beazley": [[1137, "david-beazley"]], "Raymond Hettinger": [[1137, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1138, "machine-learning-artificial-intelligence"]], "K-Means": [[1139, "k-means"]], "Topic Overview": [[1139, "topic-overview"], [1143, "topic-overview"]], "Artifacts": [[1139, "artifacts"]], "Topic Dependencies": [[1139, "topic-dependencies"], [1143, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1140, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1141, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1142, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1142, "pandas.DataFrame"]], "Reading Data": [[1142, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1142, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1142, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1142, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1142, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1142, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1142, "Verify-the-Model"]], "Linear Regression": [[1143, "linear-regression"]], "Running Code": [[1143, "running-code"]], "Dataset": [[1143, "dataset"]], "Machine Learning: Concepts and Terminology": [[1144, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1144, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1144, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1144, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1144, "types-of-machine-learning"]], "Problems Solved": [[1144, "problems-solved"], [1166, "problems-solved"], [1173, "problems-solved"]], "CSV Files": [[1145, "csv-files"]], "CSV in its Origins": [[1145, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1145, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1145, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1145, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1145, "more-tuning-needed-quoting"]], "Tuning Options": [[1145, "tuning-options"]], "And Headings?": [[1145, "and-headings"]], "Enter csv.DictReader": [[1145, "enter-csv-dictreader"]], "DBAPI 2": [[1146, "dbapi-2"]], "Database Interfaces": [[1146, "database-interfaces"]], "DBAPI 2.0": [[1146, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1146, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1146, "caveat-isolation"]], "Databases": [[1147, "databases"]], "DBAPI 2: PostgreSQL": [[1148, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1148, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1149, "dbapi-2-sqlite3"]], "SQLite3": [[1149, "sqlite3"]], "SQLite3 Connection": [[1149, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1149, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1149, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1149, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1149, "sqlite3-bind-parameters"]], "ASCII": [[1150, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1150, "iso-latin-1-iso-8859-1"]], "And Python?": [[1150, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1150, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1150, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1150, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1150, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1150, "and-jorg-2"]], "Enter UTF-8": [[1150, "enter-utf-8"]], "Boundary Code": [[1150, "boundary-code"]], "Ah Yes: decode()": [[1150, "ah-yes-decode"]], "And Source Encoding?": [[1150, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1151, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1152, "the-import-statement-incomplete"]], "Server/Broker": [[1153, "server-broker"]], "Starting the Service": [[1153, "starting-the-service"]], "Publishing a Message in Python": [[1153, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1153, "subscribing-a-topic-in-python"]], "Message Payload?": [[1153, "message-payload"]], "Pandas: Adding Rows": [[1154, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1154, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1154, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1154, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1155, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1155, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1155, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1155, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1155, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1155, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1155, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1156, "pandas-filters"]], "Basic Filter Example": [[1156, "basic-filter-example"]], "Filter? Bitmap!": [[1156, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1156, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1156, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1156, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1156, "negation"]], "Neat Helpers": [[1156, "neat-helpers"]], "Random Material": [[1157, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1158, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1158, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1158, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1158, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1158, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1159, "pandas-indexes"]], "Default Index: Row Number": [[1159, "default-index-row-number"]], "Setting Custom Index": [[1159, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1159, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1159, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1159, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1159, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1160, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1160, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1160, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1160, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1160, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1161, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1161, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1161, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1161, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1161, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1161, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1162, "xml-elementtree-etree"]], "SAX and DOM": [[1162, "sax-and-dom"]], "ElementTree": [[1162, "elementtree"]], "A Very Simple Document": [[1162, "a-very-simple-document"]], "Text (1)": [[1162, "text-1"]], "Text (2)": [[1162, "text-2"]], "Writing XML Documents": [[1162, "writing-xml-documents"]], "Reading XML Documents": [[1162, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1163, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1164, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1165, "python-package-index-livehacking-screenplay"]], "Invocation": [[1165, "invocation"]], "Help": [[1165, "help"]], "Most Used Subcommands": [[1165, "most-used-subcommands"]], "Subcommand Help": [[1165, "subcommand-help"]], "System vs. User": [[1165, "system-vs-user"]], "Search": [[1165, "search"]], "Python Package Index (Slideshow)": [[1166, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1166, "python-package-index-pypi"]], "Python Package Index": [[1167, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1168, "packaging-pypi-upload-link-collection"]], "PyTest": [[1169, "pytest"]], "pytest Introduction, By Example": [[1170, "pytest-introduction-by-example"]], "Sample Project Structure": [[1170, "sample-project-structure"]], "pytest: Installation, Documentation": [[1170, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1170, "and-pythonpath"]], "A Simple Test": [[1170, "a-simple-test"]], "Failing Tests": [[1170, "failing-tests"]], "A More Realistic Example": [[1170, "a-more-realistic-example"]], "Fixtures": [[1170, "fixtures"]], "Temporary Test Directory": [[1170, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1170, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1171, "the-unittest-module"]], "Simplest Example": [[1171, "simplest-example"]], "Using a Fixture": [[1171, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1171, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1171, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1171, "the-meat-of-a-test"]], "Recommendations": [[1171, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1172, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1172, "first-help"]], "Local Package Installation": [[1172, "local-package-installation"]], "Freezing an Environment": [[1172, "freezing-an-environment"]], "Destroying an Environment": [[1172, "destroying-an-environment"]], "Recreating an Environment": [[1172, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1172, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1173, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1173, "virtual-environments-links"]], "Virtual Environments": [[1174, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1176, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1177, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1177, "before-we-start"]], "Simplest Test: No Test": [[1177, "simplest-test-no-test"]], "Next Simplest: Single File": [[1177, "next-simplest-single-file"]], "Executing Tests Selectively": [[1177, "executing-tests-selectively"]], "Fatal Failure": [[1177, "fatal-failure"]], "FAIL()": [[1177, "fail"]], "ASSERT_*()": [[1177, "assert"]], "Non-Fatal Failure": [[1177, "non-fatal-failure"]], "Custom Message Output": [[1177, "custom-message-output"]], "Last Not Least: Structure": [[1177, "last-not-least-structure"]], "Test Cases and Suites": [[1177, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1178, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1179, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1179, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1179, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1179, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1179, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1180, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1181, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1182, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1182, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1182, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1182, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1183, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1184, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1184, null]], "Buchung": [[1184, "buchung"]], "Kursgestaltung": [[1184, "kursgestaltung"]], "\u00dcbungen": [[1184, "ubungen"]], "Unterlagen & Download": [[1184, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1185, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1185, "grub-0-97"]], "Cross Systeme Bauen": [[1185, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1185, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1185, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1186, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1186, "zielpublikum"], [1188, "zielpublikum"], [1189, "zielpublikum"], [1194, "zielpublikum"], [1196, "zielpublikum"], [1201, "zielpublikum"], [1202, "zielpublikum"], [1208, "zielpublikum"]], "Kursinhalt": [[1186, "kursinhalt"], [1188, "kursinhalt"], [1189, "kursinhalt"], [1194, "kursinhalt"], [1196, "kursinhalt"], [1197, "kursinhalt"], [1201, "kursinhalt"], [1202, "kursinhalt"], [1203, "kursinhalt"], [1204, "kursinhalt"], [1206, "kursinhalt"], [1207, "kursinhalt"], [1208, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1186, "empfohlene-vorkenntnisse"], [1188, "empfohlene-vorkenntnisse"], [1189, "empfohlene-vorkenntnisse"], [1194, "empfohlene-vorkenntnisse"], [1196, "empfohlene-vorkenntnisse"], [1197, "empfohlene-vorkenntnisse"], [1201, "empfohlene-vorkenntnisse"], [1202, "empfohlene-vorkenntnisse"], [1203, "empfohlene-vorkenntnisse"], [1204, "empfohlene-vorkenntnisse"], [1206, "empfohlene-vorkenntnisse"], [1207, "empfohlene-vorkenntnisse"], [1208, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1187, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1188, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1189, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1190, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1191, "c-and-c-programming"]], "CMake": [[1192, "cmake"]], "The Course": [[1192, null]], "Target Audience": [[1192, "target-audience"]], "Recommended Prior Knowledge": [[1192, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1193, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1194, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1195, "linux-kernel-driver-development"], [815, "linux-kernel-driver-development"]], "Course Contents": [[1195, "course-contents"]], "Sample Project": [[1195, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1196, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1197, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1200, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1201, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1202, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1203, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1204, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1206, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1207, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1208, "unittesting-and-test-driven-development"]], "GLT 2023: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "glt-2023-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Types, Operators, Expressions": [[423, "types-operators-expressions"]], "Program Flow": [[432, "program-flow"]], "Functions and Program Structure": [[439, "functions-and-program-structure"]], "Structures": [[449, "structures"]], "Memory": [[452, "memory"]], "Program Sanity": [[465, "program-sanity"]], "Performance": [[469, "performance"]], "Profiling": [[474, "profiling"]], "C++: Miscellaneous Live-Hacking": [[595, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[618, "functions-and-methods"]], "C++ Template Basics": [[624, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[665, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[674, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[760, "functions-functions"]], "Topics and Dependencies": [[815, "topics-and-dependencies"]], "POSIX Threads": [[989, "posix-threads"]], "Python: The Language Fundamentals": [[1059, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1175, "unit-testing-with-googletest"]], "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking": [[65, "talk-script-python-asyncio-libgpiod-and-pointless-blinking"]], "gpiod Intro": [[65, "gpiod-intro"]], "asyncio Intro": [[65, "asyncio-intro"]], "And blink?": [[65, "and-blink"], [65, "id1"]], "gpiod, And Interrupts": [[65, "gpiod-and-interrupts"]], "gpiod, Interrupts, and asyncio": [[65, "gpiod-interrupts-and-asyncio"]], "textual": [[65, "textual"]], "python-sdbus": [[65, "python-sdbus"]], "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking": [[66, "slide-material-python-asyncio-libgpiod-and-pointless-blinking"]], "blink": [[66, "blink"]], "gpiod": [[66, "gpiod"]], "Textual": [[66, "textual"]], "Python SDbus": [[66, "python-sdbus"]], "Python 3.12 Installation (for TaskGroup)": [[66, "python-3-12-installation-for-taskgroup"]], "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking": [[64, "glt-2024-python-asyncio-libgpiod-and-pointless-blinking"]]}, "indexentries": {}})