Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "An IoT Boiling Pot (The Beginning)", "Boiling Pot: Display, And Status Reporting", "Data Logger", "Data Logger: CSV Sink", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Temperature Display: LED Via A PWM Controller", "Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Basics (Beginning Of 2024)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 160, 163, 231, 439, 1084, 1086, 1090, 1092], "j\u00f6rg": [0, 23, 164, 198, 206, 210, 225, 228, 231, 241, 244, 259, 280, 286, 298, 301, 302, 308, 321, 322, 324, 326, 391, 465, 992, 995, 1033, 1057, 1084, 1085, 1086, 1087, 1090, 1091, 1092], "faschingbau": [0, 12, 23, 37, 50, 59, 62, 128, 145, 152, 153, 161, 179, 182, 183, 185, 186, 187, 188, 198, 205, 210, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 259, 266, 276, 280, 286, 291, 298, 301, 302, 308, 321, 322, 324, 327, 330, 335, 391, 422, 439, 444, 457, 464, 465, 498, 514, 570, 616, 645, 646, 647, 648, 649, 650, 667, 824, 825, 832, 834, 839, 853, 869, 882, 888, 913, 950, 992, 995, 996, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1018, 1024, 1046, 1050, 1073, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1094, 1103, 1109, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1122, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166], "offic": [0, 32, 151, 167], "co": [0, 12, 32, 37, 128, 142, 153, 182, 183, 185, 186, 187, 188, 249, 266, 270, 330, 335, 437, 444, 663, 996, 1018, 1094, 1109, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1122, 1140, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166], "43": [0, 7, 149, 156, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 324, 325, 414, 427, 439, 598, 668, 718, 745, 879, 888, 901, 903, 942, 1005], "0": [0, 5, 7, 21, 23, 32, 61, 63, 107, 110, 111, 112, 117, 120, 123, 125, 130, 132, 142, 145, 147, 148, 149, 151, 157, 161, 165, 166, 167, 168, 169, 179, 182, 184, 186, 189, 194, 196, 197, 198, 199, 202, 205, 206, 207, 210, 211, 215, 218, 219, 221, 224, 226, 228, 231, 234, 237, 238, 241, 244, 246, 247, 249, 251, 256, 259, 262, 263, 264, 266, 270, 274, 275, 276, 280, 286, 296, 298, 302, 308, 316, 322, 323, 324, 325, 326, 327, 330, 352, 353, 355, 357, 359, 361, 362, 363, 365, 372, 373, 375, 376, 377, 385, 388, 390, 391, 397, 398, 400, 403, 418, 419, 420, 421, 423, 424, 427, 428, 431, 433, 437, 439, 440, 443, 447, 448, 450, 453, 456, 457, 462, 464, 467, 469, 476, 477, 479, 481, 482, 483, 484, 486, 487, 488, 491, 492, 495, 496, 497, 501, 504, 505, 509, 511, 512, 513, 514, 515, 523, 529, 530, 538, 541, 547, 550, 557, 558, 559, 561, 562, 565, 566, 567, 568, 570, 572, 573, 574, 575, 576, 577, 580, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 620, 622, 626, 627, 629, 630, 632, 633, 635, 637, 639, 644, 645, 646, 647, 648, 649, 650, 651, 655, 659, 660, 663, 666, 667, 668, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 697, 699, 700, 702, 704, 705, 707, 709, 713, 714, 716, 717, 718, 719, 724, 727, 729, 731, 734, 736, 738, 740, 744, 748, 752, 755, 756, 760, 763, 775, 777, 787, 810, 811, 813, 828, 832, 834, 839, 842, 853, 854, 857, 879, 881, 882, 883, 888, 894, 897, 901, 902, 903, 912, 914, 917, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 933, 935, 937, 938, 944, 952, 953, 955, 957, 958, 959, 961, 964, 965, 968, 969, 971, 972, 974, 983, 986, 987, 989, 991, 993, 994, 997, 999, 1003, 1005, 1007, 1020, 1023, 1024, 1025, 1026, 1030, 1032, 1034, 1037, 1039, 1040, 1041, 1045, 1047, 1049, 1050, 1052, 1055, 1056, 1057, 1062, 1064, 1073, 1083, 1090, 1092, 1098, 1099, 1100, 1107, 1108, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1123, 1128, 1130, 1135, 1140], "664": [0, 221, 842], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 97, 101, 102, 108, 114, 141, 143, 145, 157, 165, 174, 179, 184, 186, 187, 189, 194, 196, 198, 201, 202, 203, 205, 210, 211, 213, 215, 216, 218, 219, 221, 226, 228, 229, 231, 234, 238, 241, 243, 244, 248, 252, 255, 256, 259, 261, 262, 266, 276, 279, 280, 282, 283, 285, 286, 298, 302, 308, 324, 327, 330, 335, 363, 411, 611, 613, 616, 655, 704, 750, 824, 825, 832, 889, 893, 905, 906, 907, 909, 914, 995, 999, 1008, 1026, 1027, 1043, 1052, 1062, 1063, 1085, 1087, 1095, 1103, 1116, 1117, 1123, 1148, 1154], "prankergass": [0, 205, 226, 869], "33": [0, 7, 143, 156, 168, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 324, 325, 326, 439, 460, 828, 869, 971, 1099, 1100], "8020": [0, 205, 221, 226, 264, 439, 824, 825, 863, 869], "graz": [0, 1, 3, 23, 59, 62, 129, 187, 205, 264, 297, 300, 314, 347, 439, 824, 825, 863, 869, 1094], "uid": [0, 226, 231, 234, 302, 330, 335, 748, 824, 825, 832, 842, 914, 929, 985, 1073], "vat": [0, 190, 1158], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 62, 63, 66, 70, 78, 97, 115, 117, 118, 119, 120, 122, 123, 125, 126, 146, 147, 148, 157, 162, 166, 179, 182, 183, 185, 186, 187, 198, 203, 205, 206, 207, 208, 213, 215, 216, 219, 222, 224, 226, 232, 234, 243, 246, 253, 255, 262, 272, 279, 285, 297, 310, 316, 319, 321, 330, 332, 334, 336, 341, 357, 360, 361, 366, 378, 380, 402, 413, 417, 423, 424, 427, 437, 439, 462, 465, 477, 479, 482, 493, 502, 503, 514, 515, 517, 522, 533, 539, 544, 550, 555, 557, 558, 561, 571, 573, 620, 627, 636, 639, 641, 655, 660, 671, 683, 695, 704, 710, 719, 738, 744, 748, 749, 750, 756, 758, 768, 770, 777, 781, 797, 813, 824, 825, 828, 834, 839, 840, 842, 843, 844, 845, 851, 853, 855, 858, 876, 888, 890, 893, 897, 901, 902, 903, 910, 917, 919, 920, 921, 924, 926, 927, 928, 929, 931, 932, 933, 934, 935, 937, 938, 941, 945, 951, 955, 964, 965, 968, 969, 973, 976, 979, 997, 1008, 1013, 1014, 1018, 1041, 1042, 1047, 1052, 1053, 1054, 1056, 1059, 1060, 1061, 1062, 1064, 1065, 1068, 1069, 1071, 1073, 1075, 1076, 1077, 1079, 1080, 1084, 1086, 1089, 1093, 1095, 1108, 1119, 1128, 1129, 1130, 1148, 1149, 1161], "review": [0, 147, 170, 181, 275, 354], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 61, 62, 85, 106, 112, 114, 130, 132, 142, 150, 151, 152, 153, 157, 161, 163, 165, 173, 174, 175, 176, 182, 183, 186, 187, 195, 200, 206, 208, 209, 215, 221, 222, 224, 231, 234, 238, 246, 251, 253, 262, 265, 271, 272, 273, 275, 279, 285, 289, 290, 293, 297, 299, 301, 305, 307, 311, 329, 330, 335, 350, 498, 512, 533, 575, 635, 708, 712, 717, 733, 737, 753, 768, 770, 774, 797, 798, 896, 898, 901, 937, 983, 985, 1040, 1050, 1106, 1108, 1123, 1124], "g": [0, 32, 48, 63, 97, 114, 123, 126, 149, 153, 157, 161, 166, 167, 169, 179, 194, 198, 207, 211, 215, 218, 221, 226, 228, 231, 234, 238, 256, 262, 270, 286, 311, 352, 372, 376, 379, 382, 387, 393, 394, 395, 397, 400, 415, 419, 427, 431, 432, 439, 440, 442, 445, 451, 452, 465, 469, 477, 498, 511, 514, 557, 561, 562, 591, 611, 629, 630, 659, 663, 666, 668, 677, 697, 718, 726, 730, 734, 748, 756, 775, 797, 816, 835, 842, 857, 879, 886, 889, 896, 914, 923, 933, 953, 955, 957, 968, 969, 971, 972, 973, 974, 985, 990, 992, 994, 1002, 1014, 1016, 1017, 1035, 1036, 1040, 1041, 1104, 1108, 1119, 1130, 1135, 1151], "page": [0, 33, 39, 61, 72, 74, 78, 106, 114, 126, 141, 142, 143, 145, 146, 148, 149, 153, 158, 178, 183, 186, 207, 232, 262, 288, 304, 337, 361, 362, 365, 410, 421, 461, 498, 750, 756, 775, 781, 783, 795, 821, 824, 825, 841, 890, 894, 903, 914, 924, 927, 955, 1102], "r": [0, 7, 13, 31, 32, 38, 43, 61, 149, 151, 152, 156, 157, 165, 167, 168, 169, 178, 179, 182, 184, 185, 189, 194, 196, 199, 202, 205, 207, 211, 212, 215, 218, 221, 224, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 263, 264, 266, 276, 280, 286, 298, 302, 308, 311, 322, 325, 330, 339, 351, 372, 397, 427, 439, 446, 460, 479, 480, 509, 513, 577, 604, 707, 715, 748, 761, 770, 775, 793, 797, 798, 828, 834, 839, 842, 853, 856, 857, 859, 879, 886, 894, 901, 902, 903, 905, 906, 914, 925, 928, 929, 937, 971, 972, 973, 983, 985, 986, 993, 1014, 1019, 1022, 1028, 1039, 1045, 1050, 1082, 1108, 1130, 1166], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 62, 65, 107, 128, 146, 147, 148, 149, 151, 152, 153, 154, 155, 165, 178, 190, 199, 235, 239, 266, 308, 568, 705, 797, 836, 885, 890, 903, 912, 914, 929, 1039, 1142, 1143, 1145, 1158, 1161, 1165], "19": [1, 7, 23, 114, 156, 158, 167, 168, 169, 178, 184, 187, 189, 194, 196, 198, 199, 202, 205, 210, 211, 215, 218, 221, 222, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 323, 324, 325, 327, 335, 338, 347, 415, 439, 446, 715, 748, 857, 879, 903, 974, 983, 1015, 1021, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1094, 1099, 1100, 1104, 1112, 1123, 1128, 1130], "6": [1, 7, 32, 61, 63, 109, 112, 147, 149, 157, 161, 163, 166, 167, 168, 169, 179, 184, 186, 191, 194, 196, 197, 199, 202, 205, 206, 207, 209, 212, 214, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 245, 247, 256, 259, 263, 266, 270, 276, 280, 286, 294, 298, 302, 308, 322, 323, 325, 326, 330, 354, 355, 377, 414, 420, 431, 476, 477, 516, 517, 518, 519, 531, 550, 557, 559, 562, 565, 566, 569, 571, 574, 575, 576, 577, 595, 596, 597, 598, 604, 635, 636, 672, 718, 731, 748, 853, 876, 879, 883, 888, 894, 901, 902, 903, 917, 925, 938, 971, 983, 985, 988, 994, 997, 1003, 1026, 1027, 1030, 1032, 1034, 1050, 1056, 1073, 1080, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1099, 1100, 1104, 1108, 1123, 1128, 1129, 1130, 1135, 1159], "1966": [1, 23, 187, 221, 231, 241, 244, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1104], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 154, 155, 163, 164, 165, 169, 179, 190, 200, 202, 209, 225, 228, 234, 235, 237, 249, 286, 302, 325, 330, 331, 348, 1143, 1145, 1146, 1147, 1152, 1158, 1161], "technisch": [1, 23, 348, 1160], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 62, 69, 73, 74, 78, 82, 83, 85, 92, 107, 108, 110, 111, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 134, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 176, 178, 179, 182, 184, 185, 186, 189, 197, 198, 202, 203, 205, 206, 207, 208, 210, 213, 215, 218, 219, 222, 223, 224, 226, 229, 231, 232, 234, 238, 244, 246, 247, 251, 253, 255, 262, 265, 268, 270, 271, 272, 273, 275, 279, 280, 290, 293, 297, 301, 308, 310, 316, 317, 341, 347, 349, 353, 355, 359, 362, 363, 376, 385, 393, 397, 400, 403, 404, 415, 418, 419, 420, 421, 423, 426, 433, 437, 439, 443, 446, 452, 455, 456, 457, 460, 461, 465, 466, 467, 476, 477, 479, 480, 481, 482, 498, 500, 504, 509, 511, 513, 514, 517, 518, 519, 531, 533, 557, 558, 560, 562, 565, 566, 567, 571, 573, 574, 575, 576, 577, 590, 595, 608, 611, 614, 615, 620, 626, 629, 630, 637, 642, 646, 648, 649, 650, 651, 655, 656, 659, 663, 667, 676, 682, 695, 697, 705, 707, 714, 715, 717, 718, 719, 725, 734, 735, 748, 749, 750, 751, 756, 761, 763, 766, 768, 775, 797, 805, 810, 823, 824, 825, 829, 830, 834, 842, 851, 856, 857, 860, 863, 882, 884, 894, 901, 903, 905, 906, 911, 914, 919, 920, 921, 922, 924, 928, 929, 930, 931, 935, 937, 938, 944, 950, 952, 953, 956, 957, 958, 959, 965, 969, 971, 972, 977, 981, 986, 987, 990, 991, 994, 1000, 1001, 1002, 1006, 1011, 1012, 1014, 1016, 1017, 1018, 1022, 1023, 1024, 1026, 1030, 1036, 1045, 1046, 1047, 1050, 1052, 1065, 1071, 1072, 1073, 1089, 1095, 1097, 1099, 1100, 1101, 1102, 1107, 1108, 1111, 1116, 1117, 1121, 1123, 1128, 1129, 1131, 1140, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1161, 1162, 1166], "der": [1, 3, 5, 7, 8, 11, 64, 142, 154, 155, 156, 160, 163, 164, 165, 166, 169, 171, 173, 179, 181, 190, 191, 192, 195, 196, 199, 200, 202, 205, 209, 225, 226, 228, 234, 237, 238, 241, 249, 298, 322, 330, 335, 1142, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 154, 155, 179, 189, 286, 1143, 1162], "1998": [1, 3, 23, 157, 165, 221, 556], "vorlesungen": 1, "programmieren": [1, 5, 165, 169, 331, 347, 1147, 1152, 1155, 1159, 1161, 1165, 1166], "basi": [1, 3, 5, 7, 24, 78, 170, 178, 199, 208, 222, 234, 268, 325, 400, 1151, 1162, 1163], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 63, 65, 72, 73, 74, 78, 85, 87, 106, 109, 119, 126, 131, 141, 142, 145, 146, 147, 148, 149, 152, 159, 162, 164, 166, 174, 175, 179, 184, 185, 191, 194, 196, 201, 202, 205, 206, 215, 218, 219, 221, 225, 226, 228, 231, 234, 238, 241, 246, 247, 256, 259, 266, 272, 276, 280, 286, 289, 297, 298, 302, 305, 308, 316, 325, 329, 331, 332, 337, 343, 344, 347, 349, 350, 351, 352, 353, 355, 359, 361, 363, 364, 365, 368, 371, 373, 375, 376, 377, 379, 383, 387, 388, 391, 392, 393, 394, 395, 399, 401, 403, 404, 405, 409, 410, 412, 413, 415, 416, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 440, 443, 444, 445, 446, 449, 450, 451, 456, 457, 459, 460, 465, 469, 475, 477, 480, 486, 498, 501, 504, 505, 506, 507, 508, 510, 511, 513, 514, 516, 522, 556, 558, 560, 561, 562, 563, 567, 568, 569, 573, 574, 576, 578, 581, 586, 591, 593, 594, 598, 600, 604, 606, 608, 610, 611, 612, 613, 616, 618, 619, 620, 622, 623, 625, 626, 627, 628, 630, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 657, 663, 664, 668, 669, 670, 671, 672, 676, 682, 683, 694, 695, 696, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 711, 712, 714, 715, 717, 718, 719, 720, 721, 723, 728, 729, 732, 733, 734, 735, 738, 747, 748, 750, 751, 753, 756, 760, 761, 765, 766, 770, 772, 775, 777, 787, 797, 799, 800, 805, 813, 816, 821, 823, 829, 834, 836, 839, 854, 857, 879, 885, 888, 894, 895, 901, 902, 903, 915, 919, 920, 921, 926, 927, 928, 929, 930, 939, 942, 947, 955, 958, 960, 961, 964, 967, 968, 969, 971, 972, 973, 979, 981, 983, 987, 988, 989, 990, 992, 993, 1017, 1025, 1026, 1034, 1035, 1039, 1045, 1052, 1106, 1107, 1111, 1129, 1130, 1137, 1140, 1150, 1152, 1153, 1155, 1161, 1162, 1163, 1164, 1165, 1166], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 139, 154, 155, 160, 164, 165, 169, 171, 173, 181, 185, 191, 195, 197, 199, 204, 206, 210, 215, 226, 230, 231, 236, 238, 242, 248, 249, 266, 276, 286, 302, 325, 326, 330, 335, 347, 349, 385, 393, 837, 884, 885, 904, 1142, 1143, 1144, 1145, 1146, 1150, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "\u00fcbertragungsprotokol": [1, 159], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 215, 221, 231, 234, 259], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 72, 73, 74, 78, 106, 114, 159, 182, 195, 197, 206, 225, 233, 236, 262, 266, 272, 274, 275, 279, 334, 343, 344, 439, 461, 503, 555, 556, 563, 626, 627, 630, 632, 633, 655, 719, 750, 789, 799, 996, 1010, 1148, 1151], "design": [1, 3, 20, 23, 53, 57, 74, 78, 80, 82, 85, 106, 142, 143, 146, 159, 162, 182, 208, 209, 225, 271, 273, 338, 347, 349, 376, 406, 426, 427, 430, 438, 447, 454, 455, 456, 457, 459, 460, 462, 464, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 503, 511, 513, 555, 556, 562, 564, 580, 652, 701, 714, 718, 719, 721, 735, 748, 749, 750, 751, 902, 971, 1090, 1129, 1147, 1150], "analys": [1, 3, 159, 1145], "ration": [1, 3, 38, 152], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 64, 154, 155, 160, 164, 166, 169, 190, 191, 202, 209, 225, 237, 249, 263, 330, 335, 347, 349, 859, 1142, 1143, 1145, 1152, 1158, 1159, 1161, 1164], "java": [1, 9, 189, 190, 201, 213, 222, 616, 629, 714, 719, 726, 1007, 1020, 1026, 1035, 1158, 1166], "releasemanag": [1, 3, 23, 159, 1160], "cv": [1, 3, 23, 32, 142, 216, 1160], "subvers": [1, 3, 162, 349, 879], "systemnah": [1, 3, 5, 23, 141, 159, 961, 964, 968, 1161], "programmierung": [1, 3, 4, 5, 6, 8, 23, 139, 159, 213, 240, 249, 347, 1143, 1144, 1145, 1147, 1152, 1159, 1161, 1164], "unter": [1, 3, 23, 64, 155, 163, 164, 181, 189, 331, 885, 1143, 1144, 1147, 1152, 1155, 1159, 1162, 1164, 1165], "unix": [1, 72, 73, 74, 78, 97, 143, 146, 175, 198, 262, 316, 330, 331, 332, 343, 344, 348, 365, 419, 465, 639, 730, 748, 750, 754, 756, 789, 822, 823, 824, 839, 841, 853, 881, 884, 890, 894, 897, 902, 914, 939, 955, 965, 1021, 1045, 1073, 1143, 1144, 1146, 1150, 1152, 1154, 1155, 1159, 1161, 1162, 1163, 1165], "window": [1, 3, 32, 97, 98, 103, 104, 114, 134, 146, 151, 153, 163, 165, 178, 186, 203, 217, 219, 221, 232, 235, 246, 251, 253, 255, 261, 262, 274, 290, 296, 316, 327, 330, 333, 335, 348, 360, 427, 721, 724, 750, 827, 831, 857, 893, 923, 939, 944, 1019, 1021, 1022, 1045, 1095, 1130], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 154, 155, 160, 164, 169, 173, 179, 181, 190, 191, 194, 196, 234, 249, 322, 347, 957, 1142, 1143, 1158, 1160], "2006": [1, 3, 23, 221], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 154, 155, 160, 165, 173, 179, 181, 190, 191, 196, 203, 325, 347, 885, 957, 1142, 1143, 1147, 1158, 1159, 1164], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 154, 164, 235, 1145], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 190, 1158], "forschung": 1, "entwicklung": [1, 3, 4, 331, 1154, 1160], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 142, 158, 221, 1020], "enterpris": 1, "architect": [1, 447, 1122], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 152, 1160], "massgeblich": 1, "portierung": [1, 3, 4, 159], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 64, 128, 154, 155, 163, 164, 173, 181, 185, 186, 188, 190, 191, 194, 197, 199, 200, 202, 211, 228, 235, 240, 247, 256, 263, 298, 330, 331, 335, 347, 349, 822, 884, 885, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1152, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165], "enea": [1, 3, 146], "os": [1, 3, 146], "nach": [1, 3, 4, 5, 154, 155, 159, 160, 165, 169, 173, 189, 190, 196, 234, 235, 241, 348, 819, 1142, 1158], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 61, 62, 63, 65, 72, 73, 74, 78, 84, 85, 86, 87, 98, 103, 104, 106, 126, 131, 138, 141, 142, 143, 145, 147, 148, 149, 153, 156, 157, 158, 163, 170, 173, 178, 185, 207, 208, 215, 221, 224, 231, 234, 235, 238, 243, 246, 251, 253, 255, 264, 271, 273, 274, 290, 296, 310, 316, 327, 329, 330, 331, 332, 336, 337, 343, 344, 347, 349, 391, 413, 421, 430, 433, 450, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 541, 555, 722, 728, 748, 749, 750, 751, 753, 754, 756, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 801, 802, 803, 806, 807, 808, 811, 812, 814, 815, 817, 818, 820, 822, 823, 824, 825, 831, 833, 835, 838, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 885, 887, 890, 894, 896, 897, 898, 902, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 917, 919, 920, 921, 922, 923, 924, 929, 931, 932, 935, 936, 937, 938, 940, 948, 951, 954, 956, 961, 964, 965, 968, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 1019, 1021, 1083, 1108, 1128, 1131, 1144, 1145, 1146, 1147, 1150, 1152, 1155, 1159], "beteiligt": [1, 23], "seit": [1, 5, 23, 173, 179, 189, 194, 1143, 1152], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 97, 106, 109, 110, 111, 114, 125, 126, 129, 151, 198, 327, 329, 330, 335, 336, 338, 503, 514, 535, 555, 563, 578, 638, 652, 750, 827, 831, 846, 852, 871, 877, 893, 978, 981, 1137], "joanneum": [1, 129, 151, 1137], "kapfenberg": 1, "2011": [1, 3, 5, 142, 143, 158, 271, 273, 347, 351, 556, 655], "2015": [1, 23, 206, 232, 270, 301, 347, 662, 1095], "lehrveranstaltung": [1, 331], "im": [1, 3, 5, 8, 29, 32, 38, 90, 154, 155, 164, 165, 169, 173, 178, 179, 181, 182, 185, 187, 190, 191, 194, 196, 200, 202, 203, 209, 210, 213, 216, 217, 219, 222, 225, 229, 230, 231, 237, 238, 240, 242, 243, 245, 258, 260, 265, 267, 268, 272, 274, 275, 278, 279, 281, 284, 285, 287, 296, 297, 299, 300, 301, 303, 306, 314, 316, 317, 318, 319, 320, 321, 330, 335, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1100, 1108, 1109, 1130, 1143, 1146, 1152, 1154, 1158, 1159, 1161, 1162, 1165, 1166], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 68, 73, 74, 78, 85, 97, 104, 114, 122, 125, 145, 153, 156, 157, 162, 173, 179, 185, 189, 198, 215, 221, 222, 231, 232, 234, 259, 271, 273, 274, 275, 288, 304, 327, 348, 349, 415, 447, 455, 456, 465, 467, 633, 719, 750, 751, 781, 828, 841, 893, 894, 901, 902, 917, 969, 978, 981, 1050, 1097, 1150, 1151, 1153, 1166], "avl": [1, 23, 143], "2018": [1, 23, 149, 221, 660], "2019": [1, 40, 127, 142, 184, 206, 255, 279, 297, 300, 301, 314, 347, 533, 660, 701, 879, 1094, 1095, 1097], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 72, 73, 74, 78, 84, 87, 97, 104, 108, 114, 130, 136, 142, 146, 151, 152, 158, 162, 173, 176, 186, 207, 224, 227, 251, 253, 255, 262, 271, 273, 276, 283, 288, 289, 304, 305, 310, 333, 336, 337, 348, 349, 352, 393, 406, 421, 433, 445, 446, 447, 449, 451, 461, 475, 481, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 533, 538, 541, 555, 646, 683, 703, 713, 727, 750, 754, 757, 759, 762, 764, 766, 767, 774, 776, 777, 778, 782, 788, 793, 794, 799, 801, 806, 812, 815, 818, 854, 893, 902, 903, 927, 928, 929, 930, 944, 963, 967, 971, 974, 978, 981, 982, 986, 1033, 1044, 1050, 1123, 1128, 1134, 1138, 1143, 1148, 1150], "manag": [1, 5, 14, 23, 29, 63, 68, 72, 73, 74, 78, 94, 97, 108, 145, 147, 156, 161, 162, 170, 173, 175, 178, 182, 185, 186, 192, 193, 197, 202, 203, 206, 208, 218, 224, 227, 232, 234, 235, 241, 244, 259, 266, 273, 275, 276, 279, 280, 283, 301, 302, 308, 310, 311, 333, 334, 336, 343, 344, 348, 349, 410, 427, 438, 456, 469, 527, 533, 558, 563, 652, 663, 664, 666, 695, 700, 711, 712, 714, 715, 716, 720, 728, 747, 749, 750, 768, 774, 781, 783, 806, 812, 815, 818, 828, 832, 833, 888, 893, 902, 910, 922, 955, 956, 969, 985, 996, 1005, 1024, 1048, 1052, 1093, 1094, 1095, 1096, 1097, 1101, 1109, 1111, 1123, 1125, 1127, 1128, 1132, 1137, 1148, 1150, 1153, 1160], "schittstel": 1, "zum": [1, 3, 5, 154, 155, 164, 169, 173, 179, 189, 202, 209, 226, 286, 348, 1143, 1145, 1146, 1147, 1159, 1162, 1164], "weiser": 1, "alter": [1, 181, 182, 232, 255, 348, 559, 567, 884, 1095], "mann": 1, "2020": [1, 23, 114, 126, 127, 142, 143, 149, 153, 154, 158, 161, 165, 184, 186, 221, 347, 514, 515, 663, 676, 824, 825, 904, 913, 931, 1020, 1094, 1099, 1137, 1159], "embed": [1, 3, 4, 5, 23, 72, 87, 104, 129, 141, 142, 143, 146, 148, 159, 162, 186, 188, 211, 254, 310, 328, 333, 335, 347, 349, 721, 731, 743, 749, 750, 785, 797, 835, 857, 903, 914, 955, 971, 998, 1039, 1144, 1145, 1146, 1150, 1154, 1155, 1159, 1163], "comput": [1, 23, 28, 29, 32, 72, 84, 87, 101, 123, 129, 149, 188, 238, 247, 271, 273, 297, 298, 315, 328, 330, 333, 335, 347, 356, 429, 434, 435, 460, 557, 567, 570, 576, 609, 705, 718, 730, 750, 819, 826, 894, 902, 904, 905, 912, 939, 953, 956, 1020, 1108, 1123, 1153], "electron": [1, 151, 348, 902], "engin": [1, 149, 222, 224, 290, 293, 348, 419, 423, 427, 437, 468, 501, 509, 902, 1018, 1166], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 85, 142, 955, 1018], "projekt": [2, 143, 164, 1155, 1159], "stand": [3, 156, 205, 333, 797, 903, 987, 1103], "j\u00e4nner": [3, 23], "2014": [3, 143, 164, 185, 221, 255, 270, 279, 301, 899, 1095], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 59, 62, 64, 142, 155, 160, 163, 164, 165, 166, 169, 173, 179, 181, 189, 190, 192, 194, 196, 199, 200, 202, 205, 209, 218, 225, 228, 231, 234, 237, 238, 241, 266, 294, 325, 330, 331, 335, 348, 349, 483, 497, 750, 884, 885, 957, 1095, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "pci": [3, 193, 750, 774, 775, 836, 893, 901, 937, 1153], "hardwar": [3, 5, 65, 69, 72, 73, 74, 78, 80, 123, 125, 131, 135, 145, 146, 149, 159, 162, 221, 222, 234, 271, 274, 275, 296, 300, 316, 331, 332, 333, 348, 349, 365, 376, 379, 415, 433, 437, 507, 508, 509, 510, 514, 730, 750, 777, 797, 828, 833, 834, 893, 894, 895, 896, 899, 902, 918, 920, 921, 934, 937, 969, 1142, 1151, 1153, 1159], "ein": [3, 5, 7, 8, 37, 154, 155, 160, 163, 164, 165, 166, 169, 171, 173, 181, 185, 186, 188, 189, 190, 192, 194, 196, 197, 199, 200, 202, 203, 205, 209, 211, 215, 218, 219, 225, 226, 228, 231, 234, 235, 237, 238, 241, 249, 256, 259, 266, 276, 280, 286, 294, 298, 302, 308, 322, 325, 330, 335, 348, 349, 393, 521, 823, 884, 885, 957, 1025, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1152, 1155, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 142, 154, 156, 160, 163, 164, 169, 173, 179, 181, 189, 190, 199, 200, 209, 225, 234, 237, 241, 330, 347, 424, 717, 733, 737, 819, 821, 885, 898, 1094, 1120, 1142, 1143, 1144, 1145, 1147, 1152, 1154, 1158, 1159, 1161, 1162, 1164, 1165, 1166], "untenstehenden": 3, "zeit": [3, 5, 155, 190, 308, 1143, 1145, 1165], "dato": 3, "ort": 3, "raum": [3, 169], "anbindung": 3, "verschieden": [3, 23, 179, 348, 1144, 1145, 1146, 1152, 1159, 1164], "hardwareinterfac": 3, "i2c": [3, 4, 65, 78, 81, 85, 131, 134, 146, 147, 173, 186, 262, 333, 336, 341, 348, 454, 484, 543, 544, 552, 750, 797, 893, 900, 902, 937, 1152, 1159], "spi": [3, 4, 78, 146, 164, 173, 348, 543, 544, 552, 895, 896, 897, 902, 937, 1152, 1159], "can": [3, 12, 17, 29, 57, 58, 68, 75, 80, 83, 108, 110, 111, 114, 115, 119, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 157, 161, 162, 163, 166, 168, 170, 174, 175, 176, 178, 182, 183, 184, 198, 205, 207, 215, 218, 221, 222, 224, 231, 234, 238, 241, 244, 262, 265, 268, 270, 271, 273, 276, 280, 286, 288, 301, 302, 304, 308, 316, 322, 324, 327, 330, 335, 341, 348, 353, 355, 359, 363, 367, 373, 376, 387, 391, 397, 398, 401, 408, 413, 415, 419, 420, 421, 422, 423, 426, 427, 431, 432, 433, 437, 439, 440, 442, 448, 450, 451, 457, 462, 465, 466, 469, 476, 477, 481, 482, 483, 495, 499, 508, 515, 541, 547, 557, 559, 564, 566, 567, 572, 573, 580, 591, 595, 611, 612, 617, 626, 630, 633, 637, 642, 647, 649, 650, 651, 660, 662, 665, 666, 667, 668, 672, 677, 701, 704, 705, 707, 713, 714, 717, 718, 719, 722, 725, 727, 731, 746, 748, 750, 756, 768, 783, 787, 791, 795, 797, 802, 805, 811, 823, 824, 825, 828, 829, 830, 832, 834, 835, 836, 837, 839, 840, 842, 847, 849, 851, 853, 855, 857, 858, 893, 894, 900, 901, 902, 903, 906, 908, 910, 912, 913, 914, 921, 923, 927, 931, 940, 942, 953, 956, 957, 965, 969, 973, 983, 988, 990, 992, 993, 994, 995, 997, 998, 999, 1002, 1005, 1006, 1007, 1014, 1015, 1017, 1018, 1023, 1026, 1027, 1030, 1035, 1037, 1043, 1045, 1047, 1050, 1052, 1059, 1069, 1080, 1090, 1091, 1092, 1094, 1100, 1102, 1107, 1108, 1114, 1116, 1121, 1123, 1128, 1148, 1150, 1152, 1159, 1163, 1165], "custom": [3, 27, 29, 32, 39, 97, 131, 135, 139, 142, 146, 149, 151, 152, 158, 162, 175, 183, 185, 187, 215, 221, 224, 231, 234, 235, 262, 264, 271, 273, 298, 316, 317, 318, 319, 321, 329, 330, 348, 437, 442, 461, 475, 503, 506, 509, 511, 513, 533, 555, 557, 563, 628, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 683, 685, 695, 700, 711, 720, 728, 735, 747, 749, 750, 770, 797, 913, 944, 969, 1094, 1136], "firmwar": [3, 126, 134, 146, 147, 149, 156, 165, 894, 901, 937], "kunden": [3, 5, 23, 160, 264, 348, 1142], "dezemb": [3, 23], "2012": [3, 23, 142, 158, 221], "backport": 3, "integr": [3, 16, 23, 38, 43, 112, 126, 143, 151, 153, 161, 173, 178, 198, 288, 297, 304, 332, 337, 338, 339, 427, 453, 456, 460, 672, 770, 779, 836, 857, 894, 896, 902, 903, 1120, 1128, 1131, 1150, 1152, 1159], "touchcontrol": 3, "driver": [3, 5, 78, 85, 131, 134, 146, 149, 151, 159, 162, 163, 262, 331, 332, 347, 349, 433, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 771, 772, 773, 776, 777, 778, 780, 781, 782, 784, 786, 788, 790, 791, 792, 794, 796, 797, 798, 801, 803, 806, 808, 812, 815, 818, 828, 833, 836, 893, 902, 903, 923, 937, 1143, 1163, 1165], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 65, 108, 110, 111, 115, 125, 134, 146, 150, 152, 157, 161, 205, 215, 221, 228, 231, 234, 238, 244, 271, 280, 308, 363, 370, 372, 376, 385, 442, 446, 479, 564, 617, 715, 725, 729, 748, 779, 781, 789, 797, 830, 839, 844, 845, 857, 902, 903, 925, 927, 928, 929, 931, 986, 987, 995, 1037, 1120, 1130], "2013": [3, 23, 142, 347], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 61, 65, 72, 74, 78, 85, 91, 92, 129, 130, 141, 142, 143, 159, 161, 162, 165, 167, 175, 190, 191, 195, 198, 199, 200, 202, 205, 207, 214, 215, 221, 230, 231, 234, 238, 241, 262, 264, 273, 316, 317, 318, 319, 320, 321, 325, 326, 329, 331, 332, 337, 338, 339, 343, 344, 345, 347, 349, 361, 513, 654, 672, 691, 703, 709, 726, 750, 751, 857, 879, 893, 895, 900, 901, 942, 990, 991, 992, 993, 995, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1010, 1014, 1015, 1021, 1025, 1029, 1030, 1036, 1038, 1040, 1041, 1043, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1127, 1128, 1130, 1131, 1132, 1148, 1152, 1158, 1159, 1166], "programm": [3, 59, 62, 164, 165, 169, 178, 189, 194, 198, 202, 234, 259, 271, 272, 273, 300, 325, 331, 348, 397, 410, 417, 423, 427, 557, 559, 560, 629, 663, 697, 700, 833, 839, 890, 902, 923, 957, 1018, 1019, 1023, 1045, 1102, 1109, 1122, 1145, 1148, 1153, 1161, 1162, 1164, 1166], "zur": [3, 154, 169, 173, 181, 191, 202, 325, 330, 335, 348, 957, 1143, 1145, 1146, 1147, 1159, 1164, 1165, 1166], "IT": [3, 262, 264, 348, 561], "wie": [3, 5, 154, 155, 163, 164, 165, 169, 173, 179, 181, 189, 194, 197, 204, 228, 325, 348, 1142, 1143, 1145, 1146, 1147, 1152, 1155, 1159, 1160, 1162, 1164, 1165], "beispiel": [3, 5, 23, 165, 189, 190, 212, 218, 239, 348, 1145, 1146, 1147, 1158, 1159, 1161, 1162, 1164, 1166], "e": [3, 5, 7, 32, 37, 38, 42, 48, 63, 97, 114, 123, 126, 149, 151, 152, 153, 154, 155, 157, 160, 161, 163, 164, 165, 167, 168, 169, 173, 179, 181, 189, 190, 194, 196, 198, 199, 202, 205, 206, 207, 210, 211, 215, 218, 219, 221, 224, 226, 228, 231, 234, 235, 238, 241, 244, 247, 256, 259, 262, 263, 266, 268, 270, 276, 280, 286, 298, 302, 308, 311, 323, 324, 325, 326, 330, 335, 348, 352, 369, 372, 376, 379, 382, 387, 397, 400, 415, 419, 423, 426, 427, 439, 440, 442, 445, 451, 452, 456, 465, 469, 477, 482, 486, 498, 511, 514, 515, 550, 557, 561, 562, 572, 580, 591, 611, 629, 630, 644, 649, 656, 659, 663, 666, 677, 683, 697, 718, 727, 729, 730, 734, 748, 756, 775, 816, 823, 824, 825, 834, 835, 839, 840, 841, 842, 857, 879, 886, 901, 902, 903, 914, 923, 933, 935, 953, 956, 957, 968, 969, 971, 973, 974, 985, 990, 994, 1002, 1014, 1016, 1017, 1035, 1040, 1041, 1064, 1104, 1108, 1113, 1116, 1119, 1122, 1128, 1130, 1142, 1143, 1145, 1147, 1151, 1152, 1158, 1159, 1161, 1162, 1164, 1166], "bill": [3, 266], "email": [3, 32, 42, 128, 147, 153, 157, 162, 186, 202, 266, 341, 910, 1108, 1112, 1113, 1114, 1116, 1117, 1118], "kommunik": [3, 23, 1159, 1162, 1164, 1165, 1166], "extrakt": 3, "attach": [3, 167, 215, 221, 231, 234, 460, 779, 902, 955, 1102], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 60, 90, 97, 98, 104, 114, 125, 130, 142, 143, 146, 147, 151, 173, 176, 182, 183, 185, 187, 198, 213, 215, 216, 219, 221, 224, 229, 231, 234, 235, 243, 246, 255, 258, 265, 268, 271, 272, 273, 278, 279, 283, 284, 285, 289, 290, 300, 305, 306, 307, 314, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 443, 444, 450, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 527, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 695, 711, 720, 728, 735, 747, 749, 750, 770, 777, 793, 797, 798, 836, 893, 896, 901, 903, 968, 970, 973, 976, 978, 981, 1002, 1018, 1022, 1048, 1093, 1106, 1113, 1123, 1124, 1131, 1136, 1138], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 73, 78, 80, 97, 101, 102, 108, 110, 111, 114, 123, 142, 143, 146, 147, 152, 153, 157, 159, 161, 162, 163, 164, 170, 173, 175, 176, 186, 198, 203, 206, 213, 215, 218, 219, 223, 224, 229, 231, 232, 234, 241, 244, 250, 251, 252, 259, 261, 266, 271, 276, 279, 280, 282, 302, 308, 327, 330, 331, 332, 333, 334, 335, 341, 343, 344, 347, 349, 383, 392, 399, 403, 405, 409, 412, 416, 423, 424, 425, 429, 430, 434, 435, 437, 442, 445, 447, 460, 461, 468, 481, 503, 514, 555, 590, 633, 657, 695, 728, 729, 730, 747, 748, 749, 750, 753, 756, 768, 770, 789, 795, 797, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 854, 857, 883, 884, 888, 893, 897, 902, 903, 904, 909, 915, 919, 920, 921, 922, 924, 927, 929, 932, 933, 935, 936, 937, 938, 948, 951, 954, 956, 957, 959, 965, 968, 969, 971, 972, 973, 994, 995, 1006, 1022, 1050, 1095, 1130, 1144, 1151, 1153, 1154], "auf": [3, 5, 8, 23, 64, 142, 147, 155, 160, 163, 164, 165, 169, 173, 179, 181, 189, 190, 194, 200, 202, 209, 210, 225, 228, 235, 237, 249, 325, 330, 331, 335, 348, 885, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1158, 1162, 1165, 1166], "gentoo": [3, 142, 145, 158, 433, 1143], "updat": [3, 44, 125, 145, 147, 161, 165, 193, 218, 226, 241, 251, 253, 259, 266, 271, 273, 280, 286, 298, 330, 337, 512, 514, 575, 807, 955, 985, 986, 987, 988, 989, 1043, 1045, 1119, 1131, 1137, 1160], "betriebssystem": [3, 1152, 1154, 1159, 1161], "usb": [3, 4, 63, 145, 146, 147, 149, 348, 426, 775, 828, 1152], "touchscreen": 3, "cheat": [3, 33, 65, 186, 198, 430, 683, 857], "detect": [3, 32, 106, 166, 178, 395, 398, 432, 440, 538, 565, 668, 693, 714, 791, 902, 903, 929, 938, 961, 972, 973, 1074], "m\u00fcnzeinwurf": 3, "via": [3, 17, 63, 85, 116, 120, 121, 146, 149, 153, 158, 167, 182, 183, 205, 211, 232, 234, 262, 265, 268, 271, 280, 297, 329, 336, 348, 457, 462, 482, 567, 591, 702, 716, 750, 777, 797, 800, 828, 833, 839, 854, 890, 901, 912, 913, 920, 927, 937, 958, 965, 983, 1049, 1148], "gpio": [3, 4, 59, 62, 65, 72, 73, 74, 78, 84, 114, 115, 120, 121, 122, 143, 262, 271, 301, 320, 333, 335, 339, 750, 774, 799, 801, 806, 812, 815, 818, 893, 898, 902, 934, 938, 1152, 1159], "interrupt": [3, 63, 86, 110, 111, 164, 193, 262, 433, 750, 768, 774, 789, 791, 792, 794, 795, 799, 800, 801, 805, 806, 809, 812, 815, 816, 818, 828, 830, 833, 836, 893, 898, 915, 917, 918, 919, 920, 921, 922, 934, 936, 937, 953, 956, 957, 959, 968, 969, 1152, 1153, 1159], "m\u00e4rz": 3, "firma": [3, 160, 169, 264, 347, 1142, 1152, 1159], "spielo": 3, "intern": [3, 57, 84, 115, 117, 118, 122, 125, 179, 184, 207, 215, 218, 219, 221, 231, 234, 265, 268, 297, 323, 337, 366, 396, 411, 426, 442, 451, 456, 570, 611, 658, 701, 744, 748, 775, 783, 809, 901, 902, 903, 944, 995, 999, 1043, 1052, 1108, 1113], "datenkonvertierung": 3, "einem": [3, 5, 23, 154, 164, 165, 169, 173, 179, 181, 189, 190, 194, 196, 202, 228, 234, 241, 256, 330, 331, 335, 348, 1143, 1145, 1147, 1152, 1161, 1165, 1166], "konvertierung": [3, 23, 1145], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 90, 117, 118, 119, 128, 149, 165, 166, 168, 169, 176, 183, 185, 187, 190, 194, 203, 206, 213, 214, 216, 222, 227, 228, 232, 234, 235, 240, 243, 244, 255, 258, 259, 264, 278, 279, 280, 284, 285, 287, 293, 296, 297, 300, 301, 306, 307, 308, 314, 353, 354, 359, 395, 439, 750, 751, 797, 828, 834, 857, 917, 971, 1010, 1018, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1088, 1089, 1090, 1091, 1093, 1095, 1100, 1111, 1123, 1158, 1162], "zweck": [3, 179, 1159], "extern": [3, 13, 21, 23, 29, 63, 85, 145, 149, 153, 175, 178, 185, 207, 208, 213, 224, 229, 234, 243, 264, 279, 289, 297, 305, 330, 335, 363, 367, 393, 395, 397, 399, 405, 409, 412, 416, 420, 425, 429, 434, 435, 444, 445, 541, 657, 695, 701, 747, 749, 750, 754, 757, 759, 762, 764, 767, 770, 774, 775, 776, 778, 782, 788, 794, 797, 801, 806, 807, 812, 815, 818, 893, 903, 953, 1019, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1093, 1095, 1135, 1137, 1145, 1152, 1159], "datenquellen": 3, "export": [3, 40, 61, 123, 125, 146, 157, 182, 207, 208, 211, 213, 316, 701, 753, 829, 858, 894, 902, 935, 937, 938, 983, 985, 988, 1086, 1103], "daten": [3, 179, 181, 194, 204, 209, 294, 957, 1165], "soap": [3, 32], "ip": [3, 128, 150, 153, 163, 170, 198, 327, 330, 336, 341, 538, 550, 896, 914, 920, 956, 1123, 1152, 1159, 1163, 1165], "kamera": 3, "einen": [3, 5, 23, 154, 155, 165, 169, 173, 179, 181, 189, 202, 238, 348, 616, 884, 1142, 1143, 1144, 1145, 1147, 1154, 1162, 1164, 1165, 1166], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 62, 63, 69, 82, 84, 85, 97, 110, 111, 112, 114, 120, 124, 131, 146, 148, 151, 166, 174, 182, 184, 202, 207, 208, 215, 221, 225, 228, 229, 231, 236, 238, 253, 259, 268, 271, 272, 273, 274, 275, 280, 296, 300, 311, 317, 318, 323, 330, 341, 364, 366, 398, 408, 410, 411, 427, 437, 442, 449, 452, 453, 455, 456, 457, 459, 460, 461, 464, 465, 467, 476, 477, 481, 482, 483, 498, 502, 504, 505, 506, 507, 508, 510, 511, 512, 516, 517, 518, 519, 521, 523, 528, 531, 532, 556, 558, 562, 566, 574, 575, 576, 577, 582, 611, 617, 626, 628, 629, 630, 637, 645, 646, 647, 648, 649, 650, 651, 652, 658, 663, 664, 665, 667, 677, 692, 693, 694, 695, 701, 702, 704, 713, 717, 719, 721, 727, 741, 744, 745, 748, 749, 750, 756, 763, 766, 783, 811, 828, 830, 834, 836, 894, 901, 903, 914, 917, 923, 939, 944, 965, 989, 993, 994, 999, 1000, 1001, 1007, 1011, 1035, 1070, 1074, 1083, 1090, 1095, 1104, 1107, 1111, 1148, 1153], "gige": 3, "vision": [3, 264, 348], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 186], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1142], "applik": [3, 163], "august": [3, 23], "logistik": 3, "autom": [3, 185, 198, 229, 243, 285, 348, 894, 905, 912, 985, 987, 995, 1095], "beteiligten": 3, "protokol": [3, 4, 1152, 1159, 1164], "server": [3, 128, 150, 153, 159, 165, 186, 198, 209, 218, 234, 241, 244, 255, 259, 266, 276, 280, 302, 308, 433, 479, 493, 823, 897, 910, 912, 920, 965, 1107, 1123, 1140, 1159], "zu": [3, 6, 8, 154, 155, 160, 163, 164, 169, 173, 179, 190, 191, 194, 196, 200, 209, 210, 225, 226, 235, 237, 241, 249, 256, 330, 335, 348, 819, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1155, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "sp": [3, 665], "tcp": [3, 146, 153, 170, 186, 291, 895, 920, 1111, 1152, 1159, 1163, 1165], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 188, 894, 1102], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1152, 1154], "beratend": 3, "versionskontrol": [3, 23, 159, 1160], "architektur": [3, 23, 159, 348], "2008": [3, 157, 221, 1020], "ylog": [3, 23], "gmbh": [3, 23, 439], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 194], "mit": [3, 4, 5, 7, 8, 23, 142, 154, 155, 163, 164, 165, 169, 171, 173, 181, 185, 186, 190, 191, 192, 195, 196, 199, 200, 202, 209, 210, 211, 212, 225, 234, 235, 237, 238, 241, 249, 280, 326, 330, 331, 335, 347, 349, 884, 1050, 1142, 1144, 1145, 1146, 1147, 1152, 1154, 1158, 1160, 1161, 1162, 1164, 1165, 1166], "iar": 3, "arm": [3, 145, 157, 198, 371, 777, 797, 798, 901, 914, 968, 971, 972, 983], "workbench": 3, "segger": [3, 146], "embo": [3, 146], "vba": 3, "excel": [3, 78, 147, 185, 211, 1086, 1100], "verteilung": 3, "microsoft": [3, 11, 152, 153, 156, 158, 162, 173, 181, 251, 253, 262, 271, 273, 348, 350, 398, 414, 836, 1086, 1142], "net": [3, 23, 39, 43, 114, 126, 132, 163, 164, 189, 241, 247, 438, 514, 515, 791, 797, 824, 825, 885, 920, 1108], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 165, 1161, 1162], "script": [3, 38, 61, 136, 139, 142, 145, 147, 152, 153, 162, 177, 185, 186, 188, 213, 215, 221, 231, 234, 261, 262, 282, 321, 330, 347, 349, 431, 439, 450, 701, 797, 839, 842, 857, 985, 996, 1022, 1023, 1047, 1050, 1130, 1143, 1154], "shell": [3, 4, 32, 97, 99, 101, 104, 114, 162, 166, 185, 186, 188, 226, 234, 252, 261, 282, 302, 315, 316, 329, 330, 331, 332, 335, 347, 349, 351, 433, 439, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 748, 749, 750, 797, 820, 824, 825, 826, 827, 830, 831, 832, 834, 835, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 885, 886, 887, 890, 893, 894, 904, 905, 906, 907, 908, 916, 922, 923, 924, 932, 934, 937, 938, 948, 951, 954, 956, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 985, 1021, 1022, 1024, 1045, 1047, 1073, 1135, 1143, 1150, 1152, 1154, 1155, 1159, 1160, 1161, 1163], "oststeiermark": 3, "erweiterung": [3, 348], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 65, 72, 73, 74, 78, 87, 97, 106, 114, 126, 143, 152, 157, 162, 173, 176, 208, 224, 251, 253, 271, 273, 333, 347, 349, 350, 441, 443, 445, 446, 449, 450, 451, 452, 453, 461, 475, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 555, 575, 750, 751, 893, 981, 1133, 1155], "www": [3, 20, 23, 59, 62, 85, 142, 152, 161, 163, 183, 186, 187, 259, 350, 717, 753, 768, 774, 798, 937, 1106, 1108], "org": [3, 4, 23, 61, 132, 138, 142, 145, 149, 153, 157, 163, 165, 176, 186, 189, 206, 215, 221, 222, 231, 234, 238, 259, 272, 299, 334, 350, 753, 768, 770, 774, 797, 798, 937, 983, 985, 1019, 1040, 1050, 1089, 1106, 1123, 1124], "confix": [3, 143], "2009": [3, 1095], "schulungen": [3, 6, 23, 142, 143, 160], "dem": [3, 5, 8, 23, 154, 155, 163, 164, 165, 169, 173, 186, 190, 200, 209, 212, 225, 226, 235, 237, 249, 280, 330, 335, 348, 349, 957, 1142, 1143, 1144, 1146, 1147, 1152, 1154, 1161, 1162, 1164], "umkrei": 3, "softwareentwicklung": [3, 4, 159], "nicht": [3, 5, 7, 23, 37, 154, 155, 160, 163, 169, 173, 190, 191, 194, 199, 202, 221, 226, 228, 234, 241, 247, 266, 276, 325, 330, 348, 885, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1158, 1159, 1160, 1161, 1164, 1165, 1166], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 61, 63, 65, 68, 73, 74, 78, 81, 82, 84, 86, 90, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 114, 115, 116, 118, 125, 128, 135, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 161, 162, 163, 165, 166, 168, 169, 174, 178, 179, 182, 183, 185, 186, 187, 188, 190, 196, 197, 198, 203, 205, 206, 207, 208, 210, 212, 213, 215, 219, 221, 222, 228, 229, 231, 232, 235, 236, 238, 241, 243, 246, 250, 251, 253, 255, 256, 258, 261, 264, 268, 271, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 290, 293, 296, 298, 300, 301, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 329, 330, 332, 333, 334, 335, 337, 338, 351, 352, 358, 360, 361, 365, 368, 371, 374, 375, 376, 379, 383, 390, 392, 393, 398, 399, 405, 406, 409, 412, 413, 415, 416, 417, 419, 421, 425, 426, 427, 429, 433, 434, 435, 437, 438, 440, 441, 445, 448, 449, 450, 451, 453, 455, 456, 457, 462, 466, 476, 480, 482, 498, 499, 500, 501, 503, 506, 509, 511, 512, 513, 514, 515, 533, 541, 544, 550, 555, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 570, 572, 573, 575, 576, 586, 590, 591, 608, 620, 627, 630, 632, 638, 641, 648, 652, 655, 656, 657, 659, 663, 668, 672, 677, 683, 689, 694, 695, 707, 709, 713, 714, 715, 716, 719, 721, 727, 729, 740, 745, 746, 747, 748, 749, 750, 751, 752, 753, 756, 766, 768, 772, 777, 779, 785, 789, 797, 798, 799, 800, 805, 807, 809, 817, 822, 823, 824, 825, 828, 829, 832, 833, 834, 836, 839, 840, 841, 847, 849, 854, 856, 857, 858, 859, 860, 862, 863, 876, 881, 889, 890, 893, 894, 896, 897, 898, 899, 902, 903, 906, 910, 914, 917, 918, 919, 920, 921, 924, 927, 929, 930, 932, 934, 937, 940, 945, 950, 951, 956, 957, 959, 968, 969, 974, 983, 985, 987, 989, 994, 995, 996, 999, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1014, 1017, 1018, 1019, 1022, 1023, 1026, 1029, 1038, 1041, 1042, 1044, 1045, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1101, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1120, 1122, 1123, 1125, 1127, 1128, 1130, 1132, 1135, 1137, 1140, 1151, 1158], "scratch": [3, 42, 178, 901, 1102], "mathia": [3, 1143], "kettner": [3, 142], "novemb": [3, 23], "bodenseo": [3, 1159], "singen": 3, "bodense": [3, 1159], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1161], "driverentwicklung": [3, 159], "powerpc": 3, "vanilla": [3, 149], "kernel": [3, 4, 5, 43, 61, 65, 78, 110, 111, 128, 131, 135, 136, 141, 142, 143, 145, 146, 148, 156, 157, 158, 159, 162, 164, 179, 186, 218, 231, 234, 241, 244, 259, 262, 266, 276, 280, 302, 308, 316, 336, 347, 349, 391, 413, 426, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 764, 766, 767, 768, 769, 776, 777, 778, 780, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 801, 803, 806, 808, 809, 810, 811, 812, 815, 817, 818, 822, 828, 832, 834, 835, 836, 841, 885, 890, 893, 897, 899, 900, 902, 903, 914, 917, 920, 921, 923, 926, 937, 939, 940, 953, 955, 956, 959, 964, 968, 969, 971, 1143, 1152, 1163], "abteilungsleitung": 3, "ag": [3, 32, 151, 153, 165, 179, 221, 224, 266, 324, 422, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 750, 822, 971, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120], "realtim": [4, 5, 78, 80, 159, 162, 163, 262, 331, 332, 343, 344, 349, 727, 729, 750, 795, 799, 802, 805, 816, 893, 897, 902, 903, 934, 953, 954, 956, 965, 1162, 1163, 1164], "hardwareintegr": [4, 159], "netzwerkprogrammierung": [4, 1152, 1165], "multithread": [4, 29, 59, 62, 72, 73, 74, 75, 78, 141, 142, 146, 148, 159, 178, 182, 213, 222, 232, 249, 271, 273, 301, 339, 343, 344, 348, 349, 414, 424, 655, 683, 721, 749, 750, 942, 947, 956, 969, 970, 996, 1005, 1093, 1095, 1148, 1152, 1163], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 63, 97, 103, 104, 106, 110, 111, 114, 125, 126, 134, 145, 146, 147, 148, 150, 152, 155, 157, 159, 161, 170, 174, 179, 184, 191, 194, 198, 199, 207, 215, 221, 224, 228, 231, 232, 234, 235, 238, 246, 262, 271, 273, 280, 289, 305, 311, 315, 325, 330, 347, 371, 385, 438, 440, 443, 444, 450, 455, 460, 461, 462, 475, 476, 477, 479, 481, 482, 498, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 515, 520, 522, 555, 559, 562, 563, 566, 570, 571, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 633, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 664, 668, 672, 677, 695, 702, 705, 711, 715, 720, 722, 728, 735, 747, 748, 749, 750, 758, 763, 770, 795, 797, 809, 826, 829, 830, 839, 841, 843, 847, 849, 851, 853, 868, 869, 893, 895, 901, 903, 906, 910, 913, 920, 928, 931, 934, 936, 944, 950, 955, 957, 965, 972, 976, 977, 978, 979, 981, 995, 1002, 1003, 1019, 1022, 1040, 1042, 1052, 1053, 1063, 1072, 1078, 1083, 1091, 1095, 1104, 1107, 1111, 1119, 1120, 1130, 1131, 1145, 1149, 1152, 1159, 1161], "userspac": [4, 81, 85, 86, 123, 126, 131, 146, 147, 218, 234, 241, 244, 259, 262, 266, 276, 280, 302, 308, 348, 426, 433, 750, 755, 766, 774, 775, 783, 789, 795, 799, 805, 809, 813, 815, 833, 835, 893, 896, 900, 903, 914, 934, 936, 937, 955, 959, 965, 1152, 1153], "host": [4, 108, 145, 152, 157, 327, 341, 777, 798, 895, 901, 972, 974, 983, 1106, 1111, 1123], "devic": [4, 33, 69, 72, 73, 74, 78, 84, 89, 115, 126, 131, 145, 146, 151, 164, 185, 193, 275, 331, 332, 333, 498, 514, 515, 725, 727, 729, 748, 750, 759, 766, 767, 768, 774, 775, 778, 779, 781, 788, 797, 799, 801, 806, 812, 813, 815, 816, 818, 830, 833, 836, 839, 879, 893, 902, 914, 917, 923, 931, 937, 956, 959, 960, 962, 965, 981, 1006, 1143, 1152, 1153, 1154, 1159], "libusb": [4, 146], "gadgetf": [4, 146], "modbu": [4, 163], "verschiedenen": [4, 23, 173, 190, 1145, 1146, 1158, 1164], "rto": [4, 146], "yocto": [4, 131, 135, 136, 157, 750, 797, 891, 974, 1143], "programmiersprachen": [4, 8, 190, 200, 209, 225, 237, 1147, 1164], "incl": [4, 23, 143, 1154], "buildsystem": 4, "autoconf": [4, 61, 157], "automak": [4, 152, 157, 985, 1155], "meson": [4, 152, 157, 963, 967, 985], "ninja": [4, 32, 157, 440, 973, 985], "make": [4, 13, 17, 43, 44, 45, 61, 63, 65, 68, 70, 78, 80, 109, 116, 117, 123, 131, 136, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 162, 166, 167, 170, 174, 175, 178, 182, 183, 184, 188, 197, 198, 205, 207, 208, 219, 222, 234, 238, 251, 253, 275, 280, 283, 288, 297, 304, 330, 333, 349, 382, 394, 398, 406, 413, 415, 417, 427, 433, 437, 440, 441, 442, 446, 448, 449, 451, 453, 455, 456, 457, 460, 476, 477, 482, 483, 500, 513, 515, 527, 533, 538, 544, 562, 573, 575, 577, 580, 592, 627, 629, 642, 655, 663, 668, 672, 709, 714, 715, 719, 729, 744, 745, 758, 765, 766, 770, 772, 775, 777, 797, 798, 814, 826, 836, 840, 842, 863, 876, 895, 896, 901, 902, 903, 924, 927, 929, 950, 953, 955, 957, 959, 964, 968, 971, 983, 985, 986, 987, 988, 992, 996, 999, 1002, 1014, 1045, 1052, 1065, 1073, 1100, 1113, 1150, 1151, 1161], "perl": [4, 157, 697, 886, 1022], "leider": [4, 154, 221, 234, 241, 256, 1143, 1145], "objektorientiert": [4, 348, 1147], "ooa": 4, "ood": 4, "unit": [4, 72, 73, 74, 78, 82, 84, 97, 106, 114, 115, 119, 148, 166, 181, 182, 185, 186, 197, 206, 224, 238, 263, 264, 271, 275, 288, 304, 339, 343, 344, 420, 439, 440, 453, 479, 502, 508, 512, 541, 572, 701, 729, 730, 750, 751, 903, 955, 1037, 1045, 1095, 1107, 1129, 1150, 1151], "test": [4, 16, 17, 33, 40, 72, 73, 74, 78, 82, 84, 97, 114, 116, 124, 126, 142, 146, 148, 149, 151, 152, 153, 159, 162, 165, 166, 172, 173, 174, 177, 181, 182, 185, 197, 203, 206, 219, 221, 222, 224, 234, 251, 253, 273, 280, 289, 301, 305, 311, 339, 341, 343, 349, 350, 362, 424, 437, 438, 444, 448, 455, 456, 457, 458, 459, 460, 461, 464, 465, 467, 468, 477, 479, 480, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 538, 550, 552, 557, 558, 559, 570, 571, 573, 574, 576, 577, 635, 646, 647, 648, 649, 650, 651, 660, 662, 665, 666, 667, 698, 704, 709, 713, 714, 715, 716, 718, 731, 744, 745, 746, 748, 750, 751, 755, 787, 797, 800, 802, 805, 813, 857, 895, 896, 901, 924, 979, 987, 1018, 1027, 1037, 1041, 1044, 1064, 1089, 1095, 1101, 1102, 1107, 1115, 1134, 1136, 1138, 1141, 1151], "driven": [4, 45, 71, 78, 82, 146, 159, 162, 173, 182, 197, 224, 262, 264, 290, 293, 349, 437, 464, 574, 576, 577, 955, 961, 962, 1120, 1128, 1151], "develop": [4, 5, 21, 45, 71, 73, 78, 80, 82, 103, 104, 112, 147, 149, 151, 152, 153, 157, 159, 162, 170, 173, 181, 182, 185, 190, 197, 203, 208, 209, 216, 218, 219, 224, 229, 254, 259, 264, 289, 290, 293, 305, 329, 331, 332, 341, 347, 349, 415, 427, 433, 437, 442, 450, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 555, 574, 576, 577, 630, 654, 728, 749, 750, 751, 754, 757, 759, 760, 762, 764, 767, 769, 770, 771, 773, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 797, 798, 801, 803, 806, 808, 812, 815, 818, 827, 830, 831, 833, 836, 893, 895, 896, 916, 922, 924, 932, 934, 948, 951, 954, 956, 972, 973, 976, 977, 978, 979, 980, 982, 988, 1020, 1050, 1052, 1095, 1128, 1129, 1150, 1163], "gui": [4, 115, 125, 145, 151, 157, 161, 224, 337, 338, 836, 939, 1161], "gtk": [4, 142], "qt": 4, "fast": [5, 43, 112, 153, 161, 185, 207, 222, 224, 238, 247, 297, 427, 533, 705, 719, 1043, 1124, 1160], "40": [5, 7, 23, 106, 142, 149, 156, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 361, 439, 460, 462, 476, 546, 547, 568, 714, 715, 716, 748, 879, 898, 901, 902, 903, 983, 997, 998, 1022], "jahren": 5, "wesentlichen": [5, 23, 181, 1144], "programmier": [5, 37, 347, 348, 1146, 1147, 1152, 1154, 1155, 1160, 1161], "bin": [5, 13, 23, 50, 63, 112, 114, 115, 117, 119, 122, 123, 125, 142, 145, 147, 157, 166, 169, 179, 196, 206, 215, 218, 221, 226, 231, 234, 238, 241, 244, 256, 259, 264, 266, 276, 280, 302, 308, 330, 338, 440, 441, 442, 443, 445, 446, 447, 448, 451, 453, 498, 513, 514, 775, 797, 829, 832, 834, 839, 842, 853, 857, 858, 882, 883, 888, 901, 903, 919, 926, 929, 935, 949, 950, 959, 971, 972, 973, 983, 985, 988, 992, 998, 1022, 1049, 1050, 1073, 1082, 1083, 1098, 1111, 1123, 1128, 1130, 1142], "ich": [5, 23, 64, 154, 155, 163, 164, 165, 169, 179, 189, 197, 228, 280, 330, 348, 1106, 1142, 1143, 1152, 1159, 1160, 1166], "heut": [5, 348, 1147, 1162], "feinen": 5, "situat": [5, 112, 134, 146, 148, 157, 178, 205, 511, 512, 515, 527, 589, 666, 791, 797, 848, 850, 894, 910, 929, 957, 974, 983, 986, 987, 1035, 1143, 1148], "repertoir": [5, 8, 28, 161, 190, 200, 461], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 160, 163, 173, 179, 191, 204, 330, 331, 335, 348, 885, 1142, 1144, 1145, 1155, 1165, 1166], "da": [5, 7, 8, 64, 154, 155, 160, 163, 164, 165, 166, 173, 181, 185, 189, 190, 194, 197, 199, 200, 202, 206, 209, 210, 211, 215, 218, 225, 226, 228, 231, 234, 235, 237, 239, 247, 249, 256, 266, 276, 280, 298, 301, 308, 310, 322, 325, 330, 335, 348, 885, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1158, 1159, 1160, 1161, 1162, 1165, 1166], "sich": [5, 23, 37, 154, 155, 160, 163, 164, 165, 169, 179, 181, 189, 210, 228, 231, 241, 331, 1142, 1143, 1145, 1146, 1147, 1152, 1155, 1159, 1160, 1161, 1164, 1165, 1166], "jahrelangen": 5, "erfahrung": [5, 235, 1144], "entwickelt": [5, 173, 1152, 1159, 1161], "hat": [5, 8, 23, 37, 149, 154, 155, 163, 164, 165, 166, 169, 173, 179, 181, 189, 190, 194, 196, 200, 211, 231, 286, 298, 323, 330, 348, 1021, 1142, 1145, 1147, 1152, 1159, 1160, 1161, 1164, 1165, 1166], "al": [5, 8, 23, 32, 97, 154, 155, 160, 163, 164, 165, 169, 171, 173, 181, 190, 191, 198, 200, 202, 210, 228, 229, 231, 239, 243, 285, 331, 348, 565, 714, 822, 858, 879, 884, 885, 917, 1095, 1142, 1145, 1147, 1152, 1158, 1159, 1160, 1161, 1164], "einzelunternehm": [5, 23], "werd": [5, 1142], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 155, 169, 181, 348], "um": [5, 23, 32, 154, 155, 163, 165, 169, 173, 179, 189, 190, 228, 241, 256, 348, 1142, 1144, 1145, 1146, 1147, 1152, 1158, 1162], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 173], "oder": [5, 23, 142, 163, 169, 173, 179, 190, 191, 196, 210, 219, 228, 235, 857, 885, 1120, 1142, 1145, 1146, 1152, 1155, 1158, 1159, 1160, 1162, 1165, 1166], "damit": [5, 23, 154, 179, 209, 235, 330, 335, 348, 1143, 1161, 1165], "arbeiten": [5, 23, 179, 190, 1158], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 62, 72, 73, 74, 76, 78, 84, 85, 90, 97, 101, 110, 111, 114, 115, 117, 119, 120, 122, 123, 125, 126, 139, 141, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 159, 161, 164, 166, 167, 169, 170, 174, 181, 182, 183, 185, 186, 187, 192, 197, 198, 203, 206, 207, 213, 215, 216, 219, 222, 225, 229, 232, 235, 236, 237, 243, 248, 252, 261, 264, 265, 268, 271, 273, 281, 282, 283, 285, 289, 305, 307, 315, 316, 317, 318, 319, 320, 321, 327, 329, 330, 331, 332, 333, 334, 335, 336, 341, 343, 344, 347, 349, 354, 356, 357, 360, 362, 363, 365, 366, 367, 368, 371, 373, 376, 378, 383, 396, 405, 409, 410, 412, 414, 416, 417, 424, 426, 429, 431, 432, 433, 434, 438, 439, 440, 444, 445, 449, 450, 453, 455, 461, 465, 475, 476, 477, 481, 482, 483, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 515, 520, 522, 544, 550, 555, 556, 562, 563, 578, 581, 584, 600, 606, 610, 619, 620, 622, 623, 628, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 695, 697, 700, 705, 710, 711, 715, 720, 722, 728, 735, 747, 749, 750, 751, 755, 766, 768, 777, 797, 811, 813, 814, 827, 829, 830, 831, 832, 833, 834, 837, 839, 840, 841, 852, 857, 860, 886, 890, 893, 894, 896, 899, 900, 901, 902, 910, 914, 917, 919, 920, 921, 922, 923, 924, 927, 928, 929, 930, 932, 936, 937, 941, 945, 948, 951, 954, 955, 956, 957, 961, 962, 964, 969, 970, 972, 979, 983, 985, 988, 989, 990, 995, 996, 998, 1004, 1005, 1006, 1007, 1018, 1021, 1025, 1026, 1029, 1030, 1033, 1037, 1038, 1040, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1111, 1115, 1122, 1123, 1125, 1127, 1128, 1132, 1135, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1154, 1155], "gem\u00e4\u00df": [5, 23, 155], "herkunft": [5, 1166], "mein": [5, 23, 154, 155, 160, 164, 165, 179, 189, 190, 209, 348, 896, 964, 1143, 1158], "muttersprach": [5, 23], "ist": [5, 7, 8, 154, 155, 160, 163, 164, 165, 169, 173, 181, 189, 190, 194, 196, 199, 200, 202, 205, 209, 211, 215, 218, 219, 224, 225, 226, 228, 231, 234, 237, 241, 247, 256, 266, 280, 298, 308, 322, 325, 326, 330, 335, 348, 393, 957, 1113, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1155, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "umfasst": [5, 155], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 65, 97, 106, 139, 142, 143, 146, 160, 161, 178, 181, 182, 183, 185, 187, 188, 190, 192, 193, 197, 200, 203, 206, 208, 209, 212, 213, 216, 219, 222, 224, 225, 237, 240, 243, 246, 250, 251, 253, 255, 258, 265, 268, 274, 275, 279, 285, 289, 290, 293, 296, 297, 300, 301, 305, 307, 330, 338, 348, 440, 442, 443, 444, 445, 446, 448, 449, 451, 453, 455, 456, 457, 458, 459, 460, 462, 464, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 511, 513, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 555, 635, 715, 748, 751, 899, 910, 935, 938, 995, 996, 998, 1018, 1019, 1047, 1097, 1109, 1110, 1122, 1133, 1137, 1145, 1147, 1150, 1152, 1153, 1159], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 154, 155, 164, 165, 169, 173, 181, 190, 191, 196, 199, 202, 218, 235, 330, 335, 348, 884, 885, 957, 1142, 1145, 1146, 1147, 1152, 1154, 1155, 1158, 1159, 1161, 1162, 1165, 1166], "letzter": 5, "betreffend": 5, "neuen": [5, 1147], "standard": [5, 34, 35, 36, 38, 106, 114, 138, 153, 174, 178, 183, 185, 187, 208, 215, 221, 230, 231, 234, 238, 249, 262, 264, 288, 304, 311, 321, 330, 331, 332, 333, 335, 351, 352, 353, 359, 360, 365, 366, 370, 415, 503, 522, 541, 555, 556, 600, 606, 610, 617, 618, 619, 620, 622, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 672, 677, 703, 705, 707, 708, 748, 750, 837, 840, 841, 857, 890, 904, 920, 926, 929, 942, 945, 969, 999, 1018, 1019, 1035, 1108, 1120, 1124, 1138, 1144, 1145, 1147, 1148, 1149, 1150, 1154], "absolut": [5, 8, 29, 65, 90, 99, 114, 144, 148, 153, 159, 162, 169, 179, 182, 183, 185, 187, 198, 203, 207, 215, 221, 222, 229, 231, 232, 234, 235, 238, 243, 246, 252, 255, 258, 261, 262, 265, 268, 274, 275, 279, 282, 283, 285, 290, 293, 296, 297, 300, 301, 307, 316, 317, 318, 319, 320, 321, 327, 329, 330, 333, 348, 433, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 725, 728, 749, 750, 751, 795, 807, 823, 824, 825, 826, 827, 830, 831, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 893, 913, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1102, 1105, 1108, 1109, 1111, 1115, 1118, 1120, 1122, 1125, 1127, 1132], "beginn": [5, 8, 29, 32, 78, 90, 143, 144, 154, 159, 162, 173, 179, 182, 183, 185, 187, 198, 213, 216, 217, 219, 222, 229, 232, 235, 239, 246, 258, 265, 268, 274, 275, 285, 290, 293, 296, 297, 300, 301, 307, 316, 317, 318, 319, 320, 321, 329, 330, 333, 375, 683, 750, 751, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1020, 1026, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1102, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132], "advanc": [5, 8, 29, 78, 90, 143, 153, 159, 162, 167, 170, 173, 183, 187, 195, 198, 203, 213, 218, 219, 229, 243, 265, 285, 307, 316, 317, 318, 319, 320, 321, 329, 330, 331, 332, 333, 347, 425, 427, 429, 434, 435, 587, 657, 695, 730, 747, 749, 750, 751, 938, 995, 996, 998, 1003, 1004, 1005, 1006, 1010, 1018, 1020, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1100, 1101, 1102, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132, 1135, 1149], "product": [5, 8, 29, 38, 43, 78, 85, 90, 148, 159, 162, 182, 183, 185, 187, 203, 222, 229, 232, 235, 243, 246, 255, 258, 265, 268, 270, 274, 275, 279, 285, 290, 293, 296, 297, 300, 301, 307, 316, 317, 318, 319, 320, 321, 329, 330, 333, 433, 437, 453, 750, 751, 894, 903, 974, 988, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1102, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132], "gro\u00dfe": [5, 37, 179, 1161], "thema": [5, 23, 164, 181, 235, 249, 330, 335, 1142], "einfach": [5, 165, 179, 190, 194, 276, 1146, 1147, 1152, 1158, 1160, 1162, 1164, 1166], "doch": [5, 202, 276, 286, 348, 1164], "m\u00e4chtig": 5, "vermutlich": [5, 179, 1164], "grund": [5, 1145, 1152], "warum": [5, 7, 23, 190, 191, 199, 241, 1152, 1158, 1159, 1164, 1166], "gern": [5, 179, 1142, 1152, 1159], "nachgefragt": 5, "werden": [5, 8, 37, 154, 155, 160, 163, 164, 165, 173, 179, 181, 190, 191, 194, 200, 209, 210, 225, 237, 249, 885, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1158, 1159, 1161, 1162, 1164, 1165, 1166], "deren": [5, 23, 163, 185, 1147, 1160, 1164, 1165], "kernkompetenz": 5, "liegt": [5, 23, 154, 165, 169, 238, 1146, 1162], "sondern": [5, 165, 179, 190, 1143, 1152, 1155, 1158, 1165], "eher": [5, 154, 190, 1144, 1158], "beiwerk": 5, "ihrem": [5, 23, 1142], "eigentlichen": 5, "job": [5, 157, 178, 188, 247, 420, 894, 919, 920, 921, 990, 1008, 1020, 1024, 1100, 1128], "schreiben": [5, 169, 191, 330, 331, 335, 1145, 1162, 1164], "physik": [5, 169], "z": [5, 38, 109, 165, 166, 169, 179, 189, 221, 222, 234, 237, 259, 286, 360, 370, 381, 382, 443, 576, 639, 709, 823, 884, 969, 1021, 1143, 1152, 1154, 1159], "b": [5, 7, 21, 31, 32, 38, 63, 73, 74, 107, 128, 149, 161, 165, 166, 167, 169, 179, 184, 189, 194, 196, 199, 202, 205, 212, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 291, 298, 302, 308, 322, 324, 325, 326, 362, 370, 372, 381, 397, 411, 414, 427, 557, 559, 567, 568, 574, 575, 576, 577, 582, 626, 627, 632, 633, 662, 668, 702, 709, 719, 748, 797, 828, 840, 857, 879, 884, 885, 901, 902, 903, 942, 958, 987, 993, 1002, 1005, 1017, 1025, 1026, 1032, 1035, 1037, 1039, 1040, 1045, 1108, 1111, 1123, 1143, 1152, 1154, 1159], "guter": [5, 1143], "ersatz": [5, 190, 1158], "matlab": [5, 167, 169, 222, 348, 1094, 1097], "tester": [5, 143, 1128, 1154], "basic": [5, 10, 28, 29, 31, 72, 73, 74, 77, 78, 83, 97, 101, 103, 106, 110, 111, 114, 117, 118, 123, 125, 126, 142, 143, 146, 148, 153, 156, 161, 162, 167, 170, 173, 182, 195, 208, 213, 224, 232, 234, 237, 238, 262, 264, 271, 272, 273, 281, 289, 299, 303, 305, 311, 329, 330, 331, 332, 333, 335, 337, 341, 347, 349, 399, 405, 409, 412, 416, 425, 427, 429, 431, 432, 434, 435, 442, 444, 445, 452, 459, 461, 462, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 533, 549, 550, 555, 581, 589, 594, 606, 610, 618, 619, 622, 623, 627, 628, 629, 640, 647, 648, 649, 650, 651, 652, 657, 660, 661, 663, 666, 668, 695, 712, 728, 735, 745, 747, 749, 750, 754, 757, 759, 764, 767, 774, 778, 788, 797, 799, 801, 806, 812, 815, 817, 818, 820, 824, 825, 831, 833, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 899, 900, 905, 906, 907, 908, 909, 919, 920, 921, 922, 924, 929, 932, 934, 942, 948, 951, 954, 956, 964, 967, 968, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 988, 1026, 1054, 1081, 1082, 1093, 1094, 1103, 1109, 1115, 1116, 1118, 1133, 1137, 1149, 1150, 1163], "einf\u00fchrung": [5, 169, 173, 186, 188, 349, 1018, 1144, 1149, 1150, 1152, 1161, 1163], "anhand": [5, 6, 164, 173, 186, 188, 190, 191, 240, 347, 349, 1144, 1150, 1158, 1163], "beispielen": [5, 8, 160, 186, 188, 190, 200, 209, 225, 237, 348, 349, 1150, 1163], "memori": [5, 42, 43, 49, 55, 73, 78, 80, 97, 109, 110, 111, 141, 145, 146, 147, 149, 151, 158, 162, 166, 167, 168, 171, 173, 178, 184, 185, 193, 197, 198, 202, 215, 221, 224, 231, 234, 249, 271, 273, 275, 280, 297, 300, 348, 349, 351, 365, 371, 393, 394, 400, 413, 415, 416, 418, 424, 425, 427, 429, 433, 434, 435, 462, 477, 479, 481, 482, 483, 485, 487, 488, 495, 496, 503, 520, 522, 523, 547, 555, 556, 561, 562, 572, 590, 591, 592, 608, 627, 637, 652, 655, 657, 666, 693, 695, 700, 707, 712, 714, 715, 716, 747, 748, 749, 750, 759, 764, 767, 769, 774, 778, 788, 792, 793, 794, 797, 799, 801, 802, 806, 809, 815, 818, 828, 833, 835, 841, 893, 910, 919, 939, 941, 942, 955, 956, 988, 992, 1005, 1006, 1019, 1026, 1107, 1145, 1146, 1149, 1153, 1154, 1163], "weiter": [5, 23, 37, 154, 155, 179, 181, 190, 204, 228, 246, 276, 885, 1142, 1152, 1158, 1159, 1161, 1162, 1166], "standbein": [5, 1152], "mehreren": [5, 179, 195, 1165], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 80, 90, 99, 114, 139, 142, 164, 166, 186, 188, 198, 200, 203, 207, 213, 224, 225, 229, 235, 236, 237, 240, 243, 258, 265, 268, 274, 278, 279, 284, 285, 296, 306, 307, 314, 330, 331, 332, 333, 334, 348, 405, 409, 412, 416, 425, 429, 434, 435, 438, 440, 450, 461, 475, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 657, 695, 728, 747, 749, 750, 766, 797, 820, 824, 825, 826, 827, 830, 831, 837, 838, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 894, 902, 916, 922, 924, 932, 934, 948, 950, 951, 954, 956, 970, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 989, 1018, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1144, 1152, 1154, 1155, 1159, 1160, 1161], "konzept": [5, 23, 348, 1152, 1154, 1161], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 154], "mehr": [5, 11, 23, 154, 163, 165, 189, 195, 215, 348, 1142, 1143, 1145, 1147, 1152, 1159, 1160, 1161, 1166], "kernentwickl": 5, "themen": [5, 23, 160, 171, 173, 1152], "applikationsentwicklung": 5, "direkt": [5, 23, 173, 1145, 1161], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 64, 154, 155, 163, 165, 173, 179, 189, 190, 194, 199, 200, 209, 210, 225, 231, 237, 247, 325, 348, 885], "nur": [5, 23, 154, 160, 164, 165, 169, 179, 181, 189, 190, 194, 196, 204, 226, 325, 348, 1144, 1145, 1152, 1155, 1158, 1159, 1160, 1162, 1164, 1165, 1166], "mutig": 5, "pool": [5, 83, 207, 817, 956, 958], "absprach": [5, 1142], "individuel": [5, 23, 181, 1142], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 173, 179, 348, 1143, 1164], "recht": [5, 7, 64, 118, 154, 155, 165, 173, 179, 190, 199, 1158, 1159], "dynamisch": [5, 173, 204, 1145, 1147, 1162], "teilnehm": [5, 160, 169, 173, 181, 348, 1152, 1159], "haben": [5, 154, 155, 164, 169, 173, 181, 189, 190, 202, 348, 616, 1143, 1144, 1145, 1146, 1147, 1152, 1158, 1160, 1161, 1162, 1165], "oft": [5, 23, 154, 179, 181, 1146], "bed\u00fcrfniss": [5, 23, 181], "vorab": [5, 160, 173, 209], "bekannt": [5, 23, 179, 1147], "waren": [5, 164, 169, 1143, 1147], "wodurch": [5, 23], "auch": [5, 23, 154, 155, 160, 165, 169, 179, 191, 194, 196, 202, 205, 210, 231, 235, 241, 266, 325, 326, 348, 1142, 1143, 1144, 1145, 1146, 1152, 1155, 1159, 1164, 1166], "mal": [5, 155, 169, 179, 190, 241, 308, 348, 1143, 1147, 1158], "agenda": [5, 23, 27, 170, 275, 279, 283, 285, 289, 297, 301, 305, 307, 308, 311, 347], "abgewichen": 5, "wird": [5, 7, 23, 154, 155, 160, 163, 164, 165, 173, 179, 189, 190, 196, 199, 228, 330, 335, 348, 1142, 1143, 1146, 1147, 1152, 1154, 1155, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "verh\u00e4ltni": 5, "vortrag": [5, 164, 1142], "\u00fcbungen": [5, 8, 160, 173, 181, 190, 191, 200, 209, 225, 237, 348, 1145, 1152, 1154, 1158, 1161], "ca": [5, 23, 32, 154, 156, 737, 1123], "50": [5, 7, 106, 109, 156, 167, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 331, 332, 422, 424, 440, 511, 546, 547, 879, 901, 902, 903, 997, 1020, 1040, 1052, 1099, 1100, 1112, 1128], "kleiner": [5, 7, 199, 884], "den": [5, 155, 163, 164, 165, 169, 173, 179, 181, 189, 190, 195, 202, 209, 238, 286, 330, 331, 335, 348, 819, 1143, 1144, 1145, 1146, 1147, 1152, 1155, 1158, 1159, 1165, 1166], "teilnehmern": [5, 348, 1166], "pc": [5, 78, 108, 142, 198, 262, 316, 333, 336, 515, 895, 896, 902, 1143], "erledigt": 5, "speziel": [5, 160, 189, 190, 249, 1155, 1158, 1161, 1165], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1142], "denen": [5, 23, 154, 1152], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 62, 65, 78, 85, 90, 108, 114, 115, 128, 146, 147, 148, 149, 150, 151, 152, 153, 157, 161, 162, 163, 166, 167, 178, 179, 182, 183, 185, 186, 187, 190, 191, 195, 196, 197, 201, 203, 204, 207, 209, 213, 214, 216, 217, 219, 220, 222, 223, 225, 227, 229, 230, 231, 236, 237, 239, 240, 242, 243, 245, 251, 253, 255, 257, 258, 260, 262, 264, 265, 267, 268, 271, 272, 273, 275, 277, 278, 279, 281, 284, 285, 287, 290, 293, 296, 297, 299, 300, 301, 303, 306, 307, 309, 314, 330, 335, 337, 348, 350, 365, 371, 388, 393, 394, 403, 406, 418, 419, 427, 433, 441, 442, 443, 445, 447, 449, 450, 452, 457, 460, 462, 477, 482, 491, 492, 496, 505, 506, 511, 512, 513, 514, 531, 559, 560, 574, 575, 576, 577, 590, 659, 668, 683, 713, 714, 729, 748, 750, 768, 781, 783, 793, 797, 802, 807, 829, 836, 842, 858, 894, 896, 901, 903, 910, 915, 917, 923, 931, 935, 939, 944, 952, 953, 956, 957, 968, 970, 971, 972, 983, 986, 992, 995, 996, 999, 1008, 1009, 1015, 1018, 1019, 1022, 1026, 1031, 1050, 1072, 1083, 1090, 1091, 1093, 1095, 1097, 1100, 1101, 1102, 1104, 1108, 1122, 1123, 1135, 1137, 1140, 1151, 1158], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 65, 97, 106, 109, 114, 128, 130, 142, 143, 153, 157, 158, 160, 161, 164, 166, 173, 174, 175, 185, 187, 192, 193, 197, 198, 200, 207, 208, 209, 213, 215, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 243, 246, 250, 251, 253, 254, 255, 258, 262, 265, 271, 272, 273, 275, 279, 283, 285, 289, 290, 293, 297, 301, 305, 307, 311, 329, 334, 335, 336, 337, 344, 349, 350, 502, 533, 575, 753, 756, 758, 761, 763, 766, 775, 777, 787, 789, 797, 798, 799, 800, 805, 809, 896, 901, 903, 971, 972, 973, 975, 981, 985, 987, 988, 989], "endprodukt": 5, "bleibt": [5, 23, 1162], "homepag": [5, 13, 150, 152, 160, 163, 164, 178, 205, 213, 215, 250, 251, 253, 424, 983, 1128], "erhalten": 5, "hier": [5, 8, 17, 23, 64, 154, 155, 160, 163, 164, 166, 169, 173, 181, 185, 189, 190, 196, 200, 206, 209, 210, 219, 225, 228, 237, 238, 280, 298, 348, 1142, 1145, 1152, 1158, 1159, 1161, 1162, 1164], "mix": [5, 29, 185, 192, 203, 206, 213, 216, 219, 220, 224, 226, 229, 258, 265, 278, 279, 284, 285, 287, 306, 307, 314, 376, 415, 418, 419, 421, 423, 566, 750, 1023, 1026, 1042, 1045, 1054, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1094, 1108, 1113, 1119, 1163], "j\u00fcngeren": 5, "2023": [5, 60, 96, 106, 114, 263, 264, 267, 270, 281, 287, 298, 309, 347, 438, 439, 708], "10": [5, 7, 31, 63, 97, 102, 105, 106, 109, 114, 135, 142, 148, 149, 154, 156, 157, 167, 168, 179, 184, 186, 190, 191, 194, 196, 199, 202, 203, 205, 210, 211, 212, 213, 215, 216, 218, 219, 221, 226, 228, 231, 234, 238, 241, 243, 244, 246, 247, 257, 259, 264, 266, 273, 274, 275, 276, 279, 280, 285, 286, 291, 295, 298, 302, 308, 316, 323, 324, 325, 326, 329, 343, 344, 347, 359, 361, 363, 365, 373, 391, 398, 415, 417, 431, 441, 451, 481, 501, 503, 504, 506, 509, 512, 517, 520, 540, 541, 546, 547, 549, 550, 555, 565, 568, 570, 577, 644, 645, 651, 655, 662, 666, 667, 693, 705, 714, 715, 716, 717, 727, 750, 787, 797, 805, 826, 828, 834, 853, 857, 859, 879, 881, 885, 888, 896, 901, 902, 903, 920, 929, 937, 964, 967, 971, 972, 973, 985, 986, 995, 997, 998, 1026, 1027, 1034, 1056, 1057, 1077, 1083, 1094, 1095, 1099, 1100, 1116, 1117, 1123, 1128, 1140, 1158], "09": [5, 97, 112, 142, 149, 158, 182, 198, 263, 298, 308, 327, 347, 439, 442, 879, 902, 903, 927, 1022, 1099], "11": [5, 7, 40, 63, 106, 114, 142, 143, 158, 167, 168, 173, 174, 178, 179, 184, 185, 186, 190, 191, 194, 196, 199, 202, 205, 208, 210, 211, 212, 215, 220, 221, 222, 226, 228, 231, 234, 238, 241, 244, 247, 250, 251, 256, 260, 263, 266, 270, 276, 280, 286, 294, 297, 298, 309, 310, 314, 322, 323, 324, 325, 326, 333, 336, 343, 344, 347, 349, 351, 365, 431, 433, 447, 459, 512, 540, 549, 550, 556, 558, 559, 561, 565, 567, 568, 574, 576, 586, 591, 593, 598, 611, 612, 613, 616, 629, 653, 657, 660, 663, 664, 669, 670, 671, 672, 682, 694, 695, 696, 697, 698, 699, 700, 702, 705, 706, 709, 711, 714, 715, 717, 718, 720, 727, 728, 729, 732, 733, 735, 747, 748, 750, 751, 822, 835, 879, 888, 942, 947, 971, 972, 973, 1021, 1027, 1032, 1050, 1084, 1086, 1090, 1092, 1094, 1097, 1099, 1100, 1111, 1128, 1140, 1147, 1148, 1149, 1158], "introduct": [5, 29, 72, 73, 74, 78, 97, 98, 99, 106, 114, 126, 159, 162, 207, 208, 222, 224, 232, 235, 243, 246, 252, 254, 255, 261, 262, 264, 271, 274, 275, 279, 282, 290, 293, 296, 297, 300, 329, 334, 338, 347, 349, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 533, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 657, 664, 676, 683, 695, 711, 720, 728, 735, 747, 749, 750, 751, 799, 820, 824, 825, 826, 827, 830, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 892, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 937, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 1018, 1091, 1092, 1093, 1102, 1122, 1127, 1149, 1163], "07": [5, 97, 106, 114, 142, 156, 158, 169, 182, 211, 212, 246, 251, 263, 264, 270, 286, 329, 343, 344, 347, 445, 824, 825, 901, 1022, 1050, 1094, 1099], "18": [5, 7, 63, 149, 156, 157, 161, 167, 168, 184, 189, 194, 196, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 227, 228, 234, 238, 241, 244, 247, 256, 260, 262, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 323, 325, 326, 329, 347, 565, 630, 694, 702, 714, 750, 761, 770, 797, 834, 840, 842, 876, 879, 893, 903, 927, 929, 963, 974, 981, 982, 983, 986, 1015, 1050, 1057, 1099, 1100], "For": [5, 40, 112, 114, 144, 145, 146, 150, 153, 156, 158, 159, 161, 162, 167, 170, 175, 176, 178, 182, 198, 203, 206, 213, 216, 219, 224, 234, 237, 239, 243, 251, 253, 254, 255, 279, 285, 290, 301, 341, 347, 349, 361, 362, 368, 383, 392, 399, 405, 409, 412, 414, 416, 425, 429, 434, 435, 452, 477, 533, 558, 565, 569, 582, 591, 611, 657, 695, 702, 705, 709, 714, 719, 747, 749, 750, 768, 783, 797, 824, 825, 834, 857, 893, 894, 902, 903, 904, 913, 917, 944, 965, 972, 973, 974, 981, 982, 986, 1019, 1020, 1030, 1037, 1045, 1068, 1073, 1095, 1098, 1100, 1102], "04": [5, 97, 105, 114, 129, 142, 153, 156, 158, 173, 174, 198, 246, 262, 263, 266, 270, 298, 327, 329, 347, 440, 750, 893, 974, 981, 982, 986, 994, 1099, 1128], "20": [5, 7, 8, 23, 63, 142, 149, 151, 156, 165, 166, 167, 168, 179, 184, 189, 190, 194, 196, 199, 200, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 263, 266, 270, 272, 276, 280, 287, 290, 291, 293, 298, 302, 308, 325, 326, 329, 347, 353, 355, 357, 373, 397, 437, 477, 505, 506, 511, 540, 541, 546, 547, 549, 550, 565, 662, 665, 666, 667, 676, 683, 705, 707, 708, 713, 714, 715, 716, 737, 816, 822, 842, 857, 879, 894, 901, 902, 903, 957, 974, 983, 997, 998, 1022, 1041, 1049, 1050, 1076, 1099, 1100, 1128, 1130, 1137], "clean": [5, 53, 63, 120, 129, 161, 213, 232, 347, 415, 426, 427, 430, 436, 557, 655, 751, 971, 973, 983, 992, 1045, 1094], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 63, 65, 70, 73, 80, 85, 103, 104, 108, 114, 125, 129, 131, 139, 143, 145, 146, 147, 148, 149, 152, 153, 160, 161, 164, 166, 169, 170, 171, 173, 174, 175, 178, 181, 182, 183, 185, 187, 192, 197, 198, 202, 206, 207, 208, 213, 215, 216, 218, 221, 224, 229, 231, 232, 234, 235, 243, 253, 255, 258, 262, 264, 265, 268, 271, 273, 276, 278, 279, 280, 284, 285, 286, 289, 290, 293, 296, 297, 301, 305, 306, 307, 308, 310, 311, 314, 315, 316, 325, 330, 335, 347, 350, 357, 359, 363, 367, 373, 387, 393, 398, 414, 415, 419, 421, 423, 429, 430, 432, 433, 434, 435, 436, 440, 442, 443, 444, 446, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 467, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 536, 538, 539, 541, 542, 544, 545, 547, 548, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 583, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 620, 626, 627, 629, 630, 632, 633, 635, 641, 644, 648, 649, 655, 656, 660, 662, 664, 665, 666, 668, 670, 672, 683, 692, 693, 694, 695, 697, 698, 699, 700, 702, 704, 709, 713, 714, 716, 717, 718, 719, 727, 729, 731, 734, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 756, 761, 774, 775, 789, 795, 797, 802, 809, 812, 813, 815, 818, 836, 863, 893, 894, 902, 903, 918, 919, 935, 938, 942, 946, 955, 959, 961, 962, 964, 966, 968, 970, 971, 972, 973, 974, 975, 976, 978, 979, 981, 983, 994, 995, 997, 998, 999, 1003, 1005, 1014, 1016, 1019, 1020, 1022, 1023, 1029, 1030, 1031, 1037, 1041, 1042, 1043, 1050, 1070, 1074, 1093, 1097, 1109, 1111, 1120, 1122, 1128, 1129, 1131, 1135, 1136, 1137, 1140, 1141, 1148, 1153, 1161, 1162, 1166], "With": [5, 29, 126, 129, 134, 147, 153, 173, 234, 243, 262, 264, 265, 268, 273, 280, 288, 290, 293, 297, 301, 304, 314, 347, 388, 417, 433, 443, 453, 454, 463, 475, 489, 503, 555, 664, 695, 749, 750, 751, 797, 826, 827, 893, 900, 901, 932, 934, 951, 969, 972, 983, 1014, 1018, 1093, 1109, 1113, 1115, 1117, 1124, 1148, 1150, 1151, 1153], "03": [5, 97, 105, 114, 142, 143, 151, 156, 158, 165, 173, 208, 229, 231, 234, 263, 264, 267, 270, 276, 289, 308, 326, 329, 333, 347, 349, 431, 438, 439, 440, 501, 533, 550, 556, 558, 559, 561, 565, 566, 568, 570, 573, 654, 859, 983, 994, 1099, 1137, 1147], "28": [5, 7, 23, 97, 105, 115, 142, 149, 156, 157, 167, 168, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 324, 325, 326, 343, 344, 347, 439, 451, 498, 514, 515, 538, 547, 630, 677, 787, 839, 879, 903, 931, 972, 973, 985, 1052, 1099, 1140], "29": [5, 7, 97, 106, 156, 157, 167, 168, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 309, 322, 325, 329, 343, 344, 347, 439, 717, 761, 901, 903, 971, 974, 983, 1099], "sap": [5, 213, 264, 347, 1115], "13": [5, 6, 7, 63, 106, 129, 139, 149, 151, 158, 165, 167, 168, 179, 184, 187, 191, 194, 196, 199, 202, 205, 210, 212, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 264, 267, 270, 276, 280, 286, 291, 298, 302, 308, 325, 326, 347, 431, 438, 443, 446, 557, 672, 714, 761, 839, 879, 902, 927, 937, 957, 985, 992, 994, 1035, 1046, 1099, 1100, 1123, 1158], "15": [5, 7, 61, 63, 106, 112, 114, 142, 145, 153, 156, 165, 167, 168, 176, 179, 182, 184, 190, 191, 194, 196, 198, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 229, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 281, 286, 290, 291, 293, 298, 302, 308, 323, 325, 326, 327, 329, 336, 343, 344, 347, 439, 505, 506, 523, 524, 525, 526, 528, 529, 632, 692, 715, 736, 738, 740, 748, 826, 840, 894, 928, 937, 1007, 1098, 1099, 1100, 1120, 1123, 1158], "02": [5, 97, 106, 114, 142, 149, 156, 158, 165, 169, 195, 205, 232, 246, 263, 264, 270, 343, 344, 347, 431, 439, 440, 903, 971, 972, 973, 983, 985, 1099], "17": [5, 7, 63, 96, 106, 114, 151, 157, 161, 165, 167, 168, 179, 184, 186, 189, 194, 196, 199, 202, 205, 210, 211, 215, 220, 222, 223, 227, 228, 229, 231, 234, 238, 241, 247, 250, 251, 257, 259, 263, 266, 270, 276, 281, 286, 290, 291, 293, 298, 302, 308, 322, 325, 326, 347, 565, 613, 654, 663, 672, 693, 705, 715, 733, 748, 761, 797, 828, 879, 903, 919, 925, 955, 959, 986, 1015, 1057, 1099, 1100, 1108, 1120], "tour": [5, 154, 213, 250, 251, 253, 273, 310, 311, 347, 348, 501, 653, 749, 750, 1094, 1148, 1149], "forc": [5, 31, 35, 145, 147, 151, 174, 234, 347, 348, 422, 437, 465, 561, 832, 910, 939, 973, 1094, 1148], "2022": [5, 97, 105, 106, 129, 158, 221, 227, 231, 234, 250, 251, 257, 260, 308, 343, 344, 347, 439, 450, 512, 683, 708, 712, 748, 857, 859, 973, 983, 1050, 1094], "12": [5, 6, 7, 8, 40, 63, 106, 112, 114, 128, 142, 151, 156, 157, 158, 167, 168, 172, 179, 184, 190, 191, 194, 196, 199, 202, 205, 206, 210, 211, 212, 215, 218, 219, 223, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 262, 263, 264, 266, 270, 276, 280, 286, 291, 294, 297, 298, 300, 302, 309, 314, 324, 325, 329, 343, 344, 347, 415, 439, 440, 448, 533, 666, 672, 705, 748, 828, 839, 842, 857, 879, 881, 888, 901, 903, 905, 929, 937, 955, 971, 983, 985, 986, 992, 998, 1026, 1037, 1094, 1097, 1099, 1100, 1123, 1134, 1158], "01": [5, 63, 96, 97, 105, 106, 114, 142, 143, 151, 156, 158, 165, 169, 187, 198, 205, 212, 221, 227, 234, 246, 263, 264, 266, 270, 309, 327, 329, 343, 344, 347, 426, 439, 440, 453, 540, 541, 730, 826, 853, 903, 957, 959, 986, 1083, 1094, 1099, 1128], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 61, 65, 69, 73, 74, 78, 82, 84, 85, 97, 98, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 125, 133, 145, 148, 149, 150, 151, 153, 158, 161, 162, 163, 166, 167, 168, 182, 184, 185, 186, 194, 198, 205, 207, 209, 215, 218, 221, 225, 231, 232, 234, 238, 246, 252, 254, 258, 261, 262, 273, 275, 280, 282, 283, 286, 293, 296, 297, 300, 316, 322, 327, 331, 332, 347, 352, 355, 356, 368, 369, 370, 383, 388, 392, 398, 399, 401, 404, 405, 409, 412, 413, 414, 415, 416, 419, 421, 422, 423, 425, 427, 429, 434, 435, 437, 443, 450, 453, 454, 455, 459, 460, 463, 465, 475, 477, 489, 502, 503, 512, 514, 520, 555, 560, 561, 566, 568, 569, 570, 619, 620, 622, 623, 626, 637, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 657, 659, 672, 683, 693, 695, 698, 703, 704, 705, 709, 711, 715, 717, 721, 730, 735, 746, 747, 748, 749, 750, 751, 758, 772, 774, 791, 814, 826, 827, 830, 831, 836, 839, 840, 844, 845, 850, 854, 860, 890, 893, 900, 901, 903, 918, 922, 923, 926, 932, 934, 939, 940, 941, 942, 951, 956, 957, 968, 969, 972, 974, 979, 981, 982, 983, 986, 987, 994, 995, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1025, 1026, 1033, 1035, 1040, 1046, 1050, 1051, 1052, 1057, 1080, 1083, 1086, 1097, 1101, 1103, 1104, 1107, 1111, 1114, 1115, 1121, 1123, 1129, 1130, 1140, 1148, 1149, 1150, 1151, 1153, 1163], "new": [5, 16, 32, 42, 44, 49, 50, 55, 63, 65, 78, 107, 112, 117, 118, 120, 143, 146, 148, 149, 150, 151, 152, 153, 156, 161, 173, 178, 198, 215, 219, 221, 231, 234, 238, 246, 256, 273, 279, 280, 297, 316, 341, 347, 349, 376, 406, 410, 411, 419, 423, 437, 440, 460, 462, 480, 484, 496, 498, 502, 511, 513, 514, 523, 524, 525, 526, 528, 529, 533, 539, 547, 556, 557, 562, 565, 611, 613, 624, 626, 627, 632, 649, 653, 657, 659, 660, 664, 665, 666, 668, 671, 682, 693, 696, 700, 702, 704, 706, 707, 711, 712, 713, 714, 715, 716, 720, 721, 728, 730, 732, 735, 739, 740, 741, 747, 750, 751, 754, 791, 797, 805, 829, 853, 876, 894, 897, 901, 903, 926, 927, 928, 937, 939, 940, 946, 958, 989, 1008, 1023, 1026, 1035, 1074, 1099, 1100, 1117, 1123, 1128, 1147, 1148, 1149, 1151], "languag": [5, 12, 29, 43, 59, 62, 78, 90, 114, 126, 142, 167, 169, 181, 182, 183, 185, 187, 190, 192, 197, 198, 200, 203, 205, 206, 207, 209, 225, 229, 232, 235, 237, 240, 265, 268, 271, 272, 273, 300, 316, 317, 318, 319, 320, 321, 330, 333, 347, 349, 351, 353, 365, 368, 379, 383, 392, 397, 399, 405, 409, 410, 412, 425, 429, 434, 437, 442, 444, 461, 475, 476, 477, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 520, 522, 555, 556, 563, 568, 570, 578, 581, 583, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 664, 671, 672, 682, 696, 701, 703, 706, 711, 715, 718, 719, 720, 728, 734, 735, 747, 749, 750, 751, 829, 886, 894, 895, 971, 973, 990, 999, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1019, 1023, 1025, 1026, 1029, 1038, 1046, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1101, 1105, 1108, 1109, 1111, 1115, 1120, 1122, 1125, 1127, 1132, 1137, 1145, 1148, 1149, 1150, 1151, 1153], "start": [5, 8, 42, 110, 111, 117, 118, 140, 142, 145, 146, 147, 148, 151, 156, 157, 161, 165, 170, 175, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 200, 203, 207, 208, 213, 219, 228, 234, 235, 244, 246, 259, 262, 264, 266, 268, 271, 273, 275, 280, 283, 298, 300, 301, 308, 311, 316, 333, 347, 350, 357, 360, 361, 370, 373, 387, 410, 431, 432, 445, 453, 457, 460, 467, 533, 544, 550, 616, 627, 632, 635, 655, 707, 730, 748, 758, 797, 810, 824, 825, 829, 830, 833, 835, 836, 857, 858, 870, 879, 881, 894, 920, 921, 930, 933, 940, 941, 945, 949, 950, 953, 955, 958, 964, 968, 971, 985, 990, 997, 1002, 1003, 1005, 1006, 1014, 1024, 1025, 1031, 1041, 1057, 1064, 1065, 1083, 1102, 1104, 1112, 1113, 1117, 1120, 1128, 1136, 1148, 1151], "schluss": [5, 7, 154, 179, 199], "noch": [5, 7, 154, 155, 165, 169, 173, 179, 189, 190, 194, 196, 199, 202, 205, 215, 228, 234, 235, 238, 259, 266, 348, 1147, 1158, 1165], "talk": [5, 42, 45, 50, 84, 114, 115, 125, 146, 150, 161, 166, 170, 178, 182, 185, 190, 222, 224, 225, 301, 332, 437, 438, 700, 709, 797, 816, 894, 899, 903, 910, 1140], "heurigen": 5, "grazer": [5, 60, 164, 185, 301, 899], "linuxtagen": [5, 164], "pointless": [5, 129, 259, 273, 280, 297, 301, 310, 419, 566], "blink": [5, 61, 129, 273, 276, 297, 301, 316, 319, 894, 935, 938], "asyncio": [5, 129, 178, 182, 232, 273, 297, 301, 683, 1095], "libgpiod": [5, 121, 125, 128, 129, 143, 273, 297, 301, 316, 318, 750], "raspberri": [5, 78, 97, 104, 106, 119, 128, 129, 141, 158, 162, 188, 262, 273, 297, 301, 333, 335, 336, 347, 349, 515, 750, 774, 778, 797, 801, 806, 812, 815, 818, 893, 900, 902, 903, 914, 959, 972, 974, 978, 981, 983, 985, 996, 1018, 1022, 1109, 1111, 1122, 1143, 1152], "pi": [5, 38, 78, 106, 114, 126, 129, 158, 162, 188, 218, 221, 262, 273, 297, 301, 336, 347, 349, 373, 400, 403, 421, 511, 514, 515, 570, 590, 670, 731, 750, 774, 778, 801, 806, 812, 815, 818, 893, 900, 902, 903, 914, 959, 972, 974, 981, 982, 985, 1026], "cours": [5, 8, 13, 40, 104, 126, 128, 129, 142, 143, 144, 145, 146, 148, 161, 174, 175, 185, 193, 197, 203, 208, 213, 224, 235, 252, 254, 262, 271, 273, 274, 288, 289, 297, 300, 301, 304, 305, 330, 348, 349, 351, 400, 401, 417, 444, 455, 461, 467, 512, 748, 772, 797, 809, 824, 825, 886, 895, 924, 931, 973, 995, 996, 1018, 1050, 1082, 1091, 1095, 1108, 1109, 1122, 1148, 1151, 1163], "sollt": [5, 23, 154, 155, 160, 163, 202, 1145, 1164], "interess": [5, 23, 235, 1143, 1154], "anderen": [5, 23, 179, 189, 194, 196, 348, 1142, 1143, 1145, 1147, 1166], "themenkomplex": 5, "bestehen": [5, 1161], "biet": 5, "folgend": [5, 160, 179, 190, 235, 1158], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 59, 61, 62, 65, 70, 80, 88, 110, 111, 115, 117, 125, 126, 133, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 166, 167, 168, 173, 175, 178, 179, 181, 182, 184, 189, 194, 198, 204, 206, 207, 215, 218, 221, 222, 226, 231, 232, 234, 251, 253, 256, 259, 262, 264, 271, 273, 280, 297, 301, 315, 317, 318, 325, 341, 353, 357, 367, 371, 372, 375, 376, 377, 388, 396, 397, 403, 413, 415, 417, 419, 420, 423, 426, 427, 430, 432, 437, 439, 440, 441, 442, 443, 446, 447, 451, 452, 455, 456, 460, 462, 465, 467, 468, 476, 477, 482, 483, 504, 506, 514, 515, 533, 561, 562, 565, 567, 572, 590, 591, 608, 613, 626, 627, 641, 649, 651, 666, 668, 670, 683, 693, 697, 702, 703, 705, 715, 716, 719, 722, 724, 727, 741, 750, 756, 758, 765, 768, 770, 775, 783, 787, 789, 793, 795, 797, 805, 811, 814, 823, 824, 825, 829, 830, 832, 833, 835, 837, 839, 840, 841, 842, 857, 858, 869, 876, 879, 881, 883, 884, 885, 886, 888, 894, 895, 896, 897, 901, 902, 903, 913, 914, 918, 920, 923, 929, 931, 940, 947, 953, 956, 957, 958, 969, 973, 979, 983, 988, 989, 993, 994, 995, 1006, 1014, 1019, 1020, 1024, 1026, 1039, 1040, 1043, 1044, 1045, 1050, 1056, 1057, 1073, 1074, 1090, 1094, 1095, 1104, 1108, 1117, 1123, 1128, 1130, 1135, 1142, 1143, 1145, 1147, 1151, 1152, 1159, 1160, 1163, 1166], "onlin": [5, 11, 23, 151, 158, 160, 161, 173, 178, 181, 348], "gehalten": [5, 8, 142, 169, 181, 190, 200, 209, 225, 237, 1142, 1147, 1158], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 141, 154, 155, 169, 178, 181, 348, 349, 753, 756, 761, 766, 775, 783, 961, 964, 968, 996, 998, 1018, 1094, 1109, 1122, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1163], "980": [5, 218, 221, 234, 241, 244, 655], "reisekosten": [5, 23], "auto": [5, 118, 143, 155, 163, 167, 173, 249, 311, 457, 462, 486, 487, 491, 492, 495, 496, 497, 550, 558, 567, 568, 591, 613, 614, 616, 657, 658, 665, 672, 675, 677, 680, 683, 684, 685, 687, 688, 689, 690, 691, 695, 697, 698, 699, 700, 705, 707, 709, 714, 715, 716, 718, 729, 734, 736, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 797, 968, 1148, 1159, 1164], "42": [5, 7, 21, 42, 61, 118, 119, 163, 165, 166, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 372, 398, 400, 401, 403, 406, 414, 419, 421, 427, 441, 451, 456, 460, 477, 479, 508, 509, 513, 514, 515, 516, 517, 518, 519, 531, 538, 550, 557, 565, 566, 570, 572, 598, 601, 604, 611, 635, 639, 659, 660, 668, 670, 698, 705, 718, 719, 729, 731, 734, 736, 738, 740, 744, 745, 746, 760, 842, 879, 888, 896, 942, 950, 964, 971, 972, 973, 993, 994, 995, 1002, 1005, 1023, 1025, 1026, 1035, 1036, 1037, 1040, 1059, 1140], "per": [5, 50, 78, 152, 179, 297, 321, 341, 371, 410, 415, 504, 734, 787, 793, 807, 811, 816, 817, 829, 833, 853, 879, 946, 955, 972, 1141, 1166], "kilomet": [5, 148, 697, 857], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 154], "sampl": [6, 114, 119, 146, 157, 203, 206, 207, 219, 223, 229, 235, 238, 255, 271, 297, 316, 433, 501, 727, 944, 964, 1047], "log": [6, 96, 118, 143, 151, 152, 161, 168, 173, 176, 185, 205, 215, 221, 231, 234, 262, 264, 276, 293, 329, 442, 443, 462, 719, 760, 797, 826, 833, 835, 857, 894, 896, 904, 908, 910, 913, 914, 1094, 1097, 1123, 1137], "record": [6, 29, 40, 53, 126, 141, 142, 150, 152, 153, 179, 190, 191, 197, 207, 212, 219, 235, 255, 270, 290, 293, 321, 333, 432, 433, 750, 896, 990, 995, 1010, 1052, 1054, 1073, 1084, 1085, 1086, 1087, 1088, 1090, 1093, 1103, 1158], "grundlagen": [6, 8, 23, 139, 240, 279, 347, 1145, 1147, 1154, 1155, 1158, 1159, 1161, 1162, 1165], "4": [6, 7, 8, 32, 61, 63, 106, 109, 112, 138, 143, 145, 149, 151, 157, 165, 166, 167, 168, 169, 172, 179, 184, 186, 190, 191, 194, 196, 199, 202, 205, 206, 210, 211, 212, 213, 215, 216, 218, 219, 221, 226, 228, 229, 231, 234, 238, 241, 243, 244, 247, 255, 256, 259, 263, 264, 266, 270, 276, 279, 280, 285, 286, 291, 298, 302, 308, 323, 324, 325, 327, 330, 343, 344, 347, 361, 377, 397, 400, 403, 420, 424, 427, 428, 438, 439, 441, 459, 462, 501, 505, 506, 507, 508, 509, 511, 513, 514, 516, 532, 534, 550, 557, 559, 567, 568, 571, 573, 574, 575, 576, 577, 589, 590, 598, 608, 658, 660, 662, 677, 678, 679, 681, 683, 692, 694, 698, 705, 707, 718, 731, 748, 797, 798, 835, 883, 886, 888, 896, 901, 902, 903, 925, 938, 955, 959, 991, 993, 994, 1001, 1003, 1007, 1014, 1017, 1026, 1027, 1032, 1035, 1036, 1037, 1041, 1042, 1046, 1047, 1049, 1050, 1052, 1056, 1069, 1073, 1084, 1086, 1090, 1092, 1095, 1099, 1100, 1102, 1108, 1112, 1113, 1114, 1116, 1117, 1119, 1123, 1128, 1143, 1158], "2021": [6, 10, 23, 127, 139, 156, 158, 194, 196, 205, 211, 212, 215, 220, 223, 246, 327, 329, 343, 344, 347, 533, 676, 701, 735, 853, 857, 879, 880, 957, 971, 985, 1021], "templat": [6, 65, 74, 106, 173, 208, 249, 271, 276, 311, 332, 333, 441, 503, 522, 555, 556, 600, 606, 610, 611, 618, 619, 620, 622, 640, 647, 648, 649, 650, 651, 652, 659, 665, 670, 673, 674, 675, 676, 680, 681, 683, 686, 713, 717, 719, 727, 729, 734, 735, 736, 738, 740, 748, 749, 750, 942, 1147, 1149], "descript": [6, 8, 31, 39, 106, 112, 130, 148, 149, 161, 162, 178, 182, 183, 185, 186, 187, 188, 193, 208, 213, 215, 219, 221, 224, 231, 234, 238, 250, 251, 254, 288, 289, 304, 305, 349, 442, 452, 460, 470, 471, 472, 473, 474, 478, 488, 512, 707, 714, 715, 716, 725, 727, 729, 748, 797, 809, 821, 823, 832, 857, 859, 879, 886, 889, 890, 903, 915, 923, 973, 985, 1036, 1050, 1073, 1130, 1151], "sidebar": [6, 17, 65, 143, 809], "metadata": [6, 28, 39, 142, 161, 259, 829, 832, 902, 905, 931, 993, 1153], "angebot": [6, 160], "hous": [6, 32, 146], "meiner": [6, 23, 235, 348, 1143], "person": [6, 23, 153, 183, 202, 205, 244, 246, 248, 255, 259, 266, 297, 298, 337, 422, 457, 458, 461, 486, 570, 629, 735, 910, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1090, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1128, 1129], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 191, 199], "wichtig": [7, 199, 249, 330, 335, 1166], "1": [7, 32, 39, 42, 50, 61, 63, 72, 74, 87, 106, 109, 110, 111, 112, 125, 128, 138, 139, 142, 147, 149, 152, 153, 155, 156, 157, 161, 162, 164, 165, 166, 167, 168, 169, 174, 175, 176, 179, 181, 184, 191, 194, 195, 196, 199, 202, 205, 206, 210, 211, 212, 215, 218, 221, 224, 226, 228, 231, 234, 238, 241, 244, 246, 247, 251, 256, 259, 263, 264, 266, 270, 276, 280, 286, 289, 291, 294, 298, 302, 305, 308, 315, 316, 322, 323, 324, 325, 326, 327, 328, 330, 333, 335, 343, 344, 347, 361, 362, 384, 391, 400, 404, 406, 414, 431, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 455, 456, 476, 477, 483, 493, 501, 502, 505, 509, 511, 513, 514, 515, 517, 521, 523, 524, 525, 526, 527, 528, 529, 534, 537, 540, 543, 546, 549, 550, 552, 557, 558, 559, 565, 567, 571, 573, 574, 575, 576, 577, 582, 587, 589, 595, 596, 597, 598, 599, 604, 608, 620, 622, 630, 632, 635, 639, 649, 655, 656, 658, 659, 660, 662, 665, 666, 668, 670, 672, 674, 675, 677, 679, 680, 681, 683, 684, 685, 692, 698, 700, 703, 704, 705, 707, 709, 710, 713, 714, 716, 717, 718, 727, 731, 734, 736, 737, 738, 740, 746, 748, 750, 755, 760, 766, 770, 775, 797, 814, 823, 824, 825, 828, 829, 830, 832, 833, 834, 835, 836, 839, 840, 841, 842, 843, 847, 849, 851, 853, 854, 858, 859, 860, 876, 879, 880, 881, 882, 883, 885, 886, 888, 889, 890, 892, 894, 901, 902, 904, 905, 913, 914, 915, 917, 919, 920, 921, 923, 924, 925, 927, 928, 929, 930, 935, 937, 938, 950, 952, 953, 955, 957, 959, 960, 961, 964, 967, 968, 970, 971, 974, 983, 985, 986, 987, 988, 990, 991, 993, 994, 995, 998, 999, 1001, 1003, 1005, 1007, 1008, 1014, 1015, 1017, 1019, 1020, 1021, 1022, 1024, 1027, 1028, 1029, 1030, 1031, 1034, 1036, 1037, 1042, 1047, 1049, 1050, 1052, 1057, 1060, 1063, 1073, 1077, 1080, 1083, 1084, 1086, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1107, 1112, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1128, 1129, 1130, 1135, 1139, 1142, 1148, 1150, 1151, 1155, 1158, 1160, 1165], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 59, 61, 62, 63, 65, 66, 68, 69, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 122, 123, 125, 126, 131, 133, 134, 139, 140, 142, 143, 145, 146, 149, 150, 151, 152, 153, 156, 157, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 194, 196, 197, 198, 199, 202, 203, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 242, 245, 246, 247, 251, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 284, 286, 288, 290, 291, 293, 294, 296, 297, 298, 300, 301, 302, 304, 306, 307, 308, 310, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 330, 333, 335, 336, 338, 341, 343, 344, 348, 349, 351, 352, 353, 354, 355, 361, 362, 363, 365, 367, 368, 369, 371, 372, 375, 376, 377, 379, 380, 382, 383, 384, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 455, 457, 459, 460, 461, 462, 465, 468, 469, 476, 477, 479, 480, 481, 482, 483, 496, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 520, 522, 527, 531, 533, 538, 541, 544, 547, 550, 555, 556, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 582, 585, 586, 590, 591, 592, 593, 594, 595, 596, 598, 599, 604, 608, 611, 612, 613, 615, 617, 620, 622, 627, 629, 630, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 669, 672, 677, 678, 679, 680, 681, 683, 694, 695, 698, 699, 703, 704, 707, 708, 709, 713, 715, 716, 717, 719, 721, 725, 727, 728, 729, 730, 734, 735, 736, 738, 744, 747, 748, 749, 750, 751, 752, 753, 756, 758, 761, 763, 765, 766, 768, 772, 775, 779, 783, 785, 787, 789, 791, 793, 795, 797, 798, 799, 804, 805, 807, 809, 810, 811, 813, 814, 822, 823, 824, 825, 826, 827, 829, 830, 831, 834, 835, 836, 837, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 864, 865, 868, 869, 871, 872, 873, 877, 879, 881, 884, 886, 889, 890, 893, 894, 895, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 912, 917, 924, 927, 929, 931, 934, 935, 937, 938, 939, 940, 941, 942, 944, 945, 947, 948, 951, 954, 955, 956, 957, 958, 959, 964, 965, 968, 969, 972, 973, 974, 975, 979, 981, 982, 983, 984, 985, 986, 987, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1049, 1050, 1052, 1053, 1054, 1055, 1057, 1064, 1067, 1070, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1130, 1131, 1133, 1135, 1137, 1141, 1143, 1145, 1148, 1150, 1151, 1152, 1153, 1161, 1162, 1163, 1165], "41": [7, 151, 156, 167, 168, 179, 189, 194, 196, 199, 202, 205, 207, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 324, 325, 462, 718, 748, 787, 879, 902, 1007, 1050, 1052, 1099, 1130], "print": [7, 63, 142, 165, 166, 168, 169, 179, 182, 184, 185, 189, 194, 196, 197, 198, 199, 202, 205, 206, 210, 211, 212, 215, 218, 219, 221, 226, 228, 231, 234, 237, 238, 241, 244, 247, 256, 259, 263, 264, 266, 276, 280, 286, 291, 297, 298, 302, 308, 322, 323, 324, 325, 326, 356, 360, 362, 431, 442, 586, 613, 636, 683, 697, 705, 707, 834, 835, 841, 857, 859, 860, 901, 949, 959, 990, 993, 994, 995, 997, 998, 999, 1003, 1005, 1007, 1008, 1011, 1013, 1016, 1021, 1022, 1023, 1024, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1045, 1046, 1060, 1062, 1072, 1073, 1074, 1076, 1077, 1083, 1098, 1103, 1107, 1111, 1120], "ja": [7, 23, 155, 179, 196, 199, 202, 215, 218, 247], "basta": [7, 146, 199, 1026], "2": [7, 29, 32, 42, 50, 61, 63, 72, 104, 106, 112, 115, 139, 142, 147, 149, 155, 156, 157, 163, 165, 166, 167, 168, 169, 180, 184, 190, 191, 194, 195, 199, 202, 205, 206, 210, 211, 212, 215, 220, 221, 226, 228, 231, 232, 234, 238, 241, 244, 246, 247, 256, 259, 263, 264, 266, 270, 276, 280, 286, 289, 291, 294, 298, 302, 305, 308, 316, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 339, 347, 360, 361, 373, 379, 380, 400, 404, 431, 437, 438, 439, 440, 443, 444, 445, 449, 450, 451, 452, 453, 455, 477, 501, 502, 505, 511, 513, 514, 517, 521, 523, 524, 525, 526, 528, 529, 533, 548, 550, 557, 558, 559, 565, 567, 568, 571, 573, 574, 575, 576, 577, 582, 587, 591, 595, 596, 597, 598, 599, 604, 608, 612, 613, 614, 615, 620, 630, 635, 655, 658, 659, 660, 662, 665, 668, 670, 672, 673, 675, 677, 680, 681, 683, 693, 694, 697, 698, 703, 704, 705, 707, 709, 710, 713, 714, 715, 716, 717, 718, 727, 729, 731, 737, 748, 750, 756, 797, 824, 825, 832, 835, 836, 839, 840, 841, 853, 876, 879, 882, 883, 888, 890, 892, 894, 898, 901, 902, 914, 917, 919, 920, 921, 923, 924, 927, 928, 929, 930, 931, 933, 935, 937, 938, 950, 952, 955, 957, 959, 970, 971, 986, 988, 990, 991, 993, 994, 996, 999, 1001, 1003, 1007, 1011, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1027, 1028, 1029, 1031, 1036, 1037, 1042, 1047, 1049, 1051, 1052, 1053, 1054, 1056, 1060, 1063, 1073, 1077, 1080, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1105, 1112, 1113, 1114, 1116, 1117, 1118, 1122, 1123, 1128, 1129, 1130, 1134, 1135, 1142, 1150, 1151, 1158, 1161, 1162, 1164, 1165, 1166], "1234": [7, 32, 199, 202, 212, 221, 226, 228, 280, 308, 325, 912, 920, 969, 1026], "3": [7, 32, 61, 63, 106, 109, 110, 111, 117, 128, 142, 151, 156, 157, 161, 163, 165, 166, 167, 168, 169, 176, 178, 179, 184, 190, 191, 194, 195, 196, 199, 202, 205, 206, 210, 212, 214, 215, 220, 221, 224, 226, 228, 231, 234, 238, 241, 243, 245, 246, 247, 249, 256, 259, 263, 264, 266, 270, 276, 280, 286, 291, 293, 294, 299, 302, 308, 323, 324, 325, 326, 330, 331, 332, 335, 347, 361, 373, 374, 375, 388, 397, 398, 419, 420, 428, 431, 433, 438, 439, 440, 443, 448, 459, 476, 477, 501, 502, 506, 509, 511, 512, 513, 514, 516, 517, 518, 519, 523, 524, 525, 526, 528, 529, 531, 533, 550, 557, 559, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 577, 582, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 604, 620, 630, 635, 637, 658, 659, 660, 662, 670, 672, 673, 677, 678, 679, 680, 681, 683, 698, 703, 705, 707, 709, 714, 715, 717, 718, 731, 733, 748, 755, 761, 797, 835, 840, 854, 857, 879, 881, 883, 888, 890, 896, 898, 901, 902, 903, 905, 914, 915, 917, 919, 920, 921, 924, 928, 929, 930, 938, 939, 940, 944, 950, 952, 955, 958, 959, 960, 963, 965, 968, 969, 971, 972, 973, 991, 993, 994, 996, 999, 1001, 1003, 1007, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1027, 1029, 1031, 1032, 1035, 1036, 1037, 1042, 1043, 1044, 1046, 1049, 1050, 1052, 1069, 1073, 1077, 1083, 1084, 1086, 1090, 1092, 1095, 1098, 1099, 1100, 1103, 1106, 1112, 1113, 1114, 1116, 1117, 1119, 1123, 1128, 1129, 1130, 1137, 1142, 1144, 1146, 1148, 1151, 1154, 1158], "decim": [7, 199, 234, 238, 280, 308, 316, 353, 439, 1026, 1040], "5": [7, 32, 61, 63, 118, 119, 123, 138, 142, 149, 151, 157, 167, 168, 169, 174, 177, 180, 184, 190, 191, 194, 196, 197, 199, 202, 203, 205, 206, 209, 211, 212, 213, 215, 216, 218, 219, 221, 226, 228, 229, 231, 234, 238, 241, 243, 244, 246, 247, 251, 255, 256, 259, 263, 266, 270, 276, 279, 280, 285, 286, 291, 294, 298, 302, 308, 316, 322, 324, 325, 330, 335, 343, 344, 347, 353, 355, 360, 377, 379, 388, 415, 420, 424, 433, 438, 442, 445, 456, 459, 462, 477, 485, 501, 504, 506, 511, 512, 514, 515, 516, 517, 518, 519, 531, 532, 537, 550, 557, 558, 559, 565, 569, 570, 573, 574, 576, 577, 598, 608, 635, 655, 659, 662, 663, 665, 666, 672, 674, 675, 677, 692, 693, 705, 707, 714, 715, 716, 718, 731, 740, 748, 770, 775, 798, 826, 828, 879, 883, 888, 894, 901, 902, 903, 919, 921, 929, 938, 955, 971, 983, 991, 993, 994, 997, 1003, 1007, 1014, 1020, 1025, 1026, 1027, 1031, 1032, 1034, 1037, 1040, 1042, 1046, 1047, 1050, 1073, 1077, 1084, 1086, 1090, 1092, 1095, 1099, 1100, 1103, 1108, 1119, 1123, 1128, 1130, 1135, 1139, 1145, 1147, 1152, 1153, 1158, 1159], "hexadecim": [7, 199, 238, 372, 902, 1026, 1039, 1040], "16": [7, 63, 142, 151, 153, 154, 156, 165, 167, 168, 173, 174, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 260, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 322, 323, 324, 325, 326, 330, 335, 336, 347, 371, 415, 422, 433, 440, 577, 635, 714, 775, 787, 879, 896, 901, 903, 914, 919, 920, 928, 937, 971, 973, 985, 986, 991, 998, 1001, 1026, 1052, 1099, 1100, 1130], "7": [7, 32, 42, 63, 143, 146, 149, 151, 156, 163, 166, 167, 168, 169, 179, 184, 191, 194, 196, 197, 199, 202, 203, 205, 209, 211, 212, 213, 215, 216, 218, 221, 226, 228, 231, 234, 238, 241, 243, 244, 246, 247, 255, 256, 259, 263, 264, 266, 270, 276, 280, 285, 286, 291, 294, 298, 302, 308, 315, 324, 325, 330, 335, 336, 347, 361, 365, 379, 406, 415, 439, 440, 443, 448, 456, 476, 477, 501, 504, 509, 513, 514, 516, 517, 518, 519, 531, 538, 546, 550, 557, 565, 566, 570, 572, 573, 574, 576, 597, 601, 604, 613, 630, 639, 659, 667, 692, 693, 694, 698, 705, 731, 744, 745, 746, 828, 829, 840, 841, 857, 879, 888, 901, 902, 903, 920, 928, 952, 955, 964, 965, 968, 969, 972, 973, 994, 997, 1003, 1007, 1020, 1025, 1026, 1027, 1030, 1032, 1034, 1035, 1050, 1062, 1080, 1083, 1095, 1099, 1100, 1103, 1108, 1119, 1128], "0x1234": [7, 199, 1026], "4660": [7, 199, 221, 1026], "8": [7, 32, 63, 109, 142, 148, 149, 153, 157, 165, 166, 167, 168, 169, 173, 178, 179, 182, 184, 191, 194, 196, 197, 199, 202, 203, 205, 206, 211, 212, 213, 215, 216, 218, 219, 221, 225, 226, 228, 231, 234, 238, 241, 243, 244, 247, 255, 256, 259, 262, 263, 266, 270, 276, 280, 283, 285, 286, 291, 294, 297, 298, 302, 308, 322, 323, 324, 325, 330, 347, 371, 415, 427, 433, 439, 443, 445, 448, 476, 508, 543, 550, 557, 562, 565, 570, 574, 576, 577, 666, 714, 731, 748, 770, 793, 797, 828, 834, 842, 879, 881, 888, 894, 895, 896, 897, 901, 902, 971, 988, 994, 997, 1003, 1026, 1027, 1032, 1040, 1045, 1049, 1050, 1056, 1092, 1095, 1099, 1100, 1106, 1123, 1130], "bin\u00e4r": [7, 23, 199, 202], "9": [7, 8, 32, 61, 63, 112, 142, 147, 151, 154, 161, 165, 166, 167, 168, 169, 177, 179, 181, 184, 185, 186, 187, 188, 191, 192, 194, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 209, 211, 212, 213, 215, 218, 219, 221, 226, 228, 231, 234, 235, 238, 241, 244, 246, 247, 256, 259, 262, 263, 266, 270, 271, 273, 276, 280, 286, 291, 298, 302, 308, 322, 323, 325, 326, 330, 335, 347, 353, 355, 361, 370, 373, 431, 439, 456, 476, 485, 504, 550, 552, 568, 577, 667, 677, 705, 731, 775, 853, 876, 879, 901, 902, 903, 919, 955, 991, 1001, 1020, 1021, 1027, 1032, 1034, 1042, 1046, 1050, 1057, 1062, 1099, 1100, 1108, 1123, 1128], "0b100110": [7, 199, 228, 1026], "38": [7, 23, 142, 149, 156, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 460, 476, 501, 568, 714, 748, 879, 974, 983, 1099, 1100], "arithmet": [7, 108, 166, 199, 204, 224, 227, 239, 254, 271, 330, 354, 368, 375, 376, 382, 383, 392, 398, 399, 405, 409, 412, 414, 415, 416, 425, 429, 434, 435, 454, 463, 475, 476, 489, 503, 551, 555, 585, 589, 590, 593, 598, 655, 657, 695, 704, 705, 747, 749, 750], "man": [7, 32, 37, 114, 146, 148, 154, 155, 163, 169, 173, 179, 181, 189, 190, 196, 199, 202, 207, 209, 211, 222, 228, 235, 238, 262, 283, 302, 330, 335, 337, 348, 445, 538, 547, 559, 721, 748, 756, 775, 823, 824, 825, 828, 829, 832, 839, 840, 841, 842, 843, 847, 849, 851, 854, 858, 859, 860, 876, 879, 880, 882, 883, 885, 886, 888, 889, 903, 910, 913, 914, 915, 917, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 933, 939, 940, 942, 944, 946, 947, 950, 952, 958, 965, 968, 969, 971, 987, 988, 1143, 1144, 1145, 1147, 1155, 1158, 1160, 1161, 1162, 1164, 1165, 1166], "behaviour": [7, 199, 207, 783, 929, 1045], "erzwingen": [7, 179, 191, 199], "floor": [7, 38, 191, 199, 202, 206, 218, 219, 221, 226, 228, 234, 238, 308, 325, 1014, 1026], "divis": [7, 36, 38, 191, 199, 202, 218, 221, 226, 228, 234, 325, 353, 374, 476, 477, 491, 1014, 1026, 1080], "modul": [7, 12, 21, 23, 29, 65, 129, 136, 142, 149, 151, 156, 168, 174, 176, 178, 181, 182, 183, 184, 185, 192, 193, 199, 202, 206, 208, 213, 215, 216, 219, 221, 222, 225, 226, 228, 229, 231, 232, 234, 235, 237, 238, 240, 241, 245, 246, 249, 255, 257, 258, 259, 264, 266, 274, 275, 278, 280, 284, 285, 288, 289, 290, 293, 298, 300, 302, 304, 305, 306, 307, 308, 314, 315, 316, 325, 331, 332, 333, 335, 341, 348, 393, 437, 439, 443, 444, 450, 452, 453, 465, 654, 695, 749, 750, 753, 754, 756, 757, 759, 761, 762, 763, 764, 766, 767, 774, 777, 778, 782, 788, 793, 794, 798, 799, 801, 806, 809, 812, 815, 818, 893, 894, 901, 903, 992, 993, 994, 995, 996, 999, 1007, 1008, 1010, 1014, 1015, 1019, 1020, 1023, 1024, 1035, 1036, 1037, 1041, 1043, 1046, 1047, 1048, 1051, 1052, 1053, 1054, 1088, 1089, 1090, 1091, 1093, 1094, 1096, 1097, 1101, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1122, 1123, 1125, 1127, 1128, 1131, 1132, 1138, 1150, 1152, 1153, 1159, 1163, 1166], "restklassen": [7, 199], "rest": [7, 17, 40, 153, 155, 165, 189, 199, 202, 206, 208, 226, 234, 266, 280, 298, 301, 325, 351, 361, 386, 440, 588, 589, 650, 707, 785, 836, 897, 927, 955, 1014, 1017, 1041, 1070, 1074, 1103, 1118, 1150, 1166], "14": [7, 63, 139, 143, 156, 167, 168, 179, 184, 191, 194, 196, 198, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 246, 247, 250, 256, 259, 263, 266, 270, 276, 280, 286, 297, 298, 300, 302, 308, 314, 322, 323, 325, 326, 327, 347, 439, 450, 451, 453, 462, 556, 630, 654, 666, 705, 707, 715, 717, 748, 839, 842, 854, 879, 881, 901, 902, 903, 905, 920, 929, 959, 971, 972, 973, 992, 1094, 1099, 1100, 1147, 1158], "oper": [7, 29, 33, 34, 35, 38, 73, 78, 80, 97, 108, 123, 125, 145, 146, 148, 152, 164, 165, 167, 170, 173, 178, 182, 183, 184, 185, 187, 191, 196, 199, 204, 205, 206, 207, 208, 213, 215, 219, 220, 223, 226, 228, 229, 233, 236, 239, 242, 244, 247, 249, 259, 266, 271, 272, 273, 274, 275, 276, 279, 280, 296, 300, 301, 303, 308, 316, 330, 335, 353, 361, 371, 377, 392, 397, 398, 399, 403, 405, 406, 409, 412, 414, 416, 418, 421, 425, 427, 429, 434, 435, 457, 458, 477, 497, 503, 515, 520, 522, 550, 555, 556, 557, 562, 563, 567, 570, 574, 575, 576, 577, 578, 581, 582, 584, 590, 598, 599, 600, 606, 610, 611, 614, 619, 622, 623, 635, 640, 647, 648, 649, 650, 651, 652, 655, 657, 663, 665, 666, 668, 672, 677, 679, 680, 681, 683, 686, 690, 693, 695, 697, 698, 699, 700, 705, 707, 714, 715, 718, 725, 729, 731, 739, 740, 741, 747, 748, 749, 750, 759, 764, 767, 768, 774, 778, 788, 797, 799, 801, 806, 812, 813, 815, 818, 824, 825, 828, 857, 863, 888, 889, 893, 901, 902, 903, 914, 919, 920, 921, 922, 923, 924, 935, 938, 942, 944, 964, 968, 972, 985, 988, 996, 999, 1006, 1007, 1010, 1027, 1031, 1035, 1040, 1041, 1046, 1060, 1093, 1095, 1104, 1113, 1135, 1140, 1147, 1153], "preced": [7, 35, 38, 199, 221, 226, 234, 239, 242, 353, 359, 374, 375, 383, 388, 392, 397, 399, 403, 405, 407, 409, 412, 416, 425, 429, 434, 435, 586, 590, 657, 695, 747, 749, 750, 857, 906], "implizit": [7, 179, 199, 276, 1145, 1162], "klammerung": [7, 199, 885], "durch": [7, 154, 155, 163, 169, 173, 181, 189, 199, 231, 241, 330, 335, 348, 885, 1142, 1143, 1145], "pr\u00e4zedenz": [7, 179, 191, 199], "6666666666666665": [7, 199], "frage": [7, 155, 165, 169, 196, 199, 202, 208, 228, 348, 1152, 1159, 1166], "6665": [7, 199], "6667": [7, 199], "ieee": [7, 199], "floatingpoint": [7, 199, 374, 375, 498, 797, 1072], "representaion": [7, 199], "true": [7, 35, 38, 50, 58, 63, 110, 111, 147, 149, 151, 156, 165, 166, 167, 168, 178, 179, 184, 189, 194, 196, 197, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 226, 228, 231, 232, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 316, 322, 325, 359, 375, 376, 388, 400, 403, 443, 501, 565, 573, 598, 626, 637, 639, 660, 683, 684, 685, 686, 688, 689, 690, 691, 716, 725, 727, 729, 731, 748, 785, 787, 817, 830, 857, 870, 938, 944, 949, 950, 953, 955, 956, 964, 965, 968, 977, 992, 998, 999, 1003, 1005, 1006, 1007, 1008, 1011, 1014, 1027, 1028, 1030, 1031, 1032, 1035, 1041, 1044, 1045, 1108, 1112, 1114, 1119, 1134, 1135, 1137], "zahlen": [7, 189, 190, 199, 1145, 1158], "vergleichen": [7, 179, 199], "21": [7, 97, 99, 102, 105, 106, 114, 153, 156, 167, 168, 179, 184, 187, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 325, 329, 347, 439, 748, 787, 839, 879, 902, 903, 914, 985, 1099, 1100], "ab": [7, 23, 32, 154, 156, 179, 189, 190, 199, 234, 238, 241, 256, 259, 280, 308, 557, 559, 567, 576, 662, 718, 1100, 1152, 1158], "0001": [7, 149, 167, 199], "aber": [7, 23, 37, 155, 163, 165, 169, 179, 189, 190, 194, 197, 199, 228, 231, 234, 286, 348, 885, 1143, 1145, 1147, 1154, 1161, 1165, 1166], "unendlich": [7, 8, 190, 199, 200], "lang": [7, 151, 154, 155, 164, 199, 321, 322, 339, 348, 442, 1144, 1160, 1165], "22": [7, 63, 97, 105, 106, 114, 148, 151, 156, 158, 167, 168, 179, 184, 186, 189, 194, 195, 196, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 287, 290, 291, 293, 298, 308, 322, 324, 325, 326, 347, 748, 842, 879, 903, 904, 912, 913, 928, 972, 973, 1057, 1094, 1099, 1100, 1159], "1000000": [7, 148, 179, 199, 276, 325, 431, 894, 902], "23": [7, 63, 114, 149, 156, 157, 158, 164, 167, 168, 169, 179, 184, 186, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 232, 234, 237, 238, 241, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 347, 403, 439, 442, 683, 842, 879, 901, 902, 983, 1052, 1057, 1099, 1100, 1130, 1137], "32": [7, 156, 157, 163, 165, 168, 179, 184, 189, 194, 196, 199, 202, 205, 208, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 325, 353, 355, 371, 376, 415, 456, 462, 485, 501, 514, 793, 822, 828, 853, 879, 895, 897, 972, 973, 983, 1050], "4294967295": [7, 199, 218, 226, 234], "24": [7, 63, 97, 105, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 149, 156, 164, 167, 168, 169, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 280, 286, 291, 298, 308, 322, 323, 325, 326, 347, 450, 648, 650, 672, 714, 715, 750, 797, 824, 825, 879, 901, 988, 1099, 1100], "64": [7, 148, 151, 156, 179, 184, 189, 194, 196, 199, 202, 205, 207, 208, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 359, 371, 376, 400, 415, 421, 424, 450, 793, 935, 938, 961, 968, 971, 988, 1052, 1099, 1143], "18446744073709551615": [7, 179, 189, 199, 202, 215, 218, 226, 228, 234, 238, 241, 244, 266, 298, 325], "overflow": [7, 42, 44, 50, 148, 189, 199, 215, 218, 219, 221, 224, 225, 231, 234, 241, 244, 259, 266, 276, 280, 302, 308, 376, 378, 414, 423, 834], "wenn": [7, 23, 154, 155, 160, 165, 173, 179, 181, 189, 190, 196, 199, 235, 241, 276, 884, 1142, 1144, 1145, 1152, 1154, 1155, 1158, 1161, 1166], "verwendet": [7, 23, 169, 173, 179, 199, 241, 1143, 1145, 1155, 1159, 1161, 1166], "wert": [7, 23, 190, 191, 196, 199, 231, 234, 238, 241, 247, 276, 280, 286, 1158, 1166], "w\u00e4re": [7, 163, 189, 199, 235, 1147, 1154], "dort": [7, 64, 155, 163, 165, 173, 189, 190, 199, 348, 1158, 1164, 1166], "25": [7, 63, 97, 156, 157, 167, 168, 169, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 232, 234, 237, 238, 241, 244, 246, 247, 256, 259, 263, 266, 270, 276, 280, 286, 293, 298, 302, 308, 316, 325, 326, 347, 549, 550, 672, 709, 777, 879, 903, 971, 997, 1040, 1084, 1086, 1090, 1092, 1099, 1100, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "18446744073709551616": [7, 179, 189, 199, 202, 215, 218, 226, 228, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308, 325], "26": [7, 149, 151, 156, 157, 158, 167, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 251, 256, 259, 263, 266, 270, 280, 286, 291, 298, 302, 308, 325, 329, 347, 549, 550, 677, 693, 857, 879, 903, 935, 937, 938, 971, 973, 1099, 1100, 1123, 1159], "1000": [7, 23, 179, 189, 199, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 514, 515, 533, 608, 655, 729, 807, 832, 834, 839, 853, 854, 881, 882, 886, 888, 914, 921, 929, 950, 955, 959, 985, 992, 1041, 1073], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 179, 189, 199, 202, 215, 238, 241, 259, 286], "27": [7, 63, 97, 114, 156, 158, 167, 168, 179, 189, 194, 196, 198, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 237, 238, 241, 244, 246, 247, 256, 259, 263, 266, 270, 276, 280, 286, 293, 298, 302, 308, 322, 324, 325, 327, 347, 439, 513, 538, 705, 879, 901, 903, 971, 1099, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "10000": [7, 45, 199, 218, 221, 234, 266, 308, 995, 1011], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 199, 218, 234, 266, 308], "hallo": [7, 179, 189, 194, 197, 199, 202, 210, 218, 221, 228, 231, 234, 238, 241, 247, 259, 263, 266, 286, 298, 302, 308, 325, 373, 565, 748, 828, 876, 904, 917, 920, 926], "39": [7, 143, 156, 165, 167, 168, 179, 184, 189, 194, 196, 198, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 294, 298, 302, 308, 322, 323, 324, 325, 326, 327, 476, 630, 677, 842, 971, 1007, 1099, 1100], "30": [7, 23, 63, 97, 106, 109, 114, 142, 143, 148, 156, 158, 168, 178, 179, 184, 189, 194, 196, 198, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 270, 276, 280, 283, 286, 298, 302, 308, 322, 324, 325, 327, 347, 360, 374, 439, 501, 505, 540, 541, 546, 547, 549, 550, 666, 667, 714, 715, 716, 737, 853, 879, 885, 901, 902, 903, 959, 985, 997, 998, 1050, 1099, 1103, 1111, 1128, 1137], "eingebettet": [7, 199], "34": [7, 156, 157, 165, 168, 179, 184, 189, 194, 196, 198, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 263, 264, 266, 270, 276, 280, 286, 291, 294, 298, 302, 308, 324, 325, 326, 327, 462, 476, 480, 481, 482, 483, 495, 496, 497, 595, 596, 597, 598, 599, 604, 636, 854, 857, 879, 1007, 1026, 1099, 1100], "31": [7, 106, 114, 149, 151, 156, 168, 179, 184, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 229, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 324, 325, 347, 411, 439, 446, 692, 879, 937, 969, 986, 1020, 1052, 1099], "eingenbettet": [7, 199], "mississippi": [7, 199, 202, 211, 215, 218, 226, 228, 234, 238, 244, 247, 259, 266, 280, 286, 298, 302, 308, 635], "count": [7, 29, 63, 87, 89, 112, 117, 146, 158, 161, 199, 202, 203, 206, 211, 215, 218, 221, 226, 228, 231, 234, 238, 244, 247, 259, 265, 266, 280, 286, 298, 302, 308, 359, 360, 361, 362, 375, 431, 487, 513, 541, 655, 705, 730, 750, 753, 756, 757, 758, 759, 761, 764, 767, 768, 774, 778, 788, 801, 806, 812, 815, 818, 828, 837, 857, 879, 890, 893, 923, 926, 933, 944, 965, 1041, 1054, 1064, 1067, 1075, 1078, 1093, 1100, 1108, 1148], "ss": [7, 32, 199, 202, 211, 215, 218, 226, 228, 234, 238, 244, 247, 259, 266, 280, 286, 298, 302, 308, 635], "35": [7, 142, 156, 168, 179, 186, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 322, 324, 325, 326, 476, 505, 648, 650, 666, 1099], "find": [7, 17, 42, 44, 47, 48, 53, 65, 114, 145, 146, 147, 148, 152, 157, 162, 174, 175, 176, 186, 188, 199, 202, 206, 208, 211, 215, 219, 221, 224, 226, 228, 231, 234, 238, 241, 244, 247, 252, 259, 261, 264, 266, 271, 273, 280, 282, 283, 286, 288, 298, 300, 302, 304, 308, 310, 315, 324, 330, 335, 418, 424, 431, 443, 451, 458, 465, 486, 491, 492, 495, 496, 497, 498, 503, 520, 521, 550, 555, 558, 572, 574, 576, 577, 598, 600, 611, 614, 616, 619, 623, 635, 648, 650, 652, 655, 698, 702, 746, 750, 763, 802, 823, 824, 825, 827, 832, 836, 837, 839, 840, 841, 843, 857, 884, 887, 890, 893, 902, 903, 914, 942, 971, 974, 988, 1018, 1022, 1033, 1041, 1101, 1138, 1150, 1152, 1153, 1154, 1159], "36": [7, 142, 147, 151, 156, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 263, 266, 270, 276, 280, 286, 298, 302, 308, 322, 325, 330, 335, 443, 456, 462, 480, 504, 507, 508, 509, 513, 514, 515, 665, 714, 715, 716, 731, 748, 879, 901, 1007, 1083], "37": [7, 118, 119, 156, 167, 168, 179, 180, 184, 189, 194, 196, 199, 202, 205, 207, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 324, 325, 326, 480, 734, 736, 738, 740, 1099, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "capit": [7, 38, 199, 202, 211, 218, 228, 234, 259, 280, 324, 857, 1052], "zeil": [7, 165, 179, 189, 196, 199, 202, 205, 211, 215, 234, 238, 256, 259, 298, 302, 325], "nnoch": [7, 196, 199, 215], "some": [7, 17, 21, 106, 133, 145, 146, 147, 148, 150, 153, 156, 157, 161, 167, 170, 175, 178, 182, 185, 187, 198, 199, 205, 207, 215, 221, 222, 227, 233, 234, 238, 250, 251, 253, 259, 262, 265, 266, 268, 272, 274, 275, 282, 300, 301, 307, 308, 310, 348, 372, 406, 417, 433, 456, 462, 533, 558, 560, 580, 598, 611, 614, 668, 677, 705, 713, 715, 725, 728, 749, 750, 756, 761, 770, 785, 793, 797, 814, 816, 834, 839, 894, 902, 903, 924, 927, 953, 955, 957, 965, 994, 996, 1023, 1039, 1045, 1091, 1109, 1128, 1150, 1151], "name": [7, 23, 39, 40, 57, 65, 110, 111, 112, 114, 117, 126, 128, 138, 142, 145, 146, 148, 149, 150, 153, 160, 161, 166, 168, 170, 175, 178, 179, 182, 185, 187, 189, 194, 199, 202, 205, 206, 217, 219, 220, 221, 224, 226, 228, 231, 236, 238, 241, 256, 259, 263, 264, 266, 270, 280, 302, 308, 315, 321, 324, 325, 326, 341, 363, 377, 383, 391, 392, 398, 399, 405, 409, 412, 416, 417, 420, 422, 425, 429, 431, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 460, 462, 477, 481, 482, 483, 488, 491, 495, 496, 497, 512, 514, 517, 522, 527, 559, 569, 571, 573, 637, 650, 656, 657, 667, 668, 677, 695, 697, 701, 707, 715, 747, 748, 749, 750, 753, 761, 765, 775, 779, 791, 793, 817, 823, 824, 825, 828, 836, 837, 839, 842, 843, 857, 863, 879, 885, 890, 897, 901, 902, 903, 905, 906, 913, 914, 917, 919, 923, 931, 964, 968, 971, 972, 973, 983, 985, 986, 988, 989, 990, 993, 995, 1002, 1007, 1009, 1012, 1016, 1017, 1019, 1020, 1024, 1025, 1033, 1035, 1037, 1039, 1040, 1041, 1046, 1050, 1052, 1057, 1073, 1074, 1084, 1090, 1092, 1100, 1103, 1106, 1107, 1108, 1113, 1114, 1116, 1117, 1118, 1119, 1128, 1135, 1137, 1147, 1151, 1153, 1154], "directori": [7, 17, 44, 61, 97, 99, 100, 102, 109, 114, 123, 125, 142, 145, 146, 147, 148, 157, 161, 172, 177, 180, 186, 198, 199, 205, 206, 207, 208, 215, 218, 219, 221, 231, 234, 246, 251, 252, 253, 261, 262, 274, 275, 279, 282, 283, 288, 296, 300, 304, 315, 316, 330, 335, 341, 343, 344, 397, 431, 433, 438, 441, 445, 447, 449, 451, 452, 454, 457, 459, 461, 475, 476, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 534, 537, 540, 543, 546, 549, 552, 555, 646, 728, 749, 750, 775, 797, 799, 819, 823, 826, 827, 828, 830, 831, 832, 834, 836, 837, 839, 840, 841, 843, 844, 845, 846, 851, 852, 854, 856, 857, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 877, 881, 886, 893, 901, 902, 903, 905, 910, 914, 916, 919, 922, 929, 930, 931, 932, 934, 937, 939, 948, 951, 954, 956, 960, 963, 967, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 994, 1002, 1022, 1073, 1082, 1083, 1130, 1134, 1139, 1150, 1154, 1163], "multilin": [7, 189, 199, 214, 217, 221, 226, 234, 238, 298, 309, 330, 398, 995, 1023], "jetzt": [7, 154, 165, 169, 179, 189, 196, 199, 209, 238, 294], "l": [7, 32, 38, 61, 63, 99, 114, 149, 153, 157, 165, 166, 168, 169, 174, 179, 184, 189, 194, 196, 197, 198, 199, 202, 205, 210, 211, 215, 218, 221, 224, 226, 228, 231, 234, 238, 241, 244, 247, 252, 256, 259, 261, 262, 266, 276, 280, 282, 283, 286, 298, 302, 308, 311, 322, 324, 325, 330, 335, 403, 404, 411, 415, 427, 432, 433, 439, 446, 449, 450, 465, 477, 503, 550, 555, 574, 604, 655, 728, 748, 749, 750, 761, 775, 797, 798, 824, 825, 826, 827, 828, 830, 831, 834, 836, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 864, 865, 868, 869, 871, 872, 873, 875, 876, 877, 881, 886, 890, 893, 894, 896, 901, 902, 903, 904, 905, 912, 914, 919, 920, 922, 924, 925, 927, 928, 929, 932, 934, 937, 940, 948, 951, 954, 955, 956, 965, 969, 971, 972, 973, 974, 983, 985, 986, 991, 993, 1014, 1022, 1024, 1027, 1028, 1032, 1034, 1042, 1050, 1077, 1137, 1154], "44": [7, 142, 149, 156, 168, 179, 189, 194, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 903, 1123], "45": [7, 29, 51, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 135, 138, 151, 154, 156, 168, 178, 179, 182, 184, 189, 194, 196, 199, 202, 203, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 316, 317, 318, 319, 320, 321, 324, 325, 330, 335, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 444, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 595, 596, 597, 598, 599, 600, 604, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 671, 682, 695, 696, 706, 711, 720, 728, 732, 735, 747, 748, 749, 750, 754, 757, 759, 762, 764, 767, 769, 773, 774, 776, 778, 780, 782, 788, 790, 792, 794, 801, 803, 806, 808, 812, 815, 818, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 900, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 936, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1099, 1101, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132, 1133], "46": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 733, 879, 903, 919, 1099, 1100], "47": [7, 149, 151, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 705, 890, 955, 983, 1040, 1099], "try": [7, 27, 114, 117, 123, 142, 145, 146, 148, 153, 165, 168, 178, 179, 182, 186, 189, 194, 196, 199, 202, 205, 208, 211, 213, 215, 218, 221, 224, 226, 228, 231, 234, 238, 241, 243, 244, 246, 247, 250, 251, 253, 255, 256, 259, 262, 263, 266, 273, 274, 275, 276, 279, 280, 286, 297, 298, 302, 308, 310, 316, 323, 324, 325, 326, 330, 334, 335, 345, 423, 427, 453, 457, 464, 481, 486, 495, 503, 511, 520, 522, 555, 563, 581, 584, 600, 606, 610, 615, 619, 622, 623, 640, 642, 644, 647, 648, 649, 650, 651, 652, 683, 691, 695, 705, 711, 715, 729, 731, 744, 746, 748, 749, 750, 802, 805, 902, 923, 968, 992, 999, 1052, 1095, 1101, 1112, 1113, 1117, 1130], "except": [7, 21, 29, 43, 46, 61, 63, 74, 110, 111, 147, 151, 157, 165, 166, 173, 178, 179, 182, 183, 185, 187, 189, 194, 196, 199, 202, 206, 207, 208, 211, 213, 215, 218, 219, 222, 223, 226, 228, 232, 233, 236, 238, 241, 243, 244, 248, 256, 259, 263, 266, 274, 275, 276, 279, 280, 286, 296, 297, 298, 300, 301, 302, 308, 315, 317, 323, 324, 325, 326, 330, 335, 343, 344, 363, 415, 418, 452, 457, 458, 465, 492, 503, 520, 522, 555, 584, 600, 606, 610, 619, 622, 623, 627, 640, 647, 648, 650, 651, 652, 656, 659, 683, 691, 712, 714, 715, 726, 731, 750, 765, 797, 830, 835, 901, 955, 969, 992, 996, 999, 1002, 1005, 1008, 1018, 1020, 1023, 1041, 1043, 1093, 1095, 1112, 1117, 1130, 1140, 1147], "index": [7, 13, 23, 29, 39, 51, 53, 90, 110, 111, 142, 143, 152, 165, 167, 172, 177, 179, 180, 182, 183, 185, 187, 191, 192, 194, 197, 199, 202, 203, 205, 206, 208, 211, 213, 216, 218, 219, 221, 222, 224, 225, 227, 228, 229, 232, 234, 235, 237, 239, 240, 241, 243, 244, 246, 255, 256, 258, 259, 264, 265, 266, 268, 270, 272, 274, 275, 278, 279, 280, 284, 285, 287, 290, 293, 296, 297, 298, 300, 301, 302, 306, 307, 308, 314, 330, 337, 361, 377, 403, 431, 439, 534, 537, 540, 543, 546, 549, 550, 552, 590, 591, 593, 598, 637, 677, 705, 717, 731, 750, 793, 960, 963, 967, 1018, 1019, 1031, 1034, 1041, 1047, 1048, 1049, 1050, 1052, 1054, 1067, 1073, 1078, 1093, 1095, 1096, 1097, 1099, 1100, 1101, 1109, 1111, 1113, 1115, 1116, 1118, 1122, 1132, 1134, 1139], "out": [7, 31, 44, 45, 50, 55, 63, 65, 75, 85, 106, 112, 114, 117, 123, 125, 132, 138, 139, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 161, 166, 167, 174, 175, 178, 182, 185, 186, 194, 199, 202, 207, 215, 221, 222, 224, 231, 234, 238, 242, 271, 297, 298, 316, 330, 336, 341, 352, 373, 391, 397, 398, 406, 417, 424, 431, 432, 433, 437, 439, 440, 445, 450, 453, 455, 457, 482, 483, 498, 501, 511, 527, 533, 550, 557, 559, 573, 588, 630, 633, 668, 683, 702, 705, 718, 729, 746, 765, 766, 775, 797, 805, 810, 824, 825, 828, 832, 836, 839, 843, 853, 884, 890, 894, 901, 902, 903, 920, 921, 937, 955, 958, 968, 969, 971, 983, 988, 995, 999, 1039, 1040, 1047, 1073, 1076, 1103, 1108, 1110, 1116, 1118, 1119, 1123, 1129, 1148], "rang": [7, 29, 42, 63, 90, 108, 114, 115, 153, 166, 167, 168, 173, 182, 185, 187, 190, 191, 194, 197, 199, 202, 203, 206, 213, 214, 216, 217, 219, 220, 221, 224, 225, 227, 229, 230, 233, 234, 239, 240, 242, 243, 245, 247, 249, 257, 258, 259, 265, 267, 268, 275, 276, 278, 279, 281, 284, 285, 287, 296, 298, 300, 301, 302, 306, 307, 308, 311, 314, 322, 376, 403, 419, 421, 467, 501, 504, 505, 509, 533, 549, 550, 586, 588, 591, 594, 695, 744, 747, 749, 750, 761, 894, 901, 950, 956, 959, 991, 994, 996, 1001, 1003, 1005, 1007, 1017, 1018, 1026, 1030, 1047, 1051, 1052, 1053, 1054, 1064, 1066, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1105, 1108, 1116, 1118, 1147, 1148, 1158], "48": [7, 149, 156, 165, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 901], "append": [7, 165, 166, 167, 168, 169, 179, 184, 186, 189, 194, 196, 197, 198, 199, 202, 205, 210, 211, 212, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 326, 439, 442, 532, 550, 592, 608, 620, 647, 758, 770, 785, 797, 824, 825, 839, 842, 863, 876, 901, 910, 923, 959, 991, 997, 998, 1011, 1027, 1032, 1035, 1037, 1042, 1045, 1046, 1072, 1120, 1123], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 62, 63, 66, 80, 84, 85, 106, 110, 111, 112, 114, 115, 117, 120, 123, 125, 126, 128, 134, 136, 140, 145, 146, 147, 148, 149, 150, 152, 153, 156, 157, 161, 166, 167, 168, 170, 175, 178, 179, 182, 184, 186, 189, 194, 196, 197, 198, 199, 202, 205, 207, 208, 215, 218, 221, 226, 228, 229, 231, 232, 234, 237, 238, 241, 244, 246, 256, 259, 262, 265, 266, 268, 270, 272, 276, 280, 285, 286, 288, 297, 302, 304, 308, 315, 316, 321, 322, 327, 330, 336, 348, 353, 360, 371, 376, 378, 386, 391, 393, 394, 398, 401, 403, 408, 411, 419, 420, 421, 423, 427, 431, 433, 439, 440, 442, 443, 445, 447, 451, 452, 455, 456, 457, 462, 464, 465, 467, 468, 476, 481, 483, 501, 504, 506, 507, 511, 512, 514, 533, 544, 550, 561, 562, 570, 571, 573, 574, 575, 576, 577, 588, 589, 597, 608, 611, 615, 630, 637, 654, 655, 658, 659, 660, 663, 672, 683, 702, 704, 705, 713, 715, 716, 717, 718, 719, 725, 727, 729, 735, 748, 758, 765, 772, 775, 785, 791, 797, 805, 813, 817, 822, 823, 824, 830, 839, 841, 842, 857, 876, 890, 894, 896, 897, 898, 901, 902, 903, 904, 906, 910, 913, 914, 920, 921, 923, 924, 927, 930, 931, 933, 939, 940, 941, 942, 944, 947, 950, 953, 955, 956, 957, 964, 968, 971, 974, 977, 983, 986, 987, 989, 990, 992, 994, 995, 997, 1003, 1005, 1006, 1008, 1019, 1020, 1023, 1024, 1025, 1027, 1031, 1032, 1034, 1036, 1037, 1041, 1043, 1045, 1046, 1053, 1063, 1066, 1073, 1074, 1099, 1100, 1101, 1102, 1104, 1108, 1109, 1111, 1113, 1119, 1120, 1121, 1124, 1128, 1130, 1135, 1137, 1150, 1153], "49": [7, 156, 165, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 698, 842, 983, 997], "extend": [7, 147, 148, 179, 196, 197, 199, 204, 210, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 272, 276, 280, 286, 308, 325, 460, 467, 476, 501, 574, 576, 577, 629, 758, 829, 1027, 1032, 1042, 1100, 1112], "slice": [7, 29, 90, 167, 169, 178, 182, 183, 185, 187, 192, 195, 196, 199, 206, 218, 219, 221, 222, 225, 229, 230, 236, 237, 239, 240, 241, 243, 255, 258, 260, 265, 268, 275, 278, 279, 281, 284, 285, 287, 296, 297, 300, 301, 306, 307, 314, 750, 795, 956, 1018, 1031, 1035, 1054, 1067, 1078, 1093, 1109, 1113, 1115, 1117], "inclus": [7, 185, 199, 226, 238, 397, 590, 1056, 1116], "exclus": [7, 173, 199, 221, 238, 275, 379, 590, 725, 923, 956, 1005, 1041, 1045, 1056, 1116], "51": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 612, 613, 614, 615, 879, 881, 1099], "l\u00f6schen": [7, 189, 195, 199, 330], "52": [7, 156, 165, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 326, 903, 1099], "del": [7, 38, 165, 168, 169, 179, 194, 196, 199, 202, 210, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 323, 325, 1002, 1027, 1043], "53": [7, 149, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 337, 481, 482, 708, 777, 879, 901, 971, 983, 1099, 1100], "iter": [7, 24, 29, 63, 117, 118, 166, 169, 173, 178, 182, 183, 185, 187, 190, 191, 195, 197, 199, 203, 204, 206, 207, 209, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 233, 236, 238, 240, 241, 245, 257, 260, 266, 274, 275, 277, 281, 286, 296, 299, 300, 301, 303, 309, 315, 330, 336, 388, 390, 403, 439, 464, 514, 533, 550, 592, 593, 594, 598, 601, 608, 611, 613, 615, 620, 670, 677, 686, 707, 744, 750, 920, 992, 996, 998, 1007, 1020, 1030, 1044, 1045, 1051, 1052, 1053, 1054, 1067, 1078, 1090, 1093, 1095, 1105, 1107, 1120, 1158], "mittel": [7, 11, 23, 169, 179, 181, 197, 199, 204, 348, 1142, 1145, 1154, 1162], "54": [7, 156, 165, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 324, 325, 337, 612, 613, 614, 615, 715, 787, 879, 901, 983, 1099], "element": [7, 8, 35, 38, 106, 109, 110, 111, 114, 166, 168, 169, 179, 184, 185, 190, 191, 194, 196, 197, 199, 200, 202, 205, 209, 210, 211, 215, 218, 219, 221, 225, 227, 228, 234, 237, 238, 241, 245, 266, 270, 273, 276, 285, 298, 324, 325, 361, 388, 403, 411, 415, 418, 503, 517, 520, 522, 531, 550, 555, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 601, 605, 608, 612, 615, 637, 655, 658, 660, 677, 691, 705, 707, 750, 758, 965, 997, 999, 1016, 1027, 1032, 1033, 1042, 1044, 1077, 1103, 1120, 1128, 1151, 1158], "55": [7, 156, 165, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 324, 325, 326, 337, 414, 439, 645, 646, 647, 648, 650, 748, 971, 1052], "def": [7, 63, 165, 166, 169, 179, 184, 185, 189, 194, 196, 197, 199, 202, 205, 206, 211, 212, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 264, 266, 276, 280, 286, 291, 294, 298, 302, 308, 325, 326, 439, 697, 949, 992, 993, 994, 997, 998, 999, 1002, 1003, 1005, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1023, 1026, 1036, 1037, 1042, 1046, 1077, 1083, 1090, 1091, 1092, 1111, 1116, 1117, 1119, 1128, 1129], "is_integ": [7, 199, 256], "elem": [7, 165, 169, 179, 184, 189, 194, 196, 199, 211, 218, 221, 226, 231, 256, 259, 266, 276, 280, 286, 302, 308, 517, 614, 616, 663, 683, 685, 687, 690, 704, 705, 707, 727, 999, 1042, 1046], "type": [7, 29, 50, 78, 83, 100, 110, 111, 126, 138, 139, 142, 145, 146, 149, 151, 153, 161, 165, 166, 169, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 198, 199, 202, 205, 206, 207, 210, 211, 215, 220, 223, 224, 226, 228, 233, 236, 238, 242, 244, 246, 247, 249, 257, 259, 262, 263, 266, 274, 275, 276, 279, 280, 286, 291, 295, 296, 297, 299, 300, 301, 302, 307, 308, 311, 322, 323, 324, 325, 330, 332, 333, 341, 363, 374, 375, 382, 387, 392, 393, 397, 399, 403, 405, 406, 409, 412, 413, 414, 415, 416, 419, 421, 422, 424, 425, 429, 434, 435, 439, 455, 457, 466, 469, 477, 483, 513, 517, 538, 547, 557, 559, 565, 566, 570, 572, 573, 583, 591, 620, 626, 630, 633, 635, 637, 639, 645, 657, 658, 663, 668, 669, 677, 683, 694, 695, 697, 702, 703, 704, 705, 714, 715, 717, 718, 719, 724, 733, 734, 736, 740, 741, 743, 745, 746, 747, 748, 749, 750, 753, 756, 758, 763, 766, 785, 797, 823, 827, 839, 842, 854, 857, 860, 871, 873, 874, 877, 885, 893, 894, 896, 901, 905, 910, 919, 920, 923, 926, 927, 928, 929, 930, 940, 952, 961, 964, 968, 969, 971, 988, 990, 993, 996, 999, 1003, 1008, 1009, 1010, 1017, 1021, 1023, 1025, 1026, 1027, 1031, 1033, 1034, 1035, 1040, 1041, 1043, 1045, 1047, 1060, 1071, 1072, 1090, 1093, 1095, 1100, 1104, 1108, 1113, 1114, 1116, 1123, 1128, 1130, 1148, 1149], "int": [7, 21, 46, 107, 110, 111, 123, 148, 157, 166, 168, 179, 185, 189, 194, 196, 197, 199, 202, 206, 207, 212, 215, 218, 219, 221, 224, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 265, 266, 268, 276, 280, 286, 294, 298, 302, 308, 323, 325, 326, 352, 353, 355, 357, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 377, 381, 391, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 411, 413, 414, 418, 419, 420, 421, 422, 423, 427, 428, 462, 469, 476, 477, 481, 482, 483, 484, 487, 490, 491, 493, 495, 496, 497, 499, 501, 509, 511, 513, 515, 516, 517, 518, 519, 521, 531, 533, 538, 541, 547, 550, 557, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 580, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 608, 611, 612, 613, 614, 615, 616, 620, 622, 626, 627, 630, 632, 633, 635, 636, 637, 639, 644, 645, 646, 647, 648, 649, 650, 651, 655, 656, 658, 659, 662, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 697, 698, 699, 700, 702, 703, 704, 705, 707, 709, 716, 717, 718, 719, 722, 724, 727, 729, 731, 734, 736, 738, 740, 748, 753, 756, 761, 763, 768, 775, 777, 779, 781, 785, 789, 791, 793, 802, 807, 814, 834, 854, 897, 901, 915, 917, 919, 920, 921, 923, 926, 927, 928, 929, 930, 933, 935, 938, 940, 942, 944, 946, 952, 955, 958, 959, 961, 964, 965, 968, 969, 971, 983, 987, 989, 1014, 1025, 1026, 1034, 1035, 1037, 1040, 1046, 1047, 1062, 1085, 1087, 1090, 1091, 1117, 1135, 1140], "return": [7, 21, 27, 63, 107, 142, 145, 147, 148, 149, 153, 157, 165, 166, 169, 179, 183, 185, 187, 189, 194, 196, 197, 199, 202, 205, 206, 207, 211, 212, 215, 218, 219, 221, 224, 226, 228, 231, 234, 238, 241, 244, 248, 249, 256, 259, 264, 266, 270, 276, 280, 291, 294, 297, 298, 302, 308, 325, 326, 352, 353, 355, 359, 361, 363, 372, 381, 391, 397, 403, 404, 406, 413, 414, 417, 418, 420, 421, 423, 427, 439, 446, 455, 456, 457, 458, 462, 464, 467, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 501, 508, 509, 513, 514, 517, 533, 541, 547, 550, 557, 558, 559, 561, 562, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 580, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 611, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 639, 643, 644, 645, 646, 647, 648, 649, 650, 651, 655, 660, 662, 663, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 705, 707, 712, 713, 715, 716, 717, 718, 719, 725, 727, 729, 734, 736, 738, 739, 740, 741, 744, 745, 746, 748, 753, 760, 768, 775, 779, 787, 789, 811, 813, 817, 834, 854, 901, 915, 917, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 935, 938, 939, 940, 950, 952, 955, 961, 964, 965, 968, 969, 971, 983, 987, 988, 989, 990, 992, 993, 994, 995, 997, 998, 999, 1007, 1011, 1012, 1014, 1015, 1016, 1037, 1039, 1041, 1042, 1043, 1046, 1052, 1068, 1070, 1074, 1077, 1078, 1085, 1087, 1090, 1114, 1116, 1117, 1119, 1128, 1135, 1140], "els": [7, 21, 43, 50, 63, 110, 111, 115, 125, 146, 148, 149, 152, 161, 166, 169, 179, 182, 185, 189, 197, 199, 202, 205, 206, 207, 211, 215, 218, 219, 222, 223, 224, 226, 230, 231, 236, 238, 241, 245, 247, 256, 258, 259, 264, 266, 276, 280, 286, 298, 308, 315, 326, 337, 359, 365, 376, 381, 392, 398, 399, 405, 409, 412, 416, 417, 425, 429, 434, 435, 439, 447, 448, 462, 486, 493, 496, 550, 573, 597, 598, 608, 615, 629, 649, 657, 662, 695, 716, 718, 725, 729, 747, 749, 750, 779, 789, 813, 824, 825, 830, 849, 851, 854, 860, 881, 902, 915, 918, 923, 949, 950, 952, 955, 957, 995, 1002, 1014, 1015, 1018, 1029, 1037, 1043, 1117, 1147], "fals": [7, 46, 110, 111, 149, 151, 165, 166, 179, 184, 189, 194, 196, 197, 199, 202, 205, 211, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 270, 276, 280, 286, 291, 298, 302, 308, 324, 339, 355, 359, 376, 413, 439, 573, 598, 630, 637, 660, 672, 725, 729, 731, 817, 830, 857, 949, 950, 955, 957, 977, 992, 1007, 1011, 1014, 1027, 1028, 1030, 1031, 1035, 1113, 1114, 1117, 1119, 1135], "56": [7, 142, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 324, 325, 337, 376, 480, 568, 748, 876, 901, 903, 1099, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "x": [7, 23, 32, 42, 61, 63, 151, 157, 165, 166, 167, 169, 179, 189, 194, 196, 198, 199, 202, 205, 215, 218, 221, 222, 226, 228, 234, 238, 241, 244, 246, 247, 256, 259, 263, 266, 275, 276, 280, 302, 308, 326, 330, 372, 375, 376, 382, 397, 398, 400, 403, 406, 407, 411, 413, 421, 423, 427, 450, 501, 511, 548, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 571, 573, 575, 576, 583, 590, 598, 658, 659, 660, 662, 677, 679, 680, 681, 698, 709, 718, 823, 824, 825, 828, 832, 834, 839, 842, 844, 845, 853, 854, 879, 882, 886, 888, 894, 901, 902, 903, 919, 929, 935, 937, 938, 946, 950, 971, 972, 973, 974, 979, 983, 985, 986, 991, 992, 1020, 1022, 1028, 1036, 1037, 1039, 1040, 1041, 1044, 1045, 1049, 1073, 1100, 1117, 1128, 1129, 1135], "filter": [7, 29, 106, 109, 114, 163, 166, 199, 206, 219, 236, 259, 265, 268, 272, 273, 280, 297, 299, 302, 309, 314, 503, 520, 555, 713, 714, 750, 822, 841, 890, 1093, 1109, 1115, 1118, 1135], "57": [7, 142, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 326, 446, 451, 879, 901, 914, 972, 973, 1099], "zero": [7, 32, 38, 142, 148, 164, 166, 167, 169, 179, 189, 197, 199, 202, 215, 221, 226, 228, 231, 234, 238, 241, 256, 280, 330, 352, 361, 379, 704, 714, 718, 756, 768, 783, 828, 857, 872, 879, 903, 923, 944, 950, 953, 956, 959, 964, 965, 1031], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 69, 85, 106, 134, 136, 139, 140, 145, 146, 147, 148, 161, 166, 167, 168, 174, 178, 179, 184, 189, 190, 192, 194, 196, 197, 199, 202, 203, 205, 207, 208, 209, 213, 215, 216, 219, 221, 224, 225, 226, 228, 229, 234, 235, 237, 238, 240, 242, 243, 244, 256, 258, 259, 262, 264, 265, 266, 274, 276, 278, 279, 280, 284, 285, 286, 290, 293, 302, 306, 307, 308, 314, 316, 322, 330, 336, 339, 348, 349, 360, 367, 397, 403, 405, 406, 409, 411, 412, 415, 416, 418, 420, 423, 425, 429, 434, 435, 437, 438, 439, 440, 449, 452, 465, 467, 477, 481, 482, 501, 511, 513, 533, 541, 544, 550, 566, 571, 573, 590, 613, 655, 656, 657, 658, 659, 695, 701, 704, 705, 707, 714, 717, 719, 747, 749, 750, 795, 797, 800, 862, 864, 884, 894, 896, 901, 902, 903, 920, 923, 924, 931, 941, 942, 950, 955, 964, 969, 979, 989, 997, 1003, 1006, 1009, 1014, 1017, 1018, 1024, 1027, 1030, 1041, 1043, 1045, 1051, 1054, 1056, 1057, 1058, 1061, 1063, 1064, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1090, 1093, 1094, 1100, 1102, 1108, 1116, 1129, 1135, 1148, 1158, 1163], "58": [7, 149, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 337, 439, 903, 972, 973, 983, 1099, 1100], "59": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 337, 973, 974, 983, 1099], "three": [7, 12, 32, 36, 38, 43, 63, 110, 111, 117, 147, 159, 166, 167, 178, 179, 182, 183, 189, 194, 196, 197, 199, 205, 213, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 264, 265, 266, 268, 274, 275, 276, 280, 285, 286, 298, 302, 308, 330, 348, 417, 592, 637, 830, 839, 842, 857, 894, 901, 903, 923, 955, 964, 999, 1009, 1027, 1031, 1041, 1043, 1045, 1057, 1063, 1094, 1095, 1149, 1163], "60": [7, 63, 106, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 246, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 324, 325, 481, 482, 483, 495, 496, 497, 504, 839, 901, 902, 903, 997, 1099, 1100], "61": [7, 63, 156, 167, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 330, 335, 1099, 1100], "62": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 839, 1052, 1099], "63": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 330, 335, 1052, 1099], "k": [7, 29, 148, 167, 169, 179, 182, 194, 196, 199, 202, 206, 207, 218, 221, 226, 228, 231, 234, 241, 244, 256, 259, 265, 266, 276, 286, 296, 298, 300, 302, 308, 331, 332, 351, 479, 612, 655, 717, 734, 750, 857, 904, 939, 1093, 1096, 1102, 1109, 1128], "v": [7, 20, 23, 31, 32, 88, 112, 119, 128, 142, 146, 153, 167, 170, 173, 179, 183, 185, 187, 191, 193, 194, 197, 198, 199, 204, 206, 207, 208, 209, 215, 218, 219, 221, 222, 224, 225, 227, 233, 236, 237, 239, 242, 244, 248, 255, 256, 259, 262, 267, 275, 277, 281, 285, 286, 292, 298, 302, 308, 311, 316, 330, 427, 451, 456, 477, 503, 537, 555, 612, 632, 655, 659, 663, 668, 669, 670, 677, 678, 679, 680, 681, 686, 689, 690, 691, 697, 703, 704, 705, 728, 731, 733, 735, 746, 749, 750, 759, 764, 767, 769, 774, 778, 780, 784, 788, 789, 790, 792, 794, 797, 799, 801, 805, 806, 808, 812, 815, 818, 823, 827, 830, 831, 834, 857, 859, 886, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 964, 965, 971, 1014, 1037, 1130, 1131, 1143, 1145, 1162, 1164], "65": [7, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 645, 959, 1099, 1100], "item": [7, 146, 166, 168, 179, 184, 189, 194, 196, 199, 202, 205, 206, 210, 211, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 246, 250, 251, 253, 256, 259, 264, 266, 276, 280, 286, 298, 302, 308, 324, 415, 419, 421, 440, 704, 747, 749, 750, 964, 965, 999, 1000, 1001, 1007, 1033, 1040, 1043, 1045, 1083, 1128], "66": [7, 149, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 635, 1052, 1099, 1100], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 61, 62, 63, 65, 66, 78, 89, 104, 108, 109, 112, 114, 117, 123, 125, 126, 132, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 163, 166, 167, 168, 170, 172, 173, 175, 176, 178, 179, 182, 184, 185, 189, 190, 194, 196, 197, 198, 199, 200, 202, 205, 207, 208, 211, 212, 215, 218, 219, 221, 222, 224, 225, 226, 228, 231, 232, 234, 238, 241, 244, 247, 250, 251, 253, 256, 259, 262, 263, 264, 265, 266, 268, 271, 272, 273, 274, 275, 276, 280, 283, 286, 288, 290, 293, 296, 297, 298, 300, 302, 304, 308, 310, 311, 315, 316, 324, 325, 327, 330, 333, 334, 348, 350, 363, 365, 371, 376, 397, 398, 401, 410, 415, 417, 419, 420, 421, 422, 423, 427, 438, 439, 440, 442, 443, 445, 447, 448, 451, 452, 455, 456, 457, 459, 460, 461, 462, 465, 466, 477, 479, 480, 482, 483, 487, 498, 500, 511, 512, 513, 514, 517, 523, 525, 526, 534, 537, 540, 541, 543, 546, 549, 552, 559, 561, 562, 565, 566, 569, 570, 572, 573, 582, 592, 602, 603, 613, 620, 622, 627, 629, 632, 633, 635, 639, 642, 646, 656, 657, 659, 661, 663, 666, 667, 668, 669, 672, 676, 677, 683, 692, 695, 697, 700, 704, 705, 707, 709, 713, 714, 715, 717, 719, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 746, 748, 749, 750, 756, 765, 768, 770, 775, 781, 783, 793, 802, 805, 817, 822, 823, 824, 825, 828, 829, 832, 834, 835, 839, 840, 841, 843, 847, 849, 851, 853, 854, 855, 857, 859, 860, 876, 879, 880, 882, 883, 885, 886, 888, 889, 890, 894, 897, 901, 902, 903, 904, 905, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 931, 933, 935, 937, 938, 940, 941, 942, 946, 947, 950, 952, 955, 956, 957, 959, 960, 961, 963, 965, 967, 968, 969, 974, 983, 985, 986, 987, 988, 989, 990, 992, 993, 994, 997, 998, 1000, 1001, 1002, 1006, 1007, 1014, 1018, 1019, 1020, 1023, 1027, 1028, 1034, 1037, 1040, 1041, 1044, 1045, 1052, 1057, 1064, 1075, 1082, 1083, 1084, 1086, 1094, 1101, 1103, 1104, 1107, 1108, 1111, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1134, 1137, 1139, 1140, 1143, 1148, 1150, 1153, 1166], "rot": [7, 199, 210], "gruen": [7, 199], "blau": [7, 199, 210], "67": [7, 156, 167, 179, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 439, 504, 959, 1040, 1052, 1099, 1100], "69": [7, 61, 151, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 1099, 1100, 1119], "schwarz": [7, 199, 210], "70": [7, 61, 148, 156, 179, 184, 186, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 439, 504, 901, 902, 903, 997, 1099, 1100, 1128], "add": [7, 23, 42, 44, 49, 65, 112, 117, 126, 128, 130, 141, 142, 146, 147, 148, 152, 153, 157, 161, 166, 175, 178, 179, 182, 185, 194, 196, 197, 199, 202, 205, 207, 211, 215, 218, 219, 221, 226, 231, 234, 238, 241, 244, 250, 251, 256, 259, 262, 266, 270, 276, 280, 286, 291, 293, 298, 302, 308, 311, 330, 336, 378, 379, 418, 419, 427, 440, 441, 447, 450, 457, 459, 460, 476, 477, 481, 486, 487, 498, 506, 513, 515, 533, 547, 557, 570, 571, 573, 575, 644, 645, 646, 655, 663, 683, 694, 705, 713, 727, 729, 763, 765, 766, 770, 777, 785, 787, 797, 810, 813, 823, 896, 901, 902, 903, 931, 955, 957, 959, 965, 970, 983, 985, 992, 993, 1015, 1019, 1027, 1045, 1050, 1117, 1128, 1129, 1135], "71": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 972, 973, 1099, 1100], "72": [7, 156, 179, 184, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 322, 325, 330, 335, 565, 888, 983, 1052, 1099, 1100], "remov": [7, 57, 99, 109, 114, 117, 118, 152, 153, 166, 168, 179, 194, 199, 205, 211, 219, 221, 226, 228, 234, 238, 241, 245, 246, 252, 259, 261, 262, 276, 280, 282, 283, 286, 297, 298, 302, 308, 442, 443, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 520, 521, 522, 527, 531, 550, 555, 585, 591, 608, 641, 663, 716, 727, 728, 729, 745, 748, 749, 750, 758, 775, 785, 793, 816, 823, 824, 825, 826, 827, 830, 831, 844, 845, 847, 849, 850, 851, 852, 854, 855, 861, 862, 863, 864, 866, 867, 869, 871, 877, 893, 904, 914, 916, 922, 924, 927, 932, 934, 937, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 987, 997, 1017, 1027, 1042, 1043, 1044, 1077], "73": [7, 156, 167, 179, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 1099], "74": [7, 149, 151, 156, 179, 189, 194, 196, 199, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 879, 888, 1052, 1099, 1100], "75": [7, 156, 179, 189, 194, 196, 199, 202, 205, 207, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 439, 1099, 1100], "sum": [7, 38, 63, 179, 199, 203, 204, 218, 219, 221, 224, 226, 234, 237, 238, 241, 244, 259, 266, 308, 388, 403, 418, 420, 421, 423, 487, 513, 533, 557, 571, 573, 586, 590, 638, 652, 734, 736, 738, 740, 750, 956, 1014, 1030, 1113], "100": [7, 32, 112, 145, 146, 151, 161, 165, 166, 179, 189, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 237, 238, 241, 244, 246, 247, 256, 259, 262, 263, 264, 266, 270, 276, 280, 286, 297, 298, 302, 308, 325, 326, 330, 335, 388, 394, 395, 437, 440, 453, 462, 495, 496, 504, 523, 585, 586, 587, 588, 589, 591, 592, 593, 594, 608, 655, 672, 693, 768, 807, 853, 856, 879, 896, 935, 957, 959, 963, 964, 972, 973, 998, 1030, 1034, 1052, 1083, 1128], "5050": [7, 179, 199, 221, 234, 241, 266, 308], "bestimmen": [7, 199], "maximum": [7, 29, 139, 179, 189, 190, 192, 194, 197, 199, 202, 203, 209, 213, 215, 216, 218, 219, 221, 225, 226, 228, 229, 231, 234, 235, 237, 238, 240, 242, 243, 258, 259, 265, 266, 278, 279, 280, 284, 285, 306, 307, 314, 326, 378, 651, 729, 750, 758, 834, 894, 959, 965, 1037, 1054, 1056, 1057, 1058, 1061, 1064, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1094, 1098, 1099, 1100, 1101, 1123, 1158], "zwei": [7, 64, 155, 165, 173, 179, 191, 194, 196, 199, 202, 215, 218, 226, 231, 234, 238, 244, 266, 286, 294, 298, 302, 325, 521, 612, 613, 614, 615, 884, 1145, 1162], "inlin": [7, 126, 167, 173, 185, 199, 215, 244, 247, 249, 271, 298, 302, 308, 398, 420, 423, 544, 559, 573, 612, 649, 701, 719, 734, 736, 738, 739, 740, 741, 748, 991, 1070], "ohn": [7, 23, 163, 165, 173, 199, 202, 819, 885, 1144, 1164, 1165, 1166], "funktion": [7, 23, 169, 173, 179, 190, 191, 192, 196, 199, 202, 205, 226, 228, 231, 234, 266, 298, 325, 1158], "666": [7, 42, 50, 107, 118, 119, 165, 166, 179, 189, 194, 196, 199, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 321, 322, 323, 325, 326, 361, 441, 460, 515, 516, 517, 518, 519, 523, 524, 525, 526, 528, 529, 531, 538, 550, 557, 561, 570, 572, 595, 596, 597, 598, 599, 601, 604, 612, 615, 635, 639, 668, 670, 677, 679, 680, 681, 685, 705, 709, 712, 714, 719, 722, 734, 736, 738, 744, 745, 746, 755, 756, 990, 994, 1036, 1037, 1040, 1140], "var1": [7, 189, 199, 1060], "var2": [7, 189, 199, 1060], "6712": [7, 199, 221], "isn": [7, 145, 161, 199, 265, 268, 338, 352, 403, 590, 594, 633, 656, 683, 703, 901, 1039, 1135], "fehler": [7, 173, 179, 199, 330, 335], "link": [7, 13, 17, 27, 32, 44, 65, 103, 104, 114, 118, 122, 139, 142, 143, 145, 146, 152, 153, 154, 155, 156, 157, 163, 165, 173, 179, 186, 199, 222, 224, 252, 253, 261, 262, 270, 275, 282, 283, 288, 304, 330, 343, 344, 393, 406, 412, 416, 420, 425, 429, 434, 435, 440, 443, 445, 446, 451, 461, 475, 498, 503, 504, 505, 506, 507, 508, 509, 510, 513, 533, 540, 541, 555, 570, 657, 663, 671, 695, 705, 706, 747, 748, 749, 750, 758, 759, 763, 764, 767, 775, 778, 787, 788, 797, 799, 801, 806, 812, 815, 818, 827, 877, 879, 884, 893, 902, 909, 939, 942, 944, 971, 972, 973, 974, 976, 977, 978, 979, 981, 983, 989, 1094, 1122, 1132, 1135, 1142, 1143, 1150], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 182, 183, 185, 186, 187, 188, 190, 192, 193, 200, 203, 206, 207, 208, 209, 213, 216, 219, 222, 224, 225, 229, 232, 235, 237, 240, 246, 250, 251, 252, 253, 254, 261, 262, 264, 271, 272, 273, 274, 275, 282, 283, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 321, 330, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582, 583, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 622, 624, 626, 627, 629, 630, 631, 632, 633, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 682, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 740, 741, 748, 752, 753, 755, 756, 758, 760, 761, 763, 765, 766, 768, 774, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 799, 800, 802, 804, 805, 807, 810, 811, 813, 814, 816, 817, 819, 821, 822, 823, 828, 829, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 895, 896, 897, 898, 901, 904, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 926, 927, 928, 929, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 958, 959, 971, 972, 973, 974, 979, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1103, 1104, 1106, 1107, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1131, 1158], "mittwoch": [8, 190, 192, 200], "00": [8, 112, 148, 149, 151, 156, 161, 169, 173, 181, 182, 183, 185, 186, 187, 188, 190, 192, 194, 196, 198, 200, 203, 207, 213, 215, 221, 231, 234, 235, 262, 263, 270, 271, 273, 323, 431, 439, 453, 708, 730, 733, 737, 748, 824, 825, 879, 901, 902, 903, 955, 974, 983, 1021, 1128], "tectrain": [8, 11, 169, 181, 190, 192, 200, 203, 206, 207, 208, 209, 213, 225, 237, 348], "html": [8, 17, 18, 23, 39, 40, 143, 152, 165, 173, 190, 200, 203, 206, 210, 213, 216, 219, 222, 238, 269, 325, 635, 753, 768, 774, 857, 879, 965, 969, 1040, 1106], "download": [8, 17, 63, 65, 106, 134, 145, 151, 153, 157, 161, 166, 169, 178, 185, 190, 198, 200, 203, 206, 207, 208, 213, 216, 219, 229, 232, 235, 237, 240, 243, 246, 255, 258, 265, 269, 276, 293, 321, 350, 440, 443, 504, 505, 506, 507, 508, 509, 510, 513, 514, 559, 644, 646, 650, 651, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 705, 707, 857, 859, 879, 881, 894, 901, 902, 903, 913, 979, 985, 1019, 1052, 1064, 1073, 1083, 1084, 1086, 1097, 1099, 1101, 1123], "repositori": [8, 23, 77, 97, 109, 112, 128, 133, 142, 149, 152, 160, 164, 173, 175, 182, 183, 193, 198, 200, 203, 207, 208, 209, 213, 216, 219, 224, 225, 229, 232, 235, 237, 240, 246, 254, 262, 272, 273, 275, 279, 285, 289, 290, 293, 297, 301, 305, 307, 311, 315, 329, 330, 335, 503, 520, 555, 750, 797, 1137, 1142], "kurssprach": [8, 190, 200, 209, 225, 237], "kurs": [8, 23, 143, 160, 181, 192, 200, 209, 225, 237, 1142, 1143, 1144, 1152, 1159, 1166], "viel": [8, 23, 164, 169, 173, 179, 190, 200, 209, 215, 225, 226, 237, 256, 1145, 1146, 1152, 1160, 1161], "spezifisch": [8, 190, 200, 209, 225, 237, 1143, 1162, 1165], "unterrichtet": [8, 190, 200, 209, 225, 237], "themenreihenfolg": [8, 190, 200, 209, 225, 237], "herdt": [8, 139, 200, 209, 225, 237], "skriptum": [8, 190, 200, 209, 225, 237, 1158], "\u00fcbernommen": [8, 190, 200, 209, 225, 237], "etwa": [8, 23, 154, 155, 164, 169, 179, 181, 190, 200, 202, 209, 225, 237, 348, 1143, 1145, 1152, 1158, 1159, 1161, 1166], "allgemein": [8, 190, 200, 209, 225, 237, 1158], "allgemeinen": [8, 190, 194, 200, 209, 225, 237, 1161], "dadurch": [8, 190, 200, 209, 225, 237, 348, 1145, 1165], "verwirrend": [8, 190, 200, 209, 225, 237, 1158], "weswegen": [8, 190, 200, 209, 225, 237], "vielen": [8, 23, 164, 189, 200, 209, 225, 237, 348, 1152, 1154], "f\u00e4llen": [8, 23, 190, 200, 209, 225, 237], "ausnahmen": [8, 190, 200, 209, 225, 237], "gemacht": [8, 23, 154, 160, 190, 200, 209, 225, 237, 1158, 1166], "kursstruktur": [8, 200], "sieh": [8, 23, 163, 164, 165, 169, 173, 179, 190, 192, 195, 200, 209, 225, 237, 348, 1143, 1144, 1158], "jjj": [8, 122, 143, 187, 192, 200, 222, 270, 275, 339, 752, 753, 754, 758, 766], "hello": [8, 29, 63, 90, 139, 157, 179, 185, 189, 190, 192, 196, 200, 202, 203, 207, 209, 211, 213, 215, 216, 219, 221, 224, 225, 226, 228, 229, 235, 236, 237, 238, 240, 241, 243, 245, 258, 259, 265, 268, 276, 278, 279, 284, 285, 298, 306, 307, 308, 314, 316, 317, 318, 319, 320, 321, 325, 326, 330, 365, 368, 372, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 562, 565, 635, 657, 663, 666, 683, 688, 689, 690, 691, 695, 747, 749, 750, 754, 757, 759, 762, 764, 767, 774, 778, 782, 788, 794, 799, 801, 806, 809, 812, 815, 818, 824, 825, 828, 829, 861, 863, 868, 869, 876, 893, 904, 926, 950, 971, 972, 973, 983, 985, 987, 988, 989, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1022, 1023, 1029, 1032, 1034, 1038, 1039, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1119, 1122, 1144, 1158], "py": [8, 17, 21, 32, 40, 63, 65, 130, 142, 161, 165, 166, 169, 177, 178, 179, 182, 183, 185, 187, 197, 200, 206, 212, 215, 219, 221, 222, 225, 226, 229, 231, 232, 234, 235, 237, 238, 244, 246, 258, 264, 265, 266, 274, 275, 279, 280, 285, 296, 297, 302, 315, 330, 439, 697, 901, 957, 959, 992, 993, 994, 995, 997, 998, 999, 1002, 1003, 1005, 1007, 1008, 1014, 1015, 1021, 1022, 1024, 1030, 1036, 1037, 1041, 1047, 1049, 1050, 1051, 1052, 1056, 1057, 1059, 1060, 1062, 1064, 1069, 1073, 1075, 1077, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1097, 1098, 1103, 1111, 1116, 1117, 1128, 1129], "swap": [8, 29, 148, 184, 190, 200, 202, 209, 221, 224, 225, 237, 242, 243, 252, 261, 262, 282, 283, 405, 409, 412, 416, 425, 429, 434, 435, 533, 657, 695, 747, 749, 750, 783, 827, 838, 839, 893, 1025, 1054, 1056, 1057, 1058, 1059, 1061, 1093, 1158, 1162], "exercis": [8, 29, 78, 93, 97, 102, 104, 106, 114, 115, 123, 124, 125, 126, 143, 165, 173, 178, 185, 186, 190, 192, 197, 200, 203, 209, 213, 216, 219, 220, 222, 225, 229, 232, 235, 237, 240, 242, 243, 252, 254, 261, 265, 267, 268, 282, 283, 287, 301, 305, 315, 316, 317, 318, 319, 321, 329, 332, 335, 343, 344, 361, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 454, 462, 502, 523, 524, 525, 526, 528, 529, 530, 535, 555, 622, 623, 637, 657, 695, 723, 749, 750, 751, 758, 820, 824, 825, 827, 831, 838, 848, 850, 852, 877, 887, 893, 909, 932, 934, 943, 951, 970, 977, 1018, 1019, 1053, 1082, 1093, 1094, 1128, 1148, 1151, 1153, 1158, 1163], "greet": [8, 29, 179, 190, 200, 203, 209, 215, 216, 225, 226, 228, 234, 235, 237, 240, 243, 258, 259, 326, 449, 750, 972, 973, 979, 989, 1054, 1056, 1058, 1061, 1093, 1158], "depend": [8, 13, 28, 29, 63, 78, 114, 126, 139, 142, 143, 146, 147, 153, 157, 176, 178, 190, 200, 203, 208, 209, 215, 216, 221, 222, 225, 231, 234, 235, 237, 240, 243, 258, 275, 283, 289, 305, 330, 345, 353, 369, 371, 379, 382, 398, 415, 427, 433, 437, 441, 445, 448, 452, 455, 462, 468, 502, 514, 540, 542, 550, 630, 656, 704, 727, 748, 750, 756, 809, 820, 827, 831, 838, 841, 852, 877, 887, 894, 902, 920, 972, 983, 987, 989, 996, 1018, 1019, 1021, 1054, 1058, 1067, 1093, 1122, 1123, 1153, 1155, 1158], "time": [8, 29, 36, 38, 43, 53, 63, 73, 76, 85, 89, 98, 110, 111, 112, 114, 115, 117, 123, 126, 136, 145, 146, 147, 148, 150, 151, 153, 166, 167, 170, 178, 182, 184, 185, 186, 190, 196, 198, 200, 203, 205, 207, 208, 209, 215, 216, 218, 221, 222, 225, 226, 234, 235, 237, 240, 241, 243, 244, 258, 259, 262, 265, 266, 268, 271, 272, 274, 275, 276, 280, 283, 293, 296, 297, 300, 302, 307, 308, 316, 337, 348, 365, 373, 387, 393, 396, 419, 421, 426, 427, 430, 431, 432, 433, 437, 442, 453, 455, 456, 459, 465, 514, 544, 557, 564, 566, 607, 608, 662, 669, 683, 697, 705, 707, 718, 725, 729, 748, 750, 768, 770, 774, 775, 777, 789, 795, 797, 799, 812, 815, 818, 822, 828, 829, 830, 836, 837, 841, 857, 888, 893, 894, 901, 902, 903, 913, 923, 929, 930, 931, 935, 938, 939, 941, 944, 947, 953, 955, 956, 957, 958, 959, 964, 986, 987, 993, 997, 1003, 1006, 1007, 1018, 1019, 1020, 1023, 1030, 1033, 1036, 1037, 1054, 1056, 1058, 1061, 1093, 1099, 1108, 1113, 1123, 1153, 1158, 1164], "dai": [8, 12, 29, 147, 148, 150, 156, 159, 165, 166, 170, 184, 190, 200, 203, 209, 211, 220, 225, 234, 235, 237, 240, 243, 258, 266, 270, 293, 336, 338, 339, 348, 438, 443, 444, 455, 476, 750, 814, 853, 918, 955, 996, 1018, 1025, 1034, 1054, 1056, 1058, 1061, 1093, 1094, 1101, 1122, 1149, 1150, 1151, 1153, 1158, 1163], "hen": [8, 200], "vehikelkauf": [8, 200], "datentypen": [8, 169, 173, 190, 191, 197, 200, 231, 249, 331, 1145, 1158, 1165], "\u00fcbersicht": [8, 190, 200, 203, 213, 216, 219], "git": [8, 13, 23, 61, 65, 72, 73, 74, 78, 114, 115, 125, 129, 133, 138, 150, 152, 160, 173, 174, 175, 178, 195, 197, 198, 200, 222, 224, 235, 246, 251, 253, 271, 272, 273, 336, 337, 343, 344, 440, 501, 512, 575, 750, 772, 797, 798, 857, 896, 901, 985, 986, 1050, 1137, 1142], "scm": [8, 61, 149, 173, 200, 770], "com": [8, 13, 20, 23, 37, 42, 44, 50, 85, 106, 112, 114, 128, 130, 142, 151, 152, 153, 157, 161, 173, 174, 175, 176, 182, 183, 186, 187, 195, 200, 202, 208, 222, 224, 234, 246, 251, 253, 259, 262, 265, 266, 271, 272, 273, 275, 279, 285, 289, 290, 293, 297, 301, 305, 307, 311, 329, 330, 335, 341, 350, 498, 512, 533, 575, 595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 616, 635, 717, 797, 798, 857, 896, 901, 904, 912, 913, 985, 1050, 1108, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "pep": [8, 142, 190, 200, 272, 274, 275, 296, 297], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 62, 63, 65, 78, 84, 90, 99, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 125, 126, 129, 139, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 161, 162, 163, 166, 167, 169, 170, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 197, 198, 200, 203, 206, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 228, 229, 231, 232, 234, 237, 238, 240, 243, 245, 248, 250, 251, 252, 253, 255, 258, 261, 264, 265, 268, 271, 273, 275, 278, 279, 281, 282, 284, 285, 301, 303, 306, 307, 308, 314, 316, 317, 318, 319, 320, 321, 327, 330, 331, 332, 333, 335, 336, 347, 348, 349, 352, 354, 362, 368, 376, 378, 380, 381, 382, 383, 388, 392, 396, 399, 405, 409, 412, 415, 416, 419, 425, 427, 429, 434, 438, 440, 442, 455, 456, 457, 460, 461, 466, 475, 476, 477, 479, 481, 483, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 520, 522, 555, 556, 558, 562, 563, 565, 574, 575, 576, 577, 578, 581, 584, 592, 600, 606, 610, 619, 622, 623, 628, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 657, 660, 664, 666, 671, 676, 682, 695, 696, 705, 706, 707, 711, 720, 727, 728, 732, 735, 744, 747, 748, 750, 751, 758, 760, 770, 772, 775, 791, 797, 799, 802, 820, 822, 824, 825, 826, 827, 830, 831, 834, 835, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 856, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 875, 887, 893, 897, 901, 902, 903, 916, 918, 922, 924, 927, 928, 929, 930, 932, 934, 937, 941, 942, 944, 945, 948, 951, 954, 955, 956, 965, 968, 969, 972, 975, 976, 977, 978, 979, 980, 981, 982, 985, 986, 987, 988, 989, 990, 994, 996, 997, 1000, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1017, 1019, 1021, 1023, 1024, 1031, 1035, 1038, 1042, 1043, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1115, 1117, 1122, 1125, 1128, 1130, 1132, 1135, 1145, 1147, 1148, 1149, 1151, 1158], "zen": [8, 149, 190, 200, 228, 239, 272, 672], "corei": [8, 167, 178, 181, 182, 185, 187, 190, 192, 198, 200, 203, 206, 213, 216, 219, 229, 232, 243, 246, 255, 279, 285, 330, 335, 1095, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1131], "schaefer": [8, 187, 190, 192, 198, 200], "youtub": [8, 20, 153, 167, 178, 181, 183, 185, 187, 190, 192, 200, 207, 274, 275, 296, 300, 316], "channel": [8, 123, 151, 167, 190, 200, 894, 902, 964], "trainer": [8, 12, 23, 24, 59, 62, 153, 172, 173, 178, 190, 200, 251, 253, 271, 442, 444, 512, 559, 707, 902, 996, 1003, 1018, 1019, 1094, 1109, 1121, 1122, 1128, 1148, 1153], "hacker": [8, 190, 200, 1153], "schier": [8, 190, 200], "anzahl": [8, 190, 200], "sehr": [8, 23, 37, 154, 155, 169, 173, 179, 181, 189, 190, 194, 200, 231, 348, 1143, 1145, 1152, 1155, 1158, 1159, 1161, 1166], "guten": [8, 169, 179, 181, 190, 200, 234, 238, 348, 1147], "tutori": [8, 153, 167, 178, 181, 186, 190, 198, 200, 206, 207, 209, 216, 219, 229, 232, 255, 285, 297, 316, 330, 335, 857, 903, 1047, 1049, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1131], "stil": [8, 190, 200], "besser": [8, 23, 154, 165, 189, 190, 200, 210, 1158], "ander": [8, 169, 179, 190, 200, 210, 218, 231, 325, 330, 335, 339, 348, 823, 1143, 1144, 1147, 1152, 1155, 1160, 1164, 1165], "auswahl": [8, 190, 200], "einleitung": [9, 201], "datatyp": [9, 29, 90, 139, 178, 182, 185, 190, 191, 192, 195, 197, 201, 203, 204, 209, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 235, 236, 237, 239, 240, 242, 245, 255, 257, 260, 267, 275, 277, 281, 287, 297, 299, 301, 303, 309, 316, 317, 318, 319, 320, 321, 330, 335, 369, 376, 561, 590, 658, 750, 964, 996, 1001, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122, 1158], "number": [9, 24, 27, 29, 36, 53, 57, 59, 62, 63, 68, 78, 80, 82, 84, 85, 110, 111, 112, 115, 117, 125, 136, 139, 145, 147, 148, 151, 153, 156, 157, 161, 164, 166, 169, 175, 178, 182, 185, 188, 189, 190, 192, 197, 198, 201, 203, 204, 206, 209, 213, 215, 216, 218, 219, 221, 222, 225, 227, 228, 229, 231, 234, 235, 237, 239, 240, 242, 243, 244, 246, 251, 253, 255, 258, 259, 265, 266, 271, 272, 273, 274, 275, 276, 278, 279, 280, 284, 285, 288, 296, 297, 300, 301, 302, 304, 306, 307, 308, 314, 316, 321, 330, 337, 348, 353, 355, 357, 359, 361, 362, 363, 369, 373, 375, 376, 387, 398, 414, 418, 423, 427, 431, 437, 439, 449, 467, 468, 476, 501, 509, 511, 514, 516, 527, 533, 560, 580, 588, 591, 598, 614, 639, 648, 651, 660, 672, 698, 705, 707, 748, 750, 756, 758, 765, 768, 777, 779, 791, 793, 799, 807, 811, 822, 830, 837, 863, 882, 884, 886, 888, 890, 902, 913, 914, 917, 921, 922, 923, 928, 929, 930, 931, 950, 955, 956, 964, 965, 969, 971, 974, 994, 995, 997, 999, 1000, 1001, 1011, 1023, 1024, 1025, 1030, 1031, 1041, 1042, 1043, 1045, 1046, 1054, 1057, 1058, 1061, 1064, 1065, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1089, 1093, 1094, 1095, 1098, 1103, 1121, 1123, 1128, 1141, 1150, 1153, 1158], "integ": [9, 38, 75, 76, 88, 164, 166, 168, 183, 184, 185, 187, 191, 195, 201, 204, 208, 215, 218, 219, 221, 224, 227, 230, 231, 232, 234, 239, 242, 248, 260, 267, 280, 287, 299, 303, 309, 330, 353, 354, 359, 369, 372, 374, 375, 376, 387, 398, 400, 402, 403, 414, 415, 419, 425, 429, 434, 435, 476, 477, 480, 498, 533, 561, 587, 590, 638, 652, 656, 657, 659, 695, 698, 724, 747, 749, 750, 756, 931, 941, 942, 943, 950, 990, 1003, 1006, 1034, 1040, 1046, 1072, 1116, 1118, 1145, 1149, 1164], "string": [9, 29, 42, 50, 58, 90, 97, 106, 117, 118, 143, 148, 173, 183, 184, 185, 187, 190, 191, 194, 197, 201, 203, 204, 206, 207, 209, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 233, 235, 236, 237, 239, 240, 242, 245, 248, 250, 251, 253, 255, 257, 258, 260, 264, 265, 267, 268, 270, 278, 279, 281, 284, 285, 287, 296, 297, 299, 300, 301, 303, 306, 307, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 326, 330, 335, 341, 354, 357, 361, 368, 377, 383, 392, 398, 399, 405, 409, 412, 416, 421, 425, 429, 434, 435, 439, 447, 458, 462, 464, 479, 481, 482, 483, 486, 488, 491, 492, 493, 495, 496, 497, 498, 514, 515, 516, 521, 532, 533, 541, 547, 550, 556, 558, 561, 562, 565, 580, 582, 599, 602, 603, 604, 608, 611, 612, 613, 614, 615, 616, 619, 623, 634, 636, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 657, 658, 659, 661, 663, 664, 668, 683, 687, 689, 690, 691, 692, 695, 697, 699, 700, 704, 714, 715, 716, 717, 719, 731, 747, 748, 749, 750, 829, 920, 931, 935, 938, 942, 950, 955, 964, 968, 995, 996, 999, 1007, 1016, 1018, 1023, 1031, 1045, 1052, 1053, 1054, 1059, 1064, 1067, 1068, 1069, 1072, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1106, 1107, 1108, 1109, 1111, 1114, 1145, 1158], "compound": [9, 29, 90, 139, 182, 185, 190, 191, 192, 201, 203, 209, 213, 214, 216, 217, 219, 220, 222, 223, 225, 227, 229, 230, 235, 236, 237, 239, 240, 242, 243, 245, 257, 258, 265, 268, 275, 277, 278, 279, 281, 284, 285, 287, 296, 297, 299, 300, 301, 303, 306, 307, 314, 316, 317, 318, 319, 320, 321, 330, 353, 384, 403, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1051, 1052, 1053, 1054, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122, 1158], "list": [9, 27, 29, 37, 63, 90, 99, 114, 130, 139, 142, 143, 146, 153, 157, 168, 173, 175, 178, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 197, 198, 201, 203, 204, 206, 209, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 236, 237, 239, 240, 242, 243, 245, 247, 251, 252, 255, 257, 258, 260, 261, 262, 265, 267, 268, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 287, 296, 297, 299, 300, 301, 302, 306, 307, 309, 314, 315, 322, 325, 327, 330, 334, 335, 336, 348, 406, 412, 416, 417, 425, 429, 431, 433, 434, 435, 439, 440, 443, 452, 459, 461, 462, 501, 503, 511, 514, 547, 549, 551, 555, 559, 560, 565, 590, 606, 619, 623, 642, 652, 657, 660, 695, 703, 709, 714, 727, 728, 747, 748, 749, 750, 751, 759, 763, 764, 767, 774, 775, 778, 788, 799, 801, 805, 806, 812, 815, 818, 823, 824, 825, 826, 827, 830, 831, 837, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 864, 865, 868, 869, 871, 872, 873, 874, 875, 877, 885, 893, 902, 922, 924, 926, 932, 934, 942, 944, 948, 951, 954, 956, 971, 973, 988, 992, 995, 996, 999, 1000, 1001, 1014, 1016, 1018, 1019, 1025, 1026, 1031, 1032, 1033, 1034, 1037, 1043, 1045, 1046, 1047, 1052, 1054, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1085, 1087, 1090, 1092, 1093, 1094, 1095, 1100, 1103, 1113, 1116, 1120, 1130, 1135, 1142, 1145, 1158, 1159], "arrai": [9, 97, 108, 114, 169, 190, 191, 196, 201, 203, 207, 208, 210, 216, 224, 229, 234, 243, 246, 250, 251, 271, 279, 285, 353, 362, 368, 372, 383, 392, 399, 409, 412, 416, 418, 420, 421, 424, 425, 429, 434, 435, 513, 516, 539, 547, 550, 588, 589, 591, 593, 595, 598, 599, 604, 608, 620, 640, 647, 648, 649, 650, 651, 652, 655, 657, 695, 703, 718, 734, 747, 749, 750, 768, 829, 834, 950, 1027, 1031, 1043, 1095, 1098, 1100, 1123, 1158], "javascript": [9, 23, 144, 179, 189, 201, 210, 234, 239, 990, 1036], "std": [9, 42, 50, 58, 106, 108, 109, 110, 111, 114, 117, 118, 120, 157, 173, 174, 201, 249, 262, 271, 273, 441, 442, 447, 455, 458, 460, 462, 464, 469, 476, 479, 481, 482, 483, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 504, 509, 511, 513, 514, 515, 517, 518, 519, 520, 531, 533, 541, 551, 555, 558, 559, 561, 566, 567, 568, 572, 580, 582, 586, 587, 588, 589, 590, 595, 596, 597, 598, 599, 601, 602, 603, 607, 608, 610, 613, 614, 615, 616, 619, 620, 623, 624, 626, 627, 630, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 652, 657, 659, 662, 663, 664, 665, 666, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 697, 699, 700, 702, 707, 710, 713, 717, 720, 722, 728, 732, 734, 735, 736, 738, 744, 746, 747, 749, 750, 901, 935, 938, 942, 950, 952, 964, 968, 1100, 1135, 1140, 1148], "vector": [9, 13, 106, 108, 110, 111, 114, 117, 118, 120, 173, 201, 207, 224, 250, 251, 264, 270, 271, 273, 311, 460, 462, 486, 487, 503, 504, 511, 517, 518, 519, 520, 531, 549, 551, 555, 559, 561, 566, 571, 595, 597, 598, 599, 601, 604, 606, 619, 623, 637, 639, 640, 647, 648, 649, 650, 652, 658, 659, 663, 668, 669, 670, 677, 678, 679, 680, 681, 683, 703, 704, 707, 735, 744, 746, 750, 968, 1024, 1102, 1119, 1140], "dictionari": [9, 29, 63, 90, 168, 178, 183, 184, 185, 187, 190, 191, 192, 195, 197, 201, 203, 204, 209, 213, 214, 216, 217, 219, 220, 222, 223, 225, 227, 229, 230, 233, 236, 237, 239, 240, 242, 243, 245, 248, 255, 257, 258, 260, 265, 267, 268, 272, 274, 275, 277, 278, 279, 281, 284, 285, 287, 290, 293, 296, 297, 299, 300, 301, 303, 306, 307, 309, 314, 330, 335, 338, 704, 750, 996, 999, 1003, 1004, 1005, 1006, 1009, 1010, 1014, 1018, 1052, 1054, 1062, 1067, 1072, 1073, 1078, 1081, 1082, 1083, 1085, 1087, 1088, 1093, 1095, 1103, 1113, 1120, 1122, 1158], "valu": [9, 58, 84, 108, 114, 115, 117, 118, 125, 126, 146, 148, 150, 161, 163, 165, 166, 167, 179, 183, 185, 187, 189, 194, 196, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 215, 216, 218, 219, 221, 222, 224, 226, 228, 229, 231, 234, 238, 241, 243, 244, 255, 256, 259, 262, 264, 266, 276, 279, 280, 285, 286, 298, 302, 308, 311, 316, 324, 330, 352, 357, 359, 361, 362, 372, 375, 376, 377, 385, 387, 388, 396, 398, 400, 401, 406, 417, 421, 423, 425, 429, 434, 435, 439, 442, 447, 449, 452, 457, 460, 462, 476, 477, 479, 482, 486, 488, 491, 493, 494, 496, 507, 508, 509, 511, 514, 521, 533, 550, 559, 560, 561, 564, 570, 573, 611, 613, 615, 616, 657, 659, 660, 666, 668, 677, 683, 686, 689, 690, 691, 695, 704, 715, 729, 744, 747, 749, 750, 753, 756, 775, 777, 779, 781, 797, 807, 829, 842, 893, 902, 923, 931, 933, 934, 936, 937, 938, 941, 944, 950, 953, 964, 965, 968, 969, 988, 990, 992, 995, 999, 1003, 1005, 1007, 1014, 1025, 1026, 1027, 1035, 1037, 1040, 1042, 1043, 1047, 1052, 1055, 1060, 1062, 1065, 1072, 1074, 1095, 1098, 1100, 1103, 1106, 1107, 1113, 1114, 1117, 1118, 1119, 1135], "map": [9, 32, 34, 42, 59, 62, 106, 108, 109, 117, 118, 148, 155, 173, 179, 193, 195, 197, 201, 203, 204, 206, 207, 210, 218, 219, 221, 236, 250, 251, 253, 259, 271, 273, 280, 299, 310, 330, 433, 458, 462, 491, 495, 496, 497, 503, 514, 520, 549, 551, 555, 610, 613, 614, 615, 616, 619, 623, 652, 655, 659, 663, 669, 695, 714, 715, 716, 718, 749, 750, 781, 793, 955, 964, 965, 1013, 1017, 1026, 1027, 1046, 1102, 1152, 1162], "mathematisch": [9, 201, 259], "mengen": [9, 190, 191, 201, 1158], "while": [9, 13, 29, 53, 54, 63, 90, 139, 150, 152, 153, 161, 167, 178, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 201, 202, 203, 205, 206, 209, 210, 211, 213, 215, 216, 219, 220, 221, 224, 225, 227, 229, 230, 232, 233, 235, 236, 237, 238, 240, 242, 243, 245, 255, 258, 259, 265, 267, 268, 272, 274, 278, 279, 280, 284, 285, 286, 296, 297, 298, 300, 306, 307, 309, 314, 316, 317, 318, 319, 320, 321, 322, 330, 333, 335, 353, 355, 359, 361, 363, 370, 375, 377, 391, 392, 398, 399, 403, 405, 409, 412, 413, 416, 418, 420, 425, 427, 429, 434, 435, 445, 457, 462, 476, 483, 501, 550, 586, 590, 591, 594, 596, 598, 601, 616, 639, 645, 655, 657, 668, 683, 684, 685, 691, 695, 716, 727, 729, 744, 747, 749, 750, 774, 777, 785, 787, 797, 799, 805, 806, 812, 815, 818, 830, 834, 841, 893, 894, 901, 902, 914, 919, 920, 921, 922, 929, 938, 944, 949, 950, 953, 955, 961, 964, 968, 983, 988, 996, 997, 998, 999, 1003, 1006, 1018, 1019, 1023, 1028, 1033, 1045, 1051, 1052, 1053, 1054, 1058, 1064, 1066, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1101, 1102, 1105, 1109, 1122, 1145, 1149, 1151, 1153, 1158], "function": [9, 21, 29, 38, 50, 59, 62, 63, 78, 80, 82, 90, 97, 110, 111, 114, 115, 126, 139, 143, 146, 148, 157, 165, 178, 179, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 197, 198, 201, 203, 204, 206, 207, 209, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 239, 240, 241, 245, 248, 249, 256, 258, 260, 262, 264, 265, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 284, 285, 286, 292, 299, 301, 302, 309, 315, 325, 326, 332, 333, 335, 348, 352, 353, 359, 362, 366, 367, 368, 373, 378, 382, 383, 391, 392, 393, 394, 396, 398, 403, 405, 406, 409, 410, 411, 412, 414, 416, 417, 418, 420, 425, 427, 429, 431, 434, 435, 438, 446, 452, 460, 465, 477, 498, 502, 503, 514, 517, 518, 519, 520, 522, 531, 544, 550, 555, 559, 562, 565, 567, 568, 569, 570, 576, 581, 584, 586, 600, 606, 610, 619, 622, 623, 630, 633, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 657, 659, 660, 663, 664, 672, 675, 681, 683, 692, 693, 694, 695, 697, 699, 700, 705, 711, 715, 717, 718, 728, 734, 736, 738, 739, 740, 747, 748, 749, 750, 761, 764, 767, 768, 774, 778, 781, 785, 788, 791, 797, 799, 801, 806, 812, 813, 815, 816, 817, 818, 827, 830, 831, 893, 901, 914, 916, 922, 923, 924, 931, 932, 934, 939, 940, 941, 947, 948, 950, 951, 954, 956, 969, 971, 979, 989, 996, 999, 1000, 1001, 1002, 1010, 1018, 1020, 1023, 1024, 1028, 1030, 1051, 1052, 1053, 1054, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1072, 1075, 1076, 1078, 1079, 1080, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1100, 1105, 1111, 1124, 1128, 1140, 1148, 1149, 1150, 1158], "xx": [10, 215, 246, 280, 286, 302, 308], "yy": 10, "kur": [11, 23, 164, 166, 169, 181, 348, 1143, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1161, 1162, 1164], "fand": [11, 181, 348], "team": [11, 112, 115, 126, 153, 158, 161, 162, 173, 181, 182, 183, 198, 207, 232, 274, 348, 836, 842, 849, 851, 997, 1094, 1142, 1150], "statt": [11, 23, 181, 348, 1159, 1160, 1166], "wurd": [11, 155, 169, 173, 179, 181, 190, 330, 335, 348, 1147, 1158, 1159, 1165], "\u00fcber": [11, 23, 154, 155, 160, 164, 165, 169, 173, 181, 190, 191, 195, 204, 209, 235, 331, 348, 1142, 1152, 1158, 1159, 1164, 1165], "meinen": [11, 23, 181, 209, 225, 237, 348], "partner": [11, 23, 181, 348, 1142], "durat": [12, 27, 151, 161, 410, 444, 514, 725, 729, 730, 996, 1018, 1094, 1122, 1150, 1151, 1153, 1163], "each": [12, 40, 63, 76, 106, 110, 111, 118, 120, 146, 147, 148, 161, 167, 185, 186, 198, 215, 218, 221, 231, 234, 238, 271, 273, 280, 315, 321, 327, 330, 335, 403, 428, 431, 433, 457, 465, 498, 512, 513, 569, 655, 730, 735, 748, 785, 793, 797, 824, 830, 851, 855, 857, 901, 902, 903, 941, 945, 953, 987, 999, 1002, 1007, 1013, 1073, 1094, 1100, 1102, 1103, 1104, 1119, 1123, 1153, 1163], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 63, 65, 68, 75, 80, 83, 84, 90, 97, 112, 114, 126, 134, 139, 140, 142, 146, 147, 148, 150, 153, 161, 170, 174, 175, 178, 182, 183, 184, 185, 186, 187, 190, 197, 198, 203, 206, 207, 208, 209, 213, 215, 216, 219, 222, 223, 224, 225, 227, 229, 231, 232, 234, 235, 237, 239, 240, 243, 252, 255, 257, 258, 260, 261, 262, 268, 272, 273, 278, 279, 282, 284, 285, 287, 296, 297, 300, 301, 306, 307, 309, 311, 314, 316, 317, 318, 319, 320, 321, 330, 332, 335, 341, 371, 376, 385, 387, 415, 418, 419, 421, 427, 431, 433, 437, 451, 457, 550, 559, 560, 583, 590, 656, 665, 669, 670, 700, 704, 709, 718, 719, 748, 750, 766, 768, 797, 807, 816, 824, 825, 843, 860, 894, 901, 902, 903, 914, 918, 924, 939, 956, 964, 990, 996, 997, 999, 1006, 1007, 1014, 1018, 1026, 1037, 1045, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1102, 1108, 1109, 1110, 1111, 1115, 1123, 1128, 1137, 1150, 1151, 1158, 1163], "book": [12, 29, 32, 142, 146, 151, 161, 162, 173, 182, 207, 229, 265, 274, 275, 348, 438, 444, 857, 996, 1018, 1094, 1109, 1122, 1149, 1151, 1153, 1163], "separ": [12, 38, 78, 103, 104, 114, 146, 173, 175, 185, 205, 218, 224, 234, 238, 241, 244, 259, 262, 265, 266, 268, 276, 280, 288, 302, 304, 308, 360, 398, 419, 439, 442, 449, 461, 465, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 533, 550, 555, 580, 701, 729, 748, 750, 765, 766, 799, 833, 837, 842, 888, 890, 893, 903, 939, 955, 971, 973, 976, 977, 978, 979, 981, 989, 994, 1051, 1068, 1073, 1094, 1103, 1135, 1145, 1150, 1163], "requir": [12, 13, 27, 37, 39, 42, 61, 89, 108, 112, 114, 138, 142, 146, 147, 148, 151, 153, 157, 166, 174, 176, 178, 182, 186, 194, 205, 208, 219, 222, 224, 226, 231, 232, 246, 262, 271, 273, 274, 297, 341, 352, 385, 415, 417, 440, 449, 452, 460, 480, 482, 502, 511, 514, 533, 582, 595, 611, 648, 659, 665, 666, 672, 675, 680, 681, 705, 712, 740, 741, 894, 902, 903, 914, 919, 955, 957, 964, 983, 988, 996, 1009, 1018, 1019, 1037, 1046, 1047, 1050, 1103, 1109, 1122, 1123, 1128, 1130, 1131, 1137, 1149, 1151, 1153, 1163, 1166], "particip": [12, 151, 153, 175, 178, 262, 293, 498, 896, 1019, 1033, 1053, 1163], "should": [12, 37, 43, 45, 55, 57, 77, 80, 112, 115, 117, 125, 126, 142, 147, 148, 151, 153, 157, 161, 168, 174, 178, 182, 207, 208, 222, 228, 234, 238, 262, 297, 300, 302, 316, 321, 336, 337, 351, 376, 398, 413, 423, 427, 437, 442, 449, 455, 460, 465, 466, 468, 469, 477, 514, 558, 565, 567, 663, 666, 668, 672, 683, 727, 756, 775, 787, 789, 793, 797, 822, 841, 857, 864, 869, 901, 902, 903, 910, 929, 945, 956, 994, 1003, 1007, 1015, 1026, 1060, 1064, 1073, 1101, 1111, 1123, 1128, 1129, 1163], "fluent": [12, 285, 331, 332, 1095, 1163], "target": [12, 17, 40, 63, 108, 147, 149, 157, 198, 207, 289, 305, 332, 421, 424, 440, 443, 444, 450, 453, 466, 570, 750, 770, 772, 777, 797, 859, 924, 949, 973, 974, 983, 985, 992, 996, 1003, 1005, 1018, 1102, 1109, 1122, 1130, 1153], "audienc": [12, 146, 148, 178, 183, 300, 996, 1018, 1050, 1109, 1122, 1148, 1153], "english": [12, 29, 106, 139, 166, 185, 192, 203, 213, 216, 225, 229, 235, 237, 240, 242, 243, 258, 265, 270, 278, 279, 284, 285, 297, 306, 307, 314, 328, 329, 330, 335, 444, 750, 996, 1018, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093, 1094, 1108, 1109, 1122], "german": [12, 14, 444, 996, 1018, 1094, 1108, 1109, 1111, 1122], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 63, 65, 77, 78, 85, 89, 99, 106, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 131, 132, 134, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 161, 163, 166, 167, 168, 176, 178, 182, 183, 192, 197, 198, 202, 205, 207, 208, 213, 215, 218, 219, 221, 222, 224, 225, 231, 234, 238, 243, 246, 255, 259, 262, 264, 268, 270, 271, 272, 273, 275, 279, 280, 288, 289, 297, 301, 304, 305, 312, 316, 321, 330, 333, 334, 336, 341, 344, 349, 352, 361, 362, 363, 365, 371, 388, 401, 407, 410, 420, 426, 439, 440, 445, 449, 450, 451, 452, 456, 457, 460, 461, 462, 470, 471, 472, 473, 474, 478, 481, 482, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 521, 522, 531, 532, 533, 541, 547, 550, 555, 557, 558, 559, 560, 565, 567, 568, 573, 574, 576, 591, 595, 608, 622, 626, 627, 629, 630, 642, 646, 648, 649, 651, 655, 658, 663, 665, 666, 667, 668, 670, 677, 683, 697, 698, 700, 703, 704, 705, 707, 709, 713, 714, 715, 716, 717, 718, 727, 729, 734, 736, 738, 739, 740, 741, 745, 748, 751, 753, 756, 758, 760, 761, 763, 765, 766, 768, 770, 772, 775, 777, 783, 785, 787, 789, 791, 793, 797, 800, 804, 805, 811, 813, 823, 824, 825, 829, 832, 835, 836, 853, 857, 858, 860, 861, 863, 866, 868, 884, 894, 901, 902, 903, 924, 927, 929, 930, 931, 935, 938, 940, 942, 945, 952, 964, 968, 971, 972, 973, 974, 979, 981, 984, 985, 986, 987, 988, 989, 992, 993, 994, 995, 996, 999, 1007, 1008, 1011, 1012, 1014, 1017, 1019, 1021, 1024, 1032, 1035, 1036, 1037, 1047, 1050, 1053, 1062, 1066, 1069, 1080, 1091, 1092, 1098, 1100, 1103, 1108, 1109, 1111, 1113, 1116, 1117, 1118, 1122, 1125, 1128, 1133, 1135, 1140, 1150, 1151, 1153, 1163], "also": [12, 13, 23, 27, 31, 57, 63, 65, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 142, 147, 148, 150, 151, 153, 154, 156, 157, 158, 165, 167, 168, 169, 170, 173, 175, 176, 178, 179, 182, 188, 190, 208, 215, 221, 231, 232, 234, 238, 244, 250, 251, 253, 262, 264, 271, 272, 273, 279, 280, 289, 297, 301, 305, 316, 348, 439, 440, 445, 450, 457, 466, 476, 479, 481, 482, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 521, 522, 532, 557, 558, 559, 560, 565, 567, 573, 591, 608, 611, 626, 627, 629, 655, 663, 666, 667, 668, 670, 683, 694, 697, 700, 703, 704, 705, 707, 709, 713, 715, 718, 719, 727, 729, 734, 739, 740, 741, 748, 787, 797, 802, 823, 835, 841, 842, 857, 861, 863, 866, 868, 888, 894, 904, 913, 914, 927, 931, 935, 942, 952, 973, 974, 981, 986, 988, 990, 992, 993, 994, 996, 999, 1007, 1011, 1017, 1019, 1023, 1026, 1036, 1037, 1040, 1050, 1062, 1066, 1069, 1080, 1100, 1101, 1109, 1113, 1116, 1117, 1118, 1122, 1125, 1128, 1150, 1152, 1158, 1159, 1163], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 106, 129, 141, 142, 147, 151, 158, 159, 161, 169, 170, 173, 174, 175, 178, 181, 205, 215, 221, 231, 234, 264, 271, 273, 276, 288, 304, 338, 348, 440, 442, 443, 444, 445, 446, 448, 449, 451, 453, 455, 456, 457, 458, 459, 460, 462, 464, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 511, 513, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 555, 635, 715, 748, 751, 753, 756, 761, 766, 772, 775, 783, 904, 910, 912, 913, 914, 935, 938, 961, 964, 968, 995, 996, 998, 1018, 1019, 1047, 1050, 1053, 1097, 1098, 1101, 1102, 1109, 1122, 1133, 1137, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166], "sourc": [13, 23, 28, 30, 39, 61, 65, 68, 73, 86, 110, 111, 114, 126, 145, 146, 147, 148, 151, 152, 153, 157, 161, 163, 164, 166, 167, 174, 187, 192, 197, 215, 221, 229, 231, 234, 238, 243, 251, 253, 255, 258, 259, 262, 283, 290, 393, 394, 397, 432, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 461, 512, 515, 516, 630, 663, 666, 672, 677, 683, 713, 765, 795, 798, 809, 841, 857, 858, 890, 931, 971, 972, 974, 975, 977, 981, 983, 985, 986, 987, 988, 989, 1026, 1082, 1091, 1130, 1137, 1143, 1153, 1160], "under": [13, 21, 35, 55, 120, 123, 125, 145, 146, 148, 153, 174, 185, 187, 297, 348, 462, 477, 514, 833, 834, 901, 902, 903, 904, 905, 906, 913, 914, 956, 971, 995, 1002, 1009, 1043, 1128], "why": [13, 24, 28, 45, 50, 65, 66, 69, 114, 126, 142, 146, 147, 152, 158, 178, 182, 183, 185, 187, 198, 207, 227, 265, 268, 274, 275, 296, 310, 330, 333, 334, 337, 351, 363, 369, 376, 379, 397, 408, 413, 414, 419, 423, 426, 433, 438, 476, 499, 558, 573, 591, 604, 630, 633, 649, 655, 656, 672, 703, 719, 722, 735, 746, 765, 777, 793, 797, 828, 834, 837, 894, 947, 950, 968, 983, 985, 993, 994, 997, 1043, 1045, 1095, 1100, 1110, 1118], "appli": [13, 76, 83, 143, 148, 187, 205, 264, 270, 297, 308, 380, 415, 421, 439, 570, 670, 705, 770, 797, 837, 840, 857, 901, 902, 927, 988, 1114], "websit": [13, 23, 147, 161, 1124, 1137], "contain": [13, 17, 29, 35, 38, 61, 106, 107, 108, 110, 111, 112, 114, 142, 143, 149, 152, 157, 161, 166, 168, 173, 174, 176, 178, 179, 182, 185, 187, 205, 207, 208, 215, 221, 231, 232, 234, 238, 245, 246, 249, 250, 251, 264, 271, 280, 297, 315, 316, 325, 332, 333, 339, 341, 378, 397, 411, 431, 433, 439, 441, 442, 446, 460, 476, 498, 501, 503, 512, 513, 514, 520, 521, 522, 555, 556, 558, 566, 575, 592, 595, 608, 619, 623, 637, 646, 651, 652, 658, 663, 703, 715, 718, 744, 745, 746, 748, 750, 753, 758, 766, 768, 770, 791, 793, 797, 817, 824, 825, 828, 837, 839, 862, 863, 864, 869, 876, 901, 902, 903, 910, 931, 939, 940, 955, 965, 971, 974, 979, 983, 988, 995, 997, 1002, 1019, 1041, 1044, 1050, 1052, 1064, 1073, 1077, 1092, 1095, 1097, 1101, 1103, 1106, 1108, 1113, 1123, 1124, 1128, 1134, 1135, 1147, 1148], "give": [13, 27, 40, 53, 59, 62, 110, 111, 117, 139, 143, 145, 146, 148, 153, 156, 167, 170, 174, 175, 182, 187, 198, 206, 238, 243, 255, 271, 273, 301, 349, 363, 364, 379, 395, 398, 406, 431, 437, 439, 442, 457, 509, 511, 527, 544, 580, 595, 641, 649, 672, 701, 797, 823, 830, 848, 850, 902, 903, 922, 923, 935, 938, 957, 959, 964, 965, 971, 974, 983, 992, 995, 1018, 1035, 1047, 1095, 1099, 1100, 1123, 1128, 1130, 1148, 1151, 1153], "structur": [13, 29, 65, 78, 89, 108, 117, 146, 161, 183, 197, 224, 225, 232, 234, 235, 237, 240, 243, 246, 249, 258, 265, 268, 275, 279, 285, 289, 290, 293, 297, 301, 305, 307, 311, 330, 334, 336, 338, 353, 363, 371, 376, 405, 407, 411, 412, 416, 425, 428, 429, 434, 435, 439, 440, 444, 452, 459, 477, 502, 512, 531, 580, 613, 646, 655, 657, 695, 747, 749, 750, 785, 787, 791, 795, 797, 817, 853, 884, 920, 926, 942, 947, 965, 1035, 1037, 1077, 1083, 1120, 1122, 1129, 1136, 1148], "much": [13, 27, 35, 38, 63, 80, 117, 120, 122, 124, 145, 146, 147, 148, 153, 156, 161, 170, 176, 178, 182, 183, 184, 186, 208, 219, 221, 222, 224, 226, 232, 246, 247, 250, 251, 253, 265, 268, 274, 275, 296, 297, 300, 310, 311, 333, 365, 376, 387, 423, 427, 437, 452, 477, 556, 566, 572, 591, 612, 632, 655, 656, 665, 666, 670, 683, 695, 696, 697, 701, 703, 705, 715, 719, 738, 739, 741, 749, 750, 753, 768, 775, 783, 785, 791, 793, 797, 836, 837, 886, 894, 897, 900, 902, 914, 956, 965, 968, 969, 971, 973, 983, 990, 993, 994, 1007, 1008, 1013, 1014, 1017, 1026, 1043, 1095, 1101, 1102, 1128, 1130, 1148], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 62, 63, 65, 77, 78, 114, 115, 117, 118, 119, 122, 123, 124, 126, 139, 145, 146, 147, 148, 150, 151, 153, 156, 157, 161, 166, 169, 170, 174, 175, 176, 178, 182, 184, 187, 197, 198, 205, 207, 208, 215, 221, 222, 224, 225, 231, 234, 247, 249, 251, 253, 259, 262, 264, 265, 268, 271, 273, 297, 300, 316, 321, 333, 341, 362, 365, 369, 391, 393, 398, 403, 415, 419, 427, 430, 437, 443, 447, 449, 452, 455, 456, 457, 477, 501, 511, 512, 513, 514, 515, 527, 533, 541, 544, 550, 559, 562, 565, 569, 570, 571, 573, 594, 611, 620, 627, 629, 632, 635, 636, 645, 646, 654, 655, 658, 659, 665, 666, 683, 701, 703, 704, 714, 715, 718, 719, 725, 739, 741, 746, 748, 751, 753, 755, 758, 766, 768, 770, 775, 781, 787, 789, 791, 793, 797, 802, 810, 813, 817, 825, 828, 829, 833, 834, 836, 839, 857, 859, 862, 864, 869, 886, 894, 895, 897, 901, 902, 903, 904, 913, 914, 918, 922, 924, 927, 931, 937, 939, 940, 958, 965, 969, 971, 973, 974, 987, 990, 992, 994, 997, 999, 1007, 1012, 1017, 1019, 1021, 1023, 1025, 1027, 1031, 1035, 1037, 1040, 1041, 1044, 1047, 1049, 1052, 1060, 1063, 1073, 1074, 1077, 1083, 1084, 1085, 1086, 1087, 1089, 1094, 1097, 1100, 1102, 1103, 1111, 1113, 1114, 1119, 1128, 1129, 1130, 1135, 1137, 1148, 1153], "topic": [13, 16, 27, 28, 29, 59, 62, 69, 78, 90, 97, 106, 114, 139, 143, 148, 152, 153, 166, 170, 183, 186, 187, 188, 190, 198, 203, 213, 216, 222, 232, 234, 235, 250, 251, 255, 273, 275, 279, 301, 316, 317, 318, 319, 321, 329, 330, 335, 336, 341, 343, 344, 347, 349, 533, 574, 576, 635, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 748, 797, 799, 809, 820, 827, 829, 831, 838, 843, 847, 849, 851, 852, 877, 887, 900, 902, 905, 906, 908, 924, 974, 983, 984, 988, 996, 1001, 1018, 1019, 1023, 1050, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1102, 1108, 1122, 1125, 1128, 1132, 1150, 1151, 1158], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 62, 63, 78, 80, 82, 110, 111, 112, 125, 128, 134, 146, 147, 148, 149, 150, 153, 157, 161, 170, 174, 178, 182, 183, 185, 186, 187, 198, 206, 215, 221, 222, 231, 234, 238, 259, 280, 287, 288, 297, 300, 304, 316, 333, 337, 341, 361, 367, 376, 385, 403, 406, 417, 433, 437, 440, 442, 448, 449, 452, 453, 454, 460, 541, 556, 558, 559, 565, 567, 568, 571, 572, 573, 583, 611, 633, 656, 665, 666, 697, 701, 713, 715, 717, 719, 730, 731, 735, 748, 750, 768, 787, 789, 823, 830, 833, 834, 850, 855, 857, 859, 879, 896, 901, 902, 903, 906, 910, 913, 922, 923, 929, 930, 942, 947, 950, 956, 965, 969, 971, 973, 983, 990, 992, 994, 1003, 1006, 1007, 1008, 1011, 1014, 1017, 1021, 1023, 1024, 1025, 1026, 1032, 1033, 1037, 1039, 1041, 1043, 1044, 1057, 1073, 1100, 1104, 1107, 1109, 1111, 1128, 1140, 1148, 1150, 1151, 1153, 1163], "exampl": [13, 17, 24, 29, 39, 40, 65, 78, 87, 112, 114, 115, 126, 139, 140, 142, 145, 146, 147, 148, 153, 156, 157, 161, 165, 166, 167, 170, 174, 178, 182, 184, 186, 197, 205, 207, 211, 215, 218, 221, 222, 224, 230, 231, 232, 235, 236, 237, 239, 243, 246, 255, 262, 264, 265, 268, 272, 274, 275, 279, 280, 288, 290, 293, 296, 297, 300, 304, 310, 318, 321, 330, 338, 341, 354, 360, 361, 362, 370, 376, 428, 440, 451, 452, 453, 460, 464, 466, 476, 477, 479, 481, 501, 502, 514, 533, 569, 571, 573, 582, 591, 598, 636, 645, 663, 672, 677, 692, 693, 697, 698, 702, 705, 709, 715, 719, 748, 750, 756, 768, 775, 797, 824, 825, 829, 834, 854, 857, 867, 879, 886, 894, 901, 902, 903, 904, 913, 917, 924, 927, 928, 929, 930, 931, 939, 946, 965, 968, 970, 971, 972, 973, 974, 975, 981, 987, 988, 989, 990, 993, 994, 995, 999, 1006, 1013, 1016, 1018, 1019, 1020, 1022, 1030, 1035, 1044, 1050, 1052, 1068, 1073, 1091, 1092, 1093, 1101, 1102, 1108, 1110, 1116, 1117, 1122, 1127, 1135, 1137, 1150, 1151], "here": [13, 14, 63, 68, 73, 74, 77, 78, 80, 81, 85, 106, 112, 117, 132, 134, 143, 145, 146, 148, 149, 151, 152, 153, 156, 157, 161, 166, 168, 174, 175, 176, 178, 182, 184, 187, 197, 198, 202, 205, 206, 207, 208, 213, 216, 224, 225, 229, 232, 234, 238, 251, 253, 255, 259, 262, 264, 268, 271, 273, 280, 283, 298, 312, 316, 321, 327, 330, 333, 334, 336, 349, 352, 417, 419, 426, 433, 448, 449, 455, 457, 477, 482, 493, 496, 499, 501, 512, 514, 516, 531, 533, 541, 555, 558, 559, 562, 568, 574, 576, 580, 592, 620, 626, 646, 648, 649, 655, 666, 672, 677, 683, 693, 697, 702, 705, 707, 713, 715, 718, 727, 740, 751, 765, 770, 772, 775, 787, 793, 797, 823, 857, 894, 896, 901, 902, 903, 910, 914, 921, 927, 931, 937, 942, 955, 964, 968, 969, 980, 983, 987, 989, 992, 993, 994, 995, 1007, 1010, 1014, 1019, 1022, 1023, 1030, 1036, 1046, 1047, 1053, 1074, 1077, 1094, 1100, 1101, 1102, 1103, 1108, 1128, 1130, 1133, 1137, 1151, 1153], "discuss": [13, 42, 50, 114, 178, 182, 183, 185, 187, 222, 232, 268, 272, 273, 296, 311, 330, 334, 337, 338, 341, 343, 344, 348, 450, 538, 541, 544, 547, 550, 553, 723, 729, 777, 810, 857, 964, 968, 997, 1135, 1137, 1140, 1151], "over": [13, 33, 34, 35, 38, 42, 61, 65, 89, 97, 117, 118, 126, 139, 142, 143, 145, 146, 148, 150, 151, 156, 166, 170, 178, 182, 184, 185, 186, 197, 202, 205, 207, 208, 215, 220, 221, 222, 224, 227, 230, 258, 262, 265, 268, 274, 275, 291, 296, 300, 311, 315, 330, 333, 376, 387, 388, 403, 417, 437, 447, 455, 465, 479, 556, 562, 590, 608, 620, 648, 655, 703, 704, 722, 744, 797, 894, 898, 902, 904, 910, 931, 945, 953, 956, 971, 983, 985, 990, 993, 1030, 1043, 1047], "lwn": [13, 39, 163, 777, 789, 807, 1143], "attribut": [13, 143, 146, 148, 163, 182, 196, 202, 206, 215, 218, 221, 226, 228, 233, 234, 238, 241, 244, 248, 249, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 323, 325, 334, 341, 415, 431, 433, 445, 460, 727, 748, 829, 835, 856, 860, 927, 939, 940, 957, 958, 965, 969, 993, 994, 1007, 1009, 1020, 1046, 1100, 1164], "sharealik": 13, "cc": [13, 23, 32, 128, 164, 172, 173, 174, 251, 440, 462, 511, 513, 514, 534, 537, 540, 541, 543, 544, 546, 547, 549, 550, 552, 575, 713, 714, 719, 775, 963, 964, 967, 968, 973, 1134, 1135, 1137, 1139, 1140], "BY": [13, 23, 35, 683], "sa": [13, 23, 32, 955], "don": [13, 24, 58, 61, 78, 84, 114, 117, 123, 134, 139, 145, 146, 147, 148, 151, 152, 153, 161, 176, 178, 182, 186, 197, 198, 208, 215, 219, 221, 222, 224, 231, 234, 286, 298, 338, 362, 403, 415, 418, 419, 421, 427, 433, 437, 439, 456, 513, 541, 547, 556, 557, 572, 573, 580, 590, 626, 633, 663, 666, 668, 683, 697, 698, 710, 719, 724, 729, 765, 770, 789, 797, 802, 832, 857, 859, 864, 870, 881, 894, 897, 901, 902, 906, 914, 918, 919, 920, 921, 940, 941, 942, 947, 968, 969, 974, 995, 1003, 1005, 1019, 1022, 1026, 1050, 1104, 1110, 1117, 1123, 1134, 1140], "t": [13, 24, 43, 50, 58, 61, 63, 65, 78, 84, 114, 117, 123, 125, 134, 139, 143, 145, 147, 148, 151, 152, 153, 156, 157, 161, 163, 165, 176, 178, 179, 182, 185, 186, 189, 194, 196, 197, 198, 202, 208, 211, 215, 218, 219, 221, 222, 224, 226, 228, 231, 232, 234, 238, 241, 244, 247, 253, 256, 259, 264, 265, 266, 268, 270, 276, 280, 286, 298, 301, 302, 308, 316, 322, 324, 325, 327, 338, 350, 352, 353, 355, 361, 362, 372, 387, 393, 395, 398, 403, 413, 415, 417, 418, 419, 421, 427, 433, 437, 439, 442, 456, 509, 511, 513, 533, 541, 547, 556, 557, 559, 566, 572, 573, 580, 582, 583, 590, 594, 626, 633, 655, 656, 658, 663, 665, 666, 668, 672, 673, 674, 675, 683, 686, 697, 698, 703, 709, 710, 713, 714, 715, 717, 719, 722, 724, 727, 729, 756, 765, 770, 777, 789, 791, 797, 802, 814, 817, 823, 824, 825, 832, 834, 857, 858, 859, 863, 864, 870, 876, 879, 881, 894, 897, 901, 902, 903, 906, 910, 914, 918, 919, 920, 921, 928, 940, 941, 942, 947, 957, 964, 965, 968, 969, 971, 972, 974, 983, 986, 989, 995, 996, 1003, 1005, 1007, 1015, 1019, 1022, 1025, 1026, 1027, 1033, 1039, 1043, 1045, 1046, 1047, 1050, 1052, 1099, 1104, 1108, 1110, 1117, 1123, 1134, 1135, 1140, 1150], "want": [13, 17, 27, 29, 30, 45, 50, 61, 63, 78, 84, 115, 118, 122, 123, 125, 128, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 166, 169, 174, 178, 182, 185, 186, 197, 198, 205, 208, 215, 222, 226, 228, 262, 264, 265, 268, 290, 316, 327, 341, 363, 375, 391, 419, 431, 433, 437, 441, 442, 457, 460, 481, 500, 509, 514, 533, 544, 557, 562, 565, 573, 598, 633, 649, 663, 668, 683, 704, 709, 715, 717, 718, 719, 736, 748, 753, 772, 797, 802, 832, 834, 836, 839, 854, 857, 858, 876, 894, 897, 901, 902, 903, 914, 918, 919, 920, 921, 926, 940, 955, 957, 958, 959, 968, 971, 973, 983, 985, 987, 990, 991, 992, 993, 994, 995, 996, 998, 1002, 1009, 1014, 1018, 1025, 1034, 1037, 1047, 1051, 1053, 1089, 1094, 1104, 1108, 1109, 1111, 1113, 1117, 1128, 1130, 1131, 1135, 1148, 1153], "anybodi": [13, 65, 146, 151, 178, 197, 198, 420, 929, 940, 1140], "monei": [13, 147, 150, 153, 221, 836, 1052], "my": [13, 17, 24, 28, 32, 39, 59, 62, 63, 65, 97, 112, 128, 134, 145, 146, 147, 149, 150, 152, 153, 156, 157, 161, 174, 178, 182, 185, 198, 205, 232, 246, 248, 262, 272, 327, 330, 335, 348, 427, 438, 460, 514, 550, 568, 579, 633, 715, 735, 748, 781, 793, 797, 799, 825, 832, 847, 849, 854, 860, 881, 894, 901, 903, 905, 906, 913, 914, 919, 920, 921, 930, 965, 1007, 1026, 1049, 1089, 1111, 1128, 1148], "without": [13, 145, 146, 147, 148, 156, 157, 182, 226, 290, 311, 363, 387, 394, 420, 423, 427, 432, 437, 448, 460, 465, 477, 544, 550, 556, 562, 626, 633, 655, 656, 657, 683, 695, 701, 703, 704, 709, 715, 721, 722, 729, 747, 749, 750, 768, 781, 797, 836, 837, 879, 903, 905, 914, 940, 959, 964, 965, 969, 992, 993, 996, 997, 999, 1006, 1008, 1010, 1012, 1014, 1021, 1026, 1043, 1128, 1130, 1148, 1153], "modif": [13, 55, 106, 126, 161, 224, 363, 365, 371, 376, 407, 437, 460, 465, 512, 570, 730, 748, 770, 797, 842, 858, 879, 1006, 1026, 1043, 1104, 1140], "back": [13, 29, 32, 63, 66, 112, 147, 148, 151, 157, 182, 184, 186, 211, 219, 224, 235, 237, 255, 270, 290, 293, 413, 428, 479, 504, 533, 553, 573, 587, 592, 630, 663, 677, 712, 719, 731, 750, 765, 770, 779, 797, 799, 828, 860, 894, 901, 914, 955, 965, 971, 990, 997, 1010, 1014, 1026, 1054, 1088, 1089, 1090, 1093, 1119], "m": [13, 23, 32, 38, 61, 130, 132, 147, 148, 149, 151, 153, 156, 161, 174, 179, 184, 189, 198, 202, 211, 212, 213, 215, 219, 234, 238, 244, 246, 251, 263, 298, 308, 326, 330, 331, 332, 337, 351, 439, 462, 508, 511, 512, 513, 514, 550, 575, 683, 705, 714, 765, 766, 772, 775, 807, 834, 836, 857, 901, 914, 959, 1012, 1049, 1050, 1057, 1082, 1083, 1100, 1110, 1123, 1128, 1130, 1135], "lawyer": 13, "understand": [13, 114, 145, 146, 148, 152, 153, 156, 157, 161, 170, 178, 182, 207, 234, 265, 268, 271, 273, 274, 275, 290, 293, 296, 300, 332, 341, 369, 417, 426, 433, 465, 501, 642, 663, 672, 693, 704, 797, 836, 842, 894, 1014, 1052, 1095, 1100, 1101, 1118, 1148, 1149, 1150], "permit": [13, 148, 153, 198, 262, 327, 538, 559, 566, 901, 912, 956, 1020, 1120], "exactli": [13, 78, 146, 148, 170, 176, 205, 275, 321, 355, 395, 501, 512, 590, 666, 703, 797, 903, 928, 929, 969, 987, 1103, 1122], "gnu": [13, 157, 162, 198, 207, 327, 333, 349, 434, 435, 440, 442, 565, 714, 750, 777, 798, 857, 972, 973, 983, 985, 987, 1146, 1150], "free": [13, 32, 152, 157, 173, 198, 327, 410, 424, 462, 539, 559, 565, 567, 627, 646, 647, 649, 650, 666, 693, 712, 713, 714, 733, 761, 768, 799, 919, 920, 921, 933, 956, 969, 971, 1101, 1111, 1120, 1145], "document": [13, 24, 40, 42, 65, 78, 86, 114, 117, 143, 146, 148, 150, 157, 158, 164, 167, 174, 186, 198, 204, 205, 213, 215, 220, 221, 222, 224, 231, 234, 238, 251, 253, 255, 264, 271, 273, 276, 297, 299, 313, 316, 321, 330, 337, 338, 413, 414, 417, 424, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 465, 512, 531, 572, 576, 590, 591, 635, 646, 648, 658, 663, 670, 672, 677, 693, 694, 700, 702, 705, 707, 714, 715, 716, 718, 725, 726, 727, 729, 731, 744, 748, 768, 770, 793, 797, 798, 805, 809, 823, 829, 836, 843, 847, 849, 851, 881, 882, 883, 885, 886, 888, 889, 897, 901, 902, 903, 937, 944, 952, 985, 987, 988, 992, 994, 995, 999, 1003, 1005, 1007, 1013, 1030, 1040, 1041, 1091, 1103, 1106, 1113, 1114, 1117, 1119, 1126, 1129, 1136, 1137, 1156, 1157], "ago": [13, 148, 152, 208, 822], "wa": [13, 37, 53, 65, 78, 112, 118, 123, 126, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 161, 163, 165, 166, 167, 169, 173, 174, 179, 181, 182, 185, 189, 195, 196, 202, 205, 208, 211, 212, 222, 224, 226, 228, 235, 238, 247, 259, 266, 272, 275, 280, 298, 310, 330, 335, 348, 351, 398, 423, 443, 547, 555, 556, 565, 566, 611, 640, 647, 648, 649, 650, 651, 652, 659, 663, 666, 721, 748, 750, 772, 779, 787, 793, 832, 854, 884, 886, 894, 903, 930, 950, 969, 994, 1026, 1100, 1114, 1117, 1123, 1128, 1130, 1133, 1143, 1145, 1146, 1147, 1148, 1160, 1166], "debian": [13, 78, 134, 135, 136, 153, 157, 161, 163, 175, 186, 198, 283, 327, 348, 527, 750, 797, 896, 973, 985, 1130, 1135], "resolut": [13, 236, 238, 420, 668, 730, 775, 807, 903], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 61, 62, 63, 65, 68, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 88, 89, 97, 106, 107, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 138, 139, 141, 142, 143, 145, 146, 148, 149, 152, 156, 158, 161, 163, 166, 170, 172, 173, 175, 178, 182, 184, 185, 197, 198, 203, 206, 213, 215, 216, 218, 219, 222, 223, 225, 229, 231, 232, 234, 238, 241, 243, 244, 246, 251, 253, 255, 259, 262, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 285, 288, 293, 296, 297, 300, 301, 302, 304, 308, 310, 311, 315, 316, 321, 327, 330, 333, 335, 336, 339, 348, 359, 362, 363, 366, 367, 368, 371, 373, 382, 383, 385, 387, 388, 392, 393, 394, 397, 398, 399, 401, 405, 406, 409, 412, 416, 420, 421, 425, 427, 428, 429, 433, 434, 435, 437, 439, 440, 442, 447, 448, 449, 450, 453, 455, 456, 458, 459, 462, 465, 466, 467, 469, 476, 479, 480, 481, 499, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 527, 531, 532, 533, 534, 537, 540, 543, 546, 549, 552, 557, 559, 560, 564, 565, 568, 570, 572, 573, 574, 576, 577, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 599, 602, 603, 604, 608, 611, 612, 613, 614, 615, 616, 620, 626, 629, 630, 632, 633, 636, 637, 639, 640, 642, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 657, 658, 659, 660, 662, 664, 666, 670, 672, 677, 683, 685, 692, 693, 695, 697, 698, 700, 702, 705, 710, 714, 715, 716, 717, 719, 721, 725, 727, 730, 734, 735, 744, 747, 748, 749, 750, 755, 756, 758, 760, 763, 765, 766, 768, 770, 772, 775, 777, 781, 783, 785, 789, 791, 793, 797, 798, 800, 802, 810, 811, 813, 816, 817, 823, 824, 825, 828, 832, 833, 836, 837, 839, 841, 843, 849, 854, 857, 859, 862, 863, 864, 866, 876, 882, 884, 888, 893, 894, 897, 898, 900, 904, 905, 906, 913, 914, 917, 923, 924, 927, 928, 929, 931, 935, 937, 938, 940, 942, 943, 944, 946, 947, 950, 952, 953, 956, 957, 960, 963, 964, 965, 967, 968, 969, 971, 974, 981, 982, 985, 986, 987, 988, 989, 993, 996, 997, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1012, 1014, 1016, 1018, 1019, 1020, 1022, 1026, 1028, 1030, 1034, 1035, 1036, 1037, 1040, 1043, 1045, 1047, 1050, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1066, 1068, 1071, 1072, 1073, 1074, 1078, 1080, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1131, 1134, 1135, 1137, 1139, 1140, 1148, 1150, 1151, 1153], "gfdl": 13, "becaus": [13, 17, 38, 61, 66, 80, 112, 140, 145, 146, 148, 157, 161, 170, 178, 182, 184, 198, 208, 215, 221, 231, 234, 355, 376, 415, 424, 427, 430, 437, 439, 448, 457, 460, 477, 511, 514, 557, 558, 565, 568, 608, 630, 649, 705, 713, 716, 766, 777, 795, 797, 836, 876, 894, 901, 902, 903, 912, 923, 924, 927, 930, 944, 950, 965, 968, 969, 992, 995, 1021, 1051, 1108, 1123, 1130, 1135, 1148], "too": [13, 27, 53, 56, 63, 80, 123, 146, 148, 153, 162, 175, 178, 194, 205, 207, 224, 234, 238, 241, 250, 251, 253, 264, 266, 274, 275, 280, 296, 298, 310, 311, 372, 417, 427, 437, 451, 457, 556, 570, 677, 679, 683, 695, 696, 697, 703, 709, 715, 738, 748, 749, 750, 795, 797, 802, 829, 894, 903, 904, 910, 927, 940, 957, 973, 992, 993, 994, 997, 1043, 1047, 1124, 1148], "restrict": [13, 147, 176, 186, 415, 420, 449, 457, 464, 499, 580, 748, 795, 824, 825, 913, 1108], "articl": [13, 161, 163, 777, 789, 807, 901, 903, 983], "describ": [13, 65, 107, 114, 143, 145, 146, 147, 148, 151, 153, 156, 157, 172, 198, 234, 238, 246, 272, 280, 283, 327, 460, 469, 515, 534, 537, 540, 543, 546, 549, 552, 705, 719, 797, 807, 830, 857, 903, 908, 960, 963, 967, 972, 980, 986, 987, 1016, 1100, 1134, 1137, 1139], "pretti": [13, 147, 148, 170, 184, 188, 207, 224, 234, 427, 442, 590, 647, 722, 990, 1120], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 65, 117, 126, 146, 147, 148, 150, 152, 153, 156, 157, 161, 166, 167, 168, 170, 178, 179, 184, 187, 198, 206, 210, 215, 221, 224, 231, 232, 234, 237, 238, 256, 265, 268, 274, 275, 280, 296, 297, 298, 308, 317, 318, 327, 334, 359, 363, 374, 375, 376, 393, 394, 398, 403, 406, 415, 417, 421, 423, 427, 428, 431, 432, 442, 460, 464, 467, 468, 479, 498, 499, 507, 511, 531, 533, 540, 542, 556, 559, 565, 568, 571, 590, 593, 599, 608, 611, 612, 613, 637, 648, 656, 661, 668, 670, 672, 675, 677, 701, 702, 705, 717, 718, 719, 725, 765, 766, 770, 775, 777, 779, 787, 789, 795, 797, 813, 829, 835, 841, 857, 858, 860, 884, 894, 901, 902, 903, 904, 913, 914, 920, 926, 940, 941, 942, 955, 959, 965, 969, 971, 987, 993, 994, 997, 1002, 1003, 1006, 1008, 1012, 1014, 1030, 1032, 1035, 1040, 1042, 1043, 1044, 1077, 1085, 1087, 1101, 1103, 1104, 1107, 1108, 1111, 1113, 1116, 1117, 1118, 1128, 1130, 1135], "issu": [13, 146, 149, 156, 157, 208, 273, 274, 275, 296, 311, 350, 363, 421, 933, 959, 968, 985, 1003], "how": [13, 23, 24, 37, 42, 45, 50, 65, 70, 71, 75, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 104, 112, 114, 117, 123, 132, 134, 142, 143, 146, 149, 151, 152, 153, 157, 158, 161, 166, 168, 170, 174, 175, 181, 182, 183, 184, 185, 186, 187, 198, 203, 205, 206, 207, 213, 215, 216, 218, 219, 221, 222, 224, 227, 229, 232, 243, 246, 250, 251, 255, 262, 265, 268, 270, 271, 272, 273, 274, 275, 279, 285, 288, 290, 296, 297, 300, 301, 304, 316, 332, 333, 337, 348, 363, 369, 394, 401, 403, 404, 415, 417, 419, 421, 426, 430, 437, 439, 441, 448, 462, 468, 498, 501, 509, 512, 533, 550, 557, 565, 566, 569, 580, 590, 629, 633, 639, 649, 655, 677, 714, 717, 718, 719, 729, 744, 745, 751, 758, 760, 761, 775, 787, 797, 802, 813, 824, 825, 830, 837, 857, 876, 884, 890, 894, 901, 902, 903, 911, 919, 920, 921, 924, 927, 930, 931, 937, 950, 953, 956, 957, 959, 964, 968, 969, 981, 983, 985, 987, 1000, 1001, 1018, 1019, 1022, 1036, 1039, 1053, 1091, 1092, 1095, 1100, 1101, 1114, 1116, 1117, 1120, 1128, 1131, 1137, 1140, 1150, 1151, 1153], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 62, 63, 78, 83, 85, 89, 91, 97, 114, 115, 119, 123, 125, 126, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 161, 162, 163, 165, 166, 167, 170, 174, 175, 178, 182, 183, 186, 196, 197, 198, 206, 208, 215, 218, 222, 224, 226, 228, 229, 232, 234, 237, 238, 244, 246, 248, 251, 253, 262, 265, 268, 297, 298, 316, 318, 325, 327, 330, 332, 366, 385, 387, 388, 390, 391, 392, 397, 398, 399, 405, 406, 409, 412, 415, 416, 423, 425, 429, 434, 435, 437, 439, 441, 457, 462, 465, 468, 476, 477, 498, 500, 512, 533, 541, 547, 550, 556, 558, 570, 574, 576, 577, 580, 617, 630, 633, 647, 648, 649, 657, 663, 668, 672, 694, 695, 701, 705, 707, 713, 714, 715, 717, 718, 719, 746, 747, 749, 750, 770, 774, 785, 789, 793, 795, 797, 822, 826, 827, 830, 834, 837, 841, 842, 851, 853, 858, 862, 864, 893, 894, 897, 901, 902, 903, 905, 906, 912, 914, 918, 919, 920, 921, 922, 923, 929, 940, 941, 943, 947, 953, 955, 956, 959, 961, 964, 969, 987, 988, 990, 992, 994, 995, 996, 999, 1008, 1018, 1019, 1020, 1023, 1026, 1030, 1036, 1037, 1050, 1052, 1071, 1095, 1101, 1102, 1109, 1110, 1117, 1120, 1128, 1135, 1137, 1153], "choos": [13, 27, 145, 146, 157, 170, 178, 550, 797, 894, 901, 903, 986, 1019, 1026, 1039, 1101, 1108, 1130], "altogeth": [13, 156, 205, 274, 275, 296, 666, 805, 997], "have": [13, 27, 28, 30, 37, 43, 50, 65, 69, 80, 82, 84, 102, 110, 111, 114, 115, 117, 120, 123, 124, 126, 128, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 166, 167, 168, 170, 174, 175, 176, 178, 182, 185, 186, 197, 198, 203, 205, 206, 207, 208, 215, 218, 219, 221, 222, 229, 234, 238, 241, 251, 253, 255, 262, 264, 265, 268, 271, 272, 274, 275, 279, 280, 300, 301, 316, 321, 330, 333, 335, 362, 363, 367, 376, 395, 397, 417, 419, 422, 423, 427, 431, 433, 438, 440, 443, 447, 448, 452, 455, 456, 457, 461, 464, 465, 477, 498, 501, 511, 514, 523, 550, 556, 560, 564, 566, 568, 573, 574, 576, 577, 608, 614, 630, 637, 642, 648, 649, 650, 654, 655, 659, 667, 670, 672, 683, 692, 697, 701, 702, 704, 707, 710, 714, 715, 718, 719, 745, 761, 765, 766, 768, 770, 775, 777, 789, 797, 800, 805, 813, 822, 830, 834, 836, 839, 840, 842, 849, 864, 884, 894, 901, 902, 903, 904, 906, 910, 912, 914, 918, 919, 921, 926, 931, 933, 939, 947, 964, 968, 969, 972, 973, 981, 985, 986, 989, 990, 992, 995, 1003, 1007, 1008, 1012, 1022, 1025, 1026, 1030, 1037, 1044, 1055, 1059, 1069, 1074, 1090, 1095, 1100, 1102, 1103, 1104, 1108, 1111, 1113, 1117, 1120, 1123, 1128, 1130, 1135, 1137, 1150, 1151], "idea": [13, 14, 145, 146, 206, 219, 228, 238, 271, 273, 274, 275, 290, 293, 300, 421, 645, 667, 705, 713, 797, 894, 929, 939, 959, 983, 994, 1018, 1026, 1153], "choosealicens": 13, "appear": [13, 112, 146, 147, 148, 149, 150, 151, 152, 153, 156, 166, 170, 174, 176, 178, 179, 198, 207, 234, 274, 275, 296, 352, 395, 398, 442, 443, 460, 531, 572, 715, 735, 793, 797, 805, 821, 901, 902, 903, 914, 972, 994, 1066, 1067, 1077, 1086, 1112, 1117], "help": [13, 29, 145, 146, 148, 149, 157, 161, 179, 198, 202, 207, 215, 221, 226, 228, 231, 234, 238, 241, 244, 246, 259, 266, 271, 275, 280, 298, 302, 308, 321, 325, 330, 348, 398, 419, 421, 423, 424, 433, 442, 559, 562, 568, 655, 668, 703, 713, 715, 768, 836, 896, 901, 986, 1018, 1021, 1047, 1050, 1120, 1128, 1135, 1150], "happen": [13, 27, 110, 111, 112, 115, 125, 145, 146, 148, 161, 178, 182, 186, 205, 224, 288, 304, 335, 403, 415, 419, 423, 437, 442, 562, 579, 651, 683, 697, 700, 722, 760, 793, 797, 814, 829, 830, 834, 903, 927, 929, 939, 944, 968, 1006, 1007, 1046, 1060, 1063, 1077, 1094, 1100, 1128, 1137, 1150], "clone": [13, 61, 77, 109, 114, 128, 138, 148, 149, 152, 173, 175, 178, 195, 207, 208, 224, 251, 253, 283, 290, 293, 330, 335, 498, 501, 575, 770, 797, 798, 901, 985, 986], "jfasch": [13, 40, 43, 61, 106, 112, 114, 126, 128, 142, 143, 149, 150, 151, 156, 157, 161, 165, 174, 175, 176, 179, 182, 195, 205, 215, 218, 221, 222, 224, 226, 231, 234, 241, 244, 246, 251, 253, 259, 262, 264, 265, 266, 271, 272, 273, 275, 276, 279, 280, 285, 289, 290, 293, 297, 301, 302, 305, 307, 308, 311, 329, 330, 335, 338, 440, 442, 443, 445, 446, 448, 449, 451, 453, 462, 498, 512, 513, 514, 515, 533, 575, 635, 713, 714, 715, 748, 770, 772, 797, 823, 824, 825, 828, 829, 832, 834, 839, 842, 853, 858, 859, 860, 876, 879, 881, 882, 886, 888, 890, 901, 904, 912, 913, 914, 919, 925, 927, 928, 929, 950, 955, 971, 972, 973, 974, 983, 985, 986, 987, 988, 989, 992, 994, 995, 998, 1022, 1041, 1047, 1050, 1073, 1116, 1117, 1128, 1130], "home": [13, 32, 40, 42, 43, 50, 61, 65, 100, 112, 128, 142, 143, 147, 149, 150, 151, 153, 157, 161, 174, 175, 176, 179, 198, 205, 215, 218, 219, 221, 226, 231, 234, 241, 244, 246, 251, 253, 259, 262, 264, 266, 276, 280, 302, 308, 338, 433, 440, 442, 443, 445, 446, 448, 449, 451, 453, 462, 512, 513, 514, 515, 575, 635, 668, 713, 714, 715, 748, 750, 772, 797, 823, 824, 825, 827, 832, 834, 836, 837, 839, 842, 847, 849, 851, 853, 854, 857, 858, 860, 861, 862, 863, 864, 868, 871, 874, 877, 879, 881, 882, 888, 893, 904, 905, 910, 912, 913, 950, 952, 968, 971, 972, 973, 983, 985, 986, 987, 988, 989, 992, 995, 998, 1047, 1073, 1082, 1116, 1117, 1128, 1130], "built": [13, 28, 114, 145, 146, 148, 149, 152, 157, 174, 179, 181, 182, 190, 191, 203, 206, 215, 221, 226, 229, 231, 232, 234, 238, 246, 255, 259, 262, 264, 279, 288, 297, 301, 304, 308, 365, 369, 393, 414, 440, 448, 451, 452, 476, 498, 611, 668, 724, 729, 766, 770, 772, 797, 901, 903, 914, 972, 973, 974, 979, 987, 992, 995, 999, 1015, 1030, 1046, 1095, 1101, 1102, 1119, 1128, 1130, 1131, 1146, 1150, 1158], "wonder": [13, 765, 783, 810, 997], "gener": [13, 23, 24, 29, 39, 65, 68, 69, 78, 80, 81, 109, 110, 111, 139, 143, 146, 150, 153, 158, 165, 168, 178, 182, 183, 185, 186, 187, 188, 197, 205, 213, 214, 215, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 235, 236, 237, 238, 243, 244, 258, 260, 264, 273, 278, 280, 284, 285, 287, 299, 301, 306, 307, 309, 311, 314, 333, 336, 353, 363, 365, 371, 376, 387, 397, 415, 421, 424, 426, 427, 430, 440, 441, 442, 446, 501, 503, 509, 512, 520, 555, 562, 566, 582, 590, 591, 594, 645, 663, 666, 693, 707, 713, 719, 727, 777, 779, 781, 800, 830, 841, 857, 894, 896, 901, 914, 939, 968, 969, 971, 974, 985, 986, 992, 993, 994, 996, 1014, 1020, 1022, 1023, 1024, 1030, 1034, 1051, 1052, 1053, 1054, 1067, 1093, 1095, 1102, 1104, 1105, 1107, 1108, 1117, 1123, 1128, 1151, 1152, 1159], "content": [13, 27, 39, 49, 50, 57, 63, 112, 178, 185, 186, 187, 198, 206, 224, 226, 234, 256, 262, 302, 322, 397, 400, 402, 515, 558, 608, 616, 704, 799, 802, 823, 824, 825, 839, 842, 844, 845, 879, 882, 890, 902, 906, 929, 971, 1026, 1045, 1051, 1064, 1094, 1114, 1130, 1163], "which": [13, 14, 17, 28, 57, 68, 78, 80, 83, 89, 110, 111, 115, 125, 131, 138, 139, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 157, 161, 166, 168, 174, 175, 176, 178, 182, 184, 186, 198, 205, 207, 215, 219, 221, 222, 234, 237, 238, 246, 247, 264, 265, 268, 270, 275, 280, 293, 297, 310, 348, 366, 371, 372, 378, 382, 403, 415, 427, 437, 438, 439, 440, 442, 445, 447, 448, 455, 457, 468, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 512, 527, 538, 544, 557, 564, 566, 570, 572, 580, 627, 637, 641, 642, 648, 649, 651, 660, 666, 667, 705, 709, 710, 718, 719, 731, 738, 746, 748, 750, 766, 775, 797, 799, 817, 823, 830, 834, 836, 839, 840, 841, 842, 848, 850, 853, 857, 870, 881, 884, 893, 894, 897, 901, 902, 903, 914, 923, 924, 927, 929, 931, 932, 934, 939, 944, 951, 953, 955, 956, 964, 969, 972, 977, 985, 989, 992, 994, 996, 1006, 1007, 1011, 1019, 1023, 1026, 1035, 1066, 1085, 1087, 1090, 1092, 1108, 1110, 1111, 1113, 1116, 1130, 1135, 1148], "differ": [13, 35, 38, 59, 62, 69, 76, 81, 85, 88, 133, 145, 146, 151, 153, 157, 167, 174, 178, 182, 194, 218, 219, 262, 264, 270, 271, 273, 280, 298, 310, 316, 351, 363, 371, 376, 377, 393, 394, 397, 415, 421, 423, 427, 437, 439, 456, 457, 501, 512, 514, 533, 540, 541, 550, 559, 560, 564, 570, 572, 573, 582, 586, 591, 630, 633, 637, 659, 672, 675, 702, 717, 730, 734, 748, 770, 775, 789, 795, 797, 817, 822, 828, 832, 833, 835, 854, 879, 894, 897, 901, 903, 910, 921, 929, 931, 944, 953, 955, 956, 976, 981, 986, 988, 989, 994, 1007, 1014, 1022, 1035, 1039, 1044, 1045, 1046, 1104, 1113, 1130, 1131, 1151, 1153], "so": [13, 17, 23, 32, 37, 39, 49, 55, 66, 112, 115, 118, 133, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 190, 191, 196, 204, 206, 207, 208, 217, 218, 219, 248, 262, 270, 272, 276, 288, 300, 304, 316, 325, 330, 333, 348, 362, 366, 367, 375, 377, 393, 403, 404, 406, 415, 419, 421, 423, 424, 428, 438, 440, 443, 445, 450, 451, 455, 477, 479, 498, 514, 527, 566, 573, 577, 590, 613, 620, 629, 636, 645, 694, 704, 709, 712, 713, 715, 730, 756, 758, 761, 766, 770, 772, 775, 797, 810, 822, 836, 837, 839, 841, 847, 849, 851, 857, 861, 868, 894, 900, 901, 902, 903, 906, 908, 910, 918, 921, 924, 929, 931, 939, 957, 959, 968, 971, 972, 973, 974, 985, 987, 988, 997, 998, 1002, 1014, 1019, 1021, 1026, 1043, 1045, 1047, 1049, 1059, 1063, 1069, 1073, 1100, 1103, 1111, 1118, 1121, 1128, 1130, 1134, 1135, 1137, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1152, 1158, 1161, 1166], "ye": [13, 32, 50, 61, 148, 149, 152, 157, 198, 327, 613, 722, 824, 825, 842, 844, 845, 903, 914, 971, 1039, 1072], "realli": [13, 21, 43, 50, 53, 55, 56, 65, 126, 147, 148, 149, 151, 153, 167, 178, 182, 185, 456, 672, 709, 719, 731, 750, 789, 902, 903, 914, 937, 1095, 1102, 1108], "great": [13, 78, 151, 153, 208, 228, 238, 437, 556, 571, 727, 797, 902, 1148, 1153], "static": [13, 23, 65, 97, 103, 104, 110, 111, 114, 146, 148, 150, 152, 153, 163, 173, 207, 208, 215, 221, 224, 231, 234, 238, 262, 271, 273, 280, 330, 336, 399, 405, 409, 412, 414, 416, 423, 425, 427, 429, 434, 435, 440, 445, 446, 450, 452, 461, 475, 483, 495, 496, 497, 498, 499, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 541, 550, 555, 559, 562, 573, 578, 581, 584, 600, 604, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 657, 666, 695, 697, 699, 700, 704, 715, 718, 724, 729, 734, 735, 736, 738, 739, 740, 741, 747, 748, 749, 750, 756, 775, 793, 797, 799, 893, 939, 942, 944, 946, 955, 961, 968, 972, 973, 974, 976, 977, 978, 979, 981, 1106, 1140, 1143, 1145, 1146, 1147], "It": [13, 21, 39, 43, 45, 55, 59, 62, 78, 118, 123, 125, 134, 145, 146, 147, 148, 151, 152, 153, 156, 157, 166, 168, 170, 174, 175, 179, 184, 185, 198, 207, 208, 215, 221, 224, 231, 234, 238, 246, 251, 253, 262, 265, 268, 271, 297, 310, 343, 344, 360, 371, 375, 393, 398, 421, 423, 437, 455, 460, 465, 468, 477, 479, 501, 504, 505, 512, 513, 559, 639, 651, 668, 669, 705, 715, 750, 761, 797, 824, 825, 836, 839, 854, 893, 894, 902, 903, 924, 929, 931, 932, 934, 947, 951, 956, 972, 973, 983, 988, 993, 995, 1006, 1014, 1018, 1019, 1052, 1068, 1073, 1077, 1080, 1086, 1101, 1107, 1119, 1128, 1129, 1148, 1150, 1151, 1153], "let": [13, 17, 42, 59, 62, 63, 115, 117, 146, 147, 148, 151, 152, 153, 156, 161, 168, 169, 170, 175, 176, 208, 222, 226, 228, 234, 238, 265, 268, 270, 272, 275, 290, 293, 301, 419, 427, 437, 439, 441, 448, 451, 455, 457, 459, 464, 477, 483, 500, 511, 512, 514, 517, 533, 547, 557, 558, 570, 574, 576, 577, 627, 633, 639, 645, 655, 672, 700, 704, 709, 713, 766, 770, 789, 797, 805, 832, 841, 854, 859, 894, 901, 902, 914, 927, 929, 930, 944, 953, 955, 971, 973, 983, 986, 987, 993, 995, 999, 1036, 1043, 1045, 1052, 1060, 1082, 1090, 1095, 1102, 1103, 1108, 1111, 1128, 1148], "me": [13, 23, 32, 37, 59, 62, 114, 140, 145, 146, 147, 148, 151, 152, 153, 156, 157, 161, 174, 175, 176, 178, 182, 205, 207, 208, 232, 283, 301, 330, 419, 421, 422, 437, 440, 544, 568, 633, 668, 709, 715, 770, 832, 859, 894, 902, 903, 914, 918, 971, 974, 983, 999, 1002, 1043, 1095, 1099, 1129], "focu": [13, 149, 153, 156, 170, 178, 182, 265, 268, 426, 430, 462, 654, 683, 894, 902, 904, 1019, 1102, 1122, 1151], "myself": [13, 142, 143, 153, 174, 182, 197, 213, 770, 832, 854, 859, 876], "ey": [13, 32, 37, 231, 234, 244, 266, 308, 1030], "toward": [13, 178, 336, 419, 479, 608], "consist": [13, 27, 178, 193, 234, 300, 321, 338, 352, 355, 393, 395, 433, 504, 512, 557, 857, 931, 965, 1019, 1020, 1023, 1064, 1073, 1097, 1118], "won": [13, 125, 156, 157, 234, 264, 316, 350, 417, 442, 511, 513, 559, 709, 715, 765, 777, 902, 914, 921, 974, 996, 1045], "break": [13, 36, 38, 139, 169, 178, 179, 184, 191, 197, 198, 206, 218, 221, 227, 228, 231, 234, 237, 238, 241, 244, 259, 266, 280, 308, 322, 387, 391, 392, 399, 405, 409, 412, 416, 419, 423, 425, 427, 429, 434, 435, 437, 598, 629, 639, 641, 648, 657, 683, 691, 695, 716, 729, 735, 747, 749, 750, 787, 919, 920, 929, 955, 961, 968, 999, 1007, 1045, 1108], "move": [13, 54, 63, 99, 114, 123, 130, 134, 143, 147, 157, 175, 183, 186, 197, 208, 224, 249, 252, 261, 262, 273, 282, 283, 313, 315, 330, 333, 437, 438, 451, 495, 504, 533, 558, 559, 566, 567, 568, 569, 571, 617, 663, 683, 695, 707, 711, 714, 716, 717, 720, 727, 728, 729, 746, 747, 749, 750, 766, 799, 821, 824, 825, 826, 827, 860, 861, 862, 863, 866, 867, 868, 869, 871, 877, 893, 894, 918, 919, 956, 989, 1026, 1124, 1147, 1148, 1149, 1156, 1157], "around": [13, 24, 37, 59, 62, 98, 114, 117, 119, 146, 147, 148, 153, 157, 167, 178, 182, 206, 232, 243, 250, 251, 253, 273, 301, 310, 311, 376, 451, 465, 467, 476, 501, 557, 653, 656, 658, 708, 710, 749, 750, 797, 802, 929, 944, 965, 968, 989, 995, 1011, 1015, 1017, 1039, 1091, 1095, 1097, 1101, 1102, 1113, 1114, 1117], "last": [13, 59, 62, 112, 114, 142, 146, 147, 148, 163, 168, 178, 179, 185, 197, 198, 205, 213, 215, 218, 221, 222, 231, 234, 244, 259, 264, 266, 280, 302, 321, 327, 334, 336, 403, 421, 585, 587, 588, 589, 590, 594, 597, 686, 689, 690, 691, 748, 750, 797, 857, 860, 863, 879, 888, 890, 893, 921, 926, 934, 943, 948, 950, 955, 970, 981, 992, 993, 994, 995, 999, 1003, 1007, 1008, 1014, 1015, 1020, 1028, 1036, 1037, 1041, 1043, 1046, 1047, 1057, 1084, 1090, 1092, 1103, 1108, 1116, 1117, 1129, 1136, 1166], "least": [13, 24, 37, 59, 62, 65, 81, 148, 156, 170, 174, 176, 178, 185, 186, 205, 207, 208, 222, 224, 234, 238, 264, 268, 270, 280, 282, 351, 369, 375, 376, 389, 415, 418, 419, 427, 443, 455, 527, 612, 655, 705, 707, 714, 719, 722, 731, 760, 793, 795, 829, 894, 896, 904, 942, 965, 969, 990, 999, 1003, 1019, 1020, 1030, 1053, 1101, 1136], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 63, 78, 110, 111, 112, 115, 119, 122, 123, 125, 133, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 161, 166, 168, 170, 174, 175, 178, 182, 184, 185, 186, 196, 198, 202, 203, 205, 206, 208, 215, 218, 221, 224, 226, 228, 229, 231, 234, 238, 241, 244, 247, 255, 256, 259, 262, 263, 264, 265, 266, 268, 270, 271, 273, 276, 279, 280, 286, 288, 297, 298, 301, 302, 304, 308, 311, 313, 316, 323, 325, 327, 336, 350, 359, 362, 372, 375, 376, 385, 388, 396, 397, 404, 410, 411, 414, 418, 420, 421, 427, 433, 437, 439, 442, 448, 450, 451, 452, 453, 455, 456, 457, 460, 465, 466, 469, 477, 482, 496, 498, 508, 531, 541, 556, 558, 559, 560, 561, 564, 565, 566, 569, 570, 573, 580, 590, 611, 612, 629, 630, 633, 642, 643, 648, 649, 651, 660, 662, 665, 668, 677, 678, 679, 683, 692, 693, 694, 697, 705, 713, 715, 718, 719, 721, 727, 731, 748, 750, 751, 761, 766, 791, 793, 795, 797, 807, 810, 811, 813, 817, 824, 828, 829, 830, 832, 834, 835, 836, 842, 853, 855, 860, 886, 894, 900, 901, 902, 903, 912, 914, 917, 923, 929, 939, 941, 942, 944, 952, 953, 955, 956, 957, 958, 965, 969, 971, 985, 987, 988, 990, 992, 993, 994, 997, 999, 1002, 1007, 1008, 1009, 1017, 1019, 1022, 1025, 1026, 1030, 1035, 1036, 1040, 1057, 1077, 1092, 1094, 1095, 1101, 1102, 1103, 1104, 1108, 1116, 1117, 1119, 1121, 1128, 1130, 1135, 1137, 1148, 1150, 1151, 1153, 1156, 1157], "extens": [13, 14, 23, 28, 32, 37, 40, 141, 156, 178, 205, 207, 215, 221, 231, 234, 316, 397, 437, 465, 556, 694, 748, 751, 822, 834, 971, 1002, 1019, 1022, 1123, 1128], "interfac": [13, 53, 56, 72, 73, 74, 78, 80, 82, 85, 106, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 142, 143, 146, 163, 165, 166, 173, 182, 208, 222, 224, 236, 254, 255, 262, 271, 289, 301, 305, 319, 320, 330, 331, 332, 336, 339, 348, 349, 437, 443, 444, 449, 454, 455, 456, 457, 460, 461, 467, 475, 479, 481, 482, 503, 507, 509, 533, 555, 580, 628, 630, 652, 694, 701, 702, 718, 719, 734, 735, 749, 750, 893, 894, 899, 901, 903, 937, 971, 993, 1107, 1147, 1152, 1153, 1159, 1162, 1165], "lot": [13, 65, 69, 92, 97, 143, 145, 146, 148, 153, 157, 175, 178, 182, 198, 275, 314, 333, 369, 418, 423, 427, 433, 447, 550, 627, 750, 781, 791, 797, 826, 827, 836, 857, 893, 902, 919, 971, 986, 1014, 1019, 1041, 1097, 1149], "littl": [13, 27, 44, 148, 150, 153, 156, 157, 166, 178, 206, 215, 221, 222, 224, 231, 234, 256, 262, 273, 348, 398, 426, 427, 438, 567, 570, 573, 629, 635, 715, 718, 753, 894, 896, 902, 950, 972, 1042, 1111], "maintain": [13, 28, 30, 54, 70, 80, 143, 145, 146, 153, 175, 184, 205, 207, 215, 219, 221, 231, 234, 243, 330, 344, 423, 437, 605, 655, 666, 775, 797, 805, 807, 809, 940, 971, 972, 973, 975, 981, 986, 987, 988, 989, 1037, 1100, 1150], "packag": [13, 21, 23, 29, 32, 61, 97, 104, 114, 129, 135, 136, 142, 147, 161, 176, 178, 179, 182, 183, 185, 192, 197, 203, 205, 206, 207, 213, 215, 219, 221, 222, 225, 229, 231, 232, 234, 235, 237, 240, 243, 246, 264, 274, 275, 279, 283, 288, 293, 297, 300, 301, 304, 307, 330, 331, 332, 333, 337, 348, 349, 440, 442, 445, 446, 750, 770, 893, 901, 902, 973, 978, 981, 996, 1019, 1026, 1048, 1049, 1051, 1052, 1053, 1054, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1101, 1105, 1109, 1110, 1111, 1116, 1117, 1127, 1128, 1129, 1131, 1132, 1137, 1150], "virtual": [13, 29, 69, 80, 106, 107, 120, 123, 126, 142, 148, 151, 153, 173, 178, 182, 193, 197, 213, 229, 232, 235, 246, 251, 253, 255, 262, 271, 272, 273, 274, 275, 279, 290, 293, 296, 297, 300, 301, 307, 311, 337, 348, 349, 452, 456, 458, 461, 462, 467, 469, 475, 479, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 503, 513, 553, 555, 580, 627, 628, 629, 652, 694, 702, 713, 715, 719, 749, 750, 756, 828, 833, 836, 895, 901, 903, 912, 921, 937, 955, 965, 1019, 1022, 1048, 1049, 1050, 1093, 1095, 1096, 1097, 1101, 1109, 1111, 1122, 1125, 1128, 1147, 1154, 1163], "environ": [13, 21, 29, 65, 75, 78, 97, 104, 114, 134, 142, 146, 157, 161, 182, 188, 197, 198, 203, 213, 216, 219, 229, 232, 235, 246, 252, 255, 261, 274, 275, 279, 282, 283, 290, 293, 296, 297, 300, 301, 307, 331, 332, 343, 344, 462, 482, 496, 511, 512, 513, 514, 575, 713, 714, 750, 827, 831, 835, 836, 857, 858, 877, 893, 894, 934, 951, 956, 972, 981, 982, 983, 988, 990, 1002, 1022, 1024, 1048, 1049, 1050, 1093, 1095, 1096, 1097, 1101, 1102, 1109, 1111, 1122, 1123, 1125, 1128, 1129, 1135, 1139, 1141], "repo": [13, 112, 128, 157, 161, 173, 176, 187, 316, 321, 330, 334, 335, 523, 524, 525, 526, 528, 529, 530, 770, 797, 799, 985, 1137], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 61, 62, 63, 77, 99, 101, 102, 109, 114, 117, 129, 132, 139, 142, 146, 147, 148, 150, 153, 156, 157, 161, 163, 165, 166, 167, 182, 183, 184, 185, 186, 187, 198, 203, 211, 216, 221, 222, 224, 229, 231, 234, 238, 243, 246, 251, 252, 253, 261, 262, 270, 273, 274, 275, 279, 280, 282, 283, 285, 290, 293, 297, 300, 301, 330, 335, 354, 431, 433, 439, 440, 453, 455, 457, 460, 461, 462, 475, 476, 477, 481, 483, 484, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 555, 557, 560, 571, 611, 613, 629, 644, 647, 649, 658, 660, 683, 697, 700, 709, 715, 716, 728, 729, 735, 745, 746, 748, 749, 750, 753, 756, 760, 761, 766, 768, 770, 772, 775, 781, 793, 797, 826, 827, 828, 829, 830, 831, 837, 839, 840, 844, 845, 846, 848, 850, 852, 855, 861, 862, 864, 866, 867, 868, 869, 871, 877, 893, 901, 902, 903, 905, 906, 907, 909, 910, 912, 914, 916, 922, 923, 924, 931, 932, 933, 934, 939, 940, 941, 947, 948, 951, 954, 955, 956, 963, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 986, 987, 992, 993, 995, 997, 999, 1003, 1007, 1008, 1009, 1011, 1025, 1026, 1035, 1036, 1037, 1046, 1049, 1050, 1051, 1063, 1071, 1072, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1095, 1097, 1098, 1099, 1101, 1104, 1107, 1111, 1120, 1128, 1130, 1131, 1150], "popul": [13, 148, 152, 238, 271, 753], "yourself": [13, 146, 153, 157, 168, 224, 382, 558, 575, 580, 802, 859, 942, 965, 1018, 1153], "root": [13, 38, 63, 80, 114, 128, 145, 151, 153, 156, 157, 168, 173, 174, 175, 182, 186, 196, 218, 224, 234, 238, 241, 244, 259, 262, 266, 276, 280, 302, 308, 315, 316, 321, 350, 417, 426, 430, 433, 442, 450, 456, 514, 576, 632, 748, 761, 797, 798, 799, 828, 832, 834, 853, 857, 869, 870, 876, 879, 881, 882, 883, 885, 886, 888, 894, 901, 902, 903, 905, 906, 910, 919, 924, 929, 937, 957, 971, 974, 983, 985, 994, 1073, 1082, 1083, 1120, 1128], "activ": [13, 151, 161, 163, 186, 246, 655, 777, 779, 783, 791, 832, 834, 889, 1049, 1128, 1130], "txt": [13, 33, 42, 44, 112, 114, 117, 126, 141, 148, 164, 165, 169, 172, 173, 174, 175, 176, 205, 207, 212, 215, 224, 225, 234, 246, 256, 290, 293, 321, 322, 362, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 498, 511, 512, 513, 514, 515, 534, 537, 540, 541, 543, 546, 549, 552, 646, 748, 768, 823, 824, 825, 837, 841, 851, 861, 862, 863, 864, 868, 869, 876, 897, 901, 902, 903, 937, 960, 963, 967, 972, 973, 983, 994, 1041, 1064, 1082, 1130, 1131, 1134, 1137, 1139], "fedorish": [13, 770, 914, 1111], "your": [13, 43, 65, 102, 109, 114, 125, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 161, 162, 175, 178, 181, 182, 186, 198, 206, 207, 224, 232, 238, 251, 253, 255, 262, 265, 268, 310, 316, 327, 336, 338, 382, 417, 425, 427, 429, 434, 435, 437, 446, 456, 460, 481, 498, 501, 512, 514, 515, 572, 646, 647, 649, 650, 657, 663, 671, 695, 747, 749, 750, 772, 789, 797, 802, 823, 824, 825, 827, 834, 836, 837, 846, 847, 848, 849, 850, 851, 852, 858, 861, 862, 863, 864, 866, 875, 893, 894, 901, 903, 905, 906, 910, 914, 929, 931, 983, 986, 997, 1008, 1014, 1019, 1023, 1064, 1078, 1082, 1083, 1095, 1100, 1111, 1121, 1123, 1128, 1129, 1130, 1137, 1153], "mileag": [13, 251, 253, 1111, 1128], "might": [13, 27, 59, 61, 62, 112, 118, 122, 125, 145, 146, 147, 149, 151, 153, 156, 157, 161, 174, 176, 178, 186, 207, 215, 221, 226, 231, 234, 265, 268, 271, 297, 316, 341, 413, 427, 437, 442, 451, 452, 457, 460, 481, 514, 564, 573, 692, 702, 715, 716, 717, 748, 772, 783, 787, 793, 797, 839, 894, 901, 902, 903, 914, 919, 928, 950, 957, 968, 983, 986, 994, 1003, 1006, 1019, 1097, 1111, 1128, 1131, 1135], "vari": [13, 215, 221, 231, 234, 238, 251, 253, 274, 275, 296, 300, 353, 427, 611, 730, 797, 903, 988, 1107, 1111, 1128, 1148], "dnf": [13, 61, 119, 142, 149, 157, 161, 175, 350, 443, 450, 527, 770, 798, 896, 914, 973, 985, 1111, 1135, 1137], "pandoc": 13, "graphviz": [13, 446, 973], "dia": [13, 218, 276, 879, 1052], "gtest": [13, 44, 65, 114, 173, 174, 175, 176, 350, 455, 456, 457, 459, 460, 462, 464, 477, 479, 480, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 550, 557, 558, 559, 570, 571, 573, 574, 575, 576, 577, 635, 660, 662, 665, 666, 667, 698, 704, 709, 713, 714, 715, 716, 718, 731, 744, 745, 746, 748, 750, 1133], "devel": [13, 119, 142, 157, 175, 443, 445, 450, 770, 1135, 1137], "markdown": [13, 23, 325, 1050], "handl": [13, 21, 29, 46, 74, 117, 140, 146, 166, 178, 182, 183, 185, 187, 193, 206, 208, 213, 215, 219, 222, 223, 231, 236, 243, 255, 262, 272, 279, 280, 290, 293, 301, 306, 314, 330, 335, 337, 343, 344, 351, 391, 398, 403, 419, 423, 443, 503, 533, 555, 570, 580, 613, 617, 639, 648, 649, 650, 683, 685, 712, 715, 727, 728, 749, 750, 756, 760, 779, 791, 827, 830, 831, 893, 901, 916, 918, 919, 920, 921, 922, 923, 924, 926, 929, 931, 932, 934, 942, 948, 951, 954, 956, 959, 965, 968, 996, 1014, 1019, 1020, 1035, 1045, 1093, 1095, 1147, 1153, 1162], "jupyt": [13, 161, 166, 167, 169, 178, 179, 181, 189, 229, 231, 232, 234, 235, 264, 265, 268, 269, 275, 279, 285, 290, 293, 297, 301, 307, 330, 335, 879, 1019, 1097, 1098, 1102, 1158], "notebook": [13, 32, 161, 165, 166, 167, 169, 178, 181, 189, 222, 229, 232, 234, 235, 237, 240, 243, 246, 255, 258, 264, 265, 268, 269, 275, 279, 285, 290, 293, 297, 301, 307, 308, 315, 335, 1019, 1097, 1102, 1158], "those": [13, 24, 78, 112, 120, 139, 146, 147, 153, 156, 161, 176, 178, 182, 187, 205, 207, 208, 215, 219, 224, 225, 226, 228, 234, 238, 270, 271, 272, 273, 275, 290, 315, 327, 330, 336, 341, 362, 417, 427, 437, 439, 441, 442, 443, 456, 457, 460, 461, 527, 570, 592, 633, 636, 643, 658, 693, 709, 717, 719, 748, 763, 766, 797, 824, 825, 841, 842, 894, 901, 902, 903, 968, 987, 988, 989, 990, 994, 995, 996, 1002, 1007, 1018, 1059, 1069, 1090, 1100, 1108, 1109, 1114, 1116, 1128, 1150, 1151, 1153], "funki": [13, 17, 148], "graph": [13, 29, 78, 87, 126, 216, 229, 243, 246, 279, 285, 330, 337, 432, 446, 452, 973, 987, 988, 1095, 1101], "histor": [13, 24, 78, 148, 170, 363, 376, 421, 654, 756, 835, 914, 969, 1086, 1140], "baggag": [13, 363, 376, 654, 969, 1086], "convert": [13, 17, 29, 42, 139, 167, 197, 205, 211, 215, 218, 221, 224, 228, 231, 234, 235, 238, 255, 280, 290, 293, 308, 315, 376, 398, 423, 433, 441, 446, 456, 511, 626, 633, 667, 668, 750, 751, 931, 971, 1010, 1052, 1054, 1059, 1066, 1069, 1088, 1089, 1090, 1093, 1108], "draw": [13, 143, 186, 297, 338, 373, 509, 707, 754, 758, 766, 787, 810], "svg": [13, 143], "ani": [13, 39, 45, 49, 126, 130, 139, 142, 145, 146, 147, 148, 151, 153, 157, 161, 166, 170, 181, 184, 186, 198, 205, 207, 215, 221, 231, 234, 238, 249, 250, 251, 259, 275, 280, 297, 310, 316, 337, 338, 371, 415, 423, 437, 460, 465, 507, 508, 509, 510, 514, 515, 527, 544, 562, 565, 591, 629, 637, 642, 655, 658, 660, 677, 683, 701, 702, 705, 714, 715, 716, 718, 719, 727, 748, 755, 756, 768, 770, 789, 797, 807, 814, 824, 825, 834, 837, 844, 845, 848, 849, 850, 857, 869, 879, 894, 901, 902, 903, 906, 929, 940, 944, 964, 990, 992, 993, 994, 995, 999, 1006, 1007, 1014, 1017, 1026, 1031, 1033, 1044, 1045, 1050, 1074, 1076, 1091, 1102, 1118, 1122, 1123, 1135, 1148, 1153], "That": [13, 84, 98, 99, 112, 114, 115, 117, 120, 145, 146, 147, 148, 151, 156, 157, 161, 170, 178, 182, 185, 224, 248, 252, 254, 268, 271, 273, 341, 405, 406, 409, 412, 416, 425, 429, 434, 435, 443, 456, 457, 467, 479, 481, 483, 499, 501, 514, 561, 565, 647, 657, 695, 721, 727, 728, 747, 749, 750, 824, 825, 827, 828, 830, 831, 833, 834, 843, 846, 847, 848, 849, 850, 851, 852, 857, 893, 894, 902, 905, 906, 907, 908, 909, 912, 930, 934, 948, 954, 956, 981, 982, 993, 1019, 1026, 1085, 1087, 1092, 1121, 1128, 1138, 1148], "sloppili": [13, 927], "track": [13, 112, 149, 153, 161, 185, 205, 215, 221, 231, 234, 714, 770, 797, 798, 802, 834, 1006], "opentrain": [13, 22, 28, 130, 143, 183, 190, 208, 338, 349, 1128, 1158], "recip": [13, 39, 138, 142, 146, 147, 331, 332, 417, 582], "sphinx": [14, 17, 23, 39, 65, 142, 143, 158, 336, 751, 1128], "togeth": [14, 24, 43, 50, 104, 106, 110, 111, 117, 120, 136, 153, 156, 157, 161, 166, 176, 178, 182, 186, 198, 207, 224, 251, 253, 270, 271, 273, 288, 297, 300, 304, 338, 348, 394, 427, 428, 504, 514, 533, 555, 573, 574, 576, 577, 727, 729, 761, 774, 797, 824, 825, 883, 884, 902, 903, 933, 947, 971, 977, 981, 983, 986, 990, 1068, 1101, 1121, 1123, 1131, 1133, 1135, 1148, 1150], "form": [14, 29, 148, 153, 166, 170, 194, 215, 221, 222, 231, 234, 271, 273, 349, 414, 430, 469, 477, 479, 518, 519, 531, 629, 751, 797, 802, 805, 829, 879, 903, 1030, 1049, 1052, 1085, 1087, 1090, 1091, 1097, 1103, 1123, 1128, 1148], "short": [14, 32, 35, 43, 106, 126, 146, 153, 161, 174, 178, 182, 185, 186, 187, 197, 198, 215, 219, 220, 221, 226, 229, 231, 232, 236, 254, 270, 271, 272, 273, 274, 275, 353, 369, 371, 376, 380, 381, 406, 415, 461, 475, 503, 515, 555, 560, 564, 750, 793, 799, 802, 836, 857, 882, 901, 903, 914, 921, 931, 953, 958, 991, 1005, 1028, 1031, 1047, 1119, 1128, 1130, 1148], "video": [14, 22, 140, 149, 151, 153, 164, 178, 181, 182, 185, 190, 203, 206, 207, 229, 273, 276, 279, 438, 705, 894, 902, 1095, 1102, 1111], "explain": [14, 63, 65, 97, 117, 126, 140, 145, 151, 157, 170, 178, 182, 184, 208, 219, 224, 226, 228, 229, 237, 238, 275, 315, 345, 348, 417, 427, 547, 837, 857, 860, 894, 903, 959, 1042, 1095, 1128, 1153], "case": [14, 24, 43, 97, 104, 106, 109, 112, 116, 118, 145, 146, 147, 150, 153, 156, 157, 161, 167, 170, 182, 184, 186, 188, 208, 221, 222, 228, 234, 238, 241, 250, 251, 253, 254, 262, 265, 268, 280, 297, 300, 310, 338, 360, 367, 386, 388, 419, 421, 439, 442, 445, 454, 461, 465, 468, 503, 511, 512, 514, 520, 522, 541, 555, 562, 572, 611, 617, 637, 649, 655, 672, 683, 695, 702, 705, 713, 727, 736, 738, 748, 749, 750, 770, 797, 810, 813, 825, 829, 832, 839, 853, 869, 886, 893, 894, 903, 913, 914, 920, 931, 950, 955, 969, 976, 978, 981, 983, 985, 987, 994, 995, 1025, 1026, 1037, 1041, 1064, 1103, 1119, 1128, 1136, 1151], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 90, 129, 190, 203, 206, 213, 216, 217, 219, 225, 227, 229, 230, 235, 236, 237, 240, 243, 245, 253, 258, 260, 264, 265, 268, 278, 279, 281, 284, 287, 301, 306, 309, 311, 314, 316, 317, 318, 319, 320, 321, 330, 338, 349, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750, 751, 893, 923, 924, 929, 932, 934, 948, 951, 996, 1018, 1048, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1101, 1102, 1108, 1111, 1115, 1122, 1125, 1132, 1147, 1148, 1149, 1158], "s5": [16, 23, 142, 965, 969, 1162], "slide": [16, 23, 24, 27, 37, 142, 143, 146, 164, 171, 173, 178, 182, 186, 187, 188, 197, 198, 207, 208, 224, 250, 251, 262, 341, 344, 349, 550, 809, 966, 970, 1067, 1108, 1144, 1145, 1146, 1154, 1155, 1161, 1162, 1164, 1165, 1166], "work": [16, 24, 27, 40, 42, 43, 44, 57, 61, 71, 78, 80, 98, 99, 104, 106, 109, 115, 116, 125, 126, 128, 131, 132, 142, 143, 145, 146, 147, 149, 151, 152, 153, 156, 157, 161, 170, 174, 175, 176, 185, 186, 188, 198, 203, 205, 207, 215, 216, 219, 221, 222, 224, 229, 231, 234, 238, 243, 252, 255, 261, 262, 264, 265, 268, 275, 276, 279, 280, 282, 283, 285, 316, 330, 335, 336, 338, 343, 344, 349, 350, 394, 395, 415, 417, 427, 437, 439, 440, 442, 443, 445, 446, 448, 449, 451, 453, 456, 457, 460, 461, 462, 475, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 550, 555, 575, 604, 611, 644, 646, 648, 656, 658, 660, 703, 709, 713, 714, 715, 719, 721, 728, 746, 749, 750, 751, 760, 765, 775, 777, 781, 795, 797, 802, 805, 819, 823, 824, 825, 826, 827, 830, 831, 832, 834, 836, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 879, 881, 890, 893, 894, 902, 906, 910, 914, 916, 921, 922, 924, 927, 930, 932, 934, 939, 948, 951, 953, 954, 956, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 986, 988, 994, 995, 998, 1017, 1020, 1021, 1022, 1041, 1047, 1049, 1050, 1072, 1082, 1083, 1095, 1102, 1111, 1113, 1114, 1116, 1117, 1119, 1128, 1137, 1148, 1153, 1154, 1160], "progress": [16, 142, 349, 751, 859, 1137], "web": [16, 23, 72, 74, 78, 129, 143, 153, 182, 185, 206, 209, 255, 279, 301, 750, 1095, 1102, 1108, 1111], "note": [16, 32, 36, 40, 44, 60, 63, 112, 114, 123, 125, 129, 131, 145, 146, 148, 153, 166, 167, 178, 197, 205, 207, 218, 219, 221, 246, 275, 280, 297, 300, 301, 321, 322, 439, 443, 445, 449, 479, 527, 550, 559, 560, 566, 571, 630, 672, 692, 693, 694, 705, 707, 713, 714, 715, 717, 756, 797, 814, 824, 825, 884, 902, 920, 931, 983, 1036, 1039, 1041, 1045, 1100, 1111, 1113, 1116, 1135], "screencast": [16, 23, 129, 1095], "written": [16, 42, 43, 78, 106, 115, 119, 145, 146, 151, 161, 184, 234, 332, 394, 397, 413, 421, 423, 427, 440, 477, 567, 633, 646, 666, 751, 836, 923, 930, 965, 972, 973, 981, 1013, 1020, 1050, 1150], "draft": [16, 29, 178, 749, 750, 893, 1047, 1093, 1094, 1109], "convers": [17, 185, 197, 204, 207, 208, 215, 220, 221, 224, 227, 230, 231, 236, 239, 242, 260, 271, 273, 277, 281, 287, 299, 303, 307, 309, 330, 354, 369, 383, 392, 399, 405, 409, 412, 416, 423, 425, 429, 434, 435, 439, 476, 538, 626, 630, 654, 656, 657, 659, 695, 747, 749, 750, 800, 1045, 1062, 1066, 1069, 1080], "old": [17, 29, 118, 143, 146, 148, 151, 176, 186, 218, 219, 234, 266, 276, 280, 305, 349, 372, 411, 432, 437, 460, 533, 586, 593, 598, 613, 645, 651, 654, 659, 660, 701, 719, 730, 754, 760, 770, 789, 894, 902, 958, 1034, 1040, 1052, 1073, 1119, 1149], "latex": [17, 23, 24, 533], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 61, 78, 102, 112, 118, 129, 145, 146, 148, 150, 161, 170, 174, 178, 193, 205, 215, 221, 231, 234, 235, 238, 242, 250, 251, 253, 255, 275, 290, 293, 297, 363, 366, 421, 433, 457, 502, 515, 611, 625, 636, 652, 654, 695, 711, 745, 749, 750, 770, 774, 785, 797, 826, 832, 893, 894, 901, 902, 907, 909, 922, 931, 987, 996, 1010, 1054, 1060, 1083, 1088, 1089, 1090, 1093, 1101, 1108], "put": [17, 58, 69, 80, 120, 123, 139, 145, 146, 147, 174, 182, 297, 300, 439, 443, 447, 448, 511, 555, 641, 665, 701, 727, 766, 774, 787, 789, 814, 894, 902, 931, 956, 971, 986, 989, 994, 1052, 1133], "more": [17, 21, 27, 29, 43, 45, 59, 62, 65, 69, 78, 82, 90, 97, 101, 106, 114, 115, 117, 119, 126, 139, 143, 146, 147, 150, 151, 153, 156, 157, 159, 161, 167, 168, 170, 175, 178, 182, 183, 184, 185, 186, 187, 188, 190, 192, 197, 198, 203, 205, 206, 207, 208, 209, 213, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 232, 235, 236, 237, 239, 240, 242, 246, 250, 251, 252, 253, 257, 260, 261, 271, 272, 273, 280, 282, 283, 287, 289, 297, 301, 305, 309, 310, 311, 316, 317, 318, 319, 320, 321, 333, 335, 341, 348, 349, 360, 365, 369, 372, 376, 386, 387, 388, 397, 399, 405, 406, 409, 412, 416, 417, 422, 423, 425, 427, 429, 431, 432, 433, 434, 435, 439, 442, 444, 445, 448, 461, 468, 475, 477, 481, 482, 493, 498, 503, 511, 513, 533, 550, 555, 559, 563, 612, 626, 627, 628, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 654, 657, 664, 665, 676, 683, 692, 695, 696, 704, 705, 707, 709, 711, 712, 714, 715, 718, 720, 728, 729, 735, 747, 748, 749, 750, 753, 756, 768, 770, 775, 781, 783, 785, 789, 791, 793, 797, 823, 828, 833, 857, 860, 890, 894, 896, 900, 901, 902, 903, 914, 920, 923, 926, 929, 940, 942, 953, 957, 959, 965, 969, 971, 972, 973, 981, 983, 987, 988, 989, 995, 997, 999, 1003, 1004, 1005, 1006, 1010, 1013, 1014, 1018, 1019, 1021, 1025, 1026, 1037, 1048, 1051, 1052, 1053, 1054, 1064, 1066, 1067, 1073, 1075, 1076, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1114, 1118, 1122, 1123, 1125, 1127, 1129, 1130, 1132, 1137, 1141, 1148, 1150, 1151, 1158], "precis": [17, 178, 182, 238, 255, 279, 301, 308, 353, 371, 635, 730, 797, 1040, 1095], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 751], "turn": [17, 75, 110, 111, 146, 148, 151, 156, 157, 178, 182, 198, 207, 224, 270, 330, 427, 442, 443, 479, 504, 505, 662, 677, 853, 894, 901, 902, 903, 971, 973, 977, 987, 995, 1000, 1001, 1011, 1013, 1121], "rst2s5": 17, "tool": [17, 32, 61, 68, 114, 153, 157, 162, 178, 186, 188, 198, 208, 234, 252, 261, 276, 281, 282, 299, 330, 333, 335, 348, 349, 350, 395, 430, 432, 433, 437, 629, 683, 701, 750, 821, 827, 828, 841, 893, 903, 914, 917, 972, 973, 981, 985, 1019, 1020, 1023, 1050, 1114, 1122, 1146, 1148, 1150, 1152, 1159], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 61, 62, 63, 65, 69, 77, 78, 84, 85, 89, 90, 97, 104, 106, 109, 110, 111, 112, 114, 120, 126, 129, 136, 140, 143, 145, 146, 147, 149, 150, 151, 152, 161, 163, 165, 166, 168, 170, 172, 173, 174, 175, 178, 182, 183, 184, 185, 186, 187, 188, 198, 205, 207, 208, 215, 218, 219, 221, 224, 226, 228, 229, 231, 234, 237, 238, 244, 247, 251, 253, 255, 262, 270, 271, 273, 275, 280, 290, 293, 297, 298, 300, 308, 311, 313, 316, 321, 330, 333, 336, 348, 349, 351, 355, 362, 363, 376, 385, 386, 410, 414, 415, 417, 418, 419, 421, 426, 427, 437, 441, 442, 447, 448, 449, 453, 459, 467, 468, 479, 481, 483, 501, 503, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 531, 532, 533, 534, 537, 540, 541, 543, 544, 546, 547, 549, 550, 552, 555, 557, 558, 559, 561, 562, 565, 567, 568, 570, 573, 578, 581, 584, 586, 588, 589, 592, 600, 604, 606, 610, 612, 617, 619, 620, 622, 623, 627, 630, 633, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 655, 664, 665, 666, 677, 683, 685, 686, 689, 690, 691, 692, 693, 694, 695, 700, 703, 705, 707, 708, 711, 713, 715, 717, 718, 719, 720, 727, 728, 729, 730, 734, 735, 747, 748, 749, 750, 751, 756, 761, 766, 770, 772, 779, 793, 797, 802, 809, 817, 824, 825, 828, 829, 836, 839, 841, 842, 851, 853, 854, 857, 862, 864, 894, 899, 900, 901, 902, 903, 906, 913, 914, 920, 927, 928, 929, 930, 931, 935, 938, 947, 950, 959, 960, 963, 964, 967, 969, 972, 973, 975, 981, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 996, 999, 1001, 1003, 1005, 1007, 1014, 1017, 1018, 1019, 1021, 1023, 1030, 1033, 1035, 1036, 1037, 1040, 1041, 1043, 1045, 1046, 1047, 1051, 1067, 1082, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1120, 1122, 1123, 1128, 1130, 1133, 1134, 1135, 1137, 1139, 1140, 1148, 1150, 1151, 1153, 1156, 1157, 1163], "sens": [17, 78, 148, 150, 167, 170, 175, 178, 197, 452, 460, 477, 562, 573, 580, 627, 655, 668, 758, 797, 836, 903, 927, 950, 957, 964, 1014, 1044, 1100, 1151], "entir": [17, 24, 30, 80, 110, 111, 139, 143, 146, 147, 148, 151, 157, 161, 170, 175, 182, 185, 203, 206, 207, 215, 229, 232, 235, 238, 250, 251, 253, 255, 265, 272, 275, 279, 285, 290, 293, 297, 301, 307, 367, 396, 400, 407, 410, 415, 423, 431, 439, 457, 663, 694, 714, 797, 824, 825, 830, 854, 859, 868, 876, 894, 901, 903, 906, 912, 929, 940, 973, 1002, 1006, 1020, 1025, 1026, 1043, 1045, 1064, 1095, 1128, 1131, 1134, 1151], "site": [17, 23, 27, 39, 61, 65, 129, 142, 143, 146, 158, 161, 173, 174, 175, 179, 205, 215, 221, 231, 234, 297, 572, 718, 836, 1099, 1116, 1117, 1123, 1130, 1137], "massag": [17, 32, 136, 157, 175, 251, 253, 751, 901, 973], "itself": [17, 27, 117, 119, 126, 146, 148, 174, 178, 184, 215, 221, 231, 234, 280, 308, 319, 365, 397, 433, 442, 448, 476, 477, 499, 514, 560, 567, 626, 703, 718, 727, 730, 772, 775, 797, 817, 823, 824, 825, 839, 857, 886, 956, 969, 983, 1011, 1014, 1019, 1040, 1080, 1121, 1137], "upon": [17, 27, 69, 97, 148, 149, 178, 182, 186, 193, 232, 264, 271, 290, 293, 310, 419, 437, 465, 517, 533, 572, 590, 713, 730, 770, 903, 969, 1057, 1121, 1128, 1148], "you": [17, 21, 43, 58, 59, 62, 109, 112, 114, 115, 117, 118, 119, 122, 123, 125, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 162, 166, 167, 168, 170, 174, 175, 178, 182, 184, 185, 186, 198, 203, 205, 206, 207, 208, 215, 218, 221, 222, 224, 228, 229, 231, 232, 234, 238, 246, 255, 262, 265, 268, 271, 273, 275, 279, 301, 310, 316, 321, 327, 330, 333, 335, 338, 361, 362, 375, 391, 417, 421, 437, 479, 498, 499, 500, 501, 505, 508, 511, 512, 514, 547, 558, 559, 565, 570, 573, 574, 576, 577, 591, 612, 620, 627, 633, 641, 642, 646, 663, 669, 697, 707, 718, 745, 746, 748, 770, 772, 789, 797, 802, 823, 824, 825, 828, 829, 832, 836, 837, 843, 847, 849, 851, 857, 858, 859, 861, 862, 863, 864, 868, 869, 894, 897, 901, 902, 903, 904, 905, 906, 908, 910, 913, 914, 918, 920, 924, 929, 931, 939, 940, 941, 942, 943, 947, 971, 972, 973, 974, 976, 979, 983, 986, 987, 990, 995, 996, 1005, 1007, 1018, 1019, 1023, 1026, 1039, 1045, 1052, 1061, 1063, 1078, 1082, 1083, 1092, 1095, 1101, 1108, 1111, 1117, 1128, 1129, 1130, 1137, 1140, 1148, 1153], "view": [17, 63, 151, 152, 156, 167, 169, 182, 184, 250, 251, 255, 262, 310, 311, 348, 365, 367, 430, 657, 695, 704, 706, 749, 750, 824, 825, 834, 841, 894, 903, 905, 1026, 1094, 1148, 1151, 1153], "state": [17, 45, 114, 117, 142, 153, 158, 178, 186, 208, 215, 218, 221, 231, 232, 234, 370, 387, 419, 437, 504, 505, 509, 510, 557, 663, 697, 727, 755, 793, 814, 828, 886, 896, 940, 944, 955, 956, 993, 999], "rather": [17, 65, 85, 123, 125, 126, 146, 148, 149, 150, 151, 152, 153, 156, 157, 161, 170, 174, 178, 182, 198, 207, 225, 226, 300, 316, 341, 353, 395, 427, 428, 437, 455, 506, 507, 508, 509, 510, 515, 550, 557, 559, 573, 580, 591, 611, 636, 642, 656, 677, 727, 729, 770, 797, 802, 834, 836, 882, 894, 901, 902, 903, 905, 912, 917, 940, 941, 968, 972, 987, 1012, 1019, 1022, 1030, 1070, 1071, 1074, 1085, 1087, 1102, 1109, 1130, 1135, 1148, 1150], "huge": [17, 152, 157, 167, 468, 704, 775, 793, 1018, 1020, 1124], "tabl": [17, 39, 63, 65, 126, 139, 143, 145, 178, 184, 185, 202, 210, 215, 221, 222, 224, 225, 228, 229, 231, 234, 241, 246, 280, 349, 353, 368, 382, 383, 387, 388, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 635, 657, 695, 704, 747, 749, 750, 836, 1043, 1052, 1084, 1086, 1107, 1108], "isnot": 17, "big": [17, 104, 143, 146, 147, 153, 178, 182, 202, 208, 222, 229, 232, 275, 301, 330, 376, 421, 433, 512, 562, 592, 655, 719, 917, 1095, 1107, 1163], "fat": [17, 143, 145, 149, 153, 222, 649, 719, 828, 1107], "sai": [17, 24, 65, 66, 106, 120, 126, 134, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 161, 166, 167, 178, 182, 219, 224, 246, 265, 268, 272, 274, 275, 296, 297, 316, 330, 421, 427, 433, 443, 453, 457, 466, 477, 483, 498, 500, 512, 541, 550, 559, 569, 617, 630, 642, 651, 655, 683, 687, 689, 690, 691, 693, 698, 705, 708, 709, 714, 756, 770, 797, 836, 839, 841, 876, 894, 901, 903, 914, 918, 929, 931, 941, 953, 964, 968, 974, 983, 986, 987, 993, 997, 1019, 1035, 1047, 1052, 1082, 1103, 1137, 1151], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 68, 78, 80, 85, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 123, 125, 130, 133, 138, 139, 142, 143, 145, 146, 147, 148, 151, 152, 157, 161, 165, 168, 170, 172, 173, 174, 175, 177, 178, 180, 182, 183, 185, 186, 187, 188, 193, 195, 196, 197, 198, 203, 206, 207, 208, 211, 212, 213, 216, 217, 219, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 235, 236, 237, 238, 240, 242, 245, 246, 250, 251, 252, 255, 259, 261, 264, 265, 267, 268, 274, 275, 277, 281, 282, 286, 288, 289, 296, 297, 300, 301, 303, 304, 305, 309, 315, 316, 317, 318, 319, 320, 327, 330, 331, 332, 333, 334, 335, 341, 343, 344, 348, 359, 362, 363, 393, 394, 396, 397, 398, 399, 405, 409, 412, 416, 420, 425, 429, 431, 433, 434, 435, 438, 440, 442, 444, 445, 446, 451, 452, 455, 461, 475, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 534, 537, 540, 542, 543, 546, 549, 552, 555, 560, 562, 574, 575, 576, 577, 583, 635, 639, 646, 649, 657, 672, 695, 701, 705, 715, 728, 747, 748, 749, 750, 753, 758, 759, 763, 764, 766, 767, 774, 775, 778, 788, 793, 799, 801, 804, 806, 812, 813, 815, 818, 821, 822, 823, 826, 827, 829, 830, 831, 833, 834, 836, 837, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 853, 855, 856, 857, 861, 865, 866, 867, 868, 869, 871, 874, 877, 882, 885, 890, 893, 894, 897, 901, 902, 903, 904, 906, 907, 909, 910, 916, 917, 920, 921, 922, 931, 934, 935, 938, 939, 945, 948, 951, 954, 956, 960, 962, 963, 964, 967, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 987, 988, 989, 994, 995, 996, 999, 1002, 1007, 1010, 1013, 1018, 1022, 1024, 1026, 1037, 1043, 1046, 1047, 1053, 1054, 1064, 1067, 1078, 1079, 1082, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1100, 1108, 1109, 1120, 1123, 1128, 1129, 1130, 1131, 1134, 1136, 1139, 1145, 1150, 1152, 1153, 1154, 1161, 1162, 1163, 1165], "rst": [17, 23, 32, 34, 35, 36, 38, 114, 130, 142, 165, 172, 177, 180, 186, 234, 244, 308, 338, 534, 537, 540, 543, 546, 549, 552, 960, 963, 967, 1134, 1139], "render": [17, 40, 151], "dure": [17, 27, 45, 46, 104, 106, 136, 145, 146, 147, 148, 152, 153, 157, 161, 166, 178, 182, 234, 333, 396, 400, 401, 415, 427, 432, 476, 483, 509, 512, 593, 611, 668, 707, 793, 797, 802, 829, 835, 901, 903, 912, 973, 987, 988, 1007, 1020, 1022, 1037, 1121, 1128], "regular": [17, 146, 170, 181, 195, 211, 218, 219, 226, 245, 246, 248, 250, 251, 260, 279, 280, 309, 355, 421, 439, 570, 572, 704, 748, 785, 797, 842, 876, 879, 881, 890, 903, 914, 964, 965, 1007, 1037, 1039, 1095], "process": [17, 28, 61, 63, 65, 73, 78, 80, 97, 99, 110, 111, 114, 151, 156, 163, 170, 176, 178, 185, 186, 188, 222, 252, 261, 274, 275, 282, 296, 332, 333, 340, 345, 398, 404, 433, 442, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 722, 728, 748, 749, 750, 759, 764, 767, 769, 774, 778, 780, 783, 784, 787, 788, 789, 790, 792, 794, 797, 801, 802, 803, 806, 808, 811, 812, 814, 815, 817, 818, 824, 825, 826, 827, 828, 831, 832, 833, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 893, 902, 905, 906, 907, 908, 909, 912, 916, 917, 918, 922, 923, 924, 926, 927, 929, 931, 932, 934, 939, 940, 941, 948, 953, 954, 956, 957, 958, 965, 968, 969, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 989, 998, 1006, 1019, 1020, 1074, 1140, 1153, 1162, 1163], "mean": [17, 29, 73, 74, 110, 111, 114, 117, 146, 148, 151, 153, 167, 169, 170, 182, 202, 205, 206, 219, 221, 234, 238, 265, 280, 288, 296, 300, 304, 315, 316, 353, 374, 375, 376, 398, 417, 422, 427, 481, 559, 567, 570, 571, 637, 683, 705, 709, 717, 718, 750, 756, 772, 832, 839, 842, 844, 845, 853, 894, 901, 902, 903, 930, 937, 953, 957, 959, 987, 990, 999, 1014, 1022, 1025, 1039, 1040, 1045, 1073, 1093, 1096, 1100, 1102, 1103, 1109, 1114, 1135, 1150, 1153], "specif": [17, 63, 112, 149, 215, 221, 222, 231, 234, 280, 286, 297, 316, 350, 398, 415, 427, 457, 504, 507, 509, 512, 658, 701, 715, 748, 756, 770, 793, 797, 823, 833, 894, 901, 903, 917, 923, 939, 940, 965, 971, 983, 994, 1002, 1003, 1104, 1120, 1128, 1163, 1164], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 63, 69, 70, 73, 74, 85, 92, 97, 106, 107, 108, 110, 111, 114, 115, 117, 118, 119, 120, 122, 123, 125, 126, 153, 164, 165, 166, 168, 173, 182, 183, 184, 185, 187, 189, 190, 202, 206, 208, 215, 218, 219, 221, 222, 226, 230, 232, 233, 236, 238, 241, 244, 246, 248, 250, 251, 253, 258, 259, 263, 265, 266, 268, 272, 273, 274, 275, 277, 278, 279, 280, 284, 286, 296, 297, 298, 300, 301, 302, 306, 308, 310, 311, 314, 316, 318, 324, 325, 332, 333, 334, 341, 367, 413, 437, 439, 447, 455, 456, 457, 458, 459, 461, 462, 464, 465, 469, 475, 476, 477, 479, 480, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 520, 522, 527, 533, 541, 544, 547, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 568, 569, 571, 573, 578, 580, 581, 584, 590, 599, 600, 606, 610, 616, 619, 622, 623, 628, 629, 630, 632, 633, 637, 638, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 659, 660, 661, 662, 663, 664, 665, 668, 672, 677, 679, 680, 681, 683, 685, 686, 689, 690, 691, 692, 693, 694, 695, 697, 698, 700, 702, 709, 711, 714, 715, 718, 719, 720, 727, 728, 729, 734, 735, 736, 738, 740, 744, 745, 746, 747, 749, 750, 752, 894, 901, 902, 903, 935, 937, 938, 992, 994, 996, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1015, 1016, 1017, 1018, 1020, 1023, 1025, 1026, 1034, 1054, 1081, 1082, 1083, 1088, 1090, 1093, 1108, 1122, 1128, 1129, 1140, 1148, 1158], "handout": [17, 114], "warn": [17, 32, 40, 126, 142, 157, 198, 208, 259, 271, 327, 338, 363, 387, 418, 419, 421, 442, 456, 511, 513, 557, 561, 612, 656, 668, 750, 766, 772, 775, 834, 893, 923, 934, 948, 970, 994, 1045, 1123], "produc": [17, 108, 166, 168, 207, 221, 415, 427, 432, 683, 689, 691, 727, 729, 914, 944, 945, 963, 971, 974, 987, 1000, 1001, 1034, 1037, 1039, 1103], "error": [17, 21, 27, 29, 46, 65, 88, 97, 115, 117, 118, 125, 142, 145, 146, 147, 148, 151, 152, 161, 165, 168, 176, 179, 182, 185, 192, 203, 207, 213, 215, 218, 222, 223, 224, 228, 231, 234, 238, 241, 243, 246, 255, 256, 259, 262, 265, 268, 279, 280, 293, 298, 315, 330, 335, 337, 341, 360, 363, 365, 372, 376, 390, 391, 397, 403, 404, 406, 419, 420, 421, 424, 441, 442, 443, 445, 446, 447, 448, 451, 458, 462, 481, 482, 483, 495, 503, 514, 533, 550, 555, 557, 559, 560, 564, 565, 566, 567, 568, 570, 572, 580, 583, 588, 630, 632, 633, 642, 649, 656, 659, 663, 665, 666, 667, 668, 672, 692, 693, 694, 702, 705, 707, 709, 714, 715, 717, 728, 729, 731, 748, 749, 750, 753, 760, 775, 785, 789, 793, 797, 813, 827, 830, 831, 837, 840, 893, 894, 902, 904, 916, 918, 919, 920, 921, 922, 923, 931, 932, 934, 942, 948, 950, 951, 954, 955, 956, 964, 968, 969, 973, 974, 983, 988, 994, 1024, 1025, 1036, 1037, 1041, 1045, 1047, 1054, 1067, 1093, 1095, 1102, 1123, 1128, 1130, 1135, 1148], "output": [17, 23, 33, 40, 51, 53, 55, 56, 61, 63, 85, 86, 107, 122, 125, 126, 142, 148, 150, 151, 152, 165, 168, 174, 186, 187, 198, 207, 215, 221, 224, 225, 231, 234, 262, 315, 330, 335, 353, 354, 359, 360, 361, 362, 366, 398, 432, 433, 439, 440, 441, 481, 483, 498, 513, 516, 517, 518, 519, 531, 533, 541, 544, 570, 620, 638, 639, 652, 700, 705, 713, 750, 755, 810, 821, 828, 837, 840, 841, 842, 853, 857, 879, 883, 884, 889, 890, 894, 904, 915, 923, 926, 929, 937, 940, 941, 945, 965, 968, 969, 971, 1001, 1040, 1045, 1046, 1056, 1057, 1059, 1060, 1061, 1062, 1064, 1069, 1075, 1077, 1079, 1084, 1085, 1086, 1087, 1098, 1101, 1102, 1107, 1111, 1120, 1123, 1136, 1143, 1159], "must": [17, 39, 43, 44, 110, 111, 114, 118, 149, 153, 168, 174, 178, 179, 181, 182, 185, 189, 190, 203, 205, 207, 215, 221, 222, 229, 231, 232, 234, 255, 280, 297, 353, 370, 373, 387, 395, 413, 415, 430, 437, 439, 443, 449, 460, 465, 466, 479, 482, 483, 496, 497, 511, 514, 517, 518, 519, 531, 541, 567, 568, 570, 572, 582, 583, 617, 630, 637, 644, 651, 659, 660, 662, 663, 683, 707, 709, 721, 725, 750, 775, 781, 789, 795, 802, 824, 825, 841, 851, 859, 893, 904, 910, 913, 923, 924, 927, 932, 934, 942, 951, 953, 955, 965, 971, 974, 989, 994, 995, 1012, 1017, 1023, 1036, 1037, 1039, 1040, 1042, 1045, 1074, 1095, 1129, 1140], "role": [17, 39, 65, 149, 153, 433, 514, 894], "somewher": [17, 167, 186, 198, 205, 238, 250, 251, 315, 327, 398, 415, 417, 437, 462, 483, 550, 683, 940, 997, 1022, 1108], "top": [17, 28, 32, 34, 35, 38, 39, 50, 145, 146, 148, 149, 161, 167, 169, 170, 186, 188, 215, 221, 224, 231, 234, 440, 800, 809, 894, 914, 953, 955, 994, 1002, 1024, 1070, 1074, 1148, 1152, 1154, 1159], "insid": [17, 35, 39, 42, 50, 114, 117, 126, 145, 146, 174, 176, 198, 215, 221, 231, 234, 251, 271, 273, 288, 297, 304, 315, 330, 359, 363, 373, 391, 394, 396, 397, 415, 420, 439, 501, 512, 517, 565, 571, 573, 729, 748, 758, 768, 836, 866, 876, 901, 903, 926, 940, 959, 985, 990, 993, 1002, 1039, 1045, 1113, 1116, 1120, 1131, 1150, 1153], "ideal": [17, 157, 173, 215, 221, 231, 234, 251, 253, 426, 442, 453, 460, 508, 629, 683, 756, 775, 793, 797, 890, 910, 974, 1014, 1016], "slideshow": [17, 23, 225, 237, 264, 274, 285, 293, 296, 300, 306, 307, 314, 754, 757, 759, 762, 764, 767, 769, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 801, 803, 806, 808, 812, 815, 818, 1038, 1125, 1132], "manual": [17, 61, 63, 115, 122, 123, 125, 143, 153, 161, 184, 185, 215, 216, 221, 224, 231, 234, 264, 266, 361, 362, 365, 372, 410, 415, 439, 556, 598, 648, 655, 666, 692, 704, 705, 735, 736, 738, 739, 749, 750, 752, 753, 756, 797, 824, 825, 894, 901, 902, 924, 927, 940, 942, 944, 985, 987, 992, 1000, 1001, 1005, 1009, 1050], "theme": [17, 65, 322, 1026, 1045], "url": [17, 143, 150, 152, 161, 173, 512, 993, 1050], "_static": 17, "ui": [17, 32, 153, 376, 635], "default": [17, 23, 58, 61, 97, 110, 111, 112, 114, 119, 120, 146, 147, 152, 153, 157, 163, 174, 183, 185, 187, 194, 196, 207, 215, 218, 221, 224, 227, 230, 231, 234, 238, 241, 244, 249, 252, 259, 261, 262, 266, 270, 271, 273, 276, 280, 282, 283, 302, 308, 311, 323, 330, 376, 387, 419, 427, 433, 439, 440, 442, 445, 449, 452, 458, 461, 475, 477, 486, 487, 503, 513, 555, 557, 558, 563, 564, 567, 568, 592, 611, 612, 628, 633, 635, 637, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 655, 656, 663, 664, 693, 695, 711, 720, 725, 727, 728, 729, 734, 735, 740, 747, 749, 750, 793, 821, 824, 825, 827, 839, 852, 857, 876, 888, 889, 893, 894, 896, 901, 902, 904, 910, 913, 927, 931, 937, 940, 942, 944, 956, 968, 970, 972, 974, 985, 1014, 1016, 1022, 1041, 1043, 1045, 1050, 1086, 1103, 1113, 1116, 1118, 1123, 1128, 1130, 1148], "given": [17, 39, 59, 62, 69, 81, 102, 106, 107, 110, 111, 131, 146, 148, 151, 153, 157, 167, 215, 221, 231, 234, 238, 262, 270, 271, 273, 280, 308, 316, 363, 378, 421, 480, 509, 512, 514, 533, 557, 626, 637, 662, 748, 758, 768, 779, 797, 834, 839, 848, 850, 857, 879, 901, 981, 993, 1080, 1089, 1095, 1097, 1103, 1114, 1117, 1151, 1163], "path": [17, 21, 97, 99, 114, 118, 134, 135, 142, 151, 174, 178, 186, 189, 206, 217, 218, 219, 223, 226, 230, 231, 234, 252, 261, 262, 282, 283, 286, 288, 289, 304, 305, 308, 315, 316, 321, 323, 330, 335, 397, 433, 439, 441, 444, 445, 447, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 555, 580, 712, 728, 749, 750, 761, 775, 787, 797, 823, 824, 825, 826, 827, 830, 831, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 893, 913, 916, 922, 923, 924, 932, 933, 934, 948, 950, 951, 952, 954, 956, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 992, 1002, 1019, 1022, 1083, 1123, 1128, 1130, 1138, 1150], "commit": [17, 46, 77, 112, 128, 149, 152, 160, 161, 203, 207, 208, 219, 222, 232, 338, 770, 1095, 1104, 1107, 1128, 1160], "place": [17, 55, 114, 123, 134, 143, 147, 148, 150, 151, 152, 153, 161, 166, 175, 179, 202, 218, 224, 234, 270, 271, 353, 369, 391, 398, 415, 438, 447, 451, 455, 479, 481, 495, 514, 527, 572, 586, 588, 589, 600, 611, 619, 622, 623, 633, 652, 718, 721, 729, 745, 748, 750, 775, 797, 826, 847, 848, 849, 850, 901, 902, 910, 956, 986, 988, 997, 1027, 1036, 1040, 1042, 1060, 1117, 1130], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 78, 99, 114, 146, 153, 182, 198, 219, 252, 261, 262, 282, 283, 348, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 672, 677, 728, 749, 750, 797, 824, 825, 826, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 893, 901, 913, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 1099, 1100, 1107, 1120], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 78, 112, 120, 123, 125, 136, 143, 145, 146, 147, 149, 151, 153, 156, 161, 165, 166, 197, 203, 208, 213, 215, 219, 221, 231, 234, 246, 251, 253, 262, 271, 297, 310, 315, 333, 337, 343, 344, 411, 418, 427, 428, 433, 437, 441, 442, 462, 511, 512, 513, 514, 527, 550, 574, 575, 576, 577, 580, 627, 632, 697, 700, 713, 714, 727, 748, 756, 760, 765, 766, 768, 779, 781, 789, 793, 797, 798, 836, 857, 858, 876, 889, 894, 896, 901, 902, 903, 910, 920, 953, 959, 964, 969, 971, 974, 983, 992, 995, 1006, 1010, 1016, 1039, 1052, 1056, 1073, 1078, 1090, 1095, 1100, 1103, 1111, 1123, 1129, 1135, 1140, 1151], "uri": 17, "well": [17, 42, 65, 146, 148, 151, 152, 153, 157, 170, 174, 182, 205, 207, 234, 270, 272, 280, 288, 297, 304, 316, 376, 398, 427, 437, 465, 505, 511, 514, 515, 538, 558, 562, 573, 587, 655, 662, 669, 692, 705, 715, 719, 822, 841, 857, 890, 897, 902, 903, 914, 927, 929, 947, 971, 973, 986, 994, 995, 998, 1002, 1005, 1009, 1012, 1015, 1026, 1030, 1040, 1098, 1100, 1108, 1124, 1150], "blah": [19, 23, 39, 62, 65, 128, 146, 149, 168, 179, 186, 189, 194, 202, 205, 211, 215, 221, 222, 224, 226, 231, 234, 241, 244, 256, 263, 266, 276, 280, 298, 308, 322, 323, 330, 338, 341, 421, 668, 731, 748, 753, 761, 920, 921, 964, 965, 990, 1025, 1031, 1050, 1111], "watch": [20, 32, 147, 148, 149, 167, 174, 178, 182, 183, 187, 273, 275, 279, 438, 705, 894, 902, 938, 998, 1019, 1121], "w5g8k7a2gbg": 20, "bore": [20, 207, 229, 243, 259, 285, 857, 965, 969, 1026, 1095], "good": [20, 27, 29, 43, 97, 114, 143, 145, 146, 147, 148, 153, 161, 170, 178, 182, 185, 203, 206, 207, 215, 219, 224, 225, 226, 228, 229, 232, 238, 253, 255, 265, 268, 271, 273, 279, 280, 301, 310, 349, 372, 376, 417, 421, 423, 431, 432, 437, 460, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 538, 555, 559, 563, 564, 578, 581, 584, 600, 606, 610, 613, 619, 622, 623, 628, 632, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 666, 695, 706, 711, 717, 720, 726, 728, 730, 735, 738, 747, 749, 750, 754, 756, 789, 797, 802, 822, 836, 840, 890, 894, 902, 903, 927, 929, 946, 955, 958, 959, 965, 968, 994, 1007, 1025, 1026, 1037, 1040, 1042, 1045, 1057, 1067, 1094, 1095, 1102, 1121, 1150], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 259], "staticmethod": [21, 259], "member": [21, 35, 38, 43, 57, 63, 110, 111, 114, 161, 167, 168, 169, 179, 184, 206, 224, 236, 249, 264, 271, 280, 311, 334, 406, 415, 422, 459, 501, 503, 506, 509, 533, 547, 555, 557, 558, 560, 561, 562, 563, 569, 573, 574, 576, 578, 611, 612, 616, 637, 640, 643, 644, 645, 647, 648, 649, 650, 651, 652, 655, 663, 667, 668, 677, 683, 693, 709, 715, 746, 748, 750, 758, 763, 765, 785, 793, 797, 810, 816, 823, 824, 825, 840, 841, 842, 843, 844, 845, 851, 886, 890, 901, 929, 983, 1044, 1120, 1140], "final": [21, 38, 42, 61, 78, 106, 142, 168, 178, 182, 185, 205, 207, 215, 221, 222, 231, 236, 249, 255, 279, 301, 311, 439, 512, 514, 579, 580, 629, 655, 666, 695, 749, 750, 760, 791, 797, 824, 825, 890, 902, 903, 971, 988, 992, 1005, 1057, 1073, 1095, 1148], "exec": [21, 29, 153, 178, 187, 218, 232, 233, 241, 248, 260, 264, 266, 274, 275, 276, 280, 287, 296, 300, 307, 309, 750, 885, 890, 923, 926, 947, 971, 996, 1093, 1161], "dict": [21, 165, 178, 179, 183, 194, 196, 197, 202, 205, 219, 220, 221, 222, 225, 227, 230, 231, 232, 236, 242, 256, 259, 266, 276, 280, 286, 291, 298, 302, 308, 322, 325, 330, 655, 992, 995, 1007, 1008, 1017, 1043], "There": [21, 45, 55, 57, 65, 68, 81, 97, 120, 143, 145, 147, 148, 149, 150, 153, 157, 158, 174, 175, 179, 181, 182, 185, 189, 190, 203, 208, 224, 227, 228, 229, 232, 238, 265, 268, 271, 272, 273, 274, 275, 296, 297, 311, 316, 351, 361, 367, 376, 391, 394, 415, 417, 424, 427, 438, 439, 443, 452, 457, 482, 483, 533, 541, 558, 563, 608, 633, 651, 652, 664, 666, 672, 695, 700, 711, 715, 719, 720, 728, 747, 749, 750, 770, 797, 802, 828, 857, 894, 901, 902, 947, 957, 968, 969, 1020, 1026, 1037, 1095, 1104, 1129, 1135], "half": [21, 36, 146, 147, 148, 208, 423, 442, 795, 836, 902, 955, 992], "heart": [21, 32, 38, 136, 442, 836, 1101], "split": [21, 143, 166, 169, 202, 206, 211, 212, 215, 218, 219, 221, 226, 230, 236, 244, 247, 259, 264, 266, 280, 286, 302, 309, 321, 330, 415, 439, 461, 533, 992, 1101], "pimp": 21, "elabor": [21, 157, 222, 232, 417, 440, 902], "namespac": [21, 178, 215, 221, 228, 231, 234, 238, 249, 259, 462, 464, 479, 515, 516, 517, 518, 519, 521, 531, 532, 550, 572, 580, 585, 586, 587, 588, 589, 595, 596, 598, 599, 602, 603, 604, 608, 622, 639, 645, 646, 655, 670, 692, 702, 705, 727, 729, 730, 901, 935, 938, 950, 952, 1002], "__init__": [21, 63, 142, 165, 166, 177, 179, 182, 184, 202, 205, 206, 218, 219, 221, 228, 231, 234, 238, 244, 247, 256, 259, 266, 276, 280, 298, 302, 439, 992, 993, 994, 1002, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1128], "__all__": [21, 234, 238], "etc": [21, 23, 29, 63, 90, 100, 114, 135, 139, 143, 147, 151, 160, 163, 164, 168, 175, 182, 185, 189, 190, 192, 195, 196, 203, 204, 206, 207, 209, 213, 216, 218, 219, 221, 225, 226, 229, 235, 236, 237, 238, 240, 241, 243, 245, 248, 258, 259, 262, 265, 266, 268, 276, 278, 279, 281, 284, 285, 301, 302, 306, 307, 308, 314, 316, 317, 318, 319, 320, 321, 330, 335, 338, 348, 371, 376, 432, 442, 450, 464, 547, 635, 697, 703, 730, 748, 750, 756, 770, 797, 809, 819, 827, 829, 832, 834, 837, 839, 840, 841, 842, 853, 857, 860, 871, 874, 876, 877, 879, 881, 882, 883, 884, 885, 886, 888, 890, 893, 903, 904, 905, 913, 914, 917, 918, 919, 924, 930, 939, 950, 964, 965, 969, 971, 992, 994, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1041, 1045, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1120, 1122, 1143, 1144, 1152, 1154, 1158, 1159, 1162, 1164], "user": [21, 23, 29, 31, 47, 53, 63, 65, 84, 101, 102, 110, 111, 114, 118, 130, 132, 142, 143, 145, 146, 147, 148, 150, 151, 153, 161, 168, 174, 177, 178, 179, 182, 186, 193, 202, 205, 207, 209, 218, 224, 226, 231, 232, 234, 235, 237, 238, 241, 244, 246, 255, 256, 259, 262, 265, 266, 268, 276, 280, 283, 290, 291, 293, 297, 302, 308, 310, 315, 327, 330, 339, 395, 426, 437, 439, 440, 442, 447, 455, 465, 482, 483, 503, 517, 533, 555, 558, 559, 565, 572, 616, 620, 639, 641, 642, 643, 644, 651, 652, 668, 672, 704, 715, 728, 749, 750, 756, 758, 768, 770, 795, 797, 810, 811, 824, 825, 827, 831, 835, 836, 837, 841, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 857, 881, 885, 888, 893, 894, 895, 904, 910, 917, 922, 923, 924, 927, 929, 932, 934, 939, 948, 951, 952, 954, 956, 957, 968, 971, 985, 987, 988, 989, 992, 1009, 1010, 1047, 1054, 1056, 1057, 1061, 1073, 1074, 1080, 1085, 1087, 1090, 1092, 1093, 1106, 1111, 1114, 1118, 1121, 1130, 1137, 1148], "import": [21, 29, 63, 65, 134, 142, 148, 153, 156, 166, 167, 168, 169, 178, 179, 182, 184, 185, 190, 194, 196, 197, 198, 206, 210, 211, 212, 217, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 250, 251, 256, 259, 263, 264, 265, 266, 268, 270, 276, 280, 286, 291, 294, 298, 302, 308, 323, 325, 353, 369, 439, 442, 443, 580, 597, 663, 701, 715, 718, 750, 779, 797, 839, 857, 894, 897, 901, 910, 922, 949, 959, 970, 991, 992, 993, 995, 1003, 1005, 1007, 1013, 1014, 1017, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1035, 1039, 1047, 1048, 1049, 1050, 1083, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1125, 1128, 1129, 1132, 1135, 1153, 1158], "pythonpath": [21, 40, 61, 178, 264, 1002, 1050], "goto": [21, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750, 968], "orgi": [21, 447, 659], "perspect": [21, 38, 153, 175], "alwai": [21, 43, 65, 80, 112, 142, 143, 148, 158, 175, 182, 205, 227, 238, 264, 265, 268, 310, 322, 330, 335, 353, 371, 397, 398, 410, 422, 423, 427, 428, 430, 431, 447, 448, 467, 477, 507, 556, 562, 572, 591, 594, 650, 655, 659, 670, 694, 703, 707, 710, 714, 719, 756, 775, 793, 797, 802, 823, 857, 858, 901, 902, 903, 917, 923, 929, 957, 968, 973, 983, 988, 994, 1022, 1026, 1040, 1095, 1100, 1101, 1102, 1128, 1129, 1148], "valgrind": [21, 97, 173, 207, 348, 425, 429, 430, 432, 434, 435, 462, 527, 537, 539, 547, 550, 565, 700, 713, 714, 750, 1145, 1146], "supervis": [21, 1102], "hack": [21, 53, 59, 62, 97, 126, 140, 143, 161, 169, 173, 178, 182, 183, 207, 208, 222, 224, 232, 243, 250, 251, 252, 253, 261, 273, 274, 282, 283, 290, 293, 297, 310, 311, 330, 334, 338, 339, 341, 348, 349, 397, 440, 461, 462, 475, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 533, 575, 590, 591, 611, 653, 664, 695, 696, 697, 701, 713, 728, 748, 749, 750, 751, 827, 852, 853, 893, 934, 981, 1019, 1115, 1121, 1128, 1147, 1148, 1162], "someth": [21, 43, 55, 66, 72, 73, 74, 78, 83, 84, 87, 117, 123, 139, 145, 146, 148, 149, 151, 153, 157, 161, 167, 174, 178, 186, 194, 196, 197, 198, 208, 218, 222, 229, 244, 247, 271, 273, 290, 293, 310, 325, 388, 389, 403, 457, 479, 512, 514, 550, 561, 565, 570, 573, 580, 604, 648, 649, 650, 660, 663, 677, 707, 715, 717, 718, 744, 745, 746, 750, 758, 770, 774, 785, 793, 797, 799, 802, 817, 869, 893, 894, 897, 901, 902, 903, 918, 919, 927, 929, 930, 942, 953, 955, 956, 968, 983, 990, 992, 993, 995, 999, 1016, 1023, 1025, 1030, 1040, 1046, 1077, 1102, 1153], "malloc": [21, 173, 410, 411, 424, 539, 783, 917, 969, 971, 1145], "seomth": 21, "cleanup": [21, 146, 165, 341, 556, 632, 668, 712, 969, 992, 1129], "obviou": [21, 57, 153, 161, 167, 228, 238, 265, 268, 327, 398, 417, 439, 514, 556, 663, 672, 713, 719, 735, 923, 965, 990, 1026, 1037, 1151], "lead": [21, 110, 111, 117, 146, 148, 152, 153, 170, 207, 234, 238, 262, 280, 300, 357, 365, 375, 447, 637, 649, 797, 823, 836, 902, 955, 964, 965, 983, 1010, 1036, 1047, 1057, 1108, 1122], "sever": [21, 87, 114, 146, 206, 207, 395, 464, 469, 643, 654, 795, 853, 894, 994, 1020, 1031], "duplic": [21, 42, 49, 97, 115, 117, 125, 166, 179, 224, 232, 242, 264, 315, 357, 359, 420, 421, 464, 523, 531, 544, 565, 572, 583, 661, 718, 750, 804, 840, 893, 929, 932, 934, 951, 1077, 1128, 1130], "when": [21, 28, 30, 43, 63, 65, 75, 80, 110, 111, 119, 123, 126, 133, 134, 143, 145, 146, 147, 148, 151, 153, 161, 163, 175, 178, 184, 207, 208, 215, 219, 221, 222, 224, 231, 232, 234, 237, 238, 251, 253, 262, 270, 271, 273, 280, 288, 304, 311, 316, 321, 330, 341, 348, 355, 363, 365, 371, 376, 387, 394, 398, 413, 418, 419, 420, 421, 422, 427, 437, 439, 442, 445, 449, 452, 453, 456, 457, 461, 481, 483, 514, 515, 559, 561, 562, 565, 573, 595, 611, 626, 627, 630, 632, 637, 639, 644, 648, 650, 655, 658, 660, 662, 663, 666, 683, 697, 702, 705, 710, 714, 715, 718, 722, 725, 727, 729, 748, 765, 768, 775, 779, 791, 793, 795, 797, 811, 830, 832, 836, 839, 841, 853, 857, 879, 890, 902, 903, 910, 914, 918, 919, 923, 926, 927, 945, 947, 953, 956, 957, 959, 964, 968, 969, 971, 973, 988, 992, 993, 994, 999, 1003, 1006, 1012, 1014, 1019, 1022, 1025, 1026, 1028, 1030, 1035, 1036, 1037, 1047, 1086, 1103, 1108, 1113, 1123, 1128, 1130, 1137, 1148, 1150, 1151], "void": [21, 42, 44, 55, 58, 107, 117, 120, 122, 123, 125, 148, 149, 157, 189, 207, 219, 330, 352, 353, 355, 359, 361, 363, 367, 373, 377, 391, 393, 394, 395, 396, 398, 401, 403, 404, 407, 410, 411, 413, 414, 420, 421, 424, 440, 447, 456, 457, 458, 462, 464, 468, 477, 486, 487, 491, 492, 495, 496, 497, 499, 511, 513, 514, 515, 538, 550, 557, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 572, 573, 580, 586, 590, 599, 612, 626, 629, 630, 633, 635, 636, 645, 647, 655, 656, 661, 665, 668, 669, 683, 685, 686, 688, 689, 690, 691, 693, 694, 697, 698, 699, 700, 701, 702, 704, 705, 707, 712, 713, 714, 715, 717, 719, 722, 724, 727, 729, 731, 748, 758, 761, 768, 775, 777, 779, 781, 783, 791, 793, 802, 807, 811, 817, 834, 854, 915, 919, 920, 921, 923, 933, 940, 942, 944, 946, 950, 955, 961, 964, 965, 968, 969, 971, 983, 987, 989, 1140], "f": [21, 31, 38, 43, 63, 109, 114, 132, 147, 148, 149, 157, 169, 179, 184, 185, 190, 191, 194, 196, 202, 203, 205, 206, 212, 214, 215, 218, 219, 221, 225, 227, 228, 231, 234, 238, 241, 243, 245, 247, 255, 256, 259, 263, 266, 271, 276, 280, 285, 287, 294, 298, 302, 309, 322, 324, 326, 341, 367, 372, 382, 384, 393, 396, 401, 420, 421, 423, 427, 431, 439, 456, 562, 566, 582, 656, 662, 668, 669, 698, 719, 722, 756, 761, 823, 834, 841, 857, 876, 883, 885, 886, 901, 902, 903, 904, 926, 957, 959, 964, 979, 983, 986, 990, 992, 993, 994, 995, 1007, 1009, 1011, 1012, 1015, 1016, 1017, 1036, 1037, 1045, 1052, 1057, 1090, 1092, 1095, 1103, 1128, 1158], "alloc": [21, 119, 148, 149, 166, 168, 207, 215, 218, 221, 231, 234, 256, 365, 394, 410, 415, 418, 421, 424, 462, 546, 548, 562, 564, 565, 572, 591, 596, 603, 608, 619, 623, 627, 652, 663, 666, 700, 705, 714, 715, 719, 748, 750, 753, 756, 758, 783, 785, 799, 802, 834, 840, 919, 920, 921, 941, 1001, 1052], "variabl": [21, 29, 87, 89, 90, 97, 104, 110, 111, 142, 147, 148, 157, 161, 165, 167, 168, 174, 178, 179, 182, 183, 184, 185, 187, 190, 191, 192, 197, 198, 203, 204, 206, 207, 209, 213, 216, 217, 219, 220, 221, 224, 225, 227, 229, 235, 236, 237, 238, 240, 242, 243, 245, 249, 252, 257, 258, 259, 261, 262, 265, 268, 271, 275, 277, 278, 279, 281, 282, 283, 284, 285, 291, 296, 297, 298, 300, 301, 303, 306, 307, 309, 314, 316, 317, 318, 319, 320, 321, 330, 332, 333, 352, 354, 355, 363, 368, 376, 383, 387, 388, 391, 392, 393, 397, 399, 400, 403, 405, 409, 410, 412, 413, 415, 416, 417, 423, 424, 425, 427, 429, 434, 435, 441, 443, 447, 449, 468, 476, 482, 491, 496, 501, 542, 547, 562, 570, 571, 578, 590, 630, 637, 652, 657, 663, 666, 668, 695, 697, 709, 728, 746, 747, 748, 749, 750, 766, 785, 797, 827, 828, 831, 834, 858, 877, 893, 934, 939, 942, 946, 947, 948, 953, 971, 981, 982, 983, 988, 990, 992, 995, 996, 1002, 1003, 1004, 1005, 1006, 1010, 1018, 1022, 1024, 1029, 1033, 1035, 1037, 1038, 1041, 1046, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1102, 1105, 1108, 1109, 1115, 1117, 1122, 1123, 1149, 1151, 1158, 1164], "filenam": [21, 42, 50, 55, 58, 145, 165, 169, 194, 212, 215, 218, 219, 221, 226, 231, 234, 244, 259, 262, 275, 276, 280, 308, 322, 439, 498, 501, 515, 748, 797, 823, 824, 886, 924, 927, 928, 929, 930, 931, 935, 938, 964, 992, 1002, 1047, 1052, 1064, 1073, 1075, 1079, 1085, 1087], "getenv": [21, 496, 952], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 73, 74, 83, 85, 114, 145, 146, 147, 148, 149, 151, 153, 156, 157, 161, 174, 178, 182, 183, 185, 187, 193, 203, 206, 213, 216, 219, 221, 222, 224, 226, 232, 234, 235, 240, 241, 243, 246, 253, 254, 255, 258, 262, 264, 266, 272, 276, 278, 279, 280, 283, 284, 285, 302, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 320, 330, 334, 336, 341, 360, 361, 368, 376, 383, 392, 399, 405, 409, 412, 413, 415, 416, 417, 419, 421, 424, 425, 429, 433, 434, 435, 438, 454, 461, 482, 498, 503, 514, 515, 538, 544, 555, 558, 559, 561, 564, 567, 570, 616, 620, 639, 642, 654, 657, 664, 672, 695, 709, 717, 744, 747, 748, 749, 750, 756, 770, 781, 797, 799, 823, 824, 825, 828, 834, 839, 840, 841, 842, 844, 845, 848, 857, 858, 890, 893, 897, 901, 902, 903, 910, 915, 917, 918, 920, 921, 924, 927, 930, 932, 933, 934, 935, 937, 938, 945, 947, 951, 955, 961, 964, 965, 968, 969, 988, 994, 995, 1010, 1013, 1015, 1023, 1031, 1053, 1054, 1064, 1073, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1101, 1103, 1111, 1118, 1161], "onli": [21, 29, 42, 43, 89, 108, 110, 111, 114, 115, 117, 119, 126, 136, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 161, 166, 167, 174, 178, 182, 184, 185, 203, 205, 208, 215, 218, 221, 224, 225, 226, 228, 231, 232, 234, 235, 237, 238, 243, 245, 246, 247, 258, 259, 262, 264, 265, 271, 275, 278, 280, 284, 285, 288, 297, 304, 306, 314, 321, 324, 338, 345, 355, 361, 363, 364, 365, 367, 372, 373, 375, 380, 387, 388, 391, 393, 395, 396, 397, 398, 414, 415, 419, 420, 421, 422, 423, 432, 437, 439, 440, 442, 443, 446, 448, 451, 452, 456, 457, 458, 460, 468, 476, 477, 479, 481, 482, 483, 495, 496, 511, 512, 515, 518, 519, 533, 544, 557, 558, 559, 560, 562, 564, 566, 567, 570, 572, 573, 579, 593, 595, 611, 612, 616, 626, 627, 629, 633, 637, 641, 642, 649, 651, 655, 662, 666, 668, 672, 677, 683, 693, 697, 700, 704, 705, 709, 710, 714, 715, 721, 723, 725, 727, 729, 734, 738, 740, 741, 750, 753, 755, 758, 761, 766, 777, 783, 793, 797, 802, 805, 810, 814, 822, 823, 824, 825, 832, 835, 839, 841, 842, 847, 853, 857, 858, 879, 886, 894, 895, 896, 901, 902, 903, 904, 914, 919, 920, 923, 925, 926, 927, 931, 933, 937, 939, 942, 947, 950, 953, 955, 956, 957, 958, 964, 965, 968, 969, 971, 972, 983, 987, 988, 992, 993, 994, 997, 1003, 1007, 1009, 1012, 1014, 1015, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1035, 1040, 1041, 1045, 1047, 1050, 1054, 1059, 1067, 1069, 1070, 1073, 1074, 1078, 1080, 1093, 1095, 1100, 1101, 1102, 1104, 1107, 1116, 1120, 1121, 1128, 1134, 1135, 1137, 1140, 1148, 1150, 1153, 1165], "bullshit": [21, 65, 190, 202, 238, 442, 705, 1158], "everyon": [21, 65, 146, 151, 161, 182, 437, 642, 693, 844, 845, 855, 957], "get": [21, 55, 63, 97, 110, 111, 134, 135, 142, 143, 146, 148, 149, 156, 157, 165, 178, 179, 182, 184, 189, 196, 197, 198, 205, 207, 208, 215, 218, 221, 222, 224, 227, 228, 231, 234, 241, 247, 251, 253, 256, 259, 262, 266, 276, 280, 286, 298, 302, 308, 325, 330, 333, 335, 350, 376, 421, 430, 453, 457, 462, 477, 486, 491, 568, 575, 647, 655, 665, 683, 689, 709, 710, 713, 714, 715, 716, 718, 731, 740, 748, 750, 758, 763, 770, 797, 799, 813, 816, 830, 832, 836, 837, 857, 893, 903, 910, 913, 919, 920, 921, 934, 936, 941, 958, 965, 969, 986, 992, 1005, 1008, 1014, 1018, 1026, 1043, 1113, 1120, 1130, 1135, 1140, 1153], "point": [21, 34, 36, 38, 40, 61, 89, 97, 106, 109, 112, 114, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 161, 166, 167, 168, 169, 173, 178, 182, 183, 184, 185, 187, 205, 207, 208, 215, 218, 221, 224, 231, 234, 239, 242, 264, 273, 280, 297, 298, 300, 316, 336, 337, 338, 341, 352, 353, 354, 359, 365, 367, 369, 371, 375, 397, 400, 403, 406, 407, 410, 411, 421, 423, 452, 457, 460, 467, 468, 476, 499, 501, 513, 533, 534, 535, 558, 560, 562, 564, 565, 566, 568, 569, 571, 574, 578, 589, 590, 598, 613, 614, 627, 632, 633, 652, 655, 658, 660, 662, 666, 672, 683, 705, 709, 714, 718, 730, 748, 750, 793, 797, 826, 834, 836, 840, 841, 857, 894, 895, 903, 913, 917, 920, 923, 956, 969, 972, 985, 989, 990, 991, 993, 997, 1005, 1031, 1035, 1037, 1040, 1102, 1104, 1106, 1108, 1128, 1130, 1137, 1140, 1145, 1149], "unobvi": [21, 797], "best": [21, 30, 39, 48, 57, 117, 146, 147, 148, 157, 170, 227, 363, 395, 417, 424, 427, 428, 437, 516, 560, 565, 629, 694, 707, 727, 785, 787, 789, 793, 795, 834, 857, 879, 895, 902, 903, 939, 953, 957, 985, 999, 1005, 1042, 1047, 1049, 1106, 1116], "resourc": [21, 80, 97, 110, 111, 146, 148, 151, 163, 173, 208, 224, 265, 268, 273, 310, 311, 333, 341, 469, 533, 547, 558, 562, 563, 627, 652, 663, 664, 666, 695, 700, 711, 712, 714, 715, 720, 727, 728, 747, 749, 750, 781, 783, 791, 830, 834, 835, 902, 919, 920, 921, 939, 953, 956, 992, 1045], "leaki": 21, "erron": [21, 424, 1057], "worst": [21, 146, 395, 903, 955, 968, 1148, 1151], "extract": [21, 29, 55, 97, 135, 139, 206, 232, 235, 240, 243, 255, 258, 278, 279, 284, 285, 306, 307, 314, 379, 398, 502, 503, 533, 544, 555, 748, 750, 797, 810, 823, 985, 1010, 1032, 1054, 1088, 1089, 1090, 1091, 1093, 1101], "common": [21, 24, 138, 146, 203, 219, 220, 232, 238, 243, 398, 407, 438, 513, 591, 718, 734, 738, 748, 822, 894, 895, 903, 927, 964, 994, 999, 1000, 1001, 1017, 1026, 1027, 1031, 1037, 1041, 1044, 1095, 1103, 1104, 1128, 1151], "hm": [21, 32, 63, 186, 196, 215, 218, 221, 228, 322, 787, 813, 814, 921, 1014, 1099, 1130, 1135, 1137], "end": [21, 23, 32, 37, 42, 106, 140, 145, 148, 149, 151, 153, 156, 178, 179, 184, 185, 190, 194, 198, 218, 219, 221, 222, 224, 234, 238, 241, 244, 258, 259, 280, 286, 293, 298, 321, 322, 359, 362, 366, 387, 403, 415, 419, 420, 421, 423, 426, 427, 430, 460, 482, 483, 491, 492, 495, 496, 497, 547, 550, 562, 586, 588, 590, 591, 592, 594, 595, 597, 598, 599, 601, 602, 604, 608, 611, 615, 616, 622, 639, 655, 683, 686, 690, 697, 703, 704, 705, 707, 712, 713, 726, 727, 789, 795, 797, 813, 840, 841, 842, 857, 885, 889, 890, 901, 903, 919, 920, 921, 923, 929, 945, 964, 997, 1017, 1021, 1023, 1030, 1033, 1037, 1041, 1045, 1116, 1118, 1120, 1123, 1158, 1161], "sketch": [21, 117, 126, 143, 149, 178, 185, 186, 198, 207, 208, 275, 297, 334, 338, 400, 401, 411, 423, 655, 754, 766, 964], "clearest": 21, "ach": 21, "bad": [21, 43, 118, 142, 145, 148, 155, 170, 178, 203, 209, 225, 226, 228, 237, 238, 253, 274, 275, 296, 310, 376, 419, 423, 437, 579, 645, 695, 706, 713, 731, 749, 750, 765, 777, 802, 805, 914, 915, 940, 942, 946, 947, 968, 987, 992, 994, 1007, 1008, 1019, 1026, 1037, 1067, 1095, 1148], "earliest": 21, "noth": [21, 43, 63, 117, 136, 145, 146, 148, 151, 156, 161, 175, 186, 205, 218, 244, 297, 351, 390, 397, 421, 439, 446, 550, 629, 663, 670, 683, 697, 700, 765, 775, 793, 795, 829, 879, 894, 902, 903, 918, 920, 942, 964, 969, 995, 1002, 1014, 1035, 1037, 1043, 1128, 1135, 1137], "jump": [21, 45, 104, 145, 387, 391, 550, 697, 700, 707, 836, 889, 968, 1103], "outest": 21, "level": [21, 78, 146, 147, 157, 215, 221, 231, 234, 255, 288, 304, 341, 365, 391, 397, 437, 440, 442, 443, 449, 457, 465, 676, 677, 748, 779, 781, 793, 800, 809, 833, 894, 901, 910, 914, 973, 981, 994, 1002, 1014, 1035, 1045, 1070, 1074, 1104, 1107, 1117, 1123, 1150], "cleanup_stage1": 21, "screenplai": [22, 60, 139, 148, 169, 173, 225, 237, 246, 264, 272, 274, 285, 293, 296, 297, 300, 301, 306, 307, 314, 330, 438, 454, 462, 533, 536, 539, 542, 545, 548, 551, 554, 590, 591, 611, 754, 757, 762, 767, 771, 773, 809, 812, 815, 818, 962, 966, 970, 1038, 1125, 1132, 1136, 1138, 1141], "dies": [23, 154, 155, 160, 163, 164, 165, 173, 179, 189, 190, 194, 202, 209, 226, 228, 234, 235, 238, 330, 335, 348, 1143, 1145, 1146, 1147, 1152, 1158, 1159, 1161, 1165, 1166], "einreichungsunterlagen": 23, "diesem": [23, 155, 189, 1145, 1162], "formular": 23, "projekten": [23, 1159, 1160], "mehrer": [23, 1152], "projektpartn": 23, "muss": [23, 169, 179, 189, 194, 235, 330, 335, 1143, 1145, 1152, 1159], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 154], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 160, 190], "soll": [23, 155, 181, 210, 249, 1142], "punkt": [23, 155, 165, 181, 191, 235], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 155, 164, 178, 181, 189, 194, 238, 249, 379, 387, 505, 677, 683, 779, 937, 938, 955, 1097, 1117], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 207], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 63, 68, 114, 126, 145, 146, 149, 153, 161, 163, 167, 169, 183, 185, 187, 196, 205, 206, 208, 212, 215, 218, 219, 221, 226, 229, 234, 241, 244, 246, 259, 262, 264, 266, 271, 273, 276, 280, 302, 308, 322, 337, 376, 437, 439, 445, 763, 791, 799, 824, 825, 833, 834, 836, 839, 841, 882, 901, 910, 918, 919, 924, 927, 929, 930, 933, 935, 938, 939, 961, 964, 968, 971, 988, 994, 995, 1064, 1090, 1092, 1103, 1128, 1143, 1160, 1161], "wer": [23, 154], "unser": [23, 182, 190, 1143], "motiv": [23, 28, 97, 836, 855, 953, 1000, 1001], "300": [23, 165, 167, 179, 215, 218, 221, 226, 228, 234, 238, 241, 259, 280, 286, 302, 308, 322, 353, 355, 357, 373, 397, 585, 586, 587, 588, 589, 591, 592, 593, 594, 608, 770], "zeichen": [23, 228], "lebe": 23, "einerseit": [23, 160], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1160], "andererseit": [23, 160], "haupts\u00e4chlich": [23, 190, 1158], "unternehmen": 23, "halt": [23, 110, 111, 189, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 830, 888, 903], "bringen": [23, 1143], "schulungsunterlagen": [23, 1142], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 80, 107, 114, 117, 134, 146, 153, 162, 165, 167, 169, 170, 176, 178, 179, 182, 183, 185, 187, 198, 202, 207, 224, 226, 232, 246, 251, 253, 264, 268, 271, 272, 274, 275, 283, 288, 289, 297, 300, 304, 305, 310, 311, 316, 337, 348, 376, 387, 397, 398, 401, 415, 421, 423, 439, 444, 468, 483, 527, 533, 568, 582, 595, 627, 630, 654, 727, 743, 749, 750, 797, 836, 896, 957, 981, 983, 987, 992, 997, 999, 1002, 1003, 1014, 1026, 1040, 1090, 1095, 1097, 1101, 1120, 1128, 1129, 1143, 1150, 1151], "darstellt": 23, "wen": 23, "nutzen": [23, 1161], "400": [23, 143, 148, 165, 179, 189, 218, 221, 263, 280, 298, 439, 608, 1052, 1055], "stellen": [23, 160], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1142], "bereiten": [23, 189], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 914, 1017], "gel\u00f6st": [23, 179], "500": [23, 189, 196, 215, 218, 221, 263, 308, 608, 894, 921, 1052, 1055], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1145, 1155, 1164], "aufeinand": [23, 884], "explizit": [23, 163, 173, 179, 189, 249, 276, 1145, 1146, 1162], "abh\u00e4ngigkeitsbeziehungen": [23, 1155], "fehlen": 23, "extrem": [23, 146, 205, 226, 234, 241, 244, 266, 330, 335, 398, 437, 590, 659, 707, 797, 824, 825, 1107, 1143, 1155], "verringert": 23, "zusammenarbeit": [23, 1142], "trainern": 23, "fehlend": [23, 165], "aggregierbarkeit": 23, "bzw": [23, 154, 163, 169, 173, 195, 348, 1152, 1159, 1161], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 179, 964, 1113], "librari": [23, 63, 71, 74, 78, 85, 97, 103, 104, 106, 108, 110, 111, 114, 126, 146, 148, 157, 165, 167, 169, 174, 175, 176, 183, 185, 187, 206, 208, 215, 221, 231, 234, 238, 250, 251, 262, 264, 288, 289, 304, 305, 311, 331, 332, 333, 348, 349, 352, 353, 362, 370, 393, 410, 420, 427, 433, 443, 444, 448, 449, 451, 452, 461, 475, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 515, 522, 541, 555, 556, 600, 606, 610, 618, 619, 620, 622, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 672, 677, 703, 728, 748, 749, 750, 775, 827, 830, 831, 893, 914, 915, 916, 921, 922, 924, 931, 932, 934, 939, 942, 948, 951, 954, 956, 968, 971, 972, 973, 974, 976, 977, 978, 979, 981, 983, 1018, 1020, 1035, 1037, 1040, 1107, 1124, 1137, 1145, 1147, 1149, 1150, 1161, 1163], "anfangen": 23, "geben": [23, 1146, 1147], "trainingsunterlagen": 23, "ging": [23, 154, 348], "funktioniert": [23, 179, 228], "projektergebni": 23, "basiert": [23, 249, 1143, 1146, 1155, 1162], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 173, 1142, 1152], "eigentlich": [23, 165, 179, 1143, 1146], "kern": 23, "begleitet": [23, 181], "meinem": [23, 155, 164, 190, 885, 1158], "eigenen": [23, 1152, 1159], "quasi": [23, 169, 173], "spin": [23, 727, 800, 834], "off": [23, 115, 119, 145, 147, 148, 151, 156, 167, 178, 198, 241, 376, 379, 418, 426, 427, 442, 448, 449, 504, 505, 510, 550, 630, 683, 718, 791, 802, 828, 853, 881, 894, 901, 903, 929, 938, 947, 957, 964, 1023, 1041, 1075, 1100, 1153], "anwendbar": [23, 1165], "klarer": 23, "bezug": [23, 235], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 154, 173, 179, 189, 190, 1142, 1158], "gehen": 23, "folgenden": [23, 173, 348, 885], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1144, 1152, 1159, 1162], "klaren": 23, "mehrwert": 23, "technologi": [23, 218, 955, 971, 1052], "infrastruktur": [23, 1143, 1152, 1159], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 181], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 78, 163, 173, 182, 208, 224, 453, 512, 901, 903, 1121, 1128, 1129, 1164, 1166], "jeglich": [23, 1152], "art": [23, 32, 45, 983, 1151], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 190, 1158], "erm\u00f6glicht": [23, 181, 348], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 160, 1142], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 154, 165, 169, 179, 228, 325, 348, 1143, 1146, 1147, 1152, 1166], "commun": [23, 63, 72, 73, 74, 78, 81, 83, 87, 112, 131, 134, 146, 161, 170, 178, 193, 262, 297, 327, 336, 337, 413, 457, 728, 729, 749, 750, 756, 797, 809, 830, 893, 894, 901, 902, 903, 918, 923, 934, 939, 948, 955, 958, 964, 969, 1003, 1091, 1094, 1111, 1148, 1151, 1153, 1162, 1163], "trainerinnen": 23, "kann": [23, 37, 154, 155, 163, 169, 173, 179, 189, 202, 209, 249, 302, 330, 335, 348, 1142, 1143, 1145, 1147, 1152, 1159, 1160, 1161, 1164, 1166], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 163, 165, 179, 325, 885, 1145, 1162, 1164, 1165], "die_der": 23, "adressat_in": 23, "je": [23, 32, 155, 189], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 154, 173, 189, 241, 325, 348, 1142, 1143, 1144, 1152, 1154, 1155, 1161, 1162], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 169, 1152, 1159], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 165, 179, 181, 202, 241, 298, 348, 1143, 1145, 1147], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 190, 235, 1158], "zielgruppen": 23, "beziehung": [23, 173], "zueinand": 23, "stehen": [23, 179, 1164], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 154, 165, 173, 179, 189, 194, 196, 215, 218, 226, 228, 231, 234, 241, 244, 259, 266, 276, 280, 286, 298, 302, 325], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 226, 330, 335, 1152, 1159], "jeweiligen": [23, 1142], "sein": [23, 155, 163, 164, 181, 189, 190, 202, 228, 266, 1143, 1145, 1158, 1159, 1161, 1164, 1165, 1166], "dann": [23, 155, 165, 173, 179, 190, 228, 234, 235, 241, 276, 348, 1143, 1155, 1158, 1166], "einzelnen": 23, "aussieht": [23, 1144], "erst": [23, 173, 189, 202, 228, 235, 241, 259, 298, 325, 1143, 1145], "bestandteil": [23, 1164], "n": [23, 35, 38, 40, 50, 63, 111, 148, 157, 165, 166, 167, 173, 179, 189, 194, 196, 197, 205, 207, 210, 211, 212, 215, 218, 219, 221, 224, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 270, 276, 280, 298, 302, 308, 321, 322, 323, 325, 330, 352, 353, 355, 359, 361, 363, 365, 367, 372, 375, 385, 387, 393, 394, 398, 403, 411, 415, 420, 439, 440, 447, 514, 547, 566, 572, 590, 636, 637, 640, 641, 643, 644, 647, 648, 649, 650, 651, 652, 660, 662, 677, 750, 775, 811, 830, 834, 844, 854, 857, 870, 886, 888, 889, 903, 915, 917, 918, 919, 920, 921, 927, 928, 930, 955, 961, 965, 968, 971, 977, 983, 987, 989, 1014, 1015, 1017, 1032, 1034, 1039, 1040, 1045, 1046, 1090, 1092, 1128, 1140], "l\u00f6sen": 23, "wollen": [23, 37, 194, 348, 1147, 1152, 1155, 1159, 1161], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 61, 112, 138, 149, 152, 161, 265, 268, 391, 432, 433, 740, 770, 797, 799, 809, 901, 903, 1030, 1160, 1166], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 102, 107, 114, 148, 160, 161, 173, 175, 182, 183, 186, 206, 219, 224, 236, 255, 271, 273, 293, 329, 330, 335, 447, 451, 456, 458, 462, 464, 469, 479, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 501, 541, 547, 556, 560, 562, 564, 565, 567, 568, 569, 571, 573, 583, 598, 599, 616, 626, 628, 629, 641, 652, 655, 658, 659, 661, 662, 665, 666, 677, 679, 680, 681, 683, 685, 686, 689, 690, 691, 692, 698, 699, 700, 713, 714, 715, 718, 719, 727, 729, 734, 736, 738, 740, 750, 791, 826, 827, 832, 846, 852, 893, 910, 1015, 1123, 1140, 1162], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 211], "land": [23, 445, 735], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 62, 114, 128, 148, 151, 156, 166, 176, 179, 182, 184, 190, 207, 218, 222, 226, 228, 231, 234, 256, 263, 280, 300, 375, 406, 431, 715, 766, 772, 807, 834, 842, 853, 854, 856, 857, 881, 894, 901, 903, 922, 959, 968, 971, 981, 989, 1026, 1028, 1052, 1103, 1107, 1111, 1123, 1128, 1135, 1151, 1158], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 146, 753, 781], "grupp": [23, 194, 339, 885], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 210, 328, 329, 1142], "fl\u00fcchtling": 23, "posit": [23, 29, 63, 112, 153, 179, 182, 183, 185, 187, 189, 194, 202, 206, 215, 222, 226, 231, 232, 234, 241, 244, 255, 258, 265, 268, 270, 272, 274, 275, 278, 280, 284, 286, 290, 293, 296, 297, 300, 301, 302, 308, 316, 361, 398, 411, 550, 591, 598, 607, 608, 731, 750, 857, 894, 902, 918, 919, 923, 964, 992, 993, 996, 1037, 1038, 1040, 1041, 1042, 1093, 1108, 1116, 1130, 1135], "zielgruppentyp": 23, "350": [23, 218, 221, 266, 280, 308, 1052], "bereitet": 23, "vor": [23, 154, 155, 169, 179, 191, 226, 1155, 1164], "lt": [23, 32, 35, 36, 148, 153, 165, 168, 173, 174, 179, 184, 189, 194, 196, 202, 205, 210, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 324, 325, 326, 503, 520, 522, 555, 600, 606, 610, 619, 622, 623, 652, 750], "zielvorgaben": 23, "basierend": [23, 165, 1142, 1147], "existierendem": 23, "f\u00fchrt": [23, 155, 1162], "jederzeit": [23, 160, 169, 348], "\u00fcberblick": [23, 169, 173, 235, 249, 348, 349, 1142, 1150, 1152, 1158, 1159, 1162, 1164], "behaltend": 23, "behandelten": 23, "fragen": [23, 181, 197, 330, 335, 348, 1142, 1152, 1159], "antworten": [23, 181], "info": [23, 156, 263, 264, 427, 431, 432, 433, 439, 440, 442, 565, 714, 772, 902, 942, 972, 973, 1128], "bed\u00fcrfni": [23, 154], "schulungsagenden": 23, "erstellen": [23, 348, 1147, 1152], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 64, 154, 163, 164, 165, 179, 189, 190, 209, 234, 238, 1152, 1158, 1159, 1166], "erwartet": [23, 155, 179], "w\u00e4hrend": [23, 1142], "einzugehen": [23, 181, 1165], "geplanten": [23, 1142], "verlassen": [23, 819], "birgt": 23, "chao": [23, 855, 1026], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 154], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 157, 250, 251, 253, 310, 311, 653, 657, 683, 695, 722, 747, 749, 750, 772, 835, 902, 940, 949, 955, 1003], "inklus": [23, 166, 179, 189, 202, 1142, 1147, 1152], "betroffen": 23, "eu": [23, 32], "20000": [23, 145, 221], "erkennung": 23, "abstand": 23, "erfordert": [23, 1152], "vgl": [23, 179, 1162, 1165], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 169, 179, 189, 819, 1142, 1143, 1152, 1155, 1161, 1166], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 310], "besten": [23, 169, 235, 1145], "einsatz": [23, 1143], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1145], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 63, 161, 178, 316, 882, 1019, 1023, 1102, 1121], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1143, 1161], "neue": [23, 179, 189, 221, 249, 298, 325, 348, 1162], "verliert": [23, 1166], "aufbaubeziehungen": 23, "verlangt": [23, 1142], "grundlag": 23, "folienmateri": 23, "meist": [23, 1161], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 165, 1142], "unm\u00f6glich": 23, "macht": [23, 163, 165, 169, 173, 179, 185, 189, 231, 235, 325, 1145, 1152, 1159, 1166], "artefakttypen": 23, "livehack": [23, 24, 60, 114, 139, 165, 171, 173, 182, 183, 190, 209, 222, 224, 225, 237, 246, 251, 253, 254, 262, 265, 272, 274, 279, 285, 290, 293, 296, 297, 300, 301, 306, 307, 314, 330, 348, 438, 454, 461, 533, 748, 750, 762, 799, 1038, 1125, 1132, 1158], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 118, 154, 179, 190, 196, 1158], "zielt": 23, "darauf": [23, 154, 165, 1142, 1145], "transpar": [23, 29, 37, 781, 783, 833, 1108], "wiederzuverwenden": 23, "sodass": [23, 37, 173, 1161, 1166], "aufgebrochen": 23, "schwer": [23, 169, 179, 348, 1152, 1159, 1164], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 154, 155, 165, 169, 181, 194, 209, 249, 348, 1143, 1145, 1146, 1147, 1159], "dorthin": 23, "m\u00fcssen": [23, 179, 330, 335, 1152, 1159], "unterst\u00fctzt": [23, 1166], "kursf\u00fchrung": [23, 348], "fragt": [23, 155], "unklarheiten": 23, "weist": [23, 154], "etwaig": 23, "verwandt": [23, 1145], "hin": [23, 348], "plausibl": [23, 148], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 190], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 179, 181, 1146, 1147, 1161, 1166], "keinen": [23, 154, 298, 1145], "einfluss": 23, "wahl": [23, 1166], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 163, 1143, 1152], "vorau": 23, "beziehungen": 23, "passt": [23, 189, 190, 1158], "ganz": [23, 154, 155, 164, 165, 169, 179, 181, 195, 196, 210, 227, 228, 348, 1146, 1147, 1161], "gut": [23, 154, 155, 179, 190, 348, 666, 1142, 1158], "y": [23, 111, 128, 157, 166, 167, 169, 196, 205, 211, 212, 218, 219, 221, 222, 234, 244, 247, 256, 259, 266, 276, 280, 286, 302, 308, 376, 382, 400, 403, 406, 407, 411, 423, 427, 439, 501, 511, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 571, 573, 575, 576, 583, 590, 598, 637, 658, 659, 660, 662, 677, 679, 680, 681, 698, 709, 718, 765, 766, 797, 798, 830, 844, 857, 859, 870, 876, 901, 902, 903, 977, 985, 991, 1049, 1052, 1100], "algorithmen": [23, 249, 1147], "automatisch": [23, 1162, 1166], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1147], "text": [23, 27, 39, 40, 60, 142, 156, 167, 178, 181, 186, 187, 194, 206, 207, 212, 219, 226, 228, 246, 249, 252, 259, 261, 280, 282, 372, 446, 750, 827, 889, 893, 920, 971, 1019, 1026, 1032, 1041, 1050, 1073, 1107, 1114, 1119, 1121, 1155], "restrukturierung": 23, "o": [23, 29, 32, 38, 63, 78, 85, 90, 97, 98, 100, 107, 110, 111, 114, 123, 125, 128, 139, 146, 148, 149, 156, 157, 165, 169, 173, 183, 185, 186, 187, 189, 194, 196, 197, 203, 206, 207, 211, 213, 216, 217, 218, 219, 222, 223, 224, 225, 230, 231, 235, 236, 237, 238, 240, 242, 245, 247, 249, 252, 256, 258, 261, 262, 263, 265, 266, 268, 271, 272, 275, 277, 278, 279, 281, 282, 284, 286, 296, 298, 300, 301, 306, 307, 308, 314, 315, 316, 317, 318, 319, 320, 321, 330, 335, 337, 348, 350, 352, 368, 383, 392, 398, 399, 403, 405, 409, 412, 415, 416, 425, 427, 429, 431, 432, 434, 435, 439, 440, 446, 451, 465, 492, 503, 514, 555, 573, 657, 695, 721, 727, 728, 729, 747, 748, 749, 750, 765, 766, 774, 775, 797, 804, 823, 824, 825, 826, 827, 828, 830, 831, 833, 834, 842, 854, 857, 861, 862, 864, 865, 868, 869, 871, 877, 885, 886, 890, 893, 894, 901, 902, 914, 924, 927, 928, 929, 930, 931, 934, 939, 940, 948, 951, 954, 955, 956, 965, 971, 972, 973, 977, 979, 983, 987, 988, 989, 992, 994, 996, 997, 998, 1002, 1018, 1021, 1024, 1026, 1032, 1040, 1047, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1100, 1108, 1109, 1123, 1128, 1135, 1145, 1152, 1165], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1142], "korrekt": [23, 1145], "vorbereitet": [23, 348], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 160, 1165], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1145, 1162], "aktuel": 23, "inhalt": [23, 179, 181, 211, 331, 819, 1142, 1166], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 167, 169, 1097], "kein": [23, 164, 165, 169, 179, 189, 196, 211, 247, 266, 325, 348, 1160], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 203], "erkl\u00e4ren": [23, 1145], "gew\u00fcnscht": [23, 179], "erreicht": [23, 154, 155, 1159], "hatt": [23, 154, 155, 169, 179, 181], "button": [23, 114, 145, 153, 232, 894], "gew\u00e4hlt": [23, 154, 155], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1161], "bearbeiten": 23, "daher": [23, 1166], "konvertiert": 23, "unten": [23, 118, 155, 169, 179, 1143], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 150], "angab": 23, "quellen": 23, "literatur": [23, 207, 570], "lightweight": [23, 136, 161, 178, 182, 198, 232, 234, 246, 658, 716, 719, 1095, 1107, 1148], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 62, 65, 68, 106, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 128, 136, 142, 146, 147, 151, 152, 153, 158, 165, 167, 169, 175, 178, 182, 185, 192, 197, 206, 225, 229, 232, 235, 262, 265, 272, 279, 311, 334, 335, 341, 343, 348, 349, 419, 426, 430, 438, 440, 441, 442, 445, 446, 448, 450, 453, 454, 455, 461, 501, 502, 511, 514, 574, 576, 577, 721, 750, 797, 836, 892, 894, 896, 901, 902, 913, 931, 971, 972, 973, 986, 987, 1048, 1054, 1081, 1083, 1093, 1094, 1096, 1097, 1101, 1109, 1111, 1125, 1127, 1131, 1132, 1137], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 63, 91, 123, 125, 146, 150, 152, 167, 169, 183, 185, 186, 187, 188, 195, 197, 198, 206, 207, 220, 236, 252, 259, 261, 267, 282, 283, 297, 303, 309, 318, 330, 333, 335, 337, 352, 556, 748, 750, 774, 793, 794, 809, 827, 830, 838, 893, 902, 903, 956, 964, 985, 992, 1045, 1144, 1152, 1154, 1159, 1161, 1165], "generatoren": [23, 169, 236, 348], "staticgen": 23, "learn": [23, 29, 65, 68, 70, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 129, 146, 148, 166, 167, 169, 178, 182, 186, 207, 216, 296, 300, 316, 331, 333, 437, 701, 750, 839, 894, 902, 956, 1018, 1019, 1093, 1097, 1101, 1109, 1130], "moodl": [23, 106, 109, 110, 111, 114, 153, 334, 336, 337, 638, 652, 750, 827, 831, 846, 852, 871, 877, 893, 978, 981], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 169], "hinblick": [23, 1154], "ihnen": [23, 155, 884, 1142, 1152, 1159], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1145], "schw\u00e4chen": [23, 1147], "konkurrierenden": 23, "relevant": [23, 169, 348, 1165], "anbiet": 23, "ziel": [23, 1143, 1159], "allumfassend": 23, "eh": [23, 32, 179, 189, 194, 202, 228, 234, 238, 241, 286, 308], "vielmehr": 23, "bietet": [23, 160, 163, 1161], "beim": [23, 154, 155, 165, 169, 179, 1145], "verfassen": 23, "kernthema": 23, "zwischen": [23, 163, 179, 189, 196, 202, 348, 1145, 1146, 1147, 1159, 1166], "benutz": [23, 1162], "vorgaben": 23, "existiert": [23, 179, 191], "wald": 23, "dass": [23, 154, 155, 163, 165, 169, 173, 179, 190, 194, 196, 210, 330, 335, 348, 1142, 1145, 1146, 1147, 1152, 1158, 1159, 1162, 1166], "beisteuert": 23, "eben": [23, 160, 163, 189], "\u00fcbergreifend": 23, "definiert": [23, 165, 179, 1142, 1145], "ansatz": 23, "mir": [23, 154, 155, 169, 179, 190, 194, 226, 330, 335, 348, 1145, 1158], "verfolgt": [23, 1159], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 142, 209, 225, 237, 348], "licht": 23, "lesen": [23, 163, 164, 165, 179, 191, 330, 335], "einig": [23, 155, 166, 181, 348, 1145, 1152], "plugin": [23, 148, 465, 702, 985], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 97, 101, 106, 109, 110, 111, 114, 128, 146, 148, 161, 182, 198, 208, 224, 240, 242, 250, 251, 253, 256, 262, 268, 271, 310, 330, 415, 421, 430, 433, 465, 503, 511, 600, 619, 623, 652, 655, 695, 703, 722, 749, 750, 775, 798, 802, 827, 830, 831, 893, 895, 901, 903, 910, 914, 915, 918, 922, 929, 932, 934, 951, 959, 969, 974, 981, 982, 986, 1024, 1111, 1115, 1130, 1148], "zentral": [23, 142], "ergebni": [23, 231], "niemand": 23, "doc": [23, 37, 39, 65, 115, 123, 125, 150, 152, 165, 166, 168, 198, 206, 213, 215, 221, 230, 231, 234, 238, 241, 256, 299, 315, 327, 330, 335, 338, 339, 350, 550, 753, 768, 774, 777, 857, 879, 937, 1040, 1106], "show": [23, 24, 27, 29, 43, 58, 63, 114, 120, 123, 126, 145, 146, 148, 149, 153, 174, 182, 185, 186, 198, 207, 215, 221, 224, 231, 232, 234, 262, 274, 275, 288, 296, 304, 310, 311, 315, 316, 334, 336, 337, 338, 341, 400, 440, 442, 451, 482, 498, 504, 550, 639, 735, 760, 779, 781, 813, 824, 825, 857, 879, 882, 884, 886, 894, 896, 901, 902, 903, 922, 953, 955, 959, 964, 968, 981, 983, 991, 1030, 1047, 1049, 1100, 1101, 1123, 1130, 1137, 1150], "revealj": 23, "option": [23, 31, 78, 140, 146, 147, 148, 152, 156, 161, 165, 170, 186, 198, 222, 234, 238, 246, 249, 250, 251, 259, 264, 268, 280, 288, 289, 297, 300, 304, 305, 310, 330, 350, 359, 360, 376, 387, 388, 427, 440, 443, 444, 452, 453, 459, 486, 514, 735, 750, 766, 817, 821, 824, 825, 833, 885, 903, 904, 906, 914, 927, 931, 965, 973, 1029, 1047, 1050, 1123, 1130, 1137, 1145, 1150, 1163], "webslid": 23, "tv": [23, 32, 153], "sicht": [23, 164, 235, 1145], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1145], "600": [23, 215, 221, 608], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 164, 179, 276, 348, 1143, 1147, 1160], "versagen": 23, "implementierung": 23, "solcher": [23, 163, 179], "featur": [23, 29, 42, 46, 55, 56, 78, 80, 112, 114, 126, 151, 153, 163, 174, 179, 182, 183, 185, 187, 192, 197, 206, 215, 221, 224, 231, 232, 234, 235, 237, 238, 277, 310, 332, 348, 349, 425, 429, 434, 435, 437, 438, 440, 629, 654, 657, 664, 671, 682, 696, 706, 707, 711, 715, 720, 728, 746, 747, 749, 750, 789, 797, 894, 902, 903, 923, 955, 965, 972, 973, 989, 1003, 1004, 1005, 1006, 1010, 1013, 1020, 1032, 1033, 1048, 1051, 1052, 1053, 1054, 1067, 1078, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1101, 1105, 1109, 1111, 1113, 1122, 1125, 1127, 1128, 1132, 1143, 1145, 1146, 1148, 1152, 1159], "indem": [23, 189, 331, 1152], "foku": [23, 348], "schulbetrieb": 23, "legen": [23, 884], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1155], "fett": [23, 179, 196], "datenbanken": [23, 202, 348], "webserv": [23, 902], "hintergrund": [23, 189], "redaktionel": 23, "arbeit": [23, 169, 1143], "offlin": 23, "laptop": [23, 147, 149, 156, 913], "zug": 23, "erledigen": [23, 1143], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1142], "sinn": [23, 173, 1145], "prinzip": [23, 1162, 1164, 1166], "kostenlo": 23, "genutzt": [23, 163], "weiterentwickelt": [23, 1147, 1152], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 164, 179, 190, 211, 226, 238, 298, 325, 1160], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 179], "sourcecod": [23, 163], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 62, 145, 146, 148, 149, 178, 181, 185, 190, 203, 218, 229, 232, 234, 241, 244, 259, 263, 266, 276, 280, 302, 308, 353, 365, 410, 454, 455, 462, 467, 481, 482, 513, 565, 570, 663, 693, 713, 768, 772, 797, 834, 872, 888, 953, 956, 957, 968, 969, 985, 1052, 1095, 1100, 1113, 1114, 1116, 1117, 1128, 1163], "reih": [23, 160, 173, 181], "direct": [23, 37, 39, 63, 114, 125, 143, 146, 207, 265, 268, 316, 387, 398, 433, 446, 573, 719, 756, 833, 890, 917, 919, 935, 937, 938, 973, 987, 1014, 1100, 1108, 1117, 1150, 1153], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 565, 714, 753], "pypi": [23, 129, 142, 178, 182, 197, 213, 229, 255, 1122, 1123, 1128], "installierbar": 23, "paket": [23, 163, 1143], "generiert": [23, 179], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 957, 1155], "obigen": 23, "bisherigen": [23, 1147], "aktuellen": [23, 189], "bereich": [23, 169, 348], "umfeld": 23, "projektantrag": 23, "bisher": [23, 142, 1142], "softwarebasi": 23, "grundlegend": [23, 191, 1147, 1152, 1159, 1161, 1164], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 61, 145, 169, 178, 213, 222, 232, 297, 329, 330, 334, 338, 344, 437, 553, 663, 721, 797, 1128, 1135], "kurz": [23, 154, 155, 179, 181, 190, 195, 210, 235, 1144, 1158, 1161], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1155], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 155, 1164], "projektinhalt": 23, "verdeutlichen": [23, 1143], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 164], "walkner": 23, "1983": [23, 556], "hallein": 23, "master": [23, 61, 128, 149, 152, 161, 331, 332, 793, 797, 886, 898], "scienc": [23, 28, 78, 153, 167, 178, 182, 187, 216, 285, 299, 332, 556, 609, 1020, 1099, 1100, 1101, 1102], "salzburg": 23, "consult": [23, 59, 62, 143, 146, 159, 197, 215, 221, 231, 234, 238, 336, 462], "isamberth": 23, "adnet": 23, "2000": [23, 202, 205, 221, 226, 238, 259, 439, 465, 957], "2002": [23, 221, 565, 714], "divers": [23, 170, 1144], "2005": [23, 556], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 181, 182, 203, 206, 221, 229, 255, 262, 270, 279, 301, 1095], "programmiererfahrung": [23, 1152, 1159, 1166], "bash": [23, 99, 114, 143, 153, 162, 186, 196, 198, 218, 226, 234, 241, 244, 252, 259, 261, 262, 266, 273, 276, 280, 282, 302, 308, 330, 331, 332, 335, 337, 349, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 705, 708, 728, 748, 749, 750, 820, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 838, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 882, 887, 888, 893, 916, 919, 922, 924, 926, 929, 932, 934, 935, 948, 950, 951, 954, 956, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 985, 992, 1073, 1143, 1154], "davon": [23, 154, 165, 1145, 1164], "teamleit": 23, "m\u00f6chten": [23, 1166], "ggf": 23, "kennenlernen": 23, "knackig": [23, 142], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 885], "millionen": 23, "ihren": [23, 179, 191], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 173, 348, 1142, 1155], "un": [23, 173, 181, 348, 775, 881, 1014, 1143], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 155, 189, 190, 348, 1145, 1158], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 165, 169], "mindesten": [23, 165], "vier": [23, 165, 179, 189, 194, 196, 211, 215, 218, 226, 228, 231, 238, 244, 256, 259, 263, 266, 276, 286, 298, 302, 325, 1152, 1165], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 708, 712], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 155], "wenig": [23, 164, 179, 249, 348, 1143], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 179], "erfolg": [23, 1145], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 160, 173, 885], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 179, 190, 1158, 1166], "bekundet": 23, "medien": [23, 1165], "berichtet": 23, "migrat": [23, 173], "zehn": [23, 189], "migrieren": 23, "verwenden": [23, 160, 173, 179, 185, 189, 194, 1165], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 154, 169, 179, 348, 1164], "eingesetzt": [23, 1143, 1160], "basisarbeit": 23, "workflow": [23, 112, 173, 207, 222, 770, 965, 1160], "datenstrukturen": [23, 191, 209, 230, 1147], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1045], "know": [23, 42, 59, 62, 65, 69, 80, 84, 126, 143, 145, 146, 147, 148, 151, 152, 153, 161, 166, 167, 170, 174, 175, 178, 182, 186, 197, 198, 205, 208, 265, 268, 272, 297, 332, 363, 365, 371, 376, 393, 403, 415, 417, 419, 421, 425, 426, 427, 429, 433, 434, 435, 437, 446, 452, 456, 457, 469, 506, 514, 541, 557, 559, 565, 567, 571, 590, 627, 630, 633, 654, 655, 657, 666, 668, 670, 693, 695, 704, 713, 715, 719, 729, 747, 749, 750, 752, 768, 775, 797, 836, 857, 894, 897, 901, 903, 914, 919, 921, 930, 940, 968, 989, 997, 1002, 1003, 1014, 1019, 1022, 1025, 1026, 1045, 1052, 1090, 1094, 1128, 1153], "welchem": [23, 165], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 190, 191, 1158], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1144, 1147, 1159, 1161], "200": [23, 142, 143, 165, 167, 179, 196, 198, 205, 212, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 263, 270, 280, 286, 298, 302, 308, 322, 327, 585, 586, 587, 588, 589, 591, 592, 593, 594, 608, 662, 775, 955, 1069], "stunden": 23, "webprogrammierung": 23, "css": [23, 143, 144], "150": [23, 165, 179, 189, 196, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 655], "kreativarbeit": 23, "erreichen": [23, 1159, 1162], "pers\u00f6nlich": [23, 348], "freund": 23, "ebenfal": [23, 1160], "t\u00e4tig": 23, "mich": [23, 154, 169, 189, 197, 348, 1142], "ermutigt": 23, "\u00fcberhaupt": [23, 1152, 1159, 1166], "starten": [23, 1164], "repr\u00e4sent": 23, "post": [23, 66, 93, 142, 146, 148, 150, 151, 152, 153, 156, 207, 222, 271, 363, 377, 461, 557, 894, 963, 965, 968, 1094], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 190, 1145], "projektbeginn": 23, "abschluss": [23, 155, 330], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 153, 834, 901, 910, 917, 956], "sachbearbeiter_in": 23, "social": [23, 45, 457, 464, 468, 481, 482, 483, 486, 492, 495, 496, 497], "media": [23, 78, 163, 797, 902], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 221], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 169], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 221], "frontendprogrammierung": 23, "4500": [23, 221], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 322], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 155, 263], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 330], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 221], "beantragt": 23, "differenz": [23, 241], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 182, 734, 885, 988], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 196, 202, 210, 266], "bleiben": [23, 155, 179, 189, 1152, 1159, 1162], "reich": [23, 179], "nein": [23, 190, 196, 202, 247, 256, 1158], "neben": [23, 169], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 63, 66, 110, 111, 118, 125, 142, 145, 146, 147, 148, 149, 151, 156, 163, 166, 168, 176, 182, 184, 205, 213, 215, 221, 226, 229, 231, 236, 238, 243, 244, 247, 262, 264, 266, 279, 280, 288, 297, 302, 304, 330, 335, 337, 348, 352, 359, 363, 364, 367, 378, 394, 396, 400, 406, 407, 410, 420, 423, 424, 432, 440, 443, 455, 462, 466, 481, 482, 483, 499, 503, 508, 511, 512, 514, 515, 527, 541, 555, 559, 562, 565, 567, 571, 580, 626, 627, 630, 632, 633, 637, 639, 644, 651, 659, 660, 668, 672, 683, 686, 689, 690, 691, 692, 702, 705, 713, 718, 719, 727, 728, 729, 731, 734, 749, 750, 751, 765, 775, 777, 779, 783, 785, 787, 789, 791, 793, 795, 797, 802, 805, 811, 816, 817, 823, 827, 830, 831, 832, 833, 835, 837, 840, 841, 854, 857, 893, 897, 905, 915, 916, 919, 920, 921, 922, 924, 926, 932, 933, 934, 939, 940, 947, 948, 950, 951, 954, 955, 956, 965, 968, 969, 971, 973, 990, 992, 993, 994, 999, 1005, 1007, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1036, 1037, 1041, 1043, 1046, 1047, 1052, 1070, 1074, 1095, 1100, 1108, 1111, 1116, 1117, 1129, 1130, 1131, 1150, 1154, 1162, 1163, 1165], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 154, 155, 164, 169, 185, 348], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 150, 151, 156, 514, 836, 857, 903, 1099], "group": [23, 29, 101, 102, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 139, 161, 166, 178, 183, 185, 194, 197, 198, 205, 211, 218, 226, 235, 238, 244, 247, 259, 273, 280, 283, 286, 308, 330, 343, 344, 348, 359, 384, 427, 428, 503, 533, 750, 797, 824, 825, 827, 830, 831, 832, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 879, 883, 884, 885, 886, 890, 893, 901, 913, 914, 922, 923, 924, 929, 932, 934, 948, 951, 956, 969, 992, 1073, 1128], "wirtschaftkamm": 23, "nehmen": [23, 155, 1144], "larg": [24, 30, 38, 78, 148, 151, 153, 178, 197, 198, 207, 218, 224, 265, 268, 406, 415, 417, 421, 427, 428, 467, 692, 701, 748, 791, 797, 971, 995, 997, 999, 1019, 1026, 1052, 1073, 1109, 1113, 1117, 1135], "amount": [24, 106, 110, 111, 146, 147, 148, 151, 157, 178, 185, 213, 263, 264, 427, 439, 570, 692, 693, 828, 830, 914, 931, 1019], "pdf": [24, 37, 171, 173, 178, 182, 185, 186, 188, 238, 252, 261, 262, 282, 283, 305, 329, 330, 333, 335, 338, 349, 857, 879, 880, 903, 935, 973, 1067, 1144, 1145, 1146, 1154, 1155, 1161, 1162, 1164, 1165, 1166], "Not": [24, 43, 47, 53, 80, 109, 148, 149, 150, 153, 156, 178, 181, 182, 222, 224, 225, 226, 239, 248, 275, 279, 367, 376, 398, 410, 413, 415, 421, 437, 440, 503, 520, 522, 555, 562, 564, 566, 571, 572, 640, 652, 672, 683, 687, 689, 690, 691, 709, 716, 719, 725, 730, 748, 750, 760, 768, 775, 779, 781, 895, 933, 953, 955, 957, 959, 969, 992, 994, 999, 1000, 1001, 1002, 1012, 1014, 1026, 1035, 1040, 1095, 1099, 1104, 1118, 1120, 1136, 1148], "satisfi": [24, 32, 182, 456, 572, 660, 672, 705], "colleagu": [24, 28, 157, 198, 417, 629, 997, 1014, 1026], "aren": [24, 143, 228, 238, 668, 858, 947, 957], "either": [24, 39, 42, 43, 146, 148, 156, 157, 262, 265, 268, 415, 482, 655, 663, 666, 727, 824, 825, 854, 857, 889, 903, 994, 1061, 1111, 1148], "nobodi": [24, 43, 146, 148, 167, 178, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 418, 420, 557, 598, 670, 752, 824, 825, 834, 849, 851, 857, 858, 910, 918, 1047, 1101, 1131, 1137], "doe": [24, 38, 45, 48, 49, 61, 69, 78, 83, 84, 110, 111, 112, 114, 126, 142, 145, 146, 147, 150, 151, 152, 153, 156, 157, 161, 166, 174, 178, 182, 184, 196, 205, 208, 221, 238, 241, 247, 265, 266, 268, 271, 273, 275, 297, 310, 330, 341, 357, 363, 371, 375, 376, 377, 378, 385, 394, 395, 404, 407, 410, 411, 413, 415, 417, 419, 421, 426, 427, 428, 431, 432, 433, 437, 439, 440, 441, 445, 451, 452, 455, 457, 460, 465, 469, 477, 479, 481, 507, 508, 509, 510, 511, 514, 515, 538, 547, 550, 557, 558, 559, 562, 565, 567, 568, 570, 573, 596, 603, 611, 617, 626, 629, 630, 636, 637, 644, 655, 660, 661, 663, 670, 672, 692, 694, 702, 703, 705, 709, 713, 714, 715, 718, 719, 721, 725, 726, 731, 746, 748, 760, 761, 765, 766, 768, 775, 789, 797, 802, 813, 823, 832, 836, 837, 839, 842, 890, 894, 901, 902, 903, 914, 919, 920, 922, 926, 929, 940, 944, 947, 953, 955, 956, 965, 969, 971, 972, 973, 974, 979, 983, 987, 988, 990, 992, 993, 994, 995, 997, 999, 1008, 1012, 1014, 1015, 1019, 1022, 1025, 1043, 1044, 1045, 1064, 1072, 1074, 1101, 1103, 1104, 1106, 1113, 1114, 1117, 1118, 1119, 1121, 1123, 1128, 1148, 1150], "even": [24, 29, 59, 62, 78, 112, 134, 146, 147, 148, 153, 157, 167, 168, 178, 182, 185, 186, 190, 192, 197, 203, 205, 206, 208, 209, 218, 222, 225, 226, 229, 232, 235, 237, 238, 240, 243, 244, 255, 265, 268, 279, 280, 298, 301, 308, 394, 403, 417, 423, 427, 455, 460, 556, 564, 567, 613, 660, 702, 705, 712, 721, 748, 750, 789, 797, 834, 853, 894, 902, 919, 920, 953, 955, 956, 972, 991, 1003, 1014, 1040, 1043, 1054, 1057, 1058, 1093, 1095, 1116, 1123, 1130, 1150, 1158], "tech": [24, 45, 145], "although": [24, 29, 78, 123, 125, 146, 148, 152, 157, 168, 178, 184, 208, 228, 238, 348, 511, 655, 656, 697, 719, 836, 839, 910, 990, 995, 1052, 1101], "gain": [24, 153, 265, 268, 427, 797, 836], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 145, 148, 194, 215, 221, 222, 231, 234, 241, 266, 280, 298, 300, 302, 404, 442, 457, 500, 565, 630, 683, 692, 705, 770, 781, 894, 902, 903, 942, 959, 968, 1014, 1024, 1037, 1067, 1077, 1100, 1134, 1135, 1138], "context": [24, 29, 59, 62, 110, 111, 146, 167, 170, 182, 185, 187, 189, 196, 227, 231, 232, 234, 238, 241, 247, 255, 259, 264, 274, 275, 276, 279, 286, 290, 293, 296, 297, 300, 301, 308, 348, 414, 476, 477, 491, 559, 565, 693, 714, 748, 750, 759, 764, 767, 769, 774, 777, 778, 779, 780, 783, 784, 788, 789, 790, 792, 793, 794, 801, 802, 803, 805, 806, 807, 808, 811, 812, 815, 817, 818, 830, 834, 893, 894, 917, 957, 968, 969, 996, 1005, 1093, 1104], "defin": [24, 53, 115, 117, 119, 120, 123, 124, 126, 139, 149, 166, 168, 183, 185, 187, 189, 194, 202, 205, 206, 208, 215, 219, 221, 224, 228, 231, 234, 238, 246, 248, 259, 270, 280, 297, 298, 310, 325, 336, 357, 362, 367, 372, 373, 376, 393, 394, 395, 396, 397, 398, 411, 419, 420, 421, 423, 427, 440, 441, 446, 447, 448, 465, 469, 477, 498, 499, 511, 533, 541, 558, 559, 560, 562, 564, 565, 567, 568, 571, 572, 573, 580, 583, 604, 608, 629, 636, 655, 656, 665, 666, 667, 668, 669, 672, 692, 697, 701, 710, 713, 718, 719, 741, 756, 758, 770, 834, 854, 894, 895, 903, 914, 921, 939, 961, 971, 973, 987, 989, 993, 995, 997, 1009, 1014, 1026, 1036, 1091, 1104, 1108, 1140, 1148, 1150, 1153], "solv": [24, 45, 80, 89, 114, 143, 146, 147, 176, 178, 182, 183, 185, 187, 198, 203, 216, 224, 229, 232, 243, 246, 268, 272, 279, 283, 285, 288, 300, 304, 316, 397, 439, 448, 654, 728, 735, 749, 750, 797, 836, 893, 934, 948, 981, 983, 985, 1014, 1090, 1095, 1101, 1150, 1151], "provid": [24, 27, 37, 58, 65, 68, 146, 148, 149, 150, 152, 153, 156, 157, 161, 174, 215, 221, 222, 231, 234, 238, 272, 288, 304, 413, 442, 447, 448, 457, 468, 476, 629, 692, 719, 797, 833, 836, 876, 902, 903, 910, 924, 956, 965, 997, 1006, 1024, 1037, 1100, 1122, 1130, 1150], "depth": [24, 178, 182, 203, 215, 221, 231, 232, 234, 417, 717, 999, 1095, 1099, 1100], "repres": [24, 146, 148, 170, 215, 221, 231, 234, 238, 259, 270, 316, 426, 460, 477, 479, 566, 748, 768, 793, 830, 833, 901, 903, 931, 1026, 1052, 1090, 1094, 1113, 1120, 1153], "own": [24, 28, 40, 43, 65, 110, 111, 146, 147, 149, 150, 156, 161, 174, 178, 224, 248, 253, 262, 272, 297, 310, 311, 417, 423, 438, 452, 460, 477, 482, 546, 547, 556, 646, 647, 649, 650, 664, 668, 671, 683, 693, 695, 707, 715, 730, 748, 749, 750, 797, 830, 832, 833, 842, 844, 845, 853, 854, 876, 886, 901, 902, 914, 921, 939, 944, 955, 956, 968, 987, 994, 1011, 1016, 1017, 1019, 1102, 1135, 1150, 1151, 1153], "yield": [24, 29, 165, 166, 179, 182, 183, 185, 194, 206, 213, 219, 223, 225, 227, 228, 234, 238, 243, 245, 255, 258, 259, 266, 274, 275, 276, 279, 280, 285, 287, 298, 301, 302, 308, 398, 467, 476, 683, 686, 689, 690, 691, 750, 992, 996, 998, 999, 1001, 1020, 1030, 1051, 1052, 1053, 1054, 1067, 1078, 1093, 1105], "multipl": [24, 35, 36, 59, 62, 76, 106, 110, 111, 146, 147, 149, 163, 178, 182, 185, 205, 206, 207, 219, 221, 238, 273, 297, 353, 355, 359, 360, 363, 372, 374, 377, 386, 393, 397, 415, 420, 433, 438, 445, 477, 491, 504, 559, 572, 630, 637, 650, 677, 683, 705, 707, 714, 722, 725, 729, 730, 748, 750, 766, 768, 774, 778, 779, 787, 788, 789, 797, 799, 801, 802, 805, 806, 812, 815, 818, 830, 833, 834, 837, 839, 844, 845, 890, 893, 902, 923, 939, 944, 964, 977, 1014, 1025, 1026, 1039, 1040, 1045, 1095, 1120], "artifact": [24, 152, 156, 170, 175, 288, 304, 433, 758, 971, 972, 973, 983, 1137, 1150], "complet": [24, 42, 63, 78, 114, 115, 125, 142, 145, 146, 167, 178, 186, 194, 203, 216, 219, 222, 229, 243, 244, 246, 273, 279, 285, 290, 297, 310, 315, 316, 397, 414, 427, 440, 452, 504, 513, 558, 559, 633, 702, 717, 748, 791, 797, 824, 825, 835, 897, 903, 918, 955, 992, 996, 1018, 1019, 1095, 1100, 1101, 1103, 1109, 1111, 1122, 1123, 1140, 1148], "prepar": [27, 112, 114, 124, 142, 145, 178, 235, 330, 348, 461, 502, 533, 595, 632, 964, 988, 1091, 1100, 1129], "base": [27, 29, 30, 42, 45, 53, 78, 80, 97, 107, 114, 123, 126, 138, 146, 148, 149, 161, 168, 173, 178, 179, 182, 185, 186, 189, 193, 196, 198, 208, 222, 224, 227, 231, 232, 236, 241, 243, 249, 256, 259, 264, 266, 270, 271, 272, 273, 274, 275, 280, 285, 296, 297, 298, 300, 301, 302, 308, 311, 326, 330, 334, 341, 363, 371, 398, 415, 433, 438, 439, 457, 461, 466, 467, 469, 476, 501, 513, 517, 533, 544, 586, 588, 589, 590, 591, 593, 594, 598, 630, 632, 633, 635, 677, 694, 695, 702, 707, 714, 718, 730, 734, 736, 738, 740, 744, 747, 749, 750, 770, 777, 781, 793, 797, 799, 848, 850, 890, 894, 953, 965, 969, 971, 972, 985, 986, 988, 996, 1003, 1005, 1010, 1011, 1051, 1057, 1073, 1093, 1102, 1103, 1117, 1147, 1148, 1151], "exist": [27, 38, 46, 47, 53, 55, 56, 109, 110, 111, 139, 142, 152, 157, 186, 198, 205, 271, 275, 315, 327, 330, 333, 415, 437, 439, 455, 460, 480, 483, 503, 514, 520, 522, 555, 565, 613, 648, 650, 659, 713, 748, 750, 797, 824, 825, 830, 832, 839, 848, 850, 859, 863, 864, 876, 893, 901, 903, 914, 919, 923, 929, 932, 934, 951, 958, 965, 983, 987, 988, 993, 994, 1003, 1008, 1043, 1045, 1063, 1104, 1112, 1113, 1123, 1128, 1130], "navig": [27, 1120], "through": [27, 34, 38, 61, 73, 78, 104, 143, 145, 146, 148, 153, 157, 161, 174, 178, 182, 184, 187, 198, 206, 207, 208, 213, 219, 272, 274, 275, 290, 293, 296, 301, 337, 341, 348, 367, 387, 406, 426, 430, 443, 452, 483, 505, 508, 574, 576, 577, 626, 627, 630, 633, 655, 670, 672, 697, 705, 709, 715, 719, 768, 795, 828, 836, 884, 894, 902, 903, 912, 965, 968, 969, 994, 999, 1002, 1017, 1019, 1022, 1057, 1102, 1148, 1149, 1153], "deviat": [27, 153, 166, 174, 183, 207, 238, 348, 797], "after": [27, 43, 142, 143, 146, 147, 148, 153, 156, 166, 175, 178, 185, 198, 205, 215, 221, 231, 234, 237, 238, 244, 259, 264, 271, 273, 280, 308, 316, 355, 363, 364, 397, 417, 424, 443, 445, 481, 482, 505, 512, 564, 567, 580, 615, 663, 665, 666, 668, 677, 683, 730, 748, 775, 779, 785, 837, 840, 857, 858, 890, 901, 941, 959, 964, 965, 968, 971, 990, 992, 994, 1019, 1020, 1024, 1060, 1073, 1091, 1099, 1108, 1120, 1129, 1130, 1135], "writeup": [27, 157, 983], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 59, 62, 65, 69, 78, 83, 86, 87, 97, 98, 99, 104, 107, 114, 117, 118, 123, 126, 143, 145, 146, 147, 148, 149, 150, 151, 152, 157, 161, 165, 166, 167, 168, 169, 170, 172, 174, 178, 179, 182, 183, 184, 185, 186, 187, 188, 197, 205, 207, 208, 222, 223, 224, 233, 238, 246, 252, 262, 265, 268, 272, 274, 275, 288, 293, 296, 304, 308, 310, 311, 315, 316, 322, 330, 333, 335, 337, 338, 341, 352, 360, 365, 375, 376, 378, 391, 400, 403, 410, 413, 415, 417, 418, 421, 422, 423, 427, 431, 433, 438, 439, 442, 447, 449, 456, 458, 460, 481, 482, 492, 498, 500, 509, 512, 533, 534, 537, 540, 543, 546, 549, 550, 552, 562, 565, 567, 568, 569, 570, 571, 573, 580, 583, 590, 626, 633, 642, 660, 663, 666, 672, 677, 683, 693, 704, 705, 713, 714, 715, 719, 722, 726, 728, 729, 734, 746, 748, 749, 750, 758, 761, 765, 768, 770, 775, 793, 800, 805, 810, 823, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 841, 842, 843, 846, 847, 848, 849, 850, 851, 852, 857, 872, 873, 875, 893, 894, 901, 902, 903, 905, 906, 907, 908, 909, 920, 921, 927, 928, 929, 930, 932, 934, 939, 940, 941, 942, 943, 948, 951, 954, 956, 957, 959, 960, 963, 964, 965, 967, 969, 972, 981, 982, 986, 988, 989, 990, 992, 994, 996, 997, 1000, 1001, 1005, 1006, 1014, 1018, 1019, 1037, 1043, 1047, 1052, 1055, 1063, 1090, 1094, 1102, 1104, 1111, 1120, 1128, 1130, 1134, 1135, 1137, 1139, 1150, 1153], "collect": [27, 29, 142, 145, 147, 190, 197, 206, 212, 213, 230, 232, 233, 234, 246, 255, 257, 264, 272, 274, 275, 279, 290, 293, 296, 297, 300, 301, 315, 426, 433, 544, 590, 705, 714, 726, 750, 797, 828, 900, 981, 992, 996, 1002, 1010, 1044, 1050, 1054, 1083, 1088, 1090, 1093, 1094, 1109, 1122, 1123, 1128, 1130, 1158], "question": [27, 29, 32, 35, 36, 38, 102, 114, 148, 153, 161, 166, 178, 182, 184, 206, 207, 208, 218, 219, 221, 222, 224, 244, 330, 337, 344, 372, 401, 407, 419, 438, 441, 445, 449, 502, 566, 626, 633, 721, 725, 750, 775, 789, 805, 824, 825, 827, 846, 852, 876, 893, 901, 903, 914, 918, 934, 953, 954, 987, 995, 996, 999, 1004, 1093, 1095], "ask": [27, 146, 151, 153, 161, 178, 181, 182, 247, 279, 330, 337, 437, 456, 457, 479, 498, 550, 562, 573, 694, 716, 853, 908, 910, 1014, 1095], "answer": [27, 45, 150, 153, 166, 178, 182, 184, 185, 208, 219, 226, 298, 308, 337, 441, 445, 502, 626, 633, 635, 705, 710, 729, 761, 805, 824, 825, 830, 842, 844, 845, 848, 850, 901, 903, 910, 914, 953, 956, 987, 994, 995, 999, 1006, 1023, 1026, 1095], "cover": [27, 78, 81, 115, 139, 153, 170, 178, 182, 186, 188, 206, 207, 219, 232, 271, 273, 301, 437, 456, 741, 901, 903, 985, 994, 996, 1019, 1067, 1090, 1095, 1099, 1100, 1122, 1128, 1151, 1153], "been": [27, 59, 62, 112, 145, 146, 147, 148, 150, 151, 152, 157, 161, 166, 167, 178, 186, 215, 221, 231, 234, 265, 268, 270, 280, 297, 327, 336, 396, 410, 411, 440, 451, 460, 477, 533, 692, 751, 793, 811, 817, 822, 832, 836, 840, 860, 894, 901, 903, 914, 923, 933, 944, 969, 972, 973, 990, 997, 1035, 1130, 1148, 1150, 1151], "further": [27, 143, 145, 152, 156, 172, 221, 253, 268, 297, 310, 311, 338, 403, 414, 452, 514, 534, 537, 540, 543, 546, 549, 552, 664, 695, 740, 749, 750, 768, 791, 797, 879, 904, 940, 960, 963, 967, 1002, 1134, 1139, 1153], "inform": [27, 28, 29, 106, 145, 148, 149, 151, 156, 165, 166, 167, 169, 174, 194, 215, 221, 231, 234, 259, 274, 275, 296, 300, 301, 414, 424, 431, 432, 442, 451, 719, 748, 756, 768, 832, 857, 890, 894, 901, 903, 905, 937, 993, 1021, 1095, 1103, 1108, 1123, 1130], "internet": [27, 65, 78, 145, 147, 150, 151, 153, 174, 186, 194, 222, 235, 274, 275, 290, 296, 300, 327, 439, 894, 895, 897, 955, 995, 1151, 1165], "subtract": [27, 215, 238, 270, 374, 477, 491, 705, 856, 956, 1006, 1014, 1026], "known": [27, 142, 147, 158, 198, 215, 221, 231, 234, 251, 253, 271, 288, 304, 327, 373, 375, 387, 394, 421, 427, 592, 768, 857, 986, 1102, 1150, 1151], "calcul": [27, 82, 85, 148, 182, 206, 215, 238, 373, 375, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 476, 506, 511, 513, 657, 662, 695, 722, 747, 749, 750, 939, 956, 997, 999, 1070, 1102, 1107, 1128], "minimum": [27, 63, 238, 677, 797, 992, 1098, 1099, 1100, 1101], "come": [27, 43, 78, 110, 111, 112, 118, 123, 125, 142, 143, 145, 146, 147, 148, 151, 152, 153, 156, 157, 168, 174, 175, 178, 198, 224, 251, 253, 264, 271, 272, 297, 310, 321, 327, 351, 353, 354, 370, 397, 433, 440, 477, 511, 593, 630, 633, 638, 652, 704, 707, 709, 719, 729, 750, 765, 797, 828, 830, 834, 840, 853, 857, 894, 901, 902, 903, 929, 955, 983, 994, 995, 999, 1017, 1018, 1019, 1020, 1026, 1037, 1045, 1047, 1052, 1057, 1075, 1086, 1103, 1106, 1111, 1124, 1151], "she": [27, 205, 630, 663, 832, 834, 1039, 1047], "who": [27, 29, 45, 117, 143, 146, 150, 153, 157, 176, 178, 224, 234, 259, 290, 348, 423, 427, 437, 442, 465, 482, 514, 635, 705, 715, 770, 797, 805, 824, 825, 832, 836, 842, 853, 894, 902, 903, 918, 929, 971, 988, 990, 996, 1018, 1094, 1109, 1121, 1128, 1148, 1151, 1153], "repetit": [27, 259, 857, 1148], "prone": [27, 372, 560, 570, 590, 663, 707, 785, 973, 1041, 1135, 1148], "possibl": [27, 59, 61, 62, 106, 112, 114, 126, 128, 133, 136, 145, 146, 153, 156, 161, 168, 178, 182, 198, 208, 215, 221, 224, 226, 231, 232, 234, 251, 253, 262, 271, 274, 275, 280, 297, 301, 311, 362, 373, 376, 393, 406, 413, 419, 423, 427, 428, 431, 437, 443, 452, 455, 457, 460, 465, 469, 477, 479, 514, 547, 557, 559, 560, 565, 572, 573, 591, 608, 649, 655, 656, 663, 677, 681, 694, 705, 713, 714, 715, 719, 775, 802, 832, 841, 866, 895, 896, 901, 902, 912, 915, 944, 992, 993, 994, 1002, 1007, 1015, 1017, 1026, 1035, 1040, 1042, 1043, 1045, 1094, 1095, 1104, 1116], "abl": [27, 28, 30, 43, 145, 146, 148, 149, 151, 153, 161, 178, 198, 205, 287, 417, 423, 449, 456, 460, 514, 662, 672, 824, 825, 842, 848, 850, 851, 894, 902, 903, 929, 965, 996, 1107, 1153], "fix": [27, 46, 63, 65, 76, 107, 125, 142, 146, 159, 161, 182, 203, 208, 218, 219, 224, 243, 246, 273, 274, 275, 296, 330, 355, 378, 421, 437, 439, 445, 482, 515, 527, 538, 550, 556, 575, 591, 641, 648, 669, 750, 765, 770, 774, 777, 778, 798, 799, 805, 806, 812, 815, 818, 841, 893, 897, 917, 927, 958, 968, 988, 990, 993, 1020, 1052, 1095], "inconsist": [27, 557, 1118], "easi": [27, 68, 117, 134, 146, 148, 149, 150, 151, 152, 153, 157, 166, 167, 170, 182, 228, 238, 311, 376, 391, 417, 433, 655, 672, 714, 734, 777, 779, 783, 795, 802, 836, 901, 902, 903, 930, 947, 965, 974, 988, 1014, 1018, 1026, 1035, 1037, 1101, 1128, 1129, 1153], "plain": [27, 119, 148, 208, 341, 533, 569, 572, 651, 704, 719, 800, 902, 993, 1006], "happi": [27, 65, 151, 178, 421, 565, 1100], "clear": [27, 43, 146, 148, 153, 165, 198, 208, 237, 298, 331, 332, 398, 423, 427, 442, 452, 458, 464, 571, 626, 659, 677, 714, 797, 805, 833, 836, 857, 917, 991, 1006, 1026, 1028, 1099, 1100, 1130], "front": [27, 78, 143, 153, 178, 234, 280, 427, 608, 727, 1151], "later": [27, 80, 115, 125, 145, 146, 149, 156, 167, 178, 300, 353, 357, 363, 365, 367, 423, 427, 433, 440, 559, 560, 562, 574, 576, 577, 611, 666, 697, 700, 756, 758, 760, 765, 781, 783, 793, 800, 839, 901, 923, 939, 940, 942, 953, 957, 1007, 1015, 1025, 1028, 1030, 1108, 1114], "menu": [27, 142, 186, 797, 1143], "mine": [28, 145, 146, 149, 157, 174, 178, 182, 348, 547, 797], "hi": [28, 45, 161, 166, 178, 182, 185, 203, 229, 232, 420, 509, 1007, 1095], "data": [28, 29, 49, 70, 73, 78, 89, 108, 110, 111, 121, 126, 146, 147, 148, 149, 153, 156, 165, 167, 169, 178, 182, 183, 187, 195, 197, 202, 212, 215, 216, 221, 222, 224, 231, 234, 238, 244, 259, 263, 264, 265, 266, 268, 271, 273, 274, 275, 280, 285, 288, 290, 293, 299, 302, 304, 308, 332, 333, 348, 362, 376, 383, 392, 399, 405, 406, 409, 411, 412, 416, 421, 425, 426, 428, 429, 434, 435, 438, 445, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 520, 522, 531, 555, 556, 558, 562, 565, 578, 581, 583, 584, 595, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 657, 661, 664, 695, 707, 711, 719, 720, 728, 729, 735, 747, 748, 749, 750, 752, 755, 756, 787, 791, 795, 802, 810, 828, 834, 839, 841, 849, 895, 897, 901, 902, 903, 904, 914, 918, 920, 928, 933, 939, 942, 945, 947, 959, 983, 992, 994, 999, 1003, 1006, 1019, 1020, 1031, 1033, 1034, 1035, 1043, 1054, 1082, 1083, 1093, 1097, 1098, 1099, 1101, 1103, 1104, 1108, 1109, 1113, 1114, 1117, 1119, 1120, 1123, 1128, 1149, 1150, 1164], "convinc": [28, 376], "him": [28, 178, 182, 185, 203, 206, 229, 255, 279, 301, 704, 944, 1095], "wai": [28, 43, 50, 59, 62, 63, 65, 80, 81, 136, 142, 143, 145, 148, 153, 157, 158, 161, 167, 170, 174, 179, 181, 182, 184, 185, 186, 189, 190, 198, 203, 206, 218, 219, 224, 227, 228, 229, 231, 232, 236, 238, 246, 250, 251, 264, 265, 268, 272, 274, 275, 296, 297, 318, 322, 372, 376, 380, 381, 391, 397, 413, 414, 415, 423, 439, 440, 447, 457, 459, 460, 464, 480, 482, 501, 511, 515, 527, 533, 541, 557, 558, 565, 570, 573, 611, 613, 639, 645, 656, 672, 693, 703, 715, 719, 753, 766, 775, 789, 791, 797, 824, 825, 833, 839, 841, 844, 845, 894, 902, 903, 914, 921, 929, 955, 958, 968, 969, 973, 979, 983, 994, 1006, 1011, 1017, 1020, 1021, 1024, 1035, 1039, 1040, 1042, 1045, 1047, 1052, 1080, 1095, 1113, 1121, 1128, 1135, 1153], "go": [28, 40, 42, 59, 61, 62, 63, 65, 80, 97, 122, 125, 143, 146, 149, 150, 152, 153, 175, 178, 185, 189, 198, 207, 208, 224, 265, 268, 270, 300, 333, 437, 439, 457, 498, 659, 697, 709, 715, 727, 750, 758, 761, 765, 797, 799, 828, 840, 857, 859, 893, 894, 901, 902, 929, 932, 934, 939, 947, 951, 971, 974, 988, 1019, 1053], "relev": [28, 148, 221, 246, 363, 452, 514, 719, 797, 810, 901, 902, 994, 1094, 1110, 1123], "part": [28, 43, 80, 92, 106, 114, 139, 146, 147, 148, 149, 151, 153, 156, 167, 170, 178, 185, 186, 187, 208, 234, 246, 265, 268, 280, 332, 339, 353, 376, 410, 437, 460, 465, 479, 500, 514, 557, 655, 727, 748, 768, 775, 797, 817, 824, 825, 857, 892, 894, 901, 902, 903, 904, 919, 971, 1018, 1019, 1032, 1037, 1039, 1085, 1087, 1101, 1102, 1113, 1114, 1116, 1117, 1118, 1119, 1138], "natur": [28, 38, 75, 146, 148, 153, 178, 232, 238, 280, 348, 353, 371, 415, 456, 457, 609, 611, 655, 715, 902, 1030], "straighforward": 28, "approach": [28, 35, 38, 145, 146, 185, 289, 305, 355, 439, 443, 444, 452, 713, 740, 750, 836, 902, 955, 957, 1112], "would": [28, 57, 104, 107, 126, 145, 147, 148, 150, 151, 157, 166, 168, 175, 178, 182, 184, 197, 208, 221, 234, 238, 273, 275, 311, 387, 406, 413, 415, 426, 427, 441, 442, 445, 452, 455, 513, 527, 531, 565, 569, 571, 573, 620, 627, 636, 660, 666, 705, 715, 727, 746, 748, 797, 800, 824, 825, 848, 850, 853, 879, 902, 903, 913, 914, 930, 939, 947, 968, 987, 988, 992, 994, 995, 1015, 1026, 1030, 1034, 1037, 1043, 1047, 1052, 1073, 1100, 1103, 1113, 1120], "copi": [28, 36, 42, 50, 70, 97, 99, 101, 102, 114, 119, 123, 125, 136, 138, 142, 146, 147, 148, 149, 152, 157, 161, 167, 173, 176, 186, 193, 196, 208, 218, 224, 230, 234, 238, 241, 244, 250, 251, 252, 253, 256, 261, 262, 266, 270, 271, 273, 280, 282, 283, 286, 298, 311, 333, 363, 365, 377, 383, 392, 397, 399, 401, 405, 406, 409, 412, 416, 425, 429, 434, 435, 450, 482, 483, 496, 497, 498, 503, 520, 532, 533, 535, 544, 549, 551, 553, 555, 556, 557, 563, 573, 574, 576, 577, 586, 590, 600, 608, 617, 619, 622, 623, 635, 637, 643, 646, 649, 652, 657, 658, 659, 663, 664, 665, 683, 695, 697, 707, 711, 715, 716, 720, 728, 746, 747, 748, 749, 750, 772, 777, 797, 798, 813, 823, 824, 825, 826, 827, 828, 837, 857, 863, 864, 866, 867, 868, 869, 871, 877, 893, 904, 907, 909, 914, 926, 931, 932, 933, 934, 941, 942, 947, 951, 964, 981, 982, 983, 985, 987, 988, 992, 993, 1027, 1042, 1045, 1108, 1112, 1117, 1130, 1135, 1137, 1148, 1160], "dumb": [28, 45, 166, 197, 315, 768, 942, 944], "reason": [28, 61, 126, 133, 148, 161, 167, 178, 207, 226, 327, 410, 417, 419, 421, 427, 430, 443, 455, 574, 576, 577, 611, 655, 698, 717, 765, 781, 793, 797, 848, 850, 947, 955, 956, 969, 983, 988, 1026, 1035, 1037, 1100], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 78, 80, 81, 89, 106, 108, 109, 110, 111, 112, 117, 123, 126, 130, 133, 139, 140, 143, 145, 148, 149, 150, 152, 153, 156, 157, 161, 162, 163, 166, 167, 168, 170, 174, 176, 178, 182, 183, 184, 185, 186, 187, 198, 205, 206, 207, 208, 215, 218, 219, 221, 222, 224, 225, 227, 229, 230, 231, 232, 234, 238, 242, 246, 251, 253, 255, 262, 264, 265, 268, 270, 271, 272, 273, 275, 280, 283, 288, 292, 297, 298, 301, 302, 304, 311, 315, 316, 317, 321, 327, 330, 332, 333, 335, 336, 352, 354, 355, 357, 360, 362, 363, 365, 367, 370, 371, 374, 375, 376, 382, 385, 388, 393, 394, 397, 401, 403, 404, 406, 407, 408, 413, 414, 415, 417, 418, 421, 424, 427, 430, 437, 438, 440, 442, 445, 446, 451, 452, 455, 456, 457, 467, 477, 479, 482, 501, 504, 511, 512, 513, 514, 515, 518, 522, 527, 531, 541, 547, 550, 557, 558, 559, 560, 562, 565, 566, 569, 570, 571, 573, 580, 583, 590, 591, 592, 595, 605, 611, 612, 617, 620, 627, 629, 630, 632, 633, 637, 643, 644, 645, 646, 650, 656, 658, 659, 660, 663, 666, 667, 668, 672, 677, 694, 697, 698, 703, 704, 705, 707, 709, 713, 714, 715, 716, 718, 719, 721, 724, 726, 730, 731, 748, 750, 752, 753, 756, 766, 768, 770, 775, 781, 783, 785, 789, 791, 793, 795, 797, 802, 816, 823, 824, 825, 828, 830, 832, 833, 835, 836, 837, 839, 840, 842, 843, 848, 850, 857, 858, 860, 870, 875, 879, 881, 884, 894, 895, 901, 902, 903, 904, 910, 912, 914, 917, 919, 920, 923, 924, 931, 937, 939, 940, 942, 944, 945, 947, 950, 956, 957, 958, 959, 964, 968, 969, 971, 972, 973, 974, 977, 979, 983, 985, 986, 988, 989, 990, 992, 994, 995, 997, 999, 1003, 1006, 1007, 1008, 1009, 1013, 1015, 1018, 1019, 1022, 1023, 1024, 1025, 1026, 1028, 1031, 1035, 1043, 1045, 1046, 1047, 1049, 1057, 1062, 1090, 1094, 1095, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1111, 1113, 1114, 1117, 1119, 1120, 1122, 1128, 1130, 1131, 1134, 1135, 1138, 1150, 1151, 1153], "need": [28, 43, 45, 46, 47, 51, 55, 56, 61, 63, 104, 115, 116, 117, 119, 126, 146, 147, 148, 151, 153, 157, 161, 162, 167, 178, 185, 186, 188, 198, 208, 222, 224, 246, 290, 318, 330, 360, 362, 365, 385, 393, 394, 413, 419, 420, 426, 430, 432, 433, 437, 440, 442, 445, 447, 450, 452, 456, 457, 479, 509, 511, 512, 513, 514, 544, 550, 556, 557, 572, 592, 612, 626, 633, 637, 666, 672, 701, 715, 718, 724, 729, 731, 736, 750, 756, 770, 772, 785, 789, 793, 797, 836, 840, 853, 858, 894, 895, 896, 897, 901, 902, 903, 910, 914, 920, 921, 924, 927, 938, 942, 953, 974, 983, 987, 988, 989, 993, 998, 1011, 1019, 1020, 1022, 1025, 1034, 1039, 1050, 1051, 1100, 1101, 1108, 1122, 1130, 1151], "mechan": [28, 32, 89, 133, 146, 147, 170, 178, 182, 193, 208, 262, 455, 633, 944, 965, 1003, 1095, 1123, 1148, 1153, 1163], "where": [28, 53, 89, 109, 112, 114, 126, 131, 132, 142, 145, 146, 147, 148, 149, 151, 153, 156, 161, 166, 167, 174, 175, 178, 179, 182, 205, 206, 207, 208, 215, 218, 221, 222, 224, 231, 234, 238, 246, 255, 262, 280, 288, 297, 301, 304, 330, 335, 336, 371, 375, 385, 393, 394, 396, 397, 398, 411, 415, 426, 428, 438, 448, 461, 468, 499, 501, 512, 527, 533, 550, 569, 630, 633, 637, 655, 713, 714, 718, 791, 795, 797, 809, 839, 840, 854, 857, 860, 881, 886, 894, 901, 902, 903, 910, 915, 921, 923, 926, 929, 930, 946, 956, 957, 964, 968, 969, 972, 983, 987, 988, 995, 997, 999, 1002, 1024, 1026, 1036, 1077, 1095, 1102, 1107, 1128, 1150, 1153], "could": [28, 50, 57, 110, 111, 114, 117, 123, 125, 142, 143, 146, 147, 151, 153, 157, 167, 176, 178, 184, 198, 207, 208, 218, 228, 234, 262, 272, 274, 275, 293, 296, 308, 348, 376, 420, 441, 443, 456, 457, 481, 514, 565, 573, 637, 649, 655, 668, 669, 677, 692, 702, 717, 751, 768, 797, 810, 836, 854, 902, 903, 910, 921, 927, 964, 1026, 1077, 1091, 1107, 1117, 1123, 1135, 1148], "exchang": [28, 78, 175, 218, 308, 437, 465, 481, 511, 665, 666, 768, 841, 959, 1052, 1060], "meta": [28, 39, 138, 153, 797, 809, 857], "retriev": [28, 157, 683, 797, 999, 1047], "check": [28, 29, 38, 88, 97, 104, 112, 117, 131, 145, 146, 148, 149, 150, 151, 152, 157, 161, 166, 178, 182, 186, 190, 215, 221, 224, 231, 234, 238, 262, 275, 315, 338, 341, 363, 378, 387, 389, 390, 395, 403, 410, 414, 422, 424, 440, 504, 505, 527, 538, 550, 557, 565, 572, 573, 590, 611, 649, 665, 666, 677, 714, 748, 750, 770, 772, 777, 797, 813, 814, 816, 893, 894, 901, 902, 924, 929, 935, 938, 942, 972, 973, 978, 981, 983, 990, 1019, 1024, 1037, 1047, 1050, 1054, 1056, 1058, 1074, 1080, 1093, 1123, 1128, 1137, 1148, 1158], "everyth": [28, 42, 43, 98, 114, 123, 139, 146, 152, 153, 170, 178, 182, 186, 197, 205, 223, 224, 252, 261, 262, 265, 268, 282, 283, 297, 300, 341, 348, 365, 385, 388, 413, 427, 433, 437, 498, 556, 557, 559, 566, 570, 575, 580, 630, 672, 701, 705, 721, 728, 748, 749, 750, 766, 775, 795, 799, 802, 827, 830, 831, 833, 834, 858, 879, 893, 894, 895, 901, 902, 903, 920, 922, 923, 934, 947, 948, 954, 956, 959, 969, 991, 997, 1002, 1006, 1102, 1117, 1161, 1162, 1163, 1165], "clearli": [28, 43, 116, 161, 178, 415, 662, 683, 710, 797, 816, 930, 995, 1026, 1047, 1150], "intersphinx": [28, 143], "spinx": 28, "possibli": [29, 77, 85, 146, 178, 439, 573, 649, 663, 672, 677, 692, 704, 714, 726, 727, 842, 879, 902, 950, 985, 1111], "arrang": [29, 84, 110, 111, 150, 293, 514, 719, 830, 890], "subgroup": [29, 35, 38, 533], "refer": [29, 66, 90, 97, 110, 111, 114, 118, 145, 151, 152, 166, 168, 173, 182, 185, 187, 190, 191, 202, 203, 205, 207, 208, 213, 216, 217, 219, 220, 222, 223, 224, 229, 230, 231, 234, 238, 240, 242, 243, 245, 249, 257, 258, 260, 265, 267, 268, 272, 273, 275, 278, 279, 281, 284, 285, 287, 288, 296, 297, 299, 300, 301, 304, 306, 311, 314, 316, 317, 318, 319, 320, 321, 330, 394, 400, 407, 446, 503, 511, 520, 522, 533, 555, 556, 557, 558, 573, 574, 576, 577, 578, 581, 584, 600, 606, 610, 619, 622, 623, 624, 632, 637, 640, 643, 644, 647, 648, 649, 650, 651, 652, 663, 683, 695, 696, 704, 707, 711, 715, 720, 728, 747, 748, 749, 750, 756, 757, 759, 761, 764, 767, 774, 778, 788, 797, 801, 806, 809, 812, 815, 818, 840, 870, 879, 893, 894, 901, 902, 926, 965, 971, 987, 990, 995, 996, 1018, 1045, 1046, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109, 1128, 1130, 1148, 1149, 1150, 1158], "veri": [29, 35, 37, 38, 145, 146, 148, 167, 178, 182, 185, 187, 198, 203, 206, 229, 232, 255, 279, 301, 341, 348, 369, 376, 386, 387, 407, 423, 424, 426, 432, 439, 442, 457, 544, 555, 568, 583, 601, 629, 658, 659, 697, 700, 703, 714, 717, 735, 797, 802, 807, 835, 836, 895, 900, 902, 903, 920, 921, 937, 942, 957, 971, 999, 1007, 1023, 1026, 1030, 1031, 1037, 1041, 1045, 1050, 1095, 1102, 1103, 1124, 1133, 1140, 1148], "unawar": [29, 161, 178, 185], "simpli": [29, 61, 117, 140, 146, 149, 151, 153, 157, 161, 170, 234, 235, 274, 275, 296, 297, 376, 418, 460, 498, 565, 574, 576, 577, 626, 636, 647, 683, 704, 705, 710, 715, 729, 775, 829, 842, 901, 923, 927, 971, 987, 995], "interest": [29, 112, 147, 148, 161, 167, 178, 186, 330, 442, 457, 994, 996, 1114], "catalog": [29, 1151], "chapter": [29, 42, 126, 198, 207, 215, 221, 231, 234, 235, 533, 857], "subchapt": 29, "cluster_python": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1102, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132], "cluster_python_exercis": [29, 203, 330, 750, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "cluster_python_exercises_csv": [29, 750, 1051, 1052, 1053, 1054, 1093], "csv": [29, 44, 51, 53, 54, 55, 56, 78, 106, 117, 121, 182, 185, 194, 197, 203, 207, 208, 211, 213, 215, 216, 219, 220, 222, 226, 229, 232, 234, 240, 241, 244, 259, 263, 264, 266, 269, 270, 274, 275, 281, 286, 290, 293, 296, 298, 302, 308, 438, 750, 839, 842, 857, 879, 1007, 1010, 1013, 1047, 1054, 1088, 1089, 1090, 1091, 1093, 1095, 1098, 1099, 1100, 1101, 1109], "databas": [29, 42, 43, 55, 78, 143, 165, 166, 185, 207, 213, 218, 219, 222, 224, 225, 228, 232, 246, 274, 275, 296, 321, 457, 458, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 750, 853, 884, 905, 1013, 1052, 1054, 1073, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1109, 1113, 1124, 1140], "cluster_python_exercises_legaci": [29, 203, 330, 750, 1054, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093], "legaci": [29, 203, 330, 460, 750, 1054, 1062, 1063, 1064, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093, 1143], "cluster_python_exercises_userdb": [29, 750, 1054, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "seri": [29, 100, 147, 218, 222, 263, 264, 265, 266, 268, 270, 272, 297, 302, 308, 417, 438, 467, 750, 906, 1020, 1052, 1054, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1109, 1114, 1115, 1116, 1118, 1119, 1163], "cluster_python_exercises_herdt": [29, 750, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1093], "cluster_python_exercises_sensor": [29, 750, 1054, 1081, 1082, 1083, 1093], "sensor": [29, 69, 72, 73, 74, 78, 81, 84, 97, 106, 109, 114, 115, 117, 118, 119, 124, 126, 173, 182, 186, 222, 243, 254, 262, 271, 274, 275, 290, 293, 296, 300, 311, 330, 334, 336, 454, 459, 461, 469, 475, 476, 479, 480, 484, 490, 493, 499, 503, 504, 505, 506, 507, 508, 509, 520, 523, 524, 525, 526, 527, 528, 529, 530, 555, 563, 628, 665, 714, 715, 716, 739, 741, 750, 797, 893, 900, 932, 934, 951, 1007, 1054, 1082, 1093, 1159], "And": [29, 97, 99, 102, 103, 104, 106, 114, 121, 146, 147, 148, 150, 153, 176, 182, 185, 205, 208, 213, 215, 224, 226, 235, 243, 250, 251, 252, 254, 255, 257, 258, 260, 261, 264, 268, 278, 279, 281, 282, 284, 289, 298, 303, 305, 306, 309, 314, 438, 444, 450, 454, 461, 463, 475, 489, 503, 504, 505, 506, 507, 508, 509, 510, 513, 516, 520, 532, 533, 555, 563, 585, 593, 598, 608, 611, 619, 623, 629, 652, 664, 695, 696, 697, 706, 711, 718, 720, 728, 735, 738, 747, 748, 749, 750, 820, 826, 827, 830, 831, 835, 839, 847, 849, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 877, 887, 893, 900, 907, 909, 916, 922, 924, 929, 932, 934, 938, 948, 951, 954, 956, 959, 971, 973, 975, 976, 977, 978, 979, 982, 994, 996, 1001, 1004, 1005, 1006, 1010, 1011, 1035, 1051, 1052, 1053, 1054, 1067, 1078, 1088, 1089, 1090, 1093, 1105, 1109, 1115, 1122, 1148], "acquisit": [29, 117, 146, 173, 274, 275, 290, 293, 296, 297, 300, 547, 750, 1050, 1054, 1082, 1083, 1093], "cluster_python_bas": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "fundament": [29, 59, 62, 73, 90, 169, 178, 181, 183, 185, 187, 190, 192, 197, 200, 203, 206, 209, 219, 225, 229, 237, 240, 316, 317, 318, 319, 320, 321, 330, 348, 349, 437, 467, 750, 775, 996, 1003, 1004, 1005, 1006, 1010, 1029, 1038, 1043, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1115, 1122, 1123], "cluster_python_draft": [29, 750, 1048, 1093], "cluster_python_misc": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1048, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1102, 1108, 1109, 1111, 1115, 1122, 1125, 1132], "cluster_python_misc_panda": [29, 750, 1093, 1109, 1115], "panda": [29, 167, 178, 197, 203, 216, 229, 243, 246, 264, 267, 279, 296, 298, 300, 303, 307, 309, 348, 439, 750, 1019, 1093, 1095, 1098, 1101, 1109], "cluster_python_misc_ai": [29, 750, 1093, 1096, 1097, 1101, 1102, 1109], "machin": [29, 102, 110, 111, 114, 138, 148, 153, 167, 182, 198, 205, 206, 215, 216, 219, 221, 231, 234, 288, 296, 300, 304, 329, 333, 353, 369, 371, 379, 387, 415, 419, 433, 514, 515, 750, 797, 824, 825, 830, 833, 836, 886, 893, 907, 908, 909, 910, 912, 913, 914, 956, 971, 974, 981, 995, 1093, 1097, 1101, 1109, 1150], "artifici": [29, 182, 207, 265, 296, 300, 415, 649, 750, 914, 987, 1093, 1097, 1101, 1102, 1109], "intellig": [29, 146, 182, 222, 258, 265, 268, 278, 284, 296, 300, 336, 750, 768, 992, 996, 1093, 1097, 1101, 1102, 1109], "cluster_python_advanc": [29, 750, 996, 1003, 1004, 1005, 1006, 1010, 1048, 1051, 1052, 1053, 1054, 1067, 1078, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1105, 1109, 1111, 1122, 1125, 1127, 1132], "cluster_python_advanced_oo": [29, 750, 996, 1003, 1004, 1005, 1006, 1010, 1054, 1081, 1082, 1083, 1088, 1090, 1093, 1122], "object": [29, 63, 70, 73, 74, 78, 90, 97, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 120, 126, 139, 161, 163, 166, 168, 173, 178, 185, 194, 196, 197, 202, 205, 206, 208, 211, 213, 215, 218, 219, 222, 223, 224, 225, 226, 230, 231, 236, 237, 239, 241, 244, 248, 256, 260, 262, 263, 265, 266, 268, 270, 273, 276, 280, 286, 292, 298, 302, 308, 311, 317, 319, 320, 323, 325, 330, 331, 332, 333, 367, 393, 420, 438, 440, 445, 446, 450, 451, 452, 457, 459, 461, 466, 475, 477, 483, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 520, 522, 527, 533, 547, 555, 556, 558, 560, 563, 564, 566, 568, 569, 574, 576, 577, 578, 580, 581, 584, 600, 606, 610, 611, 612, 619, 622, 623, 626, 627, 629, 632, 633, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 655, 663, 664, 666, 667, 677, 683, 695, 697, 699, 700, 704, 705, 710, 711, 713, 715, 716, 719, 720, 726, 728, 729, 734, 735, 740, 744, 745, 747, 748, 749, 750, 840, 893, 971, 972, 973, 976, 977, 978, 979, 981, 987, 990, 992, 993, 995, 996, 999, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1013, 1014, 1016, 1018, 1019, 1020, 1026, 1035, 1037, 1043, 1044, 1054, 1081, 1082, 1083, 1088, 1090, 1093, 1100, 1114, 1116, 1118, 1119, 1120, 1122, 1128, 1148, 1149, 1151, 1153], "orient": [29, 70, 73, 74, 78, 97, 114, 126, 166, 185, 197, 206, 208, 213, 219, 222, 225, 236, 237, 246, 248, 260, 265, 268, 271, 273, 311, 317, 319, 320, 330, 331, 332, 365, 438, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 520, 522, 555, 556, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 719, 720, 728, 735, 747, 749, 750, 996, 1003, 1004, 1005, 1006, 1020, 1054, 1081, 1082, 1083, 1088, 1090, 1093, 1122, 1128, 1149, 1151], "cluster_python_advanced_multithread": [29, 750, 996, 1003, 1004, 1005, 1006, 1093], "cluster_python_db": [29, 750, 1051, 1053, 1054, 1093, 1105], "cluster_python_swdev": [29, 750, 1048, 1093, 1096, 1097, 1101, 1109, 1111, 1122, 1125, 1127, 1132], "cluster_python_swdev_pytest": [29, 750, 1093, 1122, 1127], "pytest": [29, 222, 232, 235, 243, 246, 255, 264, 272, 274, 279, 290, 293, 296, 297, 300, 301, 338, 439, 750, 1083, 1091, 1092, 1093, 1122], "python_python_5550_xml_etre": [29, 750, 1093], "xml": [29, 117, 142, 143, 293, 750, 1093, 1109], "elementtre": [29, 246, 750, 1093, 1109], "etre": [29, 246, 750, 1093, 1109], "python_basics_python_0220_for": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1051, 1052, 1053, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1109], "loop": [29, 32, 34, 38, 42, 59, 62, 89, 90, 97, 110, 111, 114, 117, 120, 126, 134, 139, 146, 161, 170, 182, 185, 187, 190, 191, 192, 195, 203, 205, 206, 207, 209, 213, 216, 219, 224, 225, 227, 229, 230, 235, 237, 239, 240, 242, 243, 245, 255, 258, 265, 268, 275, 278, 279, 284, 285, 293, 297, 301, 306, 307, 309, 311, 314, 316, 317, 318, 319, 320, 321, 322, 330, 335, 353, 356, 359, 368, 371, 383, 390, 391, 392, 399, 405, 409, 412, 413, 416, 417, 425, 429, 434, 435, 502, 503, 544, 555, 586, 591, 648, 655, 657, 683, 695, 718, 729, 747, 749, 750, 785, 795, 800, 814, 828, 830, 834, 841, 897, 919, 920, 921, 929, 955, 959, 965, 968, 969, 996, 997, 1000, 1001, 1006, 1018, 1051, 1052, 1053, 1054, 1056, 1058, 1064, 1066, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1105, 1109, 1111, 1147, 1148, 1149, 1158], "gt": [29, 32, 35, 36, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 118, 119, 120, 121, 122, 125, 135, 165, 168, 179, 184, 189, 196, 202, 203, 205, 210, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 316, 317, 318, 319, 320, 321, 324, 325, 330, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 444, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 671, 695, 696, 706, 711, 720, 728, 735, 747, 749, 750, 754, 757, 759, 762, 764, 767, 769, 773, 774, 776, 778, 780, 782, 788, 790, 792, 794, 801, 803, 806, 808, 812, 815, 818, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 900, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 936, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1105, 1108, 1109, 1111, 1115, 1122, 1125, 1127, 1132, 1133], "python_basics_python_0450_dictionari": [29, 90, 750, 996, 1018, 1054, 1067, 1078, 1093], "python_advanced_modul": [29, 750, 996, 1048, 1051, 1052, 1053, 1054, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1105, 1109, 1111, 1122, 1125, 1127, 1132], "python_exercises_csv_csv_modul": [29, 750, 1052, 1053, 1054, 1093], "python_basics_python_0139_commandline_argv": [29, 90, 203, 330, 750, 1018, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "argument": [29, 57, 63, 90, 97, 114, 139, 145, 148, 151, 165, 166, 179, 182, 194, 203, 206, 213, 215, 219, 221, 222, 224, 225, 227, 229, 231, 232, 235, 236, 237, 238, 240, 243, 258, 259, 262, 265, 268, 272, 274, 275, 278, 279, 280, 284, 285, 293, 296, 297, 300, 301, 302, 306, 307, 314, 330, 352, 353, 398, 405, 409, 412, 416, 425, 429, 434, 435, 439, 501, 533, 557, 567, 568, 657, 672, 692, 695, 705, 717, 747, 748, 749, 750, 755, 756, 857, 879, 893, 927, 929, 931, 934, 951, 989, 992, 996, 1018, 1020, 1021, 1038, 1046, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106, 1128, 1130], "sy": [29, 32, 90, 115, 123, 125, 147, 164, 166, 168, 169, 194, 196, 197, 203, 206, 212, 215, 219, 221, 226, 229, 231, 234, 235, 237, 238, 240, 241, 243, 256, 258, 259, 264, 265, 268, 274, 278, 279, 280, 284, 285, 296, 300, 302, 306, 307, 314, 315, 316, 323, 330, 426, 439, 498, 514, 515, 750, 752, 756, 777, 854, 883, 894, 901, 902, 903, 919, 920, 921, 923, 927, 928, 929, 930, 931, 933, 935, 937, 938, 952, 959, 961, 964, 968, 985, 995, 1002, 1017, 1018, 1037, 1045, 1047, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1120, 1128, 1143], "argv": [29, 42, 50, 90, 148, 165, 166, 169, 179, 197, 203, 206, 207, 212, 215, 219, 221, 224, 225, 229, 231, 234, 235, 237, 240, 243, 258, 264, 265, 268, 274, 278, 279, 284, 285, 296, 300, 306, 307, 314, 315, 323, 330, 404, 439, 440, 462, 501, 750, 901, 927, 928, 929, 930, 931, 935, 938, 952, 959, 968, 989, 995, 1002, 1018, 1047, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1135, 1140], "python_misc_csv": [29, 750, 1052, 1053, 1054, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1109], "python_advanced_python_1010_generators_yield": [29, 750, 996, 1051, 1052, 1053, 1054, 1067, 1078, 1093, 1105], "python_exercises_csv_csv_db": [29, 750, 1051, 1053, 1054, 1093], "sqlite3": [29, 85, 182, 213, 219, 225, 232, 750, 1053, 1054, 1093, 1104, 1105, 1109], "python_db_sqlite3": [29, 750, 1051, 1053, 1054, 1093, 1105], "dbapi": [29, 182, 213, 225, 750, 1051, 1053, 1054, 1093, 1105], "python_exercises_legacy_uniq_gener": [29, 750, 1054, 1067, 1078, 1093], "uniq": [29, 165, 166, 183, 185, 197, 203, 213, 216, 219, 225, 229, 235, 237, 240, 258, 265, 278, 279, 284, 285, 301, 306, 307, 314, 531, 750, 890, 1054, 1064, 1067, 1068, 1075, 1076, 1079, 1093], "python_exercises_legacy_uniq_funct": [29, 203, 750, 1054, 1064, 1067, 1068, 1075, 1076, 1077, 1078, 1079, 1093], "python_exercises_legacy_passwd": [29, 750, 1054, 1067, 1078, 1093], "pars": [29, 165, 202, 203, 213, 214, 216, 219, 225, 229, 234, 235, 237, 243, 246, 274, 279, 296, 300, 316, 321, 334, 750, 1048, 1054, 1067, 1078, 1093, 1095, 1120], "passwd": [29, 100, 101, 114, 186, 196, 205, 218, 219, 221, 225, 226, 229, 234, 235, 237, 241, 243, 244, 252, 259, 261, 262, 266, 276, 280, 282, 283, 302, 308, 748, 750, 827, 829, 832, 834, 837, 839, 841, 852, 871, 874, 876, 877, 879, 882, 884, 888, 890, 893, 894, 904, 905, 913, 914, 918, 919, 924, 930, 950, 964, 992, 994, 1041, 1045, 1054, 1067, 1078, 1093, 1123], "python_exercises_legacy_for_prim": [29, 203, 750, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "prime": [29, 38, 165, 166, 185, 189, 190, 192, 197, 203, 209, 213, 225, 229, 232, 237, 243, 258, 265, 278, 279, 284, 285, 306, 307, 314, 415, 750, 1054, 1064, 1067, 1068, 1070, 1075, 1076, 1077, 1078, 1079, 1093, 1158], "python_exercises_legacy_while_prim": [29, 203, 750, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093], "python_basics_python_0225_rang": [29, 90, 203, 750, 996, 1018, 1051, 1052, 1053, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1105], "python_exercises_legacy_function_prim": [29, 203, 750, 1054, 1064, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "python_basics_python_0150_datatypes_overview_compound": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1051, 1052, 1053, 1054, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "python_basics_python_0270_funct": [29, 90, 203, 750, 996, 1018, 1038, 1051, 1052, 1053, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105], "python_exercises_legacy_max_numbers_funct": [29, 203, 750, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "determin": [29, 102, 114, 139, 145, 169, 174, 176, 184, 185, 190, 192, 197, 203, 209, 213, 215, 216, 219, 225, 229, 235, 237, 240, 242, 243, 258, 265, 278, 279, 284, 285, 306, 307, 314, 633, 667, 668, 705, 750, 805, 827, 846, 847, 848, 849, 850, 851, 852, 889, 893, 902, 920, 957, 958, 988, 1054, 1056, 1057, 1058, 1061, 1064, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1123, 1158], "python_exercises_legacy_revert": [29, 203, 750, 1054, 1064, 1067, 1075, 1078, 1093], "revert": [29, 125, 146, 203, 750, 775, 793, 955, 1014, 1054, 1064, 1067, 1078, 1093], "line": [29, 34, 35, 36, 38, 63, 112, 118, 142, 143, 146, 148, 151, 161, 165, 168, 169, 182, 186, 196, 198, 202, 203, 205, 206, 211, 212, 215, 216, 218, 219, 221, 222, 224, 225, 226, 229, 231, 232, 234, 235, 237, 238, 241, 243, 244, 246, 247, 258, 259, 264, 265, 266, 268, 272, 276, 278, 279, 280, 284, 285, 286, 298, 302, 306, 308, 314, 321, 330, 353, 359, 360, 368, 372, 375, 377, 383, 392, 394, 399, 405, 409, 412, 416, 421, 425, 428, 429, 431, 434, 435, 439, 442, 445, 452, 482, 483, 633, 636, 639, 657, 695, 747, 749, 750, 766, 770, 777, 779, 797, 824, 825, 828, 837, 839, 841, 863, 884, 886, 888, 889, 890, 894, 898, 901, 902, 903, 945, 955, 986, 992, 997, 998, 1022, 1039, 1043, 1045, 1046, 1047, 1052, 1054, 1067, 1073, 1078, 1092, 1093, 1095, 1098, 1103, 1108, 1129], "python_exercises_legacy_wc": [29, 203, 750, 1054, 1064, 1067, 1075, 1078, 1079, 1093], "word": [29, 43, 65, 139, 146, 166, 174, 178, 182, 185, 192, 197, 203, 207, 213, 216, 224, 225, 229, 232, 234, 235, 237, 240, 242, 243, 250, 251, 253, 258, 265, 272, 278, 279, 280, 284, 285, 297, 306, 307, 310, 311, 314, 330, 335, 360, 413, 455, 460, 533, 633, 711, 720, 728, 749, 750, 837, 839, 886, 958, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1080, 1093], "charact": [29, 148, 164, 189, 194, 198, 203, 207, 211, 218, 224, 234, 241, 244, 262, 265, 280, 286, 302, 353, 354, 360, 368, 371, 377, 378, 383, 392, 399, 405, 409, 412, 415, 416, 420, 422, 425, 429, 434, 435, 620, 657, 695, 747, 748, 749, 750, 759, 764, 767, 774, 778, 788, 791, 799, 801, 806, 812, 813, 815, 818, 837, 839, 857, 879, 893, 901, 956, 1006, 1025, 1039, 1040, 1041, 1045, 1047, 1054, 1057, 1064, 1067, 1075, 1078, 1093, 1108, 1135], "python_basics_python_0500_fil": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1109], "python_exercises_legacy_max_numb": [29, 203, 750, 1054, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "python_exercises_legacy_python_0350_exercis": [29, 203, 750, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1093], "right": [29, 34, 35, 36, 38, 42, 63, 80, 84, 117, 139, 145, 146, 148, 151, 166, 186, 197, 198, 203, 208, 213, 226, 228, 234, 238, 246, 259, 272, 280, 316, 322, 354, 374, 375, 376, 382, 393, 423, 453, 504, 512, 559, 574, 576, 577, 655, 667, 683, 709, 714, 719, 731, 750, 758, 777, 781, 797, 816, 839, 840, 842, 857, 912, 942, 992, 1014, 1025, 1031, 1054, 1064, 1067, 1075, 1078, 1079, 1093], "justifi": [29, 166, 178, 203, 213, 234, 280, 354, 721, 750, 1019, 1054, 1064, 1067, 1075, 1078, 1079, 1093], "python_exercises_legacy_join_funct": [29, 203, 750, 1054, 1064, 1067, 1068, 1075, 1076, 1078, 1079, 1093], "join": [29, 35, 63, 157, 185, 203, 205, 206, 211, 213, 215, 218, 219, 221, 226, 230, 236, 244, 259, 266, 276, 280, 286, 302, 309, 315, 324, 439, 532, 655, 716, 722, 727, 729, 750, 940, 945, 968, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1093, 1128], "python_basics_python_0150_datatypes_overview": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "python_exercises_legacy_mixed_list_execut": [29, 203, 750, 1054, 1064, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "execut": [29, 44, 63, 108, 110, 111, 114, 139, 142, 146, 148, 156, 157, 161, 166, 173, 178, 185, 192, 198, 203, 213, 215, 216, 219, 221, 229, 231, 234, 258, 265, 278, 279, 284, 285, 288, 289, 304, 305, 306, 307, 314, 315, 316, 323, 330, 352, 353, 387, 389, 393, 415, 420, 424, 433, 441, 444, 445, 457, 476, 479, 486, 493, 498, 512, 541, 565, 580, 683, 748, 750, 795, 797, 823, 824, 825, 832, 834, 839, 844, 845, 853, 857, 904, 913, 942, 955, 969, 971, 972, 973, 974, 977, 981, 983, 987, 989, 995, 999, 1003, 1006, 1019, 1029, 1030, 1033, 1052, 1054, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1104, 1107, 1136, 1138, 1150, 1161, 1162], "python_exercises_legacy_mixed_list_interact": [29, 203, 750, 1054, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1093], "interact": [29, 63, 85, 122, 123, 125, 142, 153, 185, 186, 192, 203, 213, 215, 216, 219, 221, 229, 231, 234, 239, 258, 259, 265, 278, 279, 284, 285, 287, 306, 307, 314, 750, 857, 905, 910, 913, 923, 985, 1020, 1054, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093, 1100, 1108], "interpret": [29, 63, 142, 148, 166, 167, 178, 182, 185, 192, 203, 206, 213, 215, 216, 219, 221, 229, 231, 234, 238, 254, 255, 258, 264, 265, 278, 279, 280, 284, 285, 287, 296, 297, 301, 306, 307, 314, 330, 415, 450, 454, 461, 465, 475, 489, 503, 555, 750, 797, 881, 903, 924, 971, 972, 1019, 1020, 1021, 1022, 1052, 1054, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1093, 1095, 1108, 1130, 1151], "python_basics_python_0120_helloworld": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "world": [29, 78, 90, 139, 142, 143, 146, 151, 157, 176, 185, 189, 190, 192, 196, 203, 207, 209, 211, 213, 215, 216, 219, 221, 224, 225, 226, 228, 229, 235, 236, 237, 238, 240, 241, 243, 246, 258, 259, 265, 268, 278, 279, 284, 285, 298, 306, 307, 308, 314, 316, 317, 318, 319, 320, 321, 325, 330, 363, 368, 372, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 440, 445, 453, 476, 481, 483, 654, 657, 695, 721, 729, 747, 749, 750, 754, 757, 759, 762, 764, 767, 774, 778, 782, 788, 794, 799, 801, 806, 809, 812, 815, 818, 835, 848, 860, 893, 931, 942, 957, 958, 971, 983, 985, 987, 988, 989, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1022, 1023, 1029, 1032, 1034, 1038, 1039, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1100, 1105, 1108, 1109, 1115, 1122, 1144, 1148, 1158], "python_basics_python_0140_vari": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "python_basics_python_0160_boolean": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1029, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1109], "boolean": [29, 58, 84, 90, 166, 167, 183, 185, 187, 190, 191, 192, 203, 209, 213, 216, 217, 219, 220, 221, 225, 227, 229, 230, 235, 236, 237, 239, 240, 242, 243, 258, 265, 268, 278, 279, 284, 285, 306, 307, 309, 314, 316, 317, 318, 319, 320, 321, 330, 335, 359, 382, 398, 750, 944, 996, 1018, 1026, 1029, 1030, 1041, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1107, 1109, 1158], "python_exercises_legacy_python_1011_generators_yield": [29, 750, 1054, 1067, 1093], "fibonacci": [29, 166, 169, 185, 206, 219, 258, 272, 274, 275, 279, 285, 296, 297, 300, 662, 684, 750, 999, 1000, 1001, 1054, 1067, 1093], "python_exercises_legacy_distil": [29, 203, 750, 1054, 1064, 1067, 1078, 1093], "elimin": [29, 58, 139, 203, 225, 232, 234, 235, 237, 243, 258, 265, 278, 284, 285, 306, 314, 482, 527, 655, 718, 736, 750, 890, 997, 1054, 1067, 1078, 1093], "empti": [29, 38, 42, 48, 50, 146, 149, 156, 164, 184, 186, 203, 215, 218, 225, 226, 232, 234, 235, 237, 238, 241, 243, 244, 247, 258, 259, 264, 265, 266, 276, 278, 280, 284, 285, 302, 306, 308, 314, 325, 359, 411, 550, 559, 560, 564, 574, 576, 592, 593, 611, 629, 649, 655, 704, 714, 715, 727, 748, 750, 760, 797, 824, 825, 837, 841, 851, 888, 897, 910, 944, 964, 1002, 1043, 1054, 1067, 1068, 1072, 1078, 1093], "comment": [29, 34, 35, 36, 38, 44, 139, 148, 183, 203, 204, 206, 219, 225, 227, 231, 232, 235, 237, 242, 243, 258, 265, 267, 278, 284, 285, 306, 314, 330, 353, 398, 417, 445, 482, 483, 511, 750, 902, 1040, 1054, 1067, 1078, 1093, 1108], "python_basics_python_0210_indexing_sl": [29, 90, 750, 1018, 1054, 1067, 1078, 1093, 1109, 1115], "python_basics_python_0170_if": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1029, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1109], "statement": [29, 54, 90, 110, 111, 166, 178, 182, 183, 184, 185, 190, 192, 197, 203, 206, 207, 209, 213, 216, 219, 225, 229, 235, 237, 240, 243, 249, 255, 258, 265, 268, 272, 274, 275, 278, 279, 284, 285, 290, 293, 296, 297, 300, 301, 306, 307, 314, 316, 317, 318, 319, 320, 321, 330, 335, 352, 355, 359, 372, 385, 387, 388, 391, 392, 397, 399, 405, 409, 412, 416, 419, 425, 429, 434, 435, 611, 637, 656, 657, 695, 747, 749, 750, 758, 830, 870, 956, 977, 991, 994, 996, 997, 1002, 1006, 1008, 1018, 1025, 1028, 1030, 1037, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1101, 1105, 1109, 1111, 1122, 1125, 1128, 1132, 1158], "python_exercises_legacy_cmdline_digit": [29, 203, 330, 750, 1054, 1062, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093], "digit": [29, 139, 165, 166, 185, 192, 197, 203, 213, 216, 225, 229, 234, 235, 237, 238, 240, 242, 243, 258, 265, 278, 279, 280, 284, 285, 297, 306, 307, 308, 314, 315, 335, 361, 370, 750, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1093], "python_basics_python_0193_whil": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1051, 1052, 1053, 1054, 1056, 1058, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1109], "python_exercises_legacy_dict_keyerror": [29, 750, 1054, 1063, 1067, 1093], "python_basics_python_0300_str": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109], "python_basics_python_0320_strings_method": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109], "method": [29, 42, 43, 54, 55, 57, 63, 65, 69, 70, 73, 90, 97, 106, 107, 110, 111, 117, 122, 123, 125, 126, 151, 182, 183, 184, 185, 187, 190, 203, 204, 206, 208, 213, 216, 217, 219, 224, 225, 227, 229, 230, 233, 235, 236, 237, 238, 240, 243, 245, 255, 258, 260, 264, 265, 268, 270, 272, 273, 274, 275, 278, 279, 281, 284, 285, 287, 290, 293, 296, 297, 299, 300, 301, 303, 306, 307, 309, 311, 314, 316, 317, 318, 319, 320, 321, 330, 334, 335, 411, 437, 457, 459, 461, 465, 475, 482, 483, 501, 503, 508, 513, 514, 515, 520, 522, 527, 533, 546, 548, 555, 556, 557, 560, 569, 581, 583, 584, 600, 606, 610, 616, 619, 622, 623, 626, 627, 628, 629, 632, 637, 638, 640, 643, 644, 647, 648, 649, 650, 651, 652, 655, 664, 677, 694, 695, 698, 702, 711, 719, 720, 728, 729, 734, 735, 741, 744, 745, 747, 748, 749, 750, 758, 760, 765, 766, 775, 777, 787, 799, 810, 942, 992, 993, 996, 999, 1003, 1007, 1008, 1009, 1010, 1011, 1015, 1018, 1023, 1032, 1035, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1100, 1104, 1108, 1109, 1114, 1117, 1119, 1151, 1158, 1165], "python_basics_python_0310_strings_format": [29, 90, 203, 750, 1018, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1093], "python_exercises_userdb_user_class_person": [29, 750, 1054, 1088, 1090, 1093], "awai": [29, 63, 77, 84, 145, 146, 147, 151, 170, 186, 207, 213, 221, 255, 258, 278, 279, 284, 290, 293, 306, 314, 319, 451, 714, 750, 836, 857, 968, 992, 1010, 1054, 1088, 1093], "raw": [29, 63, 123, 191, 194, 197, 202, 214, 217, 226, 230, 236, 250, 251, 255, 257, 258, 262, 264, 278, 279, 284, 287, 290, 293, 297, 306, 314, 315, 325, 351, 439, 440, 446, 469, 476, 514, 594, 715, 750, 833, 1010, 1026, 1031, 1047, 1054, 1088, 1093], "python_exercises_userdb_user_json": [29, 750, 1054, 1088, 1089, 1090, 1091, 1093], "json": [29, 78, 85, 92, 114, 117, 119, 143, 179, 185, 195, 209, 213, 214, 222, 223, 231, 234, 235, 239, 242, 248, 257, 290, 292, 293, 295, 297, 300, 350, 750, 1010, 1054, 1088, 1089, 1090, 1093, 1111, 1124], "python_exercises_userdb_userdb_modul": [29, 750, 1054, 1088, 1089, 1090, 1091, 1092, 1093], "refactor": [29, 43, 55, 123, 143, 232, 235, 240, 243, 255, 258, 274, 278, 279, 284, 285, 306, 307, 314, 398, 438, 455, 702, 750, 758, 764, 774, 778, 788, 799, 801, 806, 812, 815, 818, 893, 1010, 1054, 1088, 1089, 1090, 1091, 1093], "both": [29, 54, 63, 85, 114, 115, 116, 120, 123, 125, 136, 146, 148, 153, 166, 178, 184, 205, 221, 224, 232, 235, 238, 240, 243, 255, 258, 270, 278, 279, 284, 285, 306, 307, 314, 431, 437, 439, 440, 465, 511, 513, 533, 565, 573, 646, 702, 713, 750, 768, 791, 797, 836, 937, 941, 945, 958, 981, 987, 994, 1007, 1010, 1014, 1021, 1028, 1035, 1039, 1044, 1054, 1057, 1060, 1066, 1088, 1089, 1090, 1091, 1093, 1101, 1128, 1135, 1148], "Into": [29, 97, 224, 229, 232, 235, 240, 243, 255, 258, 264, 278, 279, 284, 285, 306, 307, 314, 368, 383, 392, 398, 399, 405, 409, 412, 416, 425, 429, 433, 434, 435, 502, 503, 555, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 657, 695, 747, 749, 750, 985, 1010, 1054, 1088, 1089, 1090, 1091, 1093], "python_advanced_oo_namedtupl": [29, 750, 996, 1010, 1054, 1088, 1090, 1093], "namedtupl": [29, 182, 190, 197, 212, 213, 215, 221, 231, 234, 255, 272, 274, 275, 279, 290, 293, 296, 297, 300, 301, 750, 996, 1010, 1054, 1088, 1090, 1093, 1113, 1158], "python_exercises_userdb_mqtt_publish_csv": [29, 750, 1054, 1088, 1089, 1093], "mqtt": [29, 112, 117, 121, 195, 197, 211, 213, 222, 235, 236, 240, 274, 275, 290, 293, 296, 336, 339, 341, 750, 1010, 1050, 1054, 1088, 1091, 1093, 1109], "publish": [29, 112, 119, 150, 152, 161, 222, 234, 235, 255, 297, 327, 336, 338, 750, 1010, 1054, 1088, 1091, 1093, 1095, 1126], "python_exercises_userdb_csvdictread": [29, 750, 1054, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093], "dictread": [29, 197, 218, 219, 232, 235, 240, 243, 255, 258, 278, 279, 284, 285, 302, 306, 307, 314, 750, 1010, 1052, 1054, 1088, 1089, 1090, 1091, 1092, 1093], "python_exercises_userdb_csvread": [29, 750, 1054, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "reader": [29, 143, 218, 232, 235, 240, 243, 255, 258, 278, 279, 284, 285, 306, 307, 314, 420, 439, 462, 750, 841, 1007, 1010, 1037, 1054, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093], "python_exercises_userdb_csvdictreader_funct": [29, 750, 1054, 1085, 1088, 1089, 1090, 1091, 1092, 1093], "python_exercises_userdb_csvreader_funct": [29, 750, 1054, 1087, 1088, 1093], "python_exercises_herdt_while_even_numb": [29, 750, 1054, 1056, 1058, 1093], "python_exercises_herdt_username_password": [29, 750, 1054, 1056, 1058, 1061, 1093], "usernam": [29, 161, 190, 198, 219, 327, 750, 824, 832, 841, 904, 914, 1041, 1054, 1056, 1058, 1073, 1093, 1158], "password": [29, 153, 156, 161, 186, 190, 198, 219, 327, 330, 335, 750, 832, 854, 894, 904, 905, 910, 1054, 1056, 1058, 1073, 1093, 1106, 1158], "python_exercises_herdt_max_numb": [29, 750, 1054, 1056, 1057, 1058, 1059, 1061, 1093], "python_exercises_herdt_swap": [29, 750, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1093], "python_exercises_herdt_greet": [29, 750, 1054, 1056, 1057, 1058, 1061, 1093], "python_exercises_herdt_boolean": [29, 750, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1093], "express": [29, 59, 62, 165, 181, 182, 184, 185, 195, 205, 214, 219, 220, 222, 226, 245, 246, 248, 249, 250, 251, 254, 255, 260, 279, 280, 285, 298, 309, 353, 355, 359, 363, 372, 373, 375, 376, 377, 380, 382, 385, 387, 388, 390, 392, 398, 399, 405, 409, 412, 416, 425, 429, 434, 435, 439, 454, 463, 475, 476, 479, 483, 489, 490, 503, 511, 555, 557, 635, 657, 668, 672, 677, 695, 747, 749, 750, 857, 890, 971, 991, 1001, 1007, 1028, 1030, 1037, 1039, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1091, 1092, 1093, 1095, 1116, 1147, 1148, 1149], "python_exercises_sensors_project_setup": [29, 750, 1054, 1081, 1082, 1083, 1093], "setup": [29, 106, 114, 123, 130, 134, 143, 161, 173, 177, 178, 216, 218, 234, 241, 244, 246, 251, 253, 259, 262, 266, 276, 280, 302, 308, 327, 330, 335, 336, 421, 454, 468, 479, 481, 495, 509, 512, 514, 515, 648, 650, 750, 765, 791, 888, 893, 901, 903, 918, 920, 931, 968, 972, 976, 978, 981, 982, 992, 999, 1007, 1050, 1054, 1081, 1093, 1129, 1139, 1141], "python_exercises_sensors_sensor_const": [29, 750, 1054, 1081, 1082, 1083, 1093], "python_advanced_oo_method": [29, 750, 996, 1010, 1054, 1081, 1082, 1083, 1093], "python_basics_python_0460_set": [29, 90, 750, 1018, 1093], "python_basics_python_0110_blahblah": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "blahblah": [29, 90, 185, 190, 192, 203, 209, 213, 216, 219, 225, 229, 235, 236, 237, 239, 240, 242, 243, 245, 258, 265, 268, 278, 279, 284, 285, 306, 307, 309, 314, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122, 1158], "python_basics_python_0125_run": [29, 90, 203, 330, 750, 1018, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "run": [29, 42, 59, 62, 63, 90, 97, 108, 110, 111, 123, 136, 139, 142, 145, 146, 147, 148, 149, 152, 153, 156, 157, 165, 177, 178, 185, 186, 198, 203, 207, 208, 213, 218, 226, 234, 235, 238, 241, 244, 246, 251, 258, 259, 262, 265, 266, 268, 276, 278, 279, 280, 284, 285, 289, 298, 302, 305, 306, 307, 308, 314, 315, 330, 333, 355, 373, 415, 418, 426, 427, 431, 432, 444, 445, 457, 462, 481, 482, 483, 511, 513, 514, 515, 537, 564, 577, 586, 598, 655, 713, 714, 748, 750, 770, 785, 795, 797, 798, 807, 830, 832, 834, 835, 836, 837, 853, 854, 857, 858, 888, 901, 902, 903, 904, 912, 914, 922, 924, 940, 953, 955, 956, 957, 959, 964, 969, 971, 974, 979, 981, 983, 987, 992, 1003, 1006, 1018, 1019, 1021, 1048, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1111, 1123, 1129, 1134, 1135, 1140, 1153], "python_basics_python_0130_syntax_etc": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1029, 1038, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122], "syntax": [29, 68, 90, 139, 169, 178, 185, 186, 188, 190, 191, 192, 197, 203, 204, 209, 213, 216, 219, 225, 226, 229, 231, 235, 236, 237, 240, 243, 245, 256, 258, 265, 267, 268, 278, 279, 281, 284, 285, 306, 307, 309, 310, 314, 316, 317, 318, 319, 320, 321, 330, 477, 556, 557, 660, 677, 704, 717, 750, 885, 991, 993, 994, 995, 996, 1003, 1004, 1005, 1006, 1010, 1018, 1020, 1029, 1037, 1038, 1040, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1122, 1148, 1158], "python_basics_python_0250_refs_flat_deep_copi": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109], "mutabl": [29, 90, 178, 182, 183, 185, 187, 190, 191, 197, 203, 204, 213, 216, 217, 219, 220, 221, 222, 227, 229, 230, 233, 236, 240, 242, 243, 245, 248, 258, 260, 265, 267, 268, 272, 274, 275, 277, 278, 279, 281, 284, 285, 287, 296, 297, 299, 300, 301, 303, 306, 309, 314, 316, 317, 318, 319, 320, 321, 330, 705, 750, 996, 1018, 1027, 1031, 1052, 1053, 1054, 1064, 1067, 1075, 1076, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109, 1158], "python_basics_python_0200_sequential_typ": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1051, 1052, 1053, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115], "sequenti": [29, 63, 90, 106, 108, 182, 183, 185, 187, 190, 191, 192, 195, 203, 208, 213, 216, 219, 224, 225, 227, 229, 237, 239, 240, 243, 247, 255, 258, 265, 268, 271, 273, 275, 276, 278, 279, 284, 285, 296, 297, 300, 301, 306, 307, 309, 311, 314, 316, 317, 318, 319, 320, 321, 330, 335, 428, 503, 516, 520, 555, 590, 600, 608, 619, 623, 652, 750, 901, 903, 933, 996, 1001, 1018, 1051, 1052, 1053, 1054, 1064, 1067, 1068, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1105, 1108, 1109, 1115, 1158], "python_basics_instal": [29, 90, 750, 1018, 1093], "python_misc_encod": [29, 90, 203, 316, 317, 318, 319, 320, 321, 330, 750, 996, 1018, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1108, 1109], "encod": [29, 43, 90, 165, 182, 183, 185, 187, 203, 206, 213, 215, 218, 221, 222, 225, 231, 232, 234, 240, 242, 245, 259, 263, 264, 266, 279, 280, 287, 297, 298, 300, 301, 303, 308, 315, 316, 317, 318, 319, 320, 321, 335, 439, 750, 996, 1018, 1026, 1031, 1045, 1052, 1053, 1054, 1064, 1067, 1075, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1103, 1109, 1111], "python_basics_python_0400_list": [29, 90, 750, 1018, 1093], "python_basics_python_1000_function_object": [29, 90, 750, 1018, 1093], "python_drafts_setuptool": [29, 750, 1048, 1093], "setuptool": [29, 61, 142, 255, 290, 300, 750, 1048, 1093, 1130], "python_swdev_pip": [29, 750, 1048, 1093, 1096, 1097, 1101, 1109, 1111, 1122, 1125, 1132], "python_swdev_venv": [29, 750, 1048, 1093, 1096, 1097, 1101, 1109, 1111, 1122, 1132], "python_drafts_argpars": [29, 750, 1048, 1093], "argpars": [29, 222, 243, 274, 296, 300, 316, 750, 1048, 1093], "python_drafts_matplotlib": [29, 750, 1048, 1093], "matplotlib": [29, 178, 197, 216, 217, 229, 243, 244, 246, 248, 279, 298, 303, 307, 309, 339, 750, 991, 1048, 1093, 1095, 1101], "python_misc_mqtt": [29, 750, 1093, 1109, 1111], "python_misc_import": [29, 750, 1048, 1093, 1096, 1097, 1101, 1109, 1111, 1122, 1125, 1132], "incomplet": [29, 176, 215, 221, 231, 234, 238, 448, 555, 630, 735, 750, 900, 1048, 1093, 1096, 1097, 1101, 1109, 1111, 1122, 1125, 1132, 1133], "python_misc_vscod": [29, 750, 1093, 1109], "visual": [29, 78, 104, 173, 178, 182, 183, 185, 187, 198, 207, 208, 213, 216, 229, 235, 243, 246, 258, 262, 265, 268, 272, 278, 279, 284, 285, 306, 307, 314, 330, 335, 350, 750, 836, 902, 973, 1019, 1052, 1093, 1109], "studio": [29, 104, 173, 178, 182, 183, 185, 187, 198, 207, 208, 213, 216, 229, 235, 243, 258, 262, 265, 268, 272, 278, 279, 284, 285, 306, 307, 314, 330, 335, 350, 750, 836, 1019, 1093, 1109], "python_misc_pandas_mod_col": [29, 750, 1093, 1109, 1115], "ad": [29, 32, 33, 39, 85, 115, 117, 126, 152, 156, 157, 158, 161, 166, 186, 198, 208, 264, 265, 268, 272, 297, 314, 327, 378, 397, 419, 446, 456, 460, 465, 574, 576, 577, 612, 666, 702, 740, 741, 750, 766, 901, 903, 953, 957, 958, 993, 1011, 1026, 1045, 1093, 1109, 1115, 1116, 1120, 1129], "modifi": [29, 42, 75, 88, 110, 111, 115, 117, 124, 126, 148, 153, 161, 164, 166, 186, 205, 262, 264, 265, 268, 272, 273, 274, 275, 296, 297, 314, 341, 356, 358, 364, 401, 413, 420, 437, 439, 441, 450, 460, 462, 465, 481, 482, 502, 511, 514, 515, 517, 518, 519, 531, 544, 547, 557, 564, 567, 568, 570, 573, 585, 637, 641, 643, 646, 649, 663, 677, 700, 705, 717, 728, 730, 744, 745, 748, 749, 750, 770, 785, 805, 824, 825, 837, 842, 893, 906, 910, 915, 934, 942, 948, 986, 987, 993, 995, 1006, 1027, 1070, 1074, 1092, 1093, 1109, 1115, 1117, 1160, 1164], "column": [29, 63, 139, 148, 151, 166, 169, 215, 234, 263, 264, 265, 266, 268, 272, 297, 298, 302, 308, 314, 428, 439, 750, 837, 842, 853, 1052, 1064, 1076, 1093, 1100, 1103, 1109, 1115], "python_misc_pandas_bas": [29, 750, 1093, 1109, 1115], "datafram": [29, 264, 265, 266, 268, 272, 275, 297, 302, 314, 439, 750, 1093, 1098, 1101, 1109, 1112, 1114, 1115, 1116, 1118, 1119], "python_misc_pandas_iloc": [29, 750, 1093, 1109, 1115], "select": [29, 63, 145, 146, 148, 152, 205, 210, 218, 235, 265, 268, 297, 314, 376, 398, 750, 797, 841, 898, 903, 937, 938, 957, 960, 962, 965, 985, 1052, 1093, 1098, 1107, 1109, 1115, 1117, 1128, 1136, 1163, 1165], "row": [29, 147, 169, 185, 205, 218, 222, 224, 226, 238, 263, 264, 265, 268, 272, 285, 297, 298, 302, 308, 314, 386, 428, 750, 837, 942, 994, 1013, 1033, 1052, 1084, 1086, 1093, 1100, 1103, 1107, 1109, 1113, 1114, 1115, 1119], "iloc": [29, 265, 266, 268, 270, 272, 297, 302, 314, 439, 750, 1093, 1109, 1113, 1115, 1118], "python_misc_pandas_index": [29, 750, 1093, 1109, 1115], "python_misc_pandas_filt": [29, 750, 1093, 1109, 1115], "python_misc_pandas_loc": [29, 750, 1093, 1109, 1115], "loc": [29, 166, 259, 263, 264, 265, 266, 268, 270, 272, 297, 314, 414, 750, 942, 1005, 1093, 1109, 1112, 1113, 1114, 1115, 1116], "python_misc_pandas_add_row": [29, 750, 1093, 1109, 1115], "python_misc_ai_machine_learning_intro": [29, 750, 1093, 1096, 1097, 1101, 1102, 1109], "concept": [29, 78, 97, 98, 99, 114, 146, 156, 170, 178, 182, 184, 186, 188, 198, 249, 252, 261, 262, 265, 282, 296, 300, 332, 333, 348, 351, 398, 421, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 597, 654, 695, 705, 728, 749, 750, 820, 824, 825, 826, 827, 830, 836, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 938, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 1025, 1033, 1043, 1093, 1096, 1097, 1101, 1108, 1109, 1111, 1163], "terminologi": [29, 98, 99, 114, 152, 170, 182, 217, 252, 261, 262, 265, 282, 296, 300, 388, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 570, 728, 749, 750, 820, 824, 825, 826, 827, 830, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 886, 887, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 948, 951, 954, 955, 956, 970, 973, 975, 976, 977, 978, 979, 980, 981, 982, 1093, 1096, 1097, 1101, 1109, 1166], "python_misc_ai_k_mean": [29, 750, 1093, 1096, 1097, 1109], "python_misc_ai_linear_regress": [29, 750, 1093, 1096, 1097, 1101, 1109], "linear": [29, 167, 169, 179, 182, 184, 202, 210, 265, 296, 300, 406, 428, 580, 705, 750, 833, 902, 968, 1030, 1093, 1096, 1097, 1102, 1109], "regress": [29, 182, 234, 265, 296, 300, 750, 1093, 1096, 1097, 1102, 1109], "python_advanced_iteration_gener": [29, 750, 996, 1093], "comprehens": [29, 63, 68, 166, 167, 179, 182, 185, 191, 205, 206, 207, 214, 219, 220, 222, 223, 224, 227, 230, 236, 239, 255, 258, 260, 267, 272, 278, 279, 284, 285, 296, 297, 299, 300, 301, 306, 307, 309, 314, 700, 750, 768, 785, 793, 996, 1001, 1093, 1114], "python_advanced_decor": [29, 750, 996, 1093], "decor": [29, 59, 62, 166, 178, 181, 182, 197, 206, 222, 232, 246, 301, 454, 461, 475, 489, 503, 555, 750, 992, 996, 1007, 1014, 1015, 1017, 1038, 1093, 1095, 1128, 1151], "python_advanced_stararg": [29, 750, 996, 1093], "keyword": [29, 39, 63, 130, 141, 179, 182, 183, 184, 185, 187, 206, 208, 222, 227, 232, 234, 255, 258, 259, 265, 268, 272, 274, 275, 278, 280, 284, 290, 293, 296, 297, 300, 301, 330, 397, 427, 570, 571, 573, 591, 642, 702, 750, 946, 992, 993, 994, 996, 1020, 1036, 1038, 1050, 1093, 1106, 1145, 1147], "python_advanced_closur": [29, 750, 996, 1093], "closur": [29, 59, 62, 63, 165, 178, 182, 190, 191, 206, 219, 222, 232, 265, 268, 297, 301, 699, 750, 993, 996, 1036, 1038, 1093, 1158], "python_advanced_comprehens": [29, 750, 996, 1093], "python_advanced_context_mgr": [29, 750, 996, 1093], "python_advanced_except": [29, 750, 996, 1093], "python_advanced_oo_classes_and_dict": [29, 750, 996, 1003, 1004, 1005, 1006, 1010, 1054, 1081, 1082, 1083, 1088, 1090, 1093, 1122], "python_advanced_exec": [29, 750, 996, 1093], "python_advanced_oo_inherit": [29, 750, 996, 1003, 1004, 1005, 1006, 1010, 1093, 1122], "inherit": [29, 65, 69, 73, 106, 126, 163, 173, 182, 206, 219, 236, 238, 271, 272, 273, 274, 275, 279, 296, 297, 300, 301, 311, 339, 461, 475, 503, 511, 513, 553, 555, 556, 580, 629, 632, 652, 694, 735, 749, 750, 789, 829, 832, 835, 856, 858, 965, 994, 996, 1004, 1005, 1006, 1007, 1010, 1012, 1015, 1093, 1122, 1164], "python_advanced_oo_abc": [29, 750, 996, 1010, 1093], "abstract": [29, 78, 84, 182, 222, 254, 271, 272, 273, 274, 275, 296, 297, 300, 301, 334, 398, 437, 439, 454, 461, 465, 467, 469, 475, 477, 489, 503, 513, 555, 590, 629, 630, 707, 738, 750, 830, 834, 903, 918, 996, 1010, 1093, 1151, 1153], "abc": [29, 32, 165, 179, 182, 184, 189, 194, 196, 202, 205, 207, 211, 215, 218, 221, 222, 226, 228, 231, 234, 238, 241, 244, 247, 255, 256, 259, 266, 272, 274, 275, 276, 280, 286, 290, 293, 296, 297, 298, 300, 301, 302, 308, 317, 325, 439, 513, 582, 603, 620, 622, 738, 750, 996, 1010, 1026, 1093], "duck": [29, 32, 181, 182, 236, 255, 272, 274, 275, 279, 296, 297, 300, 301, 311, 454, 513, 655, 657, 695, 703, 704, 709, 715, 735, 740, 747, 749, 750, 996, 1003, 1010, 1093, 1095, 1100, 1148], "python_advanced_oo_str_repr": [29, 750, 996, 1010, 1093], "str": [29, 165, 168, 179, 189, 194, 196, 197, 202, 205, 207, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 255, 256, 258, 259, 263, 264, 265, 266, 268, 270, 272, 274, 275, 276, 278, 279, 280, 284, 286, 290, 291, 293, 294, 296, 297, 298, 300, 301, 302, 306, 308, 314, 315, 321, 324, 325, 326, 330, 403, 421, 439, 488, 493, 574, 575, 576, 577, 692, 704, 750, 994, 996, 1008, 1010, 1011, 1014, 1023, 1025, 1026, 1037, 1041, 1045, 1052, 1060, 1062, 1093, 1108, 1114, 1119, 1120], "repr": [29, 196, 215, 221, 231, 234, 238, 241, 244, 255, 258, 259, 265, 268, 272, 274, 275, 278, 279, 280, 284, 290, 291, 293, 296, 297, 300, 301, 306, 314, 750, 994, 996, 1010, 1011, 1093], "python_advanced_oo_constructor": [29, 750, 996, 1003, 1004, 1005, 1006, 1010, 1093, 1122], "constructor": [29, 43, 53, 56, 70, 97, 110, 111, 114, 117, 119, 122, 123, 125, 126, 173, 179, 185, 205, 206, 208, 219, 224, 232, 236, 255, 258, 260, 265, 268, 271, 272, 273, 274, 275, 276, 278, 279, 284, 290, 293, 296, 297, 300, 301, 306, 311, 314, 332, 333, 334, 407, 461, 475, 501, 503, 506, 509, 513, 514, 533, 542, 548, 555, 556, 557, 563, 580, 611, 627, 628, 637, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 655, 663, 664, 665, 667, 693, 695, 711, 714, 715, 716, 720, 725, 726, 727, 728, 729, 735, 747, 749, 750, 756, 758, 789, 942, 996, 1003, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1026, 1093, 1122, 1128, 1140, 1148], "python_advanced_oo_operator_overload": [29, 750, 996, 1010, 1093], "overload": [29, 97, 165, 173, 182, 208, 236, 271, 272, 273, 274, 275, 296, 300, 301, 303, 310, 423, 503, 511, 520, 522, 555, 557, 578, 581, 582, 584, 590, 600, 606, 610, 611, 619, 622, 623, 637, 638, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 663, 664, 668, 695, 711, 720, 728, 747, 749, 750, 756, 996, 1010, 1093, 1114, 1147], "python_advanced_oo_properti": [29, 750, 996, 1010, 1093], "properti": [29, 40, 166, 182, 206, 219, 236, 238, 255, 259, 272, 274, 275, 279, 289, 290, 293, 296, 297, 300, 301, 305, 334, 443, 444, 445, 450, 453, 750, 996, 1010, 1093, 1134, 1137], "python_advanced_multithreading_mutex": [29, 750, 996, 1004, 1005, 1006, 1093], "race": [29, 72, 73, 74, 78, 87, 146, 164, 224, 250, 251, 253, 262, 273, 274, 275, 296, 297, 300, 310, 338, 339, 345, 414, 424, 533, 705, 721, 728, 749, 750, 774, 778, 799, 801, 806, 810, 812, 815, 818, 893, 923, 933, 934, 939, 947, 948, 954, 996, 1004, 1006, 1093, 1153, 1163, 1164], "condit": [29, 72, 73, 74, 78, 87, 89, 125, 146, 157, 164, 205, 224, 244, 250, 251, 253, 262, 273, 274, 275, 296, 297, 300, 310, 338, 339, 345, 353, 355, 359, 382, 383, 385, 386, 388, 390, 392, 399, 405, 409, 412, 414, 416, 424, 425, 429, 434, 435, 442, 447, 448, 449, 533, 550, 639, 657, 695, 705, 715, 721, 728, 729, 747, 749, 750, 774, 778, 799, 801, 806, 810, 812, 814, 815, 818, 893, 923, 929, 933, 934, 939, 947, 948, 950, 954, 996, 1004, 1006, 1029, 1030, 1045, 1093, 1099, 1114, 1153, 1163, 1164], "mutex": [29, 72, 73, 74, 76, 78, 87, 89, 164, 193, 224, 249, 250, 251, 253, 262, 273, 274, 275, 296, 297, 300, 310, 338, 339, 345, 533, 722, 724, 726, 727, 728, 749, 750, 774, 778, 795, 799, 800, 801, 806, 812, 815, 816, 818, 893, 934, 939, 944, 947, 948, 996, 1004, 1006, 1093, 1148, 1153, 1164], "python_advanced_multithreading_bas": [29, 750, 996, 1003, 1004, 1005, 1006, 1093], "python_advanced_multithreading_exam_quest": [29, 750, 996, 1004, 1006, 1093], "exam": [29, 96, 97, 106, 207, 223, 252, 261, 282, 332, 344, 750, 827, 893, 934, 954, 996, 1004, 1093], "python_db_dbapi2": [29, 750, 1051, 1053, 1054, 1093, 1105], "python_db_postgr": [29, 750, 1093, 1105], "postgresql": [29, 750, 1093, 1104, 1105], "python_swdev_unittest": [29, 750, 1093, 1122], "unittest": [29, 65, 114, 142, 143, 159, 162, 173, 175, 178, 181, 182, 192, 195, 206, 208, 213, 255, 264, 275, 320, 330, 338, 339, 348, 349, 748, 750, 1037, 1093, 1095, 1122, 1133], "python_swdev_pytest_intro": [29, 750, 1093, 1122, 1127], "By": [29, 51, 53, 146, 148, 153, 157, 161, 173, 179, 215, 221, 222, 224, 231, 232, 234, 235, 239, 243, 246, 250, 251, 253, 255, 264, 272, 274, 275, 279, 290, 293, 296, 297, 300, 310, 311, 338, 370, 397, 420, 423, 640, 641, 643, 644, 647, 649, 651, 652, 695, 696, 747, 749, 750, 766, 839, 888, 901, 937, 956, 972, 983, 1007, 1014, 1091, 1092, 1093, 1102, 1122, 1127], "As": [30, 46, 68, 80, 114, 143, 146, 148, 153, 157, 163, 175, 178, 182, 213, 226, 288, 304, 333, 350, 388, 419, 422, 498, 500, 514, 565, 570, 572, 573, 650, 770, 797, 823, 832, 901, 902, 910, 912, 929, 957, 965, 987, 993, 1014, 1019, 1023, 1080, 1084, 1097, 1138, 1150], "follow": [30, 39, 43, 78, 106, 107, 109, 116, 118, 136, 145, 146, 148, 149, 150, 151, 153, 161, 166, 170, 174, 175, 178, 182, 186, 187, 198, 215, 221, 231, 232, 234, 238, 247, 251, 253, 270, 271, 273, 279, 280, 327, 349, 351, 354, 371, 372, 385, 388, 415, 417, 419, 421, 426, 427, 430, 438, 440, 445, 455, 456, 459, 460, 476, 477, 479, 480, 481, 482, 483, 501, 504, 505, 508, 509, 511, 512, 513, 514, 515, 527, 533, 559, 574, 575, 576, 577, 630, 637, 639, 644, 646, 647, 650, 651, 654, 672, 705, 744, 745, 748, 758, 760, 766, 797, 823, 824, 825, 830, 832, 834, 836, 848, 850, 851, 857, 861, 869, 870, 894, 901, 902, 903, 924, 927, 928, 929, 930, 939, 956, 965, 969, 971, 977, 979, 981, 983, 985, 986, 987, 990, 994, 995, 999, 1006, 1025, 1039, 1047, 1052, 1055, 1060, 1064, 1066, 1070, 1073, 1074, 1077, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1117, 1121, 1130, 1151], "version": [30, 61, 145, 149, 151, 152, 153, 156, 159, 161, 162, 174, 175, 176, 178, 185, 194, 196, 205, 206, 215, 219, 221, 225, 231, 234, 241, 246, 249, 258, 264, 270, 271, 272, 273, 280, 323, 338, 398, 437, 438, 440, 441, 443, 450, 453, 550, 647, 649, 650, 697, 701, 713, 745, 770, 772, 789, 797, 798, 813, 857, 901, 902, 972, 973, 983, 985, 986, 988, 1019, 1020, 1026, 1050, 1123, 1130, 1131, 1137, 1143], "control": [30, 45, 59, 62, 63, 86, 115, 116, 120, 121, 125, 126, 145, 152, 159, 161, 164, 175, 178, 183, 185, 186, 187, 188, 197, 198, 213, 216, 229, 234, 240, 254, 311, 331, 332, 333, 335, 338, 376, 390, 391, 437, 440, 454, 461, 504, 505, 508, 514, 556, 750, 770, 795, 797, 802, 857, 893, 895, 896, 900, 901, 903, 919, 968, 973, 992, 995, 1003, 1015, 1028, 1030, 1114, 1129, 1131, 1149, 1159, 1165], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 63, 75, 84, 87, 91, 102, 110, 111, 123, 133, 138, 142, 143, 145, 147, 148, 150, 151, 152, 153, 156, 161, 166, 167, 170, 174, 178, 185, 207, 222, 226, 232, 234, 250, 251, 253, 265, 268, 275, 280, 298, 316, 322, 333, 339, 354, 355, 403, 410, 411, 413, 415, 426, 437, 439, 440, 441, 445, 479, 498, 512, 515, 557, 569, 570, 598, 612, 620, 625, 649, 650, 652, 655, 662, 683, 686, 690, 691, 701, 707, 715, 719, 727, 729, 750, 756, 766, 768, 787, 789, 797, 799, 824, 825, 829, 830, 832, 833, 841, 853, 876, 894, 895, 897, 902, 903, 919, 920, 921, 931, 945, 953, 959, 968, 972, 973, 981, 985, 987, 994, 997, 998, 999, 1017, 1026, 1037, 1045, 1046, 1047, 1050, 1053, 1074, 1107, 1128, 1153], "No": [30, 43, 63, 80, 136, 142, 146, 148, 152, 153, 161, 188, 205, 221, 222, 238, 264, 341, 361, 363, 377, 393, 397, 404, 415, 420, 432, 437, 441, 442, 445, 447, 450, 451, 452, 453, 465, 511, 550, 560, 561, 573, 580, 590, 605, 608, 626, 644, 654, 656, 659, 663, 666, 670, 714, 715, 722, 729, 775, 777, 779, 781, 795, 797, 802, 814, 833, 839, 841, 844, 845, 860, 868, 876, 879, 895, 897, 903, 917, 924, 929, 930, 939, 940, 942, 944, 953, 957, 965, 968, 974, 988, 990, 1007, 1014, 1020, 1023, 1026, 1027, 1035, 1039, 1043, 1045, 1102, 1103, 1107, 1108, 1117, 1120, 1128, 1130, 1136], "proprietari": 30, "accept": [30, 32, 60, 125, 148, 174, 270, 437, 439, 705, 715, 717, 765, 897, 923, 993, 1017, 1163, 1165], "proven": [30, 426, 430, 574, 576, 577, 666], "difficult": [30, 68, 205, 382, 400, 550, 783, 795, 957], "ffmpeg": 31, "video4linux2": 31, "640x480": 31, "dev": [31, 63, 100, 119, 146, 147, 157, 163, 164, 174, 175, 218, 224, 234, 241, 244, 259, 262, 266, 271, 273, 276, 280, 302, 308, 336, 426, 445, 509, 750, 752, 753, 755, 761, 768, 777, 791, 793, 797, 810, 827, 828, 837, 839, 840, 857, 871, 874, 877, 879, 893, 896, 901, 902, 903, 926, 933, 953, 956, 959, 961, 964, 965, 985, 1135, 1137, 1153], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 146, 149, 151, 157, 215, 221, 231, 234, 398, 789, 795, 800, 802, 957, 1123, 1143], "audio": [31, 129, 134, 148, 153, 750, 1152], "appar": [31, 57, 61, 63, 65, 66, 148, 150, 151, 153, 157, 207, 218, 270, 442, 456, 627, 672, 683, 715, 765, 901, 959, 1108], "next": [31, 39, 42, 63, 98, 114, 142, 147, 148, 153, 161, 166, 168, 179, 184, 186, 194, 198, 205, 211, 215, 218, 219, 221, 224, 226, 228, 231, 234, 238, 244, 250, 251, 256, 259, 266, 276, 280, 286, 298, 302, 308, 315, 322, 336, 370, 388, 390, 411, 439, 477, 481, 495, 505, 514, 550, 587, 663, 676, 683, 685, 707, 787, 797, 816, 841, 857, 889, 901, 903, 923, 933, 953, 972, 998, 999, 1002, 1030, 1033, 1100, 1136], "mention": [31, 146, 147, 174, 178, 182, 208, 232, 274, 275, 296, 297, 301, 500, 514, 698, 809, 902, 990, 1095, 1111], "frame": [31, 140, 151, 163, 185, 215, 221, 231, 234, 264, 270, 302, 410, 423, 427, 477, 668, 895, 896, 1113], "size": [31, 100, 109, 117, 145, 147, 148, 165, 167, 173, 215, 216, 221, 224, 229, 231, 234, 238, 243, 246, 262, 279, 280, 285, 330, 361, 378, 383, 392, 399, 403, 405, 409, 410, 412, 415, 416, 418, 423, 424, 425, 427, 429, 434, 435, 457, 458, 464, 503, 515, 516, 520, 521, 522, 523, 524, 528, 529, 532, 538, 550, 555, 557, 561, 565, 570, 574, 576, 577, 590, 591, 592, 593, 598, 603, 604, 608, 612, 614, 615, 620, 622, 649, 651, 657, 660, 661, 666, 677, 678, 679, 681, 695, 705, 714, 718, 719, 727, 734, 747, 748, 749, 750, 756, 768, 783, 793, 813, 822, 827, 828, 834, 841, 871, 874, 877, 879, 885, 889, 893, 897, 902, 923, 925, 964, 965, 971, 988, 991, 1095, 1108], "input": [31, 40, 68, 86, 119, 166, 167, 168, 169, 179, 182, 185, 187, 209, 215, 221, 224, 231, 234, 237, 238, 259, 262, 330, 335, 359, 360, 366, 390, 398, 421, 426, 438, 516, 517, 518, 519, 531, 570, 620, 639, 662, 748, 768, 823, 841, 872, 890, 894, 904, 920, 923, 935, 937, 938, 945, 1001, 1016, 1045, 1057, 1061, 1062, 1074, 1077, 1080, 1086, 1089, 1097, 1098, 1101, 1102, 1159], "rate": [31, 156, 178, 238, 297, 419, 816, 955], "hz": [31, 807], "bitrat": [31, 896], "If": [31, 43, 45, 47, 53, 55, 56, 57, 89, 112, 114, 145, 146, 147, 148, 151, 152, 153, 161, 162, 170, 178, 215, 221, 228, 231, 234, 238, 246, 251, 253, 262, 268, 280, 297, 330, 335, 376, 385, 415, 427, 447, 449, 455, 505, 511, 512, 527, 557, 562, 626, 633, 649, 650, 663, 668, 714, 718, 719, 727, 729, 750, 770, 775, 789, 797, 802, 814, 823, 832, 836, 839, 857, 858, 866, 869, 893, 894, 901, 902, 903, 904, 910, 924, 932, 934, 942, 947, 951, 964, 986, 987, 999, 1007, 1009, 1019, 1026, 1034, 1036, 1047, 1072, 1100, 1103, 1117, 1129, 1148], "instead": [31, 58, 63, 117, 126, 139, 145, 146, 147, 148, 166, 167, 175, 207, 224, 226, 234, 264, 280, 315, 336, 341, 378, 427, 455, 498, 501, 515, 577, 593, 649, 651, 668, 672, 714, 715, 729, 765, 766, 775, 828, 857, 879, 902, 944, 964, 971, 973, 983, 989, 1020, 1066, 1078, 1090, 1114, 1135], "stdout": [31, 126, 165, 198, 202, 206, 215, 221, 231, 234, 244, 252, 259, 261, 262, 282, 283, 297, 315, 323, 325, 330, 334, 336, 626, 750, 821, 823, 827, 838, 839, 882, 885, 888, 893, 923, 968, 995, 1045, 1047, 1052, 1057, 1061, 1064, 1079, 1111, 1120, 1154], "hold": [31, 117, 145, 147, 166, 182, 184, 185, 205, 232, 353, 365, 385, 457, 587, 642, 649, 700, 705, 719, 727, 731, 761, 795, 799, 800, 894, 901, 957, 995, 1008, 1030, 1078, 1100], "mplayer": [31, 276], "stdin": [31, 42, 198, 206, 215, 221, 224, 231, 234, 323, 330, 362, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750, 823, 839, 840, 872, 923, 1043, 1045, 1046, 1057, 1108, 1120, 1154], "unicod": [32, 34, 35, 36, 38, 206, 215, 219, 221, 231, 234, 256, 280, 365, 1025, 1031, 1045, 1108], "sphinxemojicod": 32, "pip": [32, 61, 130, 142, 178, 182, 203, 232, 246, 923, 1019, 1049, 1050, 1082, 1095, 1111, 1122, 1123, 1124, 1128, 1130, 1131], "conf": [32, 65, 147, 149, 151, 450, 797, 903, 995], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 259, 514, 756, 768], "innoc": [32, 152, 420, 721, 836, 970, 1014], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 78, 80, 87, 89, 146, 348, 894, 902, 903], "muscl": 32, "nerd": [32, 857], "ok_hand": 32, "penguin": 32, "pig": [32, 415], "point_up": 32, "sleep": [32, 63, 146, 221, 250, 251, 274, 275, 296, 316, 388, 397, 727, 750, 774, 777, 779, 789, 799, 802, 806, 812, 814, 815, 818, 893, 894, 902, 931, 935, 938, 953, 955, 956, 959, 964, 1003], "sunglass": 32, "think": [32, 42, 43, 69, 146, 147, 161, 184, 208, 310, 398, 419, 420, 423, 509, 513, 560, 580, 655, 663, 665, 714, 824, 825, 828, 918, 964, 1026], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 196, 202, 218, 238, 280], "ac": [32, 156, 194], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1015], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 156], "aerial_tramwai": 32, "af": [32, 156], "afghanistan": 32, "ai": [32, 182, 1102, 1109], "airplan": [32, 894], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 270], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 971, 1037], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 65, 76, 88, 169, 224, 249, 250, 251, 253, 262, 273, 310, 311, 533, 665, 714, 727, 728, 749, 750, 759, 764, 767, 769, 774, 777, 778, 780, 783, 784, 788, 789, 790, 792, 794, 799, 802, 803, 806, 807, 808, 812, 815, 817, 818, 893, 933, 943, 944, 1006, 1148], "atom_symbol": 32, "australia": 32, "austria": [32, 146, 348], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 167, 991], "az": 32, "azerbaijan": 32, "ba": [32, 156], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 439], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1130], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 89, 178, 330, 894, 1018, 1019, 1020, 1046, 1124], "bb": [32, 138, 149, 901], "bd": [32, 156], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 942, 1118], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 417], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1014, 1017], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 156], "bg": [32, 439], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 187, 645], "bison": [32, 157, 777, 901, 985], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1008], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1107], "bookmark_tab": 32, "boom": [32, 683, 700], "boomerang": 32, "boot": [32, 136, 147, 149, 153, 165, 266, 433, 730, 770, 775, 793, 797, 807, 835, 901, 902, 903, 1143], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 244, 302], "brain": [32, 59, 62], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 145, 158], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 431, 857], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 768], "bug": [32, 46, 55, 56, 107, 147, 148, 149, 189, 208, 224, 235, 339, 395, 397, 398, 413, 418, 420, 424, 437, 442, 447, 538, 540, 542, 550, 556, 557, 560, 565, 627, 630, 683, 693, 712, 729, 750, 787, 915, 946, 955, 956, 988, 1008, 1009, 1023, 1026], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 81, 115, 193, 218, 234, 241, 243, 244, 259, 262, 266, 276, 280, 302, 308, 455, 469, 484, 498, 514, 515, 750, 768, 793, 857, 893, 895, 900, 901, 902, 931, 937, 993, 1094, 1152, 1159, 1163, 1165], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 126, 151, 153, 902], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 264, 439, 894], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 148, 152, 186, 198, 252, 261, 262, 264, 282, 283, 315, 316, 415, 439, 514, 750, 755, 760, 777, 797, 813, 824, 825, 827, 828, 837, 839, 841, 869, 876, 884, 885, 887, 888, 890, 893, 894, 901, 902, 903, 904, 928, 930, 931, 935, 959, 965, 968, 1154], "cayman_island": 32, "cd": [32, 61, 132, 149, 150, 152, 153, 156, 157, 161, 174, 175, 208, 218, 238, 246, 251, 253, 316, 330, 335, 440, 512, 515, 575, 770, 772, 797, 798, 821, 823, 824, 825, 828, 834, 842, 847, 849, 857, 881, 894, 901, 902, 910, 923, 972, 973, 985, 986, 1050], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 308, 823, 940], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 139, 145, 156, 166, 228, 245, 417, 802, 950], "chair": [32, 178], "champagn": 32, "champagne_glass": 32, "chart": [32, 192, 207, 216, 229, 243, 246, 279, 285, 1095, 1102], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 99, 163, 252, 261, 262, 282, 283, 748, 750, 827, 829, 831, 832, 843, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 866, 868, 869, 893, 905, 906, 907, 908, 909, 934, 940, 947, 952, 969, 981, 982, 1012, 1120], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1128], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 234, 259, 1011, 1012], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 221, 222, 426, 901], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 101, 153, 198, 222, 329, 330, 333, 658, 660, 910, 1099, 1100, 1123], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 156], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 270], "cocos_island": 32, "coffe": [32, 149, 630, 901], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 112, 147, 161, 252, 261, 262, 282, 750, 821, 827, 893, 981, 982, 983, 986], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 146, 150, 178, 207, 372, 380, 426, 573, 583, 659, 670, 1037, 1121], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 178, 184, 265, 268, 375, 388, 398, 427, 437, 541, 592, 611, 612, 668, 716, 1009, 1016, 1033, 1044], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 262], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 779, 793], "cool": [32, 65, 132, 147, 148, 151, 153, 161, 166, 167, 178, 179, 182, 197, 262, 275, 348, 433, 439, 467, 476, 613, 655, 656, 672, 675, 694, 704, 707, 729, 797, 853, 903, 988, 992, 995, 1012, 1031, 1045, 1095, 1102, 1107, 1148], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 157, 198, 215, 221, 231, 234, 259, 323, 327, 565, 714, 1021], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 126, 145, 146, 147, 148, 153, 166, 178, 182, 351, 388, 422, 427, 703, 890, 925, 944], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 99, 114, 147, 149, 152, 186, 188, 252, 261, 262, 282, 283, 330, 335, 750, 797, 824, 825, 826, 827, 828, 857, 861, 862, 864, 865, 868, 869, 871, 877, 893, 901, 913, 924, 985, 1154], "cr": [32, 1045], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 65, 103, 104, 106, 119, 145, 158, 182, 276, 288, 289, 304, 305, 331, 332, 333, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 931, 932, 934, 948, 951, 954, 956, 973, 977, 978, 979, 980, 982, 985, 1150], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 146], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 207], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 599], "date": [32, 112, 143, 149, 157, 161, 178, 184, 214, 246, 262, 264, 307, 343, 344, 439, 798, 990, 1084, 1086, 1090, 1092, 1099, 1104], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 134, 146, 151, 207, 276, 879, 956, 1152, 1159], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 206, 219], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 238, 1102], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 415], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 224, 533, 787, 1005], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 97, 208, 224, 271, 273, 311, 533, 557, 558, 563, 652, 664, 666, 695, 700, 711, 715, 720, 728, 747, 749, 750, 968], "dragon_fac": 32, "dress": [32, 143], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 143, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888, 1108, 1142], "ea": [32, 156], "eagl": [32, 218, 1052], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 97, 156, 198, 327, 330, 335, 338, 347, 750, 826, 827, 857, 893], "ecuador": 32, "ee": [32, 156], "eg": [32, 35, 117], "egg": [32, 61, 1039], "eggplant": 32, "egypt": 32, "eight": [32, 120, 148, 166, 179, 189, 197, 226, 228, 330, 903, 1108], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 154, 157, 189, 205, 215, 445, 541, 940, 971, 972, 988, 1022, 1162], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 797], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 155, 164, 179, 181, 189, 226, 1143, 1144, 1145], "eritrea": 32, "estonia": 32, "et": [32, 97, 565, 714, 917, 972, 973, 1014], "ethiopia": 32, "euro": [32, 481, 482, 483, 495, 496, 497], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 106, 206, 219, 254, 273, 339, 454, 461, 475, 489, 503, 555, 750, 923, 1151], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 170, 897, 903], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 264, 931], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 927, 935, 950], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 63, 417], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1130], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 63, 146, 166, 179, 189, 197, 218, 228, 234, 244, 259, 280, 298, 302, 310, 330, 348, 1052, 1094], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 146, 148, 163, 174, 185, 215, 221, 224, 228, 231, 234, 259, 262, 273, 275, 289, 305, 323, 442, 443, 444, 449, 452, 638, 652, 729, 750, 756, 765, 779, 802, 805, 807, 895, 897, 926, 927, 928, 930, 944, 965, 969, 1030], "flame": [32, 149], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 142, 238, 591], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 823, 894], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 69, 391, 859], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 178, 1019], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 65, 145, 150, 166, 178, 179, 182, 189, 196, 197, 205, 221, 226, 228, 238, 241, 244, 255, 259, 262, 276, 279, 280, 286, 301, 302, 308, 330, 797, 863, 1033, 1041, 1094, 1095, 1103, 1128, 1151], "four_leaf_clov": 32, "fox": [32, 415], "fox_fac": 32, "fr": [32, 157], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 69, 1148], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": 32, "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 925], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 146, 147, 348], "gf": 32, "gg": [32, 35, 38], "gh": [32, 142, 1117], "ghana": 32, "ghost": 32, "gi": [32, 142, 229], "gibraltar": 32, "gift": [32, 182, 213], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 68, 146, 265, 268, 315, 439, 449, 718, 736, 824, 825, 987, 996], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 286, 302, 1108], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 208, 224, 447, 726, 727, 729], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 146, 222, 262, 777, 787], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 142, 154, 161, 166, 173, 182, 197, 208, 224, 243, 270, 338, 365, 376, 395, 397, 460, 479, 547, 558, 574, 576, 577, 703, 841, 857, 902, 903, 919, 947, 981, 999, 1014, 1021, 1148, 1154, 1166], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 727], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 178, 184, 185, 196, 202, 215, 221, 222, 225, 229, 231, 234, 238, 259, 266, 280, 330, 450, 797, 1043, 1123], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 224, 750, 893, 923, 932, 933, 934, 951, 964], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 197, 215, 221, 231, 234, 264, 297, 431, 466, 722, 756], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 151, 348], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 321, 322, 339], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 376, 457, 486, 1147], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 107, 110, 111, 148, 151, 161, 165, 168, 178, 179, 189, 196, 202, 215, 218, 221, 228, 231, 232, 234, 241, 244, 248, 256, 259, 266, 272, 276, 280, 286, 291, 298, 303, 308, 325, 446, 481, 482, 483, 495, 496, 497, 514, 761, 793, 795, 817, 824, 825, 830, 832, 841, 842, 843, 853, 860, 881, 883, 884, 895, 901, 903, 910, 929, 939, 981, 1008, 1019, 1035, 1073, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1101, 1103, 1121, 1164], "ideograph_advantag": 32, "ie": 32, "il": [32, 156], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 206, 255, 279, 301, 1095], "indonesia": 32, "infin": [32, 117, 185, 234, 307, 1000, 1001], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 857], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 206, 255, 1095], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 189, 202, 215, 218, 228, 231, 234, 238, 241, 280, 286], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 330, 839, 889], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 187], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 167, 169], "kn": 32, "knife": [32, 756, 923, 1148], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 215, 221, 231, 234], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 167, 169, 216, 229, 243, 246, 279, 285, 387, 392, 399, 405, 409, 412, 416, 419, 425, 429, 434, 435, 656, 657, 695, 747, 749, 750, 777, 1095, 1102, 1114, 1117], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 183], "leafy_green": 32, "leav": [32, 49, 65, 143, 146, 147, 153, 156, 186, 215, 238, 275, 341, 559, 561, 570, 571, 586, 588, 589, 745, 748, 760, 765, 775, 797, 902, 927, 947, 1035, 1108], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 321, 322, 339], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 146, 148, 178, 182, 215, 221, 224, 231, 234, 250, 251, 253, 262, 283, 296, 297, 310, 339, 413, 453, 533, 716, 722, 725, 727, 728, 745, 749, 750, 787, 795, 800, 805, 834, 910, 942, 947, 949, 957, 964, 1005, 1095, 1148, 1160, 1163], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 167, 238, 379, 793, 844, 845, 856, 939, 968, 970], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 232, 849], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 149, 264, 439], "md": [32, 130, 350, 798], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 992], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 377, 433, 556], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 218, 1052], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 151, 153], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 438], "mn": 32, "mo": [32, 547], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 146, 151, 857, 1033, 1041], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 963, 964], "mr": [32, 114, 215, 226, 234, 238, 1057], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 339, 967, 968], "mu": [32, 238], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 99, 114, 186, 188, 252, 261, 262, 282, 283, 330, 335, 750, 770, 827, 864, 877, 893, 1154], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 215, 218, 221, 234, 241, 259], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 186, 188, 261, 282, 283, 359, 920], "ne": [32, 557, 575, 577, 935], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 147, 1020], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 914], "ng": [32, 147, 158, 262, 750, 893, 972, 974, 981, 982, 983], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 166, 179, 189, 197, 215, 226, 330], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 359], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 78, 114, 115, 124, 126, 128, 142, 148, 149, 156, 173, 186, 208, 226, 234, 238, 243, 262, 271, 273, 280, 302, 393, 415, 433, 449, 452, 503, 546, 548, 555, 557, 560, 568, 572, 573, 612, 627, 662, 668, 709, 713, 714, 729, 735, 749, 750, 783, 789, 802, 813, 834, 837, 839, 879, 904, 905, 913, 931, 946, 950, 957, 965, 990, 994, 1006, 1007, 1030, 1043, 1063, 1080, 1116, 1117, 1122, 1136, 1151], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 169, 196, 264, 298, 439, 1098, 1117], "nr": [32, 194, 238, 756], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 427], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 65, 118, 145, 147, 148, 152, 161, 178, 194, 224, 264, 326, 367, 403, 421, 423, 453, 462, 512, 513, 514, 559, 567, 570, 575, 580, 590, 642, 649, 660, 668, 683, 702, 705, 714, 715, 731, 811, 902, 929, 947, 974, 985, 1003, 1006, 1019, 1135], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 210], "om": [32, 693], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 215, 221, 231, 234, 403, 587, 589, 590], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 889], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 149, 731], "pg": [32, 431], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 78, 139, 149, 156, 207, 441, 514, 953, 983, 988], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 270], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 234, 249], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 63, 114, 126, 142, 146, 147, 151, 152, 158, 174, 186, 188, 189, 205, 218, 234, 238, 264, 266, 363, 397, 403, 406, 407, 410, 411, 415, 486, 511, 512, 514, 515, 557, 559, 562, 567, 568, 569, 570, 571, 573, 575, 576, 590, 598, 658, 661, 662, 665, 667, 670, 679, 680, 681, 683, 685, 686, 689, 690, 691, 697, 699, 700, 709, 713, 718, 729, 745, 748, 761, 797, 816, 824, 825, 834, 857, 859, 876, 879, 886, 896, 904, 913, 920, 931, 940, 955, 968, 983, 990, 992, 1052, 1130, 1154], "pt": [32, 717, 828, 955], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 148, 149, 153, 271, 797, 833, 835, 919], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 63, 112, 117, 148, 153, 185, 194, 197, 198, 208, 211, 218, 219, 221, 226, 228, 234, 238, 244, 246, 247, 256, 259, 263, 279, 280, 286, 308, 330, 335, 393, 439, 440, 449, 457, 482, 512, 559, 565, 683, 705, 766, 802, 811, 816, 858, 947, 968, 983, 987, 992, 997, 1016, 1039, 1090, 1095], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 146, 156, 164, 189, 193, 221, 234, 280, 316, 379, 413, 464, 492, 513, 515, 522, 753, 760, 768, 775, 781, 793, 884, 901, 917, 921, 1022, 1111], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 100, 114, 126, 136, 152, 207, 262, 337, 427, 439, 575, 750, 797, 827, 857, 861, 865, 868, 871, 876, 877, 893, 906, 933, 1030], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 322, 705], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 857], "ringed_planet": 32, "ro": 32, "robot": [32, 234], "robot_fac": 32, "rock": [32, 275, 437, 987, 989, 1124], "rocket": [32, 153], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1135, 1166], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1108], "rw": [32, 61, 63, 147, 148, 157, 165, 234, 244, 446, 748, 753, 761, 828, 839, 842, 853, 856, 876, 879, 894, 901, 902, 903, 905, 914, 925, 928, 929, 937, 965, 971, 972, 973, 983, 985, 986, 1022, 1050], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 853], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 263], "sc": [32, 35], "scale": [32, 78, 178, 224, 238, 427, 901, 974, 987], "scarf": 32, "school": [32, 238, 498, 533, 1117, 1149], "school_satchel": 32, "scientist": [32, 178, 1019, 1100, 1101, 1102, 1109], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 207, 857], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 152, 498], "sd": [32, 218, 234, 238, 241, 244, 259, 266, 276, 280, 302, 308, 797], "se": [32, 562], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 642, 663, 910, 994, 1106], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 84, 166, 179, 189, 197, 226, 330, 1062, 1073], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 61, 153, 157, 246, 770, 824, 825, 842, 903, 925, 935, 1082], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 146], "shinto_shrin": 32, "ship": [32, 151], "shirt": [32, 43, 143], "shit": [32, 205], "shop": [32, 270], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 461], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 166, 179, 189, 197, 215, 330, 1030], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 149, 161, 440, 826], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 322, 955], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 213], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 63], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 147, 148, 153, 562, 649, 797, 903, 955, 969, 1111], "sound": [32, 59, 62, 145, 149, 152, 153, 222, 719, 839, 894, 902, 903, 1129], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 117, 427, 438], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 735], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 218, 1052], "sri_lanka": 32, "st": [32, 212, 439, 965, 967, 968], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 599, 903, 985], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 101, 106, 114, 126, 153, 246, 315, 316, 321, 322, 330, 995, 1130], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 109, 265, 268, 503, 514, 520, 522, 555, 750, 950, 994], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 481, 482], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 114, 157, 186, 207, 215, 221, 224, 231, 234, 252, 261, 262, 282, 283, 368, 383, 392, 399, 405, 409, 412, 416, 419, 420, 425, 429, 434, 435, 657, 695, 701, 747, 748, 749, 750, 753, 772, 775, 797, 827, 842, 857, 877, 879, 893, 902, 1002], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 148, 151], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 210], "tea": 32, "teacher": [32, 106, 151, 443, 445, 824, 825, 983], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 148, 169, 189, 228, 234, 888], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 241, 823, 992], "tg": 32, "th": [32, 182, 210, 361, 403, 512, 590, 1032, 1041], "thailand": 32, "thermomet": [32, 69, 82, 84, 85, 173, 182, 234, 254, 334, 336, 337, 339, 454, 461, 464, 466, 475, 476, 489, 503, 543, 544, 552, 555, 630, 633, 750, 903], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 62, 65, 83, 89, 91, 151, 163, 164, 173, 178, 182, 193, 215, 221, 222, 224, 231, 234, 249, 250, 251, 253, 262, 271, 273, 297, 310, 311, 340, 343, 344, 345, 433, 462, 479, 493, 556, 697, 705, 714, 716, 723, 725, 728, 729, 749, 750, 779, 789, 795, 809, 817, 893, 915, 934, 942, 944, 945, 947, 949, 953, 954, 956, 967, 968, 969, 1005, 1006, 1095, 1137, 1147, 1148, 1149, 1151, 1163, 1164, 1165], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 62, 65, 114, 170, 271, 418, 730, 750, 774, 799, 806, 812, 815, 816, 818, 830, 833, 893, 902, 918, 922, 934, 953, 959, 961, 969, 1162, 1165], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 151], "tm": 32, "tn": [32, 186], "togo": 32, "toilet": [32, 224, 533, 787, 1005], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1148], "toolbox": [32, 167], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 210], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 213, 222, 297], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 725, 727, 729, 789, 795, 942, 1160], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 265, 268], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 128, 152], "ve": [32, 146, 148, 839, 1129], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 731], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 145, 165, 178, 274, 275, 296, 337, 348, 655, 672, 841, 903, 1007], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 270], "wave": [32, 34, 38, 262, 279], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 206, 207, 224, 244, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 439, 657, 695, 747, 749, 750, 837, 840, 890, 904, 1079], "weari": 32, "wed": [32, 205], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 450], "worri": [32, 418], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 182, 186, 189, 211, 215, 221, 231, 234, 241, 262, 276, 331, 332, 351, 439, 574, 635, 842, 856, 902, 903, 937, 992, 1032, 1045, 1090, 1092, 1120, 1123, 1128], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": 32, "za": [32, 286, 370], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 65, 147, 186, 198, 334, 336, 337, 683, 857, 901, 902], "layout": [33, 142, 163, 236, 415, 428, 1128], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 371, 858], "entiti": [33, 146, 379, 393, 420, 437, 457, 465, 572, 766, 955, 1108], "isoamsa": 33, "mathemat": [33, 238, 1044], "arrow": [33, 35, 36, 38, 73, 74, 857, 987], "isoamsr": 33, "relat": [33, 69, 134, 167, 178, 182, 203, 207, 262, 275, 383, 392, 399, 403, 405, 409, 412, 416, 425, 429, 434, 435, 442, 557, 657, 695, 712, 735, 747, 748, 749, 750, 765, 774, 822, 900, 955, 965, 1095, 1128, 1129], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 76, 87, 88, 142, 146, 152, 206, 207, 215, 219, 221, 222, 224, 229, 231, 234, 244, 338, 382, 415, 427, 595, 672, 734, 775, 789, 797, 842, 971, 974, 987, 999, 1026, 1031, 1108], "sphinxish": 33, "send": [33, 101, 114, 126, 128, 143, 146, 157, 182, 183, 185, 186, 187, 188, 221, 222, 241, 243, 244, 262, 283, 330, 335, 479, 821, 837, 853, 896, 897, 901, 910, 920, 968, 970, 1091, 1108], "v4l": [33, 126], "ssh": [33, 97, 101, 102, 114, 126, 128, 143, 153, 157, 186, 218, 234, 241, 244, 252, 259, 261, 266, 276, 280, 282, 302, 308, 316, 329, 330, 336, 337, 343, 344, 348, 514, 515, 750, 823, 824, 825, 832, 879, 888, 893, 894, 905, 906, 931, 981, 982, 983, 1152, 1154, 1159], "taken": [34, 35, 36, 38, 40, 73, 74, 145, 149, 150, 157, 206, 417, 449, 514, 523, 570, 725, 800, 822, 832, 857, 971, 1022, 1108], "definit": [34, 35, 36, 38, 107, 119, 126, 142, 146, 148, 149, 151, 153, 166, 175, 178, 179, 184, 198, 205, 207, 271, 273, 289, 305, 330, 351, 352, 353, 383, 392, 395, 398, 399, 405, 409, 412, 416, 422, 423, 424, 425, 427, 428, 429, 434, 435, 442, 444, 448, 456, 457, 479, 501, 541, 559, 560, 561, 566, 567, 573, 574, 576, 585, 588, 589, 611, 637, 646, 657, 667, 683, 695, 697, 710, 714, 718, 747, 749, 750, 775, 797, 858, 902, 903, 971, 990, 997, 1003, 1008, 1019, 1023, 1036, 1037, 1040, 1104, 1118, 1135, 1145, 1148], "includ": [34, 35, 36, 38, 44, 107, 138, 148, 153, 157, 161, 163, 174, 178, 185, 197, 198, 207, 208, 215, 219, 221, 222, 224, 231, 234, 238, 259, 273, 280, 289, 301, 305, 327, 338, 352, 353, 355, 359, 361, 363, 394, 395, 410, 415, 418, 420, 424, 431, 440, 441, 443, 444, 445, 447, 452, 455, 456, 457, 458, 459, 460, 462, 464, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 541, 547, 550, 557, 558, 559, 561, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 582, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 635, 639, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 660, 662, 665, 666, 667, 668, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 697, 698, 699, 700, 702, 704, 705, 707, 709, 713, 714, 715, 716, 717, 718, 719, 722, 724, 727, 729, 730, 731, 734, 736, 738, 740, 744, 745, 746, 748, 750, 756, 761, 766, 768, 775, 777, 779, 781, 783, 785, 789, 791, 793, 802, 807, 811, 814, 817, 834, 854, 857, 863, 890, 895, 897, 901, 917, 919, 920, 921, 923, 926, 927, 928, 929, 930, 933, 935, 938, 946, 950, 952, 955, 961, 964, 968, 971, 974, 983, 986, 987, 989, 991, 1019, 1020, 1045, 1046, 1118, 1124, 1130, 1135, 1137, 1140, 1150], "substitut": [34, 35, 36, 38, 106, 126, 198, 234, 280, 327, 421, 437, 441, 672, 914, 1107], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1151], "WITH": [34, 35, 38, 920], "downward": [34, 35, 36, 38, 449], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 372], "circl": [34, 35, 38, 208, 533, 837], "abov": [34, 35, 38, 78, 114, 117, 146, 148, 149, 150, 151, 153, 157, 161, 165, 184, 187, 198, 207, 215, 221, 231, 234, 238, 297, 341, 388, 411, 421, 431, 457, 477, 479, 501, 504, 505, 514, 515, 540, 550, 567, 568, 572, 573, 592, 636, 698, 758, 791, 797, 807, 824, 825, 841, 869, 901, 902, 903, 927, 931, 957, 964, 987, 995, 1026, 1040, 1111, 1117, 1128, 1135], "cudarrl": 34, "02938": 34, "side": [34, 166, 188, 262, 271, 367, 376, 417, 479, 511, 550, 574, 576, 577, 727, 777, 781, 836, 857, 905, 995, 1028, 1074, 1100, 1102, 1111], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 65, 147, 153, 215, 221, 231, 234, 247, 388, 515, 541, 573, 575, 577, 797, 923], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 226, 575, 718], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 61, 112, 147, 149, 152, 186, 188, 198, 252, 261, 270, 282, 283, 727, 750, 827, 883, 884, 887, 890, 893, 918, 919, 986, 1052], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 118, 120, 208, 224, 228, 234, 338, 353, 371, 372, 373, 376, 395, 415, 424, 456, 462, 467, 469, 476, 485, 487, 488, 493, 494, 495, 496, 497, 498, 501, 509, 511, 513, 514, 515, 526, 557, 559, 565, 567, 568, 572, 576, 608, 635, 659, 662, 665, 668, 672, 677, 678, 679, 680, 693, 712, 713, 715, 718, 727, 734, 736, 738, 739, 740, 741, 797, 857, 901, 995, 1015, 1039, 1116], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 101, 102, 117, 118, 161, 203, 213, 216, 219, 224, 228, 229, 234, 241, 243, 255, 256, 279, 285, 458, 462, 465, 515, 533, 611, 612, 613, 616, 658, 704, 705, 709, 750, 761, 766, 893, 905, 906, 907, 909, 989, 999, 1043, 1095, 1106, 1123], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 150, 431, 446, 451, 879, 973], "stem": [34, 766], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 145, 146, 149, 174, 251, 289, 305, 336, 357, 398, 443, 444, 455, 462, 504, 511, 512, 513, 514, 533, 575, 608, 633, 655, 672, 697, 714, 750, 765, 766, 797, 843, 889, 896, 903, 971, 974, 1135, 1140], "tail": [34, 38, 147, 186, 188, 198, 252, 261, 282, 283, 727, 750, 785, 827, 884, 887, 890, 893, 1120], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 63, 84, 110, 111, 117, 145, 146, 148, 166, 197, 208, 234, 280, 374, 375, 382, 388, 460, 504, 511, 557, 560, 564, 572, 573, 630, 637, 663, 839, 840, 857, 901, 910, 929, 971, 999, 1003, 1014, 1015, 1026, 1040, 1094, 1100, 1118], "besid": [34, 35, 38, 161], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 155], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 149, 705], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 123, 145, 146, 147, 148, 149, 153, 156, 174, 178, 186, 198, 215, 219, 221, 224, 231, 234, 242, 270, 330, 348, 359, 369, 371, 372, 376, 380, 381, 408, 415, 417, 426, 430, 432, 433, 452, 457, 514, 559, 560, 565, 570, 635, 705, 714, 724, 734, 736, 738, 740, 748, 756, 768, 777, 779, 795, 797, 802, 807, 811, 836, 857, 879, 903, 914, 920, 923, 953, 961, 990, 997, 1037, 1047, 1095, 1102, 1113, 1120, 1148], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 148, 170, 182, 198, 205, 208, 234, 238, 270, 271, 280, 292, 308, 353, 359, 375, 382, 387, 398, 423, 426, 503, 509, 516, 520, 555, 600, 619, 623, 650, 652, 718, 750, 832, 836, 890, 914, 953, 957, 958, 1026, 1080, 1135], "sign": [34, 35, 36, 38, 149, 156, 161, 224, 369, 371, 379, 423, 437, 461, 635, 698, 770, 1026, 1040, 1100, 1145, 1146], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 106, 145, 147, 148, 178, 198, 202, 258, 297, 307, 351, 423, 427, 460, 512, 557, 669, 714, 894, 895, 901, 933, 965, 1018, 1041, 1107, 1135], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 140, 142, 145, 146, 147, 148, 156, 169, 231, 234, 238, 256, 330, 336, 433, 439, 446, 565, 775, 797, 894, 1097, 1102], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 62], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 152, 173, 193, 216, 229, 234, 243, 246, 276, 279, 280, 285, 298, 302, 308, 339, 439, 504, 719, 993, 1035, 1095], "TO": [34, 35, 38, 1050], "black": [34, 38, 151, 202, 210, 222, 225, 611, 983], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 203, 213, 216, 219, 243, 255, 279, 285, 1095], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 119, 124, 142, 146, 147, 148, 151, 153, 157, 166, 178, 187, 205, 238, 251, 297, 362, 364, 431, 438, 449, 482, 496, 504, 505, 511, 514, 649, 651, 665, 677, 697, 698, 714, 718, 727, 729, 745, 746, 748, 770, 791, 832, 836, 840, 857, 894, 903, 924, 968, 971, 1135], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 271, 533, 610, 619, 623, 652, 750], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 359, 375, 398, 561, 885, 1014], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 117, 142, 161, 247, 272, 316, 455, 572, 641, 768, 781, 793, 800, 811, 903, 913, 917, 971, 994, 1014, 1022, 1085, 1087, 1114], "slash": [34, 38, 881, 965], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 61, 63, 112, 128, 143, 149, 151, 156, 161, 167, 179, 211, 215, 221, 224, 226, 231, 234, 259, 270, 275, 279, 280, 282, 283, 285, 289, 297, 301, 305, 307, 311, 397, 413, 457, 460, 511, 558, 566, 567, 568, 596, 647, 648, 650, 651, 709, 713, 716, 718, 729, 770, 797, 798, 821, 824, 825, 840, 854, 992, 1097, 1108, 1130], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 62, 148, 161, 170, 207, 376, 424, 426, 447, 562, 627, 655, 703, 719, 965], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 573, 904], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 927], "02a70": 35, "approxim": [35, 38, 148, 244], "OR": [35, 38, 221, 359, 375, 398, 415, 885, 1014], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 191, 218, 224, 241, 259, 266, 271, 280, 286, 308, 356, 533, 540, 541, 600, 604, 619, 623, 652, 697, 750, 752, 791, 830, 894, 955, 1042, 1075], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 234, 974, 987, 1044], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 238], "equival": [35, 38, 78, 92, 106, 109, 234, 384, 388, 403, 408, 569, 646, 821, 823, 858, 890, 923, 1003, 1025, 1035, 1045], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 69, 89, 103, 123, 146, 147, 148, 150, 156, 157, 167, 182, 194, 207, 215, 218, 221, 226, 228, 231, 234, 238, 241, 256, 259, 266, 280, 285, 298, 308, 311, 316, 326, 360, 363, 376, 398, 403, 410, 423, 428, 437, 448, 469, 479, 501, 509, 573, 590, 649, 705, 715, 719, 730, 751, 752, 756, 802, 828, 829, 834, 894, 901, 931, 941, 955, 956, 957, 958, 965, 969, 1003, 1014, 1024, 1026, 1037, 1101, 1153], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1073], "02237": [35, 38], "proport": [35, 38, 147], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 126, 151, 157, 166, 178, 196, 205, 206, 219, 226, 250, 251, 253, 276, 280, 308, 310, 311, 403, 437, 442, 515, 533, 683, 711, 720, 728, 749, 750, 840, 901, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 933, 935, 938, 964, 968, 992, 1104, 1161], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1044, 1147], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 775, 876, 905, 994], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 198], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 150], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 920], "02a9a": 35, "greater": [35, 36, 38, 106, 114, 273, 375, 503, 509, 517, 520, 555, 697, 750, 783, 1026], "than": [35, 36, 38, 43, 65, 68, 106, 112, 114, 119, 125, 126, 142, 146, 147, 151, 153, 156, 157, 161, 178, 182, 185, 189, 198, 205, 208, 215, 221, 226, 228, 231, 234, 238, 265, 268, 273, 297, 300, 316, 375, 376, 395, 397, 426, 427, 428, 439, 440, 442, 448, 455, 503, 511, 517, 520, 555, 559, 571, 574, 576, 577, 642, 655, 666, 692, 705, 729, 750, 753, 768, 783, 789, 793, 797, 857, 882, 886, 894, 902, 912, 913, 920, 923, 940, 968, 972, 987, 988, 1003, 1008, 1025, 1026, 1070, 1074, 1104, 1111, 1114, 1130, 1148], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 194, 205, 241], "02a99": 35, "less": [35, 36, 38, 59, 62, 78, 142, 146, 147, 148, 153, 157, 207, 221, 238, 252, 261, 262, 268, 282, 283, 353, 375, 376, 380, 423, 426, 457, 509, 613, 633, 659, 705, 707, 729, 750, 768, 770, 797, 827, 841, 857, 884, 887, 888, 890, 893, 923, 1008, 1026, 1045, 1123, 1124, 1137, 1148, 1154], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 63, 146, 147, 163, 185, 215, 221, 231, 234, 280, 376, 418, 611, 655, 797, 834, 939, 958, 1000, 1001, 1026, 1099, 1121], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 125, 148, 163, 167, 750, 756, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893, 926, 939, 947, 965, 1161], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 234, 238, 280, 748, 781, 1006], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 62, 118, 146, 148, 178, 182, 186, 188, 219, 232, 246, 378, 385, 456, 483, 512, 513, 544, 556, 565, 683, 718, 719, 745, 746, 768, 783, 797, 841, 987, 989, 1095], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 205, 246, 331, 332, 372, 394, 694, 702, 813, 1003, 1005, 1123], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 68, 78, 178, 185, 208, 225, 238, 288, 304, 424, 427, 439, 477, 557, 574, 576, 768, 817, 839, 901, 903, 968, 988, 1001, 1150], "late": [35, 146, 148, 271, 273, 718, 719, 903, 959, 1003, 1020, 1037, 1151], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 477], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 286, 302, 1108], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 62, 114, 145, 146, 147, 149, 151, 153, 156, 161, 162, 174, 176, 186, 188, 202, 231, 234, 262, 265, 268, 498, 512, 574, 576, 577, 797, 823, 894, 903, 914, 929, 976, 979, 985, 1018, 1111], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 88, 134, 146, 148, 153, 161, 164, 169, 178, 238, 415, 442, 447, 452, 571, 573, 813, 829, 834, 955, 969, 1022, 1101, 1114, 1128, 1140], "mcomma": 35, "02a29": 35, "comma": [35, 36, 184, 197, 218, 298, 1103], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 202, 226, 298, 1044], "model": [35, 112, 249, 264, 270, 273, 414, 1026, 1098, 1101, 1120], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 63, 178, 937], "lazi": [35, 215, 221, 231, 234, 367, 714], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 148, 178, 207, 377, 559, 561, 565, 611, 612, 613, 663, 704, 705, 857, 1019, 1034, 1107], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 62, 63, 84, 106, 110, 111, 114, 117, 119, 126, 128, 146, 148, 166, 205, 206, 215, 219, 221, 227, 228, 231, 234, 238, 262, 353, 359, 371, 372, 384, 430, 433, 437, 439, 442, 468, 481, 566, 620, 694, 705, 713, 715, 726, 756, 766, 768, 830, 832, 833, 834, 857, 862, 863, 864, 866, 882, 894, 902, 906, 942, 953, 955, 956, 965, 968, 972, 974, 977, 983, 987, 988, 989, 1002, 1039, 1040, 1047, 1062, 1068, 1101, 1108, 1116, 1119, 1123, 1128, 1129, 1136], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 238], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 920], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 533], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 224, 238, 353, 415, 424, 439, 989], "smte": 35, "02aac": 35, "spar": [35, 264, 439], "02225": [35, 38], "parallel": [35, 38, 59, 62, 72, 73, 74, 78, 91, 152, 175, 178, 182, 184, 219, 274, 275, 296, 447, 727, 750, 787, 789, 797, 800, 833, 841, 942, 953, 956, 1003, 1005, 1006, 1090, 1095, 1152, 1153, 1160, 1164], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 63, 166, 179, 189, 205, 211, 218, 221, 226, 228, 234, 238, 247, 259, 273, 280, 298, 302, 308, 465, 576, 997, 1046, 1049, 1116], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 222, 234, 280, 460, 477, 557, 993, 1032, 1041, 1047, 1137], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 927], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 841], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 112, 161, 211], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1014], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 63, 166, 167, 202, 215, 218, 219, 221, 228, 231, 234, 241, 244, 256, 280, 302, 322, 370, 439, 569, 692, 787, 857, 959, 985, 1003, 1005], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 218], "00026": 36, "ampersand": [36, 668], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 477], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 413, 414, 683, 789, 802, 1007, 1073, 1103], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 153, 775, 836], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 264, 439], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 456, 467, 498, 609, 903, 1020], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 238, 316], "ONE": [36, 656], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 372], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1023], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 115, 142, 189, 218, 238, 255, 365, 397, 433, 437, 442, 465, 488, 501, 504, 505, 509, 713, 715, 779, 793, 833, 901, 957, 973, 1052, 1150], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 215, 221, 231, 234], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 63, 156, 167, 222, 238, 290, 293, 417, 437, 504, 533, 775, 894, 904, 910, 971, 1005], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 157, 198, 327, 636, 903, 968], "space": [36, 38, 63, 78, 99, 110, 111, 114, 142, 146, 147, 148, 153, 166, 169, 193, 207, 234, 252, 259, 261, 262, 280, 282, 283, 321, 332, 333, 341, 360, 379, 381, 400, 461, 466, 475, 479, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 564, 573, 608, 728, 749, 750, 758, 795, 810, 824, 825, 826, 827, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893, 902, 905, 906, 907, 908, 909, 916, 920, 921, 922, 923, 924, 932, 934, 939, 947, 948, 950, 951, 954, 956, 964, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 1003, 1006, 1040], "000ac": 36, "NOT": [36, 38, 176, 359, 398, 443, 482, 483, 496, 497, 768, 885, 1114], "num": [36, 151, 165, 166, 179, 189, 205, 219, 221, 226, 228, 234, 238, 256, 259, 298, 302, 403, 588, 590, 672, 673, 674, 675, 684, 704, 734, 736, 738, 740, 885, 890, 998, 1103], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 234, 241, 244, 280, 286, 302, 308, 1108], "indic": [36, 197, 215, 221, 226, 231, 234, 270, 611, 758], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 238], "period": [36, 84, 120, 123, 163, 186, 431, 564, 730, 807, 894, 902, 921, 931, 953, 955, 968, 1123], "0002e": 36, "full": [36, 164, 209, 213, 259, 376, 391, 419, 424, 527, 538, 573, 677, 714, 727, 750, 836, 841, 902, 944, 950, 995, 1014, 1047, 1103, 1111], "stop": [36, 140, 151, 207, 234, 271, 273, 275, 280, 298, 308, 315, 442, 482, 496, 791, 894, 969, 994, 1117, 1135], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 166, 214, 217, 221, 228, 234, 242, 372, 822, 885, 886, 904, 1039], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 88, 146, 150, 151, 152, 161, 170, 183, 207, 265, 268, 271, 348, 541, 559, 641, 726, 787, 789, 857, 900, 901, 917, 971, 972, 973, 975, 981, 987, 988, 989, 1128], "semi": [36, 266, 300, 469, 713, 939, 990], "0003b": 36, "semicolon": [36, 442, 1103], "shy": 36, "000ad": 36, "soft": [36, 143, 337, 795], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 61, 145, 147, 148, 157, 176, 178, 198, 207, 208, 234, 379, 427, 433, 437, 443, 559, 565, 574, 576, 577, 655, 663, 666, 670, 704, 705, 715, 789, 797, 836, 857, 947, 1003, 1114, 1128], "hmm": [37, 143, 152, 165, 176, 544, 677, 968], "annoi": [37, 43, 316, 439, 655, 1128], "thing": [37, 40, 42, 43, 49, 100, 123, 139, 145, 146, 148, 149, 150, 151, 152, 153, 157, 166, 170, 174, 177, 178, 182, 186, 198, 215, 221, 222, 224, 231, 234, 244, 297, 307, 319, 377, 393, 397, 421, 427, 430, 437, 461, 465, 533, 540, 541, 557, 559, 566, 571, 573, 595, 655, 677, 694, 718, 727, 748, 756, 761, 793, 797, 822, 836, 841, 890, 894, 895, 922, 927, 950, 955, 971, 983, 987, 988, 994, 1008, 1022, 1045, 1135, 1153], "thin": [37, 38], "border": 37, "anfrag": [37, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "dauer": [37, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "tage": [37, 171, 173, 181, 347, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1159, 1161, 1162, 1164, 1165, 1166], "sysprog": [37, 142, 143, 262, 349, 750, 804, 809, 893, 934, 935, 938, 1161, 1162, 1164, 1165], "catcher": 37, "somehow": [37, 42, 118, 123, 125, 130, 147, 300, 571, 805, 1123, 1124], "einf\u00fchrungskur": [37, 1144, 1161, 1162, 1164, 1165], "richtet": [37, 1146, 1161], "kennen": [37, 331, 1161], "lernen": [37, 1161], "zusammenh\u00e4ng": [37, 1161], "grundpfeil": [37, 1161], "erkl\u00e4rt": [37, 166, 169, 173, 1145, 1161, 1165, 1166], "bild": [37, 169, 1161], "orientieren": [37, 1161], "zurechtfinden": [37, 331, 1161], "somedai": 37, "better": [37, 57, 61, 65, 125, 140, 142, 143, 147, 151, 157, 158, 168, 178, 179, 181, 182, 184, 185, 186, 189, 190, 203, 207, 213, 215, 216, 218, 219, 224, 225, 226, 228, 229, 232, 235, 238, 243, 247, 255, 262, 275, 279, 285, 356, 368, 376, 383, 392, 397, 398, 399, 405, 409, 412, 416, 417, 425, 427, 429, 434, 435, 438, 442, 447, 448, 453, 455, 533, 560, 568, 582, 595, 612, 635, 647, 650, 655, 657, 695, 707, 718, 747, 749, 750, 797, 876, 902, 903, 923, 939, 942, 968, 969, 997, 1008, 1026, 1040, 1052, 1091, 1092, 1095, 1100, 1102, 1107, 1113, 1128, 1137], "yet": [37, 78, 136, 146, 153, 156, 166, 168, 235, 236, 246, 259, 297, 394, 427, 455, 464, 477, 479, 514, 515, 527, 533, 626, 729, 797, 814, 824, 825, 902, 910, 914, 968, 995, 1025, 1052, 1119, 1128, 1137], "redefin": 37, "wrap": [37, 63, 205, 243, 297, 476, 715, 721, 797, 1120], "look": [37, 42, 43, 45, 59, 62, 65, 82, 89, 102, 114, 117, 123, 126, 139, 140, 145, 146, 147, 148, 149, 151, 153, 156, 161, 166, 174, 178, 182, 185, 197, 203, 207, 232, 262, 265, 268, 271, 272, 290, 293, 297, 311, 315, 348, 411, 419, 427, 433, 437, 439, 442, 443, 450, 498, 513, 514, 527, 544, 570, 582, 594, 646, 659, 683, 715, 721, 722, 751, 756, 766, 793, 797, 824, 825, 829, 833, 836, 847, 849, 854, 861, 869, 884, 895, 901, 902, 910, 927, 937, 964, 965, 988, 992, 1002, 1019, 1022, 1060, 1064, 1073, 1095, 1102, 1103, 1114, 1130, 1148, 1151], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 63, 78, 94, 123, 131, 146, 151, 163, 176, 198, 293, 297, 300, 327, 348, 423, 426, 433, 514, 591, 594, 662, 703, 835, 895, 902, 914, 939, 1102], "approx": [38, 1083, 1128], "approxeq": 38, "assign": [38, 97, 166, 167, 168, 173, 179, 189, 196, 204, 215, 218, 221, 224, 226, 230, 231, 236, 238, 242, 266, 270, 271, 273, 298, 303, 330, 336, 337, 359, 376, 382, 383, 392, 399, 405, 406, 409, 412, 416, 421, 423, 425, 429, 434, 435, 469, 476, 482, 483, 491, 496, 497, 559, 560, 563, 570, 626, 635, 642, 652, 656, 657, 659, 663, 670, 693, 695, 700, 709, 715, 746, 747, 749, 750, 901, 903, 942, 953, 956, 958, 1035, 1046, 1117, 1119], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 372, 881, 1039], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 202, 210, 226, 298, 415, 732, 735, 738, 739, 740, 741, 749, 750, 1044, 1149], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 270, 361], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 115, 148, 319, 367, 383, 392, 397, 399, 405, 409, 412, 416, 421, 425, 429, 434, 435, 462, 479, 657, 695, 747, 749, 750, 1114], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1128], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 148, 1102], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 85, 97, 107, 114, 146, 147, 148, 149, 165, 168, 176, 179, 184, 189, 194, 196, 202, 205, 208, 211, 212, 216, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 262, 266, 275, 276, 279, 280, 286, 294, 298, 302, 308, 322, 324, 325, 330, 353, 360, 361, 363, 367, 394, 398, 427, 437, 439, 453, 460, 465, 559, 565, 572, 626, 627, 632, 633, 635, 639, 665, 702, 714, 715, 727, 729, 770, 791, 805, 821, 824, 825, 834, 836, 840, 841, 854, 857, 858, 879, 883, 885, 890, 896, 901, 902, 903, 915, 920, 968, 971, 993, 995, 1021, 1027, 1032, 1034, 1035, 1039, 1040, 1043, 1063], "caylei": 38, "0212d": 38, "letter": [38, 65, 370, 1025], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 225, 286, 302], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 97, 117, 142, 182, 251, 255, 338, 415, 424, 455, 456, 457, 459, 460, 462, 464, 477, 479, 480, 498, 511, 512, 513, 514, 515, 574, 575, 576, 577, 666, 667, 704, 713, 714, 744, 745, 746, 748, 1129, 1136, 1151, 1166], "coloneq": 38, "complement": [38, 106, 376], "02201": 38, "complex": [38, 69, 146, 157, 161, 178, 184, 204, 221, 226, 228, 234, 238, 242, 244, 259, 266, 280, 308, 330, 351, 394, 406, 421, 730, 901, 902, 926, 942, 965, 1026, 1035, 1141, 1151], "02102": 38, "02261": 38, "ident": [38, 230, 280, 292, 550, 1014, 1016, 1035], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 427, 477], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 178, 833, 901, 902, 1100, 1102], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 561], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1046], "02200": 38, "FOR": [38, 157, 179, 186], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 207, 215, 221, 224, 225, 226, 231, 234, 238, 276, 297, 359, 367, 368, 373, 383, 387, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 500, 607, 657, 668, 695, 705, 707, 747, 749, 750], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 97, 114, 120, 123, 124, 126, 148, 153, 169, 172, 174, 179, 185, 189, 194, 207, 208, 215, 218, 219, 226, 228, 238, 251, 262, 273, 308, 311, 352, 353, 355, 359, 361, 363, 371, 394, 395, 397, 403, 410, 418, 420, 424, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 464, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 534, 540, 541, 543, 544, 547, 550, 552, 557, 558, 559, 560, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 635, 644, 645, 646, 647, 648, 649, 650, 651, 660, 662, 665, 666, 667, 683, 684, 687, 698, 701, 704, 705, 709, 713, 714, 715, 716, 718, 727, 729, 731, 734, 736, 738, 739, 740, 741, 744, 745, 746, 748, 756, 761, 765, 766, 768, 775, 777, 779, 781, 783, 785, 789, 791, 793, 802, 807, 810, 811, 814, 816, 817, 823, 834, 841, 854, 857, 879, 885, 895, 897, 901, 917, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 933, 935, 938, 952, 955, 959, 961, 963, 964, 968, 969, 971, 972, 973, 974, 979, 983, 986, 987, 989, 1032, 1047, 1123, 1130, 1135, 1137, 1140], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 719, 1123], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 483], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 206, 219, 238, 308], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 193, 297, 498, 511, 795, 857, 876, 894, 994], "corner": [38, 207, 270, 348, 360, 440, 452, 511, 727], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 179, 202, 226, 228, 234, 244, 259, 266, 280, 302, 315, 324, 353, 357, 373, 397, 956, 1056], "lower": [38, 148, 202, 215, 221, 226, 231, 234, 238, 244, 259, 280, 315, 324, 353, 357, 373, 397, 457, 601, 957, 965, 1014, 1119], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 97, 117, 119, 126, 148, 238, 271, 275, 297, 307, 423, 430, 476, 480, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 555, 633, 734, 750, 756, 823, 832, 923, 964, 988, 1100, 1102], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 148, 276], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 215, 221, 224, 225, 231, 234, 256, 264, 280, 353, 376, 465, 550, 574, 894, 965, 1040, 1103, 1152, 1159], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 166, 455, 482, 496, 666, 842, 844, 845, 927, 1036], "nor": [38, 166, 222, 482, 496, 566, 666, 842, 844, 845, 894, 914, 927, 1036], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 61, 148, 151, 156, 161, 178, 205, 215, 221, 224, 231, 234, 238, 265, 268, 270, 300, 333, 457, 467, 626, 633, 655, 713, 756, 894, 902, 926, 969, 992, 1008, 1017, 1050, 1098, 1100, 1102, 1121, 1135], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 272, 301, 775, 1099], "differenti": [38, 69, 649, 717, 797, 842, 901, 1026, 1094, 1108], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 114, 186, 238, 397, 403, 557, 575, 576, 590, 718, 834, 857, 889, 964, 1123], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 73, 115, 122, 123, 124, 125, 137, 153, 156, 161, 164, 166, 182, 203, 216, 221, 222, 229, 231, 234, 238, 243, 246, 256, 264, 270, 279, 285, 297, 316, 377, 426, 433, 447, 453, 459, 476, 498, 506, 507, 508, 509, 510, 514, 556, 557, 562, 677, 692, 710, 713, 758, 797, 834, 835, 857, 894, 902, 914, 955, 1041, 1095, 1098, 1100, 1129, 1148, 1151], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 206, 219, 308, 557, 559, 567, 568, 576, 662, 677, 678, 679, 680, 681, 718], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 218, 1052], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 276], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 136, 146], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 85, 108, 110, 111, 149, 167, 198, 254, 382, 393, 398, 415, 423, 454, 463, 475, 489, 503, 555, 590, 629, 707, 750, 779, 837, 839, 841, 857, 879, 890, 927, 928, 930, 977, 1030, 1045, 1061, 1114, 1148], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 238], "varsubsetneq": 38, "variant": [38, 190, 206, 219, 249, 250, 251, 310, 353, 369, 486, 550, 703, 707, 709, 732, 735, 738, 749, 750, 775, 1155, 1158], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 130, 151, 161, 182, 207, 350, 430, 508, 660, 768, 783, 836], "author": [39, 149, 156, 234, 573, 770, 901, 1050, 1104], "overridden": [39, 376, 627, 694, 1128], "titl": [39, 40, 142, 152, 216, 229, 234, 243, 246, 279, 280, 285, 1011, 1095, 1100], "favorit": [39, 178, 182, 185, 203, 207, 229, 232, 316, 797, 903, 955, 1019, 1095], "__": [39, 163, 165, 173, 280, 708, 712, 1015], "ref": [39, 114, 161, 250, 251, 655, 670, 714, 745], "uniqu": [39, 161, 208, 250, 251, 253, 514, 533, 715, 727, 745, 747, 749, 750, 903, 917, 931, 990, 1043, 1047, 1117], "across": [39, 43, 146, 153, 163, 215, 221, 231, 234, 264, 273, 297, 348, 376, 396, 420, 455, 460, 479, 542, 718, 729, 748, 824, 825, 836, 854, 901, 903, 923, 931, 965, 1026, 1037, 1104], "tree": [39, 42, 100, 102, 114, 136, 138, 147, 149, 152, 157, 161, 174, 175, 182, 206, 219, 222, 225, 229, 262, 290, 293, 406, 428, 433, 445, 477, 512, 514, 611, 614, 750, 772, 775, 789, 799, 822, 824, 825, 827, 841, 857, 858, 865, 869, 871, 877, 886, 893, 902, 907, 909, 914, 934, 942, 951, 974, 979, 999, 1011, 1102, 1120, 1128, 1130], "_dummi": 39, "dummi": [39, 152, 336, 337, 777, 816, 1135], "One": [39, 43, 59, 62, 63, 76, 80, 82, 97, 106, 146, 148, 157, 174, 185, 206, 224, 245, 246, 271, 316, 330, 341, 357, 397, 410, 419, 422, 431, 433, 438, 444, 449, 455, 514, 533, 541, 556, 575, 580, 590, 595, 660, 694, 719, 729, 797, 802, 828, 830, 833, 841, 857, 901, 902, 903, 927, 939, 944, 955, 956, 964, 969, 974, 1006, 1030, 1103, 1104, 1108, 1113, 1150, 1164], "a_footnot": 39, "footer": 39, "block": [39, 98, 110, 111, 145, 146, 147, 148, 186, 188, 206, 213, 215, 219, 221, 231, 234, 243, 246, 255, 276, 279, 297, 315, 330, 335, 339, 353, 355, 373, 392, 398, 399, 405, 409, 412, 416, 424, 425, 427, 429, 434, 435, 462, 562, 565, 657, 683, 695, 714, 725, 726, 727, 728, 729, 747, 748, 749, 750, 783, 799, 809, 813, 827, 828, 830, 831, 833, 834, 879, 893, 902, 926, 933, 934, 939, 944, 948, 949, 954, 956, 964, 965, 968, 970, 992, 994, 1020, 1023, 1030, 1033, 1095], "rubric": 39, "nbsphinx": 40, "capabl": [40, 78, 146, 147, 153, 724, 797, 823, 886, 894, 902, 955, 1121, 1151], "nice": [40, 143, 146, 163, 186, 208, 273, 432, 433, 453, 501, 568, 655, 816, 823, 896, 902, 953, 1016, 1052, 1100, 1102, 1111, 1117, 1131], "few": [40, 115, 146, 147, 148, 149, 152, 153, 178, 182, 215, 351, 421, 672, 797, 835, 994, 998, 1129, 1153], "keep": [40, 43, 110, 111, 147, 148, 161, 170, 182, 185, 189, 205, 238, 311, 316, 341, 365, 421, 427, 428, 637, 677, 789, 797, 802, 821, 836, 839, 895, 947, 983, 986, 1006, 1023, 1100, 1101, 1148], "mind": [40, 118, 146, 147, 354, 721, 1023], "though": [40, 43, 45, 53, 68, 145, 146, 151, 153, 156, 157, 161, 162, 167, 174, 178, 182, 184, 185, 203, 206, 208, 219, 221, 222, 224, 229, 232, 246, 255, 264, 265, 268, 279, 300, 301, 316, 357, 367, 376, 388, 393, 455, 456, 457, 460, 469, 477, 479, 512, 513, 514, 533, 557, 559, 560, 564, 567, 570, 573, 574, 576, 577, 590, 591, 626, 633, 655, 663, 665, 672, 677, 683, 700, 704, 709, 714, 715, 718, 725, 736, 738, 751, 752, 756, 775, 789, 828, 835, 836, 839, 842, 876, 890, 894, 901, 902, 903, 913, 921, 923, 950, 955, 957, 959, 965, 974, 992, 994, 995, 998, 1003, 1005, 1012, 1014, 1022, 1026, 1039, 1064, 1095, 1102, 1103, 1116, 1123, 1124, 1128, 1130, 1148, 1151], "toplevel": [40, 44, 109, 114, 126, 174, 207, 256, 441, 443, 447, 448, 449, 451, 498, 770, 798, 823, 992, 1137], "begin": [40, 42, 43, 112, 116, 119, 121, 122, 125, 126, 128, 145, 146, 156, 184, 205, 206, 218, 221, 234, 238, 250, 251, 255, 272, 280, 301, 347, 353, 361, 373, 376, 397, 403, 420, 421, 423, 453, 460, 550, 560, 573, 586, 588, 590, 591, 592, 594, 595, 597, 598, 599, 601, 602, 603, 604, 608, 611, 622, 655, 670, 683, 686, 690, 697, 703, 704, 707, 721, 750, 823, 857, 881, 889, 915, 923, 999, 1023, 1045, 1095, 1129], "deeper": [40, 147, 178, 265, 268, 442, 950], "trail": [40, 150, 234, 276, 280, 298, 321, 322], "underscor": [40, 370, 995, 1002, 1015, 1025], "ipynb": [40, 165, 185, 195, 197, 234, 244, 265, 269, 275, 279, 285, 290, 293, 297, 301, 307, 308, 1097, 1101], "labels_": [40, 167, 169], "result": [40, 78, 115, 118, 125, 139, 148, 157, 163, 165, 185, 189, 205, 215, 221, 224, 231, 234, 238, 247, 256, 276, 280, 360, 376, 411, 418, 420, 421, 427, 457, 482, 486, 573, 601, 662, 668, 677, 705, 768, 913, 959, 987, 999, 1014, 1028, 1034, 1046, 1103], "cluster": [40, 169, 1097, 1102], "membership": [40, 167, 184, 185, 227, 469, 1027, 1044], "sequenc": [40, 106, 109, 139, 166, 167, 169, 179, 185, 206, 208, 217, 219, 220, 221, 224, 227, 231, 234, 238, 256, 271, 273, 280, 286, 352, 406, 457, 503, 518, 519, 520, 555, 600, 619, 623, 639, 652, 660, 707, 750, 956, 999, 1000, 1001, 1017, 1026, 1027, 1032, 1034, 1037, 1041, 1042, 1065, 1077, 1108, 1151], "bring": [40, 45, 112, 118, 126, 139, 146, 148, 156, 157, 178, 182, 185, 188, 224, 262, 265, 268, 271, 273, 297, 300, 338, 343, 344, 348, 533, 572, 611, 635, 646, 654, 793, 797, 809, 901, 902, 903, 972, 1019, 1067, 1090, 1108, 1148, 1151], "bigplan": [40, 169, 1097], "686": [40, 167, 221, 985], "unknown": [40, 264, 439, 735, 753, 902, 1008], "cmd": [40, 152, 791, 816, 1130], "color": [40, 151, 169, 879, 1097, 1123], "tmp": [40, 128, 142, 147, 149, 152, 189, 202, 205, 221, 226, 234, 238, 241, 244, 246, 251, 253, 256, 259, 266, 276, 280, 286, 302, 308, 362, 404, 427, 440, 445, 446, 453, 514, 515, 635, 712, 731, 775, 797, 819, 823, 828, 837, 841, 842, 855, 856, 857, 859, 861, 862, 864, 866, 869, 876, 879, 880, 885, 906, 913, 924, 925, 927, 928, 930, 955, 961, 992, 993, 994, 999, 1007, 1008, 1014, 1015, 1036, 1037, 1041, 1045, 1051, 1107, 1116, 1117, 1129, 1130], "craft": [41, 53, 232, 274, 275, 437, 482, 719, 751], "tar": [42, 61, 109, 114, 133, 142, 157, 186, 188, 252, 261, 262, 282, 283, 433, 750, 797, 819, 820, 822, 827, 893, 979, 981, 982, 983, 985, 986, 992, 1050, 1130, 1154], "xz": [42, 61, 149, 157, 262, 426, 979, 983, 985, 986], "push": [42, 77, 128, 150, 152, 161, 164, 207, 222, 232, 289, 305, 336, 398, 443, 444, 455, 479, 589, 592, 727, 750, 797, 939, 957, 1070, 1074, 1128], "cmakelist": [42, 44, 112, 114, 117, 126, 172, 173, 174, 175, 176, 207, 224, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 498, 511, 512, 513, 514, 515, 534, 537, 540, 541, 543, 546, 549, 552, 646, 960, 963, 967, 972, 973, 1134, 1137, 1139], "src": [42, 146, 147, 149, 207, 221, 251, 253, 259, 336, 365, 377, 427, 451, 452, 462, 498, 501, 511, 512, 513, 514, 516, 575, 592, 713, 714, 823, 841, 885, 1045, 1050, 1128], "load": [42, 43, 53, 56, 63, 75, 88, 145, 156, 157, 164, 165, 169, 185, 193, 194, 210, 211, 215, 221, 231, 234, 238, 241, 247, 256, 273, 274, 275, 291, 294, 296, 297, 413, 433, 445, 728, 749, 750, 753, 754, 756, 757, 759, 762, 764, 765, 767, 772, 774, 777, 778, 782, 788, 791, 793, 794, 797, 799, 801, 806, 809, 812, 815, 818, 833, 893, 902, 903, 934, 942, 948, 971, 988, 1095, 1113, 1153, 1162, 1164], "store": [42, 57, 63, 75, 88, 106, 117, 120, 145, 147, 164, 166, 174, 175, 205, 208, 215, 273, 274, 275, 296, 297, 361, 413, 457, 639, 683, 697, 700, 707, 728, 734, 736, 740, 749, 750, 763, 797, 836, 849, 893, 910, 934, 942, 948, 972, 990, 994, 995, 999, 1043, 1073, 1107, 1123, 1164], "search": [42, 51, 53, 106, 139, 141, 142, 146, 167, 170, 176, 178, 184, 185, 194, 205, 206, 208, 211, 215, 218, 219, 221, 224, 225, 226, 229, 231, 234, 247, 256, 259, 263, 266, 271, 276, 280, 286, 288, 304, 308, 397, 424, 427, 439, 503, 514, 516, 520, 555, 600, 605, 619, 623, 640, 652, 750, 775, 839, 857, 889, 950, 972, 985, 1002, 1031, 1101, 1128, 1150], "payload": [42, 758, 785, 895, 897], "primari": [42, 146, 157, 178, 264, 265, 268, 431, 795, 824, 825, 832, 834, 1073], "insert": [42, 63, 109, 112, 140, 145, 161, 165, 182, 184, 189, 219, 221, 224, 226, 228, 234, 238, 241, 259, 280, 286, 298, 330, 394, 411, 415, 431, 458, 464, 486, 492, 503, 520, 521, 522, 533, 550, 555, 591, 592, 605, 615, 616, 640, 648, 649, 650, 652, 659, 666, 668, 683, 704, 746, 748, 750, 775, 781, 791, 793, 797, 857, 901, 914, 945, 955, 1027, 1042, 1043, 1051, 1107, 1128], "const": [42, 58, 70, 97, 107, 109, 110, 111, 114, 117, 173, 208, 224, 271, 273, 310, 365, 373, 377, 395, 397, 403, 411, 423, 425, 427, 429, 434, 435, 440, 456, 457, 458, 459, 460, 462, 464, 479, 480, 486, 487, 488, 491, 492, 493, 495, 496, 497, 503, 507, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 541, 546, 548, 550, 555, 557, 558, 559, 560, 562, 564, 565, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 590, 594, 596, 597, 598, 599, 600, 606, 610, 612, 615, 616, 619, 622, 623, 626, 629, 630, 633, 635, 636, 637, 640, 641, 644, 645, 647, 648, 649, 650, 651, 652, 659, 661, 662, 663, 664, 665, 666, 667, 668, 677, 678, 679, 680, 681, 683, 685, 686, 689, 690, 691, 692, 693, 695, 697, 698, 699, 700, 702, 703, 705, 707, 711, 713, 714, 715, 716, 717, 720, 728, 729, 731, 736, 740, 744, 745, 746, 747, 748, 749, 750, 753, 756, 761, 777, 779, 783, 791, 793, 807, 811, 817, 915, 923, 927, 928, 929, 930, 933, 935, 938, 940, 942, 944, 952, 958, 961, 964, 965, 969, 989, 1007, 1083, 1106, 1140, 1146, 1147], "care": [42, 46, 48, 80, 126, 145, 146, 148, 151, 153, 178, 186, 218, 321, 353, 376, 385, 387, 403, 427, 428, 451, 482, 483, 558, 572, 590, 633, 704, 705, 709, 718, 740, 741, 744, 751, 775, 787, 789, 797, 802, 823, 824, 825, 902, 910, 914, 926, 939, 947, 973, 995, 1019, 1023, 1035, 1042, 1045, 1046, 1052, 1075, 1099, 1107, 1120, 1130], "dump": [42, 146, 165, 194, 210, 211, 221, 234, 238, 241, 247, 256, 291, 294, 297, 462, 481, 482, 565, 570, 693, 713, 835, 968, 969], "db": [42, 50, 156, 182, 207, 208, 209, 213, 219, 232, 247, 443, 457, 458, 464, 486, 492, 647, 648, 649, 650, 651, 719, 1051], "pull": [42, 44, 50, 63, 77, 114, 115, 125, 150, 161, 198, 207, 208, 222, 315, 338, 439, 443, 455, 572, 655, 770, 797, 999, 1002, 1119], "paramet": [42, 58, 63, 110, 111, 117, 123, 145, 148, 153, 163, 166, 173, 174, 178, 183, 184, 185, 187, 189, 197, 198, 202, 205, 206, 207, 208, 215, 219, 221, 224, 225, 227, 230, 231, 234, 241, 244, 265, 266, 268, 270, 316, 321, 330, 352, 361, 363, 367, 378, 382, 397, 398, 403, 405, 406, 409, 412, 416, 417, 423, 425, 429, 434, 435, 438, 440, 445, 501, 511, 517, 533, 547, 557, 559, 562, 566, 569, 570, 573, 577, 582, 583, 637, 643, 657, 660, 667, 683, 695, 697, 702, 715, 727, 747, 749, 750, 755, 756, 763, 777, 800, 805, 810, 813, 816, 817, 837, 839, 902, 917, 940, 950, 965, 973, 986, 990, 995, 1009, 1012, 1017, 1024, 1040, 1047, 1052, 1062, 1068, 1070, 1074, 1080, 1089, 1100, 1103, 1106, 1113, 1116, 1117, 1119, 1144, 1145], "entri": [42, 118, 143, 147, 148, 152, 210, 221, 352, 452, 468, 611, 613, 633, 785, 823, 836, 840, 841, 842, 879, 885, 917, 923, 937, 988, 995, 1043, 1106, 1137], "o_creat": [42, 750, 893, 923, 924, 928, 932, 934, 951, 964], "o_trunc": [42, 48, 923], "o_wronli": [42, 750, 893, 923, 924, 926, 927, 928, 932, 933, 934, 935, 938, 951, 964], "0666": [42, 856, 927, 928, 964], "assert": [42, 46, 182, 206, 219, 231, 234, 248, 264, 297, 299, 439, 462, 604, 645, 648, 650, 656, 729, 921, 933, 935, 938, 964, 968, 969, 1007, 1083, 1090, 1091, 1092, 1128, 1134, 1135, 1137, 1145], "ing": [42, 929], "mode": [42, 101, 114, 149, 161, 163, 198, 206, 215, 218, 219, 221, 231, 234, 238, 241, 259, 262, 266, 280, 283, 297, 427, 503, 555, 728, 749, 750, 756, 789, 795, 823, 824, 825, 827, 830, 831, 834, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 857, 893, 896, 903, 917, 922, 923, 924, 932, 934, 948, 951, 954, 956, 964, 965, 1020, 1022, 1123], "binaryus": 42, "hton": [42, 920], "arpa": [42, 920], "inet": [42, 163, 920], "again": [42, 99, 114, 145, 146, 148, 151, 153, 157, 161, 162, 174, 178, 182, 184, 185, 186, 198, 207, 232, 237, 246, 252, 255, 261, 262, 279, 282, 285, 301, 330, 331, 332, 335, 336, 341, 348, 349, 398, 439, 461, 465, 475, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 550, 555, 557, 559, 572, 573, 577, 587, 666, 677, 719, 727, 728, 745, 748, 749, 750, 817, 820, 824, 825, 826, 827, 830, 831, 838, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 887, 893, 903, 910, 913, 916, 918, 920, 921, 922, 924, 929, 932, 934, 935, 944, 948, 950, 951, 954, 956, 965, 973, 975, 976, 977, 978, 979, 980, 981, 982, 992, 1012, 1017, 1035, 1040, 1045, 1095, 1113, 1116, 1148], "od": [42, 234], "hardwir": [42, 63, 311, 758, 919, 1012], "enter": [42, 110, 111, 120, 179, 186, 215, 220, 221, 231, 234, 243, 244, 246, 247, 264, 297, 298, 315, 330, 335, 355, 550, 573, 632, 666, 672, 683, 715, 775, 797, 813, 830, 853, 955, 956, 1030, 1082], "joerg": [42, 50, 128, 165, 179, 180, 182, 183, 185, 187, 194, 198, 202, 205, 211, 218, 221, 224, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 273, 275, 276, 280, 286, 291, 298, 302, 308, 324, 327, 422, 449, 457, 464, 498, 514, 516, 532, 570, 604, 616, 635, 645, 646, 647, 648, 650, 667, 824, 825, 832, 834, 839, 853, 869, 882, 888, 913, 950, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1024, 1046, 1050, 1073, 1090, 1103, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "huber": [42, 228, 234, 1103], "caro": [42, 218, 228, 231, 238, 241, 244, 247, 256, 259, 266, 280, 298, 308, 457, 464, 516, 532, 604, 616, 648, 650, 1011, 1013, 1033, 1084, 1086, 1090, 1092, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "johanna": [42, 218, 228, 231, 238, 241, 259, 266, 280, 298, 308, 457, 516, 532, 604, 616, 1033, 1084, 1086, 1090, 1092, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "bodi": [42, 50, 55, 110, 111, 152, 352, 353, 355, 359, 388, 398, 427, 517, 550, 559, 560, 564, 567, 637, 655, 656, 659, 718, 999, 1129], "compil": [42, 43, 65, 103, 104, 108, 110, 111, 114, 147, 148, 157, 166, 173, 174, 175, 194, 208, 211, 224, 231, 247, 256, 259, 262, 263, 271, 280, 286, 288, 304, 308, 311, 338, 350, 363, 372, 373, 382, 385, 387, 394, 395, 404, 406, 413, 416, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 434, 435, 439, 443, 446, 448, 451, 452, 455, 461, 475, 477, 482, 483, 496, 497, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 541, 547, 550, 555, 557, 560, 562, 566, 568, 572, 583, 611, 630, 637, 642, 644, 655, 656, 657, 658, 660, 662, 663, 665, 666, 668, 670, 672, 677, 680, 683, 692, 693, 695, 701, 704, 705, 707, 709, 713, 714, 747, 749, 750, 765, 766, 781, 893, 901, 972, 973, 976, 977, 978, 979, 981, 995, 1020, 1025, 1037, 1039, 1135, 1137, 1145, 1146, 1148, 1149, 1150, 1161], "still": [42, 54, 61, 134, 140, 145, 146, 147, 148, 156, 157, 166, 167, 168, 208, 218, 224, 262, 264, 321, 341, 350, 401, 413, 439, 442, 448, 501, 523, 544, 547, 565, 566, 587, 593, 626, 641, 666, 683, 700, 704, 709, 713, 714, 716, 717, 718, 760, 765, 797, 800, 840, 854, 876, 901, 902, 903, 953, 955, 957, 968, 990, 998, 1001, 1007, 1020, 1023, 1026, 1050, 1086, 1109, 1117, 1137, 1145], "funni": [42, 44, 50, 100, 114, 178, 262, 460, 750, 827, 865, 871, 877, 893, 972], "temp": [42, 44, 234, 339, 713, 714, 715], "got": [42, 45, 146, 156, 208, 280, 302, 397, 669, 923, 996], "overwritten": [42, 47, 53, 55, 56, 592, 750, 924, 1002], "suspect": [42, 148, 150], "inmem": 42, "loos": [42, 43, 182, 198, 351, 376, 423, 787], "foolishli": 42, "main": [42, 50, 63, 107, 120, 139, 148, 151, 152, 157, 185, 207, 219, 231, 232, 234, 251, 262, 270, 273, 275, 288, 290, 293, 297, 304, 330, 350, 352, 353, 355, 359, 361, 363, 364, 378, 393, 394, 395, 397, 401, 413, 420, 424, 427, 428, 431, 433, 439, 440, 442, 446, 462, 476, 481, 482, 483, 498, 499, 501, 509, 511, 513, 514, 533, 541, 544, 547, 561, 565, 566, 568, 570, 572, 573, 575, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 639, 644, 645, 646, 647, 648, 649, 650, 651, 655, 660, 670, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 697, 699, 700, 702, 705, 707, 713, 714, 716, 717, 718, 719, 722, 727, 729, 748, 758, 765, 766, 768, 797, 834, 836, 854, 901, 903, 904, 917, 919, 920, 921, 927, 928, 929, 930, 935, 938, 939, 941, 945, 950, 952, 955, 956, 961, 964, 965, 968, 971, 979, 983, 989, 1003, 1006, 1021, 1085, 1087, 1135, 1140, 1153], "chang": [42, 45, 46, 47, 51, 55, 56, 77, 80, 114, 120, 124, 125, 145, 148, 150, 151, 152, 153, 156, 157, 161, 169, 182, 198, 207, 238, 246, 337, 376, 413, 415, 419, 422, 423, 427, 437, 440, 455, 500, 506, 511, 512, 514, 515, 566, 591, 648, 702, 727, 748, 750, 770, 775, 823, 832, 834, 836, 854, 863, 866, 881, 894, 896, 901, 902, 913, 917, 938, 968, 971, 986, 1002, 1026, 1035, 1074, 1085, 1087, 1090, 1113, 1117, 1131, 1148], "errorhandl": 42, "just": [42, 46, 63, 69, 84, 108, 119, 123, 136, 145, 146, 147, 148, 149, 150, 152, 153, 157, 161, 168, 170, 174, 178, 185, 208, 219, 222, 247, 288, 297, 304, 318, 359, 378, 403, 406, 415, 433, 437, 442, 452, 457, 498, 501, 511, 513, 514, 515, 538, 557, 558, 559, 565, 568, 569, 570, 573, 592, 620, 627, 633, 637, 641, 655, 662, 666, 668, 669, 683, 698, 701, 715, 717, 719, 734, 748, 755, 760, 768, 770, 777, 781, 787, 789, 797, 813, 836, 857, 860, 861, 890, 894, 902, 903, 918, 920, 921, 927, 928, 930, 939, 940, 950, 957, 965, 983, 990, 993, 994, 997, 999, 1017, 1018, 1024, 1025, 1026, 1033, 1037, 1045, 1046, 1100, 1101, 1108, 1113, 1114, 1118, 1119, 1124, 1128, 1140, 1150], "silent": [42, 65, 228, 238, 659, 901], "truncat": [42, 234, 280, 353, 374, 476, 839, 923, 1045], "faschingb": 42, "echo": [42, 147, 198, 234, 262, 316, 514, 639, 770, 779, 797, 824, 825, 828, 829, 837, 841, 851, 860, 863, 867, 876, 894, 896, 901, 902, 903, 904, 924, 926, 935, 937, 938, 950, 953, 959, 968, 1130], "success": [42, 175, 215, 221, 231, 234, 414, 443, 672, 725, 775, 779, 869, 1061], "failur": [42, 43, 215, 221, 231, 234, 246, 251, 280, 315, 423, 433, 439, 453, 511, 515, 1128, 1129, 1136, 1137, 1140], "renam": [42, 50, 57, 63, 66, 99, 112, 114, 139, 205, 252, 261, 262, 282, 283, 550, 702, 750, 765, 766, 827, 864, 877, 893, 989, 1107], "most": [43, 44, 57, 59, 62, 65, 87, 112, 142, 145, 146, 148, 149, 152, 157, 168, 170, 176, 178, 182, 184, 206, 215, 218, 221, 222, 231, 232, 234, 238, 244, 264, 266, 280, 300, 301, 302, 315, 351, 359, 388, 391, 398, 413, 415, 421, 426, 427, 431, 432, 442, 456, 469, 512, 572, 573, 611, 663, 707, 712, 715, 721, 775, 783, 797, 802, 822, 824, 825, 828, 835, 859, 890, 894, 901, 903, 915, 923, 929, 942, 957, 965, 968, 969, 971, 992, 993, 994, 999, 1006, 1007, 1008, 1014, 1015, 1023, 1025, 1026, 1027, 1030, 1033, 1036, 1037, 1041, 1043, 1046, 1047, 1052, 1094, 1095, 1104, 1108, 1112, 1116, 1117, 1122, 1124, 1128, 1129, 1135, 1150, 1151, 1153], "somebodi": [43, 153, 161, 174, 208, 365, 422, 443, 541, 565, 617, 677, 683, 694, 725, 787, 805, 959], "concis": [43, 145, 178, 182, 232, 301, 331, 332, 442, 797, 1095], "longer": [43, 161, 959, 1020, 1148], "necessari": [43, 61, 125, 139, 147, 153, 157, 166, 175, 189, 205, 208, 265, 268, 300, 301, 355, 365, 397, 437, 439, 443, 455, 501, 560, 564, 632, 658, 659, 693, 703, 715, 727, 793, 797, 832, 901, 903, 904, 919, 957, 968, 988, 1015, 1022, 1026, 1050, 1107, 1128], "gosh": [43, 142, 376, 421, 423, 617, 700, 947, 992, 993, 999, 1026], "hungarian": [43, 417], "notat": [43, 173, 213, 229, 234, 239, 280, 417, 730, 902, 1008], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 208, 210, 224, 232, 279, 290, 293, 640, 648, 649, 650, 652, 750, 1084, 1085, 1086, 1087, 1092], "bolt": [43, 208], "onto": [43, 59, 62, 112, 118, 120, 156, 167, 208, 224, 297, 479, 561, 638, 652, 715, 750, 797, 882, 894, 902, 921, 953, 976, 983], "unclear": [43, 504, 969], "semant": [43, 49, 81, 146, 170, 250, 251, 253, 271, 310, 408, 422, 423, 477, 558, 611, 617, 656, 663, 695, 711, 714, 715, 716, 717, 720, 728, 747, 749, 750, 756, 761, 789, 968, 969, 1026, 1104, 1148], "backingstor": [43, 53, 56, 750], "mangl": [43, 205, 206, 219, 236, 1020], "prefix": [43, 61, 142, 157, 215, 219, 221, 231, 234, 280, 323, 569, 599, 655, 797, 983, 985, 992, 1014, 1015, 1040, 1047, 1130], "m_": 43, "enough": [43, 149, 153, 170, 178, 228, 238, 271, 280, 341, 365, 456, 632, 901, 914, 942, 972, 994, 1011, 1019, 1040, 1108, 1113, 1120, 1122, 1129, 1150], "take": [43, 48, 86, 102, 110, 111, 115, 118, 119, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 161, 163, 166, 167, 169, 174, 178, 179, 184, 185, 186, 206, 219, 224, 226, 234, 238, 244, 268, 307, 315, 316, 321, 330, 360, 397, 400, 417, 419, 426, 428, 432, 433, 437, 438, 440, 455, 456, 479, 480, 482, 483, 501, 511, 514, 527, 533, 547, 559, 566, 570, 573, 575, 613, 637, 655, 660, 667, 668, 677, 705, 707, 713, 717, 727, 740, 741, 760, 787, 797, 823, 824, 825, 901, 931, 959, 983, 989, 993, 997, 1019, 1035, 1036, 1052, 1059, 1062, 1064, 1068, 1069, 1070, 1073, 1074, 1075, 1077, 1079, 1089, 1094, 1102, 1103, 1108, 1113, 1123, 1130], "dogmat": [43, 224, 348, 1108], "switch": [43, 45, 54, 58, 59, 62, 110, 111, 112, 114, 115, 116, 119, 120, 121, 123, 147, 151, 153, 165, 166, 207, 215, 221, 231, 232, 234, 311, 316, 317, 319, 336, 339, 342, 372, 386, 390, 392, 399, 405, 409, 412, 414, 416, 425, 429, 432, 434, 435, 439, 442, 455, 469, 503, 504, 505, 555, 616, 656, 657, 695, 736, 738, 747, 749, 750, 777, 795, 802, 811, 814, 816, 830, 834, 894, 897, 955, 988, 1145, 1149], "bool": [43, 50, 53, 55, 56, 122, 125, 189, 196, 218, 221, 224, 226, 228, 231, 234, 241, 244, 259, 263, 264, 266, 270, 280, 308, 447, 449, 516, 517, 521, 523, 528, 557, 559, 573, 574, 575, 576, 577, 595, 598, 604, 613, 660, 672, 673, 674, 675, 683, 686, 690, 697, 727, 729, 731, 750, 810, 817, 955, 961, 968, 1026, 1052, 1114, 1119], "wear": [43, 143, 147], "incorrect": [43, 215, 221, 231, 234, 238, 376, 395, 1120], "metaphor": 43, "But": [43, 146, 147, 148, 151, 162, 198, 207, 297, 359, 365, 394, 397, 403, 406, 419, 421, 427, 437, 556, 557, 565, 570, 571, 572, 590, 608, 626, 627, 665, 668, 704, 713, 717, 719, 735, 749, 750, 779, 781, 797, 807, 824, 825, 879, 893, 901, 902, 903, 910, 924, 932, 934, 939, 947, 951, 974, 988, 990, 1011, 1014, 1020, 1100, 1103, 1114], "support": [43, 78, 118, 147, 149, 153, 157, 166, 170, 182, 194, 196, 215, 218, 221, 226, 228, 231, 234, 238, 241, 256, 259, 266, 298, 308, 326, 395, 419, 433, 439, 556, 557, 559, 663, 715, 719, 734, 744, 748, 753, 789, 879, 901, 902, 903, 913, 965, 971, 999, 1007, 1014, 1020, 1037, 1050, 1100, 1102, 1117, 1135], "copy_process": 43, "law": [43, 198, 327, 370, 415, 994, 1119], "tdd": [43, 114, 177, 182, 192, 232, 274, 290, 293, 297, 311, 349, 1128], "until": [43, 55, 97, 98, 99, 102, 105, 110, 111, 114, 117, 123, 125, 134, 136, 146, 148, 150, 152, 197, 206, 218, 237, 255, 275, 301, 387, 393, 418, 421, 515, 575, 639, 683, 689, 727, 729, 765, 785, 795, 805, 807, 813, 830, 834, 841, 857, 869, 876, 918, 919, 920, 921, 944, 958, 965, 969, 998, 999, 1020, 1028, 1030, 1095], "fail": [43, 44, 142, 146, 148, 156, 157, 161, 173, 178, 208, 234, 251, 283, 315, 341, 440, 443, 453, 457, 462, 464, 511, 642, 663, 665, 672, 677, 731, 748, 750, 775, 797, 876, 893, 903, 924, 929, 932, 934, 949, 950, 951, 968, 988, 992, 994, 1003, 1045, 1061, 1117, 1129, 1130, 1134, 1136, 1138], "suffici": [43, 161, 166, 178, 316, 564, 592, 633, 637, 648, 656, 770, 879, 969, 1017, 1019, 1047, 1129], "pass": [43, 44, 48, 55, 57, 58, 63, 110, 111, 166, 174, 178, 183, 184, 185, 187, 194, 205, 207, 211, 215, 221, 224, 226, 228, 231, 234, 238, 241, 244, 246, 247, 251, 256, 259, 264, 265, 268, 276, 280, 298, 315, 341, 361, 363, 365, 376, 397, 401, 404, 406, 423, 453, 455, 460, 462, 501, 511, 512, 513, 514, 516, 517, 557, 567, 568, 574, 575, 576, 577, 586, 637, 643, 667, 697, 705, 710, 714, 717, 744, 745, 746, 763, 800, 841, 901, 927, 930, 941, 950, 973, 990, 992, 993, 994, 995, 1007, 1008, 1009, 1011, 1017, 1035, 1037, 1045, 1047, 1083, 1112, 1128, 1135], "current": [43, 99, 109, 114, 117, 132, 134, 147, 148, 149, 151, 153, 156, 157, 161, 186, 208, 215, 221, 231, 234, 252, 259, 261, 262, 280, 282, 283, 322, 341, 344, 349, 398, 431, 439, 455, 457, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 555, 645, 649, 714, 715, 728, 735, 749, 750, 766, 797, 805, 819, 823, 824, 825, 826, 827, 830, 831, 832, 834, 840, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 879, 881, 893, 902, 916, 922, 923, 924, 932, 934, 939, 941, 948, 951, 954, 955, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 993, 998, 1019, 1022, 1030, 1033, 1154], "initi": [43, 45, 63, 110, 111, 112, 114, 122, 128, 145, 146, 149, 153, 161, 163, 173, 178, 182, 187, 193, 202, 206, 207, 217, 218, 219, 234, 238, 241, 244, 249, 259, 266, 271, 273, 276, 280, 293, 302, 308, 353, 355, 362, 406, 411, 421, 425, 429, 431, 434, 435, 457, 459, 477, 482, 483, 496, 497, 501, 503, 504, 505, 506, 507, 508, 511, 533, 547, 550, 555, 559, 560, 561, 563, 568, 570, 572, 574, 576, 591, 592, 593, 598, 611, 616, 637, 642, 644, 645, 646, 651, 652, 666, 677, 695, 703, 714, 715, 717, 729, 747, 749, 750, 755, 758, 760, 761, 768, 775, 783, 793, 797, 824, 825, 833, 858, 888, 902, 903, 918, 921, 939, 942, 955, 964, 965, 971, 1006, 1009, 1039, 1100, 1104, 1148, 1153], "mess": [43, 146, 232, 251, 253, 308, 310, 311, 657, 695, 749, 750, 1026, 1039, 1129], "roughli": [43, 65, 148, 153, 297, 426, 822, 955, 964], "took": [43, 145, 152, 182, 1060], "our": [43, 53, 59, 62, 70, 77, 104, 114, 122, 123, 125, 126, 128, 147, 148, 150, 152, 157, 161, 168, 182, 197, 198, 207, 208, 222, 224, 262, 273, 275, 311, 330, 423, 426, 437, 448, 456, 460, 465, 477, 481, 498, 509, 514, 648, 651, 770, 777, 797, 901, 902, 927, 930, 955, 965, 969, 971, 983, 986, 989, 995, 1092, 1100, 1103], "craftsmanship": [43, 45], "anoth": [43, 63, 78, 112, 145, 146, 147, 148, 152, 153, 156, 157, 161, 168, 170, 175, 178, 184, 185, 208, 215, 221, 224, 231, 236, 238, 244, 259, 262, 265, 268, 271, 297, 367, 385, 386, 400, 408, 420, 427, 438, 455, 456, 459, 464, 479, 482, 483, 496, 497, 501, 506, 515, 567, 570, 571, 573, 655, 660, 683, 707, 715, 719, 729, 735, 740, 741, 785, 797, 823, 824, 825, 830, 839, 841, 853, 890, 901, 903, 913, 914, 928, 942, 944, 956, 964, 969, 986, 989, 990, 993, 994, 1011, 1018, 1026, 1042, 1046, 1051, 1103, 1111, 1117, 1120, 1128, 1151], "isol": [43, 54, 176, 178, 182, 232, 246, 901, 955, 956, 1006, 1095, 1107, 1123, 1139, 1141], "wrong": [43, 78, 146, 148, 271, 376, 398, 417, 633, 719, 770, 927, 942, 956, 990, 994, 1006, 1025, 1089, 1100], "oracl": [43, 1104], "conduct": [43, 1128], "serious": 43, "safeti": [43, 224, 419, 422, 425, 429, 434, 435, 438, 533, 656, 726, 750, 756, 894, 968, 969, 992], "architectur": [43, 108, 143, 153, 205, 347, 371, 398, 415, 438, 719, 758, 894, 921, 971, 972, 981, 983, 1151], "treat": [43, 81, 238, 363, 393, 839], "them": [43, 63, 66, 110, 111, 139, 143, 145, 146, 148, 151, 152, 153, 156, 157, 161, 166, 167, 168, 175, 178, 182, 183, 185, 187, 203, 205, 208, 219, 243, 246, 255, 275, 285, 297, 393, 415, 446, 457, 461, 477, 513, 574, 576, 577, 630, 637, 639, 642, 655, 705, 719, 797, 823, 829, 830, 836, 839, 864, 876, 903, 910, 955, 956, 965, 968, 971, 972, 983, 988, 993, 994, 995, 996, 1017, 1019, 1041, 1073, 1076, 1095, 1101, 1108, 1119, 1135], "carefulli": [43, 148, 161, 423, 482, 672, 1101], "independ": [43, 63, 226, 238, 365, 398, 570, 881, 895, 903, 973], "self": [43, 59, 62, 63, 146, 147, 157, 165, 166, 173, 179, 182, 184, 202, 205, 206, 218, 219, 221, 228, 231, 236, 238, 244, 247, 259, 266, 276, 280, 286, 298, 302, 431, 439, 557, 559, 663, 665, 666, 700, 713, 719, 725, 758, 789, 793, 952, 988, 992, 993, 994, 1003, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1026, 1116, 1117, 1129, 1134, 1135, 1137, 1148], "valid": [43, 145, 148, 156, 234, 237, 280, 341, 396, 403, 419, 423, 582, 590, 614, 649, 663, 700, 703, 729, 810, 1025, 1026, 1040, 1041, 1057, 1062, 1116, 1117, 1123], "first": [43, 53, 61, 63, 87, 117, 136, 143, 145, 148, 149, 151, 152, 153, 157, 161, 166, 176, 178, 185, 205, 218, 219, 226, 228, 232, 234, 238, 262, 264, 275, 280, 297, 315, 321, 327, 351, 359, 382, 397, 398, 403, 411, 427, 428, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 453, 503, 544, 550, 555, 557, 563, 565, 569, 588, 589, 590, 594, 613, 616, 648, 650, 655, 677, 684, 685, 704, 705, 707, 744, 745, 746, 750, 764, 767, 774, 778, 788, 797, 799, 801, 806, 812, 815, 818, 835, 836, 837, 842, 853, 857, 863, 879, 881, 884, 888, 890, 893, 894, 901, 902, 920, 924, 944, 952, 955, 958, 964, 972, 973, 987, 988, 989, 990, 994, 995, 999, 1006, 1008, 1012, 1020, 1021, 1022, 1023, 1025, 1026, 1035, 1036, 1039, 1045, 1046, 1052, 1075, 1084, 1090, 1092, 1101, 1103, 1111, 1129, 1135, 1148, 1153], "debug": [43, 146, 147, 175, 205, 215, 221, 231, 234, 285, 289, 305, 330, 335, 348, 398, 424, 427, 431, 432, 433, 441, 443, 444, 460, 538, 683, 700, 750, 755, 777, 779, 839, 857, 923, 947, 968, 1045, 1123, 1146, 1149, 1154, 1163], "fact": [43, 53, 146, 147, 178, 297, 395, 403, 427, 437, 797, 842, 927, 965, 1104], "hard": [43, 70, 78, 85, 114, 117, 123, 125, 136, 146, 148, 151, 152, 157, 162, 167, 174, 178, 185, 207, 222, 228, 238, 252, 261, 262, 282, 283, 297, 376, 395, 424, 437, 465, 541, 748, 750, 797, 827, 833, 836, 877, 879, 893, 896, 902, 983, 992, 994, 1014, 1031, 1045, 1097, 1118, 1148, 1164], "principl": [43, 53, 54, 83, 106, 126, 142, 148, 157, 272, 273, 274, 275, 438, 461, 462, 750, 797, 901, 903, 914, 974, 1103], "mayb": [43, 45, 57, 58, 61, 63, 78, 114, 117, 136, 139, 146, 147, 148, 151, 152, 161, 174, 178, 205, 221, 222, 272, 273, 274, 275, 290, 333, 336, 338, 339, 440, 459, 460, 461, 493, 546, 547, 617, 665, 746, 902, 986, 1008, 1137], "overview": [43, 98, 114, 142, 153, 170, 186, 188, 203, 207, 219, 252, 253, 261, 265, 268, 271, 273, 282, 283, 299, 344, 348, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 575, 671, 682, 695, 706, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 857, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 905, 906, 907, 908, 909, 916, 917, 920, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982, 986, 1018, 1095, 1148, 1149, 1151, 1153], "respons": [43, 53, 56, 89, 123, 126, 131, 145, 156, 161, 209, 437, 479, 493, 501, 559, 567, 715, 750, 793, 805, 902, 903, 926, 955, 956, 1022, 1102, 1153], "googl": [44, 141, 146, 153, 155, 167, 170, 173, 174, 178, 179, 182, 203, 208, 350, 512, 713, 714, 886, 1020, 1095, 1135, 1137, 1166], "cloner": 44, "init": [44, 128, 145, 147, 163, 167, 244, 251, 253, 361, 388, 486, 487, 509, 512, 540, 557, 575, 593, 752, 760, 765, 785, 787, 799, 833, 885, 969], "cpp": [44, 50, 97, 112, 114, 115, 116, 117, 119, 120, 157, 172, 182, 207, 208, 224, 251, 262, 271, 273, 350, 441, 442, 443, 448, 455, 456, 457, 459, 460, 462, 464, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 557, 558, 559, 560, 561, 565, 566, 568, 570, 571, 572, 573, 574, 575, 576, 577, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 635, 639, 644, 645, 646, 647, 648, 649, 650, 651, 655, 660, 662, 665, 666, 667, 670, 672, 677, 683, 692, 693, 694, 697, 698, 699, 700, 701, 702, 704, 705, 707, 709, 713, 714, 715, 716, 717, 718, 727, 729, 731, 734, 736, 738, 740, 744, 745, 746, 748, 901, 931, 935, 938, 950, 952, 955, 971], "assert_eq": [44, 455, 457, 460, 464, 477, 504, 505, 511, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 528, 529, 530, 531, 532, 550, 557, 558, 559, 570, 571, 573, 574, 575, 576, 577, 635, 660, 662, 665, 666, 667, 698, 709, 713, 714, 715, 716, 718, 731, 744, 745, 746, 748, 1135, 1140], "test_f": [44, 479, 514, 515, 748, 1140], "simplefixtur": 44, "public": [44, 55, 101, 102, 107, 114, 117, 120, 123, 143, 156, 161, 198, 206, 219, 247, 252, 261, 262, 270, 276, 282, 283, 327, 330, 335, 411, 447, 448, 449, 451, 456, 458, 462, 464, 467, 468, 469, 479, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 501, 514, 515, 527, 541, 547, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 580, 583, 598, 599, 616, 626, 627, 629, 630, 632, 633, 641, 642, 647, 649, 650, 655, 658, 659, 660, 661, 662, 665, 666, 668, 677, 679, 680, 681, 683, 685, 686, 689, 690, 691, 692, 693, 694, 698, 699, 700, 702, 713, 714, 715, 718, 719, 727, 729, 734, 736, 738, 740, 748, 750, 761, 765, 826, 827, 832, 846, 852, 893, 905, 906, 907, 908, 909, 914, 1015, 1020, 1140], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 114, 184, 215, 220, 221, 224, 226, 244, 283, 550, 565, 750, 893, 918, 922, 934, 968, 970, 993], "tallk": 44, "morph": [44, 63, 173, 182, 207, 208, 273, 535, 547, 550, 553, 559, 655, 707, 799, 997], "fixtur": [44, 173, 182, 274, 275, 290, 296, 297, 300, 301, 311, 338, 468, 479, 515, 750, 1133, 1166], "trivial": [44, 146, 157, 288, 304, 377, 393, 550, 567, 663, 668, 719, 802, 810, 903, 919, 955, 1150], "tempfil": [44, 992], "crap": [44, 147, 222, 264, 423, 439, 442, 617, 656, 735, 903, 968], "null": [44, 63, 147, 148, 149, 164, 189, 205, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 352, 365, 372, 400, 411, 421, 426, 439, 514, 570, 669, 755, 761, 768, 793, 828, 837, 839, 840, 857, 872, 879, 921, 926, 933, 940, 942, 944, 946, 952, 955, 956, 961, 964, 968], "deriv": [44, 107, 115, 125, 168, 222, 234, 301, 317, 341, 515, 533, 559, 629, 630, 632, 633, 694, 702, 734, 994, 1007, 1140], "seminar": [45, 129], "psycho": 45, "rule": [45, 147, 153, 178, 228, 234, 238, 271, 310, 338, 353, 372, 374, 375, 376, 391, 397, 415, 426, 427, 428, 430, 438, 440, 465, 477, 482, 583, 629, 663, 666, 670, 672, 692, 718, 719, 836, 857, 918, 994, 1017, 1025, 1026, 1036, 1045, 1108, 1155], "dont": [45, 238, 437, 770], "scenario": [45, 148, 161, 170, 178, 182, 360, 481, 633, 727, 956, 957, 964], "robert": [45, 465], "martin": [45, 437, 438, 465], "someon": [45, 178, 219, 234, 241, 244, 275, 337, 572, 727, 789, 854, 860, 881, 903, 927, 971, 1019], "mistak": [45, 146, 152, 153, 203, 219, 243, 901, 1095, 1108], "kill": [45, 147, 148, 224, 857, 911, 940, 959, 968, 969, 998, 1154], "peopl": [45, 63, 143, 146, 148, 150, 151, 153, 161, 166, 178, 207, 241, 348, 437, 465, 483, 672, 797, 836, 1003, 1019, 1047, 1102, 1104], "polit": [45, 705], "thei": [45, 55, 65, 78, 112, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 166, 168, 170, 174, 186, 208, 215, 219, 221, 224, 231, 234, 238, 280, 288, 304, 341, 367, 373, 393, 421, 424, 427, 433, 437, 438, 442, 451, 456, 457, 477, 482, 483, 511, 513, 533, 550, 560, 565, 591, 595, 627, 655, 656, 659, 666, 667, 714, 715, 721, 756, 770, 789, 797, 822, 832, 836, 858, 894, 901, 902, 903, 914, 939, 968, 969, 974, 989, 999, 1007, 1014, 1017, 1067, 1090, 1097, 1100, 1101, 1108, 1111, 1114, 1128, 1134, 1150, 1153], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 62, 63, 78, 89, 110, 111, 118, 139, 146, 152, 182, 205, 234, 275, 362, 419, 433, 437, 460, 465, 481, 500, 501, 570, 580, 632, 654, 656, 661, 748, 768, 781, 797, 822, 830, 832, 834, 835, 851, 858, 860, 902, 917, 952, 955, 968, 969, 988, 990, 999, 1035, 1053, 1064, 1075, 1101, 1135, 1150], "particular": [45, 112, 145, 157, 178, 406, 431, 457, 481, 533, 748, 843, 1018, 1019], "electr": 45, "seem": [45, 134, 145, 147, 148, 167, 272, 456, 901, 903, 968, 1150], "adher": [45, 839], "immedi": [45, 63, 146, 147, 152, 153, 224, 265, 268, 271, 273, 316, 398, 608, 722, 727, 779, 789, 793, 894, 944, 953, 956, 958, 1039, 1135], "survei": [45, 167], "had": [45, 112, 145, 147, 148, 152, 153, 157, 161, 166, 178, 182, 211, 213, 232, 367, 406, 477, 544, 556, 641, 655, 791, 824, 825, 836, 861, 901, 914, 985, 1019, 1026, 1045, 1114, 1118], "life": [45, 122, 125, 142, 153, 158, 161, 164, 166, 174, 562, 692, 713, 728, 749, 750, 797, 836, 893, 934, 948, 954, 1020, 1041, 1098], "accomplish": [45, 57, 78, 186, 272, 274, 275, 423, 438, 901], "befor": [45, 115, 117, 123, 125, 142, 146, 147, 149, 150, 151, 153, 156, 161, 166, 182, 185, 189, 207, 234, 250, 251, 253, 274, 275, 280, 296, 297, 298, 301, 308, 310, 355, 363, 364, 373, 393, 442, 514, 544, 550, 589, 615, 630, 656, 668, 683, 695, 700, 701, 711, 715, 716, 721, 722, 727, 729, 730, 748, 749, 750, 761, 775, 785, 791, 797, 823, 859, 894, 903, 942, 957, 959, 971, 994, 999, 1017, 1060, 1085, 1087, 1091, 1100, 1113, 1117, 1120, 1129, 1130, 1136], "formal": [45, 156, 170, 207, 208, 297, 300, 504, 1129], "googletest": [45, 65, 97, 173, 175, 176, 208, 251, 253, 288, 304, 453, 462, 498, 511, 513, 514, 575, 713, 714, 715, 748, 750, 751, 1135, 1137, 1150], "messag": [45, 117, 141, 143, 151, 152, 161, 164, 170, 176, 184, 185, 211, 215, 218, 221, 231, 234, 241, 244, 259, 266, 274, 275, 276, 280, 302, 308, 318, 330, 335, 438, 441, 443, 462, 567, 583, 642, 672, 677, 697, 699, 700, 709, 719, 727, 750, 772, 797, 830, 834, 839, 893, 915, 934, 944, 948, 1023, 1037, 1047, 1089, 1130, 1134, 1136, 1162, 1163, 1164], "saniti": [45, 429, 434, 435, 438, 442, 446, 572, 657, 695, 747, 749, 750], "perform": [45, 146, 152, 161, 163, 185, 204, 205, 234, 275, 302, 336, 377, 380, 403, 410, 415, 423, 426, 427, 430, 433, 434, 435, 441, 550, 590, 608, 611, 633, 654, 668, 710, 750, 781, 959, 976, 986, 987, 1045, 1128, 1146, 1149], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 750], "Or": [45, 46, 47, 51, 55, 56, 115, 125, 146, 253, 310, 422, 438, 541, 669, 695, 706, 749, 750, 888, 914, 924, 950, 1025, 1039, 1116, 1120], "Will": [45, 46, 47, 51, 55, 56, 146, 179, 238, 316, 750, 758, 971, 1037, 1123, 1137, 1143, 1162], "high": [46, 53, 115, 167, 207, 221, 238, 437, 465, 488, 501, 505, 509, 713, 715, 730, 779, 791, 795, 807, 816], "speed": [46, 53, 136, 141, 146, 215, 219, 221, 231, 234, 238, 302, 428, 718, 791, 797, 957, 959, 1099, 1100], "hype": [46, 735], "we": [46, 47, 50, 51, 55, 56, 59, 61, 62, 68, 115, 117, 120, 123, 124, 125, 126, 128, 136, 145, 146, 148, 149, 150, 151, 152, 153, 157, 161, 162, 165, 166, 167, 168, 169, 170, 174, 175, 178, 182, 183, 184, 185, 186, 188, 197, 198, 205, 206, 207, 208, 212, 215, 218, 219, 221, 222, 224, 251, 253, 255, 262, 265, 268, 270, 272, 274, 275, 293, 297, 300, 301, 316, 333, 336, 337, 341, 352, 367, 378, 385, 393, 406, 415, 417, 421, 423, 426, 431, 438, 440, 448, 449, 455, 456, 457, 460, 462, 464, 467, 476, 477, 481, 482, 498, 499, 500, 501, 509, 512, 513, 514, 544, 550, 559, 571, 595, 626, 630, 647, 648, 649, 650, 651, 655, 666, 677, 683, 709, 710, 715, 718, 729, 750, 758, 761, 765, 766, 770, 772, 775, 793, 797, 799, 805, 813, 824, 825, 839, 840, 854, 860, 861, 876, 894, 901, 902, 903, 910, 914, 919, 920, 921, 927, 928, 929, 930, 942, 955, 964, 981, 985, 986, 987, 995, 1014, 1019, 1045, 1047, 1051, 1053, 1082, 1089, 1090, 1091, 1095, 1100, 1101, 1102, 1103, 1110, 1111, 1117, 1120, 1136, 1137, 1153], "did": [46, 147, 148, 150, 152, 153, 156, 157, 165, 174, 178, 185, 270, 417, 421, 437, 462, 500, 648, 717, 719, 745, 770, 775, 797, 836, 894, 905, 914, 995, 1148], "consequ": [46, 145, 146, 265, 268, 397, 418, 421, 422, 465, 927, 1014, 1114, 1148], "unsign": [46, 123, 219, 224, 369, 371, 379, 408, 411, 415, 423, 469, 484, 499, 513, 514, 515, 565, 635, 636, 645, 693, 727, 729, 734, 736, 738, 740, 748, 753, 756, 761, 768, 777, 779, 781, 787, 793, 802, 807, 811, 923, 964, 965, 1145, 1146], "introduc": [46, 58, 78, 97, 207, 224, 232, 273, 288, 304, 419, 427, 439, 455, 460, 482, 500, 501, 502, 503, 533, 555, 641, 750, 816, 968, 997, 1023, 1037, 1102, 1150], "throw": [46, 117, 150, 153, 224, 457, 481, 482, 486, 492, 493, 495, 496, 497, 515, 533, 611, 649, 691, 712, 715, 726, 729, 1140], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 750], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 750], "clean_code_bugs_find_error": [46, 47, 53, 750], "twice": [47, 53, 55, 56, 57, 146, 359, 398, 420, 440, 663, 666, 725, 750, 817, 857, 894, 910, 942, 987], "crash": [47, 53, 63, 110, 111, 144, 146, 147, 148, 151, 203, 205, 215, 221, 231, 234, 348, 388, 395, 481, 565, 592, 637, 713, 750, 955, 969, 1095], "found": [47, 53, 108, 109, 118, 133, 142, 145, 157, 166, 178, 211, 215, 218, 221, 224, 226, 228, 231, 234, 244, 259, 266, 280, 288, 298, 302, 304, 308, 316, 330, 424, 433, 443, 445, 453, 491, 495, 496, 497, 503, 514, 516, 520, 521, 522, 550, 555, 595, 598, 601, 611, 615, 616, 640, 648, 650, 652, 660, 745, 750, 768, 829, 832, 839, 886, 903, 971, 974, 983, 988, 994, 1002, 1011, 1041, 1073, 1099, 1102, 1138, 1150], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 750], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 750], "explicitli": [48, 147, 148, 152, 178, 218, 228, 238, 271, 375, 376, 394, 432, 438, 482, 559, 562, 570, 611, 660, 663, 666, 719, 731, 828, 956, 965, 993, 1003, 1022, 1108, 1116], "solut": [48, 65, 114, 151, 153, 161, 162, 170, 172, 178, 197, 207, 208, 213, 216, 219, 224, 229, 235, 251, 254, 265, 274, 275, 279, 285, 310, 311, 397, 398, 401, 420, 423, 441, 454, 481, 503, 533, 555, 561, 562, 582, 619, 621, 623, 630, 644, 652, 667, 672, 677, 703, 719, 743, 749, 750, 858, 859, 876, 939, 944, 957, 958, 974, 999, 1035, 1066, 1078, 1108, 1151], "force_overwrit": 48, "descriptor": [48, 146, 170, 202, 234, 238, 259, 280, 298, 337, 562, 756, 777, 813, 833, 839, 840, 897, 919, 920, 921, 965], "mani": [49, 53, 56, 59, 62, 89, 126, 146, 148, 152, 153, 170, 175, 178, 194, 205, 226, 236, 241, 262, 266, 270, 271, 273, 279, 298, 316, 337, 341, 365, 377, 379, 388, 403, 417, 419, 424, 439, 440, 452, 453, 456, 459, 464, 467, 506, 533, 580, 590, 609, 611, 630, 642, 654, 655, 663, 683, 704, 709, 717, 725, 750, 756, 758, 775, 783, 789, 793, 797, 823, 833, 834, 836, 837, 890, 902, 920, 921, 940, 950, 953, 968, 969, 971, 981, 990, 992, 994, 999, 1008, 1018, 1023, 1026, 1029, 1033, 1041, 1045, 1047, 1051, 1100, 1102, 1103, 1104, 1108, 1117, 1135, 1148, 1151], "overwrit": [49, 109, 481, 482, 495, 503, 520, 522, 555, 565, 611, 613, 642, 750, 797, 859, 864, 876, 928, 1043], "present": [49, 61, 126, 143, 149, 153, 157, 161, 166, 179, 234, 280, 288, 297, 304, 449, 561, 793, 797, 832, 903, 914, 933, 994, 1077, 1117, 1150], "continu": [50, 53, 63, 89, 99, 106, 110, 111, 112, 115, 126, 139, 147, 156, 157, 169, 178, 179, 182, 191, 196, 197, 198, 227, 232, 238, 244, 254, 327, 391, 392, 398, 399, 405, 409, 412, 416, 421, 425, 429, 434, 435, 437, 439, 442, 443, 460, 574, 576, 577, 637, 657, 665, 695, 745, 746, 747, 748, 749, 750, 894, 896, 900, 906, 929, 930, 968, 969, 974, 985, 992, 999, 1003, 1036, 1039, 1057, 1102, 1117, 1135], "expected_cont": 50, "fill": [50, 148, 149, 161, 183, 234, 235, 280, 379, 655, 659, 704, 714, 768, 793, 797, 863, 920, 997], "strategi": [50, 218, 413, 902, 1052, 1128], "hurri": [50, 398], "read_fil": 50, "compar": [50, 114, 206, 208, 219, 234, 275, 280, 376, 418, 432, 433, 442, 511, 557, 714, 905, 940, 1037, 1042, 1066, 1070, 1100], "binaryfil": 50, "doesn": [50, 148, 151, 259, 308, 393, 395, 398, 413, 427, 709, 756, 817, 824, 825, 859, 863, 876, 972, 983, 1039], "belong": [50, 175, 178, 365, 385, 411, 438, 533, 557, 571, 573, 842, 850, 929, 1010, 1024], "test_write_csv": 50, "test_read_csv": [50, 1092], "ah": [50, 59, 62, 152, 168, 205, 207, 221, 612, 971, 1047, 1111], "altern": [51, 53, 55, 56, 63, 65, 68, 78, 83, 125, 145, 146, 153, 179, 198, 224, 285, 372, 449, 557, 566, 580, 591, 594, 663, 712, 718, 738, 750, 797, 836, 857, 897, 901, 903, 915, 923, 929, 940, 946, 964, 971, 1019, 1039, 1042, 1116, 1120, 1123, 1130, 1140, 1143, 1159, 1160, 1162, 1165], "cluster_clean_code_featur": [51, 53, 55, 56, 750], "clean_code_features_other_index": [51, 53, 750], "clean_code_features_csv": [51, 53, 55, 56, 750], "establish": [53, 71, 186, 198, 262, 274, 275, 296, 300, 327, 437, 797, 955, 1151], "were": [53, 112, 125, 139, 146, 148, 152, 161, 178, 182, 348, 397, 453, 556, 565, 566, 592, 659, 698, 824, 825, 903, 930, 985, 993, 1017, 1026, 1045, 1050, 1108, 1114, 1148], "occas": [53, 89, 147, 714], "ourselv": [53, 178, 894], "gather": [53, 153, 185, 274, 275, 296, 297, 300, 315, 431, 433, 1079], "wreak": [53, 110, 111, 413, 637], "havoc": [53, 110, 111, 413, 637], "shoehorn": 53, "violat": [53, 126, 146, 437, 465, 693, 715, 811, 955, 969], "nearli": [53, 178, 184, 415, 947], "solid": [53, 142, 158, 271, 273, 438, 465, 1146, 1147, 1161, 1162, 1164, 1165], "chanc": [53, 146, 148, 183, 417, 437, 752, 797, 922, 1153], "cluster_clean_code_refactor": [53, 55, 56, 750], "clean_code_refactoring_backingstore_interfac": [53, 56, 750], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 750], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 750], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 750], "now": [54, 61, 112, 145, 146, 147, 148, 149, 150, 152, 153, 161, 165, 174, 184, 194, 211, 218, 224, 228, 238, 246, 266, 270, 291, 316, 317, 330, 393, 406, 421, 426, 451, 457, 464, 477, 482, 504, 505, 512, 571, 595, 598, 604, 608, 616, 659, 710, 715, 730, 731, 755, 775, 797, 805, 807, 813, 829, 832, 894, 901, 902, 903, 929, 930, 938, 983, 985, 990, 993, 1008, 1011, 1035, 1090, 1100, 1102, 1120, 1129, 1148], "violatin": 54, "respect": [54, 59, 62, 65, 139, 147, 161, 208, 270, 272, 322, 369, 417, 437, 482, 500, 559, 566, 629, 663, 714, 715, 828, 836, 901, 955, 969, 1014], "mainli": [55, 146, 182, 271, 280, 611, 748, 937, 997], "bugfix": 55, "ongo": [55, 112, 957], "scene": [55, 971, 1014], "pleas": [55, 114, 147, 148, 151, 153, 157, 174, 178, 182, 183, 185, 186, 187, 188, 198, 224, 251, 253, 262, 283, 321, 363, 397, 427, 515, 572, 574, 575, 576, 577, 836, 894, 902, 903, 918, 947, 965, 973, 974, 1019, 1121], "wait": [55, 72, 73, 74, 78, 83, 87, 123, 125, 135, 146, 147, 148, 149, 150, 152, 193, 297, 316, 627, 655, 722, 730, 750, 774, 789, 795, 799, 802, 805, 807, 830, 833, 841, 893, 894, 920, 922, 926, 938, 950, 953, 956, 963, 965, 968, 1043, 1111, 1135, 1153, 1161], "unnecessarili": [55, 69, 965], "conflict": [55, 75, 77, 112, 115, 125, 273, 274, 275, 296, 363, 414, 566, 656, 728, 749, 750, 753, 756, 766, 893, 902, 934, 942, 948, 968, 1002, 1131], "rip": [55, 149, 439, 498, 955, 1110], "detail": [55, 84, 143, 148, 151, 156, 160, 161, 173, 179, 193, 204, 205, 207, 208, 215, 221, 231, 235, 236, 238, 242, 264, 275, 330, 437, 442, 465, 502, 512, 514, 562, 714, 775, 857, 901, 903, 957, 989, 1097, 1137, 1146], "instanc": [55, 57, 107, 110, 111, 119, 153, 194, 202, 206, 215, 218, 219, 226, 228, 233, 236, 238, 241, 256, 259, 266, 280, 298, 308, 326, 341, 455, 460, 468, 479, 481, 482, 483, 495, 496, 497, 500, 513, 626, 637, 644, 649, 697, 700, 758, 763, 766, 964, 965, 992, 994, 1008, 1009, 1011, 1014, 1037], "its": [55, 57, 59, 62, 65, 84, 87, 108, 110, 111, 123, 140, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 163, 168, 170, 174, 175, 176, 178, 198, 205, 206, 208, 215, 219, 221, 231, 234, 238, 247, 262, 264, 265, 268, 271, 273, 280, 297, 321, 332, 363, 385, 396, 398, 413, 415, 417, 424, 426, 448, 456, 460, 479, 482, 483, 498, 499, 500, 501, 506, 511, 514, 556, 557, 558, 560, 562, 567, 597, 637, 655, 667, 677, 703, 722, 748, 761, 770, 775, 797, 802, 824, 825, 828, 830, 834, 839, 844, 845, 857, 858, 879, 881, 902, 905, 906, 913, 923, 924, 929, 944, 950, 953, 955, 956, 957, 965, 987, 992, 994, 997, 1002, 1007, 1011, 1017, 1025, 1035, 1037, 1042, 1046, 1052, 1100, 1102, 1121, 1128, 1130, 1148, 1150, 1151, 1153], "replac": [55, 63, 97, 117, 151, 196, 207, 215, 218, 219, 221, 222, 224, 231, 234, 266, 280, 297, 315, 357, 372, 413, 439, 502, 503, 555, 588, 589, 648, 655, 683, 700, 714, 729, 735, 748, 750, 800, 903, 943, 955, 969, 993], "symptom": [57, 156], "mismatch": [57, 539], "onc": [57, 115, 145, 147, 148, 151, 152, 153, 156, 161, 166, 167, 315, 333, 355, 380, 389, 397, 427, 440, 456, 457, 458, 462, 467, 479, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 512, 514, 572, 590, 591, 645, 686, 697, 707, 725, 734, 736, 738, 739, 740, 741, 748, 758, 761, 793, 894, 903, 945, 968, 969, 988, 994, 995, 996, 1030, 1051, 1060, 1073, 1104, 1107, 1130], "sync": [57, 126, 147, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 413, 417, 797, 888], "imho": [57, 694], "forbidden": [58, 415], "accord": [58, 63, 114, 123, 145, 148, 234, 646, 841, 857, 890, 894, 902, 903], "uncl": [58, 348], "bob": [58, 234, 348, 437], "enum": [58, 207, 208, 311, 372, 387, 425, 429, 434, 435, 439, 442, 657, 695, 736, 738, 747, 749, 750, 756, 758, 766, 955, 1148], "born": [59, 62, 835, 1020], "bound": [59, 62, 63, 224, 228, 259, 271, 286, 414, 424, 429, 434, 435, 539, 567, 569, 571, 589, 668, 750, 835, 839, 895, 956, 959, 1012, 1033, 1056, 1116], "employe": [59, 62, 173, 205, 1011], "year": [59, 62, 145, 146, 147, 148, 152, 157, 178, 218, 224, 266, 270, 437, 556, 640, 641, 643, 644, 647, 648, 649, 650, 651, 652, 654, 701, 750, 1052], "emploi": [59, 62, 147, 157, 182, 398, 797], "configur": [59, 61, 62, 63, 68, 73, 78, 82, 84, 85, 86, 104, 112, 114, 117, 122, 123, 125, 126, 131, 132, 145, 147, 148, 151, 153, 176, 186, 252, 261, 262, 271, 282, 283, 289, 290, 293, 297, 305, 330, 336, 440, 444, 445, 447, 448, 460, 462, 467, 504, 505, 506, 514, 750, 770, 777, 797, 811, 827, 828, 829, 832, 841, 877, 890, 893, 894, 902, 914, 921, 935, 937, 965, 972, 973, 985, 995, 1065, 1103, 1107, 1116, 1123, 1151], "pattern": [59, 62, 82, 106, 126, 142, 143, 159, 162, 181, 182, 208, 211, 234, 273, 338, 347, 349, 437, 454, 455, 456, 457, 459, 460, 462, 464, 465, 466, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 503, 555, 718, 719, 750, 751, 857, 886, 953, 1000, 1001, 1135, 1155], "led": [59, 62, 72, 73, 74, 78, 91, 116, 120, 121, 126, 164, 186, 262, 316, 339, 504, 750, 756, 894, 902], "hei": [59, 62, 146, 186, 238, 572, 573, 832, 918, 1040, 1108], "reinvent": [59, 62, 206, 255, 1095], "wheel": [59, 62, 115, 130, 142, 799, 834, 929, 1123], "admit": [59, 62, 153], "notori": [59, 62], "fun": [59, 62, 146, 151, 204, 206, 242, 271, 348, 461, 698, 797, 836, 894, 901, 902, 999, 1011, 1023, 1039, 1094, 1095, 1122, 1129, 1148], "live": [59, 62, 70, 97, 98, 114, 117, 143, 147, 151, 169, 173, 178, 182, 187, 198, 206, 207, 208, 209, 222, 224, 232, 243, 250, 251, 252, 253, 255, 261, 263, 264, 271, 272, 273, 274, 275, 279, 282, 283, 297, 301, 310, 311, 330, 334, 338, 339, 341, 348, 349, 350, 410, 427, 439, 440, 445, 461, 466, 475, 477, 479, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 533, 590, 591, 611, 653, 664, 695, 696, 697, 714, 728, 748, 749, 750, 751, 761, 797, 827, 830, 831, 836, 852, 853, 893, 934, 1002, 1019, 1052, 1095, 1121, 1129, 1147, 1148, 1162], "session": [59, 62, 142, 151, 153, 171, 178, 182, 186, 190, 215, 221, 231, 234, 246, 250, 251, 253, 264, 272, 336, 799, 828, 829, 911, 922, 1083, 1095, 1121, 1128, 1158], "simpl": [59, 62, 72, 74, 75, 78, 86, 112, 133, 142, 146, 150, 151, 153, 156, 157, 161, 166, 170, 173, 174, 178, 182, 185, 208, 224, 226, 228, 234, 238, 290, 293, 351, 352, 359, 398, 400, 414, 417, 424, 439, 440, 441, 442, 443, 447, 448, 450, 460, 558, 565, 566, 604, 632, 640, 641, 643, 644, 647, 648, 649, 650, 651, 652, 672, 705, 715, 724, 750, 756, 770, 777, 789, 797, 799, 807, 833, 886, 894, 895, 901, 902, 931, 937, 939, 942, 957, 965, 968, 972, 973, 974, 979, 995, 999, 1019, 1020, 1028, 1047, 1095, 1101, 1103, 1119, 1134, 1135], "thu": [59, 62, 146, 147, 148, 184, 382, 457, 770, 775, 817, 824, 927, 1107, 1153], "techniqu": [59, 62, 69, 70, 71, 417, 427, 513, 637, 897], "usag": [59, 62, 65, 80, 106, 115, 126, 148, 153, 198, 208, 219, 232, 246, 271, 273, 274, 296, 311, 316, 336, 348, 398, 423, 424, 431, 442, 446, 452, 461, 462, 475, 501, 502, 503, 555, 565, 572, 573, 591, 626, 628, 629, 632, 633, 652, 654, 666, 677, 683, 697, 704, 735, 749, 750, 799, 834, 857, 886, 889, 904, 935, 938, 953, 989, 994, 997, 1047, 1089, 1091, 1123, 1130, 1137, 1148], "At": [59, 62, 123, 146, 147, 150, 153, 157, 161, 178, 182, 208, 218, 222, 224, 258, 362, 391, 395, 427, 455, 713, 789, 990, 1007, 1095], "flow": [59, 62, 147, 178, 183, 185, 186, 187, 188, 192, 197, 198, 213, 216, 229, 240, 331, 332, 333, 335, 371, 391, 399, 405, 409, 412, 416, 425, 427, 429, 434, 435, 657, 695, 704, 747, 749, 750, 968, 1003, 1028, 1030, 1037, 1114, 1149], "event": [59, 62, 63, 86, 119, 149, 170, 206, 215, 219, 221, 231, 234, 262, 274, 275, 433, 683, 727, 733, 737, 750, 765, 766, 774, 799, 800, 812, 813, 814, 815, 818, 830, 834, 893, 897, 922, 934, 937, 953, 956, 957, 961, 965, 1006, 1111, 1120, 1153, 1162, 1164, 1165], "save": [59, 62, 63, 85, 142, 145, 146, 158, 166, 169, 215, 221, 231, 234, 265, 268, 271, 379, 381, 655, 686, 689, 690, 691, 841, 859, 913, 922, 959, 988, 992, 998, 1008, 1041, 1100, 1130, 1148], "schedul": [59, 62, 63, 65, 99, 110, 111, 114, 146, 163, 186, 188, 252, 261, 262, 282, 343, 344, 455, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 779, 789, 795, 802, 817, 824, 825, 826, 827, 831, 833, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 939, 948, 950, 951, 955, 959, 973, 975, 976, 977, 978, 979, 980, 981, 982, 1107, 1143, 1153, 1154, 1164], "overhead": [59, 62, 427, 433, 544, 553, 718, 719], "usual": [59, 62, 84, 108, 114, 146, 147, 153, 156, 161, 166, 176, 178, 238, 272, 288, 304, 353, 393, 394, 420, 433, 437, 443, 445, 450, 455, 469, 477, 483, 512, 557, 573, 614, 668, 703, 704, 718, 727, 730, 748, 756, 768, 770, 775, 785, 791, 793, 797, 811, 813, 817, 833, 835, 839, 858, 894, 895, 902, 923, 937, 955, 956, 971, 972, 973, 974, 983, 992, 993, 994, 995, 999, 1002, 1005, 1006, 1012, 1014, 1016, 1017, 1019, 1022, 1028, 1033, 1094, 1101, 1102, 1108, 1130, 1131, 1137, 1150], "exhibit": [59, 62, 224, 649, 903, 924, 929], "glitch": [59, 62, 148, 153, 902, 903], "caus": [59, 62, 146, 149, 161, 215, 221, 231, 234, 238, 903, 950, 955, 1117], "hiccup": [59, 62, 153, 264, 973], "twist": [59, 62, 781], "amazingli": [59, 62, 841], "submiss": 60, "submit": [60, 109, 791], "linuxtag": [60, 185, 301, 899], "pure": [61, 69, 119, 153, 330, 393, 466, 629, 655, 694, 719, 836, 1026, 1148], "local": [61, 146, 147, 149, 152, 161, 174, 178, 179, 186, 187, 191, 207, 208, 222, 224, 225, 231, 234, 237, 238, 259, 262, 274, 276, 285, 288, 296, 297, 300, 301, 304, 306, 307, 314, 316, 330, 363, 367, 391, 393, 410, 448, 452, 461, 475, 477, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 555, 562, 580, 663, 666, 668, 697, 750, 770, 797, 802, 824, 825, 829, 879, 893, 901, 903, 904, 905, 906, 912, 914, 920, 931, 939, 981, 983, 990, 993, 1038, 1123, 1150, 1151, 1164], "easili": [61, 126, 140, 147, 153, 316, 372, 391, 424, 437, 456, 629, 705, 779, 795, 923, 953, 959, 989, 1002, 1034, 1148], "guess": [61, 228, 238, 264, 417, 422, 672, 910, 965], "autotool": [61, 157], "portabl": [61, 170, 365, 427, 722, 939, 946, 965, 969, 1026, 1104], "archiv": [61, 103, 104, 114, 157, 158, 186, 188, 252, 261, 262, 282, 433, 446, 452, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 750, 827, 857, 893, 973, 976, 978, 979, 981, 982, 983, 988, 992, 1123], "m4": 61, "macro": [61, 224, 289, 305, 357, 368, 371, 383, 392, 399, 405, 409, 412, 416, 419, 425, 429, 434, 435, 443, 444, 448, 449, 452, 657, 695, 701, 747, 749, 750, 766, 785, 799, 839, 917, 923, 929, 939, 973, 1045, 1135, 1140, 1145, 1149], "stock": [61, 218, 219, 1051, 1052], "sudo": [61, 101, 114, 119, 142, 149, 151, 153, 161, 175, 186, 224, 252, 261, 262, 271, 273, 282, 283, 443, 450, 527, 750, 827, 852, 854, 893, 894, 903, 957, 985, 1130], "pwd": [61, 109, 112, 174, 251, 253, 330, 335, 446, 512, 514, 575, 772, 775, 824, 825, 834, 879, 881, 894, 972, 973, 986, 988, 1128], "pub": [61, 149, 186, 770, 910, 1089], "lib": [61, 114, 142, 151, 157, 185, 205, 208, 218, 234, 241, 244, 259, 266, 273, 276, 280, 302, 308, 445, 511, 775, 787, 793, 797, 888, 903, 968, 972, 974, 983, 985, 1123, 1130], "remot": [61, 102, 104, 149, 151, 153, 161, 198, 207, 254, 316, 454, 475, 489, 503, 555, 750, 770, 797, 798, 802, 823, 826, 893, 902, 904, 907, 908, 909, 912, 920, 983, 995, 1151, 1152, 1159], "v0": 61, "v1": [61, 264, 462, 477, 659], "v2": [61, 63, 153, 173, 264, 462, 477, 659], "autotooleri": 61, "autogen": 61, "step": [61, 63, 145, 146, 152, 153, 157, 161, 182, 221, 224, 225, 251, 253, 266, 270, 275, 298, 353, 355, 357, 373, 397, 439, 442, 459, 502, 512, 550, 575, 580, 713, 797, 824, 825, 971, 979, 1116, 1117, 1129], "noconfigur": 61, "suppress": [61, 152, 198, 431, 456, 565, 714, 876, 1123], "absorb": [61, 139, 184, 436, 438, 666, 1052], "Be": [61, 97, 224, 271, 273, 311, 316, 370, 403, 512, 533, 558, 563, 625, 652, 664, 666, 695, 697, 700, 711, 720, 728, 747, 749, 750, 823, 968, 983], "awar": [61, 316, 414, 447, 957], "enabl": [61, 145, 151, 178, 186, 207, 215, 221, 231, 234, 262, 272, 376, 427, 453, 460, 482, 538, 795, 797, 802, 849, 894, 898, 902, 914, 957, 981, 985, 995, 1153], "mkdir": [61, 100, 114, 132, 147, 152, 156, 174, 175, 251, 253, 262, 330, 335, 512, 514, 515, 575, 748, 750, 797, 824, 825, 826, 827, 861, 862, 863, 864, 865, 868, 869, 871, 877, 893, 910, 914, 964, 983, 985, 986, 992], "dist": [61, 130, 718, 1050], "406332": 61, "apr": [61, 63, 205, 215, 244, 323, 972, 973, 986], "transfer": [61, 146, 208, 211, 288, 304, 316, 433, 515, 565, 666, 768, 797, 810, 811, 823, 824, 825, 884, 904, 910, 913, 1111, 1148, 1150], "scp": [61, 97, 101, 114, 132, 157, 186, 252, 261, 262, 282, 283, 514, 515, 750, 770, 824, 825, 893, 904, 905, 906, 907, 909, 914, 931, 981, 982, 983], "192": [61, 179, 186, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 336, 770, 832, 914, 1165], "168": [61, 179, 186, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 336, 770, 832, 914, 983, 1165], "82": [61, 156, 165, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 1052, 1099, 1100], "prerequisit": [61, 104, 224, 770, 901, 1022], "apt": [61, 119, 157, 161, 175, 224, 271, 273, 527, 777, 896, 901, 903, 914, 973, 985, 1130, 1135], "python3": [61, 63, 86, 130, 142, 157, 166, 179, 185, 205, 215, 221, 231, 234, 238, 949, 959, 985, 995, 1022, 1116, 1117, 1123, 1130], "along": [61, 147, 153, 206, 219, 348, 397, 467, 748, 842, 950, 971, 1002], "omit": [61, 63, 152, 161, 166, 215, 221, 231, 234, 235, 238, 308, 334, 378, 415, 427, 439, 459, 633, 655, 702, 775, 791, 840, 901, 902, 903, 910, 926, 927, 931, 942, 992, 995, 1047, 1128], "bind": [61, 126, 147, 249, 271, 273, 301, 311, 375, 382, 613, 655, 668, 695, 719, 720, 722, 728, 749, 750, 897, 971, 1003, 1007, 1026, 1037, 1114, 1148, 1163, 1165], "cxx": [61, 143, 440, 455, 456, 457, 458, 459, 460, 462, 464, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 511, 513, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 748, 972, 973], "xf": [61, 157, 823, 985], "ld_library_path": [61, 445, 988], "gpiod": [61, 63, 777], "py3": [61, 130, 142, 1050], "aarch64": [61, 157, 983], "multi": [63, 1101, 1108], "chmod": [63, 153, 330, 824, 825, 842, 847, 849, 851, 854, 906, 910], "snippet": [63, 166, 185, 307, 315, 620, 902, 995], "subdirectori": [63, 126, 152, 161, 173, 175, 198, 289, 305, 440, 444, 445, 498, 512, 750, 772, 823, 824, 825, 837, 847, 849, 866, 881, 885, 902, 903, 983, 1083, 1135], "stuff": [63, 70, 78, 100, 114, 120, 145, 148, 152, 161, 166, 178, 182, 185, 198, 207, 208, 229, 243, 262, 264, 285, 316, 334, 433, 439, 541, 588, 748, 750, 756, 765, 797, 827, 857, 865, 871, 877, 893, 901, 931, 992, 994, 1050, 1090, 1095, 1097, 1128], "stuff_complet": 63, "strace": [63, 97, 146, 148, 348, 755, 760, 813, 920, 926, 939, 955, 964, 1161], "pid": [63, 146, 148, 149, 432, 816, 829, 833, 835, 939, 955, 958, 964, 968, 969], "4677": 63, "11hello": 63, "clock_gettime64": 63, "clock_monoton": [63, 730, 921, 955], "tv_sec": [63, 955], "164646": 63, "tv_nsec": [63, 955], "833862215": 63, "_newselect": 63, "tv_usec": 63, "500000": [63, 896, 902, 1100], "unfinish": [63, 148], "4679": 63, "resum": [63, 685, 686, 689, 690, 691, 793, 955], "timeout": [63, 725, 727, 729, 920, 1123], "mi": [63, 226], "845864201": 63, "4678": [63, 221], "fd": [63, 156, 218, 262, 515, 756, 901, 915, 919, 920, 921, 923, 927, 928, 929, 930, 933, 935, 938, 961, 964, 968, 1052], "fourth": 63, "involv": [63, 78, 146, 149, 153, 156, 208, 262, 274, 275, 296, 336, 413, 421, 427, 433, 498, 565, 567, 656, 768, 797, 894, 972, 981, 983], "occasion": [63, 134, 161, 178, 207, 224, 423, 437, 447, 649, 797, 841, 1019, 1033, 1109], "due": [63, 153, 178, 455, 719, 1123], "weird": [63, 262, 307, 423, 693, 731, 756, 781, 950, 968], "gil": [63, 178, 182, 274, 275, 296, 297, 300, 1095], "jitter": [63, 957, 959], "heavi": [63, 170, 178, 465, 903, 1019, 1153], "usr": [63, 146, 147, 151, 157, 166, 169, 174, 176, 198, 205, 206, 215, 218, 221, 231, 234, 238, 241, 244, 259, 264, 266, 276, 280, 302, 308, 327, 330, 440, 442, 443, 445, 446, 450, 672, 705, 715, 748, 770, 797, 823, 829, 841, 853, 885, 888, 901, 903, 949, 959, 968, 971, 972, 973, 974, 983, 986, 988, 995, 998, 1022, 1083, 1098, 1111, 1123, 1130, 1137], "env": [63, 142, 147, 169, 264, 949, 959, 1022, 1049, 1083, 1098, 1111], "hello_left": 63, "hello_right": 63, "rjust": [63, 166, 234, 280], "hello_middl": 63, "center": [63, 169, 211, 226, 228, 234, 238, 259, 266, 280, 298, 302, 308, 324, 431, 511], "t1": [63, 165, 228, 238, 259, 263, 280, 302, 940], "t2": [63, 165, 221, 228, 238, 259, 302, 940], "t3": 63, "async": [63, 146, 178, 182, 215, 221, 231, 232, 234, 297, 301, 683, 947, 970, 1095, 1163], "await": [63, 297], "epoll_wait": 63, "201": [63, 149, 179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308], "multiplex": [63, 902, 921, 955, 1165], "create_task": 63, "sysf": [63, 114, 115, 121, 122, 143, 193, 262, 317, 318, 514, 750, 753, 754, 799, 893, 894, 901, 903, 934, 935, 938, 1152, 1159], "unmaintain": [63, 252, 261, 262, 305, 349, 973, 1037, 1145], "immun": [63, 572, 730], "hotplug": [63, 901], "reset": [63, 145, 462, 464, 714, 715, 716, 748, 1117, 1164], "pullup": 63, "pulldown": 63, "rpi": [63, 128, 157, 316, 797, 798, 901], "hope": [63, 146, 148, 151, 153, 157], "major": [63, 151, 164, 215, 221, 231, 234, 271, 273, 437, 441, 572, 756, 763, 828, 956, 1020, 1026, 1041], "releas": [63, 149, 175, 289, 305, 398, 444, 715, 726, 727, 729, 750, 756, 770, 894, 901, 944, 949, 985, 988, 1020, 1129, 1160], "ton": [63, 713, 836, 898, 923, 955, 959, 1148], "bartosz": 63, "golaszewski": 63, "gpiochip0": [63, 777, 937], "ioctl": [63, 262, 419, 763, 765, 791, 799, 800, 805, 811, 897, 901], "crw": [63, 761, 828, 879, 901, 902, 903], "254": [63, 167, 218, 221, 226, 228, 231, 238, 241, 259, 266, 276, 280, 286, 302], "request": [63, 93, 98, 115, 125, 147, 148, 151, 208, 210, 235, 241, 297, 438, 457, 479, 493, 662, 663, 666, 667, 755, 799, 923, 938, 1128], "request_lin": 63, "consum": [63, 126, 148, 151, 168, 218, 297, 431, 448, 477, 727, 729, 822, 830, 837, 944, 945, 956, 961, 963, 965, 968, 995, 1017, 1026, 1052, 1107, 1153], "mytest": 63, "config": [63, 97, 117, 118, 135, 136, 142, 147, 149, 151, 157, 165, 259, 276, 280, 334, 341, 350, 514, 715, 750, 770, 798, 879, 901, 902, 903, 910, 985, 995, 1123], "lineset": 63, "set_valu": [63, 729], "all_io": 63, "transform": [63, 66, 166, 181, 182, 185, 187, 197, 202, 203, 205, 206, 213, 224, 226, 229, 232, 255, 262, 264, 273, 279, 297, 310, 315, 427, 518, 519, 531, 533, 586, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 683, 707, 750, 981, 1001, 1045, 1078, 1095], "ntime": [63, 1005], "task": [63, 77, 115, 116, 117, 118, 119, 120, 122, 123, 125, 161, 203, 216, 229, 243, 246, 249, 279, 285, 334, 337, 339, 340, 343, 344, 345, 348, 750, 824, 825, 842, 884, 893, 901, 904, 919, 934, 940, 953, 954, 956, 957, 1095, 1128], "interv": [63, 89, 117, 185, 215, 221, 222, 231, 234, 238, 259, 297, 334, 499, 501, 514, 515, 655, 729, 730, 921, 931, 955, 959], "none": [63, 123, 130, 142, 145, 146, 151, 156, 165, 167, 179, 189, 196, 197, 206, 211, 212, 215, 218, 221, 227, 228, 231, 234, 238, 241, 247, 256, 259, 263, 264, 266, 276, 280, 286, 298, 302, 308, 325, 417, 418, 439, 442, 562, 648, 650, 920, 937, 965, 992, 995, 1017, 1043, 1050, 1120, 1135], "itertool": [63, 243, 245, 297, 999], "cram": [63, 139, 176, 765, 955, 992, 1108], "goe": [63, 65, 85, 112, 119, 149, 151, 166, 271, 427, 462, 527, 630, 650, 659, 709, 761, 797, 839, 840, 926, 953, 959, 969, 972, 979, 1022, 1025, 1045], "stuff_raw": 63, "mod": [63, 234, 259, 279, 775], "sidewai": [63, 182, 185, 240, 343, 344, 1000, 1001], "numpi": [63, 178, 182, 197, 216, 222, 229, 264, 270, 298, 300, 303, 439, 1019, 1094, 1098, 1101, 1109, 1113, 1123, 1130], "transpos": [63, 857], "col": 63, "tolist": 63, "outsid": [63, 234, 466, 479, 559, 567, 572, 714, 715, 787, 858, 940, 956, 995], "instanti": [63, 120, 205, 334, 457, 468, 482, 483, 496, 497, 498, 501, 583, 612, 630, 651, 677, 683, 705, 718, 719, 1007, 1008, 1098], "coro": [63, 683, 685, 686, 688, 689, 690, 691], "cannot": [63, 110, 111, 142, 146, 147, 148, 153, 157, 168, 169, 175, 176, 178, 185, 205, 238, 265, 268, 302, 316, 393, 394, 397, 398, 417, 419, 421, 424, 427, 445, 448, 460, 483, 511, 550, 559, 562, 564, 567, 568, 591, 626, 627, 629, 630, 632, 633, 637, 656, 659, 662, 668, 694, 704, 705, 709, 715, 717, 727, 729, 793, 797, 802, 817, 834, 839, 842, 853, 868, 876, 912, 956, 965, 987, 988, 989, 993, 995, 1007, 1012, 1019, 1027, 1028, 1034, 1035, 1045, 1114, 1116, 1117, 1128, 1153], "stuff_raw2": 63, "05": [63, 97, 114, 149, 156, 161, 205, 240, 263, 270, 281, 290, 293, 329, 347, 446, 1099], "runtimeerror": [63, 169, 205, 259, 315, 992, 994], "reus": [63, 112, 161, 167, 987, 1037], "alreadi": [63, 80, 114, 120, 146, 147, 149, 157, 168, 170, 178, 182, 238, 265, 268, 410, 421, 427, 459, 479, 481, 492, 495, 514, 531, 611, 750, 756, 770, 777, 785, 795, 797, 800, 817, 893, 901, 902, 903, 910, 923, 924, 926, 931, 932, 934, 951, 986, 992, 1019, 1045, 1123, 1128, 1130, 1137], "bare": [63, 78, 80, 87, 89, 108, 128, 146, 348, 894, 902], "create_coro": 63, "ctor": [63, 173, 182, 231, 280, 511, 533, 541, 558, 561, 562, 565, 575, 577, 612, 635, 659, 660, 662, 666, 667, 692, 700, 715, 731, 816], "nest": [63, 142, 206, 219, 228, 238, 245, 249, 266, 276, 361, 390, 391, 417, 677, 729, 744, 802, 992, 1035], "_blink": 63, "coro_cr": 63, "creator": [63, 140, 157], "create_factory_for_blink": 63, "blinkfunc": 63, "blink_func": 63, "stuff_decorator_stage1": 63, "stage1": 63, "stararg": [63, 993, 996, 1017], "func": [63, 205, 215, 221, 231, 234, 265, 279, 517, 586, 655, 670, 677, 718, 993, 997], "becom": [63, 68, 78, 89, 92, 119, 123, 125, 146, 148, 174, 186, 265, 268, 288, 290, 293, 304, 376, 406, 408, 415, 418, 439, 455, 459, 498, 659, 714, 715, 716, 797, 834, 853, 886, 902, 903, 910, 953, 956, 957, 992, 998, 1028, 1129, 1135, 1150, 1151], "obsolet": [63, 178, 1019], "prog": [63, 219, 315], "demo": [63, 97, 98, 112, 114, 119, 120, 126, 146, 169, 173, 178, 181, 183, 186, 187, 190, 198, 205, 213, 216, 219, 222, 224, 229, 235, 252, 255, 258, 261, 262, 282, 283, 330, 348, 440, 441, 445, 446, 450, 453, 501, 509, 639, 716, 750, 827, 830, 831, 852, 853, 893, 922, 964, 973, 1019, 1101, 1134, 1154, 1158], "opposit": [63, 150, 391, 903, 956, 1108], "futur": [63, 114, 124, 153, 218, 238, 250, 251, 253, 262, 310, 321, 343, 344, 415, 479, 649, 683, 725, 727, 728, 749, 750, 807, 1148], "steig": [64, 154], "normalweg": 64, "w\u00e4r": 64, "umst\u00e4nden": [64, 1143, 1147, 1162], "renat": 64, "beschreibung": [64, 190, 192, 200, 203, 206, 207, 209, 225, 237, 885], "bergfex": 64, "reden": 64, "sie": [64, 154, 160, 165, 169, 226, 231, 298, 325, 331, 348, 819, 884, 1142, 1144, 1145, 1146, 1152, 1162, 1164, 1165, 1166], "tagen": [64, 1152], "wir": [64, 164, 169, 173, 179, 181, 189, 190, 195, 209, 228, 234, 241, 294, 348, 616, 1143, 1158, 1159], "w\u00fcrden": 64, "denk": [64, 154, 210, 1162], "beiden": [64, 165, 179, 226, 234, 241], "h\u00fctten": [64, 155], "schlafen": 64, "hochk\u00f6nig": 65, "cite": [65, 153, 167, 178, 300], "complain": [65, 148, 157, 161, 175, 377, 550, 565, 566, 772, 800, 910], "subrepo": 65, "whole": [65, 225, 237, 238, 240, 243, 246, 255, 258, 297, 315, 439, 668, 677, 719, 772, 775, 797, 842, 924, 993, 1064, 1151], "subtitl": 65, "fight": [65, 836], "against": [65, 148, 157, 198, 206, 218, 219, 397, 439, 443, 447, 498, 514, 730, 770, 772, 777, 781, 789, 832, 929, 974, 979, 989, 1003, 1061, 1128, 1153], "fake": [65, 901], "simplest": [65, 184, 246, 440, 457, 590, 597, 704, 725, 802, 832, 886, 950, 983, 1021, 1026, 1128, 1136], "unprofession": [65, 150], "populist": 65, "gtest_discover_test": 65, "robust": 65, "sentenc": 65, "implicitli": [65, 202, 207, 218, 404, 454, 562, 570, 660, 668, 760, 927, 992, 1024, 1108], "gtest_add_test": 65, "scan": [65, 215, 238, 241, 308, 901, 903], "primit": [65, 146, 190, 191, 271, 1001, 1148, 1158], "sort": [65, 85, 106, 108, 133, 146, 173, 179, 187, 191, 206, 208, 218, 219, 224, 226, 228, 229, 234, 242, 256, 259, 266, 271, 280, 286, 308, 427, 428, 431, 432, 442, 533, 591, 609, 619, 623, 652, 693, 697, 705, 718, 727, 729, 750, 837, 841, 879, 890, 903, 994, 1042, 1043, 1097, 1123], "port": [65, 119, 142, 143, 148, 153, 158, 218, 252, 261, 282, 283, 297, 316, 348, 750, 830, 836, 884, 893, 904, 909, 913, 931, 1052, 1107, 1111, 1123, 1152, 1159], "trap": [65, 147, 208, 410, 415, 433, 561, 1147, 1149], "hehe": [65, 178, 185], "html_sidebar": 65, "rtd": [65, 143], "linkcheck": 65, "admonit": 65, "matrix": [65, 167, 169, 270, 337, 339, 428], "thoma": [65, 140], "cokela": 65, "ablog": 65, "couldn": [65, 153, 157, 182, 185, 1033], "figur": [65, 114, 132, 138, 143, 151, 152, 167, 222, 991], "piec": [65, 78, 139, 147, 417, 533, 585, 902, 933], "especi": [65, 86, 92, 112, 119, 147, 151, 170, 178, 262, 330, 348, 350, 376, 387, 417, 437, 659, 772, 903], "feed": [65, 84, 143, 1100], "blog_baseurl": 65, "nicer": [65, 957], "pour": [65, 455, 823], "tag": [65, 149, 151, 154, 155, 179, 195, 197, 239, 442, 450, 770, 985, 988, 1160], "resolv": [66, 77, 112, 157, 161, 215, 218, 221, 224, 231, 234, 241, 244, 259, 266, 276, 280, 302, 308, 394, 420, 569, 914, 971, 974, 1099, 1100], "buildenviron": 66, "resolve_refer": 66, "builder": [66, 218, 1052], "get_and_resolve_doctre": 66, "apply_post_transform": 66, "addnod": 66, "docstr": [66, 142, 202, 205, 215, 221, 227, 239, 242, 245, 267, 299, 330, 1023], "emit": [66, 84, 482, 483, 839], "doctre": 66, "increasingli": 68, "whose": [68, 157, 215, 221, 231, 234, 270, 280, 343, 344, 477, 547, 650, 651, 894, 995, 1128, 1135], "mainten": [68, 372, 398, 417, 988], "easier": [68, 80, 85, 92, 167, 208, 439, 465, 570, 654, 797, 1148], "never": [68, 110, 111, 146, 147, 148, 153, 166, 228, 234, 238, 280, 298, 376, 397, 413, 424, 427, 437, 455, 477, 556, 637, 715, 736, 738, 740, 836, 894, 917, 942, 972], "simpler": [68, 157, 208, 272, 275, 355, 414, 448, 594, 793, 797, 902, 914], "wors": [68, 134, 149, 234, 423, 439, 677, 919, 1131], "makefil": [68, 97, 208, 251, 253, 440, 451, 766, 770, 798, 799, 976, 979, 981, 988, 989], "everytbodi": 69, "runtim": [69, 146, 157, 179, 183, 207, 231, 234, 352, 373, 421, 431, 432, 445, 450, 481, 482, 495, 509, 544, 553, 593, 611, 612, 655, 697, 704, 718, 719, 940, 971, 1007, 1025, 1037, 1101, 1102], "dispatch": [69, 297, 544, 553, 629, 632, 633, 734, 735, 736, 738, 749, 750], "hell": [69, 198, 232, 423, 456, 669, 700, 722, 787, 822, 947, 1108], "destructor": [69, 70, 97, 106, 119, 126, 208, 224, 245, 271, 273, 311, 332, 333, 461, 475, 503, 513, 527, 533, 542, 548, 555, 556, 557, 558, 563, 565, 580, 628, 629, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 668, 695, 711, 720, 726, 728, 731, 735, 747, 749, 750, 758, 789, 802, 814, 1140], "opportun": [69, 153, 156, 166, 178, 197, 427, 646, 1008, 1151], "shoot": [69, 859], "oneself": [69, 1153], "encapsul": [70, 73, 206, 219, 224, 271, 273, 297, 316, 437, 457, 461, 475, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 533, 555, 556, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 664, 695, 711, 720, 728, 735, 747, 749, 750, 766, 799, 965, 1020, 1149], "hide": [70, 207, 219, 275, 1020], "fanci": [70, 1040, 1101, 1121], "whatnot": [70, 222, 727, 797, 894, 902, 920, 950], "boost": [71, 224, 450, 453, 533, 683, 958, 1166], "feel": [71, 146, 148, 157, 178, 550, 647, 649, 650, 655, 939, 957, 1019], "cluster_ecpropos": [72, 73, 74, 87, 750], "cluster_ecproposal_ec1": [72, 73, 74, 87, 750], "cluster_ecproposal_ec1_cxx": [72, 73, 74, 87, 750], "cluster_ecproposal_ec1_mt": [72, 73, 74, 87, 750], "cluster_ecproposal_ec1_linux": [72, 73, 74, 750], "cluster_ecproposal_ec2": [72, 74, 750], "cluster_ecproposal_ec2_python": [72, 74, 750], "ecproposal_ec1_git": [72, 73, 74, 750], "ecproposal_ec1_cxx_build": [72, 73, 74, 87, 750], "ecproposal_ec1_cxx_ifac": [72, 73, 74, 750], "ecproposal_ec1_cxx_oo_bas": [72, 73, 74, 750], "ecproposal_ec1_cxx_unittest": [72, 73, 74, 750], "ecproposal_ec1_mt_exercise_mt_rac": [72, 73, 74, 87, 750], "ex": [72, 73, 74, 78, 87, 134, 206, 219, 527, 544, 705, 750, 842, 857, 1130], "ecproposal_ec1_mt_wait": [72, 73, 74, 87, 750], "ecproposal_ec1_mt_lock": [72, 73, 74, 87, 750], "avoid": [72, 73, 74, 78, 87, 146, 153, 161, 238, 363, 398, 476, 511, 513, 523, 557, 561, 612, 750, 795, 886, 902, 1149], "semaphor": [72, 73, 74, 76, 78, 87, 89, 141, 170, 171, 193, 215, 221, 231, 234, 348, 727, 750, 789, 944, 1153, 1163], "ecproposal_ec1_mt_exercise_mt_race_fix": [72, 73, 74, 87, 750], "ecproposal_ec1_linux_exercise_avg_sensor": [72, 73, 74, 750], "averag": [72, 73, 74, 78, 84, 85, 182, 218, 222, 238, 273, 297, 460, 476, 506, 513, 750, 959, 1052], "ecproposal_ec1_linux_exercise_sensor": [72, 73, 74, 750], "temperatur": [72, 73, 74, 78, 82, 91, 94, 97, 114, 115, 116, 119, 120, 121, 126, 182, 215, 262, 297, 310, 311, 336, 339, 354, 356, 358, 456, 462, 467, 488, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 515, 526, 544, 555, 633, 665, 734, 736, 738, 740, 750, 797, 893, 900, 932, 934, 951, 1007, 1083, 1098, 1099, 1100, 1101], "ecproposal_ec1_linux_dev_mgmt": [72, 73, 74, 750], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [72, 73, 74, 750], "ecproposal_ec1_linux_exercise_led_displai": [72, 73, 74, 750], "displai": [72, 73, 74, 78, 115, 121, 126, 151, 215, 221, 231, 234, 259, 262, 264, 266, 271, 276, 280, 302, 308, 339, 431, 504, 750, 832, 879, 888, 901, 955, 1130], "ecproposal_ec1_linux_gpio": [72, 73, 74, 750], "ecproposal_ec1_linux_bas": [72, 73, 74, 750], "ecproposal_ec2_python_flask": [72, 74, 750], "ecproposal_ec2_python_exercise_avg_displai": [72, 74, 750], "ecproposal_ec2_python_exercise_sensor": [72, 74, 750], "ecproposal_ec2_python_bas": [72, 74, 750], "ecproposal_ec2_python_web_sensor": [72, 74, 750], "qualiti": [73, 153, 207, 270, 902, 1122], "assur": 73, "characterist": 73, "polymorph": [74, 106, 114, 115, 124, 205, 206, 219, 271, 273, 275, 290, 293, 439, 461, 475, 503, 555, 628, 629, 632, 633, 652, 713, 718, 734, 735, 736, 749, 750, 1148, 1151], "concurr": [74, 178, 182, 232, 301, 705, 787, 1003, 1095], "increment": [75, 164, 207, 221, 224, 247, 270, 355, 359, 363, 383, 392, 399, 403, 405, 409, 412, 416, 425, 429, 434, 435, 533, 550, 657, 695, 747, 749, 750, 829, 941, 942, 943, 964, 965, 1003], "lossi": 75, "access": [76, 78, 88, 110, 111, 117, 143, 147, 148, 149, 151, 153, 166, 176, 186, 193, 205, 215, 218, 221, 224, 231, 234, 241, 244, 259, 262, 266, 276, 280, 290, 302, 307, 308, 316, 330, 333, 335, 367, 406, 427, 428, 466, 482, 507, 508, 509, 510, 533, 556, 568, 570, 573, 574, 576, 577, 591, 616, 630, 637, 640, 643, 644, 647, 648, 649, 650, 651, 652, 666, 683, 698, 702, 714, 750, 755, 765, 768, 774, 785, 793, 797, 799, 815, 830, 833, 842, 844, 845, 868, 893, 903, 912, 913, 919, 923, 927, 929, 933, 937, 941, 955, 956, 964, 969, 990, 995, 1002, 1003, 1006, 1025, 1032, 1034, 1047, 1063, 1099, 1116, 1130, 1153], "flavor": [76, 87, 146, 440, 704, 709], "stash": 77, "suffic": [77, 153, 365, 415], "purpos": [77, 78, 80, 117, 124, 139, 147, 151, 157, 178, 197, 215, 221, 231, 234, 246, 259, 333, 361, 439, 451, 558, 590, 630, 719, 797, 830, 839, 902, 924, 929, 950, 971, 989, 1019, 1100, 1129, 1152, 1159], "unifi": [78, 123, 185, 583], "intention": [78, 207, 280, 670], "power": [78, 89, 145, 147, 162, 167, 207, 224, 331, 332, 333, 351, 363, 364, 406, 415, 797, 807, 814, 828, 894, 898, 901, 902, 903, 922, 937, 955, 959, 996, 1014, 1018, 1020, 1026, 1031, 1043, 1118], "being": [78, 81, 115, 134, 146, 149, 150, 156, 170, 178, 184, 205, 234, 238, 297, 311, 330, 376, 403, 420, 456, 459, 544, 568, 611, 713, 715, 719, 721, 727, 748, 779, 793, 797, 832, 914, 929, 955, 1002, 1009, 1019, 1022, 1099, 1137, 1140, 1153], "address": [78, 99, 106, 110, 111, 114, 115, 146, 148, 149, 150, 153, 186, 193, 198, 205, 207, 208, 224, 226, 252, 261, 262, 273, 282, 283, 327, 332, 333, 341, 394, 396, 405, 409, 412, 415, 416, 424, 425, 429, 434, 435, 455, 461, 466, 469, 475, 477, 479, 484, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 555, 565, 570, 657, 667, 668, 695, 709, 728, 747, 749, 750, 777, 781, 793, 795, 824, 825, 826, 827, 830, 831, 833, 837, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893, 895, 897, 902, 903, 905, 906, 907, 908, 909, 914, 916, 920, 922, 924, 931, 932, 934, 939, 947, 948, 950, 951, 954, 956, 964, 971, 973, 975, 976, 977, 978, 979, 980, 981, 982, 988, 1003, 1006, 1099, 1100, 1119, 1128], "crucial": [78, 146, 170, 430, 592], "mmu": [78, 146, 768, 811, 834, 955], "sophist": [78, 215, 456, 477, 514, 651], "permiss": [78, 97, 100, 101, 102, 114, 181, 182, 186, 188, 198, 205, 221, 241, 252, 261, 276, 279, 282, 297, 316, 325, 330, 331, 332, 333, 335, 503, 555, 641, 728, 748, 749, 750, 756, 797, 824, 825, 827, 830, 831, 834, 840, 843, 847, 848, 849, 850, 851, 853, 854, 855, 859, 871, 874, 876, 877, 879, 893, 894, 904, 907, 909, 910, 913, 914, 919, 922, 923, 924, 927, 929, 930, 932, 934, 948, 951, 954, 956, 957, 969, 994, 1095, 1123, 1130, 1154, 1163], "nativ": [78, 97, 104, 114, 145, 151, 153, 179, 215, 251, 253, 271, 337, 750, 797, 893, 972, 976, 978, 981, 1104, 1107, 1113], "varieti": [78, 433, 833, 971, 1151], "storag": [78, 151, 156, 440, 668, 797, 833, 894, 902, 919, 939, 1164], "underli": [78, 206, 213, 229, 238, 279, 330, 335, 705, 903, 1095, 1100, 1104], "platform": [78, 153, 206, 215, 219, 221, 231, 234, 238, 246, 264, 323, 332, 350, 777, 797, 902, 903, 937, 955, 1083, 1128, 1130], "offer": [78, 146, 156, 197, 272, 391, 568, 572], "popular": [78, 157, 170, 174, 386, 663, 822, 903, 955, 971, 987, 1013, 1097, 1103, 1111, 1124, 1151], "often": [78, 89, 145, 146, 147, 148, 178, 228, 238, 265, 268, 288, 304, 372, 382, 403, 442, 457, 469, 583, 705, 797, 857, 933, 999, 1019, 1033, 1150, 1151], "appropri": [78, 123, 133, 139, 146, 156, 161, 166, 198, 238, 372, 386, 398, 513, 719, 793, 901, 913, 964, 1101, 1107, 1151], "prototyp": [78, 316, 363, 455, 517, 550, 666, 797, 894, 902, 915, 992, 1107], "higher": [78, 146, 157, 215, 221, 231, 234, 748, 795, 894, 956, 958, 965, 973, 981, 1107, 1150], "fulli": [78, 150, 153, 157, 182, 419, 514, 965], "distribut": [78, 151, 156, 161, 173, 178, 198, 208, 226, 238, 327, 455, 501, 509, 722, 768, 797, 835, 836, 957, 1019], "en": [78, 151, 163, 173, 234, 262, 635], "vogu": 78, "serial": [78, 145, 146, 156, 186, 221, 222, 234, 830, 832, 1152, 1159], "groundwork": 78, "lai": 78, "instruct": [78, 145, 149, 153, 176, 207, 262, 271, 273, 427, 498, 714, 729, 943, 955, 986, 1083], "consolid": [78, 178], "makeri": 78, "everybodi": [78, 151, 272, 419, 465, 559, 598, 641, 828, 1022, 1026, 1128, 1148], "clarifi": 78, "earli": [78, 145, 178, 182, 187, 272, 802, 814, 829, 957, 990, 1007, 1045, 1150], "matter": [78, 145, 150, 151, 153, 161, 178, 184, 186, 357, 401, 433, 440, 447, 457, 557, 558, 570, 573, 659, 698, 705, 715, 717, 772, 797, 799, 842, 853, 895, 901, 903, 914, 994, 1019, 1120, 1130, 1140, 1151], "rewrit": [78, 80, 146, 439], "translat": [78, 91, 92, 166, 179, 197, 234, 238, 241, 244, 280, 704, 1062], "flask": [78, 93, 143, 182, 185, 993], "network": [78, 110, 111, 132, 141, 142, 143, 146, 153, 163, 164, 186, 188, 193, 218, 234, 241, 244, 255, 259, 261, 262, 266, 276, 280, 282, 297, 302, 308, 332, 348, 349, 433, 466, 750, 751, 774, 814, 830, 832, 833, 835, 893, 896, 897, 902, 903, 904, 914, 918, 919, 922, 923, 934, 953, 1159, 1163], "oppos": [80, 114, 145, 185, 219, 226, 236, 271, 398, 442, 447, 544, 881, 895, 902, 910, 944, 957, 964, 969, 988, 1014, 1025, 1026, 1108, 1116], "ahead": [80, 161, 437, 1009], "optimz": 80, "donald": [80, 426], "knuth": [80, 426], "prematur": [80, 426, 430], "optim": [80, 147, 259, 271, 302, 413, 429, 430, 434, 435, 442, 750, 781, 1107, 1147, 1149], "evil": [80, 224, 367, 417, 426, 430, 442, 570], "knowledg": [81, 85, 265, 268, 271, 514, 648, 650, 797, 895, 903, 996, 1018, 1122], "onewir": [81, 85, 97, 106, 114, 115, 126, 262, 273, 310, 330, 333, 502, 503, 555, 750, 893, 900, 901, 932, 934, 951], "protocol": [81, 138, 151, 184, 185, 195, 217, 220, 222, 223, 227, 230, 233, 236, 245, 258, 260, 265, 268, 274, 275, 277, 278, 281, 284, 296, 297, 299, 300, 301, 303, 307, 309, 336, 339, 371, 379, 466, 479, 755, 884, 895, 897, 901, 903, 904, 912, 913, 933, 992, 996, 1000, 1007], "aspect": [81, 117, 178, 182, 208, 232, 271, 273, 301, 462, 828, 901, 903, 1095, 1122, 1128, 1153], "regard": [81, 153, 178, 316, 857, 1019, 1026, 1124, 1128], "filesystem": [81, 85, 106, 114, 145, 148, 157, 186, 188, 198, 249, 330, 335, 514, 749, 750, 797, 823, 902, 914, 930, 937, 955, 974, 1128, 1154, 1159, 1161, 1165], "hwmon": [81, 85, 115, 336, 339], "composit": [82, 106, 126, 182, 208, 254, 272, 273, 290, 454, 461, 475, 489, 503, 555, 750, 999, 1151], "mock": [82, 114, 115, 124, 125, 126, 272, 274, 275, 296, 300, 311, 317, 319, 503, 504, 505, 506, 508, 544, 555, 750, 1135], "pin": [84, 125, 262, 316, 894, 898, 901, 902], "light": [84, 156, 836, 1018, 1128], "linearli": [84, 238, 597, 833], "cold": [84, 197], "hot": [84, 148, 428, 431, 779], "queri": [84, 1027], "said": [84, 110, 111, 148, 161, 178, 265, 268, 275, 477, 590, 637, 721, 727, 758, 894, 902, 903, 914, 941, 956, 999, 1019, 1039, 1108, 1121], "ds18s20": [85, 336, 1128], "datasheet": [85, 131, 793, 894, 903], "lm73": [85, 262, 336, 339, 750, 893, 900, 903], "ti": [85, 145, 437, 515, 559, 716], "hoc": [85, 208, 397], "report": [85, 115, 121, 126, 145, 148, 149, 161, 163, 165, 341, 423, 433, 556, 915, 950, 1135, 1137], "experi": [85, 134, 153, 178, 437, 442, 541, 902, 903, 1129], "subsystem": [86, 97, 98, 103, 104, 114, 164, 186, 193, 198, 235, 251, 253, 255, 261, 262, 271, 273, 274, 290, 296, 750, 775, 793, 807, 827, 831, 833, 893, 894, 901, 902, 903, 937, 953, 994, 1128, 1152, 1153, 1159], "deprec": [86, 125, 275, 624, 923, 937, 1148], "foremost": 87, "osen": [87, 89, 156, 721, 748, 955], "recurs": [87, 88, 182, 206, 215, 221, 231, 234, 725, 789, 802, 841, 842, 857, 869, 879, 886, 906, 913, 950, 1031, 1035, 1148], "mother": [88, 108, 162, 224, 533, 1012, 1148], "protect": [88, 146, 148, 198, 206, 218, 271, 273, 378, 397, 495, 496, 556, 559, 570, 626, 628, 629, 652, 727, 750, 781, 789, 795, 834, 876, 902, 943, 944, 955, 1003, 1006, 1015, 1140, 1153], "critic": [88, 146, 156, 433, 726, 787, 789, 1123], "kind": [88, 146, 148, 156, 161, 166, 178, 182, 215, 221, 222, 231, 232, 234, 246, 262, 274, 275, 296, 300, 462, 514, 562, 609, 659, 668, 713, 727, 828, 894, 901, 902, 1003, 1095, 1121, 1122, 1153], "poll": [89, 152, 163, 789, 791, 814, 937, 942, 944, 961, 965, 1152, 1159, 1163, 1165], "second": [89, 145, 148, 149, 153, 165, 178, 184, 205, 211, 215, 219, 221, 231, 234, 238, 264, 266, 316, 351, 361, 415, 431, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 491, 495, 496, 497, 501, 504, 514, 550, 565, 613, 615, 616, 655, 684, 685, 704, 715, 716, 729, 730, 744, 745, 746, 807, 834, 839, 842, 902, 921, 924, 931, 955, 964, 968, 972, 973, 987, 988, 989, 1039, 1047, 1123, 1135, 1148], "readi": [89, 145, 894, 1128], "rare": [89, 151, 168, 182, 440, 450, 512, 514, 565, 663, 714, 879, 901, 918, 1030, 1034, 1047, 1129], "btw": [89, 150, 156, 178, 184, 198, 205, 225, 228, 330, 414, 766, 832, 1084, 1086], "increas": [89, 148, 427, 894, 957, 959, 987, 1151], "tight": [89, 170, 371, 729, 800, 1120], "bui": [89, 146, 456], "bigger": [89, 146, 178, 427, 1101], "avail": [89, 119, 123, 126, 145, 146, 148, 149, 151, 157, 161, 170, 174, 178, 198, 207, 215, 221, 231, 234, 288, 296, 297, 300, 304, 349, 441, 443, 448, 452, 457, 482, 483, 683, 719, 725, 729, 770, 797, 802, 829, 853, 894, 898, 901, 902, 953, 956, 957, 974, 985, 990, 995, 1002, 1026, 1044, 1045, 1094, 1103, 1120, 1123, 1130, 1131, 1150, 1153], "intro": [93, 114, 125, 126, 143, 173, 197, 207, 216, 229, 230, 243, 246, 265, 268, 273, 279, 285, 297, 555, 655, 663, 683, 707, 750, 893, 917, 934, 936, 938, 1095, 1149, 1151, 1163], "rout": [93, 182, 993], "jinja2": 93, "ss2022": [96, 750, 826, 827, 893], "ws2022": 96, "lab": [96, 106, 114, 330], "vo": [97, 106, 114, 336], "ku": [97, 105, 106, 114], "g1": [97, 750, 826, 827, 893], "g2": [97, 330, 750, 826, 827, 893], "08": [97, 99, 105, 114, 149, 156, 157, 158, 212, 215, 240, 244, 270, 308, 347, 451, 894, 901, 903, 925, 986, 1099], "cont": [97, 114, 216, 279], "command": [97, 99, 112, 114, 142, 145, 150, 156, 186, 198, 203, 213, 215, 221, 222, 229, 231, 234, 243, 246, 252, 254, 261, 262, 279, 282, 283, 316, 330, 335, 348, 398, 419, 430, 442, 452, 453, 454, 461, 475, 479, 489, 503, 512, 555, 565, 714, 728, 749, 750, 797, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 859, 860, 861, 862, 864, 865, 866, 868, 869, 871, 872, 873, 875, 877, 885, 890, 893, 902, 903, 904, 905, 906, 913, 917, 922, 924, 932, 934, 948, 950, 951, 954, 955, 956, 957, 971, 972, 979, 983, 987, 1047, 1095, 1123, 1130, 1137, 1151], "wsl": [97, 98, 103, 104, 114, 235, 255, 261, 274, 290, 296, 750, 827, 831, 893, 974, 981, 982, 986], "homework": [97, 102, 105, 114, 148], "sshf": [97, 101, 114, 252, 261, 262, 282, 283, 337, 750, 893, 904, 909, 974, 983], "toolchain": [97, 103, 104, 106, 108, 114, 119, 141, 158, 173, 175, 262, 348, 439, 440, 446, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 555, 728, 749, 750, 798, 827, 830, 831, 893, 916, 922, 924, 931, 932, 934, 948, 951, 954, 956, 973, 974, 975, 976, 979, 987, 988, 989, 1020, 1143, 1145, 1146, 1147, 1155, 1161, 1163], "bashrc": [97, 104, 114, 145, 157, 218, 252, 261, 262, 276, 282, 283, 750, 827, 829, 877, 879, 893, 913, 983, 985], "studi": [97, 104, 207, 250, 251, 253, 254, 262, 310, 454, 461, 655, 695, 749, 750, 893, 976, 978, 981], "ds18b20": [97, 114, 126, 262, 310, 330, 750, 893, 900, 931], "slave": [97, 114, 126, 262, 310, 750, 893, 898, 900, 931], "redirect": [97, 100, 114, 147, 150, 186, 188, 198, 215, 221, 231, 234, 252, 261, 262, 282, 315, 330, 335, 750, 824, 825, 826, 827, 841, 861, 862, 864, 865, 868, 869, 871, 877, 890, 893, 923, 1045, 1144, 1154, 1161], "pipe": [97, 146, 151, 153, 166, 186, 188, 198, 252, 261, 262, 264, 282, 315, 330, 335, 748, 750, 827, 834, 839, 879, 884, 893, 923, 967, 968, 969, 983, 1045, 1144, 1154, 1161], "06": [97, 106, 114, 156, 187, 231, 250, 263, 270, 287, 290, 293, 329, 347, 439, 450, 533, 748, 1022, 1099], "past": [97, 146, 150, 151, 208, 224, 403, 588, 590, 594, 597, 601, 666, 770, 772, 836, 1090, 1094, 1145], "2p": [97, 104], "3p": [97, 104], "5p": [97, 104], "pointer": [97, 108, 114, 120, 126, 149, 173, 249, 310, 322, 331, 332, 333, 348, 361, 363, 365, 406, 407, 409, 410, 412, 414, 415, 416, 425, 429, 434, 435, 469, 514, 527, 544, 549, 551, 556, 557, 559, 567, 574, 576, 585, 589, 593, 597, 598, 601, 607, 611, 624, 657, 664, 665, 666, 693, 695, 700, 702, 704, 709, 714, 716, 719, 720, 728, 731, 734, 738, 740, 745, 746, 747, 749, 750, 756, 763, 768, 779, 785, 814, 817, 915, 941, 969, 1045, 1145, 1146, 1147, 1148, 1149, 1151], "exit": [97, 114, 142, 146, 148, 176, 197, 215, 221, 224, 231, 234, 256, 262, 297, 323, 348, 352, 404, 446, 453, 462, 565, 632, 712, 714, 750, 760, 765, 799, 893, 903, 919, 920, 921, 923, 924, 929, 931, 934, 935, 951, 961, 968, 969, 988, 994, 1002, 1003, 1021, 1024, 1037, 1047, 1057, 1074, 1123, 1130], "statu": [97, 114, 115, 121, 142, 147, 149, 161, 215, 221, 224, 231, 234, 246, 256, 262, 348, 352, 404, 442, 446, 453, 632, 748, 750, 799, 813, 893, 924, 929, 931, 934, 951, 955, 968, 988, 1024, 1050, 1109], "yai": [97, 142, 218, 226, 228, 241, 247, 266, 276, 308, 598, 649, 655, 950], "ol": [97, 114, 224, 271, 273, 280, 339, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 559, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 707, 711, 717, 720, 728, 735, 738, 747, 749, 750, 890, 965, 1040, 1045, 1067], "randomsensor": [97, 126, 462, 467, 476, 488, 502, 503, 509, 513, 523, 524, 525, 526, 528, 529, 555, 713, 714, 715, 716, 750, 1007], "rectangl": [97, 139, 465, 533, 562, 578, 652, 750], "mystr": [97, 172, 224], "point3d": [97, 578, 652, 750], "cuboid": [97, 578, 652, 750], "hierarchi": [99, 106, 110, 111, 117, 182, 183, 185, 187, 205, 206, 219, 222, 234, 252, 261, 262, 282, 283, 293, 341, 428, 455, 456, 457, 460, 461, 475, 476, 480, 482, 503, 513, 555, 750, 827, 830, 831, 832, 843, 846, 847, 848, 849, 850, 851, 852, 857, 863, 869, 876, 893, 905, 906, 907, 908, 909, 934, 952, 981, 982], "parent": [99, 109, 110, 111, 148, 161, 163, 252, 261, 262, 282, 283, 748, 750, 777, 827, 829, 830, 831, 832, 833, 842, 843, 846, 847, 848, 849, 850, 851, 852, 860, 861, 862, 863, 864, 866, 868, 869, 870, 881, 893, 905, 906, 907, 908, 909, 934, 940, 981, 982], "login": [99, 114, 126, 151, 153, 186, 198, 252, 329, 330, 750, 824, 825, 827, 828, 829, 831, 833, 834, 835, 843, 846, 847, 848, 849, 850, 851, 852, 858, 893, 894, 902, 905, 906, 907, 908, 909, 910, 912, 914, 931, 981, 982, 1073, 1143, 1152, 1159], "bourn": [99, 114, 162, 186, 188, 252, 261, 262, 282, 330, 331, 332, 335, 348, 349, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 748, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 887, 893, 916, 922, 924, 932, 934, 935, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "verifi": [100, 102, 114, 123, 125, 134, 156, 162, 174, 186, 198, 262, 341, 550, 568, 750, 827, 832, 861, 864, 865, 868, 871, 877, 893, 906, 907, 909, 1061, 1098, 1101, 1123], "joke": [100, 146], "mostli": [100, 232, 348, 353, 359, 371, 387, 417, 426, 571, 612, 714, 719, 765, 833, 836, 857, 923, 950, 953, 974, 1150], "secur": [101, 114, 149, 151, 153, 198, 218, 224, 252, 261, 282, 329, 750, 824, 825, 830, 832, 835, 853, 857, 893, 894, 904, 905, 906, 907, 908, 912, 923, 931, 981, 982, 988, 990, 1022, 1052], "account": [101, 110, 111, 114, 151, 153, 173, 178, 182, 183, 218, 224, 234, 241, 244, 259, 263, 264, 266, 276, 280, 302, 308, 330, 335, 360, 433, 439, 637, 655, 770, 901, 914, 1019, 1099], "authent": [101, 114, 186, 198, 207, 252, 261, 262, 282, 283, 327, 330, 750, 824, 825, 893, 904, 905, 906, 907, 908, 909, 914, 1061], "ownership": [101, 114, 173, 208, 262, 283, 297, 503, 523, 527, 533, 555, 668, 710, 713, 714, 728, 749, 750, 824, 825, 827, 830, 831, 834, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 893, 922, 923, 924, 932, 934, 948, 951, 954, 956, 1148, 1151], "setuid": [101, 114, 186, 252, 261, 262, 282, 283, 750, 827, 832, 852, 893], "quick": [102, 114, 178, 185, 203, 207, 213, 222, 229, 243, 255, 285, 482, 719, 884, 894, 1095, 1121], "credenti": [102, 114, 153, 246, 750, 825, 826, 827, 832, 846, 847, 848, 849, 850, 851, 852, 893, 910, 939, 992], "share": [102, 103, 106, 110, 111, 114, 128, 141, 146, 148, 153, 157, 161, 170, 171, 173, 174, 176, 179, 198, 208, 215, 218, 221, 231, 234, 238, 241, 244, 249, 250, 251, 253, 259, 262, 266, 276, 280, 289, 302, 305, 308, 310, 327, 348, 349, 393, 420, 421, 427, 433, 440, 444, 451, 452, 456, 468, 513, 533, 541, 655, 716, 718, 719, 727, 729, 747, 749, 750, 775, 779, 795, 802, 826, 827, 830, 836, 846, 849, 850, 852, 888, 893, 902, 926, 939, 941, 947, 953, 959, 971, 974, 981, 983, 1003, 1006, 1137, 1152, 1153, 1161, 1163], "adjust": [102, 136, 140, 750, 797, 893, 902, 907, 909, 965, 972], "ubuntu": [103, 119, 147, 153, 157, 161, 173, 174, 175, 176, 186, 251, 253, 262, 348, 750, 836, 893, 896, 914, 973, 974, 981, 982, 986, 1130, 1135], "zoom": [103, 104, 114, 153, 162, 178, 262, 276, 348, 440, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 750, 879, 893, 973, 976, 977, 978, 979, 981, 1142], "recap": [104, 114, 182, 186, 195, 224, 271, 272, 299, 330, 551, 1001], "endeavor": 104, "hoop": [104, 836, 968], "doze": [104, 152, 207, 208, 221, 330, 337, 415, 748, 836, 881, 1039, 1045, 1130], "pictur": [104, 143, 146, 167, 178, 182, 275, 276, 427, 433, 512, 809, 857, 859, 879, 894, 913, 917, 1163], "fit": [104, 157, 162, 167, 169, 371, 376, 456, 580, 655, 677, 756, 797, 894, 1098, 1100, 1109], "theori": [106, 182, 400, 427, 1100], "Of": [106, 114, 126, 148, 151, 181, 182, 232, 250, 251, 253, 255, 262, 271, 273, 311, 347, 461, 475, 503, 513, 555, 588, 628, 629, 639, 652, 735, 747, 749, 750, 826, 841, 888, 893, 931, 934, 936, 1001, 1095, 1108, 1151], "ece20": [106, 109, 498, 514, 575, 824, 825, 832], "uml": [106, 126, 254, 272, 274, 275, 461, 475, 503, 513, 555, 750], "foundat": [106, 229, 259, 461, 475, 503, 555, 750, 797, 1159], "adapt": [106, 126, 149, 182, 254, 272, 454, 461, 463, 464, 475, 479, 489, 493, 503, 555, 719, 750, 902, 903, 1151], "syllabu": [106, 338], "vote": 106, "beurteilungsschema": 106, "grade": [106, 109, 114, 126, 334, 344, 1128], "total": [106, 109, 112, 148, 157, 161, 165, 218, 234, 244, 251, 426, 431, 439, 453, 462, 477, 511, 512, 513, 514, 565, 575, 714, 879, 881, 894, 901, 902, 903, 914, 937, 965, 972, 973, 974, 983, 986, 1050, 1052, 1135], "compos": [106, 117, 128, 162, 224, 297, 365, 457, 636, 797, 985, 988, 997, 1011, 1057, 1108], "practic": [106, 219, 228, 238, 400, 437, 590, 629, 666, 701, 708, 901, 927, 969, 1103, 1148, 1151], "theoret": [106, 332, 351, 722], "semest": [106, 109, 334, 336], "addition": [106, 145, 148, 376, 460, 477], "deliv": [106, 146, 897, 968, 969], "variou": [106, 148, 224, 250, 251, 713, 727, 729, 797, 829, 1153], "weight": [106, 169, 178, 422, 791, 903, 1019], "decid": [106, 147, 148, 153, 178, 232, 426, 456, 517, 531, 595, 793, 797, 817, 901, 1002, 1019], "excerpt": [106, 182, 185, 332, 333, 1052, 1109], "w1": [106, 114, 115, 262, 311, 498, 514, 515, 931], "soup": [106, 143, 440, 442, 443, 445, 446, 448, 449, 451, 453, 455, 456, 457, 458, 459, 460, 462, 464, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 511, 513, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 635, 715, 748, 935, 938, 995, 998, 1047, 1128, 1137], "armv8": [106, 157, 262, 515, 972, 985, 986], "rpi4": [106, 157, 262, 515, 972, 985, 986], "gnueabihf": [106, 157, 262, 515, 797, 972, 983, 985, 986], "shape": [106, 139, 167, 169, 208, 270, 271, 302, 503, 533, 555, 575, 655, 750, 797, 923, 1100, 1103, 1113], "algorithm": [106, 147, 156, 167, 215, 221, 229, 231, 234, 242, 244, 250, 251, 271, 280, 427, 503, 520, 544, 551, 555, 582, 593, 595, 596, 598, 599, 602, 603, 619, 622, 623, 652, 697, 705, 707, 718, 722, 750, 1074, 1097, 1101], "find_if": [106, 108, 208, 224, 271, 310, 597, 600, 619, 623, 640, 649, 652, 718, 750], "customiz": [106, 271, 600, 619, 623, 652, 750], "binary_search": [106, 108, 208, 224, 271, 600, 619, 623, 652, 750], "associ": [106, 157, 175, 183, 185, 187, 203, 208, 262, 265, 268, 271, 273, 311, 374, 375, 383, 388, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 503, 504, 520, 522, 555, 590, 619, 623, 652, 655, 657, 683, 695, 747, 749, 750, 756, 763, 821, 895, 923, 995, 1025, 1026, 1027, 1043, 1045, 1102, 1151], "hour": [106, 151, 153, 178, 182, 215, 237, 255, 266, 279, 301, 336, 1057, 1095, 1102], "sent": [106, 146, 147, 186, 291, 433, 479, 837, 945, 965, 969, 1111], "015": 106, "voluntari": 106, "odd": [106, 114, 238, 273, 415, 503, 517, 520, 555, 750, 902, 997, 999], "char": [107, 148, 164, 207, 224, 234, 280, 353, 360, 365, 366, 369, 371, 372, 373, 376, 377, 390, 395, 398, 403, 404, 411, 415, 421, 422, 424, 440, 458, 462, 492, 496, 501, 515, 516, 547, 562, 565, 566, 570, 580, 620, 635, 636, 650, 666, 668, 693, 700, 717, 731, 748, 753, 756, 761, 777, 779, 791, 817, 901, 915, 919, 920, 923, 927, 928, 929, 930, 933, 935, 938, 952, 955, 961, 964, 965, 968, 989, 1034, 1040, 1106, 1135, 1140], "cout": [107, 117, 157, 441, 447, 462, 476, 481, 482, 483, 495, 496, 497, 498, 501, 509, 513, 514, 541, 559, 561, 566, 568, 572, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 636, 639, 646, 649, 655, 660, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 697, 699, 700, 702, 703, 705, 707, 716, 717, 718, 719, 727, 729, 730, 734, 736, 738, 740, 840, 901, 935, 938, 950, 952, 964, 968, 1135], "endl": [107, 157, 441, 462, 476, 481, 482, 483, 495, 496, 497, 498, 501, 509, 513, 514, 541, 559, 561, 566, 568, 572, 573, 580, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 636, 639, 646, 649, 655, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 697, 699, 700, 702, 703, 705, 707, 716, 717, 718, 719, 727, 729, 730, 734, 736, 738, 740, 901, 935, 938, 950, 952, 964, 968, 1135], "constitut": 107, "_id": 107, "objectcontain": 107, "add_object": 107, "_contain": [107, 705], "push_back": [107, 486, 487, 550, 591, 592, 593, 598, 601, 604, 608, 612, 659, 660, 663, 668, 727, 968, 1140], "fragment": [107, 428, 999, 1135], "iostream": [107, 215, 221, 231, 234, 462, 476, 481, 482, 483, 491, 495, 496, 497, 498, 501, 509, 513, 541, 559, 561, 566, 568, 572, 573, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 608, 612, 613, 614, 615, 616, 622, 626, 627, 630, 632, 633, 639, 645, 646, 647, 648, 649, 650, 655, 660, 670, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 697, 699, 700, 702, 705, 707, 716, 717, 718, 719, 727, 729, 734, 736, 738, 740, 748, 901, 935, 938, 942, 950, 952, 964, 968, 969, 1135], "my_vector": 107, "sysroot": [108, 157, 972, 986], "intel": [108, 131, 135, 149, 750, 971], "header": [108, 142, 174, 208, 224, 249, 279, 288, 289, 304, 305, 397, 398, 399, 405, 409, 412, 416, 420, 425, 429, 434, 435, 439, 444, 445, 446, 451, 452, 462, 583, 657, 672, 677, 695, 701, 747, 749, 750, 841, 898, 903, 972, 974, 983, 1052, 1085, 1089, 1090, 1092, 1100, 1103, 1150], "match": [108, 145, 152, 181, 194, 211, 218, 219, 221, 226, 234, 244, 246, 247, 256, 259, 279, 280, 286, 297, 308, 395, 439, 514, 668, 672, 692, 705, 709, 832, 841, 914, 974, 994, 1040, 1095, 1135], "linker": [108, 110, 111, 141, 173, 288, 304, 394, 420, 427, 431, 432, 443, 450, 572, 583, 797, 971, 974, 977, 981, 988, 1145, 1146, 1147, 1150, 1155, 1161], "uniquifi": [109, 273, 503, 520, 555, 750], "lookup": [109, 118, 166, 183, 196, 215, 221, 226, 231, 234, 248, 280, 422, 477, 503, 520, 522, 555, 670, 750, 1007, 1036, 1043, 1073, 1108, 1117, 1165], "leak": [109, 148, 410, 424, 462, 482, 483, 503, 520, 522, 523, 539, 547, 550, 555, 556, 562, 627, 701, 712, 714, 750, 995], "sure": [109, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 186, 198, 205, 222, 224, 264, 327, 421, 456, 457, 460, 479, 482, 483, 512, 538, 635, 709, 745, 797, 902, 903, 924, 928, 983, 995, 1151], "gz": [109, 142, 797, 798, 821, 822, 823, 1050, 1130], "whatev": [109, 118, 123, 125, 145, 146, 148, 153, 169, 184, 244, 316, 433, 479, 558, 658, 683, 748, 862, 864, 914, 919, 955, 957, 1025, 1092, 1100, 1107, 1108, 1130], "quiz": [110, 111, 114, 638, 652, 750, 827, 831, 846, 852, 871, 877, 893, 978, 981], "servic": [110, 111, 142, 151, 152, 153, 186, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 433, 439, 722, 789, 795, 800, 830, 833, 884, 903, 912, 914, 921, 957, 1024], "owner": [110, 111, 147, 186, 330, 335, 715, 756, 797, 830, 844, 845, 853, 879, 914, 942], "dimension": [110, 111, 167, 677, 830, 1100, 1101], "identifi": [110, 111, 147, 156, 215, 221, 231, 234, 280, 376, 398, 419, 421, 431, 646, 755, 795, 830, 901, 903, 1041, 1102], "pthread": [110, 111, 146, 157, 163, 215, 221, 231, 234, 721, 727, 830, 939, 944, 947, 955, 969, 974], "timeslic": [110, 111, 146, 830, 953, 958], "suspend": [110, 111, 146, 147, 683, 685, 725, 793, 828, 830, 841, 944, 969], "favor": [110, 111, 830, 956, 1148], "fair": [110, 111, 146, 795, 830, 956, 958], "ensur": [110, 111, 234, 457, 505, 830], "evenli": [110, 111, 226, 830], "cpu": [110, 111, 145, 146, 149, 153, 156, 179, 189, 193, 273, 341, 345, 413, 414, 426, 428, 433, 591, 722, 729, 750, 768, 781, 795, 802, 807, 817, 828, 830, 833, 837, 893, 901, 902, 903, 917, 934, 942, 944, 954, 955, 956, 957, 958, 1005, 1022, 1153], "infinit": [110, 111, 146, 166, 185, 215, 219, 221, 224, 226, 231, 234, 242, 275, 279, 388, 406, 413, 830, 834, 953, 956, 999, 1000, 1001, 1030, 1065], "illus": [110, 111, 830, 834, 953, 956, 1153], "action": [110, 111, 156, 185, 241, 440, 446, 558, 637, 856, 857, 918, 923, 955, 968, 970, 1102, 1123], "undefin": [110, 111, 207, 369, 376, 403, 446, 564, 572, 596, 603, 608, 632, 637, 668, 697, 968], "behavior": [110, 111, 117, 146, 148, 151, 183, 205, 207, 234, 376, 596, 603, 608, 637, 668, 685, 830, 924, 928, 969, 972, 992, 997, 1014], "declar": [110, 111, 206, 207, 219, 224, 352, 368, 383, 392, 397, 399, 405, 406, 409, 412, 413, 416, 419, 420, 421, 425, 427, 429, 434, 435, 440, 560, 570, 630, 637, 646, 647, 657, 668, 677, 693, 695, 715, 747, 749, 750, 903, 923, 927, 929, 930, 956, 1137], "promis": [110, 111, 148, 250, 251, 253, 262, 310, 363, 421, 479, 547, 559, 568, 637, 683, 685, 686, 689, 690, 727, 728, 749, 750, 968, 1020, 1148], "caller": [110, 111, 148, 224, 363, 365, 401, 407, 431, 433, 570, 637, 649, 666, 715, 717, 722, 725, 789, 800, 940, 944, 995, 1074], "uniniti": [110, 111, 424, 550, 557, 559, 560, 561, 564, 637, 752], "guarante": [110, 111, 146, 184, 215, 234, 415, 460, 637, 761, 768, 902, 903, 956, 957, 965, 992], "contigu": [110, 111, 428, 591, 608, 637, 783, 933, 1116], "vec": [110, 111, 557, 559, 566, 573, 574, 575, 576, 577, 637], "carri": [112, 148, 153, 168, 419, 451, 460, 477, 748, 901, 958, 971, 994], "norm": [112, 224, 1108], "meantim": [112, 462, 918], "fresh": [112, 147], "made": [112, 117, 125, 139, 140, 145, 146, 147, 149, 152, 153, 157, 161, 198, 213, 238, 262, 297, 330, 362, 400, 401, 403, 406, 437, 457, 461, 477, 483, 683, 781, 797, 828, 829, 834, 894, 901, 927, 933, 938, 956, 974, 999, 1006, 1016, 1052, 1100], "arbitrari": [112, 146, 167, 234, 238, 357, 373, 391, 427, 442, 580, 607, 608, 660, 718, 730, 756, 898, 923, 927, 955, 995, 1031, 1045, 1073], "sinc": [112, 128, 157, 163, 208, 214, 245, 326, 427, 430, 559, 567, 568, 598, 611, 654, 655, 683, 704, 709, 715, 730, 748, 797, 901, 914, 921, 927, 930, 942, 957, 964, 1025, 1149], "whichev": 112, "enumer": [112, 161, 167, 169, 179, 185, 190, 191, 195, 197, 203, 204, 206, 227, 231, 236, 242, 256, 260, 277, 280, 299, 309, 372, 419, 439, 656, 758, 793, 903, 1158], "pack": [112, 157, 161, 207, 512, 533, 823, 857, 895, 897], "unpack": [112, 161, 165, 185, 191, 195, 197, 202, 206, 210, 215, 218, 223, 227, 228, 234, 239, 241, 245, 246, 257, 262, 264, 267, 276, 280, 298, 301, 303, 309, 311, 315, 330, 695, 749, 750, 797, 823, 895, 897, 901, 972, 979, 985, 986, 1025, 1043, 1148], "kib": [112, 161], "222": [112, 179, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 302, 308, 446], "addit": [112, 148, 166, 178, 205, 234, 237, 315, 374, 421, 442, 476, 477, 491, 513, 559, 571, 577, 648, 797, 834, 910, 1014, 1026, 1042, 1044, 1123], "checkout": [112, 128, 138, 149, 161, 175, 770, 797, 798, 1160], "previou": [112, 150, 166, 297, 498, 550, 566, 648, 857, 889, 929, 996, 998, 1018, 1020, 1064, 1122], "9bfda12": 112, "mosquitto": [112, 218, 222, 234, 241, 244, 259, 266, 276, 280, 302, 308, 1089, 1111], "client": [112, 119, 128, 151, 153, 164, 209, 213, 241, 255, 437, 465, 466, 479, 718, 719, 897, 910, 912, 920, 965, 1107, 1123], "smoothli": 112, "forward": [112, 161, 224, 250, 251, 252, 261, 282, 283, 310, 368, 383, 392, 398, 399, 405, 409, 412, 416, 425, 429, 434, 435, 620, 657, 664, 695, 705, 747, 749, 750, 797, 857, 881, 889, 893, 894, 904, 909, 1148], "diverg": [112, 955], "00aea42": 112, "delet": [112, 173, 185, 215, 234, 249, 259, 280, 311, 325, 424, 455, 458, 497, 514, 523, 527, 539, 547, 562, 565, 624, 627, 632, 655, 665, 666, 667, 695, 700, 712, 713, 714, 715, 731, 740, 749, 750, 775, 805, 834, 1104, 1130, 1147, 1148], "footnot": [112, 149, 151, 152, 153, 156, 157, 162, 169, 175, 178, 181, 265, 268, 456, 483, 527, 574, 576, 577, 590, 620, 639, 766, 768, 829, 836, 851, 901, 902, 903, 924, 927, 987, 1019, 1022, 1052, 1086, 1101, 1148, 1151], "term": [112, 117, 146, 148, 170, 198, 238, 271, 273, 327, 427, 570, 573, 637, 715, 718, 830, 903, 922, 956, 968, 1100, 1135], "ss2023": 113, "ws2023": [113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 750], "firstnam": [114, 126, 179, 205, 218, 226, 228, 231, 234, 238, 241, 244, 246, 247, 256, 259, 266, 280, 286, 291, 298, 316, 321, 457, 458, 486, 492, 501, 502, 515, 570, 616, 642, 646, 648, 650, 667, 824, 825, 861, 862, 864, 866, 869, 995, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1024, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1103, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "lastnam": [114, 126, 179, 208, 218, 224, 226, 228, 231, 234, 238, 241, 244, 246, 247, 259, 266, 280, 286, 291, 298, 316, 321, 457, 458, 486, 492, 501, 502, 515, 570, 616, 640, 642, 646, 649, 652, 667, 750, 824, 825, 861, 862, 864, 866, 869, 995, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1024, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1103, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "bouncem": [114, 126, 514, 515, 824, 825], "procf": [114, 186, 188, 262, 750, 835, 893, 934, 951, 1152, 1159], "umask": [114, 252, 261, 262, 282, 283, 330, 335, 750, 827, 852, 876, 893, 927, 939], "diff": [114, 202, 221, 557, 559, 1014, 1154], "raspi": [114, 142, 276, 330, 336, 750, 774, 797, 798, 799, 801, 806, 812, 815, 818, 893, 895, 896, 897, 898, 901, 902, 903, 985, 986], "spirit": [114, 391], "readm": [114, 130, 165, 271, 273, 901, 902], "modular": [114, 178, 183, 185, 213, 232, 264, 332, 333, 363, 440, 971, 998], "plc": 114, "sallok": 114, "constantsensor_nopoli": [114, 126, 503, 509, 555, 750], "randomsensor_nopoli": [114, 126, 503, 555, 750], "ece21": [114, 125, 126], "labexam": 114, "hysteresis_nopoli": [114, 115, 126, 503, 504, 555, 750], "upload": [114, 152, 857, 1050, 1122], "j": [114, 143, 151, 157, 194, 209, 211, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 280, 286, 298, 302, 377, 380, 397, 421, 428, 477, 570, 659, 670, 718, 807, 823, 979, 983, 999, 1108, 1114], "bz2": [114, 147, 433, 797, 819, 822, 992], "influenc": [114, 972, 1148], "felber": 114, "vscode": [114, 176, 336, 350, 879], "folder": [114, 152], "comprehend": [114, 232, 376, 382, 968], "workspacefold": 114, "suppli": [114, 148, 186, 515, 517, 561, 756, 797, 813, 832, 894, 898, 901, 903, 918, 927, 1056], "cpprefer": [114, 595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 616, 635], "averagingsensor_nopoli": [114, 126, 503, 555, 750], "toolcas": [114, 123, 126, 271, 273, 672], "mocksensor_nopoli": [114, 126, 503, 504, 505, 506, 555, 750], "specifi": [114, 146, 163, 234, 246, 280, 371, 439, 448, 501, 504, 509, 512, 561, 641, 655, 670, 694, 705, 797, 857, 914, 927, 931, 957, 969, 1022, 1037, 1045, 1049, 1066, 1085, 1087, 1116, 1118, 1123], "hint": [114, 123, 161, 234, 246, 275, 354, 457, 517, 527, 531, 642, 824, 825, 837, 906, 955], "target_link_librari": [114, 174, 443, 445, 446, 447, 448, 452, 498, 534, 537, 543, 549, 552, 967, 972, 973, 1134, 1137, 1139], "inter": [114, 146, 164, 170, 956, 1152, 1159, 1162, 1164], "likewis": [114, 221, 544, 575, 823, 842, 913, 929, 979, 1100, 1137], "ledstripedisplay_nopoli": [114, 126, 503, 555, 750], "somewhat": [115, 166, 207, 427, 460], "02131d959eaa": [115, 498, 514, 515, 931], "heat": [115, 254, 454, 461, 505, 514, 750, 903, 1099, 1100], "hwmon2": [115, 901], "temp1_input": [115, 901, 903], "boilingpot": [115, 116], "hysteresi": [115, 122, 124, 125, 126, 311, 339, 505], "knob": [115, 1023], "steer": 115, "desir": [115, 151, 215, 221, 231, 234, 372, 376, 387, 509, 559, 561, 567, 649, 795, 928, 930, 1102], "hardcod": [115, 147, 334, 533, 756, 760, 1061], "ledstripedisplai": [115, 122, 123, 124, 125], "unreason": 115, "cluster_fh2021": [115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 750], "fh2021_boiling_pot": [115, 116, 121, 125, 750], "fh2021_switch_interfac": [115, 116, 120, 121, 122, 125, 750], "fh2021_sysfs_gpio_switch": [115, 121, 125, 750], "termin": [117, 145, 147, 151, 165, 176, 198, 244, 246, 262, 265, 268, 271, 273, 275, 352, 355, 359, 362, 365, 372, 384, 390, 413, 433, 439, 451, 455, 481, 482, 514, 533, 562, 683, 689, 716, 722, 813, 832, 835, 839, 840, 841, 857, 879, 889, 890, 923, 941, 945, 950, 955, 967, 968, 969, 1024, 1026, 1030, 1045, 1057, 1074, 1102, 1108, 1111, 1159], "style": [117, 142, 146, 151, 215, 221, 224, 231, 234, 273, 423, 438, 439, 533, 558, 559, 564, 598, 632, 635, 646, 655, 660, 691, 707, 732, 735, 739, 740, 741, 749, 750, 765, 814, 937, 1023, 1064, 1089, 1100], "reusabl": 117, "compon": [117, 206, 219, 311, 430, 881, 956], "dedic": [117, 146, 147, 178, 183, 232, 262, 265, 268, 423, 439, 765, 835, 836, 901, 902, 903, 937, 939, 973, 991, 1002, 1035, 1151], "constrain": [117, 835], "decoupl": [117, 222, 455, 955], "sink": [117, 121, 274, 275, 290, 293, 296, 300, 750], "datalogg": [117, 275, 297], "target_include_directori": [117, 448, 449, 451, 452], "announc": [117, 337, 448, 449, 626, 901, 902], "anyon": [117, 146, 547, 768], "node": [117, 139, 151, 156, 166, 411, 431, 448, 611, 753, 756, 760, 766, 775, 987, 1111, 1128], "startlog": 117, "uint16_t": [117, 371], "special": [117, 139, 146, 193, 226, 228, 234, 238, 262, 352, 404, 465, 476, 479, 482, 483, 527, 550, 555, 668, 670, 724, 746, 823, 834, 839, 895, 917, 923, 945, 969, 988, 993, 1012, 1014, 1022, 1031, 1033, 1037, 1097, 1102, 1133, 1153, 1154], "unif": [117, 556], "leftov": 117, "gettim": 117, "defer": [117, 146, 437, 795, 817], "timestamp": [117, 211, 221, 241, 270, 274, 275, 296, 298, 300, 302, 308, 439, 719, 758, 859, 879, 913, 964], "sinkfil": 117, "sinkmock": 117, "usabl": [117, 234, 280, 381, 460, 511, 666, 904], "sensorconfig": [117, 126, 301], "sensorvalu": [117, 118, 119, 476, 490], "runtime_error": [117, 481, 482, 493, 495, 496, 497, 515, 729], "prebuilt": [117, 901], "order": [117, 133, 139, 145, 151, 152, 156, 157, 166, 178, 179, 182, 184, 215, 221, 226, 236, 238, 241, 271, 288, 304, 356, 382, 393, 415, 427, 442, 457, 476, 531, 533, 540, 542, 605, 651, 748, 752, 768, 781, 797, 886, 894, 901, 903, 919, 958, 983, 999, 1019, 1067, 1077, 1150], "acquisitionloop": [117, 297, 301], "n_iter": 117, "doit": [117, 218, 462], "write_measur": [117, 297], "mockingsink": 117, "receiv": [117, 147, 166, 221, 224, 262, 291, 363, 479, 570, 668, 756, 768, 789, 797, 857, 894, 897, 903, 910, 918, 923, 945, 953, 968, 969, 992, 995, 1045, 1076, 1091, 1108], "yaml": 117, "ini": [117, 130, 151, 165, 338, 341, 1128], "fh2021_datalogg": [117, 118, 119, 121, 750], "predecessor": [118, 119, 232, 240, 246, 290, 293], "sinklogg": [118, 119], "csvsink": [118, 297], "logfil": [118, 147, 185, 839, 890], "linksoben": 118, "rechtsunten": 118, "addmeasur": 118, "rememb": [118, 151, 152, 167, 174, 184, 205, 382, 415, 465, 591, 592, 626, 629, 666, 667, 715, 793, 797, 839, 854, 857, 876, 901, 910, 912, 993, 1059, 1069], "csvname": [118, 219, 264, 439], "valuenam": 118, "_config": 118, "sensor_valu": 118, "getmeasur": 118, "rotat": [118, 147, 894, 919], "backup": [118, 152, 186, 440, 826, 828, 910, 1113], "fh2021_datalogger_csv_sink": [118, 121, 750], "struct": [119, 149, 173, 207, 208, 224, 398, 403, 409, 410, 411, 412, 415, 416, 419, 421, 423, 425, 429, 434, 435, 457, 462, 479, 514, 515, 559, 560, 565, 567, 569, 570, 590, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 655, 657, 658, 659, 660, 667, 683, 686, 688, 689, 690, 691, 695, 700, 718, 719, 729, 731, 738, 739, 741, 747, 748, 749, 750, 756, 758, 761, 763, 765, 766, 768, 781, 785, 787, 789, 791, 793, 799, 800, 805, 807, 810, 814, 816, 817, 895, 897, 901, 920, 921, 933, 944, 955, 958, 964, 965, 968, 969, 1149], "sensor_config": 119, "getallmeasur": 119, "localhost": [119, 1106, 1111], "1883": [119, 1111], "transport": [119, 170, 222, 224, 512, 729, 1091, 1111], "sensor1": [119, 256, 462, 734, 736, 738, 740, 741], "sensor2": [119, 462, 734, 736, 738, 740, 741], "api": [119, 146, 153, 170, 193, 207, 234, 341, 345, 750, 753, 760, 768, 775, 779, 791, 893, 934, 946, 954, 957, 965, 1050, 1106, 1124, 1152, 1153], "burden": [119, 439, 572, 997, 1129], "handmad": 119, "fedora": [119, 142, 151, 157, 158, 161, 175, 262, 527, 750, 754, 757, 759, 762, 764, 767, 774, 776, 777, 778, 782, 788, 794, 798, 801, 806, 812, 815, 818, 853, 857, 893, 896, 973, 974, 981, 982, 983, 986, 1111, 1135], "mosquitto_new": 119, "mosquitto_connect": 119, "mosquitto_destroi": 119, "prohibit": [119, 567], "wide": [119, 153, 157, 353, 354, 829, 910, 965, 971], "boil": [119, 121, 122, 125, 750, 797], "pot": [119, 121, 122, 125, 750], "iot": [116, 119, 121, 122, 125, 126, 222, 262, 750], "broadcast": [119, 727, 895, 902, 944, 969, 1165], "flexibl": [119, 254, 448, 454, 468, 475, 489, 503, 555, 601, 750, 940, 955, 971, 972, 973, 988, 989, 1040, 1143], "fh2021_datalogger_mqtt_sink": [119, 121, 750], "logger": [121, 126, 275, 293, 297, 300, 719, 750], "pwm": [116, 120, 121, 126, 262, 271, 750, 797, 893, 894, 900, 937, 1152, 1159], "fh2021_pwm_displai": [116, 120, 121, 123, 750], "fh2021_libgpiod_switch": [121, 122, 750], "mockswitch": [122, 124, 125], "libgpiodswitch": 122, "set_stat": [122, 125, 311], "pca9685": [123, 126, 262, 750, 893, 894, 900], "pwmchip0": [123, 894, 902], "pwm0": [123, 894, 902], "danc": [123, 152, 514, 817, 987], "phase": [123, 194, 481, 495, 965, 999], "cumbersom": [123, 148, 150, 185, 568, 591, 659, 703, 753, 939, 965, 1135], "percentagedisplai": [120, 123], "show_percentag": [120, 123], "round": [123, 146, 213, 218, 228, 238, 254, 259, 308, 310, 454, 461, 462, 464, 466, 475, 476, 489, 503, 555, 750, 958, 1164], "hood": [123, 148, 971], "percentag": [120, 123, 431], "pwmdisplai": 123, "bit": [123, 125, 140, 145, 146, 148, 151, 153, 156, 157, 178, 179, 182, 189, 208, 219, 221, 222, 228, 252, 255, 261, 262, 265, 268, 282, 283, 301, 325, 330, 335, 341, 353, 359, 365, 371, 376, 383, 392, 399, 400, 405, 409, 412, 415, 416, 425, 429, 434, 435, 498, 512, 573, 657, 692, 695, 705, 715, 747, 748, 749, 750, 793, 797, 816, 827, 828, 852, 854, 856, 893, 894, 895, 897, 902, 904, 927, 955, 972, 981, 991, 1031, 1095, 1108, 1143, 1148], "pwm5": 123, "visibl": [123, 125, 161, 187, 207, 273, 316, 363, 365, 367, 391, 393, 424, 425, 429, 434, 435, 499, 648, 750, 768, 901, 903, 965, 1036, 1064, 1104], "10000000": [123, 148, 221, 379, 941, 997, 1005], "set_percentag": 123, "duti": [123, 894, 902], "duty_cycl": [123, 894, 902], "unbuff": 123, "automat": [123, 125, 134, 148, 150, 152, 153, 161, 196, 198, 202, 208, 215, 221, 231, 234, 238, 271, 273, 367, 376, 403, 420, 423, 427, 439, 468, 469, 558, 561, 626, 630, 668, 697, 735, 749, 750, 753, 768, 797, 901, 903, 930, 992, 1045, 1052, 1057], "serv": [124, 150, 152, 388, 1101, 1129, 1163], "ground": [124, 902, 903], "mocksensor": [124, 126], "upstream": [125, 149, 152, 157, 161, 775], "sysfsgpioswitch": 125, "wherea": 125, "gpio20": 125, "voltag": [125, 894, 901], "constructur": 125, "proid": 125, "lifecycl": 125, "avg": [126, 234, 420, 459, 476, 487, 506, 513, 734, 736, 738, 740], "random": [126, 164, 166, 182, 194, 206, 218, 219, 222, 226, 228, 231, 234, 239, 241, 244, 266, 275, 308, 325, 330, 373, 460, 462, 467, 476, 502, 513, 523, 524, 525, 526, 528, 529, 530, 560, 713, 828, 903, 914, 933, 961, 995, 1007, 1030, 1102, 1111], "lifetim": [126, 147, 205, 207, 224, 236, 368, 383, 392, 399, 405, 409, 410, 412, 416, 425, 429, 434, 435, 469, 562, 645, 657, 668, 695, 747, 749, 750, 990], "averagingsensor": [126, 459, 487], "overrid": [126, 142, 206, 219, 234, 249, 311, 456, 462, 464, 469, 484, 486, 487, 488, 490, 491, 493, 515, 629, 630, 694, 695, 734, 749, 750, 992, 1007, 1140], "scheme": [126, 234, 280, 297, 300, 571, 990, 994], "constantsensor": [126, 459, 462, 467, 479, 480, 488, 500, 507, 513, 523, 524, 525, 526, 528, 529, 665, 713, 714, 715, 716, 1007, 1083], "outlook": [115, 117, 126, 836], "w1sensor": [126, 499, 500, 501, 502, 514], "meet": [126, 151, 153, 178, 415, 841, 983, 996], "liskow": [126, 465], "segreg": [126, 437], "invers": [126, 238, 345, 437, 455, 462, 761, 956, 957, 1164], "gcc": [126, 147, 148, 174, 194, 196, 215, 221, 231, 234, 323, 350, 352, 376, 393, 397, 415, 418, 419, 421, 431, 432, 440, 442, 541, 589, 592, 724, 797, 798, 834, 854, 919, 920, 921, 927, 928, 929, 930, 939, 942, 972, 983, 985, 986, 987, 988, 989, 1021, 1137, 1143], "cycl": [126, 208, 243, 437, 439, 683, 714, 728, 749, 750, 893, 894, 902, 934, 948, 954], "todai": [126, 147, 198, 206, 222, 255, 272, 288, 301, 304, 339, 365, 1095, 1150, 1153], "minut": [126, 146, 152, 153, 178, 182, 185, 222, 903, 1095, 1111], "suppos": [126, 161, 182, 238, 315, 479, 775, 797, 814, 836, 894, 942, 1089, 1128], "deploi": [126, 158, 186, 330, 335, 455, 787, 824, 825, 902, 903, 908, 910, 914], "leddisplai": 126, "pwmcontrol": 126, "dir": [128, 179, 198, 206, 219, 228, 231, 238, 256, 259, 279, 280, 298, 315, 323, 404, 439, 440, 446, 451, 842, 972, 973, 985, 1008, 1123, 1130], "wo": [128, 154, 164, 165, 173, 179, 181, 348, 1145, 1146, 1164], "jf": [128, 139, 153, 190, 191, 249, 266, 330, 335, 349, 479, 493, 772, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1153, 1158], "aon": 128, "biz": 128, "svn": [128, 142, 162, 208, 348, 349], "recommend": [128, 157, 178, 186, 198, 231, 427, 580, 611, 797, 857, 902, 1050, 1104, 1112], "lokalen": 128, "fetch": [128, 147, 161, 797, 940, 968], "myremot": 128, "orig": [128, 149, 196], "stia": 128, "improv": [129, 427, 430, 442, 698, 713, 748, 990], "stack": [129, 167, 168, 169, 176, 190, 191, 209, 215, 218, 221, 231, 234, 241, 244, 259, 266, 276, 280, 302, 308, 421, 427, 477, 561, 592, 712, 830, 834, 902, 927, 939, 1158], "hang": [129, 189, 557, 800, 823], "seo": [129, 809], "blog": [129, 142, 146, 149, 156, 161, 717], "i2": [129, 131, 136, 241, 276, 750], "kontron": [129, 138, 750], "smarc": [129, 138, 750], "proper": [130, 146, 174, 413, 772, 797, 929, 1014], "manifest": [130, 983, 1131], "cfg": [130, 138], "author_email": 130, "classifi": [130, 1050, 1097], "tox": 130, "travi": 130, "yml": 130, "upgrad": [130, 134, 135, 165, 750, 1123, 1130], "zip": [130, 138, 142, 206, 226, 232, 246, 259, 309, 857, 863, 879], "zipfil": [130, 206], "99": [130, 156, 165, 179, 189, 196, 202, 205, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 431, 958, 1034, 1069, 1099], "999": [130, 218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "whl": [130, 142, 1050, 1123], "uninstal": [130, 445, 1123, 1128], "pypa": 130, "sampleproject": 130, "devicetre": [131, 902], "connect": [120, 131, 146, 153, 166, 186, 198, 219, 262, 291, 327, 335, 336, 411, 729, 828, 890, 894, 895, 902, 903, 912, 917, 923, 937, 1104, 1106, 1111, 1123, 1151, 1163, 1165], "signal": [131, 142, 143, 171, 273, 348, 431, 729, 750, 768, 789, 834, 893, 894, 902, 934, 939, 947, 955, 956, 961, 965, 1154, 1161, 1162, 1165], "audio_mck": 131, "i2s0_ck": 131, "i2s0_lrck": 131, "i2s0_sdout": 131, "alsa": [131, 149], "tlv320dac3203irg": 131, "tlv320dac3203": 131, "drive": [131, 264, 417, 505, 902, 923, 1102], "suggest": [131, 145, 146, 148, 150, 152, 153, 161, 170, 178, 185, 186, 187, 188, 251, 253, 271, 273, 391, 1019, 1047, 1128], "tlv320aic32x4": 131, "compat": [131, 151, 167, 270, 566, 656, 672, 748, 753, 772, 974, 1020, 1043, 1108, 1123, 1124], "tlv320aic31xxsw": 131, "tlv320aic31xx": 131, "wget": [132, 151, 153, 157, 276, 983, 985], "cdimag": 132, "amd64": [132, 198, 327, 371], "iso": [132, 206, 224, 225, 241, 244, 264, 286, 298, 302, 351, 439, 556, 572, 821], "netinst": 132, "img": [132, 167, 169, 426, 797, 901], "qcow2": 132, "virtualdebian": 132, "30g": [132, 153], "kvm": [132, 149], "hda": 132, "cdrom": 132, "2048": [132, 156, 221], "nic": 132, "sic": [132, 157], "box": [132, 136, 178, 894, 901, 1019], "deliveri": [133, 137, 146, 967, 970], "outcom": [134, 182, 187, 273, 797, 856, 857, 979, 1051], "dirti": [134, 135, 148, 162, 397, 462, 750], "forget": [134, 139, 146, 147, 148, 222, 362, 365, 410, 439, 1104, 1110, 1129, 1148], "graphic": [134, 432, 832, 833, 902], "plug": [134, 147, 149, 461], "monitor": [134, 149, 163], "4k": [134, 148, 955, 964], "dual": [134, 136], "gnome": [134, 146, 151, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 433, 797, 832, 888, 956], "applianc": [134, 148, 433], "x11": 134, "wayland": [134, 151], "benchmark": 134, "glxgear": 134, "su": [134, 985], "pect": 134, "cluster_project_xxx": [135, 750], "project_xxx_dirty_upgrad": [135, 750], "project_xxx_yocto_kernel": [135, 750], "bsp": [135, 750], "project_xxx_debian_config": [135, 750], "project_xxx_audio_chip": [135, 750], "chip": [135, 164, 218, 750, 894, 898, 901, 919, 921, 955, 1052], "bringup": [135, 136, 750], "project_xxx_hardware_bringup": [135, 750], "project_xxx_debian_kernel_packag": [135, 750], "finish": [135, 178, 197, 722, 750, 807, 1006], "project_xxx_wait_hardwar": [135, 750], "shot": [136, 153, 391, 655, 729, 748], "dac": 136, "massacr": [136, 165, 224, 330, 391, 397, 423, 447, 655, 1002], "distro": [136, 445, 1026, 1137], "bootload": [136, 145, 156, 433, 833, 901, 903], "oldconfig": [136, 147, 770, 777, 797, 798], "qemu": [136, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "grub": [136, 156], "stabl": [136, 153, 157, 437, 775, 797, 836, 955, 987, 989, 1050, 1124], "yoctoproject": 138, "v5": [138, 149], "bsp_smarc": 138, "sxal4_smarc": 138, "sxal_r1": 138, "0_combin": 138, "sxal4_5": 138, "sxal4": 138, "inc": [138, 149, 270, 414, 451, 452, 724, 942, 1005], "filesextrapaths_prepend": 138, "thisdir": 138, "linux_vers": 138, "linux_version_extens": 138, "linux_kernel_typ": 138, "kbranch": 138, "kmeta": 138, "lic_files_chksum": 138, "md5": 138, "bbea815ee2795b2f4230826c0c6b8814": 138, "srcrev_machine_pn": 138, "3604bc07c035939266d78d65084c6cd54ffc6d56": 138, "srcrev_meta_pn": 138, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 138, "src_uri": 138, "bareclon": 138, "cach": [138, 142, 147, 273, 276, 413, 427, 432, 433, 591, 608, 879, 956, 1123, 1130, 1146], "destsuffix": 138, "scc": 138, "pv": 138, "srcpv": 138, "include_patch": 138, "patch": [138, 157, 158, 957, 985, 1143], "compatible_machin": 138, "therebi": [139, 178, 663, 888, 968, 1014, 1052], "simplifi": 139, "fine": [139, 148, 153, 182, 442, 443, 558, 670, 672, 777, 807, 914, 918, 986, 1003, 1015, 1024, 1030, 1045, 1108], "grain": [139, 153, 439, 442, 807, 1015, 1030], "surround": [139, 656, 697, 709], "cut": [139, 167, 185, 198, 238, 252, 261, 282, 283, 376, 411, 750, 787, 827, 841, 887, 890, 893, 903], "linewis": 139, "wherev": [139, 355], "obs studio": 140, "video edit": 140, "screen record": 140, "These": [140, 148, 150, 151, 215, 221, 231, 234, 442, 455, 770, 797, 901, 973], "offici": [140, 182, 183, 186, 187, 188, 193, 555, 985, 1133], "jonathan": [140, 331, 332, 1143], "himself": [140, 903], "paus": [140, 148, 955, 968], "meanwhil": 140, "freez": [140, 1123, 1131], "photo": 140, "length": [140, 202, 205, 215, 221, 231, 234, 263, 270, 280, 302, 308, 439, 511, 562, 574, 635, 768, 781, 793, 895, 897, 923, 933, 965, 1100, 1108, 1112, 1119], "grab": [140, 894, 902], "neil": 141, "patel": 141, "insight": [141, 145, 442, 983, 1122], "consol": [141, 198, 832, 835, 890, 1074, 1154], "crawlabl": 141, "dn": [141, 150, 153, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 1165], "domain": [141, 142, 152, 153, 158, 423, 437, 449, 956, 1094, 1097, 1163, 1165], "ipc": [141, 142, 143, 146, 347, 349, 748, 750, 893, 934, 962, 1163], "queue": [141, 142, 147, 156, 157, 164, 170, 190, 191, 193, 222, 250, 251, 253, 262, 274, 275, 296, 297, 300, 310, 479, 728, 749, 750, 791, 799, 817, 830, 834, 893, 934, 944, 948, 1158, 1162, 1163, 1164], "pydbu": 142, "openh": [142, 143, 164, 205], "traceback": [142, 168, 215, 221, 231, 234, 244, 264, 266, 280, 302, 992, 993, 994, 999, 1007, 1008, 1014, 1015, 1036, 1037, 1041, 1043, 1046, 1047, 1108, 1116, 1117, 1129], "recent": [142, 145, 148, 153, 168, 176, 215, 221, 231, 234, 244, 264, 266, 280, 302, 351, 797, 876, 992, 993, 994, 999, 1007, 1008, 1014, 1015, 1036, 1037, 1041, 1043, 1046, 1047, 1108, 1116, 1117, 1129], "oh_test": 142, "easysuit": 142, "oh_dbus_easysuit": 142, "easysuite_error": 142, "error_suit": 142, "dbusheatingerror": 142, "modulenotfounderror": [142, 259, 264, 994], "research": [142, 145, 146, 259, 1101], "pygobject": 142, "714": [142, 221], "kb": [142, 148, 1130], "venv": [142, 179, 205, 215, 221, 231, 232, 234, 246, 276, 337, 338, 879, 1049, 1082, 1095, 1110, 1116, 1117, 1122, 1128, 1130, 1131], "standalon": [142, 415, 668, 968, 1135], "ss_9wmug": 142, "__env_pip__": 142, "ignor": [142, 163, 175, 234, 280, 341, 377, 397, 427, 449, 457, 589, 592, 655, 670, 683, 705, 755, 839, 902, 927, 969, 992, 1123], "9lrqmi4l": 142, "overlai": [142, 797, 901, 902], "locat": [142, 143, 147, 152, 157, 178, 215, 221, 231, 234, 238, 288, 304, 330, 348, 400, 413, 421, 427, 455, 477, 570, 590, 666, 714, 772, 797, 901, 902, 903, 923, 941, 965, 972, 992, 1099, 1116, 1150], "pycairo": 142, "cwd": [142, 512, 748, 823, 834, 860, 879, 881, 885, 973], "821": [142, 221], "py2": 142, "344": [142, 221, 234, 266, 280, 298, 308], "517": [142, 221, 266], "tmpabab356k_in_process": 142, "build_wheel": 142, "tmpt1yod7mc": 142, "o4u45fjc": 142, "pycairo_33865a19ad6b4a719885f07926efe16d": 142, "bdist_wheel": [142, 1050], "build_pi": 142, "x86_64": [142, 149, 151, 198, 205, 327, 350, 376, 514, 575, 770, 775, 974, 983], "cairo": 142, "pyi": 142, "build_ext": 142, "pkg": 142, "perhap": [142, 238, 766, 1103], "pkg_config_path": 142, "gobject": 142, "introspect": [142, 955], "cp39": 142, "linux_x86_64": 142, "lib64": [142, 174, 179, 205, 215, 221, 231, 234, 238, 433, 443, 445, 450, 971, 974, 988, 995, 1116, 1117, 1123, 1137], "_vendor": 142, "pep517": 142, "in_process": 142, "_in_process": 142, "tmpf2wjv23h": 142, "4rtfumdz": 142, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 142, "pygtkcompat": 142, "generictreemodel": 142, "_signalhelp": 142, "_propertyhelp": 142, "_ossighelp": 142, "_option": 142, "_gtktemplat": 142, "_error": [142, 486], "_constant": 142, "keysym": 142, "pango": 142, "gio": 142, "gdkpixbuf": 142, "gdk": 142, "glib": 142, "gimarshallingtest": 142, "tmp56g_ixbz": 142, "bvay4iv4": 142, "pygobject_6777f13e15934fb2b13139399b143557": 142, "todo": [142, 187, 222, 250, 251, 343, 344, 513, 655, 751], "summari": [142, 183, 462, 565, 714, 1128], "c1": [142, 156, 460, 574, 659], "misc": [142, 143, 165, 166, 533, 766, 810, 1147], "w3school": 142, "howto": [142, 143, 768], "howto_css_image_transpar": 142, "asp": 142, "titelseit": 142, "mitt": 142, "howto_js_read_mor": 142, "subdir": [142, 748, 992], "gegen": [142, 1143], "clutter": [142, 175], "404": [142, 152, 221, 228, 266, 280, 298], "prio": [142, 184, 957, 958, 964], "beagleboard": [142, 147, 158], "repair": [142, 158, 218], "nand": [142, 158], "40w": [142, 158], "suck": [142, 143, 158], "disk": [142, 145, 146, 149, 153, 158, 426, 833, 834, 854, 883, 918, 919, 988, 1045, 1143], "contact": [142, 1150], "ssl": [142, 153, 1123], "certif": [142, 153, 156, 203, 1123], "070": [142, 655], "fortgeschritten": [142, 349, 1145], "700": [142, 221, 608, 716, 910], "lf": [142, 205, 493, 1045], "descr": [142, 226, 302], "050": [142, 655, 967, 968], "080": [142, 635, 655], "020": [142, 221, 262, 635, 655, 963, 964, 967, 968], "060": [142, 143, 182, 338, 655], "_hidden": 142, "010": [142, 308, 655, 856, 960, 961, 963, 964, 967, 968], "190": [142, 179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302], "propos": [142, 423, 501], "030": [142, 655, 665, 715, 963, 964, 967, 968], "040": [142, 308, 655, 963, 964, 967, 968], "central": [143, 175, 208, 297, 300, 351, 395, 455, 748, 988, 1033, 1045, 1151], "rstjinja": 143, "105": [143, 165, 179, 189, 194, 196, 202, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 959], "110": [143, 150, 165, 179, 189, 196, 202, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 495, 496, 655, 856, 963, 964], "cxx_class_templ": [143, 555, 750], "cxx_dynamic_memori": [143, 555, 750], "cxx_global_initi": [143, 555, 750], "cxx_inheritance_virtu": [143, 555, 750], "cxx_ownership_raii": [143, 555, 750], "cxx_stl_container_intro": [143, 555, 750], "cxx_templates_vs_interfac": [143, 555, 750], "maj": [143, 754], "min": [143, 259, 754, 1100], "cdev": [143, 753, 754, 756, 760, 761, 766], "fop": [143, 754, 761], "devtmpf": [143, 753, 754, 799], "dynam": [143, 173, 181, 182, 215, 221, 231, 232, 234, 277, 348, 412, 416, 425, 429, 434, 435, 445, 476, 513, 544, 553, 555, 562, 627, 629, 632, 633, 652, 657, 666, 695, 719, 734, 735, 736, 747, 749, 750, 754, 759, 764, 767, 769, 774, 778, 788, 792, 794, 799, 801, 806, 812, 815, 818, 823, 834, 893, 942, 944, 953, 971, 972, 1011, 1025, 1046, 1095, 1149, 1153], "sysprog_ev": 143, "sysprog_ipc": 143, "sysprog_sign": 143, "unittest_gtest_bas": [143, 750, 1133], "unittest_gtest_fixtur": [143, 750, 1133], "brows": [143, 145, 161, 836, 902], "blender": 143, "corda": 143, "figclass": 143, "homebrain": [143, 264, 276, 879, 880], "literalinclud": 143, "within": [143, 148, 224, 234, 280, 348, 504, 505, 509, 514, 559, 630, 693, 761, 894, 1006, 1023, 1035, 1119], "045": [143, 262, 308], "tex": 143, "055": 143, "056": 143, "910": [143, 221, 879], "glt": 143, "virtmem": 143, "fart": 143, "ungern": 143, "lost": [143, 153, 218, 224, 424, 533, 655, 714, 910, 944, 947, 964, 1006, 1128, 1129, 1135], "he": [143, 147, 161, 169, 178, 182, 185, 198, 203, 206, 208, 229, 232, 255, 274, 275, 279, 296, 301, 668, 670, 705, 708, 912, 945, 958, 969, 1011, 1039, 1095, 1121], "subscrib": [143, 222, 234], "friend": [145, 146, 193, 214, 250, 251, 253, 262, 273, 310, 311, 433, 496, 573, 728, 729, 749, 750, 768, 789, 894, 1137], "alia": [145, 150, 198, 224, 409, 412, 416, 425, 429, 434, 435, 443, 657, 695, 747, 749, 750, 857, 858, 985], "rm": [145, 147, 151, 152, 186, 188, 330, 335, 904, 914, 1130], "rf": [145, 147, 857, 867, 1130], "creativ": [145, 223], "variat": [145, 717, 802, 839], "thereof": [145, 262, 270, 460, 577, 1011], "happili": [145, 146, 224, 423, 572], "stage3": 145, "decad": [145, 153, 170, 797, 901, 903, 914, 993, 1151], "busybox": [145, 146], "initramf": [145, 822], "resid": [145, 148], "flash": [145, 148, 153, 433, 835, 894, 955], "correct": [145, 153, 157, 185, 205, 207, 218, 330, 376, 413, 417, 418, 425, 428, 429, 434, 435, 437, 465, 533, 565, 630, 632, 633, 665, 710, 713, 721, 750, 840, 844, 845, 869, 901, 902, 903, 956, 998, 1006, 1100, 1123], "eras": [145, 492, 550, 611, 716, 744, 854], "hit": [145, 147, 148, 167, 170, 208, 748, 857, 886, 889, 1123], "sole": 145, "liter": [145, 168, 184, 189, 196, 206, 214, 215, 219, 226, 231, 234, 238, 241, 250, 251, 259, 266, 280, 298, 302, 308, 310, 322, 326, 330, 357, 365, 372, 421, 476, 491, 511, 655, 668, 797, 969, 1026, 1039, 1043], "told": [145, 148, 443, 482, 894], "reboot": [145, 147, 164, 797, 858, 901, 902, 903], "fatal": [145, 173, 441, 451, 797, 1136], "saw": [145, 148, 178, 207, 341, 378, 559, 927, 929], "115200": 145, "8n1": 145, "remaind": [145, 146, 149, 151, 174, 178, 262, 775, 797, 894, 902, 973], "recov": [145, 165], "fauxpa": 145, "explan": [145, 148, 174, 178, 185, 208, 239, 299, 330, 431, 452, 533, 797, 828, 894, 902, 929, 959, 964, 1098, 1101, 1130], "annot": [145, 206, 255, 295, 432, 556, 1095], "beagl": 145, "omap": 145, "rom": 145, "stage": [145, 161, 207, 1102], "processor": [145, 146, 205, 206, 219, 371, 415, 608, 719, 797, 802, 939, 956, 971], "sram": 145, "dram": 145, "latter": [145, 148, 955, 995, 1035, 1102], "abil": [145, 655], "press": [145, 777, 814, 857, 894], "wrote": [145, 148, 338, 1148], "board": [145, 147, 797, 901], "ones": [145, 161, 168, 170, 234, 272, 280, 359, 427, 902, 903, 1028, 1112], "revis": [145, 149, 152, 249, 556, 654, 1148], "slightli": [145, 157, 178, 207, 224, 225, 533, 1023], "season": 145, "c4": [145, 156], "valuabl": [145, 431, 824, 825, 987, 989, 995], "c3": [145, 149, 156], "angstrom": 145, "mlo": 145, "ift": 145, "fdisk": [145, 1143], "obvoiusli": 145, "fat32": [145, 797], "fat16": 145, "partit": [145, 146, 147, 234, 280, 797], "mount": [145, 147, 262, 336, 753, 797, 828, 937, 964, 965, 974, 983, 985], "sector": [145, 218, 1052], "intend": [145, 151, 152, 153, 163, 198, 215, 221, 231, 234, 442, 770, 902, 929, 930, 1050], "slot": [145, 933, 1014], "partli": [145, 147, 419], "meaning": [145, 153, 779], "scr": 145, "omap3": 145, "mmc1": 145, "arch": [145, 149, 777, 797, 798, 901], "mach": [145, 207, 212, 228], "omap2": 145, "omap3beagl": 145, "Near": 145, "notic": [145, 146, 148, 161, 215, 221, 231, 234, 423, 442, 443, 500, 746, 837, 941, 943, 1003, 1117], "offset": [145, 748, 768, 926, 988], "128k": 145, "0x80000": 145, "byte": [145, 148, 161, 163, 165, 215, 221, 231, 234, 241, 244, 259, 280, 286, 302, 308, 315, 330, 353, 361, 371, 372, 403, 406, 415, 418, 424, 428, 462, 557, 562, 565, 570, 577, 590, 714, 748, 811, 828, 834, 857, 888, 895, 901, 918, 919, 920, 923, 925, 927, 928, 929, 930, 953, 956, 961, 964, 968, 1020, 1026, 1031, 1045, 1108], "reli": [145, 178, 704, 807, 1026], "ecc": [145, 149], "nandecc": 145, "hw": 145, "80000": 145, "0x0": [145, 901], "0x60000": 145, "unlik": [145, 198, 249, 719, 726, 894, 1034, 1113, 1153], "intermedi": [145, 166, 460, 971, 1020], "nevertheless": [145, 146, 153, 265, 268, 797], "0x20000": 145, "fatload": 145, "80200000": 145, "20392": 145, "131072": [145, 755], "40000": 145, "0x40000": 145, "60000": 145, "incarn": [145, 153, 397, 703], "choic": [145, 146, 147, 170, 206, 219, 238, 427, 437, 447, 512, 560, 629, 714, 901, 955, 983, 1111], "finger": [145, 156, 427, 836, 894], "sw": [145, 510], "0x1e0000": 145, "1e0000": 145, "0x240000": 145, "275928": 145, "1966080": 145, "prompt": [145, 153, 156, 166, 198, 209, 237, 246, 829, 857, 859, 910, 1020, 1021, 1057, 1061, 1074, 1080, 1130], "280000": 145, "400000": [145, 902, 1100], "month": [146, 208, 218, 266, 270, 372], "met": [146, 419, 903], "microcontrol": [146, 388, 894, 902, 955], "clue": 146, "minim": [146, 148, 157, 166, 421, 427, 580, 879, 983, 994], "vxwork": 146, "ce": [146, 156, 985], "quit": [146, 148, 151, 273, 398, 413, 415, 633, 648, 798, 857, 858, 889, 894, 902, 945, 968, 983], "blob": [146, 262, 273, 350, 533, 797], "presenc": [146, 148, 449, 1153], "probabl": [146, 152, 178, 238, 268, 322, 448, 453, 558, 663, 797, 809, 857, 903, 955, 1031, 1045, 1108, 1111], "sooner": [146, 161, 423, 800], "chose": [146, 157, 224, 649, 881, 914, 983], "opinion": [146, 157, 178, 232, 748, 836, 1003], "stori": [146, 147, 148, 152, 153, 157, 174, 175, 207, 270, 408, 541, 559, 573, 772, 775, 798, 836, 897, 914], "unless": [146, 228, 234, 238, 280, 627, 660, 823, 879, 940, 1026, 1045, 1116], "hire": 146, "cheap": [146, 148, 440, 570, 663, 668, 704, 705, 802, 1148], "misl": 146, "posix": [146, 148, 171, 721, 728, 730, 749, 750, 834, 893, 923, 934, 940, 944, 946, 954, 962, 1045, 1162, 1163], "tell": [146, 147, 148, 151, 152, 153, 161, 175, 222, 420, 591, 823, 903, 971], "pitfal": [146, 230, 250, 251, 253, 310, 311, 330, 591, 670, 695, 696, 697, 715, 749, 750, 894, 1148], "seen": [146, 148, 153, 166, 179, 207, 363, 382, 420, 455, 465, 768, 793, 822, 942, 1102, 1106, 1140], "didn": [146, 147, 148, 157, 178, 182, 198, 208, 232, 301, 797, 876, 928, 1045, 1047, 1095, 1099], "rtoss": 146, "commonli": [146, 215, 238, 265, 268, 469, 730, 748, 783, 817, 859, 923, 971, 1120], "tear": [146, 251, 462, 511, 512, 513, 514, 575, 714, 766, 971, 1135], "notif": [146, 151, 170, 727, 898, 969], "dread": 146, "segment": [146, 148, 395, 504, 570, 693, 713, 955, 965], "fault": [146, 148, 343, 344, 395, 570, 713, 955], "arriv": [146, 789, 814, 953, 968], "handler": [146, 215, 221, 231, 234, 273, 280, 293, 431, 777, 779, 807, 939, 955, 967, 970], "pai": [146, 270, 426, 449, 828], "attent": [146, 202, 218, 226, 361, 382, 384, 413, 432, 442, 592, 597, 666, 697, 700, 789, 957, 992, 1118, 1140], "safe": [146, 215, 221, 222, 231, 234, 244, 423, 663, 705, 707, 715, 729, 910, 915, 939, 942, 947, 970], "pthread_": 146, "trick": [146, 203, 213, 216, 219, 243, 255, 279, 285, 398, 1095], "asynchron": [146, 215, 221, 231, 234, 301, 316, 918, 935, 938, 968, 969], "sigwait": [146, 968], "sigwaitinfo": 146, "sigtimedwait": 146, "caught": [146, 215, 221, 231, 234, 430, 580], "synchron": [146, 218, 224, 234, 241, 244, 259, 266, 274, 275, 276, 280, 296, 297, 300, 302, 308, 722, 728, 749, 750, 888, 893, 918, 934, 940, 941, 948, 954, 955, 965, 967, 970, 1153], "signalfd": [146, 923, 961, 1162, 1163], "Its": [146, 148, 151, 511, 886, 956], "emb": 146, "among": [146, 170, 178, 215, 221, 231, 234, 420, 714, 842, 901, 923, 929, 953, 969, 1019, 1103, 1104, 1128, 1151], "epol": [146, 937, 961, 965, 1163, 1165], "err": [146, 185, 205, 270, 311, 514, 611, 655, 657, 695, 703, 715, 747, 749, 750, 761, 791, 793, 828, 895, 897, 901, 1014, 1117], "naiv": [146, 166, 221, 224, 288, 304, 415, 448, 457, 549, 551, 565, 632, 713, 746, 805, 939, 959, 970, 1000, 1001, 1102, 1107, 1140, 1150], "intra": 146, "oss": 146, "synchronis": [146, 939, 1164], "pthread_mutex_init": [146, 727, 942], "critical_sect": 146, "closest": [146, 663], "pendant": [146, 550, 756], "expir": [146, 807, 921, 953, 955, 969], "sometim": [146, 161, 238, 387, 403, 427, 564, 654, 828, 835, 928, 940, 985, 991, 1022, 1128], "setitim": 146, "timer_cr": [146, 955], "drawback": [146, 397, 414, 419, 424, 468, 591, 910], "unfortun": [146, 147, 170, 207, 482, 894, 1113], "straightforward": [146, 225, 677, 715, 765, 997, 1014, 1032, 1100], "nanosleep": [146, 729, 955], "timerfd_cr": [146, 921, 923, 1162, 1163], "conjunct": 146, "emul": [146, 251, 253, 271, 415, 424, 430], "stupid": [146, 148, 205, 221, 224, 226, 372, 397, 403, 421, 427, 437, 663, 718, 814, 876, 918, 999, 1045], "screw": [146, 617], "otherwis": [146, 147, 232, 234, 238, 275, 280, 308, 321, 376, 387, 413, 423, 573, 611, 668, 697, 704, 719, 725, 768, 781, 789, 797, 805, 824, 825, 910, 939, 944, 950, 965, 994, 1023, 1026, 1043, 1045, 1064, 1075, 1140], "millisecond": [146, 215, 221, 231, 234, 716, 730, 805, 902], "etern": 146, "nowadai": [146, 148, 150, 151, 207, 274, 275, 296, 353, 371, 772, 807, 832, 835, 923, 969, 1108], "imagin": [146, 148, 417, 422, 423, 455, 468, 797, 836, 853, 894, 903, 942, 969], "moder": [146, 153, 213], "tri": [146, 147, 148, 157, 161, 167, 178, 226, 341, 512, 642, 725, 748, 894, 903, 956, 1148], "achiev": [146, 205, 238, 633, 953, 1006], "albeit": [146, 477, 703, 950, 1031, 1148], "lose": [146, 197, 208, 228, 231, 234, 244, 308, 1030], "wealth": 146, "socket": [146, 164, 185, 255, 748, 750, 830, 833, 893, 918, 922, 923, 934, 965, 969, 1123, 1162, 1163, 1165], "uart": [146, 419, 830], "previous": [146, 215, 221, 231, 234, 238, 969, 1148], "regardless": [146, 398, 902], "surpris": [146, 148, 262, 421, 626, 990, 1014], "alon": [146, 147, 148, 161, 271, 273, 427, 431, 672, 1035, 1102, 1153], "advantag": [146, 419, 570], "consid": [146, 148, 178, 182, 206, 215, 221, 231, 232, 234, 238, 262, 280, 301, 391, 418, 419, 427, 479, 633, 857, 901, 956, 1011, 1019, 1095, 1122, 1123, 1150], "regularli": [146, 424], "buffer": [146, 234, 259, 274, 275, 280, 296, 300, 359, 488, 493, 668, 813, 841, 915, 918, 919, 920, 921, 929, 968, 1045], "ttys0": 146, "stream": [146, 151, 153, 193, 219, 234, 259, 556, 573, 841, 895, 953, 999, 1120, 1165], "eventfd": [146, 923, 961, 1162, 1163], "complic": [146, 147, 156, 185, 228, 238, 369, 388, 427, 452, 583, 666, 672, 692, 756, 793, 895, 903, 968, 971, 999, 1111, 1150, 1153], "infrastructur": [116, 121, 146, 432, 753, 965], "unregist": [146, 464], "callback": [146, 182, 215, 221, 231, 234, 339, 683, 807, 816, 1111], "comfort": [146, 198, 333, 707, 901, 1120], "excit": 146, "hundr": [146, 148, 153, 256, 259, 923], "panel": 146, "deal": [146, 222, 421, 567, 797, 903, 1024, 1097, 1108, 1148, 1153], "touch": [146, 152, 178, 215, 221, 231, 234, 439, 842, 851, 856, 901, 924, 930, 1153], "stai": [146, 170, 182, 213, 968], "harder": [146, 719, 904], "buggi": [146, 565, 693, 705, 955], "examin": [146, 148, 423, 573, 714, 740, 857, 950], "debugg": [146, 215, 221, 231, 232, 234, 460, 1146, 1161], "gdb": [146, 198, 348, 1146], "remain": [146, 147, 157, 166, 179, 226, 234, 280, 518, 519, 531, 560, 608, 614, 645, 651, 656, 718, 726, 779, 910, 958, 969, 971, 1070, 1073, 1074, 1077, 1085, 1087, 1103, 1137], "spidev": 146, "bluntli": 146, "whether": [146, 166, 234, 238, 259, 270, 280, 362, 426, 517, 562, 595, 748, 793, 902, 1074, 1080, 1123], "deadlin": 146, "howev": [146, 156, 175, 238, 456, 770, 772, 894, 937, 939], "sched_setschedul": [146, 163, 958], "pthread_attr_setschedparam": [146, 958], "runnabl": [146, 795, 956, 957, 958], "prioriti": [146, 163, 234, 789, 795, 797, 799, 834, 956, 957, 965, 1164], "anymor": [146, 152, 157, 170, 207, 224, 439, 443, 572, 666, 668, 677, 701, 714, 715, 719, 832, 901, 944, 955, 957, 988, 1026, 1028, 1117], "potenti": [146, 440, 570, 677, 725, 914, 994, 1006, 1051], "harm": [146, 391, 419, 715, 717, 994], "polici": [146, 151, 163, 439, 455, 629, 633, 775, 956, 957, 1164], "sched_fifo": [146, 957, 958, 1143], "sched_rr": [146, 148, 958, 1143], "robin": [146, 213, 958, 1164], "manner": [146, 397, 797, 901], "troubl": 146, "trigger": [146, 341, 779, 783, 901, 1014, 1104], "certain": [146, 178, 185, 418, 423, 481, 504, 505, 683, 705, 793, 828, 841, 944, 971, 1019], "circumst": [146, 956], "deadlock": [146, 533, 725, 726, 789, 802, 942, 956, 957], "inspect": [146, 148, 215, 221, 231, 234, 252, 261, 272, 282, 297, 750, 827, 893, 914], "deploy": [146, 178, 182, 203, 289, 305, 444, 450, 750, 772, 1095], "uclibc": 146, "investig": 146, "spend": [146, 153, 167, 178, 182, 203, 206, 229, 255, 279, 301, 426, 1095], "browser": [147, 153, 165, 176, 209], "significantli": [147, 968], "decreas": [147, 148, 415, 857, 959], "week": [147, 162, 417], "forth": [147, 428, 828, 901, 914, 1026], "spare": 147, "volum": 147, "undertak": 147, "indirectli": [147, 714], "pocket": 147, "purchas": [147, 238], "corsair": 147, "120": [147, 165, 179, 189, 196, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 574, 655, 963, 964], "overhaul": 147, "reserv": [147, 153, 170, 182, 218, 234, 259, 280, 370, 592, 761, 793, 853, 958, 1052], "livecd": 147, "ssd": [147, 426, 919], "vanish": 147, "gone": [147, 168, 218, 683, 715, 777, 800, 858, 947], "nowher": [147, 286, 525], "depart": 147, "unusu": 147, "cope": 147, "bet": 147, "themselv": [147, 397, 437, 477], "aggress": 147, "harddisk": 147, "treatment": [147, 238, 857, 988], "proud": 147, "120g": 147, "fresher": 147, "plenti": [147, 149, 431], "4g": [147, 148], "shouldn": [147, 655, 797, 1043], "hibern": 147, "fstab": 147, "room": [147, 153, 182, 297, 457, 608, 791, 903, 1108, 1151], "swapon": 147, "sda1": 147, "swapoff": 147, "overal": 147, "mitig": [147, 791], "temporari": [147, 156, 173, 215, 221, 224, 231, 234, 274, 275, 296, 300, 442, 514, 515, 663, 667, 668, 683, 697, 705, 748, 841, 971, 997, 1078], "perfect": [147, 153, 161, 207, 255, 310, 351, 608, 664, 695, 718, 749, 750, 997, 1050, 1095, 1126, 1148], "portag": [147, 797, 886], "openoffic": 147, "tmpdir": [147, 272, 301, 439, 514, 748, 992, 1090, 1092, 1128], "500m": 147, "2g": 147, "6g": 147, "throwawai": 147, "1tb": 147, "sdc1": [147, 828], "mnt": [147, 828, 836, 965], "emerg": 147, "umount": 147, "runnung": 147, "offend": [147, 149, 151, 161, 482, 955], "candid": [147, 166, 207, 427, 672, 692, 705, 994, 1066], "destin": [147, 378, 445, 550, 591, 666, 913, 920], "app": [147, 151, 955, 1107], "admin": [147, 153, 330, 908, 912], "cron": [147, 840, 1024], "rc": [147, 894], "grep": [147, 151, 157, 186, 188, 198, 252, 261, 282, 283, 750, 816, 821, 827, 832, 834, 839, 841, 853, 884, 887, 890, 893, 901, 903, 904, 940, 950, 955, 1111, 1152, 1154, 1159], "tune": [147, 148, 157, 427, 824, 825, 847, 849, 851, 858, 906, 1023], "exce": [147, 182, 758, 955, 965], "20m": [147, 894, 953], "compresscmd": 147, "bzip2": [147, 157, 186, 188, 822, 823, 985], "compressopt": 147, "compressext": 147, "missingok": 147, "sharedscript": 147, "postrot": 147, "reload": [147, 186], "endscript": 147, "adjac": [147, 337, 714, 768], "sda": [147, 901, 903], "cfq": 147, "noop": [147, 896], "believ": [147, 153, 894, 903, 931], "r5": 147, "menuconfig": [147, 157, 797, 901, 985], "xorg": [147, 151], "emerge_log_dir": 147, "unionf": 147, "fuse": [147, 149, 904, 914], "persist": [147, 163, 367, 371, 379, 449, 858, 902], "held": [148, 290, 293, 348, 755, 789, 802], "compani": [148, 151, 152, 153, 188, 198, 238, 264, 275, 290, 437, 455, 456, 836, 1050, 1097], "z\u00fcrich": [148, 347], "hardcor": 148, "attitud": [148, 153, 272], "began": 148, "dive": [148, 265, 268, 1109], "inevit": [148, 348, 707], "came": [148, 215, 219, 221, 231, 234, 854, 860, 901, 1026, 1078, 1148], "mb": [148, 835], "heap": [148, 410, 462, 562, 565, 617, 697, 714, 758, 783], "128": [148, 151, 165, 179, 189, 196, 202, 205, 211, 215, 218, 221, 224, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 426, 570, 901, 929, 986, 1108], "dead": [148, 157, 427], "attempt": [148, 153, 176, 234, 349, 663, 665, 735, 1123], "reject": [148, 161], "proof": [148, 170, 415, 426, 430, 460, 544], "evid": 148, "fortun": [148, 153, 427, 439, 668, 1100], "overnight": [148, 213], "night": [148, 182], "instinct": 148, "defens": [148, 369, 370], "grow": [148, 591, 834, 987], "growth": [148, 218, 1052], "handi": [148, 1159], "tricki": 148, "alloca": 148, "essenti": [148, 175, 224, 271, 273, 645], "stdio": [148, 207, 219, 352, 353, 355, 359, 361, 363, 394, 420, 440, 566, 572, 834, 854, 901, 919, 920, 921, 923, 924, 927, 928, 929, 930, 942, 955, 961, 964, 968, 969, 971, 974, 983, 987, 989, 1045], "unistd": [148, 418, 515, 547, 854, 901, 917, 919, 920, 921, 923, 926, 927, 928, 929, 930, 933, 935, 938, 952, 955, 961, 964, 968], "stdlib": [148, 410, 424, 901, 919, 920, 921, 952, 961, 968], "size_t": [148, 410, 423, 458, 538, 547, 550, 593, 598, 604, 608, 614, 635, 649, 661, 666, 677, 678, 679, 680, 681, 744, 745, 746, 748, 756, 783, 915, 923, 933, 965, 968], "stack_growth": 148, "argc": [148, 404, 462, 501, 901, 927, 928, 929, 930, 935, 938, 952, 968, 989, 1135, 1140], "mem": [148, 164, 547, 761], "fprintf": [148, 385, 398, 915, 955, 989], "stderr": [148, 197, 206, 215, 221, 231, 234, 244, 252, 261, 262, 282, 283, 323, 330, 385, 398, 442, 750, 827, 838, 839, 893, 915, 923, 955, 989, 1024, 1037, 1045, 1154], "atoi": [148, 931], "printf": [148, 157, 207, 219, 352, 353, 355, 361, 363, 367, 393, 394, 397, 398, 420, 440, 566, 572, 834, 854, 917, 921, 961, 968, 969, 971, 983, 987, 989, 1034, 1040], "getpid": [148, 968], "memset": [148, 920, 955, 964, 968], "24299": 148, "vsz": 148, "rss": 148, "3944": [148, 221], "986": [148, 218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "188": [148, 179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 256, 259, 266, 276, 280, 286, 298, 302], "320": [148, 221, 231, 234, 259, 266, 280, 286, 298], "exact": [148, 198, 238, 327, 391, 702, 719, 770, 772, 1123], "glibc": [148, 777, 983, 985, 986, 1143], "presum": 148, "assum": [148, 234, 238, 280, 421, 568, 729, 775, 857, 901, 903, 914, 986, 1055, 1130], "writabl": [148, 421, 842, 857, 929], "eater": [148, 959], "1k": 148, "furthermor": 148, "188k": 148, "anyth": [148, 152, 153, 178, 205, 221, 225, 248, 270, 271, 337, 437, 448, 452, 469, 504, 579, 648, 668, 744, 745, 746, 894, 906, 914, 918, 924, 953, 987, 992, 993, 994, 1037, 1045, 1100, 1117, 1121], "proce": [148, 156, 235, 268, 336, 514], "million": [148, 184, 455, 633, 797, 997], "24908": 148, "4800": [148, 221], "1200": [148, 221, 608, 1117], "1044": [148, 221], "1376": [148, 221], "grown": [148, 151], "reflect": [148, 797, 956, 986, 987, 1014], "greedi": 148, "24960": 148, "8mb": 148, "barrier": [148, 413, 714, 729, 781], "ulimit": [148, 834], "8192": [148, 221, 398, 834], "8000000": 148, "25018": 148, "11632": [148, 221], "2908": [148, 221], "7876": [148, 221], "8236": [148, 221], "demand": [148, 151, 168, 268, 421, 797, 848, 850, 999, 1034], "magic": [148, 150, 404, 439, 683, 756, 797, 999, 1128], "bother": [148, 914, 918], "pthread_attr_setstacks": 148, "2mb": 148, "rlimit_stack": 148, "pthread_creat": [148, 940, 955], "nthread": 148, "act": [148, 205, 522, 592, 903, 914, 917, 969, 1005], "shut": [148, 765, 797], "sit": [148, 224, 336, 467, 841, 901, 902, 912, 914, 918, 968, 1111], "stack_limit": 148, "thread_func": 148, "arg": [148, 165, 179, 205, 206, 215, 219, 221, 231, 232, 234, 238, 244, 259, 280, 298, 440, 756, 940, 992, 996, 1017, 1024, 1047, 1137, 1143], "pthread_attr_t": [148, 940, 958], "attr": [148, 163, 940, 942, 944, 958, 964, 965], "pthread_attr_init": 148, "ld": [148, 446, 450, 541, 559, 632, 775, 797, 824, 825, 842, 855, 879, 961, 971, 972, 983, 988], "strerror": [148, 221, 915, 924, 955, 968], "p_attr": 148, "pthread_t": [148, 940, 955, 958], "rv": [148, 194, 256], "31524": 148, "825840": 148, "206460": 148, "819936": 148, "1404": [148, 221], "800mb": 148, "writeabl": [148, 853, 876], "worth": [148, 797, 903, 1023, 1094, 1148, 1163], "physic": [148, 151, 186, 193, 274, 275, 296, 300, 428, 633, 781, 833, 902, 921, 925, 955, 956], "eaten": 148, "field": [148, 151, 153, 165, 170, 176, 212, 219, 226, 234, 244, 247, 264, 266, 270, 280, 322, 341, 354, 736, 738, 832, 837, 856, 890, 1041, 1052, 1073, 1102, 1103], "alleg": 148, "wast": [148, 156, 157, 423, 710, 727, 1108], "moment": [148, 182, 423, 455, 457, 651, 700], "771": [148, 221, 308], "766604": 148, "aha": [148, 168, 179, 315, 760, 777, 902, 1108, 1135], "hasn": [148, 151, 152, 161, 791, 814, 1025], "effect": [148, 152, 173, 331, 332, 367, 417, 427, 479, 626, 752, 781, 853, 858, 901, 913, 914, 956, 970, 995, 1007, 1028, 1074, 1102, 1122, 1130], "4096": [148, 165, 221, 748, 824, 825, 894, 901, 902, 903, 914, 937, 964], "1026": [148, 221], "invalid": [148, 189, 196, 226, 231, 232, 234, 238, 241, 259, 266, 273, 280, 298, 302, 308, 326, 341, 424, 482, 493, 496, 550, 565, 648, 649, 650, 663, 666, 672, 713, 715, 729, 755, 944, 1047], "insist": [148, 178, 572, 1137], "pthread_stack_min": 148, "16384": [148, 153, 221, 901, 902, 903], "1125": 148, "7840": [148, 221], "1960": [148, 221], "1936": [148, 221], "risk": [148, 455, 894, 912, 957, 1022], "512": [148, 221, 266, 298, 428, 834], "513": [148, 221, 266, 714], "2212": [148, 221], "4210920": 148, "1052730": 148, "4205016": 148, "4576": [148, 221], "misunderstand": [148, 723], "obvious": [148, 149, 151, 157, 169, 353, 417, 421, 448, 477, 541, 567, 573, 611, 626, 627, 655, 666, 700, 704, 709, 748, 795, 797, 810, 833, 834, 840, 854, 902, 903, 913, 929, 930, 957, 969, 971, 987, 1008, 1011, 1150], "overcommit": 148, "kept": [148, 153, 178, 184, 398, 413, 834, 895, 971, 999], "plai": [148, 156, 198, 415, 433, 797, 894, 1012, 1015, 1102], "stutter": 148, "4353": 148, "red": [148, 149, 194, 196, 202, 210, 222, 225, 238, 270, 323, 611, 894, 1021, 1111], "chili": 148, "pepper": 148, "overli": [148, 840, 998], "adob": 148, "riddanc": 148, "8462": [148, 221], "3284640": 148, "821160": 148, "3278736": 148, "3064580": 148, "lie": [148, 705], "constraint": [148, 156, 672, 675, 677, 903], "800": [148, 189, 221, 608, 1055], "4000000": 148, "11338": [148, 221], "900": [148, 221, 608], "12156": [148, 221], "shrink": [148, 591], "inadvert": 148, "3mb": 148, "nois": 148, "henc": [148, 153, 514, 568, 612, 919, 923, 971], "14386": [148, 221], "child_stack": 148, "0x7f5813f22ff0": 148, "clone_vm": 148, "clone_f": 148, "clone_fil": 148, "clone_sigha": 148, "14413": 148, "mmap": [148, 963, 965, 1162], "8392704": 148, "prot_read": [148, 964], "prot_writ": [148, 964], "map_priv": [148, 964], "map_anonym": 148, "map_stack": 148, "0x7fd14f9af000": 148, "mprotect": 148, "0x7fd14f1ae000": 148, "prot_non": 148, "placehold": [148, 483, 515, 670, 719, 903], "proc": [148, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 760, 777, 779, 781, 797, 798, 923, 940, 964, 968, 1161], "7fd14f1af000": 148, "7fd14f9af000": 148, "00000000": 148, "7fd14f9b0000": 148, "topmost": [148, 1128], "pseudo": [148, 166], "redund": [148, 398, 427], "smap": 148, "7fd14f1ae000": 148, "pss": 148, "shared_clean": 148, "shared_dirti": 148, "private_clean": 148, "private_dirti": 148, "referenc": [148, 166, 189, 297, 300, 454, 572, 714, 715, 716, 931, 1137], "anonym": [148, 457, 770, 964], "anonhugepag": 148, "kernelpages": 148, "mmupages": 148, "miss": [148, 167, 174, 176, 178, 194, 221, 226, 231, 238, 297, 300, 330, 387, 432, 433, 441, 443, 451, 513, 544, 565, 656, 692, 772, 775, 921, 955, 973, 996], "shallow": [148, 218, 230, 658], "extent": [148, 178, 185, 198, 327, 418, 423, 797, 971, 1019], "8k": [148, 841], "swamp": 148, "panic": [148, 161, 805, 857], "meaningless": 148, "global": [148, 149, 167, 173, 178, 182, 187, 191, 194, 207, 215, 218, 221, 224, 225, 231, 234, 237, 248, 251, 259, 271, 274, 276, 280, 285, 289, 296, 300, 301, 305, 306, 307, 314, 325, 330, 376, 393, 399, 405, 409, 412, 416, 420, 423, 425, 429, 430, 434, 435, 443, 444, 449, 462, 468, 477, 511, 512, 513, 514, 555, 562, 575, 657, 695, 698, 713, 714, 724, 747, 749, 750, 766, 903, 939, 942, 946, 947, 949, 971, 992, 995, 1003, 1005, 1038, 1052, 1095, 1123, 1131, 1135], "dig": [148, 150], "thorough": [148, 157, 1018, 1102, 1121, 1163], "counter": [148, 231, 355, 361, 362, 371, 427, 432, 433, 557, 666, 964], "delai": [148, 215, 221, 231, 234, 902], "substanti": 148, "overcom": [148, 297, 330, 417], "beforehand": 148, "mlock": [148, 1162], "mlockal": [148, 1162], "contradictori": 148, "lengthi": 148, "felt": 148, "lucki": [148, 565], "agre": [148, 178, 182, 336, 465, 956, 1101], "glad": 148, "outdat": [149, 157, 797, 1123], "halfwai": 149, "procedur": [149, 157, 363, 707, 894, 1052], "thunderbolt": 149, "hdmi": 149, "unplug": 149, "oop": [149, 1147], "feb": [149, 194, 196, 198, 327, 372, 879, 937, 983], "derefer": [149, 570], "0000000000000080": 149, "supervisor": 149, "error_cod": 149, "0x0000": 149, "pgd": 149, "p4d": 149, "0000": [149, 234, 280, 903], "smp": [149, 198, 205, 327], "pti": 149, "281": [149, 218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 280, 286, 298, 308], "comm": 149, "kworker": 149, "taint": 149, "fc31": 149, "asustek": 149, "zenbook": 149, "ux391ua": 149, "bio": 149, "204": [149, 179, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 280, 286, 298, 302, 308, 462], "workqueu": [149, 750, 774, 799, 812, 815, 893], "ucsi_connector_chang": 149, "typec_ucsi": 149, "0010": 149, "ucsi_displayport_remove_partn": 149, "0xa": 149, "0x20": [149, 787], "c7": [149, 156, 1123], "83": [149, 156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 748, 798, 1099, 1100], "5b": [149, 156], "e9": [149, 156], "6d": [149, 156, 354, 355], "f3": [149, 156], "3d": [149, 156, 167], "fb": [149, 156], "2e": [149, 156, 659], "0f": [149, 156], "1f": [149, 156], "84": [149, 156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 1099, 1100], "90": [149, 156, 165, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 439, 1099, 1100, 1128], "85": [149, 156, 165, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 972, 973, 1099, 1100, 1135], "ff": [149, 156, 348, 737, 903], "8b": 149, "78": [149, 156, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 511, 1099, 1100], "c6": 149, "rsp": [149, 218, 1052], "0018": 149, "ffff9daa002d3df8": 149, "eflag": 149, "00010202": 149, "rax": 149, "0000000000000008": 149, "rbx": 149, "ffff901f4ce35710": 149, "rcx": 149, "0000000000003c7d": 149, "rdx": 149, "0000000000003c7c": 149, "rsi": [149, 857], "0000000000000001": 149, "rdi": 149, "rbp": 149, "0000000000000000": [149, 989], "r08": 149, "ffffffffbc7dbe60": 149, "r09": 149, "ffff9daa002d3cf0": 149, "r10": 149, "ffff901f54951a18": 149, "r11": 149, "ffff901f56a68a78": 149, "r12": 149, "r13": 149, "r14": 149, "ffff901f4ce35860": 149, "r15": 149, "ffff901f4ce355d8": 149, "ffff901f56a00000": 149, "knlg": 149, "cr0": 149, "0000000080050033": 149, "cr2": 149, "cr3": 149, "000000028fbbc003": 149, "cr4": 149, "00000000003606f0": 149, "trace": [149, 168, 215, 221, 231, 234, 442, 787], "ucsi_unregister_altmod": 149, "0x77": 149, "0x90": [149, 787], "ucsi_unregister_partn": 149, "0x13": 149, "0x30": [149, 379], "0x247": 149, "0x340": 149, "process_one_work": 149, "0x1b5": 149, "0x360": 149, "worker_thread": 149, "0x50": 149, "0x3c0": 149, "kthread": 149, "0xf9": 149, "0x130": 149, "kthread_park": 149, "ret_from_fork": 149, "0x35": 149, "0x40": [149, 902], "cdc_ether": 149, "usbnet": 149, "r8152": 149, "mii": 149, "rc_cec": 149, "typec_displayport": 149, "uinput": 149, "rfcomm": 149, "ccm": 149, "xt_checksum": 149, "xt_masquerad": 149, "nf_nat_tftp": 149, "nf_conntrack_tftp": 149, "tun": [149, 154, 169, 173, 189, 196, 235, 1145, 1146, 1147], "bridg": 149, "stp": 149, "llc": 149, "nf_conntrack_netbios_n": 149, "nf_conntrack_broadcast": 149, "xt_ct": 149, "ip6t_reject": 149, "nf_reject_ipv6": 149, "ip6t_rpfilt": 149, "ipt_reject": 149, "nf_reject_ipv4": 149, "xt_conntrack": 149, "ebtable_nat": 149, "ebtable_brout": 149, "ip6table_nat": 149, "ip6table_mangl": 149, "ip6table_raw": 149, "ip6table_secur": 149, "iptable_nat": 149, "nf_nat": 149, "iptable_mangl": 149, "iptable_raw": 149, "iptable_secur": 149, "nf_conntrack": 149, "nf_defrag_ipv6": 149, "nf_defrag_ipv4": 149, "libcrc32c": 149, "ip_set": 149, "nfnetlink": 149, "ebtable_filt": 149, "ebtabl": 149, "ip6table_filt": 149, "ip6_tabl": 149, "iptable_filt": 149, "cmac": 149, "bnep": 149, "sunrpc": 149, "vfat": [149, 797, 828], "snd_hda_codec_hdmi": 149, "snd_soc_skl": 149, "snd_soc_sst_ipc": 149, "snd_soc_sst_dsp": 149, "snd_hda_ext_cor": 149, "x86_pkg_temp_therm": 149, "intel_powerclamp": 149, "snd_soc_acpi_intel_match": 149, "coretemp": 149, "snd_soc_acpi": 149, "kvm_intel": 149, "snd_soc_cor": 149, "snd_hda_codec_realtek": 149, "snd_hda_codec_gener": 149, "snd_compress": 149, "ledtrig_audio": 149, "ac97_bu": 149, "snd_pcm_dmaengin": 149, "iwlmvm": 149, "snd_hda_intel": 149, "snd_intel_dspcfg": 149, "irqbypass": 149, "snd_hda_codec": 149, "uvcvideo": 149, "mac80211": 149, "btusb": 149, "itco_wdt": 149, "btrtl": 149, "crct10dif_pclmul": 149, "videobuf2_vmalloc": 149, "itco_vendor_support": 149, "videobuf2_memop": 149, "mei_hdcp": 149, "btbcm": 149, "btintel": 149, "crc32_pclmul": 149, "intel_rapl_msr": 149, "snd_hda_cor": 149, "videobuf2_v4l2": 149, "libarc4": 149, "ghash_clmulni_intel": 149, "videobuf2_common": 149, "snd_hwdep": 149, "intel_cst": 149, "bluetooth": [149, 1152, 1165], "snd_seq": 149, "asus_nb_wmi": 149, "iwlwifi": 149, "videodev": 149, "snd_seq_devic": 149, "intel_uncor": 149, "asus_wmi": 149, "snd_pcm": 149, "intel_rapl_perf": 149, "cdc_acm": 149, "sparse_keymap": 149, "wmi_bmof": 149, "ecdh_gener": 149, "cfg80211": 149, "intel_wmi_thunderbolt": 149, "pcspkr": 149, "snd_timer": 149, "snd": 149, "i2c_i801": 149, "soundcor": 149, "joydev": 149, "idma64": 149, "intel_xhci_usb_role_switch": 149, "mei_m": 149, "ucsi_acpi": 149, "processor_thermal_devic": 149, "intel_rapl_common": 149, "mei": [149, 221], "intel_soc_dts_iosf": 149, "intel_pch_therm": 149, "typec": 149, "int3403_therm": 149, "int340x_thermal_zon": 149, "int3400_therm": 149, "acpi_thermal_rel": 149, "acpi_pad": 149, "binfmt_misc": 149, "ip_tabl": 149, "rfkill": 149, "i915": 149, "i2c_algo_bit": 149, "drm_kms_helper": 149, "hid_multitouch": 149, "drm": 149, "nvme": 149, "crc32c_intel": 149, "nvme_cor": 149, "serio_raw": 149, "wmi": 149, "i2c_hid": 149, "76d248e576fee192": 149, "deferenc": 149, "dp": 149, "ness": [149, 185, 270], "ucsi": 149, "displayport": 149, "linu": [149, 789, 797], "typec_altmod": 149, "alt": [149, 179, 857, 885, 1145, 1152, 1159], "ucsi_dp": 149, "typec_altmode_get_drvdata": 149, "271": [149, 218, 221, 226, 228, 234, 259, 266, 280, 286, 308], "bugzilla": 149, "1785972": 149, "john": [149, 427], "stebbin": 149, "roundtrip": 149, "wiki": [149, 163, 274, 275, 296, 300, 770, 797], "explod": [149, 772, 1034], "jwboyer": [149, 770], "f31": 149, "quiet": [149, 182, 1123], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 149, "josh": 149, "boyer": 149, "fedoraproject": [149, 770], "mon": 149, "rpmdevtool": [149, 770], "koji": 149, "rpmdev": 149, "setuptre": 149, "spec": [149, 234, 770, 793], "srpm": 149, "unam": [149, 770, 775, 793, 797, 798], "correspond": [149, 161, 234, 352, 395, 902, 979, 987, 1026, 1062, 1097, 1123], "kenrel": 149, "ivh": [149, 151], "crypto": 149, "ccp": 149, "sha": 149, "drop": [149, 161, 297, 458, 477, 486, 707, 714, 716, 816, 964, 969], "edit": [149, 151, 152, 161, 193, 198, 234, 262, 351, 511, 770, 797, 902, 1050, 1121, 1161], "zips": 149, "ko": [149, 766, 775, 797], "endif": [149, 395, 397, 398, 440, 442, 447, 448, 541, 550, 559, 565, 567, 568, 608, 666, 667, 713, 729, 971, 987, 989, 1137], "buildid": [149, 770, 972], "primary_target": 149, "825": [149, 221], "asoc": 149, "patch601": 149, "patch999": 149, "roedel": [149, 512, 515, 973, 986, 1082, 1130], "patienc": [149, 178, 1019], "oldpackag": 149, "uefi": [149, 156], "market": [150, 153, 218, 262, 270, 1052], "intent": [150, 152, 156, 157, 460, 715, 719, 770, 927, 929, 930], "remark": 150, "organ": [150, 175, 393, 428, 439, 467, 608, 833, 919, 986], "numer": [150, 167, 183, 185, 187, 221, 231, 234, 238, 270, 280, 442, 614, 914], "enforc": [150, 208, 415, 437, 572, 756, 903], "cname": [150, 152], "propag": [150, 369, 427, 443, 448, 451, 452, 633, 683, 904], "1100": [150, 215, 221, 238, 608], "3600": [150, 221], "185": [150, 179, 196, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "199": [150, 179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308, 797, 1052], "109": [150, 165, 179, 189, 194, 196, 202, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335], "153": [150, 165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 337], "111": [150, 165, 167, 179, 189, 196, 202, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325], "108": [150, 165, 179, 189, 196, 202, 205, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325], "strip": [150, 169, 178, 212, 214, 215, 218, 226, 230, 231, 236, 238, 244, 247, 259, 266, 276, 280, 286, 302, 308, 330, 339, 971, 972, 974, 983, 1002, 1075, 1120], "breviti": 150, "fqdn": 150, "qualifi": [150, 421, 567, 568, 705], "surf": 150, "consequenti": [150, 153, 156, 184, 828, 901, 991, 1012, 1137], "microsoft team": 151, "chrome": 151, "google chrom": 151, "confer": [151, 153, 182, 206, 229, 255, 301, 735], "virtual classroom": 151, "classroom": [151, 153], "remote train": 151, "dr": [151, 986], "chromium": [151, 186], "frequent": [151, 153, 161, 178, 238, 882, 902, 1019, 1040], "face": [151, 153, 178, 228, 238, 721], "travel": [151, 857], "corona": [151, 153, 178], "viru": [151, 153], "conferenc": 151, "dramat": 151, "march": 151, "spent": [151, 426, 730, 993, 1101], "weston": 151, "shown": [120, 151, 184, 321, 879, 965, 1108], "invest": [151, 153, 157, 238], "smooth": 151, "layer": [151, 251, 253, 271, 756, 828, 902, 914, 924, 933], "cornercas": 151, "hover": 151, "sharer": 151, "gdm": [151, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 832, 888], "daemon": [151, 198, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 433, 832, 835, 882, 883, 886, 888, 904, 912, 917, 919, 949, 1005], "uncom": [151, 482, 483, 677, 901], "waylanden": 151, "defaultsess": 151, "deb": [151, 283], "5153": 151, "thank": [151, 232, 259, 669, 705, 779, 939, 1100], "marjan": 151, "javorka": 151, "fashion": 151, "efl": [151, 816, 904, 955], "61762": 151, "1670": [151, 221], "80": [151, 156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 431, 504, 879, 955, 985, 997, 1052, 1099, 1100, 1128], "947213": 151, "61764": 151, "98775": 151, "zygot": 151, "sandbox": [151, 178, 182, 232, 246, 264, 1095, 1130, 1131], "61800": 151, "239615": 151, "gpu": 151, "sharedarraybuff": 151, "sparerendererforsiteperprocess": 151, "prefer": [151, 228, 238, 371, 427, 469, 573, 660, 668, 672, 789, 841, 1047], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 151, "token": [151, 208, 224, 357, 397, 832, 945, 1050, 1145], "4327801531638606376": 151, "61825": 151, "420846": 151, "autoplai": 151, "gestur": 151, "12993561460135093079": 151, "asar": 151, "agent": [151, 910, 1102], "mozilla": [151, 276, 879], "applewebkit": 151, "537": [151, 221, 308], "khtml": 151, "gecko": 151, "microsoftteam": 151, "preview": [151, 236, 289, 305, 444, 750], "3497": 151, "safari": 151, "webview": 151, "preload": 151, "preload_notif": 151, "fff": 151, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 151, "raster": 151, "v8_context_snapshot_data": 151, "v8_natives_data": 151, "101": [151, 165, 179, 189, 196, 202, 211, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 1030, 1099, 1100], "msteam": 151, "notificationsmanag": 151, "61973": 151, "790018": 151, "432557619363765409": 151, "mainwindow": 151, "62033": 151, "1259666": 151, "5585537623314398260": 151, "pluginhost": 151, "wish": [151, 153, 161, 182, 431, 440, 579, 646, 727, 1018, 1113, 1114, 1130], "insan": [151, 290, 828], "killal": [151, 959, 969], "63500": 151, "298385": 151, "63502": 151, "blood": 151, "pressur": [151, 215], "rise": [151, 505, 779, 937, 938, 955], "wipe": 151, "logout": 151, "pop": [151, 164, 226, 228, 241, 256, 266, 276, 286, 298, 398, 589, 592, 727, 1017, 1042], "morn": [151, 187, 197, 215, 224, 226, 232, 301, 1057], "webassembli": 151, "blow": 151, "water": [151, 270], "tab": [151, 152, 165, 234, 262, 280, 321, 372, 797, 857, 1039, 1064, 1154], "firefox": [151, 433, 940, 969, 1107], "dom": [151, 210], "gave": [151, 153, 166, 178, 899, 1100], "3987": 151, "132": [151, 165, 167, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "plagu": 151, "invent": [151, 365, 397, 457, 479, 480, 1150, 1151], "game": [151, 218, 234, 241, 244, 259, 266, 276, 280, 297, 302, 308, 853, 917, 1033], "pornwatch": 151, "teamview": 151, "webpag": 152, "properli": [152, 651, 729, 797, 983], "retrospect": 152, "jekyl": 152, "bend": [152, 509], "companion": [152, 270], "pollut": [152, 398, 421, 427, 460, 656, 973], "distinguish": [152, 566, 719, 829, 983], "handwritten": [152, 250, 251, 253, 310, 311, 565, 665, 695, 696, 697, 713, 749, 750], "remind": 152, "pile": [152, 161, 467, 969], "incomprehens": [152, 232, 629, 735, 1148], "blame": [152, 903], "technic": [152, 153, 175, 311, 452, 456, 556, 611, 655, 999, 1108, 1140], "nojekyl": 152, "eof": [152, 202, 205, 224, 225, 241, 322, 359, 360, 361, 362, 375, 639, 799, 813, 919, 920, 923, 929, 961, 968, 1021], "doctyp": 152, "constel": 152, "machineri": [152, 274, 275, 296, 300], "eventu": [152, 161, 430, 937, 986], "click": [152, 153], "cri": [152, 718], "haven": [152, 153, 178, 533, 894, 901], "subdomain": 152, "afterthough": 152, "preserv": [152, 163, 184, 241, 415, 824, 825, 859, 913, 1120], "_build": 152, "restor": [152, 161, 168, 215, 221, 231, 234, 770, 969, 992], "shini": 152, "nervous": 152, "marketinges": [152, 262], "familiar": [152, 178, 234, 332, 333, 722, 902, 1019], "big blue button": 153, "strongli": [153, 215, 221, 231, 234, 265, 268, 311, 513, 611, 657, 695, 747, 749, 750, 1148], "shame": 153, "pursu": 153, "collabor": [153, 163, 170, 175, 182, 255], "moreov": 153, "focus": 153, "teach": [153, 178, 348], "trust": [153, 156, 218, 274, 275, 296, 663, 910, 912, 1052, 1123, 1140], "benefit": [153, 265, 268, 271, 273, 421, 1090], "beat": [153, 228, 238, 735, 1094], "talent": [153, 348], "whiteboard": [153, 964], "chat": 153, "breakout": [153, 901], "stabil": [153, 462, 903, 1124], "thousand": [153, 259, 308, 828], "curiou": [153, 1095], "curious": 153, "licens": [153, 259, 449, 753, 1021, 1050], "lgpl": 153, "blindsid": 153, "govern": [153, 783, 923], "html5": 153, "exception": [153, 903], "modern": [153, 157, 159, 170, 173, 178, 185, 207, 229, 443, 717, 750, 757, 759, 764, 767, 774, 778, 788, 799, 801, 806, 812, 815, 818, 893, 971, 990, 1020, 1095, 1121, 1149, 1151], "heavili": [153, 175, 178, 262, 264, 348, 513, 708, 797, 894, 903, 1019], "webrtc": 153, "pain": [153, 797, 974, 983], "death": [153, 205, 969], "firewal": [153, 186, 912], "busi": [153, 297, 437, 447, 572, 802, 814, 826, 861, 863, 868, 869], "indefinit": [153, 645], "vm": [153, 333], "encrypt": [153, 832, 853, 904, 912, 913, 914, 1073, 1111], "bbb": [153, 165, 226, 244], "provis": 153, "gcp": 153, "expertis": [153, 514], "n1": [153, 179, 238], "accordingli": [153, 186, 501, 511, 514, 544, 901, 903, 988, 1023, 1026, 1120], "500gb": 153, "10gb": 153, "spars": [153, 228, 238, 575, 577, 793], "mandatori": [153, 903, 1020], "issuanc": 153, "udp": [153, 895, 897, 1163, 1165], "32768": 153, "clickabl": 153, "7443": 153, "755": [153, 221, 330, 842, 1022], "xenial": 153, "220": [153, 179, 194, 205, 215, 218, 221, 226, 228, 234, 238, 241, 256, 259, 266, 276, 280, 286, 298, 302, 308], "hostnam": [153, 1123], "certbot": 153, "greenlight": 153, "letsencrypt": 153, "minor": [126, 153, 157, 215, 221, 231, 234, 264, 756, 763, 828], "docker": [153, 157], "bundl": [153, 176, 1107, 1123], "rake": 153, "succesfulli": 153, "screenshot": [153, 176, 330], "tryout": [153, 903], "kid": [153, 198, 216, 316], "layman": 153, "knew": [153, 182, 670, 988], "reproduc": [153, 156, 272, 424, 903], "thought": [153, 398, 710, 797, 1108], "fred": [153, 895, 995], "dixon": 153, "leader": 153, "aka": [153, 198, 221, 224, 226, 246, 533, 717], "canva": 153, "bradlei": 153, "schreffler": 153, "upfront": 153, "far": [153, 178, 186, 207, 213, 221, 224, 264, 367, 382, 403, 404, 406, 417, 421, 426, 451, 580, 590, 655, 718, 775, 839, 903, 997, 1019, 1100, 1148], "exhaust": [153, 953, 956, 999], "heard": 153, "tast": [153, 357, 573, 629, 655, 698, 718], "era": 153, "budget": [153, 202], "advertis": [153, 708], "viabl": 153, "shout": [153, 697, 700], "loud": [153, 376, 591, 659, 697, 703, 704], "gmunden": [154, 348], "traunse": 154, "hike": [154, 155, 182], "bergsteigen": [154, 155], "climb": [154, 155, 182, 213], "klettern": [154, 155], "outdoor": [154, 155], "donnerstag": 154, "geistigen": 154, "ersch\u00f6pfung": 154, "k\u00f6rperlich": 154, "erfahren": [154, 155, 348, 1146], "dazu": [154, 163, 164, 169, 173, 190, 330, 335, 348, 1144, 1158, 1166], "ausgesucht": [154, 155], "zwar": [154, 1143, 1147, 1159], "lo": [154, 155, 196, 234, 270, 509, 777, 1007], "gmundner": [154, 182], "h\u00fctte": [154, 155, 182], "n\u00e4chsten": 154, "naturfreundesteig": 154, "zusammenfassung": [154, 160], "wunsch": 154, "vollend": 154, "erf\u00fcllt": 154, "unversichert": 154, "unmarkiert": 154, "leicht": [154, 190, 1143, 1158, 1164, 1165], "panik": 154, "geraten": 154, "h\u00e4nde": [154, 155], "braucht": [154, 155], "fingern\u00e4gel": 154, "z\u00e4hne": 154, "mitunt": [154, 155, 1155], "verkoffert": 154, "augen": [154, 241], "offenhalten": 154, "jeder": [154, 1142, 1145, 1146, 1165], "spur": 154, "folgen": [154, 190, 191, 1145, 1158], "fr\u00fcher": [154, 235], "umdrehen": 154, "sackgass": 154, "erweist": 154, "vielleicht": [154, 179, 190, 241, 1147, 1158], "weggehen": 154, "stirnlamp": 154, "mitnehmen": 154, "war": [154, 164, 169, 171, 179, 190, 194, 348, 437, 1143, 1145, 1147, 1158, 1164, 1165], "sch\u00f6nsten": 154, "jemal": 154, "zuletzt": 154, "traumhaften": 154, "gegend": 154, "immer": [154, 155, 169, 173, 179, 181, 194, 266, 1143, 1147, 1154, 1164], "griffweit": 154, "erscheint": 154, "paar": [154, 164, 179, 181, 189, 196, 228, 330, 335, 1143, 1166], "eindr\u00fcck": 154, "m\u00fcder": 154, "abklatsch": 154, "erinnerungen": 154, "hirn": 154, "eingebrannt": 154, "einstieg": [154, 190, 1158], "traunsteinstra\u00df": 154, "hundert": [154, 165, 238], "meter": 154, "s\u00fcdlich": 154, "hoisn": [154, 182], "wirt": [154, 182], "markiert": [154, 155], "wanderweg": [154, 155], "wegweisern": [154, 155], "bergauf": [154, 155], "kupp": 154, "klamm": 154, "einsteigt": 154, "bergab": 154, "touristisch": 154, "erschlossen": 154, "trifft": 154, "familien": 154, "kindern": [154, 1159], "rechter": 154, "felsstock": 154, "adlerhorst": 154, "sieht": [154, 165, 169, 179], "rau": [154, 228], "touristenzon": 154, "rauf": 154, "schart": 154, "durchschnaufen": 154, "einstellen": 154, "gen\u00fcsslich": 154, "h\u00f6henmet": 154, "verspeisen": 154, "steinmanderl": 154, "verfehlen": 154, "erkennbar": [154, 165, 1161], "kamm": 154, "r\u00fcber": 154, "traunsteinfelsen": 154, "erstreckt": [154, 155], "sch\u00f6nste": 154, "teil": [154, 164, 173, 181, 1143, 1145], "meditativ": 154, "wundersch\u00f6n": [154, 155], "steil": 154, "voll": 154, "zecken": 154, "schon": [154, 155, 164, 179, 181, 189, 219, 348, 1145, 1147, 1152, 1159, 1161, 1164], "bl\u00fcht": 154, "rinnen": 154, "leichtest": [154, 165], "dahin": [154, 1143], "wieder": [154, 179, 181, 189, 194, 196, 210, 1145, 1159], "vertun": 154, "manderl": 154, "aufstellen": 154, "nachwelt": 154, "nemesi": 154, "bergverr\u00fcckten": 154, "gleich": [154, 165, 179, 189, 190, 194, 196, 228, 276, 308, 325, 1143, 1158, 1165], "schl\u00fcsselstel": 154, "quert": 154, "latschen": 154, "\u00f6fter": [154, 155], "festhalten": 154, "gel\u00e4nd": 154, "einsam": 154, "bohrhaken": 154, "verrotteten": 154, "schuhband": 154, "festh\u00e4lt": 154, "runterfallen": 154, "glaub": [154, 163, 164], "stell": [154, 179, 210], "umgehen": [154, 1152], "querung": 154, "hierher": 154, "st\u00fcck": 154, "reinzum\u00fcnden": 154, "scheint": [154, 163], "gibt": [154, 155, 160, 163, 165, 166, 169, 179, 190, 191, 202, 228, 325, 1142, 1143, 1144, 1145, 1147, 1152, 1158, 1164], "foto": [154, 859], "mittendrin": 154, "besch\u00e4ftigt": 154, "hose": 154, "kacken": 154, "gesagt": [154, 169, 179, 189, 348, 1143], "manderln": 154, "aufnahmen": 154, "zunehmenden": 154, "sonnenuntergang": 154, "unvergesslich": 154, "nacht": [154, 155], "geworden": 154, "halten": [154, 155], "zumindest": [154, 179, 1145], "hinauf": 154, "stund": [154, 884, 1166], "gekostet": 154, "exklus": [154, 179, 189], "schneck": 154, "j\u00e4gerbrot": 154, "schein": 154, "ausstieg": 154, "hernlersteig": 154, "m\u00fcndet": 154, "gmundnerh\u00fctt": 154, "gem\u00fctlich": [154, 155], "nett": [154, 155, 169, 280, 348, 1152, 1159], "wirtsleut": 154, "h\u00fcttenruh": 154, "ansitzen": 154, "schweinsbraten": 154, "reinkommt": 154, "k\u00fcche": 154, "geputzt": 154, "backerbsen": 154, "morgen": [154, 234, 238], "hochnebel": 154, "blick": [154, 155, 1144], "flugzeug": 154, "gipfel": [154, 155], "dolin": 154, "nebel": 154, "dabei": [154, 165, 169, 205, 348, 1142], "verziehen": 154, "r\u00fcckweg": 154, "hoisnwirt": 154, "miesweg": 154, "karibik": 154, "steiner alpen": 155, "kamni\u0161ke alp": 155, "kamni\u0161ko savinjskih alp": 155, "alten": [155, 1147], "tradit": [155, 218, 221, 423, 438, 574, 576, 577, 579, 599, 839, 903, 1042, 1073, 1162], "bleiburg": [155, 213], "k\u00e4rnten": [155, 348], "umliegenden": 155, "bergen": 155, "interessantesten": 155, "2558m": [155, 213], "steiner": 155, "alpen": 155, "davor": [155, 197], "gekannt": 155, "nun": [155, 173, 179, 202, 209, 234, 616], "gesehen": [155, 179, 185, 219], "steht": [155, 179, 189, 190, 1155, 1158], "fest": 155, "n\u00e4chste": [155, 173], "jahr": [155, 179], "\u00fcberschreitung": 155, "soweit": [155, 1152, 1159], "h\u00f6chst": 155, "interessant": [155, 1144], "steinhaufen": 155, "unge\u00fcbt": 155, "verloren": [155, 194, 197], "h\u00f6henangst": 155, "schauen": [155, 190, 1158], "helm": 155, "schaden": 155, "schottersurf": 155, "kommen": [155, 160, 228, 330, 335, 348, 885], "ihr": [155, 160, 164, 169, 179, 819, 1142, 1144, 1146, 1147, 1152, 1159, 1165], "artikel": [155, 163], "rein": [155, 165, 190, 1158, 1159], "ins": [155, 164, 348, 724, 1143, 1159], "eisenkappel": 155, "seebergsattel": 155, "openstreetmap": 155, "klein": [155, 164, 165, 169, 1143, 1145, 1146], "dorf": 155, "uhren": 155, "stehengeblieben": 155, "scheinen": 155, "parkplatz": 155, "geparkt": 155, "wissend": 155, "hinten": 155, "tal": 155, "beginnt": [155, 189, 1166], "ahnen": 155, "stetig": 155, "verzagen": 155, "eingang": [155, 1143], "kar": 155, "pl\u00f6tzlich": 155, "freundlich": 155, "vorhanden": [155, 1152, 1159], "fr\u00fchst\u00fcck": 155, "lager": [155, 270], "respektvol": 155, "erklimmenden": 155, "zieht": 155, "haltend": 155, "wand": 155, "wiederum": [155, 179], "gilt": [155, 169, 210, 348], "mittlerweil": [155, 1143, 1160], "akzeptiert": 155, "deswegen": [155, 189, 194, 1145], "schliesslich": [155, 1143], "stehend": 155, "denn": [155, 179, 189, 1164, 1166], "hinaufkomm": 155, "passiert": [155, 179, 196], "anf\u00e4ngern": 155, "geschehen": 155, "jung": [155, 348], "izola": 155, "slowenien": 155, "stellten": 155, "ankam": 155, "ob": [155, 163, 189, 1147, 1166], "beantwortet": 155, "adoptivs\u00f6hn": 155, "gewonnen": 155, "nachbarberg": 155, "ko\u010dna": 155, "sichtlich": 155, "spa\u00df": [155, 235, 1161], "abstieg": 155, "erweitert": 155, "rund": 155, "fertig": [155, 189, 206, 234, 676, 683], "empfehl": [155, 1143], "runterzugehen": 155, "raufgekommen": 155, "ostseitigen": 155, "westseitig": 155, "sch\u00f6ner": [155, 179], "langen": 155, "grat": 155, "felst\u00fcrm": 155, "daf\u00fcr": [155, 173, 179, 189, 190, 1143], "anstrengend": 155, "200m": 155, "pulverhangerl": 155, "zur\u00fcck": [155, 179, 191, 1152, 1159], "wohlverdient": 155, "la\u0161ko": 155, "geschmack": 155, "schroff": 155, "selektiv": 155, "jedermann": 155, "kett": 155, "2000m": 155, "umschlossen": 155, "gletschergeformten": 155, "karen": 155, "steilen": 155, "w\u00e4nden": 155, "ost": 155, "richtung": [155, 1154], "schlafm\u00f6glichkeiten": 155, "biwak": 155, "einladung": 155, "\u00fcberquerung": 155, "dringend": 155, "f\u00e4llig": [155, 348], "fu\u00dfnoten": [155, 1142], "belieben": 155, "gummi": 155, "reifen": 155, "fahren": 155, "mehrplatzlag": 155, "reserviert": 155, "h\u00fcttenschl\u00e4fer": 155, "ohrenst\u00f6psel": 155, "f\u00e4lle": 155, "eingetreten": 155, "fassen": [155, 234], "typ": [155, 191, 202, 212, 885, 1107], "geschnarcht": 155, "geschrien": 155, "modules sign": 156, "secure boot": 156, "shim": 156, "dell xps 13": 156, "unresolv": [156, 772, 775, 971], "upset": [156, 708], "tendenc": 156, "vendor": [156, 157, 453, 455, 514, 793, 797, 901, 931], "efi": 156, "implementor": [156, 250, 251, 253, 310, 311, 657, 695, 704, 749, 750, 756, 1128, 1148], "shine": 156, "stuck": 156, "cryptographi": 156, "third": [156, 193, 205, 234, 280, 443, 571, 573, 684, 685, 775, 777, 842, 884, 927], "parti": [156, 161, 461, 573, 768, 775, 923, 964, 1111], "signatur": [156, 202, 234, 238, 259, 280, 559, 655, 702, 718, 719, 965], "openssl": [156, 853], "req": 156, "x509": 156, "newkei": 156, "rsa": [156, 910], "keyout": 156, "xps13": 156, "priv": [156, 791], "outform": 156, "36500": [156, 514], "subj": 156, "passphras": [156, 186, 910], "expiri": 156, "0x2": 156, "97": [156, 165, 179, 189, 194, 196, 202, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 431, 1099], "e5": 156, "ef": 156, "88": [156, 165, 179, 189, 194, 196, 202, 205, 207, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 433, 1039, 1099, 1100, 1135], "3a": 156, "b3": 156, "9c": 156, "1b": 156, "a4": 156, "d7": 156, "sha256withrsaencrypt": 156, "issuer": [156, 457], "sep": [156, 157, 185, 205, 218, 221, 226, 234, 238, 241, 259, 280, 298, 439, 636, 879, 901, 903, 914, 971], "gmt": 156, "aug": [156, 221, 894, 902], "2121": 156, "subject": [156, 440, 758, 795, 1128], "rsaencrypt": 156, "modulu": [156, 215, 221, 231, 234], "b5": 156, "2d": [156, 208, 573, 1040], "5c": 156, "6f": [156, 959], "b0": 156, "95": [156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 1099, 1100], "f6": 156, "9e": 156, "9d": 156, "0d": 156, "bc": [156, 777, 901], "f5": 156, "6e": 156, "fe": [156, 439], "94": [156, 165, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 482, 483, 1099], "2b": [156, 903], "e6": 156, "b2": 156, "a0": [156, 902], "f8": 156, "7d": 156, "1c": 156, "2c": 156, "9f": 156, "4d": [156, 1040], "86": [156, 165, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 1099, 1100], "e3": [156, 476], "dd": [156, 828, 857, 1143], "7b": 156, "3f": 156, "aa": 156, "b8": 156, "a5": [156, 902], "d5": 156, "0b": 156, "81": [156, 165, 167, 179, 189, 194, 196, 202, 205, 207, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 973, 997, 1099, 1100], "d1": [156, 228, 291, 630], "e8": 156, "dc": [156, 457], "c5": 156, "d2": [156, 228, 291, 630], "c2": [156, 460, 574, 659], "0a": [156, 359], "a1": [156, 218, 263, 1052], "e1": [156, 206, 219, 476, 656], "89": [156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 431, 901, 902, 903, 973, 1099, 1100], "4c": 156, "4a": 156, "77": [156, 179, 187, 189, 194, 196, 198, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 327, 330, 335, 1099, 1100], "a9": 156, "68": [156, 179, 184, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 322, 325, 879, 1099, 1100], "b6": 156, "a8": 156, "9b": 156, "d8": 156, "7f": [156, 903], "e2": [156, 206, 219, 476, 656], "a3": 156, "79": [156, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 1099, 1100], "f4": 156, "96": [156, 165, 179, 189, 194, 196, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 431, 972, 973, 1099, 1100], "4f": [156, 1040], "1d": 156, "7e": 156, "4e": 156, "0e": 156, "d9": 156, "8c": 156, "d3": [156, 630], "c8": 156, "f7": 156, "8e": 156, "d6": 156, "3b": 156, "1e": 156, "4b": [156, 903, 959], "5e": [156, 1026], "5f": [156, 731], "7c": 156, "expon": [156, 1026], "65537": 156, "0x10001": 156, "x509v3": 156, "98": [156, 165, 179, 189, 196, 202, 205, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 556, 593, 973], "0c": [156, 903], "keyid": 156, "c0": 156, "8f": 156, "b1": 156, "b7": 156, "9a": 156, "fa": 156, "7a": 156, "df": [156, 182, 298, 302, 308, 439], "a6": 156, "c9": 156, "76": [156, 179, 189, 194, 196, 202, 205, 207, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 450, 451, 715, 748, 1052, 1099, 1100], "f0": 156, "b4": 156, "f9": 156, "eb": 156, "f1": 156, "6c": [156, 903], "2f": [156, 355, 1040], "5a": 156, "e0": 156, "d0": 156, "93": [156, 165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 1099], "8d": 156, "2a": 156, "fc": [156, 456, 457], "1a": 156, "b9": 156, "cb": [156, 620], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 156, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 156, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 156, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 156, "wl72mzqr": 156, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 156, "hmszvaowukuzi2kflrpvc": 156, "79gwnr4": 156, "jc": 156, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 156, "valspcvotvjdokib4eyxnavjbdjdldd": 156, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 156, "nb3kgq7zt5ym": 156, "b8ce2f": 156, "ettmprmfi94x": 156, "7i5tuqrbsylistict": 156, "rf1kw6": 156, "zuzvmwyow9cyzwc5rar": 156, "ys0exg3v": 156, "hyjl7vaxa23rb": 156, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 156, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 156, "dz1idzapbgnvhrmbaf8ebtadaqh": 156, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 156, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 156, "xra": 156, "kdtflvc7uuvwtp": 156, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 156, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 156, "yqfvxbjphkw": 156, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 156, "ahemjzbycfiiq65b5x": 156, "y7aq": 156, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 156, "rk": 156, "b3lljngstu2g": 156, "mokutil": 156, "mokmanag": 156, "bloodi": [156, 968, 1108], "fan": [156, 178, 182, 208, 232, 301, 1095], "highest": [156, 215, 221, 231, 234, 280, 382, 427, 902, 958], "melt": 156, "7390": [156, 221], "cross develop": 157, "raspberry pi": [157, 894, 895, 896, 897, 898, 901, 902, 903], "crosstool-ng": 157, "c++": [157, 159, 1147, 1148, 1149, 1151], "sadli": [157, 208, 421, 766, 901, 935, 938, 972, 994], "linaro": [157, 750, 893, 981, 982], "libstdc": [157, 983, 985], "unsatisfi": 157, "libpthread": [157, 974], "feedback": [157, 173, 176, 185, 186, 187], "thankfulli": 157, "gperf": [157, 985], "flex": [157, 777, 901, 985], "texinfo": [157, 985], "help2man": [157, 985], "libtool": [157, 985], "ncurs": [157, 770], "unzip": [157, 798, 985], "rsync": [157, 985], "diffutil": 157, "libncurses5": [157, 985], "gawk": [157, 985], "util": [157, 164, 185, 454, 460, 479, 493, 608, 663, 666, 668, 748, 985, 992, 1123], "ct": [157, 985], "zlib": [157, 985], "extra": [157, 179, 189, 215, 388, 449, 541, 712, 797], "prior": [157, 823, 839, 864, 901, 971, 987, 1041], "bootstrap": [157, 985, 1130], "latest": [157, 753, 768, 774, 1123], "yann": 157, "morin": 157, "warranti": [157, 198, 327], "merchant": 157, "chosen": [157, 442, 894, 901, 903, 929, 933, 953, 957, 1101, 1114], "rpi3": 157, "armv7": 157, "rpi2": 157, "23179": 157, "libc": [157, 971, 988], "glibc_2": [157, 971], "ldd": [157, 443, 445, 988], "0xb6e06000": 157, "invok": [157, 187, 206, 219, 316, 321, 457, 559, 571, 630, 660, 950, 972, 1009, 1021, 1022, 1047], "rpt2": 157, "rpi1": 157, "deb10u1": 157, "quirk": [157, 894], "werror": [157, 363, 376, 419, 442, 457, 464, 748, 765, 766, 1137], "behind": [157, 197, 376, 427, 457, 479, 589, 797, 912, 971, 1014, 1112], "glibcxx_3": 157, "libgcc_": 157, "downgrad": 157, "cmake_find_root_path": [157, 972], "cmake_sysroot": [157, 972], "viewpoint": 157, "bye": [157, 683, 687, 689, 690, 691, 1108], "relocat": 157, "fragil": 157, "sdk": 157, "buildroot": 157, "encount": [157, 186, 234, 238, 902, 903, 929], "ct_prefix": 157, "categori": [158, 170, 439, 1097], "crosstool": [158, 262, 750, 893, 972, 974, 981, 982, 983], "1399": 158, "dell": 158, "xp": [158, 437], "grintovec": [158, 213], "plan\u0161arsko": 158, "jezero": 158, "\u010de\u0161ka": [158, 213], "ko\u010da": [158, 213], "traunstein": [158, 182, 348], "zierlersteig": [158, 182], "bigbluebutton": [158, 162, 1142], "consumpt": 158, "buildmanag": 159, "embeddedentwicklung": 159, "anpassungen": 159, "paketen": 159, "rootfilesystem": [159, 974], "dient": 160, "vermarktung": 160, "referenz": [160, 249], "kursteilnehm": [160, 348], "beendigung": 160, "entstandenen": 160, "zur\u00fcckgreifen": 160, "finden": [160, 164, 173, 1142], "sofern": 160, "kund": [160, 173], "w\u00fcnscht": 160, "abstufungen": 160, "\u00f6ffentlichkeit": [160, 1159], "besprochen": 160, "hierbei": 160, "anwendung": [160, 1164], "g\u00e4nzlich": 160, "abgesehen": 160, "ausdr\u00fccklich": 160, "zustimmt": 160, "namen": [160, 179, 189, 238, 298, 885, 1166], "individuen": 160, "prinzipiel": 160, "erw\u00e4hnt": [160, 173], "erlaubni": 160, "sollten": [160, 228, 266], "vorgehen": [160, 246, 1159, 1166], "anbietet": 160, "nie": [160, 169, 181, 348, 1147], "zug\u00e4nglich": 160, "onlinekursen": 160, "m\u00f6glichkeit": [160, 163, 181, 1145, 1164, 1165], "\u00fcbungsmateri": 160, "zustimmen": 160, "einzeln": [160, 173], "keinesfal": 160, "ver\u00f6ffentlicht": 160, "verschiedenst": 160, "m\u00f6glichkeiten": [160, 173, 1161, 1164], "entstanden": [160, 173, 181], "nichtsdestotrotz": [160, 1145], "verf\u00fcgung": [160, 179, 1147, 1164], "accompani": [161, 182, 271, 273, 1098, 1153], "privaci": [161, 178, 182, 183], "guidelin": [161, 178, 297, 903], "certainli": [161, 929], "redhat": [161, 283, 433], "gitk": [161, 857], "traine": [161, 188], "respositori": [161, 173], "user1": 161, "user2": 161, "user3": 161, "untrack": 161, "beast": 161, "similarli": 161, "unstag": 161, "accident": [161, 570, 702, 781, 824, 825, 864, 928, 1036], "7434a5b": 161, "100755": 161, "cowork": 161, "employ": [161, 437], "favourit": 161, "869": [161, 221, 308], "124": [161, 165, 179, 186, 189, 196, 202, 205, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 1052], "a4b9666": 161, "bf5bb75": 161, "went": [161, 182], "retri": [161, 915, 1014, 1123], "noon": [161, 301, 957, 1045], "lack": [161, 417, 442, 514, 648, 650, 903, 983], "unavoid": 161, "her": [161, 165, 190, 234, 237, 650, 832, 853, 1061, 1103, 1158], "confid": 161, "merg": [161, 207, 799, 957, 1043, 1160], "gentl": [162, 1149], "histori": [162, 170, 206, 224, 250, 251, 253, 255, 301, 310, 311, 376, 653, 657, 659, 695, 747, 749, 750, 756, 799, 828, 834, 885, 1095, 1101, 1107, 1150, 1154, 1161], "tinker": 162, "solder": 162, "sysv": [163, 972], "grace": [163, 275, 722], "sigterm": [163, 968, 969], "sigkil": 163, "beeinflussen": 163, "shutdown": [163, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 311, 338, 775, 888, 965, 1003], "herausgefunden": [163, 169, 348], "nachfolgend": [163, 1143], "manpag": 163, "verhindern": 163, "genehm": 163, "systemd": [163, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 797, 835, 888, 903, 968, 1143], "inhibit": [163, 310, 655, 693], "children": [163, 431], "vererbt": 163, "attributen": 163, "setprior": 163, "execv": [163, 926, 971], "sched_reset_on_fork": 163, "ORed": 163, "privileg": [163, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 853, 888], "playback": 163, "prevent": [163, 166, 215, 221, 224, 231, 234, 262, 413, 419, 423, 834, 923, 928, 957, 968, 994, 1006, 1036], "evad": 163, "rlimit_rttim": 163, "getr": 163, "anstel": 163, "prozessen": 163, "teilen": 163, "prozess": [163, 331, 1152, 1154, 1161, 1162, 1165], "startenden": 163, "gestarteten": 163, "weitergegeben": 163, "ausser": [163, 190, 325, 1158], "unterbunden": 163, "pthread_attr_setinheritsch": 163, "pthread_inherit_sch": 163, "pthread_explicit_sch": 163, "newli": [163, 419], "sowa": [163, 169, 348, 1143], "\u00e4hnlich": [163, 194], "wikipedia": [163, 224, 427, 570, 903, 914, 958, 990, 1108], "filter_driv": 163, "offenbar": [163, 179, 348, 1145], "miser": [163, 608], "netzwerkdrivern": 163, "hoher": 163, "interruptlast": 163, "verbessern": 163, "n\u00f6tig": [163, 1154], "diesbez\u00fcglich": 163, "\u00fcberlegt": 163, "schaltet": 163, "netzwerkdriv": 163, "30107": 163, "linuxfound": 163, "workgroup": 163, "napi": [163, 193, 791], "implementationen": 163, "libmodbu": 163, "freemodbu": 163, "konfiguriert": [163, 164], "jumbo": 163, "jumbo_fram": 163, "mtu": [163, 896], "1500": [163, 221], "eth0": 163, "9000": [163, 221], "ifconfig": [163, 791], "abgelegt": 163, "konfigur": [163, 165], "ifac": [163, 482, 496, 719], "vorsicht": [163, 189, 885], "routern": 163, "fragmentieren": 163, "tracerout": 163, "netzwerkverbindung": 163, "g\u00fcte": 163, "wissen": [163, 348, 1145, 1152], "sar": 163, "sysstat": 163, "schmerzvol": 163, "netter": 163, "ausprogrammiert": 164, "konflikt": [164, 1160], "parallelen": [164, 1164], "demonstr": [164, 166, 186, 258, 509, 558, 1097, 1101, 1140], "mutter": [164, 348, 349, 1164], "aller": [164, 173, 348, 349, 1143, 1164], "danach": [164, 1142], "hilf": [164, 189, 330, 335, 1154], "gefixt": 164, "kommunk": 164, "variablen": [164, 165, 190, 191, 194, 197, 202, 230, 248, 249, 322, 325, 331, 1144, 1154, 1155, 1158], "frontal": 164, "vorgef\u00fchrt": 164, "diskuss": [164, 173, 195, 348], "dank": [164, 169, 348, 1143], "beispielcod": 164, "h\u00e4ndisch": [164, 1146], "zweier": [164, 190, 1158], "bewundern": 164, "k\u00f6nnt": 164, "euch": 164, "erinnern": [164, 348], "blinken": 164, "liess": 164, "irgendwo": [164, 238], "hatten": [164, 169, 348], "edg": [164, 208, 779, 937, 938], "kleinen": 164, "empf": 164, "unbedingt": [164, 179, 1143], "beispielprogramm": 164, "horcht": 164, "gesprochen": 164, "ausf\u00fchrlich": [164, 249], "schamlos": 164, "eigenwerbung": 164, "\u00fcberbleibsel": 164, "ehemaligen": 164, "socketcan": [164, 895, 896], "absorbiert": 164, "worden": [164, 173, 1143], "enth\u00e4lt": [164, 179], "schnuckelig": 164, "aufzeichnen": 164, "replai": [164, 896], "folien": [164, 173, 181, 1142], "freitag": [164, 1143], "kerneldrivertag": 164, "sorri": [164, 170, 836], "emanuel": 164, "beispieldriv": 164, "han": 164, "findet": 164, "angeboten": [164, 1142], "promin": [164, 712, 793], "implementiert": [164, 179, 210, 1152, 1166], "gute": [164, 181, 1152, 1159], "anfang": [164, 165, 173], "mcp2515": [164, 797], "angesprochen": [164, 181], "fortgeschrittener": [164, 181], "einpflegt": 164, "agiert": 164, "mcp251x": 164, "at91": 164, "soc": [164, 901, 902, 903, 937], "deinem": 164, "stecker": 164, "verbaut": 164, "at91_can": 164, "lacht": 164, "zeilenweisen": 165, "nutzdaten": [165, 218], "extrahieren": [165, 192], "wollend": [165, 1159], "spalt": 165, "offensichtlich": [165, 1146], "separiert": 165, "felder": 165, "antwort": [165, 266, 308], "stdtype": 165, "gscheitesten": 165, "aufeinanderfolgend": 165, "whitespac": [165, 226, 234, 280, 361, 1041, 1064, 1120], "nimmt": [165, 190, 202, 226, 228, 234, 266, 1145, 1158], "tupl": [165, 178, 183, 185, 187, 191, 195, 197, 203, 204, 206, 210, 213, 216, 217, 219, 220, 222, 223, 227, 229, 230, 231, 236, 239, 242, 243, 245, 255, 257, 260, 263, 264, 267, 277, 279, 281, 285, 286, 298, 301, 303, 309, 311, 315, 330, 486, 695, 749, 750, 999, 1017, 1018, 1025, 1026, 1031, 1040, 1043, 1072, 1095, 1116, 1117, 1148], "weiss": [165, 169, 179, 298, 1161, 1166], "rauskommen": 165, "aaa": [165, 226, 238, 244, 280], "tbbb": 165, "tccc": 165, "feld0": 165, "feld1": 165, "feld2": 165, "ccc": [165, 244], "optional": [165, 1145], "splittet": 165, "bearbeitet": [165, 1165], "manuel": [165, 189, 194], "ddd": 165, "eee": 165, "maxsplit": [165, 234, 280, 439], "restfield": 165, "len": [165, 166, 167, 169, 179, 189, 194, 196, 197, 202, 205, 206, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 287, 298, 302, 308, 322, 325, 439, 793, 897, 998, 1011, 1024, 1026, 1032, 1034, 1041, 1043, 1045, 1046, 1090, 1108, 1112, 1116, 1119], "10101010": 165, "switchnumb": 165, "rsplit": [165, 234, 280, 439, 1041], "l1": [165, 168, 179, 196, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 477], "l2": [165, 168, 179, 196, 202, 205, 210, 215, 218, 221, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308], "\u00e4nderung": [165, 179, 1166], "87": [165, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 1052, 1099, 1100], "zeigen": [165, 884], "dasselb": 165, "objekt": [165, 179, 189, 280], "140070310441600": 165, "ver\u00e4ndert": 165, "91": [165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 1099, 1100], "140070371015728": 165, "92": [165, 166, 189, 194, 196, 198, 202, 205, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335, 881, 1099, 1100], "attributeerror": [165, 179, 215, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 994, 1007, 1008, 1015], "gottseidank": 165, "alternativ": 165, "aufruf": [165, 179, 185, 189, 234, 326], "paaren": 165, "keyerror": [165, 168, 179, 189, 196, 205, 215, 218, 221, 226, 228, 231, 234, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 994, 1043, 1117], "nix": [165, 166, 179, 197, 205, 226, 228, 231, 256, 276, 308, 325, 515], "umstaendlich": 165, "102": [165, 179, 189, 194, 196, 202, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 330, 335], "103": [165, 179, 189, 196, 202, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325], "104": [165, 167, 179, 189, 194, 196, 202, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 1052], "106": [165, 179, 189, 194, 196, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 879], "setdefault": [165, 206, 226, 241, 256, 259, 266, 276, 280, 286, 298, 302, 308, 1043], "107": [165, 179, 189, 194, 196, 198, 202, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 327, 426], "meinvoelligsinnlosertyp": 165, "sinnlose_addit": 165, "sinnlobj": 165, "112": [165, 179, 186, 189, 194, 196, 202, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 325, 879], "113": [165, 179, 189, 194, 196, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 263, 266, 276, 280, 286, 298, 302, 308, 462], "__main__": [165, 169, 179, 184, 202, 205, 215, 218, 219, 221, 226, 228, 231, 234, 238, 241, 244, 247, 259, 266, 276, 280, 286, 298, 302, 308, 325, 330, 995, 998, 1002, 1008, 1016, 1123, 1129], "0x7f64a8934890": 165, "114": [165, 167, 179, 189, 196, 202, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "115": [165, 179, 189, 194, 196, 202, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "116": [165, 179, 189, 196, 202, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "nochwenigersinnvol": 165, "der_absolute_unsinn": 165, "super": [165, 181, 182, 189, 203, 205, 206, 221, 229, 232, 236, 255, 259, 270, 279, 301, 476, 992, 994, 1011, 1095, 1102], "unsinn": 165, "uebertreibs_jetzt_bitt": 165, "117": [165, 179, 189, 196, 202, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "118": [165, 179, 189, 196, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 879, 1052], "0x7f64a894a790": 165, "119": [165, 179, 189, 196, 198, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 327], "121": [165, 167, 179, 189, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "1335": 165, "122": [165, 167, 179, 189, 194, 196, 202, 205, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 973], "819508": 165, "123": [165, 179, 189, 196, 197, 202, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 372, 896, 1052, 1059, 1129], "uptim": 165, "timedelta": [165, 184, 211, 213, 266], "358": [165, 221, 266, 280, 298, 308, 433], "125": [165, 189, 194, 196, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "irgendwann_einmal_gewesen": 165, "834972": 165, "126": [165, 179, 189, 194, 196, 202, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "datetime_from_batteri": 165, "840837": 165, "127": [165, 179, 189, 194, 196, 202, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 912, 920], "846889": 165, "woher": [165, 228], "ausschauen": 165, "sinnlo": [165, 228], "sinnlos": [165, 202, 280], "repraesent": 165, "129": [165, 179, 189, 196, 198, 205, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 327], "130": [165, 179, 189, 196, 211, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 270, 276, 280, 286, 298, 302, 308, 655, 770, 1039], "completedprocess": [165, 234, 244], "returncod": [165, 234, 244], "erfolgreich": 165, "beendet": [165, 1164], "schau": 165, "du": [165, 179, 234, 241, 247, 920, 925], "verwendest": 165, "anzuzeigen": 165, "cell": [165, 178, 894, 1019, 1100], "gesendet": 165, "ausf\u00fchrt": 165, "krieg": 165, "131": [165, 179, 189, 196, 205, 211, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 705], "capture_output": [165, 244], "ndrwxrwxr": [165, 244], "mar": [165, 234, 372, 824, 825, 828, 842, 854, 876, 879, 881, 905, 919, 929, 971, 974, 983], "2607": 165, "33768": 165, "ndrwxr": 165, "xr": [165, 450, 824, 825, 842, 844, 845, 853, 854, 879, 894, 901, 902, 903, 971, 983, 985, 986, 1022], "switchzeug": 165, "keiner": [165, 179, 298, 1147], "seinen": [165, 179], "formuliert": [165, 173], "logisch": [165, 189], "irgendwa": [165, 211, 226, 228], "konverti": 165, "musst": 165, "dich": 165, "festlegen": 165, "133": [165, 179, 189, 196, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "stdout_as_utf8": 165, "utf": [165, 206, 215, 218, 219, 221, 225, 231, 234, 244, 266, 280, 286, 298, 302, 308, 1026, 1045, 1092], "134": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 714], "135": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308], "drwxrwxr": [165, 244, 879, 937, 972, 973, 974, 983, 985], "drwxr": [165, 824, 825, 842, 879, 894, 901, 902, 903, 983, 985], "136": [165, 167, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 451], "fuer": [165, 226, 231, 238], "listdir": [165, 272, 276, 308, 337, 439], "ipynb_checkpoint": [165, 244, 308], "gitignor": [165, 440, 973], "137": [165, 176, 179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308], "rekurs": 165, "iterieren": [165, 169, 179, 194, 202], "dirpath": 165, "dirnam": [165, 218, 221, 272, 439, 514, 748, 1128], "checkpoint": [165, 215, 221, 231, 234], "itg": 165, "scope": [165, 173, 179, 190, 191, 194, 225, 237, 250, 251, 253, 262, 274, 285, 296, 300, 301, 306, 307, 310, 314, 330, 367, 373, 477, 527, 547, 560, 562, 571, 656, 697, 709, 712, 727, 728, 749, 750, 993, 1038, 1148, 1158, 1162], "getter": [165, 568, 616], "setter": [165, 205, 1015], "fibo": [165, 166, 185, 205, 219, 683, 685, 998], "listcomprehens": 165, "generatorexpress": [165, 166], "switchdb": 165, "schema": [165, 246, 557, 1051], "michi": 165, "pyexec": 165, "ifadminstatu": 165, "ifdescr": 165, "iflastchang": 165, "snmpenginetim": 165, "ifoperstatu": 165, "fein": [165, 189], "helferlein": 165, "hochtrabend": 165, "nennt": 165, "funktional": 165, "138": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 1052], "139": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "140": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 276, 280, 286, 298, 302, 308, 655], "l_quadrat": 165, "141": [165, 179, 189, 196, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 372, 879], "kompliziert": [165, 179, 231, 234, 256, 1143, 1162], "anm": 165, "versionen": [165, 235], "aufgebaut": 165, "rausnehmen": 165, "konfigurationsfil": 165, "configpars": 165, "142": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 263, 276, 280, 286, 298, 302, 308, 914, 959], "143": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308], "liste_als_str": 165, "144": [165, 179, 189, 196, 205, 212, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 451], "145": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 1113], "herbert": 165, "146": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308], "heraussen": 165, "147": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 832], "148": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 574], "149": [165, 179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308], "151": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 337], "152": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 337], "mein_dict": 165, "gerhard": 165, "175": [165, 179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 280, 286, 298, 302, 308], "154": [165, 179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308, 879], "dict_as_json_str": 165, "155": [165, 179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 337], "gelesenes_dict_von_json": 165, "nahm": 166, "woch": [166, 186, 348, 349, 1143], "anspruch": 166, "platz": 166, "gesammelten": 166, "notizen": 166, "schnell": [166, 169, 189, 210, 235, 1146], "sachen": [166, 192], "is_prim": [166, 189, 192, 197, 1074], "divisor": [166, 197, 748, 1066], "unmodifi": [166, 179, 215, 226, 460, 511, 557, 571, 901, 903, 994, 1007, 1077], "randomnumb": 166, "howmani": 166, "randrang": [166, 194, 218, 226, 228, 231, 234, 238, 241, 244, 266, 308, 325, 995, 1030], "prev": [166, 787], "cur": [166, 286, 377], "fibonum": 166, "tend": [166, 265, 268, 275, 427, 770, 836, 986], "input_list_str": 166, "input_list": [166, 241, 1077], "__n": [166, 748], "__lt__": [166, 228, 231, 234, 238, 256, 259, 280, 298], "rh": [166, 215, 219, 234, 365, 407, 423, 477, 491, 557, 571, 573, 697], "__le__": [166, 228, 231, 234, 238, 256, 259, 280, 298, 1014], "__eq__": [166, 228, 231, 234, 238, 256, 259, 280, 298, 1014], "__iadd__": 166, "iadd": 166, "__add__": [166, 231, 234, 238, 256, 280, 298, 1014], "new_numb": [166, 221], "__radd__": [166, 231, 238, 256, 1014], "radd": 166, "lh": [166, 215, 219, 365, 407, 423, 477, 491, 547, 557, 571, 573, 697, 828], "makesnosens": 166, "__number": 166, "input_numb": 166, "numnber": 166, "list_of_squar": 166, "shorter": [166, 1002, 1013, 1045, 1094], "compehens": 166, "effort": [166, 238, 272, 420, 421, 438, 902], "local_assign": 166, "read_global_vari": 166, "enclos": [166, 234, 390], "local_shadows_glob": 166, "explicit_global_assign": 166, "creation": [166, 275, 297, 721, 723, 728, 749, 750, 856, 893, 923, 934, 939, 948, 954, 965, 974, 1036, 1045, 1046, 1130], "captur": [166, 249, 250, 251, 253, 273, 310, 311, 315, 330, 695, 696, 699, 749, 750, 894, 990, 1148], "create_funct": 166, "inner_funct": 166, "whic": 166, "f_one": 166, "f_two": 166, "launch": [166, 182], "discov": [166, 178, 185], "area": [166, 175, 208, 238, 793, 902, 1159, 1165], "scikit": [167, 169, 216, 1130], "manipul": [167, 442, 591, 714, 748, 795, 901, 914, 923, 958, 970, 1033, 1051], "appreci": [167, 218, 836, 1052], "beauti": [167, 181, 182, 185, 203, 205, 206, 213, 224, 228, 229, 232, 238, 255, 279, 330, 403, 533, 591, 939, 996, 1045, 1052, 1095], "spectral": [167, 1097], "mat": 167, "scipi": [167, 169, 197, 216, 1130], "loadmat": [167, 169], "sklearn": [167, 169, 1098, 1100, 1130], "pixel": 167, "rgb": [167, 169, 339], "dimens": [167, 169, 1100, 1151], "xkcd": 167, "schafer": [167, 178, 181, 182, 185, 203, 206, 213, 216, 219, 229, 232, 243, 246, 255, 279, 285, 330, 335, 1095, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1131], "keith": [167, 178, 182, 203, 216, 229, 243, 246, 279, 285, 1095], "galli": [167, 178, 182, 203, 216, 229, 243, 246, 279, 285, 1095], "sci": 167, "kit": [167, 339], "spyder": [167, 178, 1019], "pycharm": [167, 178, 272, 1019], "retain": [167, 396, 1037], "invoc": [167, 477], "comparison": [167, 184, 207, 221, 224, 234, 242, 280, 372, 376, 382, 533, 697, 1028, 1070], "misfeatur": 167, "png": [167, 169, 446, 973, 1097], "imgfil": 167, "veggi": [167, 169, 1097], "pillow": [167, 169], "welcom": 167, "cooper": [167, 722], "477x686": 167, "imgarrai": [167, 169], "ndim": [167, 1100], "477": [167, 221, 266], "dtype": [167, 169, 263, 266, 270, 302, 308, 1100, 1113, 1114, 1116, 1117, 1118, 1119], "uint8": 167, "255": [167, 202, 218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308, 950], "172": [167, 179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 422], "nrow": [167, 169], "ncol": [167, 169], "reshap": [167, 169, 203, 216, 229, 243, 246, 279, 285, 1095, 1098, 1100], "irrelev": [167, 184, 189, 222, 372, 414, 437, 842, 1026, 1108], "colorspac": 167, "mpl_toolkit": 167, "mplot3d": 167, "axes3d": 167, "pyplot": [167, 196, 215, 244, 247, 298, 302, 308, 991, 1049, 1100], "plt": [167, 196, 215, 244, 247, 298, 302, 308, 991, 1049, 1100], "fig": 167, "add_subplot": 167, "set_xlabel": 167, "set_ylabel": 167, "set_zlabel": 167, "ndindex": 167, "scatter": [167, 768], "rgb_linear": 167, "n_cluster": [167, 169], "copy_x": 167, "max_it": 167, "n_init": 167, "n_job": 167, "precompute_dist": 167, "random_st": [167, 1098, 1100], "tol": 167, "verbos": [167, 174, 442, 715, 823, 857, 859, 1030, 1123], "cluster_cent": 167, "int32": [167, 423], "327222": 167, "cluster_centers_": [167, 169], "20529747": 167, "50360681": 167, "3796182": 167, "94408609": 167, "75471018": 167, "53133237": 167, "226": [167, 179, 198, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302, 327], "64913628": 167, "76939951": 167, "92569235": 167, "71464963": 167, "47333306": 167, "60640492": 167, "8888303": 167, "92275244": 167, "84313209": 167, "157": [167, 179, 189, 196, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "30685398": 167, "43988931": 167, "03959132": 167, "225": [167, 179, 218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 280, 286, 302, 308, 446, 1052], "55934051": 167, "182": [167, 179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 276, 280, 286, 298, 302, 308], "98255893": 167, "3232048": 167, "241": [167, 218, 221, 226, 228, 231, 234, 241, 244, 259, 276, 280, 286, 302, 1052], "37322907": 167, "159": [167, 179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "54158234": 167, "51775529": 167, "idx": [167, 169, 234], "cube": 167, "concaten": [167, 169, 206, 218, 219, 226, 234, 280, 308, 324, 372, 438, 882, 1031, 1039], "axi": [167, 169, 270, 1116, 1117], "reduced_img": [167, 169], "fromarrai": [167, 169], "float": [168, 179, 183, 185, 187, 189, 196, 197, 202, 205, 215, 218, 219, 221, 224, 226, 228, 231, 234, 239, 242, 256, 259, 264, 276, 280, 286, 297, 299, 302, 308, 325, 326, 353, 354, 355, 359, 369, 371, 372, 376, 406, 415, 420, 439, 467, 476, 582, 583, 672, 731, 901, 959, 969, 1007, 1025, 1040, 1047, 1052, 1145, 1149], "franziska": [168, 169], "baseexcept": [168, 205, 234, 238, 259, 994], "callabl": [168, 182, 218, 231, 241, 244, 259, 266, 276, 280, 287, 655, 697, 719, 727, 1008, 1009, 1046], "forev": [168, 397, 398], "rescu": [168, 226, 570, 591, 713, 715, 797, 992], "pooh": [168, 583], "hex": [168, 179, 189, 196, 211, 221, 231, 244, 256, 259, 266, 276, 286, 302, 308, 325, 341, 514, 903, 1040], "0x7f03d41165f0": 168, "nonexist": 168, "react": [168, 183, 185, 187, 288, 304, 419, 580, 901, 918, 994, 1150], "ensu": 168, "catch": [168, 208, 224, 247, 273, 315, 341, 457, 464, 486, 503, 520, 522, 555, 581, 584, 600, 606, 610, 615, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 683, 691, 729, 731, 748, 750, 969], "jessa": [168, 189, 196, 218, 247, 298], "verdammt": [168, 330], "ipython": [168, 205, 215, 221, 231, 234, 259, 276, 879], "bd3a1af9b474": 168, "issubclass": [168, 205, 221, 234, 259], "rais": [168, 169, 183, 185, 187, 205, 206, 215, 219, 221, 222, 226, 228, 231, 232, 234, 238, 246, 247, 280, 297, 315, 341, 992, 999, 1005, 1015, 1041, 1043, 1116, 1117], "bummer": [168, 221, 729, 1039], "peter": [168, 191, 228, 238, 321, 322, 1032], "paul": [168, 321, 322, 1032], "mari": [168, 1032], "pet": 168, "perfectli": [168, 224], "bloh": [168, 205], "blech": [168, 276, 668, 1111], "range_iter": [168, 179, 194, 211, 218, 226, 228, 231, 234, 244, 256, 259, 266, 276], "0x7f03d402e570": 168, "stopiter": [168, 179, 194, 205, 211, 215, 218, 221, 226, 228, 231, 234, 238, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 683, 691, 994, 999], "beantwortung": [169, 348], "herrschaft": [169, 348], "gestellt": [169, 179, 348, 1147], "schulungsr\u00e4umen": [169, 348], "platzhirsch": [169, 348], "schlagen": [169, 348], "spass": [169, 348, 1152, 1154, 1159], "unglaublich": [169, 348], "lustig": [169, 190, 348, 1143, 1154], "vermittelt": [169, 348, 1164], "gelernt": [169, 348, 1152], "anwend": [169, 348], "beachten": [169, 190, 348, 1158], "zudem": [169, 348], "kursleit": [169, 348], "sympathisch": [169, 348], "kompet": [169, 348], "w\u00fcrde": [169, 179, 348], "weiterempfehlen": [169, 348], "wiederholen": [169, 348], "christoph": [169, 211, 348], "jemand": [169, 348], "lassen": [169, 179, 190, 348, 1146, 1152, 1158, 1162, 1166], "bevor": [169, 1152, 1159, 1166], "anf\u00e4ngerthemen": 169, "vorbei": [169, 228, 234, 1155], "herumzureiten": 169, "gehackt": [169, 209], "zeug": [169, 298, 1161], "chef": 169, "vorgespr\u00e4ch": 169, "\u00fcbungsbeispiel": [169, 179], "mitgegeben": 169, "ausgehend": [169, 190, 348], "spektralbild": 169, "sagt": [169, 226], "verwend": [169, 202, 348], "clusteringalgorithmu": 169, "kategorisieren": 169, "abgebildeten": 169, "st\u00fccke": [169, 173], "erkennen": [169, 1147], "hab": 169, "erlaubt": [169, 179, 1143], "kursvorbereitung": 169, "appet": 169, "reduzieren": 169, "farbredukt": 169, "farben": 169, "bilddaten": 169, "interoperiert": 169, "nahtlo": [169, 1152, 1159], "zufal": [169, 195, 1146], "alpha": [169, 234, 280, 1050], "ausgangsbild": 169, "abzuschneiden": 169, "restoren": 169, "algorithmu": [169, 189, 234, 238, 241], "reduc": [169, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 455, 657, 695, 747, 749, 750, 903, 1097], "acht": [169, 189, 190, 234, 266, 286, 1158], "\u00fcberschaubar": 169, "ausdrucksst\u00e4rk": 169, "bemerkbar": 169, "wegschneiden": 169, "pil": 169, "kmean": 169, "nrgba": 169, "disregard": [169, 376], "arbitrarili": [169, 756, 929, 933, 992], "linear_rgb": 169, "rgba": 169, "ergeben": 169, "testprogramm": 169, "imndata": 169, "teilzeitmitarbeiterin": 169, "studiert": 169, "folgendem": [169, 211, 1166], "bekackten": 169, "inputformat": 169, "parsen": [169, 194], "zwischendurch": 169, "gruppenarbeit": 169, "h2o": 169, "dat": 169, "mass": [169, 275], "0000000e": 169, "2662399e": 169, "5994910e": 169, "4391972e": 169, "0048070e": 169, "0078250e": 169, "hessian": 169, "hartre": 169, "bohr": 169, "kamu": 169, "05054e": 169, "61610e": 169, "00000e": 169, "20781e": 169, "08051e": 169, "83024e": 169, "06829e": 169, "42629e": 169, "65256e": 169, "52600e": 169, "69570e": 169, "91733e": 169, "04388e": 169, "34292e": 169, "04780e": 169, "63758e": 169, "19019e": 169, "41217e": 169, "11622e": 169, "21912e": 169, "11752e": 169, "04198e": 169, "36702e": 169, "14839e": 169, "71613e": 169, "96373e": 169, "40456e": 169, "21369e": 169, "24236e": 169, "60956e": 169, "84350e": 169, "29686e": 169, "92365e": 169, "einigen": [169, 190, 348], "runden": [169, 179], "nachdenken": 169, "einigerma\u00dfen": 169, "zufrieden": 169, "load_dat": 169, "matrix_lin": 169, "readlin": [169, 196, 198, 205, 206, 218, 219, 225, 234, 241, 266, 276, 302, 308, 322, 857, 1045], "vergeigt": 169, "matrix_el": 169, "unnecessari": [169, 367, 397], "triangular": 169, "max": [169, 179, 197, 202, 215, 221, 224, 226, 228, 231, 236, 241, 259, 381, 397, 533, 582, 834, 895, 1100], "row_no": 169, "__name__": [169, 205, 206, 219, 228, 234, 238, 259, 276, 280, 323, 330, 993, 995, 998, 1002], "bildverarbeitung": 169, "ahnung": [169, 211], "beeeeeep": 170, "broad": [170, 456, 1102, 1148, 1149], "responsibl": [170, 956, 1128], "sane": [170, 341, 834, 1103, 1128], "interfer": [170, 427, 440, 902], "paradigm": [170, 833, 841, 894, 902, 1163], "breakag": [170, 777], "nontrivi": [170, 178, 182, 332, 1019, 1122], "inappropri": [170, 354, 359, 460, 755], "conclus": [170, 178, 185, 795], "awkward": 170, "encourag": [170, 756], "hear": 170, "predat": [170, 760, 886, 965], "doubt": [170, 215, 221, 231, 234, 238, 714, 1026], "schulungsbeschreibung": [171, 1142], "drehbuch": 171, "workshop": 171, "infolgedessen": 171, "virtuel": [171, 235, 1152, 1162, 1163], "konzipiert": [171, 181, 348], "add_subdirectori": [172, 447, 451, 963, 1137], "group1": 172, "group2": 172, "montag": [173, 181, 182, 203, 207, 1143], "vorbereitung": [173, 348, 1145], "mitbringen": 173, "teilzunehmen": 173, "stattfinden": [173, 249], "folgt": 173, "hierzu": 173, "privatheitsrichtlinien": 173, "bauanleitung": 173, "ausprobieren": 173, "willkommen": 173, "schulungsbeschreibungen": 173, "raii": [173, 275, 555, 750], "stl": [173, 339, 403, 516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 555, 556, 594, 598, 620, 622, 623, 637, 652, 663, 750, 1147, 1148, 1149], "scott": [173, 662, 717], "meyer": [173, 465, 717], "primer": [173, 1135], "sonstig": 173, "argh": [173, 398, 649, 677, 994, 1123, 1135], "kursanforderung": 173, "erg\u00e4nzend": 173, "lasst": 173, "testgetrieben": 173, "testcas": [173, 1129], "aufgab": [173, 179, 209, 1155], "hacken": 173, "diskutieren": 173, "niederschrift": 173, "geschehenen": 173, "geh\u00f6renden": 173, "privaten": 173, "verl\u00e4uft": 173, "ansehen": 173, "clonen": 173, "wann": [173, 181], "zugeh\u00f6rigen": 173, "entspricht": 173, "unbetr\u00e4chtlich": 173, "gcc5": 173, "laufen": [173, 1143], "darau": [173, 181], "installationsanleitung": 173, "benutzung": [173, 330, 335], "zuerst": [173, 1166], "aggreg": [173, 428, 439, 557, 809, 1113, 1135], "klassen": [173, 179, 185, 331, 1147], "konstruktoren": [173, 197, 249, 331, 1147], "methoden": [173, 179, 191, 325, 1147], "referenzen": [173, 179, 190, 191, 249, 1147, 1158], "klass": [173, 202, 298], "\u00e4quival": 173, "\u00fcbergab": 173, "langsam": [173, 179, 228], "ausbauen": 173, "dynmem": 173, "demonstrieren": 173, "alloziert": [173, 179, 196], "konstruktor": 173, "destruktor": 173, "vermeiden": [173, 179, 1164], "dtor": [173, 455, 541, 627, 632, 663, 666, 700], "ausflug": [173, 189, 230], "capac": [173, 608], "\u00fcbung": [173, 190, 191, 1158], "handgestrickt": 173, "fallen": [173, 1146, 1147], "lustvol": 173, "erleiden": 173, "teufel": [173, 1146], "smart": [173, 249, 271, 310, 331, 332, 333, 348, 437, 514, 624, 664, 665, 695, 715, 720, 728, 747, 749, 750, 1148, 1151], "shared_ptr": [173, 208, 224, 250, 251, 253, 271, 273, 310, 311, 469, 533, 624, 655, 664, 695, 710, 716, 717, 720, 728, 747, 749, 750, 1148], "unique_ptr": [173, 208, 224, 250, 251, 253, 271, 273, 310, 311, 455, 462, 469, 495, 496, 533, 624, 663, 664, 695, 710, 713, 720, 728, 746, 747, 748, 749, 750, 1148], "demonstriert": 173, "vorgriff": 173, "sortieren": [173, 1147], "employeerecord": 173, "parametrisierbarem": 173, "koordinatentyp": 173, "102ff": 173, "arten": [173, 1145], "containern": 173, "pointerarithmetik": 173, "wiederholung": [173, 190, 197, 233, 1158], "iteratoren": [173, 236], "laufzeitverhalten": [173, 191], "verbesserungen": 173, "gegen\u00fcb": [173, 1145], "6ff": 173, "lambda": [173, 205, 206, 219, 221, 224, 236, 249, 256, 273, 276, 281, 298, 302, 439, 533, 598, 670, 695, 700, 705, 707, 719, 722, 727, 749, 750, 990, 1147, 1148, 1149], "gegen\u00fcberstellung": 173, "sort_algorithm_reverse_lambda": 173, "vererbung": [173, 1147], "fallstudi": 173, "livegehackt": 173, "angebunden": 173, "komplex": [173, 226, 228, 234, 241, 266, 1164], "aufbauen": 173, "vergleichbaren": 173, "anbinden": 173, "wurden": [173, 181], "eigen": [173, 192, 1147, 1152, 1159, 1164, 1165], "kapitel": [173, 330, 335, 1145], "behandelt": [173, 1142], "vorbeigehen": 173, "dcmake_cxx_flag": 174, "dcmake_install_prefix": [174, 445], "libgtest": [174, 175, 271, 273, 1135, 1137], "claim": [174, 365, 574, 576, 577, 832, 925], "simlp": 174, "concret": [174, 182, 208, 271, 455, 462, 467, 482, 544, 630, 632, 727, 734, 1007, 1102], "find_packag": [174, 176, 1137], "add_execut": [174, 440, 446, 452, 498, 534, 537, 540, 543, 546, 549, 552, 646, 960, 967, 972, 973, 1134, 1137, 1139], "add_test": [174, 453, 537, 1134, 1137], "emphasi": 174, "ultim": [174, 205, 225, 565, 730, 902], "luke": [174, 234, 1137], "thetoplevel": 174, "findgtest": [174, 176, 1137], "gtest_root": 174, "dgtest_root": 174, "paranoidli": 174, "bitrot": [175, 1137], "var": [175, 179, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 491, 797, 829, 859, 879, 884, 885, 888, 985], "libgmock": [175, 271, 273], "gmock": [175, 1135], "dcmake_build_typ": [175, 442], "loudli": [175, 565, 800, 910], "flathub": 176, "appstream": 176, "visualstudio": [176, 235, 350], "flatpakref": 176, "stone": 176, "snap": 176, "hate": [176, 559], "textual": [176, 178, 512], "findpackagehandlestandardarg": 176, "gtest_librari": 176, "gtest_include_dir": 176, "gtest_main_librari": 176, "378": [176, 218, 221, 228, 266, 308, 1052], "_fphsa_failure_messag": 176, "197": [176, 179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 259, 276, 280, 286, 298, 302, 308], "find_package_handle_standard_arg": 176, "occur": [176, 238, 357, 372, 377, 378, 424, 448, 531, 725, 795, 857, 886, 956, 1040, 1041, 1045, 1153], "gessmann": 176, "cpoint_demo": 176, "cmakefil": [176, 440, 446, 451, 972, 973], "cmakeoutput": 176, "sigh": [176, 208, 514, 717, 1086], "jail": 176, "dict_extensions_suit": 177, "thing_suit": 177, "xsv": 177, "dict_extens": 177, "wednesdai": [178, 186, 268], "thursdai": [178, 182], "publicli": [178, 547], "freedom": [178, 427, 633], "spontan": 178, "cost": 178, "agil": [178, 192, 437, 1122], "methodologi": 178, "formul": [178, 274, 439, 672, 730, 920, 1151], "diadact": [178, 1019], "anaconda": [178, 272, 1019], "dictat": [178, 288, 304, 376, 415, 965, 1019, 1020, 1104, 1121, 1123, 1150], "volumin": [178, 1019], "nodepad": [178, 1019], "configurabilti": [178, 1121], "eclips": [178, 1019, 1111], "pydev": [178, 1019], "seemingli": [178, 182, 971, 1019, 1095], "strang": [178, 901, 1019], "emac": [178, 198, 276, 857, 879, 971, 1019, 1121], "immutabilii": 178, "crisi": 178, "slept": 178, "lunch": 178, "squeez": 178, "Such": [178, 253, 257, 310, 695, 705, 711, 747, 750, 971, 1128], "takeawai": 178, "nonverb": 178, "antenna": 178, "Being": [178, 840, 881, 903, 1035], "stubborn": 178, "greybeard": 178, "distutil": 178, "azur": 178, "devop": [178, 1018], "heavyweight": [178, 336, 719], "reach": [178, 226, 639, 714, 736, 738, 756, 761, 828, 929, 1040], "afternoon": [178, 301], "simplic": [178, 477, 828, 895, 918, 992], "paral": 178, "imposs": [178, 238, 423, 459, 683, 694, 795, 947], "expand": [178, 234, 280, 397, 398, 900, 929, 971, 973], "entertain": [178, 182, 203, 206, 229, 255, 279, 301, 1095], "david": [178, 181, 182, 190, 203, 206, 229, 255, 270, 274, 275, 279, 296, 300, 301, 331, 332, 663, 712], "beazlei": [178, 181, 182, 190, 203, 206, 229, 255, 274, 275, 279, 296, 300, 301, 331, 332], "freelanc": 178, "raymond": [178, 181, 182, 185, 189, 190, 203, 206, 213, 229, 232, 255, 279, 301], "hetting": [178, 181, 182, 185, 189, 190, 203, 206, 213, 229, 232, 255, 279, 301], "bias": 178, "humor": [178, 901, 1040], "emphas": [178, 185, 207, 550, 752, 760, 777, 1123], "dissect": [178, 182, 270, 700, 999, 1095], "multiprocess": [178, 182, 232, 274, 275, 301, 1095, 1152, 1159, 1163], "truli": [178, 182, 1095], "chri": [178, 182, 203, 1095], "wilcox": [178, 182, 203, 1095], "frontier": [178, 182, 255, 279, 301, 1095], "whop": [178, 182, 255, 279, 301, 986, 1095, 1102], "simul": [178, 336, 337, 514], "covid": 178, "apart": [178, 238, 275, 390, 656, 895, 997], "ipykernel_launch": [179, 231, 234], "57bd7d77": 179, "6e54": 179, "4dcd": 179, "b7a8": 179, "452f82f88569": 179, "welt": [179, 189, 202, 325, 348, 1143, 1164], "doku": [179, 189, 256], "aeh": 179, "__doc__": [179, 202, 205, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 280, 298, 302, 308, 323, 325, 995, 1023, 1046], "interaktiven": 179, "modu": 179, "formatierung": [179, 189, 249], "\u00fcbernimmt": 179, "nachdem": [179, 189], "welch": [179, 219], "hamma": 179, "bieten": [179, 1162], "sech": [179, 189, 202, 234, 241, 266, 280], "zurueck": [179, 238, 276], "objektidentit\u00e4t": [179, 197], "0x7fe9d8578dc0": 179, "referenzieren": 179, "wechselt": 179, "zeigt": [179, 189, 1159], "identit\u00e4t": 179, "0x7fe9c4454d90": 179, "listen": [179, 185, 190, 191, 195, 230, 249, 302, 330, 781, 896, 912, 1111, 1158, 1163, 1165], "ausdrucksstark": 179, "trotzdem": [179, 1152, 1159], "lesbar": [179, 228], "beid": [179, 194, 210, 1166], "modifizieren": 179, "modifik": 179, "sichtbar": [179, 348], "gerechnet": 179, "valueerror": [179, 189, 205, 211, 218, 226, 228, 231, 234, 238, 241, 244, 247, 259, 266, 280, 298, 302, 308, 994, 1041], "typeerror": [179, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 298, 302, 308, 324, 993, 994, 1007, 1014, 1037, 1046, 1117], "gel\u00f6scht": 179, "retten": 179, "uff": 179, "140641996429568": 179, "\u00e4ndern": [179, 191, 1166], "erzeugt": [179, 189], "operanden": 179, "unver\u00e4ndert": 179, "new_l": [179, 234, 1027], "140641996429632": 179, "hurra": [179, 196, 259], "killerfeatur": 179, "abcabc": [179, 218], "sequentiel": [179, 189, 228, 233, 1147], "suche": 179, "Suche": [179, 191, 202, 210, 228], "umst\u00e4ndlich": [179, 189], "andrea": [179, 180, 238, 676, 683], "pfeifer": 179, "gefundener_us": 179, "glauben": 179, "klammern": 179, "begrenz": 179, "interpretiert": 179, "overriden": 179, "ausdruck": 179, "evaluierungsreihenfolg": 179, "9223372036854775808": 179, "einstellig": 179, "schreibt": [179, 885, 1166], "datenmengen": 179, "abzulegen": 179, "sucht": 179, "solchen": [179, 189], "vorstellungsvermoegen": 179, "milliarden": 179, "sebastian": 179, "hugo": [179, 221], "machma": 179, "behandeln": 179, "nichtvorhandensein": 179, "ausnahm": 179, "regel": 179, "mim": 179, "victor": 179, "festzustellen": 179, "evaluiert": 179, "aufgerufen": 179, "operand": [179, 196, 215, 218, 244, 374, 375, 376, 382, 573, 574, 576, 577, 672, 705, 1014, 1028], "bereit": [179, 190, 1142, 1147, 1158], "gesamtergebni": 179, "jaja": [179, 234], "rechten": 179, "sparen": 179, "potschert": [179, 191, 194, 197, 221, 228, 241, 308], "berechnung": [179, 228], "summ": [179, 202, 228, 234, 238, 241, 266, 291], "einzig": [179, 483, 497, 1161, 1164], "iteriert": [179, 189], "bildet": [179, 234], "primitiveren": 179, "intelligenteren": 179, "0x7fe9c43c3c90": 179, "letzt": [179, 194, 239], "schleif": [179, 190, 191, 195, 1158], "jede": [179, 330, 335, 1142, 1165, 1166], "selb": [179, 189], "k\u00fcrzer": 179, "vergleicht": 179, "objektidentit\u00e4ten": 179, "objektinhalt": 179, "modifiziert": 179, "kopieren": [179, 330, 335, 1147], "vermeintlich": 179, "modifiktionen": 179, "sch\u00fctzen": 179, "l3": [179, 196, 228, 234, 244, 256, 266, 276, 286, 308, 477], "kopi": [179, 228], "klar": [179, 189, 1143], "geschachtelt": [179, 190, 191, 1158], "gleicher": 179, "referenziert": [179, 189], "erachtet": 179, "ersparst": 179, "kopien": 179, "ran": [179, 251, 301, 445, 462, 511, 512, 513, 514, 575, 714, 988, 1135], "parametern": [179, 202], "beliebigen": [179, 885], "definieren": 179, "vergleichbar": 179, "unterst\u00fctzen": 179, "ihn": [179, 238], "\u00e4pfel": 179, "birnen": 179, "verglichen": 179, "hingegen": [179, 189, 1161], "php": [179, 209, 225, 717], "falschem": 179, "uebergeben": 179, "vergleich": [179, 202, 210, 239, 249], "aepfeln": 179, "140641996137808": 179, "add_to_list": 179, "__defaults__": [179, 228, 238, 259, 280, 1037], "meine_list": [179, 189], "defaultwert": 179, "benutzt": [179, 1152], "allerhand": 179, "seiteneffekten": 179, "aufpassen": 179, "ewig": 179, "existierend": 179, "unf\u00e4ll": 179, "wechselwirkungen": 179, "eventuellen": 179, "globalen": [179, 189], "156": [179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "erzwingt": 179, "158": [179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 263, 276, 280, 286, 298, 302, 308], "160": [179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 256, 259, 270, 276, 280, 286, 298, 302, 308, 444, 750], "gesucht": 179, "genauer": 179, "n\u00e4chst\u00e4u\u00dferen": 179, "162": [179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "nirgend": 179, "163": [179, 189, 196, 212, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "gibtsnetglob": 179, "gibtsnet": 179, "164": [179, 189, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "nameerror": [179, 194, 228, 234, 259, 280, 286, 994, 1036], "aufgabenstellung": 179, "kandidat": 179, "ersten": [179, 181, 194, 286, 322, 1144, 1164, 1166], "unsportlich": 179, "zweiten": [179, 181, 286], "unnachhaltig": 179, "dritten": [179, 286], "gelegenheit": 179, "gab": [179, 181], "erz\u00e4hlen": [179, 1145], "165": [179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 1052], "seq": [179, 197, 259, 787, 959, 997], "fromkei": [179, 225, 230, 242], "166": [179, 189, 196, 218, 221, 226, 228, 234, 238, 241, 256, 259, 276, 280, 286, 298, 302, 308], "167": [179, 189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "xxx": [179, 196, 218, 226, 228, 234, 244, 266, 298, 302, 308, 324, 326, 406, 482], "kksvjhbsk": 179, "sgkysdudsvvc": 179, "dict_kei": [179, 247, 276, 1043], "diesmal": 179, "169": [179, 189, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 276, 280, 286, 298, 302, 308], "170": [179, 196, 205, 212, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "irgendein": [179, 211], "171": [179, 196, 198, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302, 308, 327], "sonst": [179, 189, 226, 228, 241], "kategori": 179, "number_str": 179, "173": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 888], "ihm": [179, 181, 190], "174": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 276, 280, 286, 298, 302, 308, 879], "176": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 280, 286, 298, 302, 308], "177": [179, 196, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "178": [179, 196, 205, 218, 221, 226, 228, 234, 238, 241, 247, 256, 259, 276, 280, 286, 298, 302, 308], "179": [179, 186, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "180": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 439, 781], "181": [179, 196, 218, 221, 226, 228, 234, 238, 241, 256, 259, 266, 276, 280, 286, 298, 302, 308, 439], "heisst": [179, 191, 195, 196, 1146, 1152], "sequenz": 179, "kopiert": 179, "unterschi": [179, 196, 202, 226], "sobald": [179, 181], "183": [179, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "\u00fcbergeben": 179, "184": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "it1": 179, "it2": 179, "multipli": [179, 206, 219, 238, 280, 662], "n2": [179, 238], "combined_iter": 179, "186": [179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "schlecht": 179, "simplen": 179, "transformationen": 179, "generieren": 179, "quadratzahlen": [179, 228], "187": [179, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302], "quadrat": 179, "naeherung": 179, "performant": 179, "gen_squar": 179, "189": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 276, 280, 286, 298, 302], "syntaktisch": [179, 202], "191": [179, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 247, 256, 259, 276, 280, 286, 298, 302], "genexpr": [179, 205, 298, 308], "0x7fe9c43f2900": 179, "193": [179, 196, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "194": [179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 280, 286, 298, 302, 308], "195": [179, 196, 218, 221, 226, 228, 231, 234, 238, 241, 247, 259, 280, 286, 298, 302, 308], "indent": [179, 194, 212, 219, 225, 234, 235, 385, 1017, 1020, 1030, 1120], "196": [179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308], "userlist": 179, "nochwa": [179, 228, 266], "dropdown": 179, "dropdownlist": 179, "fehleranf\u00e4llig": 179, "198": [179, 196, 205, 218, 221, 226, 228, 231, 234, 238, 241, 247, 259, 266, 276, 280, 286, 298, 302, 308], "202": [179, 196, 205, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 280, 286, 298, 302, 439, 462], "203": [179, 196, 205, 207, 218, 221, 226, 228, 231, 234, 238, 241, 256, 259, 280, 286, 298, 302, 308], "205": [179, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "206": [179, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 280, 286, 298, 302, 308], "207": [179, 205, 218, 221, 226, 228, 234, 238, 241, 244, 259, 280, 286, 302, 308], "208": [179, 218, 221, 226, 228, 234, 238, 241, 244, 259, 280, 286, 298, 302, 308], "209": [179, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 280, 286, 298, 302, 308], "user_a": 179, "user_b": 179, "n\u00e4herung": 179, "nackten": [179, 1145], "210": [179, 205, 218, 221, 226, 228, 234, 238, 241, 259, 266, 280, 286, 298, 302, 308], "hantiert": [179, 1146], "anderem": [179, 1152, 1159], "211": [179, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 302, 308], "reviewten": 179, "funktionsaufruf": [179, 241], "sonder": 179, "stackoverflowprogrammierung": 179, "entgegenwirken": 179, "ausholen": 179, "212": [179, 205, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 280, 286, 298, 308], "veloc": [179, 205, 326, 1037], "length_m": [179, 205, 326, 1037], "time_": [179, 205, 326, 1037], "213": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 280, 286, 308], "spiel": 179, "214": [179, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 280, 286, 298, 308], "liegen": 179, "positionel": 179, "215": [179, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 280, 286, 308], "param": [179, 189, 202, 219, 247, 280, 668, 717, 718, 902, 958], "216": [179, 205, 218, 221, 226, 228, 234, 238, 241, 256, 259, 266, 280, 286, 298, 302, 308], "217": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302, 308], "218": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308], "219": [179, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 308], "entpacken": 179, "positionellen": 179, "221": [179, 205, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302], "kwarg": [179, 205, 232, 234, 238, 259, 280, 992, 996, 1017], "explizi": 179, "rauskletzeln": 179, "223": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 280, 286, 298, 302, 308, 1108], "celebrate_another_birthdai": 179, "224": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 280, 286, 302, 308], "227": [179, 218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 308], "228": [179, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 280, 286, 298, 308], "zeiterfassung": 180, "__pycache__": [180, 206, 219], "supp": 180, "cpython": [180, 205, 215, 221, 231, 234], "pyc": 180, "dienstag": 181, "anleitung": 181, "offen": [181, 348, 1142], "vorwissen": [181, 1147], "konkreten": [181, 348], "aufgabenstellungen": 181, "dienstgeb": 181, "mitgebracht": 181, "quickstart": [181, 1153], "vorgetragen": 181, "wenngleich": [181, 348, 1152, 1162, 1164, 1165], "un\u00fcblichen": 181, "reihenfolg": [181, 1143], "verbrachten": 181, "firmenprojekt": 181, "entspringenden": 181, "festgehalten": 181, "empfehlungen": 181, "weitergehen": 181, "k\u00f6nnte": [181, 1166], "idiomat": [181, 182, 185, 203, 206, 213, 229, 232, 255, 279, 1095], "lieblingsphras": 181, "bringt": [181, 1145, 1164], "forgiv": [181, 182, 279, 1095], "eafp": [181, 182, 279, 1095], "begriff": [181, 195], "viertelstund": 181, "regex": [181, 194, 219, 221, 246, 247, 256, 279, 286, 1039, 1095], "unumg\u00e4nglich": [181, 1160], "textuel": 181, "analysieren": 181, "hero": [181, 182, 203, 206, 229, 255, 279, 301, 1095], "unterhaltsamen": 181, "keynot": [181, 182, 203, 206, 229, 232, 255, 279, 301, 1095], "konferenz": 181, "pydata": [181, 182, 203, 206, 229, 255, 279, 301, 1095], "chicago": [181, 182, 203, 206, 229, 255, 279, 301, 1095], "witzig": 181, "kommt": [181, 196, 206, 209, 235, 1155, 1164, 1166], "selten": 181, "l\u00e4nge": 181, "ganzen": [181, 190, 1158], "abend": 181, "totalschaden": 181, "\u00fcbertragen": 181, "jedem": 181, "angemeldet": 181, "experienc": [182, 271, 273, 300, 348, 1023, 1153], "machinelearn": 182, "fuzzi": [182, 221], "improvis": 182, "shall": 182, "jango": 182, "rush": 182, "strong": [182, 232, 375, 1102, 1104], "claus": [182, 185, 215, 221, 231, 236, 258, 677, 997, 1030, 1033], "whet": [182, 265], "appetit": [182, 265], "get_temperatur": [182, 234, 297, 456, 459, 460, 462, 467, 469, 479, 480, 485, 487, 488, 490, 493, 494, 498, 501, 506, 507, 508, 509, 513, 514, 515, 526, 544, 665, 713, 714, 715, 716, 734, 736, 738, 739, 740, 741, 1007, 1083], "__dict__": [182, 202, 205, 206, 218, 219, 228, 231, 234, 238, 247, 259, 276, 280, 298, 1008, 1014], "con": [182, 734, 882, 988], "fiction": 182, "get_temperature_celsiu": 182, "competitor": 182, "eana": 182, "get_temperature_fahrenheit": 182, "eanaadapt": 182, "unserthermomet": 182, "revisit": [182, 224, 232, 255, 273, 297, 590], "shift": [182, 223, 415, 427, 559, 608, 902, 1014], "visitor": [182, 731, 739, 741], "gang": [182, 1151], "idiom": [182, 556, 693], "classic": [182, 414, 465, 556, 735, 749, 750, 789, 1151], "travers": [182, 428, 701, 713, 994, 999, 1035], "convolut": 182, "__call__": [182, 228, 238, 259, 280, 286, 993], "__str__": [182, 205, 206, 219, 228, 231, 234, 238, 256, 259, 280, 297, 298, 341, 994], "__repr__": [182, 228, 231, 234, 238, 256, 259, 280, 298], "poor": [182, 224, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750, 787, 894, 924, 969], "deleg": [182, 311, 565, 695, 749, 750, 1148], "deck": [182, 207, 533], "sensordata": 182, "sensordata_test": 182, "historydata": 182, "slowli": [182, 550, 655, 779, 894], "csvreport": 182, "csv2sqlite3": 182, "frontend": [182, 566, 971, 989, 1124], "flaskerl": 182, "reiter": [182, 203, 222, 224, 229, 232, 338, 567, 1095], "phrase": [182, 185, 203, 226, 228, 229, 232, 234, 259, 824, 825, 1012, 1095], "impress": [182, 413], "brought": [182, 427, 1003], "cloth": 182, "extraordinari": 182, "mondai": [183, 185, 187, 188, 213, 262, 268, 271, 273], "preliminari": [183, 185, 186, 187, 188], "homogen": [183, 348], "versu": [183, 185, 187], "immut": [183, 185, 187, 189, 190, 197, 204, 206, 217, 218, 219, 221, 227, 233, 236, 242, 248, 257, 265, 267, 268, 281, 298, 302, 309, 325, 397, 1018, 1025, 1026, 1027, 1031, 1158], "datastructur": [183, 207, 225, 1031], "exercise4": 183, "uh2ebfw8oym": [183, 187], "f26namfjggw": 183, "5qqq3yzbkp8": 183, "ugharkscop9uthgcoaec": 183, "pairwis": [184, 218, 572], "vale": 184, "bewar": [184, 376, 901, 969, 1100, 1102], "cheaper": [184, 427, 574, 576, 577, 655], "memorywis": 184, "johann": 184, "syntact": [184, 205, 384, 527, 567, 655, 707], "sugar": [184, 655, 707], "allow": [184, 185, 205, 234, 370, 437, 642, 715, 748, 779, 802, 1057, 1128, 1148], "retval": [184, 423, 613, 940], "dlc": 184, "msg1": 184, "readabl": [184, 228, 238, 272, 363, 394, 398, 418, 419, 420, 427, 437, 439, 498, 612, 633, 648, 656, 659, 694, 705, 707, 713, 718, 719, 832, 842, 848, 853, 857, 879, 904, 971, 997, 1016, 1037, 1045, 1047, 1066], "0x7f41f5ff26a0": 184, "msglist": 184, "0x7f41f5ff4160": 184, "0x7f41f5ff41c0": 184, "291130": 184, "now_timestamp": 184, "1603884859": 184, "3412576": 184, "fromtimestamp": 184, "341258": 184, "372": [184, 221, 228, 266], "45259": 184, "microsecond": [184, 418, 834], "programmverweis": 185, "xy": [185, 228, 231, 266, 575, 1035], "zab": 185, "eventcodefil": 185, "definedlisaev": 185, "event_id": 185, "bla": [185, 308], "blubb": 185, "verbessert": 185, "stringformatierung": 185, "ctype": 185, "headerfil": [185, 885], "lst": [185, 221, 839, 1143], "callbackfunc": 185, "datetim": [185, 206, 212, 213, 214, 219, 267, 270, 307, 308, 1052], "observ": [185, 254, 272, 315, 454, 461, 475, 478, 489, 503, 555, 750, 1000, 1001, 1107, 1151], "longish": 185, "resurrect": [185, 440, 857], "outputsequ": 185, "resist": 185, "uncondition": [185, 800, 994], "suitabl": [185, 234, 280, 770, 894, 943, 1007, 1016], "analysi": [185, 427, 735, 1097, 1100, 1113], "cp1252": [185, 1089, 1090, 1092], "csvlog": 185, "csv_reader": 185, "recv": [185, 186, 897], "tuesdai": [186, 268, 283], "246": [186, 218, 221, 226, 228, 231, 234, 241, 259, 276, 280, 286, 308, 1108], "corpor": [186, 259], "commandin": [186, 188], "comress": [186, 188], "gzip": [186, 188, 252, 261, 282, 283, 750, 797, 820, 822, 823, 827, 893, 981, 982, 1154], "diagnos": [186, 188, 331, 332, 1152, 1159], "netstat": [186, 188, 261, 282, 283, 1111, 1152, 1159], "netcat": [186, 188, 261, 282, 283], "subshel": [186, 188, 198], "telnetd": 186, "insecur": [186, 910], "proto": 186, "foreign": [186, 262, 398], "34490": 186, "56062": 186, "sshd": [186, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 829, 833, 835, 888, 904, 914], "systemctl": [186, 985, 1111], "freedesktop": 186, "systemd1": 186, "quickli": [186, 273, 288, 300, 301, 304, 333, 397, 457, 902, 1150], "unprivileg": 186, "putti": [186, 198, 327], "puttygen": 186, "id_rsa": [186, 910], "authorized_kei": [186, 910], "trivia": 186, "hoorai": [186, 231, 244, 266, 1030], "idiot": 186, "blinker": 186, "briana": 186, "mac": [186, 203, 219, 857, 1021, 1095, 1131], "wakeup": [187, 224, 301, 341, 345, 727, 750, 793, 893, 902, 921, 934, 944, 954, 956], "patrick": 187, "1996": [187, 221], "wagna": 187, "gernot": 187, "1982": [187, 221], "birthplac": 187, "txt2json": 187, "equip": [188, 262, 338, 894, 1152, 1159], "wobei": 189, "deppert": [189, 202, 325], "sidestep": 189, "builtin_function_or_method": [189, 259, 286, 308], "sozusagen": 189, "genauso": [189, 1142], "aufrufen": [189, 885], "zaehler": 189, "initialwert": 189, "zaehlen": 189, "naechsten": 189, "schleifendurchlauf": 189, "locker": [189, 795], "mein_integ": 189, "1024": [189, 221, 828, 834, 857, 919], "sch\u00fctzt": 189, "passen": [189, 256], "gehandhabt": 189, "1267650600228229401496703205376": [189, 215, 218, 226, 238, 244, 266], "hoch": 189, "rechnen": [189, 330, 335], "tut": [189, 298, 325, 1145], "ausschliesslich": [189, 1154], "ganzzahldivis": 189, "ganzzahligen": 189, "resultat": 189, "gleichen": [189, 1152, 1165], "vorrang": 189, "ghi": [189, 228], "viert": 189, "nwelt": 189, "nwie": 189, "linefe": [189, 198, 219, 226, 359, 360, 1039, 1045, 1075, 1120], "bedeutung": [189, 1147, 1154], "unangetastet": 189, "glump": 189, "nebenlaeufigkeitsdemo": 189, "ebenlaeufigkeitsdemo": 189, "l\u00f6sung": [189, 202, 211, 348, 896], "formatierungsm\u00f6glichkeit": 189, "pfx_var1": 189, "pfx_var2": 189, "ausgab": [189, 1145], "notwendig": [189, 1144, 1160, 1161], "abzubrechen": 189, "ignorieren": [189, 190, 196, 1158], "gefunden": [189, 259, 885], "value1": [189, 1055], "501": [189, 221, 1055], "value2": [189, 1055], "799": [189, 218, 221, 1052, 1055], "value3": [189, 1055], "sprachen": [189, 190, 1145, 1158], "neg": [189, 234, 238, 308, 376, 418, 423, 635, 775, 888, 1135], "indiz": 189, "erscheinen": 189, "komisch": 189, "bequem": 189, "mapping_t": 189, "f\u00fcnf": [189, 1152], "sieben": [189, 202, 228, 613], "neun": 189, "explicit": [189, 208, 215, 219, 228, 236, 238, 373, 382, 410, 423, 427, 440, 482, 483, 496, 497, 533, 559, 561, 562, 586, 612, 655, 656, 665, 672, 677, 685, 692, 697, 712, 715, 768, 923, 937, 969, 989, 990, 1020, 1023, 1026, 1103, 1116], "implicit": [189, 215, 228, 238, 363, 369, 373, 538, 654, 656, 672, 857, 926, 1012, 1026], "primzahlen": 189, "checken": 189, "primzahl": [189, 190, 1158], "checkenden": 189, "zahl": [189, 196, 202, 227, 228, 231, 241, 325], "probier": 189, "gach": [189, 228], "teiler": 189, "teiler_kandidaten": 189, "prim": 189, "gleichema\u00dfen": 189, "vollst\u00e4ndigkeit": 189, "halber": 189, "startend": [189, 228], "schrittweit": 189, "0x7f24f2ac0e50": 189, "ablegen": 189, "0x7f24f2ac0e70": 189, "arschlangsam": 189, "num_comparison": 189, "datenstruktur": [189, 210], "suchen": [189, 210, 884, 1147, 1154], "einf\u00fcgen": [189, 1152], "optimiert": [189, 202], "perfekt": 189, "einitreten": 189, "himmi": 189, "list_reverseiter": [189, 218, 241, 266], "0x7f24ec31d190": 189, "bricht": 189, "beinhart": 189, "liefert": [189, 1154], "lieber": 189, "zweit": [189, 202, 228, 259, 298, 325, 1152], "po": [189, 228, 234, 238, 259, 264, 276, 280, 302, 308, 439, 515, 608, 635], "wirklichkeit": 189, "ordin\u00e4r": 189, "alternativen": 189, "fruit": 189, "gemma": 189, "divisor_candid": 189, "161": [189, 196, 218, 221, 226, 228, 231, 234, 238, 241, 244, 256, 259, 276, 280, 286, 298, 302, 308], "wegen": 189, "dogma": 189, "zugewiesen": 189, "meine_vari": 189, "eine_vari": [189, 266, 276, 308], "angelegt": 189, "streng": 189, "obigem": 189, "dazusagen": 189, "noch_eine_globale_vari": 189, "increment_diese_vari": 189, "offiziel": [190, 192, 200, 203, 206, 207, 209, 225, 237], "leitfaden": 190, "kommentar": [190, 191, 202, 266, 325, 1158], "platziert": [190, 210], "hackereien": 190, "gleicherma\u00dfen": 190, "sogenannten": 190, "semantik": [190, 191, 1158], "sprach": [190, 191, 1145, 1146, 1147, 1158, 1159, 1166], "standarddatentypen": [190, 191, 1158], "literal": [190, 191, 249, 1158], "python2": [190, 228, 1158], "endg\u00fcltig": [190, 1158], "rausl\u00f6schen": [190, 1158], "konstanten": [190, 191, 1158], "typen": [190, 196, 1154, 1158, 1164], "operatoren": [190, 191, 885, 1147, 1158], "angeschnitten": [190, 1158], "vertiefung": [190, 206, 1158], "nocheinm": [190, 348, 1158], "ausdr\u00fcck": [190, 191, 249, 1158], "operatorrangfolgen": [190, 191, 1158], "grundlegenden": [190, 331, 1154, 1158], "sprachelementen": [190, 1158], "rede": [190, 1158], "syntaxdiagramm": [190, 1158], "gespritzt": [190, 1158], "gesamt": [190, 1158], "sperrig": [190, 1158], "n\u00fctzt": [190, 1158], "menschlich": [190, 1158], "abzubilden": [190, 1158], "tabel": [190, 1158], "anweisungen": [190, 191, 1158], "gro\u00dfen": [190, 1158], "fisch": [190, 1158], "instruktiv": [190, 1158], "bedingungen": [190, 191, 1144, 1158], "verzweigungen": [190, 191, 1158], "bedingt": [190, 191, 1145, 1158], "anweisung": [190, 191, 1158], "formulierungen": [190, 1158], "mehrfach": [190, 191, 1158], "fallauswahl": [190, 191, 1158], "benutzereingaben": [190, 1158], "\u00fcberpr\u00fcfen": [190, 1158], "schleifenkonstrukt": [190, 1158], "weitgehend": [190, 1158], "unserem": [190, 1158], "vehikel": [190, 1158], "hilfreich": [190, 1154, 1158], "klarstellung": [190, 1158], "fu\u00dfgesteuert": [190, 191, 1158], "z\u00e4hlergesteuert": [190, 191, 1158], "auslassen": [190, 1158], "kopfgesteuert": [190, 191, 1158], "gewinnt": [190, 1158], "konsol": [190, 1158], "anzeigen": [190, 1154, 1158], "voraussetzung": [190, 1158], "ausblick": [190, 1158], "schnell\u00fcbersicht": [190, 191, 1158], "sprunganweisungen": [190, 191, 1158], "endlosschleifen": [190, 191, 1158], "naja": [190, 1158], "reinschauen": [190, 1158], "mager": [190, 1158], "ausgelassen": [190, 1158], "eindimensional": [190, 191, 1158], "gefolgt": [190, 228, 1158], "zeichenketten": [190, 191, 1158], "tupel": [190, 191, 194, 1158], "besonder": [190, 191, 1158], "stapel": [190, 191, 1158], "schlangen": [190, 191, 1158], "tempo": [190, 1158], "schauma": [190, 196, 1158], "fallt": [190, 1158], "gscheit": [190, 197, 308, 1158], "gemeinsam": [190, 1142, 1144, 1158, 1161], "dr\u00fcber": [190, 1158], "vielzahl": [190, 1158, 1162, 1165], "l\u00f6sungsm\u00f6glichkeiten": [190, 1158], "eingegangen": [190, 1142, 1158, 1162], "pythonischst": [190, 1158], "bestritten": [190, 1158], "unterprogramm": [190, 191, 1158], "parameter\u00fcbergab": [190, 191, 1158], "r\u00fcckgabewert": [190, 191, 1158], "inner": [190, 191, 211, 439, 993, 1158], "standardbibliotheken": [190, 191, 1158], "funktionalit\u00e4ten": [190, 191, 1158], "berechnet": [190, 226, 234, 1158], "satz": 190, "gepr\u00e4gt": 190, "konferenzen": 190, "definitiv": 190, "sehenswert": 190, "anf\u00e4nger": [190, 1161], "hochinteress": 190, "sprachelement": 191, "elementar": 191, "beliebig": [191, 226, 1159], "gro\u00df": [191, 1164], "vergleichsoperatoren": 191, "strichrechnung": 191, "modulo": [191, 202, 215, 221, 226, 234, 325, 374, 1014, 1026], "un\u00e4rer": 191, "negat": [191, 215, 238, 886, 1014, 1026, 1044], "konvertierungen": [191, 1145], "pr\u00e4zendenzregeln": 191, "vertauschen": [191, 202, 325], "kontrollstrukturen": [191, 227, 1145], "verzweigung": 191, "schleifen": [191, 249, 1144], "versuch": [191, 203], "hybrid": [191, 629], "supergscheit": 191, "prozeduren": 191, "funktionen": [191, 195, 249, 331, 1144, 1145, 1147, 1155], "funktionspoint": 191, "funktionsobjekt": 191, "primzahlenbeispiel": 191, "laufzeitfehl": 191, "lokal": [191, 202, 248, 249, 1165], "zuweisen": 191, "fehlerfal": 191, "anschliessend": 192, "interaktiv": 192, "uebungen": 192, "idealerweis": [192, 266], "ueblichen": 192, "negoti": 193, "deiniti": [193, 775, 1153], "unload": [193, 777, 791, 793, 1153], "synchronizt": 193, "spinlock": [193, 750, 774, 789, 795, 799, 801, 805, 806, 812, 815, 816, 818, 893, 957, 1153], "rcu": 193, "halv": 193, "softirq": 193, "tasklet": [193, 795], "irss": 193, "kmalloc": [193, 750, 759, 764, 767, 768, 769, 774, 778, 787, 788, 792, 794, 801, 806, 809, 812, 815, 818, 893], "dma": [193, 750, 774, 792, 794, 836, 893, 918, 919, 920, 1153], "coher": [193, 768], "20201125": [194, 196], "unbekannten": 194, "lookup_t": [194, 197, 325], "12345": [194, 226, 238, 266, 1129], "noch_eine_list": 194, "gesamte_list": 194, "vorl\u00e4ufig": 194, "letz": 194, "indented_text": 194, "nebenbei": [194, 196, 325], "eine_zum_sterben_verurteilte_vari": 194, "ein_set": 194, "sequenzen": 194, "grottenlangsam": 194, "subscript": [194, 228, 298, 403, 590, 611, 615, 1116], "multiple_return_valu": 194, "xyz": [194, 196, 202, 221, 228, 259], "mein_formatierter_str": 194, "my_rang": [194, 234, 280, 286, 308], "retlist": 194, "zeichenkett": 194, "funktionieren": [194, 1147, 1165], "my_list": [194, 205, 247], "airms_eth": 194, "simplizistisch": 194, "bl\u00f6d": 194, "i_oder_v": 194, "iv": 194, "rms_eth": 194, "vorcompilieren": 194, "acirms_eth": 194, "my_regex": 194, "zeilennumm": 194, "dazuhaben": 194, "meine_zu_sendenden_daten": 194, "345": [194, 215, 221, 234, 266, 298, 308], "234": [194, 218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 276, 280, 286, 298, 302, 308, 325], "meine_zu_sendenden_daten_in_string_form": 194, "ueblicherweis": 194, "ueber": 194, "verschickt": 194, "empfangen": [194, 209], "geschrieben": [194, 1165], "empfaeng": 194, "empfangenen": 194, "natuerlich": 194, "zurueckkonvertieren": 194, "meine_empfangenen_daten_python_form": 194, "gegangen": [194, 247], "wurscht": [194, 234, 308, 885], "returnwerten": 195, "containerdatentypen": 195, "untypisiert": 195, "zeilen": [196, 238, 1154], "neiner": 196, "nund": [196, 215], "nb": 196, "stoppt": 196, "newlin": [196, 198, 211, 234, 259, 276, 321, 352, 359, 372, 1023, 1039], "ndrin": 196, "drin": [196, 197, 202, 238, 266, 276, 325, 330], "zuviel": [196, 1147], "mischt": 196, "unsupport": [196, 218, 244, 1014], "140546731085392": 196, "0x7fd395fb0e50": 196, "0x7fd3900395b0": 196, "new_t": [196, 1027], "0x7fd390052800": 196, "667": [196, 218, 221, 241, 247, 550], "2923750584022716461": 196, "529344067295497451": 196, "unhash": [196, 256, 266, 280, 308], "fuenf": [196, 218, 228, 256, 266, 280, 298, 325], "verschluckt": 196, "6000000": 196, "elementen": [196, 210], "nonetyp": [196, 206, 220, 221, 276, 286, 298], "_io": [196, 215, 218, 221, 231, 234, 266, 280, 322, 799], "textiowrapp": [196, 215, 218, 221, 231, 234, 266, 280, 322, 992], "oi": 196, "456": [196, 197, 221, 228, 266, 372], "hansi": [196, 234, 238, 241], "linspac": [196, 302], "11111111": 196, "22222222": 196, "33333333": 196, "44444444": 196, "55555556": 196, "66666667": 196, "77777778": 196, "88888889": 196, "sin": 196, "8961922": 196, "79522006": 196, "19056796": 196, "96431712": 196, "66510151": 196, "37415123": 196, "99709789": 196, "51060568": 196, "54402111": 196, "plot": [196, 215, 244, 247, 298, 302, 308, 991, 1049, 1101, 1102], "line2d": [196, 244, 247, 298, 302, 308], "0x7fd35cd3ef40": 196, "splev": 196, "splrep": 196, "spline": 196, "represent": [196, 215, 234, 701, 807, 901, 902], "spl": 196, "evalu": [196, 215, 220, 226, 236, 355, 375, 380, 382, 390, 397, 398, 476, 477, 490, 491, 662, 672, 840, 857, 994, 1028, 1030, 1037, 1135], "x2": [196, 238], "y2": 196, "0x7fd341a486d0": 196, "speicher": [197, 1145, 1152, 1159], "sch\u00fctze": 197, "gemischten": 197, "operationen": [197, 1164], "interpol": [197, 238, 1100], "lag": 197, "gib": [197, 276], "depp": [197, 226], "ret_l": 197, "uniq_l": 197, "read_excel": [197, 1100], "invit": [198, 629], "effici": [198, 243, 297, 387, 426, 428, 430, 591, 595, 605, 608, 710, 841, 888, 890, 999, 1102, 1113, 1116, 1153], "expans": [198, 885, 886, 1144], "ecdsa": [198, 327], "fingerprint": [198, 327, 905, 956], "sha256": [198, 327, 905], "in22o4vcd400x0bb4flcb5": [198, 327], "vqnrvkvoirgfqq6mapo": [198, 327], "perman": [198, 327], "individu": [198, 327, 379, 437], "sat": [198, 327], "straight": [198, 677, 1117], "startung": 198, "standpoint": 198, "suboptim": [198, 247], "pwned": 198, "hidden": [198, 468, 663, 770, 971], "clumsi": [198, 224, 225, 265, 268, 453, 457, 557, 565, 573, 586, 613, 655, 718, 991, 992, 1008, 1009, 1116, 1148], "clumsier": 198, "dumpbin": 198, "hmoe": 198, "frcoll": 198, "bunch": [198, 719, 824, 983, 1007], "oom": [198, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 998], "killer": [198, 218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 1032], "amoc": 198, "snapshot": [198, 697, 730, 835, 983], "tinkernut": 198, "raspberi": 198, "awesom": [198, 1128], "tunnel": [198, 264, 904, 912, 923], "centric": [198, 1153], "virtualbox": [198, 836], "cygwin": [198, 251, 253, 271, 836], "assort": 198, "nano": 198, "univers": [198, 273, 514, 923, 1020, 1153], "scripe": 198, "voellig": 202, "wohl": [202, 286, 1145, 1166], "selbsterklaerend": 202, "printet": 202, "builtin": [202, 208, 215, 221, 222, 231, 234, 238, 259, 280, 297, 298, 308, 857, 995], "accur": [202, 234, 238, 259, 280, 432], "__weakref__": [202, 218, 228, 231, 234, 238, 247, 259, 280, 298], "weak": [202, 234, 238, 259, 280, 298, 716, 1102], "_abc": [202, 215, 221, 231, 234], "_1": [202, 718, 719], "a123": 202, "vernichten": 202, "laufzeit": 202, "140032702361168": 202, "refcount": [202, 714, 716, 992, 1148], "dezim": 202, "oktal": 202, "0o755": [202, 238, 325], "493": [202, 221, 238], "0b11": [202, 238, 241], "sql": [202, 213, 225, 1104, 1107], "0b11111111": 202, "ordnung": 202, "uhrzeit": 202, "vormittag": 202, "6666666666666666": [202, 238], "nda": [202, 256], "python_dir": 202, "jan": [202, 231, 234, 321, 322, 339, 372, 761, 853, 879, 937, 971, 985, 1022], "lowercas": [202, 234, 280, 857, 904, 1040, 1057, 1062], "140032636418048": 202, "ein_iterierbares_d": 202, "extraw\u00fcrschtl": 202, "sex": [202, 215, 237, 238, 1057], "diver": 202, "translation_t": [202, 238, 241, 244], "bag": [202, 250, 251, 253, 440, 450, 747, 749, 750, 965, 1027], "green": [202, 238, 479, 514, 515, 575, 894], "blue": [202, 210, 218, 238, 1052], "mengenoperationen": 202, "set1": 202, "set2": 202, "symm_diff": 202, "lisa": 202, "eugeni": [202, 205], "okan": 202, "mcguir": 202, "sinner": 202, "vornam": [202, 210, 211], "nachnam": [202, 210, 211], "persnr": 202, "personalnumm": 202, "5000": [202, 215, 221, 1011], "4000": [202, 221], "3000": [202, 215, 221, 241, 280], "15000": [202, 221], "uppercas": [202, 234, 280, 857, 1040, 1057], "verfuegbar": 202, "restlichen": 202, "gehaelt": 202, "konstant": [202, 210, 233], "unexpect": [202, 417], "pcap": [203, 223], "certifi": 203, "math": [203, 206, 216, 218, 219, 221, 229, 238, 243, 246, 279, 285, 308, 557, 559, 1020, 1095], "statist": [203, 216, 229, 238, 243, 246, 279, 285, 431, 959, 1079, 1095, 1100, 1128], "undo": [203, 857, 1095], "brad": [203, 1095], "traversi": [203, 1095], "evaluierung": 204, "eval": [204, 232, 233, 242, 260, 274, 275, 280, 287, 296, 299, 300, 1016], "openfil": 205, "hanld": 205, "soemth": [205, 811], "zf": 205, "namelist": 205, "zipdemo": 205, "extracted_nam": 205, "isinst": [205, 206, 219, 221, 234, 247, 259, 1014, 1117], "superclass": [205, 206, 219, 234], "subclass": [205, 206, 219, 234, 238, 994, 1011], "class1": 205, "class2": 205, "salari": 205, "selina": 205, "orgl": 205, "8010": [205, 221, 439], "birth": [205, 231, 244, 557, 748, 1084, 1085, 1086, 1087, 1090, 1091, 1092], "1622102062": 205, "4778333": 205, "019427776336669922": 205, "009679079055786133": 205, "daniel": [205, 208, 321, 322, 339], "ortner": 205, "num_employe": 205, "__first": 205, "__last": 205, "__address": 205, "_person__first": 205, "_person__last": 205, "_person__address": 205, "_first": 205, "_last": 205, "_address": 205, "do_debug": 205, "val": [205, 234, 718, 902], "ueberhaupt": 205, "l_float": 205, "0x7fd9881b04a0": 205, "functool": [205, 272], "wrapper": [205, 234, 244, 249, 286, 308, 460, 658, 683, 917, 965, 993, 1014, 1097], "komplexen": 205, "testfil": 205, "nzeil": [205, 234, 302], "seek": [205, 280, 322], "nth_fibo": 205, "accomod": 205, "0x7fd9801cec10": 205, "0x7fd9801b8d60": 205, "0x7fd9801b4900": 205, "0x7fd98014cd40": 205, "gen": [205, 280], "sequenceno": 205, "kv_pair": 205, "permissionerror": [205, 221, 241, 259, 276, 994], "deni": [205, 221, 241, 276, 482, 496, 840, 876, 904, 912, 924, 929, 930, 994, 1123], "eacc": 205, "filenotfounderror": [205, 221, 259, 994], "64bit": 205, "utc": 205, "python_implement": [205, 206, 219], "python_version_tupl": [205, 206, 219], "python39": 205, "dynload": 205, "isfil": [205, 315, 439], "isdir": [205, 439], "my_path": 205, "hopefulli": 205, "the_except": 205, "__class__": [205, 228, 231, 234, 238, 247, 256, 259, 280, 298], "__bases__": [205, 206, 219, 236], "distrust": 205, "guido": [205, 1119], "incompet": 205, "precondit": [205, 826], "abdefg": 205, "beg": [205, 398, 995], "bdefg": 205, "stringifi": 205, "0x7ffa9c2ac3a0": 205, "formatstr": 205, "ding": [205, 235, 964], "formatierter_str": 205, "oserror": [206, 234, 259, 994], "errno": [206, 219, 221, 241, 276, 423, 775, 924, 939, 968, 969, 986, 994, 1123], "assertionerror": [206, 231, 247, 259, 298, 994, 1007, 1128, 1129], "jjjj": [206, 343, 344, 436], "line_count": 206, "aud": 206, "qualifii": [206, 219], "trunc": [206, 219], "hypot": [206, 219], "seed": [206, 219, 238, 509], "ascii": [206, 219, 234, 241, 244, 259, 280, 286, 302, 308, 359, 362, 365, 371, 1025, 1026, 1039, 1045, 1103], "codepoint": [206, 219], "escap": [206, 219, 234, 256, 352, 1103], "ord": [206, 219, 238, 259, 1034], "chr": [206, 219, 259], "isxxx": [206, 219], "rfind": [206, 219, 234, 280, 286, 1041], "grammar": [206, 219], "instrospect": [206, 219], "hasattr": [206, 219, 234, 247, 259, 1008, 1014], "__module__": [206, 218, 219, 228, 231, 234, 238, 247, 259, 280, 298], "bytearrai": [206, 219, 234, 259], "histogram": [206, 207, 224, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 543, 544, 552, 657, 695, 747, 749, 750], "defaultdict": [206, 232, 233, 257], "make_histogram": [206, 544, 553], "fileobj": 206, "stringio": [206, 234], "8859": [206, 224, 225, 241, 244, 264, 286, 298, 302, 439], "pycon": [206, 232, 255, 279, 301, 1095], "2017": [206, 232, 255, 301, 565, 663, 714, 1095], "metaprogram": [206, 233, 255, 672, 1007, 1095, 1149], "contract": [206, 208, 255, 1095], "evolut": [206, 255, 301, 857, 1095], "unauthor": [206, 255, 301, 1095], "biographi": [206, 255, 301, 1095], "lesson": [206, 255, 301, 327, 333, 438, 701, 987, 1095], "evolv": [206, 255, 301, 698, 1095], "assembli": [206, 255, 279, 301, 971, 973, 1095, 1150], "revolv": [206, 232, 301, 1095, 1101], "mro": [206, 232, 236, 301, 1095], "cpa": 207, "fahr": [207, 353, 355], "tomorrow": [207, 222, 337, 338], "correctli": [207, 297, 316, 415, 901, 924, 1047, 1103], "consecut": [207, 378, 707, 890], "becam": [207, 293], "44ff": 207, "gig": 207, "upcom": 207, "msi": 207, "wswitch": [207, 419, 656, 766], "wall": [207, 221, 222, 376, 426, 442, 730, 765, 766, 1137], "77ff": 207, "skip": [207, 234, 322, 440, 442, 772, 902, 972, 973, 994, 1130], "89ff": 207, "alongsid": [207, 791], "num_us": 207, "199ff": 207, "204ff": 207, "208ff": 207, "220ff": 207, "222ff": 207, "db_get_user_at_index": 207, "298ff": 207, "strcpy": [207, 224, 365, 411, 547, 562, 565, 666, 700, 897, 955], "strlen": [207, 365, 390, 418, 562, 565, 666, 700, 935, 938, 968], "bahavior": 207, "dest": [207, 365], "strtol": 207, "stringif": [207, 1145], "db_error_str": 207, "sexi": [207, 947], "caleb": 207, "discret": [208, 238, 297, 425, 429, 434, 435, 657, 695, 747, 749, 750], "bleed": 208, "rect": [208, 406, 533], "sphere": [208, 533], "preprocessor": [208, 224, 372, 399, 405, 409, 412, 416, 421, 425, 429, 434, 435, 654, 657, 695, 747, 749, 750, 971, 1135, 1149], "julia": 208, "yesterdai": [208, 224, 232, 272], "distanc": [208, 559, 567, 568, 588, 705, 718], "has_lastnam": 208, "botton": 208, "mingw": [208, 251, 253, 271, 337, 350, 836], "resembl": 208, "tortur": 208, "functor": [208, 250, 251, 253, 310, 311, 599, 695, 696, 749, 750], "rudimentarili": [208, 1024, 1098], "gotten": [208, 731], "recourc": 208, "outright": [208, 264, 413, 999, 1030], "geniu": [208, 264, 590, 999, 1030], "livehackingli": 208, "zuordnung": [209, 225, 237], "bissl": 209, "commandlineargument": [209, 1144], "stoff": 209, "summenbeispiel": 209, "showcas": 209, "datenbank": 209, "formulieren": 209, "verbindung": [209, 1142, 1152, 1159, 1165], "schicken": [209, 1142], "schickman": 209, "muessen": 209, "verwandlen": 209, "fractal": [209, 225], "schatzi": 210, "zeitkomplexit\u00e4t": 210, "foreach": 210, "assozi": [210, 1147], "color_transl": 210, "gelb": 210, "yellow": 210, "hashtabl": [210, 1117], "englisch": [210, 1142], "sack": 210, "my_color": 210, "her_color": 210, "pink": 210, "gr\u00fcn": 210, "beig": 210, "vereiningungsmeng": 210, "schnittmeng": 210, "symmetrisch": 210, "differenzmeng": 210, "sei": 210, "gewesen": 210, "waer": [210, 286], "1037190666": [210, 226, 228, 234, 238, 241, 244, 247, 457, 464, 481, 482, 483, 495, 496, 497, 616, 1008], "6666010185": 210, "schwarzbauer": 210, "json_string_fuer_den_brows": 210, "response_dict": 210, "svnr": [210, 218, 221, 228, 234, 238, 241, 244, 246, 247, 286, 458, 464, 486, 492, 1008, 1112], "pprint": [210, 212, 219, 221, 256, 995, 1103], "formatieren": 210, "endlich": 210, "transfer_string_in_php_am_serv": 210, "u00f6rg": 210, "transfer_string_in_js_am_brows": 210, "response_dict_am_brows": 210, "verwandeln": [210, 1161], "schlussendlich": 210, "geeignet": [210, 1143], "platzieren": 210, "meine_t": 210, "sozialversicherungsnumm": 210, "simmer": 211, "mein_str": 211, "sq": [211, 218, 221, 228, 238, 259, 280, 298, 302], "docu": 211, "nmehrzeilig": 211, "nvon": 211, "mehrzeilig": 211, "deppertem": 211, "irrelevant": 211, "quargel": [211, 212], "190666": 211, "inkorrekt": 211, "geburtsdatum": 211, "endswith": [211, 226, 228, 234, 244, 259, 263, 266, 280, 286, 302, 308, 1041], "sss": 211, "isalpha": [211, 215, 226, 228, 234, 238, 259, 280, 286, 308, 1041], "isidentifi": [211, 215, 228, 234, 244, 259, 280, 286, 1041], "islow": [211, 234, 244, 259, 280, 1041], "arg1": 211, "arg2": 211, "arg3": 211, "abcblah": 211, "blahabcbcabcc": 211, "lah": 211, "rstrip": [211, 215, 219, 226, 230, 231, 234, 244, 259, 276, 280, 286, 302, 321, 330], "lstrip": [211, 226, 230, 234, 259, 280, 286, 330], "wieviel": [211, 1152, 1159], "995237": 211, "datestr": 211, "dt": [211, 308, 797, 901], "strptime": [211, 212, 213, 219, 308], "uuid": 211, "msg_aussi": 211, "sea": [211, 226, 259, 326, 676], "oida": [211, 228, 231, 280, 442], "msgid": 211, "uuid4": 211, "345654325678": 211, "json_aussi": 211, "6563515ef0824d42b459389cefd09127": 211, "json_eini": 211, "sender": [211, 969], "msg_eini": 211, "sauberestextfil": 212, "12345678": 212, "2270": [212, 221], "20333": 212, "360": [212, 221, 298, 308], "91011121": 212, "30333": 212, "36756788": 212, "1112": [212, 221], "1244": [212, 221], "31333": 212, "45011121": 212, "44444": 212, "340": [212, 221, 228, 234, 266, 280, 308], "sauber": 212, "read_sauberes_text_fil": 212, "item1": [212, 308], "item13": 212, "werk": 212, "lort": 212, "charg": [212, 461, 468, 481, 482, 483, 495, 496, 497], "sonderbestandsnumm": 212, "materialkurztext": 212, "lagerplatz": 212, "verfueg_bestand": 212, "bme": 212, "we_datum": 212, "verf\u00fcg": 212, "bestand": 212, "datum": [212, 1102], "api2": 213, "opc": [213, 222, 297], "rrdtool": 213, "rrd": 213, "subprocess": [213, 229, 234, 243, 245, 255, 279, 315, 330, 335, 1095], "commmon": [215, 398], "140576769461632": 215, "simplicit": 215, "inputfil": [215, 439], "450": [215, 221, 228, 263, 266], "paragraph": [215, 452], "highli": [215, 348, 514], "pathnam": [215, 221, 231, 234, 756, 923, 927, 1039], "displayhook": [215, 221, 231, 234, 323], "excepthook": [215, 221, 231, 234, 323], "uncaught": [215, 221, 231, 234, 533], "systemexit": [215, 221, 231, 234, 256, 259, 323, 994], "behav": [215, 221, 224, 231, 234, 512, 533, 659, 714, 715, 745, 813, 839, 959], "last_typ": [215, 221, 231, 234, 323], "last_valu": [215, 221, 231, 234, 323, 683, 686, 689, 690, 691], "last_traceback": [215, 221, 231, 234, 323], "builtin_module_nam": [215, 221, 231, 234, 323], "pertain": [215, 221, 231, 234], "exec_prefix": [215, 221, 231, 234, 323], "float_info": [215, 221, 231, 234, 323], "float_repr_styl": [215, 221, 231, 234, 323], "hash_info": [215, 221, 231, 234, 323], "hexvers": [215, 221, 231, 234, 323], "int_info": [215, 221, 231, 234, 323], "maxsiz": [215, 221, 231, 234, 323], "largest": [215, 221, 231, 234, 415], "maxunicod": [215, 221, 231, 234, 323], "thread_info": [215, 221, 231, 234, 323], "version_info": [215, 221, 231, 234, 323], "__stdin__": [215, 221, 231, 234, 323], "__stdout__": [215, 221, 231, 234, 323], "__stderr__": [215, 221, 231, 234, 323], "__displayhook__": [215, 221, 231, 234, 323], "__excepthook__": [215, 221, 231, 234, 323], "screen": [215, 221, 231, 234, 833, 839, 857], "exc_info": [215, 221, 231, 234, 323], "getdlopenflag": [215, 221, 231, 234, 323], "dlopen": [215, 221, 231, 234, 1162], "getprofil": [215, 221, 231, 234, 323], "profil": [215, 221, 231, 234, 348, 426, 432, 435, 750, 797, 829, 1146, 1149], "getrefcount": [215, 221, 231, 234, 241, 323], "getrecursionlimit": [215, 221, 231, 234, 323], "getsizeof": [215, 221, 231, 234, 256, 259, 302, 323], "gettrac": [215, 221, 231, 234, 323], "setdlopenflag": [215, 221, 231, 234, 323], "setprofil": [215, 221, 231, 234, 323], "setrecursionlimit": [215, 221, 231, 234, 323], "settrac": [215, 221, 231, 234, 323], "__breakpointhook__": [215, 221, 231, 234, 323], "breakpointhook": [215, 221, 231, 234, 323], "breakpoint": [215, 221, 231, 234, 259], "exctyp": [215, 221, 231, 234], "__unraisablehook__": [215, 221, 231, 234, 323], "unraisablehook": [215, 221, 231, 234, 323], "unrais": [215, 221, 231, 234], "exc_typ": [215, 221, 231, 234, 992], "exc_valu": [215, 221, 231, 234, 992], "exc_traceback": [215, 221, 231, 234, 992], "err_msg": [215, 221, 231, 234], "addaudithook": [215, 221, 231, 234, 323], "audit": [215, 221, 231, 234, 323], "call_trac": [215, 221, 231, 234, 323], "afterward": [215, 221, 231, 234, 377, 427, 564, 714, 715, 716, 729, 793, 965, 1129], "older": [215, 221, 231, 234, 822, 965], "get_asyncgen_hook": [215, 221, 231, 234, 323], "firstit": [215, 221, 231, 234], "get_coroutine_origin_tracking_depth": [215, 221, 231, 234, 323], "coroutin": [215, 221, 231, 234, 310, 685, 686, 688, 689, 690, 691, 695, 749, 750, 1095], "getallocatedblock": [215, 221, 231, 234, 323], "getdefaultencod": [215, 221, 231, 234, 280, 323], "getfilesystemencodeerror": [215, 221, 231, 234, 323], "getfilesystemencod": [215, 221, 231, 234, 323], "getswitchinterv": [215, 221, 231, 234, 323], "setswitchinterv": [215, 221, 231, 234, 323], "is_fin": [215, 221, 231, 234, 323], "set_asyncgen_hook": [215, 221, 231, 234, 323], "set_coroutine_origin_tracking_depth": [215, 221, 231, 234, 323], "cr_origin": [215, 221, 231, 234], "rtld_global": [215, 221, 231, 234], "rtld_xxx": [215, 221, 231, 234], "rtld_lazi": [215, 221, 231, 234], "frequenc": [215, 221, 231, 234, 238, 274, 275, 296, 300, 316, 341, 345, 750, 893, 894, 902, 934, 954, 956], "uninterrupt": [215, 221, 231, 234, 789], "workload": [215, 221, 231, 234], "typic": [215, 221, 231, 234, 262, 272, 288, 300, 304, 398, 438, 442, 459, 483, 512, 639, 768, 817, 842, 972, 1017, 1027, 1148, 1150], "005": [215, 221, 231, 234], "abiflag": [215, 221, 231, 234, 323], "api_vers": [215, 221, 231, 234, 323], "1013": [215, 221, 231, 234], "ipyk": 215, "base_exec_prefix": [215, 221, 231, 234, 323], "base_prefix": [215, 221, 231, 234, 323], "_ast": [215, 221, 231, 234], "_codec": [215, 221, 231, 234], "_collect": [215, 221, 231, 234], "_f": [215, 221, 231, 234], "byteord": [215, 221, 231, 234, 256, 323, 895], "foundati": [215, 221, 231, 234], "emati": [215, 221, 231, 234], "ipykernel": [215, 221, 231, 234, 259], "zmqshelldisplayhook": [215, 221, 231, 234], "dont_write_bytecod": [215, 221, 231, 234, 323], "opt": [215, 221, 231, 234, 404], "ation": [215, 221, 231, 234], "7976931348623157e": [215, 221, 231, 234], "308": [215, 221, 228, 231, 234, 276, 286, 298, 308], "max_": [215, 221, 231, 234], "epsilo": [215, 221, 231, 234], "2305843009213693": [215, 221, 231, 234], "iphash2": [215, 221, 231, 234], "50922736": 215, "cache_tag": [215, 221, 231, 234], "xv": [215, 221, 231, 234], "bits_per_digit": [215, 221, 231, 234], "sizeof_digit": [215, 221, 231, 234], "syntaxerror": [215, 226, 231, 238, 259, 994], "eol": [215, 238], "9223372036854775807": [215, 221, 231, 234, 748], "1114111": [215, 221, 231, 234], "meta_path": [215, 221, 231, 234, 323], "_frozen_importlib": [215, 221, 231, 234, 259], "builtinimport": [215, 221, 231, 234, 259], "_fro": [215, 221, 231, 234], "homepa": 215, "path_hook": [215, 221, 231, 234, 323], "zipimport": [215, 221, 231, 234], "filefind": [215, 221, 231, 234], "path_importer_cach": [215, 221, 231, 234, 323], "jfa": [215, 221, 231, 234], "platlibdir": [215, 221, 231, 234, 323], "ps1": [215, 221, 231, 234, 323, 1130], "ps2": [215, 221, 231, 234, 323], "ps3": [215, 221, 231, 234, 323], "pycache_prefix": [215, 221, 231, 234, 323], "outstream": [215, 221, 231, 234], "versio": [215, 221, 231, 234], "202103": 215, "releaselev": [215, 221, 231, 234], "warnopt": [215, 221, 231, 234, 323], "isdigit": [215, 226, 234, 238, 259, 266, 280, 286, 1041], "pp": [215, 266, 403, 590], "list_of_str": 215, "tensorflow": 216, "kesselfal": 216, "rettenbachklamm": 216, "hochtor": 216, "hochschwab": 216, "_a": [218, 234, 259], "_123": 218, "140575811317328": 218, "140575811316208": 218, "0xffffffff": [218, 219, 376], "4294967296": [218, 226], "0x48": [218, 901], "330": [218, 221, 234, 259, 266, 280, 298, 308], "332": [218, 221, 234, 266, 280, 298], "333": [218, 221, 234, 266, 280, 308, 326], "334": [218, 221, 234, 266, 308], "dstr": 218, "777": [218, 221, 308], "aliv": [218, 396, 947, 990], "bcd": 218, "dusan": 218, "alex": [218, 232, 1012], "mist": [218, 266], "span": [218, 244, 247, 249, 256, 280, 353, 372, 396, 772], "141592653589793": [218, 221], "roll": [218, 237, 258, 274, 275, 1030, 1145], "dice": [218, 237, 258, 274, 275, 1030], "win": [218, 234, 244, 308, 888, 955, 1030], "rnd": [218, 241], "convention": 218, "wise": [218, 262, 421, 565, 637, 668, 748, 750, 765, 775, 795, 893, 934, 994], "resultset": [218, 221, 1107], "sbin": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 829, 833, 835, 882, 888, 919, 929], "nologin": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 882, 888, 919, 929], "adm": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 883, 886, 888], "lp": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "spool": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "lpd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "ftp": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 884, 985], "65534": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "apach": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "httpd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "coredump": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888, 968], "997": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "dumper": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "998": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "996": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "timesync": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "995": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "tss": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "tpm": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "dbu": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 835], "polkitd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 835], "994": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "avahi": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 835], "mdn": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "unbound": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 1026], "992": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "dnsmasq": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 835], "991": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "dhcp": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "nm": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 433, 566, 797, 983, 989], "openconnect": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "993": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "989": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "networkmanag": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 433, 835], "usbmuxd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "gluster": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "988": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "glusterf": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "rtkit": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "realtimekit": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "pipewir": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "987": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "geoclu": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "990": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308], "chroni": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "984": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "saslauth": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "saslauthd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "radvd": [218, 234, 241, 244], "rpc": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "rpcbind": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "openvpn": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "982": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "981": [218, 221, 234, 241, 244], "spawn": [218, 234, 241, 244, 259, 266, 276, 280, 297, 302, 308], "colord": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "985": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "rpcuser": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308], "abrt": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 835, 888], "flatpak": [218, 234, 241, 244, 259, 266, 276, 280, 283, 302, 308, 888], "979": [218, 221, 234, 241, 244], "helper": [218, 234, 238, 241, 244, 259, 266, 276, 280, 302, 308, 371, 565, 629, 677, 718, 791, 888, 1120, 1123], "983": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "978": [218, 221, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "vboxadd": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "tcpdump": [218, 234, 241, 244, 259, 266, 276, 280, 302, 308, 888], "974": [218, 221, 234, 241, 244], "broker": [218, 222, 234, 241, 244, 259, 266, 276, 280, 297, 302, 308, 835, 1089], "mappingproxi": [218, 234, 247], "229": [218, 221, 226, 228, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308], "230": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302, 308], "231": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 280, 286, 302, 308, 481, 482, 483, 495, 496, 497], "232": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 280, 286, 302, 308], "233": [218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 276, 280, 286, 302, 308], "inputlist": [218, 997], "ret": [218, 221, 226, 439, 677, 961, 997, 1042], "235": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302], "236": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 280, 286, 298, 302, 308, 424], "237": [218, 221, 226, 228, 234, 238, 241, 244, 259, 276, 280, 286, 302, 308], "238": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298, 302, 308], "239": [218, 221, 226, 228, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308], "240": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 276, 280, 286, 302, 308], "242": [218, 221, 226, 228, 231, 234, 241, 244, 259, 276, 280, 286, 298, 302, 308], "243": [218, 221, 226, 228, 234, 241, 244, 259, 276, 280, 286, 298, 308], "244": [218, 221, 226, 228, 231, 234, 241, 244, 259, 280, 286, 298, 308], "245": [218, 221, 226, 228, 241, 259, 276, 280, 286, 298, 308], "247": [218, 221, 226, 228, 234, 238, 241, 259, 276, 280, 286, 302, 308], "248": [218, 221, 226, 228, 231, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308], "249": [218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 280, 286, 298, 302, 308], "250": [218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 270, 276, 280, 286, 308, 886], "251": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 298, 302], "252": [218, 221, 226, 228, 231, 238, 241, 259, 266, 276, 280, 286, 298, 302, 308, 1108], "253": [218, 221, 226, 228, 231, 234, 241, 244, 259, 266, 280, 286, 302], "256": [218, 221, 226, 228, 234, 241, 244, 259, 266, 276, 280, 286, 302, 308, 362, 570, 1097, 1108], "257": [218, 221, 226, 228, 231, 234, 238, 241, 244, 259, 266, 276, 280, 286, 308], "258": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286], "0x7fda5444e6a0": 218, "259": [218, 221, 226, 228, 231, 234, 241, 259, 266, 276, 280, 286, 308], "260": [218, 221, 226, 228, 231, 234, 241, 259, 266, 276, 280, 286, 298, 308], "261": [218, 221, 226, 228, 234, 238, 244, 259, 266, 276, 280, 286], "262": [218, 221, 226, 228, 234, 244, 259, 266, 276, 280, 286, 298, 308], "263": [218, 221, 226, 228, 234, 238, 241, 244, 259, 266, 276, 280, 286, 298], "264": [218, 221, 226, 228, 231, 234, 241, 244, 259, 266, 280, 286, 298, 308], "265": [218, 221, 226, 228, 234, 241, 259, 266, 280, 286, 298, 308], "266": [218, 221, 226, 228, 231, 234, 238, 244, 259, 280, 286], "267": [218, 221, 226, 228, 231, 234, 241, 244, 259, 266, 280, 286, 298], "268": [218, 221, 226, 228, 234, 241, 244, 259, 266, 280, 286, 308], "269": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 973], "270": [218, 221, 226, 228, 234, 238, 241, 259, 266, 276, 280, 286, 298, 308], "other_map": 218, "272": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 298], "273": [218, 221, 226, 228, 234, 238, 259, 266, 280, 286, 308, 505, 523, 524, 525, 526, 528, 529, 736, 738, 740, 1007], "274": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 276, 280, 286, 308], "140575811316304": 218, "275": [218, 221, 226, 228, 234, 238, 241, 259, 266, 276, 280, 286, 298], "276": [218, 221, 226, 228, 231, 241, 259, 266, 276, 280, 286, 298], "277": [218, 221, 226, 228, 231, 234, 238, 241, 259, 276, 280, 286, 308], "278": [218, 221, 226, 228, 234, 241, 259, 266, 280, 286, 298, 308], "279": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 280, 286, 298], "280": [218, 221, 226, 228, 231, 234, 238, 259, 266, 280, 286, 298, 972, 973], "140575692459008": 218, "282": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 280, 286, 298], "283": [218, 221, 226, 228, 231, 234, 238, 241, 259, 280, 286], "284": [218, 221, 226, 228, 234, 238, 241, 259, 263, 286, 298, 308], "elementwis": 218, "285": [218, 221, 226, 228, 231, 234, 259, 266, 280, 286, 298], "286": [218, 221, 226, 228, 231, 234, 238, 259, 280, 286, 298], "287": [218, 221, 226, 228, 231, 234, 238, 241, 259, 266, 286, 298, 308], "140575692438848": 218, "288": [218, 221, 226, 228, 234, 238, 241, 259, 266, 280, 286, 298, 308], "140575692448960": 218, "289": [218, 221, 226, 228, 234, 259, 266, 280, 286, 298, 308], "290": [218, 221, 226, 228, 234, 259, 266, 280, 286], "292": [218, 221, 226, 234, 238, 259, 266, 276, 280], "293": [218, 221, 226, 228, 234, 259, 266, 276, 280, 286], "295": [218, 221, 226, 228, 234, 238, 259, 266, 276, 280], "296": [218, 221, 226, 228, 234, 259, 266, 276, 280, 286], "298": [218, 221, 226, 234, 238, 259, 266, 276, 280, 286, 308], "deep": [218, 230, 298, 672, 677, 959], "301": [218, 221, 226, 231, 234, 238, 259, 266, 276, 280, 286, 298], "302": [218, 221, 228, 234, 238, 259, 266, 280, 286, 298, 1052], "deepcopi": [218, 228, 241, 266, 286, 298, 1035], "303": [218, 221, 228, 231, 234, 266, 280, 286, 298, 308, 973], "304": [218, 221, 228, 231, 234, 238, 298], "305": [218, 221, 231, 234, 259, 276, 280, 286, 298], "314": [218, 221, 228, 231, 234, 259, 266, 276, 280, 286, 308], "315": [218, 221, 234, 259, 280, 286, 308], "rdr": [218, 219, 302, 439, 462, 1103], "delimit": [218, 219, 234, 263, 264, 280, 302, 308, 586, 883, 1023, 1103], "fund_nam": [218, 219, 1052], "fund_isin": [218, 219, 1052], "fund_tick": [218, 219, 1052], "as_of_d": [218, 219, 1052], "fund_in_univers": [218, 219, 1052], "fund_of_fund": [218, 219, 1052], "fund_holdings_count": [218, 219, 1052], "fund_holding_funds_count": [218, 219, 1052], "american": [218, 224, 638, 652, 750, 1052, 1108], "fund": [218, 1052], "balanc": [218, 222, 406, 1052], "us0240711020": [218, 1052], "abalx": [218, 1052], "20210103": [218, 1052], "084": [218, 1052], "dodg": [218, 1052], "cox": [218, 1052], "us2562011047": [218, 1052], "dodbx": [218, 1052], "410": [218, 221, 266, 280, 1052], "us2562191062": [218, 1052], "dodgx": [218, 1052], "franklin": [218, 1052], "incom": [218, 234, 297, 1052, 1111], "us3534963000": [218, 1052], "fkinx": [218, 1052], "america": [218, 1052], "us3998741066": [218, 1052], "agthx": [218, 1052], "price": [218, 238, 432, 455, 1052], "us7414791092": [218, 1052], "prgfx": [218, 1052], "fidel": [218, 1052], "puritan": [218, 1052], "us3163451079": [218, 1052], "fpurx": [218, 1052], "contrafund": [218, 1052], "us3160711095": [218, 1052], "fcntx": [218, 1052], "363": [218, 221, 266, 280, 298, 308, 1052], "us77954m1053": [218, 1052], "prwcx": [218, 1052], "westburi": [218, 1052], "us6804141090": [218, 1052], "owlsx": [218, 1052], "us1401931035": [218, 1052], "caibx": [218, 1052], "582": [218, 221, 1052], "harbor": [218, 1052], "institut": [218, 219, 468, 483, 1052], "us4115115044": [218, 1052], "hacax": [218, 1052], "us77954q1067": [218, 1052], "trbcx": [218, 1052], "dreyfu": [218, 1052], "treasuri": [218, 1052], "cash": [218, 1052], "inst": [218, 1052], "us2619411083": [218, 1052], "dirxx": [218, 1052], "blackrock": [218, 1052], "us09251t5092": [218, 1052], "malox": [218, 1052], "us3163453059": [218, 1052], "flpsx": [218, 1052], "liquid": [218, 1052], "us09248u5517": [218, 1052], "tttxx": [218, 1052], "dfa": [218, 1052], "portfolio": [218, 238, 1052], "us2332038841": [218, 1052], "dfgbx": [218, 1052], "feder": [218, 1052], "herm": [218, 1052], "us60934n6821": [218, 1052], "utixx": [218, 1052], "oakmark": [218, 1052], "investor": [218, 238, 1052], "us4138382027": [218, 1052], "oakix": [218, 1052], "asset": [218, 1052], "us00767h4939": [218, 1052], "787": [218, 221, 1052], "fpa": [218, 1052], "crescent": [218, 1052], "us30254t7596": [218, 1052], "fpacx": [218, 1052], "us3534968058": [218, 1052], "fcisx": [218, 1052], "us5529836943": [218, 1052], "meiix": [218, 1052], "goldman": [218, 1052], "sach": [218, 1052, 1166], "instrument": [218, 430, 432, 901, 1052], "us38142b5003": [218, 1052], "ftixx": [218, 1052], "schwab": [218, 1052], "us8085098551": [218, 1052], "swppx": [218, 1052], "508": [218, 221, 266, 298, 1052], "templeton": [218, 1052], "bond": [218, 1052], "advisor": [218, 1052], "us8802084009": [218, 1052], "tgbax": [218, 1052], "us32008f6060": [218, 1052], "sgiix": [218, 1052], "ishar": [218, 1052], "etf": [218, 1052], "us4642872000": [218, 1052], "ivv": [218, 1052], "507": [218, 221, 298, 1052], "vanguard": [218, 1052], "admir": [218, 1052], "us9229087104": [218, 1052], "vfiax": [218, 1052], "510": [218, 221, 298, 308, 1052], "us9229087286": [218, 1052], "vtsax": [218, 1052], "370": [218, 221, 266, 280, 308, 1052], "spdr": [218, 1052], "midcap": [218, 1052], "us78467y1073": [218, 1052], "mdy": [218, 1052], "dow": [218, 1052], "jone": [218, 331, 332, 1052], "industri": [218, 797, 1052], "us78467x1090": [218, 1052], "health": [218, 1052], "us81369y2090": [218, 1052], "xlv": [218, 1052], "discretionari": [218, 1052], "us81369y4070": [218, 1052], "xly": [218, 1052], "energi": [218, 1052], "us81369y5069": [218, 1052], "xle": [218, 1052], "financi": [218, 1052], "us81369y6059": [218, 1052], "xlf": [218, 1052], "us81369y8030": [218, 1052], "xlk": [218, 1052], "invesco": [218, 1052], "qqq": [218, 1052], "us46090e1038": [218, 1052], "us2562061034": [218, 1052], "dodfx": [218, 1052], "msci": [218, 1052], "eaf": [218, 1052], "us4642874659": [218, 1052], "efa": [218, 1052], "897": [218, 221, 1052], "jpmorgan": [218, 1052], "sec": [218, 453, 955, 1052, 1123], "mny": [218, 1052], "mkt": [218, 1052], "us4812a28358": [218, 1052], "jtsxx": [218, 1052], "eql": [218, 1052], "wght": [218, 1052], "us46137v3574": [218, 1052], "us4812a03757": [218, 1052], "cjtxx": [218, 1052], "us00143w8753": [218, 1052], "odvyx": [218, 1052], "dividend": [218, 1052], "us78464a7634": [218, 1052], "sdy": [218, 1052], "equiti": [218, 1052], "us2332033719": [218, 1052], "dfiex": [218, 1052], "888": [218, 221, 1052], "edgewood": [218, 1052], "us0075w07594": [218, 1052], "egfix": [218, 1052], "prudenti": [218, 1052], "us00767h7585": [218, 1052], "r6": [218, 1052], "us55273h3536": [218, 1052], "meikx": [218, 1052], "327": [218, 221, 234, 259, 266, 276, 308], "328": [218, 221, 228, 234, 266], "geschieht": [219, 348, 884], "wunder": 219, "groesser": 219, "jave": 219, "shorthand": [219, 363, 876, 1008], "lin": 219, "lout": 219, "faster": [219, 238, 297, 415, 427, 959, 965], "outputlist": 219, "getus": [219, 1073], "userdatabas": [219, 1073], "userid": [219, 231], "groupid": 219, "loginshel": 219, "userrecord": 219, "dens": [219, 228, 238], "pratic": 219, "_fix_float_numb": 219, "fieldnam": [219, 1103], "_fix_bool": 219, "elif": [219, 226, 302, 361, 398, 439, 1014, 1029, 1030], "_fix_dat": 219, "read_stock": [219, 1052], "csvfile": [219, 1007], "converted_record": 219, "dbname": [219, 1106], "stmt": 219, "predefin": [219, 929, 964, 969, 1141], "circuit": [220, 226, 236, 902, 1028, 1152, 1159], "windows_path": [221, 226], "festplatt": [221, 1162], "eue": [221, 298, 325], "lehrer": 221, "50923504": 221, "202107": 221, "140106795875920": 221, "140106669190640": 221, "669": [221, 238], "140106669191024": 221, "0j": 221, "copied_l": [221, 228], "140106669249856": 221, "copied_t": 221, "tuple_containing_one_el": 221, "tran": 221, "satan": [221, 231], "queen": [221, 241, 1084, 1086, 1090, 1092, 1103], "10000000000": [221, 276, 325], "prod": 221, "resultset_to_local_db": 221, "my_local_db": 221, "basenam": 221, "normalized_path": 221, "normpath": [221, 228, 1002], "291": [221, 226, 234, 259, 276, 286, 298, 308, 431], "294": [221, 226, 234, 259, 276, 280, 286], "297": [221, 226, 228, 234, 238, 280, 308], "299": [221, 226, 231, 234, 238, 259, 266, 276, 280, 286, 308], "306": [221, 231, 238, 259, 276, 280, 286, 298, 308], "307": [221, 228, 234, 259, 276, 280, 286, 298, 308], "309": [221, 228, 231, 234, 266, 276, 280, 286, 298, 302], "310": [221, 228, 231, 234, 280, 286, 298, 376], "311": [221, 228, 259, 280, 286, 308], "312": [221, 228, 234, 259, 266, 276, 286, 308], "313": [221, 228, 234, 266, 280, 286, 308], "316": [221, 228, 231, 234, 259, 280, 298, 308], "317": [221, 228, 231, 259, 266, 276, 280, 298, 308], "318": [221, 231, 234, 266, 280, 308], "319": [221, 228, 231, 234, 259, 276, 280, 298, 308], "321": [221, 231, 234, 266, 276, 280, 286, 298], "322": [221, 231, 234, 266, 286, 298, 308], "323": [221, 228, 231, 234, 259, 280, 286, 298, 308], "324": [221, 231, 234, 259, 276, 280, 286, 298, 308, 514], "325": [221, 228, 234, 266, 276, 286, 308], "326": [221, 228, 234, 259, 276, 286, 298, 308], "329": [221, 234, 259, 266, 298], "331": [221, 228, 234, 259, 280], "335": [221, 228, 234, 266, 280, 308], "336": [221, 228, 234, 280, 308, 446], "337": [221, 234, 266, 280, 308], "338": [221, 228, 266, 280, 308], "339": [221, 228, 234, 280, 308], "341": [221, 228, 234, 266, 280, 298, 308], "342": [221, 228, 234, 266, 286, 308], "343": [221, 234, 266, 280, 298], "346": [221, 234, 280, 298, 308, 612, 613, 614, 615], "347": [221, 266, 280, 298, 308], "348": [221, 234, 298, 308], "349": [221, 234, 280, 298, 308, 426], "351": [221, 228, 234, 280, 308], "352": [221, 228, 234, 266, 280, 308], "353": [221, 228, 234, 266, 280, 308], "354": [221, 234, 280, 308, 460], "355": [221, 266, 280, 308], "356": [221, 241, 280, 298], "357": [221, 266, 280, 298, 308], "359": [221, 280, 308], "361": [221, 280, 298, 308], "362": [221, 266, 280, 298, 308], "364": [221, 280], "365": [221, 298], "366": [221, 266, 280], "367": [221, 280, 298, 308], "368": [221, 280, 308], "369": [221, 266, 280, 308], "371": [221, 266, 308], "373": [221, 228, 266, 298, 308], "374": [221, 228, 280, 298], "375": [221, 228, 238, 266, 280, 298, 308, 426], "376": [221, 266, 280, 298, 308], "377": [221, 228, 266, 280, 298, 308], "379": [221, 266, 280, 298, 308], "380": [221, 266, 280, 298], "381": [221, 228, 266, 280], "382": [221, 266, 280, 298], "383": [221, 228, 266, 270, 298, 308], "384": [221, 266, 280, 298, 308], "385": [221, 266, 280, 298], "386": [221, 266, 280, 298], "387": 221, "388": [221, 266, 280, 298], "389": [221, 298], "390": [221, 280, 298], "391": [221, 266, 298], "392": [221, 266], "393": [221, 228, 266, 280, 298], "394": [221, 228, 266, 280, 298], "395": [221, 228, 266, 280, 298, 308], "396": [221, 228, 266, 842], "397": [221, 228, 280, 298], "398": [221, 228, 280], "399": [221, 228, 280, 298], "401": [221, 228, 266, 280], "402": [221, 266, 298], "403": [221, 228, 280, 298], "405": [221, 280], "406": [221, 228, 266, 280, 298], "407": [221, 266, 280, 298], "408": [221, 228, 266, 280, 298], "409": [221, 228, 266, 280, 298, 308], "411": [221, 228, 266, 280, 308], "412": [221, 280], "413": [221, 228, 266, 280], "414": [221, 228, 266, 280, 298], "415": [221, 280, 298], "416": [221, 228, 266, 298], "417": [221, 228, 266, 280], "418": [221, 228, 266, 298], "419": [221, 228, 266, 280, 298], "420": [221, 228, 266, 280, 298], "421": [221, 228, 266, 280, 298], "422": [221, 228, 308], "423": [221, 266, 280, 298, 748], "424": [221, 228, 266, 280], "425": [221, 266], "426": [221, 298], "427": [221, 228, 266, 298], "428": [221, 228, 266, 298], "429": [221, 266, 298], "430": [221, 228, 266, 298], "431": [221, 266, 298, 308, 748], "432": [221, 228, 266, 298], "433": [221, 266, 298, 308], "434": [221, 266], "435": 221, "436": [221, 266, 298], "437": [221, 228, 266, 298, 308], "438": [221, 228, 298], "439": [221, 266], "440": [221, 228, 266], "441": [221, 228, 266], "442": [221, 228, 266, 308], "443": [221, 228, 298], "444": [221, 228, 298], "445": [221, 228, 298, 308], "446": [221, 266], "447": [221, 228, 266, 298, 308], "448": [221, 266], "449": [221, 228], "451": [221, 228, 298], "452": [221, 228, 266], "453": [221, 228, 298], "454": [221, 228, 266], "455": [221, 228], "457": 221, "458": [221, 266], "459": [221, 308], "460": [221, 266], "461": [221, 266], "462": [221, 266], "463": 221, "464": [221, 266], "465": [221, 266, 270, 308], "466": [221, 266], "467": [221, 266, 308], "468": [221, 266], "469": [221, 266, 715], "470": [221, 266], "471": [221, 266, 308], "472": [221, 266], "473": 221, "474": [221, 266], "475": [221, 266], "476": [221, 266, 308], "478": 221, "479": [221, 266], "480": [221, 266], "481": [221, 266], "482": [221, 266, 308], "483": [221, 266, 308], "484": 221, "485": 221, "486": [221, 266], "487": [221, 266], "488": [221, 266], "489": 221, "490": [221, 879], "491": 221, "492": 221, "494": [221, 266], "495": 221, "496": 221, "497": [221, 266], "498": [221, 266], "499": 221, "502": [221, 266], "503": 221, "504": [221, 266], "505": [221, 234, 266], "506": [221, 266], "509": [221, 298], "511": [221, 298, 308], "514": 221, "515": [221, 266, 714], "516": [221, 266], "518": [221, 266], "519": 221, "520": [221, 266], "521": [221, 266, 733, 737], "522": 221, "523": 221, "524": [221, 266], "525": [221, 266], "526": 221, "527": 221, "528": 221, "529": [221, 308], "530": 221, "531": [221, 266], "532": [221, 748], "533": 221, "534": 221, "535": 221, "536": [221, 879], "538": 221, "539": 221, "540": [221, 308], "541": 221, "542": 221, "543": 221, "544": [221, 308], "545": [221, 308], "546": 221, "547": 221, "548": [221, 270], "549": 221, "550": 221, "551": 221, "552": [221, 308], "553": [221, 308], "554": [221, 881], "555": 221, "556": [221, 308], "557": 221, "558": 221, "559": 221, "560": 221, "561": 221, "562": 221, "563": 221, "564": 221, "565": 221, "566": 221, "567": 221, "568": 221, "569": 221, "570": 221, "571": 221, "572": 221, "573": 221, "574": 221, "575": 221, "576": 221, "577": 221, "578": 221, "579": 221, "580": 221, "581": 221, "583": [221, 308], "584": 221, "585": 221, "586": 221, "587": 221, "588": [221, 302], "589": 221, "590": 221, "591": [221, 308], "592": 221, "593": 221, "594": [221, 308], "595": 221, "596": [221, 985], "597": 221, "598": 221, "599": 221, "601": 221, "602": 221, "603": 221, "604": 221, "605": 221, "606": 221, "607": [221, 308], "608": 221, "609": [221, 308], "610": [221, 879], "611": 221, "612": [221, 842], "613": 221, "614": 221, "615": [221, 308], "616": 221, "617": 221, "618": 221, "619": 221, "620": 221, "621": 221, "622": 221, "623": 221, "624": 221, "625": [221, 238], "626": 221, "627": 221, "628": 221, "629": 221, "630": 221, "631": 221, "632": 221, "633": 221, "634": 221, "635": 221, "636": 221, "637": 221, "638": 221, "639": 221, "640": [221, 565], "641": 221, "642": 221, "643": 221, "644": [221, 1022], "645": 221, "646": 221, "647": 221, "648": 221, "649": 221, "650": [221, 308], "651": 221, "652": 221, "653": 221, "654": 221, "655": [221, 308], "656": 221, "657": [221, 308], "658": 221, "659": 221, "660": 221, "661": 221, "662": 221, "663": 221, "665": [221, 308], "668": [221, 308, 1026], "670": 221, "671": [221, 308], "672": 221, "673": 221, "674": 221, "675": 221, "676": 221, "677": 221, "678": 221, "679": 221, "680": [221, 308], "681": [221, 308], "682": [221, 879], "683": 221, "684": 221, "685": 221, "687": 221, "688": 221, "689": 221, "690": 221, "691": 221, "692": 221, "693": 221, "694": 221, "695": [221, 308], "696": 221, "697": [221, 308], "698": [221, 879, 919], "699": 221, "701": [221, 308], "702": 221, "703": [221, 274, 275, 296], "704": 221, "705": 221, "706": [221, 308], "707": 221, "708": [221, 234], "709": 221, "710": [221, 565], "711": 221, "712": 221, "713": 221, "715": [221, 639], "716": [221, 308], "717": 221, "718": 221, "719": 221, "720": 221, "721": 221, "722": 221, "723": 221, "724": 221, "725": 221, "726": 221, "727": [221, 308], "728": 221, "729": 221, "730": [221, 263], "731": 221, "732": 221, "733": 221, "734": 221, "735": 221, "736": 221, "737": 221, "738": 221, "739": 221, "740": 221, "741": 221, "742": 221, "743": 221, "744": 221, "745": 221, "746": [221, 308, 973], "747": 221, "748": 221, "749": 221, "750": 221, "751": 221, "752": 221, "753": 221, "754": 221, "756": 221, "757": 221, "758": 221, "759": 221, "760": 221, "761": 221, "762": 221, "763": 221, "764": 221, "765": 221, "766": 221, "767": 221, "768": [221, 308], "769": 221, "770": [221, 308], "772": 221, "773": 221, "774": [221, 308], "775": 221, "776": 221, "778": 221, "779": 221, "780": 221, "781": [221, 308], "782": [221, 270], "783": 221, "784": 221, "785": 221, "786": 221, "788": [221, 308], "789": [221, 228], "790": 221, "791": [221, 714], "792": 221, "793": 221, "794": 221, "795": 221, "796": 221, "797": 221, "798": 221, "801": [221, 263], "802": 221, "803": 221, "804": [221, 308], "805": 221, "806": 221, "807": 221, "808": 221, "809": [221, 302], "810": 221, "811": [221, 308], "812": [221, 308], "813": [221, 308], "814": 221, "815": [221, 238], "816": [221, 244, 308], "817": 221, "818": 221, "819": 221, "820": 221, "822": 221, "823": 221, "824": 221, "826": 221, "827": [221, 308], "828": [221, 270, 308], "829": 221, "830": 221, "831": 221, "832": 221, "833": 221, "834": 221, "835": 221, "836": 221, "837": 221, "838": 221, "839": [221, 308], "840": 221, "841": 221, "842": 221, "843": 221, "844": [221, 308], "845": 221, "846": 221, "847": 221, "848": 221, "849": 221, "850": 221, "851": 221, "852": 221, "853": 221, "854": 221, "855": 221, "856": 221, "857": 221, "858": 221, "859": 221, "860": 221, "861": 221, "862": [221, 308], "863": 221, "864": 221, "865": 221, "866": 221, "867": 221, "868": 221, "870": 221, "871": 221, "872": 221, "873": 221, "874": [221, 462], "875": 221, "876": 221, "877": [221, 308], "878": 221, "879": [221, 426], "880": 221, "881": [221, 308], "882": 221, "883": [221, 308], "884": 221, "885": 221, "886": 221, "887": [221, 308], "889": 221, "890": 221, "891": [221, 308], "892": 221, "893": 221, "894": 221, "895": 221, "896": 221, "898": [221, 308], "899": 221, "901": 221, "902": [221, 879], "903": 221, "904": 221, "905": 221, "906": 221, "907": 221, "908": 221, "909": [221, 308], "911": 221, "912": 221, "913": 221, "914": 221, "915": 221, "916": 221, "917": [221, 270], "918": [221, 308], "919": 221, "920": 221, "921": [221, 308], "922": [221, 308], "923": 221, "924": 221, "925": 221, "926": [221, 308], "927": 221, "928": 221, "929": [221, 308], "930": 221, "931": 221, "932": 221, "933": [221, 308], "934": 221, "935": [221, 308], "936": 221, "937": 221, "938": 221, "939": [221, 308], "940": [221, 308], "941": [221, 308], "942": 221, "943": 221, "944": 221, "945": 221, "946": [221, 308], "947": 221, "948": 221, "949": [221, 308], "950": 221, "951": [221, 302], "952": 221, "953": 221, "954": 221, "955": 221, "956": 221, "957": 221, "958": 221, "959": 221, "960": 221, "961": 221, "962": 221, "963": 221, "964": [221, 308], "965": [221, 1116, 1117], "966": [221, 1116, 1117], "967": [221, 308, 1116, 1117], "968": [221, 1116, 1117], "969": [221, 1116, 1117], "970": 221, "971": [221, 308], "972": 221, "973": 221, "975": 221, "976": [221, 259, 266, 276, 280, 302, 308], "977": [221, 259, 266, 276, 280, 302, 308, 888], "timeaxi": 221, "myrang": 221, "1002": [221, 612, 613, 614, 615, 842], "1004": 221, "1006": 221, "1008": 221, "1010": 221, "1012": 221, "1014": 221, "1016": 221, "1018": 221, "1020": [221, 824, 825, 832], "1022": 221, "1028": 221, "1030": 221, "1032": 221, "1034": 221, "1036": 221, "1038": 221, "1040": 221, "1042": [221, 959], "1046": 221, "1048": 221, "1050": 221, "1052": 221, "1054": 221, "1056": 221, "1058": 221, "1060": 221, "1062": 221, "1064": 221, "1066": 221, "1068": [221, 270], "1070": [221, 270], "1072": [221, 270], "1074": 221, "1076": 221, "1078": 221, "1080": 221, "1082": 221, "1084": 221, "1086": 221, "1088": 221, "1090": 221, "1092": 221, "1094": 221, "1096": 221, "1098": 221, "1102": 221, "1104": 221, "1106": 221, "1108": 221, "1110": 221, "1114": 221, "1116": 221, "1118": 221, "1120": 221, "1122": 221, "1124": 221, "1126": 221, "1128": 221, "1130": 221, "1132": 221, "1134": 221, "1136": 221, "1138": 221, "1140": 221, "1142": 221, "1144": 221, "1146": 221, "1148": 221, "1150": 221, "1152": [221, 1117], "1154": [221, 1117], "1156": 221, "1158": 221, "1160": 221, "1162": 221, "1164": 221, "1166": 221, "1168": 221, "1170": 221, "1172": 221, "1174": 221, "1176": 221, "1178": 221, "1180": 221, "1182": 221, "1184": 221, "1186": 221, "1188": 221, "1190": 221, "1192": 221, "1194": 221, "1196": 221, "1198": 221, "1202": [221, 1117], "1204": [221, 1117], "1206": 221, "1208": 221, "1210": 221, "1212": 221, "1214": 221, "1216": 221, "1218": 221, "1220": 221, "1222": 221, "1224": 221, "1226": 221, "1228": 221, "1230": 221, "1232": 221, "1236": 221, "1238": 221, "1240": 221, "1242": 221, "1246": 221, "1248": 221, "1250": 221, "1252": 221, "1254": [221, 481, 482, 483, 495, 496, 497], "1256": 221, "1258": 221, "1260": [221, 446], "1262": 221, "1264": 221, "1266": 221, "1268": 221, "1270": 221, "1272": 221, "1274": 221, "1276": 221, "1278": 221, "1280": 221, "1282": 221, "1284": 221, "1286": 221, "1288": 221, "1290": 221, "1292": 221, "1294": 221, "1296": 221, "1298": 221, "1300": 221, "1302": 221, "1304": 221, "1306": 221, "1308": 221, "1310": 221, "1312": 221, "1314": 221, "1316": 221, "1318": 221, "1320": 221, "1322": 221, "1324": 221, "1326": 221, "1328": 221, "1330": 221, "1332": 221, "1334": 221, "1336": 221, "1338": 221, "1340": 221, "1342": 221, "1344": 221, "1346": 221, "1348": 221, "1350": 221, "1352": [221, 929], "1354": 221, "1356": 221, "1358": 221, "1360": 221, "1362": 221, "1364": 221, "1366": 221, "1368": 221, "1370": 221, "1372": 221, "1374": 221, "1378": 221, "1380": 221, "1382": 221, "1384": 221, "1386": 221, "1388": 221, "1390": 221, "1392": [221, 462], "1394": 221, "1396": 221, "1398": 221, "1400": 221, "1402": 221, "1406": 221, "1408": 221, "1410": 221, "1412": 221, "1414": 221, "1416": [221, 1040], "1418": 221, "1420": 221, "1422": 221, "1424": 221, "1426": 221, "1428": 221, "1430": 221, "1432": 221, "1434": 221, "1436": 221, "1438": 221, "1440": 221, "1442": 221, "1444": 221, "1446": 221, "1448": 221, "1450": [221, 1116], "1452": [221, 1116], "1454": [221, 1116], "1456": 221, "1458": 221, "1460": 221, "1462": 221, "1464": 221, "1466": 221, "1468": 221, "1470": 221, "1472": 221, "1474": 221, "1476": 221, "1478": 221, "1480": 221, "1482": 221, "1484": 221, "1486": 221, "1488": 221, "1490": 221, "1492": 221, "1494": 221, "1496": 221, "1498": 221, "1502": 221, "1504": 221, "1506": 221, "1508": 221, "1510": 221, "1512": 221, "1514": 221, "1516": 221, "1518": [221, 1116], "1520": [221, 1116], "1522": [221, 1116], "1524": 221, "1526": 221, "1528": 221, "1530": 221, "1532": 221, "1534": 221, "1536": [221, 971], "1538": 221, "1540": 221, "1542": 221, "1544": 221, "1546": 221, "1548": 221, "1550": 221, "1552": 221, "1554": 221, "1556": 221, "1558": [221, 840], "1560": 221, "1562": 221, "1564": 221, "1566": 221, "1568": 221, "1570": 221, "1572": 221, "1574": 221, "1576": 221, "1578": 221, "1580": 221, "1582": 221, "1584": 221, "1586": 221, "1588": 221, "1590": 221, "1592": 221, "1594": 221, "1596": 221, "1598": 221, "1600": 221, "1602": 221, "1604": [221, 965], "1606": 221, "1608": 221, "1610": 221, "1612": 221, "1614": 221, "1616": 221, "1618": 221, "1620": 221, "1622": 221, "1624": 221, "1626": 221, "1628": 221, "1630": 221, "1632": 221, "1634": [221, 481, 482], "1636": 221, "1638": 221, "1640": 221, "1642": 221, "1644": 221, "1646": 221, "1648": 221, "1650": 221, "1652": 221, "1654": 221, "1656": 221, "1658": 221, "1660": 221, "1662": 221, "1664": 221, "1666": 221, "1668": 221, "1672": 221, "1674": 221, "1676": 221, "1678": 221, "1680": 221, "1682": 221, "1684": 221, "1686": 221, "1688": [221, 972, 973], "1690": 221, "1692": 221, "1694": 221, "1696": 221, "1698": 221, "1700": 221, "1702": 221, "1704": 221, "1706": [221, 983], "1708": 221, "1710": 221, "1712": 221, "1714": 221, "1716": 221, "1718": 221, "1722": 221, "1724": 221, "1726": 221, "1728": 221, "1730": 221, "1732": 221, "1734": 221, "1736": 221, "1738": 221, "1740": 221, "1742": 221, "1744": 221, "1746": 221, "1748": 221, "1750": 221, "1752": 221, "1754": 221, "1756": 221, "1758": 221, "1760": 221, "1762": 221, "1764": [221, 280], "1766": 221, "1768": 221, "1770": 221, "1772": 221, "1774": 221, "1776": 221, "1778": 221, "1780": 221, "1782": 221, "1784": 221, "1786": 221, "1788": 221, "1790": 221, "1792": 221, "1794": 221, "1796": 221, "1798": 221, "1800": [221, 971], "1802": 221, "1804": 221, "1806": 221, "1808": 221, "1810": 221, "1812": 221, "1814": 221, "1816": 221, "1818": 221, "1820": 221, "1822": 221, "1824": 221, "1826": 221, "1828": 221, "1830": 221, "1832": 221, "1834": 221, "1836": 221, "1838": 221, "1840": 221, "1842": 221, "1844": 221, "1846": 221, "1848": 221, "1850": 221, "1852": 221, "1854": 221, "1856": 221, "1858": 221, "1860": 221, "1862": 221, "1864": 221, "1866": 221, "1868": 221, "1870": 221, "1872": 221, "1874": 221, "1876": 221, "1878": 221, "1880": 221, "1882": 221, "1884": 221, "1886": 221, "1888": 221, "1890": 221, "1892": 221, "1894": 221, "1896": 221, "1898": 221, "1900": [221, 231, 1084, 1086, 1090, 1092], "1902": 221, "1904": 221, "1906": 221, "1908": 221, "1910": 221, "1912": 221, "1914": 221, "1916": 221, "1918": 221, "1920": 221, "1922": 221, "1924": 221, "1926": 221, "1928": 221, "1930": 221, "1932": 221, "1934": 221, "1938": 221, "1940": 221, "1942": 221, "1944": 221, "1946": 221, "1948": 221, "1950": 221, "1952": 221, "1954": [221, 1050], "1956": [221, 1020], "1958": 221, "1962": 221, "1964": 221, "1968": [221, 391], "1970": [221, 730], "1972": 221, "1974": 221, "1976": 221, "1978": [221, 351], "1980": [221, 556, 971], "1984": 221, "1986": [221, 1084, 1086, 1090, 1092], "1988": [221, 351, 465], "1990": [221, 556], "1992": 221, "1994": 221, "2004": 221, "2024": [221, 347], "2026": 221, "2028": 221, "2030": 221, "2032": 221, "2034": 221, "2036": 221, "2038": 221, "2040": 221, "2042": 221, "2044": 221, "2046": 221, "2050": 221, "2052": 221, "2054": 221, "2056": 221, "2058": 221, "2060": 221, "2062": 221, "2064": 221, "2066": 221, "2068": 221, "2070": 221, "2072": 221, "2074": 221, "2076": 221, "2078": 221, "2080": 221, "2082": 221, "2084": 221, "2086": 221, "2088": 221, "2090": 221, "2092": 221, "2094": 221, "2096": 221, "2098": 221, "2100": 221, "2102": 221, "2104": 221, "2106": 221, "2108": 221, "2110": 221, "2112": 221, "2114": 221, "2116": 221, "2118": 221, "2120": 221, "2122": 221, "2124": 221, "2126": 221, "2128": 221, "2130": 221, "2132": 221, "2134": 221, "2136": 221, "2138": 221, "2140": 221, "2142": 221, "2144": 221, "2146": 221, "2148": 221, "2150": 221, "2152": 221, "2154": 221, "2156": 221, "2158": 221, "2160": 221, "2162": 221, "2164": 221, "2166": 221, "2168": 221, "2170": 221, "2172": 221, "2174": 221, "2176": 221, "2178": 221, "2180": 221, "2182": 221, "2184": 221, "2186": 221, "2188": 221, "2190": 221, "2192": 221, "2194": 221, "2196": [221, 748], "2198": 221, "2200": 221, "2202": 221, "2204": 221, "2206": 221, "2208": 221, "2210": 221, "2214": 221, "2216": 221, "2218": 221, "2220": 221, "2222": 221, "2224": 221, "2226": 221, "2228": 221, "2230": 221, "2232": 221, "2234": 221, "2236": 221, "2238": 221, "2240": 221, "2242": 221, "2244": 221, "2246": 221, "2248": 221, "2250": 221, "2252": 221, "2254": 221, "2256": 221, "2258": 221, "2260": 221, "2262": 221, "2264": 221, "2266": 221, "2268": 221, "2272": 221, "2274": 221, "2276": 221, "2278": 221, "2280": 221, "2282": 221, "2284": 221, "2286": 221, "2288": 221, "2290": 221, "2292": 221, "2294": 221, "2296": 221, "2298": 221, "2300": 221, "2302": 221, "2304": 221, "2306": 221, "2308": 221, "2310": 221, "2312": 221, "2314": 221, "2316": 221, "2318": 221, "2320": 221, "2322": 221, "2324": 221, "2326": 221, "2328": 221, "2330": 221, "2332": [221, 879], "2334": 221, "2336": 221, "2338": 221, "2340": 221, "2342": 221, "2344": 221, "2346": 221, "2348": 221, "2350": 221, "2352": 221, "2354": 221, "2356": 221, "2358": 221, "2360": 221, "2362": 221, "2364": 221, "2366": 221, "2368": 221, "2370": 221, "2372": 221, "2374": 221, "2376": 221, "2378": 221, "2380": 221, "2382": 221, "2384": 221, "2386": 221, "2388": 221, "2390": 221, "2392": 221, "2394": 221, "2396": 221, "2398": 221, "2400": 221, "2402": 221, "2404": 221, "2406": 221, "2408": 221, "2410": 221, "2412": 221, "2414": 221, "2416": 221, "2418": 221, "2420": 221, "2422": 221, "2424": 221, "2426": 221, "2428": 221, "2430": 221, "2432": 221, "2434": 221, "2436": 221, "2438": 221, "2440": [221, 302, 308], "2442": 221, "2444": 221, "2446": 221, "2448": 221, "2450": 221, "2452": 221, "2454": 221, "2456": 221, "2458": 221, "2460": [221, 705], "2462": 221, "2464": 221, "2466": 221, "2468": 221, "2470": 221, "2472": 221, "2474": 221, "2476": 221, "2478": 221, "2480": 221, "2482": 221, "2484": 221, "2486": 221, "2488": 221, "2490": 221, "2492": 221, "2494": 221, "2496": 221, "2498": 221, "2500": 221, "2502": 221, "2504": 221, "2506": 221, "2508": 221, "2510": 221, "2512": 221, "2514": 221, "2516": 221, "2518": 221, "2520": 221, "2522": 221, "2524": 221, "2526": 221, "2528": 221, "2530": 221, "2532": 221, "2534": 221, "2536": 221, "2538": 221, "2540": 221, "2542": 221, "2544": 221, "2546": 221, "2548": 221, "2550": 221, "2552": 221, "2554": 221, "2556": 221, "2558": 221, "2560": 221, "2562": 221, "2564": 221, "2566": 221, "2568": 221, "2570": 221, "2572": 221, "2574": 221, "2576": 221, "2578": 221, "2580": 221, "2582": 221, "2584": 221, "2586": 221, "2588": 221, "2590": 221, "2592": 221, "2594": 221, "2596": 221, "2598": 221, "2600": 221, "2602": 221, "2604": 221, "2606": 221, "2608": 221, "2610": 221, "2612": 221, "2614": 221, "2616": 221, "2618": 221, "2620": 221, "2622": 221, "2624": 221, "2626": 221, "2628": 221, "2630": 221, "2632": 221, "2634": 221, "2636": 221, "2638": 221, "2640": [221, 280], "2642": 221, "2644": 221, "2646": 221, "2648": 221, "2650": 221, "2652": 221, "2654": 221, "2656": 221, "2658": 221, "2660": 221, "2662": 221, "2664": 221, "2666": 221, "2668": 221, "2670": 221, "2672": 221, "2674": 221, "2676": 221, "2678": 221, "2680": 221, "2682": 221, "2684": 221, "2686": 221, "2688": 221, "2690": 221, "2692": 221, "2694": 221, "2696": 221, "2698": 221, "2700": 221, "2702": 221, "2704": 221, "2706": 221, "2708": 221, "2710": 221, "2712": 221, "2714": 221, "2716": 221, "2718": 221, "2720": 221, "2722": 221, "2724": 221, "2726": 221, "2728": 221, "2730": [221, 276], "2732": 221, "2734": 221, "2736": 221, "2738": 221, "2740": 221, "2742": 221, "2744": 221, "2746": [221, 879, 905, 929], "2748": [221, 241, 259, 266, 298, 302, 308], "2750": 221, "2752": 221, "2754": 221, "2756": 221, "2758": 221, "2760": 221, "2762": 221, "2764": 221, "2766": 221, "2768": 221, "2770": 221, "2772": 221, "2774": 221, "2776": 221, "2778": 221, "2780": 221, "2782": 221, "2784": 221, "2786": 221, "2788": 221, "2790": 221, "2792": 221, "2794": 221, "2796": 221, "2798": 221, "2800": [221, 264, 439], "2802": [221, 439], "2804": 221, "2806": 221, "2808": 221, "2810": 221, "2812": 221, "2814": 221, "2816": 221, "2818": 221, "2820": 221, "2822": 221, "2824": 221, "2826": 221, "2828": [221, 433], "2830": 221, "2832": 221, "2834": 221, "2836": 221, "2838": 221, "2840": 221, "2842": 221, "2844": 221, "2846": 221, "2848": 221, "2850": 221, "2852": 221, "2854": 221, "2856": 221, "2858": 221, "2860": 221, "2862": 221, "2864": 221, "2866": 221, "2868": 221, "2870": 221, "2872": 221, "2874": 221, "2876": 221, "2878": 221, "2880": 221, "2882": 221, "2884": 221, "2886": 221, "2888": 221, "2890": 221, "2892": 221, "2894": 221, "2896": 221, "2898": 221, "2900": 221, "2902": 221, "2904": 221, "2906": 221, "2910": 221, "2912": 221, "2914": 221, "2916": 221, "2918": 221, "2920": 221, "2922": 221, "2924": 221, "2926": 221, "2928": 221, "2930": 221, "2932": 221, "2934": 221, "2936": 221, "2938": 221, "2940": 221, "2942": 221, "2944": 221, "2946": 221, "2948": 221, "2950": 221, "2952": 221, "2954": 221, "2956": 221, "2958": 221, "2960": 221, "2962": 221, "2964": 221, "2966": 221, "2968": 221, "2970": 221, "2972": 221, "2974": 221, "2976": 221, "2978": 221, "2980": 221, "2982": 221, "2984": 221, "2986": 221, "2988": 221, "2990": 221, "2992": 221, "2994": 221, "2996": 221, "2998": 221, "3002": 221, "3004": 221, "3006": 221, "3008": 221, "3010": 221, "3012": 221, "3014": 221, "3016": 221, "3018": 221, "3020": 221, "3022": 221, "3024": 221, "3026": 221, "3028": 221, "3030": 221, "3032": 221, "3034": 221, "3036": 221, "3038": 221, "3040": 221, "3042": 221, "3044": 221, "3046": 221, "3048": 221, "3050": 221, "3052": 221, "3054": 221, "3056": 221, "3058": 221, "3060": 221, "3062": 221, "3064": 221, "3066": 221, "3068": 221, "3070": 221, "3072": 221, "3074": 221, "3076": 221, "3078": 221, "3080": 221, "3082": 221, "3084": 221, "3086": 221, "3088": 221, "3090": 221, "3092": 221, "3094": 221, "3096": 221, "3098": 221, "3100": 221, "3102": 221, "3104": 221, "3106": 221, "3108": 221, "3110": [221, 270], "3112": 221, "3114": 221, "3116": 221, "3118": 221, "3120": 221, "3122": 221, "3124": 221, "3126": 221, "3128": 221, "3130": 221, "3132": 221, "3134": 221, "3136": 221, "3138": 221, "3140": 221, "3142": 221, "3144": 221, "3146": 221, "3148": 221, "3150": 221, "3152": 221, "3154": 221, "3156": 221, "3158": 221, "3160": 221, "3162": 221, "3164": 221, "3166": 221, "3168": 221, "3170": 221, "3172": 221, "3174": 221, "3176": 221, "3178": 221, "3180": 221, "3182": 221, "3184": 221, "3186": 221, "3188": 221, "3190": 221, "3192": 221, "3194": 221, "3196": 221, "3198": 221, "3200": 221, "3202": 221, "3204": 221, "3206": 221, "3208": 221, "3210": 221, "3212": 221, "3214": 221, "3216": 221, "3218": 221, "3220": 221, "3222": 221, "3224": 221, "3226": 221, "3228": 221, "3230": 221, "3232": 221, "3234": 221, "3236": 221, "3238": 221, "3240": 221, "3242": 221, "3244": 221, "3246": 221, "3248": 221, "3250": 221, "3252": 221, "3254": 221, "3256": 221, "3258": 221, "3260": 221, "3262": 221, "3264": 221, "3266": 221, "3268": 221, "3270": 221, "3272": 221, "3274": 221, "3276": 221, "3278": 221, "3280": 221, "3282": 221, "3284": 221, "3286": 221, "3288": 221, "3290": 221, "3292": 221, "3294": 221, "3296": 221, "3298": 221, "3300": 221, "3302": 221, "3304": 221, "3306": 221, "3308": 221, "3310": 221, "3312": 221, "3314": 221, "3316": 221, "3318": 221, "3320": 221, "3322": 221, "3324": 221, "3326": 221, "3328": 221, "3330": 221, "3332": 221, "3334": 221, "3336": 221, "3338": 221, "3340": 221, "3342": 221, "3344": 221, "3346": 221, "3348": 221, "3350": 221, "3352": 221, "3354": 221, "3356": 221, "3358": 221, "3360": 221, "3362": 221, "3364": 221, "3366": 221, "3368": 221, "3370": 221, "3372": 221, "3374": 221, "3376": 221, "3378": 221, "3380": 221, "3382": 221, "3384": 221, "3386": 221, "3388": 221, "3390": 221, "3392": 221, "3394": 221, "3396": 221, "3398": 221, "3400": 221, "3402": 221, "3404": 221, "3406": 221, "3408": 221, "3410": 221, "3412": 221, "3414": 221, "3416": 221, "3418": 221, "3420": 221, "3422": 221, "3424": 221, "3426": 221, "3428": 221, "3430": 221, "3432": 221, "3434": 221, "3436": 221, "3438": 221, "3440": 221, "3442": 221, "3444": 221, "3446": 221, "3448": 221, "3450": 221, "3452": 221, "3454": 221, "3456": 221, "3458": 221, "3460": 221, "3462": 221, "3464": 221, "3466": 221, "3468": 221, "3470": 221, "3472": 221, "3474": 221, "3476": 221, "3478": 221, "3480": 221, "3482": 221, "3484": 221, "3486": 221, "3488": 221, "3490": 221, "3492": 221, "3494": 221, "3496": 221, "3498": 221, "3500": 221, "3502": 221, "3504": 221, "3506": 221, "3508": 221, "3510": 221, "3512": 221, "3514": 221, "3516": 221, "3518": 221, "3520": 221, "3522": 221, "3524": 221, "3526": 221, "3528": 221, "3530": 221, "3532": 221, "3534": 221, "3536": 221, "3538": 221, "3540": 221, "3542": 221, "3544": 221, "3546": 221, "3548": 221, "3550": 221, "3552": 221, "3554": 221, "3556": 221, "3558": 221, "3560": 221, "3562": 221, "3564": 221, "3566": 221, "3568": 221, "3570": 221, "3572": 221, "3574": 221, "3576": 221, "3578": 221, "3580": 221, "3582": 221, "3584": 221, "3586": 221, "3588": 221, "3590": 221, "3592": 221, "3594": 221, "3596": 221, "3598": 221, "3602": 221, "3604": 221, "3606": 221, "3608": 221, "3610": 221, "3612": 221, "3614": 221, "3616": 221, "3618": 221, "3620": [221, 1117], "3622": [221, 1117], "3624": [221, 1117], "3626": 221, "3628": 221, "3630": 221, "3632": 221, "3634": 221, "3636": 221, "3638": 221, "3640": 221, "3642": 221, "3644": 221, "3646": 221, "3648": 221, "3650": 221, "3652": 221, "3654": 221, "3656": 221, "3658": 221, "3660": 221, "3662": 221, "3664": 221, "3666": 221, "3668": 221, "3670": 221, "3672": 221, "3674": 221, "3676": 221, "3678": 221, "3680": 221, "3682": 221, "3684": 221, "3686": 221, "3688": 221, "3690": 221, "3692": 221, "3694": 221, "3696": 221, "3698": 221, "3700": 221, "3702": 221, "3704": 221, "3706": 221, "3708": 221, "3710": 221, "3712": 221, "3714": 221, "3716": 221, "3718": 221, "3720": 221, "3722": [221, 926], "3724": 221, "3726": 221, "3728": 221, "3730": 221, "3732": 221, "3734": 221, "3736": 221, "3738": 221, "3740": 221, "3742": 221, "3744": 221, "3746": 221, "3748": 221, "3750": 221, "3752": 221, "3754": 221, "3756": 221, "3758": 221, "3760": 221, "3762": 221, "3764": 221, "3766": 221, "3768": 221, "3770": [221, 270], "3772": 221, "3774": 221, "3776": 221, "3778": 221, "3780": 221, "3782": 221, "3784": 221, "3786": 221, "3788": 221, "3790": 221, "3792": 221, "3794": 221, "3796": 221, "3798": 221, "3800": 221, "3802": 221, "3804": 221, "3806": 221, "3808": 221, "3810": 221, "3812": 221, "3814": 221, "3816": 221, "3818": 221, "3820": 221, "3822": 221, "3824": 221, "3826": 221, "3828": 221, "3830": 221, "3832": 221, "3834": 221, "3836": 221, "3838": 221, "3840": 221, "3842": 221, "3844": 221, "3846": 221, "3848": 221, "3850": 221, "3852": 221, "3854": 221, "3856": 221, "3858": 221, "3860": 221, "3862": 221, "3864": 221, "3866": 221, "3868": 221, "3870": 221, "3872": 221, "3874": [221, 1117], "3876": [221, 1117], "3878": [221, 1117], "3880": 221, "3882": 221, "3884": 221, "3886": 221, "3888": 221, "3890": 221, "3892": 221, "3894": 221, "3896": 221, "3898": 221, "3900": 221, "3902": 221, "3904": 221, "3906": 221, "3908": 221, "3910": 221, "3912": 221, "3914": 221, "3916": 221, "3918": 221, "3920": 221, "3922": 221, "3924": 221, "3926": 221, "3928": 221, "3930": 221, "3932": 221, "3934": 221, "3936": 221, "3938": 221, "3940": 221, "3942": 221, "3946": 221, "3948": 221, "3950": 221, "3952": 221, "3954": 221, "3956": 221, "3958": 221, "3960": 221, "3962": 221, "3964": 221, "3966": 221, "3968": 221, "3970": 221, "3972": 221, "3974": 221, "3976": 221, "3978": 221, "3980": 221, "3982": 221, "3984": 221, "3986": 221, "3988": 221, "3990": 221, "3992": 221, "3994": 221, "3996": 221, "3998": 221, "4002": 221, "4004": 221, "4006": 221, "4008": 221, "4010": 221, "4012": 221, "4014": 221, "4016": 221, "4018": 221, "4020": 221, "4022": 221, "4024": 221, "4026": 221, "4028": 221, "4030": 221, "4032": 221, "4034": 221, "4036": 221, "4038": 221, "4040": 221, "4042": 221, "4044": 221, "4046": 221, "4048": 221, "4050": 221, "4052": 221, "4054": 221, "4056": 221, "4058": 221, "4060": 221, "4062": 221, "4064": 221, "4066": 221, "4068": 221, "4070": 221, "4072": 221, "4074": 221, "4076": 221, "4078": 221, "4080": 221, "4082": 221, "4084": 221, "4086": 221, "4088": 221, "4090": 221, "4092": 221, "4094": 221, "4098": 221, "4100": 221, "4102": 221, "4104": 221, "4106": 221, "4108": 221, "4110": 221, "4112": 221, "4114": 221, "4116": 221, "4118": 221, "4120": 221, "4122": 221, "4124": 221, "4126": 221, "4128": 221, "4130": 221, "4132": 221, "4134": 221, "4136": 221, "4138": 221, "4140": 221, "4142": 221, "4144": 221, "4146": 221, "4148": 221, "4150": 221, "4152": 221, "4154": 221, "4156": 221, "4158": 221, "4160": 221, "4162": 221, "4164": 221, "4166": 221, "4168": 221, "4170": 221, "4172": 221, "4174": 221, "4176": 221, "4178": 221, "4180": 221, "4182": 221, "4184": 221, "4186": 221, "4188": 221, "4190": 221, "4192": 221, "4194": 221, "4196": 221, "4198": 221, "4200": 221, "4202": 221, "4204": 221, "4206": 221, "4208": 221, "4210": 221, "4212": 221, "4214": 221, "4216": 221, "4218": 221, "4220": 221, "4222": 221, "4224": 221, "4226": 221, "4228": 221, "4230": 221, "4232": 221, "4234": 221, "4236": 221, "4238": 221, "4240": 221, "4242": 221, "4244": 221, "4246": 221, "4248": 221, "4250": 221, "4252": 221, "4254": 221, "4256": 221, "4258": 221, "4260": 221, "4262": 221, "4264": 221, "4266": 221, "4268": 221, "4270": 221, "4272": 221, "4274": 221, "4276": 221, "4278": 221, "4280": 221, "4282": 221, "4284": 221, "4286": 221, "4288": 221, "4290": 221, "4292": 221, "4294": 221, "4296": 221, "4298": 221, "4300": 221, "4302": 221, "4304": 221, "4306": 221, "4308": 221, "4310": 221, "4312": 221, "4314": 221, "4316": 221, "4318": 221, "4320": 221, "4322": 221, "4324": 221, "4326": 221, "4328": 221, "4330": 221, "4332": 221, "4334": 221, "4336": 221, "4338": 221, "4340": 221, "4342": 221, "4344": 221, "4346": 221, "4348": 221, "4350": 221, "4352": 221, "4354": 221, "4356": 221, "4358": 221, "4360": 221, "4362": 221, "4364": [221, 995], "4366": 221, "4368": 221, "4370": 221, "4372": 221, "4374": 221, "4376": 221, "4378": 221, "4380": 221, "4382": 221, "4384": 221, "4386": 221, "4388": 221, "4390": 221, "4392": 221, "4394": 221, "4396": 221, "4398": 221, "4400": 221, "4402": 221, "4404": 221, "4406": 221, "4408": 221, "4410": 221, "4412": 221, "4414": 221, "4416": 221, "4418": 221, "4420": 221, "4422": 221, "4424": 221, "4426": 221, "4428": 221, "4430": 221, "4432": 221, "4434": 221, "4436": 221, "4438": 221, "4440": 221, "4442": 221, "4444": 221, "4446": 221, "4448": 221, "4450": 221, "4452": 221, "4454": 221, "4456": 221, "4458": 221, "4460": 221, "4462": 221, "4464": 221, "4466": 221, "4468": 221, "4470": 221, "4472": 221, "4474": 221, "4476": 221, "4478": 221, "4480": 221, "4482": 221, "4484": 221, "4486": 221, "4488": 221, "4490": 221, "4492": 221, "4494": 221, "4496": 221, "4498": 221, "4502": 221, "4504": 221, "4506": 221, "4508": 221, "4510": 221, "4512": 221, "4514": 221, "4516": 221, "4518": 221, "4520": 221, "4522": 221, "4524": 221, "4526": 221, "4528": 221, "4530": 221, "4532": 221, "4534": 221, "4536": 221, "4538": 221, "4540": 221, "4542": 221, "4544": 221, "4546": 221, "4548": 221, "4550": 221, "4552": 221, "4554": 221, "4556": 221, "4558": 221, "4560": 221, "4562": 221, "4564": 221, "4566": 221, "4568": 221, "4570": 221, "4572": 221, "4574": 221, "4578": 221, "4580": 221, "4582": 221, "4584": 221, "4586": 221, "4588": 221, "4590": 221, "4592": 221, "4594": 221, "4596": 221, "4598": 221, "4600": 221, "4602": 221, "4604": 221, "4606": 221, "4608": 221, "4610": 221, "4612": 221, "4614": 221, "4616": 221, "4618": 221, "4620": 221, "4622": 221, "4624": 221, "4626": 221, "4628": [221, 234], "4630": [221, 433], "4632": 221, "4634": 221, "4636": 221, "4638": 221, "4640": 221, "4642": 221, "4644": 221, "4646": 221, "4648": 221, "4650": 221, "4652": 221, "4654": 221, "4656": 221, "4658": 221, "4662": 221, "4664": 221, "4666": 221, "4668": 221, "4670": 221, "4672": 221, "4674": 221, "4676": 221, "4680": 221, "4682": 221, "4684": 221, "4686": 221, "4688": 221, "4690": 221, "4692": 221, "4694": 221, "4696": 221, "4698": 221, "4700": 221, "4702": 221, "4704": 221, "4706": 221, "4708": 221, "4710": 221, "4712": 221, "4714": 221, "4716": 221, "4718": 221, "4720": 221, "4722": 221, "4724": 221, "4726": 221, "4728": 221, "4730": 221, "4732": 221, "4734": 221, "4736": 221, "4738": 221, "4740": 221, "4742": 221, "4744": 221, "4746": 221, "4748": 221, "4750": 221, "4752": 221, "4754": 221, "4756": 221, "4758": 221, "4760": 221, "4762": 221, "4764": 221, "4766": 221, "4768": 221, "4770": 221, "4772": 221, "4774": 221, "4776": 221, "4778": 221, "4780": 221, "4782": 221, "4784": 221, "4786": 221, "4788": 221, "4790": 221, "4792": 221, "4794": 221, "4796": 221, "4798": 221, "4802": 221, "4804": 221, "4806": 221, "4808": 221, "4810": 221, "4812": 221, "4814": 221, "4816": 221, "4818": 221, "4820": 221, "4822": 221, "4824": 221, "4826": 221, "4828": 221, "4830": 221, "4832": 221, "4834": 221, "4836": 221, "4838": 221, "4840": 221, "4842": 221, "4844": 221, "4846": 221, "4848": 221, "4850": 221, "4852": 221, "4854": 221, "4856": 221, "4858": 221, "4860": 221, "4862": 221, "4864": 221, "4866": [221, 231], "4868": 221, "4870": 221, "4872": 221, "4874": 221, "4876": 221, "4878": 221, "4880": 221, "4882": [221, 842], "4884": 221, "4886": 221, "4888": 221, "4890": 221, "4892": 221, "4894": 221, "4896": 221, "4898": 221, "4900": 221, "4902": 221, "4904": 221, "4906": 221, "4908": 221, "4910": 221, "4912": 221, "4914": 221, "4916": 221, "4918": 221, "4920": 221, "4922": 221, "4924": 221, "4926": [221, 234], "4928": 221, "4930": 221, "4932": 221, "4934": 221, "4936": 221, "4938": 221, "4940": 221, "4942": 221, "4944": 221, "4946": 221, "4948": 221, "4950": [221, 238], "4952": 221, "4954": 221, "4956": 221, "4958": 221, "4960": 221, "4962": 221, "4964": 221, "4966": 221, "4968": 221, "4970": 221, "4972": 221, "4974": 221, "4976": 221, "4978": 221, "4980": 221, "4982": 221, "4984": 221, "4986": 221, "4988": 221, "4990": 221, "4992": 221, "4994": 221, "4996": 221, "4998": 221, "5002": 221, "5004": 221, "5006": 221, "5008": 221, "5010": 221, "5012": 221, "5014": 221, "5016": 221, "5018": 221, "5020": 221, "5022": 221, "5024": 221, "5026": 221, "5028": 221, "5030": 221, "5032": 221, "5034": 221, "5036": 221, "5038": 221, "5040": 221, "5042": 221, "5044": 221, "5046": 221, "5048": 221, "5052": 221, "5054": 221, "5056": 221, "5058": 221, "5060": 221, "5062": 221, "5064": 221, "5066": 221, "5068": 221, "5070": 221, "5072": 221, "5074": 221, "5076": 221, "5078": 221, "5080": [221, 879], "5082": 221, "5084": 221, "5086": 221, "5088": 221, "5090": 221, "5092": 221, "5094": 221, "5096": 221, "5098": 221, "5100": 221, "5102": 221, "5104": 221, "5106": 221, "5108": 221, "5110": 221, "5112": 221, "5114": 221, "5116": 221, "5118": 221, "5120": 221, "5122": 221, "5124": 221, "5126": 221, "5128": 221, "5130": 221, "5132": 221, "5134": 221, "5136": 221, "5138": 221, "5140": 221, "5142": 221, "5144": 221, "5146": 221, "5148": 221, "5150": 221, "5152": 221, "5154": 221, "5156": 221, "5158": 221, "5160": 221, "5162": 221, "5164": 221, "5166": 221, "5168": 221, "5170": 221, "5172": 221, "5174": 221, "5176": 221, "5178": 221, "5180": 221, "5182": 221, "5184": 221, "5186": 221, "5188": 221, "5190": 221, "5192": 221, "5194": 221, "5196": 221, "5198": 221, "5200": 221, "5202": 221, "5204": 221, "5206": 221, "5208": 221, "5210": 221, "5212": 221, "5214": 221, "5216": 221, "5218": 221, "5220": 221, "5222": 221, "5224": 221, "5226": 221, "5228": 221, "5230": 221, "5232": 221, "5234": 221, "5236": 221, "5238": 221, "5240": 221, "5242": 221, "5244": 221, "5246": 221, "5248": 221, "5250": 221, "5252": 221, "5254": 221, "5256": 221, "5258": 221, "5260": 221, "5262": 221, "5264": 221, "5266": 221, "5268": 221, "5270": 221, "5272": 221, "5274": 221, "5276": 221, "5278": 221, "5280": 221, "5282": 221, "5284": 221, "5286": 221, "5288": 221, "5290": 221, "5292": 221, "5294": 221, "5296": 221, "5298": 221, "5300": 221, "5302": 221, "5304": 221, "5306": 221, "5308": 221, "5310": 221, "5312": 221, "5314": 221, "5316": 221, "5318": 221, "5320": 221, "5322": 221, "5324": 221, "5326": 221, "5328": 221, "5330": 221, "5332": 221, "5334": 221, "5336": 221, "5338": 221, "5340": 221, "5342": 221, "5344": 221, "5346": 221, "5348": 221, "5350": 221, "5352": 221, "5354": 221, "5356": 221, "5358": 221, "5360": 221, "5362": [221, 264, 439], "5364": 221, "5366": 221, "5368": 221, "5370": 221, "5372": 221, "5374": 221, "5376": 221, "5378": 221, "5380": 221, "5382": 221, "5384": 221, "5386": 221, "5388": 221, "5390": 221, "5392": 221, "5394": 221, "5396": 221, "5398": 221, "5400": 221, "5402": 221, "5404": 221, "5406": 221, "5408": 221, "5410": [221, 433], "5412": 221, "5414": 221, "5416": 221, "5418": 221, "5420": 221, "5422": 221, "5424": 221, "5426": 221, "5428": 221, "5430": 221, "5432": 221, "5434": 221, "5436": 221, "5438": 221, "5440": 221, "5442": 221, "5444": 221, "5446": 221, "5448": 221, "5450": 221, "5452": 221, "5454": 221, "5456": 221, "5458": 221, "5460": 221, "5462": 221, "5464": 221, "5466": 221, "5468": 221, "5470": 221, "5472": 221, "5474": 221, "5476": 221, "5478": 221, "5480": 221, "5482": 221, "5484": 221, "5486": 221, "5488": 221, "5490": 221, "5492": 221, "5494": 221, "5496": 221, "5498": 221, "5500": 221, "5502": 221, "5504": 221, "5506": 221, "5508": 221, "5510": 221, "5512": 221, "5514": 221, "5516": 221, "5518": 221, "5520": 221, "5522": 221, "5524": 221, "5526": 221, "5528": 221, "5530": 221, "5532": 221, "5534": 221, "5536": 221, "5538": 221, "5540": 221, "5542": 221, "5544": 221, "5546": 221, "5548": 221, "5550": 221, "5552": 221, "5554": 221, "5556": 221, "5558": 221, "5560": 221, "5562": 221, "5564": 221, "5566": 221, "5568": 221, "5570": 221, "5572": 221, "5574": 221, "5576": 221, "5578": 221, "5580": 221, "5582": 221, "5584": 221, "5586": 221, "5588": 221, "5590": 221, "5592": 221, "5594": 221, "5596": 221, "5598": 221, "5600": 221, "5602": 221, "5604": 221, "5606": 221, "5608": 221, "5610": 221, "5612": 221, "5614": 221, "5616": 221, "5618": 221, "5620": 221, "5622": 221, "5624": 221, "5626": 221, "5628": 221, "5630": 221, "5632": 221, "5634": 221, "5636": 221, "5638": 221, "5640": 221, "5642": 221, "5644": 221, "5646": 221, "5648": 221, "5650": 221, "5652": 221, "5654": 221, "5656": 221, "5658": 221, "5660": 221, "5662": 221, "5664": 221, "5666": 221, "5668": 221, "5670": 221, "5672": 221, "5674": 221, "5676": 221, "5678": [221, 912], "5680": 221, "5682": 221, "5684": 221, "5686": 221, "5688": 221, "5690": 221, "5692": 221, "5694": 221, "5696": 221, "5698": 221, "5700": 221, "5702": 221, "5704": 221, "5706": 221, "5708": 221, "5710": 221, "5712": 221, "5714": 221, "5716": 221, "5718": 221, "5720": 221, "5722": 221, "5724": 221, "5726": 221, "5728": 221, "5730": 221, "5732": 221, "5734": 221, "5736": 221, "5738": 221, "5740": 221, "5742": 221, "5744": 221, "5746": 221, "5748": 221, "5750": 221, "5752": 221, "5754": 221, "5756": 221, "5758": 221, "5760": 221, "5762": 221, "5764": 221, "5766": 221, "5768": 221, "5770": 221, "5772": 221, "5774": 221, "5776": 221, "5778": 221, "5780": 221, "5782": 221, "5784": 221, "5786": 221, "5788": 221, "5790": 221, "5792": 221, "5794": 221, "5796": 221, "5798": 221, "5800": 221, "5802": 221, "5804": 221, "5806": 221, "5808": 221, "5810": 221, "5812": 221, "5814": 221, "5816": 221, "5818": 221, "5820": 221, "5822": 221, "5824": 221, "5826": 221, "5828": 221, "5830": 221, "5832": [221, 231], "5834": 221, "5836": 221, "5838": 221, "5840": 221, "5842": 221, "5844": 221, "5846": 221, "5848": 221, "5850": 221, "5852": 221, "5854": 221, "5856": 221, "5858": 221, "5860": 221, "5862": 221, "5864": 221, "5866": 221, "5868": 221, "5870": 221, "5872": 221, "5874": 221, "5876": 221, "5878": 221, "5880": 221, "5882": 221, "5884": 221, "5886": 221, "5888": 221, "5890": 221, "5892": 221, "5894": 221, "5896": 221, "5898": 221, "5900": 221, "5902": 221, "5904": 221, "5906": 221, "5908": 221, "5910": 221, "5912": 221, "5914": 221, "5916": 221, "5918": 221, "5920": 221, "5922": 221, "5924": 221, "5926": 221, "5928": 221, "5930": 221, "5932": 221, "5934": 221, "5936": 221, "5938": 221, "5940": 221, "5942": 221, "5944": 221, "5946": 221, "5948": 221, "5950": 221, "5952": 221, "5954": 221, "5956": 221, "5958": 221, "5960": 221, "5962": 221, "5964": 221, "5966": 221, "5968": 221, "5970": 221, "5972": 221, "5974": 221, "5976": 221, "5978": 221, "5980": 221, "5982": 221, "5984": 221, "5986": 221, "5988": 221, "5990": 221, "5992": 221, "5994": 221, "5996": 221, "5998": 221, "6000": [221, 1011], "6002": 221, "6004": 221, "6006": 221, "6008": 221, "6010": 221, "6012": 221, "6014": 221, "6016": 221, "6018": 221, "6020": 221, "6022": 221, "6024": 221, "6026": 221, "6028": 221, "6030": 221, "6032": 221, "6034": 221, "6036": 221, "6038": 221, "6040": 221, "6042": 221, "6044": 221, "6046": 221, "6048": 221, "6050": 221, "6052": 221, "6054": 221, "6056": 221, "6058": 221, "6060": 221, "6062": 221, "6064": 221, "6066": 221, "6068": 221, "6070": 221, "6072": 221, "6074": 221, "6076": 221, "6078": 221, "6080": 221, "6082": 221, "6084": 221, "6086": 221, "6088": 221, "6090": 221, "6092": 221, "6094": 221, "6096": 221, "6098": 221, "6100": 221, "6102": 221, "6104": 221, "6106": 221, "6108": 221, "6110": 221, "6112": 221, "6114": 221, "6116": 221, "6118": 221, "6120": 221, "6122": 221, "6124": 221, "6126": 221, "6128": 221, "6130": 221, "6132": 221, "6134": 221, "6136": 221, "6138": 221, "6140": 221, "6142": 221, "6144": 221, "6146": 221, "6148": 221, "6150": 221, "6152": 221, "6154": 221, "6156": 221, "6158": 221, "6160": 221, "6162": 221, "6164": 221, "6166": 221, "6168": 221, "6170": 221, "6172": 221, "6174": 221, "6176": 221, "6178": 221, "6180": 221, "6182": 221, "6184": 221, "6186": 221, "6188": 221, "6190": 221, "6192": 221, "6194": 221, "6196": 221, "6198": 221, "6200": 221, "6202": 221, "6204": 221, "6206": 221, "6208": 221, "6210": 221, "6212": 221, "6214": 221, "6216": 221, "6218": 221, "6220": 221, "6222": 221, "6224": 221, "6226": 221, "6228": 221, "6230": 221, "6232": 221, "6234": 221, "6236": 221, "6238": 221, "6240": 221, "6242": 221, "6244": 221, "6246": 221, "6248": 221, "6250": 221, "6252": 221, "6254": 221, "6256": 221, "6258": 221, "6260": 221, "6262": 221, "6264": 221, "6266": 221, "6268": 221, "6270": 221, "6272": 221, "6274": 221, "6276": 221, "6278": 221, "6280": 221, "6282": 221, "6284": 221, "6286": 221, "6288": 221, "6290": 221, "6292": 221, "6294": 221, "6296": 221, "6298": 221, "6300": 221, "6302": 221, "6304": 221, "6306": 221, "6308": 221, "6310": 221, "6312": 221, "6314": 221, "6316": 221, "6318": 221, "6320": 221, "6322": 221, "6324": 221, "6326": 221, "6328": 221, "6330": 221, "6332": 221, "6334": 221, "6336": 221, "6338": 221, "6340": 221, "6342": 221, "6344": 221, "6346": 221, "6348": 221, "6350": 221, "6352": 221, "6354": 221, "6356": 221, "6358": 221, "6360": 221, "6362": 221, "6364": 221, "6366": 221, "6368": 221, "6370": 221, "6372": 221, "6374": 221, "6376": 221, "6378": 221, "6380": 221, "6382": 221, "6384": 221, "6386": 221, "6388": 221, "6390": 221, "6392": 221, "6394": 221, "6396": 221, "6398": 221, "6400": 221, "6402": 221, "6404": 221, "6406": 221, "6408": 221, "6410": 221, "6412": 221, "6414": 221, "6416": 221, "6418": 221, "6420": 221, "6422": 221, "6424": 221, "6426": 221, "6428": 221, "6430": 221, "6432": 221, "6434": 221, "6436": 221, "6438": 221, "6440": 221, "6442": 221, "6444": 221, "6446": 221, "6448": 221, "6450": 221, "6452": 221, "6454": 221, "6456": 221, "6458": 221, "6460": 221, "6462": 221, "6464": 221, "6466": 221, "6468": 221, "6470": 221, "6472": 221, "6474": 221, "6476": 221, "6478": 221, "6480": 221, "6482": 221, "6484": 221, "6486": 221, "6488": 221, "6490": 221, "6492": 221, "6494": 221, "6496": 221, "6498": 221, "6500": 221, "6502": 221, "6504": 221, "6506": 221, "6508": 221, "6510": 221, "6512": 221, "6514": 221, "6516": 221, "6518": 221, "6520": 221, "6522": 221, "6524": 221, "6526": 221, "6528": 221, "6530": 221, "6532": 221, "6534": 221, "6536": 221, "6538": 221, "6540": 221, "6542": 221, "6544": 221, "6546": 221, "6548": 221, "6550": 221, "6552": 221, "6554": 221, "6556": 221, "6558": 221, "6560": 221, "6562": 221, "6564": 221, "6566": 221, "6568": 221, "6570": 221, "6572": 221, "6574": 221, "6576": 221, "6578": 221, "6580": 221, "6582": 221, "6584": 221, "6586": 221, "6588": 221, "6590": 221, "6592": 221, "6594": 221, "6596": 221, "6598": 221, "6600": 221, "6602": 221, "6604": 221, "6606": 221, "6608": 221, "6610": 221, "6612": 221, "6614": 221, "6616": 221, "6618": 221, "6620": 221, "6622": 221, "6624": 221, "6626": 221, "6628": 221, "6630": 221, "6632": 221, "6634": 221, "6636": 221, "6638": 221, "6640": 221, "6642": 221, "6644": 221, "6646": 221, "6648": 221, "6650": 221, "6652": 221, "6654": 221, "6656": 221, "6658": 221, "6660": 221, "6662": 221, "6664": 221, "6666": 221, "6668": 221, "6670": 221, "6672": 221, "6674": 221, "6676": 221, "6678": 221, "6680": 221, "6682": 221, "6684": 221, "6686": 221, "6688": 221, "6690": 221, "6692": 221, "6694": 221, "6696": 221, "6698": 221, "6700": 221, "6702": 221, "6704": 221, "6706": 221, "6708": 221, "6710": 221, "6714": 221, "6716": [221, 244], "6718": 221, "6720": 221, "6722": 221, "6724": 221, "6726": 221, "6728": 221, "6730": 221, "6732": 221, "6734": 221, "6736": 221, "6738": 221, "6740": 221, "6742": 221, "6744": 221, "6746": 221, "6748": 221, "6750": 221, "6752": 221, "6754": 221, "6756": 221, "6758": 221, "6760": 221, "6762": 221, "6764": 221, "6766": 221, "6768": 221, "6770": 221, "6772": 221, "6774": 221, "6776": 221, "6778": 221, "6780": 221, "6782": 221, "6784": 221, "6786": 221, "6788": 221, "6790": 221, "6792": 221, "6794": 221, "6796": 221, "6798": 221, "6800": 221, "6802": 221, "6804": 221, "6806": 221, "6808": 221, "6810": 221, "6812": 221, "6814": 221, "6816": 221, "6818": 221, "6820": 221, "6822": 221, "6824": 221, "6826": 221, "6828": 221, "6830": 221, "6832": 221, "6834": 221, "6836": 221, "6838": 221, "6840": 221, "6842": 221, "6844": 221, "6846": 221, "6848": 221, "6850": 221, "6852": 221, "6854": 221, "6856": 221, "6858": [221, 270], "6860": 221, "6862": 221, "6864": 221, "6866": 221, "6868": 221, "6870": 221, "6872": 221, "6874": 221, "6876": 221, "6878": 221, "6880": 221, "6882": 221, "6884": 221, "6886": 221, "6888": 221, "6890": 221, "6892": 221, "6894": 221, "6896": 221, "6898": 221, "6900": 221, "6902": 221, "6904": 221, "6906": 221, "6908": 221, "6910": 221, "6912": 221, "6914": 221, "6916": 221, "6918": 221, "6920": 221, "6922": 221, "6924": 221, "6926": 221, "6928": 221, "6930": 221, "6932": 221, "6934": 221, "6936": 221, "6938": 221, "6940": 221, "6942": 221, "6944": 221, "6946": 221, "6948": 221, "6950": 221, "6952": 221, "6954": 221, "6956": 221, "6958": 221, "6960": 221, "6962": 221, "6964": 221, "6966": 221, "6968": 221, "6970": 221, "6972": 221, "6974": 221, "6976": 221, "6978": 221, "6980": 221, "6982": 221, "6984": 221, "6986": 221, "6988": 221, "6990": 221, "6992": 221, "6994": 221, "6996": 221, "6998": 221, "7000": 221, "7002": 221, "7004": 221, "7006": 221, "7008": 221, "7010": 221, "7012": 221, "7014": 221, "7016": 221, "7018": 221, "7020": 221, "7022": 221, "7024": 221, "7026": 221, "7028": 221, "7030": 221, "7032": 221, "7034": 221, "7036": 221, "7038": 221, "7040": 221, "7042": 221, "7044": 221, "7046": 221, "7048": 221, "7050": 221, "7052": 221, "7054": 221, "7056": 221, "7058": 221, "7060": 221, "7062": 221, "7064": 221, "7066": 221, "7068": 221, "7070": 221, "7072": 221, "7074": 221, "7076": 221, "7078": 221, "7080": 221, "7082": 221, "7084": 221, "7086": 221, "7088": 221, "7090": 221, "7092": 221, "7094": 221, "7096": 221, "7098": 221, "7100": 221, "7102": 221, "7104": 221, "7106": 221, "7108": 221, "7110": 221, "7112": 221, "7114": 221, "7116": 221, "7118": 221, "7120": 221, "7122": 221, "7124": 221, "7126": 221, "7128": 221, "7130": 221, "7132": 221, "7134": 221, "7136": 221, "7138": 221, "7140": 221, "7142": 221, "7144": 221, "7146": 221, "7148": 221, "7150": 221, "7152": 221, "7154": 221, "7156": 221, "7158": 221, "7160": 221, "7162": 221, "7164": 221, "7166": 221, "7168": 221, "7170": 221, "7172": 221, "7174": 221, "7176": 221, "7178": 221, "7180": 221, "7182": 221, "7184": 221, "7186": 221, "7188": 221, "7190": 221, "7192": 221, "7194": 221, "7196": 221, "7198": 221, "7200": 221, "7202": 221, "7204": 221, "7206": 221, "7208": 221, "7210": 221, "7212": 221, "7214": 221, "7216": 221, "7218": 221, "7220": 221, "7222": 221, "7224": 221, "7226": 221, "7228": 221, "7230": 221, "7232": 221, "7234": 221, "7236": 221, "7238": 221, "7240": 221, "7242": 221, "7244": 221, "7246": 221, "7248": 221, "7250": 221, "7252": 221, "7254": 221, "7256": 221, "7258": 221, "7260": 221, "7262": 221, "7264": 221, "7266": 221, "7268": 221, "7270": 221, "7272": 221, "7274": 221, "7276": 221, "7278": 221, "7280": 221, "7282": 221, "7284": 221, "7286": 221, "7288": 221, "7290": 221, "7292": 221, "7294": 221, "7296": 221, "7298": 221, "7300": 221, "7302": 221, "7304": 221, "7306": 221, "7308": 221, "7310": 221, "7312": 221, "7314": 221, "7316": 221, "7318": 221, "7320": 221, "7322": 221, "7324": 221, "7326": 221, "7328": 221, "7330": 221, "7332": 221, "7334": 221, "7336": 221, "7338": 221, "7340": 221, "7342": 221, "7344": 221, "7346": 221, "7348": 221, "7350": 221, "7352": 221, "7354": 221, "7356": 221, "7358": 221, "7360": 221, "7362": 221, "7364": 221, "7366": 221, "7368": 221, "7370": 221, "7372": 221, "7374": 221, "7376": 221, "7378": 221, "7380": 221, "7382": 221, "7384": 221, "7386": 221, "7388": 221, "7392": 221, "7394": 221, "7396": 221, "7398": 221, "7400": 221, "7402": 221, "7404": 221, "7406": 221, "7408": 221, "7410": 221, "7412": 221, "7414": 221, "7416": 221, "7418": 221, "7420": 221, "7422": 221, "7424": 221, "7426": 221, "7428": 221, "7430": 221, "7432": 221, "7434": 221, "7436": 221, "7438": 221, "7440": 221, "7442": 221, "7444": 221, "7446": 221, "7448": 221, "7450": 221, "7452": 221, "7454": 221, "7456": 221, "7458": 221, "7460": 221, "7462": 221, "7464": 221, "7466": 221, "7468": 221, "7470": 221, "7472": 221, "7474": 221, "7476": 221, "7478": 221, "7480": 221, "7482": 221, "7484": 221, "7486": 221, "7488": 221, "7490": 221, "7492": 221, "7494": 221, "7496": 221, "7498": 221, "7500": 221, "7502": 221, "7504": 221, "7506": 221, "7508": 221, "7510": 221, "7512": 221, "7514": 221, "7516": 221, "7518": 221, "7520": 221, "7522": 221, "7524": 221, "7526": 221, "7528": 221, "7530": 221, "7532": 221, "7534": 221, "7536": 221, "7538": 221, "7540": 221, "7542": 221, "7544": 221, "7546": 221, "7548": 221, "7550": 221, "7552": 221, "7554": 221, "7556": 221, "7558": 221, "7560": 221, "7562": 221, "7564": 221, "7566": 221, "7568": 221, "7570": 221, "7572": 221, "7574": 221, "7576": 221, "7578": 221, "7580": 221, "7582": 221, "7584": 221, "7586": 221, "7588": 221, "7590": 221, "7592": 221, "7594": 221, "7596": 221, "7598": 221, "7600": 221, "7602": 221, "7604": 221, "7606": 221, "7608": 221, "7610": 221, "7612": 221, "7614": 221, "7616": 221, "7618": 221, "7620": 221, "7622": 221, "7624": 221, "7626": 221, "7628": 221, "7630": 221, "7632": 221, "7634": 221, "7636": 221, "7638": 221, "7640": 221, "7642": 221, "7644": 221, "7646": 221, "7648": 221, "7650": 221, "7652": 221, "7654": 221, "7656": 221, "7658": 221, "7660": 221, "7662": 221, "7664": 221, "7666": 221, "7668": 221, "7670": 221, "7672": 221, "7674": 221, "7676": 221, "7678": 221, "7680": 221, "7682": 221, "7684": 221, "7686": 221, "7688": 221, "7690": 221, "7692": 221, "7694": 221, "7696": 221, "7698": 221, "7700": 221, "7702": 221, "7704": 221, "7706": 221, "7708": 221, "7710": 221, "7712": 221, "7714": 221, "7716": 221, "7718": 221, "7720": 221, "7722": 221, "7724": 221, "7726": 221, "7728": 221, "7730": 221, "7732": 221, "7734": 221, "7736": 221, "7738": 221, "7740": 221, "7742": 221, "7744": 221, "7746": 221, "7748": 221, "7750": 221, "7752": 221, "7754": 221, "7756": 221, "7758": 221, "7760": 221, "7762": 221, "7764": 221, "7766": 221, "7768": 221, "7770": 221, "7772": 221, "7774": 221, "7776": 221, "7778": 221, "7780": 221, "7782": 221, "7784": 221, "7786": 221, "7788": 221, "7790": 221, "7792": 221, "7794": 221, "7796": 221, "7798": 221, "7800": 221, "7802": 221, "7804": 221, "7806": 221, "7808": 221, "7810": 221, "7812": 221, "7814": 221, "7816": 221, "7818": 221, "7820": 221, "7822": 221, "7824": 221, "7826": 221, "7828": 221, "7830": 221, "7832": 221, "7834": 221, "7836": 221, "7838": 221, "7842": 221, "7844": 221, "7846": 221, "7848": 221, "7850": 221, "7852": 221, "7854": 221, "7856": 221, "7858": 221, "7860": 221, "7862": 221, "7864": 221, "7866": 221, "7868": 221, "7870": 221, "7872": 221, "7874": 221, "7878": 221, "7880": 221, "7882": 221, "7884": 221, "7886": 221, "7888": 221, "7890": 221, "7892": 221, "7894": 221, "7896": 221, "7898": 221, "7900": 221, "7902": 221, "7904": 221, "7906": 221, "7908": 221, "7910": 221, "7912": 221, "7914": 221, "7916": 221, "7918": 221, "7920": 221, "7922": 221, "7924": 221, "7926": 221, "7928": 221, "7930": 221, "7932": 221, "7934": 221, "7936": 221, "7938": 221, "7940": 221, "7942": 221, "7944": 221, "7946": 221, "7948": 221, "7950": 221, "7952": 221, "7954": 221, "7956": 221, "7958": 221, "7960": 221, "7962": 221, "7964": 221, "7966": 221, "7968": 221, "7970": 221, "7972": 221, "7974": 221, "7976": 221, "7978": 221, "7980": 221, "7982": 221, "7984": 221, "7986": 221, "7988": 221, "7990": 221, "7992": 221, "7994": 221, "7996": 221, "7998": 221, "8002": 221, "8004": 221, "8006": 221, "8008": 221, "8012": 221, "8014": 221, "8016": 221, "8018": 221, "8022": 221, "8024": 221, "8026": 221, "8028": 221, "8030": 221, "8032": 221, "8034": 221, "8036": 221, "8038": 221, "8040": 221, "8042": 221, "8044": 221, "8046": 221, "8048": 221, "8050": 221, "8052": 221, "8054": 221, "8056": 221, "8058": 221, "8060": 221, "8062": 221, "8064": 221, "8066": 221, "8068": 221, "8070": 221, "8072": 221, "8074": 221, "8076": 221, "8078": 221, "8080": 221, "8082": 221, "8084": 221, "8086": 221, "8088": 221, "8090": 221, "8092": 221, "8094": 221, "8096": 221, "8098": 221, "8100": 221, "8102": [221, 972, 973], "8104": 221, "8106": 221, "8108": 221, "8110": 221, "8112": 221, "8114": 221, "8116": 221, "8118": 221, "8120": 221, "8122": 221, "8124": 221, "8126": 221, "8128": 221, "8130": 221, "8132": 221, "8134": 221, "8136": 221, "8138": 221, "8140": 221, "8142": 221, "8144": 221, "8146": 221, "8148": 221, "8150": 221, "8152": 221, "8154": 221, "8156": 221, "8158": 221, "8160": 221, "8162": 221, "8164": 221, "8166": 221, "8168": 221, "8170": 221, "8172": 221, "8174": 221, "8176": 221, "8178": 221, "8180": 221, "8182": 221, "8184": 221, "8186": 221, "8188": 221, "8190": 221, "8194": 221, "8196": 221, "8198": 221, "8200": 221, "8202": 221, "8204": 221, "8206": 221, "8208": 221, "8210": 221, "8212": 221, "8214": 221, "8216": 221, "8218": 221, "8220": 221, "8222": 221, "8224": 221, "8226": 221, "8228": 221, "8230": 221, "8232": 221, "8234": 221, "8238": 221, "8240": 221, "8242": 221, "8244": 221, "8246": 221, "8248": 221, "8250": 221, "8252": 221, "8254": 221, "8256": 221, "8258": 221, "8260": [221, 797], "8262": 221, "8264": 221, "8266": 221, "8268": 221, "8270": 221, "8272": 221, "8274": 221, "8276": 221, "8278": 221, "8280": 221, "8282": 221, "8284": 221, "8286": 221, "8288": 221, "8290": 221, "8292": 221, "8294": 221, "8296": 221, "8298": 221, "8300": 221, "8302": 221, "8304": 221, "8306": 221, "8308": 221, "8310": 221, "8312": 221, "8314": 221, "8316": 221, "8318": 221, "8320": 221, "8322": 221, "8324": 221, "8326": 221, "8328": 221, "8330": 221, "8332": 221, "8334": 221, "8336": 221, "8338": 221, "8340": 221, "8342": 221, "8344": 221, "8346": 221, "8348": 221, "8350": 221, "8352": 221, "8354": 221, "8356": 221, "8358": 221, "8360": 221, "8362": 221, "8364": 221, "8366": 221, "8368": 221, "8370": 221, "8372": 221, "8374": 221, "8376": 221, "8378": 221, "8380": 221, "8382": 221, "8384": 221, "8386": 221, "8388": 221, "8390": 221, "8392": 221, "8394": 221, "8396": 221, "8398": 221, "8400": 221, "8402": 221, "8404": 221, "8406": 221, "8408": 221, "8410": 221, "8412": 221, "8414": 221, "8416": 221, "8418": 221, "8420": 221, "8422": 221, "8424": 221, "8426": 221, "8428": 221, "8430": 221, "8432": 221, "8434": 221, "8436": 221, "8438": 221, "8440": 221, "8442": 221, "8444": 221, "8446": 221, "8448": 221, "8450": 221, "8452": 221, "8454": 221, "8456": 221, "8458": 221, "8460": 221, "8464": 221, "8466": 221, "8468": 221, "8470": 221, "8472": 221, "8474": 221, "8476": 221, "8478": 221, "8480": 221, "8482": 221, "8484": 221, "8486": 221, "8488": 221, "8490": 221, "8492": 221, "8494": 221, "8496": 221, "8498": 221, "8500": 221, "8502": 221, "8504": 221, "8506": 221, "8508": 221, "8510": 221, "8512": 221, "8514": 221, "8516": 221, "8518": 221, "8520": 221, "8522": 221, "8524": 221, "8526": 221, "8528": 221, "8530": 221, "8532": 221, "8534": 221, "8536": 221, "8538": 221, "8540": 221, "8542": 221, "8544": 221, "8546": 221, "8548": 221, "8550": 221, "8552": 221, "8554": 221, "8556": 221, "8558": 221, "8560": 221, "8562": 221, "8564": 221, "8566": 221, "8568": 221, "8570": 221, "8572": 221, "8574": 221, "8576": 221, "8578": 221, "8580": 221, "8582": 221, "8584": 221, "8586": 221, "8588": 221, "8590": 221, "8592": 221, "8594": 221, "8596": 221, "8598": 221, "8600": 221, "8602": 221, "8604": 221, "8606": 221, "8608": 221, "8610": 221, "8612": 221, "8614": 221, "8616": 221, "8618": 221, "8620": 221, "8622": 221, "8624": 221, "8626": 221, "8628": 221, "8630": 221, "8632": 221, "8634": 221, "8636": 221, "8638": 221, "8640": 221, "8642": 221, "8644": 221, "8646": 221, "8648": 221, "8650": 221, "8652": 221, "8654": 221, "8656": 221, "8658": 221, "8660": 221, "8662": 221, "8664": 221, "8666": 221, "8668": 221, "8670": 221, "8672": 221, "8674": 221, "8676": 221, "8678": 221, "8680": 221, "8682": 221, "8684": 221, "8686": 221, "8688": 221, "8690": 221, "8692": 221, "8694": 221, "8696": 221, "8698": 221, "8700": 221, "8702": 221, "8704": 221, "8706": 221, "8708": 221, "8710": 221, "8712": 221, "8714": 221, "8716": 221, "8718": 221, "8720": 221, "8722": 221, "8724": 221, "8726": 221, "8728": 221, "8730": 221, "8732": 221, "8734": 221, "8736": 221, "8738": 221, "8740": 221, "8742": 221, "8744": 221, "8746": 221, "8748": 221, "8750": 221, "8752": 221, "8754": 221, "8756": 221, "8758": 221, "8760": 221, "8762": 221, "8764": 221, "8766": 221, "8768": 221, "8770": 221, "8772": 221, "8774": 221, "8776": 221, "8778": 221, "8780": 221, "8782": 221, "8784": 221, "8786": 221, "8788": 221, "8790": 221, "8792": 221, "8794": 221, "8796": 221, "8798": 221, "8800": 221, "8802": 221, "8804": 221, "8806": 221, "8808": 221, "8810": 221, "8812": 221, "8814": 221, "8816": 221, "8818": 221, "8820": 221, "8822": 221, "8824": 221, "8826": 221, "8828": 221, "8830": 221, "8832": 221, "8834": 221, "8836": 221, "8838": 221, "8840": 221, "8842": 221, "8844": 221, "8846": 221, "8848": 221, "8850": 221, "8852": 221, "8854": 221, "8856": 221, "8858": 221, "8860": 221, "8862": 221, "8864": 221, "8866": 221, "8868": 221, "8870": 221, "8872": 221, "8874": 221, "8876": 221, "8878": 221, "8880": 221, "8882": 221, "8884": 221, "8886": 221, "8888": 221, "8890": 221, "8892": 221, "8894": 221, "8896": 221, "8898": 221, "8900": 221, "8902": 221, "8904": 221, "8906": 221, "8908": 221, "8910": 221, "8912": 221, "8914": 221, "8916": 221, "8918": 221, "8920": 221, "8922": 221, "8924": 221, "8926": 221, "8928": 221, "8930": 221, "8932": 221, "8934": 221, "8936": 221, "8938": 221, "8940": 221, "8942": 221, "8944": 221, "8946": 221, "8948": 221, "8950": 221, "8952": 221, "8954": 221, "8956": 221, "8958": 221, "8960": 221, "8962": 221, "8964": 221, "8966": 221, "8968": 221, "8970": 221, "8972": 221, "8974": 221, "8976": 221, "8978": 221, "8980": 221, "8982": 221, "8984": 221, "8986": 221, "8988": 221, "8990": 221, "8992": 221, "8994": 221, "8996": 221, "8998": 221, "9002": 221, "9004": 221, "9006": 221, "9008": 221, "9010": 221, "9012": 221, "9014": 221, "9016": 221, "9018": 221, "9020": 221, "9022": 221, "9024": 221, "9026": 221, "9028": 221, "9030": 221, "9032": 221, "9034": 221, "9036": 221, "9038": 221, "9040": 221, "9042": 221, "9044": 221, "9046": 221, "9048": 221, "9050": 221, "9052": 221, "9054": 221, "9056": 221, "9058": 221, "9060": 221, "9062": 221, "9064": 221, "9066": 221, "9068": 221, "9070": 221, "9072": 221, "9074": 221, "9076": 221, "9078": 221, "9080": 221, "9082": 221, "9084": 221, "9086": 221, "9088": 221, "9090": 221, "9092": 221, "9094": 221, "9096": 221, "9098": 221, "9100": 221, "9102": 221, "9104": 221, "9106": 221, "9108": 221, "9110": 221, "9112": 221, "9114": 221, "9116": 221, "9118": 221, "9120": 221, "9122": 221, "9124": 221, "9126": 221, "9128": 221, "9130": 221, "9132": 221, "9134": 221, "9136": 221, "9138": 221, "9140": 221, "9142": 221, "9144": 221, "9146": 221, "9148": 221, "9150": 221, "9152": 221, "9154": 221, "9156": 221, "9158": 221, "9160": 221, "9162": 221, "9164": 221, "9166": 221, "9168": 221, "9170": 221, "9172": 221, "9174": 221, "9176": 221, "9178": 221, "9180": 221, "9182": 221, "9184": 221, "9186": 221, "9188": 221, "9190": 221, "9192": 221, "9194": 221, "9196": 221, "9198": 221, "9200": 221, "9202": 221, "9204": 221, "9206": 221, "9208": 221, "9210": 221, "9212": 221, "9214": 221, "9216": 221, "9218": 221, "9220": 221, "9222": 221, "9224": 221, "9226": 221, "9228": 221, "9230": 221, "9232": 221, "9234": 221, "9236": 221, "9238": 221, "9240": 221, "9242": 221, "9244": 221, "9246": 221, "9248": 221, "9250": 221, "9252": 221, "9254": 221, "9256": 221, "9258": 221, "9260": 221, "9262": 221, "9264": 221, "9266": 221, "9268": 221, "9270": 221, "9272": 221, "9274": 221, "9276": 221, "9278": 221, "9280": 221, "9282": 221, "9284": 221, "9286": 221, "9288": 221, "9290": 221, "9292": 221, "9294": 221, "9296": 221, "9298": 221, "9300": 221, "9302": 221, "9304": 221, "9306": 221, "9308": 221, "9310": 221, "9312": 221, "9314": 221, "9316": 221, "9318": 221, "9320": 221, "9322": 221, "9324": 221, "9326": 221, "9328": 221, "9330": 221, "9332": 221, "9334": 221, "9336": 221, "9338": 221, "9340": 221, "9342": 221, "9344": 221, "9346": 221, "9348": 221, "9350": 221, "9352": 221, "9354": 221, "9356": 221, "9358": 221, "9360": 221, "9362": 221, "9364": 221, "9366": 221, "9368": 221, "9370": 221, "9372": 221, "9374": 221, "9376": 221, "9378": 221, "9380": 221, "9382": 221, "9384": 221, "9386": 221, "9388": 221, "9390": 221, "9392": 221, "9394": [221, 857], "9396": 221, "9398": 221, "9400": 221, "9402": 221, "9404": 221, "9406": 221, "9408": 221, "9410": 221, "9412": 221, "9414": 221, "9416": 221, "9418": 221, "9420": 221, "9422": 221, "9424": 221, "9426": 221, "9428": 221, "9430": 221, "9432": 221, "9434": 221, "9436": 221, "9438": 221, "9440": 221, "9442": 221, "9444": 221, "9446": 221, "9448": 221, "9450": 221, "9452": 221, "9454": 221, "9456": 221, "9458": 221, "9460": 221, "9462": 221, "9464": 221, "9466": 221, "9468": 221, "9470": 221, "9472": 221, "9474": 221, "9476": 221, "9478": 221, "9480": 221, "9482": 221, "9484": 221, "9486": 221, "9488": 221, "9490": 221, "9492": 221, "9494": 221, "9496": 221, "9498": 221, "9500": 221, "9502": 221, "9504": 221, "9506": 221, "9508": 221, "9510": 221, "9512": 221, "9514": 221, "9516": 221, "9518": 221, "9520": 221, "9522": 221, "9524": 221, "9526": 221, "9528": 221, "9530": 221, "9532": 221, "9534": 221, "9536": 221, "9538": 221, "9540": 221, "9542": 221, "9544": 221, "9546": 221, "9548": 221, "9550": 221, "9552": 221, "9554": 221, "9556": 221, "9558": 221, "9560": 221, "9562": 221, "9564": 221, "9566": 221, "9568": 221, "9570": 221, "9572": 221, "9574": 221, "9576": 221, "9578": 221, "9580": 221, "9582": 221, "9584": 221, "9586": 221, "9588": 221, "9590": 221, "9592": 221, "9594": 221, "9596": 221, "9598": 221, "9600": 221, "9602": 221, "9604": 221, "9606": 221, "9608": 221, "9610": 221, "9612": 221, "9614": 221, "9616": 221, "9618": 221, "9620": 221, "9622": 221, "9624": 221, "9626": 221, "9628": 221, "9630": 221, "9632": 221, "9634": 221, "9636": 221, "9638": 221, "9640": 221, "9642": 221, "9644": 221, "9646": 221, "9648": 221, "9650": 221, "9652": 221, "9654": 221, "9656": 221, "9658": 221, "9660": 221, "9662": 221, "9664": 221, "9666": 221, "9668": 221, "9670": 221, "9672": 221, "9674": 221, "9676": 221, "9678": 221, "9680": 221, "9682": 221, "9684": 221, "9686": 221, "9688": 221, "9690": 221, "9692": 221, "9694": 221, "9696": 221, "9698": 221, "9700": 221, "9702": 221, "9704": 221, "9706": 221, "9708": 221, "9710": 221, "9712": 221, "9714": 221, "9716": 221, "9718": 221, "9720": 221, "9722": 221, "9724": 221, "9726": 221, "9728": 221, "9730": 221, "9732": 221, "9734": 221, "9736": 221, "9738": 221, "9740": 221, "9742": 221, "9744": 221, "9746": 221, "9748": 221, "9750": 221, "9752": 221, "9754": 221, "9756": 221, "9758": 221, "9760": 221, "9762": 221, "9764": 221, "9766": 221, "9768": [221, 231], "9770": 221, "9772": 221, "9774": 221, "9776": 221, "9778": 221, "9780": 221, "9782": 221, "9784": 221, "9786": 221, "9788": 221, "9790": 221, "9792": 221, "9794": 221, "9796": 221, "9798": 221, "9800": 221, "9802": 221, "9804": 221, "9806": 221, "9808": 221, "9810": 221, "9812": 221, "9814": 221, "9816": 221, "9818": 221, "9820": 221, "9822": 221, "9824": 221, "9826": 221, "9828": 221, "9830": 221, "9832": 221, "9834": 221, "9836": 221, "9838": 221, "9840": 221, "9842": 221, "9844": 221, "9846": 221, "9848": 221, "9850": 221, "9852": 221, "9854": 221, "9856": 221, "9858": 221, "9860": 221, "9862": 221, "9864": 221, "9866": 221, "9868": 221, "9870": 221, "9872": 221, "9874": 221, "9876": 221, "9878": 221, "9880": 221, "9882": 221, "9884": 221, "9886": 221, "9888": 221, "9890": 221, "9892": 221, "9894": 221, "9896": 221, "9898": 221, "9900": 221, "9902": 221, "9904": 221, "9906": 221, "9908": 221, "9910": 221, "9912": 221, "9914": 221, "9916": 221, "9918": 221, "9920": 221, "9922": 221, "9924": 221, "9926": 221, "9928": 221, "9930": 221, "9932": 221, "9934": 221, "9936": 221, "9938": 221, "9940": 221, "9942": 221, "9944": 221, "9946": 221, "9948": 221, "9950": 221, "9952": 221, "9954": 221, "9956": 221, "9958": 221, "9960": 221, "9962": 221, "9964": 221, "9966": 221, "9968": 221, "9970": 221, "9972": 221, "9974": 221, "9976": 221, "9978": 221, "9980": 221, "9982": 221, "9984": 221, "9986": 221, "9988": 221, "9990": 221, "9992": 221, "9994": 221, "9996": 221, "9998": 221, "10002": 221, "10004": 221, "10006": 221, "10008": 221, "10010": 221, "10012": 221, "10014": 221, "10016": 221, "10018": 221, "10020": 221, "10022": 221, "10024": 221, "10026": 221, "10028": 221, "10030": 221, "10032": 221, "10034": 221, "10036": 221, "10038": 221, "10040": 221, "10042": 221, "10044": 221, "10046": 221, "10048": 221, "10050": 221, "10052": 221, "10054": 221, "10056": 221, "10058": 221, "10060": 221, "10062": 221, "10064": 221, "10066": 221, "10068": 221, "10070": 221, "10072": 221, "10074": 221, "10076": 221, "10078": 221, "10080": 221, "10082": 221, "10084": 221, "10086": 221, "10088": 221, "10090": 221, "10092": 221, "10094": 221, "10096": 221, "10098": 221, "10100": 221, "10102": 221, "10104": 221, "10106": 221, "10108": 221, "10110": 221, "10112": 221, "10114": 221, "10116": 221, "10118": 221, "10120": 221, "10122": 221, "10124": 221, "10126": 221, "10128": 221, "10130": 221, "10132": 221, "10134": 221, "10136": 221, "10138": 221, "10140": 221, "10142": 221, "10144": 221, "10146": 221, "10148": 221, "10150": 221, "10152": 221, "10154": 221, "10156": 221, "10158": 221, "10160": 221, "10162": 221, "10164": 221, "10166": 221, "10168": 221, "10170": 221, "10172": 221, "10174": 221, "10176": 221, "10178": 221, "10180": 221, "10182": 221, "10184": 221, "10186": 221, "10188": 221, "10190": 221, "10192": 221, "10194": 221, "10196": 221, "10198": 221, "10200": 221, "10202": 221, "10204": 221, "10206": 221, "10208": 221, "10210": 221, "10212": 221, "10214": 221, "10216": 221, "10218": 221, "10220": 221, "10222": 221, "10224": 221, "10226": [221, 270], "10228": 221, "10230": 221, "10232": 221, "10234": 221, "10236": 221, "10238": 221, "10240": 221, "10242": 221, "10244": 221, "10246": 221, "10248": 221, "10250": 221, "10252": 221, "10254": 221, "10256": 221, "10258": 221, "10260": 221, "10262": 221, "10264": 221, "10266": 221, "10268": 221, "10270": 221, "10272": 221, "10274": 221, "10276": 221, "10278": 221, "10280": 221, "10282": 221, "10284": 221, "10286": 221, "10288": 221, "10290": 221, "10292": 221, "10294": 221, "10296": 221, "10298": 221, "10300": 221, "10302": 221, "10304": 221, "10306": 221, "10308": 221, "10310": 221, "10312": 221, "10314": 221, "10316": 221, "10318": 221, "10320": 221, "10322": 221, "10324": 221, "10326": 221, "10328": 221, "10330": 221, "10332": 221, "10334": 221, "10336": 221, "10338": 221, "10340": 221, "10342": 221, "10344": 221, "10346": 221, "10348": 221, "10350": 221, "10352": 221, "10354": 221, "10356": 221, "10358": 221, "10360": 221, "10362": 221, "10364": 221, "10366": 221, "10368": 221, "10370": 221, "10372": 221, "10374": 221, "10376": 221, "10378": 221, "10380": 221, "10382": 221, "10384": 221, "10386": 221, "10388": 221, "10390": 221, "10392": 221, "10394": 221, "10396": 221, "10398": 221, "10400": 221, "10402": 221, "10404": 221, "10406": 221, "10408": 221, "10410": 221, "10412": 221, "10414": 221, "10416": 221, "10418": 221, "10420": 221, "10422": 221, "10424": 221, "10426": 221, "10428": 221, "10430": 221, "10432": 221, "10434": 221, "10436": 221, "10438": 221, "10440": 221, "10442": 221, "10444": 221, "10446": 221, "10448": 221, "10450": 221, "10452": 221, "10454": 221, "10456": 221, "10458": 221, "10460": 221, "10462": 221, "10464": 221, "10466": 221, "10468": 221, "10470": 221, "10472": 221, "10474": 221, "10476": 221, "10478": 221, "10480": 221, "10482": 221, "10484": 221, "10486": 221, "10488": 221, "10490": 221, "10492": 221, "10494": 221, "10496": 221, "10498": 221, "10500": 221, "10502": 221, "10504": 221, "10506": 221, "10508": 221, "10510": 221, "10512": 221, "10514": 221, "10516": 221, "10518": 221, "10520": 221, "10522": 221, "10524": 221, "10526": 221, "10528": 221, "10530": 221, "10532": 221, "10534": 221, "10536": 221, "10538": 221, "10540": 221, "10542": 221, "10544": 221, "10546": 221, "10548": 221, "10550": 221, "10552": [221, 983], "10554": 221, "10556": 221, "10558": 221, "10560": 221, "10562": 221, "10564": 221, "10566": 221, "10568": 221, "10570": 221, "10572": 221, "10574": 221, "10576": 221, "10578": 221, "10580": 221, "10582": 221, "10584": 221, "10586": 221, "10588": 221, "10590": 221, "10592": 221, "10594": 221, "10596": 221, "10598": 221, "10600": 221, "10602": 221, "10604": 221, "10606": 221, "10608": 221, "10610": 221, "10612": 221, "10614": 221, "10616": 221, "10618": 221, "10620": 221, "10622": 221, "10624": 221, "10626": 221, "10628": 221, "10630": 221, "10632": 221, "10634": 221, "10636": 221, "10638": 221, "10640": 221, "10642": 221, "10644": 221, "10646": 221, "10648": 221, "10650": 221, "10652": 221, "10654": 221, "10656": 221, "10658": 221, "10660": 221, "10662": 221, "10664": 221, "10666": 221, "10668": 221, "10670": 221, "10672": 221, "10674": 221, "10676": 221, "10678": 221, "10680": 221, "10682": 221, "10684": 221, "10686": 221, "10688": 221, "10690": 221, "10692": 221, "10694": 221, "10696": 221, "10698": 221, "10700": 221, "10702": 221, "10704": 221, "10706": 221, "10708": 221, "10710": 221, "10712": 221, "10714": 221, "10716": 221, "10718": 221, "10720": 221, "10722": 221, "10724": 221, "10726": 221, "10728": 221, "10730": 221, "10732": 221, "10734": 221, "10736": 221, "10738": 221, "10740": 221, "10742": 221, "10744": 221, "10746": 221, "10748": 221, "10750": 221, "10752": 221, "10754": 221, "10756": 221, "10758": 221, "10760": 221, "10762": 221, "10764": 221, "10766": 221, "10768": 221, "10770": 221, "10772": 221, "10774": 221, "10776": 221, "10778": 221, "10780": 221, "10782": 221, "10784": 221, "10786": 221, "10788": 221, "10790": 221, "10792": 221, "10794": 221, "10796": 221, "10798": 221, "10800": 221, "10802": 221, "10804": 221, "10806": 221, "10808": 221, "10810": 221, "10812": 221, "10814": 221, "10816": 221, "10818": 221, "10820": 221, "10822": 221, "10824": 221, "10826": 221, "10828": 221, "10830": 221, "10832": 221, "10834": 221, "10836": 221, "10838": 221, "10840": 221, "10842": 221, "10844": 221, "10846": 221, "10848": 221, "10850": 221, "10852": 221, "10854": 221, "10856": 221, "10858": 221, "10860": 221, "10862": 221, "10864": 221, "10866": 221, "10868": 221, "10870": 221, "10872": 221, "10874": 221, "10876": 221, "10878": 221, "10880": 221, "10882": 221, "10884": 221, "10886": 221, "10888": 221, "10890": 221, "10892": 221, "10894": 221, "10896": 221, "10898": 221, "10900": 221, "10902": 221, "10904": 221, "10906": 221, "10908": 221, "10910": 221, "10912": 221, "10914": 221, "10916": 221, "10918": 221, "10920": 221, "10922": 221, "10924": 221, "10926": 221, "10928": 221, "10930": 221, "10932": 221, "10934": 221, "10936": 221, "10938": 221, "10940": 221, "10942": 221, "10944": 221, "10946": 221, "10948": 221, "10950": 221, "10952": 221, "10954": 221, "10956": 221, "10958": 221, "10960": 221, "10962": 221, "10964": 221, "10966": 221, "10968": 221, "10970": 221, "10972": 221, "10974": 221, "10976": 221, "10978": 221, "10980": 221, "10982": 221, "10984": 221, "10986": 221, "10988": 221, "10990": 221, "10992": 221, "10994": 221, "10996": 221, "10998": 221, "11000": 221, "11002": 221, "11004": 221, "11006": 221, "11008": 221, "11010": 221, "11012": 221, "11014": 221, "11016": 221, "11018": 221, "11020": 221, "11022": 221, "11024": 221, "11026": 221, "11028": 221, "11030": 221, "11032": 221, "11034": 221, "11036": 221, "11038": 221, "11040": 221, "11042": 221, "11044": 221, "11046": 221, "11048": 221, "11050": 221, "11052": 221, "11054": 221, "11056": 221, "11058": 221, "11060": 221, "11062": 221, "11064": 221, "11066": 221, "11068": 221, "11070": 221, "11072": 221, "11074": 221, "11076": 221, "11078": 221, "11080": 221, "11082": 221, "11084": 221, "11086": 221, "11088": 221, "11090": 221, "11092": 221, "11094": 221, "11096": 221, "11098": 221, "11100": 221, "11102": 221, "11104": 221, "11106": 221, "11108": 221, "11110": 221, "11112": 221, "11114": 221, "11116": 221, "11118": 221, "11120": 221, "11122": 221, "11124": 221, "11126": 221, "11128": 221, "11130": 221, "11132": 221, "11134": 221, "11136": 221, "11138": 221, "11140": 221, "11142": 221, "11144": 221, "11146": 221, "11148": 221, "11150": 221, "11152": 221, "11154": 221, "11156": 221, "11158": 221, "11160": 221, "11162": 221, "11164": 221, "11166": 221, "11168": 221, "11170": 221, "11172": 221, "11174": 221, "11176": 221, "11178": 221, "11180": 221, "11182": 221, "11184": 221, "11186": 221, "11188": 221, "11190": 221, "11192": 221, "11194": 221, "11196": 221, "11198": 221, "11200": 221, "11202": 221, "11204": 221, "11206": 221, "11208": 221, "11210": 221, "11212": 221, "11214": 221, "11216": 221, "11218": 221, "11220": 221, "11222": 221, "11224": 221, "11226": 221, "11228": 221, "11230": 221, "11232": 221, "11234": 221, "11236": 221, "11238": 221, "11240": 221, "11242": 221, "11244": 221, "11246": 221, "11248": 221, "11250": 221, "11252": 221, "11254": 221, "11256": 221, "11258": 221, "11260": 221, "11262": 221, "11264": 221, "11266": 221, "11268": 221, "11270": 221, "11272": 221, "11274": 221, "11276": 221, "11278": 221, "11280": 221, "11282": 221, "11284": 221, "11286": 221, "11288": 221, "11290": 221, "11292": 221, "11294": 221, "11296": 221, "11298": 221, "11300": 221, "11302": 221, "11304": 221, "11306": 221, "11308": 221, "11310": 221, "11312": 221, "11314": 221, "11316": 221, "11318": 221, "11320": 221, "11322": 221, "11324": 221, "11326": 221, "11328": 221, "11330": 221, "11332": 221, "11334": 221, "11336": 221, "11340": 221, "11342": 221, "11344": 221, "11346": 221, "11348": [221, 270], "11350": 221, "11352": 221, "11354": 221, "11356": 221, "11358": 221, "11360": 221, "11362": 221, "11364": 221, "11366": 221, "11368": 221, "11370": 221, "11372": 221, "11374": 221, "11376": 221, "11378": 221, "11380": 221, "11382": 221, "11384": 221, "11386": 221, "11388": 221, "11390": 221, "11392": 221, "11394": 221, "11396": 221, "11398": 221, "11400": 221, "11402": 221, "11404": 221, "11406": 221, "11408": 221, "11410": 221, "11412": 221, "11414": 221, "11416": 221, "11418": 221, "11420": 221, "11422": 221, "11424": 221, "11426": 221, "11428": 221, "11430": 221, "11432": 221, "11434": 221, "11436": 221, "11438": 221, "11440": 221, "11442": 221, "11444": 221, "11446": 221, "11448": 221, "11450": 221, "11452": 221, "11454": 221, "11456": 221, "11458": 221, "11460": 221, "11462": 221, "11464": 221, "11466": 221, "11468": 221, "11470": 221, "11472": 221, "11474": 221, "11476": 221, "11478": 221, "11480": 221, "11482": 221, "11484": 221, "11486": 221, "11488": 221, "11490": 221, "11492": 221, "11494": 221, "11496": 221, "11498": 221, "11500": 221, "11502": 221, "11504": 221, "11506": 221, "11508": 221, "11510": 221, "11512": 221, "11514": 221, "11516": 221, "11518": 221, "11520": 221, "11522": 221, "11524": 221, "11526": 221, "11528": 221, "11530": 221, "11532": 221, "11534": 221, "11536": 221, "11538": 221, "11540": 221, "11542": 221, "11544": 221, "11546": 221, "11548": 221, "11550": 221, "11552": 221, "11554": 221, "11556": 221, "11558": 221, "11560": 221, "11562": 221, "11564": 221, "11566": 221, "11568": 221, "11570": 221, "11572": 221, "11574": 221, "11576": 221, "11578": 221, "11580": 221, "11582": 221, "11584": 221, "11586": 221, "11588": 221, "11590": 221, "11592": 221, "11594": 221, "11596": 221, "11598": 221, "11600": 221, "11602": 221, "11604": 221, "11606": 221, "11608": 221, "11610": 221, "11612": 221, "11614": 221, "11616": 221, "11618": 221, "11620": 221, "11622": 221, "11624": 221, "11626": 221, "11628": 221, "11630": 221, "11634": 221, "11636": 221, "11638": 221, "11640": 221, "11642": 221, "11644": 221, "11646": 221, "11648": 221, "11650": 221, "11652": 221, "11654": 221, "11656": 221, "11658": 221, "11660": 221, "11662": 221, "11664": 221, "11666": 221, "11668": 221, "11670": 221, "11672": 221, "11674": 221, "11676": 221, "11678": 221, "11680": 221, "11682": 221, "11684": 221, "11686": 221, "11688": 221, "11690": 221, "11692": 221, "11694": 221, "11696": 221, "11698": 221, "11700": 221, "11702": 221, "11704": 221, "11706": 221, "11708": 221, "11710": 221, "11712": 221, "11714": 221, "11716": 221, "11718": 221, "11720": 221, "11722": 221, "11724": 221, "11726": 221, "11728": 221, "11730": 221, "11732": 221, "11734": 221, "11736": 221, "11738": 221, "11740": 221, "11742": 221, "11744": 221, "11746": 221, "11748": 221, "11750": 221, "11752": 221, "11754": 221, "11756": 221, "11758": 221, "11760": 221, "11762": 221, "11764": 221, "11766": 221, "11768": 221, "11770": 221, "11772": 221, "11774": 221, "11776": 221, "11778": 221, "11780": 221, "11782": 221, "11784": 221, "11786": 221, "11788": 221, "11790": 221, "11792": 221, "11794": 221, "11796": 221, "11798": 221, "11800": 221, "11802": 221, "11804": 221, "11806": 221, "11808": 221, "11810": 221, "11812": 221, "11814": 221, "11816": 221, "11818": 221, "11820": 221, "11822": 221, "11824": 221, "11826": 221, "11828": 221, "11830": 221, "11832": 221, "11834": 221, "11836": 221, "11838": 221, "11840": 221, "11842": 221, "11844": 221, "11846": 221, "11848": 221, "11850": 221, "11852": 221, "11854": 221, "11856": 221, "11858": 221, "11860": 221, "11862": 221, "11864": 221, "11866": 221, "11868": 221, "11870": 221, "11872": 221, "11874": 221, "11876": 221, "11878": 221, "11880": 221, "11882": 221, "11884": 221, "11886": 221, "11888": 221, "11890": 221, "11892": 221, "11894": 221, "11896": 221, "11898": 221, "11900": 221, "11902": 221, "11904": 221, "11906": 221, "11908": 221, "11910": 221, "11912": 221, "11914": 221, "11916": 221, "11918": 221, "11920": 221, "11922": 221, "11924": 221, "11926": 221, "11928": 221, "11930": 221, "11932": 221, "11934": 221, "11936": 221, "11938": 221, "11940": 221, "11942": 221, "11944": 221, "11946": 221, "11948": 221, "11950": 221, "11952": 221, "11954": 221, "11956": 221, "11958": 221, "11960": 221, "11962": 221, "11964": 221, "11966": 221, "11968": 221, "11970": 221, "11972": 221, "11974": 221, "11976": 221, "11978": 221, "11980": 221, "11982": 221, "11984": 221, "11986": 221, "11988": 221, "11990": 221, "11992": 221, "11994": 221, "11996": 221, "11998": 221, "12000": 221, "12002": 221, "12004": 221, "12006": 221, "12008": 221, "12010": 221, "12012": 221, "12014": 221, "12016": 221, "12018": 221, "12020": 221, "12022": 221, "12024": 221, "12026": 221, "12028": 221, "12030": 221, "12032": 221, "12034": 221, "12036": 221, "12038": 221, "12040": 221, "12042": 221, "12044": 221, "12046": 221, "12048": 221, "12050": 221, "12052": 221, "12054": 221, "12056": 221, "12058": 221, "12060": 221, "12062": 221, "12064": 221, "12066": 221, "12068": 221, "12070": 221, "12072": 221, "12074": 221, "12076": 221, "12078": 221, "12080": 221, "12082": 221, "12084": 221, "12086": 221, "12088": 221, "12090": 221, "12092": 221, "12094": 221, "12096": 221, "12098": 221, "12100": 221, "12102": 221, "12104": 221, "12106": 221, "12108": 221, "12110": 221, "12112": 221, "12114": 221, "12116": 221, "12118": 221, "12120": 221, "12122": 221, "12124": 221, "12126": 221, "12128": 221, "12130": 221, "12132": 221, "12134": 221, "12136": 221, "12138": 221, "12140": 221, "12142": 221, "12144": 221, "12146": 221, "12148": 221, "12150": 221, "12152": 221, "12154": 221, "12158": 221, "12160": 221, "12162": 221, "12164": 221, "12166": 221, "12168": 221, "12170": 221, "12172": 221, "12174": 221, "12176": 221, "12178": 221, "12180": 221, "12182": 221, "12184": 221, "12186": 221, "12188": 221, "12190": 221, "12192": 221, "12194": 221, "12196": 221, "12198": 221, "12200": 221, "12202": 221, "12204": 221, "12206": 221, "12208": 221, "12210": 221, "12212": 221, "12214": 221, "12216": 221, "12218": 221, "12220": 221, "12222": 221, "12224": 221, "12226": 221, "12228": 221, "12230": 221, "12232": 221, "12234": 221, "12236": 221, "12238": 221, "12240": 221, "12242": 221, "12244": 221, "12246": 221, "12248": 221, "12250": 221, "12252": 221, "12254": 221, "12256": 221, "12258": 221, "12260": 221, "12262": 221, "12264": 221, "12266": 221, "12268": 221, "12270": 221, "12272": 221, "12274": 221, "12276": 221, "12278": 221, "12280": 221, "12282": 221, "12284": 221, "12286": 221, "12288": 221, "12290": 221, "12292": 221, "12294": 221, "12296": 221, "12298": 221, "12300": 221, "12302": 221, "12304": 221, "12306": 221, "12308": 221, "12310": 221, "12312": 221, "12314": 221, "12316": 221, "12318": 221, "12320": 221, "12322": 221, "12324": 221, "12326": 221, "12328": 221, "12330": 221, "12332": 221, "12334": 221, "12336": 221, "12338": 221, "12340": 221, "12342": 221, "12344": 221, "12346": 221, "12348": 221, "12350": 221, "12352": 221, "12354": 221, "12356": 221, "12358": 221, "12360": 221, "12362": 221, "12364": 221, "12366": 221, "12368": 221, "12370": 221, "12372": 221, "12374": 221, "12376": 221, "12378": 221, "12380": 221, "12382": 221, "12384": 221, "12386": 221, "12388": 221, "12390": 221, "12392": 221, "12394": 221, "12396": 221, "12398": 221, "12400": 221, "12402": 221, "12404": 221, "12406": 221, "12408": 221, "12410": 221, "12412": 221, "12414": 221, "12416": 221, "12418": 221, "12420": 221, "12422": 221, "12424": 221, "12426": 221, "12428": 221, "12430": 221, "12432": 221, "12434": 221, "12436": 221, "12438": 221, "12440": 221, "12442": 221, "12444": 221, "12446": 221, "12448": 221, "12450": 221, "12452": 221, "12454": 221, "12456": 221, "12458": 221, "12460": 221, "12462": 221, "12464": 221, "12466": 221, "12468": 221, "12470": 221, "12472": 221, "12474": 221, "12476": 221, "12478": 221, "12480": 221, "12482": 221, "12484": 221, "12486": 221, "12488": 221, "12490": 221, "12492": 221, "12494": 221, "12496": 221, "12498": 221, "12500": 221, "12502": 221, "12504": 221, "12506": 221, "12508": 221, "12510": 221, "12512": 221, "12514": 221, "12516": 221, "12518": 221, "12520": 221, "12522": 221, "12524": 221, "12526": 221, "12528": 221, "12530": 221, "12532": 221, "12534": 221, "12536": 221, "12538": 221, "12540": 221, "12542": 221, "12544": 221, "12546": 221, "12548": 221, "12550": 221, "12552": 221, "12554": 221, "12556": 221, "12558": 221, "12560": 221, "12562": 221, "12564": 221, "12566": 221, "12568": 221, "12570": 221, "12572": 221, "12574": 221, "12576": 221, "12578": 221, "12580": 221, "12582": 221, "12584": 221, "12586": 221, "12588": 221, "12590": 221, "12592": 221, "12594": 221, "12596": 221, "12598": 221, "12600": 221, "12602": 221, "12604": 221, "12606": 221, "12608": 221, "12610": 221, "12612": 221, "12614": 221, "12616": 221, "12618": 221, "12620": 221, "12622": 221, "12624": 221, "12626": 221, "12628": 221, "12630": 221, "12632": 221, "12634": 221, "12636": 221, "12638": 221, "12640": 221, "12642": 221, "12644": 221, "12646": 221, "12648": 221, "12650": 221, "12652": 221, "12654": 221, "12656": 221, "12658": 221, "12660": 221, "12662": 221, "12664": 221, "12666": 221, "12668": 221, "12670": 221, "12672": 221, "12674": 221, "12676": 221, "12678": 221, "12680": 221, "12682": 221, "12684": 221, "12686": 221, "12688": 221, "12690": 221, "12692": 221, "12694": 221, "12696": 221, "12698": 221, "12700": 221, "12702": 221, "12704": 221, "12706": 221, "12708": 221, "12710": 221, "12712": 221, "12714": 221, "12716": 221, "12718": 221, "12720": 221, "12722": 221, "12724": 221, "12726": 221, "12728": 221, "12730": 221, "12732": 221, "12734": 221, "12736": 221, "12738": 221, "12740": 221, "12742": 221, "12744": 221, "12746": 221, "12748": 221, "12750": 221, "12752": 221, "12754": 221, "12756": 221, "12758": 221, "12760": 221, "12762": 221, "12764": 221, "12766": 221, "12768": 221, "12770": 221, "12772": 221, "12774": 221, "12776": 221, "12778": 221, "12780": 221, "12782": 221, "12784": 221, "12786": 221, "12788": 221, "12790": 221, "12792": 221, "12794": 221, "12796": 221, "12798": 221, "12800": 221, "12802": 221, "12804": 221, "12806": 221, "12808": 221, "12810": 221, "12812": 221, "12814": 221, "12816": 221, "12818": 221, "12820": 221, "12822": 221, "12824": 221, "12826": 221, "12828": 221, "12830": 221, "12832": 221, "12834": 221, "12836": 221, "12838": 221, "12840": 221, "12842": 221, "12844": 221, "12846": 221, "12848": 221, "12850": 221, "12852": 221, "12854": 221, "12856": 221, "12858": 221, "12860": 221, "12862": 221, "12864": 221, "12866": 221, "12868": 221, "12870": 221, "12872": 221, "12874": 221, "12876": 221, "12878": 221, "12880": 221, "12882": 221, "12884": 221, "12886": 221, "12888": 221, "12890": 221, "12892": 221, "12894": 221, "12896": 221, "12898": 221, "12900": 221, "12902": 221, "12904": 221, "12906": 221, "12908": 221, "12910": 221, "12912": 221, "12914": 221, "12916": 221, "12918": 221, "12920": 221, "12922": 221, "12924": 221, "12926": 221, "12928": 221, "12930": 221, "12932": 221, "12934": 221, "12936": 221, "12938": 221, "12940": 221, "12942": 221, "12944": 221, "12946": 221, "12948": 221, "12950": 221, "12952": 221, "12954": 221, "12956": 221, "12958": 221, "12960": 221, "12962": 221, "12964": 221, "12966": 221, "12968": 221, "12970": 221, "12972": 221, "12974": 221, "12976": 221, "12978": 221, "12980": 221, "12982": 221, "12984": 221, "12986": 221, "12988": 221, "12990": 221, "12992": 221, "12994": 221, "12996": 221, "12998": 221, "13000": 221, "13002": 221, "13004": 221, "13006": 221, "13008": 221, "13010": 221, "13012": 221, "13014": 221, "13016": 221, "13018": 221, "13020": 221, "13022": 221, "13024": 221, "13026": 221, "13028": 221, "13030": 221, "13032": 221, "13034": 221, "13036": 221, "13038": 221, "13040": 221, "13042": 221, "13044": 221, "13046": 221, "13048": 221, "13050": 221, "13052": 221, "13054": 221, "13056": 221, "13058": 221, "13060": 221, "13062": 221, "13064": 221, "13066": 221, "13068": 221, "13070": 221, "13072": 221, "13074": 221, "13076": 221, "13078": 221, "13080": 221, "13082": 221, "13084": 221, "13086": 221, "13088": 221, "13090": 221, "13092": 221, "13094": 221, "13096": 221, "13098": 221, "13100": 221, "13102": 221, "13104": 221, "13106": 221, "13108": 221, "13110": 221, "13112": 221, "13114": 221, "13116": 221, "13118": 221, "13120": 221, "13122": 221, "13124": 221, "13126": 221, "13128": 221, "13130": 221, "13132": 221, "13134": 221, "13136": 221, "13138": 221, "13140": 221, "13142": 221, "13144": 221, "13146": 221, "13148": 221, "13150": 221, "13152": 221, "13154": 221, "13156": 221, "13158": 221, "13160": 221, "13162": 221, "13164": 221, "13166": 221, "13168": 221, "13170": 221, "13172": 221, "13174": 221, "13176": 221, "13178": 221, "13180": 221, "13182": 221, "13184": 221, "13186": 221, "13188": 221, "13190": 221, "13192": 221, "13194": 221, "13196": 221, "13198": 221, "13200": 221, "13202": 221, "13204": 221, "13206": 221, "13208": 221, "13210": 221, "13212": 221, "13214": 221, "13216": 221, "13218": 221, "13220": 221, "13222": 221, "13224": 221, "13226": 221, "13228": 221, "13230": 221, "13232": 221, "13234": 221, "13236": 221, "13238": 221, "13240": 221, "13242": 221, "13244": 221, "13246": 221, "13248": 221, "13250": 221, "13252": 221, "13254": 221, "13256": 221, "13258": 221, "13260": 221, "13262": 221, "13264": 221, "13266": 221, "13268": 221, "13270": 221, "13272": 221, "13274": 221, "13276": 221, "13278": 221, "13280": 221, "13282": 221, "13284": 221, "13286": 221, "13288": 221, "13290": 221, "13292": 221, "13294": 221, "13296": 221, "13298": 221, "13300": 221, "13302": 221, "13304": 221, "13306": 221, "13308": 221, "13310": 221, "13312": 221, "13314": 221, "13316": 221, "13318": 221, "13320": 221, "13322": 221, "13324": 221, "13326": 221, "13328": 221, "13330": 221, "13332": 221, "13334": 221, "13336": 221, "13338": 221, "13340": 221, "13342": 221, "13344": 221, "13346": 221, "13348": 221, "13350": 221, "13352": 221, "13354": 221, "13356": 221, "13358": 221, "13360": 221, "13362": 221, "13364": 221, "13366": 221, "13368": 221, "13370": 221, "13372": 221, "13374": 221, "13376": 221, "13378": 221, "13380": 221, "13382": 221, "13384": 221, "13386": 221, "13388": 221, "13390": 221, "13392": 221, "13394": 221, "13396": 221, "13398": 221, "13400": 221, "13402": 221, "13404": 221, "13406": 221, "13408": 221, "13410": 221, "13412": 221, "13414": 221, "13416": 221, "13418": 221, "13420": 221, "13422": 221, "13424": 221, "13426": 221, "13428": 221, "13430": 221, "13432": 221, "13434": 221, "13436": 221, "13438": 221, "13440": 221, "13442": 221, "13444": 221, "13446": 221, "13448": 221, "13450": 221, "13452": 221, "13454": 221, "13456": 221, "13458": 221, "13460": 221, "13462": 221, "13464": 221, "13466": 221, "13468": 221, "13470": 221, "13472": 221, "13474": 221, "13476": 221, "13478": 221, "13480": 221, "13482": 221, "13484": 221, "13486": 221, "13488": 221, "13490": 221, "13492": 221, "13494": 221, "13496": 221, "13498": 221, "13502": 221, "13504": 221, "13506": 221, "13508": 221, "13510": 221, "13512": 221, "13514": 221, "13516": 221, "13518": 221, "13520": 221, "13522": 221, "13524": 221, "13526": 221, "13528": 221, "13530": 221, "13532": 221, "13534": 221, "13536": 221, "13538": 221, "13540": 221, "13542": 221, "13544": 221, "13546": 221, "13548": 221, "13550": 221, "13552": 221, "13554": 221, "13556": 221, "13558": 221, "13560": 221, "13562": 221, "13564": 221, "13566": 221, "13568": 221, "13570": 221, "13572": 221, "13574": 221, "13576": 221, "13578": 221, "13580": 221, "13582": 221, "13584": 221, "13586": 221, "13588": 221, "13590": 221, "13592": 221, "13594": 221, "13596": 221, "13598": 221, "13600": 221, "13602": 221, "13604": 221, "13606": 221, "13608": 221, "13610": 221, "13612": 221, "13614": 221, "13616": 221, "13618": 221, "13620": 221, "13622": 221, "13624": 221, "13626": 221, "13628": 221, "13630": 221, "13632": 221, "13634": 221, "13636": 221, "13638": 221, "13640": 221, "13642": 221, "13644": 221, "13646": 221, "13648": 221, "13650": 221, "13652": 221, "13654": 221, "13656": 221, "13658": 221, "13660": 221, "13662": 221, "13664": 221, "13666": 221, "13668": 221, "13670": 221, "13672": 221, "13674": 221, "13676": 221, "13678": 221, "13680": 221, "13682": 221, "13684": 221, "13686": 221, "13688": 221, "13690": 221, "13692": 221, "13694": 221, "13696": 221, "13698": 221, "13700": 221, "13702": 221, "13704": 221, "13706": 221, "13708": 221, "13710": 221, "13712": 221, "13714": 221, "13716": 221, "13718": 221, "13720": 221, "13722": 221, "13724": 221, "13726": 221, "13728": 221, "13730": 221, "13732": 221, "13734": 221, "13736": 221, "13738": 221, "13740": 221, "13742": 221, "13744": 221, "13746": 221, "13748": 221, "13750": 221, "13752": 221, "13754": 221, "13756": 221, "13758": 221, "13760": 221, "13762": 221, "13764": 221, "13766": 221, "13768": 221, "13770": 221, "13772": 221, "13774": 221, "13776": 221, "13778": 221, "13780": 221, "13782": 221, "13784": 221, "13786": 221, "13788": 221, "13790": 221, "13792": 221, "13794": 221, "13796": 221, "13798": 221, "13800": 221, "13802": 221, "13804": 221, "13806": 221, "13808": 221, "13810": 221, "13812": 221, "13814": 221, "13816": 221, "13818": 221, "13820": 221, "13822": 221, "13824": 221, "13826": 221, "13828": 221, "13830": 221, "13832": 221, "13834": 221, "13836": 221, "13838": 221, "13840": 221, "13842": 221, "13844": 221, "13846": 221, "13848": 221, "13850": 221, "13852": 221, "13854": 221, "13856": 221, "13858": 221, "13860": 221, "13862": 221, "13864": 221, "13866": 221, "13868": 221, "13870": 221, "13872": 221, "13874": 221, "13876": 221, "13878": 221, "13880": 221, "13882": 221, "13884": 221, "13886": 221, "13888": 221, "13890": 221, "13892": 221, "13894": 221, "13896": 221, "13898": 221, "13900": 221, "13902": 221, "13904": 221, "13906": 221, "13908": 221, "13910": 221, "13912": 221, "13914": 221, "13916": 221, "13918": 221, "13920": 221, "13922": 221, "13924": 221, "13926": 221, "13928": 221, "13930": 221, "13932": 221, "13934": 221, "13936": 221, "13938": 221, "13940": 221, "13942": 221, "13944": 221, "13946": 221, "13948": 221, "13950": 221, "13952": 221, "13954": 221, "13956": 221, "13958": 221, "13960": [221, 940], "13962": 221, "13964": 221, "13966": 221, "13968": 221, "13970": 221, "13972": 221, "13974": 221, "13976": 221, "13978": 221, "13980": 221, "13982": 221, "13984": 221, "13986": 221, "13988": 221, "13990": 221, "13992": 221, "13994": 221, "13996": 221, "13998": 221, "14000": 221, "14002": 221, "14004": 221, "14006": 221, "14008": 221, "14010": 221, "14012": 221, "14014": 221, "14016": 221, "14018": 221, "14020": 221, "14022": 221, "14024": 221, "14026": 221, "14028": 221, "14030": 221, "14032": 221, "14034": 221, "14036": 221, "14038": 221, "14040": 221, "14042": 221, "14044": 221, "14046": 221, "14048": 221, "14050": 221, "14052": 221, "14054": 221, "14056": 221, "14058": 221, "14060": 221, "14062": 221, "14064": 221, "14066": 221, "14068": 221, "14070": 221, "14072": 221, "14074": 221, "14076": 221, "14078": 221, "14080": 221, "14082": 221, "14084": 221, "14086": 221, "14088": 221, "14090": 221, "14092": 221, "14094": 221, "14096": 221, "14098": 221, "14100": 221, "14102": 221, "14104": 221, "14106": 221, "14108": 221, "14110": 221, "14112": 221, "14114": 221, "14116": 221, "14118": 221, "14120": 221, "14122": 221, "14124": 221, "14126": 221, "14128": 221, "14130": 221, "14132": 221, "14134": 221, "14136": 221, "14138": 221, "14140": 221, "14142": 221, "14144": 221, "14146": 221, "14148": 221, "14150": 221, "14152": 221, "14154": 221, "14156": 221, "14158": 221, "14160": 221, "14162": 221, "14164": 221, "14166": 221, "14168": 221, "14170": 221, "14172": 221, "14174": 221, "14176": 221, "14178": 221, "14180": 221, "14182": 221, "14184": 221, "14186": 221, "14188": 221, "14190": 221, "14192": 221, "14194": 221, "14196": 221, "14198": 221, "14200": 221, "14202": 221, "14204": 221, "14206": 221, "14208": 221, "14210": 221, "14212": 221, "14214": 221, "14216": 221, "14218": 221, "14220": 221, "14222": 221, "14224": 221, "14226": 221, "14228": 221, "14230": 221, "14232": 221, "14234": 221, "14236": 221, "14238": 221, "14240": 221, "14242": 221, "14244": 221, "14246": 221, "14248": 221, "14250": 221, "14252": 221, "14254": 221, "14256": 221, "14258": 221, "14260": 221, "14262": 221, "14264": 221, "14266": 221, "14268": 221, "14270": 221, "14272": 221, "14274": 221, "14276": 221, "14278": 221, "14280": 221, "14282": 221, "14284": 221, "14286": 221, "14288": 221, "14290": 221, "14292": 221, "14294": 221, "14296": 221, "14298": 221, "14300": 221, "14302": 221, "14304": 221, "14306": 221, "14308": 221, "14310": 221, "14312": 221, "14314": 221, "14316": 221, "14318": 221, "14320": 221, "14322": 221, "14324": 221, "14326": 221, "14328": 221, "14330": 221, "14332": 221, "14334": 221, "14336": 221, "14338": 221, "14340": 221, "14342": 221, "14344": 221, "14346": 221, "14348": 221, "14350": 221, "14352": 221, "14354": 221, "14356": 221, "14358": 221, "14360": 221, "14362": 221, "14364": 221, "14366": 221, "14368": 221, "14370": 221, "14372": 221, "14374": 221, "14376": 221, "14378": 221, "14380": 221, "14382": 221, "14384": 221, "14388": 221, "14390": 221, "14392": 221, "14394": 221, "14396": 221, "14398": 221, "14400": 221, "14402": 221, "14404": 221, "14406": 221, "14408": 221, "14410": 221, "14412": 221, "14414": 221, "14416": 221, "14418": 221, "14420": 221, "14422": 221, "14424": 221, "14426": 221, "14428": 221, "14430": 221, "14432": 221, "14434": 221, "14436": 221, "14438": 221, "14440": 221, "14442": 221, "14444": 221, "14446": 221, "14448": 221, "14450": 221, "14452": 221, "14454": 221, "14456": 221, "14458": 221, "14460": 221, "14462": 221, "14464": 221, "14466": 221, "14468": 221, "14470": 221, "14472": 221, "14474": 221, "14476": 221, "14478": 221, "14480": 221, "14482": 221, "14484": 221, "14486": 221, "14488": 221, "14490": 221, "14492": 221, "14494": 221, "14496": 221, "14498": 221, "14500": 221, "14502": 221, "14504": 221, "14506": 221, "14508": 221, "14510": 221, "14512": 221, "14514": 221, "14516": 221, "14518": 221, "14520": 221, "14522": 221, "14524": 221, "14526": 221, "14528": 221, "14530": 221, "14532": 221, "14534": 221, "14536": 221, "14538": 221, "14540": 221, "14542": 221, "14544": 221, "14546": 221, "14548": 221, "14550": 221, "14552": 221, "14554": 221, "14556": 221, "14558": 221, "14560": 221, "14562": 221, "14564": 221, "14566": 221, "14568": 221, "14570": 221, "14572": 221, "14574": 221, "14576": 221, "14578": 221, "14580": 221, "14582": 221, "14584": 221, "14586": 221, "14588": 221, "14590": 221, "14592": 221, "14594": 221, "14596": 221, "14598": 221, "14600": 221, "14602": 221, "14604": 221, "14606": 221, "14608": 221, "14610": 221, "14612": 221, "14614": 221, "14616": 221, "14618": 221, "14620": 221, "14622": 221, "14624": 221, "14626": 221, "14628": 221, "14630": 221, "14632": 221, "14634": 221, "14636": 221, "14638": 221, "14640": 221, "14642": 221, "14644": 221, "14646": 221, "14648": 221, "14650": 221, "14652": 221, "14654": 221, "14656": 221, "14658": 221, "14660": 221, "14662": 221, "14664": 221, "14666": 221, "14668": 221, "14670": 221, "14672": 221, "14674": 221, "14676": 221, "14678": 221, "14680": 221, "14682": 221, "14684": 221, "14686": 221, "14688": 221, "14690": 221, "14692": 221, "14694": 221, "14696": 221, "14698": 221, "14700": 221, "14702": 221, "14704": 221, "14706": 221, "14708": 221, "14710": 221, "14712": 221, "14714": 221, "14716": 221, "14718": 221, "14720": 221, "14722": 221, "14724": 221, "14726": 221, "14728": 221, "14730": 221, "14732": 221, "14734": 221, "14736": 221, "14738": 221, "14740": 221, "14742": 221, "14744": 221, "14746": 221, "14748": 221, "14750": 221, "14752": 221, "14754": 221, "14756": 221, "14758": 221, "14760": 221, "14762": 221, "14764": 221, "14766": 221, "14768": 221, "14770": 221, "14772": 221, "14774": 221, "14776": 221, "14778": 221, "14780": 221, "14782": 221, "14784": 221, "14786": 221, "14788": 221, "14790": 221, "14792": 221, "14794": 221, "14796": 221, "14798": 221, "14800": 221, "14802": 221, "14804": 221, "14806": 221, "14808": 221, "14810": 221, "14812": 221, "14814": 221, "14816": 221, "14818": 221, "14820": 221, "14822": 221, "14824": 221, "14826": 221, "14828": 221, "14830": 221, "14832": 221, "14834": 221, "14836": 221, "14838": 221, "14840": 221, "14842": 221, "14844": 221, "14846": 221, "14848": 221, "14850": 221, "14852": 221, "14854": 221, "14856": 221, "14858": 221, "14860": 221, "14862": 221, "14864": 221, "14866": 221, "14868": 221, "14870": 221, "14872": 221, "14874": 221, "14876": 221, "14878": 221, "14880": 221, "14882": [221, 556], "14884": 221, "14886": 221, "14888": 221, "14890": 221, "14892": 221, "14894": 221, "14896": 221, "14898": 221, "14900": 221, "14902": 221, "14904": 221, "14906": 221, "14908": 221, "14910": 221, "14912": 221, "14914": 221, "14916": 221, "14918": 221, "14920": 221, "14922": 221, "14924": 221, "14926": 221, "14928": 221, "14930": 221, "14932": 221, "14934": 221, "14936": 221, "14938": 221, "14940": 221, "14942": 221, "14944": 221, "14946": 221, "14948": 221, "14950": 221, "14952": 221, "14954": 221, "14956": 221, "14958": 221, "14960": 221, "14962": 221, "14964": 221, "14966": 221, "14968": 221, "14970": 221, "14972": 221, "14974": 221, "14976": 221, "14978": 221, "14980": 221, "14982": 221, "14984": 221, "14986": 221, "14988": 221, "14990": [221, 270], "14992": 221, "14994": 221, "14996": 221, "14998": 221, "15002": 221, "15004": 221, "15006": 221, "15008": 221, "15010": 221, "15012": 221, "15014": 221, "15016": 221, "15018": 221, "15020": 221, "15022": 221, "15024": 221, "15026": 221, "15028": 221, "15030": 221, "15032": 221, "15034": 221, "15036": 221, "15038": 221, "15040": 221, "15042": 221, "15044": 221, "15046": 221, "15048": 221, "15050": 221, "15052": 221, "15054": 221, "15056": 221, "15058": 221, "15060": 221, "15062": 221, "15064": 221, "15066": 221, "15068": 221, "15070": 221, "15072": 221, "15074": 221, "15076": 221, "15078": 221, "15080": 221, "15082": 221, "15084": 221, "15086": 221, "15088": 221, "15090": 221, "15092": 221, "15094": 221, "15096": 221, "15098": 221, "15100": 221, "15102": 221, "15104": 221, "15106": 221, "15108": 221, "15110": 221, "15112": 221, "15114": 221, "15116": 221, "15118": 221, "15120": 221, "15122": 221, "15124": 221, "15126": 221, "15128": 221, "15130": 221, "15132": 221, "15134": 221, "15136": 221, "15138": 221, "15140": 221, "15142": 221, "15144": 221, "15146": 221, "15148": 221, "15150": 221, "15152": 221, "15154": 221, "15156": 221, "15158": 221, "15160": 221, "15162": 221, "15164": 221, "15166": 221, "15168": 221, "15170": 221, "15172": 221, "15174": 221, "15176": 221, "15178": 221, "15180": 221, "15182": 221, "15184": 221, "15186": 221, "15188": 221, "15190": 221, "15192": 221, "15194": 221, "15196": 221, "15198": 221, "15200": 221, "15202": 221, "15204": 221, "15206": 221, "15208": 221, "15210": 221, "15212": 221, "15214": 221, "15216": 221, "15218": 221, "15220": 221, "15222": 221, "15224": 221, "15226": 221, "15228": 221, "15230": 221, "15232": 221, "15234": 221, "15236": 221, "15238": 221, "15240": 221, "15242": 221, "15244": [221, 985], "15246": 221, "15248": 221, "15250": 221, "15252": 221, "15254": 221, "15256": 221, "15258": 221, "15260": 221, "15262": 221, "15264": 221, "15266": 221, "15268": 221, "15270": 221, "15272": 221, "15274": 221, "15276": 221, "15278": 221, "15280": 221, "15282": 221, "15284": 221, "15286": 221, "15288": 221, "15290": 221, "15292": 221, "15294": 221, "15296": 221, "15298": 221, "15300": 221, "15302": 221, "15304": 221, "15306": 221, "15308": 221, "15310": 221, "15312": 221, "15314": 221, "15316": 221, "15318": 221, "15320": 221, "15322": 221, "15324": 221, "15326": 221, "15328": 221, "15330": 221, "15332": 221, "15334": 221, "15336": 221, "15338": 221, "15340": 221, "15342": 221, "15344": 221, "15346": 221, "15348": 221, "15350": 221, "15352": 221, "15354": 221, "15356": 221, "15358": 221, "15360": 221, "15362": 221, "15364": 221, "15366": 221, "15368": 221, "15370": 221, "15372": 221, "15374": 221, "15376": 221, "15378": 221, "15380": 221, "15382": 221, "15384": 221, "15386": 221, "15388": 221, "15390": 221, "15392": 221, "15394": 221, "15396": 221, "15398": 221, "15400": 221, "15402": 221, "15404": 221, "15406": 221, "15408": 221, "15410": 221, "15412": 221, "15414": 221, "15416": 221, "15418": 221, "15420": 221, "15422": 221, "15424": 221, "15426": 221, "15428": 221, "15430": 221, "15432": 221, "15434": 221, "15436": 221, "15438": 221, "15440": 221, "15442": 221, "15444": 221, "15446": 221, "15448": 221, "15450": 221, "15452": 221, "15454": 221, "15456": 221, "15458": 221, "15460": 221, "15462": 221, "15464": 221, "15466": 221, "15468": 221, "15470": 221, "15472": 221, "15474": 221, "15476": 221, "15478": 221, "15480": 221, "15482": 221, "15484": 221, "15486": 221, "15488": 221, "15490": 221, "15492": 221, "15494": 221, "15496": 221, "15498": 221, "15500": 221, "15502": 221, "15504": 221, "15506": 221, "15508": 221, "15510": 221, "15512": 221, "15514": 221, "15516": 221, "15518": 221, "15520": 221, "15522": 221, "15524": 221, "15526": 221, "15528": 221, "15530": 221, "15532": 221, "15534": 221, "15536": 221, "15538": 221, "15540": 221, "15542": 221, "15544": 221, "15546": 221, "15548": 221, "15550": 221, "15552": 221, "15554": 221, "15556": 221, "15558": 221, "15560": 221, "15562": 221, "15564": 221, "15566": 221, "15568": 221, "15570": 221, "15572": 221, "15574": 221, "15576": 221, "15578": 221, "15580": 221, "15582": 221, "15584": 221, "15586": 221, "15588": 221, "15590": 221, "15592": 221, "15594": 221, "15596": 221, "15598": 221, "15600": 221, "15602": 221, "15604": 221, "15606": 221, "15608": 221, "15610": 221, "15612": 221, "15614": 221, "15616": 221, "15618": 221, "15620": 221, "15622": 221, "15624": 221, "15626": 221, "15628": 221, "15630": 221, "15632": 221, "15634": 221, "15636": 221, "15638": 221, "15640": 221, "15642": 221, "15644": 221, "15646": 221, "15648": 221, "15650": 221, "15652": 221, "15654": 221, "15656": 221, "15658": 221, "15660": 221, "15662": 221, "15664": 221, "15666": 221, "15668": 221, "15670": 221, "15672": 221, "15674": 221, "15676": 221, "15678": 221, "15680": 221, "15682": 221, "15684": 221, "15686": 221, "15688": 221, "15690": 221, "15692": 221, "15694": 221, "15696": 221, "15698": 221, "15700": 221, "15702": 221, "15704": 221, "15706": 221, "15708": 221, "15710": 221, "15712": 221, "15714": 221, "15716": 221, "15718": 221, "15720": 221, "15722": 221, "15724": 221, "15726": 221, "15728": 221, "15730": 221, "15732": 221, "15734": 221, "15736": 221, "15738": 221, "15740": 221, "15742": 221, "15744": 221, "15746": 221, "15748": 221, "15750": 221, "15752": 221, "15754": 221, "15756": 221, "15758": 221, "15760": 221, "15762": 221, "15764": 221, "15766": 221, "15768": 221, "15770": 221, "15772": 221, "15774": 221, "15776": 221, "15778": 221, "15780": 221, "15782": 221, "15784": 221, "15786": 221, "15788": 221, "15790": 221, "15792": 221, "15794": 221, "15796": 221, "15798": 221, "15800": 221, "15802": 221, "15804": 221, "15806": 221, "15808": 221, "15810": 221, "15812": 221, "15814": 221, "15816": 221, "15818": 221, "15820": 221, "15822": 221, "15824": 221, "15826": 221, "15828": 221, "15830": 221, "15832": 221, "15834": 221, "15836": 221, "15838": 221, "15840": 221, "15842": 221, "15844": 221, "15846": 221, "15848": 221, "15850": 221, "15852": 221, "15854": 221, "15856": 221, "15858": 221, "15860": 221, "15862": 221, "15864": 221, "15866": 221, "15868": 221, "15870": 221, "15872": 221, "15874": 221, "15876": 221, "15878": 221, "15880": 221, "15882": 221, "15884": 221, "15886": 221, "15888": 221, "15890": 221, "15892": 221, "15894": 221, "15896": 221, "15898": 221, "15900": 221, "15902": 221, "15904": 221, "15906": 221, "15908": 221, "15910": 221, "15912": 221, "15914": 221, "15916": 221, "15918": 221, "15920": 221, "15922": 221, "15924": 221, "15926": 221, "15928": 221, "15930": 221, "15932": 221, "15934": 221, "15936": 221, "15938": 221, "15940": 221, "15942": 221, "15944": 221, "15946": 221, "15948": 221, "15950": 221, "15952": 221, "15954": 221, "15956": 221, "15958": 221, "15960": 221, "15962": 221, "15964": 221, "15966": 221, "15968": 221, "15970": 221, "15972": 221, "15974": 221, "15976": 221, "15978": 221, "15980": 221, "15982": 221, "15984": 221, "15986": 221, "15988": 221, "15990": 221, "15992": 221, "15994": 221, "15996": 221, "15998": 221, "16000": 221, "16002": 221, "16004": 221, "16006": 221, "16008": 221, "16010": 221, "16012": 221, "16014": 221, "16016": 221, "16018": 221, "16020": 221, "16022": 221, "16024": 221, "16026": 221, "16028": 221, "16030": 221, "16032": 221, "16034": 221, "16036": 221, "16038": 221, "16040": 221, "16042": 221, "16044": 221, "16046": 221, "16048": 221, "16050": 221, "16052": 221, "16054": 221, "16056": 221, "16058": 221, "16060": 221, "16062": 221, "16064": 221, "16066": 221, "16068": 221, "16070": 221, "16072": 221, "16074": 221, "16076": 221, "16078": 221, "16080": 221, "16082": 221, "16084": 221, "16086": 221, "16088": 221, "16090": 221, "16092": 221, "16094": 221, "16096": 221, "16098": 221, "16100": 221, "16102": 221, "16104": 221, "16106": 221, "16108": 221, "16110": 221, "16112": 221, "16114": 221, "16116": 221, "16118": 221, "16120": 221, "16122": 221, "16124": 221, "16126": 221, "16128": 221, "16130": 221, "16132": 221, "16134": 221, "16136": 221, "16138": 221, "16140": 221, "16142": 221, "16144": 221, "16146": 221, "16148": 221, "16150": 221, "16152": 221, "16154": 221, "16156": 221, "16158": 221, "16160": 221, "16162": 221, "16164": 221, "16166": 221, "16168": 221, "16170": 221, "16172": 221, "16174": 221, "16176": 221, "16178": 221, "16180": 221, "16182": 221, "16184": 221, "16186": 221, "16188": 221, "16190": 221, "16192": 221, "16194": 221, "16196": 221, "16198": 221, "16200": 221, "16202": 221, "16204": 221, "16206": 221, "16208": 221, "16210": 221, "16212": 221, "16214": 221, "16216": 221, "16218": 221, "16220": 221, "16222": 221, "16224": 221, "16226": 221, "16228": 221, "16230": 221, "16232": 221, "16234": 221, "16236": 221, "16238": 221, "16240": 221, "16242": 221, "16244": 221, "16246": 221, "16248": 221, "16250": 221, "16252": 221, "16254": 221, "16256": 221, "16258": 221, "16260": 221, "16262": 221, "16264": 221, "16266": 221, "16268": 221, "16270": 221, "16272": 221, "16274": 221, "16276": 221, "16278": 221, "16280": 221, "16282": 221, "16284": 221, "16286": 221, "16288": 221, "16290": 221, "16292": 221, "16294": 221, "16296": 221, "16298": 221, "16300": 221, "16302": 221, "16304": 221, "16306": 221, "16308": 221, "16310": 221, "16312": 221, "16314": 221, "16316": 221, "16318": 221, "16320": 221, "16322": 221, "16324": 221, "16326": 221, "16328": 221, "16330": 221, "16332": 221, "16334": 221, "16336": 221, "16338": 221, "16340": 221, "16342": 221, "16344": 221, "16346": 221, "16348": 221, "16350": 221, "16352": 221, "16354": 221, "16356": 221, "16358": 221, "16360": 221, "16362": 221, "16364": 221, "16366": 221, "16368": 221, "16370": 221, "16372": 221, "16374": 221, "16376": 221, "16378": 221, "16380": 221, "16382": 221, "16386": 221, "16388": 221, "16390": 221, "16392": 221, "16394": 221, "16396": 221, "16398": 221, "16400": 221, "16402": 221, "16404": 221, "16406": 221, "16408": 221, "16410": 221, "16412": 221, "16414": 221, "16416": 221, "16418": 221, "16420": 221, "16422": 221, "16424": 221, "16426": 221, "16428": 221, "16430": 221, "16432": 221, "16434": 221, "16436": 221, "16438": 221, "16440": 221, "16442": 221, "16444": 221, "16446": 221, "16448": 221, "16450": 221, "16452": 221, "16454": 221, "16456": 221, "16458": 221, "16460": 221, "16462": 221, "16464": 221, "16466": 221, "16468": 221, "16470": 221, "16472": 221, "16474": 221, "16476": 221, "16478": 221, "16480": 221, "16482": 221, "16484": 221, "16486": 221, "16488": 221, "16490": 221, "16492": 221, "16494": 221, "16496": 221, "16498": 221, "16500": 221, "16502": 221, "16504": 221, "16506": 221, "16508": 221, "16510": 221, "16512": 221, "16514": 221, "16516": 221, "16518": 221, "16520": 221, "16522": 221, "16524": 221, "16526": 221, "16528": 221, "16530": 221, "16532": 221, "16534": 221, "16536": 221, "16538": 221, "16540": 221, "16542": 221, "16544": 221, "16546": 221, "16548": 221, "16550": 221, "16552": 221, "16554": 221, "16556": 221, "16558": 221, "16560": 221, "16562": 221, "16564": 221, "16566": 221, "16568": 221, "16570": 221, "16572": 221, "16574": 221, "16576": 221, "16578": 221, "16580": 221, "16582": 221, "16584": 221, "16586": 221, "16588": 221, "16590": 221, "16592": 221, "16594": 221, "16596": 221, "16598": 221, "16600": 221, "16602": 221, "16604": 221, "16606": 221, "16608": 221, "16610": 221, "16612": 221, "16614": 221, "16616": 221, "16618": 221, "16620": 221, "16622": 221, "16624": 221, "16626": 221, "16628": 221, "16630": 221, "16632": 221, "16634": 221, "16636": 221, "16638": 221, "16640": 221, "16642": 221, "16644": 221, "16646": 221, "16648": 221, "16650": 221, "16652": 221, "16654": 221, "16656": 221, "16658": 221, "16660": 221, "16662": 221, "16664": 221, "16666": 221, "16668": 221, "16670": 221, "16672": 221, "16674": 221, "16676": 221, "16678": 221, "16680": 221, "16682": 221, "16684": 221, "16686": 221, "16688": 221, "16690": 221, "16692": 221, "16694": 221, "16696": 221, "16698": 221, "16700": 221, "16702": 221, "16704": 221, "16706": 221, "16708": 221, "16710": 221, "16712": 221, "16714": 221, "16716": 221, "16718": 221, "16720": 221, "16722": 221, "16724": 221, "16726": 221, "16728": 221, "16730": 221, "16732": 221, "16734": 221, "16736": 221, "16738": 221, "16740": 221, "16742": 221, "16744": 221, "16746": 221, "16748": 221, "16750": 221, "16752": 221, "16754": 221, "16756": 221, "16758": 221, "16760": 221, "16762": 221, "16764": 221, "16766": 221, "16768": 221, "16770": 221, "16772": 221, "16774": 221, "16776": 221, "16778": 221, "16780": 221, "16782": 221, "16784": 221, "16786": 221, "16788": 221, "16790": 221, "16792": 221, "16794": 221, "16796": 221, "16798": 221, "16800": 221, "16802": 221, "16804": 221, "16806": 221, "16808": 221, "16810": 221, "16812": 221, "16814": 221, "16816": 221, "16818": 221, "16820": 221, "16822": 221, "16824": 221, "16826": 221, "16828": 221, "16830": 221, "16832": 221, "16834": 221, "16836": 221, "16838": 221, "16840": 221, "16842": 221, "16844": 221, "16846": 221, "16848": 221, "16850": 221, "16852": 221, "16854": 221, "16856": 221, "16858": 221, "16860": 221, "16862": 221, "16864": 221, "16866": 221, "16868": 221, "16870": 221, "16872": 221, "16874": 221, "16876": 221, "16878": 221, "16880": 221, "16882": 221, "16884": 221, "16886": 221, "16888": 221, "16890": 221, "16892": 221, "16894": 221, "16896": 221, "16898": 221, "16900": 221, "16902": 221, "16904": 221, "16906": 221, "16908": 221, "16910": 221, "16912": 221, "16914": 221, "16916": 221, "16918": 221, "16920": 221, "16922": 221, "16924": 221, "16926": 221, "16928": 221, "16930": 221, "16932": 221, "16934": 221, "16936": 221, "16938": 221, "16940": 221, "16942": 221, "16944": 221, "16946": 221, "16948": 221, "16950": 221, "16952": 221, "16954": 221, "16956": 221, "16958": 221, "16960": 221, "16962": 221, "16964": 221, "16966": 221, "16968": 221, "16970": 221, "16972": 221, "16974": 221, "16976": 221, "16978": 221, "16980": 221, "16982": 221, "16984": 221, "16986": 221, "16988": 221, "16990": 221, "16992": 221, "16994": 221, "16996": 221, "16998": 221, "17000": 221, "17002": 221, "17004": 221, "17006": 221, "17008": 221, "17010": 221, "17012": 221, "17014": 221, "17016": 221, "17018": 221, "17020": 221, "17022": 221, "17024": 221, "17026": 221, "17028": 221, "17030": 221, "17032": 221, "17034": 221, "17036": 221, "17038": 221, "17040": 221, "17042": 221, "17044": 221, "17046": 221, "17048": 221, "17050": 221, "17052": 221, "17054": 221, "17056": 221, "17058": 221, "17060": 221, "17062": 221, "17064": 221, "17066": 221, "17068": 221, "17070": 221, "17072": 221, "17074": 221, "17076": 221, "17078": 221, "17080": 221, "17082": 221, "17084": 221, "17086": 221, "17088": 221, "17090": 221, "17092": 221, "17094": 221, "17096": 221, "17098": 221, "17100": 221, "17102": 221, "17104": 221, "17106": 221, "17108": 221, "17110": 221, "17112": 221, "17114": 221, "17116": 221, "17118": 221, "17120": 221, "17122": 221, "17124": 221, "17126": [221, 270], "17128": 221, "17130": 221, "17132": 221, "17134": 221, "17136": 221, "17138": 221, "17140": 221, "17142": 221, "17144": 221, "17146": 221, "17148": 221, "17150": 221, "17152": 221, "17154": 221, "17156": 221, "17158": 221, "17160": 221, "17162": 221, "17164": 221, "17166": 221, "17168": 221, "17170": 221, "17172": 221, "17174": 221, "17176": 221, "17178": 221, "17180": 221, "17182": 221, "17184": 221, "17186": 221, "17188": 221, "17190": 221, "17192": 221, "17194": 221, "17196": 221, "17198": 221, "17200": 221, "17202": 221, "17204": 221, "17206": 221, "17208": 221, "17210": 221, "17212": 221, "17214": 221, "17216": 221, "17218": 221, "17220": 221, "17222": 221, "17224": 221, "17226": 221, "17228": 221, "17230": 221, "17232": 221, "17234": 221, "17236": 221, "17238": 221, "17240": 221, "17242": 221, "17244": 221, "17246": 221, "17248": 221, "17250": 221, "17252": 221, "17254": 221, "17256": 221, "17258": 221, "17260": 221, "17262": 221, "17264": 221, "17266": 221, "17268": 221, "17270": 221, "17272": 221, "17274": 221, "17276": 221, "17278": 221, "17280": 221, "17282": 221, "17284": 221, "17286": 221, "17288": 221, "17290": 221, "17292": 221, "17294": 221, "17296": 221, "17298": 221, "17300": 221, "17302": 221, "17304": 221, "17306": 221, "17308": 221, "17310": 221, "17312": 221, "17314": 221, "17316": 221, "17318": 221, "17320": 221, "17322": 221, "17324": 221, "17326": 221, "17328": 221, "17330": 221, "17332": 221, "17334": 221, "17336": 221, "17338": 221, "17340": 221, "17342": 221, "17344": 221, "17346": 221, "17348": 221, "17350": 221, "17352": 221, "17354": 221, "17356": 221, "17358": 221, "17360": 221, "17362": 221, "17364": 221, "17366": 221, "17368": 221, "17370": 221, "17372": 221, "17374": 221, "17376": 221, "17378": 221, "17380": 221, "17382": 221, "17384": 221, "17386": 221, "17388": 221, "17390": 221, "17392": 221, "17394": 221, "17396": 221, "17398": 221, "17400": 221, "17402": 221, "17404": 221, "17406": 221, "17408": 221, "17410": 221, "17412": 221, "17414": 221, "17416": 221, "17418": 221, "17420": 221, "17422": 221, "17424": 221, "17426": 221, "17428": 221, "17430": 221, "17432": 221, "17434": 221, "17436": 221, "17438": 221, "17440": 221, "17442": 221, "17444": 221, "17446": 221, "17448": 221, "17450": 221, "17452": 221, "17454": 221, "17456": 221, "17458": 221, "17460": 221, "17462": 221, "17464": 221, "17466": 221, "17468": 221, "17470": 221, "17472": 221, "17474": 221, "17476": 221, "17478": 221, "17480": 221, "17482": 221, "17484": 221, "17486": 221, "17488": 221, "17490": 221, "17492": 221, "17494": 221, "17496": 221, "17498": 221, "17500": 221, "17502": 221, "17504": 221, "17506": 221, "17508": 221, "17510": 221, "17512": 221, "17514": 221, "17516": 221, "17518": 221, "17520": 221, "17522": 221, "17524": 221, "17526": 221, "17528": 221, "17530": 221, "17532": 221, "17534": 221, "17536": 221, "17538": 221, "17540": 221, "17542": 221, "17544": 221, "17546": 221, "17548": 221, "17550": 221, "17552": 221, "17554": 221, "17556": 221, "17558": 221, "17560": 221, "17562": 221, "17564": 221, "17566": 221, "17568": 221, "17570": 221, "17572": 221, "17574": 221, "17576": 221, "17578": 221, "17580": 221, "17582": 221, "17584": 221, "17586": 221, "17588": 221, "17590": 221, "17592": 221, "17594": 221, "17596": 221, "17598": 221, "17600": 221, "17602": 221, "17604": 221, "17606": 221, "17608": 221, "17610": 221, "17612": 221, "17614": 221, "17616": 221, "17618": 221, "17620": 221, "17622": 221, "17624": 221, "17626": 221, "17628": 221, "17630": 221, "17632": 221, "17634": 221, "17636": 221, "17638": 221, "17640": 221, "17642": 221, "17644": 221, "17646": 221, "17648": 221, "17650": 221, "17652": 221, "17654": 221, "17656": 221, "17658": 221, "17660": 221, "17662": 221, "17664": 221, "17666": 221, "17668": 221, "17670": 221, "17672": 221, "17674": 221, "17676": 221, "17678": 221, "17680": 221, "17682": 221, "17684": 221, "17686": 221, "17688": 221, "17690": 221, "17692": 221, "17694": 221, "17696": 221, "17698": 221, "17700": 221, "17702": 221, "17704": 221, "17706": 221, "17708": 221, "17710": 221, "17712": 221, "17714": 221, "17716": 221, "17718": 221, "17720": 221, "17722": 221, "17724": 221, "17726": 221, "17728": 221, "17730": 221, "17732": 221, "17734": 221, "17736": 221, "17738": 221, "17740": 221, "17742": 221, "17744": 221, "17746": 221, "17748": 221, "17750": 221, "17752": 221, "17754": 221, "17756": 221, "17758": 221, "17760": 221, "17762": 221, "17764": 221, "17766": 221, "17768": 221, "17770": 221, "17772": 221, "17774": 221, "17776": 221, "17778": 221, "17780": 221, "17782": 221, "17784": 221, "17786": 221, "17788": 221, "17790": 221, "17792": 221, "17794": 221, "17796": 221, "17798": 221, "17800": 221, "17802": 221, "17804": 221, "17806": 221, "17808": 221, "17810": 221, "17812": 221, "17814": 221, "17816": 221, "17818": 221, "17820": 221, "17822": 221, "17824": 221, "17826": 221, "17828": 221, "17830": 221, "17832": 221, "17834": 221, "17836": 221, "17838": 221, "17840": 221, "17842": 221, "17844": 221, "17846": 221, "17848": 221, "17850": 221, "17852": 221, "17854": 221, "17856": 221, "17858": 221, "17860": 221, "17862": 221, "17864": 221, "17866": 221, "17868": 221, "17870": 221, "17872": 221, "17874": 221, "17876": 221, "17878": 221, "17880": 221, "17882": 221, "17884": 221, "17886": 221, "17888": 221, "17890": 221, "17892": 221, "17894": 221, "17896": 221, "17898": 221, "17900": 221, "17902": 221, "17904": 221, "17906": 221, "17908": 221, "17910": 221, "17912": 221, "17914": 221, "17916": 221, "17918": 221, "17920": 221, "17922": 221, "17924": 221, "17926": 221, "17928": 221, "17930": 221, "17932": 221, "17934": 221, "17936": 221, "17938": 221, "17940": 221, "17942": 221, "17944": 221, "17946": 221, "17948": 221, "17950": 221, "17952": 221, "17954": 221, "17956": 221, "17958": 221, "17960": 221, "17962": 221, "17964": 221, "17966": 221, "17968": 221, "17970": 221, "17972": 221, "17974": 221, "17976": 221, "17978": 221, "17980": 221, "17982": 221, "17984": 221, "17986": 221, "17988": 221, "17990": 221, "17992": 221, "17994": 221, "17996": 221, "17998": 221, "18000": [221, 903], "18002": 221, "18004": 221, "18006": 221, "18008": 221, "18010": 221, "18012": 221, "18014": 221, "18016": 221, "18018": 221, "18020": 221, "18022": 221, "18024": 221, "18026": 221, "18028": 221, "18030": 221, "18032": 221, "18034": 221, "18036": 221, "18038": 221, "18040": 221, "18042": 221, "18044": 221, "18046": 221, "18048": 221, "18050": 221, "18052": 221, "18054": 221, "18056": 221, "18058": 221, "18060": 221, "18062": 221, "18064": 221, "18066": 221, "18068": 221, "18070": 221, "18072": 221, "18074": 221, "18076": 221, "18078": 221, "18080": 221, "18082": 221, "18084": 221, "18086": 221, "18088": 221, "18090": 221, "18092": 221, "18094": 221, "18096": 221, "18098": 221, "18100": 221, "18102": 221, "18104": 221, "18106": 221, "18108": 221, "18110": 221, "18112": 221, "18114": 221, "18116": 221, "18118": 221, "18120": 221, "18122": 221, "18124": 221, "18126": 221, "18128": 221, "18130": 221, "18132": 221, "18134": 221, "18136": 221, "18138": 221, "18140": 221, "18142": 221, "18144": 221, "18146": 221, "18148": 221, "18150": 221, "18152": 221, "18154": 221, "18156": 221, "18158": 221, "18160": 221, "18162": 221, "18164": 221, "18166": 221, "18168": 221, "18170": 221, "18172": 221, "18174": 221, "18176": 221, "18178": 221, "18180": 221, "18182": 221, "18184": 221, "18186": 221, "18188": 221, "18190": 221, "18192": 221, "18194": 221, "18196": 221, "18198": 221, "18200": 221, "18202": 221, "18204": 221, "18206": 221, "18208": 221, "18210": 221, "18212": 221, "18214": 221, "18216": 221, "18218": 221, "18220": 221, "18222": 221, "18224": 221, "18226": 221, "18228": 221, "18230": 221, "18232": 221, "18234": 221, "18236": 221, "18238": 221, "18240": 221, "18242": 221, "18244": 221, "18246": 221, "18248": 221, "18250": 221, "18252": 221, "18254": 221, "18256": 221, "18258": 221, "18260": 221, "18262": 221, "18264": 221, "18266": 221, "18268": 221, "18270": 221, "18272": 221, "18274": 221, "18276": 221, "18278": 221, "18280": 221, "18282": 221, "18284": 221, "18286": 221, "18288": 221, "18290": 221, "18292": 221, "18294": 221, "18296": 221, "18298": 221, "18300": 221, "18302": 221, "18304": 221, "18306": 221, "18308": 221, "18310": 221, "18312": 221, "18314": 221, "18316": 221, "18318": 221, "18320": 221, "18322": 221, "18324": 221, "18326": 221, "18328": 221, "18330": 221, "18332": 221, "18334": 221, "18336": 221, "18338": 221, "18340": 221, "18342": 221, "18344": 221, "18346": 221, "18348": 221, "18350": 221, "18352": 221, "18354": 221, "18356": 221, "18358": 221, "18360": 221, "18362": 221, "18364": 221, "18366": 221, "18368": 221, "18370": 221, "18372": 221, "18374": 221, "18376": 221, "18378": 221, "18380": 221, "18382": 221, "18384": [221, 971], "18386": 221, "18388": 221, "18390": 221, "18392": 221, "18394": 221, "18396": 221, "18398": 221, "18400": 221, "18402": 221, "18404": 221, "18406": 221, "18408": 221, "18410": 221, "18412": 221, "18414": 221, "18416": 221, "18418": 221, "18420": 221, "18422": 221, "18424": 221, "18426": 221, "18428": 221, "18430": 221, "18432": 221, "18434": 221, "18436": 221, "18438": 221, "18440": 221, "18442": 221, "18444": 221, "18446": 221, "18448": 221, "18450": 221, "18452": 221, "18454": 221, "18456": 221, "18458": 221, "18460": 221, "18462": 221, "18464": 221, "18466": 221, "18468": 221, "18470": 221, "18472": 221, "18474": 221, "18476": 221, "18478": 221, "18480": 221, "18482": 221, "18484": 221, "18486": 221, "18488": 221, "18490": 221, "18492": 221, "18494": 221, "18496": 221, "18498": 221, "18500": 221, "18502": 221, "18504": 221, "18506": 221, "18508": 221, "18510": 221, "18512": 221, "18514": 221, "18516": 221, "18518": 221, "18520": 221, "18522": 221, "18524": 221, "18526": 221, "18528": 221, "18530": 221, "18532": 221, "18534": 221, "18536": 221, "18538": 221, "18540": 221, "18542": 221, "18544": 221, "18546": 221, "18548": 221, "18550": 221, "18552": 221, "18554": 221, "18556": 221, "18558": 221, "18560": 221, "18562": 221, "18564": 221, "18566": 221, "18568": 221, "18570": 221, "18572": 221, "18574": 221, "18576": 221, "18578": 221, "18580": 221, "18582": 221, "18584": 221, "18586": 221, "18588": 221, "18590": 221, "18592": 221, "18594": 221, "18596": 221, "18598": 221, "18600": 221, "18602": 221, "18604": 221, "18606": 221, "18608": 221, "18610": 221, "18612": 221, "18614": 221, "18616": 221, "18618": 221, "18620": 221, "18622": 221, "18624": 221, "18626": 221, "18628": 221, "18630": 221, "18632": 221, "18634": 221, "18636": 221, "18638": 221, "18640": 221, "18642": 221, "18644": 221, "18646": 221, "18648": 221, "18650": 221, "18652": 221, "18654": 221, "18656": 221, "18658": 221, "18660": 221, "18662": 221, "18664": 221, "18666": 221, "18668": 221, "18670": 221, "18672": 221, "18674": 221, "18676": 221, "18678": 221, "18680": 221, "18682": 221, "18684": 221, "18686": 221, "18688": 221, "18690": 221, "18692": 221, "18694": 221, "18696": 221, "18698": 221, "18700": 221, "18702": 221, "18704": 221, "18706": 221, "18708": 221, "18710": 221, "18712": 221, "18714": 221, "18716": 221, "18718": 221, "18720": 221, "18722": 221, "18724": 221, "18726": 221, "18728": 221, "18730": 221, "18732": 221, "18734": 221, "18736": 221, "18738": 221, "18740": 221, "18742": 221, "18744": 221, "18746": 221, "18748": 221, "18750": 221, "18752": 221, "18754": 221, "18756": 221, "18758": 221, "18760": 221, "18762": 221, "18764": 221, "18766": 221, "18768": 221, "18770": 221, "18772": 221, "18774": 221, "18776": 221, "18778": 221, "18780": 221, "18782": 221, "18784": 221, "18786": 221, "18788": 221, "18790": 221, "18792": 221, "18794": 221, "18796": 221, "18798": 221, "18800": 221, "18802": 221, "18804": 221, "18806": 221, "18808": 221, "18810": 221, "18812": 221, "18814": 221, "18816": 221, "18818": 221, "18820": 221, "18822": 221, "18824": 221, "18826": 221, "18828": 221, "18830": 221, "18832": 221, "18834": 221, "18836": 221, "18838": 221, "18840": 221, "18842": 221, "18844": 221, "18846": 221, "18848": 221, "18850": 221, "18852": 221, "18854": 221, "18856": 221, "18858": 221, "18860": 221, "18862": 221, "18864": 221, "18866": 221, "18868": 221, "18870": 221, "18872": 221, "18874": 221, "18876": 221, "18878": 221, "18880": 221, "18882": 221, "18884": 221, "18886": 221, "18888": 221, "18890": 221, "18892": 221, "18894": 221, "18896": 221, "18898": 221, "18900": 221, "18902": 221, "18904": 221, "18906": 221, "18908": 221, "18910": 221, "18912": 221, "18914": 221, "18916": 221, "18918": 221, "18920": 221, "18922": 221, "18924": 221, "18926": 221, "18928": 221, "18930": 221, "18932": 221, "18934": 221, "18936": 221, "18938": 221, "18940": 221, "18942": 221, "18944": 221, "18946": 221, "18948": 221, "18950": 221, "18952": 221, "18954": 221, "18956": 221, "18958": 221, "18960": 221, "18962": 221, "18964": 221, "18966": 221, "18968": 221, "18970": 221, "18972": 221, "18974": 221, "18976": 221, "18978": 221, "18980": 221, "18982": 221, "18984": 221, "18986": 221, "18988": 221, "18990": 221, "18992": 221, "18994": 221, "18996": 221, "18998": 221, "19000": 221, "19002": 221, "19004": 221, "19006": 221, "19008": 221, "19010": 221, "19012": 221, "19014": 221, "19016": 221, "19018": 221, "19020": 221, "19022": 221, "19024": 221, "19026": 221, "19028": 221, "19030": 221, "19032": 221, "19034": 221, "19036": 221, "19038": 221, "19040": 221, "19042": 221, "19044": 221, "19046": 221, "19048": 221, "19050": 221, "19052": 221, "19054": 221, "19056": 221, "19058": 221, "19060": 221, "19062": 221, "19064": 221, "19066": 221, "19068": 221, "19070": 221, "19072": 221, "19074": 221, "19076": 221, "19078": 221, "19080": 221, "19082": 221, "19084": 221, "19086": 221, "19088": 221, "19090": 221, "19092": 221, "19094": 221, "19096": 221, "19098": 221, "19100": 221, "19102": 221, "19104": 221, "19106": 221, "19108": 221, "19110": 221, "19112": 221, "19114": 221, "19116": 221, "19118": 221, "19120": 221, "19122": 221, "19124": 221, "19126": 221, "19128": 221, "19130": 221, "19132": 221, "19134": 221, "19136": 221, "19138": 221, "19140": 221, "19142": 221, "19144": 221, "19146": 221, "19148": 221, "19150": 221, "19152": 221, "19154": 221, "19156": 221, "19158": 221, "19160": 221, "19162": 221, "19164": 221, "19166": 221, "19168": 221, "19170": 221, "19172": 221, "19174": 221, "19176": 221, "19178": 221, "19180": 221, "19182": 221, "19184": 221, "19186": 221, "19188": 221, "19190": 221, "19192": 221, "19194": 221, "19196": 221, "19198": 221, "19200": 221, "19202": 221, "19204": 221, "19206": 221, "19208": 221, "19210": 221, "19212": 221, "19214": 221, "19216": 221, "19218": 221, "19220": 221, "19222": 221, "19224": 221, "19226": 221, "19228": 221, "19230": 221, "19232": 221, "19234": 221, "19236": 221, "19238": 221, "19240": 221, "19242": 221, "19244": 221, "19246": 221, "19248": 221, "19250": 221, "19252": 221, "19254": 221, "19256": 221, "19258": 221, "19260": 221, "19262": 221, "19264": 221, "19266": 221, "19268": 221, "19270": 221, "19272": 221, "19274": 221, "19276": 221, "19278": 221, "19280": 221, "19282": 221, "19284": 221, "19286": 221, "19288": 221, "19290": 221, "19292": 221, "19294": 221, "19296": 221, "19298": 221, "19300": 221, "19302": 221, "19304": 221, "19306": 221, "19308": 221, "19310": 221, "19312": 221, "19314": 221, "19316": 221, "19318": 221, "19320": 221, "19322": 221, "19324": 221, "19326": 221, "19328": 221, "19330": 221, "19332": 221, "19334": 221, "19336": 221, "19338": 221, "19340": 221, "19342": 221, "19344": 221, "19346": 221, "19348": 221, "19350": 221, "19352": 221, "19354": 221, "19356": 221, "19358": 221, "19360": 221, "19362": 221, "19364": 221, "19366": 221, "19368": 221, "19370": 221, "19372": 221, "19374": 221, "19376": 221, "19378": 221, "19380": 221, "19382": 221, "19384": 221, "19386": 221, "19388": 221, "19390": 221, "19392": 221, "19394": 221, "19396": 221, "19398": 221, "19400": 221, "19402": 221, "19404": 221, "19406": 221, "19408": 221, "19410": 221, "19412": 221, "19414": 221, "19416": 221, "19418": 221, "19420": 221, "19422": 221, "19424": 221, "19426": 221, "19428": 221, "19430": 221, "19432": 221, "19434": 221, "19436": 221, "19438": 221, "19440": 221, "19442": 221, "19444": 221, "19446": 221, "19448": 221, "19450": 221, "19452": 221, "19454": 221, "19456": 221, "19458": 221, "19460": 221, "19462": 221, "19464": 221, "19466": 221, "19468": 221, "19470": 221, "19472": 221, "19474": 221, "19476": 221, "19478": 221, "19480": 221, "19482": 221, "19484": 221, "19486": 221, "19488": 221, "19490": 221, "19492": 221, "19494": 221, "19496": 221, "19498": 221, "19500": 221, "19502": 221, "19504": 221, "19506": 221, "19508": 221, "19510": 221, "19512": 221, "19514": 221, "19516": 221, "19518": 221, "19520": 221, "19522": 221, "19524": 221, "19526": 221, "19528": 221, "19530": 221, "19532": 221, "19534": 221, "19536": 221, "19538": 221, "19540": 221, "19542": 221, "19544": 221, "19546": 221, "19548": 221, "19550": 221, "19552": 221, "19554": 221, "19556": 221, "19558": 221, "19560": 221, "19562": 221, "19564": 221, "19566": 221, "19568": 221, "19570": 221, "19572": 221, "19574": 221, "19576": 221, "19578": 221, "19580": 221, "19582": 221, "19584": 221, "19586": 221, "19588": 221, "19590": 221, "19592": 221, "19594": 221, "19596": 221, "19598": 221, "19600": 221, "19602": 221, "19604": 221, "19606": 221, "19608": 221, "19610": 221, "19612": 221, "19614": 221, "19616": 221, "19618": 221, "19620": 221, "19622": 221, "19624": 221, "19626": 221, "19628": 221, "19630": 221, "19632": 221, "19634": 221, "19636": 221, "19638": 221, "19640": 221, "19642": 221, "19644": 221, "19646": 221, "19648": 221, "19650": 221, "19652": 221, "19654": 221, "19656": 221, "19658": 221, "19660": 221, "19662": 221, "19664": 221, "19666": 221, "19668": 221, "19670": 221, "19672": 221, "19674": 221, "19676": 221, "19678": 221, "19680": 221, "19682": 221, "19684": 221, "19686": 221, "19688": 221, "19690": 221, "19692": 221, "19694": 221, "19696": 221, "19698": 221, "19700": 221, "19702": 221, "19704": 221, "19706": 221, "19708": 221, "19710": 221, "19712": 221, "19714": 221, "19716": 221, "19718": 221, "19720": 221, "19722": 221, "19724": 221, "19726": 221, "19728": 221, "19730": 221, "19732": 221, "19734": 221, "19736": 221, "19738": 221, "19740": 221, "19742": 221, "19744": 221, "19746": 221, "19748": 221, "19750": 221, "19752": 221, "19754": 221, "19756": 221, "19758": 221, "19760": 221, "19762": 221, "19764": 221, "19766": 221, "19768": 221, "19770": 221, "19772": 221, "19774": 221, "19776": 221, "19778": 221, "19780": 221, "19782": 221, "19784": 221, "19786": 221, "19788": 221, "19790": 221, "19792": 221, "19794": 221, "19796": 221, "19798": 221, "19800": 221, "19802": 221, "19804": 221, "19806": 221, "19808": 221, "19810": 221, "19812": 221, "19814": 221, "19816": 221, "19818": 221, "19820": 221, "19822": 221, "19824": 221, "19826": 221, "19828": 221, "19830": 221, "19832": 221, "19834": 221, "19836": 221, "19838": 221, "19840": 221, "19842": 221, "19844": 221, "19846": 221, "19848": 221, "19850": 221, "19852": 221, "19854": 221, "19856": 221, "19858": 221, "19860": 221, "19862": 221, "19864": 221, "19866": 221, "19868": 221, "19870": 221, "19872": 221, "19874": 221, "19876": 221, "19878": 221, "19880": 221, "19882": 221, "19884": 221, "19886": 221, "19888": 221, "19890": 221, "19892": 221, "19894": 221, "19896": 221, "19898": 221, "19900": 221, "19902": 221, "19904": 221, "19906": 221, "19908": 221, "19910": 221, "19912": 221, "19914": 221, "19916": 221, "19918": 221, "19920": 221, "19922": 221, "19924": 221, "19926": 221, "19928": 221, "19930": 221, "19932": 221, "19934": 221, "19936": 221, "19938": 221, "19940": 221, "19942": 221, "19944": 221, "19946": 221, "19948": 221, "19950": 221, "19952": 221, "19954": 221, "19956": 221, "19958": 221, "19960": 221, "19962": 221, "19964": 221, "19966": 221, "19968": 221, "19970": 221, "19972": 221, "19974": 221, "19976": 221, "19978": 221, "19980": 221, "19982": 221, "19984": 221, "19986": 221, "19988": 221, "19990": 221, "19992": 221, "19994": 221, "19996": 221, "19998": 221, "l_to_send": 221, "json_to_send": 221, "json_receiv": 221, "l_receiv": 221, "sine": [221, 262, 279], "140106668681968": 221, "wallclock_axi": 221, "1638538131": 221, "1975703": 221, "2978473": 221, "3981225": 221, "498449": 221, "5987027": 221, "698947": 221, "7996597": 221, "899947": 221, "1638538132": 221, "0001943": 221, "1010473": 221, "0b10110": 221, "0x16": [221, 787], "0b1011": [221, 256], "bit_3": 221, "0b00001": 221, "0b1": [221, 238, 308], "0b1000": [221, 238], "0b11110": 221, "bitwis": [221, 382, 415, 923, 927, 1014], "num1": [221, 238], "0b110101101": 221, "num2": [221, 238], "0b101110100": 221, "0b100100100": 221, "0b111111101": 221, "0b1010": 221, "0b10100": [221, 238], "1fuzzi2fuzzi3fuzzi4": 221, "0b11011001": 221, "abcdef": [221, 228, 234, 238], "cde": 221, "lexic": [221, 442, 748], "indexerror": [221, 238, 241, 259, 298, 330, 994, 1047, 1116], "auer": 221, "aue": 221, "zerodivisionerror": [221, 234, 259, 994], "lst1": 221, "lst2": 221, "toc": 222, "treeset": 222, "searchabl": [222, 225], "diesel": 222, "vibrat": 222, "lighter": 222, "sensorrandom": 222, "sensorsin": 222, "sensorconst": 222, "wild": [222, 224, 229, 264], "yesterai": 222, "deseri": [222, 234], "decod": [222, 234, 241, 244, 280, 286, 297, 300, 302, 308, 1045, 1091], "swallow": [222, 828, 994], "walkthrough": [222, 224, 229, 1163], "1h": 222, "exchangeformat": 222, "test_mqtt_format": 222, "parser": [222, 234, 288, 304, 341, 669, 1047, 1150], "mosquitto_sub": [222, 1111], "writer": [222, 756, 841], "deserializeerror": 222, "dangl": [222, 385, 556, 570], "fahrenheit": [224, 353, 355, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 456, 657, 695, 747, 749, 750], "nonconst": [224, 568], "getchar": [224, 359, 361, 366, 375], "dry": 224, "verif": [224, 1100], "umlaut": [224, 225, 315, 1026, 1108], "\u00f6": [224, 244, 1108], "canari": 224, "asid": [224, 393, 394, 406, 668, 956], "brainfuck": 224, "nok": [224, 705, 950], "singli": [224, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "typedef": [224, 409, 412, 416, 425, 429, 434, 435, 655, 657, 695, 703, 719, 747, 749, 750, 817, 965], "commonplac": [224, 1153], "boundari": [224, 234, 280, 415, 729, 895], "neighborhood": 224, "signed": [224, 369, 418], "unsigned": 224, "excurs": [224, 459, 1094], "pointerarith": 224, "lower_bound": [224, 271, 310, 595, 600, 619, 623, 652, 750], "for_each": [224, 271, 600, 619, 623, 652, 703, 750], "diagram": [224, 459, 477, 479, 810, 894, 901, 903], "search_by_lastnam": [224, 648, 649, 650], "const_iter": [224, 550, 594, 597, 598, 599, 601, 616, 655, 670, 703, 704], "calloper": [224, 533], "exc": [224, 533], "ostream": [224, 533, 559, 719, 748, 1135], "paint": [224, 638, 652, 750], "reverse_copi": [224, 271, 533, 600, 619, 623, 652, 750], "cin": [224, 602, 620, 622, 638, 652, 750], "accumul": [224, 533], "raci": [224, 533], "wsl2": [224, 251, 253, 271, 273, 337], "libsqlite3": [224, 443], "libboost": 224, "libgtk": 224, "prosaic": 224, "roman": 224, "mad": [224, 417], "wxwidget": 224, "lieb": [225, 286, 302], "gr\u00fc\u00dfe": [225, 286, 302], "utf8": 225, "distil": [225, 285, 316, 992, 1064], "4j": 226, "unlimit": [226, 834, 1026], "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [226, 259, 276, 280, 298, 325], "0xdeadbeef": [226, 228, 234, 280, 286, 325, 514], "3735928559": [226, 228, 234, 238, 280, 286, 325], "0b10010011": 226, "ippi": 226, "0b0101": 226, "0101": 226, "teifl": 226, "fun1": 226, "fun2": 226, "ipykernel_165524": 226, "729327466": 226, "nsecond": [226, 1039], "rline": 226, "carriag": [226, 372, 1039], "neuer": 226, "ordner": 226, "euer": 226, "regex_str": [226, 244], "calim": 226, "yaaai": 226, "needl": [226, 1033, 1041], "haystack": [226, 1033, 1041], "finit": [226, 275, 387, 886], "haystack_s": 226, "0x7fe07c0cdf90": 226, "list_iter": [226, 244, 298, 308], "0x7fe07c0cd7f0": 226, "unicode_code_point": 226, "l_new": 226, "ijk": 226, "mengenlehr": 226, "s1": [226, 234, 238, 241, 244, 259, 266, 276, 286, 298, 308, 459, 476, 506, 565, 659, 665, 713, 734, 736, 738, 740, 1044], "s2": [226, 234, 238, 241, 244, 259, 266, 276, 286, 298, 308, 459, 476, 506, 565, 659, 665, 713, 734, 736, 738, 1044], "gunnar": 226, "liam": 226, "maximumum": 226, "variable2": 226, "maximum2": 226, "mrmr": 226, "einser": 226, "square_numb": [226, 1042], "squares_gener": 226, "other_d": [226, 259], "nove": 226, "isspac": [226, 228, 231, 234, 259, 280, 308, 1041], "buchhaltung": [226, 857, 879, 880], "startswith": [226, 234, 263, 264, 266, 280, 439, 1041, 1114], "buch": [226, 1145], "oooo": 226, "isupp": [226, 234, 244, 280, 1041], "zz": 226, "traurig": 226, "substr": [226, 228, 234, 244, 259, 266, 280, 298, 302, 308, 1135], "gid": [226, 234, 302, 748, 824, 825, 832, 834, 842, 914, 929, 1073], "count_byt": 226, "nbyte": 226, "2691": [226, 748, 853], "miscellanea": [227, 917], "brace": [227, 234, 280, 359, 382, 385, 397, 457, 550, 559, 591, 593, 598, 611, 612, 655, 695, 704, 747, 749, 750, 1023, 1026], "hour_of_dai": 227, "ein_str": 228, "ein_anderer_str": 228, "fghjgfgh": 228, "dfghgfgh": 228, "do_someth": [228, 247, 325, 388, 390, 398, 413, 427, 712, 1023], "komplett": 228, "returnwert": [228, 1145], "sinnloser": 228, "weis": [228, 1166], "vorgenommen": 228, "obacht": 228, "140672599989840": 228, "140672464974720": 228, "hoechst": [228, 266], "rechnern": 228, "100000": [228, 244, 668, 902, 1100], "": [228, 244], "exponenti": [228, 1026, 1040], "__annotations__": [228, 238, 259, 280, 294, 995], "__closure__": [228, 238, 259, 280], "__code__": [228, 238, 259, 280], "__delattr__": [228, 231, 234, 238, 256, 259, 280, 298], "__dir__": [228, 231, 238, 256, 259, 280, 298], "__format__": [228, 231, 234, 238, 256, 259, 280, 298], "__ge__": [228, 231, 234, 238, 256, 259, 280, 298, 1014], "__get__": [228, 238, 259, 280], "__getattribute__": [228, 231, 234, 238, 256, 259, 280, 298], "__globals__": [228, 238, 259, 280], "__gt__": [228, 231, 234, 238, 256, 259, 280, 298], "__hash__": [228, 231, 234, 238, 256, 259, 280, 298, 308], "__init_subclass__": [228, 231, 238, 256, 259, 280, 298], "__kwdefaults__": [228, 238, 259, 280], "__ne__": [228, 231, 234, 238, 256, 259, 280, 298, 1014], "__new__": [228, 231, 234, 238, 256, 259, 280, 298], "__qualname__": [228, 238, 259, 280], "__reduce__": [228, 231, 234, 238, 256, 259, 280, 298], "__reduce_ex__": [228, 231, 238, 256, 259, 280, 298], "__setattr__": [228, 231, 234, 238, 256, 259, 280, 298], "__sizeof__": [228, 231, 234, 238, 256, 259, 280, 298], "__subclasshook__": [228, 231, 238, 256, 259, 280, 298], "karteikart": 228, "my_formatted_person": 228, "123425041997": 228, "caros_str": 228, "joergs_str": 228, "0x7ff0dc48b490": 228, "next_po": 228, "tim": [228, 238, 321, 322], "ugli": [228, 238, 252, 261, 262, 275, 282, 283, 354, 359, 533, 750, 822, 827, 852, 853, 893, 992, 993], "flat": [228, 238, 406, 432, 433, 964, 965], "puriti": [228, 238], "silenc": [228, 238, 398, 840], "ambigu": [228, 238, 385, 420, 421, 422, 569, 669, 857], "refus": [228, 238, 247, 449, 770, 823, 894, 910, 969], "temptat": [228, 238], "dutch": [228, 238], "honk": [228, 238], "wahr": 228, "falsch": [228, 241, 1152], "kriegt": 228, "nachkommastellen": 228, "moeglichkeit": 228, "f_str": 228, "punkt_po": 228, "nachkomma_str": 228, "praezedenz": 228, "wandel": 228, "vorn": 228, "anhaengen": 228, "wuenschen": 228, "wuerd": 228, "appendleft": 228, "extendleft": 228, "relem": 228, "popleft": 228, "sorted_l": 228, "sorted_t": 228, "sorted_": 228, "subtext": 228, "ssissippi": 228, "140672464726576": 228, "copied_text": 228, "140672464784832": 228, "140672464784064": 228, "140672599989872": 228, "140672464751872": 228, "140672464768512": 228, "140672464594880": 228, "jkl": 228, "suesser": [228, 234, 241, 244, 247, 263], "sechser_gewuerfelt": 228, "n_tri": [228, 231, 266, 308, 1030], "versag": [228, 266], "eva": [228, 280, 1033], "xrang": [228, 1034], "0x7ff0dc48bed0": 228, "hann": 228, "gruess": 228, "gott": [228, 259, 348], "fill_in_us": 228, "scho": 228, "my_db": 228, "uniq_dict": 228, "konfigurierbaren": 228, "startwert": 228, "ausgibt": 228, "sqnum": 228, "0x7ff014b01820": 228, "xslx": 228, "yz": 228, "lret": 228, "ochwa": 228, "followup": [126, 229, 290, 293, 500, 1084], "unbalanc": 229, "geospati": 229, "gdal": 229, "sweigart": [229, 243, 285, 1095], "datenypen": 230, "libarari": 230, "chainmap": 230, "dequ": [230, 727], "suchalgorithmen": 230, "51139385": 231, "77397a312b47": 231, "50924272": [231, 234], "20210728": [231, 234, 1021], "eine_komplizierte_funkt": 231, "endeffekt": 231, "zusammenzuzaehlen": 231, "tarnt": 231, "vergeblich": 231, "komplexitaet": 231, "zahl_als_str": 231, "bledsinn": 231, "try_no": 231, "blahblahblah": 231, "cxyxyyyyxi": 231, "table_str": 231, "table_dict": 231, "139769175732912": 231, "139769175738624": 231, "satan_str": 231, "satan_int": 231, "result_of_print": 231, "result_of_evald_print": 231, "code_str": [231, 241], "compiled_cod": 231, "woswasi": [231, 238], "0x7f1e91eb42f0": 231, "philipp": [231, 238, 241, 259, 266, 280, 298, 308, 457, 532, 604, 616, 648, 650, 1084, 1086, 1090, 1092, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "lastnma": 231, "0x7f1e8c0fe2e0": 231, "__abs__": [231, 238, 256], "__and__": [231, 238, 298, 1014], "__bool__": [231, 238, 256], "__ceil__": [231, 238, 256], "__divmod__": [231, 238, 256], "__float__": [231, 238, 256, 280], "__floor__": [231, 238, 256], "__floordiv__": [231, 238, 256, 1014], "__getnewargs__": [231, 234, 238, 256, 280], "__index__": [231, 238], "__int__": [231, 238, 256, 280, 297], "__invert__": [231, 238], "__lshift__": [231, 238, 1014], "__mod__": [231, 234, 238, 256, 280, 1014], "__mul__": [231, 234, 238, 256, 280, 1014], "__neg__": [231, 238, 256], "__or__": [231, 238, 298, 1014], "__pos__": [231, 238, 256], "__pow__": [231, 238, 256, 1014], "__rand__": [231, 238, 298], "__rdivmod__": [231, 238, 256], "__rfloordiv__": [231, 238, 256], "__rlshift__": [231, 238], "__rmod__": [231, 234, 238, 256, 280], "__rmul__": [231, 234, 238, 256, 280], "__ror__": [231, 238, 298], "__round__": [231, 238, 256], "__rpow__": [231, 238, 256], "__rrshift__": [231, 238, 1014], "__rshift__": [231, 238, 1014], "__rsub__": [231, 238, 256, 298, 302, 1014], "__rtruediv__": [231, 238, 256], "__rxor__": [231, 238, 298], "__sub__": [231, 238, 256, 298, 302, 1014], "__truediv__": [231, 238, 256, 1014], "__trunc__": [231, 238, 256], "__xor__": [231, 238, 298, 1014], "as_integer_ratio": [231, 238, 256], "bit_length": [231, 238], "conjug": [231, 238, 256], "denomin": [231, 238], "from_byt": [231, 238], "to_byt": [231, 238], "0x7f1e8c0b3130": 231, "int_list": 231, "0x7f1e8c0fe340": 231, "0x7f1e8c0fe760": 231, "u1": 231, "u2": 231, "type_of_us": 231, "scrambl": 231, "hansj\u00f6rg": [231, 439], "gr\u00f6jsnah": 231, "class_str": 231, "1997": [231, 241, 1020, 1084, 1086, 1090, 1092], "0x7f1e8c1c2e50": 231, "joleckmi": 231, "cmdline": 232, "excess": [232, 388], "provocantli": 232, "pybai": [232, 301, 1095], "suchzeit": 233, "everywher": [233, 248, 418, 433, 449, 659, 809, 947, 1033], "d_as_str": 234, "received_d": 234, "1939": 234, "145415": 234, "bytes_or_buff": [234, 280], "expos": [234, 280, 547, 633, 828, 894, 902, 903, 937], "strict": [234, 254, 280, 298, 454, 468, 475, 489, 503, 555, 750, 1044, 1124], "__contains__": [234, 280, 298], "format_spec": [234, 259, 280], "getattr": [234, 238, 259, 280, 1008], "__getitem__": [234, 280, 1116, 1117], "__iter__": [234, 280, 298, 999], "__len__": [234, 280, 298], "casefold": [234, 280], "caseless": [234, 280], "fillchar": [234, 280], "pad": [234, 280, 1040], "occurr": [234, 280, 362], "codec": [234, 241, 244, 280, 286, 302, 308, 1108], "unicodeencodeerror": [234, 241, 244, 259, 280, 286, 302, 994, 1108], "xmlcharrefreplac": [234, 280], "register_error": [234, 280], "suffix": [234, 280], "expandtab": [234, 259, 280, 308], "tabsiz": [234, 280], "lowest": [234, 280, 382, 388, 957, 958, 1045], "format_map": [234, 280], "isalnum": [234, 280, 1041], "alphabet": [234, 280, 362, 417, 439, 841, 1108], "isascii": [234, 280], "007f": [234, 280], "isdecim": [234, 280], "iskeyword": [234, 244, 280], "isnumer": [234, 280], "isprint": [234, 280, 362, 390], "printabl": [234, 280, 362, 994], "istitl": [234, 280], "uncas": [234, 280], "pq": [234, 280], "ljust": [234, 280], "removeprefix": [234, 280], "removesuffix": [234, 280], "rindex": [234, 280, 1041], "rpartit": [234, 280], "discard": [234, 280, 298, 421, 567, 568, 705, 839, 840], "splitlin": [234, 280], "keepend": [234, 280], "swapcas": [234, 280], "titlecas": [234, 280], "lookuperror": [234, 259, 280, 994], "untouch": [234, 280, 797], "zfill": [234, 280], "maketran": [234, 280], "numerischen": 234, "ecma": 234, "3rd": [234, 756], "interchang": [234, 637, 719, 1108], "marshal": 234, "pickl": [234, 238], "simplejson": 234, "foo": [234, 266, 276, 280, 298, 302, 308, 527, 668, 701, 719, 731, 994, 1035], "baz": 234, "u1234": 234, "sort_kei": 234, "getvalu": 234, "compact": [234, 388], "mydict": 234, "obj": [234, 259, 302, 495, 765, 766, 775, 1008, 1016, 1116, 1117], "x08ar": 234, "as_complex": 234, "dct": 234, "__complex__": 234, "object_hook": 234, "2j": 234, "parse_float": 234, "encode_complex": 234, "serializ": 234, "1j": 234, "jsonencod": 234, "iterencod": 234, "scanner": 234, "jsondecodeerror": 234, "jsondecod": 234, "msg": [234, 247, 308, 373, 458, 462, 961, 963, 964, 968, 990, 993, 994], "unformat": 234, "lineno": [234, 241, 308], "colno": 234, "delattr": [234, 238, 259], "setattr": [234, 238, 259, 1008], "__setstate__": [234, 238], "with_traceback": [234, 238], "tb": [234, 238], "__traceback__": [234, 238], "__cause__": [234, 238], "__context__": [234, 238], "__suppress_context__": [234, 238], "parse_int": 234, "parse_const": 234, "object_pairs_hook": 234, "nan": [234, 266, 1100, 1112], "num_str": 234, "_w": 234, "0x7f99fff1bb70": 234, "raw_decod": 234, "extran": 234, "skipkei": 234, "ensure_ascii": 234, "check_circular": 234, "allow_nan": 234, "recogn": [234, 583, 903, 1151], "sensibl": 234, "circular": 234, "recursionerror": [234, 259, 994], "compliant": [234, 1007], "item_separ": 234, "key_separ": 234, "_one_shot": 234, "chunk": [234, 330, 418, 791, 929, 1097, 1108], "bigobject": 234, "mysocket": 234, "fp": 234, "inf": 234, "complianc": 234, "ippolito": 234, "redivi": 234, "140299267714496": 234, "140299267930496": 234, "schweissparameter_aussi": 234, "strom_ma": 234, "200004": 234, "spannung_v": 234, "aufs_kabel": 234, "maschine_112": 234, "kabel": [234, 238], "vom_kabel": 234, "schweissparameter_eini": 234, "strom_a": 234, "hal": 234, "2c445fb3": 234, "6ca4": 234, "b9d9": 234, "7cfbbff55326": 234, "doesnt_exist": 234, "_a666": 234, "140299402960464": 234, "0b10000000000000000000000000000000000000000000000000000000000000000": [234, 238, 259, 276], "140299327492352": 234, "func_fals": 234, "func_tru": 234, "sex_opt": 234, "140298898107648": 234, "t_mit_einem_el": 234, "supi": 234, "squares_map": 234, "squares_set": 234, "numtri": 234, "even_numb": [234, 298], "mississppi": 234, "xxxx": 234, "nbin": [234, 241, 266, 280, 302], "ndaemon": [234, 241, 266, 280, 302], "nadm": [234, 241, 266, 280, 302], "nlp": [234, 241, 266, 280, 302], "nsync": [234, 241, 266, 280, 302], "nshutdown": [234, 241, 266, 280, 302], "nhalt": [234, 241, 266, 280, 302], "nmail": [234, 241, 266, 280, 302], "noper": [234, 241, 266, 280, 302], "ngame": [234, 241, 266, 280, 302], "nftp": [234, 241, 266, 280, 302], "nnobodi": [234, 241, 266, 280, 302], "napach": [234, 241, 266, 280, 302], "nsystemd": [234, 241, 266, 280, 302], "ntss": [234, 241, 266, 280, 302], "ndbu": [234, 241, 266, 280, 302], "npolkitd": [234, 241, 266, 280, 302], "navahi": [234, 241, 266, 280, 302], "nunbound": [234, 241, 266, 280, 302], "ndnsmasq": [234, 241, 266, 280, 302], "nnm": [234, 241, 266, 280, 302], "nusbmuxd": [234, 241, 266, 280, 302], "ngluster": [234, 241, 266, 280, 302], "nrtkit": [234, 241, 266, 280, 302], "npipewir": [234, 241, 266, 280, 302], "ngeoclu": [234, 241, 266, 280, 302], "nchroni": [234, 241, 266, 280, 302], "nsaslauth": [234, 241, 266, 280, 302], "nradvd": [234, 241], "nrpc": [234, 241, 266, 280, 302], "nqemu": [234, 241, 266, 280, 302], "nopenvpn": [234, 241, 266, 280, 302], "ncolord": [234, 241, 266, 280, 302, 919], "nrpcuser": [234, 241, 266, 280, 302], "nabrt": [234, 241, 266, 280, 302], "nflatpak": [234, 241, 266, 280, 302], "ngdm": [234, 241, 266, 280, 302], "ngnome": [234, 241, 266, 280, 302], "nvboxadd": [234, 241, 266, 280, 302], "nsshd": [234, 241, 266, 280, 302], "ntcpdump": [234, 241, 266, 280, 302], "njfasch": [234, 241, 266, 280, 302], "nmosquitto": [234, 241, 266, 280, 302], "nsomeon": [234, 241], "1001": [234, 241, 244, 612, 613, 614, 615, 842, 854, 885, 914], "move_to_end": 234, "thermometera": 234, "thermometerb": 234, "get_average_temperatur": 234, "th_list": 234, "ipykernel_9164": 234, "859664274": 234, "2942790015": 234, "0x7fac83797be0": 234, "basisklass": 234, "level2_1": 234, "l21": 234, "level2_2": 234, "level3": 234, "jedi": 234, "blueey": 234, "droid": 234, "r2d2": 234, "derivednoctor": 234, "dnoctor": 234, "derivedctorcallingsup": 234, "derivedctorcallingbasector": 234, "__firstnam": 234, "__lastnam": 234, "_user__firstnam": 234, "_user__lastnam": 234, "lightsab": 234, "padawan": 234, "arithmeticerror": [234, 259, 994], "waaah": 234, "abgebrannt": 234, "puh": 234, "intakt": 234, "is_even": [234, 238, 308, 672, 673, 674, 675], "0x7fac81f52df0": 234, "0x7fac81cb5700": 234, "progamm": 234, "tumpfback": 234, "och": 234, "umpfback": 234, "rt": [234, 750, 774, 778, 788, 799, 801, 806, 809, 812, 815, 818, 893], "wholefil": 234, "notepad": 235, "betreiben": [235, 1152, 1159, 1160], "unterschiedlichen": 235, "sinnvol": 235, "umgebungen": 235, "unausweichlich": 235, "installationsverzeichni": 235, "verzeichniss": [235, 1154], "ausf\u00fchren": 235, "hernimmt": 235, "wei\u00df": 235, "rennt": 235, "ordereddict": 236, "__mro__": 236, "udemi": 236, "successor": [237, 382], "repeatedli": [237, 612, 1107], "kantenlaeng": 238, "ipykernel_101004": 238, "2437887948": 238, "0x10": [238, 241, 446], "0b1111111111111111111111111111111111111111111111111111111111111111": [238, 259, 276, 280, 308], "1267650600228229401496703205381": 238, "735611673": 238, "ndigit": [238, 259, 308, 361], "0b101": 238, "0b100": [238, 241], "register_statu": 238, "0b1001000": 238, "0b00001000": 238, "strom": [238, 308], "liegt_strom_an": 238, "0b00111110": 238, "ever": [238, 298, 437, 446, 477, 836, 902, 1025, 1148], "deadbeef": [238, 514, 896], "gross": 238, "doktor": 238, "jawui": 238, "akademik": 238, "ndef": [238, 308], "tdef": [238, 259], "geh": 238, "hochkomplex": 238, "verendet": 238, "euler": 238, "sche": 238, "dokumentiern": 238, "koennt": 238, "varianc": 238, "fmean": 238, "geometric_mean": 238, "harmonic_mean": 238, "harmon": 238, "median": 238, "median_low": 238, "median_high": 238, "median_group": 238, "50th": 238, "percentil": 238, "multimod": 238, "quantil": 238, "centr": 238, "nearest": [238, 480, 1102], "doctest": 238, "ellipsi": [238, 259], "8333333333": 238, "8333": 238, "spread": 238, "pvarianc": 238, "pstdev": 238, "stdev": [238, 957, 959], "38961843444": 238, "recalcul": 238, "statisticserror": 238, "normaldist": 238, "x1": 238, "unchang": [238, 656, 988], "jointli": 238, "rescal": 238, "cdf": 238, "cumul": [238, 431], "inv_cdf": 238, "coeffici": 238, "ovl": 238, "agreement": 238, "densiti": 238, "8035050657330205": 238, "dx": 238, "quartil": 238, "decil": 238, "zscore": 238, "score": 238, "from_sampl": 238, "readonli": 238, "dataset": [238, 1098, 1100, 1113, 1115, 1117, 1119], "subcontrari": 238, "reciproc": 238, "quantiti": [238, 270, 1102], "earn": 238, "5625": 238, "midpoint": 238, "estim": 238, "nomin": 238, "taught": [238, 1018, 1153], "aabbbbbbbbcc": 238, "aabbbbccddddeeffffgg": 238, "986893273527251": 238, "0th": 238, "100th": 238, "xbar": 238, "0810874155219827": 238, "3720238095238095": 238, "01875": 238, "gesamter_gruss": 238, "excelsheet": 238, "hinters": 238, "gabali": 238, "helen": 238, "fischer": 238, "sssklndkfgv": 238, "fosvh": 238, "worl": [238, 241, 1032], "lowr": 238, "dlrow": [238, 1032], "olleh": [238, 1032], "even_numbers_fun": 238, "even_numbers_gen": 238, "evennum": 238, "even_filt": 238, "tausend": 238, "1234250497": [238, 241, 244, 247, 457, 464, 616], "1234250597": 238, "users_json_str": 238, "liest": 238, "kontrah": 238, "verwandelt": 238, "gelesenes_ding_wieder_als_dict": 238, "schatz": 238, "erich": 238, "koxi": 238, "hatkeinenwert": 238, "fn": [238, 422, 439, 748, 1119], "ul": [238, 376], "ln": [238, 422], "1st": [239, 1137], "einschub": 239, "filterketten": 239, "datensatz": 239, "letzten": 239, "recapitul": 240, "naeherungsverfahren": 241, "addieren": 241, "140606563548752": 241, "wirklich": [241, 1143], "0o10": 241, "teilbar": 241, "00001": 241, "abd": [241, 582], "i1": [241, 276], "140606428182128": 241, "140606428182896": 241, "2345010101": 241, "elizabeth": [241, 1084, 1086, 1090, 1092, 1103], "1901": 241, "evi": 241, "maxim": [241, 437, 903], "wuerfeln": 241, "freuen": 241, "sechser": 241, "faellt": 241, "jammern": 241, "versuch_numm": 241, "versuchen": 241, "jammert": 241, "hlo": [241, 1032], "output_list": [241, 1077], "nullt": 241, "34567654567": 241, "gsd": 241, "another_t": 241, "symmetisch": 241, "netzwerkkommunik": 241, "request_to_send": 241, "request_str_to_send": 241, "1651046407": 241, "3633313": 241, "cabl": [241, 828], "request_str_from_c": 241, "request_from_c": 241, "1651046335": 241, "8477345": 241, "139909434561408": 241, "139909544402512": 241, "139909544402544": 241, "139909543772528": 241, "139909433666288": 241, "roo": [241, 280, 888], "xf6": [241, 244, 286, 1026, 1108], "joerg_latin": 241, "xf6rg": [241, 244, 286, 298, 302, 1108], "j\u0456rg": [241, 244, 286, 302, 1108], "cyclic": 243, "140616191009600": 244, "140616191012720": 244, "140116274372176": 244, "0x7f6f5cc2de50": 244, "0x7f6f5cc2df30": 244, "18446744073709551617": 244, "multi_dict": 244, "ipykernel_189565": 244, "1743780635": 244, "140115753096128": 244, "ntri": 244, "bytes_joerg": 244, "bytes_joerg_iso_latin_1": 244, "bytes_joerg_utf_32": 244, "xff": [244, 286, 302], "xfe": [244, 286, 302], "x00": [244, 286, 302, 901], "x00j": [244, 286], "x00r": [244, 286], "x00g": [244, 286], "bytes_joerg_utf_16": 244, "xfej": 244, "bytes_joerg_utf_8": 244, "xc3": [244, 280, 286, 302, 1026, 1108], "xb6rg": [244, 280, 286, 302, 1108], "iso_latin_1": 244, "russian": 244, "bytes_received_by_russian": 244, "2435": 244, "010d": 244, "0000000666": 244, "ssi": 244, "garbag": [244, 432, 439, 455, 714, 726, 903, 930, 992], "ipykernel_4000": 244, "3227798639": 244, "ahja": 244, "24000": 244, "24500": 244, "25000": 244, "25500": 244, "26000": 244, "26500": 244, "__del__": 244, "whe": 244, "13397": 244, "116985": 244, "120725": 244, "118110": 244, "0x7fe3a392aa30": 244, "test_person_bas": 246, "pluggi": [246, 264, 1083, 1128], "rootdir": [246, 264, 797, 1083, 1128], "test_persondb_bas": 246, "test_pytest_demo": 246, "xfail": [246, 1128], "test_persondb": 246, "test_duplicate_svnr": 246, "test_update_sunnycas": 246, "test_update_notexist": 246, "test_update_exact_dupl": 246, "former": [246, 1035], "persondb": 246, "sqlite": [246, 443, 1051, 1104], "ics_demand": 246, "maco": [246, 330, 335], "woe": 246, "homebrew": 246, "brew": 246, "flaviocop": 246, "str_mit_666": 247, "140240419976192": 247, "140240419593568": 247, "aclass": 247, "almostempti": 247, "beenther": 247, "kuckucksei": 247, "chirp": 247, "some_bullshit": 247, "bad_thing_happen": 247, "do_some_bullshit": 247, "boah": [247, 308], "python_cod": 247, "a_global_vari": 247, "globale_vari": 247, "140240513015376": 247, "140240513014256": 247, "140240419270768": 247, "140240419271792": 247, "storesanintegerandmodifiesit": 247, "the_int": 247, "my_int": 247, "saiami": 247, "storesalistandmodifiesit": 247, "the_list": 247, "append_someth": 247, "salami": 247, "compute_squar": 247, "satanicerror": 247, "jess": 247, "invalidsvnr": 247, "rex_lin": 247, "json_str": [247, 1091], "python_l": 247, "0x7f8c0551f490": 247, "behandlung": 249, "kurzer": 249, "reicht": [249, 1143], "unwichtig": 249, "weggelassen": 249, "\u00fc": [249, 1108], "jeden": 249, "teilnehmer\u00fcbung": 249, "kernsprach": 249, "rvalu": [249, 271, 311, 558, 663, 695, 705, 711, 714, 715, 716, 717, 720, 728, 747, 749, 750, 1147, 1148, 1149], "constexpr": [249, 250, 251, 271, 273, 311, 695, 705, 729, 748, 749, 750, 1148], "uniform": [249, 250, 251, 253, 310, 437, 457, 559, 591, 611, 612, 655, 695, 704, 747, 749, 750, 1007, 1148], "initialisierung": [249, 1164], "infer": 249, "speichermodel": 249, "atomar": [249, 1146, 1164], "standardbibliothek": 249, "regu\u00e4r": 249, "trait": 249, "zufallszahlen": 249, "zeitbibliothek": 249, "sprachsyntax": 249, "deduct": [249, 670, 672], "erweiterungen": 249, "ge\u00e4ndert": 249, "definitionen": 249, "bibliothek": 249, "zusatzvari": 249, "constinit": 249, "modularisierung": [249, 331, 1145], "versionierung": 249, "routinen": 249, "synchronisierung": 249, "werkzeug": [249, 1145, 1152, 1154, 1159, 1162], "kalend": [249, 1142], "zeitzonen": 249, "zus\u00e4tz": 249, "chrono": [249, 250, 251, 253, 262, 310, 462, 655, 716, 727, 728, 732, 749, 750], "initializer_list": [250, 251, 253, 310, 311, 458, 459, 486, 487, 655, 657, 695, 749, 750], "handwrit": [250, 251, 253, 310, 695, 711, 749, 750], "weak_ptr": [250, 251, 253, 310, 311, 711, 747, 749, 750], "boilerpl": [250, 251, 253, 289, 305, 310, 311, 444, 695, 696, 697, 715, 749, 750, 973, 1144], "condition_vari": [250, 251, 253, 262, 310, 728, 749, 750, 1148], "emplace_back": [250, 251, 591], "cref": [250, 251], "interoper": [251, 253, 271, 273], "wazoo": [251, 253, 271, 273], "anviron": [251, 253], "submodul": [251, 253, 512, 575], "chdir": [251, 253], "gtest_main": [251, 462, 511, 513, 514, 534, 537, 549, 575, 713, 714, 1134, 1139], "dummy_suit": 251, "sticki": [252, 261, 262, 282, 283, 330, 335, 750, 827, 852, 893], "insod": 253, "lvalu": [253, 310, 311, 663, 664, 667, 695, 705, 711, 715, 720, 728, 747, 749, 750], "afterword": [253, 310, 311, 664, 695, 749, 750], "ain": [253, 437, 1022], "singleton": [254, 454, 455, 461, 475, 489, 503, 555, 750, 1151], "inflex": [254, 357, 454, 468, 475, 481, 482, 489, 503, 555, 750], "proxi": [254, 272, 274, 275, 296, 300, 336, 454, 461, 463, 464, 475, 489, 503, 555, 750, 1123, 1151], "serverthread": [254, 479, 493], "my_si": [256, 1002], "function_returns_two_valu": 256, "140134238766608": 256, "sizeof": [256, 361, 371, 382, 403, 410, 411, 415, 418, 538, 550, 562, 590, 656, 718, 897, 915, 919, 920, 921, 927, 928, 929, 930, 955, 961, 964, 968, 1034], "__getformat__": 256, "__setformat__": 256, "fromhex": 256, "0b0010": 256, "0b1001": 256, "key_list": 256, "key_tupl": 256, "evil_list": 256, "evil_list_2": 256, "neinem": 256, "nviel": 256, "doze_path": [256, 259], "compiled_regex": 256, "l_json": 256, "l_json_sent": 256, "received_data": 256, "0x7f73869f06c0": 256, "create_avg_item": 256, "ninetynin": 256, "koppel": 258, "netzwerk": [258, 331, 1152, 1162, 1165], "condens": [258, 438], "nprint": 259, "noption": 259, "nfile": 259, "nsep": 259, "nend": 259, "nflush": 259, "forcibli": 259, "didact": [259, 348, 351, 574, 576, 577, 1151], "fullnam": [259, 266, 1011, 1015], "nerst": 259, "nzweit": [259, 325], "andere_list": 259, "neue_list": 259, "140323934455312": 259, "140323934455344": 259, "140323934455376": 259, "140323852147712": 259, "140323933649904": 259, "140323833601584": 259, "frozenset": [259, 276, 297], "__builtins__": [259, 280, 995], "gr\u00fc\u00df": 259, "nocheinprogramm": 259, "ocheinprogramm": 259, "dfghgfdfghj": 259, "jhghgh": 259, "matchstr": 259, "compiled_match": 259, "tprint": 259, "num_ss": 259, "isi": [259, 516, 532, 1112], "strippeditem": 259, "yet_another_d": 259, "s3": [259, 266, 476], "s4": 259, "isdisjoint": [259, 266, 298, 1044], "nnoteworthi": 259, "nil": 259, "__package__": [259, 323, 995], "__loader__": [259, 323, 995], "__spec__": [259, 323, 995], "modulespec": 259, "loader": [259, 427, 445, 450, 971, 988, 1162], "__build_class__": 259, "__import__": 259, "dont_inherit": 259, "_feature_vers": 259, "divmod": 259, "raw_input": 259, "ipkernel": 259, "ipythonkernel": 259, "0x7f9fb16abcd0": 259, "class_or_tupl": 259, "aiter": 259, "async_iter": 259, "anext": 259, "oct": [259, 879, 901, 903], "pow": [259, 567, 568, 718], "exp": [259, 491], "notimpl": [259, 298, 302, 1014], "memoryview": 259, "__debug__": 259, "stopasynciter": [259, 994], "generatorexit": [259, 994], "keyboardinterrupt": [259, 275, 994], "importerror": [259, 994], "environmenterror": [259, 1123], "ioerror": [259, 1129], "eoferror": [259, 994], "notimplementederror": [259, 994], "unboundlocalerror": [259, 994], "indentationerror": [259, 994], "taberror": [259, 994], "unicodeerror": [259, 994], "unicodedecodeerror": [259, 302, 308, 994], "unicodetranslateerror": [259, 994], "floatingpointerror": [259, 994], "overflowerror": [259, 994], "systemerror": [259, 994], "referenceerror": [259, 994], "memoryerror": [259, 994], "buffererror": [259, 994], "userwarn": [259, 994], "encodingwarn": [259, 994], "deprecationwarn": [259, 994], "pendingdeprecationwarn": [259, 994], "syntaxwarn": [259, 994], "runtimewarn": [259, 994], "futurewarn": [259, 994, 1112], "importwarn": [259, 994], "unicodewarn": [259, 994], "byteswarn": [259, 994], "resourcewarn": [259, 994], "connectionerror": [259, 994], "blockingioerror": [259, 994], "brokenpipeerror": [259, 994], "childprocesserror": [259, 994], "connectionabortederror": [259, 994], "connectionrefusederror": [259, 994], "connectionreseterror": [259, 994], "fileexistserror": [259, 994], "isadirectoryerror": [259, 994], "notadirectoryerror": [259, 994], "interruptederror": [259, 994], "processlookuperror": [259, 994], "timeouterror": [259, 994], "closefd": 259, "beopen": 259, "1995": [259, 465, 1084, 1086, 1090, 1092], "nation": [259, 901], "1991": [259, 1020], "sticht": 259, "centrum": 259, "amsterdam": [259, 1020], "credit": [259, 768, 1021], "cwi": 259, "cnri": 259, "zope": 259, "cast": [259, 382, 538, 626, 633, 756], "execfil": 259, "_pydev_imp": 259, "_pydev_execfil": 259, "glob": [259, 414, 885, 942, 990, 1005, 1135], "runfil": 259, "_pydev_bundl": 259, "pydev_umd": 259, "wdir": 259, "__ipython__": 259, "exclud": [259, 433, 560], "transient": 259, "display_id": 259, "get_ipython": 259, "interactiveshel": 259, "zmqshell": 259, "zmqinteractiveshel": 259, "0x7f9fb1516200": 259, "config_fil": 259, "srcdir": 259, "dstdir": 259, "dst": [259, 377, 427, 516, 557, 576, 585, 586, 592, 1045], "untrust": 262, "lan": 262, "programmat": [262, 483, 894, 902, 950, 970, 1120], "stty": 262, "termio": 262, "ioctl_tti": 262, "setseri": 262, "tty": [262, 828, 883, 955, 961, 985], "tty_io": 262, "bidirection": 262, "nake": 262, "tiocgseri": 262, "tiocsseri": 262, "async_low_lat": 262, "cfmakeraw": 262, "ttyusb0": [262, 828], "low_lat": 262, "serial_struct": 262, "bidir": 262, "advantec": 262, "nonetheless": [262, 265, 268, 297, 672, 1135], "mycat": 262, "mimick": [262, 713], "make_realtim": 262, "interfaceri": 262, "cif": 262, "samba": 262, "automationadmin": 262, "gsc": 262, "pd": [263, 264, 266, 270, 298, 439, 1098, 1100, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "read_csv": [263, 264, 270, 298, 302, 308, 439, 1098, 1100], "txn": 263, "iso8859": 263, "time_book": [263, 264, 439], "time_valuta": [263, 264, 439], "at66666666666666": 263, "bezahlung": [263, 264, 266, 439], "kart": [263, 264, 266, 439], "eur": [263, 264, 439], "95111243": [263, 439], "abbuchung": [263, 439], "onlinebank": [263, 439], "gutschrift": 263, "000000144919": 263, "339099446722187": 263, "000": [263, 298, 302, 308, 439, 856, 894], "card_pay": 263, "filt": 263, "9325008697": 263, "339099446790254": 263, "og": [263, 427], "237811001182": 263, "auszahlung": 263, "200075787001": 263, "tzb": 263, "anl": 263, "347159strom": 263, "200004871820": 263, "200004876265": 263, "200004848862": 263, "200004871863": 263, "dauerauftrag": 263, "qsnng6xau": 263, "00121672661": 263, "120016487112": [263, 439], "bx": 263, "000009219": 263, "entgelt": 263, "nichtdurchf\u00fchrung": 263, "032300005522384": 263, "saldo": 263, "messtechnik": 263, "602674240071": 263, "0004325259000023": 263, "oeamtc": 263, "mitgliedschaft": 263, "re_liv": 263, "billa": [263, 266, 439], "rew": 263, "dankt": [263, 264, 266, 439], "pipe_stag": 264, "max_colwidth": 264, "max_column": 264, "max_row": 264, "039": 264, "consolut": 264, "insuffici": [264, 669], "categor": [264, 438, 1102], "fuction": 264, "filt_uncat": 264, "uncat_row": 264, "unspecif": [264, 341, 775], "useless": [264, 663, 721, 841, 888, 944, 1016], "food": [264, 270], "luxuri": 264, "categorize_card_pay": 264, "jet": 264, "uncertainti": 264, "categorize_v1": 264, "categorize_v2": 264, "secondari": 264, "test_categori": [264, 439], "test_bas": [264, 1083], "000009258": 264, "k002": [264, 439], "impos": [265, 268], "hurt": [265, 268, 376], "strength": [265, 268, 403, 1018], "overengin": [265, 268, 376, 437, 438, 1143, 1151], "140480285361680": 266, "0xffffffffffffffff": [266, 286, 302], "0x10000000000000000": [266, 286, 302], "140479638276224": 266, "140480203220736": 266, "140480210406176": 266, "7940943354778932823": 266, "0x7fc4189e7c90": 266, "28800": 266, "237988": 266, "produce_dai": 266, "374557": 266, "l_mal_2": 266, "140480285361712": 266, "140479638477760": 266, "140479638427520": 266, "l4": 266, "l5": 266, "140480202528192": 266, "140479638428736": 266, "140480203212992": 266, "l6": 266, "140479598069936": 266, "is_old": 266, "ipykernel_370861": 266, "4290492544": 266, "abc123": 266, "0x7fc4189e5030": 266, "yyi": [266, 308], "lichtenberg": [266, 457, 616, 648, 650, 1084, 1086, 1090, 1092, 1112, 1113, 1114, 1116, 1117, 1118, 1119], "persons2": [266, 1112, 1113], "set_index": [266, 1117], "sort_valu": 266, "inplac": [266, 270, 910, 1113], "flt": [266, 1114], "isin": [266, 1114], "reset_index": 266, "dropna": 266, "value_count": [266, 270], "int64": [266, 270, 1119], "conversiosn": 267, "9am": 268, "woven": [268, 272], "pipelin": [268, 348, 822, 837, 840, 841, 890, 904, 983], "accountid": 270, "accountdescript": 270, "accountparentid": 270, "storeid": 270, "storedescript": 270, "locationid": 270, "locationdescript": 270, "productid": 270, "productdescript": 270, "sales_managerid": 270, "dateyear": 270, "datequart": 270, "datemonth": 270, "datedai": 270, "categoryvers": 270, "categorycategori": 270, "categorytyp": 270, "valueunit": 270, "original_sales_pric": 270, "sale": 270, "st43": 270, "franchescini": 270, "ct14": 270, "salem": 270, "pd23": 270, "ipa": 270, "sm1": 270, "20144": 270, "201412": 270, "1779": 270, "763910": 270, "usd": 270, "st35": 270, "pd2": 270, "pepsi": 270, "sm4": 270, "201410": 270, "957113": 270, "st98": 270, "walter": 270, "pd24": 270, "amber": 270, "20142": 270, "201406": 270, "449395": 270, "st188": 270, "arrowhead": 270, "ct1": 270, "pd19": 270, "sm8": 270, "20164": 270, "201611": 270, "078689": 270, "st107": 270, "spire": 270, "ct5": 270, "san": 270, "jose": 270, "pd15": 270, "juic": 270, "sm5": 270, "20154": 270, "201512": 270, "303679": 270, "quantity_sold": 270, "sold": 270, "st4": 270, "gstore": 270, "ct13": 270, "portland": 270, "pd26": 270, "wine": 270, "000000": [270, 1100], "1069": 270, "st49": 270, "bai": 270, "depot": 270, "ct4": 270, "sacramento": 270, "pd27": 270, "20151": 270, "201501": 270, "592904": 270, "discount": 270, "st36": 270, "pricelow": 270, "arena": [270, 733], "ct10": 270, "reno": 270, "pd22": 270, "sm3": 270, "20162": 270, "201605": 270, "4351": 270, "045830": 270, "1071": 270, "st7": 270, "street": [270, 863], "pd16": 270, "7905": 270, "590606": 270, "pd12": 270, "lemonad": 270, "20153": 270, "201507": 270, "1073": 270, "modified_model": 270, "sales_managerdescript": 270, "janet": 270, "buri": 270, "nanci": 270, "miller": 270, "setp": 270, "nan_field": 270, "bitfield": 270, "bitfi": 270, "nan_column": 270, "gabriel": [270, 701], "walton": 270, "carl": 270, "jjjjj": 270, "ref_t": 270, "datetime64": 270, "damn": 270, "ref_2015_12_04": 270, "flt_before_2015_12_04": 270, "rows_before_2015_12_04": 270, "st119": 270, "ct2": 270, "francisco": 270, "pd11": 270, "orang": [270, 1037], "pulp": 270, "sm7": 270, "kiran": 270, "raj": 270, "201503": 270, "226847": 270, "13627": 270, "793342": 270, "3427": 270, "896898": 270, "15569": 270, "353983": 270, "float64": [270, 302, 308, 1100], "1957": 270, "740301": 270, "572676": 270, "686587": 270, "289381": 270, "flt_product_pd2": 270, "flt_2015": 270, "flt_only_sold": 270, "flt_combin": 270, "st139": 270, "farlo": 270, "ct15": 270, "eugen": 270, "sm11": 270, "jame": 270, "frank": 270, "201511": 270, "st178": 270, "rai": 270, "ct8": 270, "beverli": 270, "hill": 270, "201508": 270, "facet": [271, 273, 611], "rich": [271, 273, 1113, 1122], "toolset": [271, 273, 629], "conceptu": [271, 273, 428, 768, 775, 913], "undergon": [271, 273], "revolut": [271, 273], "odr": [271, 701], "explor": [271, 902], "rodata": [271, 988], "unspecifi": [271, 382, 469, 541, 968, 969], "bookkeep": [272, 438], "fewer": 272, "love": [272, 1090], "closer": 272, "augment": [272, 797, 1109], "test_blah": 272, "monkeypatch": [272, 274, 275, 290, 296, 297, 300], "contextlib": 272, "chatgpt": 273, "ludwig": 273, "registri": [273, 522], "memleak": 273, "jason": [274, 275, 296], "brownle": [274, 275, 296], "contriv": [274, 275, 296, 460, 995, 1030], "subthread": [274, 275], "introductori": [274, 275, 296, 301, 750, 893, 934, 1101, 1102, 1148], "mindset": [274, 275, 296, 300, 797], "develp": 274, "10am": 275, "reopen": 275, "drei_millionen_int": 276, "3_000_000": 276, "odd_numb": [276, 999], "odd_numbers_func": 276, "ret_num": 276, "0x7f32ccc4c610": 276, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [276, 325], "139855258515840": 276, "139856078033344": 276, "139856078226432": 276, "139856160540176": 276, "i3": 276, "i4": 276, "nope": [276, 950], "0101010101010": 276, "bash_logout": [276, 879], "bash_profil": [276, 879], "thunderbird": [276, 859, 879], "gnupg": [276, 879], "hst": 276, "gitconfig": [276, 879], "pki": [276, 879], "daham": 276, "20230403": 276, "222915": 276, "bash_histori": [276, 879], "python_histori": [276, 879], "lesshst": [276, 879], "139855258795072": 276, "139855260513728": 276, "139856085569920": 276, "doppelt": 276, "gemoppelt": 276, "trag": 276, "exakt": 276, "paarweis": 276, "read_lines_of_fil": 276, "0x7f32c7d8d390": 276, "nohead": [279, 1089, 1090, 1092], "userdb_csv": [279, 1090, 1091, 1092], "interleav": 279, "dosometh": 280, "0x7fe7fbf80df0": 280, "140634424624656": 280, "140634424623536": 280, "0o644": 280, "0b01110101": 280, "setting_blah": 280, "setting_foo": 280, "config_context": 280, "140634341074320": 280, "140634424624688": 280, "140634341076688": 280, "140634341077776": 280, "140634343012864": 280, "140634341099856": 280, "ipykernel_61373": 280, "1125713270": 280, "1234567876543234567654321234565432123456": 280, "140634281233520": 280, "140634341798400": 280, "140634341995008": 280, "140634341576640": 280, "140634341773312": 280, "140634281802304": 280, "global_vari": 280, "bar2": 280, "bar3": 280, "bar4": 280, "bar5": 280, "bar6": 280, "0x7fe7f869b7d0": 280, "0x7fe7f869b920": 280, "0x7fe7f869bbc0": 280, "punctuat": 280, "abcabcabcabcabc": [280, 308], "rex": 280, "cba": [280, 620], "another_d": 280, "rb": 280, "30000": 280, "coreutil": 283, "autopoint": 283, "rpm": [283, 450], "fcntl": [283, 901, 919, 923, 927, 928, 929, 930, 935, 938, 961, 964, 968], "luciano": [285, 331, 332, 1095], "ramalho": [285, 331, 332, 1095], "140640823526928": 286, "0x7fe97e53c610": 286, "140640823526960": 286, "140640741310912": 286, "140640741034048": 286, "140640741341184": 286, "wasjetzt": 286, "140640722624768": 286, "140640722715136": 286, "l1_copi": 286, "my_funky_gener": 286, "meine_dumme_sequenz": 286, "0x7fe9785083a0": 286, "0x7fe98c21bce0": 286, "greeter": [286, 441, 442, 443, 447, 448, 987], "0x7fe9796976d0": 286, "140640740502720": 286, "140640722823952": 286, "140640741119552": 286, "l_copi": 286, "140640741312256": 286, "140640722734080": 286, "140640722760768": 286, "140640722739712": 286, "140640741402496": 286, "owher": 286, "0000042": [286, 1040], "bled": 286, "xfc": [286, 302, 1026, 1108], "xdfe": [286, 302, 1108], "gr\u045c\u043fe": [286, 302, 1108], "\u795d\u597d": [286, 302], "big5": [286, 302, 1108], "xaf": [286, 302], "xac": [286, 302], "xa6n": [286, 302], "unterschrift": 286, "illeg": [286, 419, 1108], "multibyt": [286, 365, 1108], "xe7": [286, 302, 1108], "xa5": [286, 302, 1108], "x9d": [286, 302, 1108], "xe5": [286, 302, 1108], "xbd": [286, 302, 1108], "incorpor": [288, 304, 1150], "tradition": [288, 304, 705, 896, 1017, 1150], "lexer": [288, 304, 1150], "aris": [288, 304, 468, 1150], "compili": [288, 304, 1150], "rant": [289, 305, 444, 750, 1118], "blacklist": [289, 305, 443, 444, 449, 452, 750], "acquaint": [290, 293], "data_to_send": 291, "data_receiv": 291, "user_receiv": [291, 1091], "140048588115008": 291, "140048588341376": 291, "d_str": [294, 635], "uebertragen": 294, "d_str_receiv": 294, "d_receiv": 294, "ala": [297, 300, 482, 573, 853, 919, 959, 1123], "frozendict": [297, 298], "filesensor": 297, "sergei": 297, "test_acquisition_loop": 297, "test_mock_csv_sink": 297, "mymockedth": 297, "nonloc": [297, 1036], "millcelsiu": 297, "acquisition_loop_util": 297, "ont": 297, "necessarili": [297, 403, 433, 590, 748, 783, 797, 834, 914, 1012, 1130, 1137], "10m": [297, 959], "acquir": [297, 339, 729, 802, 944, 949, 958], "slower": [297, 427, 834], "packet": [297, 479, 791, 897, 920, 953], "transmit": 297, "datatim": 297, "read_measur": 297, "fourier": 297, "fft": 297, "011": [297, 308], "ifft": 297, "print_": 298, "0x7f0b165fdf00": 298, "dos_path": [298, 325], "vernuenftigen": 298, "__class_getitem__": 298, "__iand__": 298, "__ior__": 298, "__isub__": 298, "__ixor__": 298, "difference_upd": 298, "intersection_upd": 298, "issubset": 298, "issuperset": 298, "symmetric_differ": 298, "symmetric_difference_upd": 298, "hallohallohallohallohallo": 298, "139685905188368": 298, "139685905188400": 298, "0x7f0b14487be0": 298, "fasschingbau": 298, "139685602274352": 298, "139685561461616": 298, "139685561690240": 298, "139685561316032": 298, "139685595970464": 298, "139685561151488": 298, "30000000": 298, "my_iter": 298, "my_print": [298, 1017], "my_arg": [298, 992], "even_squar": [298, 308], "squares_fun": 298, "squares_gen": 298, "0x7f0aefb94f20": 298, "0x7f0aefb955b0": 298, "squares_list": 298, "foobar": 298, "expr_str": 298, "expr": [298, 388, 398, 857], "skiprow": 298, "hz2": 298, "hz3_5": 298, "000566": 298, "000729": 298, "132363": 298, "229977": 298, "260597": 298, "444942": 298, "385433": 298, "638212": 298, "502710": 298, "796519": 298, "936250": 298, "972326": 298, "974442": 298, "999992": 298, "995683": 298, "973719": 298, "999245": 298, "895850": 298, "985202": 298, "768778": 298, "arang": 298, "001": [298, 308, 379], "002": 298, "003": 298, "004": 298, "0x7f0ad44b8f70": 298, "0x7f0ad23371f0": 298, "aaarghhh": 299, "expresss": 299, "realist": [300, 913], "postpon": [300, 817], "coverag": [301, 1001], "hackin": 301, "mocksink": 301, "139680347735568": 302, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 302, "0xabc": 302, "convert_to_int": 302, "konvertieren": 302, "drei_int": 302, "fooabc": 302, "userlin": 302, "tjr": 302, "\u00f6rg": 302, "0xc3": [302, 308], "enc_": 302, "enc_s_recvd": 302, "ipykernel_81650": 302, "1521975281": 302, "lg_joerg": 302, "concat": [302, 439, 1112], "linksunten": 302, "rechtsoben": 302, "meinsinussensor": 302, "sinvalu": 302, "ndarrai": [302, 1101, 1117], "0x7f67142f53c0": 302, "timeit": 307, "0x64": 308, "0b1100100": 308, "0b100101100": 308, "0b0": 308, "type_of_i": 308, "schade": 308, "worldhello": 308, "140572055569936": 308, "500001": 308, "499999999999999999999999": 308, "4999": 308, "my_round": 308, "diff_to_next": 308, "5001": 308, "500000001": 308, "str_i": 308, "int_i": 308, "float_i": 308, "nocheinelist": 308, "140571746172800": 308, "140571753417312": 308, "my_": 308, "2282548071841868421": 308, "oioi": 308, "ueberbleibsel": 308, "my_sum": 308, "doom": 308, "0x7f48e8543060": 308, "doedel": 308, "sdhcbdhcb": 308, "kjsdskbh": 308, "akjsdhvksb": 308, "item2": [308, 745, 746], "line_r": 308, "tyyi": 308, "mp_left": 308, "mp_top": 308, "mp_right": 308, "mp_righ": 308, "brenner": 308, "kupfer": 308, "koax": 308, "oberflaech": 308, "gasdues": 308, "fsc": 308, "zellentemp": 308, "raumtemp": 308, "vdc": 308, "077": 308, "090": [308, 655], "76220": 308, "77849": 308, "086": 308, "81216": 308, "99354": 308, "92051": 308, "035": [308, 967, 968], "82874": 308, "075": 308, "006": 308, "78855": 308, "098": 308, "036": 308, "007": 308, "76466": 308, "091": 308, "64736": 308, "65062": 308, "transform_t": 308, "transformed_timestamp": 308, "646126e": 308, "646130e": 308, "mpleft_1": 308, "mpleft_2": 308, "0x7f48ab74abf0": 308, "0x7f48a96648b0": 308, "noch_eine_vari": 308, "even_pr": 308, "0x7f48a9505b40": 308, "0x7f48a95250e0": 308, "squaredict": 308, "squaresset": 308, "bloat": [310, 311, 415, 734, 743, 749, 750, 1014], "ugh": 310, "urgh": 310, "nodiscard": 310, "fallthrough": [310, 968], "noexcept": [310, 458, 492, 663, 666, 668, 683, 685, 686, 688, 689, 690, 691, 705, 715, 729], "string_view": 310, "hierachi": 311, "erasur": [311, 734, 743, 749, 750], "align": [311, 348, 416, 425, 429, 434, 435, 657, 695, 733, 747, 749, 750, 895, 897, 964, 1040, 1146, 1149], "commmandlin": 315, "omg": [315, 397, 756, 1129], "checker": [316, 321, 330], "horribl": 316, "gpio25": [316, 898], "embarass": 316, "winscp": 316, "cluster_ece19": [316, 317, 318, 319, 320, 321, 330, 750], "ece19": [316, 317, 318, 319, 321, 329, 330, 336, 337, 341, 750], "ece19_file_read": [316, 317, 318, 319, 320, 321, 330, 750], "ece19_blinklicht": [316, 317, 318, 319, 320, 330, 750], "ece19_blinklicht_oo": [317, 318, 319, 320, 330, 750], "ece19_blinklicht_abc": [319, 320, 330, 750], "ece19_blinklicht_unittest": [319, 320, 330, 750], "blinklicht": [320, 330, 335, 750], "1910420003": [321, 322], "corinna": [321, 322], "baumgartn": [321, 322, 339], "1910420002": [321, 322], "anzhelika": [321, 322, 330], "chernykh": [321, 322, 330, 339], "1910420005": [321, 322], "simon": [321, 322], "1910420006": [321, 322], "matthia": [321, 322, 339], "kappel": [321, 322, 339], "1810420009": [321, 322], "kolter": [321, 322], "1920420033": [321, 322], "kornberg": [321, 322, 339, 342], "1910420007": [321, 322], "lui": [321, 322, 339], "kraker": [321, 322, 339, 342], "1810420010": [321, 322], "leonid": [321, 322], "kudriaschov": [321, 322], "1910420008": [321, 322], "michael": [321, 322, 331, 332], "1910420010": [321, 322], "sonja": [321, 322, 339], "luka": [321, 322, 339, 342], "1910420013": [321, 322], "behnaz": [321, 322], "mehrabadi": [321, 322, 339], "1910420014": [321, 322], "moser": [321, 322, 339], "1910420015": [321, 322], "moritz": [321, 322], "nagelschmi": [321, 322, 339], "1910420018": [321, 322], "bianca": [321, 322], "reimer": [321, 322], "1910420020": [321, 322], "schmid": [321, 322, 339], "1910420021": [321, 322], "sch\u00fcttler": [321, 322], "1910420022": [321, 322], "schweiger": [321, 322, 339], "1910420024": [321, 322], "sinabel": [321, 322], "1910420025": [321, 322], "slovik": [321, 322, 339], "1910420026": [321, 322], "s\u00f6l": [321, 322, 339], "1910420027": [321, 322], "stangl": [321, 322, 339], "1910420028": [321, 322], "felix": [321, 322, 339], "themessl": [321, 322, 339], "1920420035": [321, 322], "astrid": [321, 322], "vogel": [321, 322, 339], "1810420029": [321, 322], "florian": [321, 322, 339], "zwittnigg": [321, 322], "matricul": [321, 995], "studentdb": 321, "greatli": [321, 423, 1148], "matnr": 321, "rid": [321, 421, 462, 799, 816], "zuweisung": 322, "n1910420002": 322, "n1910420005": 322, "n1910420006": 322, "n1810420009": 322, "n1920420033": 322, "n1910420007": 322, "n1810420010": 322, "n1910420008": 322, "n1910420010": 322, "n1910420013": 322, "n1910420014": 322, "n1910420015": 322, "n1910420018": 322, "n1910420020": 322, "n1910420021": 322, "n1910420022": 322, "n1910420024": 322, "n1910420025": 322, "n1910420026": 322, "n1910420027": 322, "n1910420028": 322, "n1920420035": 322, "n1810420029": 322, "n666": 322, "5g": 322, "n19": 322, "10420013": 322, "n181": 322, "0420029": 322, "20210324": 323, "orig_si": 323, "__interactivehook__": 323, "_base_execut": 323, "_clear_type_cach": 323, "_current_fram": 323, "_debugmallocstat": 323, "_framework": 323, "_getfram": 323, "_git": 323, "_home": 323, "_xoption": 323, "flo": 324, "ted": 324, "rainer": 324, "rg": 324, "some_numb": [325, 1023], "auszuspucken": 325, "eine_neue_vari": 325, "klassisch": 325, "140705292246608": 325, "register_cont": 325, "0b11010001110101000": 325, "107432": 325, "erzwungen": 325, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 325, "groesst": 325, "darstellbar": 325, "ein_string_der_aussieht_wie_ein_integ": 325, "ein_integ": 325, "ver\u00e4ndernd": 325, "say_hello": [326, 1012], "333333333333336": 326, "disclos": [327, 910], "formalit\u00e4ten": 329, "summer": [329, 330, 336], "daili": [329, 840], "organiz": 330, "shortcut": [330, 407, 857, 889, 1026, 1154], "baustein": [330, 335], "navigieren": [330, 335], "sitzen": [330, 335], "nat\u00fcrlich": [330, 335, 348, 1142], "verstehen": [330, 335, 348, 1155], "pr\u00fcfung": [330, 335], "trocken": [330, 335], "pfade": [330, 335, 1143, 1154], "symbolisch": [330, 335, 884], "verschieben": [330, 335], "textfil": [330, 335], "113ff": [330, 335], "ansatzweis": [330, 335], "durchgegangen": [330, 335], "133ff": [330, 335], "durchgemacht": [330, 335], "wirkungsweis": [330, 335], "verstanden": [330, 335, 1145], "verkn\u00fcpfen": [330, 335], "aufw\u00e4rmen": 330, "fremden": 330, "fragerund": 330, "tire": [330, 335], "transact": [330, 335], "wertebereich": 330, "vpn": [330, 904], "gitlab": 330, "sidenot": 330, "stackoverflow": [330, 335, 413], "swoop": [330, 456], "hashbang": 330, "student1": 330, "student2": 330, "student3": 330, "undescript": 330, "contribut": [330, 971], "crlf": 330, "bang": [330, 450], "trial": [330, 974, 983, 1102], "relationship": [123, 311, 330, 469, 502, 544, 626, 719, 940, 973, 987, 1003, 1007, 1101], "systemkonzept": [331, 348, 1161], "adressr\u00e4um": [331, 348, 1152], "ger\u00e4t": 331, "destruktoren": [331, 1147], "containertempl": 331, "ausz\u00fcg": 331, "labor\u00fcbungen": 331, "absolventinnen": 331, "absolventen": 331, "entwicklungsplatform": 331, "zielplattform": [331, 1147], "dortigen": 331, "betriebssystemkonzept": [331, 1152, 1159], "verinnerlichen": 331, "eckpfeil": [331, 1147], "ansteuern": 331, "merkmal": 331, "nichttrivial": 331, "kerrisk": [331, 332], "handbook": [331, 332], "corbet": [331, 332, 1143], "allessandro": [331, 332], "rubini": [331, 332], "greg": [331, 332], "kroah": [331, 332], "hartman": [331, 332], "richard": [331, 332, 971], "steven": [331, 332, 427], "stephen": [331, 332], "rago": [331, 332], "brian": [331, 332, 351, 1145], "cookbook": [331, 332, 1135], "lutz": [331, 332], "integriert": 331, "\u00fcbungsanteil": 331, "informatik": 331, "einzelpr\u00fcfung": 331, "schriftlich": 331, "vorlesung": 331, "graduat": 332, "copver": 332, "warm": 333, "briefli": [334, 894], "filethermomet": 334, "ue": 336, "arduino": [336, 338, 894, 902, 1111], "homedirectori": [336, 885], "vbox": 336, "subnet": 336, "mgmt": 337, "64ff": 337, "readdir": [337, 748], "ow": [337, 481, 482, 483, 495, 496, 497], "readlink": 337, "tracker": [338, 339], "thermometers_docu": 338, "toctre": 338, "execconfig": 338, "wacom": [338, 400, 401], "schuettler": 339, "zwittnig": 339, "simu": 339, "kudriaschow": 339, "hysteres": 339, "impl": 339, "marku": 339, "stepper": 339, "motor": [339, 750, 893, 900], "wasserfal": 339, "influxdb": 339, "grafana": 339, "nachmittag": 339, "multitask": [340, 345, 728, 749, 750, 893, 934, 948, 954, 956, 957, 959, 1159], "latenc": [341, 345, 729, 750, 795, 893, 934, 954, 956], "gotcha": [341, 345, 630, 750, 893, 914, 934, 954, 956, 964], "type_from_ini": 341, "ece19error": 341, "configfil": [341, 995], "prettier": [341, 572], "support_address": 341, "invalidtypeerror": 341, "newcom": [343, 344], "individualtrain": 347, "baden": 347, "w\u00fcrttemberg": 347, "beginnend": 347, "kursnotizen": 347, "qualivis": 347, "logbuch": 348, "kursteilnehmern": 348, "zustandegekommen": 348, "zukommen": 348, "potentiellen": 348, "zuk\u00fcnftigen": 348, "eindruck": [348, 1142], "zukommt": 348, "publizieren": 348, "einverst\u00e4ndni": 348, "richtlinien": 348, "thalheim": 348, "aachen": 348, "herzogenrath": 348, "mixtur": [348, 591], "gr\u00e4felf": 348, "wel": 348, "regensburg": 348, "pr\u00e4sent": 348, "inhous": [348, 1097, 1142], "linuxcampu": 348, "sch\u00f6nen": 348, "aktiv": 348, "mitgestaltet": 348, "kursabschluss": 348, "dran": 348, "provok": 348, "kam": 348, "anmeldung": 348, "zustand": 348, "freiheiten": 348, "gestanden": 348, "zusatzaufgab": 348, "gef\u00fchrt": [348, 1142], "einschr\u00e4nkungen": [348, 1160], "eintagesworkshop": 348, "leuten": 348, "kenn": 348, "einhergehend": 348, "l\u00f6sungen": [348, 1142, 1143], "darauffolgend": 348, "vertiefen": 348, "ausgew\u00e4hlten": 348, "bereichen": 348, "dbapi2": [348, 1107], "objektorientierung": 348, "r\u00e4umen": 348, "zweit\u00e4gig": 348, "gemisch": 348, "kursen": 348, "ziemlich": 348, "eingemacht": 348, "bestellt": 348, "neugier": 348, "leichtfertig": 348, "tief": 348, "hinabgestiegen": 348, "feiner": 348, "internen": 348, "forschungsprojekt": 348, "gebracht": 348, "diesen": [348, 1162], "zusammenschnitt": 348, "workshopcharakt": [348, 1166], "angegraut": 348, "bewusst": [348, 1164], "verwendung": 348, "wunderbar": 348, "automatisieren": 348, "zurerst": 348, "shellbenutzung": 348, "betriebssystemen": [348, 1154, 1159, 1161], "angeordnet": 348, "ge\u00fcbt": 348, "herk\u00f6mmlichen": [348, 1147], "auffrischung": 348, "eingerostet": 348, "neuigkeiten": 348, "querbeet": 348, "aufbauend": 348, "zuvor": 348, "grundkur": 348, "wichtigsten": 348, "neuerungen": [348, 1147], "tobak": 348, "lieblingsschulungen": 348, "basiswissen": 348, "hoeri": 348, "bastelwoch": 348, "betrachtung": 348, "realtimef\u00e4higkeit": 348, "xenomai": [348, 1143], "fad": 348, "auszugsweis": 348, "richtig": [348, 1162], "n\u00e4chten": 348, "schulungstagen": 348, "kurzweil": 348, "beschert": 348, "einf\u00fchrungscharakt": 348, "kernelprogrammierung": 348, "auftrag": 348, "hardwarenah": [348, 1152, 1159], "ausgew\u00e4ht": 348, "kernelstruktur": 348, "crosscompil": 348, "newer": [349, 751, 914, 987, 1151], "msys2": 350, "5595": 350, "17619": 350, "pacman": 350, "mingw64": 350, "w64": 350, "x64": 350, "medium": [350, 440, 717, 969, 1165], "swlh": 350, "2b2e66352456": 350, "kernighan": [351, 1145, 1146], "denni": [351, 391, 590, 1145], "ritchi": [351, 391, 590, 1145, 1146], "ansi": 351, "iec": [351, 556], "9899": 351, "c11": 351, "pdp": [351, 365], "ken": 351, "thompson": 351, "tabul": [352, 360], "celsiu": [353, 354, 456, 467, 498, 901, 903], "brutal": [353, 372, 376, 397, 655, 672, 957], "ordinari": [353, 573, 627, 677, 781, 789, 860, 937, 1017, 1024], "everytim": [355, 373, 901], "ascend": [356, 1117], "unread": [357, 375, 432, 718, 972, 973, 993, 1037], "putchar": 359, "caution": [359, 565, 823, 897], "obscur": [359, 367, 512, 633, 814, 923, 965], "alright": [359, 385], "inequ": [359, 573], "word1": [360, 532], "word2": [360, 532], "word3": [360, 532], "word4": 360, "word5": 360, "unixen": [360, 748, 965, 1130, 1143], "nonsens": [361, 379, 398, 558, 562, 565, 655, 714, 860, 955, 992, 1101, 1140], "illustr": [361, 995], "countchar": 361, "nwhite": 361, "nother": 361, "stat": [361, 748, 919, 927, 928, 929, 930, 955, 961, 964, 968, 1128], "nonprint": [362, 390], "decis": [362, 437, 517, 564, 580, 714, 894, 957, 997, 1102, 1151], "conveni": [311, 362, 446, 823, 903, 968, 988, 1100], "xxxxxxxxxxxxxxxxxxxxxxxxx": 362, "xxxxxxxxxxxxxxxxxx": 362, "subroutin": [363, 431], "outer": [363, 390], "wimplicit": [363, 765], "hygien": 363, "dear": 363, "assembl": [365, 971], "contradict": [365, 660], "640k": 365, "a_str": 365, "strncpy": 365, "maxlen": [365, 366], "strcat": 365, "strncat": 365, "strcmp": [365, 666, 667], "strncmp": 365, "another_str": 365, "nonsensi": 366, "read_lin": 366, "longest": 366, "confin": [367, 995], "cluster_c": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cluster_c_introduct": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 695, 711, 720, 728, 735, 747, 749, 750], "c_introduction_external_variables_and_scop": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_string_read_lin": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_cpp_symbolic_const": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_fahrenheit_for": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_fahrenheit_float": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_variables_and_arithmetic_express": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_instal": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 657, 664, 695, 711, 720, 728, 735, 747, 749, 750], "c_introduction_exercise_histogram": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_arrai": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_character_arrai": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_hello_world": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_power_declar": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_introduct": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_fahrenheit_cpp": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_exercise_wc": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_funct": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_for_loop": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_introduction_character_io": [368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "z0": 370, "abbrevi": [371, 672, 675, 677, 681, 734, 736, 738, 739, 740], "char_bit": 371, "x86": [371, 450, 971, 988], "stdint": [371, 901, 921, 964], "int8_t": 371, "uint8_t": [371, 469, 484, 656, 901], "int16_t": 371, "int32_t": 371, "uint32_t": 371, "int64_t": 371, "uint64_t": [371, 408, 514, 684, 685, 719, 921, 964], "052": 372, "0x2a": 372, "0b010010": 372, "42l": 372, "456f": 372, "456l": 372, "x61": 372, "alert": [372, 415, 421, 715, 1026, 1034, 1043, 1045], "backspac": [372, 857, 1039], "formfe": 372, "ooo": 372, "octal": [372, 1026, 1039, 1040], "xhh": 372, "some_funct": 373, "some_vari": 373, "1415926535897932": 373, "some_nonsensical_numb": 373, "legal": [375, 419, 565, 663, 927, 969], "truth": [375, 924, 950], "eleg": [375, 718], "blank": 375, "num_lf": 375, "narrow": [376, 1102], "4294967295u": 376, "wsign": [376, 418], "wconvers": 376, "4294967296u": 376, "unscrupul": 376, "0x100000000": 376, "weaker": 376, "stronger": [376, 1007, 1114], "1l": 376, "1u": 376, "losslessli": 376, "1ul": 376, "wtype": [376, 418], "wextra": [376, 418], "pedant": 376, "anti": [376, 802, 939], "sloppi": 376, "advic": [376, 1026], "immens": [376, 969], "hazard": 376, "messi": [376, 447], "subtl": [377, 397, 420, 512, 1020], "copy_and_omit": 377, "0x4b": 379, "01001011": 379, "0x0c": 379, "00001100": 379, "0x08": 379, "00001000": 379, "0x4f": 379, "01001111": 379, "0x47": 379, "01000111": 379, "0x03": 379, "00000011": 379, "0x80": 379, "00110000": 379, "0x4c": [379, 787], "01001100": 379, "0xb3": 379, "10110011": 379, "arr": [380, 659], "unari": [382, 1026], "strongest": [382, 1026], "intuit": [382, 430], "danger": [382, 400, 558, 797, 947, 968, 1035, 1148], "decrement": [383, 392, 399, 403, 405, 409, 412, 416, 425, 429, 434, 435, 608, 657, 695, 714, 747, 749, 750, 756], "cluster_c_types_operators_express": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_introduct": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_const": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_datatypes_s": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_arithmetic_oper": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_declar": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_conditional_express": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_assignment_operators_and_express": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_relational_logical_oper": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_variable_nam": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_bit_oper": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_exercise_string_reduc": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_precedence_and_order_of_evalu": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_increment_decrement_oper": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_types_operators_expressions_type_convers": [383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "doabl": 388, "cond": [388, 944], "precedenceof": 388, "innermost": [390, 627, 632], "concern": [390, 391, 439, 756, 833, 903, 994, 1150], "edsger": 391, "dijkstra": 391, "plea": 391, "manifold": 391, "judici": [391, 427, 1150], "do_complicated_stuff": 391, "cleanup_mess": 391, "cluster_c_program_flow": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_statements_and_block": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_goto_and_label": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_break_and_continu": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_loops_do_whil": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_if_els": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_switch": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_else_if": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_flow_loops_while_and_for": [392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "vice": 393, "versa": 393, "g_lobal": [394, 395, 397], "print_g": [394, 395], "linkag": 395, "percept": [395, 833], "disciplin": [395, 417, 427, 437, 1101], "convent": [395, 439, 813, 857, 879, 917, 994, 1009], "ifndef": [395, 397, 398, 440, 447, 541, 559, 565, 567, 568, 666, 667, 713, 971, 987, 989], "g_h": 395, "programx": 396, "cautious": 397, "c99": [397, 1146], "slow": [397, 428, 432, 608, 903, 914], "have_c_h": 397, "clash": [397, 420], "include_onc": 397, "newbi": [397, 659], "hurdl": 397, "ifdef": [398, 455, 608], "defined": 398, "unequ": 398, "tempt": 398, "horror": 398, "do_much": 398, "do_thi": [398, 719], "do_that": [398, 719], "do_less": 398, "__pragma": 398, "4127": 398, "warn_if": 398, "statem": 398, "function_help": 398, "function_quit": 398, "function_": 398, "inject_viru": 398, "doomed_process": 398, "win32": [398, 1164], "foreign_mem": 398, "virtualallocex": 398, "mem_commit": 398, "page_execut": 398, "page_readwrit": 398, "infect": 398, "__file__": [398, 995, 1128], "__line__": 398, "smell": [398, 452], "pest": 398, "cluster_c_functions_and_program_structur": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_external_vari": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_bas": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_static_vari": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_header_fil": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_c_preprocessor": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_functions_and_program_structure_c_preprocessor_advanc": [399, 405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "dereferenc": [400, 668, 703, 707], "35129": 400, "calle": [401, 431, 433, 570, 990], "tablet": 401, "excang": 402, "pa1": 403, "pa2": 403, "cluster_c_pointers_and_arrai": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_pointers_and_arrays_pointers_and_address": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_pointers_and_arrays_command_line_argu": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_pointers_and_arrays_pointers_and_arrai": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_pointers_and_arrays_pointers_and_function_argu": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_pointers_and_arrays_exercise_swap": [405, 409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "scalar": [406, 421, 1043], "fantasi": [406, 894, 896], "p1": [406, 511, 557, 559, 565, 571, 573, 575, 576, 660], "p2": [406, 511, 557, 559, 565, 571, 573, 576, 660], "laid": 406, "makepoint": 407, "addpoint": [407, 423], "addtopoint": 407, "pid_t": [408, 940, 958, 969], "cluster_c_structur": [409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_structures_typedef": [409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_structures_structures_and_funct": [409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_structures_bas": [409, 412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "dealloc": [410, 548, 700, 758, 785, 791], "ptr": [410, 533, 665, 713, 714, 715, 716], "do_something_with": [410, 658, 704], "list_init": 411, "list_destroi": 411, "list_insert": 411, "list_remov": 411, "list_count": 411, "list_print": 411, "keylen": 411, "cluster_c_memori": [412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_memory_malloc": [412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_memory_exercise_linked_list": [412, 416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "corollari": [413, 415, 721, 1003], "reorder": [413, 729, 781], "use_count": [413, 414, 714, 716, 745], "use_resourc": [413, 414], "do_something_with_shared_resourc": [413, 414], "conceiv": [413, 1020], "completion_flag": 413, "out_word": 413, "in_word": 413, "unforese": 413, "volatil": [414, 416, 425, 429, 434, 435, 657, 695, 723, 747, 749, 750, 807, 969, 1146, 1149], "instr": [414, 432, 942, 1005], "pthread_mutex_t": [414, 727, 789, 942, 944], "use_count_mutex": 414, "pthread_mutex_initi": [414, 942], "pthread_mutex_lock": [414, 727, 942, 944], "pthread_mutex_unlock": [414, 727, 942, 944], "expens": [414, 421, 557, 570, 573, 663, 668, 704, 705, 714, 802, 939, 1148], "fetch_and_add": [414, 942], "__sync_fetch_and_add": [414, 724, 942, 943], "sheer": [414, 560], "neglig": 415, "penalti": 415, "memcpi": 415, "freeli": 415, "rearrang": [415, 607], "anim": 415, "pragma": [415, 456, 458, 462, 467, 479, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 514, 572, 589, 592, 686, 734, 736, 738, 739, 740, 741, 748], "textit": 415, "bogu": [415, 427, 568, 666, 667, 693, 903, 969], "__pad0": 415, "__pad1": 415, "misalign": 415, "intrins": [416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "cluster_c_advanced_language_featur": [416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_advanced_language_features_align": [416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_advanced_language_features_atom": [416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "c_advanced_language_features_volatil": [416, 425, 429, 434, 435, 657, 695, 747, 749, 750], "matur": 417, "odditi": 417, "rectifi": 417, "fortran": 417, "lazy": [417, 698], "meant": [417, 968], "shortcom": [417, 482, 643, 648, 651], "holidai": 417, "handcraft": [417, 465, 1030], "clariti": [418, 422, 926], "baud": 419, "idl": 419, "writing_request": 419, "reading_respons": 419, "wait_retri": 419, "protocol_engin": [419, 423], "deduc": [419, 655, 658, 683], "obligatori": 419, "anyhow": 419, "forgot": 419, "unambigu": [419, 655], "protocol_error": 419, "eat": [419, 427], "unintend": 421, "wwrite": 421, "max_bucket": 421, "unus": [421, 456, 511, 513, 557, 561, 572, 611, 612, 665, 775, 834, 950, 964], "pj": 421, "pointe": 421, "ppi": 421, "height": [422, 465, 574], "beman": 422, "daw": 422, "obfusc": 423, "ssize_t": [423, 515, 756, 915, 919, 920, 921, 923, 927, 928, 929, 930, 933, 935, 938, 961, 964, 965, 968], "send_fram": 423, "eng": 423, "send_sum": 423, "v_int32": 423, "spectacular": 423, "adequ": 423, "unix_error": 423, "app_error": 423, "unix_error_cr": 423, "unix_error_ok": 423, "uerr": 423, "app_error_cr": 423, "app_os_error": 423, "impact": [423, 427], "enhanc": [423, 830], "beyond": [424, 923], "consider": [424, 857], "slowdown": 424, "0x400552": 424, "0x51bb072": 424, "0x4c28c6d": 424, "vg_replace_malloc": [424, 565], "0x400545": 424, "loss": [424, 905], "rec": [424, 1085, 1087], "uncov": 424, "readabilti": [425, 429, 434, 435, 657, 695, 747, 749, 750], "explict": [425, 429, 434, 435, 750], "cluster_c_program_san": [425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_sanity_discrete_valu": [425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_sanity_integral_typ": [425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_sanity_introduct": [425, 429, 434, 435, 657, 695, 747, 749, 750], "c_program_sanity_struct_initi": [425, 429, 434, 435, 750], "c_program_sanity_const": [425, 429, 434, 435, 750], "c_program_sanity_stat": [425, 429, 434, 435, 750], "c_program_sanity_valgrind": [425, 429, 434, 435, 750], "c_program_sanity_explicit_type_safeti": [425, 429, 434, 435, 750], "hotspot": [426, 430], "checksum": [426, 905, 953], "externel": 426, "sha1sum": [426, 953, 956, 959], "8g": 426, "0m38": 426, "0m3": 426, "0m0": 426, "perceiv": 426, "daze": 426, "mp3": 426, "018": 426, "mult": 427, "rumour": 427, "uncondit": 427, "finlin": 427, "o3": [427, 442, 748, 1137], "heurist": 427, "o1": 427, "magnitud": [427, 428], "overus": [427, 469, 1008, 1148], "spill": 427, "fira": 427, "rtfm": [427, 1041, 1135], "compromis": [427, 437, 465], "transit": [427, 452], "fmove": 427, "outweigh": 427, "thrash": [427, 956, 1146], "understood": [427, 437, 514, 719, 797, 1150], "misnom": [427, 1045], "o0": [427, 442], "unagress": 427, "chew": [427, 729], "agress": 427, "muchnik": 427, "levin": 427, "nearbi": 428, "bounc": [428, 816], "4x3": 428, "rectangular": 428, "cluster_c_perform": [429, 434, 435, 750], "c_performance_introduct": [429, 434, 435, 750], "c_performance_memori": [429, 434, 435, 750], "c_performance_computebound": [429, 434, 435, 750], "bust": 430, "haul": 430, "cheater": 430, "fallibl": 430, "supplement": 430, "gprof": [430, 432, 433, 434, 435, 750, 1146], "callgrind": [430, 433, 434, 435, 750, 1146], "oprofil": [430, 434, 435, 750, 1146], "gmon": 431, "spot": 431, "38000000": 431, "find_dupl": [431, 433], "criterion": [431, 598], "37000000": 431, "luck": [431, 901, 992, 994], "gprof2dot": 431, "tjpeg": 431, "predict": [432, 433, 1098, 1100, 1101], "sluggishli": 432, "16761": 432, "callgrind_annot": 432, "atstart": 432, "callgrind_control": 432, "nmi": 433, "ophelp": 433, "operf": 433, "oprofile_data": 433, "opreport": 433, "opannot": 433, "oparch": 433, "opgprof": 433, "Their": 433, "2085": 433, "2505": 433, "maskabl": 433, "callgraph": 433, "pxe": 433, "vmlinux": [433, 772], "debuginfo": 433, "userland": [433, 756], "routin": [433, 439, 544, 748, 789, 795, 800, 921, 957, 989, 1089, 1091], "analyz": 433, "jcf": [433, 797, 823], "jxf": [433, 797, 823], "gdf": 433, "op2calltre": 433, "oprof": 433, "applet": 433, "viewabl": [433, 446], "kcachegrind": 433, "cluster_c_profil": [434, 435, 750], "c_profiling_introduct": [434, 435, 750], "c_profiling_gprof": [434, 435, 750], "c_profiling_callgrind": [434, 435, 750], "c_profiling_oprofil": [434, 435, 750], "worker": [437, 663], "consensu": [437, 460], "consent": [437, 1015], "male": [437, 1057], "prcess": 437, "obei": [437, 439], "liskov": 437, "antipattern": [437, 465], "gonna": 437, "indecis": [437, 1151], "road": 437, "manufactur": [437, 903], "pcb": [437, 901], "bom": 437, "requiremenet": 437, "yyyi": 438, "testabl": [438, 1129], "yagni": 438, "fraunhof": 438, "make_categori": 439, "outputfil": 439, "to_datetim": 439, "make_float": 439, "orpheum": 439, "goingout": 439, "hervi": 439, "sport": 439, "card": [439, 797, 826, 861, 863, 868, 869], "to_csv": 439, "read_from_csv": 439, "write_to_csv": 439, "clean_data": 439, "csvname_or_list_thereof": 439, "workaround": [439, 656, 659, 770, 1128], "read_from_dir": 439, "re_yyyy_mm": 439, "inputdir": 439, "libreoffic": 439, "monolith": [439, 971], "factor": [439, 765, 766, 797], "test_data_clean": 439, "test_make_float": 439, "1999": 439, "test_date_convers": 439, "at666666666666666666": 439, "000009173": 439, "bawaatwwxxx": 439, "at211420020010848041": 439, "ausgleich": 439, "firmenkonto": 439, "test_input": 439, "read_from_csv_singl": 439, "read_from_csv_multipl": 439, "deliber": 439, "test_read_csv_singl": 439, "000009284": 439, "2371": 439, "000009283": 439, "at613400000005077508": 439, "world4you": 439, "writelin": [439, 1045, 1090, 1092], "test_read_csv_multipl": 439, "lines_2023_02": 439, "lines_2023_01": 439, "000009229": 439, "4111": 439, "bp": 439, "tankstel": 439, "000009228": 439, "at081400086210003454": 439, "\u00f6sterreichisch": 439, "gesundheitskass": 439, "_write_csv": 439, "read_from_csv_dir": 439, "test_read_csv_dir": 439, "testutil": 439, "write_csv": 439, "test_category_csv": 439, "000009168": 439, "000009169": 439, "2801": 439, "strassenbahn": 439, "eas": [439, 1107], "finer": 439, "refact": 439, "str_categori": 439, "cardunknown": 439, "flughafen": 439, "wien": 439, "test_more_of_it": 439, "000009153": 439, "parken": 439, "fl": 439, "inputread": 439, "recursivecsvinputread": 439, "singlecsvinputread": 439, "compositeinputread": 439, "input_abc": 439, "abstractmethod": [439, 1007], "multiplecsvinputread": 439, "test_input_abc": 439, "cmake_minimum_requir": [440, 973, 1137], "identif": [440, 901, 972, 973], "abi": [440, 450, 775, 777, 917, 972, 973], "hello_nam": [440, 446], "hello_name_h": 440, "democonfig": [441, 443, 447, 448, 449], "libhello": [441, 442, 443, 445, 448, 451], "configure_fil": 441, "demo_version_major": 441, "demo_version_minor": 441, "cmake_current_binary_dir": 441, "demo_major": 441, "demo_minor": 441, "include_directori": [441, 452], "overkil": 441, "cmake_cxx_standard": [442, 1137], "dndebug": 442, "cmake_": 442, "_compiler_id": 442, "IF": [442, 447, 448, 449], "g3": 442, "strequal": 442, "cmake_c_compiler_id": 442, "cmake_c_flag": [442, 1137], "cmake_cxx_compiler_id": 442, "cmake_cxx_flag": [442, 1137], "howdi": [442, 566, 697, 699, 700, 837, 841, 927, 928, 930, 1012], "bullshithowdi": 442, "fatal_error": 442, "send_error": 442, "attract": [442, 659], "findsqlite3": 443, "sqlite3_include_dir": 443, "sqlite3_librari": 443, "typo": [443, 1008, 1009], "sqlite3_vers": 443, "sqlite3_found": 443, "olden": 443, "0x00007f76ae011000": 443, "libz": 443, "0x00007f76adef7000": 443, "cluster_cmak": [444, 750], "cmake_instal": [444, 750, 972, 973], "cmake_shared_libraries_preview": [444, 750], "cmake_librari": [444, 750], "cmake_optional_code_approach_1": [444, 750], "cmake_optional_code_problem": [444, 750], "cmake_external_depend": [444, 750], "cmake_targets_properti": [444, 750], "cmake_optional_code_approach_2": [444, 750], "cmake_structur": [444, 750], "cmake_configure_fil": [444, 750], "cmake_cxx_and_r": [444, 750], "cmake_bas": [444, 750], "cmake_test": [444, 750], "cmake_install_prefix": 445, "set_properti": [445, 450], "dbuild_shared_lib": [445, 450], "ON": [445, 448, 449, 450, 504, 505, 510, 955], "readelf": [445, 971, 983, 988], "0x0000000000000001": [445, 988], "0x000000000000001d": 445, "0x00007f773aefe000": 445, "ldconfig": [445, 1143], "sonam": [445, 450], "add_librari": [446, 448, 450, 452, 498, 543, 552, 972, 973], "0x29": 446, "collect2": [446, 632, 988], "acycl": [446, 973, 987], "dag": 446, "jul": [446, 450], "tpng": [446, 973], "descend": [447, 448, 449, 451, 498, 858, 965], "use_blacklist": [447, 448], "macro_use_blacklist": [447, 449], "demo_use_blacklist": [447, 448], "namegreet": 447, "_blacklist": 447, "implic": [447, 781, 853, 914], "sayhello": 447, "is_forbidden": 447, "_name": [447, 488, 491, 495, 496, 497], "goodby": [447, 969], "use_backlist": 447, "condition": 447, "duse_blacklist": [448, 449], "target_compile_opt": [448, 452], "manyfold": 449, "target_compile_definit": [449, 452], "lightli": 449, "symlink": [450, 748, 901, 1130, 1154], "build_shared_lib": 450, "qf": 450, "libboost_regex": 450, "lrwxrwxrwx": [450, 879, 901, 902, 903, 937, 971], "rwxr": [450, 842, 844, 845, 854, 971, 983, 1022], "289264": 450, "temporarili": [450, 958, 971], "project_vers": 450, "makefile2": 451, "compile_definit": 452, "dname": 452, "compile_opt": 452, "widest": 452, "asymmetr": 452, "enable_test": 453, "toplavel": 453, "set_tests_properti": [453, 1134, 1137], "pass_regular_express": 453, "ctest": 453, "cdash": 453, "kitwar": 453, "socialdb": [454, 457, 461, 486, 492], "i2csensor_vendor1": [455, 484], "0x37": 455, "suddenli": [455, 797, 837, 1103], "vener": [455, 476, 558, 573, 701], "damag": [455, 1117], "slip": 455, "cascad": 455, "i2csensor": [455, 469, 484], "create_i2c_sensor": 455, "i2csensorfactori": 455, "speak": [455, 884, 902, 999, 1024], "vendor1": [455, 484], "abstract_factory_suit": 455, "instantiate_vendor1": 455, "i2csensorfactory_vendor1": 455, "i2c_factory_vendor1": 455, "i2c_sensor": 455, "assert_tru": [455, 510, 511, 516, 521, 523, 528, 557, 559, 574, 575, 576, 577, 660, 714, 715, 731, 748, 1135], "dynamic_cast": [455, 482, 496], "a_sensor": [455, 665], "vendor2": [455, 484], "instantiate_vendor2": 455, "i2csensorfactory_vendor2": [455, 484], "i2c_factory_vendor2": 455, "i2csensor_vendor2": [455, 484], "pu": 455, "tinto": 455, "fahrenheitsensor": [456, 485], "get_temperature_f": [456, 485], "formula": 456, "adapter_suit": 456, "constantfahrenheitsensor": 456, "assert_float_eq": [456, 459, 460, 462, 479, 480, 506, 507, 508, 509, 511, 514, 515, 526, 557, 559, 576, 662, 665, 731], "fahrenheitsensor_adapt": [456, 485], "adapter__is_a__sensor": 456, "adapter__knows__an_a_sensor": 456, "variablefahrenheitsensor": 456, "initial_valu": 456, "_valu": [456, 491], "change_temperatur": [456, 506, 514, 515], "adapter__definitely_knows__a_sensor__hel": 456, "multitud": 457, "socialdbcommand": [457, 486], "command_suit": 457, "2345110695": [457, 616], "socialdbinsertcommand": [457, 486], "3456060486": [457, 616], "insert_by_bas": 457, "socialdbfindcommand": [457, 486], "socialdbdropcommand": [457, 486], "notfound": [457, 458, 486, 648, 649, 650], "assert_throw": [457, 464, 748], "notinsert": [457, 458, 486], "bulkinsert": 457, "bulk_insert": 457, "socialdbbulkinsertcommand": [457, 486], "bic": 457, "std_initializer_list": 457, "bulk_insert__std_initializer_list": 457, "_msg": 458, "c_str": [458, 493, 515, 661, 666, 667, 968], "_db": 458, "hypthet": 459, "composite_suit": 459, "cs1": 459, "cs2": 459, "recompil": [460, 988], "decorator_suit": 460, "average_with_base_sensor": 460, "decoratedsensor": [460, 488], "propon": 460, "diagnost": [460, 589, 592], "decorated_sensor_const_added_function": 460, "decorated_sensor_random_added_function": 460, "decorated_sensor_const__is_a__sensor": 460, "decorated_sensor_random__is_a__sensor": 460, "assert_g": [460, 509, 526], "assert_l": [460, 509, 526], "average_with_decorated_sensor": 460, "mtqueue": [461, 479], "devis": 461, "notifi": [461, 727, 918, 965, 1111], "cluster_cxx03": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 618, 619, 620, 622, 623, 625, 628, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cluster_cxx03_inheritance_oo": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cluster_cxx03_data_encapsul": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cluster_linux": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 754, 757, 759, 762, 764, 767, 769, 771, 773, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 801, 803, 806, 808, 812, 815, 818, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 899, 900, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 936, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cluster_linux_toolchain": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cluster_linux_bas": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cluster_linux_basics_shel": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cluster_linux_basics_intro": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cluster_cxx_design_pattern": [461, 475, 503, 555, 750], "cluster_cxx": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 750], "cluster_cxx_exercis": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 750], "cluster_cxx_exercises_design_pattern": [461, 475, 503, 555, 750], "cxx03_introduct": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cxx03_inheritance_oo_destructor": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_inheritance_oo_bas": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_data_encapsulation_ctor_dtor": [461, 475, 503, 513, 555, 563, 628, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cxx03_inheritance_oo_virtual_destructor": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_inheritance_oo_virtual_method": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_inheritance_oo_polymorph": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_data_encapsulation_classes_object": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cxx03_inheritance_oo_interfac": [461, 475, 503, 513, 555, 628, 652, 735, 749, 750], "cxx03_data_encapsulation_ctor_custom": [461, 475, 503, 506, 509, 513, 555, 563, 628, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cxx03_data_encapsulation_c": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 520, 522, 555, 563, 578, 581, 584, 600, 606, 610, 619, 622, 623, 628, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "cxx03_data_encapsulation_ctor_default": [461, 475, 503, 513, 555, 563, 628, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 735, 747, 749, 750], "linux_toolchain_static_librari": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 750, 893, 973, 976, 978, 979, 981], "linux_toolchain_separate_compil": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 750, 893, 973, 976, 977, 978, 979, 981], "linux_toolchain_bas": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_basics_shell_file_dir_create_rm": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 824, 825, 826, 827, 830, 831, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 877, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_toolchain_cmake_loc": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 750, 893, 973, 981], "linux_basics_shell_cwd": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 824, 825, 826, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_basics_shell_path": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 824, 825, 826, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_basics_shell_commandlin": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_basics_intro_process": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 824, 825, 826, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "linux_basics_intro_overview": [461, 475, 503, 504, 505, 506, 507, 508, 509, 510, 513, 555, 728, 749, 750, 820, 824, 825, 826, 827, 830, 831, 838, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 887, 893, 905, 906, 907, 908, 909, 916, 922, 924, 932, 934, 948, 951, 954, 956, 973, 975, 976, 977, 978, 979, 980, 981, 982], "cxx_design_patterns_sensor_hierarchi": [461, 475, 503, 555, 750], "cxx_design_patterns_uml": [461, 475, 503, 555, 750], "cxx_design_patterns_proxi": [461, 475, 503, 555, 750], "cxx_design_patterns_command": [461, 475, 503, 555, 750], "cxx_design_patterns_composit": [461, 475, 503, 555, 750], "cxx_design_patterns_observ": [461, 475, 503, 555, 750], "cxx_design_patterns_heating_screenplai": [461, 750], "cxx_design_patterns_adapt": [461, 475, 503, 555, 750], "cxx_design_patterns_abstract_factori": [461, 475, 503, 555, 750], "cxx_design_patterns_singleton": [461, 475, 503, 555, 750], "cxx_exercises_design_patterns_proxy_round": [461, 475, 503, 555, 750], "cxx_design_patterns_oo_principl": [461, 750], "cxx_design_patterns_interpret": [461, 475, 503, 555, 750], "cxx_design_patterns_decor": [461, 475, 503, 555, 750], "cxx_exercises_sensor_interfac": [461, 475, 503, 513, 555, 750], "sensorread": 462, "chrono_liter": [462, 655, 727, 729, 730], "demologg": 462, "cerr": [462, 501, 580, 649, 719, 729, 901, 935, 938], "demovaluestor": 462, "_store": 462, "namedsensor": 462, "_sensor": [462, 469, 487, 488, 490, 493, 494, 715], "_logger": 462, "_value_stor": 462, "sensora": 462, "sensorb": 462, "sensorc": 462, "200000": [462, 902, 1100], "this_thread": [462, 655, 716, 727, 729], "sleep_for": [462, 655, 716, 727, 729], "12597": 462, "valuestor": 462, "2895": 462, "158243": 462, "cassert": [462, 604, 645, 648, 650, 656, 729], "boss": 462, "v3": 462, "abort": [462, 481, 482, 565, 693, 915], "mocklogg": 462, "lines_log": 462, "mockvaluestor": 462, "sensorreader_suit": 462, "141320": 462, "memcheck": [462, 565, 714], "detector": [462, 565, 714], "myobserv": 464, "socialdb_observ": [464, 492], "newcitizenobserv": [464, 492], "new_citizen": 464, "_new_citizen_svnr": 464, "new_citizen_ad": [464, 492], "observer_suit": 464, "register_on": 464, "register_new_citizen_notif": [464, 492], "register_mani": 464, "observer1": 464, "observer2": 464, "register_dupl": 464, "observeralreadyregist": [464, 492], "unregister_new_citizen_notif": [464, 492], "unregister_not_regist": 464, "observernotregist": [464, 492], "addict": [465, 836, 857, 1121, 1129], "bertrand": 465, "barbara": 465, "polish": 465, "be_sick": 468, "insur": [468, 481, 482, 483, 495, 496, 497], "teardown": [468, 515, 992, 1129, 1139, 1141], "purest": 469, "lightest": 469, "pidcontrol": 469, "_switch": 469, "cluster_cxx_exercises_design_patterns_solut": [475, 503, 555, 750], "cxx_exercises_design_patterns_proxy_remot": [475, 503, 555, 750], "cxx_exercises_design_patterns_adapt": [475, 503, 555, 750], "cxx_exercises_design_patterns_composit": [475, 503, 555, 750], "cxx_exercises_design_patterns_singleton_flexible_strict": [475, 503, 555, 750], "cxx_exercises_design_patterns_singleton_flex": [475, 503, 555, 750], "cxx_exercises_design_patterns_singleton_inflex": [475, 503, 555, 750], "cxx_exercises_design_patterns_decor": [475, 503, 555, 750], "cxx_exercises_design_patterns_abstract_factori": [475, 503, 555, 750], "cxx_exercises_design_patterns_interpreter_bas": [475, 503, 555, 750], "cxx_exercises_design_patterns_command": [475, 503, 555, 750], "cxx_exercises_design_patterns_observ": [475, 503, 555, 750], "cxx_exercises_design_patterns_interpreter_and_adapt": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_observ": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_proxy_round": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_adapt": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_composit": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_command": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_decor": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_abstract_factori": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_proxy_remot": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_interpreter_bas": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_singleton_flex": [475, 503, 555, 750], "cxx_exercises_design_patterns_solutions_singleton_inflex": [475, 503, 555, 750], "cla": 476, "roundingsensor": [476, 480, 494], "r1": [476, 577, 668], "r2": [476, 577, 668], "r3": 476, "sensorvalueexpress": [476, 490], "e1_e2": 476, "e1_e2_e3": 476, "num_measur": 476, "v_avg": 476, "v_ass": 476, "combinatin": 477, "interpreter_suit": 477, "e_lh": 477, "e_rh": 477, "e_add": 477, "e_sub": 477, "mul": 477, "e_mul": 477, "e_div": 477, "arithemet": 477, "arith": [477, 549, 550, 586, 587, 588, 589, 594], "combined_arith": 477, "l7": 477, "a_7_plus_3": 477, "s_3_minus_1": 477, "variable_not_set": 477, "analogi": [477, 501, 903, 965, 1005], "assignment_valu": 477, "variable_assign": 477, "ass": 477, "variable_used_as_express": 477, "ass_v1": 477, "ass_v2": 477, "reachabl": [479, 714, 901, 903], "remoteadapt": [479, 493], "response_promis": 479, "_adapt": 479, "_queue": [479, 727], "_thread": 479, "fulfil": [479, 514], "proxy_remote_suit": 479, "_c": 479, "remotesensoradapt": [479, 493], "remotesensor": [479, 493], "remote_sensor__is_a__sensor": 479, "somth": 479, "simplist": 479, "fullfil": 480, "proxy_round_suit": 480, "round_down": 480, "round_up": 480, "rouding_sensor__is_a__sensor": 480, "advis": [481, 1091], "hypothet": [481, 513, 514, 564, 894], "fee": 481, "socialinsur": [481, 482, 483, 497], "oegk": [481, 482], "startup": [481, 482, 483, 495, 829, 965, 971, 1003], "set_inst": [481, 482, 495], "make_uniqu": [481, 495, 746], "debt": [311, 481, 482, 483, 495, 496, 497], "socinsur": [482, 496], "inisur": 482, "reimplement": [482, 651], "compiabl": [482, 496], "iface_inst": [482, 496], "svs_instanc": [482, 496], "oegk_inst": [482, 496], "another_inst": [482, 483, 496, 497], "1485": [482, 483], "unset": [482, 944], "sozialversicherung": [483, 497], "unrealist": 483, "adapte": 485, "_adapte": 485, "_svnr": 486, "_firstnam": [486, 616, 1015], "_lastnam": [486, 616, 1015], "_result": 486, "_command": 486, "get_if": [486, 740], "decoratedconstantsensor": 488, "sstream": [488, 493, 575, 577], "iomanip": 488, "ostringstream": [488, 493, 574, 575, 576, 577], "decoratedrandomsensor": 488, "_variabl": 491, "_lh": 491, "_rh": 491, "_context": 491, "_var": 491, "_exp": 491, "stdexcept": [491, 493, 495, 496, 497, 515, 748], "_new_citizen_observ": 492, "num_eras": 492, "_server": 493, "cstdio": 493, "num_item": 493, "sscanf": 493, "cmath": [494, 559, 567, 568, 576, 662, 678, 679, 680, 681, 718], "_instanc": [495, 496, 497], "nullptr": [495, 496, 514, 525, 529, 655, 665, 666, 713, 714, 715, 727, 729, 731, 745, 746, 938, 1148], "_databas": [495, 496, 497], "0l": [495, 496], "cstdlib": [496, 515], "ssocinsur": 496, "toi": [498, 655, 969], "millidegre": 498, "parameteriz": [499, 1097], "loop_and_measur": 499, "niter": 499, "counterpart": 500, "stod": 501, "uniform_real_distribut": [501, 509, 713], "default_random_engin": [501, 509, 713], "random_devic": [501, 509, 713], "_distribut": [501, 713], "_engin": [501, 713, 1117], "_x": [501, 559, 560, 562, 564, 566, 567, 568, 569, 571, 573, 583, 598, 662, 677, 679, 680, 681], "_y": [501, 559, 560, 562, 564, 566, 567, 568, 569, 571, 573, 583, 598, 662, 677, 679, 680, 681], "spit": [501, 1103], "cluster_cxx_exercises_fh_sensor_first_tri": [503, 555, 750], "cluster_cxx_exercises_stl": [503, 520, 522, 555, 750], "cluster_cxx_exercises_stl_sensor_repositori": [503, 520, 522, 555, 750], "cluster_cxx03_functions_and_method": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 637, 638, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cluster_cxx03_stl": [503, 520, 522, 555, 600, 606, 610, 618, 619, 620, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cluster_cxx03_stl_algorithm": [503, 520, 555, 600, 619, 622, 623, 652, 750], "cluster_cxx03_stl_associative_contain": [503, 520, 522, 555, 610, 619, 623, 652, 750], "cluster_cxx03_except": [503, 520, 522, 555, 581, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cluster_cxx03_templ": [503, 520, 522, 555, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cluster_linux_sysprog": [503, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 936, 948, 951, 954, 956], "cluster_linux_sysprog_fileio": [503, 555, 728, 749, 750, 827, 830, 831, 893, 922, 924, 932, 934, 948, 951, 954, 956], "cluster_linux_sysprog_bas": [503, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956], "cluster_linux_basics_permiss": [503, 555, 728, 749, 750, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 893, 922, 924, 932, 934, 948, 951, 954, 956], "cxx_exercises_sensor_mock_nopoli": [503, 504, 505, 506, 508, 555, 750], "cxx_exercises_sensor_w1": [503, 555, 750], "linux_sysprog_fileio_exercise_w1_sensor": [503, 555, 750, 893, 932, 934, 951], "cxx_exercises_hysteresis_nopoli": [503, 505, 555, 750], "cxx_exercises_switch_mock_nopoli": [503, 504, 505, 510, 555, 750], "cxx_exercises_oo_shap": [503, 555, 750], "cxx03_functions_and_methods_stat": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx03_functions_and_methods_method": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cxx03_functions_and_methods_const": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 643, 644, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cxx03_functions_and_methods_oper": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx_exercises_sensor_avg_nopoli": [503, 506, 555, 750], "cxx03_data_encapsulation_initializer_list": [503, 506, 509, 555, 563, 652, 750], "cxx_exercises_sensor_const_nopoli": [503, 507, 509, 555, 750], "cxx_exercises_sensor_random_nopoli": [503, 509, 555, 750], "cxx_exercises_sensor_w1_factori": [503, 555, 750], "cxx_exercises_display_led_stripe_nopoli": [503, 504, 555, 750], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [503, 555, 750], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [503, 555, 750], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [503, 555, 750], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [503, 555, 750], "cxx_exercises_stl_filter_gener": [503, 520, 555, 750], "cxx_exercises_stl_algo": [503, 520, 555, 750], "cxx03_stl_vector_copy_etc": [503, 520, 555, 619, 623, 652, 750], "cxx03_stl_algorithm_find": [503, 520, 555, 600, 619, 623, 652, 750], "cxx03_stl_algorithm_copi": [503, 520, 555, 600, 619, 623, 652, 750], "cxx_exercises_stl_filter_odd": [503, 520, 555, 750], "cxx_exercises_stl_filter_greater_10": [503, 520, 555, 750], "cxx_exercises_stl_map": [503, 520, 522, 555, 750], "cxx03_stl_associative_containers_map": [503, 520, 522, 555, 610, 619, 623, 652, 750], "cxx_exercises_stl_uniq": [503, 520, 555, 750], "cxx_exercises_stl_vector": [503, 520, 555, 750], "cxx_exercises_stl_sensor_repository_remove_sunni": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_insert_sunni": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_lookup_sunni": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_memory_leak": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_lookup_not_found": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_size_const": [503, 520, 522, 555, 750], "cxx_exercises_stl_sensor_repository_remove_not_found": [503, 520, 522, 555, 750], "cxx03_functions_and_methods_refer": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 643, 644, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cxx03_functions_and_methods_overload": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 637, 638, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cxx03_functions_and_methods_thi": [503, 520, 522, 555, 578, 581, 584, 600, 606, 610, 619, 622, 623, 640, 643, 644, 647, 648, 649, 650, 651, 652, 664, 695, 711, 720, 728, 747, 749, 750], "cxx03_stl_basic": [503, 520, 522, 555, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx03_templates_class_templ": [503, 520, 522, 555, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx03_stl_associative_containers_bas": [503, 520, 522, 555, 610, 619, 623, 652, 750], "cxx03_exceptions_try_catch": [503, 520, 522, 555, 581, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx03_exceptions_bas": [503, 520, 522, 555, 581, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "cxx03_templates_function_templ": [503, 520, 522, 555, 584, 600, 606, 610, 619, 622, 623, 640, 647, 648, 649, 650, 651, 652, 750], "linux_sysprog_fileio_bas": [503, 555, 728, 749, 750, 827, 830, 831, 893, 922, 924, 932, 934, 948, 951, 954, 956], "linux_sysprog_basics_groupnod": [503, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956], "linux_basics_permissions_bas": [503, 555, 728, 749, 750, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 893, 922, 924, 932, 934, 948, 951, 954, 956], "linux_sysprog_basics_errorhandl": [503, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956], "linux_sysprog_basics_syscal": [503, 555, 728, 749, 750, 827, 830, 831, 893, 916, 922, 924, 932, 934, 948, 951, 954, 956], "linux_basics_shell_l": [503, 555, 728, 749, 750, 824, 825, 826, 827, 830, 831, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 864, 865, 868, 869, 871, 872, 873, 874, 875, 877, 893, 922, 924, 932, 934, 948, 951, 954, 956], "mockswitch_nopoli": [504, 505, 510], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 504, "nopoli": [504, 505, 506, 507, 508, 509, 510], "stripe": [120, 123, 504], "display_led_stripe_nopoly_suit": 504, "somewhere_in_the_middl": 504, "sw0": 504, "sw1": 504, "sw2": 504, "sw3": 504, "sw4": 504, "sw5": 504, "sw6": 504, "sw7": 504, "display_led_stripe_nopoly_suite__below_rang": 504, "below_rang": 504, "display_led_stripe_nopoly_suite__above_rang": 504, "above_rang": 504, "display_led_stripe_nopoly_suite__mov": 504, "movement": [504, 894], "set_temperatur": [504, 505, 506, 508], "display_led_stripe_nopoly_suite__vari": 504, "variation_2_switch": 504, "variation_interval_not_from_0": 504, "thermostat": 505, "threshold": 505, "nop_when_within_rang": 505, "hysteresis_suit": 505, "hyst": 505, "falls_below_rang": 505, "rises_above_rang": 505, "rises_above_range_when_on": 505, "sensor_avg_nopoly_suit": 506, "sensor_const_nopoly_suit": 507, "subsequ": 508, "sensor_mock_nopoly_suit": 508, "sensor_random_suit": [509, 513, 514], "uniformli": 509, "rd": 509, "obtain": [509, 726, 1045], "rng": 509, "tailor": 509, "switch_mock_suit": 510, "initial_st": [510, 1140], "set_on_off": 510, "initial_failur": 511, "failit": 511, "point_suit": [511, 575], "ctor_and_gett": 511, "coordin": [511, 557, 559, 566, 567, 677, 919], "ctor_and_getters_const": 511, "default_ctor": [511, 574, 575, 576, 577, 731], "equal_method": 511, "p3": 511, "p4": [511, 857], "assert_fals": [511, 516, 521, 523, 528, 557, 574, 575, 576, 577, 748], "equal_method_const": 511, "operator_equ": 511, "operator_equals_const": 511, "move_method": 511, "operator_plus_equ": 511, "add_method": 511, "new_p": 511, "add_method_const": 511, "operator_plu": [511, 574, 575, 576], "operator_plus_const": 511, "radiu": 511, "circle_suit": 511, "ctor_and_getters_using_operator_equ": 511, "14159": 511, "53981634": 511, "area_const": 511, "square_suit": 511, "bottom_left": [511, 577], "side_length": 511, "shape_suit": 511, "circle_is_a_shap": 511, "square_is_a_shap": 511, "area_is_shape_functionality__circl": 511, "area_is_shape_functionality__squar": 511, "human": [512, 514, 719, 857, 879, 971, 1016, 1102], "ineffici": [512, 635, 814, 933], "epath": 512, "bag_copy_suit": [512, 744], "find_by_int_ok": [512, 744, 745, 746], "find_by_int_nok": [512, 744, 745, 746], "remove_by_int_ok": [512, 744, 745, 746], "bag_unique_suit": [512, 746], "bag_shared_suit": [512, 745], "insert_const_ref": [512, 745], "insert_mov": [512, 745], "unrel": [513, 544, 553, 719, 735, 736, 740, 749, 750, 955, 965, 994, 1011, 1109], "tyo": 513, "sensor_const_suit": [513, 514], "is_a_sensor": [513, 514], "5731": 513, "aptli": 514, "23062": 514, "w1sensorfactori": 514, "find_by_address": 514, "sensor_w1_factory_suit": 514, "fstream": [514, 748], "tmpdir_fixtur": 514, "device_dir": 514, "create_directori": 514, "ofstream": [514, 748], "42459": 514, "temp_milli": [514, 515], "w1_fs_root": 514, "sensor_factori": 514, "0x02131d959eaa": 514, "assert_n": [514, 550, 573, 574, 709, 731, 745, 746], "horizon": 514, "0x012345678901": 514, "w1_sensor_suit": [514, 515], "test_read_sensor": [514, 515], "36700": 514, "basedir": 514, "0x2131d959eaa": 514, "dcmake_toolchain_fil": [515, 972, 986], "20687": 515, "write_temperatur": 515, "thaht": 515, "filename_pattern": 515, "xxxxxx": 515, "mkstemp": 515, "unlink": [515, 963, 965], "to_str": [515, 635], "off_t": [515, 923, 933, 938, 964], "lseek": [515, 933, 938, 964], "seek_set": [515, 923, 938, 964], "nwritten": [515, 927, 928, 929, 930, 935, 938, 964, 968], "algo": [516, 549, 550, 585, 586], "copy_into_vector": 516, "stl_exercises_suit": [516, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532], "required_cont": 516, "find_in_vector": 516, "my_vec": [516, 532], "wladimir": 516, "sort_in_plac": 516, "required_output": [516, 517, 518, 519, 531], "orig_input": [516, 517, 518, 519, 531], "alement": 517, "is_odd": 517, "filter_greater_10": 518, "filter_odd": 519, "map_insert": 521, "my_map": [521, 611, 612, 613, 614, 615], "map_insert_simpl": 521, "insert_check_dupl": 521, "map_insert_check_dupl": 521, "insert_remove_by_kei": 521, "map_insert_remove_by_kei": 521, "map_remove_by_kei": 521, "map_find": 521, "sensorrepositori": [522, 523, 524, 525, 526, 527, 528, 529, 530], "decript": 522, "sensor_repository_insert_dupl": 523, "add_sensor": [523, 524, 525, 526, 528, 529], "ofen": [523, 524, 525, 526, 528, 529], "weltraum": [523, 524, 525, 526, 528, 529], "mond": [523, 528], "sucess": 523, "sensor_repository_insert": 524, "sensor_repository_lookup_neg": 525, "get_sensor": [525, 526, 529], "sensor_repository_lookup_posit": 526, "complaint": 527, "ish": 527, "sensor_repository_remove_nonexist": 528, "remove_sensor": [528, 529], "sensor_repository_remov": 529, "sensor_repository_size_const": 530, "vector_append": 532, "vector_join": 532, "joined_cont": 532, "userdb_map": 533, "userdb_vector": 533, "dan": 533, "sak": 533, "cppcon": [533, 660, 662, 663, 676, 683, 701, 712, 735], "transcrib": 533, "mallocfre": 538, "arrayofinteg": 538, "memoryleak": 538, "arrayboundswrit": 538, "newdelet": 538, "singleinteg": 538, "deletemismatch": 538, "thing1": [540, 541], "thing2": [540, 541], "global_str": 541, "__have_thing_h__": 541, "_content": 541, "denstruct": 541, "destruct": [541, 562, 632, 663, 713, 839], "essenc": [541, 1135], "collaps": 544, "thoroughli": [544, 901], "_mem": [547, 693], "determinist": [547, 712, 726, 992, 1043], "maybeown": 547, "pointerarithmet": 550, "bugp": 550, "105ff": 550, "num_el": 550, "another_arrai": 550, "yet_another_arrai": 550, "108ff": 550, "basics_cxx03": 550, "basics_cxx11": 550, "cbegin": [550, 603, 622, 659, 670], "my_copi": 550, "naivecopi": 550, "cend": [550, 603, 622, 659], "algocopi": 550, "backinsert": 550, "back_insert_iter": [550, 591], "nah": [550, 1137], "insertfind": 550, "make_pair": [550, 613, 616, 704], "erasebyposit": 550, "erasebykei": 550, "domin": 556, "bjarn": 556, "stroustrup": 556, "1985": 556, "2003": [556, 1148], "point_c_suit": [557, 559], "struct_initi": 557, "point_init_default": 557, "c_default_constructor_init": 557, "point_create_default": 557, "c_default_constructor_cr": 557, "point_creat": [557, 559], "c_constructor": [557, 559], "eq": [557, 573, 575, 577], "point_equ": 557, "point_not_equ": 557, "eq_n": 557, "point_mov": [557, 559, 567, 569], "point_add": 557, "point_sub": 557, "add_sub": 557, "point_dist": 557, "point_ab": [557, 559], "hyp": [557, 559, 567], "unwant": [557, 608, 704, 775, 994, 1015, 1039], "cpp_copy_suit": 558, "generated_copy_ctor": 558, "copy1": [558, 714], "copy2": [558, 714], "copy3": 558, "copyabl": [311, 558], "manual_copy_suit": 558, "copy_ctor": [558, 713], "assignment_oper": 558, "earlier": 559, "point_h": [559, 567, 568], "point_cpp_suit": 559, "constructor_coordin": 559, "inaccessibil": 559, "move_op_pluseq": 559, "whenev": [560, 567, 577, 663], "sth": 561, "dirty_stack": 561, "use_uniniti": 561, "onward": [561, 565, 572], "nw": 562, "memberwis": 562, "_c_str": [562, 565, 666], "cxx03_data_encapsulation_copy_bas": [563, 652, 750], "cxx03_data_encapsulation_object_copi": [563, 652, 664, 695, 711, 720, 728, 747, 749, 750], "string_h": [565, 666], "cstring": [565, 666, 667, 700], "tcach": [565, 693], "221601": 565, "julian": [565, 714], "seward": [565, 714], "libvex": [565, 714], "rerun": [565, 714], "realloc": [565, 608], "0x484465b": 565, "1103": 565, "0x401210": 565, "0x401194": 565, "0x4dc8c80": 565, "0x401188": 565, "0x484222f": 565, "0x4011c5": 565, "0x40116f": 565, "freed": [565, 756, 926, 992], "destroi": [565, 627, 649, 668, 685, 700, 715, 726, 787], "221807": 565, "twostr": 565, "twotwostr": 565, "s21": 565, "s22": 565, "segfault": [565, 811, 969], "paraamet": 566, "__pretty_function__": 566, "0000000000401176": 566, "_z1fi": 566, "00000000004011a0": 566, "_z1fpc": 566, "demangl": 566, "anywher": [567, 990], "fab": [567, 568], "distance_origin": [567, 568, 718], "hid": 567, "standardes": 567, "d_orig": 568, "fpermiss": [568, 705], "arrog": 568, "goodi": [568, 895], "pascal": 570, "uninitil": 570, "pass_by_copi": 570, "references_suit": 570, "voila": [570, 901, 959, 972, 973, 983, 1014], "tediou": [570, 920, 973, 1047], "pass_by_point": 570, "pass_by_refer": 570, "pass_by_const_point": 570, "const_point": 570, "pass_by_const_refer": 570, "const_refer": 570, "pass_by_copy_expens": 570, "copy_expens": 570, "pass_by_const_reference_cheap": 570, "const_reference_cheap": 570, "addend": [571, 698, 718], "straightforwardli": [571, 1052], "add_point": 571, "static_suit": 571, "global_funct": 571, "static_method": 571, "bss": 572, "definition1": 572, "definition2": 572, "forbid": 572, "trickeri": 572, "points_equ": 573, "oddli": 573, "operators_suit": 573, "equals_glob": 573, "difficulti": 573, "equals_object": 573, "vector_addition_glob": 573, "vector_addition_object": 573, "point_plus_equ": 573, "combo": [574, 576], "cuboid_suit": 574, "front_bottom_left": 574, "point_whl_ctor": 574, "operator_eq_n": [574, 575, 576, 577], "operator_pluseq": [574, 575, 576], "operator_minuseq": [574, 576], "operator_minu": [574, 576], "operator_ostream": [574, 575, 576, 577], "buf": [574, 575, 576, 577, 915, 923, 933], "entirei": [574, 576, 577], "starting_point": 575, "implementation_in_cpp_fil": 575, "rectangle_suit": [575, 577], "pluseq": 575, "operator_unary_minu": [575, 576], "minus_p": [575, 576], "point3d_suit": 576, "coordinates_ctor": 576, "071067812": 576, "69041576": 576, "top_right": 577, "top_left": 577, "bottom_right": 577, "rational": [577, 611], "operator_plus_equal_vec": 577, "plus_vec": 577, "cxx03_functions_and_methods_static_member_vari": [578, 652, 750], "cxx03_functions_and_methods_exercise_class_point": [578, 652, 750], "cxx03_functions_and_methods_exercise_class_point3d": [578, 652, 750], "cxx03_functions_and_methods_exercise_class_rectangl": [578, 652, 750], "cxx03_functions_and_methods_exercise_class_cuboid": [578, 652, 750], "dothat": [579, 580], "dothi": [579, 580], "dothos": [579, 580], "dammit": [579, 580, 659], "thisexcept": 580, "thatexcept": 580, "thrown": [580, 968], "myexcept": 580, "error_detect": 580, "granular": [580, 768, 955], "typenam": [582, 583, 665, 672, 673, 674, 675, 677, 679, 680, 681, 686, 707, 713, 717, 727, 729], "a_begin": [586, 588], "a_end": [586, 588], "src_begin": [586, 590], "src_end": [586, 590], "dst_begin": [586, 590], "decai": 587, "zeroth": 587, "warrai": 589, "unflex": 591, "shrink_to_fit": 591, "prealloc": [591, 592], "wnonnul": 592, "gool": [593, 660], "cplusplu": [595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 616], "int_arrai": [595, 597, 601, 604], "binarili": 595, "is_el": 595, "original_begin": 596, "original_end": 596, "copy_run": 596, "original_run": 596, "int_array_c": 597, "match_666": 598, "match_42": 598, "x_equals_666": 598, "x_equals_4": 598, "x_equal": 598, "_criterion": 598, "yesno": [598, 824, 825], "output_stern": 599, "output_bindestrich": 599, "output_with_prefix": 599, "_prefix": 599, "cxx03_stl_algorithm_binary_search": [600, 619, 623, 652, 750], "cxx03_stl_algorithm_sort": [600, 619, 623, 652, 750], "cxx03_stl_algorithm_reverse_copi": [600, 619, 622, 623, 652, 750], "cxx03_stl_algorithm_revers": [600, 619, 622, 623, 652, 750], "cxx03_stl_algorithm_find_if": [600, 619, 623, 652, 750], "cxx03_stl_algorithm_lower_bound": [600, 619, 623, 652, 750], "cxx03_stl_algorithm_for_each": [600, 619, 623, 652, 750], "reversed_": [603, 622], "less_revers": 604, "greater_than": 604, "cluster_cxx03_stl_sequential_contain": [606, 619, 623, 652, 750], "cxx03_stl_sequential_containers_vector": [606, 619, 623, 652, 750], "cxx03_stl_sequential_containers_bas": [606, 619, 623, 652, 750], "cxx03_stl_sequential_containers_list": [606, 619, 623, 652, 750], "liek": 608, "logarithm": 608, "mein_int_arrai": 608, "insert_po": 608, "new_elems_as_vector": 608, "elems_to_insert": 608, "cxx03_stl_associative_containers_multimap": [610, 619, 623, 652, 750], "realiz": [611, 1043], "parameter": [611, 717, 722, 979, 993], "keytyp": [611, 655], "valuetyp": [611, 655], "some_map": 611, "key_typ": [611, 612], "mapped_typ": [611, 612], "value_typ": [611, 612], "emplac": 611, "collis": 611, "zweiundvierzig": 611, "out_of_rang": [611, 615], "mymap": [612, 613, 614, 615], "sechshundersechsundsechzig": 612, "kv": 612, "pre11": [612, 613], "einundfuenfzig": [612, 613, 614, 615], "vierundfuenfzig": [612, 613, 614, 615], "dreihundertsechsundvierzig": [612, 613, 614, 615], "tausendein": [612, 613, 614, 615], "tausendzwei": [612, 613, 614, 615], "retval_7": 613, "retval_2": 613, "n_remov": 614, "found_value_1001": 615, "found_value_666": 615, "found_valu": 615, "joerg_svnr": 616, "caro_svnr": 616, "johanna_svnr": 616, "philipp_svnr": 616, "datenzwilling_von_joerg": 616, "faschingzwil": 616, "meine_map": 616, "datenzwil": 616, "equal_rang": 616, "found_rang": 616, "svnr_notexist": 616, "1234567": 616, "memory_resourc": 617, "cluster_cxx03_stl_alloc": [618, 619, 623, 652, 750], "cxx03_stl_allocator_bas": [618, 619, 623, 652, 750], "cluster_cxx03_stl_exercis": [619, 620, 622, 623, 652, 750], "cluster_cxx03_stl_exercises_reverse_str": [619, 620, 622, 623, 652, 750], "cxx03_stl_exercises_reverse_string_exercis": [619, 620, 622, 623, 652, 750], "cxx03_stl_exercises_reverse_string_solut": [619, 622, 623, 652, 750], "auto_ptr": [624, 663, 1148], "cluster_cxx03_dynamic_memori": [625, 652, 750], "cxx03_dynamic_memory_todo": [625, 652, 750], "inher": [626, 627, 630, 632, 633, 957, 1045], "novirtu": [626, 627, 633], "mantra": [627, 822], "spoiler": [627, 1003], "cxx03_inheritance_oo_private_protect": [628, 652, 750], "derived1": 630, "derived2": 630, "countless": 630, "derived3": 630, "unimpl": [630, 1007], "polymorp": [632, 734], "strictli": [632, 901, 902, 1003], "indirect": [633, 719, 834, 988], "cluster_cxx03_standard_library_miscellanea": [634, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 750], "cxx03_standard_library_miscellanea_str": [634, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 750], "string_suit": 635, "another_hello": 635, "greeting1": 635, "greeting2": 635, "convert_to_signed_integ": 635, "stol": 635, "stoll": 635, "numstr": 635, "stoi": [635, 935, 938], "convert_to_unsigned_integ": 635, "stoull": 635, "stoui": 635, "stoul": 635, "convert_from_someth": 635, "basic_str": [635, 717, 748], "i_str": 635, "ui_str": 635, "666000": 635, "sprintf": [635, 935, 938, 968, 969], "print_char": 636, "cluster_cxx03_exercises_misc": [636, 637, 638, 639, 652, 750], "cxx03_exercises_misc_american_flag": [636, 638, 652, 750], "cxx03_exercises_misc_fh_moodle_quiz": [637, 638, 652, 750], "cxx03_exercises_misc_sum_integers_from_stdin": [638, 639, 652, 750], "ctrl": [639, 969, 1021], "cluster_cxx03_exercises_userdb": [640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_userdb_search": [640, 648, 649, 650, 652, 750], "cxx03_exercises_userdb_userdb_insert": [640, 647, 648, 649, 650, 652, 750], "cxx03_exercises_userdb_user_ctor": [640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_user_default_ctor": [640, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_user_const": [640, 643, 644, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_userdb_vector_bas": [640, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_userdb_search_notfound_except": [640, 649, 652, 750], "cxx03_exercises_userdb_userdb_search_find_if": [640, 648, 649, 652, 750], "cxx03_exercises_userdb_user_access_method": [640, 641, 643, 644, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_user_simple_method": [640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 750], "cxx03_exercises_userdb_user_const_memb": [640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 750], "architecton": 642, "celebr": 645, "trittsich": [645, 646], "age_by_n_year": 645, "user_init": 646, "userdb_insert": 647, "doesnotexist": [648, 650], "isvalid": [648, 649, 650], "unnatur": 649, "_user": [649, 799], "thereaft": 649, "wrinkl": 649, "usernotfound": 649, "unreach": [649, 912], "userdb_search_by_lastnam": 650, "undetect": 650, "userdb_init": 651, "cluster_cxx11": [653, 657, 664, 671, 682, 695, 696, 706, 711, 720, 728, 732, 735, 747, 749, 750], "cluster_cxx11_introduct": [653, 657, 695, 747, 749, 750], "cxx11_introduction_histori": [653, 657, 695, 747, 749, 750], "cxx11_introduction_overview_livehack": [653, 749, 750], "ugliest": 654, "todo_list": 655, "tdl": 655, "desc": 655, "key_value_pair": 655, "up_1_to_10": 655, "down_1000_to_980": 655, "todo_item": 655, "make_shar": [655, 716, 745], "todolist": 655, "nocopi": 655, "add_item": 655, "_list": 655, "evangelist": 655, "cstdint": [656, 685], "wchar_t": 656, "cluster_cxx11_new_language_featur": [657, 664, 671, 682, 695, 696, 706, 711, 720, 728, 747, 749, 750], "cluster_cxx11_new_language_features_brace_initi": [657, 695, 747, 749, 750], "cxx11_new_language_features_strongly_typed_enum": [657, 695, 747, 749, 750], "cxx11_new_language_features_auto": [657, 695, 747, 749, 750], "cxx11_new_language_features_brace_initialization_implementor_view": [657, 695, 749, 750], "cxx11_new_language_features_brace_initialization_mess": [657, 695, 749, 750], "cxx11_new_language_features_brace_initialization_intro": [657, 695, 747, 749, 750], "pointcloud": [658, 660], "_point": 658, "data_": [659, 661], "memoriz": 659, "brace_initialization_suit": 660, "explicit_ctor_cal": 660, "initlist_ctor_cal": 660, "explicit_ctor": 660, "initlist_ctor": 660, "disabigu": 660, "nightmar": [660, 663, 988], "size_": 661, "constexpr_suit": 662, "basic_const_is_constexpr": 662, "constexpr_function_request": 662, "constexpr_function_not_request": 662, "constexpr_recursive_funct": 662, "6765": 662, "constexpr_ctor": 662, "schurr": 662, "olsen": [663, 712], "nicolai": [663, 705, 708], "josutti": [663, 705, 708], "smartptr": [664, 695, 713, 714, 749, 750], "cluster_cxx11_smart_point": [664, 695, 711, 720, 728, 747, 749, 750], "cluster_cxx11_new_language_features_move_pf": [664, 695, 711, 720, 728, 747, 749, 750], "cxx11_perfect_forward": [664, 695, 749, 750], "cxx11_new_language_features_move_pf_overview": [664, 695, 711, 720, 728, 747, 749, 750], "cxx11_smart_pointers_introduct": [664, 695, 711, 720, 728, 747, 749, 750], "cxx11_new_language_features_miscellan": [664, 695, 711, 720, 728, 747, 749, 750], "cxx11_smart_pointers_unique_ptr": [664, 695, 711, 720, 728, 747, 749, 750], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [664, 695, 749, 750], "cxx11_new_language_features_move_pf_livehack_string_mov": [664, 695, 749, 750], "cxx11_new_language_features_move_pf_afterword": [664, 695, 749, 750], "_p": [665, 713], "handwritten_suit": [665, 713], "explicit_mov": [665, 713], "assert_double_eq": [665, 713, 714], "create_constant_sensor": [665, 715], "prove": [665, 836], "return_by_copi": 665, "another_sensor": 665, "assigne": 665, "dubiou": 665, "bugfre": 666, "string_move_suit": 666, "make_a_string_from": 666, "ret_": 666, "move_return": 666, "move_assign": 666, "assig": 666, "person_h": 667, "person_suit": 667, "contructor": 667, "outliv": [668, 990], "rvr": 668, "ado": [670, 940, 1104], "mytyp": 670, "spellabl": 670, "0x7ffcd604846c": 670, "0x7ffcd6048468": 670, "iref": 670, "0x7ffffefe2b54": 670, "0x7ffffefe2b50": 670, "0x7ffc59ebd7bc": 670, "ciref": 670, "0x7ffc23e46284": 670, "0x7ffe4a148064": 670, "0x7ffc528e013c": 670, "cluster_cxx11_new_language_features_concept": [671, 695, 749, 750], "cxx11_new_language_features_concepts_link": [671, 695, 749, 750], "cxx11_new_language_features_concepts_intro": [671, 695, 749, 750], "cxx11_new_language_features_concepts_writing_concept": [671, 695, 749, 750], "conceptless": 672, "4ul": [672, 673], "4l": [672, 673], "satisfact": 672, "is_integral_v": 672, "_tp": [672, 705, 715], "hendrik": 676, "niemey": 676, "hypotenus": [677, 678, 679, 680, 681], "sumsq": [677, 678, 679, 680, 681], "point2d": [677, 679, 680, 681], "dozen": 677, "ruin": 677, "5l": 677, "same_a": 677, "commone_reference_with": 677, "common_reference_with": [677, 681], "has_siz": [680, 681], "index_returns_doubl": 681, "cluster_cxx11_new_language_features_coroutin": [682, 695, 749, 750], "cxx11_new_language_features_coroutines_intro": [682, 695, 749, 750], "stackless": 683, "asio": 683, "co_return": [683, 687, 688, 689, 690, 691], "hello_inst": [683, 687, 688, 689, 690, 691], "promise_typ": [683, 685, 686, 688, 689, 690, 691], "get_return_object": [683, 685, 686, 688, 689, 690, 691], "suspend_alwai": [683, 685, 686, 688, 689, 690, 691], "initial_suspend": [683, 685, 686, 688, 689, 690, 691], "final_suspend": [683, 685, 686, 688, 689, 690, 691], "return_void": [683, 686, 688, 689, 690, 691], "unhandled_except": [683, 685, 686, 688, 689, 690, 691], "suspend_nev": [683, 685, 686, 690], "coroutine_handl": [683, 685, 686, 689, 690, 691], "from_promis": [683, 685, 686, 689, 690, 691], "_coro": [683, 685], "yield_valu": [683, 685, 686, 689, 690, 691], "sentinel": [683, 686, 690, 691, 705], "_promis": [683, 686, 689, 690, 691], "glue": 683, "deciph": 683, "diagrammat": 683, "wei": 683, "co_yield": [684, 685, 686, 687, 689, 690, 691], "_elem": 685, "ed": [686, 689, 690, 691, 886, 923], "lackingdefaultconstructor": 692, "ldc": 692, "hasdefaultconstructor": 692, "hmpf": 692, "hdc": 692, "ownsmemori": 693, "om_copi": 693, "incontin": 694, "leaf": [694, 876], "method1": 694, "method2": 694, "cluster_cxx11_new_language_features_rang": [695, 706, 749, 750], "cluster_cxx11_new_language_features_lambda": [695, 696, 749, 750], "cxx11_new_language_features_structured_bind": [695, 749, 750], "cxx11_new_language_features_range_based_for": [695, 747, 749, 750], "cxx11_new_language_features_fin": [695, 749, 750], "cxx11_new_language_features_delegating_ctor": [695, 749, 750], "cxx11_new_language_features_range_based_for_map": [695, 749, 750], "cxx11_new_language_features_livehack_smartptr_mov": [695, 749, 750], "cxx11_smart_pointers_introduction_livehack": [695, 711, 749, 750], "cxx11_new_language_features_constexpr": [695, 749, 750], "cxx11_new_language_features_overrid": [695, 749, 750], "cxx11_new_language_features_delet": [695, 749, 750], "cxx11_new_language_features_modul": [695, 749, 750], "cxx11_new_language_features_default": [695, 749, 750], "cxx11_new_language_features_ranges_intro": [695, 706, 749, 750], "cxx11_new_language_features_ranges_link": [695, 706, 749, 750], "cxx11_new_language_features_ranges_good_bad": [695, 706, 749, 750], "cxx11_new_language_features_lambda_lambda": [695, 696, 749, 750], "cxx11_new_language_features_lambda_lambda_captur": [695, 696, 749, 750], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [695, 696, 749, 750], "cxx11_new_language_features_lambda_lambda_is_functor": [695, 696, 749, 750], "elsewher": [697, 797, 997], "lamda": 697, "print_messag": [697, 699, 700], "create_print_funct": [697, 699, 700], "constantli": [698, 814, 956], "mere": 698, "catur": 698, "akin": 698, "lambda_capture_suit": 698, "explicit_by_copi": 698, "lambda_capure_suit": 698, "explicit_by_refer": 698, "dubio": 698, "explicit_mix": 698, "initialized_captur": 698, "all_by_refer": 698, "all_by_copi": 698, "all_by_copy_except": 698, "this_captur": 698, "_i": [698, 718], "add_to_yourself_and_guarantee_programmers_job_secur": 698, "print_message_func": [699, 700], "_messag": [699, 700], "piti": 700, "mpp": 701, "precompil": [701, 797, 971], "speedup": 701, "rei": 701, "bori": 701, "kolpackov": 701, "abandon": 701, "inde": 703, "range_based_for_suit": 704, "map_pre_11": 704, "map_bas": 704, "map_basic_const_auto_refer": 704, "ific": [704, 709], "map_unpack_copi": 704, "map_unpack_refer": 704, "map_unpack_const_refer": 704, "min_el": 705, "forward_rang": [705, 707], "drop_view": 705, "filter_view": 705, "ref_view": 705, "ranges_util": 705, "view_interfac": 705, "_deriv": 705, "sized_sentinel_for": 705, "decltyp": 705, "__cust": 705, "declval": 705, "__cust_access": 705, "__begin": 705, "_s_size": 705, "_m_deriv": 705, "forward_iter": 705, "coll": 705, "2nd": [705, 1137], "__cxx11": [705, 717, 748], "_vp": 705, "__simple_view": 705, "random_access_rang": [705, 707], "sized_rang": 705, "pretend": 705, "comitte": [705, 708], "lazili": 707, "first_two_drop": 707, "first_two_dropped_next_two_taken": 707, "oldstyl": 707, "inspir": 707, "refin": 707, "input_rang": 707, "bidirectional_rang": 707, "backward": [707, 772, 857, 889, 894, 1020, 1124], "contiguous_rang": 707, "tristan": 708, "brindl": 708, "cppnorth": 708, "l0bhzp6hmdm": 708, "nico": 708, "accu": 708, "rust": [708, 971], "parrai": 709, "decompos": 709, "structured_binding_suit": 709, "struct_copi": 709, "struct_refer": 709, "struct_const_refer": 709, "tuple_copi": 709, "make_tupl": 709, "affect": 709, "tuple_refer": 709, "tuple_const_refer": 709, "array_copi": 709, "array_refer": 709, "array_const_refer": 709, "suspici": 709, "designwis": 710, "uptr": 710, "cxx11_smart_pointers_shared_ptr": [711, 720, 728, 747, 749, 750], "cxx11_smart_pointers_closing_word": [711, 720, 728, 749, 750], "cxx11_smart_pointers_weak_ptr": [711, 747, 749, 750], "myclass": [712, 714], "unwind": 712, "yoky6hzlkx": 712, "steal": [713, 957], "cxx11_unique_ptr_sensors_h": 713, "_temp": 713, "basic_const": 713, "raw_": 713, "raw_s_ref": 713, "copy_ctor_bad": 713, "assignment_operator_bad": 713, "gtest_filt": [713, 714, 1135], "reveal": [713, 990], "vtabl": 713, "autoptr": 713, "copy_ctor_good_autoptr_styl": 713, "unexpectedli": 713, "assignment_operator_good_autoptr_styl": 713, "destiat": 713, "excus": 714, "shared_ptr_suit": 714, "rs1": [714, 715], "rs2": [714, 715], "rand1": [714, 715, 716], "rand2": [714, 715, 716], "cann": 714, "basic_make_shar": 714, "set_refer": 714, "_ref": 714, "cyclic_refer": 714, "303549": 714, "unique_ptr_suit": 715, "threw": 715, "ownership_error": 715, "cxx11": [715, 748], "unique_ptr_suite_ownership_error_test": 715, "testbodi": 715, "_dp": 715, "default_delet": 715, "verbose_ctor": 715, "make_unique_auto": 715, "tranfer": 715, "create_random_sensor": 715, "implicit_ownership_transf": 715, "holdsasensor": 715, "taking_ownership_in_own_cod": 715, "sompil": 715, "raw1": 715, "tie": 716, "unti": 716, "weak_ptr_suit": 716, "borrowed_sensor": 716, "another_refer": 716, "sensor_ref": 716, "measurement_thread": 716, "rvref": 717, "lo_funct": 717, "adventur": 717, "grimm": 717, "jaud": 717, "factset": 717, "570f242261f8": 717, "suffer": [718, 902], "origin_dist": 718, "criteria": [718, 841, 1124], "predic": 718, "void_funct": 718, "bind_suit": 718, "plain_void_funct": 718, "one_parameter_funct": 718, "plain_one_parameter_funct": 718, "minus_hardcod": 718, "_1_minus_2": 718, "minus_swap_paramet": 718, "second_minus_first": 718, "_2": [718, 719], "minus_hardcode_first_paramet": 718, "_42_minus_param": 718, "funcfunc": 718, "tradeoff": [718, 802], "oneimplement": 719, "anotherimplement": 719, "do_much_work": 719, "c_using_on": 719, "c_using_anoth": 719, "explanatori": 719, "trampolin": 719, "rtti": 719, "pod": 719, "metaphys": 719, "ostreamlogg": 719, "databaselogg": 719, "logfunc_t": 719, "funcptrlogg": 719, "somebusinessclasswithneedforlog": 719, "successfulli": [719, 817, 832, 1123, 1130], "do_stupid_log": 719, "ostream_logg": 719, "database_logg": 719, "funcptr_logg": 719, "busy_logging_to_ostream": 719, "busy_logging_to_databas": 719, "busy_logging_to_funcptr": 719, "foo_func": 719, "explos": 719, "cluster_cxx11_functions_funct": [720, 728, 749, 750], "cxx11_functions_functions_bind": [720, 728, 749, 750], "cxx11_functions_functions_funct": [720, 728, 749, 750], "msdn": 721, "devil": 721, "singlethread": 721, "god": 721, "paralleliz": 722, "cancel": [722, 947], "interlockedincr": 724, "mutual": [725, 1005], "try_lock": 725, "try_lock_for": 725, "unavail": 725, "try_lock_until": 725, "time_point": [725, 730], "do_something_errorpron": 726, "do_more_of_it": 726, "wake": [727, 779, 789, 920, 944, 953, 959], "waiter": [727, 789, 814, 944], "stop_wait": 727, "wait_for": [727, 729], "wait_until": [727, 729], "notify_on": 727, "notify_al": 727, "thunder": 727, "herd": 727, "condvar": 727, "threadsafequeu": 727, "maxelem": 727, "_maxelem": 727, "dur": [727, 729], "scoped_lock": [727, 729], "_lock": [727, 729], "pop_front": 727, "2m": [727, 729, 894], "1m": [727, 822, 894], "consumer1": 727, "consumer2": 727, "pthread_cond_init": [727, 944], "_not_empti": 727, "_not_ful": 727, "pthread_cond_wait": [727, 944], "pthread_cond_sign": [727, 944], "pthread_cond_t": [727, 944], "unique_lock": 727, "cluster_linux_sysprog_schedul": [728, 749, 750, 893, 934, 948, 954, 956], "cluster_linux_sysprog_posix_thread": [728, 749, 750, 893, 934, 948, 954], "cluster_linux_sysprog_blocking_io": [728, 749, 750, 827, 830, 831, 893, 922, 934, 948, 954, 956], "cluster_cxx11_multithread": [728, 749, 750], "linux_sysprog_scheduling_bas": [728, 749, 750, 893, 934, 948, 954, 956], "linux_sysprog_blocking_io_blocking_io": [728, 749, 750, 827, 830, 831, 893, 922, 934, 948, 954, 956], "linux_sysprog_posix_threads_condition_vari": [728, 749, 750, 893, 934, 948], "linux_sysprog_posix_threads_exercise_mutex": [728, 749, 750, 893, 934, 948], "linux_sysprog_posix_threads_bas": [728, 749, 750, 893, 934, 948, 954], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [728, 749, 750, 893, 934, 948, 954], "linux_sysprog_posix_threads_lifecycl": [728, 749, 750, 893, 934, 948, 954], "linux_sysprog_posix_threads_mutex": [728, 749, 750, 893, 934, 948, 954], "cxx11_multithreading_condition_vari": [728, 749, 750], "cxx11_multithreading_promise_futur": [728, 749, 750], "cxx11_multithreading_mutex": [728, 749, 750], "cxx11_multithreading_race_condit": [728, 749, 750], "cxx11_multithreading_thread": [728, 749, 750], "cxx11_multithreading_atom": [728, 749, 750], "cxx11_multithreading_introduct": [728, 749, 750], "cxx11_multithreading_chrono": [728, 749, 750], "cxx11_multithreading_scoped_lock": [728, 749, 750], "get_futur": 729, "set_except": 729, "exception_ptr": 729, "shared_futur": 729, "uncoordin": 729, "ten_million_years_": 729, "answer_poll_interval_m": 729, "answer_valid": 729, "chew_answ": 729, "timespec": [729, 944, 955, 965], "reaction": [729, 912, 994], "answer_computation_tim": 729, "answer_poll_interv": 729, "ten_million_year": 729, "lockguard": 729, "_answer_valid": 729, "_answer": 729, "_data": [729, 985], "binary_semaphor": 729, "__cplusplu": 729, "202001l": 729, "_notifi": 729, "answer_promis": 729, "answer_futur": 729, "make_exception_ptr": 729, "epoch": [730, 964], "time_t": 730, "notion": 730, "system_clock": 730, "monoton": [730, 805, 807], "ntp": 730, "steady_clock": 730, "timepoint": 730, "steadili": 730, "high_resolution_clock": 730, "brand": 730, "spent_milli": 730, "duration_cast": 730, "variant_suit": 731, "holds_altern": 731, "converting_ctor": 731, "bad_access": 731, "visit": [731, 735, 739, 749, 750], "int_seen": 731, "float_seen": 731, "charp": 731, "string_charp": 731, "no_default_ctor": 731, "cluster_cxx11_miscellan": [732, 735, 749, 750], "cxx11_miscellaneous_vari": [732, 735, 749, 750], "aligned_alloc": 733, "alignof": 733, "pmr": 733, "_temperatur": [734, 736, 738, 740], "tadaa": 750, "klau": 735, "iglberg": 735, "cluster_cxx11_embedded_problem": [735, 749, 750], "cxx11_embedded_problems_variant_automatic_visit": [735, 749, 750], "cxx11_embedded_problems_variant_manual_visit": [735, 749, 750], "cxx11_embedded_problems_variant_manual_if": [735, 749, 750], "cxx11_embedded_problems_unrel": [735, 749, 750], "cxx11_embedded_problems_classic_virtu": [735, 749, 750], "cxx11_embedded_problems_related_no_virtu": [735, 749, 750], "cxx11_embedded_problems_type_erasur": 750, "static_cast": [736, 748], "derivedtyp": 736, "tye": [], "sensorbas": [], "_visitor": [], "sensorptr": 738, "get_temperature_visitor": [739, 741], "bagcopi": 744, "find_by_int": [744, 745, 746], "remove_by_int": [744, 745, 746], "nremov": [744, 745, 746], "bagshar": 745, "weakref": 745, "sharedref": 745, "baguniqu": 746, "constbag": 746, "cluster_cxx11_exercis": [747, 749, 750], "cxx11_exercises_bag_shar": [747, 749, 750], "cxx11_exercises_bag_uniqu": [747, 749, 750], "cxx11_exercises_bag_copi": [747, 749, 750], "withing": 748, "filesystem_suit": 748, "cd_to_tmpdir_fixtur": 748, "path_compose_compar": 748, "path_compose_compare_2": 748, "is_absolut": 748, "is_rel": 748, "path_abs_rel": 748, "abspath": 748, "relpath": 748, "parent_path": 748, "remove_filenam": 748, "replace_filenam": 748, "replace_extens": 748, "path_component_access": 748, "filename_part": 748, "dir_part": 748, "path_iter": 748, "current_directori": 748, "cwd_chdir": 748, "current_path": 748, "create_directory_error": 748, "filesystem_error": 748, "char_trait": 748, "char_typ": 748, "_chart": 748, "_trait": 748, "_alloc": 748, "_s_copi": 748, "size_typ": 748, "_m_replac": 748, "tcc": 748, "2171": 748, "canonicalizeforstdlibvers": 748, "__builtin_memcpi": 748, "9223372036854775810": 748, "9223372036854775813": 748, "__s1": 748, "__s2": 748, "create_directory_singl": 748, "is_regular_fil": 748, "create_directory_multipl": 748, "is_directori": 748, "is_block_fil": 748, "is_character_fil": 748, "is_empti": 748, "is_fifo": 748, "is_oth": 748, "is_socket": 748, "is_symlink": 748, "greatest": 748, "nov": [748, 787, 853, 879, 901, 985, 1021, 1050], "inod": [748, 756, 763], "919153": 748, "0644": [748, 842, 856], "system_u": 748, "object_r": 748, "passwd_file_t": 748, "s0": 748, "111282886": 748, "0100": 748, "737858445": 748, "743858359": 748, "file_s": 748, "hard_link_count": 748, "last_write_tim": 748, "ext4": [748, 797], "btrf": 748, "ntf": 748, "directory_iter": 748, "subdir1": 748, "subdir2": 748, "file1": [748, 766, 882], "file2": [748, 766, 882], "dirit": 748, "recursive_directory_iter": 748, "cxx11_filesystem": [749, 750], "cluster_linux_toolchain_raspi": [750, 893, 976, 978, 981, 982], "cluster_linux_toolchain_cross": [750, 893, 975, 976, 978, 980, 981, 982], "cluster_linux_toolchain_exercis": [750, 893, 976, 977, 978, 979, 980, 981], "cluster_linux_sysprog_intro_hw": [750, 893, 934, 936], "cluster_linux_sysprog_process": [750, 893, 934], "cluster_linux_kernel": [750, 754, 757, 759, 762, 764, 767, 769, 771, 773, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 801, 803, 806, 808, 812, 815, 818, 893], "cluster_linux_ssh": [750, 893, 905, 906, 907, 908, 909, 981, 982], "cluster_linux_ssh_exercis": [750, 893, 905, 906, 907, 908, 909], "cluster_linux_basics_archiving_compress": [750, 820, 827, 893, 981, 982], "cluster_linux_basics_shell_exercis": [750, 824, 825, 826, 827, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 893], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [750, 824, 825, 826, 827, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 877, 893], "cluster_linux_basics_shell_exercises_l": [750, 827, 871, 872, 873, 874, 875, 877, 893], "cluster_linux_basics_permissions_exercis": [750, 827, 843, 846, 847, 848, 849, 850, 851, 852, 893], "cluster_linux_basics_io_redir_pip": [750, 827, 838, 893], "cluster_linux_basics_text_tool": [750, 827, 887, 893], "cluster_linux_basics_exercis": [750, 824, 825, 826, 827, 893], "cluster_linux_hardwar": [750, 893, 899, 900], "cluster_linux_hardware_can": [750, 893, 899, 900], "cluster_unittest": [750, 1133], "linux_toolchain_shared_librari": [750, 893, 981], "linux_basics_intro_environ": [750, 827, 831, 877, 893, 934, 981, 982], "linux_toolchain_cmake_cross": [750, 893, 981], "linux_toolchain_raspi_linaro_pi": [750, 893, 981, 982], "defunct": [750, 893, 981, 982], "linux_toolchain_cross_bas": [750, 893, 975, 976, 978, 980, 981, 982], "linux_ssh_bas": [750, 893, 905, 906, 907, 908, 909, 981, 982], "linux_ssh_scp": [750, 893, 905, 906, 907, 909, 981, 982], "linux_basics_archiving_compression_tar": [750, 820, 827, 893, 981, 982], "linux_toolchain_raspi_docker_fedora_wsl": [750, 893, 981, 982], "linux_toolchain_raspi_detail": [750, 893, 981, 982], "linux_toolchain_raspi_toolchain_setup": [750, 893, 976, 978, 981, 982], "linux_toolchain_exercises_fh_moodle_quiz": [750, 893, 977, 978, 981], "linux_toolchain_exercises_raspberry_toolchain": [750, 893, 978, 980, 981], "linux_toolchain_exercises_native_build": [750, 893, 978, 979, 981], "linux_toolchain_exercises_cross_build": [750, 893, 976, 978, 981], "linux_sysprog_ev": [750, 893, 934], "linux_sysprog_sign": [750, 893, 934], "linux_sysprog_ipc": [750, 893, 934], "linux_sysprog_fileio_misc": [750, 893, 932, 934, 951], "linux_sysprog_fileio_dupl": [750, 893, 932, 934, 951], "linux_sysprog_fileio_fileio_group": [750, 893, 932, 934, 951], "linux_sysprog_fileio_example_o_rdonli": [750, 893, 932, 934, 951], "o_rdonli": [750, 755, 893, 919, 923, 924, 927, 930, 931, 932, 934, 935, 938, 951, 961, 964, 968], "linux_sysprog_fileio_example_o_wronli": [750, 893, 932, 934, 951], "linux_sysprog_fileio_basics_exercise_copi": [750, 893, 924, 932, 934, 951], "linux_sysprog_fileio_basics_exercise_hol": [750, 893, 932, 934, 951], "linux_sysprog_fileio_example_o_creat": [750, 893, 932, 934, 951], "linux_sysprog_fileio_example_o_excl": [750, 893, 932, 934, 951], "o_excl": [750, 893, 923, 924, 932, 934, 951, 964], "linux_sysprog_posix_threads_miscellan": [750, 893, 934, 948], "linux_sysprog_posix_threads_exercise_condition_vari": [750, 893, 934, 948], "linux_sysprog_posix_threads_last_warn": [750, 893, 934, 948], "linux_sysprog_posix_threads_mutex_trylock": [750, 893, 934, 948], "trylock": [750, 893, 934, 942, 948], "islock": [750, 893, 934, 942, 948], "linux_sysprog_intro_hw_get": [750, 893, 934, 936], "linux_sysprog_intro_hw_sysfs_gpio": [750, 893, 934, 936], "linux_sysprog_intro_hw_watch": [750, 893, 934, 936], "linux_sysprog_scheduling_realtime_api": [750, 893, 934, 954], "linux_sysprog_scheduling_realtim": [750, 893, 934, 954, 956], "linux_sysprog_scheduling_wakeup_lat": [750, 893, 934, 954, 956], "linux_sysprog_scheduling_processes_and_thread": [750, 893, 934, 954, 956], "linux_sysprog_scheduling_exam_quest": [750, 893, 934, 954, 956], "linux_sysprog_blocking_io_blocking_io_tim": [750, 893, 922, 934], "linux_sysprog_blocking_io_blocking_io_network": [750, 893, 922, 934], "linux_sysprog_blocking_io_blocking_io_fil": [750, 827, 830, 831, 893, 922, 934], "linux_sysprog_process_tre": [750, 893, 934], "linux_sysprog_process_commandlin": [750, 893, 934], "linux_basics_intro_process_tre": [750, 827, 831, 843, 846, 847, 848, 849, 850, 851, 852, 893, 905, 906, 907, 908, 909, 934, 981, 982], "linux_kernel_interrupt": [750, 774, 778, 780, 792, 794, 801, 806, 812, 815, 818, 893], "linux_kernel_process_vs_atom": [750, 759, 764, 767, 769, 774, 778, 780, 784, 788, 790, 792, 794, 796, 801, 803, 806, 808, 812, 815, 818, 893], "linux_kernel_cdev_manu": [750, 754, 757, 759, 762, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_modules_hello_world": [750, 754, 757, 759, 762, 764, 767, 774, 776, 778, 782, 788, 794, 801, 806, 812, 815, 818, 893], "linux_kernel_fedora_module_build": [750, 754, 757, 759, 762, 764, 767, 773, 774, 776, 778, 782, 788, 794, 801, 806, 812, 815, 818, 893], "linux_kernel_dma": [750, 769, 774, 792, 794, 893], "linux_kernel_kmalloc": [750, 759, 764, 767, 769, 774, 778, 788, 792, 794, 801, 806, 812, 815, 818, 893], "linux_kernel_iomemori": [750, 774, 782, 794, 893], "linux_kernel_fedora_kernel_build": [750, 754, 757, 759, 762, 764, 767, 771, 773, 774, 776, 778, 782, 788, 794, 801, 806, 812, 815, 818, 893], "linux_kernel_cdev_first_function": [750, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_cdev_file_oper": [750, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_list": [750, 759, 764, 767, 774, 778, 786, 788, 801, 806, 812, 815, 818, 893], "doubli": [750, 759, 763, 764, 767, 774, 778, 787, 788, 799, 801, 806, 812, 815, 818, 893], "linux_kernel_cdev_auto": [750, 754, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_stub_sysprog_dup": [750, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "dup": [750, 756, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 840, 893, 926, 965], "stub": [750, 757, 759, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893, 984], "linux_kernel_waitqueu": [750, 774, 815, 893], "linux_kernel_usermem": [750, 774, 812, 815, 893], "linux_kernel_workqueu": [750, 774, 812, 815, 818, 893], "linux_kernel_timer_cod": [750, 774, 806, 812, 815, 818, 893], "linux_kernel_spinlock_cod": [750, 774, 801, 806, 812, 815, 818, 893], "linux_kernel_tim": [750, 774, 806, 808, 812, 815, 818, 893], "linux_kernel_interrupt_cod": [750, 774, 778, 801, 806, 812, 815, 818, 893], "linux_kernel_spinlock": [750, 774, 801, 803, 806, 812, 815, 818, 893], "linux_kernel_mutex": [750, 774, 778, 788, 790, 801, 806, 812, 815, 818, 893], "linux_kernel_raspi_kernel_build": [750, 774, 778, 798, 801, 806, 812, 815, 818, 893], "linux_kernel_mutex_cod": [750, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_multiple_devic": [750, 764, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_kernel_pci": [750, 774, 794, 893], "linux_kernel_netdev": [750, 774, 792, 893], "linux_kernel_cdev_refactor": [750, 764, 767, 774, 778, 788, 801, 806, 812, 815, 818, 893], "linux_basics_intro_login": [750, 827, 831, 843, 846, 847, 848, 849, 850, 851, 852, 893, 905, 906, 907, 908, 909, 981, 982], "linux_ssh_key_pair": [750, 893, 905, 906, 907, 908, 909], "linux_ssh_link": [750, 893, 909], "linux_ssh_sshf": [750, 893, 909], "linux_ssh_portforward": [750, 893, 909], "linux_ssh_exercises_copy_tre": [750, 893, 906, 907, 909], "linux_ssh_exercises_copy_fil": [750, 893, 905, 906, 907, 909], "linux_ssh_exercises_pubkei": [750, 893, 905, 906, 907, 908, 909], "linux_basics_archiving_compression_gzip": [750, 820, 827, 893, 981, 982], "linux_basics_archiving_compression_overview": [750, 820, 827, 893, 981, 982], "linux_basics_archiving_compression_exercis": [750, 820, 827, 893], "linux_basics_intro_wsl": [750, 827, 831, 893], "linux_basics_intro_demo_everything_is_a_fil": [750, 827, 830, 831, 893], "linux_basics_intro_fh_moodle_quiz": [750, 827, 830, 831, 893], "linux_basics_shell_cp": [750, 824, 825, 826, 827, 861, 862, 864, 865, 868, 869, 871, 877, 893], "linux_basics_shell_fh_moodle_quiz": [750, 827, 870, 877, 893], "linux_basics_shell_configfil": [750, 827, 877, 893], "linux_basics_shell_mv": [750, 827, 877, 893], "linux_basics_shell_link": [750, 827, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [750, 824, 825, 826, 827, 861, 862, 863, 864, 865, 866, 868, 869, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [750, 824, 825, 826, 827, 861, 862, 863, 864, 865, 868, 869, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [750, 827, 861, 864, 865, 868, 869, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [750, 827, 865, 868, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [750, 827, 861, 865, 868, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [750, 827, 861, 865, 868, 869, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [750, 827, 865, 867, 871, 877, 893], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [750, 827, 861, 862, 865, 868, 869, 871, 877, 893], "linux_basics_shell_exercises_ls_dev_typ": [750, 827, 871, 872, 874, 877, 893], "linux_basics_shell_exercises_ls_home_permiss": [750, 827, 871, 874, 875, 877, 893], "linux_basics_shell_exercises_ls_etc_passwd_s": [750, 827, 871, 873, 874, 877, 893], "linux_basics_permissions_fh_moodle_quiz": [750, 827, 844, 852, 893], "linux_basics_permissions_setuid_livedemo": [750, 827, 852, 893], "linux_basics_permissions_setuid": [750, 827, 852, 893], "linux_basics_permissions_fh_moodle_quiz_nocheat": [750, 827, 845, 852, 893], "linux_basics_permissions_umask": [750, 827, 852, 893], "linux_basics_permissions_sticki": [750, 827, 852, 893], "linux_basics_permissions_exercises_public_directori": [750, 827, 846, 849, 850, 852, 893], "linux_basics_permissions_exercises_credenti": [750, 827, 843, 846, 847, 848, 849, 850, 851, 852, 893], "linux_basics_permissions_exercises_shared_fil": [750, 827, 846, 851, 852, 893], "linux_basics_permissions_exercises_public_directory_quest": [750, 827, 846, 850, 852, 893], "linux_basics_permissions_exercises_private_directory_quest": [750, 827, 846, 848, 852, 893], "linux_basics_permissions_exercises_private_directori": [750, 827, 846, 847, 848, 852, 893], "linux_basics_io_redir_pipes_exercis": [750, 827, 838, 893], "linux_basics_io_redir_pipes_io_redir": [750, 827, 838, 893], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [750, 827, 838, 893], "linux_basics_io_redir_pipes_pip": [750, 827, 838, 893], "linux_basics_text_tools_grep": [750, 827, 887, 893], "linux_basics_text_tools_less": [750, 827, 887, 893], "linux_basics_text_tools_head_tail": [750, 827, 887, 893], "linux_basics_text_tools_cut": [750, 827, 887, 893], "linux_basics_text_tools_cat": [750, 827, 887, 893], "linux_basics_text_tools_overview": [750, 827, 887, 893], "linux_basics_text_tools_find": [750, 827, 887, 893], "linux_basics_text_tools_exercis": [750, 827, 887, 893], "linux_basics_exercises_fh_ss2022_exam_01_g2": [750, 825, 826, 827, 893], "linux_basics_exercises_fh_ss2022_exam_01_g1": [750, 824, 826, 827, 893], "linux_hardware_brushless_motor": [750, 893, 900], "brushless": [750, 893, 900], "linux_hardware_pwm": [750, 893, 900], "linux_hardware_w1": [750, 893, 900], "linux_hardware_i2c": [750, 893, 900], "linux_hardware_can_hardwar": [750, 893, 899, 900], "linux_hardware_can_interfac": [750, 893, 899, 900], "linux_hardware_can_intro": [750, 893, 899, 900], "linux_hardware_can_program": [750, 893, 899, 900], "unittest_gtest_cmak": [750, 1133], "interconnect": 751, "device_cr": [752, 753, 756], "cdev_init": [752, 760, 761], "cdev_add": [752, 760, 761], "unhappi": 752, "device_destroi": 752, "my_class": 752, "my_driv": [752, 755, 765, 766, 777, 787, 793, 799, 805, 816], "mknod": [752, 760, 761], "character devic": [753, 756, 761, 1153], "relatim": 753, "register_chrdev_region": [753, 760, 761], "alloc_chrdev_region": [753, 761], "htmldoc": 753, "chrdev": 753, "dev_t": [753, 761], "baseminor": 753, "highlight": 753, "bug_on": 753, "module_licens": [753, 775], "openat": [755, 919], "at_fdcwd": [755, 919], "0x7f3d11330000": 755, "einval": [755, 760, 775, 813], "enotti": 755, "file_oper": [756, 760, 761, 799], "citizenship": 756, "__user": [756, 811], "loff_t": 756, "unlocked_ioctl": 756, "my_op": 756, "this_modul": 756, "my_open": 756, "my_read": 756, "my_writ": 756, "my_ioctl": [756, 787], "mode_t": [756, 923, 927, 965], "filp": [756, 799, 813], "vf": 756, "swiss": [756, 923, 1148], "armi": [756, 923, 1148], "my_ioctl_request": [756, 758], "my_request_such": 756, "my_request_such_and_such": 756, "laden": [756, 1162], "endod": 756, "_iow": 756, "_ior": 756, "_ioc": 756, "_ioc_non": 756, "_ioc_read": 756, "_ioc_typecheck": 756, "_ioc_writ": 756, "_iowr": 756, "my_ev": [758, 765, 766, 805, 810], "my_event_typ": 758, "my_event_ioctl": 758, "jiffi": [758, 799, 805], "my_event_list": [758, 765, 766, 787], "list_head": [758, 785, 787, 810], "num_ev": 758, "my_event_list_init": 758, "my_event_list_destroi": 758, "my_event_list_add": [758, 787, 800, 805, 816], "my_ioctl_add_ev": 758, "printk": [758, 775, 777, 816], "unregister_chrdev_region": [760, 761], "caveat": [760, 799, 902], "register_chrdev": 760, "unregister_chrdev": 760, "kern_err": 760, "cdev_del": [760, 761], "my_driver_henkel": 760, "kmem": 761, "opaqu": 761, "majmin": 761, "mkdev": 761, "drivernam": 761, "my_fop": 761, "my_cdev": 761, "devicefil": 761, "ndevic": 763, "module_param": 763, "my_devic": [763, 765, 766, 777, 793, 805], "private_data": [763, 793, 799], "kbuild": [765, 766], "torn": [765, 1140], "ccflag": [765, 766], "container_of": [766, 817], "file3": 766, "distinct": [766, 833, 917, 1044], "my_device_init": 766, "my_device_destroi": [766, 805], "everyt": 768, "vmalloc": 768, "ioremap": [768, 781], "iommu": 768, "pysic": 768, "dma_addr_t": 768, "alloc_pag": 768, "gfp_mask": 768, "get_free_pag": 768, "__get_free_pag": 768, "2order": 768, "__get_dma_pag": 768, "zone": 768, "__free_pag": 768, "free_pag": 768, "addr": [768, 781, 793, 897, 902, 920, 964, 1128], "dma_handl": 768, "cpu_addr": [768, 793], "dma_alloc_coher": 768, "gfp": [768, 783, 809], "dma_free_coher": 768, "pci_dev": [768, 793], "gfp_kernel": [768, 783, 800], "gfp_atom": [768, 783], "dma_bidirect": 768, "dma_to_devic": 768, "dma_from_devic": 768, "dma_map_singl": 768, "dma_mapping_error": 768, "fuck": 768, "dma_unmap_singl": 768, "dma_map_pag": 768, "dma_unmap_pag": 768, "dma_address": 768, "sglist": 768, "sg_run": 768, "dma_map_sg": 768, "for_each_sg": 768, "hw_address": 768, "sg_dma_address": 768, "hw_len": 768, "sg_dma_len": 768, "dma_unmap_sg": 768, "nent": 768, "unmap": [768, 793], "recreat": [768, 869, 987], "dma_sync_single_for_cpu": 768, "dma_sync_sg_for_cpu": 768, "mel": [768, 783], "gorman": [768, 783], "incredibli": 768, "transcript": [770, 797, 1094], "building_a_custom_kernel": 770, "fc33": [770, 775], "extravers": [770, 798], "cleanli": 770, "uncommit": 770, "j6": 770, "fedpkg": 770, "pesign": 770, "grubbi": 770, "33rd": 770, "f33": 770, "builddep": 770, "libexec": [770, 983], "symver": [772, 775], "modpost": [772, 775], "module_src": 772, "kernel_build": 772, "install_mod_path": [772, 797], "modules_instal": [772, 797, 901], "fedora_kernel_build": 774, "fedora_module_build": 774, "modules_hello_world": 774, "cdev_manu": 774, "process_vs_atom": 774, "stub_sysprog_dup": 774, "cdev_auto": 774, "cdev_file_oper": 774, "cdev_first_function": 774, "cdev_refactor": 774, "multiple_devic": 774, "mutex_cod": 774, "raspi_kernel_build": 774, "interrupt_cod": 774, "spinlock_cod": 774, "timer_cod": 774, "iomemori": 774, "usermem": 774, "netdev": 774, "waitqueu": [774, 1153], "ldd3": [774, 785], "reilli": [774, 886], "probe": [775, 901, 902, 903], "hello_init": 775, "kern_debug": 775, "hello_exit": 775, "module_init": 775, "module_exit": 775, "exot": 775, "currect": [775, 870], "lsmod": [775, 901, 902, 903], "insmod": 775, "modprob": [775, 797, 798, 896, 901, 902, 903], "rmmod": [775, 805], "dep": 775, "softdep": 775, "rebuilt": 775, "depmod": [775, 793], "cross_compil": [777, 797, 798], "libssl": [777, 901], "gpio_request": 777, "gpio_fre": 777, "gpio_direction_input": 777, "gpio_direction_output": 777, "gpio_to_irq": 777, "my_device_activate_gpio": 777, "_destroi": 777, "3f200000": 777, "pinctrl": 777, "bcm2835": [777, 898], "request_irq": [777, 779, 793], "free_irq": [777, 779, 793], "priorit": [779, 795, 895, 953, 965], "preempt_rt": [779, 789, 1143], "mainlin": [779, 797, 957, 1143], "irqreturn_t": [779, 793], "irq_handl": [779, 793], "irq": [779, 793, 795, 799, 955], "opqu": 779, "irq_non": 779, "irq_wake_thread": 779, "irq_handler_t": 779, "irqf_shar": [779, 793], "irqf_trigger_ris": 779, "irqf_trigger_fal": 779, "irqf_trigger_high": 779, "irqf_trigger_low": 779, "iomem": 781, "ioport": 781, "request_mem_region": 781, "0x20200000": 781, "release_mem_region": 781, "asm": [781, 986], "iounmap": 781, "ioread8": 781, "ioread16": 781, "ioread32": 781, "iowrite8": 781, "u8": 781, "iowrite16": 781, "u16": 781, "iowrite32": 781, "u32": 781, "kmalloc kfre": 783, "dynamic memori": 783, "slab": 783, "gfp_t": [783, 800, 816], "kzalloc": 783, "kfree": 783, "scarc": 783, "discourag": 783, "stolen": [785, 894], "some_list": 785, "init_list_head": 785, "some_data": 785, "list_add": 785, "list_add_tail": 785, "new_payload": 785, "existing_payload": 785, "prepend": [785, 797, 829, 1032], "list_for_each": 785, "list_entri": 785, "cursor": [785, 857, 1104], "run_payload": 785, "list_empti": 785, "list_first_entri": 785, "list_del": [785, 787], "a_payload": 785, "inject": [787, 800, 805, 1107], "opfer": 787, "corrupt": 787, "ffff91285ae68f00": 787, "ffff9128406cec00": 787, "list_debug": 787, "0x70": [787, 902], "0xb0": 787, "0xdd": 787, "ksys_ioctl": 787, "0x82": 787, "0xc0": 787, "__x64_sys_ioctl": 787, "do_syscall_64": 787, "0x4d": 787, "entry_syscall_64_after_hwfram": 787, "0x44": 787, "0xa9": 787, "unprotect": [787, 799, 1015], "nevent": [787, 810], "my_device_list": 787, "preemptibl": [789, 957], "preemption": [789, 795, 802, 902, 953, 956, 957], "holder": [789, 1013], "mutex_init": 789, "mutex_destroi": 789, "mutex_lock": 789, "mutex_lock_interrupt": 789, "eintr": [789, 915, 968, 969], "mutex_lock_interruptible_nest": 789, "mutex_trylock": 789, "eagain": [789, 799, 813], "mutex_unlock": 789, "torvald": [789, 797], "trickl": 789, "rtmutex": 789, "rt_mutex": 789, "net_devic": 791, "alloc_netdev": 791, "sizeof_priv": 791, "netdev_priv": 791, "funcion": 791, "ethernet": 791, "etherdevic": 791, "alloc_etherdev": 791, "free_netdev": 791, "register_netdev": 791, "unregister_netdev": 791, "devinc": 791, "hard_start_xmit": 791, "sk_buff": 791, "skb": 791, "transmiss": [791, 920, 1091], "tx_timeout": 791, "quota": [791, 823], "stead": 791, "do_ioctl": 791, "ifreq": [791, 897], "ifr": [791, 897], "netif_start_queu": 791, "netif_stop_queu": 791, "netif_wake_queu": 791, "udevd": 793, "pci_device_id": 793, "my_id": 793, "pci_devic": 793, "0xdead": 793, "0xbeef": 793, "0xbeee": 793, "module_device_t": 793, "my_prob": 793, "my_remov": 793, "my_suspend": 793, "pm_message_t": 793, "my_resum": 793, "my_shutdown": 793, "pci_driv": 793, "id_tabl": 793, "my_init": 793, "pci_register_driv": 793, "my_exit": [793, 1002], "pci_unregister_driv": 793, "subsystem_vendor": 793, "subsystem_devic": 793, "u64": [793, 807], "dma_mask": 793, "device_count_resourc": 793, "pci_enable_devic": 793, "pdev": 793, "wizardri": 793, "pci_request_region": 793, "pci_set_mast": 793, "pci_clear_mast": 793, "pci_set_dma_mask": 793, "pci_set_drvdata": 793, "ioread": 793, "iowrit": 793, "pci_resource_len": 793, "bar_no": 793, "__iomem": 793, "pci_iomap": 793, "pci_iounmap": 793, "pci_alloc_consist": 793, "os_devic": 793, "_o": 793, "dma_addr": 793, "pci_free_consist": 793, "_size": 793, "_cpu_addr": 793, "t_os_dma_addr__get_n": 793, "_dma_addr": 793, "_os_devic": 793, "dma_bit_mask": 793, "pci_set_consistent_dma_mask": 793, "config_debug_atomic_sleep": [795, 800], "cross compil": 797, "educ": 797, "raspberrypi": [797, 798, 901, 973, 980], "borrow": 797, "pi2": 797, "1gb": 797, "canon": [797, 914], "workstat": 797, "hf": 797, "armv6j": 797, "hardfloat": 797, "gnueabi": 797, "objcopi": 797, "raspberry_pi": 797, "local_overlai": 797, "ebuild": 797, "binutil": [797, 798], "repo_nam": 797, "9999": 797, "sourcedir": 797, "builddir": 797, "buildparam": 797, "kconfig": 797, "zconf": 797, "raspbian": 797, "bootdir": 797, "bootf": 797, "rootf": 797, "kernel7": 797, "Then": [797, 912, 1111], "assimil": 797, "bcmrpi_defconfig": 797, "bcm2709_defconfig": 797, "config_localvers": 797, "config_ikconfig": 797, "eveytim": 797, "config_can_mcp251x": 797, "config_sensors_lm73": 797, "zimag": [797, 798, 901], "dtb": [797, 798, 901], "j3": 797, "mkknlimg": 797, "te": 797, "superus": 797, "jtf": 797, "bcm2709": 797, "smi": 797, "ft5406": 797, "can1": [797, 896], "v7": [797, 798], "ipv4": [797, 1165], "xfrm4_mode_beet": 797, "inet_lro": 797, "esp4": 797, "xfrm4_mode_transport": 797, "udp_tunnel": 797, "sdb": 797, "57344": 797, "sdb1": 797, "4162560": 797, "sdb2": 797, "enjoi": 797, "ec2aa3d2": 797, "eee7": 797, "454e": 797, "d145df5ddcba": 797, "agnost": 797, "urg": 797, "rasperri": [798, 901, 903, 1152, 1159], "patchlevel": 798, "sublevel": 798, "_morph": [799, 809], "my_driver_hello": 799, "my_driver_cdev_manu": 799, "my_driver_cdev_dynamic_major": 799, "my_driver_cdev_file_oper": 799, "my_driver_cdev_first_function": 799, "my_driver_cdev_refactor": 799, "my_driver_multiple_devic": 799, "my_driver_mutex": 799, "my_driver_interrupt": 799, "my_driver_spinlock_atom": 799, "my_driver_time_tim": 799, "my_driver_workqueu": 799, "my_driver_usermem": 799, "copy_": 799, "my_driver_waitqueu": 799, "nonblock": [799, 813, 965, 1165], "spinlock_t": [800, 802], "isr": [800, 957, 1153], "spin_unlock": [800, 802], "reenabl": 800, "uniprocessor": 802, "multiprocessor": 802, "spin_lock_init": 802, "spin_lock": 802, "spin_trylock": 802, "irqflag": 802, "spin_lock_irqsav": 802, "spin_unlock_irqrestor": 802, "pend": [805, 834, 957, 970], "my_inject_deferred_ev": 805, "my_device_add_deferred_ev": 805, "del_timer_sync": [805, 807], "paranoia": 805, "symmetri": 805, "my_device_add_ev": 805, "my_inject_ev": 805, "tick": 807, "config_hz": 807, "friendli": [807, 1045, 1114, 1118], "hrtimer": 807, "jiffies_to_msec": 807, "jiffies_to_usec": 807, "jiffies_to_nsec": 807, "msecs_to_jiffi": 807, "usecs_to_jiffi": 807, "timespec64_to_jiffi": 807, "timespec64": 807, "jiffies_to_timespec64": 807, "timer_list": 807, "my_tim": 807, "timerfunc": 807, "timer_setup": 807, "add_tim": 807, "del_tim": 807, "0520": 809, "0521": 809, "0525": 809, "0532": 809, "0710": 809, "preempt": [809, 953, 957], "caption": 809, "backlink": 809, "my_event_nod": 810, "my_get_one_ev": [810, 813], "my_device_get_one_ev": 810, "my_event_get_one_ev": 810, "efault": [810, 811], "uaccess": 811, "copy_to_us": 811, "copy_from_us": 811, "enosi": 813, "timerfd": [813, 921, 961], "f_flag": 813, "wait_queue_head_t": 814, "wq": [814, 816, 817], "init_waitqueue_head": 814, "sched": 814, "wait_ev": 814, "wait_event_interrupt": 814, "wait_event_timeout": 814, "timeout_jiffi": 814, "wait_event_interruptible_timeout": 814, "wake_up": 814, "wake_up_interrupt": 814, "task_interrupt": 814, "create_workqueu": [816, 817], "destroy_workqueu": [816, 817], "eo": 816, "rtprio": 816, "work_struct": [816, 817], "init_work": [816, 817], "chrt": [816, 957], "workqueue_struct": 817, "work_func_t": 817, "queue_work": 817, "packen": 819, "gunzip": 821, "zgrep": 821, "zcat": 821, "zless": 821, "intact": [821, 1070, 1074], "viro": 822, "cpio": 822, "cleaner": 822, "archivformat": 822, "lzma": 822, "430mb": 822, "95mb": 822, "74mb": 822, "5m": [822, 894], "64mb": 822, "togeht": 823, "ceph": 823, "gfs2": 823, "zcf": 823, "decompress": [823, 983], "zxf": 823, "ztf": 823, "dirt": 823, "livingroom": 823, "grumbl": 823, "reat": 823, "tract": 823, "ell": [823, 857], "vv": 823, "supplementari": [824, 825, 832, 834], "1021": [824, 825, 832], "somefil": [824, 825, 863], "chgrp": [824, 825, 842, 849, 851], "fellow": [824, 825], "picki": [824, 825, 1007], "ttyusb1": 828, "stick": [828, 832], "2006854": 828, "sdc": 828, "2006823": 828, "deserv": [828, 886, 947, 973], "trash": [828, 857], "burn": [828, 903], "1mib": 828, "1mibf": 828, "0m": [828, 879, 955], "mkf": 828, "entropi": 828, "my_vari": 829, "1034184": 829, "1035812": 829, "ancestor": [829, 835, 913], "decriptor": [830, 929], "getti": 832, "kerbero": [832, 834], "gnome3": 832, "agetti": 832, "cleartext": [832, 853], "shadow": [832, 853, 929, 1036, 1073], "brute": [832, 910, 973], "crack": 832, "attack": [832, 910, 988, 1107, 1151], "hierarch": 833, "peripher": [833, 1152, 1159], "grand": 833, "ten_integ": 834, "unfair": [834, 957], "dialout": [834, 929], "seg": 834, "kbyte": 834, "62715": 834, "819200": 834, "pstree": 835, "modemmanag": 835, "journ": 835, "abrtd": 835, "auditd": 835, "bluetoothd": 835, "cupsd": 835, "lau": 835, "firewalld": 835, "fwupd": 835, "tini": [835, 971], "enemi": 836, "guidanc": 836, "dicdat": 836, "acknowledg": [836, 894], "seamless": [836, 1120], "vmware": 836, "exampk": 836, "altruism": 836, "mkfifo": [837, 841], "stdin_fileno": [839, 923, 933, 969, 1045], "stdout_fileno": [839, 919, 920, 923, 929, 955, 964, 968, 969, 1045], "stderr_fileno": [839, 923, 1045], "religi": 839, "fed": 839, "filefor": 839, "sudoer": 840, "weekli": 840, "compet": [841, 902], "award": [841, 888], "plumber": 841, "sniff": 841, "fifo": [841, 923, 1164], "rendezv": 841, "unnam": 841, "chown": [842, 854, 985], "useradd": [842, 985], "groupadd": 842, "usermod": 842, "groupmod": 842, "teammember42": 842, "manfromthestreet": 842, "jun": [842, 973], "triplet": 842, "1003": 842, "110100100": 842, "110000000": 842, "0600": 842, "111101101": 842, "0755": 842, "bitmask": [842, 853, 969], "1317": 853, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 853, "0g2rqr9cnydnqq5unt": 853, "wpu8jyzeuxktapl0": 853, "burnout": 853, "retyp": 853, "rwsr": [853, 854], "32712": 853, "rwxrwxrwx": 853, "4755": [853, 854], "uid_t": 854, "getuid": 854, "geteuid": 854, "rwxrwxr": [854, 919, 971, 972, 973], "24456": 854, "drwxrwxrwt": 855, "0022": 856, "strain": 857, "injuri": 857, "diseas": 857, "outout": 857, "20k": 857, "olevel": 857, "debugopt": 857, "expr1": 857, "expr2": 857, "daystart": 857, "regextyp": 857, "synopsi": 857, "findu": 857, "til": 857, "findutil": 857, "pression": 857, "print0": 857, "keystrok": 857, "noob": [857, 1018], "pos1": 857, "misconfigur": 857, "esc": 857, "freak": 857, "cvsserver": 857, "gitview": 857, "oesterreich": 857, "clearanc": 857, "e7d76d19": 857, "dd3d": 857, "4d52": 857, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 857, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 857, "gif": [857, 1108], "einkommensteuerbescheid1": 857, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 857, "einkommensteuervorauszahlungsbescheid1": 857, "immobilienbewertung": 857, "etw": 857, "confirm": 857, "ova": 857, "umsatzsteuerbescheid1": [857, 879, 880], "h0020211105124337": 857, "vk9vst311192021_0022021": 857, "img_": 859, "jpg": 859, "bilder": 859, "121751": 860, "op": [860, 1046], "garbage1": [861, 862, 864, 868, 869], "garbage2": [861, 862, 864, 868, 869], "diretori": 863, "sweetheart": [863, 869, 876, 950], "citi": 863, "mqueue": [872, 964], "leavel": 876, "hintingx": 879, "1048576": 879, "drwx": [879, 881], "36817": 879, "umsatzsteuerbescheid": 880, "finanzamt": 880, "abgab": 880, "neighbor": [881, 1102], "enat": 882, "dereferenzieren": 884, "50k": [884, 885], "rekursiv": 885, "eintr\u00e4g": 885, "unterhalb": 885, "gefiltert": 885, "un\u00fcblich": 885, "gebr\u00e4uchlich": 885, "geh\u00f6ren": 885, "mmin": 885, "h\u00f6chsten": 885, "gefundenem": 885, "eintrag": 885, "heissen": 885, "beginnen": 885, "versteht": 885, "vergessen": 885, "j\u00fcnger": 885, "verkn\u00fcpft": 885, "metacharact": [885, 904], "gr\u00f6\u00dfer": 885, "lobal": 886, "egular": 886, "xpression": 886, "rint": 886, "sed": [886, 1152, 1159], "tream": 886, "itor": 886, "verb": 886, "insensit": [886, 1119], "entor": 886, "perlr": 886, "perlretut": 886, "perlrequick": 886, "jeffrei": 886, "friedl": 886, "philosopi": 890, "toether": 890, "hc": 890, "325324": 890, "xarg": 890, "bitbak": 892, "behan": 892, "webster": 892, "drone": 894, "electronic speed control": 894, "vehicl": 894, "rack": 894, "recognit": [894, 1102], "flight": 894, "wire": [120, 894, 904, 983], "fritz": [894, 902], "brigh": 894, "heinrich": 894, "polar": 894, "uevent": [894, 901, 902, 903, 937], "puls": [894, 1152, 1159], "cheapest": 894, "quicrun": 894, "16bl30": 894, "brake": 894, "11v": 894, "conclud": [894, 902], "lipo": 894, "madli": 894, "transmitt": 894, "throttl": 894, "neutral": [894, 1104], "chop": 894, "kindli": [894, 1108], "mechatron": 894, "50hz": 894, "nanosecond": [894, 902, 921], "20000000": [894, 1005], "oscil": 894, "10bl60": 894, "000n": 894, "1500000": [894, 959], "2000000": 894, "1550000": 894, "1600000": 894, "acceler": 894, "1650000": 894, "1700000": 894, "1750000": 894, "1800000": 894, "1850000": 894, "1900000": 894, "1950000": 894, "logist": [894, 1102], "hobbi": 894, "can bu": [895, 896, 897, 898], "sinowatz": [895, 995], "donat": 895, "volkswagen": 895, "traffic": 895, "octet": 895, "arbitr": 895, "can_fram": [895, 897], "canid_t": [895, 897], "can_id": [895, 897], "eff": [895, 897], "rtr": [895, 897], "__u8": [895, 897], "can_dlc": [895, 897], "__attribute__": [895, 897], "can0": [896, 897], "noarp": 896, "qdisc": 896, "qlen": 896, "relic": 896, "cansend": 896, "candump": 896, "canplay": 896, "cangen": 896, "snif": 896, "loopback": 896, "pf_can": 897, "sockaddr_can": 897, "sock_raw": 897, "can_raw": 897, "ifr_nam": 897, "siocgifindex": 897, "can_famili": 897, "af_can": 897, "can_ifindex": 897, "ifr_ifindex": 897, "sockaddr": [897, 920], "can_socket": 897, "packt": 897, "frame_layout": 897, "ib3x8": 897, "frame_s": 897, "calcsiz": 897, "recvfrom": 897, "sendto": 897, "lnxpp": 898, "can2udp": 898, "openwrt": 898, "asymmetrisch": 898, "mosi": 898, "miso": 898, "sclk": 898, "broadcom": 898, "ce0": 898, "3v": [898, 901], "5v": [898, 901], "transceiv": 898, "inter intergrated circuit": 901, "lm-sensor": 901, "handwork": [901, 903], "texa": 901, "maker": 901, "dtparam": [901, 902, 903], "i2c_arm": [901, 902, 903], "gpio2": 901, "gpio3": 901, "i2c_bcm2835": [901, 902, 903], "fe804000": [901, 903, 937], "i2c_dev": [901, 902], "sot": 901, "7v": 901, "rail": 901, "capacitor": 901, "idc": 901, "gnd": [901, 903], "vdd": 901, "smbdat": 901, "smbclk": 901, "unconnect": 901, "0x49": 901, "0x4a": 901, "jumper": 901, "3v3": [901, 903], "scl": [901, 903], "probl": 901, "i2c_slav": 901, "0x0703": 901, "o_rdwr": [901, 923, 930, 964], "msb_lsb": 901, "msb": 901, "lsb": [901, 972], "65535": 901, "dev_fd": 901, "perror": [901, 915, 919, 920, 921, 927, 928, 929, 930, 935, 938, 955, 961, 964, 968], "libncurs": 901, "bcm2711_defconfig": 901, "v7l": 901, "semiconductor": 901, "j4": 901, "kernel7l": 901, "new_devic": [901, 903], "0048": 901, "modalia": 901, "preinstal": 901, "hwmon0": 901, "thermal": 901, "thermal_zone0": 901, "hwmon1": [901, 903], "temp1_max": 901, "temp1_max_alarm": 901, "temp1_min": 901, "temp1_min_alarm": 901, "update_interv": 901, "milli": [901, 903], "22000": 901, "randomli": [901, 903], "nomenclatur": 901, "pulse width modul": 902, "resistor": 902, "bright": 902, "potentiomet": 902, "ssop": 902, "0b1000000": 902, "buse": [902, 903], "i2cdetect": [902, 903], "charactr": 902, "pca": 902, "simultan": [902, 968], "peculiar": 902, "pca9685a": 902, "nxp": 902, "dtoverlai": [902, 903], "pwm_pca9685": 902, "regmap_i2c": 902, "3f804000": 902, "0040": [902, 937], "npwm": 902, "unexport": [902, 937], "butt": [902, 983], "intercept": [902, 994], "dim": 902, "300000": [902, 1100], "fade": 902, "800000": [902, 1100], "600000": [902, 1100], "50000": 902, "apolog": 902, "kenel": 902, "devlop": 902, "pleasur": 902, "cornerston": 903, "unstabl": 903, "parasit": 903, "bitbang": 903, "gpiopin": 903, "profession": 903, "addon": 903, "pinout": 903, "01144fe43baa": 903, "w1_bus_master8": 903, "w1_bus_master1": 903, "breadboard": [120, 903, 1152, 1159], "amaz": 903, "400000000000": 903, "800000000000": 903, "behalf": [903, 917, 971], "ad0": 903, "ad1": 903, "ad2": 903, "vcc": 903, "0x18": 903, "0b0011000": 903, "shortli": [903, 994], "execstart": 903, "36864": 903, "w1_bus_master2": 903, "w1_bus_master3": 903, "w1_bus_master4": 903, "w1_bus_master5": 903, "w1_bus_master6": 903, "w1_bus_master7": 903, "busno": 903, "abtract": 903, "prepackag": 903, "afford": 903, "alarm": [903, 967, 970], "conv_tim": 903, "w1_slave_driv": 903, "eeprom": 903, "ext_pow": 903, "w1_slave": 903, "22750": 903, "crc": 903, "rpi_volt": 903, "isa": 903, "in0": 903, "cpu_therm": 903, "temp1": 903, "w1_slave_temp": 903, "reliabl": 903, "radiou": 903, "disappear": 903, "0c4000000000": 903, "0x28": 903, "dalla": [903, 931], "02131d9920aa": 903, "5d": 903, "011432f138f9": 903, "misbehavior": 903, "instabl": 903, "pump": 903, "nuclear": 903, "plant": 903, "ssh-keygen": [904, 910], "password authent": [904, 910], "key based authent": [904, 910], "remote login": [904, 910], "unencrypt": 904, "rlogin": 904, "telnet": 904, "nsa": 904, "primarili": [904, 997, 1116], "sftp": 904, "portno": 904, "unabl": 904, "propaget": 904, "sha256sum": 905, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 905, "mitm": 910, "uncomfort": 910, "keygen": 910, "safeguard": 910, "unrespons": 911, "port forward": 912, "portforward": 912, "secure copi": [912, 913], "hmmm": 912, "whateer": 912, "mydocu": 913, "recus": 913, "mobil": 913, "bandwidth": 913, "mediat": 913, "descriptiotn": 913, "file system": 914, "network file system": 914, "smb": 914, "crawl": 914, "debianish": 914, "mountpoint": 914, "grant": 914, "idmap": 914, "errnum": 915, "strerror_r": 915, "buflen": 915, "cleanest": 915, "_r": 915, "reentrant": 915, "syscal": 917, "getaddrinfo": 917, "ri": 919, "nbytes_read": [919, 920, 921], "24608": 919, "1024root": 919, "nager": 919, "698nager": 919, "gatewai": 920, "peer": [920, 923], "netinet": 920, "af_inet": 920, "sock_stream": 920, "sockaddr_in": 920, "sin_famili": 920, "sin_port": 920, "inet_aton": 920, "sin_addr": 920, "ipproto_ip": 920, "sa_famili": 920, "inet_addr": 920, "10hallo": 920, "16thi": 920, "ong": 920, "14ong": 920, "timerfd_settim": 921, "itimerspec": [921, 955], "nasti": [922, 955], "ingenu": 923, "smae": 923, "o_append": 923, "o_cloexec": 923, "sigpip": [923, 969], "whenc": 923, "seek_cur": 923, "seek_end": 923, "occupi": [923, 925, 926], "status": 924, "srcfile": 924, "dstfile": 924, "1073741825": 925, "0k": 925, "texttt": 926, "dup2": 926, "oldfd": 926, "newfd": 926, "o_": 926, "bytes_to_writ": [927, 928, 930], "wxr": 927, "o_tmpfil": 927, "speci": 927, "pli": 927, "nread": [929, 935, 938, 961, 964, 968], "thats": [929, 930], "litter": 930, "misspel": 930, "24625": 931, "24562": 931, "pread": 933, "pwrite": 933, "readv": 933, "writev": 933, "uio": 933, "iovec": 933, "iov": 933, "iovcnt": 933, "preadv": 933, "pwritev": 933, "ftruncat": [933, 964, 965], "filedescriptor": 933, "gpio26": [935, 937, 938], "subtre": 937, "fe200000": 937, "gpiochip488": 937, "gpiochip504": 937, "active_low": 937, "fd_set": [938, 961], "exc_fd": 938, "fd_zero": [938, 961], "nreadi": 938, "fd_isset": [938, 961], "eek": 938, "intens": 939, "ppid": 939, "tid": 939, "tsd": 939, "spezif": 939, "_reentrant": 939, "lpthread": [939, 955, 974], "start_routin": 940, "pthread_exit": 940, "pthread_cancel": 940, "pthread_attr_setdetachst": 940, "detachst": 940, "pthread_create_detach": 940, "pthread_detach": 940, "pthread_self": 940, "pthread_equ": 940, "30650": 940, "13961": 940, "correl": 940, "gettid": 940, "pthread_mutexattr_t": [942, 958], "pthread_mutex_destroi": 942, "pthread_mutex_trylock": 942, "global_mutex": 942, "pthread_mutexattr_settyp": 942, "pthread_mutex_norm": 942, "pthread_mutex_errorcheck": 942, "pthread_mutex_recurs": 942, "pthread_mutex_default": 942, "pthread_cond_destroi": 944, "pthread_cond_broadcast": 944, "parlanc": 944, "set_autoreset_ev": 944, "ev": 944, "is_set": 944, "wait_autoreset_ev": 944, "acquiriert": 944, "autoreset": 944, "spuriou": 944, "woken": 944, "pthread_condattr_t": 944, "pthread_cond_initi": 944, "pthread_cond_timedwait": 944, "abstim": 944, "use_glob": 946, "pthread_once_t": 946, "global_onc": 946, "pthread_once_init": 946, "init_glob": 946, "pthread_onc": 946, "once_control": 946, "init_routin": 946, "pthread_key_cr": 946, "__thread": 946, "pthread_atfork": 947, "legales": 947, "lock_rac": 949, "succeed": [949, 1135], "foreground": [950, 1003], "huh": 950, "paradox": 950, "setenv": 952, "putenv": 952, "unsetenv": 952, "clearenv": 952, "customvar": 952, "timesl": 953, "starv": 953, "throughput": 953, "sha1": [953, 956, 972], "voluntarili": [953, 956], "lrt": 955, "app_statu": 955, "tick_count": 955, "update_statu": 955, "sigact": [955, 968, 969], "sa_handl": [955, 968, 969], "sigrtmin": 955, "sigev": [955, 965], "sev": 955, "sigev_notifi": 955, "sigev_sign": 955, "sigev_signo": 955, "timer_t": 955, "tspec": 955, "nsec": 955, "timer_settim": 955, "show_statu": 955, "freerto": [955, 958], "syncron": 955, "update_status_func": 955, "initial_t": 955, "interval_t": 955, "show_status_func": 955, "update_task": 955, "show_task": 955, "231765": 955, "225819": 955, "5635": 955, "lwp": 955, "231766": 955, "231767": 955, "tracer": 955, "restart_syscal": 955, "clock_nanosleep": 955, "clock_realtim": 955, "500000000": 955, "033": 955, "7m": 955, "flash_func": 955, "is_revers": 955, "flash_task": 955, "flasher": 955, "indepen": 955, "toggl": 955, "fore": [955, 1005], "particularli": 956, "suscept": 956, "renic": 957, "din": 957, "44300": 957, "echtzeitbetrieb": 957, "betrieb": 957, "rechensystem": 957, "verarbeitung": 957, "anfallend": 957, "st\u00e4ndig": 957, "derart": 957, "betriebsbereit": 957, "da\u00df": 957, "verarbeitungsergebniss": 957, "innerhalb": [957, 1165], "vorgegebenen": 957, "zeitspann": 957, "000014": 957, "013914m": 957, "91410827636698u": 957, "000002": [957, 959], "002382m": 957, "3820173632900326u": 957, "intrus": 957, "controversi": 957, "sched_oth": 958, "relinquish": 958, "sched_param": 958, "sched_getschedul": 958, "sched_prior": 958, "pthread_setschedparam": 958, "pthread_getschedparam": 958, "predefini": 958, "pthread_attr_setschedpolici": 958, "spoken": 958, "pthread_mutexattr_setprotocol": 958, "pthread_prio_inherit": 958, "pthread_prio_protect": 958, "risen": 958, "pthread_mutexattr_setprioceil": 958, "000105": 959, "105247m": 959, "24749755859354u": 959, "000015": 959, "014643m": 959, "64260525619006u": 959, "105u": 959, "000067": 959, "067263m": 959, "2626495361326u": 959, "000003": 959, "002883m": 959, "8827592917392217u": 959, "ondemand": 959, "governor": 959, "cpufreq": 959, "scaling_governor": 959, "cpuinfo_cur_freq": 959, "067036m": 959, "03615188598611u": 959, "000001": 959, "001257m": 959, "2571678380193383u": 959, "000065": 959, "065188m": 959, "188407897949u": 959, "002376m": 959, "3758434034066656u": 959, "001042": 959, "042438m": 959, "4375534057617u": 959, "000017": 959, "017123m": 959, "123423079175748u": 959, "000143": 959, "142646m": 959, "6458358764593u": 959, "000005": 959, "004995m": 959, "994855006705264u": 959, "_syse": 961, "exit_failur": 961, "consume_fd": 961, "random_fd": 961, "tty_fd": 961, "nfd": 961, "ttys4": 961, "in_fd": 961, "eof_detect": 961, "shm": [963, 964, 965], "099": 963, "sem": [963, 964, 965], "shared memori": 964, "message queu": 964, "mman": 964, "fstat": 964, "st_size": 964, "map_fail": 964, "shm_open": [964, 965], "tmpf": [964, 965], "resiz": 964, "4095": 964, "weigh": 964, "map_shar": 964, "counter_loc": 964, "sem_t": [964, 965], "sem_open": 964, "sem_fail": 964, "sem_wait": 964, "sem_post": 964, "mq_attr": [964, 965], "mq_maxmsg": [964, 965], "mq_msgsize": [964, 965], "mqd_t": [964, 965], "mq_open": 964, "mq_send": 964, "mq_receiv": 964, "shm_unlink": 965, "overtak": 965, "mq_overview": 965, "oflag": 965, "mq_flag": 965, "mqde": 965, "msg_ptr": 965, "msg_len": 965, "msg_prio": 965, "sevp": 965, "disturb": [965, 968], "elegantli": 965, "qsize": 965, "signo": 965, "notify_pid": 965, "goiven": 965, "sem_overview": 965, "sem_trywait": 965, "sem_timedwait": 965, "abs_timeout": 965, "shm_close": 965, "shm_overview": 965, "051": [967, 968], "segv": [968, 969], "mortem": [968, 1094], "core_pattern": 968, "termination_handl": 968, "sigint": [968, 969], "sig_atomic_t": [968, 969], "term_act": 968, "alarm_handl": 968, "alarm_act": 968, "sigset_t": [968, 970], "termination_sign": 968, "sigemptyset": [968, 969], "sigaddset": [968, 969], "sigquit": 968, "sigprocmask": [968, 969], "sig_block": 968, "impolit": 968, "sig": [968, 969], "consume_pip": 968, "pipenam": 968, "puzzl": 968, "pthread_sigmask": [968, 969], "sigtstp": 969, "sigalrm": [969, 970], "sigchld": 969, "abnorm": 969, "sigabrt": 969, "sigsegv": 969, "sigbu": 969, "sigil": 969, "sigfp": 969, "unblock": 969, "oldset": 969, "sigpend": 969, "sigfillset": 969, "signum": 969, "sigdelset": 969, "sigismemb": 969, "sigsetop": 969, "recept": 969, "sa_mask": 969, "sa_flag": 969, "oldact": 969, "sig_ign": 969, "sig_dfl": 969, "sighandler_t": 969, "_exit": 969, "barebon": 970, "louder": 970, "stallman": 971, "risc": 971, "llvm": 971, "24360": 971, "hello_h": [971, 987, 989], "24416": 971, "linkabl": [971, 1107, 1162], "0000000000401040": 971, "_start": 971, "0000000000401000": 971, "_init": 971, "00000000004011b8": 971, "_fini": 971, "crt": 971, "crt1": 971, "crti": 971, "crtn": 971, "0000000000404000": 971, "_global_offset_table_": 971, "reloc": 971, "1762320": 971, "0000000000401126": 971, "1224008": 971, "greetdemo": 972, "cmake_system_nam": 972, "toolchain_base_dir": [972, 986], "cmake_c_compil": 972, "cmake_cxx_compil": 972, "find_xxx": 972, "cmake_find_root_path_mode_program": 972, "cmake_find_root_path_mode_librari": 972, "cmake_find_root_path_mode_includ": 972, "toolchian": 972, "cmake_toolchain_fil": 972, "libgreet": [972, 973, 979, 988, 989], "13921": [972, 973], "cmakecach": [972, 973], "26192": [972, 973], "27920": [972, 973], "8503": [972, 973], "eabi5": 972, "armhf": 972, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 972, "debug_info": 972, "armv7l": 974, "challeng": 974, "metadistribut": 974, "miniumum": 974, "realiti": 974, "rasberri": 976, "clickabout": 981, "workabl": 983, "tarbal": 983, "lastest": 983, "x86_64_arm": 983, "precompos": 983, "uncompress": 983, "73812": 983, "1107168": 983, "1481768": 983, "1968456": 983, "1091864": 983, "1030432": 983, "1221816": 983, "lynxbe": 985, "y3p9kn7mjei": 985, "cli": 985, "containerd": 985, "dockerhub": 985, "hub": 985, "sh_18_04": 985, "78683068": 985, "1292296": 985, "70mb": 986, "73018472": 986, "auxvec": 986, "bitsperlong": 986, "bpf_perf_ev": 986, "rapidli": 987, "phoni": [987, 988, 989], "origaniz": 988, "relink": 988, "0x2e20": 988, "vdso": 988, "0x00007fffe9fa7000": 988, "0x00007f75ca289000": 988, "0x00007f75ca46d000": 988, "r_x86_64_32": 988, "fpic": 988, "whom": 989, "hello_flex": 989, "hello_flexible_h": 989, "cq": 989, "lisp": 990, "create_f": 990, "create_print": 990, "print_blah": 990, "print_someth": 990, "sytax": 991, "432x288": 991, "shutil": 992, "tarfil": 992, "temporarydirectori": 992, "tmpd": 992, "tarnam": 992, "expandvar": 992, "contrain": 992, "__enter__": 992, "__exit__": 992, "openforread": 992, "ipykernel_25062": 992, "2037535577": 992, "myprint": 992, "orig_print": 992, "exc_val": 992, "exc_tb": 992, "myarg": 992, "total_ord": 993, "ipykernel_25080": 993, "2840657929": 993, "a_vari": 994, "dec": [994, 1039], "fallback": [994, 1014], "baseexceptiongroup": 994, "exceptiongroup": 994, "subtyp": 994, "maybe_fail": 994, "ipykernel_25098": 994, "104829323": 994, "lone": 994, "4008457068": 994, "mysubsystemerror": 994, "reallybaderror": 994, "someothererror": 994, "definitelybad": 994, "evenwors": 994, "collapsingtheworld": 994, "errorcod": 994, "__cached__": 995, "_frozen_importlib_extern": 995, "sourcefileload": 995, "0x7fd0b231d4b0": 995, "blindli": 995, "ansibl": 995, "matno": 995, "conffil": 995, "confcod": 995, "confdict": 995, "8103": 995, "object ori": [996, 1151], "keyword argu": 996, "starstararg": [996, 1017], "for loop": 996, "iterator protocol": 996, "operator overload": 996, "drawn": 997, "cnt": 997, "inputrang": 997, "disgust": 997, "gentli": 997, "smarter": 997, "nolimit": 998, "fibo_numb": 998, "jerki": 998, "max_numb": 998, "satisfactori": 998, "python_1010_generators_yield": 998, "glossari": 999, "ipykernel_25122": 999, "4235178104": 999, "breadth": 999, "subnamespac": 1002, "mysupermodul": 1002, "mysuperfunct": 1002, "subpackage1": 1002, "module1": 1002, "module2": 1002, "subpackage2": 1002, "disambigu": 1002, "increment_background": [1003, 1005], "background_integ": 1003, "foreground_integ": 1003, "runn": 1003, "backgroundincrement": 1003, "uncool": 1003, "14784035": 1005, "quack": 1007, "mockup": 1007, "33531576640593": 1007, "301541903167205": 1007, "04286166247334": 1007, "61691861803947": 1007, "15111834116003": 1007, "__next__": 1007, "brokensensor": 1007, "gettemperatur": 1007, "ipykernel_25250": 1007, "2792400554": 1007, "71536506": 1007, "152158437": 1007, "1134347102": 1007, "refect": 1008, "ipykernel_25268": 1008, "1242235954": 1008, "4119786358": 1008, "emp": 1011, "add_employe": 1011, "mgr": 1011, "isold": [1011, 1012, 1112], "haubentauch": [1011, 1012, 1015, 1112], "parentcl": 1011, "funnili": 1011, "make_child": 1012, "parent1": 1012, "parent2": 1012, "vvv": 1012, "father": 1012, "vvvvvv": 1012, "tabular": 1013, "someclass": 1013, "persons_from_csv": 1013, "person_dict": 1013, "operators object oriented program": 1014, "behaivor": 1014, "number2": 1014, "int2": 1014, "ipykernel_25360": 1014, "3709071117": 1014, "151628379": 1014, "whistl": [1014, 1017], "symmetr": [1014, 1044], "commut": 1014, "452733317": 1014, "summar": 1014, "ipykernel_25378": 1015, "2144392361": 1015, "attrnam": 1015, "meier": 1015, "3124626440": 1015, "1226798660": 1015, "expicitli": 1016, "0x7f7217b74a90": 1016, "toolkit": 1018, "marker": 1020, "eighti": 1020, "monti": 1020, "incompat": [1020, 1026, 1034, 1045], "benevol": 1020, "bdfl": [1020, 1104], "overse": 1020, "januari": 1020, "dropbox": 1020, "awk": 1022, "sensit": 1025, "throughout": 1025, "0o01234": 1026, "14159265359": [1026, 1040], "3e12": 1026, "afterthought": 1026, "\u00e4\u00f6\u00fc": 1026, "xa4": 1026, "xb6": 1026, "xbc": 1026, "xe4": 1026, "compel": 1026, "codebas": 1026, "ancient": 1026, "sequencish": 1030, "sixtim": 1030, "seen_sixey": 1030, "blahblahblahblahblah": 1031, "aah": 1032, "a_list": 1032, "a_tupl": 1032, "hlow": 1032, "hlowrd": 1032, "straw": [1033, 1041], "heritag": 1034, "139991214867984": 1035, "139991214868016": 1035, "139991214868240": 1035, "139990904469888": 1035, "139990904585600": 1035, "ipykernel_25460": 1036, "723444260": 1036, "globvar": 1036, "parameterizab": 1037, "ipykernel_25478": 1037, "3939188879": 1037, "3571579993": 1037, "program_exit": 1037, "exitstatu": 1037, "spam": [1039, 1102], "x58": 1039, "07d": 1040, "0x": 1040, "5x": 1040, "0x2f": 1040, "4x": 1040, "0x002f": 1040, "5o": 1040, "0o31": 1040, "04d": 1040, "0042": 1040, "05d": 1040, "00042": 1040, "thistl": 1041, "thorn": 1041, "ipykernel_25532": 1041, "677815794": 1041, "annoy": 1041, "sqn": 1042, "defval": 1043, "iterkei": 1043, "keyiter": 1043, "0x7ff2e8753418": 1043, "unord": 1044, "tunabl": 1045, "shoudn": 1045, "0x7fca2c785b70": 1046, "tof": 1046, "outputfilenam": 1047, "argumentpars": 1047, "add_argu": 1047, "parse_arg": 1047, "ou": 1047, "ylabel": [1049, 1100], "xmin": 1049, "xmax": 1049, "ymin": 1049, "ymax": 1049, "twine": 1050, "lotsa": [1050, 1123], "long_descript": 1050, "long_description_content_typ": 1050, "beta": 1050, "osi": 1050, "approv": 1050, "package_dir": 1050, "python_requir": 1050, "install_requir": 1050, "paho": [1050, 1111], "pyproject": 1050, "toml": 1050, "backend": 1050, "build_meta": 1050, "yadda": 1050, "sdist": 1050, "python_course_2022_11_07": 1050, "12549": 1050, "BE": 1050, "mydb": 1051, "hardli": 1052, "femal": 1057, "miracl": [1060, 1077], "previouslin": 1064, "ifi": 1077, "uniqifi": 1078, "sensor_const": 1083, "test_sensor_const": 1083, "ii": [1084, 1086, 1090, 1092, 1103], "user_record": [1085, 1087], "read_csv_head": [1085, 1092], "read_csv_nohead": [1087, 1091, 1092], "csvfilenam": 1089, "test_noheader_person": 1090, "read_noheader_person": 1090, "test_must_not_use_global_variables_as_return_object": 1090, "filename1": 1090, "noheader1": 1090, "filename2": 1090, "noheader2": 1090, "users1": 1090, "users2": 1090, "test_header_person": 1090, "read_header_person": 1090, "test_user_json_person": 1090, "userdb_json": [1090, 1091], "test_person_to_json": 1090, "joerg_sent": 1090, "to_json_person": 1090, "joerg_receiv": 1090, "from_json_person": 1090, "envis": [1091, 1149], "user_json": 1091, "to_json": 1091, "test_user_json": 1091, "test_user_to_json": 1091, "user_s": 1091, "json_user_s": 1091, "from_json": 1091, "test_nohead": 1092, "test_head": 1092, "lectur": [1094, 1163], "unsupervis": [1097, 1102], "conveyor": 1097, "belt": 1097, "linear_regress": [1098, 1101], "model_select": [1098, 1100], "train_test_split": [1098, 1100], "linear_model": [1098, 1100], "linearregress": [1098, 1100], "history_data": [1098, 1099, 1100, 1101], "inputfeatur": [1098, 1100], "outputfeatur": [1098, 1100], "input_train": [1098, 1100], "input_test": [1098, 1100], "output_train": [1098, 1100], "output_test": [1098, 1100], "test_siz": [1098, 1100], "output_predict": [1098, 1100], "visualcross": 1099, "york": [1099, 1100], "wind": [1099, 1100], "chill": [1099, 1100], "precipit": [1099, 1100], "snow": [1099, 1100], "gust": [1099, 1100], "humid": [1099, 1100], "rain": 1099, "cloudi": 1099, "995833": 1100, "688889": 1100, "287500": 1100, "327273": 1100, "012222": 1100, "690278": 1100, "470769": 1100, "369444": 1100, "513421": 1100, "946106": 1100, "574023": 1100, "313256": 1100, "994536": 1100, "070695": 1100, "025980": 1100, "302423": 1100, "214825": 1100, "665492": 1100, "900000": 1100, "700000": 1100, "090000": 1100, "050000": 1100, "377500": 1100, "750000": 1100, "950000": 1100, "650000": 1100, "330000": 1100, "325000": 1100, "850000": 1100, "425000": 1100, "825000": 1100, "715000": 1100, "470000": 1100, "970000": 1100, "multidimension": 1100, "xlabel": 1100, "coef_": 1100, "80189231": 1100, "intercept_": 1100, "95355086": 1100, "609608": 1100, "571879": 1100, "736988": 1100, "170933": 1100, "798254": 1100, "189739": 1100, "180394": 1100, "449230": 1100, "661530": 1100, "057745": 1100, "850176": 1100, "284120": 1100, "685067": 1100, "weather": [1101, 1102], "splice": [1101, 1102], "cute": 1101, "paper": 1101, "aspir": [1101, 1128], "dilig": 1102, "bite": 1102, "forecast": 1102, "agi": 1102, "asi": 1102, "forest": 1102, "predictor": 1102, "accuraci": 1102, "classif": 1102, "unlabel": 1102, "reinforc": 1102, "reward": 1102, "bay": 1102, "sepp": 1103, "tupleunpack": 1103, "spell": 1103, "redundantli": 1103, "quotechar": 1103, "spreadsheet": 1103, "odbc": 1104, "mysql": 1104, "informix": 1104, "berkeleydb": 1104, "mongodb": 1104, "rollback": 1104, "initd": 1106, "psycopg": 1106, "libpq": 1106, "conninfo": 1106, "psycopg2": 1106, "schwammerldb": 1106, "android": 1107, "schwammerln": 1107, "giftig": 1107, "geniessbar": 1107, "dbm": 1107, "steinpilz": 1107, "roehren": 1107, "speisetaeubl": 1107, "lamellen": 1107, "speitaeubl": 1107, "eierschwammerl": 1107, "teufelsroehrl": 1107, "overcod": 1108, "512119": 1108, "european": 1108, "steroid": 1108, "htmlhelp": 1108, "charset": 1108, "latin1": 1108, "chines": 1108, "enc": 1108, "0xfc": 1108, "0xdf": 1108, "0xf6": 1108, "\u00df": 1108, "cyril": 1108, "received_enc": 1108, "lg_enc": 1108, "bye_enc": 1108, "artificial intellig": 1109, "postgr": 1109, "mssql": 1109, "data sci": 1109, "ecosystem": 1109, "antp": 1111, "53767": 1111, "tcp6": 1111, "mosquitto_pub": 1111, "easiest": 1111, "message_receiv": 1111, "userdata": 1111, "on_messag": 1111, "loop_forev": 1111, "mosqitto_pub": 1111, "styrian": 1111, "esp": 1111, "666608091972": 1112, "ignore_index": 1112, "new_person": 1112, "saskia": 1112, "456710042003": 1112, "irrevers": 1113, "ipykernel_25938": 1116, "3315724720": 1116, "maybe_cal": [1116, 1117], "apply_if_cal": [1116, 1117], "_getitem_axi": [1116, 1117], "_is_scalar_access": [1116, 1117], "1519": 1116, "_validate_integ": 1116, "1521": 1116, "_ix": 1116, "len_axi": 1116, "_get_axi": 1116, "1451": 1116, "1453": 1116, "rangeindex": 1117, "get_loc": 1117, "toler": 1117, "3621": 1117, "casted_kei": 1117, "_lib": 1117, "pyx": 1117, "indexengin": 1117, "hashtable_class_help": 1117, "pxi": 1117, "pyobjecthasht": 1117, "get_item": 1117, "ipykernel_25971": 1117, "1471010945": 1117, "thru": 1117, "1201": 1117, "_validate_kei": 1117, "_get_label": 1117, "1203": 1117, "_get_slice_axi": 1117, "slice_obj": 1117, "1151": 1117, "5667": 1117, "1153": 1117, "1155": 1117, "_handle_lowerdim_multi_index_axis0": 1117, "tup": 1117, "drop_level": 1117, "new_index": 1117, "3875": 1117, "3877": 1117, "3623": 1117, "3625": 1117, "listlik": 1117, "_check_indexing_error": 1117, "sort_index": 1117, "multiindex": 1117, "contrari": 1118, "lower_email": 1119, "rentner": 1119, "is_palindrom": 1119, "facto": [1120, 1144], "subel": 1120, "attrib": 1120, "getroot": 1120, "package manag": 1122, "project manag": [1122, 1150], "unit test": 1122, "virtual environ": 1122, "affin": 1122, "witch": 1123, "gnore": 1123, "ackup": 1123, "bort": 1123, "cert": 1123, "pem": 1123, "pythonhost": 1123, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1123, "cp38": 1123, "manylinux2010_x86_64": 1123, "ext": 1123, "argcomplet": 1123, "asn1crypto": 1123, "ensurepip": [1124, 1130], "test_project": 1128, "test_soup": 1128, "test_task": 1128, "stringent": 1128, "discoveri": 1128, "syndrom": [1128, 1129, 1135], "test_person_point": 1128, "deselect": 1128, "tweak": [126, 1128], "test_": 1128, "test_simpl": 1128, "test_trivi": 1128, "test_trivial_but_fail": 1128, "___________________________": 1128, "____________________________": 1128, "test_stat": 1128, "implementation_point": 1128, "implementor1": 1128, "implementor2": 1128, "documentation_point": 1128, "integration_point": 1128, "implementation_perc": 1128, "documentation_perc": 1128, "integration_perc": 1128, "total_perc": 1128, "total_point": 1128, "gathered_point": 1128, "test_another_task_aspect": 1128, "pathlib": 1128, "test_ini_file_pars": 1128, "my_test_fil": 1128, "mytestcas": 1129, "runtest": 1129, "assertequ": 1129, "texttestrunn": 1129, "__db": 1129, "create_databas": 1129, "fill_test_data": 1129, "remove_databas": 1129, "testfeature1": 1129, "testfeature2": 1129, "testsuit": 1129, "addtest": 1129, "testload": 1129, "loadtestsfromtestcas": 1129, "testsometh": 1129, "failif": 1129, "failunless": 1129, "failunlessequ": 1129, "failifequ": 1129, "failunlessalmostequ": 1129, "failunlessrais": 1129, "env_dir": 1130, "my_venv": 1130, "csh": 1130, "easy_instal": 1130, "pip3": 1130, "powershel": 1130, "joblib": 1130, "threadpoolctl": 1130, "deactiv": 1130, "my_recreated_venv": 1130, "persuad": 1130, "will_fail": [1134, 1137], "initgoogletest": [1135, 1140], "run_all_test": [1135, 1140], "lgtest": [1135, 1137], "onesuit": 1135, "test1": 1135, "test2": 1135, "anothersuit": 1135, "postive_pattern": 1135, "negative_pattern": 1135, "gtest_list_test": 1135, "faildemo": 1135, "failisfat": 1135, "assertdemo": 1135, "assertisfat": 1135, "expect_": 1135, "expectdemo": 1135, "expectisnonfat": 1135, "expect_tru": 1135, "expect_eq": 1135, "0x58": 1135, "0x55": 1135, "assert_": 1136, "repoqueri": 1137, "dpkg": 1137, "listfil": 1137, "joergfaschingbau": 1137, "cmake_compiler_is_gnucc": 1137, "ggdb": 1137, "googlebenchmark": 1137, "predef": [1139, 1140], "predefinedtestenviron": 1140, "paranoidtest": 1140, "untechn": 1140, "thefixtur": 1140, "testthatmodifiesst": 1140, "complexfixtur": 1140, "first_n": 1140, "sometest": 1140, "egal": 1142, "welcher": 1142, "schulungstyp": 1142, "problemlo": 1142, "verifiziert": 1142, "formlos": 1142, "anliegen": 1142, "umgehend": 1142, "setzen": 1142, "besprechen": 1142, "gestaltung": 1142, "schl\u00fcssigkeit": 1142, "chronologisch": 1142, "gehaltenen": 1142, "querzulesen": 1142, "roter": 1142, "faden": 1142, "ablaufen": 1142, "\u00e4nderungen": 1142, "kursgeschehen": 1142, "passieren": 1142, "detailliert": 1142, "kosten": 1142, "terminen": 1142, "inhouseschulungen": 1142, "buchenden": 1142, "terminisiert": 1142, "zustandekommt": 1142, "zeitlich": 1142, "\u00f6rtlich": 1142, "flexibel": [1142, 1143], "zul\u00e4sst": 1142, "besond": 1142, "onlineschulungen": 1142, "erwiesen": 1142, "dedizierten": 1142, "implementieren": [1142, 1147], "instruktionen": [1142, 1146], "datenschutzrichtlinien": 1142, "genug": 1142, "durchweg": 1142, "wahlweis": 1142, "offenen": 1142, "anmelden": 1142, "inhouseschulung": 1142, "exklusiv": 1142, "\u00fcblicherweis": 1142, "firmenstandort": 1142, "basteln": [1142, 1159], "schwierig": 1142, "z\u00fcgig": 1143, "uhr": 1143, "punktlandung": 1143, "mbr": 1143, "bootet": 1143, "nachs\u00e4tz": 1143, "wahllos": 1143, "reinen": [1143, 1159], "gebastelt": 1143, "leichtfertigerweis": 1143, "richtigerweis": 1143, "multilib": 1143, "ausgestattet": [1143, 1152, 1159, 1166], "l\u00e4uft": 1143, "seltsamerweis": 1143, "dar\u00fcber": 1143, "zeitersparnisgr\u00fcnden": 1143, "hinweggeholfen": 1143, "vorcompilierten": 1143, "statisch": [1143, 1161], "gelinkten": 1143, "christof": 1143, "sourcen": 1143, "crosszucompilieren": 1143, "gescheitert": 1143, "ungl\u00fccklichen": 1143, "umstand": 1143, "schulungsrechn": 1143, "neu": 1143, "aufzusetzen": 1143, "kompil": 1143, "verschwunden": 1143, "buildscript": 1143, "konnt": 1143, "kreativen": 1143, "wiederhergestellt": 1143, "v\u00f6llig": 1143, "sinnfrei": 1143, "distributionen": 1143, "compilieren": [1143, 1145], "architekturen": 1143, "versucht": [1143, 1144, 1146], "richtigen": 1143, "leben": [1143, 1159], "anzuwenden": 1143, "leut": 1143, "anzusehen": 1143, "wort": [1143, 1145], "gefallen": 1143, "hart": 1143, "garantien": 1143, "durchau": 1143, "gerechtfertigt": 1143, "gesch\u00fctz": 1143, "auffahren": 1143, "enthaltenen": 1143, "n\u00fctzen": 1143, "stichwort": [1143, 1152, 1159], "mittelweg": 1143, "diffundieren": 1143, "aufruft": 1143, "startet": 1143, "ausgekl\u00fcgelt": 1143, "funktionsweis": 1143, "jeher": 1143, "kennt": [1143, 1165], "gewaltig": 1143, "geschichtsbelastet": 1143, "tr\u00e4gt": 1143, "intelligent": [1143, 1152, 1159], "trotz": 1143, "behauptungen": 1143, "gar": 1143, "lieblingsseit": 1143, "linuxthemen": 1143, "zentrisch": 1143, "bourne shel": [1144, 1154], "\u00fcbel": 1144, "sprechen": [1144, 1152, 1159], "vollst\u00e4ndig": 1144, "shellprogrammierung": 1144, "ruf": 1144, "schmutzigen": 1144, "stattdessen": 1144, "hauch": 1144, "pervers": 1144, "\u00e4sthetik": 1144, "verpassen": 1144, "geschicht": 1144, "kram": 1144, "environmentvariablen": 1144, "kontrollkonstrukt": [1144, 1145], "hauptteil": 1144, "stringmanipul": 1144, "obskur": 1144, "konstrukt": [1144, 1154], "auskommt": 1144, "umgang": [1144, 1154], "vorausgesetzt": [1144, 1146, 1147, 1155, 1161, 1162, 1164, 1165], "bibel": 1145, "hinzuf\u00fcgen": 1145, "erfind": 1145, "tickt": 1145, "wozu": 1145, "grenzen": 1145, "vorlag": 1145, "didaktik": 1145, "erg\u00e4nzt": 1145, "kontext": 1145, "heutigen": 1145, "dienen": 1145, "sprachkern": 1145, "unterrichten": 1145, "standardlibrari": 1145, "zugunsten": 1145, "bequemeren": 1145, "verzichten": 1145, "sprachdesign": 1145, "geachtet": 1145, "isoliert": 1145, "abseit": [1145, 1147, 1165], "mitbringt": 1145, "h\u00e4lt": 1145, "eignet": 1145, "hervorragend": [1145, 1152, 1160, 1165], "systemprogrammierung": 1145, "weglassen": 1145, "programmiert": [1145, 1147], "dementsprechend": [1145, 1165], "sinngem\u00e4ss": 1145, "aufgeteilt": 1145, "manipulieren": [1145, 1154], "maschineninstruktionen": 1145, "ausgef\u00fchrt": [1145, 1146], "geschwindigkeitsvorteil": 1145, "interpretierten": 1145, "nachteil": 1145, "verst\u00e4ndni": [1145, 1154, 1164], "speicherverwaltung": [1145, 1147, 1162], "integral": 1145, "zusammengesetzt": 1145, "speicherlayout": 1145, "wenigst": 1145, "worin": 1145, "programmstrukturierung": 1145, "deklar": 1145, "beliebtest": 1145, "unmeng": 1145, "flexibilit\u00e4t": [1145, 1162], "einbringen": 1145, "unbeliebtest": 1145, "fehlerm\u00f6glichkeiten": 1145, "verkettet": 1145, "fehlerszenarien": [1145, 1165], "absturz": 1145, "dahinsiechen": 1145, "debugginghilfen": 1145, "typumwandlungen": 1145, "hauptkritikpunkt": 1145, "sorglos": 1145, "integertypen": 1145, "breit": [1145, 1152], "regelwerk": 1145, "historisch": 1145, "aufarbeitung": 1145, "historischem": 1145, "ballast": 1145, "compileroptionen": 1145, "pr\u00e4prozessor": [1145, 1146], "leid": 1145, "grundz\u00fcgen": 1145, "gezeigt": [1145, 1154, 1159], "compilierung": 1145, "heutzutag": 1145, "wegzudenken": [1145, 1152], "damal": [1145, 1147], "programmen": [1145, 1146, 1161], "separat": 1145, "verbinden": 1145, "spielt": 1145, "archivieren": 1145, "linken": 1145, "programmgesundheit": 1145, "bedeutungen": 1145, "optimierungsm\u00f6glichkeiten": 1145, "memoryfehlern": 1145, "verwalten": 1145, "formatiert": 1145, "_und_": 1145, "komfort": 1145, "m\u00e4chtige": [1145, 1162], "jedoch": [1145, 1152, 1159, 1165], "weit": 1145, "fehlerimmunit\u00e4t": 1145, "allein": 1145, "verdienen": 1145, "erw\u00e4hnung": 1145, "stringbearbeitung": 1145, "heutig": 1145, "eigenwillig": 1145, "f\u00fclle": 1145, "erleichtern": 1145, "lauern": [1145, 1164], "gefahren": [1145, 1164, 1165], "sprachumfang": 1146, "angeht": 1146, "compiliert": 1146, "maschinencod": 1146, "pointern": 1146, "sofort": 1146, "beipflichten": 1146, "einmal": [1146, 1161, 1162, 1166], "beinharten": 1146, "typenkonvertierungen": 1146, "aufgesessen": 1146, "beleuchtet": [1146, 1164], "beschrittenen": 1146, "dunklen": 1146, "ecken": 1146, "widmet": 1146, "intensiv": 1146, "fehlersuch": 1146, "erkl\u00e4rungen": 1146, "sprachdefinit": 1146, "greifbar": 1146, "verdacht": 1146, "manch": 1146, "typkonversionen": 1146, "l\u00fccken": 1146, "typensystem": [1146, 1147], "techniken": [1146, 1152], "typensicherheit": 1146, "dunkl": 1146, "unn\u00f6tig": 1146, "programmhygien": 1146, "wege": 1146, "sauberen": 1146, "weisen": 1146, "optimierungstechniken": 1146, "anwenden": 1146, "optimierung": 1146, "erschweren": 1146, "lesbarkeit": 1146, "memoryzugriff": 1146, "ur": 1146, "beziehungsweis": 1146, "hardwareunterst\u00fctzung": 1146, "Ins": 1146, "kenntniss": [1146, 1147, 1155, 1161, 1162, 1164, 1165], "urspr\u00fcnglich": 1147, "erfunden": 1147, "leichter": 1147, "handhabbar": 1147, "erm\u00f6glichen": [1147, 1162], "ressourcenverwaltung": 1147, "kontrolliert": 1147, "mainstream": 1147, "einzug": 1147, "hie\u00df": 1147, "treffend": 1147, "seitdem": 1147, "vereinzelt": 1147, "soviel": 1147, "dampflokomot": 1147, "stellt": [1147, 1165], "vielfalt": 1147, "sprachkonstrukt": 1147, "genial": 1147, "gewagt": 1147, "behaupten": 1147, "anbelangt": 1147, "sprachmittel": 1147, "wichtigst": 1147, "n\u00e4mlich": 1147, "reichlich": [1147, 1152, 1159], "umstieg": 1147, "erw\u00e4gen": 1147, "embeddedbetriebssystem": 1147, "einsetzen": 1147, "vielerort": 1147, "m\u00f6glich": [1147, 1152], "datenkapselung": 1147, "objekten": 1147, "fallstrick": 1147, "korrektheit": 1147, "100ste": 1147, "strukturiert": 1147, "fehlerbehandlung": 1147, "generisch": 1147, "mechanismen": [1147, 1162, 1164, 1166], "mehrfachvererbung": 1147, "teilweis": 1147, "kapiteln": 1147, "unterschied": 1147, "erl\u00e4utert": [1147, 1152], "c++ 11": 1148, "enjoy": 1148, "overrrid": 1148, "coolest": 1148, "optinion": 1148, "oneshot": 1148, "communict": 1148, "unlearn": 1148, "inventor": 1149, "weren": 1150, "intricaci": 1150, "interdepend": 1150, "rudimentari": 1150, "graviti": 1151, "vocabulari": 1151, "confront": 1151, "reusab": 1151, "nicknam": 1151, "zentrum": [1152, 1159], "vollwertig": 1152, "selben": 1152, "betriessystemkonzept": 1152, "jahrzehnten": 1152, "bew\u00e4hrt": 1152, "automot": 1152, "sektor": 1152, "vertreten": 1152, "altbew\u00e4hrten": 1152, "konsequ": [1152, 1162], "ausbaut": 1152, "hardwareschnittstellen": 1152, "echtzeitf\u00e4higkeit": 1152, "dahint": 1152, "rundet": 1152, "hardwarebastelworkshop": 1152, "embeddedprogrammier": [1152, 1159], "l\u00e4nger": [1152, 1159], "normalen": [1152, 1159], "dateisystem": [1152, 1159], "versagt": [1152, 1159], "teuer": [1152, 1159], "erkauft": [1152, 1159], "elektronik": [1152, 1159], "testen": [1152, 1159, 1166], "hostsoftwar": [1152, 1159], "architekten": [1152, 1159], "plattformzusammensetzung": [1152, 1159], "entscheiden": [1152, 1159, 1166], "rechtfertigen": [1152, 1159], "logik": [1152, 1159], "steck": [1152, 1159], "beantworten": [1152, 1159, 1166], "eingeladen": [1152, 1159], "l\u00f6tmateri": [1152, 1159], "mitzubringen": [1152, 1159], "bastelei": 1152, "erfolgt": 1152, "vorhandenen": [1152, 1159, 1166], "minicomputern": 1152, "prototypen": 1152, "desktopbetriebssystem": [1152, 1159], "verh\u00e4ltniss": [1152, 1159], "512mb": [1152, 1159], "m\u00fchsam": [1152, 1159], "produktivsystem": [1152, 1159], "ohnehin": [1152, 1159], "unangebracht": [1152, 1159], "anf\u00e4ng": [1152, 1159], "filesystemen": [1152, 1159], "durchzuf\u00fchren": 1152, "filedeskriptoren": [1152, 1154], "getrennt": 1152, "abl\u00e4uf": 1152, "adressraum": 1152, "sorgfalt": 1152, "bloss": 1152, "gef\u00e4chert": 1152, "gewissen": 1152, "szenarien": 1152, "steuerungen": 1152, "gef\u00e4hrlich": 1152, "umfangreich": 1152, "hauptthema": 1152, "dennoch": 1152, "n\u00fctzlich": 1152, "haub": 1152, "schalten": [1152, 1159], "ausg\u00e4ngen": [1152, 1159], "abfragen": [1152, 1159], "eing\u00e4ngen": [1152, 1159], "sowohl": [1152, 1159], "dumm": [1152, 1159], "ereignisgesteuert": [1152, 1159], "mikrocontrollern": [1152, 1159], "aufgaben": [1152, 1159], "temperaturmessung": [1152, 1159], "expandierung": [1152, 1159], "ausgelagert": [1152, 1159, 1162], "dediziert": [1152, 1159], "angesteuert": [1152, 1159], "gegeben": [1152, 1159, 1161, 1162], "driverframework": 1152, "netzwerkstack": [1152, 1159], "einpasst": [1152, 1159], "schnittstellen": [1152, 1162], "implementationssprachen": 1152, "hardwareerfahrung": [1152, 1159], "linux kernel": 1153, "kernel driv": [1153, 1163], "wait queu": 1153, "block devic": 1153, "interrupt handl": 1153, "dose": 1153, "curios": 1153, "userpac": 1153, "massiv": 1153, "vital": 1153, "einblick": 1154, "gingen": 1154, "vieler": 1154, "demosess": 1154, "vertrackt": 1154, "entmystifiziert": 1154, "gef\u00fcrchteten": 1154, "erlernt": 1154, "inbetriebsetz": 1154, "hardwareingenieur": 1154, "angehend": 1154, "administratoren": 1154, "editieren": 1154, "bl\u00e4ttern": 1154, "textdateien": 1154, "schnittstel": 1154, "kombinationen": 1154, "kombin": 1154, "abschweifen": 1154, "programmierkenntniss": 1154, "zwingend": [1154, 1161], "make gnu": 1155, "gnu mak": 1155, "build manag": 1155, "seiner": [1155, 1162, 1166], "m\u00e4chtigen": 1155, "daran": 1155, "wendet": 1155, "interessiert": 1155, "gr\u00f6\u00dfere": 1155, "gebaut": 1155, "komplizierten": 1155, "griff": 1155, "regeln": 1155, "selbstdefiniert": 1155, "gewiss": [1155, 1160, 1162], "fertigkeit": 1155, "hemmenhofen": 1159, "gleichnamigen": 1159, "gerufen": 1159, "produktivem": 1159, "n\u00e4herzubringen": 1159, "spielekonsumenten": 1159, "kinder": 1159, "enden": 1159, "erstem": 1159, "breiteren": 1159, "drauf": 1159, "vorhandensein": 1159, "basisinfrastruktur": 1159, "vielem": 1159, "hervorragenden": 1159, "gestandenen": 1159, "obwohl": [1159, 1162], "sprachunabh\u00e4ngig": 1159, "brauchen": 1159, "computerspielen": 1159, "spielerischen": 1159, "f\u00fchren": 1159, "w\u00e4hlt": 1159, "lm": 1159, "netzwerkprotokol": [1159, 1165], "behaupt": 1160, "allen": 1160, "gro\u00dfkopferten": 1160, "kommerziellen": 1160, "systemen": 1160, "perforc": 1160, "etabliert": 1160, "erh\u00e4ltlich": 1160, "nachfolg": 1160, "abgel\u00f6st": 1160, "prim\u00e4r": 1160, "publikum": 1160, "sekund\u00e4r": 1160, "versionieren": 1160, "arbeitsweis": 1160, "bereinigung": 1160, "strategien": 1160, "programmierern": 1160, "vertrautheit": 1160, "vorteil": [1160, 1161], "umsteig": 1161, "\u00e4rgerni": 1161, "schl\u00e4gt": 1161, "ausgekl\u00fcgeltst": 1161, "systemcal": [1161, 1162, 1165], "sogenannt": 1161, "inspizieren": 1161, "grundprinzip": [1161, 1165], "sammlung": [1161, 1162], "ausf\u00fchrbar": 1161, "bedient": 1161, "handhabung": 1161, "gew\u00f6hnungsbed\u00fcrftig": 1161, "filedescriptoren": 1161, "lowlevel": 1161, "tiefen": 1162, "steigen": 1162, "alltagsprogrammier": 1162, "normalerweis": 1162, "verborgen": 1162, "hochperformant": 1162, "anwendungen": 1162, "modernen": [1162, 1164], "bertriebssystemen": 1162, "sogenanntem": 1162, "virtuellen": 1162, "speicherbereich": 1162, "instanzen": 1162, "desselben": 1162, "hauptspeich": 1162, "speicherzugriff": 1162, "schutzmechanismen": 1162, "miteinand": 1162, "kommunizieren": [1162, 1165], "semaphoren": 1162, "steinalt": 1162, "\u00fcberlebt": 1162, "keinesweg": 1162, "fehlerfrei": 1162, "benutzen": 1162, "verpasst": 1162, "beruht": 1162, "ladbar": 1162, "ressourcenschonung": 1162, "wasserdichten": 1162, "upgradepfad": 1162, "grundkenntni": [1162, 1164, 1165], "memory manag": 1163, "tcp-ip": 1163, "unverst\u00e4ndlich": 1164, "ungeachtet": 1164, "effizient": 1164, "propagiert": 1164, "soliden": 1164, "unbedacht": 1164, "handeln": 1164, "lebenszyklu": 1164, "gestartet": 1164, "versuchung": 1164, "gewalt": 1164, "terminieren": 1164, "konsequenzen": 1164, "joinabl": 1164, "detach": 1164, "eigenschaften": 1164, "racecondit": 1164, "vermeidung": 1164, "\u00fcberal": 1164, "vermutet": 1164, "integeroperationen": 1164, "kommunikationsmechanismen": 1164, "werkzeugkasten": 1164, "kommunikationskan\u00e4l": 1164, "niemal": 1164, "reihen": 1164, "traditionellen": 1164, "aufgenommen": 1164, "codebasi": 1164, "verzweigt": 1164, "ansehnlich": 1164, "realtimef\u00e4higkeiten": 1164, "priorit\u00e4ten": 1164, "f\u00fcgt": 1165, "benutzend": 1165, "programmierparadigma": 1165, "dar": 1165, "beschr\u00e4nkt": 1165, "streamverbindungen": 1165, "verbindungsaufnahm": 1165, "datagramm": 1165, "verbindungslos": 1165, "adressfamilien": 1165, "auffassung": 1165, "adress": 1165, "endpoint": 1165, "nummern": 1165, "adressen": 1165, "verbindungen": 1165, "hilfsfunktionen": 1165, "adresskonvertierung": 1165, "ipv6": 1165, "\u00e4quivalent": 1165, "ungleich": 1165, "ressourcenschonend": 1165, "pfadnamen": 1165, "bedienbar": 1165, "mittlerweis": 1165, "eingepasst": 1165, "angenehm": 1165, "umzugehen": 1165, "widmen": 1165, "verbundenen": 1165, "auszusetzen": 1165, "reagiert": 1165, "gelesen": 1165, "eventgetrieben": 1165, "knopfdruck": 1166, "abnimmt": 1166, "zahlreichen": 1166, "abgeklopft": 1166, "angst": 1166, "kaputtmachen": 1166, "konstruktiv": 1166, "einfachheit": 1166, "klarzumachen": 1166, "umzusetzen": 1166, "anstatt": 1166, "auszustatten": 1166, "gedanken": 1166, "erkannt": 1166, "entscheidung": 1166, "verbockt": 1166, "softwareentwickl": 1166, "jedwed": 1166, "stabilen": 1166, "abliefern": 1166, "entscheidungstr\u00e4g": 1166, "vorgesetzt": 1166, "schl\u00fcssige": 1166, "kan\u00e4l": 1166, "etablieren": 1166, "unittestframework": 1166, "tragen": 1166, "schwerf\u00e4llig": 1166, "halben": 1166, "\u00fcbrige": 1166, "zurechtzufinden": 1166, "vortragend": 1166, "aufgrund": 1166, "aufwarten": 1166, "beibringen": 1166, "\u00fcppigen": 1166, "verbergen": 1166, "pr\u00e4ferierten": 1166, "vortragenden": 1166, "kochtopf": [], "powercontrol": 311, "temperaturecontrol": 311, "get_target_temperatur": 311, "_run": 311, "kochtopftemperaturecontrol": 311, "get_current_temperatur": 311, "boilingpot_suit": 116, "status_report": 116, "percentage_displai": 116, "fh2021_boiling_pot_displai": [116, 121], "fh2021_display_infrastructur": [116, 120, 121], "logger_suit": 117, "loggerbasictest": 117, "sensor_values_suit": 117, "sensor_config_suit": 117, "duplicate_sensor": 117, "src_demo": [120, 123], "pwm_control": 123, "standup": 126, "heis": [733, 737], "crtp": 735}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 857], "googl": 0, "map": [0, 7, 126, 194, 199, 202, 205, 208, 224, 234, 298, 325, 521, 522, 550, 611, 612, 703, 704, 768, 914], "streetview": 0, "curriculum": [1, 73, 74], "vita": 1, "\u00fcber": [2, 179, 189, 194, 202, 210], "mich": [2, 196], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 143], "angebot": 5, "In": [5, 32, 45, 65, 112, 151, 153, 154, 156, 186, 189, 250, 251, 253, 272, 274, 297, 310, 348, 439, 441, 447, 448, 509, 514, 516, 557, 561, 572, 573, 574, 575, 576, 577, 602, 659, 663, 667, 697, 698, 704, 717, 775, 824, 825, 832, 888, 938, 971, 973, 987, 994, 1035, 1148], "hous": 5, "schulungen": [5, 1142], "zu": [5, 23, 172, 189], "meiner": 5, "person": [5, 247, 468, 667], "schwerpunk": 5, "c": [5, 7, 67, 68, 69, 70, 71, 97, 107, 108, 110, 111, 114, 143, 157, 172, 173, 189, 199, 207, 208, 224, 249, 250, 251, 253, 254, 262, 271, 273, 310, 311, 312, 333, 339, 348, 357, 397, 398, 435, 442, 447, 454, 461, 503, 509, 520, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 565, 566, 570, 571, 572, 584, 590, 592, 629, 637, 652, 654, 655, 656, 659, 660, 692, 693, 697, 704, 705, 713, 722, 727, 731, 749, 897, 917, 935, 938, 1040, 1145, 1146, 1147, 1148, 1149, 1151], "python": [5, 8, 11, 59, 60, 62, 63, 90, 95, 139, 166, 169, 178, 179, 181, 182, 183, 185, 187, 189, 192, 194, 197, 203, 204, 206, 209, 211, 213, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 232, 235, 237, 240, 242, 243, 244, 245, 246, 248, 250, 251, 253, 255, 256, 257, 258, 259, 260, 265, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 330, 333, 335, 348, 655, 683, 697, 704, 897, 899, 996, 999, 1003, 1018, 1019, 1020, 1022, 1024, 1026, 1034, 1045, 1048, 1093, 1094, 1095, 1108, 1109, 1111, 1121, 1122, 1123, 1124, 1125, 1156, 1157], "linux": [5, 79, 80, 81, 97, 110, 111, 114, 146, 151, 159, 161, 162, 164, 171, 186, 188, 193, 198, 252, 261, 262, 282, 283, 333, 335, 348, 350, 774, 826, 827, 830, 836, 893, 895, 899, 900, 901, 903, 916, 934, 957, 1143, 1153, 1154, 1161, 1162, 1163, 1164, 1165], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 60, 62, 63, 78, 139, 141, 162, 198, 207, 251, 253, 261, 290, 293, 332, 438, 1094, 1150, 1153], "materi": [6, 24, 28, 30, 169, 171, 186, 207, 329, 344, 345, 349, 438, 1093, 1094, 1115], "einleitung": [7, 199], "datatyp": [7, 189, 194, 196, 199, 202, 211, 215, 218, 221, 226, 228, 234, 238, 241, 243, 244, 256, 258, 259, 265, 266, 268, 276, 278, 279, 280, 284, 285, 286, 296, 298, 300, 302, 306, 307, 308, 314, 325, 353, 403, 406, 997, 1026, 1027, 1031], "number": [7, 199, 202, 205, 226, 238, 241, 325, 683, 753, 760, 761, 924, 998, 1014, 1017, 1026, 1034, 1035, 1056, 1059, 1069, 1070, 1112, 1116, 1117, 1140], "integ": [7, 179, 189, 194, 199, 202, 226, 228, 238, 241, 247, 259, 266, 286, 298, 302, 308, 325, 371, 418, 423, 639, 1005, 1026, 1035], "string": [7, 165, 166, 172, 179, 189, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 243, 244, 247, 256, 259, 263, 266, 280, 286, 298, 302, 308, 322, 324, 325, 352, 365, 366, 372, 378, 442, 620, 621, 622, 635, 666, 667, 1026, 1039, 1040, 1041, 1076, 1119], "compound": [7, 189, 199, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 276, 280, 286, 298, 302, 406, 1027], "list": [7, 11, 23, 165, 166, 179, 189, 196, 199, 202, 205, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 308, 411, 442, 509, 533, 550, 564, 607, 655, 668, 705, 758, 785, 786, 787, 809, 879, 991, 994, 997, 998, 1007, 1027, 1035, 1042, 1071, 1072, 1123], "arrai": [7, 167, 189, 199, 352, 361, 365, 403, 405, 415, 428, 538, 590, 592, 600, 644, 659, 670, 709], "javascript": [7, 199, 238], "std": [7, 107, 126, 199, 208, 224, 250, 251, 253, 310, 311, 457, 516, 521, 522, 532, 550, 573, 574, 575, 576, 577, 585, 591, 592, 593, 594, 604, 611, 612, 622, 635, 648, 651, 655, 658, 660, 667, 703, 704, 705, 709, 711, 714, 715, 716, 718, 719, 724, 725, 726, 727, 729, 730, 731, 733, 739, 740, 741, 745, 748], "vector": [7, 107, 199, 516, 532, 550, 557, 573, 591, 592, 593, 594, 608, 651, 660, 705, 733, 950], "java": [7, 199], "dictionari": [7, 165, 179, 189, 194, 196, 199, 202, 210, 211, 215, 218, 221, 226, 228, 231, 234, 238, 241, 244, 247, 256, 259, 266, 276, 280, 286, 298, 302, 308, 325, 991, 995, 1008, 1027, 1043, 1063, 1090], "kei": [7, 156, 199, 247, 325, 614, 615, 857, 908, 910], "valu": [7, 63, 184, 199, 270, 271, 325, 363, 419, 576, 935, 957, 1028], "set": [7, 38, 63, 184, 189, 194, 199, 202, 210, 211, 215, 218, 221, 226, 228, 234, 238, 241, 244, 256, 259, 266, 276, 280, 286, 298, 302, 308, 853, 854, 969, 991, 1027, 1044, 1082, 1107, 1117], "mathematisch": [7, 199], "mengen": [7, 189, 199], "while": [7, 166, 179, 189, 199, 218, 226, 228, 231, 234, 241, 244, 266, 308, 388, 389, 795, 800, 801, 1030, 1056, 1080], "function": [7, 43, 153, 166, 184, 189, 199, 202, 205, 208, 211, 215, 218, 226, 228, 234, 238, 243, 244, 247, 250, 251, 253, 255, 259, 266, 272, 280, 290, 291, 293, 296, 297, 298, 300, 306, 307, 308, 310, 311, 314, 330, 363, 365, 370, 397, 399, 401, 402, 407, 439, 440, 499, 533, 557, 566, 571, 573, 578, 582, 598, 655, 662, 665, 666, 667, 668, 677, 707, 719, 720, 758, 759, 821, 915, 917, 955, 990, 992, 993, 995, 997, 998, 1017, 1034, 1036, 1037, 1038, 1046, 1068, 1070, 1074, 1077, 1085, 1087, 1119], "basic": [8, 63, 70, 90, 145, 157, 166, 178, 183, 185, 186, 187, 188, 192, 193, 197, 198, 207, 216, 219, 222, 229, 235, 240, 243, 246, 252, 258, 261, 265, 268, 275, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 293, 296, 297, 298, 300, 301, 302, 306, 307, 308, 309, 314, 325, 348, 393, 397, 400, 406, 433, 440, 456, 457, 511, 514, 579, 584, 587, 590, 591, 593, 597, 600, 611, 617, 626, 662, 670, 704, 709, 713, 714, 715, 716, 748, 760, 761, 762, 823, 826, 827, 830, 840, 879, 890, 895, 904, 916, 923, 931, 939, 971, 993, 994, 1047, 1049, 1083, 1102, 1113, 1114, 1134, 1135, 1136, 1154, 1157], "2021": [8, 11, 113, 190, 192, 195, 197, 198, 200, 203, 206, 207, 208, 209, 213, 216, 218, 219, 221, 222, 224, 322, 323, 330, 333, 334, 335, 336, 337, 338, 339, 348], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 139, 143, 153, 162, 167, 182, 183, 185, 186, 187, 188, 190, 192, 193, 197, 200, 203, 206, 207, 208, 209, 213, 216, 225, 229, 232, 235, 237, 240, 243, 246, 255, 258, 265, 268, 349, 1094, 1100], "inform": [8, 39, 131, 141, 153, 178, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 197, 200, 203, 206, 207, 208, 209, 213, 216, 225, 229, 232, 235, 237, 240, 243, 246, 255, 258, 265, 268, 321, 330, 433, 717, 1024, 1094], "\u00fcberblick": [8, 190, 200, 209, 225, 237, 1147], "log": [8, 105, 130, 147, 182, 183, 186, 187, 195, 197, 198, 200, 203, 207, 209, 213, 216, 225, 237, 246, 330, 343, 344, 824, 825, 832], "tag": [8, 173, 192, 196, 200, 203, 209, 225, 237, 238], "1": [8, 19, 23, 37, 73, 78, 97, 107, 114, 148, 151, 163, 171, 173, 178, 182, 183, 185, 186, 187, 189, 190, 192, 197, 198, 200, 203, 207, 208, 209, 213, 216, 219, 222, 225, 229, 237, 262, 265, 268, 271, 272, 273, 274, 275, 279, 283, 285, 290, 296, 297, 300, 301, 311, 329, 331, 332, 339, 346, 348, 351, 352, 353, 355, 359, 363, 372, 374, 375, 376, 377, 381, 382, 385, 388, 394, 395, 396, 397, 398, 401, 403, 407, 411, 413, 415, 418, 419, 420, 421, 423, 424, 426, 427, 433, 447, 457, 460, 462, 498, 560, 562, 569, 580, 583, 590, 592, 673, 678, 719, 724, 730, 744, 745, 756, 761, 768, 779, 789, 857, 896, 897, 903, 912, 926, 939, 940, 942, 944, 946, 947, 958, 965, 969, 972, 973, 989, 997, 1002, 1023, 1025, 1026, 1032, 1035, 1040, 1041, 1043, 1044, 1045, 1046, 1108, 1119, 1120, 1143], "2": [8, 19, 23, 37, 74, 78, 97, 107, 114, 148, 151, 173, 178, 179, 182, 183, 185, 186, 187, 189, 192, 196, 197, 198, 200, 203, 207, 208, 209, 213, 216, 218, 219, 222, 225, 229, 237, 262, 265, 268, 271, 272, 273, 274, 275, 279, 283, 290, 296, 297, 300, 301, 307, 311, 344, 346, 348, 351, 352, 353, 355, 359, 363, 372, 374, 375, 376, 377, 381, 382, 385, 388, 394, 395, 397, 398, 401, 403, 407, 411, 413, 415, 418, 419, 420, 421, 423, 424, 426, 427, 433, 448, 457, 460, 462, 498, 547, 560, 562, 569, 580, 583, 590, 592, 674, 679, 719, 724, 730, 744, 745, 761, 768, 789, 857, 896, 897, 903, 912, 926, 939, 940, 942, 944, 946, 947, 958, 965, 969, 972, 973, 985, 989, 997, 1002, 1023, 1025, 1026, 1032, 1034, 1035, 1041, 1043, 1044, 1045, 1046, 1104, 1106, 1107, 1108, 1119, 1120], "live": [8, 42, 44, 45, 165, 168, 190, 200, 203, 213, 262, 555, 595, 596, 598, 599, 602, 603, 604, 616, 655, 666, 699, 700, 727, 729, 828, 854, 918, 936], "hack": [8, 42, 44, 45, 165, 168, 190, 200, 203, 213, 262, 265, 269, 272, 275, 301, 555, 595, 596, 598, 599, 602, 603, 604, 616, 655, 666, 699, 700, 727, 729, 855, 936], "jupyt": [8, 9, 40, 190, 191, 195, 196, 197, 200, 201, 203, 204, 213, 214, 216, 217, 219, 220, 223, 225, 227, 230, 233, 236, 239, 242, 244, 245, 248, 257, 260, 263, 267, 276, 277, 281, 287, 292, 295, 298, 299, 302, 303, 309, 325, 1100, 1101], "notebook": [8, 9, 40, 185, 190, 191, 195, 196, 197, 200, 201, 203, 204, 206, 213, 214, 216, 217, 219, 220, 221, 223, 225, 227, 230, 233, 236, 239, 242, 244, 245, 248, 257, 260, 263, 267, 276, 277, 281, 287, 292, 295, 298, 299, 302, 303, 309, 325, 330, 1098, 1100, 1101], "link": [8, 23, 39, 130, 149, 167, 178, 181, 183, 185, 187, 190, 192, 197, 198, 200, 209, 213, 216, 219, 225, 232, 243, 246, 279, 285, 335, 337, 411, 413, 662, 676, 683, 701, 708, 712, 774, 785, 786, 836, 857, 878, 896, 903, 911, 987, 988, 1019, 1049, 1050, 1095, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1126, 1131], "programmierung": [9, 11, 165, 190, 191, 200, 201, 209, 225, 227, 237, 239, 348], "grundlagen": [9, 11, 178, 189, 190, 191, 200, 201, 203, 204, 209, 213, 217, 220, 223, 225, 227, 237, 239, 242, 245, 248, 257, 260, 281, 348], "detail": [10, 78, 198, 202, 234, 241, 273, 325, 347, 423, 501, 591, 1025], "content": [11, 24, 37, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 161, 170, 174, 175, 205, 332, 436, 538, 541, 547, 550, 556, 638, 715, 826, 846, 859, 865, 871, 874, 891, 899, 900, 907, 916, 932, 934, 936, 951, 961, 964, 978, 998, 1053, 1054, 1058, 1067, 1081, 1088, 1135, 1137, 1140, 1148, 1151, 1153], "anhand": [11, 189, 209, 225, 237, 348, 1154], "von": [11, 23, 160, 165, 169, 172, 179, 189, 196, 209, 210, 225, 237, 325, 348, 1154], "12": [11, 23, 45, 115, 117, 123, 126, 169, 188, 189, 193, 200, 208, 221, 222, 224, 255, 306, 307, 308, 311, 330, 335, 339, 341, 348], "und": [11, 23, 159, 163, 179, 189, 190, 194, 196, 200, 202, 205, 209, 225, 228, 234, 237, 241, 247, 331, 348, 373, 382, 1147, 1158], "13": [11, 23, 41, 45, 156, 178, 189, 190, 200, 253, 262, 265, 266, 268, 348], "4": [11, 23, 107, 148, 173, 182, 185, 189, 197, 198, 200, 203, 207, 208, 225, 237, 262, 339, 348, 353, 411, 415, 421, 457, 460, 562, 680, 997], "templat": [12, 126, 207, 224, 273, 520, 533, 534, 535, 536, 552, 553, 554, 582, 583, 584, 590, 623, 669, 672, 677, 679, 707, 739], "descript": [12, 59, 62, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 468, 555, 563, 578, 581, 584, 620, 625, 634, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 695, 696, 720, 728, 732, 743, 747, 749, 891, 899, 900, 954], "sidebar": [12, 37], "metadata": [12, 250, 251, 253, 879], "about": [13, 107, 143, 162, 221, 226, 238, 256, 259, 265, 269, 286, 293, 308, 450, 660, 697, 886, 987, 1039, 1042, 1043, 1044], "thi": [13, 32, 37, 115, 117, 118, 119, 122, 123, 125, 130, 148, 153, 154, 156, 157, 167, 176, 569, 583, 698, 816, 895, 918, 971, 988, 995, 997], "site": [13, 28, 32, 130, 150, 152, 176], "licens": 13, "gplv3": 13, "github": [13, 112, 126, 150, 152, 182, 183, 195, 203, 330, 498, 512, 1095], "sphinx": [13, 40, 66, 152], "instal": [13, 61, 119, 149, 153, 157, 161, 174, 175, 178, 203, 207, 208, 288, 304, 330, 335, 350, 445, 772, 914, 969, 980, 985, 986, 1019, 1049, 1050, 1082, 1095, 1111, 1128, 1130, 1135, 1137, 1150], "instruct": [13, 414, 724, 942, 972, 989], "pip": [13, 279], "venv": [13, 279], "work": [13, 17, 65, 97, 112, 114, 129, 134, 148, 182, 213, 251, 253, 270, 271, 272, 273, 337, 431, 432, 433, 512, 583, 748, 816, 817, 853, 856, 860, 985], "progress": [13, 17, 129], "more": [13, 148, 166, 179, 218, 221, 226, 234, 238, 241, 243, 255, 256, 258, 259, 262, 264, 265, 268, 274, 275, 278, 279, 284, 285, 286, 293, 296, 300, 306, 307, 308, 314, 330, 353, 359, 382, 398, 400, 414, 424, 440, 450, 452, 562, 572, 575, 582, 595, 601, 655, 697, 698, 702, 719, 805, 834, 835, 836, 840, 841, 886, 913, 955, 992, 994, 996, 1039, 1042, 1043, 1044, 1094, 1103, 1128, 1140], "opentrain": [14, 23], "draft": [15, 743, 891, 1048], "topic": [15, 21, 73, 74, 98, 99, 101, 102, 103, 104, 142, 178, 182, 185, 206, 207, 208, 219, 224, 243, 246, 262, 265, 268, 271, 272, 296, 300, 310, 311, 320, 334, 338, 339, 348, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 461, 504, 505, 506, 507, 508, 509, 510, 513, 555, 563, 578, 581, 584, 600, 606, 610, 618, 623, 625, 628, 634, 652, 653, 657, 664, 671, 682, 695, 696, 706, 711, 720, 728, 732, 743, 747, 749, 750, 751, 774, 894, 909, 927, 929, 948, 954, 975, 981, 982, 997, 1002, 1010, 1048, 1097, 1101, 1105, 1109, 1111, 1115, 1127, 1133], "miscellan": [16, 128, 139, 143, 162, 166, 186, 215, 226, 228, 234, 244, 250, 251, 255, 259, 262, 271, 274, 275, 280, 285, 286, 296, 297, 300, 307, 308, 310, 533, 555, 634, 638, 669, 732, 933, 944, 946, 1041, 1109], "s5": [17, 18, 143], "integr": [17, 659, 675], "web": [17, 93, 94, 144], "slide": [17, 18, 30, 45, 166, 333, 345, 965, 969], "implement": [17, 115, 117, 118, 119, 122, 123, 125, 126, 234, 297, 310, 316, 322, 462, 469, 479, 484, 494, 495, 496, 497, 501, 509, 514, 515, 559, 560, 565, 571, 573, 631, 655, 666, 755, 758, 777, 813, 992, 998, 1014, 1073], "note": [17, 37, 61, 128, 161, 316, 455, 842], "todo": [17, 143, 172, 175, 186, 192, 317, 318, 319, 336, 438, 533, 534, 537, 540, 543, 546, 549, 552, 754, 758, 766, 798, 960, 963, 967, 1110, 1134, 1139], "test": [18, 37, 42, 43, 44, 45, 50, 71, 115, 117, 118, 119, 120, 122, 123, 125, 157, 178, 208, 232, 243, 246, 255, 264, 265, 268, 269, 270, 274, 275, 288, 290, 293, 296, 297, 300, 304, 338, 344, 348, 439, 453, 462, 482, 498, 512, 514, 515, 575, 758, 777, 810, 902, 931, 983, 986, 1050, 1083, 1090, 1091, 1092, 1100, 1128, 1129, 1133, 1135, 1137, 1140, 1150, 1166], "level": [19, 427], "head": [19, 37, 785, 888, 1103], "imag": [19, 167, 186, 985], "screencast": [20, 140], "written": [21, 114, 558, 561], "new": [21, 126, 142, 208, 224, 250, 251, 253, 310, 311, 348, 501, 538, 654, 655, 695, 731, 749, 777, 810, 1112], "write": [21, 42, 50, 58, 145, 501, 538, 565, 677, 692, 715, 755, 923, 930, 1015, 1045, 1051, 1120], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 202, 210], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 97, 107, 114, 126, 148, 173, 182, 183, 185, 186, 187, 188, 189, 192, 197, 198, 203, 207, 208, 209, 211, 213, 218, 219, 222, 225, 229, 237, 244, 262, 265, 268, 271, 273, 274, 275, 279, 283, 285, 296, 297, 298, 300, 301, 307, 311, 348, 353, 403, 407, 411, 415, 421, 423, 424, 426, 427, 457, 460, 462, 498, 562, 675, 745, 926, 942, 946, 947, 997, 1026, 1034, 1040, 1045], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 255, 348, 823], "anschlussf\u00f6rderung": 23, "die": [23, 53, 154, 172, 210, 1155], "besonder": [23, 189], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 173, 179, 189, 348, 1146], "da": [23, 169, 179, 196, 205, 238], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 148, 166, 173, 178, 179, 181, 189, 207, 208, 210, 262, 339, 348, 411, 421, 457, 460, 681, 824, 825], "l\u00f6sung": [23, 179], "beschreibung": 23, "der": [23, 189, 194, 210, 331, 348, 1143], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 189, 226, 244, 246, 516, 518, 519, 523, 611, 613, 614, 1031], "ein": [23, 179, 210, 1154, 1159], "nachhaltigen": 23, "impact": 23, "nach": [23, 246], "projektend": 23, "6": [23, 126, 189, 190, 210, 211, 244, 348, 411, 421, 457, 460, 1040, 1158], "umfeldanalys": 23, "wa": [23, 178, 194, 644, 735], "ist": [23, 179], "stand": 23, "technik": 23, "method": [23, 202, 205, 215, 226, 228, 231, 234, 244, 259, 271, 280, 286, 298, 302, 308, 322, 324, 332, 511, 547, 559, 566, 567, 568, 571, 573, 575, 578, 630, 633, 641, 645, 713, 714, 715, 716, 717, 739, 756, 791, 793, 807, 1012, 1014, 1040, 1041, 1042, 1129], "wissen": 23, "welch": 23, "ander": [23, 165, 331], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 154, 194, 210], "genannten": 23, "problemen": 23, "gibt": [23, 189], "e": [23, 430, 714], "schon": 23, "7": [23, 182, 189, 190, 210, 348, 411, 421, 1158], "alleinstellungsmerkm": 23, "8": [23, 189, 190, 209, 210, 348, 411, 421, 903, 1108, 1158], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 182, 183, 189, 190, 210, 348, 411, 421, 997, 1143, 1158], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 189, 215, 228, 241, 244, 259, 266, 280, 286, 298, 302, 348, 1035], "projektbereich": 23, "angaben": 23, "zur": [23, 160, 179, 189], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 165, 210], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 197, 255, 285, 301, 663], "risiken": 23, "erfolgskriterien": 23, "am": [23, 179, 238, 348], "angestrebt": 23, "jahr": 23, "10": [23, 45, 99, 100, 126, 132, 163, 166, 171, 182, 185, 189, 224, 225, 252, 253, 254, 255, 256, 270, 293, 294, 296, 297, 299, 330, 334, 335, 336, 340, 348, 411, 518, 824, 825], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 115, 117, 123, 125, 126, 164, 169, 187, 188, 189, 218, 219, 224, 249, 253, 255, 258, 259, 293, 300, 301, 302, 303, 304, 305, 306, 307, 308, 337, 338, 348, 411, 533, 656, 659, 692, 693, 704, 713, 749], "projekttermin": 23, "termin": [23, 828, 940, 1003], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 194, 210], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 189], "finanziert": 23, "durch": [23, 179], "sonderprei": 23, "14": [23, 45, 115, 117, 123, 126, 169, 178, 189, 190, 193, 207, 249, 348], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 169, 178, 189, 348], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 196, 202], "haben": [23, 179], "sie": [23, 179], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 208, 232, 246, 258, 259, 348, 997, 1143], "datenschutz": 23, "screenplai": [24, 63, 315, 439, 535, 538, 541, 544, 547, 550, 553, 585, 586, 587, 588, 589, 592, 593, 594, 612, 613, 614, 615, 752, 755, 760, 765, 770, 772, 810, 813, 816, 961, 964, 968, 1036, 1123, 1130, 1135, 1137, 1140], "The": [24, 39, 43, 45, 61, 100, 112, 115, 144, 157, 189, 205, 208, 211, 218, 235, 244, 247, 262, 270, 272, 274, 280, 283, 290, 293, 296, 297, 300, 302, 310, 311, 351, 359, 360, 397, 398, 413, 420, 421, 430, 431, 435, 436, 445, 513, 514, 566, 590, 611, 612, 634, 654, 655, 663, 668, 670, 672, 697, 715, 718, 729, 749, 793, 823, 832, 833, 840, 857, 860, 871, 874, 877, 879, 888, 890, 894, 910, 912, 914, 915, 917, 923, 931, 935, 950, 952, 959, 971, 973, 974, 983, 984, 992, 993, 995, 999, 1003, 1011, 1014, 1018, 1020, 1022, 1029, 1034, 1040, 1082, 1103, 1110, 1119, 1129, 1150], "problem": [24, 395, 417, 440, 441, 449, 455, 456, 457, 460, 466, 513, 514, 656, 668, 672, 692, 693, 702, 718, 731, 735, 753, 787, 834, 853, 912, 914, 918, 973, 988, 989, 993, 1007, 1102, 1124, 1131], "And": [24, 42, 61, 63, 112, 116, 126, 157, 253, 256, 259, 262, 265, 270, 271, 272, 273, 274, 275, 280, 283, 285, 288, 290, 293, 296, 297, 300, 301, 302, 304, 308, 310, 311, 371, 415, 439, 440, 442, 445, 446, 451, 452, 453, 459, 462, 468, 476, 477, 482, 490, 496, 511, 558, 559, 565, 570, 586, 590, 591, 592, 594, 612, 627, 628, 632, 635, 660, 666, 668, 670, 683, 700, 703, 704, 705, 707, 708, 713, 725, 727, 729, 731, 745, 761, 819, 823, 824, 825, 829, 832, 838, 840, 876, 888, 890, 895, 899, 905, 906, 917, 930, 952, 980, 981, 983, 985, 986, 987, 988, 990, 995, 999, 1000, 1003, 1007, 1008, 1009, 1014, 1015, 1016, 1017, 1081, 1082, 1083, 1091, 1103, 1108, 1113, 1114, 1116, 1117, 1118, 1128, 1150], "me": [24, 150, 310, 929], "open": [24, 134, 159, 275, 465, 755, 756, 920, 923, 926, 928, 965, 992, 1045], "sourc": [24, 40, 149, 159, 175, 440, 458, 753, 756, 758, 761, 763, 766, 770, 775, 777, 787, 789, 797, 800, 805, 924, 973, 1050, 1108], "walk": [24, 262, 330], "through": [24, 262, 330], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 147, 151, 153, 157, 167, 168, 174, 176, 186, 205, 207, 208, 221, 224, 356, 358, 361, 376, 391, 413, 423, 431, 432, 441, 443, 457, 460, 477, 498, 598, 622, 643, 651, 663, 667, 668, 704, 718, 729, 739, 740, 741, 889, 901, 902, 903, 939, 955, 972, 973, 983, 984, 990, 992, 995, 998, 1008, 1017, 1123, 1129, 1130], "case": [25, 26, 27, 28, 29, 30, 207, 387, 391, 462, 524, 526, 529, 703, 704, 924, 928, 929, 930, 982, 990, 1017, 1129, 1135], "custom": [25, 134, 137, 150, 320, 559, 560, 574, 580, 604, 658, 1117, 1119, 1135], "subtract": [25, 557], "known": [25, 145], "calcul": [26, 205, 380, 459, 1015], "minimum": [26, 775], "durat": 26, "trainer": [27, 161], "editor": [27, 198], "end": [27, 669], "user": [27, 42, 46, 208, 210, 348, 561, 640, 645, 646, 647, 648, 649, 650, 761, 829, 830, 832, 833, 834, 842, 843, 854, 914, 994, 1084, 1086, 1088, 1089, 1091, 1123], "audienc": [27, 1150], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 100, 112, 126, 132, 138, 157, 167, 175, 176, 184, 224, 234, 262, 265, 270, 279, 297, 348, 366, 388, 394, 436, 439, 582, 585, 626, 635, 639, 665, 666, 705, 765, 770, 811, 816, 901, 913, 931, 955, 964, 971, 1013, 1050, 1090, 1094, 1095, 1100, 1102, 1143], "other": [28, 38, 52, 205, 274, 286, 332, 663, 775, 797, 842, 1002], "menu": 29, "choos": 29, "show": 30, "plain": [30, 598, 626, 627, 655], "text": [30, 283, 397, 884, 887, 890, 1045, 1120], "file": [30, 31, 42, 48, 167, 169, 205, 215, 218, 234, 241, 243, 244, 258, 262, 266, 276, 278, 279, 280, 283, 284, 285, 302, 306, 307, 308, 314, 321, 322, 337, 395, 439, 441, 447, 462, 541, 572, 755, 756, 757, 765, 797, 824, 825, 828, 846, 851, 852, 858, 859, 862, 863, 864, 872, 876, 879, 880, 884, 887, 889, 905, 913, 914, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 937, 961, 965, 971, 972, 986, 992, 1021, 1045, 1050, 1051, 1052, 1073, 1075, 1084, 1086, 1103, 1135], "send": [31, 965, 969], "A": [31, 45, 63, 112, 123, 126, 146, 157, 224, 250, 251, 253, 265, 269, 270, 271, 272, 274, 279, 310, 311, 348, 354, 363, 393, 420, 438, 439, 442, 456, 476, 490, 498, 501, 511, 516, 531, 557, 572, 573, 582, 591, 621, 632, 633, 646, 655, 660, 668, 670, 697, 700, 713, 716, 718, 824, 825, 828, 842, 853, 876, 880, 913, 915, 919, 920, 921, 924, 927, 928, 929, 930, 937, 950, 955, 958, 971, 984, 985, 988, 989, 990, 993, 998, 1017, 1020, 1082, 1108, 1113, 1116, 1119, 1120, 1128], "v4l": 31, "camera": 31, "devic": [31, 63, 81, 97, 114, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 764, 765, 787, 791, 792, 793, 828, 901, 903, 961], "output": [31, 50, 118, 167, 179, 321, 453, 636, 839, 997, 1100, 1135], "over": [31, 218, 226, 228, 748, 903, 1033, 1034], "ssh": [31, 198, 262, 283, 327, 335, 904, 907, 908, 909, 910, 911, 912, 913, 914], "captur": [31, 697, 698, 700], "To": [31, 37, 39, 42, 44, 53, 143, 241, 270, 310, 461, 462, 477, 498, 624, 635, 655, 659, 668, 670, 672, 683, 697, 705, 713, 715, 717, 718, 729, 768, 809, 811, 824, 825, 905, 906, 913, 973, 983, 985, 990, 992, 993, 1013, 1014, 1091, 1112, 1113, 1119], "plai": [31, 63, 683], "remot": [31, 97, 112, 114, 128, 466, 479, 493, 824, 825, 905, 906, 910, 913, 914], "system": [31, 148, 221, 262, 283, 337, 348, 369, 433, 630, 721, 846, 852, 914, 916, 917, 918, 923, 934, 952, 955, 958, 1024, 1123, 1143, 1161, 1162, 1163, 1164, 1165], "emoji": 32, "code": [32, 41, 43, 45, 107, 176, 177, 179, 180, 203, 219, 272, 274, 275, 288, 304, 348, 417, 427, 437, 438, 439, 441, 447, 448, 449, 454, 458, 534, 537, 540, 543, 546, 549, 552, 582, 667, 715, 735, 758, 759, 763, 764, 765, 766, 767, 777, 778, 787, 788, 799, 800, 801, 805, 806, 929, 960, 963, 967, 987, 988, 989, 1090, 1091, 1092, 1095, 1098, 1101, 1108, 1121, 1130, 1134, 1139, 1150], "sphinxemoji": 32, "setup": [32, 63, 78, 109, 149, 153, 175, 182, 183, 185, 186, 187, 208, 258, 264, 265, 268, 271, 273, 275, 278, 279, 283, 284, 285, 306, 307, 314, 453, 511, 513, 894, 902, 910, 921, 985, 986, 1019, 1082, 1083, 1130, 1140], "most": [32, 38, 63, 670, 1123], "here": [32, 147, 462, 913], "all": [32, 38, 53, 63, 202, 205, 224, 270, 300, 311, 348, 629, 655, 663, 698, 718, 816, 834, 971, 987, 1005, 1093], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 150, 987, 1112, 1119], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 357, 372, 433, 878, 971], "arrow": 34, "isoamsr": 35, "relat": [35, 162, 265, 268, 375, 736], "isonum": 36, "binari": [36, 477, 1045], "oper": [36, 166, 179, 189, 202, 218, 221, 224, 231, 234, 238, 241, 255, 270, 290, 302, 325, 359, 374, 375, 376, 379, 380, 382, 383, 388, 400, 511, 533, 558, 559, 565, 573, 613, 713, 721, 727, 755, 756, 757, 839, 918, 955, 1014, 1024, 1026, 1028, 1044, 1114], "layout": [37, 234, 406], "page": [37, 94, 150, 152, 768, 857, 889, 917], "admonit": 37, "i": [37, 45, 147, 148, 165, 205, 215, 221, 226, 231, 234, 241, 243, 244, 276, 280, 283, 285, 322, 334, 359, 385, 432, 438, 456, 511, 530, 557, 564, 626, 632, 633, 668, 670, 693, 697, 702, 705, 714, 718, 722, 726, 770, 781, 802, 817, 828, 832, 833, 838, 839, 840, 853, 863, 876, 903, 913, 914, 915, 918, 919, 920, 921, 922, 923, 926, 928, 930, 932, 933, 950, 953, 971, 988, 990, 995, 1045, 1102, 1116, 1140], "an": [37, 115, 150, 221, 274, 289, 296, 300, 305, 326, 330, 348, 444, 449, 559, 668, 683, 758, 876, 902, 913, 918, 955, 988, 999, 1008, 1035, 1037, 1130, 1148], "tip": 37, "hint": [37, 479, 509], "import": [37, 157, 165, 205, 215, 224, 330, 564, 969, 994, 1002, 1110], "attent": [37, 1037], "caution": [37, 633], "error": [37, 43, 157, 221, 274, 275, 296, 297, 300, 398, 423, 457, 579, 589, 590, 674, 677, 839, 903, 915, 924, 928, 929, 930, 1007, 1063], "danger": [37, 365, 726, 854], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1144, 1145, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "local": [37, 39, 97, 112, 114, 128, 166, 189, 396, 428, 445, 466, 910, 913, 946, 973, 1036, 1130], "bleh": 37, "do": [37, 42, 143, 205, 247, 310, 389, 426, 445, 456, 655, 787, 809, 824, 825, 840, 971], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 940], "restructuredtext": 39, "cheat": [39, 330], "sheet": [39, 330], "further": [39, 131, 170, 206, 207, 229, 321, 330, 427, 663, 717, 1024], "document": [39, 152, 202, 218, 298, 325, 595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 608, 611, 616, 761, 777, 779, 783, 785, 807, 811, 814, 824, 825, 828, 832, 839, 840, 841, 842, 857, 858, 859, 860, 876, 879, 880, 913, 915, 917, 919, 920, 921, 923, 926, 927, 928, 929, 930, 933, 971, 972, 1023, 1047, 1057, 1120, 1128, 1135], "extern": [39, 288, 304, 316, 394, 443, 572, 772, 773, 902, 988, 1058, 1150], "section": 39, "refer": [39, 143, 146, 189, 215, 218, 221, 228, 241, 244, 250, 251, 253, 256, 259, 263, 266, 271, 274, 280, 286, 298, 310, 363, 401, 428, 570, 664, 667, 668, 670, 697, 698, 700, 709, 714, 716, 717, 745, 746, 804, 1035], "That": [39, 247, 250, 251, 253, 270, 297, 402, 460, 557, 564, 655, 658, 668, 697, 715, 716, 797, 832, 903, 913, 918, 919, 922, 990, 1017, 1137], "we": [39, 42, 45, 53, 310, 437, 439, 787, 816, 983, 1135], "anoth": [39, 234, 437, 955, 987], "contain": [39, 126, 224, 244, 270, 273, 311, 533, 549, 550, 551, 590, 591, 605, 606, 609, 610, 611, 655, 659, 707, 785, 985], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 132, 151, 453, 512, 575, 805, 894, 919, 920, 921, 985, 986, 1022, 1098, 1101, 1128], "seminar": 41, "clean": [41, 43, 45, 212, 272, 274, 275, 348, 438, 439], "2022": [41, 98, 99, 100, 101, 102, 103, 104, 224, 225, 226, 229, 232, 235, 237, 240, 243, 246, 249, 252, 253, 254, 255, 256, 258, 259, 340, 341, 342, 348], "04": [41, 104, 151, 224, 235, 237, 240, 273, 274, 275, 276, 277, 311, 330, 348, 985], "agenda": [41, 182, 183, 185, 186, 187, 188, 193, 197, 198, 235, 240, 252, 261, 265, 268, 274, 278, 282, 284, 288, 290, 296, 300, 304, 306, 310, 314, 343, 344, 1150], "timelin": 41, "befor": [42, 63, 134, 167, 290, 293, 713, 1135], "formal": [42, 359], "unit": [42, 43, 45, 71, 178, 208, 246, 255, 265, 268, 338, 498, 514, 575, 1083, 1133], "initi": [42, 215, 250, 251, 253, 310, 311, 361, 373, 422, 509, 540, 541, 542, 557, 564, 575, 612, 635, 655, 657, 658, 659, 660, 704, 726, 731, 791, 802, 814, 944, 946], "structur": [42, 43, 126, 139, 143, 166, 229, 250, 251, 253, 255, 277, 288, 299, 303, 304, 310, 391, 399, 406, 409, 415, 451, 498, 533, 704, 709, 729, 765, 793, 989, 1002, 1128, 1135, 1150], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 207, 533, 647, 651], "bin": 42, "binaryfil": 42, "cpp": [42, 447, 498, 501, 673, 674, 675, 678, 679, 680, 681, 684, 685, 687, 688, 689, 690, 691], "extend": [42, 202, 575, 1011], "read": [42, 49, 50, 58, 205, 212, 321, 322, 332, 366, 427, 439, 462, 663, 705, 755, 813, 919, 923, 929, 931, 1045, 1051, 1052, 1084, 1085, 1086, 1087, 1100, 1120], "iter": [42, 168, 179, 184, 189, 194, 196, 202, 205, 210, 211, 215, 218, 221, 226, 228, 231, 234, 243, 244, 255, 256, 258, 259, 265, 268, 272, 276, 278, 279, 280, 284, 285, 297, 298, 302, 306, 307, 308, 314, 322, 590, 591, 614, 655, 683, 690, 703, 704, 705, 748, 785, 997, 999, 1000, 1001, 1013, 1033, 1034, 1043], "bug": [42, 47, 53, 376, 541, 705], "faschingbau": [42, 150], "As": [42, 460, 477, 668, 707, 903, 937, 971, 1008, 1137], "last": [42, 376, 397, 398, 427, 580, 583, 719, 947, 969, 1135], "name": [42, 43, 118, 215, 218, 234, 370, 408, 566, 655, 797, 841, 859, 965, 1036, 1047], "wrap": [42, 178, 423, 655, 993], "up": [42, 148, 178, 212, 255, 273, 274, 296, 335, 423, 655, 1008], "what": [42, 45, 49, 53, 153, 156, 221, 231, 385, 426, 437, 561, 630, 649, 655, 667, 668, 697, 718, 766, 787, 797, 813, 817, 832, 840, 858, 897, 910, 913, 914, 918, 919, 922, 926, 958, 971, 983, 987, 995, 999, 1003, 1046, 1116, 1119], "have": [42, 45, 437, 787, 983, 988], "messag": [43, 146, 147, 436, 442, 945, 964, 965, 1111, 1135], "book": [43, 45, 193, 243, 285, 351, 436, 1095], "survei": [43, 437], "comment": [43, 202, 226, 241, 266, 325, 1023, 1064], "format": [43, 50, 205, 211, 226, 286, 1040, 1092], "object": [43, 179, 184, 221, 228, 234, 238, 246, 247, 255, 258, 259, 271, 272, 274, 275, 278, 279, 284, 290, 291, 293, 296, 297, 300, 301, 306, 314, 318, 437, 455, 460, 540, 541, 542, 557, 559, 562, 565, 567, 571, 573, 628, 630, 644, 659, 662, 665, 668, 714, 965, 988, 989, 994, 1002, 1008, 1010, 1012, 1046, 1113, 1117], "data": [43, 117, 118, 119, 166, 168, 194, 203, 229, 243, 246, 255, 279, 296, 297, 298, 300, 371, 415, 418, 439, 563, 567, 590, 709, 832, 946, 1013, 1081, 1095, 1100, 1102], "handl": [43, 221, 224, 234, 246, 265, 268, 273, 274, 275, 296, 297, 300, 341, 449, 457, 579, 915, 994, 1047], "boundari": [43, 1108], "class": [43, 179, 205, 224, 228, 231, 234, 247, 255, 271, 276, 290, 293, 442, 460, 467, 468, 485, 486, 498, 501, 515, 534, 535, 536, 559, 566, 567, 572, 574, 575, 576, 577, 583, 598, 626, 627, 646, 655, 656, 658, 666, 667, 699, 713, 753, 993, 1007, 1008, 1011, 1012, 1013, 1014], "switch": [44, 122, 124, 125, 126, 387, 419, 510], "googletest": [44, 174, 512, 1133], "git": [44, 77, 112, 126, 128, 149, 157, 161, 203, 207, 208, 262, 330, 335, 348, 770, 1095], "submodul": 44, "establish": [44, 45, 986], "demo": [44, 264, 265, 272, 443, 462, 699, 714, 828, 854, 918, 953, 957], "straightforward": [44, 179], "main": [44, 112, 404, 495, 496, 497, 734, 736, 738, 740, 987], "convers": [44, 202, 218, 226, 228, 234, 238, 241, 259, 270, 276, 280, 286, 298, 302, 308, 325, 376, 403, 627, 635, 1026, 1040], "fix": [44, 149, 157, 250, 251, 253, 270, 322, 565, 683, 729, 787, 788, 800, 801], "shortcom": 44, "softwar": [45, 126, 175, 272, 437, 438, 903, 976, 979, 1152], "craft": [45, 272, 438], "09": [45, 126, 151, 206, 216, 224, 290, 291, 292, 293, 294, 295, 348], "00": 45, "15": [45, 189, 195, 232, 265, 268, 278, 279, 280, 330, 337, 342, 348, 824, 825], "introductori": [45, 262, 683, 936], "word": [45, 241, 397, 398, 427, 430, 580, 583, 710, 719, 857, 1062, 1079], "engin": [45, 243, 903], "disciplin": 45, "coffe": 45, "break": [45, 189, 226, 390, 1030, 1033], "project": [45, 109, 112, 121, 126, 150, 166, 207, 208, 222, 246, 251, 253, 255, 271, 273, 274, 275, 288, 290, 293, 296, 297, 300, 301, 304, 336, 337, 338, 342, 344, 437, 439, 498, 503, 512, 513, 575, 1082, 1122, 1128, 1150, 1153], "enter": [45, 63, 218, 590, 633, 668, 694, 703, 717, 800, 889, 957, 987, 995, 1007, 1008, 1103, 1108, 1113], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 151, 859], "small": 45, "23": [45, 187, 213, 229, 235, 253, 261, 271, 282, 283, 348], "59": 45, "extrem": 45, "program": [45, 50, 63, 93, 162, 178, 184, 205, 208, 224, 234, 246, 247, 255, 258, 262, 272, 274, 275, 278, 279, 280, 284, 290, 293, 296, 297, 300, 301, 306, 314, 337, 348, 352, 353, 355, 391, 392, 393, 399, 425, 430, 435, 437, 442, 462, 495, 496, 497, 501, 557, 718, 734, 736, 738, 740, 758, 810, 842, 853, 854, 895, 897, 916, 931, 934, 935, 938, 950, 960, 968, 971, 1003, 1010, 1019, 1020, 1022, 1024, 1071, 1083, 1094, 1121, 1149, 1161, 1162, 1163, 1164, 1165], "session": 45, "find": [46, 131, 149, 167, 457, 516, 597, 615, 744, 885, 1137], "crash": [46, 149], "If": [46, 49, 561, 655, 670, 813, 927, 928, 994, 1119], "Not": [46, 63, 65, 115, 117, 118, 119, 122, 123, 125, 157, 238, 247, 523, 525, 528, 597, 633, 649, 655, 677, 692, 693, 705, 714, 787, 813, 853, 924, 927, 928, 929, 930, 950, 971, 988, 998, 1113, 1135], "found": [46, 525, 528, 597, 649, 1137], "state": [46, 147, 207, 683, 800, 802], "exist": [48, 65, 143, 523, 924, 927, 928, 930, 1011, 1119], "ar": [48, 146, 147, 226, 228, 241, 291, 423, 439, 561, 567, 655, 683, 955, 965, 993, 1002, 1014, 1118, 1137], "overwritten": 48, "done": [49, 112, 311, 461, 624, 718], "twice": 49, "altern": [50, 664], "csv": [50, 118, 126, 218, 235, 243, 246, 255, 258, 278, 279, 280, 284, 285, 300, 306, 307, 314, 439, 1051, 1052, 1053, 1084, 1085, 1086, 1087, 1092, 1103], "frontend": 50, "featur": [51, 53, 63, 258, 274, 275, 276, 278, 279, 284, 296, 300, 311, 416, 439, 695, 996, 1011, 1030, 1100, 1102], "search": [52, 595, 597, 598, 601, 611, 615, 635, 648, 649, 650, 886, 988, 1041, 1123], "By": [52, 174, 238, 270, 363, 570, 614, 645, 648, 650, 672, 683, 694, 697, 698, 700, 705, 709, 717, 744, 745, 746, 994, 1027, 1116, 1117, 1118, 1128], "index": [52, 189, 207, 226, 238, 286, 428, 681, 897, 1032, 1117, 1123, 1124, 1125], "backlog": 53, "need": [53, 322, 462, 677, 679, 955, 1103], "chang": [53, 112, 842, 853, 860], "Or": [53, 439, 447, 448, 462, 666, 705, 917, 1008, 1113], "Will": 53, "refactor": [53, 56, 439, 515, 765, 766, 767, 805, 1085, 1087, 1092], "after": [53, 182, 213, 389, 816, 832, 1011], "backingstor": [54, 55, 57], "ha": [54, 55, 680], "too": [54, 55, 433, 448, 655, 699, 722], "mani": [54, 55, 234, 427, 449, 705, 734, 736, 738, 740, 879, 959], "respons": [54, 55, 210, 465], "interfac": [54, 69, 86, 120, 124, 186, 234, 273, 311, 317, 448, 452, 462, 465, 469, 477, 488, 495, 496, 511, 513, 543, 544, 545, 552, 553, 554, 629, 756, 828, 896, 897, 900, 902, 1007, 1104], "load": [57, 167, 414, 450, 775, 776, 901, 943, 1005], "constructor": [57, 184, 234, 250, 251, 253, 259, 310, 511, 541, 547, 558, 559, 560, 561, 562, 564, 565, 574, 575, 576, 577, 644, 659, 660, 661, 666, 668, 692, 712, 713, 1009], "bool": 58, "realli": [58, 655, 717], "submiss": [59, 62, 109], "pointless": [59, 60, 62, 63, 1014], "blink": [59, 60, 62, 63, 330], "With": [59, 60, 62, 63, 97, 114, 176, 207, 254, 270, 272, 274, 296, 300, 348, 432, 440, 461, 476, 490, 512, 583, 665, 718, 731, 823, 824, 825, 886, 889, 894, 899, 925, 988, 1036, 1116, 1118, 1129, 1130, 1133], "asyncio": [59, 60, 62, 63], "libgpiod": [59, 60, 61, 62, 63, 122], "raspberri": [59, 60, 62, 63, 157, 186, 316, 348, 777, 798, 894, 898, 901, 976, 980, 982, 984, 1159], "pi": [59, 60, 61, 62, 63, 157, 186, 348, 777, 797, 798, 894, 901, 983, 984, 1159], "biographi": [59, 62], "abstract": [59, 62, 255, 290, 293, 455, 470, 484, 833, 919, 920, 921, 1007], "fedora": [61, 149, 156, 770, 771, 772, 773, 985], "prepar": [61, 149, 167, 182, 183, 185, 186, 187, 188, 198, 207, 222, 251, 253, 261, 498, 575, 797], "tarbal": [61, 157], "On": [61, 63, 112, 207, 241, 243, 265, 269, 270, 274, 296, 300, 350, 512, 514, 559, 590, 591, 595, 601, 704, 729, 840, 919, 920, 921, 926, 931, 935, 958, 985, 1050], "build": [61, 68, 147, 149, 157, 174, 175, 208, 226, 440, 442, 450, 498, 512, 574, 575, 576, 577, 765, 770, 771, 772, 773, 775, 797, 798, 901, 919, 920, 921, 931, 972, 973, 976, 979, 983, 984, 985, 987, 988, 989, 1043, 1137, 1155], "present": 63, "start": [63, 224, 250, 251, 253, 348, 462, 665, 677, 988, 1111, 1135], "point": [63, 238, 241, 511, 557, 559, 567, 573, 575, 576, 577, 583, 665, 677, 729, 824, 825, 983, 1026], "greet": [63, 297, 1057], "multipl": [63, 112, 184, 398, 439, 440, 763, 764, 765, 859, 913, 971, 992, 994, 1031, 1113, 1116, 1129], "background": [63, 151, 153, 556, 654], "thread": [63, 146, 148, 157, 274, 275, 339, 533, 655, 721, 722, 727, 939, 940, 941, 946, 948, 955, 958, 1003], "charact": [63, 352, 359, 362, 365, 372, 752, 753, 754, 755, 756, 757, 760, 761, 762, 1079], "base": [63, 157, 226, 234, 250, 251, 253, 255, 290, 293, 310, 460, 626, 627, 655, 668, 683, 703, 704, 989, 994, 1007], "gpio": [63, 86, 125, 126, 164, 186, 316, 317, 318, 319, 330, 777, 778, 901, 903, 935, 936, 937], "entir": [63, 270, 770, 772, 857, 913], "matrix": 63, "off": [63, 207], "bring": [63, 128, 335, 629], "togeth": [63, 445, 629, 859], "modular": [63, 224, 393], "bit": [63, 279, 379, 842, 853, 855, 1020, 1022], "row": [63, 270, 1112, 1116, 1117, 1118], "coroutin": [63, 253, 682, 683], "enough": [63, 557, 633], "sequenc": [63, 215, 218, 226, 258, 265, 268, 278, 279, 284, 285, 306, 307, 314, 372, 531, 595, 601, 998, 1031, 1039], "loop": [63, 166, 168, 179, 189, 194, 226, 228, 238, 241, 244, 250, 251, 253, 272, 274, 296, 300, 308, 310, 355, 388, 389, 427, 499, 703, 938, 999, 1030, 1033], "forev": 63, "strip": [63, 211, 228, 234, 322], "down": [63, 448], "factori": [63, 455, 470, 484, 514], "turn": [63, 998], "Into": [63, 112, 268, 290, 293, 296, 366, 462, 499, 516, 592, 646, 655, 699, 1085, 1087, 1092], "anti": [63, 727, 729], "clumsi": [63, 729], "decor": [63, 205, 255, 265, 268, 272, 274, 275, 290, 296, 297, 300, 460, 474, 488, 993], "wrapper": [63, 119], "final": [63, 234, 250, 251, 253, 310, 694, 832, 836, 994], "playground": 63, "cycl": [63, 115, 117, 118, 119, 122, 123, 125, 940], "fast": [63, 184], "forward": [63, 253, 364, 428, 717, 912], "ani": [63, 270, 456, 511, 950], "cancel": 63, "goodby": 63, "hochk\u00f6nig": 64, "k\u00f6nigsjodl": 64, "klettersteig": 64, "tour": [64, 255, 655], "werfen": 64, "ostpreussenh\u00fctt": 64, "matrashau": 64, "blog": [65, 143], "articl": [65, 153, 154, 156, 157], "yet": [65, 234], "revisit": [65, 355, 423, 666], "post": [65, 158, 167, 964], "pending_xref": 66, "cmake": [68, 174, 175, 207, 262, 288, 289, 304, 305, 348, 440, 442, 444, 448, 498, 512, 931, 972, 973, 986, 1137, 1138, 1150], "oo": [70, 108, 126, 179, 205, 208, 224, 231, 234, 243, 246, 250, 251, 253, 255, 265, 268, 271, 273, 290, 293, 297, 301, 310, 311, 339, 465, 502, 511, 533, 1003], "graph": [72, 73, 74, 431, 433, 638, 750, 798, 1053, 1054, 1058, 1067, 1081, 1088], "embed": [73, 74, 78, 96, 97, 107, 108, 113, 114, 127, 164, 173, 262, 271, 273, 311, 312, 329, 331, 332, 344, 346, 348, 735, 1151, 1152], "comput": [73, 74, 78, 96, 107, 108, 113, 127, 327, 329, 331, 332, 344, 346, 426, 427, 511, 824, 825, 833], "current": [73, 74, 460, 731, 748, 860], "depend": [73, 74, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 175, 288, 290, 304, 316, 317, 318, 319, 321, 443, 444, 446, 447, 451, 461, 465, 475, 498, 503, 520, 522, 533, 541, 600, 606, 610, 618, 620, 623, 628, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 657, 664, 671, 682, 706, 711, 735, 774, 775, 824, 825, 826, 830, 844, 845, 846, 865, 870, 871, 874, 907, 909, 916, 922, 924, 932, 934, 936, 948, 951, 973, 975, 977, 978, 981, 982, 988, 1003, 1005, 1051, 1052, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1097, 1101, 1105, 1108, 1111, 1115, 1127, 1133, 1150], "ex": [75, 76, 82, 83, 84, 85, 91, 92], "race": [75, 76, 88, 723, 787, 788, 795, 941, 942, 1005], "condit": [75, 76, 88, 381, 389, 398, 723, 727, 787, 788, 795, 941, 942, 944, 945, 1005], "avoid": [76, 88], "goal": [76, 82, 83, 84, 85, 87, 88, 89, 91, 131, 133, 134, 136, 167, 271, 273, 1148, 1151], "outcom": [76, 82, 83, 84, 85, 185, 293, 332], "introduct": [77, 80, 166, 250, 251, 253, 265, 268, 272, 273, 283, 288, 289, 304, 305, 310, 311, 333, 348, 351, 368, 426, 430, 444, 461, 469, 556, 653, 659, 703, 712, 721, 777, 797, 831, 994, 1128, 1148, 1150, 1161], "2019": [78, 166, 169, 348], "overview": [78, 126, 162, 262, 274, 275, 298, 310, 345, 349, 665, 672, 683, 707, 713, 727, 729, 734, 736, 738, 739, 740, 741, 748, 768, 822, 833, 859, 890, 901, 902, 903, 904, 939, 971, 993, 1097, 1101], "knowledg": [78, 1150], "transfer": [78, 715], "unix": [80, 110, 111, 170, 335, 351, 413, 423, 459, 1022], "hardwar": [81, 84, 85, 126, 134, 137, 262, 413, 898, 900, 901, 903, 936, 1152], "manag": [81, 148, 196, 226, 246, 255, 265, 268, 271, 272, 274, 290, 293, 296, 297, 300, 337, 338, 342, 437, 565, 625, 713, 807, 808, 973, 992, 1011, 1122, 1152], "averag": [82, 83, 91, 459, 487, 734, 736, 738, 740], "sensor": [82, 83, 85, 91, 92, 94, 273, 297, 310, 455, 456, 460, 462, 467, 485, 487, 488, 494, 498, 500, 501, 502, 513, 514, 515, 522, 713, 734, 736, 738, 740, 901, 903, 931, 1081, 1083], "parallel": 83, "led": [84, 123, 330], "temperatur": [84, 85, 92, 123, 498, 501, 901, 903, 931], "displai": [84, 91, 116, 120, 123], "sysf": [86, 125, 126, 186, 316, 330, 902, 936, 937], "gpiod": 86, "multithread": [87, 164, 224, 250, 251, 253, 262, 296, 297, 300, 310, 338, 345, 727, 728, 968, 1003, 1004, 1006, 1164], "semaphor": [88, 146, 729, 964, 965], "mutex": [88, 146, 414, 725, 729, 787, 788, 789, 790, 802, 803, 942, 943, 958, 1005], "commun": [89, 243, 479, 727, 944, 965], "wait": [89, 137, 727, 729, 813, 814, 815, 944, 964], "someth": [89, 179, 557, 655, 729, 813, 814, 815, 1033], "simpl": [93, 184, 453, 557, 567, 582, 633, 645, 800, 802, 828, 842, 971, 988, 993, 1013, 1043, 1120, 1128], "2020": [96, 151, 171, 173, 178, 179, 181, 182, 183, 185, 187, 188, 193, 348], "ss2022": [97, 105, 824, 825], "block": [97, 114, 384, 580, 918, 919, 920, 921, 922, 969], "cross": [97, 108, 114, 157, 262, 777, 797, 972, 974, 975, 976, 981, 983, 984, 986, 1143], "develop": [97, 108, 114, 115, 117, 118, 119, 122, 123, 125, 126, 178, 193, 207, 210, 232, 243, 246, 262, 265, 267, 268, 271, 272, 273, 274, 275, 296, 297, 300, 312, 333, 348, 774, 974, 975, 981, 1151, 1152, 1153, 1166], "03": [98, 99, 100, 101, 102, 103, 126, 195, 198, 203, 222, 224, 232, 235, 252, 265, 266, 268, 271, 272, 288, 330, 348, 655, 656], "08": [98, 213, 216, 224, 237, 348], "homework": [98, 99, 100, 101, 104], "until": 100, "21": [100, 101, 235, 323, 330, 348], "exercis": [100, 109, 139, 161, 166, 167, 179, 182, 183, 187, 195, 196, 198, 207, 208, 218, 224, 241, 246, 250, 251, 253, 255, 258, 262, 266, 271, 273, 274, 278, 279, 284, 285, 286, 290, 293, 296, 297, 300, 306, 307, 314, 320, 322, 330, 336, 354, 356, 358, 360, 362, 364, 366, 378, 402, 411, 455, 456, 457, 459, 460, 461, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 531, 532, 533, 563, 574, 575, 576, 577, 578, 619, 620, 621, 628, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 717, 744, 745, 746, 747, 819, 826, 837, 843, 846, 847, 849, 851, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 884, 905, 906, 907, 908, 924, 925, 931, 965, 969, 976, 978, 979, 980, 981, 1010, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092], "creat": [100, 112, 128, 140, 145, 149, 152, 174, 175, 512, 655, 722, 817, 823, 824, 825, 842, 847, 849, 851, 859, 863, 865, 876, 908, 925, 927, 928, 930, 964, 965, 983, 985, 990, 1082, 1100, 1102], "copi": [100, 179, 228, 263, 310, 378, 516, 550, 558, 565, 570, 585, 591, 592, 596, 603, 655, 666, 668, 693, 698, 700, 704, 709, 713, 714, 744, 811, 859, 861, 862, 865, 905, 906, 913, 924, 1035, 1113], "move": [100, 250, 251, 253, 271, 310, 311, 511, 557, 573, 664, 665, 666, 667, 668, 713, 715, 745, 777, 857, 864, 865, 880], "remov": [100, 244, 448, 528, 529, 611, 614, 744, 865, 868, 876, 965], "l": [100, 874, 879], "command": [100, 457, 472, 486, 775, 842, 853, 857, 874, 879, 894, 985], "22": [102, 185, 192, 197, 284, 285, 286, 300, 301, 302, 303, 348], "24": [102, 121, 126, 192, 224, 254, 274, 275, 276, 277, 296, 297, 299, 300, 301, 302, 303, 348], "ku": 102, "28": [103, 166, 183, 224, 272, 336, 348], "01": [104, 109, 216, 222, 224, 225, 226, 255, 261, 306, 307, 308, 330, 340, 341, 348, 824, 825], "ws2022": [106, 107, 108], "plan": [106, 126, 235, 333], "evolut": 106, "fh": [107, 108, 112, 127, 498, 499, 500, 501, 502, 574, 575, 576, 577, 637, 830, 844, 845, 870, 977], "joanneum": [107, 108, 127], "2023": [107, 108, 109, 110, 111, 115, 117, 123, 125, 126, 253, 261, 262, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 348], "question": [107, 108, 134, 205, 345, 439, 453, 498, 637, 830, 844, 845, 848, 850, 870, 956, 977, 1006], "inherit": [107, 165, 205, 234, 255, 290, 293, 469, 543, 544, 545, 626, 627, 628, 631, 655, 926, 1003, 1011], "memori": [107, 148, 170, 196, 403, 406, 410, 412, 414, 421, 428, 527, 537, 538, 539, 565, 624, 625, 768, 781, 782, 783, 784, 810, 811, 812, 830, 834, 964, 965, 1152, 1162], "leak": [107, 527, 538, 565, 715], "ye": [108, 1108], "No": [108, 147, 186, 477, 655, 672, 718, 994, 1119, 1135], "lab": 109, "exam": [109, 110, 111, 114, 206, 219, 221, 330, 345, 511, 824, 825, 826, 956, 1006], "17": [109, 126, 218, 219, 221, 225, 226, 232, 249, 256, 262, 278, 279, 280, 348, 572], "ss2023": [110, 111, 114], "06": [110, 111, 206, 207, 224, 253, 284, 285, 286, 311, 330, 348], "30": [110, 111, 164, 173, 183, 188, 235, 348], "handout": 110, "concept": [110, 111, 253, 283, 310, 671, 672, 675, 676, 677, 680, 681, 707, 831, 1102], "toolchain": [110, 111, 157, 208, 288, 304, 797, 971, 972, 977, 978, 980, 981, 982, 983, 984, 985, 986, 1150], "solv": [111, 943, 1102, 1124, 1131], "our": [112, 174, 903], "ece21": 112, "fork": [112, 126, 804], "pull": [112, 126, 462], "request": [112, 126, 439, 756, 758, 777, 779, 937], "upstream": [112, 126, 128], "sync": [112, 768], "onli": [112, 244, 270, 403, 670, 718, 770, 1064], "onc": [112, 330], "updat": [112, 126, 151], "It": [112, 149, 178, 270, 334, 403, 629, 853, 914, 927, 928, 971], "Its": [112, 1008], "fetch": 112, "your": [112, 170, 263, 264, 418, 677, 843], "clone": [112, 157, 161, 174, 512], "merg": 112, "push": [112, 448], "finish": [114, 133, 142, 208, 816], "iot": 115, "boil": [115, 116, 126], "pot": [115, 116, 126], "begin": [115, 312, 314, 351, 705], "standup": [115, 116, 117, 120, 123, 125], "record": [115, 116, 117, 120, 123, 125, 189, 1089, 1091], "20": [115, 117, 123, 125, 126, 235, 249, 253, 271, 273, 284, 285, 286, 310, 322, 330, 348, 985], "requir": [115, 116, 117, 118, 119, 120, 122, 123, 125, 212, 243, 290, 293, 332, 443, 455, 476, 479, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 677, 924, 931, 1051, 1052, 1073, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092], "futur": [115, 117, 118, 119, 122, 123, 125, 339, 729], "part": [115, 117, 118, 119, 122, 123, 125, 235, 1137], "Of": [115, 117, 118, 119, 122, 123, 125, 270, 279, 290, 293, 314, 440, 511, 557, 589, 590, 630, 668, 700, 705, 715, 717, 727, 744, 745, 746, 824, 825, 832, 924, 935, 959, 973, 994, 997, 1017, 1113, 1119], "logger": [117, 118, 119, 462], "sink": [118, 119, 126, 297], "column": [118, 270, 1113, 1114, 1116, 1117, 1118, 1119], "configur": [118, 150, 152, 157, 441, 858, 896, 901, 903, 938], "mqtt": [119, 126, 234, 297, 300, 1089, 1111], "mosquitto": 119, "ws2023": [121, 126], "group": [121, 207, 208, 222, 255, 262, 274, 275, 290, 293, 296, 297, 300, 301, 336, 368, 383, 392, 399, 405, 409, 412, 416, 425, 429, 434, 435, 555, 563, 578, 581, 584, 625, 634, 653, 695, 696, 720, 728, 732, 743, 747, 749, 834, 842, 851, 891, 899, 900, 954], "task": [121, 126, 336, 955], "via": [123, 126, 154, 155, 327, 903], "pwm": [123, 902], "control": [123, 243, 258, 265, 268, 278, 279, 284, 285, 306, 307, 314, 462, 683, 894, 902], "05": [126, 203, 206, 237, 243, 246, 249, 252, 278, 279, 280, 282, 283, 322, 323, 330, 348], "vo": 126, "recap": [126, 194, 207, 208, 222, 255, 275, 290, 293, 297, 298, 550, 712, 971, 997], "polymorph": [126, 208, 311, 504, 505, 506, 507, 508, 509, 510, 513, 630, 719, 737], "collabor": 126, "necessarili": 126, "first": [126, 179, 208, 352, 502, 718, 758, 759, 793, 1130], "round": [126, 480, 494], "organiz": 126, "design": [126, 254, 272, 274, 275, 290, 293, 311, 348, 365, 422, 437, 461, 465, 475, 628, 1151], "At": 126, "larg": 126, "datalogg": 126, "07": [126, 208, 224, 255, 288, 289, 330, 334, 348], "renam": [126, 880], "graz": [127, 169, 171, 178, 216, 348], "branch": [128, 385], "track": [128, 987], "submit": [128, 816, 817], "appli": [128, 149, 1119], "patch": [128, 149], "packag": [130, 133, 151, 157, 174, 255, 272, 290, 296, 323, 797, 976, 979, 1002, 1050, 1122, 1123, 1124, 1125, 1126, 1130], "pypi": [130, 203, 243, 1050, 1095, 1124, 1126], "audio": [131, 135], "chip": [131, 902], "bringup": [131, 134, 903], "get": [132, 145, 175, 226, 311, 729, 785, 810, 935], "debian": [132, 133], "kernel": [132, 133, 134, 138, 147, 149, 193, 348, 433, 761, 770, 771, 772, 773, 774, 775, 789, 791, 797, 798, 830, 833, 898, 901, 1153], "config": [132, 797], "within": 132, "qemu": 132, "extract": [132, 138, 205, 499, 1085, 1087, 1092, 1100], "boot": [132, 145, 156, 348, 833], "etc": [133, 194, 202, 205, 234, 244, 247, 280, 873, 901, 929, 1023, 1073], "yocto": [134, 138, 892], "everyth": [134, 162, 221, 445, 828, 839, 918], "like": [134, 310, 557, 950], "i2": 135, "kontron": 135, "smarc": 135, "modul": [135, 179, 203, 205, 243, 244, 256, 272, 279, 296, 297, 323, 330, 433, 448, 512, 701, 765, 770, 772, 773, 775, 776, 791, 797, 902, 1002, 1092, 1095, 1103, 1129, 1137], "dirti": 136, "upgrad": 136, "path": [136, 157, 205, 215, 221, 228, 451, 748, 829, 881, 983, 988, 1082, 1137], "step": [136, 457, 460, 462, 498, 590, 683, 744, 745, 972, 973, 987, 1007, 1032], "intel": 138, "bsp": 138, "improv": 139, "beginn": [139, 203, 215, 238, 243, 255, 279, 1094, 1095], "split": [139, 165, 228, 234, 308, 322, 1041, 1100], "openshot": 140, "seo": [141, 142], "sitemap": 141, "meta": [141, 142], "stack": [142, 148, 189, 210, 410, 668], "hang": 142, "dbu": [142, 462], "stuff": [142, 311, 330, 423, 833, 867], "extens": 143, "rest": [143, 205, 300, 311, 923], "style": [143, 386, 437, 557, 659, 713, 731, 1040], "convert": [143, 166, 270, 1013, 1091], "rst": 143, "exampl": [143, 228, 234, 238, 326, 359, 363, 398, 400, 420, 423, 459, 498, 583, 608, 659, 660, 678, 679, 680, 681, 707, 716, 821, 839, 841, 842, 890, 914, 918, 923, 926, 944, 969, 992, 1007, 1027, 1037, 1040, 1041, 1042, 1043, 1064, 1106, 1114, 1119, 1128, 1129], "add": [143, 264, 449, 453, 511, 758, 805, 816, 968, 1011, 1112], "miss": [143, 255, 659, 927], "past": [143, 398], "learn": [144, 265, 332, 1096, 1102], "beagleboard": 145, "how": [145, 148, 156, 178, 208, 226, 367, 406, 431, 432, 433, 567, 705, 715, 840, 853, 856, 999, 1102], "repair": 145, "nand": 145, "also": [145, 404, 828, 833, 834, 839, 840, 919, 920, 921, 923, 950, 953, 957, 959, 1038, 1102], "40w": 145, "x": [145, 208, 547], "loader": 145, "u": [145, 914], "bootabl": 145, "mmc": 145, "sd": [145, 186], "card": [145, 186, 264, 825], "port": [146, 912], "There": [146, 226, 437, 565, 721, 813, 903, 913, 918, 929, 930], "": [146, 161, 186, 379, 403, 437, 557, 649, 655, 658, 718, 761, 766, 785, 797, 813, 842, 858, 910, 958, 971, 999, 1003, 1046], "alwai": [146, 226, 246, 693, 928], "better": [146, 354, 439, 807, 1017, 1108], "wai": [146, 205, 226, 234, 427, 959, 1003, 1022], "process": [146, 148, 167, 262, 283, 795, 796, 829, 830, 834, 835, 950, 951, 952, 955, 959], "signal": [146, 170, 413, 727, 944, 967, 968, 969, 970], "aren": 146, "t": [146, 203, 705, 1095], "queue": [146, 189, 727, 814, 945, 964, 965], "timer": [146, 805, 807, 808, 921, 955], "poll": [146, 727, 729], "event": [146, 758, 777, 787, 805, 806, 810, 938, 944, 960, 962], "dispatch": [146, 739, 740, 741], "interrupt": [146, 777, 778, 779, 780, 793, 802, 938, 955], "realtim": [146, 148, 341, 345, 348, 789, 957, 958, 1143, 1152], "save": [147, 715], "solid": [147, 437], "disk": [147, 186, 828], "life": [147, 716, 940], "gentoo": [147, 797], "rant": [147, 167, 442, 973], "swap": [147, 241, 402, 718, 840, 1060], "tmpf": 147, "instanc": [147, 205, 231, 234], "syslog": 147, "var": 147, "mountpoint": 147, "logrot": 147, "o": [147, 205, 215, 221, 228, 229, 234, 241, 243, 244, 276, 280, 283, 285, 322, 359, 781, 838, 839, 840, 863, 876, 918, 919, 920, 921, 922, 923, 932, 933, 953, 1045], "schedul": [147, 283, 340, 341, 345, 830, 834, 940, 953, 954, 956, 957, 958], "ram": 147, "thing": [147, 208, 229, 250, 251, 253], "left": [147, 379, 570], "why": [148, 149, 157, 226, 437, 465, 557, 560, 564, 565, 712, 718, 742, 770, 816, 841, 895, 902, 910, 914, 939, 992, 1037], "p": 148, "suck": [148, 777], "count": [148, 714, 804, 840, 1079], "consumpt": 148, "conclus": [148, 802, 894, 902], "pthread": 148, "experi": 148, "100": 148, "default": [148, 179, 226, 228, 250, 251, 253, 310, 326, 511, 559, 561, 562, 574, 575, 576, 577, 644, 692, 713, 731, 856, 969, 1037, 1117], "eat": 148, "limit": [148, 998], "than": [148, 518, 1014], "my": [148, 151, 247, 352, 353, 439, 765, 836, 853], "could": [148, 716], "take": [148, 404, 715, 1017], "doe": [148, 583, 840, 853, 856, 924, 927, 928], "differ": [148, 179, 403, 588, 590, 859, 913], "rpm": [149, 151, 176, 770], "prerequisit": [149, 157, 175, 274, 296, 300, 332, 772, 1050], "rpmbuild": 149, "directori": [149, 174, 175, 337, 439, 440, 512, 748, 824, 825, 842, 847, 848, 849, 850, 859, 860, 861, 868, 875, 876, 879, 880, 885, 913, 924, 972, 973, 992, 1128], "download": [149, 195, 197, 330, 335, 349, 515, 983, 986, 1142], "For": [149, 151, 157, 235, 238, 262, 265, 267, 268, 271, 273, 312, 348, 360, 485, 559, 570, 655, 683, 704, 729, 832, 918, 983, 984, 985, 995, 1013, 1082, 1151], "domain": [150, 170, 268, 730], "subdomain": 150, "www": 150, "apex": 150, "microsoft": 151, "team": 151, "screen": [151, 889], "share": [151, 445, 450, 710, 714, 717, 745, 824, 825, 851, 964, 965, 987, 988, 1162], "x11": 151, "reviv": 151, "meh": 151, "annoy": 151, "re": [151, 994], "regist": [151, 427], "itself": 151, "autostart": 151, "browser": [151, 210], "recommend": [151, 182, 332, 1129, 1150], "deploi": 152, "gener": [152, 156, 166, 175, 179, 184, 211, 218, 221, 226, 228, 234, 253, 255, 259, 265, 268, 272, 274, 275, 279, 286, 288, 296, 297, 298, 300, 304, 308, 388, 517, 558, 561, 565, 683, 684, 686, 687, 692, 750, 903, 910, 937, 972, 973, 997, 998, 999, 1000, 1001, 1026, 1065, 1078, 1150], "public": [152, 205, 452, 559, 824, 825, 849, 850, 910], "repo": [152, 174], "jfasch": [152, 854], "home": [152, 829, 859, 875, 914], "time": [152, 161, 165, 270, 443, 730, 805, 806, 834, 946, 1057], "deploy": [152, 288, 304, 445, 797, 1150], "bigbluebutton": 153, "onlin": [153, 162, 1142], "tl": 153, "dr": 153, "host": [153, 198, 797, 985], "check": [153, 453, 477, 842, 903, 944, 980, 1041, 1061], "els": [153, 221, 228, 234, 244, 274, 296, 300, 361, 385, 386, 387, 564, 579, 880, 897, 910, 994, 1030, 1033], "traunstein": 154, "zierlersteig": 154, "kaltenbachwildni": 154, "anstieg": 154, "auf": [154, 195], "zierlerberg": 154, "rinn": 154, "abstieg": 154, "grintovec": 155, "plan\u0161arsko": 155, "jezero": 155, "\u010de\u0161ka": 155, "ko\u010da": 155, "anreis": 155, "hinauf": 155, "runter": 155, "zusammenfassung": 155, "brick": 156, "1399": 156, "dell": 156, "xp": 156, "happen": 156, "virtualbox": 156, "secur": [156, 186, 262, 283, 327, 909, 913], "enrol": 156, "machin": [156, 186, 207, 265, 327, 905, 906, 931, 1096, 1102], "owner": [156, 842], "mok": 156, "pair": [156, 655, 908, 910], "stage": 156, "reboot": 156, "diagnost": [156, 901], "crosstool": [157, 984, 985], "ng": [157, 984, 985], "prebuilt": [157, 1119], "repositori": [157, 161, 344, 512, 522], "releas": [157, 442, 779, 789, 1005], "glibc": 157, "version": [157, 439, 442, 445, 655, 683, 927], "gcc": [157, 414, 427, 971], "simplest": [157, 683, 688, 726, 991, 1014, 1129, 1135], "stdio": 157, "h": [157, 686, 889], "iostream": 157, "distribut": [157, 1050], "afterword": [157, 663], "schulung": [159, 179], "entwicklung": 159, "beratung": 159, "richtlinien": 160, "ver\u00f6ffentlichung": 160, "kursmateri": 160, "window": [161, 198, 215, 271, 273, 350, 836], "workflow": [161, 208], "conflict": [161, 943, 1005], "individu": 162, "languag": [162, 178, 208, 224, 250, 251, 253, 258, 278, 279, 284, 310, 311, 348, 416, 435, 695, 950, 996, 1018, 1020], "qualivis": [163, 348], "z\u00fcrich": [163, 348], "2013": [163, 348, 1143], "fragen": [163, 196], "antworten": 163, "kursnotizen": 164, "2015": [164, 348], "userspac": [164, 756, 758, 810, 811, 812, 901, 902, 938], "can": [164, 185, 208, 243, 404, 456, 460, 511, 570, 655, 715, 895, 896, 897, 899], "bu": [164, 185, 462, 896, 899, 903], "driver": [164, 193, 264, 348, 774, 775, 793, 901, 1153], "beispiel": [164, 179, 238, 885], "heizungssteuerung": 164, "k\u00f6nnen": [165, 189, 202], "viel": 165, "mutabl": [165, 168, 179, 189, 196, 202, 215, 218, 226, 228, 231, 234, 241, 244, 247, 259, 266, 276, 280, 286, 298, 302, 308, 1035, 1037], "immut": [165, 168, 179, 196, 202, 215, 226, 231, 234, 241, 247, 256, 263, 266, 280, 308, 568, 1035], "kann": [165, 210], "man": [165, 210, 857], "nicht": [165, 179, 189], "oft": 165, "genug": 165, "wiederholen": 165, "hart": 165, "indizieren": 165, "weich": 165, "nettfragen": 165, "shortcut": [165, 1013, 1043], "objektorientiert": 165, "date": [165, 211, 270, 335], "delta": 165, "datetim": [165, 184, 205, 211, 266], "bissl": 165, "potschert": [165, 189], "schreiben": [165, 189], "scho": 165, "formen": 165, "represent": [165, 1016], "__str__": [165, 1011, 1016], "subprocess": [165, 244], "enumer": [165, 189, 194, 196, 202, 205, 226, 234, 241, 259, 276, 298, 308], "zip": [165, 205, 308], "comprehens": [165, 189, 211, 218, 221, 226, 228, 234, 238, 259, 265, 266, 268, 298, 308, 991, 997, 1042], "exec": [165, 231, 247, 255, 259, 286, 308, 995], "eval": [165, 166, 202, 231, 241, 259, 286, 298], "umgebend": 165, "context": [165, 226, 265, 268, 272, 795, 796, 816, 992, 995], "eigen": 165, "json": [165, 187, 194, 210, 211, 221, 238, 241, 247, 255, 256, 291, 294, 1091], "individualtrain": [166, 181, 348], "tage": [166, 348], "beginnend": [166, 348], "inhalt": [166, 169, 968, 1145], "51": 166, "58": 166, "94": [166, 179], "121": 166, "famou": [166, 430], "overload": [166, 224, 234, 255, 290, 302, 533, 559, 566, 573, 713, 1014, 1016], "getter": [166, 511, 567], "setter": 166, "listcomprehens": 166, "express": [166, 179, 194, 211, 218, 244, 247, 259, 308, 381, 383, 459, 477, 491, 662, 886, 997, 1055, 1114], "global": [166, 179, 189, 247, 297, 367, 373, 394, 396, 410, 447, 540, 541, 542, 571, 572, 573, 915, 990, 1036], "scope": [166, 189, 297, 726, 729, 990, 1036], "variabl": [166, 189, 202, 205, 215, 218, 226, 234, 241, 244, 256, 276, 280, 302, 308, 325, 353, 367, 370, 373, 394, 396, 402, 421, 477, 541, 568, 572, 698, 727, 829, 915, 944, 945, 952, 1025, 1036, 1060], "closur": [166, 189, 255, 272, 274, 275, 290, 296, 300, 697, 990, 992], "between": [166, 576, 1100], "walkthrough": 167, "reduc": [167, 378], "eight": 167, "color": 167, "pil": 167, "numpi": [167, 169, 196, 203, 243, 246, 265, 268, 279, 285, 297, 302, 314, 348, 1095, 1100], "cluster": 167, "excurs": [167, 243, 697], "matplotlib": [167, 196, 215, 247, 285, 302, 308, 1049, 1100], "now": [167, 179], "come": [167, 203, 445, 639, 971, 1095], "let": 167, "kmean": 167, "result": [167, 431, 1107], "properti": [167, 205, 234, 451, 452, 1015], "center": 167, "restor": 167, "alpha": 167, "back": [167, 608, 1091], "rgba": 167, "random": [168, 205, 238, 243, 488, 501, 509, 1115], "type": [168, 194, 218, 221, 231, 234, 241, 250, 251, 253, 255, 256, 270, 272, 290, 293, 294, 298, 310, 326, 369, 371, 372, 376, 383, 408, 418, 423, 442, 452, 561, 590, 611, 612, 655, 656, 659, 670, 672, 709, 731, 735, 737, 738, 768, 777, 872, 879, 942, 992, 994, 1007, 1014, 1037, 1102], "except": [168, 205, 221, 224, 231, 234, 246, 247, 255, 265, 268, 272, 273, 290, 293, 306, 314, 341, 533, 580, 581, 649, 698, 705, 729, 994], "demonstr": 168, "dict": [168, 218, 226, 228, 234, 241, 1013], "access": [168, 207, 361, 414, 415, 559, 567, 575, 641, 731, 734, 736, 738, 739, 740, 741, 748, 781, 810, 811, 812, 1008, 1015, 1042, 1043], "indic": [168, 196], "slice": [168, 179, 194, 205, 228, 234, 238, 259, 280, 286, 834, 1032, 1116, 1118], "protocol": [168, 179, 194, 215, 218, 221, 226, 228, 231, 234, 244, 259, 272, 276, 280, 298, 302, 308, 683, 894, 958, 999, 1001], "standardthemen": 169, "hauptthema": 169, "numerik": 169, "lesen": [169, 189], "mat": 169, "l\u00f6sen": 169, "uni": 169, "\u00fcbung": [169, 172, 189], "propos": 170, "posix": [170, 727, 939, 948, 961, 963, 964, 965, 966], "ipc": [170, 171, 348, 961, 963, 964, 965, 966, 1162], "virtual": [170, 243, 264, 543, 544, 545, 630, 632, 633, 734, 735, 736, 738, 739, 740, 741, 742, 768, 830, 834, 896, 964, 1082, 1130, 1131, 1132, 1162], "socket": [170, 897, 920], "applic": [170, 955], "compani": 170, "thought": 170, "handgestrickt": 172, "um": 172, "fallen": 172, "lustvol": 172, "erleiden": 172, "programmier": 173, "baden": [173, 348], "w\u00fcrttemberg": [173, 348], "kursinform": 173, "kursaufbau": 173, "kursverlauf": [173, 181], "hand": 174, "privat": [174, 205, 234, 452, 559, 631, 693, 824, 825, 847, 848], "makefil": [175, 512, 765, 775, 972, 973, 987], "argh": 176, "visual": [176, 203, 219, 431, 446, 1095, 1121, 1130], "studio": [176, 203, 219, 1095, 1121, 1130], "flatpak": 176, "issu": [176, 990], "m": 176, "bei": [178, 189, 348], "firma": [178, 348], "environ": [178, 243, 251, 253, 262, 264, 271, 272, 273, 337, 829, 952, 1019, 1082, 1130, 1131, 1132, 1140], "driven": [178, 207, 232, 243, 246, 274, 275, 296, 297, 300, 348, 960, 1166], "dai": [178, 182, 183, 185, 186, 187, 197, 198, 207, 208, 213, 216, 218, 219, 222, 229, 262, 265, 268, 271, 272, 273, 274, 275, 279, 283, 285, 290, 296, 297, 300, 301, 307, 311, 704, 1057, 1148], "advanc": [178, 182, 185, 194, 197, 206, 222, 232, 235, 246, 255, 258, 268, 274, 275, 276, 277, 278, 279, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 348, 416, 1094, 1095, 1156], "18": [179, 181, 207, 226, 246, 258, 259, 273, 289, 330, 348, 985], "19": [179, 181, 185, 219, 235, 329, 330, 344, 346, 348], "sy": [179, 205, 828, 1024], "multilin": [179, 211, 215, 308, 325, 1039], "docstr": [179, 226, 238, 241, 244, 266, 298, 325], "datentypen": [179, 189, 196, 209, 225, 237], "ausflug": [179, 228], "variablen": [179, 189, 196, 209, 225, 228, 237, 247], "deren": 179, "unterbau": 179, "zuweisung": 179, "mit": [179, 189, 194, 207, 348, 885, 1143, 1159], "hilf": 179, "tupl": [179, 184, 189, 194, 196, 202, 205, 215, 218, 221, 226, 228, 234, 238, 241, 244, 250, 251, 253, 256, 259, 266, 276, 280, 302, 308, 310, 324, 325, 655, 704, 709, 1027, 1035, 1103], "unpack": [179, 184, 189, 194, 196, 205, 221, 226, 238, 244, 250, 251, 253, 256, 266, 302, 308, 310, 324, 325, 655, 704, 709, 983, 1103], "unendlich": 179, "breit": 179, "divis": [179, 189], "floor": [179, 189], "konvertierung": 179, "konstruktoren": [179, 196], "welchen": 179, "typ": [179, 189], "typen": 179, "besser": 179, "laufzeitverhalten": [179, 189], "geeigneter": 179, "datenstrukturen": [179, 189, 190, 210, 228, 1158], "boolean": [179, 189, 215, 218, 226, 228, 234, 238, 241, 308, 375, 459, 1028, 1055, 1114], "short": [179, 218, 234, 375, 469, 777], "circuit": [179, 218, 234, 375], "evalu": [179, 218, 234], "warum": [179, 189], "sind": [179, 189], "mehr": [179, 194], "rang": [179, 184, 189, 196, 205, 211, 215, 218, 226, 228, 231, 238, 241, 244, 250, 251, 253, 256, 266, 280, 286, 297, 310, 589, 590, 655, 683, 703, 704, 705, 706, 707, 708, 997, 1034, 1049], "foli": 179, "161": 179, "shallow": [179, 228, 1035], "deep": [179, 228, 1035], "dem": [179, 1159], "deepcopi": 179, "funktionen": [179, 189, 190, 194, 1158], "gotcha": [179, 775, 805, 959], "paramet": [179, 226, 228, 272, 326, 365, 401, 404, 407, 421, 439, 443, 668, 672, 707, 718, 797, 927, 972, 1037, 1107], "90": 179, "ff": 179, "lokal": [179, 189, 247], "92": 179, "uniq": [179, 1077, 1078], "punkt": [179, 189], "zusammengefasst": 179, "hier": 179, "sch\u00f6nere": 179, "al": [179, 189, 238], "comprens": 179, "125": 179, "lesbarkeit": 179, "perform": [179, 202, 429, 705], "review": [179, 208], "pprint": 179, "praktisch": 179, "debug": [179, 442, 795, 993], "datentransform": 179, "127ff": 179, "complet": [179, 533, 857], "collect": [179, 228, 231, 256, 971, 1013, 1113, 1126], "namedtupl": [179, 1013], "parameter\u00fcbergab": [179, 189], "variabel": 179, "lang": 179, "argumentlisten": 179, "erst": 179, "klass": 179, "weiterf\u00fchrend": [181, 203], "workspac": [182, 183, 185, 187], "core": [182, 219, 262, 972], "special": [182, 301, 881], "tutori": [182, 185, 197, 203, 213, 243, 246, 279, 1095], "parti": [182, 213], "v": [184, 189, 196, 202, 205, 226, 231, 234, 238, 241, 247, 263, 266, 276, 280, 291, 324, 325, 363, 372, 384, 387, 391, 393, 442, 445, 552, 553, 554, 568, 714, 722, 737, 775, 795, 796, 802, 803, 917, 953, 1023, 1026, 1034, 1045, 1123], "return": [184, 247, 407, 665, 666, 668, 683], "orient": [184, 234, 247, 255, 258, 259, 272, 274, 275, 278, 279, 284, 290, 293, 296, 297, 300, 301, 306, 314, 318, 437, 557, 628, 1010], "addit": [185, 557, 573, 635, 1011], "brought": 185, "thoma": 185, "cloud": [186, 311, 327], "particip": 186, "desk": 186, "interlud": [186, 777], "bloodi": 186, "wild": [186, 235, 290, 293, 296], "watchdog": 186, "support": [186, 198, 658, 793], "25": [187, 197, 206, 213, 224, 229, 240, 282, 283, 290, 291, 292, 295, 348], "grundlegend": [189, 190, 1158], "sprachelement": [189, 190, 1158], "syntax": [189, 196, 202, 234, 244, 266, 280, 308, 325, 698, 707, 1023], "semantik": 189, "einr\u00fcckung": 189, "ihren": 189, "\u00e4ndern": 189, "kommentar": 189, "sprach": 189, "standarddatentypen": 189, "elementar": [189, 190, 1158], "beliebig": 189, "gro\u00df": 189, "vergleichsoperatoren": 189, "pr\u00e4zedenz": 189, "vor": 189, "strichrechnung": 189, "modulo": 189, "un\u00e4rer": 189, "negat": [189, 1114], "erzwingen": 189, "auch": 189, "zeichenketten": 189, "raw": [189, 196, 211, 215, 228, 234, 256, 286, 1008, 1039, 1090], "f": [189, 211, 226, 244, 286, 308, 1040], "konvertierungen": 189, "pr\u00e4zendenzregeln": 189, "literal": 189, "primit": [189, 721, 997], "konstanten": 189, "operatoren": 189, "ausdr\u00fcck": 189, "operatorrangfolgen": 189, "\u00fcbungen": [189, 1142], "zwei": 189, "vertauschen": 189, "kontrollstrukturen": [189, 190, 209, 225, 226, 237, 1158], "anweisungen": 189, "folgen": 189, "bedingungen": 189, "verzweigungen": 189, "bedingt": 189, "anweisung": 189, "verzweigung": [189, 190, 1158], "geschachtelt": 189, "mehrfach": 189, "fallauswahl": 189, "schleifen": [189, 190, 1158], "z\u00e4hlergesteuert": 189, "kopfgesteuert": 189, "schleif": [189, 194], "fu\u00dfgesteuert": 189, "jf": 189, "continu": [189, 224, 226, 265, 273, 275, 297, 307, 390, 1030, 1033], "sequenti": [189, 194, 226, 238, 308, 597, 598, 605, 606, 997, 1031], "schnell\u00fcbersicht": 189, "sprunganweisungen": 189, "endlosschleifen": 189, "ben\u00f6tigt": 189, "Suche": 189, "eindimensional": 189, "tupel": 189, "listen": [189, 194, 228, 325], "sort": [189, 241, 516, 595, 600, 601, 604, 1117], "revers": [189, 602, 603, 620, 621, 622, 1014], "stapel": 189, "schlangen": 189, "versuch": 189, "zur\u00fcck": 189, "hybrid": 189, "supergscheit": 189, "methoden": [189, 190, 1158], "prozeduren": [189, 190, 1158], "funktionspoint": 189, "so": [189, 202, 205, 215, 247, 271, 437, 557, 655, 668, 670, 697, 1116], "heisst": [189, 194], "funktionsobjekt": 189, "primzahlenbeispiel": 189, "funktion": 189, "laufzeitfehl": 189, "existiert": 189, "zuweisen": 189, "fehlerfal": 189, "peter": 189, "unterprogramm": 189, "wert": 189, "referenzen": 189, "r\u00fcckgabewert": 189, "oder": [189, 331, 1143], "inner": [189, 990], "standardbibliotheken": 189, "built": [189, 272, 561, 659, 775, 994], "funktionalit\u00e4ten": 189, "struktur": 190, "herdt": [190, 1158], "kapitel": [190, 1158], "ganz": [194, 226], "kurz": 194, "mehreren": 194, "returnwerten": 194, "bzw": [194, 331], "containerdatentypen": 194, "untypisiert": 194, "l\u00f6schen": 194, "begriff": 194, "zufal": 194, "regular": [194, 207, 208, 244, 247, 259, 308, 886], "hallo": 196, "speicher": 196, "sch\u00fctze": 196, "ich": 196, "davor": 196, "aber": 196, "gemischten": 196, "wiederholung": [196, 231], "objektidentit\u00e4t": 196, "statement": [196, 205, 384, 398, 990, 992, 1005, 1023, 1029, 1107, 1110], "operationen": 196, "verloren": 196, "interpol": 196, "mittel": [196, 202], "scipi": 196, "shell": [198, 262, 283, 327, 348, 829, 840, 842, 858, 870, 871, 877, 909, 926, 935, 950, 1144], "script": [198, 283, 348, 904, 935, 1002, 1021, 1144], "29": [198, 272, 306, 307, 308, 330, 338, 348], "assign": [202, 228, 234, 241, 302, 325, 380, 477, 558, 564, 565, 665, 666, 668, 713, 990, 1025, 1032, 1036, 1112], "fun": [202, 241, 255, 1025], "arithmet": [202, 207, 226, 238, 325, 353, 374, 403, 477, 491, 550, 573, 586, 587, 591, 594, 1014, 1026], "complex": [202, 241, 325, 1140], "nur": 202, "sum": [202, 639], "weiter": 202, "dynamisch": 202, "evaluierung": 202, "scienc": [203, 229, 243, 246, 279, 296, 297, 298, 300, 1095], "don": [203, 705, 1095], "batteri": [203, 325, 1041, 1095], "confer": [203, 279, 1095], "talk": [203, 279, 895, 901, 902, 1095], "zipfil": 205, "One": [205, 244, 270, 322, 379, 398, 437, 439, 572, 705, 718, 810, 895, 913, 946, 971, 987], "member": [205, 234, 559, 564, 565, 567, 572, 641, 642, 659, 731], "attribut": [205, 231, 247, 310, 834, 937, 1008, 1015, 1120], "protect": [205, 631, 705, 787], "posit": [205, 557, 988, 1017, 1047], "keyword": [205, 226, 250, 251, 253, 310, 326, 420, 421, 990, 1017, 1037], "argument": [205, 226, 234, 255, 290, 326, 404, 924, 950, 993, 1017, 1024, 1037, 1047], "mix": [205, 218, 286, 698, 1071, 1072], "yield": [205, 221, 226, 244, 272, 286, 997, 1000], "filter": [205, 234, 263, 264, 270, 298, 308, 517, 518, 519, 705, 1114], "nonetyp": [205, 218], "none": [205, 226], "recurs": [205, 406, 565, 662, 748, 859], "fibonacci": [205, 683, 685, 998, 1065], "sever": 205, "same": [205, 541, 566, 572, 697, 1036, 1129], "oserror": 205, "errno": [205, 915], "platform": [205, 901], "assert": [205, 247, 298], "assertionerror": 205, "27": [206, 224, 240, 290, 291, 292, 295, 304, 305, 348], "predefin": [206, 398, 1140], "stream": [206, 768, 839, 1045], "pcap": [206, 219, 221], "syllabu": [206, 219], "programmieren": [207, 348], "tool": [207, 280, 283, 298, 332, 822, 887, 890, 901, 1155], "massacr": 207, "kick": 207, "encapsul": [207, 423, 563, 729], "flow": [207, 237, 243, 258, 265, 268, 278, 279, 284, 285, 306, 307, 314, 392], "pointer": [207, 208, 224, 250, 251, 253, 271, 273, 311, 400, 401, 403, 405, 421, 533, 550, 565, 569, 570, 586, 587, 588, 590, 591, 594, 614, 655, 670, 710, 711, 712, 713, 715], "standard": [207, 219, 224, 228, 243, 271, 273, 279, 371, 418, 442, 520, 580, 590, 623, 634, 636, 663, 839, 923, 1045, 1095, 1137], "librari": [207, 219, 224, 243, 271, 273, 279, 365, 440, 445, 446, 450, 520, 580, 590, 623, 634, 663, 917, 988, 989, 1095, 1162], "stl": [207, 533, 549, 550, 551, 582, 590, 591, 619], "kid": 208, "recapitul": 208, "some": [208, 226, 231, 270, 273, 283, 698, 729], "jump": [208, 403], "complic": [208, 482, 987], "Be": [208, 456, 460, 461, 565, 570, 624, 716, 721], "toolbox": 208, "databas": [208, 300, 640, 775, 1051, 1053, 1088, 1104, 1105, 1107], "gtest": [208, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "smart": [208, 224, 250, 251, 253, 273, 311, 533, 710, 711, 712, 713], "datenbank": 210, "showcas": 210, "full": 210, "kommt": 210, "db": 210, "aufgab": 210, "formulieren": 210, "damit": 210, "dies": 210, "http": [210, 298], "verbindung": 210, "client": [210, 493, 1111], "schicken": 210, "jetzt": 210, "schickman": 210, "weg": 210, "vom": [210, 348], "server": [210, 1111], "php": 210, "j": 210, "empfangen": 210, "nun": 210, "muessen": 210, "verwandlen": 210, "liter": [211, 325, 477, 729, 730], "quot": [211, 215, 241, 1103], "friend": [211, 725], "sinc": [211, 244, 250, 251, 253, 572, 1040], "pars": [211, 1024, 1047, 1073], "sap": [212, 265, 267, 268, 269, 270, 313, 348], "export": 212, "solut": [212, 395, 417, 440, 449, 455, 456, 457, 460, 461, 466, 475, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 565, 592, 622, 659, 661, 668, 692, 693, 702, 735, 834, 853, 912, 914, 918, 987, 989, 1005, 1131], "terminologi": [215, 283, 831, 969, 1102], "31": [216, 224, 232, 348], "numer": [216, 314], "ai": 216, "mountain": 216, "io": [218, 234, 262, 266, 302, 308, 426, 781, 782, 837, 937], "common": [218, 427, 439, 605, 998, 1007], "wtf": [218, 921, 969], "creativ": [221, 823, 1011], "shift": [221, 379, 573], "sampl": [221, 718, 799, 854, 1052, 1073, 1094, 1128, 1153], "hmmm": 222, "02": [224, 229, 243, 262, 342, 348, 836], "undefin": [224, 1036], "behavior": [224, 707], "again": [224, 272, 283, 567, 654, 877, 1014, 1144], "26": [224, 254, 261, 274, 275, 276, 277, 296, 297, 299, 330, 348], "repeat": [224, 869], "quickli": 224, "algorithm": [224, 241, 265, 273, 310, 311, 403, 516, 533, 550, 585, 586, 590, 591, 600, 604, 1100, 1102], "functor": [224, 533, 598, 697, 699, 700, 718], "unifi": 224, "model": [224, 1100, 1102], "uml": [224, 469], "todai": [224, 990], "associ": [224, 382, 469, 609, 610], "dynam": [224, 255, 274, 275, 276, 296, 300, 410, 537, 538, 539, 591, 624, 625, 737, 753, 783, 784, 988, 1008, 1017], "alloc": [224, 310, 427, 547, 592, 617, 618, 625, 733, 735, 768, 791, 933, 997], "week": 224, "zahl": 226, "miscellanea": 226, "brace": [226, 250, 251, 253, 310, 311, 657, 658, 659, 660, 1114], "singl": [226, 440, 465, 913, 971, 1135], "hour_of_dai": 226, "membership": [226, 1031], "best": 226, "intro": [228, 262, 330, 549, 550, 551, 937, 991], "doc": [228, 298], "ident": [228, 291], "datenypen": 228, "libarari": 228, "chainmap": 228, "dequ": 228, "suchalgorithmen": 228, "pitfal": [228, 271, 274, 326, 561, 630, 655, 683, 700], "fromkei": [228, 241], "join": [228, 234, 308, 1041, 1068], "lstrip": [228, 322], "rstrip": [228, 322], "sequentiel": 231, "konstant": 231, "suchzeit": 231, "metaprogram": 231, "everywher": [231, 247, 565, 995], "defaultdict": [231, 256], "hello": [234, 244, 352, 687, 775, 776, 1021], "world": [234, 352, 359, 775, 776, 1021], "blahblah": [234, 238, 241, 244, 308, 590, 1020], "commandlin": [234, 262, 300, 316, 321, 404, 432, 439, 857, 912, 935, 969, 1024, 1047], "lifetim": [234, 367, 396, 700, 714, 722, 1104], "preview": [234, 450], "explicit": [234, 361, 557, 569, 660, 698, 700, 713, 726, 1005], "max": 234, "iteratoren": 234, "generatoren": 234, "ordereddict": 234, "duck": [234, 250, 251, 253, 290, 293, 310, 670, 738, 1007], "resolut": 234, "order": [234, 541, 994, 1014], "mro": 234, "super": 234, "__bases__": 234, "__mro__": 234, "self": [234, 565, 1009], "call": [234, 397, 401, 427, 431, 433, 533, 800, 917, 923, 952, 958, 1017], "mangl": [234, 566], "udemi": 234, "claus": [234, 274, 296, 300, 994], "lambda": [234, 250, 251, 253, 280, 310, 311, 655, 696, 697, 698, 699, 718], "oppos": 234, "discuss": [237, 274, 275, 336, 361, 363, 727, 800, 805, 813], "chart": 237, "interact": [238, 286, 1021, 1072], "1st": 238, "explan": [238, 298], "preced": [238, 241, 382, 1026], "float": [238, 241, 298, 1026], "einschub": 238, "vergleich": 238, "filterketten": 238, "zen": 238, "datensatz": 238, "notat": 238, "letzt": 238, "letzten": 238, "infinit": [241, 998], "long": [241, 655], "comparison": [241, 557, 604, 748, 822, 1014, 1026], "digit": [241, 330, 1062], "english": [241, 332, 1062], "determin": [241, 843, 1059, 1069, 1070], "maximum": [241, 1059, 1069, 1070], "two": [241, 402, 495, 496, 557, 576, 660, 965, 1059, 1060, 1069, 1070], "out": [241, 274, 275, 462, 560, 589, 590, 959, 973, 990, 1032], "duplic": [241, 440, 582, 926], "encod": [241, 243, 244, 255, 265, 285, 286, 302, 330, 1108], "nest": [244, 393, 406], "itertool": 244, "chain": [244, 800], "destructor": [244, 541, 547, 562, 627, 632, 712], "prient": 246, "next": [246, 426, 691, 1135], "standesregist": 246, "sqlite3": [246, 443, 1051, 1107], "xml": [246, 1120], "tree": [246, 770, 797, 835, 861, 868, 906, 913, 952], "projektabschlusstag": 246, "id": [247, 275, 302, 834, 854, 914, 940, 952, 1143], "anyth": 247, "defin": [247, 449, 561, 698, 994], "own": [247, 439, 667, 677, 834], "lookup": [247, 525, 526], "vorbesprechung": 249, "legend": 249, "neuerungen": 249, "seit": 249, "2011": [249, 250, 251, 253, 348], "ausblick": 249, "thank": [250, 251, 253], "you": [250, 251, 253, 670], "readablil": [250, 251, 253], "writabl": [250, 251, 253, 924], "err": [250, 251, 253, 310, 614, 670, 704, 709], "bind": [250, 251, 253, 310, 704, 709, 717, 718, 1107], "auto": [250, 251, 253, 310, 655, 670, 703, 704, 944, 1129], "without": [250, 251, 253, 310, 571, 592, 666, 670, 933], "simpli": [250, 251, 253, 311, 914], "deserv": [250, 251, 253], "ag": [250, 251, 253, 645], "overrid": [250, 251, 253, 310, 702], "delet": [250, 251, 253, 310, 538, 607, 693, 857], "strongli": [250, 251, 253, 310, 656], "enum": [250, 251, 253, 310, 419, 656, 765], "deleg": [250, 251, 253, 310, 661], "nullptr": [250, 251, 253, 310, 669], "rvalu": [250, 251, 253, 310, 664, 667, 668], "skeleton": [251, 253, 271, 273, 575, 824, 825], "perfect": [253, 377, 419, 717], "view": [253, 658, 705, 707, 708, 761, 823], "architectur": [254, 348, 437, 655, 694, 797], "pattern": [254, 272, 274, 275, 348, 461, 475, 998, 1151], "mondai": 254, "tuesdai": 254, "wednesdai": 254, "forc": [255, 376], "front": [255, 274, 296, 1008], "seri": [255, 258, 278, 279, 284, 285, 306, 307, 314, 533, 1081, 1088, 1113], "piec": 255, "go": [255, 926, 1103], "kickoff": [255, 274, 275, 290, 293, 297, 300], "livehack": [255, 264, 439, 462, 664, 760, 1036, 1123, 1130], "Such": [256, 635], "noob": 258, "wsl": [262, 271, 273, 836, 985], "quick": 262, "permiss": [262, 283, 842, 844, 845, 846, 852, 856, 875, 906], "uart": [262, 828], "susi": 262, "untold": [262, 265, 271, 272, 275, 311], "whet": [263, 264], "appetit": [263, 264], "panda": [263, 265, 266, 268, 270, 272, 285, 297, 302, 308, 314, 1100, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119], "regex": 263, "pipelin": 264, "categori": 264, "payment": 264, "select": [264, 270, 272, 894, 901, 961, 1113, 1114, 1116, 1118, 1135], "uncategor": 264, "dataset": [265, 269, 270, 1099, 1101], "origin": [265, 268, 582, 699, 700, 807, 1103], "automat": [265, 268, 288, 304, 373, 396, 692, 739, 1150], "cleanup": [265, 268, 805, 816], "conversiosn": 266, "outlook": [268, 310], "specif": [268, 946, 1083], "usecas": 270, "drop": [270, 457, 705], "nan": 270, "datafram": [270, 1100, 1113, 1117], "isna": 270, "to_datetim": 270, "dated": 270, "workabl": 270, "usag": [270, 275, 310, 406, 410, 433, 449, 453, 498, 513, 559, 596, 597, 603, 630, 658, 662, 670, 714, 715, 716, 756, 800, 840, 879, 896, 903, 927, 971, 1049], "modifi": [270, 414, 421, 498, 943, 1005, 1035, 1119], "increas": 270, "price": 270, "particular": 270, "store": [270, 414, 462, 943, 1005], "readabl": [270, 417, 729, 929], "combin": [270, 380, 476, 477, 490], "prefer": [271, 273], "ubuntu": [271, 273, 985], "under": [271, 273, 859, 919, 992], "unsupport": 271, "heavi": [271, 273, 833], "weight": [271, 273], "resourc": [271, 332, 565, 625, 713, 726, 793], "r": [271, 876, 913], "littl": [271, 388, 439, 1020], "concurr": 271, "far": [271, 722, 1102], "fact": [272, 779, 841, 1008, 1011], "fixtur": [272, 514, 748, 1128, 1129, 1139, 1140, 1141], "omin": [272, 993], "warm": 273, "resolv": 273, "cont": 273, "d": [273, 462], "insid": [274, 275, 567, 572, 667, 668], "construct": [274, 296, 300, 1013, 1030], "emphasi": [274, 296, 300], "recoveri": [274, 275, 296, 297, 300], "broader": 274, "sens": 274, "morn": [275, 279, 283, 285, 297, 307, 311], "pytest": [275, 1127, 1128], "awaken": [279, 307], "bash": [283, 348, 877, 1144], "bourn": [283, 877, 1144], "inspect": [283, 884, 887], "wakeup": [283, 285, 311, 957, 959], "redirect": [283, 837, 838, 839, 840, 863, 876, 926], "pipe": [283, 707, 823, 837, 838, 840, 841, 888, 890], "archiv": [283, 819, 820, 822, 823, 985, 986, 989], "compress": [283, 819, 820, 822, 823], "network": [283, 479, 791, 792, 895, 920, 1165], "least": [283, 1135], "day2": 285, "interpret": [286, 431, 463, 476, 477, 490, 491, 1072], "len": 286, "abl": 286, "callabl": [286, 718], "summer": [290, 293, 333], "sandbox": [290, 293], "equal": [291, 511, 557, 573, 574, 575, 576, 577, 597, 1014], "spoiler": 293, "annot": 294, "multiprocess": 296, "idea": 296, "veri": [297, 702, 733, 1120], "leftov": 297, "yesterdai": 297, "ifi": 297, "toolcas": [297, 310, 673, 674, 675], "arg": [297, 993], "kwarg": [297, 993], "includ": [297, 397, 451, 1041], "receiv": [297, 965], "udp": 297, "datagram": [297, 895], "compositesink": 297, "timestamp": [297, 805], "org": [298, 330], "aaarghhh": 298, "expresss": 298, "constexpr": [310, 662], "constinit": 310, "constev": 310, "want": [310, 630, 655, 666, 670, 693, 765, 770, 928, 1011], "erasur": [310, 735, 737], "classic": [311, 719, 734], "semant": [311, 664, 665, 666, 667, 668, 965], "still": [311, 460, 655, 992, 997], "2024": 314, "checker": 315, "blinklicht": [316, 317, 318, 319], "electron": [316, 894], "aspect": 316, "circuitri": 316, "header": [316, 395, 441, 447, 572, 901, 1084], "pinout": [316, 901], "unittest": [319, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1166], "ece19": 320, "g2": [322, 825], "big": [322, 348, 785], "swoop": 322, "size": [322, 371, 530, 680, 873], "chunk": 322, "line": [322, 366, 398, 560, 840, 857, 1023, 1064, 1075, 1079], "str": [322, 1016], "byte": 324, "btw": 325, "wertebereich": 325, "sidenot": [326, 1037], "pure": [326, 630, 632, 1037], "beauti": [326, 433, 828, 903, 1037], "login": [327, 832, 904], "formalit\u00e4ten": 328, "ec": [329, 344, 346, 824, 825], "daili": 330, "pass": [330, 570], "fail": [330, 928, 1128, 1135, 1137], "reiter": 330, "argpars": [330, 1024, 1047], "deutsch": [331, 348], "lehrinhalt": 331, "lernergebniss": 331, "lv": 331, "empfohlen": [331, 1144, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "verpflichtend": 331, "fachliteratur": 331, "lernressourcen": 331, "instrument": 331, "art": 331, "vermittlung": 331, "voraussetzungen": 331, "begleitbedingungen": 331, "pr\u00fcfungsmethod": 331, "beurteilungskriterien": 331, "mode": [332, 442, 842, 894, 927, 1021, 1045], "deliveri": [332, 968, 969], "co": 332, "requisit": 332, "assess": 332, "criteria": [332, 953], "whose": 334, "fault": 334, "newcom": 335, "jjjj": 338, "sidewai": [339, 572, 718, 729, 993, 998], "bisher": 348, "gehalten": 348, "entwickl": 348, "fortgeschritten": [348, 1146], "wiener": 348, "neustadt": 348, "einf\u00fchrung": [348, 1145, 1147, 1154], "ober\u00f6sterreich": 348, "pictur": [348, 785], "obersteiermark": 348, "korn": 348, "salzburg": 348, "ausgew\u00e4hlt": 348, "themen": 348, "2018": 348, "raum": 348, "n\u00fcrnberg": 348, "oberb\u00fcren": 348, "schweiz": 348, "2017": 348, "m\u00fcnchen": [348, 1143], "lowlevel": 348, "refresh": 348, "programmiererstandpunkt": 348, "2016": 348, "wien": 348, "workshop": 348, "bodenseo": 348, "hemmenhofen": 348, "bodense": 348, "systemnah": 348, "2014": 348, "mathia": 348, "kettner": 348, "siemen": 348, "braunschweig": 348, "intermedi": [348, 488, 990, 1007], "scratch": [348, 1143], "lpd": 348, "hannov": 348, "unter": 348, "k\u00f6ln": 348, "projektverwaltung": 348, "subvers": [348, 1160], "lka": 348, "niedersachsen": 348, "konfigur": 348, "gnu": [348, 431, 971, 1155], "make": [348, 445, 512, 654, 693, 781, 824, 825, 972, 973, 1155], "2012": 348, "hamburg": 348, "fehlerdiagnos": 348, "polizei": 348, "stia": 348, "admont": 348, "bi": 348, "2010": 348, "softwareentwicklung": 348, "darmstadt": 348, "ulm": 348, "bundeswehr": 348, "wildflecken": 348, "cool": [351, 1040], "gui": 351, "Their": [351, 371], "hobbi": 351, "histori": [351, 556, 654, 761, 965, 990, 1020, 1099], "second": [353, 355], "fahrenheit": [354, 356, 358, 485], "tabl": [354, 356, 358, 511, 1014], "simplif": 355, "constant": [357, 372, 397, 427, 488], "preprocessor": [357, 397, 398], "macro": [358, 397, 398, 447, 756, 777], "outsid": 359, "cat": [359, 882], "poor": [359, 360], "wc": 360, "definit": [361, 363, 365, 373, 391, 393, 394, 397, 449, 572, 655, 734, 736, 738, 740, 756, 957, 1034], "memset": 361, "histogram": 362, "nonsens": 363, "signatur": 363, "declar": [363, 364, 393, 394, 395, 572], "mistak": 365, "stdin": [366, 890, 904], "variant": [371, 460, 466, 655, 731, 739, 740, 741, 965], "qualifi": 371, "width": [371, 403, 577, 590, 902, 1032], "escap": [372, 1039], "logic": 375, "implicit": [376, 715], "sign": 376, "truncat": [376, 933], "propag": 376, "unsign": 376, "compil": [376, 393, 398, 414, 415, 440, 441, 442, 558, 561, 565, 694, 715, 777, 797, 971, 974, 983, 987], "warn": [376, 382, 398, 947, 969], "cast": 376, "increment": [377, 590, 683, 1005], "decrement": [377, 590], "confus": [377, 1026, 1114], "manipul": [379, 715, 933, 969], "bitwis": [379, 1114], "AND": 379, "OR": 379, "xor": 379, "right": [379, 1076], "invert": [379, 1113], "complement": 379, "summari": [382, 557, 718, 797, 823, 988, 1008, 1116, 1118], "true": [385, 460, 570, 1117], "fals": 385, "truth": 385, "option": [385, 432, 447, 448, 449, 823, 857, 859, 879, 886, 901, 913, 1103], "matter": 386, "distinct": 387, "purpos": [388, 937], "closer": 388, "comma": 388, "infam": 388, "idiom": 388, "bodi": 389, "goto": 391, "label": [391, 1118], "monolith": [393, 440, 462, 515], "separ": [393, 394, 440, 462, 727, 881, 987], "static": [396, 420, 511, 571, 572, 737, 987, 988, 989, 1012], "visibl": [396, 420], "replac": [397, 500, 742], "inlin": [397, 427, 560, 572], "guard": 397, "rule": [398, 437, 558, 561, 572, 660, 668, 705, 835], "span": 398, "stringif": [398, 1016], "token": 398, "address": [400, 768, 811, 834, 901, 955, 1114], "arbitrari": [403, 590, 993, 1017], "see": [404, 828, 833, 834, 839, 840, 919, 920, 921, 923, 950, 953, 957, 959, 1038, 1102], "struct": [406, 407, 422, 557, 646, 709], "typedef": 408, "alia": 408, "singli": 411, "volatil": [413, 858], "lie": 413, "valid": 413, "handler": [413, 968, 969], "intrins": 414, "atom": [414, 724, 729, 795, 796, 800, 801, 816, 942], "builtin": 414, "align": 415, "unalign": 415, "pad": 415, "saniti": [417, 425, 439], "readabilti": 417, "shoot": 417, "offens": 417, "unobvi": 417, "ambigu": [417, 423, 660], "smell": 417, "know": 418, "size_t": 418, "discret": 419, "tradit": [419, 437, 1017], "approach": [419, 447, 448, 449], "wishlist": 419, "close": [419, 465, 710, 965], "somewhat": 420, "contriv": 420, "hoorai": 420, "correct": [421, 568, 702], "const": [421, 530, 547, 567, 568, 570, 642, 643, 655, 670, 704, 709], "non": [421, 504, 505, 506, 507, 508, 509, 510, 547, 567, 731, 736, 1135], "good": [422, 447, 448, 557, 572, 590, 659, 668, 677, 678, 705, 707], "old": [422, 572, 590, 655, 668, 677, 678, 707], "c99": 422, "explict": 423, "safeti": [423, 439], "scheme": 423, "artifici": [423, 1096], "valgrind": [424, 538], "action": [424, 969], "optim": [426, 427, 428], "bound": [426, 427, 538, 953], "unnecessari": 427, "peephol": 427, "subexpress": 427, "elimin": [427, 715, 735, 1064], "strength": 427, "reduct": 427, "fold": 427, "invari": 427, "unrol": 427, "tail": [427, 888], "cpu": [427, 834, 953, 959], "cach": [428, 449, 705], "multidimension": 428, "thrash": 428, "profil": [430, 431, 433, 434], "donald": 430, "knuth": 430, "toni": 430, "hoar": 430, "larri": 430, "wall": 430, "practic": 430, "brian": 430, "w": 430, "kernighan": 430, "rob": 430, "pike": 430, "gprof": 431, "flat": 431, "callgrind": 432, "analysi": 432, "per": [432, 765, 805, 1140], "kcachegrind": 432, "oprofil": 433, "much": [433, 448, 699, 992], "wide": 433, "offlin": 433, "graphic": 433, "accomplish": 437, "disclaim": [437, 836], "principl": [437, 465], "yagni": 437, "uncl": 438, "bob": 438, "typic": [439, 835, 939, 955], "bookkeep": 439, "effort": 439, "spaghetti": 439, "concaten": [439, 1112], "input": [439, 839, 997, 1100], "yyyi": 439, "mm": 439, "where": [439, 445, 833, 971], "testabl": 439, "explicitli": [439, 698, 715], "categor": 439, "net": 439, "place": [439, 516, 561, 602, 824, 825, 1035], "overengin": [439, 572], "boilerpl": [440, 699, 793], "execut": [440, 446, 842, 988, 994, 1002, 1022, 1071, 1135, 1137], "consist": [440, 768], "paus": 442, "diagram": 442, "cmake_build_typ": 442, "k": [442, 1097], "printf": [442, 559], "popular": [442, 829], "find_packag": 443, "prefix": [445, 993], "target": [445, 446, 448, 451, 452, 514, 931, 972, 1150], "runpath": 445, "abi": 445, "blacklist": [447, 448], "flag": [447, 636, 783, 923, 1040], "libhello": 447, "bad": [447, 448, 705, 766], "target_compile_definit": 448, "backlist": 448, "availablil": 448, "use_blacklist": 449, "normal": 450, "subdirectori": 451, "reorgan": 451, "i2c": [455, 901, 903], "subhierarchi": 455, "instanti": [455, 462, 611, 672, 731, 763], "adapt": [456, 462, 471, 476, 478, 485, 490, 718], "must": [456, 930], "adapte": 456, "asensor": 456, "real": [456, 564, 655, 716, 854], "measur": [456, 499, 730, 957, 959], "motiv": [457, 460, 476, 477, 573, 656, 659, 661, 670, 672, 697, 703, 817, 999, 1009, 1015], "insert": [457, 523, 524, 607, 608, 611, 612, 613, 647, 717, 744, 745, 785], "bulk": 457, "6a": 457, "initializer_list": [457, 658, 660], "socialdb": 458, "composit": [459, 469, 473, 487, 748], "filesystem": [459, 748, 965], "thermomet": [459, 479, 480, 493, 494, 513], "aggreg": [460, 469, 659], "conret": 460, "realiz": 460, "situat": [460, 914], "constantsensor": 460, "decoratedconstantsensor": 460, "randomsensor": [460, 501], "decoratedrandomsensor": 460, "verifi": [460, 869, 903, 905, 1100], "hold": [460, 1013], "studi": [462, 703, 704, 982], "heat": 462, "dbuslogg": 462, "dbusvaluestor": 462, "either": 462, "stop": [462, 713], "help": [462, 857, 889, 1123, 1130], "observ": [464, 492, 999], "which": [465, 930, 971], "liskov": 465, "substitut": [465, 570], "segreg": 465, "invers": [465, 958], "proxi": [466, 476, 479, 480, 490, 493, 494], "foundat": 467, "hierarchi": [467, 580, 835, 994], "hypothet": [467, 1014], "singleton": [468, 481, 482, 483, 495, 496, 497], "connector": 469, "uniniti": [477, 570], "flexibl": [481, 482, 495, 496], "strict": [482, 496], "inflex": [483, 497], "i2csensorfactori": 484, "concret": [484, 495, 496], "i2csensorfactory_vendor1": 484, "stub": [493, 804], "socialinsur": [495, 496], "oegk": [495, 496], "sv": [495, 496], "introduc": [498, 559, 705], "relationship": [498, 632, 633, 1100], "onewir": [498, 514, 515, 903, 931], "firstnam": 498, "lastnam": [498, 648, 650], "w1sensor": [498, 515], "answer": [498, 697], "try": [502, 580, 713, 994], "ledstripedisplay_nopoli": 504, "cover": [504, 505, 506, 507, 508, 509, 510, 513], "hysteresis_nopoli": 505, "averagingsensor_nopoli": 506, "constantsensor_nopoli": 507, "mocksensor_nopoli": 508, "randomsensor_nopoli": 509, "mock": 510, "shape": [511, 857], "procedur": 511, "circl": 511, "area": [511, 577], "squar": 511, "massag": 512, "sub": 512, "notfound": 514, "find_is_const": 514, "isol": [514, 1104, 1140], "realiti": 514, "pc": 514, "greater": 518, "odd": 519, "overwrit": 523, "sunni": [524, 526, 529, 924, 928, 929, 930], "uniquifi": 531, "transcript": 533, "malloc": 538, "free": 538, "mismatch": [538, 914], "across": [541, 734, 736, 738, 740], "ownership": [546, 547, 548, 715, 842], "raii": [546, 547, 548, 726], "dealloc": 547, "naiv": [550, 571, 622, 813, 968, 998, 1113], "ol": [557, 704], "look": [557, 919, 920, 921], "distanc": [557, 576], "length": 557, "manual": [558, 561, 565, 718, 740, 741, 857, 917, 935, 938, 999], "specifi": [559, 924], "otherwis": 559, "lifecycl": 562, "dragon": [565, 721], "memberwis": 565, "straighforward": 565, "correctli": 565, "underli": [566, 656], "mechan": 566, "just": 566, "pollut": 568, "hidden": [569, 879], "cannot": 570, "easili": 570, "odr": 572, "litt": 572, "defnit": 572, "ostream": [573, 574, 575, 576, 577], "cout": 573, "cuboid": 574, "upon": [574, 576, 577], "point3d": [574, 576], "surfac": 574, "volum": [574, 985], "unari": [575, 576], "rectangl": [576, 577], "coordin": [576, 577], "absolut": [576, 748, 881, 1094], "height": 577, "catch": [580, 994], "throw": [580, 731], "spirit": [590, 714, 715, 716], "pre": [592, 659], "destin": [592, 924], "back_insert_iter": 592, "binary_search": 595, "intellig": [595, 601, 1001, 1096], "find_if": [598, 648], "customiz": 598, "for_each": 599, "lower_bound": 601, "reverse_copi": [603, 622], "characterist": [605, 608], "modif": [608, 987], "fill": [611, 1107], "definin": 612, "subscript": 613, "eras": 614, "multimap": 616, "deriv": [626, 627], "larger": [630, 989, 997], "substr": [635, 1041], "paint": 636, "american": 636, "onto": 636, "moodl": [637, 830, 844, 845, 870, 977], "quiz": [637, 830, 844, 845, 870, 977], "cin": 639, "n": 645, "year": 645, "transform": [646, 718, 745, 997], "wrong": [649, 729, 924], "great": [654, 955], "around": [655, 683], "school": 655, "item": [655, 717, 744, 745, 746, 992, 998], "inevit": 655, "union": [655, 731], "consider": [655, 955], "uniform": 657, "implementor": 658, "direct": [658, 768], "inconsist": 659, "heap": 659, "refus": 659, "narrow": 659, "mess": [660, 1108], "realist": [660, 995, 1128], "int": [660, 950], "nicolai": 660, "josutti": 660, "complain": 660, "said": 663, "guidelin": 663, "well": 663, "smartptr": 665, "lvalu": [668, 717], "wish": [668, 1007], "theori": 668, "Ones": 668, "sai": [670, 859], "decai": 670, "chosen": 672, "rescu": [672, 697, 719, 973, 993, 1014, 1119], "syntact": [672, 993], "variat": [672, 704, 709, 797], "conceptless": [673, 674], "fulfil": 677, "has_siz": 677, "index_returns_doubl": 677, "func": 678, "ret": 681, "doubl": 681, "foreword": 683, "prototyp": 683, "examp": 683, "explain": 683, "drive": [683, 894], "anatomi": [683, 775], "resum": 683, "suspens": 683, "caller": 683, "co_yield": 683, "mimick": 683, "fibo": 684, "suspend": [689, 690, 691], "decis": [694, 953], "cleanli": 694, "care": 697, "handwritten": [699, 700], "proggi": 699, "morph": 699, "possibl": 700, "temporari": [700, 992, 1128], "made": 700, "hard": [702, 878], "aris": 702, "gool": 704, "prevent": [704, 715], "accident": [704, 745], "dangl": 705, "easi": [705, 722], "constraint": 705, "dogmat": 705, "sigh": 705, "storag": [707, 946], "abbrevi": 707, "avail": [707, 756], "compat": 709, "unique_ptr": [711, 714, 715], "shared_ptr": [711, 714, 745], "handwrit": 713, "ctor": 713, "auto_ptr": 713, "mayb": 713, "uniqu": [714, 746], "But": [714, 736, 928], "juggl": 714, "make_shar": 714, "cyclic": 714, "chanc": 715, "leakag": 715, "keystrok": 715, "make_uniqu": 715, "acknowledg": 715, "prove": 715, "weak_ptr": [716, 745], "borrow": 716, "invalid": 716, "univers": 717, "dual": 717, "bag": [717, 744, 745, 746], "null": 718, "pointlessli": 718, "hardcod": [718, 761], "placehold": 718, "upsid": 719, "technic": 719, "downsid": 719, "joinabl": 722, "detach": [722, 940], "cornercas": 722, "recursive_mutex": 725, "timed_mutex": 725, "recursive_timed_mutex": 725, "lock": [726, 729, 789, 802], "unlock": [726, 802], "consid": 726, "acquisit": [726, 1081], "lock_guard": 726, "condition_vari": 727, "safe": [727, 969], "predic": [727, 944], "concern": 727, "promis": 729, "chrono": [729, 730], "utterli": 729, "becom": [729, 989], "readi": 729, "minim": 729, "pro": 729, "clock": 730, "sleep": [730, 795, 800, 801], "bad_variant_access": 731, "accessor": 731, "get_if": 731, "fundament": [731, 1018], "incomplet": [733, 1110], "bloat": 735, "tadaa": [], "unrel": 738, "visit": 741, "rel": [748, 881, 1002], "compon": 748, "creation": [748, 829, 940, 941], "create_directori": 748, "entri": 748, "classif": 748, "is_xxx": 748, "directory_entri": 748, "modern": [752, 753, 754, 1148], "slideshow": [753, 756, 758, 761, 763, 766, 768, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 800, 802, 805, 807, 811, 814, 817, 965, 969, 1037, 1124, 1131], "hook": 755, "necessari": 755, "ioctl": [755, 756, 758, 777, 810, 923], "vtabl": 756, "kernelspac": 756, "_io": [756, 777], "major": [760, 761], "minor": [760, 761], "space": [761, 811, 830, 833, 834, 955], "hair": 765, "pretti": 765, "wswitch": 765, "dma": [768, 769, 793], "physic": 768, "scatterlist": 768, "when": 770, "explod": 770, "loadabl": 775, "init": [775, 793, 835, 1143], "exit": [775, 904, 940, 950], "unload": 775, "raspi": [777, 778, 914], "legaci": [777, 1067], "api": [777, 807, 939, 958], "my_activate_gpio": 777, "servic": [779, 835, 1111], "routin": [779, 793], "reserv": 781, "kmalloc": [783, 784, 800], "doubli": [785, 786], "node": [785, 926], "empti": [785, 876, 1008, 1064], "consequ": 787, "rt": [789, 790], "mutual": [789, 802], "exclus": [789, 802], "registr": 791, "layer": 791, "util": [791, 896], "pci": [793, 794], "foremost": 793, "probe": 793, "bar": 793, "rasperri": 797, "crossdev": 797, "artifact": [797, 1097], "bootload": 797, "jjj": 798, "mainten": 799, "spinlock": [800, 802, 803], "spin_lock": 800, "irq": 800, "spin_lock_irqsav": 800, "spin_unlock_irqrestor": 800, "ah": [800, 1108], "bulletproof": 802, "dup": 804, "defer": [805, 816], "jiffi": 807, "wheel": [807, 1050], "get_one_ev": 810, "copy_to_us": 810, "noth": 813, "o_nonblock": 813, "wake": 814, "workqueu": [816, 817, 818], "did": 816, "destroi": [817, 1130], "gzip": 821, "tar": 823, "etiquett": 823, "Being": 823, "g1": 824, "lot": [824, 825], "precondit": [824, 825], "credenti": [824, 843], "backup": [824, 825, 859], "busi": 825, "ok": [828, 950], "serial": 828, "pseudo": 828, "partit": 828, "proc": 828, "authent": [832, 910], "prompt": 832, "verif": [832, 1083], "success": 832, "imperson": 832, "uid": [834, 853, 854], "parent": [835, 952], "child": 835, "subsystem": 836, "0": [836, 950, 1104, 1143], "stdout": [840, 890, 904, 926], "stderr": 840, "trick": [840, 1039], "teacher": 842, "constel": 842, "root": [842, 854], "octal": 842, "tune": [842, 957, 1103], "setuid": [853, 854], "passwd": [853, 873, 929, 1073], "sudo": 853, "password": [853, 1061], "chmod": [853, 1022], "toi": 853, "effect": [854, 969, 1008], "ugli": 855, "sticki": 855, "umask": 856, "edit": 857, "tabul": 857, "filenam": 857, "bashrc": [858, 859], "cp": 859, "similar": 859, "its": [859, 1103], "pwd": 860, "cd": 860, "mkdir": [866, 876], "funni": 867, "dev": 872, "touch": 876, "rm": 876, "rmdir": 876, "mv": 880, "somewher": 880, "cut": [883, 1032], "durchsuchen": 885, "optionen": 885, "verkn\u00fcpfungen": 885, "grep": 886, "less": [889, 990, 1014], "brushless": 894, "motor": 894, "speed": 894, "esc": 894, "fwd": 894, "rev": 894, "calibr": 894, "exchang": 895, "packet": 895, "vcan": 896, "frame": [897, 1112], "mcp2515": 898, "schemat": 898, "solder": 898, "spi": 898, "lm73": 901, "slave": [901, 903], "master": [901, 903], "enabl": [901, 903], "bcm2835": 901, "datasheet": 901, "connect": [901, 920, 1107], "i2cdetect": 901, "detect": 901, "hwmon": [901, 903], "monitor": [901, 903], "pca9685": 902, "puls": 902, "wire": [902, 903], "ds18b20": 903, "alter": 903, "w1": 903, "attach": 903, "pin": [903, 937], "ds2482": 903, "800": 903, "channel": 903, "announc": 903, "hotplug": 903, "lm": 903, "caveat": [903, 1104], "topologi": 903, "symptom": 903, "statu": [116, 126, 904, 940, 950], "adjust": [906, 983], "wear": 910, "admin": 910, "hat": 910, "scp": 913, "sshf": 914, "mount": 914, "logdata": 914, "unmount": 914, "fusermount": 914, "umount": 914, "helper": [915, 1114], "simplic": [919, 920, 921], "watch": 919, "strace": 919, "supervis": 919, "descriptor": [923, 926, 933], "filedescriptor": 923, "offset": [923, 933], "lseek": 923, "hole": 925, "o_creat": 927, "bogu": 927, "o_excl": 928, "alreadi": 928, "o_rdonli": 929, "even": [929, 930, 1056], "o_wronli": 930, "writeabl": 930, "implicitli": 930, "scatter": 933, "gather": 933, "retriev": 935, "wise": 936, "legal": 939, "pthread_join": 940, "synchron": [942, 968], "win32": 944, "reset": 944, "trylock": 949, "islock": 949, "argc": 950, "char": 950, "argv": [950, 1024], "procf": 952, "pid": 952, "ppid": 952, "getpid": 952, "getppid": 952, "multitask": 953, "fair": [953, 957], "runnabl": [953, 959], "bare": 955, "metal": 955, "hm": 955, "awai": [955, 1090], "stabil": 955, "latenc": [957, 959], "nice": 957, "inexact": 957, "immedi": 957, "preempt_rt": 957, "polici": 958, "prioriti": 958, "runn": 958, "frequenc": 959, "scale": 959, "mysteri": 959, "remain": 959, "sysprog": [960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "mmap": 964, "segment": 964, "produc": [964, 998], "consum": 964, "mq_open": 965, "mq_send": 965, "mq_receiv": 965, "mq_close": 965, "mq_unlink": 965, "notif": 965, "mq_notifi": 965, "mqueue": 965, "sem_open": 965, "sem_wait": 965, "sem_post": 965, "sem_clos": 965, "sem_unlink": 965, "barebon": 968, "alarm": 968, "louder": 968, "innoc": 968, "sigalrm": 968, "programmat": 969, "mask": 969, "pend": 969, "sigset_t": 969, "async": 969, "seem": 971, "nm": 971, "agnost": 972, "goodi": 973, "nativ": [974, 979], "sysroot": [974, 983], "linaro": 983, "defunct": 983, "patienc": 983, "against": [983, 988, 1014], "docker": 985, "autoconf": 985, "71": 985, "zoom": 987, "rememb": 987, "reloc": 988, "independ": 988, "pic": 988, "runtim": 988, "versu": 988, "def": 990, "reach": 990, "theoret": 990, "nonloc": 990, "hood": 992, "monkeypatch": 992, "print": [992, 1017], "contextlib": 992, "contextmanag": 992, "involv": 992, "prefixprint": 992, "mind": 993, "sugar": 993, "functool": [993, 1014], "rais": 994, "regardless": 994, "coverag": 997, "infin": 998, "form": 1002, "daemon": 1003, "mother": 1005, "acquir": 1005, "abc": 1007, "late": 1007, "abtract": 1007, "interrelationship": 1010, "salari": 1011, "introspect": 1011, "isinst": 1011, "issubclass": 1011, "classmethod": 1012, "staticmethod": 1012, "_make": 1013, "_asdict": 1013, "dunder": 1014, "compar": 1014, "incompat": 1014, "lotsa": 1014, "magic": 1014, "__gt__": 1014, "term": 1014, "__lt__": 1014, "total_ord": 1014, "them": 1014, "readonli": 1015, "repr": 1016, "__repr__": 1016, "suppli": 1017, "ultim": 1017, "guido": 1020, "van": 1020, "rossum": 1020, "hash": 1022, "bang": 1022, "she": 1022, "doze": 1022, "registri": 1022, "indent": 1023, "cosmet": 1024, "rudimentari": 1024, "python2": 1026, "unicod": 1026, "esoter": 1030, "delimit": 1039, "interv": 1047, "axi": 1049, "setuptool": 1050, "manifest": 1050, "publish": [1050, 1089, 1111], "usernam": 1061, "prime": [1066, 1074, 1080], "strategi": 1073, "revert": 1075, "justifi": 1076, "activ": 1082, "dictread": [1084, 1085, 1103], "cp1252": [1084, 1086], "reader": [1086, 1087, 1103], "nohead": 1086, "both": 1092, "interrel": 1093, "product": 1094, "david": 1095, "beazlei": 1095, "raymond": 1095, "hetting": 1095, "mean": 1097, "linear": [1098, 1100, 1101], "regress": [1098, 1100, 1101], "weather": 1099, "ndarrai": 1100, "plot": 1100, "splice": 1100, "mankind": 1102, "god": 1102, "insan": 1103, "scsv": 1103, "dbapi": [1104, 1106, 1107], "transact": 1104, "postgresql": 1106, "postgr": 1106, "cursor": 1107, "queri": 1107, "ascii": 1108, "iso": 1108, "latin": 1108, "8859": 1108, "lieb": 1108, "gr\u00fc\u00dfe": 1108, "j\u00f6rg": 1108, "\u795d\u597d": 1108, "utf": 1108, "decod": 1108, "broker": 1111, "subscrib": 1111, "payload": 1111, "append": 1112, "deprec": 1112, "bitmap": 1114, "neat": 1114, "iloc": [1116, 1117], "Then": 1116, "inplac": 1117, "loc": [1117, 1118], "hiccup": 1118, "inclus": 1118, "lowercas": 1119, "email": 1119, "normalized_email": 1119, "ing": 1119, "elementtre": 1120, "etre": 1120, "sax": 1120, "dom": 1120, "invoc": 1123, "subcommand": 1123, "upload": 1126, "pythonpath": 1128, "mark": 1128, "expect": [1128, 1137], "recogn": 1129, "meat": 1129, "freez": 1130, "recreat": 1130, "fatal": 1135, "failur": 1135, "assert_": 1135, "suit": 1135, "teardown": 1140, "organisatorisch": 1142, "buchung": 1142, "kursablauf": 1142, "kursgestaltung": 1142, "unterlagen": 1142, "grub": 1143, "97": 1143, "bauen": 1143, "prozess": 1143, "verschieden": 1143, "zielpublikum": [1144, 1146, 1147, 1152, 1154, 1159, 1160, 1166], "kursinhalt": [1144, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "vorkenntniss": [1144, 1146, 1147, 1152, 1154, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166], "three": 1148, "prior": 1150, "beispielen": 1154, "mutter": 1155, "aller": 1155, "woch": 1159, "svn": 1160, "kochtopf": 311, "roundup": 311, "report": 116, "infrastructur": 120, "crtp": 737}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [143, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [95, "python"], [330, "python"], [335, "python"]], "Linux": [[5, "linux"], [79, "linux"], [161, "linux"], [893, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [438, "course-material"], [1094, "course-material"]], "Einleitung": [[7, "Einleitung"], [199, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [196, "Datatypes"], [199, "Datatypes"], [202, "Datatypes"], [215, "Datatypes"], [218, "Datatypes"], [226, "Datatypes"], [228, "Datatypes"], [234, "Datatypes"], [238, "Datatypes"], [241, "Datatypes"], [244, "Datatypes"], [258, "datatypes"], [265, "datatypes"], [268, "datatypes"], [276, "Datatypes"], [278, "datatypes"], [279, "datatypes"], [280, "Datatypes"], [284, "datatypes"], [285, "datatypes"], [302, "Datatypes"], [306, "datatypes"], [307, "datatypes"], [314, "datatypes"], [325, "Datatypes"], [1026, "datatypes"]], "Numbers": [[7, "Numbers"], [199, "Numbers"], [202, "Numbers"], [226, "Numbers"], [325, "Numbers"], [1026, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [199, "Integer-Numbers"], [1026, "integer-numbers"]], "Strings": [[7, "Strings"], [196, "Strings"], [199, "Strings"], [202, "Strings"], [211, "Strings"], [215, "Strings"], [215, "id3"], [218, "Strings"], [226, "Strings"], [238, "Strings"], [256, "Strings"], [259, "Strings"], [259, "id1"], [259, "id3"], [266, "Strings"], [302, "Strings"], [325, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [199, "Compound-Datatypes"], [211, "Compound-Datatypes"], [215, "Compound-Datatypes"], [218, "Compound-Datatypes"], [221, "Compound-Datatypes"], [226, "Compound-Datatypes"], [228, "Compound-Datatypes"], [234, "Compound-Datatypes"], [238, "Compound-Datatypes"], [241, "Compound-Datatypes"], [244, "Compound-Datatypes"], [256, "Compound-Datatypes"], [280, "Compound-Datatypes"], [286, "Compound-Datatypes"], [298, "Compound-Datatypes"], [302, "Compound-Datatypes"], [1027, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [199, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [199, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [199, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [199, "while"], [218, "while"], [234, "while"], [266, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [199, "Functions"], [202, "Functions"], [215, "Functions"], [226, "Functions"], [228, "Functions"], [234, "Functions"], [238, "Functions"], [243, "functions"], [259, "Functions"], [266, "Functions"], [280, "Functions"], [296, "functions"], [300, "functions"], [306, "functions"], [307, "functions"], [308, "Functions"], [314, "functions"], [363, "functions"], [363, "id1"], [1038, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [182, null], [183, null], [185, null], [186, null], [187, null], [188, null], [190, null], [192, null], [193, null], [197, null], [200, null], [203, null], [206, null], [207, null], [208, null], [209, null], [213, null], [216, null], [225, null], [229, null], [232, null], [235, null], [237, null], [240, null], [243, null], [246, null], [255, null], [258, null], [265, null], [268, null]], "\u00dcberblick": [[8, "uberblick"], [190, "uberblick"], [200, "uberblick"], [209, "uberblick"], [225, "uberblick"], [237, "uberblick"]], "Log": [[8, "log"], [130, "log"], [182, "log"], [183, "log"], [186, "log"], [187, "log"], [195, "log"], [197, "log"], [198, "log"], [200, "log"], [203, "log"], [207, "log"], [209, "log"], [213, "log"], [216, "log"], [225, "log"], [237, "log"], [246, "log"]], "Tag 1": [[8, "tag-1"], [173, "tag-1"], [192, "tag-1"], [200, "tag-1"], [203, "tag-1"], [209, "tag-1"], [225, "tag-1"], [237, "tag-1"]], "Tag 2": [[8, "tag-2"], [173, "tag-2"], [192, "tag-2"], [200, "tag-2"], [203, "tag-2"], [209, "tag-2"], [225, "tag-2"], [237, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [190, "live-hacking-jupyter-notebook"], [200, "live-hacking-jupyter-notebook"], [203, "live-hacking-jupyter-notebook"], [213, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [130, "links"], [167, "Links"], [178, "links"], [183, "links"], [185, "links"], [187, "links"], [190, "links"], [197, "links"], [198, "links"], [200, "links"], [209, "links"], [213, "links"], [216, "links"], [219, "links"], [225, "links"], [232, "links"], [243, "links"], [246, "links"], [279, "links"], [285, "links"], [335, "links"], [413, "links"], [662, "links"], [683, "links"], [701, "links"], [712, "links"], [836, "links"], [857, "links"], [896, null], [903, "links"], [1049, null], [1050, "links"], [1111, "links"], [1113, "links"], [1114, "links"], [1116, "links"], [1117, "links"], [1118, "links"], [1119, "links"], [1131, "links"], [774, "links"], [1019, null]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [191, "programmierung-grundlagen-jupyter-notebook"], [201, "programmierung-grundlagen-jupyter-notebook"], [227, "programmierung-grundlagen-jupyter-notebook"], [239, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [78, "details"], [347, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [141, null], [143, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [161, null], [170, null], [174, "contents"], [175, null], [436, "contents"], [538, null], [541, null], [547, null], [550, null], [638, "id1"], [826, "id1"], [846, "id1"], [865, "id1"], [871, "id1"], [874, "id1"], [891, "id1"], [899, "id1"], [900, "id1"], [907, "id1"], [916, "id1"], [932, "id1"], [934, "id1"], [936, "id1"], [951, "id1"], [961, null], [964, null], [978, "id1"], [998, null], [1053, "id1"], [1054, "id1"], [1058, "id1"], [1067, "id1"], [1081, "id1"], [1088, "id1"], [1135, null], [1140, null], [1148, "contents"], [1151, "contents"], [1137, null]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [348, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [330, "github"]], "Sphinx": [[13, "sphinx"], [66, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [129, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [128, "miscellaneous"], [139, "miscellaneous"], [166, "miscellaneous"], [186, "miscellaneous"], [250, "miscellaneous"], [251, "miscellaneous"], [271, "miscellaneous"], [285, "miscellaneous"], [296, "miscellaneous"], [297, "miscellaneous"], [300, "miscellaneous"], [307, "miscellaneous"], [310, "miscellaneous"], [533, "miscellaneous"], [533, "id1"], [669, "miscellaneous"], [933, "miscellaneous"], [946, "miscellaneous"], [732, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [316, "implementation-notes"]], "Todo": [[17, "id1"], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [143, null], [172, "id1"], [175, "id2"], [175, "id3"], [438, "todo"], [534, "id1"], [537, "id1"], [540, "id1"], [543, "id1"], [546, "id1"], [549, "id1"], [552, "id1"], [754, "id1"], [758, "id1"], [766, "id2"], [960, "id1"], [963, "id1"], [967, "id1"], [1134, "id1"], [1139, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [258, "setup"], [265, "setup"], [268, "setup"], [278, "setup"], [279, "setup"], [283, "setup"], [284, "setup"], [285, "setup"], [306, "setup"], [307, "setup"], [314, "setup"], [894, "setup"], [1130, "setup"], [1019, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1144, null], [1145, null], [1146, null], [1147, null], [1152, null], [1154, null], [1155, null], [1159, null], [1160, null], [1161, null], [1162, null], [1164, null], [1165, null], [1166, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [131, "further-information"], [206, "further-information"], [207, "further-information"], [229, "further-information"], [321, "further-information"], [330, "further-information"], [717, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [437, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [915, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [514, "unit-tests"]], "Classes": [[43, "classes"], [205, "Classes"], [290, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [515, "refactoring"], [805, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [62, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [62, "biography"]], "Abstract": [[59, "abstract"], [62, "abstract"]], "Description": [[59, "description"], [62, "description"], [468, "description"], [620, "description"], [636, "description"], [639, "description"], [641, "description"], [642, "description"], [643, "description"], [644, "description"], [645, "description"], [646, "description"], [647, "description"], [648, "description"], [650, "description"], [651, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[60, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[61, "installation-notes"]], "libgpiod": [[61, "libgpiod"]], "Fedora: Prepare Tarballs": [[61, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[61, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[64, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[64, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[64, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[65, "blog"], [143, "blog"]], "Articles": [[65, "articles"]], "In the Works": [[65, "in-the-works"]], "Not Yet in the Works": [[65, "not-yet-in-the-works"]], "Revisit Existing Posts": [[65, "revisit-existing-posts"]], "pending_xref": [[66, "pending-xref"]], "C++": [[67, "c"], [110, "c"], [111, "c"], [143, "c"], [652, "c"]], "C++: Building with CMake": [[68, "c-building-with-cmake"]], "C++: Interfaces": [[69, "c-interfaces"]], "C++: OO Basics": [[70, "c-oo-basics"]], "C++: Unit Testing": [[71, "c-unit-testing"]], "Graph": [[72, "graph"], [638, "graph"], [798, "graph"], [1053, "graph"], [1054, "graph"], [1058, "graph"], [1067, "graph"], [1081, "graph"], [1088, "graph"]], "Embedded Computing 1": [[73, "embedded-computing-1"], [78, "embedded-computing-1"]], "Current Curriculum": [[73, "current-curriculum"], [74, "current-curriculum"]], "Topics": [[73, "topics"], [74, "topics"], [98, "topics"], [99, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [142, "topics"], [178, "topics"], [178, "id2"], [206, "topics"], [243, "topics"], [246, null], [334, "topics"], [338, "topics"], [435, "topics"], [563, "topics"], [600, "topics"], [606, "topics"], [610, "topics"], [618, "topics"], [623, "topics"], [628, "topics"], [652, "topics"], [653, "topics"], [657, "topics"], [664, "topics"], [671, "topics"], [682, "topics"], [695, "topics"], [696, "topics"], [706, "topics"], [711, "topics"], [743, "topics"], [747, "topics"], [749, "topics"], [751, "topics"], [909, "topics"], [927, null], [929, null], [929, null], [975, "topics"], [981, "topics"], [982, "topics"], [1002, null], [1010, "topics"], [1105, "topics"], [1115, "topics"], [1127, "topics"], [368, "topics"], [383, "topics"], [392, "topics"], [399, "topics"], [405, "topics"], [409, "topics"], [412, "topics"], [416, "topics"], [425, "topics"], [429, "topics"], [434, "topics"], [555, "topics"], [578, "topics"], [581, "topics"], [584, "topics"], [625, "topics"], [634, "topics"], [720, "topics"], [728, "topics"], [732, "topics"], [948, "topics"], [954, "topics"], [1133, "topics"]], "Dependency Graph": [[73, "dependency-graph"], [74, "dependency-graph"]], "Embedded Computing 2": [[74, "embedded-computing-2"], [78, "embedded-computing-2"]], "EX: Race Conditions": [[75, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[76, "ex-avoiding-race-condition"]], "Goals": [[76, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"]], "Outcome": [[76, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [185, "outcome"]], "Git Introduction": [[77, "git-introduction"]], "Embedded Computing 2019": [[78, "embedded-computing-2019"]], "Overview": [[78, "overview"], [665, "overview"], [713, "overview"], [727, "overview"], [729, "overview"], [734, "overview"], [736, "overview"], [738, "overview"], [739, "overview"], [740, "overview"], [741, "overview"], [748, "overview"], [822, "overview"], [833, "overview"], [890, "overview"], [901, "overview"], [902, "overview"], [903, "overview"], [903, "id1"], [904, "overview"], [939, "overview"]], "Knowledge Transferred": [[78, "knowledge-transferred"]], "Course Setup": [[78, "course-setup"]], "Introduction to Linux and Unix": [[80, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[81, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[82, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[83, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[84, "ex-led-temperature-display"]], "Hardware": [[84, "hardware"], [85, "hardware"]], "EX: Temperature Sensors": [[85, "ex-temperature-sensors"], [92, "ex-temperature-sensors"]], "GPIO": [[86, "gpio"]], "sysfs Interface": [[86, "sysfs-interface"]], "gpiod Interface": [[86, "gpiod-interface"]], "Multithreading": [[87, "multithreading"], [164, "multithreading"], [224, "multithreading"], [250, "multithreading"], [251, "multithreading"], [253, "multithreading"], [296, "multithreading"], [297, "multithreading"], [300, "multithreading"], [310, "multithreading"], [338, "multithreading"], [345, "multithreading"], [968, "multithreading"], [1004, "multithreading"], [728, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[88, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[89, "communication-waiting-for-something"]], "Python Basics": [[90, "python-basics"]], "EX: Averaging Sensor, Display": [[91, "ex-averaging-sensor-display"]], "Simple Web Programming": [[93, "simple-web-programming"]], "Sensors Web Pages": [[94, "sensors-web-pages"]], "Embedded Computing 2020": [[96, "embedded-computing-2020"]], "SS2022": [[97, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[97, "block-1-linux-and-working-with-remote-embedded-devices"], [114, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[97, "block-2-c-on-linux-local-and-cross-development"], [114, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[97, "block-3-c"], [114, "block-3-c"]], "2022-03-08": [[98, "id1"]], "Homework": [[98, "homework"], [99, "homework"], [101, "homework"], [104, "homework"]], "2022-03-10": [[99, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[100, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[101, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[102, "ku"]], "2022-03-28": [[103, "id1"]], "2022-04-01": [[104, "id1"]], "SS2022: Logs": [[105, "ss2022-logs"]], "WS2022": [[106, "ws2022"]], "Plan: Evolution": [[106, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[107, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[107, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[107, "question-3-memory-leak"]], "Question 4: std::vector": [[107, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[108, "cross-development"], [262, "cross-development"], [974, "cross-development"], [975, "cross-development"]], "C++, OO": [[108, "c-oo"]], "Lab Exam 2023-01-17": [[109, "lab-exam-2023-01-17"]], "Project Setup": [[109, "project-setup"], [513, "project-setup"], [1082, "project-setup"]], "Exercises": [[109, "exercises"], [161, "exercises"], [166, "exercises"], [198, "exercises"], [208, "exercises"], [208, "id1"], [208, "id3"], [266, "Exercises"], [271, "exercises"], [290, "exercises"], [290, "id1"], [293, "exercises"], [297, "exercises"], [466, "exercises"], [468, "exercises"], [475, "exercises"], [503, "exercises"], [520, "exercises"], [522, "exercises"], [563, "exercises"], [628, "exercises"], [652, "exercises"], [747, "exercises"], [981, "exercises"], [1010, "exercises"], [1054, "exercises"], [578, "exercises"]], "Exam Submission": [[109, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[110, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[110, "unix-linux-concepts"], [111, "unix-linux-concepts"]], "Toolchain": [[110, "toolchain"], [111, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[111, "ss2023-exam-2023-06-30-solved"]], "Working with Git In Our FH-ECE21 Project": [[112, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[112, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[112, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[112, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[112, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[112, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[112, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[112, "push-into-fork-on-github"]], "Embedded Computing 2021": [[113, "embedded-computing-2021"]], "SS2023": [[114, "ss2023"]], "Finish: Written Exam": [[114, "finish-written-exam"]], "Requirements": [[118, "requirements"], [119, "requirements"], [122, "requirements"], [125, "requirements"], [455, "requirements"], [479, "requirements"], [510, "requirements"], [115, "requirements"], [116, "requirements"], [117, "requirements"], [120, "requirements"], [123, "requirements"]], "Implementation": [[118, "implementation"], [119, "implementation"], [122, "implementation"], [125, "implementation"], [514, "implementation"], [115, "implementation"], [117, "implementation"], [123, "implementation"]], "Testing": [[118, "testing"], [119, "testing"], [122, "testing"], [125, "testing"], [264, "testing"], [115, "testing"], [117, "testing"], [120, "testing"], [123, "testing"]], "Future (Not Part Of This Development Cycle)": [[118, "future-not-part-of-this-development-cycle"], [119, "future-not-part-of-this-development-cycle"], [122, "future-not-part-of-this-development-cycle"], [125, "future-not-part-of-this-development-cycle"], [115, "future-not-part-of-this-development-cycle"], [117, "future-not-part-of-this-development-cycle"], [123, "future-not-part-of-this-development-cycle"]], "Dependencies": [[118, "dependencies"], [119, "dependencies"], [122, "dependencies"], [125, "dependencies"], [316, "dependencies"], [317, "dependencies"], [318, "dependencies"], [319, "dependencies"], [321, "dependencies"], [444, "dependencies"], [461, "dependencies"], [475, "dependencies"], [503, "dependencies"], [520, "dependencies"], [522, "dependencies"], [533, "dependencies"], [600, "dependencies"], [606, "dependencies"], [610, "dependencies"], [618, "dependencies"], [620, "dependencies"], [623, "dependencies"], [628, "dependencies"], [636, "dependencies"], [637, "dependencies"], [639, "dependencies"], [641, "dependencies"], [642, "dependencies"], [643, "dependencies"], [644, "dependencies"], [645, "dependencies"], [646, "dependencies"], [647, "dependencies"], [648, "dependencies"], [649, "dependencies"], [650, "dependencies"], [651, "dependencies"], [657, "dependencies"], [664, "dependencies"], [671, "dependencies"], [682, "dependencies"], [706, "dependencies"], [711, "dependencies"], [824, "dependencies"], [825, "dependencies"], [826, "dependencies"], [830, "dependencies"], [844, "dependencies"], [845, "dependencies"], [846, "dependencies"], [865, "dependencies"], [870, "dependencies"], [871, "dependencies"], [874, "dependencies"], [907, "dependencies"], [909, "dependencies"], [916, "dependencies"], [922, "dependencies"], [924, "dependencies"], [932, "dependencies"], [934, "dependencies"], [936, "dependencies"], [951, "dependencies"], [975, "dependencies"], [977, "dependencies"], [978, "dependencies"], [981, "dependencies"], [982, "dependencies"], [1003, "dependencies"], [1005, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1055, "dependencies"], [1056, "dependencies"], [1057, "dependencies"], [1059, "dependencies"], [1060, "dependencies"], [1061, "dependencies"], [1062, "dependencies"], [1063, "dependencies"], [1064, "dependencies"], [1068, "dependencies"], [1069, "dependencies"], [1070, "dependencies"], [1071, "dependencies"], [1072, "dependencies"], [1074, "dependencies"], [1075, "dependencies"], [1076, "dependencies"], [1077, "dependencies"], [1078, "dependencies"], [1079, "dependencies"], [1080, "dependencies"], [1082, "dependencies"], [1083, "dependencies"], [1084, "dependencies"], [1085, "dependencies"], [1086, "dependencies"], [1087, "dependencies"], [1089, "dependencies"], [1090, "dependencies"], [1091, "dependencies"], [1092, "dependencies"], [1105, "dependencies"], [1108, "dependencies"], [1111, "dependencies"], [1115, "dependencies"], [1127, "dependencies"], [115, "dependencies"], [116, "dependencies"], [117, "dependencies"], [120, "dependencies"], [123, "dependencies"], [735, "dependencies"], [948, "dependencies"], [1133, "dependencies"], [121, "dependencies"]], "Data Logger: CSV Sink": [[118, "data-logger-csv-sink"]], "Column name configuration": [[118, "column-name-configuration"]], "output()": [[118, "output"]], "Data Logger: MQTT Sink": [[119, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[119, "mqtt-implementation-mosquitto"]], "Installation": [[119, "installation"], [350, "installation"], [914, "installation"], [1049, "installation"], [1111, "installation"], [1135, "installation"]], "Wrapper": [[119, "wrapper"]], "libgpiod Switch": [[122, "libgpiod-switch"]], "Switch Interface": [[124, "switch-interface"]], "Standup Records": [[125, "standup-records"], [115, "standup-records"], [116, "standup-records"], [117, "standup-records"], [120, "standup-records"], [123, "standup-records"]], "2023-11-20": [[125, "id1"], [115, "id1"], [117, "id1"], [123, "id1"]], "SysFS GPIO Switch": [[125, "sysfs-gpio-switch"], [126, "sysfs-gpio-switch"]], "Embedded Computing (FH Joanneum Graz)": [[127, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[128, "git-notes"]], "Bring Local Branch Upstream": [[128, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[128, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[128, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[130, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[131, "audio-chip-bringup"]], "Goal": [[131, "goal"], [133, "goal"], [134, "goal"], [136, "goal"], [271, "goal"], [273, "goal"], [1148, "goal"], [1151, "goal"]], "Findings": [[131, "findings"]], "Get Debian 10 Kernel Config": [[132, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[132, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[132, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[133, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[134, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[134, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[135, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[136, "dirty-upgrade-path"]], "Steps": [[136, "steps"]], "Wait for Customer Hardware": [[137, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[138, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[139, "python-training-improvements"]], "Beginner Course": [[139, "beginner-course"]], "Exercise Structure": [[139, "exercise-structure"]], "Split Exercises": [[139, "split-exercises"]], "Creating Screencasts": [[140, "creating-screencasts"]], "OpenShot": [[140, "openshot"]], "SEO": [[141, "seo"]], "Sitemap": [[141, "sitemap"]], "Meta Information": [[141, "meta-information"]], "Courses": [[141, "courses"]], "Stacks (Hanging)": [[142, "stacks-hanging"]], "DBus (New Topic)": [[142, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[142, "finish-meta-seo-and-stuff"]], "Structure": [[143, "structure"], [498, "structure"], [126, "structure"]], "Miscellaneous To Do": [[143, "miscellaneous-to-do"]], "Extensions": [[143, "extensions"]], "reST Todos": [[143, "rest-todos"]], "Styling": [[143, "styling"]], "Convert to RST/S5": [[143, "convert-to-rst-s5"]], "Examples": [[143, "examples"], [459, "examples"], [659, "examples"], [707, "examples"], [821, "examples"], [923, null]], "Convert Existing Content": [[143, "convert-existing-content"]], "Add Missing": [[143, "add-missing"]], "References, Past Trainings": [[143, "references-past-trainings"]], "About": [[143, "about"]], "Learning The Web": [[144, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[145, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[145, "basics"], [216, "basics"], [243, "basics"], [258, "basics"], [278, "basics"], [279, "basics"], [279, "id1"], [284, "basics"], [285, "basics"], [285, "id1"], [306, "basics"], [314, "basics"], [325, "Basics"], [393, "basics"], [579, "basics"], [591, "basics"], [611, "basics"], [709, "basics"], [823, "basics"], [939, "basics"], [1047, "basics"]], "Getting X-Loader and U-Boot": [[145, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[145, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[145, "repairing-the-nand"]], "Writing X-Loader to NAND": [[145, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[145, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[146, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[146, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[146, "signals-aren-t-messages"]], "References": [[146, null], [146, null], [146, null], [218, "References"], [221, "References"], [570, "references"]], "Message Queues aren\u2019t Message Queues": [[146, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[146, "semaphores-and-mutexes"]], "Timers": [[146, "timers"]], "Polling": [[146, "polling"]], "Event Dispatching": [[146, "event-dispatching"]], "Interrupts": [[146, "interrupts"], [780, "interrupts"]], "Realtime": [[146, "realtime"], [957, "realtime"], [1143, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[147, "saving-solid-state-disk-life-gentoo"]], "Rant": [[147, "rant"], [167, "Rant"], [973, null]], "No Swap": [[147, "no-swap"]], "tmpfs instances here and there": [[147, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[147, "syslog-var-log-messages"]], "Mountpoint for messages": [[147, "mountpoint-for-messages"]], "Logrotate": [[147, "logrotate"]], "Kernel I/O Scheduler": [[147, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[147, "use-ram-for-the-kernel-build"]], "Things that are left": [[147, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[148, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[148, "process-stack-management"]], "Conclusion": [[148, "conclusion"], [148, "id1"], [894, "conclusion"], [902, "conclusion"]], "Thread (pthread) Stack Management": [[148, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[148, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[148, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[148, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[148, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[148, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[148, "how-does-this-work"]], "Realtime is different": [[148, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[149, "patching-and-building-the-fedora-kernel"]], "Why?": [[149, "why"], [910, "why"], [992, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[149, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[149, null], [149, null]], "Prepare the RPM Build": [[149, "prepare-the-rpm-build"]], "Install Prerequisites": [[149, "install-prerequisites"]], "Setup rpmbuild Directory": [[149, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[149, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[149, "apply-the-patch"]], "Build the Kernel RPMs": [[149, "build-the-kernel-rpms"]], "Install Kernel": [[149, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[150, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[150, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[150, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[151, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[151, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[151, "rpm-package-meh"]], "Updated on 2020-04-09": [[151, null]], "Annoyance #1: Keeps Running in Background": [[151, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[151, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[151, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[152, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[152, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[152, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[152, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[153, "using-bigbluebutton-for-online-training"]], "In this Article": [[153, null], [154, null], [156, null]], "TL;DR": [[153, "tl-dr"]], "Background Information": [[153, "background-information"]], "Hosting Setup": [[153, "hosting-setup"]], "BigBlueButton Installation": [[153, "bigbluebutton-installation"]], "Functionality Check": [[153, "functionality-check"]], "What Else?": [[153, "what-else"], [897, "what-else"], [910, "what-else"]], "Traunstein via Zierlersteig": [[154, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[154, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[154, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[154, "die-rinne"]], "Abstieg": [[154, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[155, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[155, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[155, "ceska-koca"]], "Hinauf": [[155, "hinauf"]], "Runter": [[155, "runter"]], "Zusammenfassung": [[155, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[156, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[156, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[156, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[156, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[156, "generate-key-pair"]], "Stage Key for Enrollment": [[156, "stage-key-for-enrollment"]], "Reboot, Brick": [[156, "reboot-brick"]], "Diagnostics": [[156, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[157, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [984, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[157, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[157, "installing-crosstool-ng"]], "Prerequisites": [[157, "prerequisites"], [1050, "prerequisites"]], "Installing From Cloned Git Repository": [[157, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[157, "installing-from-release-tarball"]], "PATH, And Basic Test": [[157, "path-and-basic-test"]], "Configure Toolchain Build": [[157, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[157, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[157, "important-glibc-version"]], "The Error": [[157, "the-error"], [157, "id4"]], "The Fix": [[157, "the-fix"], [157, "id5"]], "Important: GCC Version": [[157, "important-gcc-version"]], "Toolchain Build/Install": [[157, "toolchain-build-install"]], "Test": [[157, "test"], [777, "test"]], "Simplest: C, <stdio.h>": [[157, "simplest-c-stdio-h"]], "C++, <iostream>": [[157, "c-iostream"]], "C++, <thread>": [[157, "c-thread"]], "Packaging/Distributing The Toolchain": [[157, "packaging-distributing-the-toolchain"]], "Afterword": [[157, "afterword"]], "Posts": [[158, "posts"]], "Linux und Open Source": [[159, "linux-und-open-source"]], "Schulung": [[159, "schulung"]], "Entwicklung": [[159, "entwicklung"]], "Beratung": [[159, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[160, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[161, "installing-git"]], "Windows": [[161, "windows"]], "Workflow": [[161, "workflow"]], "Cloning the Repository": [[161, "cloning-the-repository"]], "Exercise Time": [[161, "exercise-time"]], "Conflicts": [[161, "conflicts"]], "Trainer\u2019s Notes": [[161, "trainer-s-notes"]], "Courses: Overview": [[162, "courses-overview"]], "Online Trainings": [[162, null]], "Individual Trainings": [[162, null]], "Everything About Linux": [[162, "everything-about-linux"]], "Programming Languages": [[162, "programming-languages"]], "Miscellaneous but Related": [[162, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[163, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[163, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[164, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[164, "gpios-in-userspace"]], "CAN Bus": [[164, "can-bus"], [185, "can-bus"]], "Driver Beispiele": [[164, "driver-beispiele"]], "Heizungssteuerung": [[164, "heizungssteuerung"]], "Live Hacking": [[165, "Live-Hacking"], [595, "live-hacking"], [596, "live-hacking"], [598, "live-hacking"], [599, "live-hacking"], [602, "live-hacking"], [603, "live-hacking"], [604, "live-hacking"], [616, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[165, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[165, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[165, "Dictionaries"], [194, "Dictionaries"], [266, "Dictionaries"], [280, "Dictionaries"], [325, "Dictionaries"], [1043, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[165, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[165, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[165, "Shortcuts"]], "Objektorientierte Programmierung": [[165, "Objektorientierte-Programmierung"]], "Inheritance": [[165, "Inheritance"], [205, "Inheritance"], [1011, "inheritance"]], "Date and Time and Time Deltas - datetime": [[165, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[165, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[165, "String-Representations:-__str__()"]], "subprocess": [[165, "subprocess"], [244, "subprocess"]], "enumerate(), zip()": [[165, "enumerate(),-zip()"]], "List Comprehension": [[165, "List-Comprehension"], [189, "List-Comprehension"], [228, "List-Comprehension"], [298, "List-Comprehension"], [308, "List-Comprehension"], [997, "list-comprehension"], [1042, "list-comprehension"]], "exec(), eval()": [[165, "exec(),-eval()"]], "Umgebender Context": [[165, "Umgebender-Context"]], "Eigener Context": [[165, "Eigener-Context"]], "json": [[165, "json"], [241, "json"]], "Project": [[166, "project"], [126, "project"], [126, "id3"], [126, "id5"], [126, "id7"], [126, "id9"], [126, "id11"], [126, "id13"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[166, "python-individualtraining-5-tage-beginnend-28-10-2019"], [348, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[166, null], [169, null], [968, null], [1145, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[166, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[166, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[166, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[166, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[166, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[166, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[166, "operator-overloading"], [224, "operator-overloading"], [234, "Operator-Overloading"], [255, "operator-overloading"], [290, "operator-overloading"], [533, "operator-overloading"], [559, "operator-overloading"], [573, "operator-overloading"], [1014, "operator-overloading"]], "Getters and Setters": [[166, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[166, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[166, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[166, "closures-between-local-and-global"]], "Goals of this Training": [[167, "Goals-of-this-Training"]], "Exercise": [[167, "Exercise"], [208, "exercise"], [250, "exercise"], [250, "id1"], [251, "exercise"], [253, "exercise"], [262, "exercise"], [271, "exercise"], [293, "exercise"], [330, "exercise"], [336, "exercise"], [455, "exercise"], [456, "exercise"], [457, "exercise"], [459, "exercise"], [460, "exercise"], [463, "exercise"], [464, "exercise"], [649, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[167, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[167, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[167, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[167, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[167, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[167, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[167, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[167, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[167, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[167, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[168, "Random-Live-Hacking"]], "Data Types": [[168, "Data-Types"], [298, "Data-Types"]], "Mutable, Immutable": [[168, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[168, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[168, "Indices-and-Slicing"]], "for loops": [[168, "for-loops"]], "Iterator protocol": [[168, "Iterator-protocol"], [231, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[169, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[169, null], [171, null], [329, null]], "Standardthemen": [[169, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[169, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[169, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[169, "losen-einer-uni-ubung"]], "Proposal": [[170, "proposal"]], "Signals": [[170, "signals"]], "Posix IPC (and Virtual Memory)": [[170, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[170, "unix-domain-sockets"]], "Application in your Company": [[170, "application-in-your-company"]], "Further Thoughts": [[170, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[171, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[172, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[173, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[173, null]], "Kursaufbau": [[173, "kursaufbau"]], "Kursverlauf": [[173, "kursverlauf"], [181, "kursverlauf"]], "Tag 3": [[173, "tag-3"], [192, "tag-3"], [203, "tag-3"], [225, "tag-3"], [237, "tag-3"]], "Tag 4": [[173, "tag-4"], [203, "tag-4"], [225, "tag-4"], [237, "tag-4"]], "Tag 5": [[173, "tag-5"]], "Installing googletest By Hand": [[174, "installing-googletest-by-hand"]], "Clone googletest Repo": [[174, "clone-googletest-repo"]], "Create Build Directory": [[174, "create-build-directory"], [175, "create-build-directory"], [512, "create-build-directory"]], "CMake, Build and Install": [[174, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[174, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[175, "software-setup-build"]], "Getting the Source": [[175, "getting-the-source"]], "Install Prerequisites and Dependencies": [[175, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[175, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[176, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[176, "flatpak"]], "Issues": [[176, "issues"]], "RPM From M$": [[176, "rpm-from-m"]], "Code": [[177, "code"], [180, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[178, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[178, null], [181, null]], "Environment": [[178, "environment"], [829, "environment"]], "Unit Testing and Test Driven Development": [[178, "unit-testing-and-test-driven-development"]], "Python Installation": [[178, "python-installation"], [1019, "python-installation"]], "Programming Environment": [[178, "programming-environment"], [262, "programming-environment"], [1019, "programming-environment"]], "Day 1: Language Basics": [[178, "day-1-language-basics"]], "Day 2: Advanced Topics": [[178, "day-2-advanced-topics"]], "Wrap-Up": [[178, "wrap-up"]], "How Was It?": [[178, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[179, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[179, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[179, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[179, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[179, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[179, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[179, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[179, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[179, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[179, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[179, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[179, "list-und-Mutability"]], "Tuple und Immutability": [[179, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[179, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[179, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[179, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[179, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[179, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[179, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[179, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[179, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[179, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[179, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[179, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[179, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[179, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[179, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[179, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[179, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[179, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[179, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[179, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[179, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[179, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[179, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[179, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[181, "python-individualtraining-18-5-2020-19-5-2020"], [348, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[181, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[182, "python-advanced-7-9-2020-10-9-2020"], [348, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[182, "preparation"], [183, "preparation"], [185, "preparation"], [186, "preparation"], [187, "preparation"], [188, "preparation"], [575, "preparation"]], "Workspace Setup": [[182, "workspace-setup"], [183, "workspace-setup"], [185, "workspace-setup"], [187, "workspace-setup"]], "Github for Exercises": [[182, "github-for-exercises"], [183, "github-for-exercises"]], "Agenda": [[182, "agenda"], [183, "agenda"], [185, "agenda"], [186, "agenda"], [187, "agenda"], [188, "agenda"], [193, "agenda"], [197, "agenda"], [198, "agenda"], [235, "agenda"], [240, "agenda"], [252, "agenda"], [261, "agenda"], [282, "agenda"], [290, "agenda"], [1150, "agenda"]], "Advanced Core Python Topics": [[182, "advanced-core-python-topics"]], "Special Topics": [[182, "special-topics"]], "Day 1": [[182, "day-1"], [183, "day-1"], [185, "day-1"], [186, "day-1"], [187, "day-1"], [197, "day-1"], [198, "day-1"], [207, "day-1"], [208, "day-1"], [213, "day-1"], [216, "day-1"], [219, "day-1"], [222, "day-1"], [229, "day-1"], [271, "day-1"], [272, "day-1"], [273, "day-1"], [279, "day-1"], [283, "day-1"], [285, "day-1"], [290, "day-1"], [297, "day-1"]], "Day 2": [[182, "day-2"], [183, "day-2"], [185, "day-2"], [186, "day-2"], [187, "day-2"], [197, "day-2"], [198, "day-2"], [207, "day-2"], [208, "day-2"], [213, "day-2"], [216, "day-2"], [218, "Day-2"], [219, "day-2"], [222, "day-2"], [229, "day-2"], [262, "day-2"], [271, "day-2"], [273, "day-2"], [279, "day-2"], [283, "day-2"], [290, "day-2"], [297, "day-2"]], "Day 3": [[182, "day-3"], [183, "day-3"], [185, "day-3"], [186, "day-3"], [187, "day-3"], [197, "day-3"], [198, "day-3"], [207, "day-3"], [208, "day-3"], [213, "day-3"], [218, "Day-3"], [219, "day-3"], [222, "day-3"], [229, "day-3"], [262, "day-3"], [265, "day-3"], [271, "day-3"], [273, "day-3"], [279, "day-3"], [283, "day-3"], [285, "day-3"], [297, "day-3"]], "Day 4": [[182, "day-4"], [185, "day-4"], [197, "day-4"], [198, "day-4"], [207, "day-4"], [208, "day-4"], [262, "day-4"]], "Recommended Tutorials": [[182, "recommended-tutorials"]], "After Work Party": [[182, "after-work-party"], [213, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[183, "python-basics-28-9-2020-30-9-2020"], [348, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[184, "Iterables"]], "set constructor": [[184, "set-constructor"]], "Fast vs.\u00a0Simple": [[184, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[184, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[184, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[184, "Object-Oriented-Programming"], [234, "Object-Oriented-Programming"], [247, "Object-Oriented-Programming"], [258, "object-oriented-programming"], [272, "object-oriented-programming"], [274, "object-oriented-programming"], [275, "object-oriented-programming"], [278, "object-oriented-programming"], [279, "object-oriented-programming"], [284, "object-oriented-programming"], [290, "object-oriented-programming"], [293, "object-oriented-programming"], [296, "object-oriented-programming"], [297, "object-oriented-programming"], [300, "object-oriented-programming"], [306, "object-oriented-programming"], [314, "object-oriented-programming"], [437, "object-oriented-programming"], [1010, "object-oriented-programming"]], "datetime": [[184, "datetime"], [211, "datetime"], [266, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[185, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[185, "additional-topics-brought-in-by-thomas"]], "Notebook": [[185, "notebook"], [206, "notebook"], [221, "Notebook"], [330, "notebook"]], "Tutorials": [[185, "tutorials"], [213, "tutorials"]], "Linux on Raspberry Pi": [[186, "linux-on-raspberry-pi"]], "Cloud Machine": [[186, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[186, "raspberry-on-participant-s-desks"]], "Basic security": [[186, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[186, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[186, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[186, "in-the-wild-watchdog"]], "TODO": [[186, "todo"], [317, "todo"], [318, "todo"], [319, "todo"], [1110, "todo"]], "Support Material": [[186, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[187, "python-basics-23-11-2020-25-11-2020"], [348, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[187, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[188, "linux-basics-30-11-2020-3-12-2020"], [348, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[189, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[189, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[189, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[189, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[189, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[189, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[189, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[189, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[189, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[189, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[189, "Floor-Division"]], "Modulo Operator: %": [[189, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[189, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[189, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[189, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[189, "Raw-Strings"], [211, "Raw-Strings"], [228, "Raw-Strings"], [234, "Raw-Strings"], [256, "Raw-Strings"], [286, "Raw-Strings"], [1039, "raw-strings"]], "f-Strings": [[189, "f-Strings"], [308, "f-Strings"]], "Konvertierungen": [[189, "Konvertierungen"]], "Boolean": [[189, "Boolean"], [215, "Boolean"], [218, "Boolean"], [226, "Boolean"], [228, "Boolean"], [238, "Boolean"], [241, "Boolean"], [1028, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[189, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[189, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[189, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[189, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[189, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[189, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[189, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[189, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[189, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[189, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[189, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[189, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[189, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[189, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[189, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[189, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[189, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[189, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[189, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[189, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[189, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[189, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[189, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[189, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[189, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[189, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[189, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[189, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[189, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[189, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[189, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[189, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[189, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[189, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[189, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[189, "Liste"]], "Set": [[189, "Set"], [210, "Set"], [211, "Set"], [215, "Set"], [215, "id1"], [218, "Set"], [221, "Set"], [221, "id1"], [228, "Set"], [241, "Set"], [244, "Set"], [256, "Set"], [259, "Set"], [259, "id5"], [266, "Set"], [276, "Set"], [280, "Set"], [298, "Set"], [302, "Set"]], "8.2 Arrays": [[189, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[189, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[189, "8.4-Records"]], "8.5 Zeichenketten": [[189, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[189, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[189, "sorted,-reversed"]], "8.7 Dictionaries": [[189, "8.7-Dictionaries"]], "(jf) Records in Python": [[189, "(jf)-Records-in-Python"]], "8.8 Mengen": [[189, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[189, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[189, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[189, "\u00dcbung-1"]], "Versuch 1: in und index()": [[189, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[189, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[189, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[189, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[189, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[189, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[189, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[189, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[189, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[189, "Lokale-Variable"]], "Globale Variable (lesen)": [[189, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[189, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[189, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[189, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[189, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[189, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[189, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[189, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[189, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[189, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[189, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[190, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[190, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[190, "herdt-kapitel-6-grundlegende-sprachelemente"], [1158, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[190, "herdt-kapitel-7-kontrollstrukturen"], [1158, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[190, "verzweigung"], [1158, "verzweigung"]], "Schleifen": [[190, "schleifen"], [1158, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[190, "herdt-kapitel-8-elementare-datenstrukturen"], [1158, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[190, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1158, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[192, "python-basics-22-2-2021-24-2-2021"], [348, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[192, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[193, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[193, "books"], [243, "books"], [285, "books"], [1095, "books"]], "Python Advanced": [[194, "Python-Advanced"]], "Data Types Recap": [[194, "Data-Types-Recap"]], "Sequential Datatypes": [[194, "Sequential-Datatypes"], [226, "Sequential-Datatypes"], [238, "Sequential-Datatypes"], [308, "Sequential-Datatypes"], [1031, "sequential-datatypes"], [1031, "id1"]], "Slicing etc.": [[194, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[194, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[194, "Sets"], [194, "id1"], [202, "Sets"], [1044, "sets"]], "for Schleife, ganz kurz": [[194, "for-Schleife,-ganz-kurz"]], "Tuple": [[194, "Tuple"], [218, "Tuple"], [221, "Tuple"], [228, "Tuple"], [241, "Tuple"], [244, "Tuple"], [256, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[194, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[194, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[194, "Listen"], [228, "Listen"], [325, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[194, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[194, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[194, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[194, "Iterable:-Der-Begriff"]], "Zufall": [[194, "Zufall"]], "Regular Expressions": [[194, "Regular-Expressions"], [247, "Regular-Expressions"], [259, "Regular-Expressions"], [308, "Regular-Expressions"], [886, "regular-expressions"]], "enumerate()": [[194, "enumerate()"], [202, "enumerate()"], [205, "enumerate()"], [241, "enumerate()"], [259, "enumerate()"], [276, "enumerate()"], [298, "enumerate()"]], "JSON": [[194, "JSON"], [211, "JSON"], [221, "JSON"], [247, "JSON"], [256, "JSON"], [291, "JSON"], [294, "JSON"]], "2021-03-15": [[195, "id1"]], "Exercises (auf Github)": [[195, "exercises-auf-github"]], "Jupyter Notebook": [[195, "jupyter-notebook"], [197, "jupyter-notebook"], [214, "jupyter-notebook"], [216, "jupyter-notebook"], [219, "jupyter-notebook"], [225, "jupyter-notebook"], [230, "jupyter-notebook"], [233, "jupyter-notebook"], [236, "jupyter-notebook"], [325, "Jupyter-Notebook"], [1101, "jupyter-notebook"]], "Download": [[195, null], [197, null]], "Hallo Jupyter Notebook": [[196, "Hallo-Jupyter-Notebook"]], "Syntax": [[196, "Syntax"], [266, "Syntax"], [308, "Syntax"], [325, "Syntax"], [325, "id1"]], "Raw strings": [[196, "Raw-strings"]], "Variablen": [[196, "Variablen"], [228, "Variablen"]], "Tuple Unpacking": [[196, "Tuple-Unpacking"], [238, "Tuple-Unpacking"], [256, "Tuple-Unpacking"], [266, "Tuple-Unpacking"], [302, "Tuple-Unpacking"], [308, "Tuple-Unpacking"], [324, "Tuple-Unpacking"], [325, "Tuple-Unpacking"], [325, "id2"]], "Speicher, Memory Management": [[196, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[196, "Mutable-vs.\u00a0Immutable"], [247, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[196, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[196, "Aber!!!!"]], "Dictionary": [[196, "Dictionary"], [202, "Dictionary"], [210, "Dictionary"], [211, "Dictionary"], [215, "Dictionary"], [215, "id2"], [218, "Dictionary"], [221, "Dictionary"], [221, "id2"], [228, "Dictionary"], [241, "Dictionary"], [244, "Dictionary"], [256, "Dictionary"], [259, "Dictionary"], [259, "id4"], [266, "Dictionary"], [276, "Dictionary"], [280, "Dictionary"], [286, "Dictionary"], [298, "Dictionary"], [302, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[196, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[196, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[196, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[196, "for-und-range()"]], "Objektidentit\u00e4t": [[196, "Objektidentit\u00e4t"]], "Das with Statement": [[196, "Das-with-Statement"], [205, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[196, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[196, "String-Operationen"]], "enumerate(), und verlorene Indices": [[196, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[196, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[196, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[197, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[197, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[198, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[198, null]], "Course Preparation": [[198, "course-preparation"], [251, "course-preparation"], [253, "course-preparation"], [261, "course-preparation"]], "SSH": [[198, "ssh"], [335, "ssh"]], "Linux and/or Shell on Windows Host": [[198, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[198, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[200, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[202, "Syntax-etc."], [234, "Syntax-etc."], [280, "Syntax-etc."], [1023, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[202, "Comments-vs.\u00a0Documentation"]], "Variables": [[202, "Variables"], [215, "Variables"], [218, "Variables"], [234, "Variables"], [244, "Variables"], [276, "Variables"], [280, "Variables"], [302, "Variables"], [308, "Variables"], [325, "Variables"], [1025, "variables"]], "Assignment Fun": [[202, "Assignment-Fun"], [241, "Assignment-Fun"], [1025, "assignment-fun"]], "Assignment Details": [[202, "Assignment-Details"], [234, "Assignment-Details"], [241, "Assignment-Details"], [325, "Assignment-Details"], [1025, "assignment-details"]], "Operators": [[202, "Operators"], [238, "Operators"]], "Integer Arithmetic": [[202, "Integer-Arithmetic"]], "String Methods": [[202, "String-Methods"], [324, "String-Methods"]], "Datatype Conversions": [[202, "Datatype-Conversions"], [226, "Datatype-Conversions"], [228, "Datatype-Conversions"], [234, "Datatype-Conversions"], [238, "Datatype-Conversions"], [241, "Datatype-Conversions"], [259, "Datatype-Conversions"], [276, "Datatype-Conversions"], [280, "Datatype-Conversions"], [286, "Datatype-Conversions"], [298, "Datatype-Conversions"], [302, "Datatype-Conversions"], [308, "Datatype-Conversions"], [325, "Datatype-Conversions"], [1026, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[202, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[202, "Complex-Datatypes"], [325, "Complex-Datatypes"]], "List (mutable)": [[202, "List-(mutable)"], [215, "List-(mutable)"], [308, "List-(mutable)"]], "extend()? Iterable?": [[202, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[202, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[202, "in-Operator"], [241, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[202, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[202, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[202, "sum()"]], "map()": [[202, "map()"], [205, "map()"]], "list() function": [[202, "list()-function"]], "Performance: in Operator, und list und set": [[202, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[202, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[203, "python-grundlagen-2021-05-03-2021-05-05"], [348, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[203, "weiterfuhrende-information"]], "Visual Studio Code": [[203, "visual-studio-code"], [219, "visual-studio-code"], [1095, "visual-studio-code"]], "Python Beginner Tutorials": [[203, "python-beginner-tutorials"], [243, "python-beginner-tutorials"], [1095, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[203, "numpy-and-data-science-tutorials"], [243, "numpy-and-data-science-tutorials"], [246, "numpy-and-data-science-tutorials"], [279, "numpy-and-data-science-tutorials"], [1095, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[203, "pypi-installing-modules-that-don-t-come-as-batteries"], [1095, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[203, "git-and-github"], [1095, "git-and-github"]], "Conference Talks": [[203, "conference-talks"], [279, "conference-talks"], [1095, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[204, "python-grundlagen-jupyter-notebook"], [217, "python-grundlagen-jupyter-notebook"], [220, "python-grundlagen-jupyter-notebook"], [223, "python-grundlagen-jupyter-notebook"], [242, "python-grundlagen-jupyter-notebook"], [245, "python-grundlagen-jupyter-notebook"], [248, "python-grundlagen-jupyter-notebook"], [257, "python-grundlagen-jupyter-notebook"], [260, "python-grundlagen-jupyter-notebook"], [281, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[205, "import-zipfile"]], "Read Contents \u2026": [[205, "Read-Contents-\u2026"]], "Extract One Member": [[205, "Extract-One-Member"]], "All in One, Using with": [[205, "All-in-One,-Using-with"]], "Functionality: Methods": [[205, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[205, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[205, "Instance-Attributes"]], "Class Attributes": [[205, "Class-Attributes"]], "Public, Protected, Private": [[205, "Public,-Protected,-Private"]], "Properties": [[205, "Properties"], [234, "Properties"], [452, "properties"], [1015, "properties"]], "Functions, Positional and Keyword Arguments": [[205, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[205, "Positional-Arguments"]], "Keyword Arguments": [[205, "Keyword-Arguments"], [226, "Keyword-Arguments"], [326, "Keyword-Arguments"], [1037, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[205, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[205, "The-range()-Function"], [211, "The-range()-Function"], [218, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[205, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[205, "Iterable"], [221, "Iterable"]], "list(), and iterable?": [[205, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[205, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[205, "Decorators,-etc."]], "NoneType and None": [[205, "NoneType-and-None"]], "File I/O": [[205, "File-I/O"], [234, "File-I/O"], [241, "File-I/O"], [244, "File-I/O"], [276, "File-I/O"], [280, "File-I/O"], [322, "File-I/O"], [932, "file-i-o"], [1045, "file-i-o"]], "Iteration, yield, Recursion": [[205, "Iteration,-yield,-Recursion"]], "Recursion": [[205, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[205, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[205, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[205, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[205, "zip()"]], "filter(), and several other methods to do the same": [[205, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[205, "OSError,-errno"]], "The platform Module, sys.path": [[205, "The-platform-Module,-sys.path"]], "os.path": [[205, "os.path"], [221, "os.path"], [228, "os.path"]], "Exceptions und so (assert())": [[205, "Exceptions-und-so-(assert())"]], "AssertionError": [[205, "AssertionError"]], "Random Questions": [[205, "Random-Questions"]], "Slicing": [[205, "Slicing"], [228, "Slicing"], [234, "Slicing"], [259, "Slicing"], [280, "Slicing"], [1116, "slicing"]], "OO": [[205, "OO"], [273, "oo"], [339, "oo"], [533, "oo"]], "String Formatting": [[205, "String-Formatting"], [211, "String-Formatting"], [1040, "string-formatting"]], "import datetime": [[205, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[206, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[206, "predefined-streams"]], "PCAP Exam Syllabus": [[206, "pcap-exam-syllabus"], [219, "pcap-exam-syllabus"]], "2021-06-09": [[206, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[207, "programmieren-mit-c-2021-06-14-2021-06-18"], [348, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[207, "preparation-tools"]], "State machine": [[207, "state-machine"]], "Regular Course Topics": [[207, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[207, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[207, "regular-course-material"], [207, "id1"]], "Group Project Kick-Off :-)": [[207, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[207, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[207, "group-project-use-case-driven-course-flow"]], "Day 5": [[207, "day-5"], [208, "day-5"], [262, "day-5"]], "Pointer Recap": [[207, "pointer-recap"]], "On With Group Project": [[207, "on-with-group-project"]], "C++ Basics": [[207, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[207, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[208, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[208, "setup-for-the-new-kids"]], "Recapitulate some C": [[208, "recapitulate-some-c"]], "Group project review": [[208, "group-project-review"]], "Jump into C++": [[208, "jump-into-c"]], "Regular Topics": [[208, "regular-topics"], [208, "id2"], [208, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[208, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[208, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[208, "finish-first-user-database-functionality"]], "Unit Testing": [[208, "unit-testing"], [265, "unit-testing"], [268, "unit-testing"], [338, "unit-testing"]], "GTest Installation": [[208, "gtest-installation"]], "Git Workflows": [[208, "git-workflows"]], "Day X": [[208, "day-x"]], "Smart Pointers, Recap": [[208, "smart-pointers-recap"]], "std::map": [[208, "std-map"], [611, "std-map"]], "OO, and Polymorphism": [[208, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[209, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [348, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[209, "variablen-und-datentypen"], [225, "variablen-und-datentypen"], [237, "variablen-und-datentypen"]], "Kontrollstrukturen": [[209, "kontrollstrukturen"], [225, "kontrollstrukturen"], [226, "Kontrollstrukturen"], [237, "kontrollstrukturen"]], "Datenstrukturen": [[210, "Datenstrukturen"]], "List": [[210, "List"], [211, "List"], [218, "List"], [221, "List"], [241, "List"], [244, "List"], [256, "List"], [259, "List"], [286, "List"], [298, "List"], [1123, "list"]], "Iteration": [[210, "Iteration"], [210, "id1"], [211, "Iteration"], [211, "id1"], [221, "Iteration"], [244, "Iteration"], [256, "Iteration"], [298, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[210, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[210, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[210, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[210, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[210, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[210, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[211, "Iterable?"]], "List Comprehension, Generator Expression": [[211, "List-Comprehension,-Generator-Expression"]], "Literals": [[211, "Literals"], [477, "literals"]], "Quoting?": [[211, "Quoting?"], [215, "Quoting?"]], "Multiline Strings": [[211, "Multiline-Strings"], [215, "Multiline-Strings"], [308, "Multiline-Strings"], [1039, "multiline-strings"]], "Functionality": [[211, "Functionality"], [821, "functionality"]], "strip() and friends": [[211, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[211, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[211, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[212, "read-a-cleaned-up-sap-export"]], "Requirement": [[212, "requirement"], [476, "requirement"], [498, "requirement"], [499, "requirement"], [500, "requirement"], [504, "requirement"], [505, "requirement"], [506, "requirement"], [507, "requirement"], [508, "requirement"], [509, "requirement"], [924, "requirement"], [931, "requirement"], [1051, "requirement"], [1052, "requirement"], [1073, "requirement"], [1084, "requirement"], [1085, "requirement"], [1086, "requirement"], [1087, "requirement"], [1089, "requirement"], [1090, "requirement"], [1091, "requirement"], [1092, "requirement"]], "Solution": [[212, "solution"], [455, "solution"], [457, "solution"], [460, "solution"], [1131, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[213, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[215, "Initial-Terminology"]], "Sequence": [[215, "Sequence"]], "Tuple (immutable)": [[215, "Tuple-(immutable)"], [308, "Tuple-(immutable)"]], "References, (Im)mutability": [[215, "References,-(Im)mutability"], [228, "References,-(Im)mutability"], [241, "References,-(Im)mutability"], [244, "References,-(Im)mutability"], [259, "References,-(Im)mutability"], [266, "References,-(Im)mutability"], [280, "References,-(Im)mutability"], [286, "References,-(Im)mutability"], [286, "id1"], [298, "References,-(Im)mutability"], [1035, "references-im-mutability"]], "Iteration, for, and range()": [[215, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[215, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[215, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[215, "List-and-Tuple"]], "matplotlib": [[215, "matplotlib"], [247, "matplotlib"]], "File I/O, and Strings": [[215, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[215, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[215, "Miscellaneous-String-Methods"], [226, "Miscellaneous-String-Methods"], [228, "Miscellaneous-String-Methods"], [234, "Miscellaneous-String-Methods"], [244, "Miscellaneous-String-Methods"], [259, "Miscellaneous-String-Methods"], [280, "Miscellaneous-String-Methods"], [286, "Miscellaneous-String-Methods"], [308, "Miscellaneous-String-Methods"], [1041, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[216, "python-basics-2021-08-31-2021-09-01"], [348, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[216, "numerics-and-ai"]], "Mountains near Graz": [[216, "mountains-near-graz"]], "2021-11-17": [[218, "2021-11-17"]], "Enter Tuples": [[218, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[218, "Datatype-Conversions,-Type-Names"]], "NoneType": [[218, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[218, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[218, "Exercise:-Mixed-List"]], "Python Documentation": [[218, "Python-Documentation"]], "for": [[218, "for"], [280, "for"], [325, "for"]], "Iteration over Compound Datatypes": [[218, "Iteration-over-Compound-Datatypes"], [228, "Iteration-over-Compound-Datatypes"]], "File IO": [[218, "File-IO"], [234, "File-IO"], [262, "file-io"], [266, "File-IO"], [302, "File-IO"], [308, "File-IO"]], "Generators, Iterator Protocol, for": [[218, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[218, "Common-Sequence-Operation"]], "Comprehensions": [[218, "Comprehensions"], [221, "Comprehensions"], [234, "Comprehensions"], [266, "Comprehensions"], [298, "Comprehensions"]], "List, Iterable? WTF?": [[218, "List,-Iterable?-WTF?"]], "Dict and iterable": [[218, "Dict-and-iterable"]], "More on Lists": [[218, "More-on-Lists"], [226, "More-on-Lists"], [241, "More-on-Lists"]], "More on Dictionaries": [[218, "More-on-Dictionaries"], [226, "More-on-Dictionaries"]], "References, Mutability": [[218, "References,-Mutability"]], "CSV": [[218, "CSV"], [235, "csv"], [243, "csv"], [280, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[219, "python-basics-2021-11-17-2021-11-19"], [348, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[219, "python-core-topics"]], "Python Standard Library": [[219, "python-standard-library"]], "More About Strings": [[221, "More-About-Strings"], [238, "More-About-Strings"], [286, "More-About-Strings"], [308, "More-About-Strings"], [1039, "more-about-strings"]], "List, Tuple": [[221, "List,-Tuple"], [276, "List,-Tuple"], [280, "List,-Tuple"]], "Tuple Unpacking: What Else": [[221, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[221, "Iterator-Protocol"], [228, "Iterator-Protocol"], [259, "Iterator-Protocol"], [276, "Iterator-Protocol"], [280, "Iterator-Protocol"], [308, "Iterator-Protocol"]], "yield": [[221, "yield"], [244, "yield"]], "Everything is an Object of a Type": [[221, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[221, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[221, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[221, "2021-12-17"]], "Shift Operators": [[221, "Shift-Operators"]], "PCAP Sample Exam": [[221, "PCAP-Sample-Exam"]], "System Errors": [[221, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[222, "python-advanced-2021-12-01-2021-12-03"], [348, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[222, "basics-recap"], [275, "basics-recap"]], "Group Project Preparation": [[222, "group-project-preparation"]], "Hmmm?": [[222, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[224, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [348, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[224, "id1"]], "2021-12-07": [[224, "id2"]], "2021-12-08": [[224, "id3"]], "2021-12-09": [[224, "id4"]], "2022-01-24": [[224, "id5"]], "Undefined Behavior": [[224, "undefined-behavior"]], "Modularization": [[224, "modularization"], [393, "modularization"]], "2022-01-25": [[224, "id6"]], "C++ and OO (Classes)": [[224, "c-and-oo-classes"]], "Modularization (again)": [[224, "modularization-again"]], "2022-01-26": [[224, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[224, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[224, "classes-continued"]], "2022-01-27": [[224, "id8"]], "2022-01-28": [[224, "id9"]], "Standard Template Library: Container Templates": [[224, "standard-template-library-container-templates"]], "2022-01-31": [[224, "id10"]], "2022-02-01": [[224, "id11"]], "Algorithms": [[224, "algorithms"], [600, "algorithms"]], "Functors": [[224, "functors"]], "Unified Modeling Language (UML)": [[224, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[224, "exercise-using-all-from-today"]], "2022-02-02": [[224, "id12"]], "Associative Container: std::map": [[224, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[224, "exceptions-and-exception-handling"]], "2022-02-03": [[224, "id13"]], "2022-02-04": [[224, "id14"]], "C++11: A New Language": [[224, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[224, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[224, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[225, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [348, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[226, "2022-01-17"]], "Variables and Datatypes": [[226, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[226, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[226, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[226, "Integer-Numbers:-Arithmetic"], [238, "Integer-Numbers:-Arithmetic"], [1026, "integer-numbers-arithmetic"]], "Some Methods": [[226, "Some-Methods"]], "String Formatting: f-Strings": [[226, "String-Formatting:-f-Strings"]], "More about Strings": [[226, "More-about-Strings"]], "if": [[226, "if"], [266, "if"]], "2022-01-18": [[226, "2022-01-18"]], "Miscellanea": [[226, "Miscellanea"]], "Braces: Single Element Tuples?": [[226, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[226, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[226, "while-Loops"], [228, "while-Loops"], [241, "while-Loops"], [308, "while-Loops"], [1030, "while-loops"], [1030, "id1"]], "break and continue": [[226, "break-and-continue"], [390, "break-and-continue"], [390, "id1"], [1030, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[226, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[226, "Sequence-Membership"], [1031, "sequence-membership"]], "list (mutable)": [[226, "list-(mutable)"]], "tuple (immutable)": [[226, "tuple-(immutable)"]], "dict (mutable)": [[226, "dict-(mutable)"]], "set (mutable)": [[226, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[226, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[226, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[226, "Default-Parameters"], [228, "Default-Parameters"], [326, "Default-Parameters"], [1037, "default-parameters"]], "List Comprehensions": [[226, "List-Comprehensions"], [238, "List-Comprehensions"]], "Iteration over Dictionaries": [[226, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[226, "Building-Dictionaries"], [1043, "building-dictionaries"]], "More on Sets": [[226, "More-on-Sets"]], "with: Context Managers": [[226, "with:-Context-Managers"]], "Strings Intro": [[228, "Strings-Intro"]], "Doc Strings": [[228, "Doc-Strings"]], "Object Identity": [[228, "Object-Identity"]], "Integers": [[228, "Integers"], [238, "Integers"], [241, "Integers"], [259, "Integers"], [266, "Integers"], [286, "Integers"], [302, "Integers"], [308, "Integers"]], "Variablen? Datenypen?": [[228, "Variablen?-Datenypen?"]], "Objects, Classes": [[228, "Objects,-Classes"]], "Python Standard Libarary Examples": [[228, "Python-Standard-Libarary-Examples"]], "collections": [[228, "collections"]], "ChainMap": [[228, "ChainMap"]], "deque": [[228, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[228, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[228, "Slice-Assignment"], [1032, "slice-assignment"]], "Lists are mutable": [[228, "Lists-are-mutable"]], "Shallow copy and deep copy": [[228, "Shallow-copy-and-deep-copy"]], "else": [[228, "else"], [234, "else"]], "for Loops, range()": [[228, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[228, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[228, "dict.fromkeys()"], [241, "dict.fromkeys()"]], "Generators": [[228, "Generators"], [234, "Generators"], [274, "generators"], [275, "generators"], [279, "generators"], [296, "generators"], [300, "generators"]], "join, split": [[228, "join,-split"]], "strip, lstrip, rstrip": [[228, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[229, "python-basics-2022-02-23-2022-02-25"], [348, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[229, "data-structures"]], "OS Things": [[229, "os-things"]], "Data Science": [[229, "data-science"], [297, "data-science"], [298, "Data-Science"]], "Wiederholung": [[231, "Wiederholung"]], "Mutable/Immutable": [[231, "Mutable/Immutable"]], "Attribute": [[231, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[231, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[231, "Exceptions"], [247, "Exceptions"], [272, "exceptions"], [306, "exceptions"], [314, "exceptions"], [533, "exceptions"], [580, "exceptions"], [581, "exceptions"]], "for vs.\u00a0while, range()": [[231, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[231, "String-Methods-(some)"]], "eval()": [[231, "eval()"], [241, "eval()"], [298, "eval()"]], "exec()": [[231, "exec()"], [247, "exec()"], [308, "exec()"]], "Dictionary Iteration": [[231, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[231, "Classes,-Attributes,-OO"]], "Types and Instances": [[231, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[231, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[231, "OO-Everywhere"]], "Dictionary Operations": [[231, "Dictionary-Operations"]], "collections.defaultdict": [[231, "collections.defaultdict"], [256, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[232, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[232, "id1"]], "2022-03-16": [[232, "id2"]], "Test Driven Development": [[232, "test-driven-development"], [274, "test-driven-development"], [296, "test-driven-development"], [297, "test-driven-development"]], "2022-03-17": [[232, "id3"]], "2022-03-31": [[232, "id4"]], "Hello World": [[234, "Hello-World"], [352, "hello-world"], [1021, "hello-world"]], "Blahblah": [[234, "Blahblah"], [590, "blahblah"], [1020, "blahblah"]], "Object Oriented?": [[234, "Object-Oriented?"]], "MQTT": [[234, "MQTT"], [300, "mqtt"], [1111, "mqtt"]], "Commandline Arguments": [[234, "Commandline-Arguments"], [404, "commandline-arguments"], [404, "id1"]], "Object Lifetime": [[234, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[234, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[234, "More-String-Methods"], [234, "id1"]], "Dictionary Preview": [[234, "Dictionary-Preview"]], "list: Mutable": [[234, "list:-Mutable"]], "list(): explicit constructor": [[234, "list():-explicit-constructor"]], "tuple: Immutable": [[234, "tuple:-Immutable"]], "dict: Mutable": [[234, "dict:-Mutable"]], "set: Mutable": [[234, "set:-Mutable"]], "List comprehension": [[234, "List-comprehension"]], "DIctionary Comprehension": [[234, "DIctionary-Comprehension"]], "Set Comprehension": [[234, "Set-Comprehension"], [298, "Set-Comprehension"], [308, "Set-Comprehension"], [991, "set-comprehension"]], "max": [[234, "max"]], "for, enumerate()": [[234, "for,-enumerate()"]], "Iteratoren, Generatoren": [[234, "Iteratoren,-Generatoren"]], "Generatoren": [[234, "Generatoren"]], "split und join": [[234, "split-und-join"]], "strip()": [[234, "strip()"]], "dict vs.\u00a0OrderedDict": [[234, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[234, "Duck-Typing"], [1007, "duck-typing"]], "Interfaces": [[234, "Interfaces"], [629, "interfaces"]], "Implementation Inheritance": [[234, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[234, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[234, "__bases__"]], "__mro__": [[234, "__mro__"]], "Object Layout (self)": [[234, "Object-Layout-(self)"]], "More from OO": [[234, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[234, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[234, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[234, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[234, "Exception-Handling"], [265, "exception-handling"], [268, "exception-handling"], [273, "exception-handling"], [341, "exception-handling"], [994, "exception-handling"]], "Order of except Clauses": [[234, "Order-of-except-Clauses"]], "finally": [[234, "finally"]], "lambda": [[234, "lambda"]], "map(), filter()": [[234, "map(),-filter()"], [298, "map(),-filter()"]], "Generators, Iteration Protocol": [[234, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[234, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[235, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [348, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[235, "basics"]], "2022-03-30: Basics": [[235, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[235, "advanced"]], "Plan For The Wild Part": [[235, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[237, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [348, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[237, "discussion-flow-charts"]], "BlahBlah": [[238, "BlahBlah"], [241, "BlahBlah"], [244, "BlahBlah"], [308, "BlahBlah"]], "Interactive": [[238, "Interactive"]], "For Beginners": [[238, "For-Beginners"]], "Not For Beginners?": [[238, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[238, "Strings,-1st-Explanation"]], "Operator Precedence": [[238, "Operator-Precedence"], [241, "Operator-Precedence"], [1026, "operator-precedence"]], "Floating Point Numbers": [[238, "Floating-Point-Numbers"], [1026, "floating-point-numbers"]], "Docstrings": [[238, "Docstrings"], [244, "Docstrings"], [325, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[238, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[238, "Random-Numbers"]], "Indexing and Slicing": [[238, "Indexing-and-Slicing"], [286, "Indexing-and-Slicing"], [1032, "indexing-and-slicing"]], "for Loops": [[238, "for-Loops"], [308, "for-Loops"], [355, "for-loops"], [1033, "for-loops"]], "range()": [[238, "range()"], [266, "range()"]], "Filterketten": [[238, "Filterketten"]], "Zen": [[238, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[238, "Compound-Datatypes-By-Example:-List,-Tuple"], [1027, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[238, "Compound-Datatypes-By-Example:-Dictionary"], [1027, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[238, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[238, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[238, "Compound-Datatypes-By-Example:-Set"], [1027, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[238, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[240, "python-basics-2022-04-25-2022-04-27"], [348, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[241, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[241, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[241, "Variables-and-Types"]], "Swap": [[241, "Swap"]], "Integers are Infinitely long": [[241, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[241, "Floating-Point-Comparison"]], "Mutability/Immutability": [[241, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[241, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[241, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1059, "exercise-determine-maximum-of-two-numbers"], [1069, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[241, "Ranges"], [706, "ranges"]], "Exercise: Sort out Duplicates": [[241, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[241, "Algorithmic-Complexity"]], "More On Dictionaries": [[241, "More-On-Dictionaries"]], "More On Sets": [[241, "More-On-Sets"]], "eval(), json": [[241, "eval(),-json"]], "Encoding": [[241, "Encoding"], [265, "encoding"], [286, "Encoding"], [302, "Encoding"], [302, "id1"], [330, "encoding"], [1108, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[243, "python-2022-05-02-2022-05-05"], [348, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[243, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[243, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[243, "excursion-can-communication-oo-modules"]], "Modules": [[243, "modules"], [256, "Modules"], [297, "modules"], [330, "modules"], [701, "modules"], [1002, "modules"]], "CSV, Functions": [[243, "csv-functions"]], "PyPI, Virtual Environments": [[243, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[243, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[243, "more-on-datatypes"]], "Random Topics": [[243, "random-topics"]], "Standard Library": [[243, "standard-library"]], "Hello Jupyter Notebook": [[244, "Hello-Jupyter-Notebook"]], "Syntax etc": [[244, "Syntax-etc"]], "Mutability": [[244, "Mutability"], [276, "Mutability"]], "Removing Elements": [[244, "Removing-Elements"], [611, "removing-elements"]], "Nested Lists?": [[244, "Nested-Lists?"]], "while loops, and else": [[244, "while-loops,-and-else"]], "for loops (and else)": [[244, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[244, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[244, "Encoding,-and-String"]], "Regular Expression": [[244, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[244, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[244, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[244, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[244, "itertools.chain()"]], "Destructor?": [[244, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[244, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[246, "python-advanced-2022-05-16-2022-05-18"], [348, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[246, "project-management"], [297, "project-management"], [337, "project-management"], [338, "project-management"], [342, "project-management"]], "Unit Testing, Test Driven Development": [[246, "unit-testing-test-driven-development"]], "Object Priented Programming": [[246, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[246, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[246, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[246, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[246, "xml-element-tree"]], "Projektabschlusstag": [[246, "projektabschlusstag"]], "Basic Python": [[246, "basic-python"], [1157, "basic-python"]], "Assert": [[247, "Assert"]], "The id() function": [[247, "The-id()-function"]], "class Person": [[247, "class-Person"]], "Functions That Do Not Return Anything": [[247, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[247, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[247, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[247, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[247, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[247, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[249, "vorbesprechung-2022-05-11"]], "Legende": [[249, "legende"]], "Neuerungen in C++ seit 2011": [[249, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[249, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[249, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[249, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[250, "c-a-new-language-starting-in-2011"], [251, "c-a-new-language-starting-in-2011"]], "Metadata": [[250, "metadata"], [251, "metadata"], [253, "metadata"], [879, "metadata"]], "Introduction": [[250, "introduction"], [251, "introduction"], [253, "introduction"], [272, "introduction"], [273, "introduction"], [351, "introduction"], [430, "introduction"], [461, "introduction"], [556, "introduction"], [653, "introduction"], [712, "introduction"], [797, "introduction"], [994, "introduction"], [368, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[250, "pythonicity-thank-you-readablility-and-writability"], [251, "pythonicity-thank-you-readablility-and-writability"], [253, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[250, "range-based-for-loops"], [251, "range-based-for-loops"], [253, "range-based-for-loops"], [310, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[250, "tuple-unpacking-err-structured-binding"], [251, "tuple-unpacking-err-structured-binding"], [253, "tuple-unpacking-err-structured-binding"], [310, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[250, "duck-typing-err-auto-without-a-duck"], [251, "duck-typing-err-auto-without-a-duck"], [253, "duck-typing-err-auto-without-a-duck"], [310, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[250, "things-that-simply-deserved-fixing-since-ages"], [251, "things-that-simply-deserved-fixing-since-ages"], [253, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[250, "brace-initialization"], [251, "brace-initialization"], [253, "brace-initialization"], [310, "brace-initialization"], [311, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[250, "new-oo-keywords-override-final-default-delete"], [251, "new-oo-keywords-override-final-default-delete"], [253, "new-oo-keywords-override-final-default-delete"], [310, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[250, "strongly-typed-enum"], [251, "strongly-typed-enum"], [253, "strongly-typed-enum"], [310, "strongly-typed-enum"], [656, "strongly-typed-enum"]], "Delegating Constructor": [[250, "delegating-constructor"], [251, "delegating-constructor"], [253, "delegating-constructor"], [310, "delegating-constructor"], [661, "delegating-constructor"]], "nullptr": [[250, "nullptr"], [251, "nullptr"], [253, "nullptr"], [310, "nullptr"], [669, "nullptr"]], "Smart Pointers": [[250, "smart-pointers"], [251, "smart-pointers"], [253, "smart-pointers"], [273, "smart-pointers"], [533, "smart-pointers"], [311, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[250, "moving-rvalue-references"], [251, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[250, "functions-std-bind-std-function-lambdas"], [251, "functions-std-bind-std-function-lambdas"], [253, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[251, "work-environment"], [253, "work-environment"], [271, "work-environment"], [272, "work-environment"], [273, "work-environment"], [337, "work-environment"]], "Skeleton Project": [[251, "skeleton-project"], [253, "skeleton-project"], [575, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[252, "linux-basics-2022-10-03-2022-10-05"], [348, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[253, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [348, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[253, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[253, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[253, "coroutines-and-c-23-generators"]], "Ranges And Views": [[253, "ranges-and-views"]], "Concepts": [[253, "concepts"], [310, "concepts"], [671, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[254, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [348, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[254, "monday"]], "Tuesday": [[254, "tuesday"]], "Wednesday": [[254, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[255, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[255, "up-front-project-management"], [274, "up-front-project-management"], [296, "up-front-project-management"]], "Object Oriented Programming: Classes": [[255, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[255, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[255, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[255, "exercise-series-csv-json"]], "Iteration, Generators": [[255, "iteration-generators"]], "Going Dynamic: type(), exec()": [[255, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[255, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[255, "group-project-kickoff"], [275, "group-project-kickoff"], [297, "group-project-kickoff"], [300, "group-project-kickoff"]], "Data Structures Recap": [[255, "data-structures-recap"]], "Miscellaneous Livehacking": [[255, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[255, "function-arguments-closures-decorators"], [290, "function-arguments-closures-decorators"]], "Exceptions, with": [[255, "exceptions-with"], [290, "exceptions-with"], [293, "exceptions-with"]], "Package Management": [[255, "package-management"]], "Videos": [[255, "videos"], [301, "videos"]], "Beginner": [[255, "beginner"], [279, "beginner"]], "Advanced": [[255, "advanced"], [279, "advanced"]], "Fun": [[255, "fun"]], "Python (2022-10-17)": [[256, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[256, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[256, "Variables,-Types"]], "Immutable? References?": [[256, "Immutable?-References?"]], "And range()?": [[256, "And-range()?"]], "More About Dictionaries": [[256, "More-About-Dictionaries"], [256, "id1"], [259, "More-About-Dictionaries"], [286, "More-About-Dictionaries"], [308, "More-About-Dictionaries"], [1043, "more-about-dictionaries"]], "More About Lists": [[256, "More-About-Lists"], [259, "More-About-Lists"], [286, "More-About-Lists"], [308, "More-About-Lists"], [1042, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[258, "python-2022-11-16-2022-11-18"], [259, "Python-(2022-11-16---2022-11-18)"], [348, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[258, "control-flow-sequences-iteration"], [265, "control-flow-sequences-iteration"], [268, "control-flow-sequences-iteration"], [278, "control-flow-sequences-iteration"], [279, "control-flow-sequences-iteration"], [284, "control-flow-sequences-iteration"], [285, "control-flow-sequences-iteration"], [285, "id2"], [306, "control-flow-sequences-iteration"], [307, "control-flow-sequences-iteration"], [314, "control-flow-sequences-iteration"]], "More Datatypes": [[258, "more-datatypes"], [265, "more-datatypes"], [268, "more-datatypes"], [278, "more-datatypes"], [279, "more-datatypes"], [279, "id2"], [284, "more-datatypes"], [285, "more-datatypes"], [306, "more-datatypes"], [307, "more-datatypes"], [314, "more-datatypes"], [353, "more-datatypes"]], "Exercise Series: CSV Files": [[258, "exercise-series-csv-files"], [278, "exercise-series-csv-files"], [279, "exercise-series-csv-files"], [284, "exercise-series-csv-files"], [285, "exercise-series-csv-files"], [306, "exercise-series-csv-files"], [307, "exercise-series-csv-files"], [314, "exercise-series-csv-files"]], "Advanced Language Features": [[258, "advanced-language-features"], [278, "advanced-language-features"], [279, "advanced-language-features"], [284, "advanced-language-features"], [416, "advanced-language-features"]], "Noob Exercises": [[258, "noob-exercises"]], "Object Oriented": [[259, "Object-Oriented"]], "Lists and Tuples": [[259, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[259, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[259, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[259, "And-Lists?-Mutable!"]], "Tuples?": [[259, "Tuples?"]], "set": [[259, "set"]], "More About Sets": [[259, "More-About-Sets"], [286, "More-About-Sets"], [1044, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[259, "Comprehensions-(List,-Dictionary,-Set)"], [308, "Comprehensions-(List,-Dictionary,-Set)"], [991, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[259, "Generator-Expressions"]], "eval and exec": [[259, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[261, "linux-basics-2023-01-23-2023-01-26"], [348, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[262, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [348, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[262, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[262, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[262, "day-1-overview"]], "Introductory Live Hacking": [[262, "introductory-live-hacking"]], "The Shell": [[262, "the-shell"]], "Processes Quick Walk-Through": [[262, "processes-quick-walk-through"]], "Permissions": [[262, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[262, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[262, "uart"]], "SUSI": [[262, "susi"]], "Secure Shell (SSH)": [[262, "secure-shell-ssh"]], "Miscellaneous Hardware": [[262, "miscellaneous-hardware"]], "Group Exercise": [[262, "group-exercise"]], "Untold": [[262, "untold"], [272, "untold"], [275, "untold"]], "More From The Commandline": [[262, "more-from-the-commandline"]], "Multithreading (And C++)": [[262, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[263, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[263, "Filter-in-Pandas"]], "Copy vs Reference": [[263, "Copy-vs-Reference"]], "Immutable": [[263, "Immutable"]], "String": [[263, "String"]], "Regex": [[263, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[264, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[264, "pipeline-driver"]], "Virtual Environment Setup": [[264, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[264, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[264, "filter-select-uncategorized"]], "More Categories": [[264, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[265, "python-for-sap-developers-2023-03-13-2023-03-15"], [348, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[265, "day-1-basics"]], "Demo": [[265, "demo"]], "Day 2 (Basics, Continued)": [[265, "day-2-basics-continued"]], "Pandas": [[265, "pandas"], [266, "Pandas"], [268, "pandas"], [272, "pandas"], [297, "pandas"], [1115, "pandas"]], "Hacking About On A SAP Test Dataset": [[265, "hacking-about-on-a-sap-test-dataset"], [269, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[265, "untold-from-original-agenda"]], "OO Introduction": [[265, "oo-introduction"], [268, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[265, "context-managers-automatic-cleanup"], [268, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[265, "iteration-generators-comprehensions"], [268, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[265, "decorators-and-related-topics"], [268, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[265, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[266, "2023-03-13"]], "Comment vs Docstring": [[266, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[266, "Mutable?-Immutable?"]], "Lists": [[266, "Lists"], [266, "id2"], [280, "Lists"]], "Tuples": [[266, "Tuples"]], "DataType Conversiosn": [[266, "DataType-Conversiosn"]], "String, File IO Exercise": [[266, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[267, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[268, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[268, "day-1-basics"], [301, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[268, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[268, "day-3-domain-specifics"]], "NumPy": [[268, "numpy"], [297, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[270, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[270, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[270, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[270, "DataFrame.all()-(and-any())"]], "Column Selection": [[270, "Column-Selection"]], "Dropping Columns": [[270, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[270, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[270, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[270, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[270, "Conversion"]], "Usage: A Filter": [[270, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[270, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[270, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[271, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[271, "preferred-ubuntu-under-windows-wsl"], [273, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[271, "unsupported-environments"]], "Skeleton Project Setup": [[271, "skeleton-project-setup"], [273, "skeleton-project-setup"]], "Classes, Objects, Methods": [[271, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[271, "heavy-weight-oo-muscle"], [273, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[271, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[271, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[271, "a-little-concurrency"]], "Untold So Far": [[271, "untold-so-far"]], "C++ Standard Library": [[271, "c-standard-library"]], "Miscellaneous Topics": [[271, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[272, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[272, "clean-code"], [274, "clean-code"], [275, "clean-code"]], "Demo Hacking": [[272, "demo-hacking"]], "Python Development: Select Topics": [[272, "python-development-select-topics"]], "Built-In Types: Facts": [[272, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[272, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[272, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[272, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[272, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[272, "decorators-the-ominous"]], "Modules And Packages": [[272, "modules-and-packages"], [296, "modules-and-packages"]], "Design Patterns": [[272, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[273, "c-for-embedded-developers-2023-04-18-2023-04-20"], [348, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[273, "some-details"]], "Standard Template Library": [[273, "standard-template-library"], [623, "standard-template-library"]], "Warm-Up": [[273, "warm-up"]], "Sensor Exercise, Resolved": [[273, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[273, "oo-cont-d"]], "Smart Pointers (Continued)": [[273, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[273, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[273, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[274, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[274, "day-1-python-inside-out"], [275, "day-1-python-inside-out"]], "Exercise Prerequisites": [[274, "exercise-prerequisites"], [296, "exercise-prerequisites"]], "References And Other Pitfalls": [[274, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[274, "looping-constructs-with-an-emphasis-on-the-else-clause"], [296, "looping-constructs-with-an-emphasis-on-the-else-clause"], [300, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[274, "closures-decorators-and-more"], [275, "closures-decorators-and-more"], [296, "closures-decorators-and-more"], [300, "closures-decorators-and-more"]], "Dynamic Features": [[274, "dynamic-features"], [275, "dynamic-features"], [276, "Dynamic-Features"], [296, "dynamic-features"], [300, "dynamic-features"]], "Error Handling And Recovery": [[274, "error-handling-and-recovery"], [275, "error-handling-and-recovery"], [296, "error-handling-and-recovery"], [297, "error-handling-and-recovery"], [300, "error-handling-and-recovery"]], "Miscellaneous Threading": [[274, "miscellaneous-threading"], [275, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[274, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[274, "group-project-discussion"]], "Design Patterns Overview": [[274, "design-patterns-overview"], [275, "design-patterns-overview"]], "Day 3: Group Project": [[274, "day-3-group-project"], [275, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[275, "python-advanced-2023-04-24-2023-04-26"], [348, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[275, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[275, "morning-opening"]], "Object Oriented Programming (Continued)": [[275, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[275, "project-setup-ide-usage"]], "Continue Hacking": [[275, "continue-hacking"]], "Test Driven Development, pytest": [[275, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[276, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[276, "is-vs.\u00a0=="]], "Compound DataTypes": [[276, "Compound-DataTypes"]], "class": [[276, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[277, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[278, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[279, "python-basics-2023-05-15-2023-05-17"], [280, "Python-Basics-(2023-05-15---2023-05-17)"], [348, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[279, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[279, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[279, "modules-from-standard-library"], [1095, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[280, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[280, "The-range-Function"], [1034, "the-range-function"]], "Lambda, And Functional Programming Tools": [[280, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[282, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[283, "linux-basics-2023-05-23-2023-05-25"], [348, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[283, "introduction-concepts-and-terminology"], [831, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[283, "the-shell-bash-bourne-again-shell"], [283, "id1"], [877, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[283, "tools-inspecting-text-files"], [887, "tools-inspecting-text-files"]], "File System Permissions": [[283, "file-system-permissions"], [283, "id2"], [852, "file-system-permissions"]], "Morning Wakeup": [[283, "morning-wakeup"], [285, "morning-wakeup"], [311, "morning-wakeup"]], "I/O Redirection And Pipes": [[283, "i-o-redirection-and-pipes"], [838, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[283, "archiving-and-compression"], [820, "archiving-and-compression"], [822, "archiving-and-compression"]], "Networking": [[283, "networking"]], "Processes And Scheduling": [[283, "processes-and-scheduling"]], "SSH: Secure Shell": [[283, "ssh-secure-shell"], [909, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[283, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[284, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[285, "python-basics-2023-06-20-2023-06-22"], [286, "Python-Basics-(2023-06-20---2023-06-22)"], [348, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[285, "day2"]], "File I/O, And Encoding": [[285, "file-i-o-and-encoding"]], "Python Videos": [[285, "python-videos"]], "NumPy, Pandas, Matplotlib": [[285, "numpy-pandas-matplotlib"]], "DataTypes": [[286, "DataTypes"], [308, "DataTypes"]], "(Im)mutable?": [[286, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[286, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[286, "len(),-range(),-for"]], "Generators, yield": [[286, "Generators,-yield"]], "Other -ables: Callable": [[286, "Other--ables:-Callable"]], "exec() (and eval())": [[286, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[286, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[287, "python-basics-jupyter-notebook"], [309, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[288, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[288, "toolchain-introduction"], [304, "toolchain-introduction"], [1150, "toolchain-introduction"]], "Project Structure, Dependencies": [[288, "project-structure-dependencies"], [304, "project-structure-dependencies"], [1150, "project-structure-dependencies"]], "External Dependencies": [[288, "external-dependencies"], [304, "external-dependencies"], [443, "external-dependencies"], [1150, "external-dependencies"]], "Code Generators": [[288, "code-generators"], [304, "code-generators"], [1150, "code-generators"]], "Automatic Testing": [[288, "automatic-testing"], [304, "automatic-testing"], [1150, "automatic-testing"]], "Installation And Deployment": [[288, "installation-and-deployment"], [304, "installation-and-deployment"], [1150, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[289, "cmake-an-introduction-2023-07-18"], [348, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[290, "python-advanced-2023-09-25-2023-09-27"], [291, "Python-Advanced-(2023-09-25---2023-09-27)"], [348, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[290, "recap-of-python-basics-course-before-summer"], [293, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[290, "project-management-requirements-sandboxing-testing"], [293, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[290, "into-the-wild-group-project-kickoff"], [293, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[290, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [293, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[290, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[291, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[291, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[292, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [295, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[293, "python-advanced-2023-10-09-2023-10-11"], [348, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[293, "classes-basics"]], "Classes: More": [[293, "classes-more"]], "Spoiler: Group Project Outcome": [[293, "spoiler-group-project-outcome"]], "More About Functions": [[293, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[294, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[294, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[296, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[296, "day-1-basic-python"], [300, "day-1-basic-python"]], "Datatypes, Datatypes": [[296, "datatypes-datatypes"], [300, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[296, "day-2-advanced-python-features"]], "Multiprocessing": [[296, "multiprocessing"]], "Day 3: Into The Wild": [[296, "day-3-into-the-wild"]], "Data Science Topics": [[296, "data-science-topics"], [300, "data-science-topics"]], "Group Project: An Idea": [[296, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[297, "python-advanced-2023-10-24-2023-10-26"], [348, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[297, "python-basics-recap"], [298, "Python-Basics-Recap"]], "The Very Basics": [[297, "the-very-basics"]], "range(), And Iteration In General": [[297, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[297, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[297, "object-oriented-programming-continued"], [297, "id1"]], "Group Project, OO-ified": [[297, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[297, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[297, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[297, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[297, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[297, "compositesink"]], "MQTT Sink Implementation": [[297, "mqtt-sink-implementation"]], "Timestamps?": [[297, "timestamps"]], "Jupyter Notebook: Python Advanced": [[298, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[298, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[298, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[298, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[298, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[298, "assert"]], "Iteration, Generators, Iterator Protocol": [[298, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[298, "AAARGHHH"]], "Generator Expresssions": [[298, "Generator-Expresssions"]], "Dictionary Comprehension": [[298, "Dictionary-Comprehension"], [308, "Dictionary-Comprehension"], [991, "dictionary-comprehension"]], "Functional Tools": [[298, "Functional-Tools"]], "filter()": [[298, "filter()"], [308, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[299, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[300, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[300, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[300, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[300, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[300, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[300, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[301, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[301, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[301, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[302, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[302, "Assignment,-And-IDs"]], "(Im)Mutability": [[302, "(Im)Mutability"]], "Operator Overloading (Basics)": [[302, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[302, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[302, "Methods"], [567, "methods"], [714, "methods"], [715, "methods"], [716, "methods"], [1012, "methods"]], "numpy, pandas, matplotlib": [[302, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[303, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[304, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[305, "cmake-an-introduction-2023-11-27"], [348, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[306, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[307, "python-basics-2023-11-29-2023-12-01"], [308, "Python-Basics-(2023-11-29---2023-12-01)"], [348, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[307, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[307, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[307, "day-3-morning-awakening"]], "Dictionary (mutable)": [[308, "Dictionary-(mutable)"]], "Set (mutable)": [[308, "Set-(mutable)"]], "Boolean (immutable)": [[308, "Boolean-(immutable)"]], "split() and join()": [[308, "split()-and-join()"]], "Pythonicity (enumerate())": [[308, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[308, "pandas,-matplotlib"]], "Generator Expression": [[308, "Generator-Expression"]], "zip(), And Dictionaries": [[308, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[310, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[310, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[310, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[310, "functions-std-function-lambdas"], [311, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[310, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[310, "moving-usage"]], "Moving: Implementation": [[310, "moving-implementation"]], "Type Erasure": [[310, "type-erasure"]], "Allocators": [[310, "allocators"], [618, "allocators"], [735, "allocators"]], "C++ Pythonic Toolcase": [[310, "c-pythonic-toolcase"]], "Outlook In >=20": [[310, "outlook-in-20"]], "Attributes And The Like": [[310, "attributes-and-the-like"]], "<algorithm> Overview": [[310, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[310, "miscellaneous-miscellaneous"]], "C++ For Embedded Developers (Beginning of 2023)": [[312, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[313, "python-sap"]], "Agenda: Python Basics (Beginning Of 2024)": [[314, "agenda-python-basics-beginning-of-2024"]], "Numerics: Pandas, NumPy": [[314, "numerics-pandas-numpy"]], "Screenplay Checker": [[315, "screenplay-checker"]], "GPIO: Blinklicht": [[316, "gpio-blinklicht"]], "Commandline": [[316, "commandline"], [321, "commandline"], [857, "commandline"]], "sysfs GPIO": [[316, "sysfs-gpio"]], "Electronic Aspect": [[316, "electronic-aspect"]], "External Circuitry": [[316, "external-circuitry"]], "Raspberry Header Pinout": [[316, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[317, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[318, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[319, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[320, "ece19-exercises-and-custom-topics"]], "Reading a File": [[321, "reading-a-file"], [919, "reading-a-file"]], "Output": [[321, "output"]], "2021-05-20 (G2)": [[322, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[322, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[322, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[322, "Reading-File-Line-by-Line"]], "Iterating a File": [[322, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[322, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[322, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[322, "str.split()"]], "2021-05-21": [[323, "2021-05-21"], [330, "id11"]], "Modules and Packages": [[323, "Modules-and-Packages"], [1002, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[324, "Strings-vs.\u00a0Bytes"]], "Batteries": [[325, "Batteries"]], "Key Value Map": [[325, "Key-Value-Map"]], "Comments vs Documentation": [[325, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[325, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[325, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[325, "Arithmetic-Operators"], [374, "arithmetic-operators"], [1014, "arithmetic-operators"]], "Wertebereich von Integers": [[325, "Wertebereich-von-Integers"]], "An Example": [[326, "An-Example"], [1037, "an-example"]], "Sidenote: Pure Beauty": [[326, "Sidenote:-Pure-Beauty"], [1037, "sidenote-pure-beauty"]], "Parameters and Types": [[326, "Parameters-and-Types"], [1037, "parameters-and-types"]], "Pitfalls": [[326, "Pitfalls"]], "Cloud Computer, SSH Login": [[327, "cloud-computer-ssh-login"]], "Machine, Logins": [[327, "machine-logins"]], "Login via Secure Shell (SSH)": [[327, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[328, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[329, "embedded-computing-1-ece-19"]], "Daily Log": [[330, "daily-log"]], "2021-03-04": [[330, "id1"]], "2021-03-05": [[330, "id2"]], "Cheat Sheets": [[330, null]], "2021-03-18": [[330, "id3"]], "2021-03-26": [[330, "id4"]], "2021-04-15": [[330, "id5"]], "2021-04-21": [[330, "id6"]], "Git Intro": [[330, "git-intro"]], "Download and Installation": [[330, null], [335, null]], "2021-04-29": [[330, "id7"]], "2021-05-10": [[330, "id8"]], "Org Stuff": [[330, "org-stuff"]], "Python: Functions": [[330, "python-functions"]], "2021-05-12": [[330, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[330, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[330, "id10"]], "Reiterating on Exercise": [[330, "reiterating-on-exercise"]], "import argparse": [[330, "import-argparse"]], "Exercise digit (Once More)": [[330, "exercise-digit-once-more"]], "2021-06-01": [[330, "id12"]], "sysfs GPIO: Blinking an LED": [[330, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[330, "id13"]], "Embedded Computing 1 (Deutsch)": [[331, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[331, "lehrinhalte"]], "Lernergebnisse der LV": [[331, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[331, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[331, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[331, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[331, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[332, "embedded-computing-1-english"]], "Course Content": [[332, "course-content"]], "Learning Outcome": [[332, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[332, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[332, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[332, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[332, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[333, "plan-for-summer-2021"]], "Linux Introduction": [[333, "linux-introduction"]], "Slides": [[333, null], [333, null], [333, null]], "C/C++ Development": [[333, "c-c-development"]], "Python Development": [[333, "python-development"]], "2021-10-07": [[334, "id1"]], "Whose Fault It Is": [[334, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[335, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[335, "linux-unix"]], "Git": [[335, "git"]], "2021-10-28": [[336, "id1"]], "Group Project": [[336, "group-project"]], "Discussion of Tasks": [[336, "discussion-of-tasks"]], "TODOs": [[336, "todos"]], "2021-11-15": [[337, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[337, "systems-programming-files-directories-links"]], "2021-11-29": [[338, "id1"]], "jjjj": [[338, "jjjj"]], "2021-12-1{4,5}": [[339, "id1"]], "Future Topics": [[339, "future-topics"]], "Threading": [[339, "threading"]], "C++ Sideways": [[339, "c-sideways"]], "2022-01-10": [[340, "id1"]], "Scheduling": [[340, "scheduling"], [953, "scheduling"], [954, "scheduling"]], "2022-01-12": [[341, "id1"]], "Scheduling and Realtime": [[341, "scheduling-and-realtime"], [345, "scheduling-and-realtime"]], "2022-02-15": [[342, "id1"]], "Agenda/Log": [[343, "agenda-log"], [344, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[344, "embedded-computing-2-ece-19"]], "Project Repository": [[344, "project-repository"]], "Test Material": [[344, "test-material"]], "Exam Material Overview": [[345, "exam-material-overview"]], "Questions": [[345, "questions"], [345, "id1"], [637, "questions"], [830, "questions"], [844, "questions"], [845, "questions"], [870, "questions"], [977, "questions"]], "Slide Material": [[345, "slide-material"], [345, "id2"]], "Embedded Computing 1+2, ECE 19": [[346, "embedded-computing-1-2-ece-19"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[348, "c-advanced-topics-2023-12-04-2023-12-06"], [311, "c-advanced-topics-2023-12-04-2023-12-06"]], "Bisher Gehaltene": [[348, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[348, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[348, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[348, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[348, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[348, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[348, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[348, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[348, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[348, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[348, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[348, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[348, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[348, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[348, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[348, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[348, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[348, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[348, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[348, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[348, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[348, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[348, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[348, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[348, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[348, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[348, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[348, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[348, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[348, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[348, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[348, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[348, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[348, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[348, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[348, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[348, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[348, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[348, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[348, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[348, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[348, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[348, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[348, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[348, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[348, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[348, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[348, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[348, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[348, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[348, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[348, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[348, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[348, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[348, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[348, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[348, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[348, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[348, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[348, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[348, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[348, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[348, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[348, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[348, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[348, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[348, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[348, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[348, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[348, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[348, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[348, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[348, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[348, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[348, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[348, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[348, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[348, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[348, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[348, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[348, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[348, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[348, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[349, "training-material-overview-and-download"]], "On Windows": [[350, "on-windows"]], "On Linux": [[350, "on-linux"]], "The Book (1)": [[351, "the-book-1"]], "The Book (2)": [[351, "the-book-2"]], "The Beginning": [[351, "the-beginning"]], "Cool Guys and Their Hobby": [[351, "cool-guys-and-their-hobby"]], "History of UNIX": [[351, "history-of-unix"]], "My First Program (1)": [[352, "my-first-program-1"]], "My First Program (2)": [[352, "my-first-program-2"]], "Character Arrays - Strings": [[352, "character-arrays-strings"]], "Variables and Arithmetic": [[353, "variables-and-arithmetic"]], "My Second Program (1)": [[353, "my-second-program-1"]], "My Second Program (2)": [[353, "my-second-program-2"]], "My Second Program (3)": [[353, "my-second-program-3"]], "My Second Program (4)": [[353, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[354, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[355, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[355, "for-loop-simplification-2"]], "Second Program, revisited": [[355, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[356, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[357, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[357, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[358, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[359, "character-i-o"]], "The Outside World": [[359, "the-outside-world"]], "cat for the Poor (1)": [[359, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[359, "cat-for-the-poor-2"]], "More Examples \u2026": [[359, "more-examples"]], "More Examples - if": [[359, "more-examples-if"]], "if, Formally": [[359, "if-formally"]], "Operators, Formally": [[359, "operators-formally"]], "Exercise: wc For The Poor": [[360, "exercise-wc-for-the-poor"]], "Arrays": [[361, "arrays"]], "Array Definition, Explicit Initialization": [[361, "array-definition-explicit-initialization"]], "Array Access": [[361, "array-access"]], "Discussion: Initialization": [[361, "discussion-initialization"]], "Discussion: if, else": [[361, "discussion-if-else"]], "Array Initializer": [[361, "array-initializer"]], "Discussion: Initializer": [[361, "discussion-initializer"]], "Initialization using memset()": [[361, "initialization-using-memset"]], "Discussion: memset()": [[361, "discussion-memset"]], "Exercise: Character Histogram": [[362, "exercise-character-histogram"]], "A Nonsensical Example": [[363, "a-nonsensical-example"]], "Function Signature": [[363, "function-signature"]], "Discussion": [[363, "discussion"]], "Definition vs. Declaration (1)": [[363, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[363, "definition-vs-declaration-2"]], "By Value / By Reference": [[363, "by-value-by-reference"]], "Exercise: Forward Declaration": [[364, "exercise-forward-declaration"]], "Character Arrays": [[365, "character-arrays"]], "Strings: Mistake by Design?": [[365, "strings-mistake-by-design"]], "Strings: Definition": [[365, "strings-definition"]], "Strings: Library Functions": [[365, "strings-library-functions"]], "Strings as Parameters": [[365, "strings-as-parameters"]], "Strings: Dangers": [[365, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[366, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[367, "lifetime-of-variables"]], "Lifetime": [[367, "lifetime"]], "Global Variables": [[367, "global-variables"], [541, "global-variables"]], "Global Variables: How?": [[367, "global-variables-how"]], "Type System": [[369, "type-system"]], "Variable Names": [[370, "variable-names"]], "Variable- and Function Names": [[370, "variable-and-function-names"]], "Data Types, Sizes": [[371, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[371, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[371, "integer-variants-qualifiers"]], "Widths": [[371, "widths"]], "Constants": [[372, "constants"]], "Constants and Types": [[372, "constants-and-types"]], "Character Constants: Escape Sequences": [[372, "character-constants-escape-sequences"]], "String Constants": [[372, "string-constants"]], "Character vs. String Constants": [[372, "character-vs-string-constants"]], "Symbolic Constants (1)": [[372, "symbolic-constants-1"]], "Symbolic Constants (2)": [[372, "symbolic-constants-2"]], "Variable Definitions": [[373, "variable-definitions"]], "Definitions und Initialization": [[373, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[373, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[373, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[374, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[374, "arithmetic-operators-2"]], "Relational and Logical Operators": [[375, "relational-and-logical-operators"]], "Relational Operators (1)": [[375, "relational-operators-1"]], "Relational Operators (2)": [[375, "relational-operators-2"]], "Logical (Boolean) Operators": [[375, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[375, "boolean-operators-short-circuit"]], "Type Conversions": [[376, "type-conversions"]], "Implicit Type Conversions": [[376, "implicit-type-conversions"]], "Sign Bugs": [[376, "sign-bugs"]], "Truncation": [[376, "truncation"]], "Sign Propagation": [[376, "sign-propagation"]], "Conversion Using Operators": [[376, "conversion-using-operators"]], "Conversion and unsigned (1)": [[376, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[376, "conversion-and-unsigned-2"]], "Compiler Warnings": [[376, "compiler-warnings"]], "Last Warning": [[376, "last-warning"], [947, "last-warning"]], "Forced Conversion - Cast": [[376, "forced-conversion-cast"]], "Increment, Decrement": [[377, "increment-decrement"]], "Confusion: ++, --": [[377, "confusion"]], "Confused to perfection (1)": [[377, "confused-to-perfection-1"]], "Confused to perfection (2)": [[377, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[378, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[379, "bit-operators"]], "Bit Manipulation": [[379, "bit-manipulation"]], "Bitwise AND and OR": [[379, "bitwise-and-and-or"]], "Bitwise XOR": [[379, "bitwise-xor"]], "Shift Left": [[379, "shift-left"]], "Shift Right": [[379, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[379, "inverting-one-s-complement"]], "Assignment with Calculation": [[380, "assignment-with-calculation"]], "Combined Operators": [[380, "combined-operators"]], "?: - Conditional Expression": [[381, "conditional-expression"]], "?: - Conditional Expression (1)": [[381, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[381, "conditional-expression-2"]], "Precedence, Associativity": [[382, "precedence-associativity"]], "Summary: Operators": [[382, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[382, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[382, "operators-precedence-und-associativity-2"]], "More Warnings": [[382, "more-warnings"]], "Statements and Blocks": [[384, "statements-and-blocks"]], "Statement vs. Block": [[384, "statement-vs-block"]], "if - else": [[385, "if-else"]], "Branches": [[385, "branches"]], "True or False? What is Truth?": [[385, "true-or-false-what-is-truth"]], "else is optional (1)": [[385, "else-is-optional-1"]], "else is optional (2)": [[385, "else-is-optional-2"]], "else - if": [[386, "else-if"]], "Style Matters": [[386, "style-matters"]], "switch": [[387, "switch"], [387, "id1"]], "Case Distinctions": [[387, "case-distinctions"]], "if - else if vs. switch": [[387, "if-else-if-vs-switch"]], "Loops: while and for": [[388, "loops-while-and-for"]], "while: general purpose loop": [[388, "while-general-purpose-loop"]], "From while to for (1)": [[388, "from-while-to-for-1"]], "From while to for (2)": [[388, "from-while-to-for-2"]], "for, a Little Closer": [[388, "for-a-little-closer"]], "Comma Operator": [[388, "comma-operator"]], "for: Infamous Idioms": [[388, "for-infamous-idioms"]], "Loops: do - while": [[389, "loops-do-while"]], "do - while: Condition After Body": [[389, "do-while-condition-after-body"]], "goto and Labels": [[391, "goto-and-labels"]], "Structured Programming vs. goto": [[391, "structured-programming-vs-goto"]], "goto: Definition": [[391, "goto-definition"]], "goto: Use Cases": [[391, "goto-use-cases"]], "Nesting": [[393, "nesting"]], "Declaration vs. Definition": [[393, "declaration-vs-definition"]], "A Monolithic Program": [[393, "a-monolithic-program"]], "Separate Compilation": [[393, "separate-compilation"]], "Extern/Global Variables": [[394, "extern-global-variables"]], "Variables: Declaration and Definition": [[394, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[394, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[394, "variables-separating-declaration-from-definition-2"]], "Header Files": [[395, "header-files"]], "Declarations: Problems (1)": [[395, "declarations-problems-1"]], "Declarations: Problems (2)": [[395, "declarations-problems-2"]], "Declarations: Solutions": [[395, "declarations-solutions"]], "Static Variables": [[396, "static-variables"]], "Lifetime and Visibility (1)": [[396, "lifetime-and-visibility-1"]], "Automatic Variables": [[396, "automatic-variables"]], "Local static Variable": [[396, "local-static-variable"]], "Global static Variable": [[396, "global-static-variable"]], "Global Variable": [[396, "global-variable"], [1036, "global-variable"]], "C Preprocessor: Basics": [[397, "c-preprocessor-basics"]], "#include": [[397, "include"]], "Macros: Text Replacement": [[397, "macros-text-replacement"]], "Macros: Constant Definition": [[397, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[397, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[397, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[397, "include-guards-1"]], "Include Guards (2)": [[397, "include-guards-2"]], "The C Preprocessor: Last Words": [[397, "the-c-preprocessor-last-words"], [398, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[398, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[398, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[398, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[398, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[398, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[398, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[398, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[398, "stringification-1"]], "Stringification (2)": [[398, "stringification-2"]], "Token Pasting (1)": [[398, "token-pasting-1"]], "Token Pasting (2)": [[398, "token-pasting-2"]], "Warnings and Errors": [[398, "warnings-and-errors"]], "Predefined Macros (1)": [[398, "predefined-macros-1"]], "Pointers and Addresses": [[400, "pointers-and-addresses"]], "Pointers: Basics": [[400, "pointers-basics"]], "Pointer: Operators": [[400, "pointer-operators"]], "More Examples": [[400, "more-examples"]], "Pointers as Function Parameters": [[401, "pointers-as-function-parameters"]], "Call by Reference (1)": [[401, "call-by-reference-1"]], "Call by Reference (2)": [[401, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[402, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[403, "pointers-and-arrays"], [405, "pointers-and-arrays"]], "It\u2019s Only Memory": [[403, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[403, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[403, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[403, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[403, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[403, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[403, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[403, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[403, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[403, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[404, null], [828, null], [833, null], [833, null], [834, null], [834, null], [834, null], [839, null], [840, null], [923, null], [950, null], [953, null], [957, null], [959, null], [1038, null]], "main() Can Take Parameters": [[404, "main-can-take-parameters"]], "struct: Basics": [[406, "struct-basics"]], "struct: Compound Datatypes": [[406, "struct-compound-datatypes"]], "struct: How?": [[406, "struct-how"]], "Usage": [[406, "usage"], [596, "usage"], [603, "usage"]], "Nested Structures": [[406, "nested-structures"]], "Memory Layout": [[406, "memory-layout"]], "Recursive Structures?": [[406, "recursive-structures"]], "struct: Functions": [[407, "struct-functions"]], "Parameters and Return (1)": [[407, "parameters-and-return-1"]], "Parameters and Return (2)": [[407, "parameters-and-return-2"]], "Parameters and Return (3)": [[407, "parameters-and-return-3"]], "typedef: Type Alias": [[408, "typedef-type-alias"]], "Alias for Type Names": [[408, "alias-for-type-names"]], "Dynamic Memory": [[410, "dynamic-memory"], [410, "id1"]], "Stack and Global Memory": [[410, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[410, "dynamic-memory-usage"]], "Singly Linked List": [[411, "singly-linked-list"]], "Exercises (1)": [[411, "exercises-1"]], "Exercises (2)": [[411, "exercises-2"]], "Exercises (3)": [[411, "exercises-3"]], "Exercises (4)": [[411, "exercises-4"]], "Exercises (5)": [[411, "exercises-5"]], "Exercises (6)": [[411, "exercises-6"]], "Exercises (7)": [[411, "exercises-7"]], "Exercises (8)": [[411, "exercises-8"]], "Exercises (9)": [[411, "exercises-9"]], "Exercises (10)": [[411, "exercises-10"]], "Exercises (11)": [[411, "exercises-11"]], "Volatile": [[413, "volatile"]], "volatile: The Lie (1)": [[413, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[413, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[413, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[413, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[414, "compiler-intrinsics"]], "Atomic Memory Access": [[414, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[414, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[414, "load-modify-store-mutex"]], "Atomic Instructions": [[414, "atomic-instructions"], [942, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[414, "more-gcc-builtins"]], "Alignment": [[415, "alignment"]], "Data Alignment": [[415, "data-alignment"]], "Data Alignment, Compilers": [[415, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[415, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[415, "unaligned-data-access-2"]], "Padding (1)": [[415, "padding-1"]], "Padding (2)": [[415, "padding-2"]], "Padding (3)": [[415, "padding-3"]], "Padding (4)": [[415, "padding-4"]], "Structure Alignment (1)": [[415, "structure-alignment-1"]], "Structure Alignment (2)": [[415, "structure-alignment-2"]], "And Arrays? (1)": [[415, "and-arrays-1"]], "And Arrays? (2)": [[415, "and-arrays-2"]], "And Arrays? (3)": [[415, "and-arrays-3"]], "Sanity and Readabilty": [[417, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[417, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[417, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[417, "shooting-offenses"]], "Ambiguity": [[417, "ambiguity"]], "Readability": [[417, "readability"]], "Code Smells": [[417, "code-smells"]], "Know Your Integers": [[418, "know-your-integers"]], "Standard Data Types: size_t (1)": [[418, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[418, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[419, "discrete-values-enum"], [419, "id1"]], "Discrete Values": [[419, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[419, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[419, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[419, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[419, "discrete-values-enum-and-switch"], [419, "id2"]], "Discrete Values - Close to Perfection": [[419, "discrete-values-close-to-perfection"]], "Visibility - static": [[420, "visibility-static"]], "Visibility": [[420, "visibility"]], "A Somewhat Contrived Example (1)": [[420, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[420, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[420, "the-static-keyword-hooray"]], "Correctness - const": [[421, "correctness-const"]], "Non-Modifiable Memory (1)": [[421, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[421, "non-modifiable-memory-2"]], "The const Keyword (1)": [[421, "the-const-keyword-1"]], "The const Keyword (2)": [[421, "the-const-keyword-2"]], "const Variables": [[421, "const-variables"]], "const Parameters (1)": [[421, "const-parameters-1"]], "const Parameters (2)": [[421, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[421, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[421, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[421, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[421, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[421, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[421, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[421, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[421, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[421, "pointers-pointers-pointers-9"]], "Struct Initialization": [[422, "struct-initialization"]], "Good Old Struct Initialization": [[422, "good-old-struct-initialization"]], "C99 Designated Initializer": [[422, "c99-designated-initializer"]], "Explict Type Safety": [[423, "explict-type-safety"]], "Integer Types Are Ambiguous": [[423, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[423, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[423, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[423, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[423, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[423, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[423, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[423, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[423, "wrap-up-artificial-type-safety"]], "valgrind": [[424, "valgrind"]], "Valgrind": [[424, "id1"]], "Valgrind in Action (1)": [[424, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[424, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[424, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[424, "valgrind-more"]], "Optimization": [[426, "optimization"]], "Optimization - Introduction": [[426, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[426, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[426, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[426, "compute-bound-or-io-bound-3"]], "What to do Next?": [[426, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[427, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[427, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[427, "unnecessary-optimizations"]], "Inlining (1)": [[427, "inlining-1"]], "Inlining (2)": [[427, "inlining-2"]], "Inlining (3)": [[427, "inlining-3"]], "Register Allocation (1)": [[427, "register-allocation-1"]], "Register Allocation (2)": [[427, "register-allocation-2"]], "Peephole Optimization": [[427, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[427, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[427, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[427, "peephole-optimization-constant-folding"]], "Loop Invariants": [[427, "loop-invariants"]], "Loop Unrolling": [[427, "loop-unrolling"]], "Tail Call Optimization": [[427, "tail-call-optimization"]], "CPU Optimization, Last Words": [[427, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[427, "gcc-optimization-levels"]], "Further Reading": [[427, "further-reading"]], "Optimizations: Memory Optimizations": [[428, "optimizations-memory-optimizations"]], "Memory: Caches": [[428, "memory-caches"]], "Locality of reference": [[428, "locality-of-reference"]], "Multidimensional Arrays": [[428, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[428, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[428, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[430, "profiling-famous-words"]], "Donald E. Knuth": [[430, null]], "Tony Hoare": [[430, null]], "Larry Wall": [[430, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[430, null]], "Profiling - Introduction": [[430, "profiling-introduction"]], "GNU Profiler - gprof": [[431, "gnu-profiler-gprof"]], "gprof - How it Works": [[431, "gprof-how-it-works"]], "Using gprof": [[431, "using-gprof"]], "gprof: Flat Profile": [[431, "gprof-flat-profile"]], "gprof: Call Graph": [[431, "gprof-call-graph"]], "gprof: Interpreting The Results": [[431, "gprof-interpreting-the-results"]], "gprof: Visualization": [[431, "gprof-visualization"]], "callgrind": [[432, "callgrind"]], "callgrind - How it Works": [[432, "callgrind-how-it-works"]], "callgrind - How it is Used": [[432, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[432, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[432, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[432, "callgrind-useful-options"]], "oprofile": [[433, "oprofile"]], "oprofile - How it Works": [[433, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[433, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[433, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[433, "oprofile-too-much-information"]], "oprofile - Call Graph": [[433, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[433, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[433, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[433, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[433, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[433, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[433, "oprofile-graphical-beauty"]], "The C Programming Language": [[435, "the-c-programming-language"]], "Group Description": [[435, "group-description"], [563, "group-description"], [653, "group-description"], [695, "group-description"], [696, "group-description"], [743, "group-description"], [747, "group-description"], [749, "group-description"], [891, "group-description"], [899, "group-description"], [900, "group-description"], [368, "group-description"], [383, "group-description"], [392, "group-description"], [399, "group-description"], [405, "group-description"], [409, "group-description"], [412, "group-description"], [416, "group-description"], [425, "group-description"], [429, "group-description"], [434, "group-description"], [555, "group-description"], [578, "group-description"], [581, "group-description"], [584, "group-description"], [625, "group-description"], [634, "group-description"], [720, "group-description"], [728, "group-description"], [732, "group-description"], [954, "group-description"]], "Messages From The Book": [[436, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[437, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[437, "rules-why-rules"]], "Coding Style": [[437, "coding-style"]], "Disclaimer": [[437, null]], "Design Principles: SOLID": [[437, "design-principles-solid"]], "Another One: YAGNI": [[437, "another-one-yagni"]], "Architecture": [[437, "architecture"]], "Project Management: Traditional": [[437, "project-management-traditional"]], "Project Management: Software": [[437, "project-management-software"]], "So What?": [[437, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[438, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[438, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[439, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[439, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[439, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[439, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[439, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[439, "where-are-we-questions"]], "Testability: Input Cleaning": [[439, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[439, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[439, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[439, "testability-reading-input-from-directory"]], "Testability: Categorization": [[439, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[439, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[439, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[440, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[440, "single-monolithic-executable"]], "Building With CMake": [[440, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[440, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[440, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[440, "problem-duplicate-compilation"]], "Problem: More Functionality": [[440, "problem-more-functionality"]], "Solution: Libraries": [[440, "solution-libraries"], [989, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[441, "configured-header-files"]], "Problem": [[441, "problem"], [449, "problem"], [455, "problem"], [456, "problem"], [457, "problem"], [460, "problem"], [466, "problem"], [514, "problem"], [787, "problem"], [918, "problem"]], "Configured Files": [[441, "configured-files"]], "Use In Compiled Code": [[441, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[442, "c-debug-release-cmake-programming-rants"]], "Pause": [[442, "pause"]], "Class Diagram": [[442, "class-diagram"]], "C++ Standard Version": [[442, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[442, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[442, "compiler-type"]], "Strings And Lists": [[442, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[442, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[442, "message-popular-modes"]], "FIND_PACKAGE()": [[443, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[443, "find-package-required"]], "SQLite3 Parameters": [[443, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[443, "using-sqlite3-parameters"]], "Demo Time": [[443, "demo-time"]], "CMake: An Introduction": [[444, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[445, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[445, "prefix-where-everything-comes-together"]], "Installing Targets": [[445, "installing-targets"]], "Doing The Installation (make install)": [[445, "doing-the-installation-make-install"]], "And Shared Libraries?": [[445, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[445, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[445, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[446, "libraries-and-dependencies"]], "Libraries And Executables": [[446, "libraries-and-executables"]], "Targets And Dependencies": [[446, "targets-and-dependencies"]], "Visualizing Dependencies": [[446, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[447, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[447, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[447, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[447, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[447, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[447, "good-or-bad"], [448, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[448, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[448, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[448, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[448, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[449, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[449, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[449, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[449, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[450, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[450, "normal-libraries"]], "Building Shared Libraries": [[450, "building-shared-libraries"]], "More About Loading": [[450, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[451, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[451, "reorganization"]], "Dependencies, And Target Properties": [[451, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[452, "targets-properties-and-more"]], "Target Types": [[452, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[452, "properties-private-public-interface"]], "Running Tests": [[453, "running-tests"], [1128, "running-tests"]], "Setup And Usage": [[453, "setup-and-usage"]], "Add Simple Test": [[453, "add-simple-test"]], "Checking Test Output": [[453, "checking-test-output"]], "Questionability": [[453, "questionability"]], "C++ Code": [[454, "c-code"]], "Abstract Factory": [[455, "abstract-factory"]], "I2C Sensor Subhierarchy": [[455, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[455, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[455, "solution-factory-objects"]], "Notes": [[455, "notes"]], "Adapter": [[456, "adapter"]], "Solution: Adaptation": [[456, "solution-adaptation"]], "Basic Adaptation": [[456, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[456, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[456, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[456, "adapter-is-doing-real-measurements"]], "Command": [[457, "command"]], "Motivation": [[457, "motivation"], [460, "motivation"], [476, "motivation"], [477, "motivation"], [573, "motivation"], [670, "motivation"], [672, "motivation"], [697, "motivation"], [703, "motivation"], [1009, "motivation"], [1015, "motivation"]], "Step 1: Basic insert()": [[457, "step-1-basic-insert"]], "Step 2: Basic find()": [[457, "step-2-basic-find"]], "Step 3: drop()": [[457, "step-3-drop"]], "Step 4: Handle find() Errors": [[457, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[457, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[457, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[457, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[458, "socialdb-source-code"]], "Composite": [[459, "composite"]], "Unix Filesystem": [[459, "unix-filesystem"]], "Boolean Expressions": [[459, "boolean-expressions"]], "Thermometers, And Average Calculation": [[459, "thermometers-and-average-calculation"]], "Decorator": [[460, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[460, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[460, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[460, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[460, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[460, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[460, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[460, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[460, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[461, "design-patterns-with-c"]], "Topics/Exercises": [[461, "topics-exercises"]], "Solutions": [[461, "solutions"], [475, "solutions"], [489, "solutions"]], "To Be Done": [[461, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[462, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[462, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[462, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[462, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[462, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[462, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[462, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[462, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[462, "stop-here-need-help"]], "Tests": [[462, "tests"], [482, "tests"]], "Interpreter": [[463, "interpreter"]], "Observer": [[464, "observer"]], "OO Design Principles": [[465, "oo-design-principles"]], "Principles: Why? Which?": [[465, "principles-why-which"]], "Single Responsibility": [[465, "single-responsibility"]], "Open/Closed": [[465, "open-closed"]], "Liskov Substitution": [[465, "liskov-substitution"]], "Interface Segregation": [[465, "interface-segregation"]], "Dependency Inversion": [[465, "dependency-inversion"]], "Proxy": [[466, "proxy"]], "Solution: Proxy": [[466, "solution-proxy"]], "Local Variant": [[466, "local-variant"]], "Remote Variant": [[466, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[467, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[467, "hypothetical"]], "Class Hierarchy": [[467, "class-hierarchy"]], "Singleton": [[468, "singleton"]], "And class Person?": [[468, "and-class-person"]], "UML Short Introduction": [[469, "uml-short-introduction"]], "Interface": [[469, "interface"]], "Interface Implementation, Inheritance": [[469, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[469, "connectors-association-aggregation-composition"]], "Association": [[469, "association"]], "Aggregation": [[469, "aggregation"]], "Composition": [[469, "composition"]], "Exercise: Abstract Factory": [[470, "exercise-abstract-factory"]], "Exercise: Adapter": [[471, "exercise-adapter"], [478, "exercise-adapter"]], "Exercise: Command": [[472, "exercise-command"]], "Exercise: Composite": [[473, "exercise-composite"]], "Exercise: Decorator": [[474, "exercise-decorator"]], "Exercises: Design Patterns": [[475, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[476, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[477, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[477, "expression-interface"]], "Arithmetic (Binary) Expressions": [[477, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[477, "check-combined-arithmetic-expressions"]], "And Variables?": [[477, "and-variables"]], "No Uninitialized Variables!!": [[477, "no-uninitialized-variables"]], "Assigning To Variables": [[477, "assigning-to-variables"]], "Using Variables As Expressions": [[477, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[479, "exercise-proxy-remote-thermometer"]], "Network Communication": [[479, "network-communication"]], "Implementation Hints": [[479, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[480, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[481, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[482, "exercise-singleton-flexible-and-strict"]], "Complications": [[482, "complications"]], "Exercise: Singleton (Inflexible)": [[483, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[484, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[484, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[484, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[484, "i2csensorfactory-vendor1"], [484, "id1"]], "Solution: Adapter": [[485, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[485, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[486, "solution-command"]], "Command Classes": [[486, "command-classes"]], "Solution: Composite": [[487, "solution-composite"]], "Averaging (Composite) Sensor": [[487, "averaging-composite-sensor"]], "Solution: Decorator": [[488, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[488, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[488, "decorated-constant-sensor"]], "Decorated Random Sensor": [[488, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[490, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[491, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[492, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[493, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[493, "client-proxy-thermometer"]], "Remote Stub": [[493, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[494, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[494, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[495, "solution-singleton-flexible"]], "Main Program": [[495, "main-program"], [496, "main-program"], [497, "main-program"], [734, "main-program"], [736, "main-program"], [738, "main-program"], [740, "main-program"]], "SocialInsurance Interface": [[495, "socialinsurance-interface"], [496, "socialinsurance-interface"]], "Two Concrete Implementations": [[495, "two-concrete-implementations"], [496, "two-concrete-implementations"]], "OEGK": [[495, "oegk"], [496, "oegk"]], "SVS": [[495, "svs"], [496, "svs"]], "Solution: Singleton (Flexible And Strict)": [[496, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[497, "solution-singleton-inflexible"]], "Singleton Implementation": [[497, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[498, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[498, "github-project"]], "CMake Build": [[498, "cmake-build"], [931, "cmake-build"]], "Dependencies/Usage Relationships": [[498, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[498, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[498, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[498, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[498, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[499, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[500, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[501, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[501, "new-sensor-class-randomsensor"]], "Implementation Details": [[501, "implementation-details"]], "New Program: random-temperature.cpp": [[501, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[502, "fh-sensor-oo-first-try"]], "C++ Exercises": [[503, "c-exercises"]], "Exercise Projects": [[503, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[504, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[504, "topics-covered"], [505, "topics-covered"], [506, "topics-covered"], [507, "topics-covered"], [508, "topics-covered"], [509, "topics-covered"], [510, "topics-covered"], [513, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[505, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[506, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[507, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[508, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[509, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[509, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[509, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[510, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[511, "oo-basics-interfaces-shapes"]], "Exercise Table": [[511, "exercise-table"]], "Setup, Exam Procedure": [[511, "setup-exam-procedure"]], "Point": [[511, "point"]], "Point: Constructor and Getter Methods": [[511, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[511, "point-default-constructor"]], "Point: Static Method: equal()": [[511, "point-static-method-equal"]], "Point: operator==()": [[511, "point-operator"]], "Point: Method: move()": [[511, "point-method-move"]], "Point: operator+=()": [[511, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[511, "point-static-method-add"]], "Point: operator+()": [[511, "point-suite-operator-plus"]], "Circle": [[511, "circle"]], "Circle: Constructor": [[511, "circle-constructor"]], "Circle: operator==()": [[511, "circle-operator"]], "Circle: Method: area()": [[511, "circle-method-area"]], "Square": [[511, "square"]], "Square: Constructor": [[511, "square-constructor"]], "Square: operator==()": [[511, "square-operator"]], "Square: Method: area()": [[511, "square-method-area"]], "Interface: Shape": [[511, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[511, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[511, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[512, "working-on-exercise-projects"]], "Clone Github Repository": [[512, "clone-github-repository"]], "Massage googletest Sub-Module": [[512, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[512, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[512, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[512, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[513, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[513, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[513, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[514, "exercise-onewire-sensor-factory"]], "Fixture": [[514, "fixture"], [748, "fixture"]], "basic": [[514, "basic"]], "notfound": [[514, "notfound"]], "find_is_const": [[514, "find-is-const"]], "Testing In Isolation": [[514, "testing-in-isolation"]], "Testing In Reality": [[514, "testing-in-reality"]], "On The PC": [[514, "on-the-pc"]], "On The Target": [[514, "on-the-target"]], "Exercise: OneWire Sensor Class": [[515, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[515, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[515, "test-monolithic-implementation"]], "class W1Sensor": [[515, "class-w1sensor"]], "Exercise: Algorithms": [[516, "exercise-algorithms"]], "Copy Into std::vector": [[516, "copy-into-std-vector"]], "Find Element In std::vector": [[516, "find-element-in-std-vector"]], "Sort In-Place": [[516, "sort-in-place"]], "Sort Into A Copy": [[516, "sort-into-a-copy"]], "Exercise: Generic Filter": [[517, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[518, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[519, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[520, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[521, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[522, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[523, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[524, "insert-sunny-case"]], "Lookup - Not Found": [[525, "lookup-not-found"]], "Lookup - Sunny Case": [[526, "lookup-sunny-case"]], "Memory Leaks?": [[527, "memory-leaks"]], "Remove - Not Found": [[528, "remove-not-found"]], "Remove - Sunny Case": [[529, "remove-sunny-case"]], ".size() Is const": [[530, "size-is-const"]], "Exercise: Uniquify A Sequence": [[531, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[532, "exercise-std-vector"]], "C++: TODO List": [[533, "c-todo-list"]], "Structural": [[533, "structural"]], "STL, Containers and Algorithms": [[533, "stl-containers-and-algorithms"]], "Templates/Overloading": [[533, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[533, "functors-overloading-the-function-call-operator"]], "Threads": [[533, "threads"]], "C++ >= 11": [[533, "c-11"]], "UserDB Exercise": [[533, "userdb-exercise"]], "Complete Transcription of C++11": [[533, "complete-transcription-of-c-11"]], "Exercise series": [[533, "exercise-series"]], "Code: C++: Class Templates": [[534, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[535, "screenplay-c-class-templates"]], "C++: Class Templates": [[536, "c-class-templates"]], "Code: C++: Dynamic Memory": [[537, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[538, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[538, "c-malloc-free"]], "valgrind: Memory Leak": [[538, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[538, "valgrind-array-bounds-write"]], "C++: new, delete": [[538, "c-new-delete"]], "C++: new, delete on Arrays": [[538, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[538, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[539, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[540, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[541, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[541, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[541, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[541, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[542, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[543, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[544, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[545, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[546, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[547, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[547, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[547, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[547, "ownership-2-x-non-const"]], "Ownership: const Method": [[547, "ownership-const-method"]], "Ownership: 2 x const": [[547, "ownership-2-x-const"]], "C++: Ownership/RAII": [[548, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[549, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[550, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[550, "pointer-arithmetics-recap"]], "Container: std::vector": [[550, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[550, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[550, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[550, "container-std-list"]], "Container: std::map": [[550, "container-std-map"]], "C++: STL Containers (Intro)": [[551, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[552, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[553, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[554, "c-templates-vs-interfaces"]], "Background": [[556, "background"]], "History": [[556, "history"], [990, "history"]], "Content": [[556, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[557, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[557, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[557, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[557, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[557, "comparison-functions-in-equality"]], "Moving Points": [[557, "moving-points"]], "Vector Addition and Subtraction": [[557, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[557, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[557, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[557, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[558, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[558, "compiler-generated-copy-constructor"]], "Rule": [[558, null], [561, null], [660, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[558, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[559, "classes-and-objects"]], "Introducing C++: class point": [[559, "introducing-c-class-point"]], "Access Specifiers: public And private": [[559, "access-specifiers-public-and-private"]], "Default Constructor": [[559, "default-constructor"], [561, "default-constructor"], [574, "default-constructor"], [575, "default-constructor"], [576, "default-constructor"], [577, "default-constructor"]], "Custom Constructor: Usage": [[559, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[559, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[559, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[559, "methods-operations-on-an-object"]], "And printf()?!": [[559, "and-printf"]], "Custom Constructor": [[560, "custom-constructor"], [574, "custom-constructor"]], "Constructors: why? (1)": [[560, "constructors-why-1"]], "Constructors: why? (2)": [[560, "constructors-why-2"]], "Constructors: Implementation - Inline": [[560, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[560, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[561, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[561, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[561, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[561, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[562, "more-constructors-destructors"]], "Default Constructor (1)": [[562, "default-constructor-1"]], "Default Constructor (2)": [[562, "default-constructor-2"]], "Object Lifecycle - Destructor": [[562, "object-lifecycle-destructor"]], "Destructors (1)": [[562, "destructors-1"]], "Destructors (2)": [[562, "destructors-2"]], "Destructors (3)": [[562, "destructors-3"]], "Destructors (4)": [[562, "destructors-4"]], "Data Encapsulation": [[563, "data-encapsulation"]], "Constructors: Member Initialization": [[564, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[564, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[564, "real-initialization-initializer-list"]], "Why Is That Important?": [[564, "why-is-that-important"]], "Why Else Is That Important?": [[564, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[565, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[565, "copy-in-c"]], "Copy Constructor": [[565, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[565, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[565, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[565, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[565, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[565, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[565, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[565, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[565, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[565, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[566, "overloading"]], "Functions in C": [[566, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[566, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[566, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[566, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[567, "objects-data-and-methods"]], "class point Again": [[567, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[567, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[567, "how-are-members-accessed-inside-methods"]], "const Methods": [[567, "const-methods"], [568, "const-methods"]], "Non const Methods": [[567, "non-const-methods"]], "const": [[568, "const"]], "const: Immutable Variable": [[568, "const-immutable-variable"]], "const Correctness vs. Pollution": [[568, "const-correctness-vs-pollution"]], "this": [[569, "this"]], "Hidden Pointer: this (1)": [[569, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[569, "hidden-pointer-this-2"]], "Explicit this Pointer": [[569, "explicit-this-pointer"]], "Pass By Copy/Reference": [[570, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[570, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[570, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[570, "copy-reference-c-pointers"]], "C++: True References": [[570, "c-true-references"]], "And const? Pointers?": [[570, "and-const-pointers"]], "const References": [[570, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[570, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[571, "static-methods"]], "Methods without Object": [[571, "methods-without-object"]], "Naive Implementation: Global Function": [[571, "naive-implementation-global-function"]], "C++: static Method": [[571, "c-static-method"]], "static Member Variables": [[572, "static-member-variables"]], "Good Old C: extern Global Variables": [[572, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[572, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[572, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[572, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[572, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[572, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[573, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[573, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[573, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[573, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[573, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[573, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[573, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[573, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[574, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[574, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[574, "in-equality"], [575, "in-equality"], [576, "in-equality"], [577, "in-equality"]], "+=": [[574, "id2"], [575, "id1"], [576, "id2"], [577, "id2"]], "-=": [[574, "id4"], [576, "id4"]], "+": [[574, "id6"], [575, "id2"], [576, "id6"], [577, "id3"]], "-": [[574, "id8"], [576, "id8"]], "<< (std::ostream)": [[574, "std-ostream"], [575, "std-ostream"], [576, "std-ostream"], [577, "std-ostream"]], "Surface": [[574, "surface"]], "Volume": [[574, "volume"]], "Exercise (FH): class point": [[575, "exercise-fh-class-point"]], "Initial Build": [[575, "initial-build"]], "Initial Test Run": [[575, "initial-test-run"]], "Extending class point: More Unit Tests": [[575, "extending-class-point-more-unit-tests"]], "Access Methods": [[575, "access-methods"]], "Unary -": [[575, "unary"], [576, "unary"]], "Exercise (FH): class point3d": [[576, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[576, "building-class-rectangle-upon-class-point"], [577, "building-class-rectangle-upon-class-point"]], "Coordinates": [[576, "coordinates"], [577, "coordinates"]], "Absolute Value": [[576, "absolute-value"]], "Distance Between Two Points": [[576, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[577, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[577, "width-height-area"]], "Error Handling: if - else if - else": [[579, "error-handling-if-else-if-else"]], "try - catch": [[580, "try-catch"]], "try - Block": [[580, "try-block"]], "catch - Block": [[580, "catch-block"]], "Standard Library: Exception-Hierarchy": [[580, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[580, "custom-exceptions-1"]], "Custom Exceptions (2)": [[580, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[580, "throwing-exceptions-throw"]], "Last Words": [[580, "last-words"], [583, "last-words"]], "Function Templates": [[582, "function-templates"]], "Origin: Duplicated Code": [[582, "origin-duplicated-code"]], "A simple Function-Template": [[582, "a-simple-function-template"]], "More Templates from the STL": [[582, "more-templates-from-the-stl"]], "Class Templates": [[583, "class-templates"]], "Does This Work With Classes?": [[583, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[583, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[583, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[585, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[586, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[587, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[588, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[589, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[590, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[590, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[590, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[590, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[590, "pointer-difference"]], "Step Width? (1)": [[590, "step-width-1"]], "Step Width? (2)": [[590, "step-width-2"]], "And Arbitrary Data Types?": [[590, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[590, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[590, "stl-algorithms"]], "STL Containers": [[590, "stl-containers"]], "std::vector (And std::copy())": [[591, "std-vector-and-std-copy"]], "Dynamicity Details": [[591, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[591, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[591, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[592, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[592, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[592, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[592, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[592, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[593, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[594, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[595, null], [596, null], [597, null], [598, null], [599, null], [601, null], [602, null], [603, null], [604, null], [607, null], [608, null], [611, null], [616, null], [761, null], [761, null], [777, null], [779, "documentation"], [779, null], [783, "documentation"], [785, null], [785, null], [785, null], [811, "documentation"], [814, "documentation"], [824, null], [825, null], [828, null], [832, null], [832, null], [839, null], [840, null], [841, null], [841, null], [841, null], [842, null], [857, null], [857, null], [857, null], [858, null], [859, null], [860, null], [876, null], [876, null], [876, null], [879, null], [880, null], [913, null], [915, null], [917, null], [919, null], [920, null], [921, null], [923, null], [923, null], [923, null], [923, null], [923, null], [923, null], [926, null], [927, null], [928, null], [929, null], [929, null], [930, null], [933, null], [933, null], [933, null], [933, null], [971, null], [971, null], [972, null], [1047, null], [1057, null], [1135, "documentation"]], "binary_search<>: On Sorted Sequence": [[595, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[595, "more-intelligent-search"], [601, "more-intelligent-search"]], "copy<>": [[596, "copy"]], "find<>: Sequential Search, by Equality": [[597, "find-sequential-search-by-equality"]], "Basic Usage": [[597, "basic-usage"], [716, "basic-usage"], [879, "basic-usage"], [1049, "basic-usage"]], "Not Found?": [[597, "not-found"]], "find_if<>: Sequential Search, Customizable": [[598, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[598, "if-using-a-plain-function"]], "if, Using a Functor Class": [[598, "if-using-a-functor-class"]], "for_each<>": [[599, "for-each"]], "Basic Algorithms": [[600, "basic-algorithms"]], "Sorted Arrays": [[600, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[601, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[602, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[603, "reverse-copy-copying-and-reversing"]], "sort<>": [[604, "sort"]], "Algorithm: std::sort": [[604, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[604, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[605, "sequential-containers"], [606, "sequential-containers"]], "Common Characteristics": [[605, "common-characteristics"]], "list<>": [[607, "list"]], "Insertion and Deletion": [[607, "insertion-and-deletion"]], "vector<>": [[608, "vector"]], "Characteristics": [[608, "characteristics"]], "Modification at the Back": [[608, "modification-at-the-back"]], "Insertion": [[608, "insertion"]], "Example": [[608, "example"], [1064, "example"]], "Associative Containers": [[609, "associative-containers"], [610, "associative-containers"]], "Type Instantiation": [[611, "type-instantiation"]], "Filling The Container": [[611, "filling-the-container"]], "Inserting Elements": [[611, "inserting-elements"]], "Searching": [[611, "searching"], [635, "searching"]], "Screenplay: std::map Initialization And Inserting": [[612, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[612, "definining-the-type"]], "Initialization": [[612, "initialization"], [635, "initialization"]], "Screenplay: Inserting Elements": [[613, "screenplay-inserting-elements"]], "Subscript Operator": [[613, "subscript-operator"]], "insert()": [[613, "insert"]], "Screenplay: Removing (Erasing) Elements": [[614, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[614, "by-pointer-err-iterator"]], "By Key": [[614, "by-key"]], "Screenplay: Searching": [[615, "screenplay-searching"]], "find(key)": [[615, "find-key"]], "[key]": [[615, "key"]], "at(key)": [[615, "at-key"]], "multimap<>": [[616, "multimap"]], "Allocator Basics": [[617, "allocator-basics"]], "STL: Exercises": [[619, "stl-exercises"]], "Exercise: Reverse a String": [[620, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[621, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[622, "solution-reverse-a-string"]], "Naive": [[622, "naive"]], "Using std::reverse<>": [[622, "using-std-reverse"]], "Using std::reverse_copy<>": [[622, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[624, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[626, "inheritance-basics"]], "Plain (Base) Class": [[626, "plain-base-class"], [627, "plain-base-class"]], "Inheriting (Deriving) From Base": [[626, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[626, "derived-is-a-base"]], "Destructors And Inheritance": [[627, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[627, "derived-class-and-destructor"]], "And Base Class Conversion?": [[627, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[628, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[629, "c-interfaces"]], "Bringing It All Together": [[629, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[630, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[630, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[630, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[630, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[631, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[632, "virtual-destructors"]], "Is-A Relationships And Destructors": [[632, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[632, "pure-virtual-destructor"]], "Virtual Methods": [[633, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[633, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[633, "enter-virtual"]], "Caution: virtual": [[633, "caution-virtual"]], "std::string": [[635, "std-string"]], "Addition, And Such": [[635, "addition-and-such"]], "Conversion From String": [[635, "conversion-from-string"]], "Conversion To String": [[635, "conversion-to-string"]], "Substrings": [[635, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[636, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[637, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[638, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[639, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[640, "exercises-user-database"]], "Exercise: Access Methods for Members": [[641, "exercise-access-methods-for-members"]], "Exercise: const Members": [[642, "exercise-const-members"]], "Exercise: Use const": [[643, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[644, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[645, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[646, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[647, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[648, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[649, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[649, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[650, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[651, "exercise-use-std-vector-in-userdb"]], "History, Background": [[654, "history-background"]], "Make C++ Great Again": [[654, "make-c-great-again"]], "The \u201cNew\u201d C++": [[654, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[655, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[655, "c-03-to-do-list-version"]], "Real Container Initialization": [[655, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[655, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[655, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[655, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[655, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[655, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[655, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[655, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[655, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[655, "inevitable-threads"]], "Unions? std::variant!": [[655, "unions-std-variant"]], "Wrapping All That Into A Class": [[655, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[655, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[655, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[656, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[656, "c-03-enum-types-problems"]], "C++11 enum class": [[656, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[656, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[657, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[658, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[658, "std-initializer-list"]], "Direct Usage": [[658, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[658, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[659, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[659, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[659, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[659, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[659, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[659, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[659, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[659, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[659, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[659, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[660, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[660, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[660, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[660, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[660, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[660, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[661, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[661, "delegating-constructor-solution"]], "constexpr": [[662, "constexpr"]], "Basic Usage: Expressions": [[662, "basic-usage-expressions"]], "constexpr Functions": [[662, "constexpr-functions"]], "Recursive constexpr": [[662, "recursive-constexpr"]], "constexpr Objects": [[662, "constexpr-objects"]], "Afterword, Further Reading": [[663, "afterword-further-reading"]], "Uses In The Standard Library": [[663, "uses-in-the-standard-library"]], "Other Uses": [[663, "other-uses"]], "All Said \u27f6 Guidelines": [[663, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[663, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[664, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[664, "alternative-livehacking"]], "Starting Point": [[665, "starting-point"], [63, "starting-point"]], "SmartPtr With Move Semantics": [[665, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[665, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[665, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[666, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[666, "copy-semantics-revisited"]], "class String, Without Copy": [[666, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[666, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[666, "move-constructor-move"]], "Implementing Move Constructor": [[666, "implementing-move-constructor"]], "And Move Assignment?": [[666, "and-move-assignment"]], "Implementing Move Assignment": [[666, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[667, "using-move-semantics-in-own-code"]], "Using String: class Person": [[667, "using-string-class-person"]], "What?": [[667, "what"], [840, "what"]], "Using Rvalue References Inside Function: std::move": [[667, "using-rvalue-references-inside-function-std-move"]], "Templates end with \u201c>>\u201d": [[669, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[670, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[670, "most-basic-usage"]], "auto Is Only The Basic Type": [[670, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[670, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[670, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[670, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[670, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[672, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[672, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[672, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[672, "concepts-to-the-rescue"]], "Syntactic Variations": [[672, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[673, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[674, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[675, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[676, "concepts-links"]], "Writing Your Own Concepts": [[677, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[677, "starting-point-good-old-function"]], "Need Template": [[677, "need-template"]], "Error: Requirement Not Fulfilled": [[677, "error-requirement-not-fulfilled"]], "Concept: has_size": [[677, "concept-has-size"]], "Concept: index_returns_double": [[677, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[678, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[679, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[680, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[681, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[682, "coroutines"]], "Coroutines: An Overview": [[683, "coroutines-an-overview"]], "Foreword": [[683, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[683, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[683, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[683, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[683, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[683, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[683, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[683, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[683, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[683, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[683, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[683, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[684, "fibo-generator-cpp"]], "fibonacci.cpp": [[685, "fibonacci-cpp"]], "generator.h": [[686, "generator-h"]], "generator-hello.cpp": [[687, "generator-hello-cpp"]], "simplest.cpp": [[688, "simplest-cpp"]], "suspend.cpp": [[689, "suspend-cpp"]], "suspend-iter.cpp": [[690, "suspend-iter-cpp"]], "suspend-next.cpp": [[691, "suspend-next-cpp"]], "= default": [[692, "default"]], "Problem: Default Constructor Not Automatically Generated": [[692, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[692, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[692, "c-11-solution-default"]], "= delete": [[693, "delete"]], "Problem: Copy Is Not Always Wanted": [[693, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[693, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[693, "c-11-solution-delete-copy"]], "final": [[694, "final"]], "Architectural Decisions": [[694, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[694, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[695, "new-language-features"]], "Lambda": [[696, "lambda"], [697, "lambda"]], "Lambda To The Rescue": [[697, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[697, "excursion-python-closures"]], "Same In C++: Capturing": [[697, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[697, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[697, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[697, "more-about-capturing"]], "Lambda: More Capturing": [[698, "lambda-more-capturing"]], "More Capture Syntax": [[698, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[698, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[698, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[698, "mixed-explicit-capture"]], "Define Variables In Capture": [[698, "define-variables-in-capture"]], "Capturing All By Reference": [[698, "capturing-all-by-reference"]], "Capturing All By Copy": [[698, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[698, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[698, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[699, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[699, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[699, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[700, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[700, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[700, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[700, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[700, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[702, "override"]], "Correct Overriding \u2026": [[702, "correct-overriding"]], "\u2026 Is Very Hard": [[702, "is-very-hard"]], "More Problems Arise": [[702, "more-problems-arise"]], "Solution: override": [[702, "solution-override"]], "Range Based for Loops: Introduction": [[703, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[703, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[703, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[703, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[704, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[704, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[704, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[704, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[704, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[704, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[705, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[705, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[705, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[705, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[705, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[705, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[705, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[705, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[705, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[707, "ranges-overview"]], "Ranges?": [[707, "ranges"]], "Containers And Views (Storage Behavior)": [[707, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[707, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[707, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[707, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[707, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[707, "available-ranges-concepts"]], "Ranges And Views: Links": [[708, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[709, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[709, "variations-compatible-data-types"]], "struct: By Copy": [[709, "struct-by-copy"]], "struct: Reference": [[709, "struct-reference"]], "struct: By const Reference": [[709, "struct-by-const-reference"]], "std::tuple: By Copy": [[709, "std-tuple-by-copy"]], "std::tuple: By Reference": [[709, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[709, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[709, "arrays-by-copy"]], "Arrays: By Reference": [[709, "arrays-by-reference"]], "Arrays: By const Reference": [[709, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[710, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[710, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[711, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[712, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[712, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[713, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[713, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[713, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[713, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[713, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[713, "explicit-move-method-maybe"]], "Stop!!!": [[713, "stop"]], "std::shared_ptr": [[714, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[714, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[714, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[714, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[714, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[714, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[714, "demo-basic-usage"]], "Demo: std::make_shared": [[714, "demo-std-make-shared"]], "Demo: Cyclic References": [[714, "demo-cyclic-references"]], "std::unique_ptr": [[715, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[715, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[715, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[715, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[715, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[715, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[715, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[715, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[715, "manipulating-pointer-content"]], "std::weak_ptr": [[716, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[716, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[716, "a-real-life-example"]], "Perfect Forwarding": [[717, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[717, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[717, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[717, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[717, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[718, "std-bind"]], "Why? What\u2019s The Problem?": [[718, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[718, "sample-program-all-done-manually"]], "Sideway: std::transform": [[718, "sideway-std-transform"]], "Sample Program: Using std::transform": [[718, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[718, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[718, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[718, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[718, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[718, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[718, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[718, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[718, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[718, "summary"], [797, "summary"], [797, "id1"], [1116, "summary"], [1118, "summary"]], "std::function": [[719, "std-function"]], "Classic Polymorphism": [[719, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[719, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[719, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[719, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[719, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[719, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[719, "std-function-last-words"]], "Threads Introduction": [[721, "threads-introduction"]], "Operating System Primitives": [[721, "operating-system-primitives"]], "There Be Dragons": [[721, "there-be-dragons"]], "Threads in C++": [[722, "threads-in-c"]], "Creating Threads is Far Too Easy": [[722, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[722, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[722, "cornercases-in-thread-lifetime"]], "Race Conditions": [[723, "race-conditions"], [795, "race-conditions"]], "std::atomic": [[724, "std-atomic"]], "Atomic Instructions (1)": [[724, "atomic-instructions-1"]], "Atomic Instructions (2)": [[724, "atomic-instructions-2"]], "std::mutex And Friends": [[725, "std-mutex-and-friends"]], "std::mutex": [[725, "std-mutex"]], "std::recursive_mutex": [[725, "std-recursive-mutex"]], "std::timed_mutex": [[725, "std-timed-mutex"]], "std::recursive_timed_mutex": [[725, "std-recursive-timed-mutex"]], "Scoped Locking": [[726, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[726, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[726, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[726, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[727, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[727, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[727, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[727, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[727, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[727, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[729, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[729, "overview-std-promise"]], "Overview: std::future": [[729, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[729, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[729, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[729, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[729, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[729, "pro-readability-encapsulate"]], "Atomics On Structures?": [[729, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[729, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[729, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[729, "and-exceptions"]], "std::chrono": [[730, "std-chrono"], [730, "id1"]], "Clock Domains": [[730, "clock-domains"]], "Measuring Time (1)": [[730, "measuring-time-1"]], "Measuring Time (2)": [[730, "measuring-time-2"]], "Sleeping, and Literals": [[730, "sleeping-and-literals"]], "New-Style Union: std::variant": [[731, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[731, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[731, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[731, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[731, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[731, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[731, "and-non-fundamental-types"]], "Classic Virtual": [[734, "classic-virtual"]], "Sensor Definitions": [[734, "sensor-definitions"], [736, "sensor-definitions"], [738, "sensor-definitions"], [740, "sensor-definitions"]], "Virtual Access": [[734, "virtual-access"], [736, "virtual-access"], [738, "virtual-access"], [739, "virtual-access"], [740, "virtual-access"], [741, "virtual-access"]], "Average Across Many": [[734, "average-across-many"], [736, "average-across-many"], [738, "average-across-many"], [740, "average-across-many"]], "Non-Virtual, But Related": [[736, "non-virtual-but-related"]], "Unrelated (Duck-Typed)": [[738, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[739, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[740, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[741, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Drafts": [[743, "drafts"], [891, "drafts"]], "Exercise: Bag Of Items, By Copy": [[744, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[744, "step-1-insert-find"]], "Step 2: Remove": [[744, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[745, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[745, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[745, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[745, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[746, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[748, "std-filesystem"]], "Paths: Composition, Comparison": [[748, "paths-composition-comparison"]], "Absolute and Relative Paths": [[748, "absolute-and-relative-paths"], [881, "absolute-and-relative-paths"]], "Path Component Access": [[748, "path-component-access"]], "Iterating Over Path Components": [[748, "iterating-over-path-components"]], "Current Working Directory": [[748, "current-working-directory"], [860, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[748, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[748, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[748, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[748, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[748, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[748, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[748, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[749, "the-new-c-11"]], "Generated Topic Graph": [[750, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[752, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[753, "modern-character-devices-slideshow"]], "Source": [[753, null], [756, null], [758, null], [761, null], [763, null], [766, null], [775, null], [777, null], [787, null], [789, null], [800, null], [805, null]], "Character Devices: Problems": [[753, "character-devices-problems"]], "Dynamic Device Numbers": [[753, "dynamic-device-numbers"]], "Device Classes": [[753, "device-classes"]], "Devices": [[753, "devices"]], "Modern Character Devices": [[754, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[755, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[755, "hooks-necessary"]], "Implement open(), read(), write()": [[755, "implement-open-read-write"]], "ioctl()": [[755, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[756, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[756, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[756, "available-methods"]], "open(): Userspace": [[756, "open-userspace"]], "open(): Kernelspace": [[756, "open-kernelspace"]], "ioctl(): Userspace": [[756, "ioctl-userspace"]], "ioctl(): Kernelspace": [[756, "ioctl-kernelspace"]], "ioctl(): Requests": [[756, "ioctl-requests"]], "_IO*() Macros": [[756, "io-macros"]], "_IO*() Macros: Usage": [[756, "io-macros-usage"]], "File Operations on Character Devices": [[757, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[758, "coding-first-functionality-slideshow"]], "Implement Event List": [[758, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[758, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[758, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[759, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[760, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[760, "major-and-minor-numbers"]], "Character Device": [[760, "character-device"]], "Character Device Basics (Slideshow)": [[761, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[761, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[761, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[761, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[761, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[761, "character-device-1"]], "Character Device (2)": [[761, "character-device-2"]], "And User Space?": [[761, "and-user-space"]], "Character Device Basics": [[762, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[763, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[763, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[764, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[765, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[765, "build-module-from-multiple-files"]], "Per-Device Structure": [[765, "per-device-structure"]], "Want My Hair Pretty": [[765, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[765, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[766, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[766, "what-s-bad"]], "Coding: Refactoring": [[767, "coding-refactoring"]], "DMA (Slideshow)": [[768, "dma-slideshow"]], "Address Types": [[768, "address-types"]], "Physical Memory Allocation": [[768, "physical-memory-allocation"]], "DMA Mappings: Overview": [[768, "dma-mappings-overview"]], "Consistent DMA Mappings": [[768, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[768, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[768, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[768, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[768, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[768, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[768, "streaming-mappings-syncing"]], "DMA": [[769, "dma"]], "Building a Fedora Kernel (Screenplay)": [[770, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[770, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[770, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[770, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[771, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[772, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[772, "prerequisite-build-entire-kernel"]], "Build Modules": [[772, "build-modules"]], "Install Modules": [[772, "install-modules"]], "Fedora: Building External Kernel Modules": [[773, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[775, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[775, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[775, "built-in-vs-loadable-module"]], "Minimum Module Source": [[775, "minimum-module-source"]], "Gotchas: init() and exit()": [[775, "gotchas-init-and-exit"]], "Module Build": [[775, "module-build"]], "Minimum Makefile, Building": [[775, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[775, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[775, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[776, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[777, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[777, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[777, "cross-compilation"]], "Cross Compilation Sucks": [[777, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[777, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[777, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[777, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[777, "interlude-io-macros"]], "Request GPIO": [[777, "request-gpio"]], "Request Interrupt": [[777, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[778, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[779, "interrupts-slideshow"]], "Interrupt Facts": [[779, "interrupt-facts"]], "Interrupt Service Routine": [[779, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[779, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[781, "io-memory-slideshow"]], "I/O Memory": [[781, "i-o-memory"]], "I/O Memory: Reservation": [[781, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[781, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[781, "accessing-i-o-memory"]], "IO Memory": [[782, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[783, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[783, "dynamic-memory-kmalloc"], [784, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[783, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[785, "doubly-linked-lists-slideshow"]], "Big Picture": [[785, "big-picture"]], "List Head": [[785, "list-head"]], "Insert a Node": [[785, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[785, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[785, "emptying-a-list"]], "Doubly Linked Lists": [[786, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[787, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[787, "what-do-we-have"]], "Consequences of Not Protecting": [[787, "consequences-of-not-protecting"]], "Protect Event List": [[787, "protect-event-list"]], "Protect Device List": [[787, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[788, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[789, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[789, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[789, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[789, "mutex-locking-1"]], "Mutex: Locking (2)": [[789, "mutex-locking-2"]], "Mutex: Releasing": [[789, "mutex-releasing"]], "Realtime Mutex": [[789, "realtime-mutex"]], "Mutex (and RT Mutex)": [[790, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[791, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[791, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[791, "module-initialization-device-registration"]], "Device Methods": [[791, "device-methods"]], "Kernel Networking Layer Utilities": [[791, "kernel-networking-layer-utilities"]], "Network Devices": [[792, "network-devices"]], "PCI (Slideshow)": [[793, "pci-slideshow"]], "First and Foremost": [[793, "first-and-foremost"]], "PCI Driver Methods": [[793, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[793, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[793, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[793, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[793, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[793, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[793, "dma-support-routines"]], "PCI": [[794, "pci"]], "Process vs.Atomic Context (Slideshow)": [[795, "process-vs-atomic-context-slideshow"]], "Process Context": [[795, "process-context"]], "Atomic Context": [[795, "atomic-context"]], "Atomic vs. Process Context": [[795, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[795, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[796, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[797, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[797, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[797, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[797, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[797, "other-toolchains"]], "Kernel Source": [[797, "kernel-source"]], "Kernel Compilation": [[797, "kernel-compilation"]], "Parameters for the Build": [[797, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[797, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[797, "building-the-kernel-artifacts"]], "Packaging": [[797, "packaging"], [1050, "packaging"]], "Bootloader Artifacts": [[797, "bootloader-artifacts"]], "Module Tree": [[797, "module-tree"]], "Deployment": [[797, "deployment"]], "Variation": [[797, "variation"]], "Raspberry Pi: Building the Kernel": [[798, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[798, "todo-jjj"]], "Sample Code Maintenance": [[799, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[800, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[800, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[800, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[800, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[800, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[801, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[802, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[802, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[802, "spinlock-initialization"]], "Simple Lock/Unlock": [[802, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[802, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[802, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[803, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[804, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[805, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[805, "per-event-timestamp"]], "Discussion: Deferred Events": [[805, "discussion-deferred-events"]], "Add Timer": [[805, "add-timer"]], "Gotcha: Cleanup Running Timer": [[805, "gotcha-cleanup-running-timer"]], "More Gotchas": [[805, "more-gotchas"]], "Coding: Timed Event": [[806, "coding-timed-event"]], "Timer Management (Slideshow)": [[807, "timer-management-slideshow"]], "Original Timer API": [[807, "original-timer-api"]], "jiffies": [[807, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[807, "timer-wheel-methods"]], "Better Documentation": [[807, "better-documentation"]], "Timer Management": [[808, "timer-management"]], "To Do List": [[809, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[810, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[810, "new-ioctl-get-one-event"]], "Getting One Event": [[810, "getting-one-event"]], "copy_to_user()": [[810, "copy-to-user"]], "Userspace Test Program": [[810, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[811, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[811, "address-spaces"]], "Copying To and From Userspace": [[811, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[812, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[813, "waiting-for-something-screenplay"]], "read() Not Implemented": [[813, "read-not-implemented"]], "Implementing read() Naively": [[813, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[813, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[813, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[814, "waiting-for-something-slideshow"]], "Waiting for Something": [[814, "waiting-for-something"], [815, "waiting-for-something"]], "Wait Queues: Initializing": [[814, "wait-queues-initializing"]], "Wait Queue: Waiting": [[814, "wait-queue-waiting"]], "Wait Queue: Waking": [[814, "wait-queue-waking"]], "Workqueue (Screenplay)": [[816, "workqueue-screenplay"]], "Add Workqueue": [[816, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[816, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[816, "cleanup-why-we-did-this-after-all"]], "Finish": [[816, "finish"]], "Workqueue (Slideshow)": [[817, "workqueue-slideshow"]], "Workqueue: Motivation": [[817, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[817, "creating-destroying-a-workqueue"]], "What is Work?": [[817, "what-is-work"]], "Submitting Work": [[817, "submitting-work"]], "Workqueue": [[818, "workqueue"]], "Exercises: Archiving And Compression": [[819, "exercises-archiving-and-compression"]], "gzip": [[821, "gzip"]], "Compression Tools: Comparison": [[822, "compression-tools-comparison"]], "tar": [[823, "tar"]], "Creating And Viewing Archives": [[823, "creating-and-viewing-archives"]], "(De)Compression": [[823, "de-compression"]], "Etiquette": [[823, "etiquette"]], "Option Summary": [[823, "option-summary"]], "Being Creative With The Pipe": [[823, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[824, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[824, "precondition-logged-in-to-remote-exam-computer"], [825, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[824, "create-exam-skeleton-5-points"], [825, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[824, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[824, "public-place-10-points"], [825, "public-place-10-points"]], "Private Place (10 Points)": [[824, "private-place-10-points"], [825, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[824, "shared-file-in-public-place-10-points"], [825, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[824, "make-a-backup-of-exam-01-15-points"], [825, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[825, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[825, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[826, "exercises-exams-linux-basics"]], "Linux Basics": [[827, "linux-basics"]], "Everything Is A File (Live Demo)": [[828, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[828, "simple-is-beautiful"]], "Ok: a File is a File": [[828, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[828, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[828, "pseudo-terminals"]], "Disks and Partitions": [[828, "disks-and-partitions"]], "/proc and /sys": [[828, "proc-and-sys"]], "Pseudo Devices": [[828, "pseudo-devices"]], "Environment (Variables)": [[829, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[829, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[829, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[829, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[830, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[830, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[830, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[832, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[832, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[832, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[832, "and-after-successful-authentication"]], "Impersonation": [[832, "impersonation"]], "Logged In, Finally": [[832, "logged-in-finally"]], "User Space, Kernel Space?": [[833, "user-space-kernel-space"]], "User Space: Abstractions": [[833, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[833, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[833, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[834, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[834, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[834, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[834, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[834, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[834, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[834, "process-attributes-groups"]], "Processes: More Attributes": [[834, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[835, "process-hierarchy-parent-child-process"]], "More Process Rules": [[835, "more-process-rules"]], "Typical Process Tree": [[835, "typical-process-tree"]], "Services, init": [[835, "services-init"]], "Windows Subsystem for Linux (WSL)": [[836, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[836, null]], "More Links": [[836, "more-links"]], "My $0.02": [[836, "my-0-02"]], "WSL, Finally": [[836, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[837, "exercises-io-redirection-pipes"]], "I/O Redirection": [[839, "i-o-redirection"]], "Standard I/O Streams": [[839, "standard-i-o-streams"]], "I/O Redirection Operators": [[839, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[839, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[839, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[839, "example-standard-error-redirection"]], "Example: Everything Redirection": [[839, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[840, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[840, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[840, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[840, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[840, "more-tricks"]], "Pipes": [[841, "pipes"]], "Why Pipes?": [[841, "why-pipes"]], "Pipe Facts": [[841, "pipe-facts"]], "Pipe Examples": [[841, "pipe-examples"]], "More Pipe Examples": [[841, "more-pipe-examples"]], "Named Pipes": [[841, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[842, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[842, "owner-and-permissions"]], "A Simple Example": [[842, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[842, null]], "Permission Check: User": [[842, "permission-check-user"]], "Permission Check: Group": [[842, "permission-check-group"]], "Permission Check: Others": [[842, "permission-check-others"]], "Programs: Execute Permissions": [[842, "programs-execute-permissions"]], "Directory Permissions": [[842, "directory-permissions"]], "Permission Bits, octal": [[842, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[842, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[842, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[843, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[844, "fh-moodle-quiz-permissions"], [845, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[846, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[847, "exercise-create-private-directory"]], "Question: Private Directory": [[848, "question-private-directory"]], "Exercise: Create Public Directory": [[849, "exercise-create-public-directory"]], "Question: Public Directory": [[850, "question-public-directory"]], "Exercise: Create Group-Shared File": [[851, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[853, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[853, "problem-change-my-password"]], "Solution: Set-UID Bit": [[853, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[853, "set-uid-how-does-it-work"]], "Command: chmod": [[853, "command-chmod"]], "Set-UID Is Not A Toy!": [[853, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[854, "setuid-live-demo"]], "Real and Effective User ID": [[854, "real-and-effective-user-id"]], "Sample Program": [[854, "sample-program"]], "Set-UID jfasch?": [[854, "set-uid-jfasch"]], "Set-UID root? Danger!": [[854, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[855, "ugly-hack-sticky-bit"]], "Sticky Bit": [[855, "sticky-bit"]], "Default Permissions: umask": [[856, "default-permissions-umask"]], "Default Permissions - umask": [[856, "id1"]], "umask: How Does it Work?": [[856, "umask-how-does-it-work"]], "Shape (1)": [[857, "shape-1"]], "Shape (2)": [[857, "shape-2"]], "Options": [[857, "options"], [886, "options"]], "Help and Manual": [[857, "help-and-manual"]], "Man Pages: Navigation": [[857, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[857, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[857, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[857, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[857, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[857, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[858, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[858, "what-s-volatile"]], "Copying: cp": [[859, "copying-cp"]], "Option Overview": [[859, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[859, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[859, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[859, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[859, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[859, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[860, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[860, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[861, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[862, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[863, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[864, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[865, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[866, "exercise-mkdir"]], "Exercise: Funny Stuff": [[867, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[868, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[869, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[870, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[871, "the-shell-exercises"]], "Exercise: File Types in /dev": [[872, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[873, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[874, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[875, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[876, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[876, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[876, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[876, "creating-an-empty-file-touch"]], "Removing A File: rm": [[876, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[876, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[878, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[879, "directory-listings-the-ls-command"]], "Many Options": [[879, "many-options"]], "Hidden Files": [[879, "hidden-files"]], "File Types": [[879, "file-types"]], "Moving and Renaming: mv": [[880, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[880, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[880, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[880, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[881, "path-separator"]], "Relative Paths": [[881, "relative-paths"]], "Absolute Paths": [[881, "absolute-paths"]], "Special Paths": [[881, "special-paths"]], "cat": [[882, "cat"], [882, "id1"]], "cut": [[883, "cut"], [883, "id1"]], "Exercises: Inspecting Text Files": [[884, "exercises-inspecting-text-files"]], "find": [[885, "find"]], "Directories durchsuchen mit find": [[885, "directories-durchsuchen-mit-find"]], "find: Optionen": [[885, "find-optionen"]], "find: Beispiele": [[885, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[885, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[885, "find-verknupfungen-beispiele"]], "grep": [[886, "grep"]], "Searching With grep": [[886, "searching-with-grep"]], "More About Regular Expressions": [[886, "more-about-regular-expressions"]], "head And tail": [[888, "head-and-tail"]], "head": [[888, "head"]], "tail": [[888, "tail"]], "head And tail In The Pipe": [[888, "head-and-tail-in-the-pipe"]], "less": [[889, "less"]], "Paging Files Using less": [[889, "paging-files-using-less"]], "Help Screen (Enter With h)": [[889, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[890, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[890, "stdin-stdout-examples"]], "Pipe: Examples": [[890, "pipe-examples"]], "Basics Text Tools": [[890, "basics-text-tools"]], "Yocto": [[892, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[894, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[894, null]], "Electronic Speed Controller (ESC)": [[894, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[894, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[894, "the-command-protocol-and-calibration"]], "Driving the Motor": [[894, "driving-the-motor"]], "CAN/Linux Basics": [[895, "can-linux-basics"]], "Why This Talk?": [[895, "why-this-talk"]], "Network Programming: Datagram Exchange": [[895, "network-programming-datagram-exchange"]], "And CAN?": [[895, "and-can"]], "One CAN Network Packet \u2026": [[895, "one-can-network-packet"]], "CAN Interfaces": [[896, "can-interfaces"]], "CAN-Interface: Configuration": [[896, "can-interface-configuration"]], "CAN Utils": [[896, "can-utils"]], "CAN Utils: Usage (1)": [[896, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[896, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[896, "vcan-virtual-can-bus"]], "Programming": [[897, "programming"]], "CAN Programming": [[897, "can-programming"]], "CAN in C - Socket, Interface Index": [[897, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[897, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[897, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[897, "can-in-c-frames-2"]], "CAN in Python - Frames": [[897, "can-in-python-frames"]], "Hardware, Kernel": [[898, "hardware-kernel"]], "MCP2515: Schematic": [[898, "mcp2515-schematic"]], "MCP2515: Soldering": [[898, "mcp2515-soldering"]], "MCP2515: SPI": [[898, "mcp2515-spi"]], "MCP2515: Raspberry": [[898, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[899, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[900, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[901, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[901, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[901, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[901, null]], "Enable Userspace I2C": [[901, "enable-userspace-i2c"]], "Slave Device: LM73": [[901, "slave-device-lm73"]], "Datasheet etc.": [[901, null]], "Optional: Address Selection": [[901, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[901, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[901, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[901, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[901, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[901, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[901, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[901, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[902, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[902, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[902, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[902, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[902, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[903, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[903, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[903, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[903, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[903, null]], "Wiring: Attach DS2482-800 via I2C": [[903, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[903, "configure-software"]], "Enable I2C, and Check": [[903, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[903, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[903, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[903, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[903, "over-engineering-beauty"]], "Hardware Bringup": [[903, "hardware-bringup"]], "Device Usage": [[903, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[903, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[903, "using-the-device"]], "As a Generic OneWire Device": [[903, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[903, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[903, "lm-sensors"]], "OneWire Caveats": [[903, "onewire-caveats"]], "Bus Topology": [[903, "bus-topology"]], "Error Symptoms": [[903, "error-symptoms"]], "SSH: Basics": [[904, "ssh-basics"]], "Login": [[904, "login"]], "Exit Status, stdin, stdout: Scripting": [[904, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[905, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[906, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[907, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[908, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[910, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[910, "local-setup-key-generation"]], "Key Pair?": [[910, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[910, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[911, "ssh-links"]], "SSH: Port Forwarding": [[912, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[912, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[912, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[912, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[912, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[912, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[913, "ssh-secure-copy-scp"]], "What Is That?": [[913, "what-is-that"]], "Copy Single File From Local To Remote": [[913, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[913, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[913, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[913, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[913, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[913, "more-options"]], "SSH File System (sshfs)": [[914, "ssh-file-system-sshfs"]], "What Is It?": [[914, "what-is-it"]], "Why Is It?": [[914, "why-is-it"]], "Example Situation: The Raspi": [[914, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[914, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[914, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[914, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[914, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[915, "the-errno-variable"]], "errno Is A Global Variable": [[915, "errno-is-a-global-variable"]], "Helper Functions": [[915, "helper-functions"]], "Linux Systems Programming: Basics": [[916, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[917, "system-calls-vs-library-functions"]], "System Calls": [[917, "system-calls"]], "System Calls And The C-Library": [[917, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[917, "library-function-or-system-call"]], "Manual Pages": [[917, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[918, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[918, null]], "Solution: This Is What An Operating System Is There For": [[918, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[919, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[919, null], [920, null], [921, null], [1102, "see-also"]], "Abstractions": [[919, "abstractions"], [920, "abstractions"], [921, "abstractions"]], "Simplicity": [[919, "simplicity"], [920, "simplicity"], [921, "simplicity"]], "Build, Run, Look": [[919, "build-run-look"], [920, "build-run-look"], [921, "build-run-look"]], "Watch: Run Under strace Supervision": [[919, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[920, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[920, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[921, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[921, "setup-a-timer"]], "Blocking I/O: What Is That?": [[922, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[923, "file-i-o-basics"]], "File Descriptors": [[923, "file-descriptors"]], "Standard Filedescriptors": [[923, "standard-filedescriptors"]], "File I/O: System Calls": [[923, "file-i-o-system-calls"]], "open()": [[923, "open"]], "open() Flags": [[923, "open-flags"]], "read()": [[923, "read"]], "write()": [[923, "write"]], "File Offset: lseek()": [[923, "file-offset-lseek"]], "The Rest: ioctl()": [[923, "the-rest-ioctl"]], "Exercise: Copy A File": [[924, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[924, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[924, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[924, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[924, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[924, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[925, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[926, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[926, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[926, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[926, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[926, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[926, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[926, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[927, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[927, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[927, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[927, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[928, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[928, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[928, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[928, "error-file-exists"]], "O_RDONLY: Reading a File": [[929, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[929, "me-and-etc-passwd"]], "Code: Reading A File": [[929, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[929, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[929, "error-file-not-readable"]], "Error: File Not Even There": [[929, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[930, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[930, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[930, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[930, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[930, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[931, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[931, "onewire-basics"]], "Program": [[931, "program"], [1083, "program"]], "Test On The Target Machine": [[931, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[933, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[933, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[933, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[933, "truncating-files"]], "File Descriptors - Allocation": [[933, "file-descriptors-allocation"]], "Linux Systems Programming": [[934, "linux-systems-programming"], [1163, "linux-systems-programming"]], "Get Value Of GPIO": [[935, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[935, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[935, "shell-script"]], "C Program": [[935, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[936, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[937, "intro-sysfs-gpio"]], "sysfs?": [[937, "sysfs"]], "General Purpose IO (GPIO)": [[937, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[937, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[937, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[938, "interrupts-in-userspace"]], "Manual Configuration": [[938, "manual-configuration"]], "C Program: Configuration, Event Loop": [[938, "c-program-configuration-event-loop"]], "Why Threads?": [[939, "why-threads"]], "Typical Uses": [[939, "typical-uses"]], "Legal (1)": [[939, "legal-1"]], "Legal (2)": [[939, "legal-2"]], "POSIX Thread API": [[939, "posix-thread-api"]], "Thread Life Cycle": [[940, "thread-life-cycle"], [940, "id1"]], "Thread Creation": [[940, "thread-creation"]], "Thread Termination (1)": [[940, "thread-termination-1"]], "Thread Termination (2)": [[940, "thread-termination-2"]], "Exit Status, pthread_join()": [[940, "exit-status-pthread-join"]], "Detached Threads": [[940, "detached-threads"]], "Thread ID": [[940, "thread-id"]], "Scheduled Entities (1)": [[940, "scheduled-entities-1"]], "Scheduled Entities (2)": [[940, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[941, "thread-creation-race-condition"]], "Synchronization": [[942, "synchronization"]], "Race Conditions (1)": [[942, "race-conditions-1"]], "Race Conditions (2)": [[942, "race-conditions-2"]], "Mutex (1)": [[942, "mutex-1"]], "Mutex (2)": [[942, "mutex-2"]], "Mutex (3)": [[942, "mutex-3"]], "Mutex Types": [[942, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[943, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[944, "communication-condition-variable"]], "Condition Variable (1)": [[944, "condition-variable-1"]], "Condition Variable (2)": [[944, "condition-variable-2"]], "Condition Variable: wait()": [[944, "condition-variable-wait"]], "Condition Variable: signal()": [[944, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[944, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[944, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[944, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[944, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[944, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[945, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[946, "one-time-initialization-1"]], "One-Time Initialization (2)": [[946, "one-time-initialization-2"]], "One-Time Initialization (3)": [[946, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[946, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[947, "last-warning-1"]], "Last Warning (2)": [[947, "last-warning-2"]], "Last Warning (3)": [[947, "last-warning-3"]], "Trylock/islocked": [[949, "trylock-islocked"]], "Process: Arguments, Exit Status": [[950, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[950, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[950, "the-shell-a-programming-language"]], "Exit Status": [[950, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[950, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[950, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[950, "argument-vector-int-argc-char-argv"]], "Processes": [[951, "processes"]], "The Process Tree (And Environment, And procfs)": [[952, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[952, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[952, "system-calls-getpid-getppid"]], "Environment Variables": [[952, "environment-variables"]], "Scheduling (and Multitasking)": [[953, "scheduling-and-multitasking"]], "Fairness Criteria": [[953, "fairness-criteria"]], "CPU bound vs. I/O bound": [[953, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[953, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[953, "scheduling-decision-runnability"]], "Tasks": [[955, "tasks"], [121, "tasks"], [126, "tasks"]], "Tasks? Processes? Threads?": [[955, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[955, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[955, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[955, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[955, "id1"]], "Threads Are Great: More Functionality": [[955, "threads-are-great-more-functionality"]], "Are Threads Great?": [[955, "are-threads-great"]], "Stability Considerations": [[955, "stability-considerations"]], "Processes, Address Spaces": [[955, "processes-address-spaces"]], "Stabilizing": [[955, "stabilizing"]], "Scheduling: Exam Questions": [[956, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[957, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[957, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[957, "enter-realtime-definition"]], "Realtime on Linux": [[957, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[957, "demo-measuring-wakeup-latency"]], "Immediately?": [[957, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[957, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[958, "realtime-api"]], "Scheduling Policies": [[958, "scheduling-policies"]], "Scheduling Priorities": [[958, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[958, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[958, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[958, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[958, "scheduling-threads-2"]], "Priority Inversion": [[958, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[958, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[959, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[959, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[959, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[959, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[959, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[960, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[961, "screenplay-sysprog-posix-ipc"], [964, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[961, "select-on-device-files"]], "Sysprog: Events": [[962, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[963, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[964, "virtual-memory-mmap"]], "POSIX Shared Memory": [[964, "posix-shared-memory"]], "Create Shared Memory Segment": [[964, "create-shared-memory-segment"]], "Produce into Shared Memory": [[964, "produce-into-shared-memory"]], "Consume from Shared Memory": [[964, "consume-from-shared-memory"]], "POSIX Semaphores": [[964, "posix-semaphores"]], "Create Semaphore": [[964, "create-semaphore"]], "Wait": [[964, "wait"]], "Post": [[964, "post"]], "POSIX Message Queues": [[964, "posix-message-queues"]], "Create": [[964, "create"]], "Produce": [[964, "produce"]], "Consume": [[964, "consume"]], "Slides: Sysprog: POSIX IPC": [[965, "slides-sysprog-posix-ipc"]], "Slideshow": [[965, null], [969, null]], "History: Two IPC Variants": [[965, "history-two-ipc-variants"]], "Object Names": [[965, "object-names"]], "File Semantics": [[965, "file-semantics"]], "Message Queues": [[965, "message-queues"]], "Open/Create: mq_open()": [[965, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[965, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[965, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[965, "notification-mq-notify"]], "Message Queues are Files": [[965, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[965, "message-queue-filesystem-mqueue"]], "Semaphores": [[965, "semaphores"]], "Open/Create: sem_open()": [[965, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[965, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[965, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[965, "semaphores-are-files"]], "Shared Memory (1)": [[965, "shared-memory-1"]], "Shared Memory (2)": [[965, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[965, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[966, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[967, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[968, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[968, "barebones-naive-program"]], "Signal Handler": [[968, "signal-handler"]], "Alarm": [[968, "alarm"]], "Alarm (Louder)": [[968, "alarm-louder"]], "Synchronous Delivery": [[968, "synchronous-delivery"]], "Innocent Multithreaded Program": [[968, "innocent-multithreaded-program"]], "Add SIGALRM": [[968, "add-sigalrm"]], "Slides: Sysprog: Signals": [[969, "slides-sysprog-signals"]], "Example Signals": [[969, "example-signals"]], "Terminology": [[969, "terminology"]], "Default Actions": [[969, "default-actions"]], "Important Signals": [[969, "important-signals"]], "Sending, Commandline": [[969, "sending-commandline"]], "Sending Signals, Programmatically": [[969, "sending-signals-programmatically"]], "Warning!": [[969, "warning"]], "Blocking Signals: Signal Mask": [[969, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[969, "signal-mask-manipulation"]], "Pending Signals": [[969, "pending-signals"]], "Signal Set: sigset_t": [[969, "signal-set-sigset-t"]], "Signal Handlers": [[969, "signal-handlers"]], "Installing a Signal Handler (1)": [[969, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[969, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[969, "effects-of-signal-delivery"]], "Last Warning!": [[969, "last-warning"]], "WTF Async Signal Safe?": [[969, "wtf-async-signal-safe"]], "Exercise: Signals": [[969, "exercise-signals"]], "Sysprog: Signals": [[970, "sysprog-signals"]], "Toolchain: Basics": [[971, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[971, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[971, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[971, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[971, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[971, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[971, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[971, "recap-toolchain"]], "CMake: Cross Build": [[972, "cmake-cross-build"]], "Cross Build: Parameters": [[972, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[972, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[972, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[972, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[972, "step-2-build-using-make"], [973, "step-2-build-using-make"]], "CMake: Local Build": [[973, "cmake-local-build"]], "make: Problems": [[973, "make-problems"]], "CMake To The Rescue": [[973, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[973, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[973, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[973, "goodie-dependency-management"]], "Native Compilation": [[974, "native-compilation"]], "Cross?": [[974, "cross"]], "The sysroot": [[974, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[976, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[977, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[978, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[979, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[980, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[981, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[982, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[983, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[983, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[983, "create-a-sysroot"]], "Patience!": [[983, null]], "Test Cross Build": [[983, "test-cross-build"]], "What We Have": [[983, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[983, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[983, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[985, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[985, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[985, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[985, "create-docker-volume"]], "Container Work": [[985, "container-work"]], "Command To Run Container On Volumes": [[985, "command-to-run-container-on-volumes"]], "Setup container": [[985, "setup-container"]], "Install autoconf 2.71": [[985, "install-autoconf-2-71"]], "Install crosstool-ng": [[985, "install-crosstool-ng"]], "Build Toolchain": [[985, "build-toolchain"]], "crosstool-ng Toolchain Build": [[985, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[985, "create-toolchain-archive"]], "Install Toolchain On Host": [[985, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[986, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[986, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[986, "establish-cmake-toolchain-file"]], "Test Run": [[986, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[987, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[987, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[987, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[987, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[987, "complication-modification-tracking"]], "Enter Makefiles": [[987, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[988, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[988, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[988, "and-dynamic-libraries"]], "Relocations": [[988, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[988, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[988, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[988, "and-build-dependencies"]], "And Runtime Dependencies?": [[988, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[988, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[988, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[988, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[989, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[989, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[989, "code-bases-become-larger-2"]], "Problem: Structure": [[989, "problem-structure"]], "Build Instructions: Building A Library": [[989, "build-instructions-building-a-library"]], "Closures": [[990, "closures"]], "Today": [[990, "today"]], "def is a Statement": [[990, "def-is-a-statement"]], "Functions That Create Functions": [[990, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[990, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[990, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[990, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[990, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[990, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[991, "intro"]], "Simplest: List Comprehension": [[991, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[992, "context-managers-the-with-statement"]], "Example: Open File": [[992, "example-open-file"]], "Example: Temporary Directory": [[992, "example-temporary-directory"]], "Example: Multiple with Items": [[992, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[992, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[992, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[992, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[992, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[993, "decorators"]], "The Ominous \u201c@\u201d": [[993, "the-ominous"]], "Decorators Overview": [[993, "decorators-overview"]], "A Simple Minded Function": [[993, "a-simple-minded-function"]], "Decorator Basics": [[993, "decorator-basics"]], "Decorators are Syntactic Sugar": [[993, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[993, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[993, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[993, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[993, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[994, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[994, "catching-exceptions-by-type"]], "Exception Objects": [[994, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[994, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[994, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[994, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[994, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[994, "built-in-exception-hierarchy"]], "Raising Exceptions": [[994, "raising-exceptions"]], "Re-Raising Exceptions": [[994, "re-raising-exceptions"]], "User-Defined Exceptions": [[994, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[994, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[994, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[994, "finally-executed-regardless-of-exception"]], "The exec() Function": [[995, "the-exec-function"]], "Dictionaries Everywhere: Context": [[995, "dictionaries-everywhere-context"]], "Enter exec()": [[995, "enter-exec"]], "exec(), and Context": [[995, "exec-and-context"]], "And What Is This Used For, Realistically?": [[995, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[996, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[997, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[997, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[997, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[997, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[997, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[997, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[997, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[997, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[998, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[998, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[998, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[998, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[998, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[998, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[999, "the-iterator-protocol"], [999, "id1"]], "Iteration in Python": [[999, "iteration-in-python"]], "What\u2019s an Iterator?": [[999, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[999, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[999, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[999, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[999, "generators-motivation"]], "Generators: How?": [[999, "generators-how"]], "Observations": [[999, "observations"]], "Iteration, Generators, And yield": [[1000, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1001, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1002, "modules-are-objects"]], "Other Forms (1)": [[1002, "other-forms-1"]], "Other Forms (2)": [[1002, "other-forms-2"]], "Packages": [[1002, "packages"]], "Executing Modules as Scripts": [[1002, "executing-modules-as-scripts"]], "Package Structure": [[1002, "package-structure"]], "Relative Imports (1)": [[1002, "relative-imports-1"]], "Relative Imports (2)": [[1002, "relative-imports-2"]], "Multithreading (Python)": [[1003, "multithreading-python"]], "What\u2019s a Thread?": [[1003, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1003, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1003, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1003, "and-program-termination"]], "Daemon Threads": [[1003, "daemon-threads"]], "Race Conditions, and Mutexes": [[1005, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1005, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1005, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1005, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1005, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1006, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1007, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1007, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1007, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1007, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1007, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1007, "abtract-base-class"]], "Classes And Dictionaries": [[1008, "classes-and-dictionaries"]], "Facts Up-Front": [[1008, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1008, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1008, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1008, "attributes"], [1120, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1008, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1008, "dynamic-attribute-access"]], "Constructor": [[1009, "constructor"]], "And self?": [[1009, "and-self"]], "Interrelationships": [[1010, "interrelationships"]], "Extending Existing Classes": [[1011, "extending-existing-classes"]], "Additional Feature: Salary": [[1011, "additional-feature-salary"]], "Want Manager": [[1011, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1011, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1011, "isinstance"]], "issubclass()": [[1011, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1011, "add-str-creatively-after-the-fact"]], "Object Methods": [[1012, "object-methods"]], "Class Methods (@classmethod)": [[1012, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1012, "static-methods-staticmethod"]], "collections.namedtuple": [[1013, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1013, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1013, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1013, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1014, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1014, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1014, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1014, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1014, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1014, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1014, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1014, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1014, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1014, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1015, "readonly-attributes"]], "And Write Access?": [[1015, "and-write-access"]], "Calculated Attributes": [[1015, "calculated-attributes"]], "str() And repr()": [[1016, "str-and-repr"]], "Stringification And Representation": [[1016, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1016, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1017, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1017, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1017, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1017, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1017, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1017, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1017, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1017, "use-case-a-better-print"]], "The Python Programming Language": [[1020, "the-python-programming-language"]], "A Little Bit of History": [[1020, "a-little-bit-of-history"]], "Guido Van Rossum": [[1020, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1021, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1021, "hello-world-script-files"]], "Running Python Programs": [[1022, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1022, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1022, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1022, "the-unix-way-running"]], "The Doze Way: Registry": [[1022, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1023, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1023, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1023, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[1023, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[1024, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1024, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1024, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1024, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1024, null]], "Variables (1)": [[1025, "variables-1"]], "Variables (2)": [[1025, "variables-2"]], "Integer Numbers: Comparison": [[1026, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1026, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1026, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1026, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1026, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1026, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1026, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1026, "strings-python-3"]], "Python 3, Generally": [[1026, "python-3-generally"]], "Boolean Values": [[1028, "boolean-values"]], "Boolean Operators": [[1028, "boolean-operators"]], "The if Statement": [[1029, "the-if-statement"], [1029, "id1"]], "Looping Constructs": [[1030, "looping-constructs"]], "Esoteric Feature: while/else": [[1030, "esoteric-feature-while-else"]], "Sequence Elements": [[1031, "sequence-elements"]], "Sequence Multiplication": [[1031, "sequence-multiplication"]], "Indexing (1)": [[1032, "indexing-1"]], "Indexing (2)": [[1032, "indexing-2"]], "Slicing: Cutting Out": [[1032, "slicing-cutting-out"]], "Slicing: Step Width": [[1032, "slicing-step-width"]], "Iteration over \u2026 Something": [[1033, "iteration-over-something"]], "break, continue, else": [[1033, "break-continue-else"]], "Iteration over Numbers: range()": [[1034, "iteration-over-numbers-range"]], "range(): Definition": [[1034, "range-definition"]], "range(): Python 2 vs. Python 3": [[1034, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1035, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1035, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1035, "immutability-tuples"]], "Mutability: Lists (1)": [[1035, "mutability-lists-1"]], "Mutability: Lists (2)": [[1035, "mutability-lists-2"]], "Shallow Copy": [[1035, "shallow-copy"]], "Deep Copy": [[1035, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1036, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1036, "undefined-variable"]], "Local Variable": [[1036, "local-variable"]], "Local and Global Variable With Same Name": [[1036, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1036, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1037, "functions-slideshow"]], "Why Functions?": [[1037, "why-functions"]], "Mutable Default Parameters: Attention!": [[1037, "mutable-default-parameters-attention"]], "String Delimiters": [[1039, "string-delimiters"]], "Escape Sequences": [[1039, "escape-sequences"]], "More String Tricks": [[1039, "more-string-tricks"]], "C-Style Formatting (1)": [[1040, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1040, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1040, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1040, "c-style-formatting-examples"]], "The format Method": [[1040, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1040, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1041, "batteries-included-checks"]], "Batteries Included: Search": [[1041, "batteries-included-search"]], "Substring Search: Examples": [[1041, "substring-search-examples"]], "Split and Join (1)": [[1041, "split-and-join-1"]], "Split and Join (2)": [[1041, "split-and-join-2"]], "List Access": [[1042, "list-access"]], "List Methods: Examples": [[1042, "list-methods-examples"]], "Dictionary Access": [[1043, "dictionary-access"]], "Examples: Simple Access": [[1043, "examples-simple-access"]], "Examples: Shortcuts": [[1043, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1043, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1043, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1044, "operations-on-sets-1"]], "Operations on Sets (2)": [[1044, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1045, "python-2-vs-python-3"]], "Opening Files": [[1045, "opening-files"]], "Reading Files": [[1045, "reading-files"]], "Reading Files: Pythonic": [[1045, "reading-files-pythonic"]], "Writing Files (1)": [[1045, "writing-files-1"]], "Writing Files (2)": [[1045, "writing-files-2"]], "File Modes": [[1045, "file-modes"]], "Text vs. Binary Mode": [[1045, "text-vs-binary-mode"]], "Standard Streams": [[1045, "standard-streams"]], "Function Objects": [[1046, "function-objects"]], "What\u2019s a Function?": [[1046, "what-s-a-function"]], "Function Objects?": [[1046, "id1"]], "Function Objects! (1)": [[1046, "function-objects-1"]], "Function Objects! (2)": [[1046, "function-objects-2"]], "Commandline Parsing with argparse": [[1047, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1047, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1047, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1048, "python-draft-topics"]], "Matplotlib": [[1049, "matplotlib"]], "Axis Ranges": [[1049, "axis-ranges"]], "Package Installation (setuptools)": [[1050, "package-installation-setuptools"]], "Files": [[1050, "files"]], "Test \u201cInstallation\u201d": [[1050, "test-installation"]], "Source Distribution": [[1050, "source-distribution"]], "Manifest": [[1050, "manifest"]], "Installing From Wheel File": [[1050, "installing-from-wheel-file"]], "Publishing On PyPI": [[1050, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1051, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1052, "exercise-read-csv-file"]], "Sample CSV File": [[1052, "sample-csv-file"]], "CSV and Databases": [[1053, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1055, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1056, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1057, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1058, "exercises-external"]], "Exercise: Swap Two Variables": [[1060, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1061, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1062, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1063, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1064, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1065, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1066, "exercise-primeness-for"]], "Exercises (Legacy)": [[1067, "exercises-legacy"]], "Exercise: Functions: join()": [[1068, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1070, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1071, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1072, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1073, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1073, null]], "Implementation Strategy": [[1073, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1074, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1075, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1076, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1077, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1078, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1079, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1080, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1081, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1082, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1082, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1082, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1083, "exercise-basic-sensor"]], "Specification, And Setup": [[1083, "specification-and-setup"]], "Verification": [[1083, "verification"]], "Unit Test": [[1083, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1084, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1084, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1085, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1086, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1086, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1087, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1088, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1089, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1090, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1090, "test-code"], [1091, "test-code"], [1092, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1091, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1092, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1093, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1094, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1094, "sample-trainings"]], "More Information": [[1094, "more-information"]], "Python Links": [[1095, "python-links"]], "Advanced Python": [[1095, "advanced-python"], [1156, "advanced-python"]], "David Beazley": [[1095, "david-beazley"]], "Raymond Hettinger": [[1095, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1096, "machine-learning-artificial-intelligence"]], "K-Means": [[1097, "k-means"]], "Topic Overview": [[1097, "topic-overview"], [1101, "topic-overview"]], "Artifacts": [[1097, "artifacts"]], "Topic Dependencies": [[1097, "topic-dependencies"], [1101, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1098, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1099, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1100, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1100, "pandas.DataFrame"]], "Reading Data": [[1100, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1100, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1100, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1100, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1100, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1100, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1100, "Verify-the-Model"]], "Linear Regression": [[1101, "linear-regression"]], "Running Code": [[1101, "running-code"]], "Dataset": [[1101, "dataset"]], "Machine Learning: Concepts and Terminology": [[1102, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1102, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1102, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1102, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1102, "types-of-machine-learning"]], "Problems Solved": [[1102, "problems-solved"], [1124, "problems-solved"], [1131, "problems-solved"]], "CSV Files": [[1103, "csv-files"]], "CSV in its Origins": [[1103, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1103, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1103, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1103, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1103, "more-tuning-needed-quoting"]], "Tuning Options": [[1103, "tuning-options"]], "And Headings?": [[1103, "and-headings"]], "Enter csv.DictReader": [[1103, "enter-csv-dictreader"]], "DBAPI 2": [[1104, "dbapi-2"]], "Database Interfaces": [[1104, "database-interfaces"]], "DBAPI 2.0": [[1104, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1104, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1104, "caveat-isolation"]], "Databases": [[1105, "databases"]], "DBAPI 2: PostgreSQL": [[1106, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1106, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1107, "dbapi-2-sqlite3"]], "SQLite3": [[1107, "sqlite3"]], "SQLite3 Connection": [[1107, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1107, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1107, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1107, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1107, "sqlite3-bind-parameters"]], "ASCII": [[1108, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1108, "iso-latin-1-iso-8859-1"]], "And Python?": [[1108, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1108, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1108, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1108, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1108, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1108, "and-jorg-2"]], "Enter UTF-8": [[1108, "enter-utf-8"]], "Boundary Code": [[1108, "boundary-code"]], "Ah Yes: decode()": [[1108, "ah-yes-decode"]], "And Source Encoding?": [[1108, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1109, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1110, "the-import-statement-incomplete"]], "Server/Broker": [[1111, "server-broker"]], "Client": [[1111, "client"]], "Starting the Service": [[1111, "starting-the-service"]], "Publishing a Message in Python": [[1111, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1111, "subscribing-a-topic-in-python"]], "Message Payload?": [[1111, "message-payload"]], "Pandas: Adding Rows": [[1112, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1112, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1112, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1112, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1113, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1113, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1113, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1113, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1113, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1113, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1113, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1114, "pandas-filters"]], "Basic Filter Example": [[1114, "basic-filter-example"]], "Filter? Bitmap!": [[1114, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1114, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1114, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1114, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1114, "negation"]], "Neat Helpers": [[1114, "neat-helpers"]], "Random Material": [[1115, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1116, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1116, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1116, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1116, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1116, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1117, "pandas-indexes"]], "Default Index: Row Number": [[1117, "default-index-row-number"]], "Setting Custom Index": [[1117, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1117, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1117, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1117, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1117, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1118, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1118, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1118, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1118, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1118, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1119, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1119, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1119, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1119, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1119, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1119, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1120, "xml-elementtree-etree"]], "SAX and DOM": [[1120, "sax-and-dom"]], "ElementTree": [[1120, "elementtree"]], "A Very Simple Document": [[1120, "a-very-simple-document"]], "Text (1)": [[1120, "text-1"]], "Text (2)": [[1120, "text-2"]], "Writing XML Documents": [[1120, "writing-xml-documents"]], "Reading XML Documents": [[1120, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1121, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1122, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1123, "python-package-index-livehacking-screenplay"]], "Invocation": [[1123, "invocation"]], "Help": [[1123, "help"]], "Most Used Subcommands": [[1123, "most-used-subcommands"]], "Subcommand Help": [[1123, "subcommand-help"]], "System vs. User": [[1123, "system-vs-user"]], "Search": [[1123, "search"]], "Python Package Index (Slideshow)": [[1124, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1124, "python-package-index-pypi"]], "Python Package Index": [[1125, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1126, "packaging-pypi-upload-link-collection"]], "PyTest": [[1127, "pytest"]], "pytest Introduction, By Example": [[1128, "pytest-introduction-by-example"]], "Sample Project Structure": [[1128, "sample-project-structure"]], "pytest: Installation, Documentation": [[1128, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1128, "and-pythonpath"]], "A Simple Test": [[1128, "a-simple-test"]], "Failing Tests": [[1128, "failing-tests"]], "A More Realistic Example": [[1128, "a-more-realistic-example"]], "Fixtures": [[1128, "fixtures"]], "Temporary Test Directory": [[1128, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1128, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1129, "the-unittest-module"]], "Simplest Example": [[1129, "simplest-example"]], "Using a Fixture": [[1129, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1129, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1129, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1129, "the-meat-of-a-test"]], "Recommendations": [[1129, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1130, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1130, "first-help"]], "Local Package Installation": [[1130, "local-package-installation"]], "Freezing an Environment": [[1130, "freezing-an-environment"]], "Destroying an Environment": [[1130, "destroying-an-environment"]], "Recreating an Environment": [[1130, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1130, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1131, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1131, "virtual-environments-links"]], "Virtual Environments": [[1132, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1134, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1135, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1135, "before-we-start"]], "Simplest Test: No Test": [[1135, "simplest-test-no-test"]], "Next Simplest: Single File": [[1135, "next-simplest-single-file"]], "Executing Tests Selectively": [[1135, "executing-tests-selectively"]], "Fatal Failure": [[1135, "fatal-failure"]], "FAIL()": [[1135, "fail"]], "ASSERT_*()": [[1135, "assert"]], "Non-Fatal Failure": [[1135, "non-fatal-failure"]], "Custom Message Output": [[1135, "custom-message-output"]], "Last Not Least: Structure": [[1135, "last-not-least-structure"]], "Test Cases and Suites": [[1135, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1136, "unittest-gtest-basics"]], "Unittest: GTest and CMake": [[1138, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1139, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1140, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1140, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1140, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1140, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1141, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1142, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1142, null]], "Buchung": [[1142, "buchung"]], "Kursgestaltung": [[1142, "kursgestaltung"]], "\u00dcbungen": [[1142, "ubungen"]], "Unterlagen & Download": [[1142, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1143, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1143, "grub-0-97"]], "Cross Systeme Bauen": [[1143, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1143, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1143, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1144, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1144, "zielpublikum"], [1146, "zielpublikum"], [1147, "zielpublikum"], [1152, "zielpublikum"], [1154, "zielpublikum"], [1159, "zielpublikum"], [1160, "zielpublikum"], [1166, "zielpublikum"]], "Kursinhalt": [[1144, "kursinhalt"], [1146, "kursinhalt"], [1147, "kursinhalt"], [1152, "kursinhalt"], [1154, "kursinhalt"], [1155, "kursinhalt"], [1159, "kursinhalt"], [1160, "kursinhalt"], [1161, "kursinhalt"], [1162, "kursinhalt"], [1164, "kursinhalt"], [1165, "kursinhalt"], [1166, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1144, "empfohlene-vorkenntnisse"], [1146, "empfohlene-vorkenntnisse"], [1147, "empfohlene-vorkenntnisse"], [1152, "empfohlene-vorkenntnisse"], [1154, "empfohlene-vorkenntnisse"], [1155, "empfohlene-vorkenntnisse"], [1159, "empfohlene-vorkenntnisse"], [1160, "empfohlene-vorkenntnisse"], [1161, "empfohlene-vorkenntnisse"], [1162, "empfohlene-vorkenntnisse"], [1164, "empfohlene-vorkenntnisse"], [1165, "empfohlene-vorkenntnisse"], [1166, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1145, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1146, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1147, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1148, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1149, "c-and-c-programming"]], "CMake": [[1150, "cmake"]], "The Course": [[1150, null]], "Target Audience": [[1150, "target-audience"]], "Recommended Prior Knowledge": [[1150, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1151, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1152, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1153, "linux-kernel-driver-development"], [774, "linux-kernel-driver-development"]], "Course Contents": [[1153, "course-contents"]], "Sample Project": [[1153, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1154, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1155, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1158, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1159, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1160, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1161, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1162, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1164, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1165, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1166, "unittesting-and-test-driven-development"]], "Lvalues, Rvalues, And Moving": [[668, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[668, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[668, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[668, "move-semantics-wish-list"]], "Theory: Lvalues": [[668, "theory-lvalues"]], "Theory: Rvalues": [[668, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[668, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[668, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[668, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[668, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[668, "enter-move-constructor-and-move-assignment"]], "Rules": [[668, null]], "Day 1: Introduction: C++, A New Language": [[311, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[311, "pythonicity"]], "New OO Features": [[311, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[311, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[311, "classic-polymorphism-interfaces"]], "Move Semantics": [[311, "move-semantics"]], "Day 3: All The Rest": [[311, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[311, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[311, "moving-roundup"]], "Containers And Algorithms": [[311, "containers-and-algorithms"]], "And Embedded?": [[311, "and-embedded"]], "Still Untold": [[311, "still-untold"]], "An IoT Boiling Pot (The Beginning)": [[115, "an-iot-boiling-pot-the-beginning"]], "2023-12-14": [[115, "id2"], [117, "id2"], [123, "id2"]], "Boiling Pot: Display, And Status Reporting": [[116, "boiling-pot-display-and-status-reporting"]], "Data Logger": [[117, "data-logger"]], "Display Interface/Infrastructure": [[120, "display-interface-infrastructure"]], "Temperature Display: LED Via A PWM Controller": [[123, "temperature-display-led-via-a-pwm-controller"]], "Types, Operators, Expressions": [[383, "types-operators-expressions"]], "Program Flow": [[392, "program-flow"]], "Functions and Program Structure": [[399, "functions-and-program-structure"]], "Structures": [[409, "structures"]], "Memory": [[412, "memory"]], "Program Sanity": [[425, "program-sanity"]], "Performance": [[429, "performance"]], "Profiling": [[434, "profiling"]], "C++: Miscellaneous Live-Hacking": [[555, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[578, "functions-and-methods"]], "C++ Template Basics": [[584, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[625, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[634, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[720, "functions-functions"]], "std::vector<>: Allocators (Very Incomplete)": [[733, "std-vector-allocators-very-incomplete"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[735, "embedded-problems-code-bloat-type-erasure-solutions"]], "Type Erasure (Was: Eliminating virtual)": [[735, "type-erasure-was-eliminating-virtual"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[737, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "CRTP": [[737, "crtp"]], "Why Replace virtual?": [[742, "why-replace-virtual"]], "Topics and Dependencies": [[774, "topics-and-dependencies"]], "POSIX Threads": [[948, "posix-threads"]], "Python: The Language Fundamentals": [[1018, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1133, "unit-testing-with-googletest"]], "Screenplay: Unittest: GTest and CMake": [[1137, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1137, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1137, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1137, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1137, "tests-that-are-expected-to-fail"]], "WS2023/24: Group Project - Tasks": [[121, "ws2023-24-group-project-tasks"]], "WS2023/24": [[126, "ws2023-24"]], "2023-10-05 (6 VO)": [[126, "vo"]], "OO: Recap": [[126, "oo-recap"]], "Plan \ud83d\udcaa": [[126, "plan-muscle"]], "OO: Polymorphism": [[126, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[126, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[126, "tasks-first-round"]], "2023-11-03 (6 VO)": [[126, "id1"]], "Organizational": [[126, "organizational"]], "OO: Design?": [[126, "oo-design"]], "Hardware Overview": [[126, "hardware-overview"]], "2023-11-09 (3 VO)": [[126, "id2"]], "2023-11-10 (3 VO)": [[126, "id4"]], "2023-11-17 (3 VO)": [[126, "id6"]], "OO, And Software Development At Large": [[126, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[126, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[126, "id8"]], "Container Templates (std::map)": [[126, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[126, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[126, "datalogger-pull-request"]], "Boiling Pot, Switches": [[126, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[126, "id10"]], "Renames": [[126, "renames"]], "2023-12-14 (6 VO)": [[126, "id12"]], "Status": [[126, "status"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[63, "setup-before-presentation"]], "Greeting": [[63, "greeting"]], "Multiple Background Threads": [[63, "multiple-background-threads"]], "Enter asyncio": [[63, "enter-asyncio"]], "Character Device Based GPIO": [[63, "character-device-based-gpio"]], "GPIO Device": [[63, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[63, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[63, "entire-matrix-on-off"]], "Bringing All Together": [[63, "bringing-all-together"]], "Modularize": [[63, "modularize"]], "Play A Bit: Blink Entire Rows": [[63, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[63, "coroutines"]], "Not Enough: sequence()": [[63, "not-enough-sequence"]], "Looping: forever()": [[63, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[63, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[63, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[63, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[63, "program-finally"]], "Playground: cycle()": [[63, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[63, "fast-forward-any-and-cancellation"]], "Playground: on()": [[63, "playground-on"]], "Goodbye": [[63, "goodbye"]]}, "indexentries": {}})