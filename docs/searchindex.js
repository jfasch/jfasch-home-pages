Search.setIndex({"docnames": ["about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/script", "about/site/work-in-progress/blink/glt2024/slides", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/donau", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/2024-10-08/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/2024-10-23/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/material", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/adc", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/display-ssd1305", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/display-waveshare", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/gyroscope-bno055", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/motor-control-btn9960lv", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/proximity-vl53l1x", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/servo-motor", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus", "about/site/work-in-progress/fh-joanneum/dtle/hysteresis", "about/site/work-in-progress/fh-joanneum/dtle/index", "about/site/work-in-progress/fh-joanneum/dtle/material", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/playground/gaphor/index", "about/site/work-in-progress/playground/hochkoenig/index", "about/site/work-in-progress/playground/index", "about/site/work-in-progress/playground/sphinx", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/refactoring-homepage", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/yocto/index", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/booking", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2024-03-11--Linux-Basics/agenda", "trainings/log/detail/2024-03-11--Linux-Basics/index", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index", "trainings/log/detail/2024-06-03--C++/agenda", "trainings/log/detail/2024-06-03--C++/index", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda", "trainings/log/detail/2024-06-11--CMake-Advanced/index", "trainings/log/detail/2024-06-18--CMake-Basics/index", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda", "trainings/log/detail/2024-07-01--CMake-Advanced/index", "trainings/log/detail/2024-09-30--C++/agenda", "trainings/log/detail/2024-09-30--C++/index", "trainings/log/detail/2024-11-19--C++-One-Day/agenda", "trainings/log/detail/2024-11-19--C++-One-Day/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/advanced/code-generators/screenplay", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic", "trainings/material/soup/cmake/advanced/configure-file/topic", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph", "trainings/material/soup/cmake/advanced/external-dependencies/topic", "trainings/material/soup/cmake/advanced/group", "trainings/material/soup/cmake/advanced/language/basics/topic", "trainings/material/soup/cmake/advanced/language/datatypes/topic", "trainings/material/soup/cmake/advanced/language/file-etc/topic", "trainings/material/soup/cmake/advanced/language/foreach/topic", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic", "trainings/material/soup/cmake/advanced/language/group", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic", "trainings/material/soup/cmake/advanced/language/scripts/topic", "trainings/material/soup/cmake/advanced/language/variables/topic", "trainings/material/soup/cmake/advanced/language/while/topic", "trainings/material/soup/cmake/advanced/library-function/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir", "trainings/material/soup/cmake/advanced/targets-properties/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/topic", "trainings/material/soup/cmake/advanced/testing/topic", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/intro/basics", "trainings/material/soup/cmake/intro/cxx-and-rants", "trainings/material/soup/cmake/intro/group", "trainings/material/soup/cmake/intro/installation", "trainings/material/soup/cmake/intro/libraries", "trainings/material/soup/cmake/intro/shared-libraries", "trainings/material/soup/cmake/intro/structure", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/any", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/virtual-vs-nonvirtual", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/shell/special-paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/mmap/basics", "trainings/material/soup/linux/sysprog/mmap/group", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-questions", "trainings/material/soup/linux/toolchain/exercises/fh-solutions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/asyncio/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/design-patterns/design-patterns", "trainings/repertoire/c-like/index", "trainings/repertoire/linux-prog/bash", "trainings/repertoire/linux-prog/embedded/embedded", "trainings/repertoire/linux-prog/embedded/index", "trainings/repertoire/linux-prog/embedded/raspi-hands-on", "trainings/repertoire/linux-prog/index", "trainings/repertoire/linux-prog/kernel-programming-basics", "trainings/repertoire/linux-prog/linux-basics", "trainings/repertoire/linux-prog/sysprog/advanced", "trainings/repertoire/linux-prog/sysprog/basics", "trainings/repertoire/linux-prog/sysprog/index", "trainings/repertoire/linux-prog/sysprog/multithreading", "trainings/repertoire/linux-prog/sysprog/network", "trainings/repertoire/misc/cmake", "trainings/repertoire/misc/index", "trainings/repertoire/misc/make", "trainings/repertoire/misc/unittests", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/index", "trainings/repertoire/python/misc", "trainings/repertoire/python/swdev", "trainings/template"], "filenames": ["about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/script.rst", "about/site/work-in-progress/blink/glt2024/slides.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/donau.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/2024-10-08/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/2024-10-23/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/adc.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/display-ssd1305.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/display-waveshare.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/gyroscope-bno055.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/motor-control-btn9960lv.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/proximity-vl53l1x.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/project/servo-motor.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus.rst", "about/site/work-in-progress/fh-joanneum/dtle/hysteresis.rst", "about/site/work-in-progress/fh-joanneum/dtle/index.rst", "about/site/work-in-progress/fh-joanneum/dtle/material.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/playground/gaphor/index.rst", "about/site/work-in-progress/playground/hochkoenig/index.rst", "about/site/work-in-progress/playground/index.rst", "about/site/work-in-progress/playground/sphinx.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/refactoring-homepage.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/yocto/index.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/booking.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2024-03-11--Linux-Basics/agenda.rst", "trainings/log/detail/2024-03-11--Linux-Basics/index.rst", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index.rst", "trainings/log/detail/2024-06-03--C++/agenda.rst", "trainings/log/detail/2024-06-03--C++/index.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/index.rst", "trainings/log/detail/2024-06-18--CMake-Basics/index.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/index.rst", "trainings/log/detail/2024-09-30--C++/agenda.rst", "trainings/log/detail/2024-09-30--C++/index.rst", "trainings/log/detail/2024-11-19--C++-One-Day/agenda.rst", "trainings/log/detail/2024-11-19--C++-One-Day/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/advanced/code-generators/screenplay.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic.rst", "trainings/material/soup/cmake/advanced/configure-file/topic.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph.rst", "trainings/material/soup/cmake/advanced/external-dependencies/topic.rst", "trainings/material/soup/cmake/advanced/group.rst", "trainings/material/soup/cmake/advanced/language/basics/topic.rst", "trainings/material/soup/cmake/advanced/language/datatypes/topic.rst", "trainings/material/soup/cmake/advanced/language/file-etc/topic.rst", "trainings/material/soup/cmake/advanced/language/foreach/topic.rst", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic.rst", "trainings/material/soup/cmake/advanced/language/group.rst", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic.rst", "trainings/material/soup/cmake/advanced/language/scripts/topic.rst", "trainings/material/soup/cmake/advanced/language/variables/topic.rst", "trainings/material/soup/cmake/advanced/language/while/topic.rst", "trainings/material/soup/cmake/advanced/library-function/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir.rst", "trainings/material/soup/cmake/advanced/targets-properties/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/topic.rst", "trainings/material/soup/cmake/advanced/testing/topic.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/intro/basics.rst", "trainings/material/soup/cmake/intro/cxx-and-rants.rst", "trainings/material/soup/cmake/intro/group.rst", "trainings/material/soup/cmake/intro/installation.rst", "trainings/material/soup/cmake/intro/libraries.rst", "trainings/material/soup/cmake/intro/shared-libraries.rst", "trainings/material/soup/cmake/intro/structure.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/any.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/virtual-vs-nonvirtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/shell/special-paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/mmap/basics.rst", "trainings/material/soup/linux/sysprog/mmap/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-questions.rst", "trainings/material/soup/linux/toolchain/exercises/fh-solutions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/asyncio/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/design-patterns/design-patterns.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/linux-prog/bash.rst", "trainings/repertoire/linux-prog/embedded/embedded.rst", "trainings/repertoire/linux-prog/embedded/index.rst", "trainings/repertoire/linux-prog/embedded/raspi-hands-on.rst", "trainings/repertoire/linux-prog/index.rst", "trainings/repertoire/linux-prog/kernel-programming-basics.rst", "trainings/repertoire/linux-prog/linux-basics.rst", "trainings/repertoire/linux-prog/sysprog/advanced.rst", "trainings/repertoire/linux-prog/sysprog/basics.rst", "trainings/repertoire/linux-prog/sysprog/index.rst", "trainings/repertoire/linux-prog/sysprog/multithreading.rst", "trainings/repertoire/linux-prog/sysprog/network.rst", "trainings/repertoire/misc/cmake.rst", "trainings/repertoire/misc/index.rst", "trainings/repertoire/misc/make.rst", "trainings/repertoire/misc/unittests.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/index.rst", "trainings/repertoire/python/misc.rst", "trainings/repertoire/python/swdev.rst", "trainings/template.rst"], "titles": ["Curriculum Vitae", "Myself: Contact, Impressum, \u2026", "Projekte", "Skills", "This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking", "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking", "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking", "Submission: Python, asyncio, libgpiod, and Pointless Blinking", "Pointless Blinking", "Kajak Auf Der Donau", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Gl\u00fchwein Trinken?", "2024-03-04(6): Introduction", "2024-03-21(6): OS Concepts, Shell, SSH", "2024-04-14(6): SSH, Permissions (Incl. Exercise)", "2024-04-17(6): Toolchain, Makefiles, CMake", "2024-04-22(6): CMake, Systems Programming/File-IO, Homework", "Exercise: Reading A Sensor (Driven By Tests)", "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development", "2024-05-13(3): Homework Recap, Cross Development Intro", "2024-05-27(6): Cross Development, Toolchain Installation", "2024-06-17(6): Container Templates", "2024-06-19(6): Sorting And Searching", "2024-06-20(3): Lab Exercise", "SS2024: Exam 2024-06-28 (Handout)", "2024-06-28: Written Exam", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "2024-10-08(6): Project/Peripherals/Cross", "2024-10-23(6): Project: Linux I2C/PWM/SPI", "Embedded Computing 2 (STECE-2022): Winter", "Embedded Computing 2 (STECE-2022): Material", "ADC", "Display: SSD1305 OLED 2,23", "WAVESHARE LCD Display (ST7789)", "Gyroscope (BNO055)", "Project Plan (Yay)", "Motor Control: BTN9960LV", "Proximity Sensor: VL53L1X", "Motor Control: Servo Motor", "Embedded Computing 2 (STECE-2022): Syllabus", "Exam: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis</span></code>", "Design Tools And Laboratory Engineering (2024)", "Design Tools And Laboratory Engineering (2024)", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Gaphor", "Hochk\u00f6nig", "Playground", "Sphinx", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Refactoring The Homepage", "Creating Screencasts", "SEO", "Yocto", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux Courses: OS And Programming", "How To Book", "Courses Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Agenda: Linux Basics (2024-03-11 - 2024-03-13)", "Linux Basics (2024-03-11 - 2024-03-13)", "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)", "Agenda: C++: A Thorough Overview (2024-06-03)", "C++: A Thorough Overview (2024-06-03)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-06-11)", "CMake: An Introduction (2024-06-18)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-07-01)", "C++: A Wild Ride (2024-09-30 - 2024-10-04)", "C++: An Embedded Wild Ride (2024-09-30 - 2024-10-04)", "Agenda: C++: A One-Day Overview (Date Yet Unknown)", "C++: A One-Day Overview (Date Yet Unknown)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Log Of Past Courses", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Screenplay: Generated Code (<code class=\"docutils literal notranslate\"><span class=\"pre\">add_custom_command()</span></code>)", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "\u201cConfigured\u201d Header Files", "Screenplay: Integrating <code class=\"docutils literal notranslate\"><span class=\"pre\">libmosquitto</span></code> (MQTT - Handwritten Find-Module)", "Screenplay: Adding <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> External Dependency", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">configure_file()</span></code>)", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">target_compile_definitions()</span></code>)", "External Dependencies", "CMake: Advanced Topics", "Language Basics", "Datatypes", "Filesystem Interaction, Pathname Manipulation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">foreach</span></code> Loops", "Functions And Macros", "The Language", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>, And Conditions", "Scripts", "Variables", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Screenplay: Function Wrapping <code class=\"docutils literal notranslate\"><span class=\"pre\">add_library()</span></code>", "Why Noy Use <code class=\"docutils literal notranslate\"><span class=\"pre\">include_directories()</span></code> For That", "Screenplay: Public And Private Include Directories", "Targets, Properties, And More", "Running Tests", "CMake", "Basics: Boilerplate, And Executables", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "CMake: Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Parse A Line From <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "A Better <code class=\"docutils literal notranslate\"><span class=\"pre\">void*</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::any</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Replacing <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code> With <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant&lt;&gt;</span></code> (In Real Life)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Slide Material", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "Quiz: Linux Basics", "Quiz: Linux Basics (Solution)", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "Special Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmap</span></code>: File Mappings, Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmap</span></code>", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "Quiz: Toolchain", "Quiz: Toolchain (Solutions)", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "C: Introduction", "C: Advanced Topics", "C++: Introduction", "An Introduction to Modern C++, In Three Days", "Design Patterns For C++ Developers", "C and C++ Programming", "Shell Scripting/Bourne Again Shell (Bash)", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Embedded Linux Programming", "A Week with the Raspberry Pi", "Linux, And Programming", "Linux Kernel Driver Development", "Linux Basics: A Gentle Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming: Introduction", "Linux Systems Programming (Course Series)", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "CMake: A Dirty But Powerful Build Tool", "Miscellaneous", "GNU Make: The Mother of All Build Tools", "Unittesting and Test Driven Development", "Python: More Language Features", "Python: The Language Fundamentals", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python: Miscellaneous Topics", "Python: Project/Package Management", "Python: The Language Fundamentals"], "terms": {"geboren": [0, 11], "am": [0, 2, 20, 25, 49, 51, 54, 98, 170, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 221, 233, 242, 278, 282, 309, 351, 363, 654, 792, 887, 927, 977, 982, 995, 1004, 1006, 1021, 1134, 1238], "19": [0, 11, 53, 115, 151, 200, 202, 210, 211, 212, 221, 227, 230, 232, 237, 239, 241, 242, 245, 248, 253, 254, 258, 261, 264, 265, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 391, 392, 393, 395, 403, 406, 415, 482, 506, 538, 802, 838, 948, 970, 995, 1078, 1110, 1116, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1195, 1196, 1200, 1208, 1219, 1224, 1226, 1262], "6": [0, 20, 48, 50, 100, 113, 151, 156, 173, 191, 193, 201, 206, 209, 210, 211, 212, 222, 227, 229, 234, 237, 239, 240, 242, 245, 248, 249, 250, 252, 255, 257, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 288, 290, 299, 302, 306, 309, 313, 319, 323, 329, 337, 341, 345, 351, 357, 363, 367, 373, 390, 391, 393, 394, 398, 421, 422, 444, 481, 487, 498, 563, 564, 603, 604, 605, 606, 618, 637, 644, 646, 649, 652, 653, 655, 657, 660, 661, 662, 663, 681, 682, 683, 684, 690, 721, 722, 759, 805, 818, 838, 944, 967, 970, 975, 980, 986, 988, 993, 994, 995, 1009, 1017, 1030, 1065, 1068, 1078, 1080, 1083, 1088, 1089, 1092, 1098, 1102, 1121, 1122, 1125, 1127, 1129, 1136, 1146, 1152, 1169, 1176, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1195, 1196, 1200, 1204, 1219, 1224, 1225, 1226, 1231], "1966": [0, 11, 230, 264, 274, 284, 287, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1200], "graz": [0, 1, 2, 11, 49, 51, 55, 171, 230, 248, 307, 340, 343, 415, 506, 914, 915, 954, 960, 1262], "diplom": [0, 11], "au": [0, 11, 20, 57, 152, 165, 198, 199, 206, 207, 208, 212, 222, 233, 245, 252, 271, 277, 278, 292, 329, 345, 393, 398, 399, 416, 1238, 1239, 1240], "technisch": [0, 11, 416], "mathematik": [0, 11], "an": [0, 2, 4, 9, 11, 16, 19, 26, 28, 31, 33, 34, 36, 42, 43, 45, 46, 49, 51, 55, 57, 60, 64, 65, 69, 73, 74, 76, 83, 98, 99, 101, 102, 105, 109, 112, 115, 120, 123, 128, 131, 132, 133, 141, 148, 154, 180, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 221, 222, 225, 227, 228, 229, 232, 240, 241, 245, 246, 248, 249, 250, 251, 253, 256, 258, 261, 262, 265, 266, 267, 269, 272, 274, 275, 277, 281, 287, 289, 290, 294, 296, 298, 305, 308, 311, 313, 314, 315, 316, 318, 322, 323, 333, 336, 340, 344, 351, 353, 362, 367, 372, 373, 374, 377, 384, 385, 409, 415, 420, 422, 426, 429, 430, 443, 452, 460, 464, 467, 470, 471, 482, 485, 486, 487, 488, 490, 493, 500, 504, 506, 513, 516, 519, 520, 524, 526, 531, 538, 542, 543, 544, 547, 548, 552, 553, 554, 563, 564, 566, 567, 568, 569, 585, 587, 591, 596, 598, 600, 601, 604, 605, 606, 618, 620, 644, 645, 647, 649, 652, 653, 657, 659, 660, 661, 662, 663, 676, 681, 694, 697, 700, 701, 706, 712, 715, 716, 721, 723, 725, 729, 733, 735, 736, 737, 738, 742, 743, 746, 750, 754, 763, 769, 782, 784, 792, 794, 801, 802, 804, 805, 806, 812, 823, 824, 838, 839, 840, 846, 851, 853, 856, 858, 865, 887, 895, 900, 913, 914, 915, 919, 920, 921, 925, 933, 942, 947, 948, 951, 954, 974, 976, 986, 993, 995, 997, 998, 1003, 1006, 1011, 1012, 1013, 1014, 1016, 1020, 1021, 1022, 1023, 1027, 1029, 1030, 1038, 1044, 1046, 1047, 1050, 1051, 1052, 1053, 1059, 1063, 1065, 1066, 1071, 1072, 1076, 1081, 1082, 1085, 1086, 1089, 1095, 1096, 1097, 1101, 1102, 1106, 1107, 1109, 1111, 1112, 1117, 1118, 1119, 1121, 1125, 1131, 1140, 1141, 1142, 1146, 1148, 1161, 1167, 1168, 1169, 1185, 1191, 1193, 1195, 1196, 1197, 1198, 1203, 1204, 1207, 1212, 1213, 1217, 1219, 1224, 1225, 1227, 1236, 1238, 1239, 1240, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1255, 1258, 1259, 1260, 1261], "der": [0, 2, 171, 174, 198, 199, 200, 206, 207, 208, 209, 212, 214, 216, 222, 224, 233, 234, 235, 238, 239, 242, 243, 245, 248, 252, 268, 269, 271, 277, 280, 281, 284, 292, 341, 367, 390, 398, 403, 1238, 1239, 1240, 1247, 1258, 1259], "tu": [0, 11], "iicm": [0, 11], "1993": [0, 11], "universit\u00e4tsassist": [0, 11], "ebendort": [0, 11], "bi": [0, 2, 11, 20, 57, 198, 199, 222, 232, 329, 357], "1998": [0, 2, 11, 201, 208, 264, 643], "vorlesungen": 0, "programmieren": [0, 152, 165, 208, 212, 399, 415, 1240, 1247, 1258, 1259], "basi": [0, 2, 12, 69, 213, 221, 242, 251, 265, 277, 311, 371, 393, 467, 1242, 1253], "c": [0, 2, 3, 9, 11, 26, 30, 31, 50, 54, 63, 64, 65, 69, 76, 78, 97, 100, 114, 123, 133, 138, 139, 148, 152, 163, 165, 166, 177, 185, 187, 188, 189, 190, 191, 192, 193, 196, 203, 207, 209, 217, 218, 222, 227, 228, 234, 237, 239, 244, 245, 248, 249, 258, 261, 262, 264, 268, 269, 271, 274, 277, 281, 284, 289, 290, 299, 302, 309, 315, 319, 323, 329, 332, 340, 341, 345, 348, 351, 357, 363, 367, 374, 376, 377, 378, 384, 393, 397, 399, 400, 405, 411, 412, 415, 417, 418, 419, 420, 422, 426, 428, 430, 431, 432, 435, 438, 440, 442, 443, 444, 446, 450, 454, 455, 458, 459, 460, 461, 462, 466, 468, 470, 471, 472, 476, 477, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 501, 510, 512, 513, 516, 517, 518, 519, 522, 523, 524, 526, 533, 534, 536, 537, 538, 539, 540, 543, 544, 546, 547, 552, 556, 562, 564, 567, 573, 585, 588, 591, 592, 593, 594, 595, 597, 598, 600, 601, 603, 609, 643, 645, 647, 648, 649, 650, 654, 655, 659, 660, 662, 664, 667, 672, 677, 679, 680, 684, 686, 690, 692, 694, 696, 697, 698, 699, 702, 704, 705, 706, 708, 709, 711, 712, 713, 714, 716, 719, 720, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 744, 750, 751, 755, 756, 757, 758, 759, 763, 769, 770, 781, 782, 783, 785, 786, 787, 788, 789, 790, 793, 794, 795, 796, 798, 799, 801, 802, 804, 805, 806, 807, 808, 810, 815, 816, 820, 821, 822, 823, 824, 827, 837, 838, 840, 841, 843, 846, 850, 851, 855, 856, 860, 862, 865, 867, 877, 887, 889, 890, 895, 903, 906, 911, 913, 919, 925, 927, 930, 945, 948, 970, 977, 980, 986, 987, 993, 994, 995, 1007, 1011, 1012, 1013, 1016, 1018, 1019, 1020, 1021, 1022, 1033, 1036, 1041, 1049, 1052, 1054, 1055, 1058, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1074, 1076, 1078, 1082, 1083, 1084, 1085, 1087, 1088, 1112, 1120, 1121, 1129, 1130, 1134, 1140, 1148, 1202, 1203, 1207, 1225, 1226, 1233, 1236, 1245, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259], "und": [0, 2, 3, 25, 57, 152, 165, 198, 199, 207, 208, 212, 214, 216, 224, 228, 234, 238, 240, 242, 247, 249, 253, 258, 269, 273, 274, 279, 281, 285, 291, 292, 309, 319, 329, 345, 358, 368, 393, 394, 398, 403, 415, 452, 460, 928, 976, 977, 996, 1238, 1239, 1240, 1247, 1258, 1259], "\u00fcbertragungsprotokol": 0, "forschungst\u00e4tigkeit": 0, "volltextsuch": 0, "hyperwav": [0, 2, 11], "2001": [0, 2, 11, 258, 264, 274, 277, 302], "leitung": 0, "serverprogrammierung": 0, "oo": [0, 31, 63, 64, 65, 69, 97, 115, 144, 225, 238, 240, 249, 268, 276, 279, 305, 309, 315, 317, 318, 322, 381, 402, 411, 412, 506, 548, 590, 642, 643, 650, 712, 713, 716, 718, 719, 742, 806, 840, 879, 889, 1105, 1241, 1242, 1260], "design": [0, 2, 8, 11, 41, 45, 65, 69, 71, 73, 76, 97, 169, 185, 190, 203, 205, 225, 251, 252, 268, 314, 316, 371, 373, 380, 406, 415, 443, 473, 493, 494, 497, 505, 508, 541, 542, 543, 544, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 598, 600, 642, 643, 649, 651, 666, 739, 788, 801, 805, 806, 808, 824, 838, 839, 840, 841, 994, 1065, 1186, 1225, 1240, 1241, 1243, 1256, 1259], "analys": [0, 2, 1238], "ration": [0, 2, 26, 196], "rose": [0, 2, 20], "f\u00fcr": [0, 2, 152, 165, 174, 198, 199, 207, 209, 212, 233, 234, 245, 292, 306, 398, 403, 415, 950, 1238, 1247], "java": [0, 232, 233, 244, 256, 265, 357, 702, 715, 801, 806, 813, 1102, 1115, 1121, 1130, 1259], "releasemanag": [0, 2, 11], "cv": [0, 2, 11, 20, 259], "subvers": [0, 2, 970], "systemnah": [0, 2, 11, 187, 1055, 1058, 1062], "programmierung": [0, 2, 3, 11, 203, 256, 283, 292, 415, 1238, 1240, 1247], "unter": [0, 2, 11, 152, 165, 174, 199, 206, 207, 224, 232, 399, 977, 1240, 1247, 1258], "unix": [0, 63, 64, 65, 69, 88, 114, 152, 165, 188, 190, 218, 241, 305, 384, 398, 399, 400, 411, 412, 416, 432, 486, 552, 725, 726, 817, 838, 840, 844, 846, 879, 912, 913, 914, 930, 932, 944, 972, 976, 982, 986, 989, 994, 1006, 1033, 1049, 1059, 1116, 1140, 1169, 1239, 1244, 1245, 1247, 1248, 1251, 1252, 1253, 1255, 1256, 1258], "window": [0, 2, 20, 88, 89, 94, 95, 115, 136, 138, 173, 180, 190, 195, 197, 206, 208, 221, 229, 246, 260, 262, 264, 275, 278, 289, 294, 296, 298, 304, 305, 317, 333, 339, 370, 375, 378, 384, 395, 398, 401, 403, 416, 427, 494, 808, 811, 840, 917, 922, 948, 985, 1015, 1033, 1038, 1114, 1116, 1117, 1140, 1191, 1226], "nt": 0, "salomon": [0, 2, 11], "friesach": [0, 2, 11], "bei": [0, 2, 11, 57, 198, 199, 207, 212, 216, 222, 224, 233, 234, 237, 239, 277, 292, 390, 415, 1051], "2006": [0, 2, 11, 264], "magicdraw": 0, "datenbankdesign": [0, 2], "einer": [0, 2, 152, 165, 198, 199, 208, 216, 222, 224, 233, 234, 239, 246, 393, 415, 977, 1051, 1240, 1247], "objektrelationalen": [0, 2], "datenbankschnittstel": [0, 2], "sp\u00e4ter": [0, 198, 207, 278, 1238], "softwarearchitekt": 0, "leiter": [0, 11], "abteilung": [0, 233], "forschung": 0, "entwicklung": [0, 2, 3, 152, 165, 399], "atron": [0, 2, 11], "unterpremst\u00e4tten": [0, 2, 11], "2010": [0, 2, 11, 202, 264, 1115], "enterpris": 0, "architect": [0, 508, 1245], "softwarearchitektur": [0, 2, 11], "versionsmanag": 0, "ibm": 0, "clearcas": [0, 196], "massgeblich": 0, "portierung": [0, 2, 3], "spielautomatensoftwar": 0, "von": [0, 2, 3, 57, 152, 165, 170, 174, 198, 199, 206, 207, 216, 224, 228, 233, 234, 237, 240, 242, 243, 245, 254, 271, 278, 283, 290, 299, 306, 341, 357, 363, 368, 379, 398, 399, 403, 415, 912, 976, 977, 1238, 1239, 1240, 1247], "enea": [0, 2, 190], "os": [0, 2, 190], "nach": [0, 2, 3, 57, 152, 161, 165, 198, 199, 208, 212, 216, 232, 233, 239, 277, 278, 284, 363, 416, 909], "linux": [0, 2, 3, 12, 25, 27, 31, 48, 49, 50, 51, 55, 63, 64, 65, 69, 75, 76, 77, 78, 89, 94, 95, 97, 114, 117, 133, 136, 140, 152, 156, 161, 163, 165, 177, 184, 187, 189, 191, 192, 193, 197, 200, 201, 202, 206, 213, 216, 221, 228, 250, 251, 258, 264, 267, 274, 277, 278, 281, 286, 289, 294, 296, 298, 307, 314, 316, 317, 333, 339, 353, 357, 374, 375, 377, 378, 380, 384, 395, 397, 398, 399, 400, 404, 405, 411, 412, 415, 458, 480, 488, 497, 500, 507, 526, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 628, 642, 809, 815, 838, 839, 840, 841, 843, 844, 846, 847, 849, 851, 852, 854, 856, 857, 858, 859, 860, 861, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 891, 892, 893, 896, 897, 898, 901, 902, 904, 905, 907, 908, 910, 912, 913, 914, 915, 922, 924, 926, 929, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 977, 979, 982, 986, 988, 989, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1021, 1023, 1024, 1027, 1028, 1029, 1030, 1032, 1034, 1042, 1045, 1048, 1050, 1055, 1058, 1059, 1062, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1114, 1116, 1179, 1204, 1224, 1227, 1238, 1239, 1240, 1244, 1245, 1247, 1256, 1258, 1264], "beteiligt": [0, 11], "seit": [0, 11, 216, 222, 232, 237], "april": [0, 2, 11], "selbstst\u00e4ndig": [0, 11], "fh": [0, 11, 88, 97, 100, 101, 102, 114, 115, 132, 133, 136, 137, 141, 144, 151, 156, 168, 171, 195, 241, 370, 395, 397, 398, 403, 404, 406, 590, 601, 622, 642, 650, 664, 724, 739, 840, 917, 937, 943, 962, 968, 985, 1233], "joanneum": [0, 168, 171, 195, 1233], "kapfenberg": 0, "2011": [0, 2, 202, 314, 316, 379, 380, 415, 418, 643, 742], "2015": [0, 11, 249, 275, 313, 344, 415, 749, 1191], "lehrveranstaltung": [0, 399], "im": [0, 2, 17, 20, 26, 81, 152, 165, 198, 199, 207, 208, 212, 216, 221, 222, 224, 225, 228, 230, 233, 234, 237, 239, 243, 245, 246, 253, 256, 259, 260, 262, 265, 272, 273, 274, 281, 283, 285, 286, 288, 301, 303, 308, 310, 311, 315, 317, 318, 321, 322, 324, 327, 328, 330, 339, 340, 342, 343, 344, 346, 349, 355, 356, 361, 362, 364, 365, 366, 368, 384, 385, 386, 387, 388, 389, 398, 403, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1196, 1204, 1205, 1226, 1239, 1247, 1259], "lehrgang": 0, "softwar": [0, 4, 11, 12, 29, 34, 35, 39, 41, 43, 44, 54, 59, 64, 65, 69, 76, 88, 95, 115, 126, 132, 139, 140, 152, 165, 185, 189, 197, 200, 201, 205, 216, 222, 228, 232, 241, 258, 264, 265, 274, 275, 277, 302, 314, 316, 317, 318, 331, 347, 372, 379, 380, 395, 416, 482, 508, 542, 543, 552, 554, 719, 806, 819, 840, 841, 871, 918, 932, 985, 986, 993, 994, 1009, 1063, 1073, 1076, 1146, 1193, 1242, 1246, 1247, 1248, 1249, 1253, 1256, 1259], "avl": [0, 11], "2018": [0, 11, 193, 264, 747], "2019": [0, 28, 169, 227, 249, 298, 322, 340, 343, 344, 415, 620, 747, 788, 970, 1191, 1193, 1262], "linuxexpert": [0, 11], "architekt": [0, 11], "build": [0, 3, 16, 28, 30, 32, 38, 54, 63, 64, 65, 69, 75, 78, 88, 95, 99, 115, 138, 141, 144, 148, 151, 152, 153, 166, 172, 182, 185, 190, 195, 196, 202, 203, 205, 216, 219, 229, 250, 267, 270, 294, 296, 298, 305, 314, 316, 319, 326, 331, 332, 347, 348, 353, 374, 376, 377, 380, 401, 404, 405, 416, 419, 460, 473, 488, 500, 507, 508, 510, 513, 514, 519, 525, 526, 537, 538, 540, 548, 562, 568, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 620, 625, 628, 642, 725, 733, 770, 790, 800, 814, 840, 844, 847, 849, 852, 854, 856, 857, 864, 866, 867, 868, 872, 878, 883, 884, 889, 891, 896, 902, 905, 908, 945, 985, 994, 995, 1016, 1019, 1020, 1021, 1022, 1038, 1057, 1061, 1065, 1071, 1072, 1073, 1076, 1077, 1081, 1128, 1139, 1146, 1219, 1224, 1230, 1234, 1241, 1243, 1245, 1252, 1257], "manag": [0, 5, 11, 17, 50, 59, 63, 64, 65, 69, 85, 88, 99, 152, 185, 188, 189, 191, 200, 203, 205, 213, 216, 218, 221, 225, 228, 229, 235, 236, 240, 245, 246, 249, 251, 261, 267, 270, 275, 277, 278, 284, 287, 302, 309, 316, 318, 319, 322, 323, 326, 344, 345, 351, 353, 354, 357, 363, 368, 370, 373, 374, 377, 401, 402, 404, 411, 412, 416, 477, 494, 505, 517, 543, 556, 614, 620, 645, 650, 739, 750, 751, 753, 782, 787, 798, 799, 801, 802, 803, 807, 815, 837, 839, 840, 858, 864, 871, 873, 896, 902, 905, 908, 918, 923, 924, 980, 985, 994, 1002, 1014, 1032, 1049, 1050, 1063, 1080, 1091, 1100, 1119, 1144, 1148, 1189, 1190, 1191, 1192, 1193, 1197, 1205, 1207, 1219, 1221, 1223, 1224, 1228, 1233, 1241, 1246, 1247, 1248, 1249, 1251, 1253, 1254, 1256, 1260, 1261, 1262, 1263, 1265], "schittstel": 0, "zum": [0, 2, 57, 152, 165, 198, 199, 207, 212, 216, 222, 232, 245, 252, 269, 329, 416, 1238, 1239, 1240, 1247], "weiser": 0, "alter": [0, 224, 225, 275, 298, 416, 646, 654, 976, 1191], "mann": 0, "2020": [0, 11, 115, 133, 136, 169, 193, 197, 198, 202, 208, 227, 229, 264, 415, 601, 602, 750, 763, 914, 915, 996, 1005, 1023, 1115, 1195, 1233, 1262], "embed": [0, 2, 3, 11, 63, 78, 95, 106, 136, 171, 185, 187, 190, 192, 203, 205, 229, 231, 254, 353, 378, 396, 401, 403, 415, 808, 819, 833, 839, 840, 875, 887, 926, 948, 995, 1006, 1049, 1065, 1093, 1134, 1238, 1239, 1242, 1244, 1247, 1248, 1250, 1251, 1253, 1256, 1258], "comput": [0, 11, 16, 17, 20, 63, 75, 78, 92, 106, 128, 168, 171, 193, 231, 281, 290, 314, 316, 340, 341, 379, 383, 396, 398, 401, 403, 415, 423, 496, 501, 502, 547, 644, 654, 656, 662, 695, 792, 805, 817, 840, 909, 916, 986, 994, 996, 997, 1004, 1033, 1047, 1050, 1115, 1204, 1219, 1245, 1249, 1261, 1265], "electron": [0, 195, 416, 994, 1245], "engin": [0, 152, 165, 169, 193, 265, 267, 333, 336, 416, 486, 490, 494, 504, 555, 588, 596, 994, 1245, 1250, 1259], "di": [1, 11, 206, 274, 506, 1180, 1182, 1186, 1188], "j\u00f6rg": [1, 11, 152, 165, 207, 241, 249, 253, 268, 271, 274, 284, 287, 302, 323, 329, 341, 344, 345, 351, 357, 363, 367, 389, 390, 392, 394, 458, 552, 725, 1087, 1090, 1128, 1153, 1180, 1181, 1182, 1183, 1186, 1187, 1188], "faschingbau": [1, 11, 25, 38, 49, 51, 55, 152, 165, 170, 189, 196, 197, 204, 222, 225, 226, 228, 229, 230, 231, 241, 248, 253, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 302, 309, 319, 323, 329, 334, 341, 344, 345, 351, 357, 363, 389, 390, 392, 395, 398, 403, 458, 489, 506, 517, 519, 524, 525, 536, 544, 551, 552, 585, 601, 656, 702, 725, 732, 733, 734, 735, 736, 737, 754, 914, 915, 923, 925, 930, 944, 960, 974, 980, 1005, 1044, 1087, 1090, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1119, 1141, 1146, 1169, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1199, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "offic": [1, 20, 195, 210], "co": [1, 20, 25, 170, 197, 204, 225, 226, 228, 229, 230, 231, 292, 309, 313, 398, 403, 504, 517, 536, 750, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1236], "43": [1, 193, 200, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 481, 494, 506, 684, 755, 805, 835, 970, 980, 993, 995, 1036, 1100], "0": [1, 9, 11, 20, 48, 50, 98, 101, 102, 105, 110, 111, 112, 113, 120, 124, 128, 132, 152, 165, 166, 172, 178, 189, 191, 192, 193, 195, 201, 208, 209, 210, 211, 212, 222, 225, 227, 229, 232, 237, 239, 240, 241, 242, 245, 248, 249, 250, 253, 254, 258, 261, 262, 264, 267, 269, 271, 274, 277, 280, 281, 284, 287, 289, 290, 292, 294, 299, 302, 305, 306, 307, 309, 313, 317, 318, 319, 323, 329, 339, 341, 345, 351, 357, 363, 367, 373, 384, 390, 391, 392, 393, 394, 395, 398, 419, 420, 422, 424, 426, 428, 429, 430, 432, 439, 440, 442, 443, 444, 452, 455, 457, 458, 464, 465, 467, 470, 485, 486, 487, 488, 490, 491, 494, 495, 498, 500, 504, 506, 508, 509, 512, 513, 514, 516, 519, 520, 524, 532, 534, 539, 543, 544, 549, 551, 554, 556, 563, 564, 566, 568, 569, 570, 571, 573, 574, 575, 578, 579, 582, 583, 584, 588, 591, 592, 596, 598, 599, 600, 601, 602, 610, 616, 617, 625, 628, 634, 637, 644, 645, 646, 648, 649, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 666, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 706, 708, 712, 713, 715, 716, 718, 719, 721, 723, 726, 731, 732, 733, 734, 735, 736, 737, 738, 742, 746, 747, 750, 753, 754, 755, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 784, 786, 787, 789, 791, 792, 794, 796, 800, 801, 803, 804, 805, 806, 811, 814, 816, 819, 823, 825, 827, 829, 831, 834, 838, 842, 845, 846, 850, 853, 865, 867, 877, 900, 901, 903, 918, 923, 925, 930, 933, 944, 945, 948, 970, 973, 974, 975, 980, 986, 988, 989, 993, 994, 995, 1004, 1006, 1009, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1038, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1058, 1059, 1062, 1063, 1065, 1066, 1068, 1078, 1081, 1082, 1084, 1086, 1088, 1089, 1092, 1094, 1098, 1100, 1102, 1115, 1118, 1119, 1120, 1121, 1125, 1127, 1129, 1132, 1134, 1135, 1136, 1140, 1142, 1145, 1146, 1148, 1151, 1152, 1153, 1158, 1160, 1169, 1179, 1186, 1188, 1194, 1195, 1196, 1203, 1204, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1219, 1224, 1226, 1231, 1236], "664": [1, 264, 933], "5783814": 1, "gpg": 1, "kei": [1, 20, 30, 88, 92, 93, 99, 115, 137, 138, 187, 189, 201, 208, 217, 222, 227, 229, 230, 232, 237, 239, 241, 244, 245, 246, 248, 253, 254, 256, 258, 259, 261, 262, 264, 269, 271, 272, 274, 277, 281, 284, 286, 287, 291, 295, 298, 299, 302, 304, 305, 309, 319, 322, 323, 325, 326, 328, 329, 341, 345, 351, 356, 358, 363, 367, 369, 370, 392, 395, 398, 403, 430, 478, 697, 699, 702, 742, 791, 840, 914, 915, 923, 981, 985, 997, 998, 999, 1001, 1006, 1090, 1094, 1103, 1121, 1122, 1138, 1148, 1158, 1159, 1181, 1183, 1191, 1199, 1212, 1213, 1219, 1241, 1250, 1251], "kiesgass": 1, "5": [1, 20, 48, 50, 54, 103, 104, 105, 111, 121, 123, 128, 152, 159, 165, 168, 184, 193, 195, 201, 210, 211, 212, 217, 220, 223, 227, 233, 234, 237, 239, 240, 242, 245, 246, 248, 249, 252, 254, 255, 256, 258, 259, 261, 262, 264, 269, 271, 272, 274, 277, 281, 284, 286, 287, 289, 290, 294, 298, 299, 302, 306, 309, 313, 319, 322, 323, 328, 329, 334, 337, 341, 345, 351, 356, 357, 363, 367, 373, 384, 390, 392, 393, 398, 403, 411, 412, 415, 420, 422, 427, 444, 446, 455, 482, 487, 491, 500, 505, 513, 519, 522, 535, 537, 543, 546, 549, 564, 572, 588, 591, 593, 598, 599, 601, 602, 603, 604, 605, 606, 618, 619, 624, 637, 644, 645, 646, 652, 655, 656, 659, 660, 662, 663, 684, 694, 721, 725, 742, 746, 749, 750, 752, 753, 759, 761, 762, 764, 779, 780, 792, 794, 801, 802, 803, 805, 818, 819, 829, 838, 860, 865, 888, 916, 918, 970, 975, 980, 986, 993, 994, 995, 1011, 1013, 1021, 1030, 1049, 1065, 1078, 1086, 1088, 1089, 1092, 1094, 1098, 1102, 1109, 1110, 1115, 1120, 1121, 1122, 1126, 1127, 1129, 1135, 1137, 1141, 1142, 1146, 1169, 1173, 1180, 1182, 1186, 1188, 1191, 1195, 1196, 1199, 1204, 1215, 1219, 1224, 1226, 1231, 1235, 1238, 1240, 1245, 1247, 1249], "8041": 1, "uid": [1, 269, 274, 277, 345, 363, 398, 403, 725, 838, 914, 915, 923, 933, 1006, 1021, 1080, 1169], "vat": [1, 233], "atu63522469": 1, "write": [1, 4, 7, 15, 17, 25, 31, 36, 41, 42, 43, 44, 45, 49, 50, 51, 55, 61, 69, 88, 105, 109, 112, 116, 120, 121, 123, 124, 126, 128, 132, 133, 136, 140, 176, 190, 191, 192, 201, 205, 209, 222, 225, 226, 228, 229, 230, 241, 246, 248, 249, 250, 251, 256, 258, 259, 262, 265, 267, 269, 275, 277, 286, 289, 296, 298, 305, 315, 322, 328, 340, 353, 371, 373, 375, 379, 384, 387, 389, 398, 400, 402, 404, 409, 424, 427, 428, 433, 445, 447, 469, 480, 484, 490, 491, 494, 504, 506, 512, 549, 552, 564, 566, 569, 580, 589, 590, 601, 602, 604, 609, 620, 626, 631, 637, 642, 644, 645, 648, 657, 659, 706, 713, 722, 725, 726, 728, 742, 747, 758, 770, 782, 791, 797, 806, 821, 827, 834, 838, 839, 840, 846, 848, 858, 860, 867, 871, 887, 903, 914, 915, 918, 925, 930, 931, 933, 934, 935, 936, 942, 944, 946, 949, 967, 980, 982, 985, 989, 993, 994, 995, 1002, 1009, 1011, 1012, 1013, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1039, 1045, 1049, 1058, 1059, 1062, 1063, 1065, 1067, 1070, 1074, 1092, 1103, 1108, 1109, 1136, 1137, 1142, 1148, 1149, 1150, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1164, 1165, 1167, 1169, 1171, 1172, 1173, 1175, 1176, 1180, 1182, 1185, 1189, 1191, 1204, 1215, 1224, 1225, 1226, 1241, 1243, 1248, 1252, 1254, 1261], "review": [1, 191, 213, 224, 318, 379, 421], "http": [1, 2, 3, 4, 8, 11, 20, 25, 27, 32, 48, 49, 51, 53, 54, 55, 57, 76, 97, 113, 115, 127, 136, 137, 141, 144, 151, 153, 154, 156, 158, 160, 162, 163, 172, 173, 178, 188, 194, 195, 196, 197, 201, 206, 208, 216, 217, 218, 219, 225, 226, 229, 230, 238, 243, 249, 251, 252, 258, 264, 265, 267, 274, 277, 281, 289, 294, 296, 305, 308, 314, 315, 316, 318, 322, 328, 332, 333, 336, 340, 342, 344, 348, 350, 354, 356, 362, 366, 371, 373, 374, 375, 376, 377, 378, 380, 382, 397, 398, 403, 417, 507, 512, 513, 514, 515, 517, 528, 530, 585, 599, 620, 661, 721, 795, 799, 804, 822, 826, 843, 858, 860, 864, 887, 888, 988, 990, 993, 1029, 1078, 1080, 1135, 1146, 1202, 1204, 1219, 1220], "g": [1, 20, 36, 50, 88, 115, 128, 133, 161, 188, 193, 197, 201, 209, 210, 212, 222, 237, 241, 250, 254, 258, 261, 264, 269, 271, 274, 277, 281, 299, 305, 313, 329, 354, 363, 370, 371, 375, 380, 419, 439, 443, 446, 449, 454, 460, 461, 462, 464, 467, 482, 486, 494, 498, 499, 506, 522, 524, 530, 531, 534, 535, 537, 540, 552, 556, 564, 585, 598, 601, 644, 648, 649, 677, 697, 715, 716, 725, 746, 750, 753, 755, 764, 784, 805, 813, 817, 823, 838, 846, 865, 887, 906, 926, 933, 948, 970, 978, 981, 988, 1006, 1015, 1025, 1047, 1049, 1051, 1062, 1063, 1065, 1066, 1067, 1068, 1080, 1085, 1087, 1089, 1097, 1109, 1111, 1112, 1130, 1135, 1136, 1200, 1204, 1215, 1226, 1231, 1242, 1248, 1250, 1251, 1254, 1261], "page": [1, 21, 27, 48, 63, 65, 69, 97, 115, 133, 141, 187, 189, 190, 192, 193, 197, 202, 226, 229, 250, 275, 305, 331, 347, 367, 405, 416, 428, 429, 432, 477, 488, 548, 585, 840, 846, 865, 871, 873, 885, 911, 914, 915, 932, 982, 986, 995, 1006, 1016, 1019, 1031, 1049, 1198], "r": [1, 4, 19, 20, 26, 31, 48, 173, 193, 195, 196, 200, 201, 208, 210, 211, 212, 221, 222, 225, 227, 228, 232, 237, 239, 242, 245, 248, 250, 254, 255, 258, 261, 264, 267, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 306, 307, 309, 319, 323, 329, 341, 345, 351, 354, 357, 363, 367, 390, 393, 398, 407, 418, 439, 464, 494, 506, 538, 547, 566, 567, 596, 600, 663, 690, 794, 802, 838, 851, 860, 865, 883, 887, 888, 918, 925, 930, 933, 944, 947, 948, 950, 970, 978, 986, 993, 994, 995, 997, 998, 1006, 1017, 1020, 1021, 1029, 1065, 1066, 1067, 1068, 1078, 1080, 1081, 1088, 1109, 1114, 1117, 1123, 1134, 1140, 1146, 1178, 1204, 1226, 1259], "ctb02zug3crheb0": 1, "curriculum": 1, "vita": 1, "skill": [1, 76, 1049, 1250], "projekt": [1, 207, 379, 1247, 1258], "stand": [2, 200, 248, 401, 887, 995, 1082, 1199], "j\u00e4nner": [2, 11], "2014": [2, 207, 228, 264, 298, 313, 322, 344, 991, 1191], "devicedriv": 2, "die": [2, 25, 33, 49, 51, 55, 57, 152, 161, 165, 174, 199, 206, 207, 208, 209, 212, 216, 222, 224, 232, 233, 235, 237, 239, 242, 243, 245, 248, 252, 261, 268, 271, 274, 277, 280, 281, 284, 309, 337, 363, 393, 398, 399, 403, 416, 570, 584, 976, 977, 1051, 1191, 1238, 1239, 1240, 1247, 1258, 1259], "pci": [2, 236, 840, 864, 865, 927, 985, 993, 1029, 1249], "hardwar": [2, 55, 60, 63, 64, 65, 69, 71, 128, 132, 141, 156, 158, 177, 181, 185, 189, 190, 193, 203, 205, 264, 265, 277, 314, 317, 318, 339, 343, 380, 384, 399, 400, 401, 416, 432, 443, 446, 482, 500, 504, 594, 595, 596, 597, 601, 817, 840, 867, 887, 918, 924, 925, 985, 986, 987, 988, 991, 994, 1010, 1012, 1013, 1026, 1029, 1063, 1242, 1246, 1247, 1248, 1249, 1250, 1253], "ein": [2, 25, 57, 152, 165, 198, 199, 206, 207, 208, 209, 212, 214, 216, 224, 228, 232, 233, 235, 237, 239, 240, 242, 243, 245, 246, 248, 252, 254, 258, 261, 262, 269, 271, 274, 277, 278, 281, 284, 292, 299, 302, 309, 319, 323, 329, 337, 341, 345, 351, 357, 367, 390, 393, 398, 403, 416, 460, 608, 913, 976, 977, 1051, 1120, 1238, 1239, 1240, 1247, 1258, 1259], "messger\u00e4teherstel": 2, "de": [2, 20, 25, 152, 162, 165, 198, 200, 206, 207, 212, 216, 222, 224, 232, 233, 242, 243, 252, 268, 277, 280, 284, 398, 415, 491, 804, 822, 826, 909, 911, 977, 990, 1216, 1238, 1240, 1247, 1259, 1262], "untenstehenden": 2, "zeit": [2, 199, 233, 351, 1238], "dato": 2, "ort": 2, "raum": [2, 212], "anbindung": 2, "verschieden": [2, 11, 222, 416, 1238, 1239, 1247], "hardwareinterfac": 2, "i2c": [2, 3, 69, 72, 76, 156, 158, 163, 177, 180, 190, 191, 216, 229, 305, 401, 404, 409, 416, 541, 571, 630, 631, 639, 840, 887, 985, 992, 994, 1029, 1245, 1247], "spi": [2, 3, 69, 156, 158, 164, 190, 207, 216, 416, 630, 631, 639, 987, 988, 989, 994, 1029, 1245, 1247], "can": [2, 17, 45, 46, 55, 59, 66, 71, 74, 99, 101, 102, 115, 116, 123, 127, 141, 148, 154, 166, 173, 186, 189, 190, 191, 192, 194, 195, 196, 197, 201, 204, 205, 206, 209, 211, 213, 217, 218, 219, 221, 225, 226, 227, 241, 248, 250, 258, 261, 264, 265, 267, 274, 277, 281, 284, 287, 305, 308, 311, 313, 314, 316, 319, 323, 329, 331, 344, 345, 347, 351, 357, 371, 373, 375, 380, 384, 390, 392, 395, 398, 403, 409, 416, 420, 422, 426, 430, 434, 440, 443, 454, 458, 464, 465, 468, 475, 480, 482, 486, 487, 488, 489, 490, 493, 494, 498, 499, 500, 504, 506, 507, 509, 514, 518, 519, 520, 522, 524, 526, 534, 535, 539, 540, 544, 549, 552, 553, 556, 563, 564, 568, 569, 570, 582, 586, 595, 602, 628, 634, 644, 646, 651, 653, 654, 658, 659, 666, 677, 681, 697, 698, 703, 712, 716, 719, 723, 729, 734, 736, 737, 738, 747, 749, 752, 753, 754, 755, 759, 764, 788, 791, 792, 794, 800, 801, 804, 805, 806, 809, 812, 814, 819, 836, 838, 840, 846, 858, 873, 877, 881, 885, 887, 892, 895, 901, 913, 914, 915, 918, 919, 920, 921, 923, 925, 926, 927, 928, 930, 931, 933, 938, 940, 942, 944, 946, 948, 949, 985, 986, 992, 993, 994, 995, 998, 1000, 1002, 1004, 1005, 1006, 1013, 1015, 1019, 1023, 1034, 1036, 1047, 1050, 1051, 1059, 1063, 1067, 1078, 1083, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1097, 1100, 1101, 1102, 1109, 1110, 1112, 1118, 1121, 1122, 1125, 1130, 1132, 1138, 1140, 1142, 1146, 1148, 1155, 1165, 1176, 1186, 1187, 1188, 1196, 1198, 1203, 1204, 1210, 1212, 1217, 1219, 1224, 1241, 1245, 1247, 1248, 1253, 1254, 1255, 1256, 1261, 1262, 1264], "custom": [2, 15, 17, 20, 27, 88, 177, 181, 190, 193, 195, 196, 202, 204, 205, 218, 226, 228, 230, 258, 264, 267, 274, 277, 278, 305, 307, 314, 316, 341, 379, 380, 384, 385, 386, 387, 389, 397, 398, 416, 504, 531, 535, 548, 562, 590, 593, 596, 598, 600, 620, 642, 644, 650, 714, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 770, 772, 782, 787, 798, 807, 815, 824, 837, 839, 840, 860, 887, 1005, 1038, 1063, 1232, 1262], "firmwar": [2, 117, 119, 133, 180, 190, 191, 193, 200, 208, 378, 380, 507, 512, 513, 514, 515, 986, 993, 1029], "kunden": [2, 11, 307], "dezemb": [2, 11], "2012": [2, 11, 202, 264], "backport": 2, "integr": [2, 11, 26, 31, 113, 125, 133, 141, 195, 197, 216, 221, 241, 331, 340, 347, 375, 378, 400, 405, 406, 407, 494, 517, 519, 523, 532, 533, 543, 547, 759, 840, 860, 869, 927, 948, 986, 988, 994, 995, 1216, 1224, 1227, 1247, 1256], "touchcontrol": 2, "driver": [2, 69, 76, 154, 160, 163, 177, 180, 190, 193, 195, 203, 205, 206, 305, 399, 400, 415, 500, 840, 841, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 861, 862, 863, 866, 867, 868, 870, 871, 872, 874, 876, 878, 880, 881, 882, 884, 886, 887, 888, 891, 893, 896, 898, 902, 905, 908, 918, 924, 927, 985, 995, 1015, 1029, 1245, 1246, 1247, 1248, 1253], "systemintegrationsfirma": 2, "stuttgart": 2, "mai": [2, 31, 99, 101, 102, 116, 132, 148, 166, 180, 190, 194, 196, 201, 248, 258, 264, 271, 274, 277, 281, 287, 314, 323, 351, 367, 430, 437, 439, 443, 452, 517, 524, 535, 538, 566, 651, 703, 802, 812, 816, 838, 869, 871, 879, 887, 920, 921, 930, 935, 936, 948, 994, 995, 1017, 1019, 1020, 1021, 1023, 1081, 1082, 1090, 1132, 1216, 1226], "2013": [2, 11, 415], "python": [2, 3, 4, 9, 11, 12, 16, 17, 28, 48, 56, 63, 65, 69, 76, 82, 83, 125, 137, 172, 173, 187, 203, 208, 210, 218, 233, 234, 238, 241, 242, 243, 245, 248, 250, 257, 258, 264, 273, 274, 277, 281, 284, 305, 307, 316, 380, 381, 384, 385, 386, 387, 388, 389, 393, 394, 397, 399, 400, 405, 406, 407, 411, 412, 413, 415, 428, 600, 741, 759, 778, 790, 796, 813, 840, 841, 948, 970, 985, 987, 992, 993, 1036, 1085, 1086, 1087, 1088, 1090, 1092, 1093, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1105, 1109, 1110, 1116, 1120, 1124, 1125, 1131, 1133, 1135, 1136, 1138, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1222, 1223, 1224, 1226, 1227, 1228, 1241, 1245, 1247, 1252, 1259], "programm": [2, 49, 51, 207, 208, 212, 221, 232, 237, 241, 245, 277, 302, 314, 315, 316, 343, 357, 393, 399, 416, 464, 477, 484, 490, 494, 644, 646, 647, 715, 750, 784, 787, 924, 930, 982, 994, 1015, 1051, 1114, 1118, 1140, 1198, 1238, 1241, 1248, 1249, 1250, 1251, 1259], "zur": [2, 198, 212, 216, 224, 234, 245, 393, 398, 403, 416, 1051, 1238, 1239, 1240, 1247, 1259], "IT": [2, 305, 307, 378, 416, 648, 1143], "wie": [2, 152, 165, 198, 199, 206, 207, 208, 212, 216, 222, 224, 232, 237, 240, 247, 271, 367, 393, 416, 1238, 1239, 1240, 1247, 1258], "beispiel": [2, 11, 152, 165, 208, 232, 233, 255, 261, 282, 416, 1238, 1239, 1240, 1247, 1259], "e": [2, 20, 25, 26, 30, 36, 50, 88, 115, 127, 128, 133, 161, 166, 168, 188, 193, 195, 196, 197, 198, 199, 201, 206, 207, 208, 210, 211, 212, 216, 222, 224, 232, 233, 237, 239, 241, 242, 245, 248, 249, 250, 253, 254, 258, 261, 262, 264, 267, 269, 271, 274, 277, 278, 281, 284, 287, 290, 299, 302, 305, 306, 309, 311, 313, 319, 323, 329, 341, 345, 351, 354, 357, 363, 367, 370, 371, 375, 380, 391, 392, 393, 394, 398, 403, 416, 419, 436, 439, 443, 446, 449, 454, 464, 467, 482, 486, 490, 493, 494, 506, 522, 524, 530, 531, 534, 535, 537, 540, 543, 552, 556, 564, 569, 573, 585, 598, 601, 602, 637, 644, 648, 649, 658, 666, 677, 697, 715, 716, 725, 731, 736, 743, 746, 750, 753, 764, 770, 784, 805, 814, 816, 817, 823, 838, 846, 865, 906, 913, 914, 915, 925, 926, 930, 931, 932, 933, 948, 970, 978, 993, 994, 995, 1006, 1015, 1025, 1027, 1047, 1050, 1051, 1062, 1063, 1065, 1067, 1068, 1080, 1085, 1089, 1097, 1109, 1111, 1112, 1130, 1135, 1136, 1160, 1200, 1204, 1209, 1212, 1215, 1224, 1226, 1238, 1240, 1242, 1247, 1248, 1250, 1251, 1254, 1259, 1261, 1264], "bill": [2, 309], "email": [2, 20, 30, 170, 191, 197, 201, 204, 205, 229, 245, 309, 409, 1002, 1204, 1208, 1209, 1210, 1212, 1213, 1214], "kommunik": [2, 11, 1247, 1259], "extrakt": 2, "attach": [2, 210, 258, 264, 274, 277, 547, 869, 994, 1049, 1198], "signaturverifik": 2, "informationssystem": 2, "februar": 2, "juni": 2, "vollautomatisch": 2, "instal": [2, 17, 20, 33, 47, 56, 81, 88, 89, 95, 115, 132, 138, 151, 172, 188, 190, 191, 195, 216, 219, 225, 226, 228, 230, 241, 256, 258, 259, 262, 264, 267, 272, 274, 277, 278, 286, 289, 298, 301, 308, 311, 314, 315, 316, 321, 322, 326, 327, 328, 332, 333, 343, 348, 349, 350, 355, 356, 361, 365, 366, 374, 375, 376, 377, 378, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 507, 513, 516, 517, 523, 528, 530, 533, 536, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 614, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 782, 798, 807, 815, 824, 837, 839, 840, 860, 867, 883, 887, 888, 927, 985, 988, 993, 995, 1062, 1064, 1067, 1068, 1070, 1073, 1076, 1097, 1113, 1117, 1144, 1189, 1202, 1209, 1219, 1220, 1227, 1232, 1234, 1257, 1261, 1264], "serveranlagen": 2, "herstel": 2, "radar\u00fcberwachungssystemen": 2, "septemb": 2, "unterschleissheim": 2, "m\u00fcnchen": 2, "instandhaltungsarbeiten": 2, "hauseigenen": 2, "system": [2, 5, 11, 25, 33, 64, 69, 71, 88, 92, 93, 99, 101, 102, 115, 128, 136, 137, 148, 151, 152, 165, 173, 188, 190, 191, 196, 197, 201, 203, 205, 206, 207, 213, 216, 218, 219, 229, 241, 246, 249, 256, 258, 261, 262, 266, 267, 272, 274, 275, 277, 284, 287, 293, 294, 295, 302, 304, 309, 314, 319, 322, 323, 325, 345, 351, 357, 364, 369, 380, 395, 398, 399, 400, 401, 402, 403, 409, 411, 412, 415, 450, 459, 466, 470, 472, 476, 479, 483, 490, 491, 492, 496, 497, 501, 502, 504, 508, 526, 535, 537, 547, 548, 555, 568, 590, 601, 642, 676, 719, 725, 744, 782, 815, 816, 817, 837, 838, 839, 840, 843, 846, 858, 860, 879, 885, 887, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 931, 932, 934, 935, 936, 938, 939, 940, 941, 942, 945, 948, 975, 976, 980, 985, 989, 994, 995, 996, 1001, 1007, 1011, 1012, 1013, 1014, 1016, 1019, 1021, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1042, 1045, 1048, 1050, 1051, 1053, 1059, 1062, 1063, 1065, 1066, 1067, 1089, 1090, 1101, 1117, 1146, 1191, 1226, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250], "auf": [2, 11, 152, 165, 171, 174, 191, 199, 206, 207, 208, 212, 216, 222, 224, 232, 233, 237, 245, 253, 271, 278, 292, 367, 393, 398, 399, 403, 416, 977, 1238, 1239, 1240, 1258, 1259], "gentoo": [2, 189, 202, 500], "updat": [2, 32, 127, 132, 189, 191, 208, 236, 261, 269, 284, 294, 296, 302, 309, 314, 316, 323, 329, 341, 357, 363, 367, 398, 405, 599, 601, 661, 897, 1049, 1080, 1081, 1082, 1083, 1084, 1138, 1140, 1215, 1227, 1233], "betriebssystem": [2, 1247], "usb": [2, 3, 50, 189, 190, 191, 193, 416, 493, 865, 918, 988], "touchscreen": 2, "cheat": [2, 21, 229, 241, 370, 497, 770, 948], "detect": [2, 20, 97, 209, 221, 462, 465, 499, 534, 625, 652, 755, 780, 801, 881, 994, 995, 1021, 1030, 1055, 1066, 1067, 1170], "m\u00fcnzeinwurf": 2, "via": [2, 50, 76, 118, 124, 125, 152, 154, 165, 190, 193, 197, 202, 210, 225, 226, 248, 254, 275, 277, 305, 308, 311, 314, 323, 340, 397, 404, 416, 513, 514, 528, 544, 549, 569, 677, 789, 803, 840, 867, 887, 890, 918, 924, 930, 945, 982, 993, 1004, 1005, 1012, 1019, 1029, 1052, 1059, 1078, 1145, 1241, 1245, 1255], "gpio": [2, 3, 49, 51, 53, 54, 55, 63, 64, 65, 69, 75, 115, 116, 117, 119, 124, 125, 126, 136, 305, 314, 344, 388, 401, 403, 407, 840, 864, 889, 891, 896, 902, 905, 908, 985, 990, 993, 994, 1026, 1030, 1245, 1247], "interrupt": [2, 50, 55, 56, 77, 101, 102, 148, 160, 163, 207, 236, 305, 500, 840, 858, 864, 879, 881, 882, 884, 885, 889, 890, 891, 895, 896, 899, 902, 905, 906, 908, 918, 920, 921, 924, 927, 985, 990, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1026, 1028, 1029, 1047, 1050, 1051, 1053, 1062, 1063, 1247, 1249], "m\u00e4rz": 2, "firma": [2, 212, 307, 415, 1247], "spielo": 2, "intern": [2, 45, 75, 116, 120, 121, 126, 132, 222, 227, 250, 258, 261, 262, 264, 274, 277, 308, 311, 340, 391, 405, 433, 463, 478, 493, 535, 540, 543, 656, 697, 745, 788, 834, 838, 865, 873, 899, 993, 994, 995, 1038, 1090, 1094, 1138, 1148, 1204, 1209], "datenkonvertierung": 2, "einem": [2, 11, 57, 152, 165, 198, 207, 208, 212, 216, 222, 224, 232, 233, 237, 239, 245, 271, 277, 284, 299, 398, 399, 403, 416, 1238, 1240, 1259], "konvertierung": [2, 11, 1238], "asterix": 2, "format": [2, 11, 17, 18, 19, 30, 39, 41, 42, 43, 44, 81, 120, 121, 123, 141, 170, 193, 208, 209, 211, 212, 219, 226, 228, 230, 233, 237, 246, 249, 256, 257, 259, 265, 270, 271, 275, 277, 278, 283, 286, 287, 298, 301, 302, 307, 321, 322, 323, 327, 328, 330, 336, 339, 340, 343, 344, 349, 350, 351, 356, 358, 361, 362, 365, 366, 420, 421, 426, 462, 506, 507, 518, 840, 887, 918, 925, 948, 1009, 1065, 1105, 1113, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1184, 1185, 1186, 1187, 1189, 1191, 1196, 1207, 1219, 1251], "zweck": [2, 222, 1247], "extern": [2, 4, 9, 11, 17, 50, 76, 188, 189, 193, 197, 218, 221, 228, 250, 251, 256, 267, 272, 277, 286, 307, 322, 332, 340, 348, 376, 398, 403, 430, 434, 460, 462, 464, 466, 472, 476, 479, 483, 487, 492, 496, 501, 502, 507, 514, 515, 517, 523, 528, 533, 537, 628, 744, 782, 788, 837, 839, 840, 844, 847, 849, 852, 854, 857, 860, 864, 865, 866, 868, 872, 878, 884, 887, 891, 896, 897, 902, 905, 908, 985, 995, 1047, 1114, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1189, 1191, 1231, 1233, 1238, 1247, 1257], "datenquellen": 2, "export": [2, 28, 48, 128, 132, 190, 201, 225, 250, 251, 254, 256, 357, 384, 788, 843, 919, 949, 986, 994, 1027, 1029, 1030, 1078, 1080, 1083, 1182, 1199], "daten": [2, 222, 224, 237, 247, 252, 337, 1051], "soap": [2, 20], "ip": [2, 170, 194, 197, 206, 213, 241, 367, 395, 398, 404, 409, 625, 637, 988, 1006, 1012, 1050, 1219, 1245, 1247, 1253, 1255], "kamera": 2, "einen": [2, 11, 198, 199, 208, 212, 216, 222, 224, 232, 245, 281, 416, 702, 976, 1238, 1240, 1259], "videomautsystemen": 2, "implement": [2, 11, 12, 16, 30, 38, 41, 42, 43, 49, 50, 51, 55, 60, 73, 75, 76, 88, 101, 102, 105, 111, 113, 115, 131, 148, 153, 154, 161, 177, 190, 192, 195, 209, 217, 225, 227, 245, 250, 251, 258, 264, 268, 271, 272, 274, 279, 281, 296, 302, 311, 314, 315, 316, 317, 318, 323, 339, 343, 354, 371, 372, 373, 379, 380, 381, 385, 386, 391, 398, 409, 431, 433, 465, 475, 477, 478, 494, 504, 510, 531, 532, 535, 542, 543, 544, 546, 547, 548, 551, 552, 554, 563, 564, 568, 569, 570, 585, 589, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 608, 610, 615, 618, 619, 643, 645, 649, 653, 660, 661, 662, 663, 668, 697, 703, 712, 714, 715, 716, 723, 725, 732, 733, 734, 735, 736, 737, 738, 739, 745, 750, 751, 752, 754, 764, 779, 780, 781, 782, 788, 789, 791, 800, 804, 806, 808, 814, 830, 831, 834, 835, 838, 839, 840, 846, 853, 856, 873, 901, 918, 920, 921, 925, 927, 986, 995, 1006, 1009, 1015, 1033, 1038, 1059, 1084, 1088, 1089, 1094, 1095, 1096, 1102, 1106, 1130, 1166, 1170, 1179, 1186, 1191, 1200, 1203, 1207, 1241, 1245, 1248, 1249], "gige": 2, "vision": [2, 307, 416], "clientlibrari": 2, "softwarebasiert": 2, "kamerasimul": 2, "t\u00e4tigkeiten": 2, "hardwareteil": 2, "rs232": [2, 3, 229], "lagesensor": 2, "anpassung": 2, "cryptsetup": 2, "filesystemverschl\u00fcsselung": 2, "anforderungen": 2, "applik": [2, 206], "august": [2, 11], "logistik": 2, "autom": [2, 228, 241, 272, 286, 328, 371, 416, 986, 997, 1004, 1080, 1082, 1090, 1191], "beteiligten": 2, "protokol": [2, 3, 1247], "server": [2, 53, 170, 194, 197, 208, 229, 241, 252, 261, 277, 284, 287, 298, 302, 309, 319, 323, 345, 351, 357, 363, 500, 566, 580, 913, 989, 1002, 1004, 1012, 1059, 1203, 1219, 1236, 1247], "zu": [2, 152, 165, 198, 199, 206, 207, 212, 216, 222, 233, 234, 237, 239, 253, 269, 278, 284, 292, 299, 398, 403, 416, 909, 1238, 1239, 1240, 1247, 1258, 1259], "sp": [2, 752], "tcp": [2, 190, 197, 213, 229, 334, 987, 1012, 1207, 1245, 1247, 1253, 1255], "autonomen": 2, "fahrzeugen": 2, "kundenapplikationen": 2, "autonom": [2, 231, 986, 1198], "fahrzeug": 2, "mikrocontrol": 2, "seriel": [2, 3], "beratend": 2, "versionskontrol": [2, 11], "architektur": [2, 11, 416], "2008": [2, 201, 264, 1115], "ylog": [2, 11], "gmbh": [2, 11, 506], "dobl": [2, 11], "heizsystem": 2, "parametrisierung": 2, "anlag": [2, 237], "mit": [2, 3, 11, 57, 198, 199, 206, 207, 208, 212, 214, 216, 224, 228, 233, 234, 235, 238, 239, 242, 245, 252, 253, 254, 255, 277, 278, 281, 284, 292, 323, 367, 394, 398, 399, 403, 415, 976, 1146, 1238, 1239, 1240, 1247, 1259], "iar": 2, "arm": [2, 189, 201, 241, 438, 867, 887, 888, 993, 1006, 1062, 1065, 1066, 1068, 1078], "workbench": 2, "segger": [2, 190], "embo": [2, 190], "vba": 2, "excel": [2, 69, 191, 228, 254, 524, 1182, 1196], "verteilung": 2, "microsoft": [2, 196, 197, 200, 202, 204, 205, 216, 224, 294, 296, 305, 314, 316, 416, 417, 465, 481, 927, 1182], "net": [2, 11, 27, 31, 54, 115, 133, 136, 178, 206, 207, 232, 284, 290, 357, 371, 505, 601, 602, 881, 887, 914, 915, 977, 1012, 1204], "versionskontrollinfrastruktur": 2, "assoziiert": [2, 208], "script": [2, 26, 48, 52, 56, 182, 189, 191, 196, 197, 203, 205, 220, 228, 229, 231, 256, 258, 264, 274, 277, 304, 305, 325, 369, 375, 378, 389, 398, 415, 498, 506, 517, 519, 523, 528, 533, 539, 788, 840, 887, 930, 933, 948, 1016, 1080, 1117, 1118, 1142, 1146, 1226, 1248, 1250], "shell": [2, 3, 20, 88, 90, 92, 95, 115, 151, 152, 168, 203, 205, 209, 228, 229, 231, 269, 277, 295, 304, 325, 345, 357, 369, 383, 384, 397, 398, 399, 400, 403, 415, 418, 500, 506, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 725, 815, 838, 839, 840, 887, 910, 914, 915, 916, 917, 920, 921, 922, 923, 925, 926, 929, 930, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 966, 977, 978, 979, 982, 985, 986, 996, 997, 998, 999, 1000, 1008, 1014, 1015, 1016, 1024, 1026, 1029, 1030, 1042, 1045, 1048, 1050, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1116, 1117, 1119, 1140, 1142, 1169, 1231, 1245, 1247, 1248, 1250, 1252, 1253, 1256, 1258], "oststeiermark": 2, "erweiterung": [2, 416], "buildumgebung": 2, "cmake": [2, 3, 32, 63, 64, 65, 69, 78, 88, 97, 115, 138, 144, 151, 153, 166, 196, 201, 203, 205, 216, 219, 251, 267, 294, 296, 314, 316, 372, 379, 401, 415, 417, 507, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 522, 523, 525, 526, 528, 530, 531, 532, 537, 538, 539, 540, 548, 562, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 642, 661, 840, 841, 985, 1016, 1076, 1229, 1243, 1257, 1258], "www": [2, 8, 11, 49, 51, 54, 55, 76, 162, 163, 196, 206, 226, 229, 230, 302, 374, 377, 417, 804, 843, 858, 864, 888, 1029, 1202, 1204], "org": [2, 3, 11, 48, 53, 54, 153, 173, 178, 184, 188, 189, 193, 197, 201, 206, 208, 219, 229, 232, 249, 258, 264, 265, 274, 277, 281, 302, 315, 342, 367, 374, 377, 402, 417, 514, 517, 843, 858, 860, 864, 887, 888, 1029, 1078, 1080, 1114, 1135, 1146, 1185, 1202, 1219, 1220], "confix": 2, "2009": [2, 1191], "schulungen": [2, 11], "dem": [2, 11, 152, 165, 198, 199, 206, 207, 208, 212, 216, 233, 252, 255, 269, 278, 292, 323, 363, 398, 403, 416, 1051, 1239, 1240, 1247], "umkrei": 2, "softwareentwicklung": [2, 3], "nicht": [2, 11, 25, 152, 165, 198, 199, 206, 212, 216, 233, 234, 237, 242, 245, 264, 269, 271, 277, 284, 290, 309, 319, 393, 398, 416, 977, 1238, 1239, 1240, 1247, 1258, 1259], "from": [2, 4, 9, 15, 21, 22, 23, 24, 27, 32, 41, 42, 44, 48, 50, 55, 59, 64, 65, 69, 72, 73, 75, 77, 88, 89, 90, 92, 93, 94, 97, 100, 101, 102, 105, 115, 116, 117, 118, 119, 121, 122, 127, 132, 137, 138, 139, 140, 145, 146, 148, 151, 154, 166, 168, 170, 173, 181, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 204, 206, 208, 209, 211, 212, 217, 221, 222, 225, 226, 228, 229, 230, 231, 233, 239, 240, 241, 248, 249, 250, 251, 253, 255, 256, 258, 262, 264, 265, 271, 274, 275, 278, 279, 281, 284, 286, 289, 293, 294, 296, 298, 299, 301, 304, 307, 311, 314, 315, 316, 317, 318, 321, 323, 325, 326, 327, 328, 333, 336, 339, 341, 343, 344, 349, 351, 353, 354, 355, 356, 361, 365, 366, 367, 369, 370, 372, 373, 375, 378, 380, 381, 383, 385, 389, 391, 395, 398, 400, 401, 402, 403, 405, 406, 418, 419, 425, 427, 428, 432, 435, 438, 441, 442, 443, 446, 450, 457, 459, 460, 465, 466, 472, 473, 476, 479, 480, 482, 483, 484, 486, 488, 492, 493, 494, 496, 500, 501, 502, 504, 505, 509, 510, 511, 512, 513, 514, 518, 520, 526, 528, 530, 532, 534, 537, 539, 540, 542, 543, 544, 549, 553, 563, 567, 569, 585, 586, 587, 588, 590, 593, 596, 598, 599, 600, 601, 602, 620, 628, 631, 637, 642, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 658, 659, 661, 662, 672, 676, 677, 694, 706, 713, 716, 718, 724, 728, 735, 739, 742, 743, 744, 746, 750, 755, 759, 764, 770, 776, 781, 782, 794, 796, 800, 801, 802, 803, 806, 808, 814, 816, 819, 821, 829, 835, 836, 837, 838, 839, 840, 842, 843, 846, 856, 858, 862, 867, 869, 875, 879, 887, 888, 889, 890, 895, 897, 899, 907, 912, 913, 914, 915, 918, 919, 923, 924, 925, 927, 930, 931, 932, 938, 940, 945, 947, 948, 949, 950, 951, 953, 954, 967, 972, 981, 982, 985, 986, 988, 989, 990, 991, 993, 994, 995, 998, 1002, 1006, 1009, 1010, 1011, 1012, 1013, 1016, 1019, 1021, 1022, 1024, 1026, 1029, 1031, 1034, 1039, 1044, 1045, 1050, 1051, 1053, 1062, 1063, 1068, 1078, 1080, 1082, 1084, 1089, 1090, 1094, 1097, 1098, 1101, 1102, 1105, 1109, 1112, 1114, 1117, 1118, 1121, 1136, 1137, 1139, 1140, 1147, 1148, 1150, 1152, 1155, 1160, 1162, 1163, 1165, 1166, 1169, 1170, 1171, 1175, 1176, 1179, 1180, 1184, 1185, 1187, 1188, 1189, 1193, 1194, 1195, 1197, 1199, 1203, 1204, 1206, 1207, 1212, 1213, 1216, 1219, 1224, 1226, 1231, 1233, 1236, 1242, 1245, 1246, 1248, 1260, 1261, 1263, 1265], "scratch": [2, 30, 221, 993, 1198], "mathia": 2, "kettner": 2, "novemb": [2, 11], "bodenseo": 2, "singen": 2, "bodense": 2, "spielesoftwar": 2, "entwurf": [2, 11], "systemschnittstellen": 2, "driverentwicklung": 2, "powerpc": 2, "vanilla": [2, 193], "kernel": [2, 3, 31, 48, 54, 69, 101, 102, 148, 153, 154, 163, 170, 177, 181, 182, 187, 189, 190, 192, 200, 201, 202, 203, 205, 207, 222, 229, 261, 274, 277, 284, 287, 302, 305, 309, 319, 323, 345, 351, 357, 363, 384, 404, 415, 458, 480, 493, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 852, 854, 856, 857, 858, 859, 866, 867, 868, 870, 872, 873, 874, 875, 876, 877, 878, 880, 882, 883, 884, 885, 886, 891, 893, 896, 898, 899, 900, 901, 902, 905, 907, 908, 912, 918, 923, 925, 926, 927, 932, 977, 982, 985, 987, 989, 991, 992, 995, 1006, 1009, 1012, 1013, 1015, 1018, 1029, 1031, 1033, 1034, 1047, 1049, 1050, 1053, 1058, 1062, 1063, 1065, 1245, 1246, 1247, 1248, 1253], "abteilungsleitung": 2, "ag": [2, 20, 195, 197, 208, 222, 264, 267, 309, 392, 489, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 840, 912, 1065, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216], "realtim": [3, 69, 71, 152, 185, 205, 206, 305, 380, 399, 400, 411, 412, 814, 816, 840, 885, 889, 892, 895, 906, 985, 989, 994, 995, 1026, 1047, 1048, 1050, 1059, 1246, 1247, 1248, 1251, 1253, 1254], "hardwareintegr": 3, "netzwerkprogrammierung": 3, "multithread": [3, 17, 49, 51, 55, 63, 64, 65, 66, 69, 187, 190, 192, 221, 225, 256, 265, 275, 292, 314, 316, 344, 379, 407, 411, 412, 416, 481, 491, 742, 770, 808, 839, 840, 1036, 1041, 1050, 1063, 1064, 1091, 1100, 1189, 1191, 1241, 1245, 1251, 1253, 1255, 1260], "kerneldriv": 3, "rs485": 3, "In": [3, 11, 30, 32, 38, 50, 53, 55, 88, 94, 95, 97, 101, 102, 114, 115, 132, 133, 138, 139, 141, 148, 152, 154, 156, 161, 165, 166, 173, 180, 185, 188, 189, 190, 191, 192, 194, 196, 199, 201, 203, 205, 213, 217, 222, 227, 234, 237, 241, 242, 250, 258, 264, 267, 271, 274, 275, 277, 278, 281, 289, 305, 314, 316, 323, 332, 348, 354, 367, 372, 373, 374, 377, 379, 381, 383, 393, 398, 415, 438, 452, 505, 507, 513, 515, 516, 517, 523, 524, 526, 528, 533, 534, 539, 542, 547, 548, 549, 562, 563, 564, 566, 568, 569, 585, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 602, 607, 609, 642, 646, 649, 650, 653, 656, 657, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 719, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 751, 755, 759, 764, 782, 789, 792, 798, 802, 807, 809, 815, 824, 837, 838, 839, 840, 848, 853, 860, 885, 887, 899, 916, 919, 920, 921, 930, 932, 934, 938, 940, 942, 944, 959, 960, 985, 987, 995, 998, 1002, 1005, 1012, 1020, 1023, 1026, 1028, 1038, 1044, 1049, 1051, 1059, 1066, 1070, 1071, 1072, 1073, 1074, 1076, 1087, 1088, 1090, 1094, 1097, 1098, 1102, 1103, 1109, 1110, 1114, 1117, 1131, 1132, 1135, 1136, 1137, 1148, 1149, 1159, 1168, 1174, 1179, 1187, 1191, 1200, 1203, 1207, 1212, 1213, 1215, 1216, 1226, 1227, 1238, 1240, 1242, 1243, 1247, 1254], "userspac": [3, 72, 76, 77, 128, 133, 136, 153, 154, 164, 177, 190, 191, 261, 277, 284, 287, 302, 305, 309, 319, 323, 345, 351, 357, 363, 416, 493, 500, 840, 845, 856, 864, 865, 873, 879, 885, 889, 895, 899, 903, 905, 924, 926, 985, 988, 992, 995, 1006, 1026, 1028, 1029, 1049, 1053, 1059, 1245, 1249], "host": [3, 99, 189, 196, 201, 357, 395, 409, 867, 888, 987, 993, 1066, 1068, 1078, 1202, 1207, 1219], "devic": [3, 21, 60, 63, 64, 65, 69, 75, 80, 110, 116, 133, 141, 152, 154, 156, 160, 161, 163, 177, 188, 189, 190, 195, 207, 228, 236, 318, 373, 399, 400, 401, 585, 601, 602, 812, 814, 816, 838, 840, 849, 856, 857, 858, 864, 865, 868, 869, 871, 878, 887, 889, 891, 896, 902, 903, 905, 906, 908, 920, 921, 924, 927, 930, 970, 985, 1006, 1009, 1015, 1023, 1029, 1050, 1053, 1054, 1056, 1059, 1076, 1101, 1247, 1249, 1250], "libusb": [3, 190], "gadgetf": [3, 190], "modbu": [3, 206], "verschiedenen": [3, 11, 216, 233, 1238, 1239], "rto": [3, 190], "yocto": [3, 171, 177, 181, 182, 201, 517, 840, 887, 983, 1068], "programmiersprachen": [3, 233, 1240], "incl": [3, 11, 151], "buildsystem": 3, "autoconf": [3, 48, 201], "automak": [3, 196, 201, 1080, 1258], "meson": [3, 196, 201, 1057, 1061, 1080], "ninja": [3, 20, 201, 534, 1067, 1080], "make": [3, 4, 31, 32, 33, 48, 50, 53, 54, 59, 61, 69, 71, 100, 117, 118, 120, 128, 133, 138, 160, 163, 166, 173, 177, 182, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 205, 209, 210, 213, 217, 218, 221, 225, 226, 227, 231, 240, 241, 248, 250, 251, 262, 265, 277, 281, 294, 296, 318, 323, 326, 331, 340, 347, 375, 378, 379, 398, 401, 449, 461, 465, 473, 480, 482, 484, 494, 500, 504, 509, 510, 511, 513, 517, 523, 532, 533, 534, 535, 538, 540, 542, 543, 544, 547, 563, 564, 569, 570, 587, 600, 602, 614, 620, 625, 631, 649, 659, 661, 663, 666, 678, 713, 715, 729, 742, 750, 755, 759, 796, 801, 802, 806, 816, 819, 824, 834, 835, 840, 848, 855, 856, 860, 862, 865, 867, 887, 888, 904, 916, 927, 931, 933, 954, 967, 987, 988, 994, 995, 1016, 1019, 1021, 1044, 1047, 1049, 1051, 1053, 1058, 1062, 1065, 1078, 1080, 1081, 1082, 1083, 1087, 1094, 1097, 1109, 1140, 1148, 1161, 1169, 1196, 1209, 1242, 1243, 1245, 1248, 1252, 1256, 1257, 1260], "perl": [3, 188, 201, 784, 978, 1117], "leider": [3, 198, 264, 277, 284, 299, 1238], "objektorientiert": [3, 416, 1240], "ooa": 3, "ood": 3, "unit": [3, 63, 64, 65, 69, 73, 75, 88, 97, 115, 116, 123, 152, 188, 192, 209, 224, 225, 228, 229, 240, 249, 267, 281, 306, 307, 314, 318, 331, 347, 379, 380, 407, 411, 412, 415, 487, 506, 532, 534, 566, 589, 595, 599, 628, 658, 788, 816, 817, 840, 841, 995, 1049, 1132, 1140, 1191, 1203, 1225, 1242, 1256, 1259, 1264], "test": [3, 21, 28, 63, 64, 65, 69, 73, 75, 88, 115, 118, 131, 133, 143, 144, 151, 152, 161, 166, 185, 190, 192, 193, 195, 196, 197, 203, 205, 208, 209, 215, 216, 217, 220, 224, 225, 228, 240, 246, 249, 262, 264, 265, 267, 277, 294, 296, 316, 323, 332, 344, 348, 354, 379, 407, 409, 411, 415, 417, 429, 491, 504, 505, 509, 517, 519, 523, 524, 533, 542, 543, 544, 545, 546, 547, 548, 551, 552, 554, 555, 564, 566, 567, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 625, 637, 639, 644, 645, 646, 656, 657, 659, 660, 662, 663, 721, 733, 734, 735, 736, 737, 738, 747, 749, 752, 753, 754, 785, 791, 796, 800, 801, 802, 803, 805, 818, 819, 834, 835, 836, 838, 840, 841, 845, 877, 887, 890, 892, 895, 903, 948, 987, 988, 993, 1016, 1074, 1082, 1122, 1132, 1136, 1139, 1160, 1185, 1191, 1197, 1198, 1203, 1211, 1230, 1232, 1234, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1257, 1264], "driven": [3, 33, 55, 62, 69, 73, 143, 144, 151, 185, 190, 203, 205, 216, 225, 240, 267, 305, 307, 333, 336, 415, 504, 551, 660, 662, 663, 1049, 1055, 1056, 1216, 1224, 1238, 1239, 1240, 1241, 1242, 1243, 1251, 1255, 1257], "develop": [3, 9, 33, 62, 64, 69, 71, 73, 94, 95, 113, 139, 140, 152, 156, 173, 185, 191, 193, 195, 196, 197, 201, 203, 205, 213, 216, 224, 225, 228, 233, 240, 246, 251, 252, 259, 261, 262, 267, 272, 297, 302, 307, 332, 333, 336, 348, 375, 376, 380, 397, 399, 400, 409, 415, 482, 494, 500, 504, 524, 526, 528, 535, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 660, 662, 663, 716, 741, 815, 839, 840, 841, 844, 847, 849, 850, 852, 854, 857, 859, 860, 861, 863, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 887, 888, 891, 893, 896, 898, 902, 905, 908, 917, 920, 921, 922, 924, 927, 985, 987, 988, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1083, 1115, 1146, 1148, 1191, 1224, 1225, 1238, 1239, 1240, 1241, 1243, 1246, 1247, 1248, 1253, 1256, 1257], "gui": [3, 116, 132, 189, 195, 201, 267, 405, 406, 927, 1033], "gtk": 3, "qt": 3, "The": [4, 17, 18, 28, 37, 41, 45, 49, 50, 51, 69, 75, 81, 90, 97, 98, 99, 100, 101, 102, 110, 115, 117, 118, 119, 120, 121, 123, 125, 126, 132, 133, 137, 141, 148, 152, 154, 160, 163, 165, 168, 171, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 209, 210, 212, 213, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 241, 243, 246, 249, 252, 256, 257, 258, 259, 262, 263, 264, 267, 268, 271, 272, 274, 275, 277, 280, 281, 283, 286, 288, 291, 293, 294, 295, 296, 298, 301, 304, 307, 308, 311, 314, 316, 318, 321, 322, 324, 325, 327, 328, 344, 346, 349, 350, 351, 355, 356, 358, 361, 362, 365, 366, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 388, 389, 395, 398, 399, 400, 401, 403, 404, 415, 416, 419, 421, 429, 435, 443, 445, 447, 448, 449, 450, 455, 459, 463, 466, 472, 476, 479, 482, 483, 486, 492, 494, 496, 501, 505, 517, 519, 533, 534, 535, 542, 543, 544, 547, 548, 553, 562, 563, 564, 566, 568, 570, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 604, 607, 609, 642, 643, 645, 649, 650, 652, 660, 661, 662, 663, 664, 667, 670, 678, 686, 692, 696, 705, 708, 709, 714, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 747, 751, 753, 758, 763, 769, 782, 783, 792, 793, 794, 798, 807, 814, 815, 820, 824, 834, 837, 838, 840, 841, 848, 850, 860, 862, 865, 881, 887, 889, 892, 910, 912, 914, 915, 916, 917, 920, 921, 922, 925, 926, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 966, 979, 985, 989, 994, 995, 1008, 1010, 1014, 1016, 1019, 1020, 1021, 1022, 1024, 1026, 1029, 1035, 1036, 1038, 1039, 1042, 1045, 1048, 1049, 1050, 1059, 1062, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1091, 1092, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1112, 1114, 1116, 1118, 1119, 1126, 1130, 1133, 1137, 1138, 1140, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1198, 1200, 1201, 1204, 1205, 1207, 1211, 1213, 1218, 1221, 1224, 1226, 1228, 1231, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1255, 1256, 1257, 1260, 1262, 1263, 1264], "sourc": [4, 11, 16, 18, 48, 54, 59, 64, 77, 101, 102, 115, 133, 141, 148, 166, 173, 189, 190, 191, 192, 195, 196, 197, 201, 206, 207, 209, 210, 217, 230, 235, 240, 258, 264, 272, 274, 277, 281, 286, 294, 296, 298, 301, 302, 305, 326, 333, 375, 378, 460, 461, 464, 499, 508, 509, 511, 516, 531, 535, 537, 538, 539, 540, 548, 599, 602, 603, 716, 750, 753, 759, 764, 770, 800, 819, 855, 885, 888, 899, 932, 948, 949, 982, 1023, 1068, 1069, 1071, 1072, 1076, 1078, 1080, 1081, 1083, 1121, 1178, 1187, 1226, 1233], "i": [4, 5, 9, 15, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 34, 35, 37, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 57, 59, 60, 69, 71, 73, 75, 76, 78, 80, 81, 82, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 105, 106, 110, 111, 113, 114, 115, 116, 120, 123, 124, 126, 127, 128, 132, 133, 136, 137, 141, 144, 148, 151, 153, 154, 163, 166, 168, 173, 176, 177, 179, 180, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 204, 205, 206, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 237, 239, 240, 241, 242, 245, 246, 249, 250, 251, 253, 254, 256, 259, 260, 261, 262, 265, 266, 267, 268, 270, 271, 272, 275, 276, 278, 279, 280, 281, 283, 285, 288, 289, 290, 294, 295, 296, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 327, 329, 331, 333, 334, 336, 337, 339, 340, 341, 343, 344, 345, 347, 349, 350, 351, 353, 355, 356, 358, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 375, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 398, 401, 403, 404, 406, 409, 411, 412, 416, 418, 419, 420, 421, 422, 428, 429, 430, 432, 434, 435, 436, 438, 439, 442, 443, 444, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 522, 525, 526, 528, 530, 531, 532, 534, 535, 536, 537, 538, 542, 544, 546, 547, 548, 549, 552, 555, 556, 563, 564, 566, 567, 568, 569, 570, 583, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 607, 609, 614, 618, 620, 625, 628, 631, 634, 637, 642, 643, 645, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 668, 671, 672, 676, 677, 678, 679, 680, 681, 682, 684, 685, 690, 694, 697, 698, 699, 701, 703, 706, 708, 713, 715, 716, 721, 722, 723, 725, 726, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 746, 747, 749, 750, 752, 753, 754, 756, 759, 764, 765, 766, 767, 768, 770, 781, 782, 785, 786, 790, 791, 794, 795, 796, 800, 802, 803, 804, 806, 808, 812, 814, 815, 816, 817, 818, 819, 823, 825, 827, 834, 837, 838, 839, 840, 841, 842, 843, 846, 848, 851, 853, 855, 856, 858, 862, 865, 869, 873, 875, 877, 879, 881, 883, 885, 887, 888, 889, 894, 895, 897, 899, 900, 901, 903, 904, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 925, 926, 927, 928, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 951, 952, 953, 955, 956, 959, 960, 962, 963, 964, 968, 970, 972, 976, 978, 981, 982, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1009, 1016, 1019, 1021, 1023, 1026, 1027, 1029, 1030, 1033, 1034, 1035, 1036, 1038, 1039, 1041, 1042, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1148, 1149, 1150, 1151, 1153, 1160, 1163, 1166, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1213, 1214, 1216, 1217, 1219, 1220, 1224, 1225, 1226, 1227, 1231, 1233, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "under": [4, 9, 23, 43, 124, 128, 132, 188, 189, 190, 192, 197, 217, 228, 230, 340, 416, 549, 564, 601, 924, 925, 993, 994, 995, 996, 997, 998, 1005, 1006, 1050, 1065, 1090, 1097, 1104, 1138, 1224], "why": [4, 12, 16, 33, 38, 54, 60, 106, 110, 111, 114, 115, 133, 176, 190, 191, 196, 202, 221, 225, 226, 228, 230, 241, 250, 270, 308, 311, 317, 318, 339, 353, 372, 379, 380, 398, 401, 402, 405, 418, 430, 436, 443, 446, 464, 475, 480, 481, 486, 490, 493, 500, 505, 530, 531, 563, 586, 645, 654, 659, 677, 690, 716, 719, 736, 742, 743, 759, 790, 806, 809, 824, 836, 855, 867, 883, 887, 918, 925, 928, 986, 1041, 1044, 1062, 1078, 1080, 1088, 1089, 1092, 1138, 1140, 1191, 1196, 1206, 1214, 1251, 1254], "appli": [4, 67, 74, 192, 230, 248, 307, 313, 340, 351, 380, 447, 482, 488, 506, 656, 757, 792, 824, 860, 887, 928, 931, 948, 993, 994, 1019, 1083, 1210], "websit": [4, 11, 191, 1220, 1233], "contain": [4, 17, 23, 26, 48, 97, 98, 99, 101, 102, 113, 115, 141, 147, 148, 151, 166, 173, 193, 196, 201, 209, 211, 216, 217, 219, 221, 222, 225, 228, 230, 248, 250, 251, 258, 264, 274, 275, 277, 281, 288, 289, 292, 293, 294, 307, 314, 323, 340, 357, 370, 381, 383, 384, 393, 400, 401, 407, 409, 445, 464, 478, 498, 500, 506, 511, 514, 515, 518, 519, 526, 535, 538, 547, 563, 585, 588, 590, 599, 600, 601, 607, 608, 609, 642, 643, 645, 653, 654, 661, 678, 681, 694, 705, 709, 721, 723, 725, 733, 738, 739, 745, 750, 790, 802, 805, 824, 834, 835, 836, 838, 840, 843, 848, 856, 858, 860, 881, 883, 887, 907, 914, 915, 918, 928, 930, 953, 954, 955, 960, 967, 993, 994, 995, 1002, 1016, 1023, 1033, 1034, 1049, 1059, 1065, 1068, 1071, 1072, 1074, 1078, 1083, 1090, 1092, 1097, 1114, 1136, 1139, 1146, 1148, 1160, 1169, 1173, 1188, 1191, 1193, 1197, 1199, 1202, 1204, 1209, 1219, 1220, 1224, 1230, 1231, 1240, 1241], "materi": [4, 5, 11, 15, 52, 56, 88, 97, 150, 155, 166, 190, 204, 205, 221, 224, 225, 226, 228, 230, 231, 233, 235, 236, 240, 243, 246, 249, 251, 252, 255, 256, 259, 262, 265, 267, 268, 280, 283, 286, 289, 293, 294, 296, 298, 301, 308, 311, 317, 318, 322, 328, 332, 333, 336, 339, 340, 343, 344, 348, 350, 356, 362, 366, 370, 371, 376, 380, 398, 406, 416, 509, 510, 516, 517, 520, 526, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 802, 838, 991, 1002, 1027, 1030, 1090, 1093, 1114, 1142, 1193, 1206, 1233, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "train": [4, 5, 11, 17, 18, 20, 25, 97, 187, 191, 195, 202, 203, 204, 205, 212, 213, 216, 217, 218, 221, 224, 248, 258, 264, 274, 277, 307, 314, 316, 319, 331, 347, 357, 370, 406, 416, 509, 510, 516, 517, 520, 526, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 802, 838, 841, 843, 846, 851, 856, 862, 865, 873, 996, 1002, 1004, 1005, 1006, 1027, 1030, 1055, 1058, 1062, 1090, 1093, 1114, 1142, 1146, 1149, 1190, 1193, 1194, 1197, 1198, 1233, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1249, 1250, 1253, 1256, 1258, 1259, 1260, 1261, 1263, 1264], "give": [4, 15, 28, 41, 49, 51, 55, 101, 102, 120, 148, 189, 190, 192, 197, 200, 204, 210, 213, 217, 218, 225, 230, 241, 249, 281, 286, 298, 314, 316, 344, 430, 431, 446, 462, 465, 473, 498, 504, 506, 535, 544, 596, 598, 614, 631, 666, 681, 725, 728, 736, 759, 788, 887, 913, 920, 921, 939, 941, 994, 995, 1014, 1015, 1027, 1030, 1051, 1053, 1058, 1059, 1065, 1068, 1078, 1087, 1090, 1130, 1142, 1191, 1195, 1196, 1219, 1224, 1226, 1241, 1242, 1244, 1249, 1251, 1252, 1254, 1261], "structur": [4, 17, 69, 80, 99, 120, 190, 204, 226, 240, 267, 268, 275, 277, 278, 280, 283, 286, 289, 292, 301, 308, 311, 318, 322, 328, 332, 333, 336, 340, 344, 348, 350, 354, 356, 362, 373, 374, 375, 376, 377, 378, 379, 380, 381, 398, 402, 404, 406, 420, 430, 438, 443, 472, 474, 478, 479, 483, 492, 495, 496, 501, 502, 506, 517, 523, 526, 528, 531, 533, 534, 536, 546, 564, 589, 599, 618, 666, 699, 733, 742, 744, 782, 837, 839, 840, 875, 877, 881, 885, 887, 907, 944, 976, 1012, 1018, 1036, 1041, 1059, 1068, 1130, 1132, 1173, 1179, 1216, 1225, 1232, 1241, 1257, 1261, 1264], "much": [4, 15, 23, 26, 50, 55, 71, 120, 124, 126, 131, 136, 189, 190, 191, 192, 197, 200, 213, 219, 221, 225, 226, 227, 229, 251, 262, 264, 265, 267, 269, 275, 289, 290, 293, 294, 296, 308, 311, 317, 318, 339, 340, 343, 353, 354, 371, 372, 380, 381, 401, 432, 443, 454, 490, 494, 504, 514, 518, 524, 530, 531, 564, 643, 653, 658, 677, 698, 718, 742, 743, 752, 753, 757, 770, 782, 783, 784, 788, 790, 792, 802, 806, 827, 828, 830, 839, 840, 843, 858, 865, 873, 875, 881, 883, 887, 927, 928, 978, 986, 989, 992, 994, 1006, 1050, 1059, 1062, 1063, 1065, 1067, 1078, 1085, 1088, 1089, 1102, 1103, 1108, 1109, 1112, 1121, 1138, 1191, 1197, 1198, 1224, 1226, 1241, 1260], "like": [4, 9, 15, 16, 18, 27, 31, 33, 43, 49, 50, 51, 55, 68, 69, 105, 111, 115, 116, 120, 121, 123, 126, 128, 131, 133, 136, 139, 140, 141, 161, 189, 190, 191, 192, 194, 195, 197, 200, 201, 209, 212, 213, 217, 218, 219, 221, 225, 227, 230, 240, 241, 248, 250, 251, 258, 264, 265, 267, 268, 274, 277, 290, 292, 294, 296, 302, 305, 307, 308, 311, 314, 316, 340, 343, 367, 371, 380, 384, 389, 401, 409, 429, 432, 436, 458, 460, 465, 470, 482, 486, 494, 497, 504, 508, 510, 514, 516, 518, 522, 524, 525, 531, 542, 543, 544, 564, 588, 598, 599, 600, 601, 602, 614, 620, 628, 631, 637, 646, 649, 652, 655, 656, 657, 659, 680, 697, 706, 713, 715, 718, 722, 725, 732, 733, 741, 742, 745, 746, 752, 753, 770, 788, 790, 791, 801, 802, 805, 806, 812, 828, 830, 836, 838, 843, 845, 848, 856, 858, 860, 865, 871, 877, 879, 881, 883, 887, 892, 900, 903, 907, 915, 918, 919, 924, 925, 927, 930, 948, 950, 953, 955, 960, 978, 986, 987, 989, 993, 994, 995, 996, 1005, 1006, 1010, 1014, 1016, 1019, 1023, 1029, 1033, 1034, 1052, 1059, 1063, 1065, 1067, 1068, 1082, 1085, 1087, 1089, 1092, 1094, 1102, 1107, 1112, 1114, 1116, 1118, 1120, 1122, 1126, 1130, 1132, 1135, 1136, 1139, 1142, 1145, 1148, 1156, 1159, 1169, 1170, 1173, 1179, 1180, 1181, 1182, 1183, 1185, 1193, 1196, 1198, 1199, 1207, 1209, 1210, 1215, 1224, 1225, 1226, 1231, 1233, 1241, 1245, 1248, 1249, 1251, 1262], "topic": [4, 7, 15, 16, 17, 49, 51, 60, 69, 81, 88, 97, 103, 104, 115, 185, 192, 196, 197, 203, 204, 205, 209, 213, 226, 229, 230, 231, 233, 241, 246, 256, 259, 265, 275, 277, 278, 293, 294, 298, 316, 318, 322, 344, 384, 385, 386, 387, 389, 397, 398, 403, 404, 409, 411, 412, 415, 523, 533, 620, 660, 662, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 838, 841, 887, 889, 899, 910, 917, 919, 922, 929, 934, 938, 940, 942, 943, 968, 979, 992, 994, 997, 998, 1000, 1016, 1078, 1079, 1083, 1096, 1114, 1118, 1146, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1198, 1204, 1221, 1224, 1228, 1238, 1242, 1243, 1245, 1251, 1256, 1260, 1261, 1262, 1264, 1265], "depend": [4, 16, 17, 50, 69, 105, 110, 111, 115, 133, 190, 191, 197, 201, 219, 221, 233, 243, 246, 251, 252, 258, 259, 264, 265, 268, 274, 277, 278, 280, 283, 286, 301, 318, 326, 332, 348, 372, 373, 376, 379, 380, 398, 413, 420, 436, 438, 446, 449, 465, 482, 494, 500, 504, 507, 509, 511, 514, 518, 531, 537, 542, 549, 555, 589, 601, 627, 629, 637, 716, 743, 791, 814, 838, 840, 846, 899, 910, 917, 922, 929, 932, 943, 968, 979, 986, 994, 1012, 1065, 1066, 1068, 1078, 1082, 1084, 1114, 1116, 1150, 1154, 1163, 1189, 1219, 1249, 1257, 1258, 1264], "other": [4, 15, 17, 21, 27, 28, 39, 41, 49, 50, 51, 53, 69, 71, 73, 101, 102, 113, 132, 148, 154, 170, 173, 180, 190, 191, 192, 193, 194, 197, 201, 213, 217, 221, 225, 226, 228, 229, 230, 241, 249, 258, 264, 265, 274, 277, 281, 302, 323, 330, 331, 340, 343, 347, 367, 379, 380, 384, 401, 405, 409, 428, 434, 443, 452, 470, 473, 484, 500, 504, 507, 509, 510, 514, 519, 524, 528, 531, 532, 534, 535, 541, 547, 628, 643, 645, 646, 652, 654, 657, 658, 659, 669, 697, 719, 725, 743, 752, 753, 784, 788, 800, 802, 804, 806, 817, 819, 824, 838, 840, 858, 877, 879, 913, 920, 921, 924, 925, 941, 946, 948, 950, 970, 988, 993, 994, 995, 998, 1002, 1005, 1014, 1015, 1021, 1022, 1036, 1041, 1044, 1050, 1059, 1063, 1065, 1067, 1078, 1085, 1087, 1089, 1098, 1101, 1102, 1103, 1106, 1109, 1112, 1116, 1118, 1119, 1120, 1121, 1127, 1128, 1132, 1134, 1136, 1138, 1139, 1153, 1169, 1196, 1200, 1203, 1207, 1224, 1236, 1241, 1242, 1244, 1245, 1249, 1253, 1255, 1256, 1261, 1263, 1265], "see": [4, 11, 15, 17, 19, 30, 31, 33, 34, 38, 41, 43, 45, 50, 68, 69, 76, 80, 90, 97, 113, 115, 116, 118, 120, 121, 122, 123, 124, 126, 128, 131, 132, 133, 136, 144, 147, 149, 166, 173, 177, 178, 180, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 206, 209, 210, 211, 219, 221, 225, 235, 240, 241, 245, 248, 250, 251, 256, 258, 261, 262, 264, 265, 267, 268, 274, 277, 281, 286, 289, 298, 302, 305, 307, 311, 313, 314, 315, 316, 318, 322, 323, 331, 332, 340, 344, 347, 348, 359, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 389, 398, 401, 402, 404, 409, 412, 419, 428, 429, 430, 432, 438, 455, 468, 474, 477, 487, 493, 506, 510, 534, 537, 539, 540, 543, 544, 547, 548, 549, 557, 558, 559, 560, 561, 565, 568, 569, 585, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 609, 618, 619, 620, 628, 634, 637, 642, 644, 645, 646, 647, 659, 660, 662, 677, 681, 694, 708, 712, 713, 715, 716, 729, 733, 735, 736, 738, 742, 745, 750, 752, 753, 754, 755, 757, 764, 770, 784, 785, 787, 790, 791, 792, 794, 796, 800, 801, 802, 803, 804, 805, 814, 816, 823, 824, 825, 827, 828, 829, 830, 831, 835, 838, 841, 843, 846, 848, 850, 851, 853, 855, 856, 858, 860, 862, 865, 867, 873, 875, 877, 879, 881, 883, 887, 890, 894, 895, 901, 903, 913, 914, 915, 919, 923, 926, 927, 944, 948, 949, 951, 952, 954, 957, 959, 976, 986, 993, 995, 1016, 1019, 1021, 1022, 1023, 1027, 1030, 1034, 1036, 1039, 1046, 1058, 1062, 1065, 1067, 1074, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1094, 1102, 1103, 1106, 1107, 1109, 1112, 1114, 1116, 1119, 1127, 1130, 1131, 1132, 1142, 1146, 1149, 1158, 1162, 1165, 1176, 1187, 1188, 1194, 1196, 1199, 1204, 1207, 1209, 1212, 1213, 1214, 1221, 1224, 1231, 1236, 1242, 1244, 1249, 1256, 1260, 1261, 1262, 1263], "exampl": [4, 12, 17, 27, 28, 54, 69, 78, 113, 115, 116, 133, 153, 186, 189, 190, 191, 192, 197, 200, 201, 208, 209, 210, 213, 217, 221, 225, 227, 229, 240, 248, 250, 254, 258, 261, 264, 265, 267, 273, 274, 275, 278, 279, 280, 282, 286, 289, 298, 305, 307, 308, 311, 315, 317, 318, 322, 323, 331, 333, 336, 339, 340, 343, 347, 353, 366, 371, 374, 375, 377, 380, 386, 389, 398, 406, 409, 421, 427, 428, 429, 437, 443, 495, 518, 520, 524, 531, 532, 534, 540, 547, 551, 553, 563, 564, 566, 568, 588, 589, 601, 620, 655, 657, 659, 668, 677, 684, 722, 725, 732, 750, 759, 764, 779, 780, 784, 785, 789, 792, 796, 802, 806, 838, 840, 846, 858, 865, 887, 914, 915, 919, 925, 945, 948, 958, 970, 978, 986, 993, 994, 995, 996, 1005, 1009, 1016, 1019, 1020, 1021, 1022, 1023, 1033, 1040, 1059, 1062, 1064, 1065, 1066, 1067, 1069, 1076, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1094, 1101, 1108, 1111, 1114, 1115, 1117, 1125, 1130, 1139, 1146, 1148, 1164, 1169, 1187, 1188, 1189, 1197, 1198, 1204, 1206, 1212, 1213, 1218, 1223, 1231, 1233, 1242, 1252, 1256], "here": [4, 5, 50, 59, 64, 65, 68, 69, 71, 72, 76, 97, 105, 111, 113, 120, 136, 173, 178, 180, 189, 190, 192, 193, 195, 196, 197, 200, 201, 204, 209, 211, 217, 218, 219, 221, 225, 227, 230, 240, 241, 245, 248, 249, 250, 251, 256, 259, 267, 268, 272, 275, 277, 281, 294, 296, 298, 302, 305, 307, 311, 314, 316, 323, 326, 341, 356, 359, 370, 371, 376, 384, 389, 395, 398, 401, 402, 404, 416, 419, 484, 486, 493, 500, 509, 510, 518, 542, 544, 564, 569, 580, 583, 586, 588, 599, 601, 603, 618, 620, 628, 642, 645, 646, 649, 660, 662, 666, 678, 706, 712, 733, 735, 736, 742, 753, 759, 764, 770, 780, 784, 789, 792, 794, 800, 802, 805, 814, 829, 841, 855, 860, 862, 865, 877, 883, 887, 913, 948, 986, 988, 993, 994, 995, 1002, 1006, 1013, 1019, 1023, 1029, 1036, 1049, 1058, 1062, 1063, 1075, 1078, 1082, 1084, 1087, 1088, 1089, 1090, 1102, 1105, 1109, 1114, 1117, 1118, 1125, 1131, 1141, 1142, 1149, 1170, 1173, 1190, 1196, 1197, 1198, 1199, 1204, 1224, 1226, 1233, 1242, 1249, 1260, 1261, 1262, 1264, 1265], "also": [4, 11, 15, 19, 45, 50, 113, 116, 118, 121, 123, 124, 126, 128, 131, 132, 153, 154, 166, 173, 191, 192, 194, 195, 197, 198, 200, 201, 202, 208, 210, 211, 212, 213, 216, 218, 219, 221, 222, 225, 231, 233, 251, 258, 264, 274, 275, 277, 281, 287, 293, 294, 296, 305, 307, 314, 315, 316, 322, 323, 332, 340, 344, 348, 376, 384, 416, 506, 534, 537, 539, 544, 553, 563, 566, 568, 569, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 609, 619, 644, 645, 646, 647, 659, 677, 694, 697, 712, 713, 715, 742, 750, 753, 754, 755, 757, 770, 781, 784, 787, 790, 791, 792, 794, 796, 800, 802, 805, 806, 814, 816, 823, 828, 829, 830, 831, 838, 877, 887, 892, 913, 926, 932, 933, 948, 952, 954, 957, 959, 980, 986, 996, 1005, 1006, 1019, 1023, 1027, 1036, 1046, 1067, 1076, 1081, 1083, 1085, 1087, 1088, 1089, 1094, 1102, 1106, 1112, 1114, 1118, 1121, 1131, 1132, 1135, 1146, 1158, 1162, 1165, 1176, 1196, 1197, 1209, 1212, 1213, 1214, 1221, 1224, 1244, 1245, 1247, 1248, 1254, 1256, 1264], "discuss": [4, 30, 38, 53, 115, 221, 225, 226, 228, 230, 265, 275, 311, 315, 316, 339, 354, 372, 373, 375, 379, 380, 398, 402, 405, 406, 409, 411, 412, 416, 507, 529, 530, 531, 539, 625, 628, 631, 634, 637, 640, 810, 816, 867, 900, 948, 1058, 1062, 1092, 1231, 1233, 1236, 1242], "over": [4, 21, 22, 23, 26, 30, 48, 53, 80, 88, 120, 121, 133, 154, 189, 190, 192, 194, 195, 200, 209, 213, 221, 225, 227, 228, 229, 240, 245, 248, 250, 251, 258, 263, 264, 265, 267, 270, 273, 301, 305, 308, 311, 317, 318, 334, 339, 343, 354, 373, 383, 398, 401, 416, 443, 454, 455, 470, 484, 504, 508, 542, 552, 566, 643, 649, 676, 694, 706, 735, 742, 790, 791, 809, 834, 887, 986, 990, 994, 996, 1002, 1023, 1039, 1047, 1050, 1065, 1078, 1080, 1085, 1088, 1125, 1138, 1142], "lwn": [4, 27, 206, 867, 879, 897], "attribut": [4, 111, 190, 192, 206, 225, 239, 245, 249, 258, 261, 264, 269, 271, 276, 277, 281, 284, 287, 291, 292, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 391, 393, 402, 409, 482, 498, 500, 537, 547, 814, 838, 919, 926, 947, 951, 1019, 1033, 1034, 1051, 1052, 1059, 1063, 1088, 1089, 1102, 1104, 1115, 1141, 1196, 1254], "sharealik": 4, "cc": [4, 11, 20, 166, 170, 207, 215, 216, 217, 294, 534, 549, 598, 600, 601, 621, 624, 627, 628, 630, 631, 633, 634, 636, 637, 639, 661, 800, 801, 806, 865, 1057, 1058, 1061, 1062, 1067, 1230, 1231, 1233, 1235, 1236], "BY": [4, 11, 23, 770], "sa": [4, 11, 20, 1049], "don": [4, 12, 46, 48, 69, 75, 115, 120, 128, 163, 180, 189, 190, 191, 192, 195, 196, 197, 219, 221, 225, 229, 240, 241, 251, 258, 262, 264, 265, 267, 274, 277, 329, 341, 370, 406, 429, 470, 482, 485, 486, 488, 494, 500, 504, 506, 530, 531, 543, 600, 628, 634, 643, 644, 658, 659, 666, 676, 712, 719, 725, 750, 753, 755, 770, 784, 785, 797, 806, 811, 816, 855, 860, 879, 887, 892, 923, 948, 950, 955, 961, 972, 986, 989, 993, 994, 998, 1006, 1010, 1011, 1012, 1013, 1031, 1034, 1035, 1036, 1041, 1062, 1063, 1068, 1090, 1098, 1100, 1114, 1117, 1121, 1146, 1200, 1206, 1213, 1219, 1230, 1236], "t": [4, 12, 31, 38, 46, 48, 50, 55, 69, 75, 115, 120, 128, 132, 163, 180, 189, 191, 192, 195, 196, 197, 200, 201, 206, 208, 219, 221, 222, 225, 228, 229, 232, 237, 239, 240, 241, 245, 251, 254, 258, 261, 262, 264, 265, 267, 269, 271, 274, 275, 277, 281, 284, 287, 290, 296, 299, 302, 307, 308, 309, 311, 313, 319, 323, 329, 341, 344, 345, 351, 357, 363, 367, 370, 373, 384, 390, 392, 393, 395, 406, 417, 419, 420, 422, 428, 429, 439, 454, 460, 462, 465, 470, 480, 482, 484, 485, 486, 488, 494, 500, 504, 506, 522, 526, 530, 531, 535, 543, 596, 598, 600, 620, 628, 634, 643, 644, 646, 653, 658, 659, 666, 668, 669, 676, 680, 712, 719, 725, 742, 743, 745, 750, 752, 753, 755, 759, 760, 761, 762, 770, 773, 784, 785, 790, 796, 797, 800, 801, 802, 804, 806, 809, 811, 814, 816, 846, 855, 860, 867, 879, 881, 887, 892, 904, 907, 913, 914, 915, 923, 925, 948, 949, 950, 954, 955, 961, 967, 970, 972, 986, 989, 993, 994, 995, 998, 1002, 1006, 1010, 1011, 1012, 1013, 1020, 1031, 1034, 1035, 1036, 1041, 1051, 1058, 1059, 1062, 1063, 1065, 1066, 1068, 1078, 1081, 1084, 1090, 1098, 1100, 1102, 1114, 1117, 1120, 1121, 1122, 1128, 1134, 1138, 1140, 1141, 1142, 1146, 1148, 1195, 1200, 1204, 1206, 1213, 1219, 1230, 1231, 1236, 1256, 1260], "want": [4, 15, 17, 18, 33, 38, 48, 50, 69, 75, 116, 121, 126, 128, 132, 154, 163, 170, 173, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 209, 212, 217, 221, 225, 228, 229, 240, 241, 248, 251, 258, 265, 269, 271, 305, 307, 308, 311, 333, 371, 384, 395, 409, 430, 442, 458, 486, 498, 500, 504, 511, 518, 519, 524, 535, 544, 547, 568, 587, 596, 601, 620, 631, 644, 649, 652, 654, 659, 684, 719, 725, 736, 750, 755, 770, 791, 796, 802, 804, 805, 806, 825, 838, 843, 862, 887, 892, 923, 925, 927, 930, 945, 948, 949, 967, 986, 989, 993, 994, 995, 1006, 1010, 1011, 1012, 1013, 1018, 1034, 1049, 1051, 1052, 1053, 1062, 1065, 1067, 1078, 1080, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1097, 1104, 1109, 1120, 1129, 1132, 1142, 1147, 1149, 1185, 1200, 1204, 1207, 1209, 1213, 1224, 1226, 1227, 1231, 1241, 1248, 1249, 1262], "anybodi": [4, 190, 195, 221, 240, 241, 487, 1021, 1034, 1236, 1250], "monei": [4, 191, 194, 197, 264, 927, 1148], "my": [4, 12, 16, 20, 27, 49, 50, 51, 53, 55, 88, 113, 136, 141, 166, 170, 173, 180, 188, 189, 190, 191, 193, 194, 196, 197, 200, 201, 217, 221, 225, 228, 241, 248, 275, 289, 291, 305, 315, 357, 373, 395, 398, 403, 416, 494, 505, 519, 520, 526, 534, 547, 601, 637, 654, 665, 719, 802, 824, 838, 871, 883, 887, 889, 915, 923, 938, 940, 945, 951, 972, 986, 993, 995, 997, 998, 1005, 1006, 1011, 1012, 1013, 1022, 1059, 1068, 1090, 1093, 1102, 1121, 1145, 1185, 1207, 1212, 1213, 1224, 1241], "cours": [4, 27, 28, 56, 95, 133, 151, 168, 170, 185, 189, 190, 192, 204, 207, 217, 218, 228, 236, 240, 246, 251, 256, 267, 278, 295, 297, 305, 314, 316, 317, 331, 332, 340, 343, 344, 347, 348, 371, 376, 398, 405, 418, 467, 468, 484, 517, 536, 542, 548, 554, 599, 838, 862, 887, 899, 914, 915, 978, 987, 1016, 1023, 1067, 1090, 1146, 1178, 1187, 1190, 1191, 1204, 1241, 1246, 1247, 1256, 1259, 1263], "without": [4, 110, 145, 189, 190, 191, 192, 200, 201, 225, 269, 333, 354, 372, 373, 379, 381, 430, 454, 461, 487, 490, 494, 499, 504, 509, 520, 522, 525, 547, 552, 564, 631, 637, 643, 649, 712, 719, 742, 743, 744, 770, 782, 788, 790, 791, 796, 802, 808, 809, 816, 837, 839, 840, 858, 871, 887, 927, 928, 970, 995, 997, 1006, 1034, 1053, 1058, 1059, 1063, 1087, 1088, 1092, 1094, 1101, 1102, 1103, 1105, 1107, 1109, 1116, 1121, 1138, 1224, 1226, 1241, 1244, 1249, 1260], "modif": [4, 43, 97, 133, 267, 430, 432, 438, 443, 474, 504, 526, 530, 547, 552, 599, 656, 817, 838, 860, 887, 933, 949, 970, 1101, 1121, 1138, 1200, 1236], "back": [4, 17, 20, 50, 53, 113, 176, 191, 192, 195, 201, 225, 227, 229, 254, 262, 267, 278, 280, 298, 313, 333, 336, 371, 480, 495, 566, 591, 620, 640, 659, 673, 678, 716, 725, 750, 764, 799, 806, 819, 840, 855, 860, 869, 887, 889, 918, 951, 986, 993, 1006, 1049, 1059, 1065, 1085, 1092, 1105, 1109, 1121, 1150, 1184, 1185, 1186, 1189, 1215], "m": [4, 11, 20, 26, 48, 166, 168, 172, 173, 178, 191, 192, 193, 195, 197, 200, 217, 222, 227, 232, 241, 245, 254, 255, 256, 258, 262, 277, 281, 287, 289, 294, 306, 341, 351, 367, 394, 398, 399, 400, 405, 418, 506, 549, 595, 598, 599, 600, 601, 637, 661, 770, 792, 801, 855, 856, 862, 865, 897, 925, 927, 948, 988, 993, 1006, 1053, 1107, 1145, 1146, 1153, 1178, 1179, 1196, 1206, 1219, 1224, 1226, 1231], "lawyer": 4, "understand": [4, 115, 189, 190, 192, 196, 197, 200, 201, 213, 221, 225, 250, 277, 308, 311, 314, 316, 317, 318, 333, 336, 339, 343, 373, 379, 380, 400, 409, 436, 484, 493, 500, 524, 552, 588, 729, 750, 759, 780, 791, 887, 927, 933, 986, 1032, 1109, 1148, 1191, 1196, 1197, 1214, 1241, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1260], "permit": [4, 192, 197, 241, 305, 380, 395, 625, 646, 653, 993, 1004, 1050, 1115, 1216], "exactli": [4, 69, 190, 192, 213, 219, 248, 318, 389, 422, 462, 588, 599, 676, 753, 790, 887, 995, 1020, 1021, 1031, 1063, 1082, 1199, 1248, 1264], "gnu": [4, 185, 201, 203, 205, 241, 250, 395, 401, 501, 502, 534, 535, 652, 801, 840, 867, 888, 948, 1066, 1067, 1068, 1078, 1080, 1082, 1239, 1243, 1252, 1256, 1257], "free": [4, 20, 196, 201, 216, 241, 395, 477, 491, 549, 626, 646, 652, 654, 713, 733, 734, 736, 737, 753, 780, 799, 800, 801, 819, 822, 851, 858, 889, 1011, 1012, 1013, 1025, 1050, 1063, 1065, 1197, 1207, 1216, 1238], "document": [4, 12, 28, 30, 54, 69, 77, 115, 120, 153, 173, 190, 192, 194, 201, 202, 207, 210, 217, 229, 241, 247, 248, 256, 258, 263, 264, 265, 267, 274, 277, 281, 294, 296, 298, 307, 314, 316, 319, 340, 342, 360, 367, 384, 389, 398, 405, 406, 480, 481, 484, 491, 509, 510, 511, 516, 531, 532, 534, 535, 537, 539, 540, 552, 599, 618, 658, 662, 676, 677, 733, 735, 745, 750, 757, 759, 764, 780, 781, 787, 789, 792, 794, 801, 802, 803, 805, 812, 813, 814, 816, 818, 834, 838, 858, 860, 883, 887, 888, 895, 899, 913, 919, 927, 934, 938, 940, 942, 972, 974, 975, 977, 978, 980, 981, 989, 994, 995, 1029, 1038, 1046, 1080, 1083, 1087, 1089, 1090, 1094, 1098, 1100, 1102, 1108, 1125, 1135, 1136, 1187, 1199, 1202, 1209, 1210, 1213, 1215, 1222, 1225, 1232, 1233], "A": [4, 8, 11, 15, 16, 17, 21, 26, 27, 28, 29, 34, 35, 39, 41, 43, 44, 48, 60, 64, 65, 69, 73, 75, 76, 88, 89, 99, 100, 101, 102, 105, 109, 115, 116, 118, 120, 121, 122, 123, 124, 125, 132, 137, 140, 143, 144, 145, 148, 151, 153, 168, 179, 185, 189, 192, 193, 194, 195, 197, 202, 203, 205, 206, 209, 210, 211, 225, 227, 228, 229, 231, 237, 241, 248, 250, 252, 258, 261, 264, 268, 274, 275, 277, 281, 289, 295, 297, 301, 304, 305, 316, 318, 323, 325, 326, 329, 331, 332, 336, 339, 340, 343, 347, 348, 357, 369, 370, 371, 375, 376, 384, 390, 395, 399, 400, 415, 419, 422, 423, 435, 436, 437, 450, 455, 459, 465, 466, 468, 471, 472, 476, 479, 480, 481, 482, 483, 486, 488, 489, 490, 492, 494, 496, 501, 502, 504, 516, 518, 524, 526, 532, 539, 541, 542, 546, 547, 550, 552, 562, 564, 576, 589, 590, 599, 601, 607, 642, 647, 648, 653, 655, 656, 705, 706, 708, 709, 712, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 744, 746, 759, 770, 780, 782, 785, 790, 791, 792, 796, 798, 802, 804, 808, 817, 819, 820, 824, 831, 836, 837, 838, 839, 840, 841, 848, 862, 864, 881, 904, 916, 917, 920, 921, 922, 927, 930, 931, 935, 936, 941, 945, 951, 982, 985, 992, 995, 1010, 1014, 1015, 1018, 1024, 1026, 1033, 1034, 1035, 1036, 1045, 1050, 1051, 1062, 1063, 1066, 1068, 1074, 1076, 1077, 1078, 1081, 1082, 1089, 1090, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1120, 1121, 1128, 1130, 1135, 1141, 1146, 1147, 1148, 1153, 1176, 1179, 1182, 1193, 1197, 1199, 1200, 1203, 1207, 1210, 1211, 1217, 1219, 1225, 1226, 1236, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1264], "while": [4, 17, 41, 42, 50, 81, 105, 111, 148, 194, 196, 197, 210, 221, 225, 226, 228, 229, 230, 231, 233, 234, 235, 237, 239, 240, 241, 244, 245, 246, 248, 249, 252, 253, 254, 256, 258, 259, 262, 263, 264, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 283, 285, 286, 288, 298, 301, 302, 308, 310, 311, 315, 317, 321, 322, 323, 327, 328, 329, 339, 340, 341, 343, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 368, 371, 380, 384, 385, 386, 387, 388, 389, 390, 398, 401, 403, 420, 422, 426, 428, 430, 437, 442, 444, 458, 459, 465, 466, 470, 472, 476, 479, 480, 483, 485, 487, 492, 494, 496, 501, 502, 517, 523, 524, 528, 533, 537, 544, 549, 563, 570, 588, 637, 672, 676, 677, 680, 682, 684, 687, 702, 726, 732, 742, 744, 755, 770, 771, 772, 778, 782, 803, 814, 816, 831, 834, 837, 839, 840, 864, 867, 875, 877, 887, 889, 895, 896, 902, 905, 908, 920, 921, 925, 932, 985, 986, 993, 994, 1006, 1011, 1012, 1013, 1014, 1021, 1030, 1038, 1043, 1044, 1047, 1049, 1055, 1058, 1062, 1078, 1083, 1091, 1092, 1093, 1094, 1098, 1101, 1113, 1114, 1118, 1123, 1128, 1140, 1147, 1148, 1149, 1150, 1154, 1160, 1162, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1197, 1198, 1201, 1205, 1238, 1242, 1243, 1249, 1261, 1264], "ago": [4, 192, 196, 251, 912], "wa": [4, 25, 41, 69, 113, 121, 128, 133, 173, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206, 208, 209, 210, 212, 216, 217, 222, 224, 225, 228, 232, 238, 239, 245, 248, 251, 254, 255, 265, 267, 269, 271, 278, 281, 290, 302, 309, 315, 318, 323, 341, 353, 357, 371, 372, 380, 398, 403, 416, 418, 465, 490, 516, 522, 524, 528, 634, 642, 643, 652, 653, 697, 727, 734, 735, 736, 737, 738, 739, 746, 750, 753, 808, 838, 840, 862, 869, 877, 883, 923, 945, 976, 978, 986, 995, 1022, 1044, 1063, 1089, 1121, 1196, 1210, 1213, 1219, 1224, 1226, 1238, 1239, 1240, 1241, 1259], "debian": [4, 69, 168, 180, 181, 182, 197, 201, 206, 218, 229, 241, 326, 395, 416, 614, 840, 887, 988, 1067, 1080, 1226, 1231], "resolut": [4, 279, 281, 487, 755, 817, 865, 897, 995], "us": [4, 5, 9, 12, 27, 28, 33, 36, 42, 48, 49, 50, 51, 53, 55, 59, 61, 62, 65, 68, 69, 72, 73, 75, 76, 77, 79, 80, 88, 97, 98, 115, 116, 117, 119, 120, 121, 122, 123, 126, 128, 131, 132, 133, 136, 139, 140, 141, 147, 151, 153, 154, 160, 163, 166, 184, 187, 188, 189, 190, 192, 193, 196, 200, 202, 206, 209, 213, 215, 216, 218, 221, 225, 227, 228, 240, 241, 246, 249, 256, 258, 259, 261, 262, 265, 266, 268, 272, 274, 275, 277, 281, 284, 286, 287, 289, 294, 296, 298, 302, 305, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 328, 331, 336, 339, 340, 343, 344, 345, 347, 351, 353, 354, 357, 363, 372, 374, 375, 377, 378, 379, 381, 383, 384, 389, 395, 398, 401, 403, 404, 407, 416, 426, 429, 430, 433, 434, 435, 438, 440, 449, 450, 452, 454, 455, 459, 460, 461, 464, 465, 466, 468, 472, 473, 476, 479, 483, 487, 488, 492, 494, 495, 496, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 522, 524, 526, 528, 530, 531, 532, 534, 535, 539, 542, 543, 545, 546, 549, 552, 553, 554, 556, 563, 566, 567, 568, 586, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 614, 618, 619, 620, 621, 624, 627, 630, 633, 636, 639, 644, 646, 647, 651, 652, 654, 656, 658, 659, 660, 662, 663, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 685, 688, 689, 690, 694, 697, 698, 699, 700, 701, 702, 706, 712, 715, 716, 718, 719, 722, 723, 725, 727, 729, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 744, 745, 746, 747, 749, 751, 753, 757, 759, 764, 770, 772, 779, 780, 782, 784, 785, 787, 789, 792, 797, 801, 802, 803, 804, 806, 808, 812, 814, 817, 823, 824, 834, 837, 838, 839, 840, 845, 846, 848, 850, 853, 855, 856, 858, 860, 862, 865, 867, 871, 873, 875, 879, 881, 883, 887, 888, 890, 892, 900, 901, 903, 906, 907, 913, 914, 915, 918, 923, 924, 927, 928, 930, 932, 934, 940, 945, 948, 950, 953, 954, 955, 957, 967, 974, 976, 980, 985, 986, 989, 990, 992, 996, 997, 998, 1005, 1006, 1009, 1015, 1016, 1019, 1020, 1021, 1023, 1027, 1029, 1030, 1034, 1036, 1037, 1038, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1068, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1088, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1107, 1109, 1111, 1114, 1115, 1117, 1121, 1123, 1125, 1129, 1130, 1131, 1132, 1135, 1138, 1140, 1142, 1146, 1148, 1151, 1152, 1153, 1156, 1157, 1158, 1162, 1164, 1167, 1168, 1169, 1170, 1174, 1176, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1207, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1224, 1227, 1230, 1231, 1233, 1235, 1236, 1241, 1242, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1256, 1260, 1261, 1264], "gfdl": 4, "becaus": [4, 26, 48, 71, 113, 173, 176, 186, 189, 190, 192, 201, 213, 221, 225, 227, 241, 251, 258, 264, 274, 277, 422, 443, 482, 491, 494, 497, 504, 506, 507, 509, 512, 515, 522, 526, 544, 547, 564, 598, 601, 644, 645, 652, 654, 694, 716, 721, 736, 755, 792, 800, 803, 856, 867, 885, 887, 927, 967, 986, 993, 994, 995, 1004, 1015, 1016, 1019, 1022, 1038, 1044, 1059, 1062, 1063, 1087, 1090, 1116, 1147, 1204, 1219, 1226, 1231, 1241], "too": [4, 15, 41, 44, 50, 71, 128, 190, 192, 197, 204, 205, 218, 221, 237, 248, 250, 267, 277, 281, 284, 293, 294, 296, 307, 309, 317, 318, 323, 339, 341, 353, 354, 372, 439, 484, 494, 504, 518, 528, 540, 544, 643, 656, 755, 764, 766, 770, 782, 783, 784, 790, 796, 802, 827, 838, 839, 840, 885, 887, 892, 919, 986, 995, 996, 1002, 1019, 1034, 1051, 1067, 1087, 1088, 1089, 1092, 1138, 1142, 1220, 1241, 1245], "restrict": [4, 191, 219, 229, 482, 487, 510, 544, 551, 586, 666, 838, 885, 914, 915, 1005, 1204], "articl": [4, 206, 867, 879, 897, 993, 995, 1078], "describ": [4, 98, 115, 117, 119, 148, 189, 190, 191, 192, 195, 197, 200, 201, 204, 215, 241, 277, 281, 289, 315, 323, 326, 370, 395, 547, 556, 602, 621, 624, 627, 630, 633, 636, 639, 792, 806, 887, 897, 920, 921, 948, 995, 1000, 1054, 1057, 1061, 1066, 1075, 1081, 1082, 1111, 1196, 1230, 1233, 1235, 1245], "pretti": [4, 191, 192, 213, 227, 231, 250, 267, 277, 494, 535, 676, 734, 809, 1085, 1216, 1251], "same": [4, 12, 16, 19, 27, 28, 31, 32, 120, 133, 190, 191, 192, 194, 196, 197, 200, 201, 209, 210, 211, 213, 221, 222, 227, 230, 241, 249, 253, 258, 264, 267, 274, 275, 277, 280, 281, 299, 308, 311, 317, 318, 323, 339, 340, 341, 351, 367, 379, 380, 385, 386, 395, 402, 426, 430, 441, 442, 443, 460, 461, 465, 470, 473, 482, 484, 488, 490, 494, 495, 498, 499, 507, 518, 522, 524, 528, 530, 535, 547, 551, 554, 555, 566, 585, 586, 594, 598, 618, 620, 627, 629, 643, 646, 652, 657, 676, 679, 685, 694, 697, 698, 699, 723, 735, 743, 748, 755, 757, 759, 762, 764, 788, 789, 792, 804, 805, 806, 812, 855, 856, 860, 865, 867, 869, 877, 879, 885, 887, 903, 919, 926, 932, 948, 949, 951, 976, 986, 988, 993, 994, 995, 996, 1005, 1006, 1012, 1018, 1034, 1035, 1036, 1049, 1053, 1059, 1063, 1065, 1082, 1088, 1089, 1092, 1097, 1098, 1101, 1103, 1107, 1109, 1125, 1127, 1130, 1135, 1137, 1138, 1139, 1173, 1181, 1183, 1197, 1199, 1200, 1203, 1204, 1207, 1209, 1212, 1213, 1214, 1224, 1226, 1231, 1255], "issu": [4, 173, 190, 193, 200, 201, 251, 316, 317, 318, 339, 354, 357, 417, 430, 488, 1025, 1053, 1062, 1080, 1098], "how": [4, 11, 12, 25, 30, 33, 38, 53, 55, 61, 62, 66, 68, 69, 72, 73, 75, 76, 77, 78, 79, 82, 95, 113, 115, 120, 127, 128, 136, 148, 160, 163, 178, 180, 190, 193, 195, 196, 197, 201, 202, 205, 209, 211, 213, 217, 218, 224, 225, 226, 227, 228, 229, 230, 241, 246, 248, 249, 250, 256, 258, 259, 261, 262, 264, 265, 267, 270, 272, 275, 286, 289, 293, 294, 298, 305, 308, 311, 313, 314, 315, 316, 317, 318, 322, 328, 331, 333, 339, 340, 343, 344, 347, 371, 373, 375, 379, 380, 384, 400, 401, 405, 416, 430, 436, 461, 468, 470, 471, 482, 484, 486, 488, 493, 497, 504, 506, 509, 511, 517, 519, 520, 524, 549, 555, 585, 588, 596, 599, 620, 637, 644, 652, 653, 655, 666, 676, 715, 719, 726, 736, 742, 764, 801, 804, 805, 806, 816, 821, 834, 835, 848, 850, 851, 865, 877, 887, 892, 903, 914, 915, 920, 921, 928, 948, 967, 976, 982, 986, 993, 994, 995, 1003, 1011, 1012, 1013, 1016, 1019, 1022, 1023, 1029, 1044, 1047, 1050, 1051, 1053, 1058, 1062, 1063, 1076, 1078, 1080, 1082, 1095, 1096, 1114, 1117, 1131, 1134, 1143, 1149, 1187, 1188, 1191, 1196, 1197, 1210, 1212, 1213, 1216, 1224, 1227, 1233, 1236, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "do": [4, 15, 20, 28, 31, 33, 38, 46, 49, 50, 51, 55, 69, 74, 76, 80, 82, 88, 115, 116, 123, 128, 132, 133, 148, 166, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 205, 206, 208, 209, 210, 213, 217, 218, 221, 225, 226, 229, 239, 240, 241, 249, 251, 258, 261, 265, 267, 269, 271, 272, 275, 277, 280, 281, 287, 289, 291, 294, 296, 305, 308, 311, 340, 341, 371, 375, 378, 384, 386, 393, 395, 398, 400, 433, 452, 454, 455, 457, 458, 459, 464, 465, 466, 472, 473, 476, 479, 482, 483, 490, 492, 496, 501, 502, 504, 506, 511, 517, 520, 544, 549, 552, 555, 563, 564, 585, 587, 599, 620, 628, 634, 637, 643, 645, 656, 660, 662, 663, 666, 703, 716, 719, 725, 734, 735, 736, 744, 750, 755, 759, 781, 782, 788, 792, 794, 800, 801, 802, 804, 805, 806, 836, 837, 839, 840, 860, 864, 875, 879, 883, 885, 887, 912, 916, 917, 920, 921, 925, 928, 932, 933, 942, 944, 949, 953, 955, 985, 986, 989, 993, 994, 995, 997, 998, 1004, 1006, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1034, 1035, 1037, 1041, 1047, 1049, 1050, 1053, 1055, 1058, 1063, 1082, 1083, 1085, 1087, 1089, 1090, 1094, 1103, 1114, 1115, 1118, 1121, 1125, 1131, 1132, 1146, 1148, 1167, 1191, 1197, 1198, 1206, 1213, 1216, 1224, 1231, 1233, 1244, 1249, 1260, 1261, 1263], "choos": [4, 15, 166, 189, 190, 201, 213, 221, 637, 887, 986, 993, 995, 1031, 1081, 1114, 1121, 1134, 1197, 1204, 1226], "altogeth": [4, 200, 248, 317, 318, 339, 380, 753, 895, 1092], "have": [4, 15, 16, 18, 25, 31, 38, 60, 71, 73, 75, 93, 101, 102, 115, 116, 120, 124, 128, 131, 133, 138, 141, 148, 161, 170, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 209, 210, 211, 213, 217, 218, 219, 221, 225, 228, 229, 240, 241, 246, 248, 249, 250, 251, 258, 261, 262, 264, 265, 272, 277, 281, 284, 294, 296, 298, 305, 307, 308, 311, 314, 315, 317, 318, 322, 323, 343, 344, 371, 384, 389, 398, 401, 403, 429, 430, 434, 443, 462, 464, 484, 486, 489, 490, 494, 498, 500, 505, 507, 508, 509, 515, 516, 519, 524, 530, 531, 534, 542, 543, 544, 548, 551, 552, 564, 585, 588, 598, 601, 610, 637, 643, 647, 651, 653, 659, 660, 662, 663, 694, 700, 716, 723, 725, 729, 735, 736, 737, 741, 742, 746, 754, 757, 759, 770, 779, 784, 788, 789, 791, 794, 797, 801, 802, 805, 806, 835, 851, 855, 856, 858, 860, 865, 867, 879, 887, 890, 895, 903, 912, 920, 921, 925, 927, 930, 931, 933, 940, 955, 976, 986, 993, 994, 995, 996, 998, 1002, 1004, 1006, 1010, 1011, 1013, 1018, 1023, 1025, 1031, 1033, 1041, 1058, 1062, 1063, 1066, 1067, 1076, 1080, 1081, 1084, 1085, 1087, 1090, 1098, 1102, 1103, 1107, 1117, 1120, 1121, 1125, 1132, 1139, 1151, 1155, 1165, 1170, 1186, 1191, 1196, 1198, 1199, 1200, 1204, 1207, 1209, 1213, 1216, 1219, 1224, 1226, 1231, 1233, 1242, 1245, 1251, 1256, 1260, 1261, 1265], "idea": [4, 5, 127, 189, 190, 249, 262, 271, 281, 314, 316, 317, 318, 333, 336, 343, 379, 380, 488, 732, 754, 792, 800, 821, 887, 986, 1021, 1033, 1053, 1078, 1089, 1121, 1249, 1261], "choosealicens": 4, "com": [4, 8, 11, 25, 30, 32, 38, 54, 76, 97, 113, 115, 127, 136, 137, 141, 144, 151, 153, 154, 156, 160, 162, 163, 170, 172, 173, 188, 195, 196, 197, 201, 216, 217, 218, 219, 225, 226, 229, 230, 238, 243, 245, 251, 265, 267, 277, 289, 294, 296, 302, 305, 308, 309, 314, 315, 316, 318, 322, 328, 332, 333, 336, 340, 344, 348, 350, 354, 356, 362, 366, 371, 373, 374, 375, 376, 377, 378, 380, 382, 397, 398, 403, 409, 417, 507, 512, 513, 514, 515, 528, 530, 585, 599, 620, 661, 681, 682, 683, 684, 685, 687, 688, 689, 690, 693, 702, 721, 804, 887, 888, 948, 988, 993, 996, 1004, 1005, 1068, 1080, 1146, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "appear": [4, 113, 190, 191, 192, 193, 194, 195, 196, 197, 200, 209, 213, 217, 219, 221, 222, 241, 250, 277, 317, 318, 339, 419, 462, 465, 516, 522, 535, 547, 618, 658, 802, 824, 883, 887, 895, 911, 993, 994, 995, 1006, 1066, 1089, 1162, 1163, 1173, 1182, 1208, 1213], "help": [4, 17, 117, 189, 190, 192, 193, 201, 222, 241, 245, 250, 258, 264, 269, 271, 274, 277, 281, 284, 287, 289, 302, 309, 314, 318, 323, 341, 345, 351, 357, 363, 367, 370, 389, 393, 398, 416, 465, 486, 488, 490, 491, 500, 514, 517, 524, 526, 535, 646, 649, 654, 742, 755, 790, 800, 802, 858, 927, 988, 1081, 1116, 1142, 1146, 1216, 1224, 1231, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1261, 1264], "happen": [4, 15, 101, 102, 113, 116, 132, 148, 189, 190, 192, 221, 225, 229, 248, 267, 331, 347, 403, 416, 470, 482, 486, 490, 504, 524, 535, 649, 665, 738, 770, 784, 787, 809, 850, 883, 887, 904, 919, 920, 921, 925, 995, 1019, 1021, 1033, 1038, 1062, 1101, 1102, 1141, 1156, 1159, 1173, 1196, 1224, 1233, 1256, 1262], "git": [4, 11, 48, 54, 63, 64, 65, 69, 114, 115, 116, 132, 171, 179, 184, 188, 194, 196, 216, 217, 218, 221, 238, 240, 241, 243, 265, 267, 278, 289, 294, 296, 314, 315, 316, 404, 405, 411, 412, 530, 534, 588, 599, 661, 840, 862, 887, 888, 948, 988, 993, 1080, 1081, 1146, 1233], "clone": [4, 48, 54, 68, 100, 115, 141, 170, 184, 188, 192, 193, 196, 216, 218, 221, 238, 250, 251, 267, 294, 296, 326, 333, 336, 398, 403, 585, 588, 661, 860, 887, 888, 993, 1080, 1081], "jfasch": [4, 28, 31, 48, 54, 97, 113, 115, 133, 136, 137, 141, 144, 151, 156, 170, 173, 193, 194, 195, 200, 201, 208, 217, 218, 219, 222, 225, 238, 248, 258, 261, 264, 265, 267, 269, 274, 277, 284, 287, 289, 294, 296, 302, 305, 307, 308, 309, 314, 315, 316, 318, 319, 322, 323, 328, 332, 333, 336, 340, 344, 345, 348, 350, 351, 354, 356, 357, 362, 363, 366, 371, 373, 374, 375, 376, 377, 378, 380, 382, 397, 398, 403, 406, 507, 509, 510, 512, 513, 514, 515, 516, 520, 526, 528, 530, 532, 534, 535, 537, 538, 540, 549, 585, 599, 600, 601, 602, 620, 661, 725, 800, 801, 802, 838, 860, 862, 887, 913, 914, 915, 918, 919, 923, 925, 930, 933, 944, 949, 950, 951, 967, 970, 972, 973, 974, 978, 980, 982, 993, 996, 1004, 1005, 1006, 1011, 1017, 1019, 1020, 1021, 1044, 1049, 1065, 1066, 1067, 1068, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1090, 1093, 1117, 1136, 1142, 1146, 1169, 1212, 1213, 1224, 1226], "home": [4, 20, 28, 30, 31, 38, 48, 54, 91, 113, 141, 170, 173, 188, 191, 193, 194, 195, 197, 201, 217, 218, 219, 222, 241, 248, 258, 261, 262, 264, 269, 274, 277, 284, 287, 289, 294, 296, 302, 305, 307, 309, 319, 323, 345, 351, 357, 363, 370, 406, 500, 509, 510, 516, 520, 526, 532, 534, 535, 537, 538, 540, 549, 599, 600, 601, 602, 661, 725, 755, 800, 801, 802, 838, 840, 862, 887, 913, 914, 915, 917, 923, 925, 927, 928, 930, 933, 938, 940, 942, 944, 945, 948, 949, 951, 952, 953, 954, 955, 959, 962, 965, 968, 970, 972, 973, 974, 980, 985, 996, 997, 1002, 1004, 1005, 1044, 1046, 1062, 1066, 1067, 1068, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1090, 1093, 1142, 1169, 1178, 1212, 1213, 1224, 1226], "built": [4, 16, 115, 122, 189, 190, 192, 193, 196, 201, 217, 222, 224, 225, 233, 234, 246, 249, 258, 264, 269, 272, 274, 275, 277, 281, 289, 298, 302, 305, 307, 322, 331, 340, 344, 347, 351, 357, 367, 379, 380, 432, 436, 460, 481, 509, 524, 525, 531, 534, 540, 563, 585, 697, 725, 755, 811, 816, 856, 860, 862, 887, 993, 995, 1006, 1066, 1067, 1074, 1082, 1087, 1090, 1094, 1110, 1125, 1141, 1191, 1197, 1198, 1215, 1224, 1226, 1227, 1239, 1256], "wonder": [4, 855, 873, 900, 1092, 1251], "gener": [4, 11, 12, 17, 27, 53, 55, 59, 60, 69, 71, 72, 100, 101, 102, 148, 161, 173, 190, 194, 197, 202, 208, 211, 221, 225, 226, 228, 229, 230, 231, 240, 248, 256, 257, 258, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 278, 279, 280, 281, 286, 287, 301, 303, 307, 316, 321, 323, 327, 328, 330, 342, 344, 349, 350, 352, 354, 355, 356, 358, 361, 362, 363, 365, 366, 367, 381, 401, 404, 420, 430, 432, 438, 443, 454, 464, 482, 488, 491, 493, 494, 497, 511, 514, 517, 523, 533, 534, 535, 538, 588, 590, 596, 599, 607, 642, 649, 653, 654, 668, 676, 677, 680, 732, 750, 753, 780, 794, 800, 806, 814, 867, 869, 871, 890, 920, 921, 932, 948, 986, 988, 993, 1006, 1033, 1062, 1063, 1065, 1068, 1080, 1081, 1087, 1088, 1089, 1091, 1109, 1115, 1117, 1118, 1119, 1125, 1129, 1147, 1148, 1149, 1150, 1163, 1189, 1191, 1198, 1200, 1201, 1203, 1204, 1213, 1219, 1224, 1242, 1245, 1247, 1257, 1260], "homepag": [4, 54, 171, 194, 196, 206, 207, 221, 248, 256, 258, 293, 294, 296, 491, 1078, 1224], "content": [4, 15, 27, 37, 38, 45, 50, 113, 151, 221, 228, 229, 230, 241, 249, 267, 269, 277, 299, 305, 345, 390, 464, 467, 469, 518, 519, 602, 645, 694, 702, 725, 791, 818, 889, 892, 913, 914, 915, 930, 933, 935, 936, 970, 974, 982, 994, 998, 1021, 1031, 1065, 1121, 1140, 1147, 1160, 1190, 1210, 1226, 1252, 1253, 1262], "which": [4, 5, 16, 45, 59, 69, 71, 74, 80, 101, 102, 105, 106, 110, 111, 114, 116, 132, 140, 141, 148, 154, 157, 166, 173, 177, 184, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 209, 211, 217, 218, 219, 221, 225, 227, 229, 241, 248, 250, 258, 262, 264, 265, 277, 280, 281, 289, 290, 307, 308, 311, 313, 318, 323, 336, 340, 353, 372, 379, 380, 416, 433, 438, 439, 445, 449, 470, 482, 494, 504, 505, 506, 508, 509, 524, 534, 535, 537, 542, 544, 555, 585, 586, 587, 588, 591, 593, 594, 595, 596, 597, 599, 614, 625, 631, 644, 651, 653, 656, 658, 666, 713, 723, 725, 728, 729, 735, 736, 738, 747, 753, 754, 792, 796, 797, 805, 806, 819, 827, 836, 838, 840, 856, 865, 887, 889, 907, 913, 920, 921, 925, 927, 930, 931, 932, 933, 939, 941, 944, 948, 961, 972, 976, 985, 986, 989, 993, 994, 995, 1006, 1015, 1016, 1019, 1021, 1023, 1024, 1026, 1033, 1038, 1045, 1047, 1049, 1050, 1058, 1063, 1066, 1068, 1071, 1072, 1080, 1084, 1087, 1089, 1101, 1102, 1106, 1114, 1118, 1121, 1130, 1162, 1181, 1183, 1186, 1188, 1204, 1206, 1207, 1209, 1212, 1226, 1231, 1241, 1244, 1260], "differ": [4, 23, 26, 49, 51, 60, 67, 72, 76, 79, 154, 179, 189, 190, 195, 197, 201, 210, 217, 221, 225, 237, 261, 262, 305, 307, 313, 314, 316, 323, 341, 353, 379, 384, 418, 430, 438, 443, 444, 460, 461, 464, 482, 488, 490, 494, 504, 506, 514, 518, 526, 543, 544, 588, 599, 601, 620, 627, 628, 637, 646, 647, 651, 656, 658, 659, 668, 672, 677, 716, 719, 723, 746, 759, 762, 789, 804, 817, 823, 838, 860, 865, 879, 885, 887, 907, 912, 918, 923, 924, 926, 945, 970, 986, 989, 993, 995, 1002, 1013, 1021, 1023, 1038, 1047, 1049, 1050, 1070, 1076, 1081, 1083, 1084, 1089, 1102, 1109, 1117, 1130, 1134, 1139, 1140, 1141, 1200, 1209, 1226, 1227, 1242, 1246, 1248, 1249, 1254, 1261, 1265], "so": [4, 11, 20, 25, 27, 37, 43, 113, 116, 121, 133, 136, 148, 154, 173, 176, 179, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 233, 234, 239, 247, 249, 250, 251, 260, 261, 262, 291, 305, 313, 315, 319, 331, 343, 347, 357, 363, 367, 371, 384, 393, 398, 401, 416, 429, 433, 434, 442, 444, 460, 470, 471, 473, 482, 486, 488, 490, 491, 495, 505, 516, 518, 524, 534, 537, 539, 540, 542, 564, 566, 585, 601, 614, 653, 659, 663, 676, 699, 706, 715, 722, 732, 781, 791, 796, 799, 800, 802, 817, 846, 848, 851, 856, 860, 862, 865, 887, 900, 912, 927, 928, 930, 932, 938, 940, 942, 948, 952, 959, 986, 992, 993, 994, 995, 998, 1000, 1002, 1010, 1013, 1016, 1021, 1023, 1033, 1051, 1053, 1062, 1065, 1066, 1067, 1068, 1071, 1072, 1080, 1082, 1083, 1092, 1093, 1097, 1109, 1114, 1116, 1121, 1138, 1140, 1142, 1145, 1155, 1159, 1165, 1169, 1196, 1199, 1207, 1214, 1217, 1224, 1226, 1230, 1231, 1233, 1238, 1239, 1240, 1241, 1251, 1256, 1259, 1264], "ye": [4, 20, 38, 48, 105, 108, 141, 192, 193, 196, 201, 241, 395, 524, 699, 721, 809, 914, 915, 933, 935, 936, 995, 1006, 1065, 1134, 1168, 1254], "realli": [4, 9, 31, 38, 41, 43, 44, 133, 191, 192, 193, 195, 197, 210, 221, 225, 228, 380, 416, 543, 759, 796, 806, 819, 840, 879, 994, 995, 1006, 1029, 1065, 1191, 1198, 1204], "great": [4, 69, 195, 197, 251, 271, 281, 504, 643, 657, 814, 887, 994, 1241, 1249], "static": [4, 11, 88, 94, 95, 101, 102, 115, 139, 148, 173, 190, 192, 194, 196, 197, 206, 216, 250, 251, 258, 264, 267, 274, 277, 281, 305, 314, 316, 323, 372, 375, 379, 380, 398, 404, 466, 472, 476, 479, 481, 483, 490, 492, 494, 496, 501, 502, 528, 531, 534, 537, 538, 539, 548, 562, 570, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 600, 628, 637, 642, 646, 649, 659, 664, 690, 725, 739, 744, 753, 782, 784, 786, 787, 791, 802, 805, 811, 816, 823, 824, 825, 827, 828, 829, 830, 837, 838, 839, 840, 846, 865, 883, 887, 889, 985, 1033, 1036, 1038, 1040, 1049, 1055, 1062, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1202, 1236, 1238, 1239, 1240, 1252], "It": [4, 9, 27, 31, 33, 43, 49, 51, 69, 121, 128, 132, 140, 166, 180, 189, 190, 191, 192, 195, 196, 197, 200, 201, 209, 211, 213, 217, 218, 222, 227, 228, 241, 250, 251, 258, 264, 267, 274, 277, 281, 289, 294, 296, 305, 308, 311, 314, 340, 353, 379, 380, 411, 412, 416, 427, 438, 442, 460, 465, 488, 490, 504, 509, 515, 518, 526, 542, 547, 552, 555, 564, 566, 588, 591, 592, 599, 600, 646, 726, 738, 755, 756, 792, 802, 819, 824, 840, 851, 887, 914, 915, 927, 930, 945, 985, 986, 994, 995, 1016, 1021, 1023, 1024, 1026, 1041, 1045, 1050, 1066, 1067, 1078, 1083, 1088, 1090, 1101, 1109, 1114, 1148, 1164, 1169, 1173, 1176, 1182, 1197, 1203, 1215, 1224, 1225, 1241, 1242, 1244, 1249, 1256, 1261], "let": [4, 30, 49, 50, 51, 116, 120, 141, 163, 190, 191, 192, 195, 196, 197, 200, 204, 211, 212, 213, 218, 219, 251, 265, 269, 271, 277, 281, 308, 311, 313, 315, 318, 333, 336, 344, 381, 486, 494, 504, 506, 507, 509, 511, 514, 526, 540, 542, 544, 546, 551, 564, 570, 587, 598, 599, 601, 604, 620, 634, 644, 645, 656, 660, 662, 663, 713, 719, 725, 726, 732, 742, 759, 787, 791, 796, 800, 856, 860, 879, 887, 895, 923, 932, 945, 950, 986, 993, 994, 1006, 1019, 1021, 1022, 1031, 1038, 1047, 1049, 1065, 1067, 1078, 1081, 1082, 1088, 1090, 1094, 1131, 1138, 1140, 1148, 1156, 1178, 1186, 1191, 1198, 1199, 1204, 1207, 1224, 1241], "me": [4, 11, 20, 25, 49, 51, 55, 115, 173, 186, 189, 190, 191, 192, 195, 196, 197, 200, 201, 204, 217, 218, 219, 221, 225, 248, 250, 251, 275, 326, 344, 370, 398, 416, 486, 488, 489, 504, 519, 534, 631, 654, 719, 755, 796, 802, 860, 923, 950, 986, 994, 995, 1006, 1010, 1065, 1068, 1078, 1094, 1097, 1138, 1191, 1195, 1225], "focu": [4, 193, 197, 200, 213, 221, 225, 308, 311, 371, 493, 497, 549, 741, 770, 986, 994, 996, 1114, 1198, 1242, 1261, 1264, 1265], "myself": [4, 185, 197, 204, 217, 225, 240, 256, 512, 860, 923, 945, 950, 967], "ey": [4, 20, 25, 274, 277, 287, 309, 351, 357, 363, 367, 1125], "toward": [4, 221, 404, 486, 566, 694, 1260], "link": [4, 15, 20, 32, 57, 94, 95, 115, 121, 126, 137, 139, 148, 189, 190, 196, 197, 198, 199, 200, 201, 206, 208, 216, 222, 229, 242, 265, 267, 295, 296, 304, 305, 313, 318, 325, 326, 331, 347, 357, 369, 370, 378, 380, 398, 411, 412, 416, 460, 473, 479, 483, 487, 492, 496, 501, 502, 507, 516, 534, 537, 538, 540, 548, 562, 585, 590, 591, 592, 593, 594, 595, 596, 597, 600, 620, 627, 628, 642, 656, 744, 750, 758, 782, 792, 793, 837, 838, 839, 840, 848, 849, 853, 854, 857, 865, 868, 877, 878, 887, 889, 891, 896, 902, 905, 908, 917, 968, 970, 976, 985, 994, 1001, 1033, 1036, 1038, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1084, 1218, 1228, 1231, 1250, 1256, 1259, 1262, 1265], "consist": [4, 15, 221, 236, 277, 343, 389, 406, 419, 422, 460, 462, 500, 519, 591, 599, 644, 755, 948, 1023, 1059, 1114, 1115, 1118, 1160, 1169, 1193, 1214], "won": [4, 132, 200, 201, 277, 307, 384, 417, 484, 530, 535, 598, 600, 646, 796, 802, 855, 867, 994, 1006, 1013, 1068, 1140, 1260], "break": [4, 24, 26, 212, 221, 222, 227, 234, 240, 241, 249, 261, 264, 270, 271, 274, 277, 280, 281, 284, 287, 302, 309, 323, 351, 357, 363, 367, 371, 390, 454, 458, 459, 466, 472, 476, 479, 483, 486, 490, 492, 494, 496, 501, 502, 504, 684, 715, 726, 728, 735, 744, 770, 778, 782, 803, 816, 824, 837, 839, 840, 877, 1011, 1012, 1021, 1049, 1055, 1062, 1094, 1102, 1140, 1204], "move": [4, 42, 50, 90, 105, 109, 115, 128, 137, 168, 172, 180, 191, 201, 218, 226, 229, 240, 251, 267, 292, 295, 304, 305, 316, 325, 326, 360, 369, 370, 381, 383, 398, 401, 504, 505, 528, 531, 540, 582, 591, 620, 645, 646, 653, 655, 657, 703, 750, 770, 782, 792, 794, 798, 801, 803, 804, 807, 814, 815, 816, 836, 837, 839, 840, 856, 889, 911, 914, 915, 916, 917, 951, 952, 953, 954, 957, 958, 959, 960, 962, 968, 985, 986, 1010, 1011, 1050, 1084, 1121, 1220, 1240, 1241, 1243], "around": [4, 12, 25, 49, 51, 53, 55, 89, 115, 120, 123, 136, 190, 191, 192, 197, 201, 210, 221, 225, 249, 275, 286, 293, 294, 296, 316, 344, 353, 354, 372, 373, 379, 380, 416, 443, 540, 552, 554, 563, 588, 644, 740, 743, 745, 795, 797, 839, 840, 887, 892, 1021, 1038, 1059, 1062, 1084, 1090, 1106, 1110, 1112, 1134, 1187, 1191, 1193, 1197, 1198, 1209, 1210, 1213], "last": [4, 49, 51, 55, 113, 115, 144, 190, 191, 192, 206, 211, 221, 222, 228, 240, 241, 248, 256, 258, 261, 264, 265, 274, 277, 287, 302, 307, 309, 323, 345, 389, 395, 402, 404, 470, 488, 522, 671, 673, 674, 675, 676, 680, 683, 773, 776, 777, 778, 838, 840, 887, 948, 951, 954, 970, 980, 982, 985, 1013, 1018, 1026, 1037, 1042, 1044, 1049, 1064, 1076, 1087, 1088, 1089, 1090, 1094, 1098, 1102, 1103, 1109, 1110, 1115, 1123, 1131, 1132, 1136, 1138, 1141, 1142, 1153, 1180, 1186, 1188, 1199, 1204, 1212, 1213, 1225, 1232, 1259], "least": [4, 12, 25, 49, 51, 72, 192, 200, 213, 217, 219, 221, 228, 229, 248, 250, 251, 265, 267, 277, 281, 307, 311, 313, 323, 325, 369, 418, 436, 442, 443, 456, 482, 485, 486, 494, 516, 542, 614, 698, 742, 792, 794, 801, 806, 809, 819, 850, 883, 885, 919, 986, 988, 996, 1036, 1059, 1063, 1085, 1094, 1098, 1114, 1115, 1125, 1149, 1197, 1232], "ha": [4, 9, 12, 15, 16, 31, 33, 41, 44, 50, 69, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 116, 123, 126, 128, 132, 141, 148, 154, 173, 179, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 209, 211, 213, 217, 218, 221, 225, 227, 228, 229, 239, 241, 245, 246, 248, 249, 251, 258, 261, 264, 267, 269, 271, 272, 274, 277, 281, 284, 287, 290, 298, 299, 302, 305, 306, 307, 308, 309, 311, 313, 314, 316, 319, 322, 323, 329, 331, 340, 341, 344, 345, 347, 351, 354, 357, 360, 363, 367, 380, 381, 384, 391, 393, 395, 404, 417, 426, 429, 439, 442, 443, 452, 455, 463, 464, 471, 477, 478, 481, 485, 487, 488, 494, 500, 504, 506, 509, 513, 515, 522, 524, 526, 528, 531, 532, 535, 539, 540, 542, 543, 544, 547, 552, 553, 556, 564, 569, 583, 585, 595, 618, 628, 643, 645, 646, 647, 648, 651, 652, 653, 655, 656, 659, 666, 676, 697, 698, 715, 716, 719, 725, 729, 730, 735, 736, 738, 747, 749, 752, 755, 764, 765, 766, 770, 779, 780, 781, 784, 792, 800, 802, 805, 806, 808, 814, 818, 819, 838, 840, 851, 856, 881, 883, 885, 887, 897, 900, 901, 903, 907, 914, 918, 919, 920, 921, 923, 925, 926, 927, 933, 944, 946, 951, 978, 986, 992, 993, 994, 995, 1004, 1006, 1009, 1015, 1021, 1033, 1035, 1036, 1038, 1046, 1047, 1049, 1050, 1051, 1052, 1059, 1063, 1065, 1080, 1082, 1083, 1085, 1087, 1088, 1089, 1092, 1094, 1097, 1102, 1103, 1104, 1110, 1112, 1114, 1117, 1120, 1121, 1125, 1130, 1131, 1135, 1153, 1173, 1188, 1191, 1197, 1198, 1199, 1200, 1204, 1212, 1213, 1215, 1217, 1224, 1226, 1231, 1233, 1241, 1242, 1245, 1248, 1249, 1256, 1261, 1262, 1265], "extens": [4, 5, 11, 16, 20, 25, 28, 173, 187, 200, 221, 248, 250, 258, 264, 274, 277, 357, 384, 464, 504, 520, 528, 552, 643, 781, 838, 841, 912, 925, 1065, 1097, 1114, 1117, 1219, 1224], "interfac": [4, 41, 44, 54, 63, 64, 65, 69, 71, 73, 76, 97, 105, 110, 111, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 132, 133, 136, 153, 154, 190, 206, 208, 209, 216, 225, 251, 265, 267, 279, 297, 298, 305, 314, 332, 344, 348, 374, 375, 377, 380, 387, 388, 398, 399, 400, 404, 407, 416, 504, 510, 512, 513, 514, 515, 516, 517, 523, 524, 530, 533, 541, 542, 543, 544, 547, 548, 554, 562, 566, 568, 569, 590, 594, 596, 620, 642, 666, 714, 716, 739, 781, 788, 789, 805, 806, 823, 824, 831, 839, 840, 985, 986, 991, 995, 1029, 1065, 1088, 1203, 1240, 1245, 1247, 1249, 1252, 1255, 1260], "lot": [4, 60, 83, 88, 189, 190, 192, 197, 201, 218, 221, 225, 241, 318, 401, 436, 485, 490, 494, 500, 508, 637, 713, 840, 871, 881, 887, 916, 917, 927, 948, 985, 994, 1011, 1065, 1081, 1109, 1114, 1136, 1193, 1243], "littl": [4, 15, 32, 192, 194, 197, 200, 201, 209, 221, 249, 258, 264, 265, 267, 274, 277, 299, 305, 316, 371, 381, 416, 465, 493, 494, 505, 656, 659, 715, 721, 802, 805, 843, 986, 988, 994, 1044, 1066, 1137, 1207, 1248, 1261, 1265], "maintain": [4, 16, 18, 42, 61, 71, 189, 190, 197, 218, 227, 248, 250, 258, 262, 264, 274, 277, 286, 398, 412, 416, 490, 504, 691, 742, 753, 865, 887, 895, 897, 899, 1034, 1065, 1066, 1067, 1069, 1076, 1081, 1082, 1083, 1084, 1132, 1196, 1256], "packag": [4, 9, 11, 17, 20, 48, 88, 95, 115, 138, 139, 140, 152, 171, 181, 182, 188, 191, 203, 205, 219, 221, 222, 225, 226, 228, 235, 240, 246, 248, 249, 250, 256, 258, 262, 264, 265, 268, 272, 274, 275, 277, 278, 280, 283, 286, 289, 307, 317, 318, 322, 326, 331, 336, 340, 343, 344, 347, 350, 357, 362, 366, 374, 377, 398, 399, 400, 401, 405, 416, 534, 535, 537, 538, 840, 860, 985, 993, 994, 1016, 1067, 1073, 1076, 1091, 1114, 1121, 1144, 1145, 1147, 1148, 1149, 1150, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1201, 1205, 1206, 1207, 1212, 1213, 1223, 1224, 1225, 1227, 1228, 1233, 1256, 1260, 1261, 1262, 1263, 1265], "index": [4, 11, 17, 27, 39, 41, 81, 101, 102, 188, 196, 208, 210, 215, 220, 222, 223, 225, 226, 228, 230, 234, 235, 237, 240, 242, 245, 246, 248, 249, 251, 254, 256, 259, 261, 262, 264, 265, 267, 268, 270, 271, 272, 275, 277, 278, 280, 282, 283, 284, 286, 287, 289, 298, 299, 301, 302, 307, 308, 309, 311, 313, 315, 317, 318, 321, 322, 323, 327, 328, 330, 333, 336, 339, 340, 341, 343, 344, 345, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 367, 398, 405, 428, 444, 470, 498, 506, 517, 621, 624, 627, 630, 633, 636, 637, 639, 676, 677, 679, 684, 723, 764, 792, 804, 819, 840, 883, 1054, 1057, 1061, 1113, 1114, 1126, 1129, 1136, 1142, 1144, 1145, 1146, 1148, 1150, 1163, 1169, 1174, 1189, 1191, 1192, 1193, 1195, 1196, 1197, 1205, 1207, 1209, 1211, 1212, 1214, 1218, 1228, 1230, 1235, 1264], "virtual": [4, 17, 60, 71, 97, 98, 103, 104, 105, 106, 107, 110, 111, 114, 124, 128, 133, 192, 195, 197, 216, 221, 225, 236, 240, 256, 272, 275, 278, 289, 294, 296, 298, 305, 314, 315, 316, 317, 318, 322, 333, 336, 339, 340, 343, 344, 350, 354, 362, 366, 379, 405, 416, 531, 543, 545, 548, 549, 554, 556, 562, 566, 571, 573, 574, 575, 578, 579, 580, 581, 582, 583, 590, 600, 640, 642, 666, 713, 714, 715, 739, 781, 789, 800, 802, 806, 839, 840, 846, 918, 924, 927, 987, 993, 995, 1004, 1013, 1029, 1049, 1059, 1114, 1117, 1144, 1145, 1146, 1189, 1191, 1192, 1193, 1197, 1205, 1207, 1218, 1221, 1224, 1240, 1245, 1250, 1253, 1254, 1255, 1264], "environ": [4, 9, 17, 66, 69, 88, 95, 115, 166, 180, 190, 201, 225, 231, 240, 241, 246, 256, 259, 262, 272, 275, 278, 289, 295, 298, 304, 317, 318, 322, 325, 326, 333, 336, 339, 340, 343, 344, 350, 357, 362, 366, 367, 369, 370, 399, 400, 411, 412, 549, 569, 583, 598, 599, 600, 601, 661, 800, 801, 824, 840, 917, 922, 926, 927, 948, 949, 968, 985, 986, 1026, 1045, 1050, 1066, 1076, 1077, 1078, 1083, 1085, 1097, 1117, 1119, 1144, 1145, 1146, 1189, 1191, 1192, 1193, 1197, 1198, 1205, 1207, 1212, 1213, 1218, 1219, 1221, 1224, 1225, 1231, 1235, 1237, 1244, 1250, 1264], "repo": [4, 113, 170, 201, 216, 219, 230, 357, 384, 389, 398, 402, 403, 610, 611, 612, 613, 615, 616, 617, 860, 887, 889, 1080, 1233], "creat": [4, 9, 12, 27, 30, 32, 42, 48, 49, 50, 51, 53, 68, 90, 92, 93, 100, 105, 109, 115, 119, 120, 137, 138, 140, 154, 161, 166, 168, 171, 178, 188, 190, 191, 192, 194, 197, 200, 201, 206, 208, 209, 210, 225, 226, 227, 228, 229, 230, 241, 246, 254, 259, 264, 265, 267, 272, 274, 277, 281, 286, 289, 294, 295, 296, 304, 305, 313, 316, 317, 318, 322, 323, 325, 326, 328, 333, 336, 340, 343, 344, 369, 370, 375, 398, 403, 421, 498, 500, 506, 513, 519, 522, 526, 532, 534, 542, 544, 547, 548, 549, 562, 563, 564, 568, 570, 571, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 642, 644, 647, 657, 697, 699, 715, 725, 731, 734, 736, 745, 747, 770, 784, 787, 796, 802, 803, 815, 816, 824, 835, 836, 838, 839, 840, 843, 846, 850, 851, 856, 858, 860, 862, 865, 871, 883, 887, 916, 917, 918, 919, 920, 921, 922, 928, 930, 931, 935, 936, 937, 939, 941, 943, 946, 952, 953, 955, 957, 958, 959, 960, 962, 968, 985, 993, 994, 995, 997, 998, 999, 1001, 1002, 1004, 1006, 1008, 1014, 1015, 1016, 1023, 1024, 1025, 1026, 1031, 1033, 1034, 1035, 1041, 1042, 1045, 1048, 1049, 1050, 1057, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1087, 1088, 1090, 1092, 1094, 1098, 1102, 1103, 1104, 1106, 1120, 1121, 1130, 1131, 1132, 1141, 1145, 1146, 1147, 1159, 1167, 1168, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1191, 1193, 1194, 1195, 1197, 1200, 1203, 1207, 1216, 1224, 1226, 1227, 1256], "popul": [4, 192, 196, 281, 314, 843], "yourself": [4, 190, 197, 201, 211, 267, 449, 517, 645, 654, 661, 666, 892, 950, 1036, 1059, 1249, 1261], "root": [4, 26, 50, 71, 115, 139, 141, 170, 189, 195, 197, 200, 201, 211, 216, 217, 218, 225, 229, 239, 261, 267, 277, 281, 284, 287, 302, 305, 309, 319, 323, 345, 351, 357, 363, 370, 383, 384, 389, 417, 484, 493, 497, 500, 520, 535, 539, 543, 601, 662, 718, 838, 851, 887, 888, 889, 918, 923, 925, 944, 948, 960, 961, 967, 970, 972, 973, 974, 975, 977, 978, 980, 986, 993, 994, 995, 997, 998, 1002, 1011, 1016, 1021, 1029, 1051, 1065, 1068, 1078, 1080, 1089, 1169, 1178, 1179, 1216, 1224, 1248], "bin": [4, 11, 38, 50, 113, 115, 116, 120, 123, 126, 128, 132, 144, 189, 191, 201, 209, 212, 222, 239, 249, 258, 261, 264, 269, 274, 277, 281, 284, 287, 299, 302, 307, 309, 319, 323, 345, 351, 357, 363, 367, 398, 406, 507, 508, 509, 511, 516, 520, 526, 532, 534, 535, 537, 538, 540, 585, 600, 601, 865, 887, 919, 923, 925, 930, 933, 944, 948, 949, 974, 975, 980, 993, 995, 1011, 1018, 1021, 1027, 1043, 1044, 1053, 1065, 1066, 1067, 1078, 1080, 1083, 1087, 1093, 1117, 1145, 1146, 1169, 1178, 1179, 1194, 1207, 1219, 1224, 1226], "activ": [4, 136, 195, 206, 229, 289, 742, 867, 869, 873, 881, 923, 925, 981, 1145, 1224, 1226], "requir": [4, 15, 25, 27, 30, 48, 80, 99, 113, 115, 173, 184, 188, 190, 191, 192, 195, 197, 201, 209, 217, 219, 221, 225, 229, 237, 248, 251, 262, 265, 267, 269, 274, 275, 289, 305, 314, 316, 317, 340, 371, 373, 409, 419, 452, 482, 484, 510, 515, 519, 530, 531, 534, 547, 567, 569, 589, 598, 601, 620, 668, 681, 697, 735, 746, 752, 753, 759, 762, 767, 768, 792, 799, 829, 830, 986, 993, 994, 995, 1006, 1011, 1049, 1051, 1058, 1078, 1083, 1104, 1114, 1132, 1141, 1142, 1146, 1199, 1219, 1224, 1226, 1227, 1233, 1242, 1244, 1249, 1250, 1251, 1252, 1254, 1255, 1259], "txt": [4, 21, 30, 32, 113, 115, 120, 133, 153, 187, 192, 207, 208, 212, 215, 216, 217, 218, 219, 248, 250, 255, 258, 267, 268, 277, 289, 299, 333, 336, 367, 373, 375, 376, 378, 380, 389, 390, 429, 508, 509, 510, 511, 513, 514, 516, 524, 526, 528, 532, 534, 535, 537, 538, 539, 540, 585, 598, 599, 600, 601, 602, 621, 624, 627, 628, 630, 633, 636, 639, 733, 838, 858, 913, 914, 915, 928, 932, 942, 952, 953, 954, 955, 959, 960, 967, 989, 993, 994, 1029, 1054, 1057, 1061, 1066, 1067, 1078, 1089, 1136, 1160, 1178, 1226, 1227, 1230, 1233, 1235], "fedorish": [4, 860, 1006, 1207], "your": [4, 31, 54, 93, 100, 115, 132, 138, 168, 173, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 218, 221, 224, 225, 229, 241, 249, 250, 267, 275, 281, 294, 296, 298, 305, 308, 311, 353, 370, 373, 384, 395, 404, 406, 449, 484, 492, 494, 496, 501, 502, 504, 515, 518, 519, 524, 526, 538, 543, 547, 568, 585, 588, 599, 601, 602, 658, 733, 734, 736, 737, 744, 750, 758, 782, 824, 837, 839, 840, 862, 879, 887, 892, 913, 914, 915, 917, 925, 927, 928, 937, 938, 939, 940, 941, 942, 943, 949, 952, 953, 954, 955, 957, 966, 985, 986, 993, 995, 997, 998, 1002, 1006, 1021, 1023, 1078, 1081, 1092, 1103, 1109, 1114, 1118, 1160, 1174, 1178, 1179, 1191, 1196, 1207, 1217, 1219, 1224, 1225, 1226, 1233, 1249, 1252], "mileag": [4, 294, 296, 1207, 1224], "might": [4, 15, 48, 49, 51, 113, 121, 126, 132, 189, 190, 191, 193, 195, 197, 200, 201, 217, 219, 221, 229, 250, 258, 264, 269, 274, 277, 308, 311, 314, 340, 371, 380, 384, 409, 480, 494, 504, 531, 535, 540, 544, 547, 568, 601, 651, 659, 725, 779, 789, 802, 803, 804, 838, 862, 873, 877, 883, 887, 930, 986, 993, 994, 995, 1006, 1011, 1020, 1044, 1051, 1062, 1078, 1081, 1089, 1098, 1101, 1114, 1193, 1207, 1224, 1227, 1231, 1244], "vari": [4, 258, 264, 274, 277, 281, 294, 296, 317, 318, 339, 343, 420, 494, 518, 697, 817, 887, 995, 1083, 1203, 1207, 1224, 1241], "dnf": [4, 48, 123, 173, 188, 193, 201, 218, 357, 417, 513, 515, 516, 539, 614, 860, 888, 988, 1006, 1067, 1080, 1207, 1231, 1233], "pandoc": 4, "graphviz": [4, 538, 1067], "dia": [4, 261, 319, 970, 1148], "gtest": [4, 32, 115, 166, 216, 217, 218, 219, 372, 373, 380, 417, 517, 542, 543, 544, 546, 547, 549, 551, 564, 566, 567, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 637, 644, 645, 646, 656, 657, 659, 660, 661, 662, 663, 721, 725, 747, 749, 752, 753, 754, 785, 791, 796, 800, 801, 802, 803, 805, 818, 819, 834, 835, 836, 838, 840, 1229], "devel": [4, 123, 173, 188, 201, 218, 513, 515, 516, 537, 539, 860, 1231, 1233], "markdown": [4, 11, 393, 1146], "handl": [4, 9, 17, 34, 65, 120, 141, 144, 163, 186, 190, 209, 221, 225, 226, 228, 230, 236, 249, 251, 256, 258, 262, 265, 266, 274, 279, 286, 298, 305, 315, 322, 323, 333, 336, 344, 349, 355, 361, 365, 398, 403, 405, 411, 412, 418, 458, 465, 470, 486, 490, 513, 516, 590, 620, 642, 656, 666, 699, 703, 725, 726, 735, 736, 737, 770, 772, 799, 802, 814, 815, 839, 840, 846, 850, 869, 881, 917, 920, 921, 922, 985, 993, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1021, 1023, 1024, 1026, 1036, 1042, 1045, 1048, 1050, 1053, 1059, 1062, 1091, 1109, 1114, 1115, 1130, 1140, 1143, 1189, 1191, 1240, 1249, 1250, 1251, 1252], "jupyt": [4, 209, 210, 212, 221, 222, 224, 232, 272, 274, 275, 277, 278, 307, 308, 311, 312, 318, 322, 328, 333, 336, 340, 344, 350, 357, 367, 398, 403, 970, 1114, 1193, 1194, 1198], "notebook": [4, 20, 208, 209, 210, 212, 221, 224, 232, 265, 272, 275, 277, 278, 280, 283, 286, 289, 298, 301, 307, 308, 311, 312, 318, 322, 328, 333, 336, 340, 344, 350, 351, 356, 362, 366, 367, 383, 403, 1114, 1193, 1198], "those": [4, 12, 69, 113, 124, 133, 190, 191, 197, 200, 219, 221, 225, 230, 248, 250, 251, 258, 262, 267, 268, 269, 271, 277, 281, 313, 314, 315, 316, 318, 333, 371, 373, 375, 383, 395, 398, 404, 409, 429, 484, 494, 504, 506, 511, 514, 516, 526, 535, 543, 544, 547, 548, 614, 656, 678, 719, 722, 730, 745, 780, 796, 804, 806, 838, 853, 856, 887, 914, 915, 932, 933, 986, 993, 994, 995, 1062, 1082, 1083, 1084, 1085, 1089, 1090, 1097, 1102, 1155, 1165, 1186, 1196, 1204, 1210, 1212, 1224, 1242, 1245, 1249, 1256], "funki": [4, 192], "graph": [4, 17, 69, 78, 133, 259, 272, 286, 289, 322, 328, 375, 398, 405, 499, 515, 531, 538, 1067, 1082, 1083, 1191, 1197], "histor": [4, 12, 69, 192, 213, 430, 443, 488, 741, 846, 926, 1006, 1063, 1182, 1236], "baggag": [4, 430, 443, 741, 1063, 1182], "convert": [4, 17, 30, 210, 240, 248, 254, 258, 261, 264, 267, 271, 274, 277, 278, 281, 298, 323, 333, 336, 351, 379, 383, 443, 465, 490, 500, 511, 538, 543, 598, 712, 719, 721, 725, 754, 755, 840, 993, 1023, 1065, 1105, 1148, 1150, 1155, 1162, 1165, 1184, 1185, 1186, 1189, 1204], "vector": [4, 97, 99, 101, 102, 115, 120, 121, 124, 151, 216, 244, 250, 267, 293, 294, 307, 313, 314, 316, 354, 367, 380, 547, 549, 573, 574, 590, 591, 598, 604, 605, 606, 607, 618, 636, 638, 642, 646, 648, 653, 657, 681, 683, 684, 685, 687, 690, 692, 705, 709, 723, 726, 727, 734, 735, 736, 737, 739, 745, 746, 750, 755, 756, 757, 764, 765, 766, 767, 768, 770, 790, 791, 794, 818, 824, 834, 836, 840, 1062, 1119, 1198, 1215, 1236], "draw": [4, 173, 229, 340, 379, 380, 406, 440, 596, 794, 844, 848, 856, 877, 900], "svg": 4, "ani": [4, 27, 33, 37, 53, 110, 133, 141, 161, 172, 189, 190, 191, 192, 195, 197, 201, 209, 213, 224, 227, 229, 241, 248, 250, 258, 264, 274, 277, 281, 292, 293, 294, 302, 318, 323, 340, 353, 372, 384, 405, 406, 438, 482, 490, 504, 507, 514, 518, 519, 520, 524, 531, 547, 552, 594, 595, 596, 597, 601, 602, 614, 631, 649, 652, 677, 715, 721, 723, 729, 742, 745, 747, 764, 770, 788, 789, 792, 801, 802, 803, 805, 806, 814, 820, 838, 839, 840, 845, 846, 858, 860, 879, 887, 897, 904, 914, 915, 925, 928, 935, 936, 939, 940, 941, 942, 948, 960, 970, 986, 993, 994, 995, 998, 1021, 1034, 1038, 1058, 1085, 1087, 1088, 1089, 1090, 1094, 1101, 1102, 1109, 1112, 1121, 1126, 1128, 1139, 1140, 1146, 1170, 1172, 1187, 1198, 1213, 1214, 1219, 1231, 1241, 1249, 1255, 1264], "That": [4, 75, 89, 90, 113, 115, 116, 120, 124, 141, 148, 153, 154, 168, 189, 190, 191, 192, 195, 200, 201, 213, 221, 225, 228, 267, 291, 295, 297, 311, 314, 316, 409, 472, 473, 476, 479, 483, 492, 496, 501, 502, 516, 530, 531, 543, 544, 554, 566, 568, 570, 586, 588, 601, 648, 652, 734, 744, 782, 808, 814, 815, 837, 839, 840, 914, 915, 917, 918, 920, 921, 922, 924, 925, 934, 937, 938, 939, 940, 941, 942, 943, 948, 985, 986, 994, 997, 998, 999, 1000, 1001, 1004, 1022, 1026, 1042, 1048, 1050, 1071, 1072, 1076, 1077, 1088, 1114, 1121, 1181, 1183, 1188, 1217, 1224, 1234, 1241], "sloppili": [4, 1019], "track": [4, 113, 141, 193, 197, 228, 248, 258, 264, 274, 277, 801, 860, 887, 888, 892, 925, 1101], "opentrain": [4, 10, 16, 172, 226, 233, 251, 406, 1224], "recip": [4, 27, 184, 190, 191, 399, 400, 484, 668], "set": [5, 9, 17, 21, 49, 51, 69, 76, 81, 99, 115, 116, 154, 161, 166, 170, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 206, 209, 210, 221, 222, 225, 226, 228, 229, 230, 233, 234, 238, 239, 240, 244, 246, 247, 250, 252, 256, 257, 259, 260, 262, 263, 265, 266, 268, 270, 272, 273, 274, 279, 280, 282, 283, 285, 286, 288, 294, 296, 298, 300, 301, 303, 305, 307, 308, 310, 311, 314, 315, 316, 318, 320, 321, 322, 324, 327, 328, 330, 333, 336, 339, 340, 342, 343, 344, 346, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 368, 371, 374, 377, 380, 398, 403, 405, 416, 417, 432, 438, 455, 460, 461, 470, 473, 485, 486, 494, 500, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 524, 528, 531, 535, 537, 539, 544, 547, 549, 564, 569, 578, 579, 583, 592, 593, 598, 599, 600, 601, 618, 646, 647, 660, 661, 662, 663, 676, 746, 755, 770, 800, 801, 816, 838, 840, 858, 871, 873, 883, 887, 892, 897, 919, 927, 933, 949, 986, 988, 993, 995, 1002, 1007, 1009, 1015, 1023, 1027, 1033, 1038, 1046, 1047, 1050, 1051, 1062, 1064, 1065, 1066, 1078, 1081, 1087, 1090, 1091, 1094, 1103, 1104, 1113, 1114, 1117, 1121, 1126, 1146, 1168, 1179, 1186, 1187, 1189, 1191, 1193, 1196, 1197, 1198, 1200, 1204, 1219, 1231, 1233, 1236, 1242, 1248, 1251, 1264], "sphinx": [5, 11, 27, 175, 202, 404, 841, 1224], "togeth": [5, 12, 31, 38, 95, 97, 101, 102, 120, 124, 148, 182, 197, 200, 201, 209, 219, 221, 225, 229, 241, 250, 267, 294, 296, 313, 314, 316, 331, 340, 343, 347, 406, 416, 461, 494, 495, 512, 514, 591, 601, 620, 642, 659, 660, 662, 663, 814, 816, 851, 864, 887, 914, 915, 975, 976, 994, 995, 1025, 1041, 1065, 1071, 1072, 1076, 1078, 1081, 1085, 1164, 1197, 1217, 1219, 1227, 1231, 1241, 1244, 1245, 1255, 1256], "form": [5, 17, 192, 197, 209, 213, 237, 258, 264, 265, 274, 277, 314, 316, 481, 497, 556, 564, 566, 605, 606, 618, 715, 725, 841, 887, 892, 895, 919, 970, 995, 1125, 1145, 1148, 1181, 1183, 1186, 1187, 1193, 1199, 1219, 1224, 1241], "": [5, 8, 11, 19, 23, 25, 26, 28, 31, 32, 33, 36, 43, 48, 49, 50, 51, 54, 55, 69, 80, 95, 99, 100, 113, 115, 120, 128, 132, 133, 141, 151, 153, 154, 173, 176, 178, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 206, 209, 210, 211, 213, 215, 216, 218, 219, 221, 222, 225, 227, 228, 232, 233, 237, 239, 240, 241, 242, 243, 245, 248, 250, 251, 254, 255, 258, 261, 262, 264, 265, 267, 268, 269, 271, 274, 275, 277, 281, 284, 287, 290, 293, 294, 296, 299, 302, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 323, 326, 329, 331, 333, 336, 339, 340, 341, 343, 345, 347, 351, 353, 354, 356, 357, 363, 367, 371, 372, 379, 380, 381, 383, 384, 392, 393, 395, 398, 401, 402, 416, 417, 430, 432, 438, 443, 464, 465, 468, 477, 482, 484, 486, 487, 488, 489, 490, 494, 505, 506, 508, 509, 516, 518, 519, 522, 526, 534, 535, 537, 540, 542, 543, 544, 546, 547, 548, 549, 552, 553, 564, 566, 567, 569, 570, 574, 585, 587, 598, 599, 600, 601, 604, 610, 612, 613, 621, 624, 627, 628, 630, 633, 636, 639, 646, 648, 649, 652, 653, 655, 656, 658, 659, 668, 678, 688, 689, 699, 706, 708, 713, 715, 718, 719, 725, 726, 729, 733, 743, 744, 746, 748, 750, 753, 754, 755, 756, 759, 763, 764, 770, 779, 782, 784, 787, 791, 792, 794, 796, 800, 801, 802, 804, 806, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 836, 838, 839, 840, 846, 855, 858, 860, 865, 871, 873, 883, 892, 895, 907, 912, 913, 914, 915, 918, 919, 923, 925, 926, 930, 931, 932, 934, 936, 938, 940, 942, 944, 945, 946, 948, 950, 951, 967, 970, 971, 974, 975, 977, 978, 980, 981, 982, 986, 989, 993, 994, 995, 996, 997, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1029, 1030, 1034, 1035, 1036, 1040, 1041, 1044, 1046, 1049, 1050, 1051, 1053, 1054, 1055, 1057, 1059, 1061, 1062, 1063, 1068, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1092, 1093, 1095, 1096, 1097, 1101, 1102, 1109, 1114, 1115, 1118, 1122, 1123, 1129, 1132, 1135, 1136, 1139, 1140, 1143, 1148, 1153, 1160, 1171, 1178, 1179, 1180, 1182, 1197, 1199, 1200, 1203, 1204, 1207, 1214, 1215, 1216, 1217, 1219, 1224, 1225, 1230, 1233, 1235, 1236, 1241, 1245, 1249, 1252, 1256, 1261, 1262, 1264], "short": [5, 20, 23, 31, 97, 133, 190, 197, 217, 221, 225, 228, 229, 230, 240, 241, 258, 262, 263, 264, 269, 272, 274, 275, 279, 297, 313, 314, 315, 316, 317, 318, 380, 420, 436, 438, 443, 447, 448, 473, 482, 526, 548, 562, 590, 602, 642, 647, 651, 840, 883, 889, 892, 927, 948, 974, 993, 995, 1006, 1013, 1023, 1047, 1052, 1086, 1100, 1123, 1126, 1142, 1215, 1224, 1226, 1241], "video": [5, 10, 186, 193, 195, 197, 207, 221, 224, 225, 228, 233, 246, 249, 250, 272, 316, 319, 322, 505, 792, 986, 994, 1191, 1198, 1207], "german": [5, 205, 517, 536, 1204, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "explain": [5, 50, 53, 88, 120, 154, 186, 189, 195, 201, 213, 221, 225, 227, 251, 262, 267, 269, 271, 272, 280, 281, 318, 372, 383, 413, 416, 484, 494, 634, 928, 948, 951, 986, 995, 1053, 1137, 1191, 1224, 1249], "case": [5, 12, 31, 88, 95, 97, 100, 113, 118, 121, 133, 141, 154, 161, 188, 189, 190, 191, 194, 197, 200, 201, 210, 213, 225, 227, 229, 231, 251, 264, 265, 271, 277, 281, 284, 293, 294, 296, 297, 305, 308, 311, 323, 340, 343, 353, 371, 372, 380, 406, 427, 434, 453, 455, 486, 488, 506, 514, 518, 524, 526, 535, 537, 541, 548, 552, 555, 590, 598, 599, 601, 607, 609, 628, 642, 649, 658, 697, 703, 723, 736, 742, 759, 770, 782, 789, 792, 800, 814, 825, 827, 838, 839, 840, 860, 887, 900, 903, 915, 919, 923, 930, 944, 960, 978, 985, 986, 995, 1005, 1006, 1012, 1023, 1044, 1049, 1063, 1070, 1073, 1076, 1078, 1080, 1082, 1089, 1090, 1120, 1121, 1132, 1136, 1160, 1199, 1215, 1224, 1232, 1242], "netide": 5, "f\u00f6rderantrag": 5, "miscellan": [5, 17, 81, 203, 233, 246, 249, 256, 259, 260, 262, 268, 270, 272, 273, 278, 279, 280, 283, 286, 288, 296, 301, 303, 307, 308, 311, 321, 322, 324, 327, 330, 344, 349, 352, 354, 355, 356, 358, 361, 362, 365, 366, 368, 384, 385, 386, 387, 388, 389, 398, 406, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840, 841, 985, 1015, 1016, 1021, 1024, 1026, 1042, 1045, 1091, 1113, 1144, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1197, 1198, 1204, 1207, 1211, 1218, 1221, 1228, 1240, 1241, 1243, 1244, 1254, 1260, 1261, 1262, 1264, 1265], "screencast": [7, 11, 171, 1191], "written": [7, 30, 31, 69, 97, 116, 123, 166, 189, 190, 195, 227, 277, 371, 400, 461, 464, 480, 488, 490, 494, 534, 564, 719, 733, 753, 841, 927, 1015, 1022, 1059, 1066, 1067, 1076, 1108, 1115, 1146, 1248, 1256], "new": [7, 20, 30, 32, 37, 38, 43, 50, 54, 69, 98, 113, 120, 121, 145, 161, 190, 192, 193, 194, 195, 196, 197, 200, 216, 221, 241, 258, 262, 264, 274, 277, 281, 289, 299, 316, 322, 323, 340, 373, 384, 409, 415, 443, 473, 477, 478, 486, 490, 504, 524, 534, 547, 549, 567, 571, 583, 585, 589, 598, 600, 601, 610, 611, 612, 613, 615, 616, 620, 626, 634, 643, 644, 649, 652, 697, 699, 710, 712, 713, 718, 736, 740, 744, 746, 747, 751, 752, 753, 755, 758, 769, 780, 783, 787, 789, 791, 793, 794, 798, 799, 800, 801, 802, 803, 807, 808, 815, 817, 818, 820, 824, 828, 829, 830, 831, 837, 840, 841, 844, 881, 887, 895, 919, 944, 967, 986, 989, 993, 995, 1018, 1019, 1020, 1029, 1033, 1034, 1040, 1052, 1084, 1103, 1118, 1121, 1130, 1170, 1195, 1196, 1213, 1219, 1224, 1240, 1241, 1242, 1243], "draft": [7, 17, 221, 839, 840, 985, 1142, 1189, 1263], "youtub": [8, 197, 210, 221, 224, 226, 228, 230, 233, 235, 243, 250, 317, 318, 339, 343, 357, 384], "watch": [8, 20, 191, 192, 193, 210, 217, 221, 225, 226, 230, 316, 318, 322, 505, 792, 986, 994, 1030, 1093, 1114, 1217], "v": [8, 11, 19, 20, 53, 79, 113, 123, 164, 170, 190, 197, 210, 213, 216, 222, 226, 228, 230, 234, 236, 237, 240, 241, 242, 247, 249, 250, 251, 258, 261, 262, 264, 265, 267, 270, 276, 279, 282, 285, 287, 291, 298, 299, 302, 305, 310, 318, 320, 324, 328, 329, 335, 341, 345, 351, 354, 357, 363, 367, 373, 384, 398, 494, 529, 540, 543, 564, 590, 624, 642, 698, 718, 742, 746, 750, 755, 756, 757, 764, 765, 766, 767, 768, 773, 776, 777, 778, 784, 790, 791, 792, 815, 819, 822, 824, 836, 839, 840, 849, 854, 857, 859, 864, 868, 870, 874, 878, 879, 880, 882, 884, 887, 889, 891, 895, 896, 898, 902, 905, 908, 913, 917, 920, 921, 922, 925, 948, 950, 978, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1058, 1059, 1065, 1109, 1132, 1226, 1227, 1238, 1251, 1254], "w5g8k7a2gbg": 8, "bore": [8, 250, 272, 286, 302, 328, 948, 1059, 1063, 1121, 1191], "good": [8, 15, 17, 31, 88, 115, 136, 189, 190, 191, 192, 197, 213, 221, 225, 228, 246, 249, 250, 258, 262, 267, 268, 269, 271, 272, 275, 281, 296, 298, 308, 311, 314, 316, 322, 323, 344, 353, 373, 379, 380, 439, 443, 484, 488, 490, 498, 499, 504, 519, 524, 547, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 625, 642, 646, 650, 651, 664, 667, 670, 686, 692, 696, 699, 705, 708, 709, 714, 718, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 753, 782, 793, 798, 804, 807, 813, 815, 817, 824, 827, 837, 839, 840, 844, 846, 879, 887, 892, 912, 927, 931, 982, 986, 994, 995, 1019, 1021, 1040, 1049, 1052, 1053, 1059, 1062, 1089, 1102, 1120, 1121, 1132, 1135, 1137, 1140, 1153, 1163, 1191, 1198, 1217, 1245, 1251, 1252, 1256, 1262], "j2hzby8e4yq": 8, "pov": 8, "classmethod": [9, 302], "staticmethod": [9, 302], "class": [9, 17, 30, 32, 43, 46, 50, 60, 61, 64, 65, 76, 83, 88, 97, 98, 99, 101, 102, 105, 108, 109, 110, 111, 112, 115, 116, 120, 121, 123, 124, 126, 128, 132, 133, 152, 166, 197, 207, 208, 209, 211, 216, 225, 226, 227, 228, 230, 232, 233, 245, 249, 251, 258, 261, 262, 264, 265, 269, 273, 275, 276, 279, 281, 284, 287, 289, 291, 293, 294, 296, 301, 302, 306, 308, 309, 311, 315, 316, 317, 318, 320, 321, 322, 323, 327, 329, 339, 340, 341, 343, 344, 345, 349, 351, 353, 354, 355, 356, 357, 361, 362, 363, 365, 366, 368, 371, 372, 381, 384, 386, 392, 393, 400, 401, 402, 409, 434, 480, 504, 506, 508, 542, 543, 544, 545, 546, 548, 549, 551, 552, 556, 562, 563, 564, 566, 567, 569, 570, 571, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 607, 609, 614, 620, 628, 631, 634, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 655, 657, 659, 664, 666, 667, 670, 676, 685, 686, 692, 696, 702, 705, 708, 709, 714, 715, 716, 718, 719, 723, 724, 725, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 746, 747, 748, 749, 750, 751, 752, 755, 759, 764, 766, 767, 768, 770, 772, 773, 776, 777, 778, 779, 780, 781, 782, 784, 785, 787, 789, 796, 798, 801, 802, 805, 806, 807, 814, 815, 816, 823, 824, 825, 827, 829, 831, 834, 835, 836, 837, 839, 840, 842, 986, 993, 994, 995, 1027, 1029, 1030, 1087, 1089, 1091, 1097, 1098, 1099, 1100, 1101, 1104, 1105, 1110, 1111, 1112, 1115, 1118, 1120, 1121, 1129, 1150, 1177, 1178, 1179, 1184, 1186, 1189, 1204, 1218, 1224, 1225, 1236, 1241, 1260, 1261], "member": [9, 23, 26, 31, 45, 50, 101, 102, 115, 210, 211, 212, 222, 227, 249, 267, 279, 292, 307, 314, 323, 354, 372, 379, 380, 402, 473, 482, 489, 546, 588, 590, 593, 596, 620, 634, 642, 644, 645, 647, 648, 649, 650, 654, 655, 659, 660, 662, 664, 697, 698, 702, 723, 725, 727, 730, 731, 732, 734, 735, 736, 737, 738, 739, 742, 750, 754, 755, 764, 770, 780, 796, 802, 824, 836, 838, 840, 848, 853, 855, 875, 883, 887, 900, 906, 913, 914, 915, 931, 932, 933, 934, 935, 936, 942, 978, 982, 993, 1021, 1078, 1139, 1216, 1236], "more": [9, 15, 17, 31, 33, 49, 51, 55, 60, 69, 73, 81, 88, 92, 97, 105, 111, 115, 116, 119, 120, 123, 133, 185, 190, 191, 194, 195, 197, 200, 201, 203, 205, 210, 211, 213, 218, 221, 225, 226, 227, 228, 229, 230, 231, 233, 235, 240, 241, 246, 248, 249, 250, 251, 252, 256, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 275, 278, 279, 280, 282, 283, 285, 289, 293, 294, 295, 296, 300, 303, 304, 314, 315, 316, 323, 325, 326, 330, 332, 340, 344, 348, 352, 353, 354, 358, 364, 368, 369, 372, 373, 374, 376, 377, 378, 381, 384, 385, 386, 387, 388, 389, 401, 403, 409, 416, 427, 432, 436, 439, 443, 453, 454, 455, 464, 466, 472, 473, 476, 479, 483, 484, 489, 490, 492, 494, 496, 498, 499, 500, 501, 502, 506, 507, 509, 513, 517, 523, 533, 535, 537, 548, 555, 562, 564, 568, 569, 580, 585, 590, 598, 600, 620, 637, 642, 646, 650, 698, 712, 713, 714, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 741, 744, 751, 752, 763, 770, 779, 782, 783, 791, 792, 794, 796, 798, 799, 801, 802, 805, 807, 815, 816, 837, 838, 839, 840, 843, 846, 858, 860, 865, 871, 873, 875, 879, 881, 883, 887, 913, 918, 924, 948, 951, 982, 986, 988, 992, 993, 994, 995, 1006, 1012, 1015, 1018, 1021, 1034, 1036, 1047, 1051, 1053, 1059, 1063, 1065, 1066, 1067, 1076, 1078, 1082, 1083, 1084, 1090, 1092, 1094, 1098, 1099, 1100, 1101, 1105, 1108, 1109, 1113, 1114, 1116, 1120, 1121, 1132, 1144, 1147, 1148, 1149, 1150, 1160, 1162, 1163, 1169, 1171, 1172, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1200, 1201, 1204, 1205, 1207, 1210, 1214, 1218, 1219, 1221, 1223, 1225, 1226, 1228, 1233, 1237, 1241, 1242, 1244, 1245, 1248, 1256, 1261, 1262, 1263, 1264, 1265], "except": [9, 17, 31, 34, 48, 50, 65, 101, 102, 144, 148, 173, 191, 195, 201, 208, 209, 216, 221, 222, 225, 226, 228, 230, 232, 237, 239, 242, 245, 249, 250, 251, 254, 256, 258, 261, 262, 265, 266, 269, 271, 275, 276, 279, 281, 284, 286, 287, 291, 299, 302, 306, 309, 317, 318, 319, 322, 323, 329, 339, 340, 341, 343, 344, 345, 351, 357, 363, 367, 383, 385, 391, 392, 393, 394, 398, 403, 411, 412, 430, 482, 485, 531, 544, 545, 552, 579, 590, 607, 609, 642, 670, 686, 692, 696, 705, 708, 709, 713, 724, 725, 727, 734, 735, 737, 738, 739, 743, 746, 770, 778, 799, 801, 802, 813, 819, 840, 855, 887, 920, 921, 926, 993, 1049, 1063, 1087, 1091, 1094, 1097, 1100, 1103, 1115, 1118, 1136, 1138, 1143, 1189, 1191, 1208, 1213, 1226, 1236, 1240, 1260, 1261], "final": [9, 26, 30, 48, 54, 69, 97, 141, 211, 221, 225, 228, 248, 250, 258, 264, 265, 274, 279, 292, 298, 322, 344, 354, 379, 380, 381, 506, 599, 601, 665, 666, 715, 725, 742, 753, 782, 824, 839, 840, 850, 881, 887, 914, 915, 982, 988, 994, 995, 1065, 1083, 1087, 1100, 1153, 1169, 1191, 1241], "els": [9, 31, 38, 50, 101, 102, 110, 116, 132, 148, 166, 190, 192, 193, 196, 209, 212, 222, 225, 228, 232, 240, 242, 245, 248, 249, 250, 254, 258, 261, 262, 265, 266, 267, 269, 273, 274, 279, 281, 284, 288, 290, 299, 301, 302, 307, 309, 319, 323, 329, 341, 351, 358, 363, 368, 383, 394, 405, 426, 432, 443, 448, 459, 465, 466, 472, 476, 479, 483, 484, 492, 496, 501, 502, 506, 508, 509, 512, 515, 522, 524, 549, 573, 580, 583, 637, 659, 683, 684, 694, 701, 715, 721, 736, 744, 749, 782, 803, 805, 812, 816, 837, 839, 840, 869, 879, 903, 914, 915, 920, 921, 940, 942, 945, 951, 973, 994, 1007, 1010, 1015, 1043, 1044, 1046, 1049, 1051, 1090, 1097, 1109, 1110, 1124, 1132, 1138, 1213, 1240, 1261], "exec": [9, 17, 197, 221, 230, 261, 275, 276, 284, 291, 303, 307, 309, 317, 318, 319, 323, 330, 339, 343, 350, 352, 840, 977, 982, 1015, 1018, 1041, 1065, 1091, 1189, 1252, 1260], "dict": [9, 208, 221, 222, 226, 237, 239, 240, 245, 248, 262, 263, 264, 265, 268, 270, 273, 274, 275, 279, 285, 299, 302, 309, 319, 323, 329, 334, 341, 345, 351, 356, 358, 364, 367, 390, 393, 398, 742, 1087, 1090, 1102, 1103, 1112, 1138, 1261], "modul": [9, 11, 17, 54, 171, 182, 193, 195, 200, 211, 217, 219, 221, 224, 225, 226, 227, 228, 235, 236, 242, 245, 249, 251, 256, 258, 259, 262, 264, 265, 268, 269, 271, 272, 274, 275, 277, 278, 280, 281, 283, 284, 288, 289, 292, 298, 300, 301, 302, 307, 309, 317, 318, 321, 323, 327, 328, 331, 332, 333, 336, 341, 343, 345, 347, 348, 349, 350, 351, 356, 357, 361, 362, 363, 365, 366, 367, 374, 375, 376, 377, 378, 383, 384, 393, 399, 400, 401, 403, 409, 416, 460, 504, 506, 513, 516, 517, 523, 524, 528, 531, 532, 533, 539, 552, 741, 782, 839, 840, 843, 844, 846, 847, 849, 851, 852, 853, 854, 856, 857, 864, 867, 868, 872, 878, 883, 884, 888, 889, 891, 896, 899, 902, 905, 908, 985, 986, 993, 995, 1090, 1091, 1105, 1114, 1115, 1118, 1119, 1130, 1132, 1138, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1184, 1185, 1186, 1187, 1189, 1192, 1193, 1197, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1218, 1219, 1221, 1223, 1224, 1227, 1228, 1234, 1247, 1249, 1253, 1256, 1261, 1265], "There": [9, 33, 43, 45, 59, 72, 88, 124, 153, 163, 189, 191, 192, 193, 194, 197, 201, 202, 217, 218, 222, 224, 225, 228, 232, 233, 246, 251, 267, 270, 271, 272, 275, 281, 308, 311, 314, 315, 316, 317, 318, 339, 340, 354, 373, 379, 380, 384, 418, 428, 434, 443, 458, 461, 482, 484, 491, 494, 505, 506, 516, 522, 526, 531, 544, 569, 570, 620, 628, 645, 650, 694, 719, 738, 739, 751, 753, 759, 782, 787, 798, 802, 806, 807, 815, 819, 837, 839, 840, 860, 887, 892, 918, 948, 986, 993, 994, 1041, 1051, 1062, 1063, 1115, 1121, 1132, 1191, 1200, 1225, 1231], "one": [9, 15, 20, 28, 32, 33, 38, 49, 50, 51, 53, 71, 75, 76, 97, 101, 102, 113, 115, 116, 119, 120, 124, 128, 132, 133, 148, 154, 157, 161, 170, 176, 180, 182, 186, 189, 190, 191, 192, 193, 194, 196, 197, 200, 201, 209, 210, 211, 213, 218, 221, 222, 225, 227, 229, 232, 237, 239, 240, 241, 242, 245, 248, 250, 251, 258, 261, 264, 269, 271, 272, 274, 275, 277, 280, 281, 284, 287, 289, 299, 302, 305, 308, 309, 311, 313, 315, 319, 323, 328, 329, 331, 340, 345, 347, 351, 357, 363, 367, 371, 379, 380, 383, 384, 389, 390, 395, 398, 404, 416, 420, 427, 438, 443, 445, 453, 458, 460, 461, 465, 468, 470, 475, 478, 486, 487, 488, 490, 494, 498, 500, 506, 508, 512, 516, 520, 522, 524, 530, 531, 534, 535, 537, 540, 542, 543, 544, 549, 551, 552, 554, 555, 563, 568, 570, 588, 591, 593, 594, 598, 599, 601, 620, 631, 637, 648, 649, 656, 657, 659, 660, 661, 662, 663, 674, 675, 683, 694, 697, 701, 716, 723, 725, 741, 742, 745, 746, 747, 750, 759, 770, 789, 791, 792, 800, 802, 803, 804, 805, 806, 812, 814, 816, 824, 838, 848, 855, 862, 865, 875, 881, 887, 895, 903, 907, 912, 913, 914, 920, 921, 930, 932, 933, 948, 967, 982, 986, 988, 989, 990, 993, 994, 995, 996, 998, 1002, 1005, 1006, 1012, 1013, 1015, 1016, 1019, 1022, 1023, 1025, 1033, 1034, 1035, 1036, 1038, 1041, 1044, 1047, 1049, 1050, 1051, 1058, 1062, 1065, 1068, 1071, 1072, 1078, 1081, 1082, 1084, 1085, 1087, 1089, 1090, 1092, 1098, 1100, 1101, 1103, 1114, 1115, 1118, 1119, 1120, 1122, 1126, 1127, 1129, 1131, 1132, 1136, 1138, 1140, 1141, 1149, 1159, 1162, 1169, 1170, 1195, 1196, 1197, 1198, 1200, 1204, 1207, 1209, 1215, 1216, 1217, 1220, 1224, 1226, 1231, 1233, 1244, 1248, 1249, 1256, 1260, 1263], "half": [9, 24, 162, 190, 191, 192, 251, 490, 535, 885, 927, 994, 1049, 1087], "heart": [9, 20, 26, 54, 182, 535, 927, 1197], "split": [9, 209, 212, 245, 249, 254, 255, 258, 261, 262, 264, 269, 273, 279, 287, 290, 302, 307, 309, 323, 329, 345, 352, 357, 363, 367, 380, 389, 398, 482, 506, 548, 620, 1087, 1197], "pimp": 9, "elabor": [9, 201, 265, 275, 484, 534, 994], "namespac": [9, 221, 258, 264, 271, 274, 277, 281, 292, 302, 507, 549, 551, 566, 602, 603, 604, 605, 606, 608, 618, 619, 637, 658, 666, 671, 672, 673, 674, 675, 681, 682, 684, 685, 688, 689, 690, 694, 708, 721, 732, 733, 742, 757, 779, 789, 792, 814, 816, 817, 993, 1027, 1030, 1031, 1044, 1046, 1097], "__init__": [9, 50, 208, 209, 220, 222, 225, 227, 245, 248, 249, 261, 262, 264, 271, 274, 277, 281, 287, 290, 299, 302, 309, 319, 323, 341, 345, 363, 367, 506, 1087, 1088, 1089, 1097, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1224], "py": [9, 20, 28, 50, 53, 54, 172, 173, 208, 209, 212, 220, 221, 222, 225, 226, 228, 230, 240, 243, 249, 255, 258, 262, 264, 265, 268, 269, 272, 274, 275, 277, 278, 280, 281, 287, 289, 301, 307, 308, 309, 317, 318, 322, 323, 328, 339, 340, 345, 358, 366, 367, 378, 380, 383, 398, 506, 507, 784, 993, 1051, 1053, 1087, 1090, 1092, 1093, 1097, 1098, 1100, 1116, 1117, 1119, 1125, 1142, 1145, 1146, 1147, 1148, 1152, 1153, 1155, 1156, 1158, 1160, 1165, 1169, 1171, 1173, 1175, 1176, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1193, 1194, 1199, 1207, 1212, 1213, 1224, 1225], "__all__": [9, 277, 281], "etc": [9, 11, 17, 50, 81, 91, 115, 151, 173, 181, 191, 195, 206, 207, 211, 218, 225, 228, 232, 233, 235, 238, 239, 246, 247, 249, 250, 252, 256, 259, 261, 262, 264, 268, 269, 272, 278, 279, 280, 281, 283, 284, 286, 288, 291, 301, 302, 305, 308, 309, 311, 319, 321, 322, 324, 327, 328, 344, 345, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 370, 384, 385, 386, 387, 388, 389, 398, 403, 406, 416, 438, 443, 499, 520, 524, 535, 539, 551, 634, 724, 739, 784, 790, 817, 838, 840, 846, 860, 887, 899, 909, 917, 919, 923, 925, 928, 930, 931, 932, 933, 944, 948, 951, 962, 965, 967, 968, 970, 972, 973, 974, 975, 976, 977, 978, 980, 982, 985, 995, 996, 997, 1005, 1006, 1009, 1010, 1011, 1016, 1022, 1033, 1044, 1058, 1059, 1063, 1065, 1068, 1087, 1089, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1136, 1140, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1216, 1218, 1247, 1250], "user": [9, 11, 17, 19, 35, 41, 50, 53, 75, 92, 93, 101, 102, 115, 121, 138, 148, 151, 163, 172, 173, 178, 189, 190, 191, 192, 194, 195, 197, 211, 217, 220, 221, 222, 225, 229, 236, 245, 248, 250, 252, 261, 267, 269, 274, 275, 277, 278, 280, 281, 284, 287, 289, 298, 299, 302, 305, 308, 309, 311, 319, 323, 326, 333, 334, 336, 340, 345, 351, 353, 357, 363, 369, 370, 375, 378, 383, 395, 398, 407, 462, 493, 504, 506, 508, 514, 515, 520, 534, 535, 542, 552, 569, 570, 590, 604, 620, 642, 645, 646, 652, 658, 702, 706, 726, 728, 729, 730, 731, 738, 739, 755, 759, 791, 802, 815, 839, 840, 846, 848, 858, 860, 885, 887, 900, 901, 914, 915, 917, 922, 926, 927, 928, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 973, 977, 980, 985, 986, 987, 996, 1002, 1009, 1014, 1015, 1016, 1019, 1021, 1024, 1026, 1033, 1042, 1045, 1046, 1048, 1050, 1051, 1062, 1065, 1080, 1082, 1083, 1084, 1087, 1104, 1105, 1142, 1150, 1152, 1153, 1157, 1169, 1170, 1176, 1181, 1183, 1186, 1188, 1189, 1202, 1207, 1210, 1214, 1217, 1226, 1233, 1241, 1252], "import": [9, 17, 50, 180, 192, 197, 200, 209, 210, 211, 212, 221, 222, 225, 227, 228, 233, 237, 239, 240, 241, 249, 253, 254, 255, 260, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 293, 294, 299, 302, 306, 307, 308, 309, 311, 313, 319, 323, 329, 334, 337, 341, 345, 351, 356, 357, 363, 367, 391, 393, 420, 436, 506, 512, 513, 516, 535, 666, 683, 750, 788, 802, 805, 824, 840, 869, 887, 930, 948, 986, 989, 993, 1002, 1014, 1043, 1053, 1064, 1086, 1087, 1088, 1090, 1098, 1100, 1102, 1108, 1109, 1112, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1130, 1134, 1142, 1144, 1145, 1146, 1179, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1202, 1203, 1205, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1221, 1224, 1225, 1228, 1231, 1249, 1251, 1261], "pythonpath": [9, 28, 48, 221, 307, 1097, 1146], "goto": [9, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840, 1062], "orgi": [9, 508, 746], "perspect": [9, 26, 197, 218], "alwai": [9, 31, 71, 113, 192, 202, 218, 225, 248, 270, 281, 307, 308, 311, 353, 372, 379, 380, 390, 398, 403, 420, 438, 464, 465, 477, 489, 490, 494, 495, 497, 498, 508, 509, 518, 526, 554, 564, 594, 643, 649, 654, 658, 677, 680, 737, 742, 746, 757, 781, 790, 794, 797, 801, 806, 846, 865, 883, 887, 892, 913, 948, 949, 993, 994, 995, 1009, 1015, 1021, 1051, 1062, 1067, 1078, 1083, 1089, 1117, 1121, 1135, 1191, 1196, 1197, 1198, 1224, 1225, 1241, 1245, 1251], "valgrind": [9, 88, 141, 216, 250, 372, 416, 492, 496, 497, 499, 501, 502, 549, 614, 624, 626, 634, 637, 652, 787, 800, 801, 840, 1238, 1239], "supervis": [9, 1198], "hack": [9, 41, 49, 51, 88, 133, 156, 186, 212, 216, 221, 225, 226, 250, 251, 265, 267, 275, 286, 293, 294, 295, 296, 304, 316, 317, 325, 326, 333, 336, 340, 353, 354, 369, 370, 372, 373, 379, 380, 381, 398, 402, 406, 407, 409, 416, 464, 534, 548, 549, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 661, 676, 677, 697, 740, 751, 782, 783, 784, 788, 800, 815, 824, 838, 839, 840, 841, 917, 943, 944, 985, 1026, 1076, 1114, 1211, 1217, 1224, 1240, 1241, 1243, 1245, 1251, 1252, 1254, 1255], "someth": [9, 31, 43, 63, 64, 65, 69, 74, 75, 78, 120, 128, 144, 176, 189, 190, 192, 193, 195, 197, 201, 210, 217, 221, 229, 237, 239, 240, 241, 251, 261, 265, 272, 287, 290, 314, 316, 333, 336, 353, 371, 381, 393, 455, 456, 470, 524, 544, 566, 599, 601, 637, 648, 652, 656, 659, 666, 690, 735, 736, 737, 747, 750, 764, 794, 802, 804, 805, 834, 835, 836, 840, 848, 860, 864, 875, 883, 887, 889, 892, 907, 960, 985, 986, 989, 993, 994, 995, 1010, 1011, 1019, 1021, 1022, 1031, 1036, 1047, 1049, 1050, 1062, 1078, 1085, 1087, 1088, 1090, 1094, 1111, 1118, 1120, 1125, 1135, 1141, 1173, 1198, 1249], "malloc": [9, 216, 477, 478, 491, 626, 873, 1009, 1063, 1065, 1238], "function": [9, 17, 26, 38, 49, 50, 51, 69, 71, 73, 81, 88, 101, 102, 115, 116, 133, 136, 141, 144, 168, 190, 192, 201, 208, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 237, 240, 241, 244, 246, 247, 249, 250, 252, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 288, 291, 292, 299, 301, 303, 305, 307, 308, 310, 311, 314, 316, 317, 318, 319, 321, 322, 324, 327, 328, 329, 335, 342, 344, 345, 352, 358, 364, 368, 373, 375, 378, 380, 381, 383, 393, 394, 400, 401, 403, 416, 419, 420, 426, 429, 433, 434, 435, 440, 445, 449, 450, 458, 459, 460, 461, 463, 465, 470, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 492, 494, 496, 498, 501, 502, 505, 517, 518, 523, 531, 533, 538, 547, 552, 564, 585, 589, 590, 601, 604, 605, 606, 607, 609, 618, 631, 637, 642, 646, 649, 652, 654, 655, 656, 662, 670, 672, 686, 692, 696, 705, 708, 709, 716, 719, 721, 722, 723, 724, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 744, 746, 747, 750, 751, 759, 762, 768, 770, 779, 780, 781, 782, 784, 786, 787, 792, 798, 802, 804, 805, 815, 823, 824, 825, 827, 828, 829, 837, 838, 839, 840, 851, 854, 857, 858, 864, 868, 871, 875, 878, 881, 887, 889, 891, 896, 902, 903, 905, 906, 907, 908, 917, 920, 921, 922, 985, 993, 1006, 1008, 1014, 1015, 1016, 1023, 1024, 1026, 1033, 1034, 1035, 1041, 1042, 1044, 1045, 1048, 1050, 1063, 1065, 1074, 1084, 1091, 1094, 1095, 1096, 1097, 1105, 1113, 1115, 1118, 1119, 1123, 1125, 1147, 1148, 1149, 1150, 1153, 1156, 1157, 1160, 1161, 1162, 1163, 1168, 1171, 1172, 1174, 1175, 1176, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1196, 1201, 1207, 1220, 1224, 1236, 1241, 1243, 1244, 1256, 1261, 1265], "seomth": 9, "error": [9, 15, 17, 34, 79, 88, 116, 120, 121, 132, 141, 161, 173, 189, 190, 191, 192, 195, 196, 208, 211, 219, 222, 225, 228, 235, 246, 250, 256, 258, 261, 265, 266, 267, 271, 274, 277, 281, 284, 286, 289, 298, 299, 302, 305, 308, 311, 322, 323, 336, 341, 371, 380, 383, 398, 403, 405, 409, 427, 430, 432, 439, 443, 457, 458, 464, 470, 471, 473, 486, 487, 488, 491, 508, 509, 511, 513, 514, 516, 522, 524, 526, 528, 530, 535, 537, 538, 540, 545, 549, 568, 569, 570, 582, 590, 601, 620, 637, 642, 644, 646, 647, 651, 652, 653, 654, 656, 658, 666, 669, 674, 716, 718, 719, 729, 736, 743, 746, 750, 752, 753, 754, 755, 759, 779, 780, 781, 789, 792, 794, 796, 801, 802, 804, 815, 816, 819, 838, 839, 840, 843, 850, 865, 875, 879, 883, 887, 903, 917, 920, 921, 922, 928, 931, 985, 986, 994, 996, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1023, 1024, 1026, 1036, 1042, 1044, 1045, 1048, 1049, 1050, 1058, 1062, 1063, 1067, 1068, 1078, 1083, 1089, 1119, 1120, 1131, 1132, 1136, 1140, 1142, 1143, 1150, 1163, 1189, 1191, 1198, 1219, 1224, 1226, 1231, 1241, 1255], "path": [9, 88, 90, 115, 121, 137, 166, 168, 180, 181, 195, 217, 221, 229, 232, 249, 260, 261, 262, 266, 269, 273, 274, 277, 295, 304, 305, 325, 326, 329, 331, 332, 347, 348, 351, 358, 363, 368, 369, 370, 373, 374, 375, 376, 377, 378, 383, 384, 389, 391, 398, 403, 464, 500, 506, 508, 511, 513, 514, 517, 519, 523, 524, 526, 533, 536, 537, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 666, 799, 815, 839, 840, 851, 865, 877, 887, 913, 914, 915, 916, 917, 920, 921, 922, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 985, 1005, 1008, 1014, 1015, 1016, 1024, 1025, 1026, 1042, 1044, 1045, 1046, 1048, 1050, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1087, 1097, 1114, 1117, 1179, 1219, 1224, 1226, 1234, 1250, 1256], "cleanup": [9, 190, 208, 409, 643, 718, 755, 799, 1063, 1087, 1225], "obviou": [9, 45, 110, 197, 210, 271, 281, 308, 311, 371, 395, 465, 484, 506, 601, 643, 750, 759, 800, 806, 818, 824, 1015, 1059, 1085, 1121, 1132, 1242], "lead": [9, 101, 102, 105, 109, 120, 190, 192, 196, 197, 213, 250, 277, 281, 305, 323, 343, 424, 432, 442, 508, 524, 723, 736, 887, 913, 927, 994, 1049, 1058, 1059, 1078, 1105, 1131, 1142, 1153, 1204], "sever": [9, 78, 115, 190, 249, 250, 462, 551, 556, 721, 730, 741, 885, 944, 986, 1089, 1115, 1126, 1244, 1252], "code": [9, 11, 16, 17, 21, 28, 30, 34, 35, 39, 41, 43, 44, 50, 54, 55, 61, 64, 71, 76, 94, 95, 99, 105, 108, 115, 132, 138, 139, 141, 144, 160, 166, 171, 173, 177, 185, 189, 190, 191, 192, 193, 196, 197, 207, 209, 212, 213, 214, 216, 217, 218, 221, 224, 225, 226, 228, 230, 235, 240, 241, 245, 249, 250, 251, 256, 258, 259, 261, 264, 267, 272, 274, 275, 277, 278, 286, 296, 298, 301, 305, 307, 308, 311, 314, 316, 319, 321, 322, 323, 327, 328, 329, 332, 333, 336, 339, 340, 344, 348, 349, 350, 351, 353, 354, 355, 356, 361, 365, 366, 373, 379, 381, 383, 384, 393, 398, 403, 415, 417, 424, 426, 430, 434, 440, 454, 460, 465, 481, 482, 486, 488, 490, 496, 497, 499, 500, 501, 502, 503, 516, 517, 518, 519, 520, 523, 524, 526, 531, 532, 533, 534, 535, 538, 540, 542, 543, 544, 546, 547, 548, 549, 551, 552, 554, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 623, 625, 626, 628, 629, 631, 632, 634, 635, 637, 638, 640, 641, 642, 643, 644, 645, 646, 648, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 669, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 706, 712, 713, 715, 716, 718, 719, 721, 725, 728, 731, 735, 736, 742, 743, 747, 749, 751, 752, 753, 755, 757, 759, 770, 779, 780, 781, 782, 784, 785, 786, 787, 789, 791, 796, 800, 801, 803, 804, 805, 806, 814, 816, 818, 819, 821, 823, 825, 827, 828, 829, 830, 833, 834, 835, 836, 838, 839, 840, 841, 846, 851, 864, 865, 879, 885, 887, 892, 899, 902, 903, 905, 908, 927, 954, 985, 986, 994, 995, 1010, 1011, 1016, 1027, 1030, 1031, 1036, 1040, 1049, 1053, 1055, 1056, 1058, 1060, 1062, 1064, 1065, 1067, 1068, 1069, 1070, 1073, 1074, 1076, 1078, 1089, 1090, 1092, 1093, 1094, 1098, 1100, 1109, 1111, 1114, 1115, 1117, 1118, 1124, 1125, 1126, 1132, 1136, 1137, 1138, 1146, 1166, 1170, 1189, 1193, 1205, 1207, 1216, 1224, 1225, 1227, 1231, 1232, 1233, 1236, 1237, 1241, 1254, 1257, 1259, 1264], "duplic": [9, 30, 37, 88, 116, 120, 132, 209, 222, 267, 275, 285, 307, 371, 383, 424, 426, 487, 488, 551, 610, 618, 631, 652, 658, 669, 748, 805, 840, 894, 931, 985, 1021, 1024, 1026, 1045, 1173, 1224, 1226], "when": [9, 16, 18, 31, 50, 66, 71, 101, 102, 123, 128, 133, 148, 153, 154, 173, 179, 180, 189, 190, 191, 192, 195, 197, 206, 218, 221, 227, 250, 251, 258, 262, 264, 265, 267, 274, 275, 277, 280, 281, 294, 296, 305, 313, 314, 316, 323, 331, 347, 354, 380, 384, 389, 398, 409, 416, 422, 430, 432, 438, 443, 454, 461, 465, 480, 485, 486, 487, 488, 489, 494, 504, 506, 510, 518, 524, 526, 528, 531, 532, 535, 537, 543, 544, 548, 568, 570, 601, 602, 646, 648, 649, 652, 659, 681, 697, 712, 713, 716, 718, 723, 726, 731, 735, 737, 742, 745, 747, 749, 750, 753, 770, 784, 789, 792, 797, 801, 802, 805, 809, 812, 814, 816, 838, 855, 858, 865, 869, 881, 883, 885, 887, 901, 920, 921, 923, 927, 930, 932, 944, 948, 970, 982, 993, 994, 995, 1002, 1006, 1010, 1011, 1015, 1018, 1019, 1039, 1041, 1047, 1050, 1051, 1053, 1058, 1062, 1063, 1065, 1067, 1083, 1087, 1088, 1089, 1094, 1098, 1101, 1107, 1109, 1114, 1117, 1120, 1121, 1123, 1125, 1130, 1131, 1132, 1142, 1182, 1199, 1204, 1209, 1219, 1224, 1226, 1233, 1241, 1242, 1256], "you": [9, 31, 46, 49, 51, 100, 113, 115, 116, 120, 121, 123, 126, 128, 132, 138, 141, 153, 154, 166, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 209, 210, 211, 213, 217, 218, 221, 225, 227, 228, 229, 241, 246, 248, 249, 250, 251, 258, 261, 264, 265, 267, 271, 272, 274, 275, 277, 281, 289, 298, 305, 308, 311, 314, 316, 318, 322, 344, 353, 372, 384, 389, 395, 398, 401, 403, 406, 428, 429, 442, 458, 484, 488, 504, 517, 518, 519, 524, 526, 566, 585, 586, 587, 588, 592, 595, 598, 599, 601, 634, 645, 646, 652, 656, 659, 660, 662, 663, 677, 698, 706, 713, 719, 725, 728, 729, 733, 750, 755, 756, 784, 794, 805, 835, 836, 838, 860, 862, 879, 887, 892, 913, 914, 915, 918, 919, 923, 927, 928, 934, 938, 940, 942, 948, 949, 950, 952, 953, 954, 955, 959, 960, 986, 989, 993, 994, 995, 996, 997, 998, 1000, 1002, 1005, 1006, 1010, 1012, 1016, 1021, 1023, 1033, 1034, 1035, 1036, 1037, 1041, 1065, 1066, 1067, 1068, 1070, 1074, 1078, 1081, 1082, 1085, 1090, 1100, 1102, 1114, 1118, 1121, 1134, 1140, 1148, 1157, 1159, 1174, 1178, 1179, 1188, 1191, 1197, 1204, 1207, 1213, 1224, 1225, 1226, 1233, 1236, 1241, 1246, 1248, 1249, 1252, 1254, 1260, 1261], "void": [9, 30, 32, 43, 46, 98, 110, 112, 120, 124, 126, 128, 132, 192, 193, 201, 232, 250, 262, 372, 398, 419, 420, 422, 426, 428, 430, 434, 440, 444, 458, 460, 461, 462, 463, 465, 468, 470, 471, 474, 477, 478, 480, 481, 487, 488, 491, 508, 534, 543, 544, 545, 549, 551, 555, 564, 573, 574, 578, 579, 582, 583, 584, 586, 598, 600, 601, 602, 625, 637, 644, 646, 647, 648, 649, 652, 653, 654, 655, 656, 658, 659, 666, 672, 676, 685, 698, 712, 715, 716, 719, 721, 722, 732, 734, 742, 743, 748, 752, 755, 756, 770, 772, 773, 775, 776, 777, 778, 780, 781, 784, 785, 786, 787, 788, 789, 791, 792, 794, 799, 800, 801, 802, 804, 806, 809, 811, 814, 816, 819, 820, 831, 838, 839, 840, 848, 851, 858, 865, 867, 869, 871, 873, 881, 883, 892, 897, 901, 907, 925, 945, 1007, 1011, 1012, 1013, 1015, 1025, 1031, 1034, 1036, 1038, 1040, 1044, 1049, 1055, 1058, 1059, 1062, 1063, 1065, 1068, 1078, 1082, 1084, 1236], "f": [9, 19, 26, 31, 50, 53, 100, 115, 127, 141, 166, 173, 178, 191, 192, 193, 201, 212, 222, 227, 228, 233, 234, 237, 239, 245, 246, 248, 249, 255, 257, 258, 261, 262, 264, 268, 270, 271, 274, 277, 281, 284, 286, 288, 290, 298, 299, 302, 306, 309, 319, 323, 328, 330, 337, 341, 345, 352, 357, 363, 367, 390, 392, 394, 409, 434, 439, 449, 451, 460, 463, 468, 487, 488, 490, 494, 498, 506, 519, 528, 543, 649, 653, 668, 743, 749, 755, 756, 785, 806, 809, 846, 851, 913, 925, 932, 948, 967, 975, 977, 978, 993, 994, 995, 996, 1016, 1018, 1051, 1053, 1058, 1074, 1078, 1081, 1085, 1087, 1088, 1089, 1090, 1102, 1104, 1106, 1107, 1110, 1111, 1112, 1131, 1132, 1140, 1148, 1153, 1186, 1188, 1191, 1199, 1224], "int": [9, 34, 98, 101, 102, 105, 108, 111, 112, 128, 153, 154, 192, 201, 209, 211, 222, 228, 232, 237, 239, 240, 242, 245, 249, 250, 255, 258, 261, 262, 264, 267, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 308, 309, 311, 319, 323, 329, 337, 341, 345, 351, 356, 357, 363, 367, 380, 391, 393, 394, 419, 420, 422, 424, 426, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 444, 448, 458, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 478, 480, 481, 485, 486, 487, 488, 489, 490, 494, 495, 549, 556, 563, 564, 568, 569, 570, 571, 574, 577, 578, 580, 582, 583, 584, 586, 588, 596, 598, 600, 602, 603, 604, 605, 606, 608, 618, 620, 625, 628, 634, 637, 644, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 694, 697, 698, 699, 700, 701, 702, 706, 708, 712, 713, 716, 718, 719, 721, 722, 723, 725, 726, 731, 732, 733, 734, 735, 736, 737, 738, 742, 743, 745, 746, 749, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 784, 785, 786, 787, 789, 790, 791, 792, 794, 796, 803, 804, 805, 806, 809, 811, 814, 816, 818, 819, 823, 825, 827, 829, 838, 843, 846, 851, 853, 858, 865, 867, 869, 871, 875, 879, 881, 883, 892, 897, 904, 925, 945, 989, 993, 1007, 1009, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1034, 1036, 1038, 1040, 1046, 1049, 1052, 1053, 1055, 1058, 1059, 1062, 1063, 1065, 1068, 1078, 1082, 1084, 1109, 1120, 1121, 1129, 1130, 1132, 1135, 1141, 1142, 1158, 1181, 1183, 1186, 1187, 1231, 1236], "b": [9, 19, 20, 26, 50, 64, 65, 98, 105, 109, 112, 170, 193, 208, 209, 210, 212, 222, 227, 232, 237, 239, 242, 245, 248, 255, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 375, 390, 392, 393, 394, 429, 437, 439, 448, 464, 478, 481, 494, 519, 526, 644, 646, 660, 661, 662, 663, 668, 712, 713, 718, 719, 749, 755, 789, 796, 806, 831, 838, 887, 918, 931, 948, 970, 976, 977, 993, 994, 995, 1036, 1052, 1082, 1088, 1097, 1100, 1112, 1120, 1121, 1127, 1130, 1132, 1134, 1135, 1140, 1204, 1207, 1219, 1247], "return": [9, 15, 50, 98, 105, 108, 111, 112, 189, 191, 192, 193, 197, 201, 208, 209, 212, 222, 226, 228, 230, 232, 237, 239, 240, 242, 245, 248, 249, 250, 254, 255, 258, 261, 262, 264, 267, 269, 271, 274, 277, 281, 284, 287, 291, 292, 299, 302, 307, 309, 313, 319, 323, 334, 337, 340, 341, 345, 351, 358, 363, 367, 393, 394, 419, 420, 422, 426, 428, 430, 439, 448, 458, 464, 470, 471, 473, 480, 481, 484, 485, 487, 488, 490, 494, 506, 513, 519, 538, 542, 543, 544, 545, 549, 551, 554, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 595, 596, 600, 601, 604, 620, 628, 634, 637, 644, 645, 646, 648, 649, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 666, 668, 669, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 697, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 725, 726, 730, 731, 732, 733, 734, 735, 736, 737, 738, 742, 747, 749, 750, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 784, 785, 786, 787, 788, 789, 792, 794, 799, 800, 802, 803, 804, 805, 806, 812, 814, 816, 819, 823, 825, 827, 828, 829, 830, 831, 834, 835, 836, 838, 843, 850, 858, 865, 869, 877, 879, 901, 903, 907, 925, 945, 993, 1007, 1009, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1027, 1030, 1031, 1033, 1034, 1044, 1046, 1049, 1055, 1058, 1059, 1062, 1063, 1065, 1068, 1078, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1102, 1106, 1107, 1109, 1110, 1111, 1132, 1134, 1136, 1137, 1138, 1141, 1148, 1164, 1166, 1170, 1173, 1174, 1181, 1183, 1186, 1210, 1212, 1213, 1215, 1224, 1231, 1236], "alloc": [9, 123, 192, 193, 209, 211, 250, 258, 261, 264, 274, 277, 299, 432, 461, 477, 482, 485, 488, 491, 549, 633, 635, 649, 651, 652, 658, 677, 682, 689, 694, 705, 709, 713, 739, 750, 753, 787, 792, 801, 802, 806, 838, 840, 843, 846, 848, 873, 875, 889, 892, 925, 931, 1011, 1012, 1013, 1035, 1096, 1148], "variabl": [9, 17, 78, 80, 81, 88, 95, 101, 102, 168, 191, 192, 201, 208, 210, 211, 217, 221, 222, 225, 226, 227, 228, 230, 233, 234, 235, 240, 241, 246, 247, 249, 250, 252, 256, 259, 260, 262, 263, 264, 267, 268, 270, 272, 278, 279, 280, 281, 283, 285, 286, 288, 292, 295, 300, 301, 302, 304, 305, 308, 311, 314, 318, 320, 321, 322, 324, 325, 326, 327, 328, 334, 339, 340, 341, 343, 344, 346, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 368, 369, 370, 375, 378, 379, 384, 385, 386, 387, 388, 389, 398, 400, 401, 419, 421, 422, 430, 435, 443, 450, 454, 455, 458, 459, 460, 464, 466, 467, 470, 472, 476, 477, 479, 480, 482, 483, 484, 490, 491, 492, 494, 496, 501, 502, 508, 510, 511, 514, 516, 517, 518, 520, 523, 525, 528, 530, 533, 555, 563, 569, 578, 583, 588, 629, 634, 649, 656, 657, 664, 676, 716, 723, 739, 744, 750, 753, 755, 782, 784, 796, 815, 836, 837, 838, 839, 840, 856, 875, 887, 917, 918, 922, 925, 949, 968, 985, 1026, 1033, 1036, 1040, 1041, 1042, 1047, 1065, 1076, 1077, 1078, 1083, 1085, 1087, 1090, 1091, 1097, 1098, 1099, 1100, 1101, 1105, 1113, 1117, 1119, 1124, 1128, 1130, 1132, 1133, 1136, 1141, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1198, 1201, 1204, 1205, 1211, 1213, 1218, 1219, 1242, 1244, 1250, 1254, 1261, 1265], "filenam": [9, 30, 38, 43, 46, 189, 208, 212, 237, 255, 258, 261, 262, 264, 269, 274, 277, 287, 302, 305, 318, 319, 323, 351, 357, 367, 375, 390, 506, 520, 524, 585, 588, 602, 838, 887, 913, 914, 978, 1016, 1019, 1020, 1021, 1022, 1023, 1027, 1030, 1031, 1058, 1087, 1097, 1142, 1148, 1160, 1169, 1171, 1175, 1181, 1183], "getenv": [9, 583, 1046], "fopen": 9, "read": [9, 17, 31, 35, 41, 43, 44, 45, 54, 64, 65, 74, 76, 115, 136, 140, 143, 144, 151, 154, 161, 189, 190, 191, 192, 193, 195, 197, 200, 201, 204, 217, 221, 225, 226, 228, 230, 236, 246, 249, 256, 259, 262, 264, 265, 267, 269, 275, 277, 278, 283, 284, 286, 289, 296, 297, 298, 301, 305, 307, 309, 315, 319, 321, 322, 323, 326, 327, 328, 345, 349, 350, 351, 353, 354, 356, 357, 361, 362, 363, 365, 366, 372, 373, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 398, 402, 404, 409, 427, 428, 435, 443, 450, 459, 466, 472, 476, 479, 480, 482, 483, 484, 486, 488, 491, 492, 496, 500, 501, 502, 505, 507, 513, 517, 519, 541, 548, 569, 585, 590, 601, 602, 625, 631, 642, 645, 646, 648, 651, 654, 656, 702, 706, 726, 729, 741, 744, 751, 759, 782, 796, 804, 834, 837, 838, 839, 840, 846, 860, 871, 887, 889, 913, 914, 915, 918, 925, 930, 931, 932, 933, 935, 936, 939, 948, 949, 982, 985, 989, 993, 994, 995, 1002, 1007, 1009, 1010, 1012, 1013, 1016, 1019, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1039, 1041, 1045, 1049, 1055, 1058, 1059, 1062, 1063, 1065, 1083, 1089, 1090, 1105, 1108, 1110, 1118, 1126, 1149, 1150, 1160, 1169, 1179, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1197, 1199, 1207, 1214, 1252], "onli": [9, 17, 30, 31, 80, 99, 101, 102, 115, 116, 120, 123, 133, 139, 140, 141, 154, 166, 182, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 209, 210, 217, 221, 225, 227, 228, 246, 248, 251, 258, 261, 264, 267, 268, 269, 271, 274, 275, 277, 278, 280, 281, 286, 288, 289, 290, 301, 302, 305, 307, 308, 314, 318, 321, 323, 327, 328, 331, 340, 347, 349, 355, 356, 361, 362, 365, 366, 371, 372, 373, 374, 375, 377, 380, 389, 392, 406, 413, 422, 428, 430, 431, 432, 434, 439, 440, 442, 447, 454, 455, 458, 460, 462, 463, 464, 465, 481, 482, 486, 487, 488, 489, 490, 499, 504, 506, 509, 515, 516, 518, 519, 522, 524, 526, 530, 531, 534, 535, 538, 540, 543, 544, 545, 547, 555, 563, 564, 566, 568, 569, 570, 582, 583, 598, 599, 602, 605, 606, 620, 631, 644, 645, 646, 647, 649, 651, 653, 654, 656, 658, 659, 665, 679, 681, 697, 698, 702, 712, 713, 715, 719, 723, 725, 728, 729, 736, 738, 742, 749, 753, 755, 759, 764, 770, 780, 784, 787, 791, 792, 796, 797, 801, 802, 808, 810, 812, 814, 816, 823, 827, 829, 830, 840, 843, 845, 848, 851, 856, 867, 873, 883, 887, 892, 895, 900, 904, 912, 913, 914, 915, 923, 926, 930, 932, 933, 938, 944, 948, 949, 970, 978, 986, 987, 988, 993, 994, 995, 996, 1006, 1011, 1012, 1015, 1017, 1018, 1019, 1023, 1025, 1029, 1033, 1036, 1041, 1044, 1047, 1049, 1050, 1051, 1052, 1058, 1059, 1062, 1063, 1065, 1066, 1078, 1082, 1083, 1087, 1088, 1089, 1092, 1098, 1102, 1104, 1107, 1109, 1110, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1130, 1135, 1136, 1140, 1142, 1146, 1150, 1155, 1163, 1165, 1166, 1169, 1170, 1174, 1176, 1189, 1191, 1196, 1197, 1198, 1200, 1203, 1212, 1216, 1217, 1224, 1230, 1231, 1233, 1236, 1241, 1244, 1245, 1248, 1249, 1250, 1254, 1256, 1260], "some": [9, 97, 179, 189, 190, 191, 192, 194, 197, 200, 201, 210, 213, 218, 221, 225, 228, 230, 241, 242, 248, 250, 258, 264, 265, 270, 276, 277, 281, 293, 294, 296, 302, 305, 308, 309, 311, 315, 317, 318, 325, 343, 344, 350, 351, 353, 369, 372, 373, 381, 416, 439, 473, 484, 500, 518, 526, 543, 549, 620, 645, 647, 666, 684, 697, 700, 725, 755, 764, 792, 800, 802, 812, 815, 839, 840, 846, 851, 860, 875, 883, 887, 904, 906, 925, 930, 986, 994, 995, 1016, 1019, 1047, 1049, 1051, 1059, 1089, 1118, 1134, 1140, 1187, 1224, 1242, 1244, 1255, 1256, 1260, 1261, 1263], "bullshit": [9, 233, 245, 281, 535, 792], "everyon": [9, 190, 195, 225, 504, 729, 780, 935, 936, 946, 1051, 1248], "get": [9, 43, 50, 55, 88, 101, 102, 148, 173, 180, 181, 188, 190, 192, 193, 200, 201, 204, 208, 221, 222, 225, 227, 232, 239, 240, 241, 248, 250, 251, 258, 261, 264, 265, 267, 270, 271, 274, 277, 284, 290, 294, 296, 299, 302, 305, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 401, 403, 416, 417, 443, 488, 497, 519, 526, 532, 544, 549, 564, 573, 578, 654, 661, 734, 742, 752, 770, 776, 796, 797, 800, 801, 802, 803, 805, 819, 829, 831, 838, 840, 848, 853, 860, 887, 889, 903, 906, 920, 921, 923, 927, 928, 948, 985, 995, 1002, 1005, 1011, 1012, 1013, 1026, 1028, 1035, 1052, 1059, 1063, 1081, 1087, 1100, 1103, 1109, 1121, 1138, 1209, 1216, 1226, 1231, 1236, 1245, 1248, 1249, 1252, 1261], "point": [9, 22, 24, 26, 28, 48, 55, 80, 88, 97, 100, 103, 104, 105, 108, 113, 115, 133, 141, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 209, 210, 211, 212, 216, 221, 225, 226, 227, 228, 230, 248, 250, 251, 258, 261, 264, 267, 274, 277, 282, 285, 307, 316, 323, 340, 341, 343, 367, 380, 384, 404, 405, 406, 409, 419, 420, 421, 426, 432, 434, 436, 438, 442, 464, 467, 470, 473, 474, 477, 478, 488, 490, 531, 544, 547, 554, 555, 563, 586, 588, 600, 620, 621, 622, 645, 647, 649, 651, 652, 653, 655, 657, 660, 664, 675, 676, 684, 699, 700, 713, 718, 719, 739, 742, 745, 747, 749, 753, 759, 770, 792, 796, 801, 805, 817, 838, 840, 883, 887, 916, 925, 927, 931, 932, 948, 986, 987, 988, 995, 1005, 1009, 1012, 1015, 1050, 1063, 1066, 1080, 1084, 1085, 1086, 1088, 1092, 1100, 1126, 1130, 1132, 1135, 1198, 1200, 1202, 1204, 1224, 1226, 1233, 1236, 1238, 1243], "unobvi": [9, 887], "best": [9, 18, 27, 36, 45, 120, 190, 191, 192, 201, 213, 270, 371, 372, 374, 377, 430, 462, 484, 491, 494, 495, 504, 519, 603, 647, 652, 715, 781, 794, 814, 875, 877, 879, 883, 885, 925, 948, 970, 987, 994, 995, 1033, 1047, 1051, 1080, 1094, 1100, 1137, 1142, 1145, 1202, 1212], "resourc": [9, 71, 88, 101, 102, 148, 190, 192, 195, 206, 216, 251, 267, 308, 311, 316, 353, 354, 373, 379, 401, 409, 556, 620, 634, 645, 649, 650, 713, 739, 750, 751, 753, 782, 787, 798, 799, 801, 802, 807, 814, 815, 831, 837, 839, 840, 871, 873, 881, 920, 921, 925, 926, 994, 1011, 1012, 1013, 1033, 1047, 1050, 1087, 1140, 1248, 1251], "leaki": 9, "erron": [9, 491, 1153], "worst": [9, 190, 462, 528, 995, 1049, 1062, 1241, 1242], "extract": [9, 17, 43, 88, 181, 249, 275, 278, 283, 286, 298, 301, 321, 322, 327, 328, 349, 350, 356, 361, 362, 365, 366, 446, 465, 589, 590, 620, 631, 642, 838, 840, 887, 900, 913, 1080, 1105, 1127, 1150, 1184, 1185, 1186, 1187, 1189, 1197], "common": [9, 12, 184, 188, 190, 246, 262, 263, 275, 281, 286, 357, 374, 377, 465, 474, 505, 600, 677, 805, 823, 827, 838, 912, 986, 987, 995, 1019, 1058, 1089, 1094, 1095, 1096, 1112, 1121, 1122, 1126, 1132, 1136, 1139, 1191, 1199, 1200, 1224, 1242, 1255], "hm": [9, 20, 50, 53, 229, 239, 258, 261, 264, 271, 390, 877, 903, 904, 1013, 1109, 1195, 1226, 1231, 1233], "end": [9, 11, 20, 25, 30, 97, 186, 189, 192, 193, 195, 197, 200, 221, 222, 227, 228, 233, 237, 241, 261, 262, 264, 265, 267, 277, 281, 284, 287, 301, 302, 323, 329, 336, 341, 357, 363, 367, 389, 390, 426, 429, 433, 454, 470, 482, 486, 487, 488, 490, 493, 494, 497, 524, 547, 569, 570, 578, 579, 582, 583, 584, 634, 637, 649, 672, 674, 676, 677, 678, 680, 681, 683, 684, 685, 687, 688, 690, 694, 697, 701, 702, 708, 725, 726, 742, 770, 773, 777, 784, 790, 791, 792, 794, 799, 800, 813, 814, 879, 885, 887, 903, 931, 932, 933, 948, 977, 981, 982, 993, 995, 1011, 1012, 1013, 1015, 1021, 1039, 1058, 1092, 1112, 1116, 1118, 1125, 1128, 1132, 1136, 1140, 1212, 1214, 1216, 1219], "up": [9, 15, 20, 22, 23, 26, 31, 33, 41, 69, 113, 124, 128, 132, 166, 182, 189, 190, 191, 193, 195, 197, 200, 208, 209, 240, 246, 251, 256, 258, 262, 264, 274, 277, 289, 294, 296, 305, 314, 340, 353, 373, 383, 401, 405, 411, 412, 478, 485, 494, 495, 500, 504, 511, 535, 549, 598, 599, 600, 601, 614, 637, 660, 661, 662, 663, 666, 713, 718, 784, 787, 800, 801, 814, 838, 846, 850, 855, 856, 858, 869, 871, 879, 883, 887, 888, 927, 948, 949, 967, 981, 986, 988, 993, 994, 995, 1002, 1012, 1047, 1053, 1058, 1063, 1065, 1078, 1087, 1090, 1101, 1105, 1111, 1134, 1148, 1152, 1169, 1174, 1186, 1191, 1196, 1199, 1207, 1219, 1225, 1231, 1236, 1242, 1244], "sketch": [9, 120, 133, 193, 221, 228, 229, 241, 250, 251, 318, 340, 380, 402, 406, 467, 468, 478, 490, 742, 844, 856, 1058], "clearest": 9, "ach": 9, "bad": [9, 31, 121, 189, 192, 199, 213, 221, 246, 252, 268, 269, 271, 280, 281, 296, 317, 318, 339, 353, 379, 443, 486, 490, 504, 519, 526, 665, 732, 782, 793, 800, 818, 819, 839, 840, 855, 867, 892, 895, 1006, 1007, 1034, 1036, 1040, 1041, 1062, 1082, 1087, 1089, 1102, 1103, 1114, 1121, 1132, 1163, 1191, 1241], "earliest": 9, "noth": [9, 31, 50, 120, 182, 189, 190, 192, 195, 200, 218, 229, 248, 261, 287, 340, 418, 457, 464, 488, 506, 524, 525, 538, 637, 715, 725, 750, 757, 770, 784, 787, 855, 865, 883, 885, 919, 970, 986, 994, 995, 1010, 1012, 1036, 1058, 1063, 1090, 1097, 1109, 1130, 1132, 1138, 1224, 1231, 1233], "jump": [9, 33, 95, 189, 454, 458, 637, 784, 787, 794, 927, 981, 1062, 1199], "outest": 9, "level": [9, 69, 138, 190, 191, 201, 258, 264, 274, 277, 298, 331, 347, 409, 432, 458, 464, 504, 510, 516, 526, 534, 535, 544, 552, 763, 764, 838, 869, 871, 883, 890, 899, 924, 986, 993, 1002, 1006, 1067, 1076, 1089, 1097, 1109, 1130, 1140, 1166, 1170, 1200, 1203, 1213, 1219, 1251, 1252, 1254, 1255, 1256], "cleanup_stage1": 9, "42": [9, 30, 48, 121, 123, 206, 208, 209, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 439, 465, 467, 468, 470, 473, 481, 486, 488, 494, 511, 513, 514, 540, 543, 547, 564, 566, 595, 596, 600, 601, 602, 603, 604, 605, 606, 618, 625, 637, 644, 652, 653, 656, 658, 684, 687, 690, 697, 721, 726, 746, 747, 755, 757, 785, 792, 805, 806, 816, 818, 819, 823, 825, 827, 829, 834, 835, 836, 850, 933, 970, 980, 988, 1036, 1044, 1058, 1065, 1066, 1067, 1068, 1088, 1089, 1090, 1097, 1100, 1118, 1120, 1121, 1130, 1131, 1132, 1135, 1155, 1236], "screenplai": [10, 47, 192, 212, 216, 268, 280, 289, 307, 315, 317, 328, 336, 339, 340, 343, 344, 349, 350, 355, 356, 361, 362, 365, 366, 375, 378, 380, 398, 505, 517, 523, 531, 533, 541, 549, 620, 623, 626, 629, 632, 635, 638, 641, 676, 677, 697, 840, 844, 847, 852, 857, 861, 863, 899, 902, 905, 908, 1056, 1060, 1064, 1133, 1221, 1228, 1232, 1234, 1237], "sieh": [11, 152, 165, 206, 207, 208, 212, 216, 222, 233, 235, 238, 416], "dies": [11, 152, 165, 198, 199, 206, 207, 208, 216, 222, 232, 233, 237, 245, 252, 269, 271, 277, 278, 281, 398, 403, 416, 1238, 1239, 1240, 1247, 1259], "einreichungsunterlagen": 11, "diesem": [11, 199, 232, 1238], "formular": 11, "projekten": [11, 1247], "mehrer": [11, 152, 165], "projektpartn": 11, "muss": [11, 212, 222, 232, 237, 278, 398, 403, 1238, 1247], "partner": [11, 224, 416], "federf\u00fchrend": 11, "auftreten": 11, "projektleitung": 11, "projektabwicklung": 11, "seiten": 11, "f\u00f6rdergeb": 11, "erfolgtausschlie\u00dflich": 11, "federf\u00fchrenden": 11, "antragstel": 11, "s\u00e4mtlich": 11, "weiterenprojektpartn": 11, "innen": 11, "sind": [11, 152, 165, 198, 199, 207, 208, 212, 216, 224, 233, 234, 239, 242, 245, 261, 278, 357, 398, 403, 416, 976, 977, 1051, 1238, 1239, 1240, 1247, 1258, 1259], "zus\u00e4tzlich": [11, 152, 165, 198], "anzugeben": 11, "wenn": [11, 57, 198, 199, 208, 216, 222, 224, 232, 233, 239, 242, 278, 284, 319, 976, 1238, 1258, 1259], "aufteilung": 11, "f\u00f6rdersumm": 11, "erfolgen": [11, 233], "soll": [11, 199, 224, 253, 292], "punkt": [11, 152, 165, 199, 208, 224, 234, 278], "erfolgreichemf\u00f6rderantrag": 11, "wird": [11, 152, 165, 198, 199, 206, 207, 208, 216, 222, 232, 233, 239, 242, 271, 357, 363, 367, 398, 403, 416, 1239, 1240, 1247, 1258, 1259], "anschluss": 11, "individuel": [11, 224], "f\u00f6rdervertrag": 11, "erstellt": 11, "derzuerkannten": 11, "direkt": [11, 158, 216, 1238], "\u00fcberweisungen": 11, "f\u00f6rderraten": 11, "anteil": 11, "dieprojektpartn": 11, "fall": [11, 53, 152, 165, 166, 199, 207, 221, 224, 232, 237, 281, 292, 446, 454, 592, 764, 770, 869, 1029, 1030, 1049, 1193, 1213], "allenprojektpartn": 11, "unterschreiben": 11, "verbindlich": 11, "vereinbart": 11, "privatperson": 11, "organis": [11, 250], "uni": 11, "contemporari": 11, "open": [11, 22, 23, 26, 30, 36, 37, 42, 50, 59, 105, 110, 111, 115, 133, 141, 189, 190, 193, 197, 206, 210, 212, 226, 228, 230, 239, 248, 249, 251, 255, 258, 261, 262, 264, 269, 272, 277, 284, 287, 289, 302, 305, 307, 309, 314, 316, 319, 323, 345, 351, 357, 363, 367, 390, 405, 443, 504, 506, 518, 537, 853, 881, 889, 914, 915, 924, 925, 927, 930, 932, 974, 993, 1002, 1010, 1011, 1016, 1019, 1021, 1022, 1025, 1027, 1030, 1031, 1033, 1055, 1058, 1062, 1065, 1068, 1083, 1089, 1090, 1160, 1186, 1188, 1199, 1224, 1245, 1252], "wer": [11, 198], "unser": [11, 225, 233], "motiv": [11, 16, 88, 416, 927, 946, 1047, 1095, 1096], "300": [11, 208, 210, 222, 258, 261, 264, 269, 271, 277, 281, 284, 302, 323, 329, 345, 351, 357, 363, 367, 390, 420, 422, 424, 440, 464, 671, 672, 673, 674, 675, 677, 678, 679, 680, 694, 860], "zeichen": [11, 271], "ich": [11, 57, 174, 198, 199, 206, 207, 208, 212, 222, 232, 240, 271, 323, 398, 416, 1202, 1247, 1259], "einzelunternehm": 11, "lebe": 11, "einerseit": 11, "kleineren": [11, 152, 165], "gr\u00f6\u00dferen": 11, "andererseit": 11, "haupts\u00e4chlich": [11, 233], "unternehmen": 11, "halt": [11, 101, 102, 148, 232, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 920, 921, 980, 995], "bringen": 11, "schulungsunterlagen": 11, "deren": [11, 206, 228, 1240], "wartbarkeit": 11, "nichtverf\u00fcgbarkeit": 11, "problem": [11, 33, 45, 71, 98, 110, 115, 120, 161, 180, 190, 197, 205, 208, 210, 212, 213, 219, 221, 222, 225, 226, 228, 230, 241, 245, 250, 267, 269, 275, 289, 294, 296, 307, 311, 314, 315, 317, 318, 326, 331, 332, 340, 343, 347, 348, 353, 354, 373, 374, 377, 379, 380, 384, 405, 416, 443, 454, 464, 465, 468, 482, 488, 490, 506, 517, 523, 524, 533, 555, 570, 614, 620, 668, 681, 713, 716, 741, 814, 821, 833, 839, 840, 887, 927, 988, 1051, 1076, 1078, 1082, 1087, 1092, 1094, 1097, 1098, 1109, 1121, 1135, 1186, 1191, 1193, 1197, 1216, 1224, 1225, 1242, 1245, 1248, 1256], "darstellt": 11, "wen": 11, "nutzen": 11, "400": [11, 192, 208, 222, 232, 261, 264, 306, 323, 341, 357, 367, 506, 694, 1148, 1151], "trainer": [11, 12, 49, 51, 55, 197, 205, 215, 216, 221, 233, 243, 294, 296, 314, 517, 535, 536, 599, 646, 794, 994, 1098, 1114, 1217, 1224, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "stellen": 11, "kursverlauf": 11, "vorhandenem": 11, "zusammen": [11, 152, 165], "bereiten": [11, 232], "kursergebniss": 11, "editoren": 11, "kreieren": 11, "warten": 11, "kursmateri": 11, "endbenutz": 11, "konsumieren": 11, "kur": [11, 207, 209, 212, 224, 416, 1238, 1239, 1240, 1258], "auch": [11, 152, 161, 165, 198, 199, 208, 212, 222, 234, 237, 239, 245, 248, 253, 274, 278, 284, 309, 363, 393, 394, 416, 1238, 1239, 1247, 1258, 1259], "about": [11, 17, 18, 30, 31, 32, 33, 34, 37, 50, 53, 54, 59, 66, 71, 74, 75, 81, 88, 113, 115, 133, 173, 180, 186, 190, 191, 192, 194, 197, 204, 213, 217, 218, 221, 225, 226, 227, 228, 229, 230, 233, 240, 241, 246, 249, 250, 251, 252, 256, 258, 259, 262, 265, 266, 267, 268, 270, 272, 274, 275, 277, 278, 280, 282, 283, 286, 295, 298, 300, 301, 303, 304, 305, 311, 315, 316, 321, 322, 325, 327, 328, 330, 339, 340, 343, 344, 349, 350, 352, 354, 355, 358, 361, 362, 364, 365, 368, 369, 376, 378, 379, 384, 385, 386, 387, 388, 389, 398, 400, 403, 409, 438, 443, 452, 454, 482, 485, 486, 488, 494, 498, 500, 504, 524, 528, 540, 544, 637, 646, 647, 669, 676, 743, 752, 756, 757, 787, 791, 796, 805, 806, 838, 840, 856, 858, 887, 897, 906, 914, 915, 934, 951, 986, 993, 994, 995, 1006, 1010, 1016, 1033, 1050, 1058, 1085, 1091, 1092, 1094, 1101, 1102, 1109, 1113, 1121, 1132, 1140, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1198, 1204, 1205, 1206, 1207, 1211, 1219, 1224, 1233, 1242, 1253, 1256, 1262], "site": [11, 15, 27, 48, 171, 173, 190, 202, 216, 217, 218, 222, 248, 258, 264, 274, 277, 340, 357, 654, 658, 805, 927, 1195, 1212, 1213, 1219, 1226, 1233, 1259], "usecas": [11, 1006, 1112], "html": [11, 27, 28, 54, 153, 158, 163, 173, 188, 196, 208, 216, 233, 243, 246, 249, 253, 256, 259, 262, 265, 281, 312, 367, 393, 514, 517, 843, 858, 864, 948, 970, 1059, 1063, 1135, 1202], "gel\u00f6st": [11, 222], "500": [11, 232, 239, 258, 261, 264, 306, 351, 357, 367, 694, 986, 1013, 1148, 1151], "hierarchisch": 11, "gruppierung": 11, "einzelthemen": 11, "zuwenig": 11, "themen": [11, 214, 216], "bauen": [11, 1238, 1258], "aufeinand": [11, 976], "explizit": [11, 206, 216, 222, 232, 292, 319, 1238, 1239], "abh\u00e4ngigkeitsbeziehungen": [11, 1258], "fehlen": 11, "extrem": [11, 190, 248, 269, 277, 284, 287, 309, 398, 403, 465, 504, 676, 746, 794, 887, 914, 915, 1203, 1258], "verringert": 11, "zusammenarbeit": 11, "trainern": 11, "fehlend": [11, 208], "aggregierbarkeit": 11, "bzw": [11, 198, 206, 212, 216, 238, 416, 1247], "referenzierbarkeit": 11, "fremdunterlagen": 11, "analog": [11, 222, 1058, 1209], "librari": [11, 50, 55, 62, 65, 69, 76, 88, 94, 95, 97, 99, 101, 102, 115, 133, 139, 141, 145, 148, 152, 190, 192, 201, 208, 210, 212, 217, 218, 219, 226, 228, 230, 249, 251, 258, 264, 274, 277, 281, 293, 294, 305, 307, 331, 332, 347, 348, 354, 373, 374, 375, 376, 377, 378, 379, 380, 399, 400, 401, 416, 419, 420, 429, 437, 460, 477, 487, 494, 500, 509, 510, 515, 516, 517, 523, 524, 528, 531, 533, 536, 540, 548, 562, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 602, 609, 628, 642, 643, 686, 692, 696, 704, 705, 706, 708, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 759, 764, 790, 815, 838, 839, 840, 865, 917, 920, 921, 922, 985, 1006, 1007, 1008, 1013, 1014, 1016, 1023, 1024, 1026, 1033, 1036, 1042, 1045, 1048, 1050, 1062, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1082, 1115, 1130, 1132, 1135, 1203, 1220, 1233, 1238, 1240, 1243, 1252, 1253, 1254, 1255, 1256, 1261], "anfangen": 11, "geben": [11, 1239, 1240], "trainingsunterlagen": 11, "ging": [11, 198, 416], "ja": [11, 199, 222, 239, 242, 245, 258, 261, 290, 357], "funktioniert": [11, 222, 271], "projektergebni": 11, "basiert": [11, 292, 1239, 1258], "popul\u00e4ren": 11, "dokumentationstool": 11, "al": [11, 20, 88, 152, 165, 198, 199, 206, 207, 208, 212, 214, 216, 224, 233, 234, 241, 243, 245, 253, 271, 272, 274, 282, 286, 328, 399, 416, 652, 801, 912, 949, 970, 976, 977, 1009, 1191, 1238, 1240, 1247], "verwendet": [11, 212, 216, 222, 242, 284, 363, 1238, 1247, 1258, 1259], "gestaltet": [11, 216], "eigentlich": [11, 208, 222, 1239], "kern": 11, "begleitet": [11, 224], "meinem": [11, 199, 207, 233, 977], "eigenen": [11, 1247], "schulungsmateri": 11, "damit": [11, 198, 222, 252, 278, 398, 403, 416], "geht": [11, 174, 198, 199, 206, 208, 216, 222, 232, 233, 237, 242, 253, 274, 290, 363, 393, 416, 977], "quasi": [11, 152, 165, 212, 216], "spin": [11, 814, 890, 925], "off": [11, 53, 116, 123, 166, 189, 191, 192, 195, 200, 210, 221, 241, 284, 443, 446, 485, 493, 494, 509, 510, 524, 535, 591, 592, 597, 637, 716, 770, 805, 881, 892, 918, 944, 972, 986, 993, 995, 1021, 1030, 1041, 1051, 1058, 1118, 1136, 1171, 1196, 1249], "anwendbar": 11, "klarer": 11, "bezug": [11, 278], "f\u00f6rdervoraussetzung": 11, "bitt": [11, 198, 216, 222, 232, 233, 367], "gehen": 11, "folgenden": [11, 152, 165, 216, 416, 977], "aber": [11, 25, 199, 206, 208, 212, 222, 232, 233, 237, 240, 242, 271, 274, 277, 329, 416, 977, 1238, 1240, 1259], "ausschlie\u00dflich": 11, "jene": 11, "aspekt": [11, 1247], "denen": [11, 198], "sehr": [11, 25, 152, 165, 198, 199, 212, 216, 222, 224, 232, 233, 237, 243, 274, 416, 1238, 1247, 1258, 1259], "klaren": 11, "mehrwert": 11, "hat": [11, 25, 152, 165, 193, 198, 199, 206, 207, 208, 209, 212, 216, 222, 224, 232, 233, 237, 239, 243, 254, 274, 329, 341, 391, 398, 416, 819, 1116, 1238, 1240, 1247, 1259], "technologi": [11, 261, 1049, 1065, 1148], "infrastruktur": [11, 1247], "sozial": 11, "gesellschaft": 11, "umwelt": 11, "wirtschaftlich": [11, 224], "oder": [11, 57, 152, 158, 165, 206, 212, 216, 222, 233, 234, 239, 253, 262, 271, 278, 948, 977, 1216, 1238, 1239, 1247, 1258, 1259], "wissenschaftlich": 11, "kooperationen": 11, "regionalpolitik": 11, "web": [11, 63, 65, 69, 197, 225, 228, 249, 298, 322, 344, 840, 1191, 1198, 1204, 1207], "framework": [11, 55, 69, 206, 216, 225, 251, 267, 532, 599, 993, 995, 1217, 1224, 1225, 1259], "jeglich": 11, "art": [11, 20, 33, 161, 1078, 1242], "konsistenzgecheckt": 11, "crossreferenc": 11, "\u00fcber": [11, 152, 165, 198, 199, 207, 208, 212, 216, 224, 233, 234, 238, 247, 252, 278, 399, 416, 1247], "webseiten": 11, "hinweg": [11, 233], "erm\u00f6glicht": [11, 224, 416], "gesellschaftlich": 11, "\u00f6ffentlich": 11, "verf\u00fcgbarkeit": 11, "erleichterung": 11, "machen": [11, 198, 208, 212, 222, 271, 393, 416, 1239, 1240, 1259], "commun": [11, 50, 63, 64, 65, 69, 72, 74, 78, 113, 148, 177, 180, 190, 213, 221, 236, 305, 340, 380, 381, 395, 404, 405, 480, 524, 544, 815, 816, 839, 840, 846, 887, 899, 920, 921, 985, 986, 993, 994, 995, 1010, 1015, 1026, 1033, 1042, 1049, 1052, 1058, 1063, 1098, 1187, 1207, 1241, 1242, 1244, 1245, 1249, 1251, 1253, 1254, 1255, 1262], "trainerinnen": 11, "kann": [11, 25, 198, 199, 206, 212, 216, 222, 232, 245, 252, 292, 345, 398, 403, 416, 1238, 1240, 1247, 1259], "mehr": [11, 198, 206, 208, 232, 238, 258, 367, 416, 1238, 1240, 1247, 1259], "wert": [11, 233, 234, 239, 242, 274, 277, 281, 284, 290, 319, 323, 329, 1259], "sch\u00f6pfen": 11, "trainerinnenn": 11, "gegeneinand": 11, "arbeiten": [11, 222, 233], "genau": [11, 206, 208, 222, 393, 977, 1238], "die_der": 11, "adressat_in": 11, "je": [11, 20, 161, 199, 232], "konkret": 11, "eingrenzen": 11, "desto": 11, "besser": [11, 57, 198, 208, 232, 233, 243, 253], "k\u00f6nnen": [11, 152, 165, 206, 216, 222, 234, 247, 398, 399, 403, 416, 977, 1238, 1258, 1259], "bed\u00fcrfniss": [11, 224], "dieser": [11, 25, 198, 216, 232, 284, 393, 416, 1258], "adressat_innen": 11, "ber\u00fccksichtigen": 11, "wahrscheinlich": [11, 212, 1247], "deshalb": 11, "nachhaltig": 11, "wirkung": 11, "weil": [11, 208, 222, 224, 245, 284, 341, 416, 1238, 1240], "speziellen": 11, "konzepten": 11, "unterschiedlich": [11, 233, 278], "zielgruppen": 11, "beziehung": [11, 216], "zueinand": 11, "stehen": [11, 222], "anbieter_innen": 11, "nachfrager_innen": 11, "drei": [11, 152, 165, 198, 208, 216, 222, 232, 237, 239, 258, 261, 269, 271, 274, 277, 284, 287, 302, 309, 319, 323, 329, 341, 345, 363, 367, 393], "angeben": 11, "sollt": [11, 198, 199, 206, 245, 1238], "m\u00f6glichst": 11, "erheblich": 11, "ihrer": [11, 269, 398, 403, 1247], "jeweiligen": 11, "sein": [11, 199, 206, 207, 224, 232, 233, 245, 271, 309, 1238, 1247, 1259], "dann": [11, 57, 199, 208, 216, 222, 233, 271, 277, 278, 284, 319, 416, 1258, 1259], "einzelnen": 11, "aussieht": 11, "erst": [11, 216, 232, 245, 271, 278, 284, 302, 341, 357, 393, 1238], "bestandteil": 11, "hier": [11, 174, 198, 199, 206, 207, 209, 212, 216, 224, 228, 232, 233, 239, 243, 249, 252, 253, 262, 268, 271, 280, 281, 323, 341, 416, 1238, 1247], "um": [11, 20, 152, 165, 198, 199, 206, 208, 212, 216, 222, 232, 233, 271, 284, 299, 363, 416, 1238, 1239, 1240], "n": [11, 23, 26, 28, 38, 50, 102, 112, 173, 192, 201, 208, 209, 210, 216, 222, 232, 237, 239, 240, 248, 250, 253, 254, 255, 258, 261, 262, 264, 267, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 313, 319, 323, 341, 345, 351, 357, 363, 367, 373, 389, 390, 391, 393, 398, 419, 420, 422, 426, 428, 430, 432, 434, 439, 442, 452, 454, 460, 461, 465, 470, 478, 482, 487, 506, 508, 518, 520, 524, 534, 601, 634, 653, 654, 658, 676, 722, 723, 727, 728, 730, 731, 734, 735, 736, 737, 738, 739, 747, 749, 764, 840, 865, 901, 921, 925, 935, 945, 948, 961, 978, 980, 981, 995, 1007, 1009, 1010, 1011, 1012, 1013, 1019, 1020, 1022, 1031, 1049, 1055, 1059, 1062, 1065, 1068, 1072, 1078, 1082, 1084, 1109, 1110, 1112, 1127, 1129, 1134, 1135, 1140, 1141, 1186, 1188, 1224, 1236], "ihrem": 11, "l\u00f6sen": 11, "wollen": [11, 25, 237, 416, 1240, 1247, 1258], "hilfestellung": 11, "abgrenzung": 11, "organisationen": 11, "privatpersonen": 11, "bestimmt": 11, "branch": [11, 38, 42, 48, 113, 173, 184, 193, 196, 308, 311, 458, 499, 500, 829, 860, 887, 889, 899, 993, 995, 1125, 1259], "firmen": 11, "gruppen": 11, "staatlich": 11, "verwaltung": 11, "privat": [11, 45, 93, 98, 105, 110, 111, 115, 133, 138, 192, 216, 218, 225, 226, 229, 249, 262, 267, 279, 298, 314, 316, 336, 370, 371, 375, 378, 379, 380, 397, 398, 403, 507, 508, 513, 517, 523, 528, 533, 540, 543, 545, 549, 551, 556, 566, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 628, 634, 643, 647, 649, 651, 652, 654, 655, 657, 659, 669, 684, 685, 702, 712, 714, 715, 728, 739, 742, 745, 746, 748, 749, 752, 753, 764, 766, 767, 768, 770, 772, 773, 776, 777, 778, 779, 785, 786, 787, 800, 801, 802, 805, 806, 814, 816, 823, 825, 827, 829, 831, 840, 881, 916, 917, 923, 937, 943, 985, 1002, 1031, 1110, 1219, 1236, 1251], "verein": 11, "npo": [11, 725], "wissenschaft": 11, "universit\u00e4t": 11, "fachhochschulen": 11, "richtungen": 11, "regionen": 11, "stadt": [11, 57, 254], "land": [11, 537, 824], "bezirk": 11, "gemeinden": 11, "interessensgruppen": 11, "selbstvermarkter_innen": 11, "landwirtschaft": 11, "handwerk": 11, "u": [11, 20, 22, 23, 24, 26, 30, 41, 49, 51, 115, 170, 173, 192, 195, 200, 209, 219, 222, 225, 227, 233, 250, 261, 265, 269, 271, 274, 277, 299, 306, 323, 343, 442, 473, 498, 519, 725, 802, 856, 862, 897, 925, 933, 944, 945, 947, 948, 973, 986, 993, 995, 1014, 1053, 1062, 1065, 1076, 1084, 1121, 1123, 1148, 1199, 1203, 1207, 1219, 1224, 1231, 1242], "altersgrupp": 11, "genderspezifisch": 11, "frauen": 11, "region": [11, 190, 843, 871], "grupp": [11, 237, 407, 977], "sch\u00fcler_innen": 11, "lehrer_innen": 11, "thematisch": 11, "muttersprach": 11, "deutsch": [11, 253, 396, 397], "fl\u00fcchtling": 11, "posit": [11, 17, 50, 113, 164, 197, 222, 225, 226, 228, 230, 232, 237, 245, 249, 258, 265, 269, 274, 275, 277, 284, 287, 298, 301, 308, 311, 313, 315, 317, 318, 321, 323, 327, 329, 333, 336, 339, 340, 343, 344, 345, 351, 357, 375, 384, 428, 465, 478, 519, 522, 637, 677, 684, 693, 694, 725, 819, 840, 948, 986, 994, 1010, 1011, 1015, 1058, 1087, 1088, 1091, 1132, 1133, 1135, 1136, 1137, 1189, 1204, 1212, 1226, 1231, 1260], "zielgruppentyp": 11, "350": [11, 261, 264, 309, 323, 351, 357, 363, 367, 1148], "bereitet": 11, "schulung": [11, 187, 198, 199, 203, 212, 221, 224, 416, 843, 846, 851, 856, 865, 873, 1055, 1058, 1062, 1093, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1249, 1250, 1253, 1256, 1258, 1260, 1261, 1262, 1263, 1264], "vor": [11, 57, 198, 199, 212, 222, 234, 269, 367, 1258], "agenda": [11, 15, 213, 318, 322, 326, 328, 332, 340, 344, 348, 350, 351, 354, 356, 362, 366, 370, 373, 375, 378, 380, 382, 416, 1257], "lt": [11, 20, 23, 24, 188, 192, 197, 208, 211, 216, 217, 222, 227, 232, 237, 239, 245, 248, 253, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 393, 394, 590, 607, 609, 642, 686, 692, 696, 705, 708, 709, 739, 824, 839, 840], "zielvorgaben": 11, "basierend": [11, 208, 1240], "existierendem": 11, "f\u00fchrt": [11, 199], "jederzeit": [11, 212, 416], "\u00fcberblick": [11, 212, 216, 278, 292, 416, 1247], "behaltend": 11, "behandelten": 11, "fragen": [11, 224, 240, 398, 403, 416, 1247], "antworten": [11, 224], "weiterf\u00fchrend": 11, "info": [11, 200, 306, 307, 357, 494, 498, 499, 500, 506, 534, 535, 652, 801, 862, 994, 1036, 1066, 1067, 1224], "bed\u00fcrfni": [11, 198], "schulungsagenden": 11, "erstellen": [11, 416, 1240], "zeitaufw\u00e4ndig": 11, "fehlertr\u00e4chtig": 11, "vom": [11, 174, 198, 206, 207, 208, 222, 232, 233, 252, 277, 281, 1247, 1259], "erwartet": [11, 199, 222], "w\u00e4hrend": [11, 152, 165], "einzugehen": [11, 224], "geplanten": 11, "verlassen": [11, 909], "birgt": 11, "chao": [11, 946, 1121], "teilnehmerinnen": 11, "\u00fcbersichtlich": 11, "nachbearbeitung": 11, "hinterlassen": [11, 198], "absch\u00e4tzung": 11, "zielgruppengr\u00f6\u00df": 11, "affinem": 11, "background": [11, 201, 293, 294, 296, 353, 354, 372, 740, 744, 770, 782, 809, 837, 839, 840, 862, 926, 994, 1034, 1043, 1049, 1098], "inklus": [11, 209, 222, 232, 245, 357, 1240], "betroffen": 11, "1000": [11, 222, 232, 242, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 601, 602, 620, 694, 725, 742, 816, 897, 923, 925, 930, 944, 945, 973, 974, 978, 980, 988, 1006, 1013, 1021, 1044, 1049, 1053, 1080, 1087, 1136, 1169], "eu": [11, 20], "20000": [11, 189, 264], "erkennung": 11, "etwa": [11, 198, 199, 207, 212, 222, 224, 233, 245, 416, 1238, 1247, 1259], "abstand": 11, "erfordert": 11, "vgl": [11, 222], "frosch": 11, "wassergla": 11, "selbst": [11, 25, 212, 222, 232, 909, 1258, 1259], "umstellung": 11, "zus\u00e4tzlichen": 11, "aufwand": 11, "bedeutet": [11, 353], "besten": [11, 212, 278, 1238], "einsatz": 11, "erw\u00e4gung": 11, "ziehen": 11, "angegebenen": [11, 152, 165], "erheblichen": [11, 1238], "wesentlichen": [11, 224], "bed\u00fcrfnissen": 11, "kenntni": 11, "erlangt": 11, "mitgli": 11, "editor": [11, 18, 50, 221, 384, 974, 1114, 1118, 1198, 1217], "verfasst": 11, "oft": [11, 198, 222, 224, 1239], "identisch": 11, "obig": 11, "behebt": 11, "inkonsistenzen": 11, "baut": 11, "neue": [11, 222, 232, 264, 292, 341, 357, 393, 416], "verliert": [11, 1259], "aufbaubeziehungen": 11, "thema": [11, 207, 224, 278, 292, 398, 403], "verlangt": 11, "grundlag": 11, "folienmateri": 11, "meist": 11, "powerpoint": [11, 18], "anderen": [11, 222, 232, 237, 239, 416, 1238, 1240, 1259], "bin\u00e4r": [11, 242, 245], "propriet\u00e4r": 11, "formaten": 11, "praktisch": [11, 152, 165, 208], "unm\u00f6glich": 11, "macht": [11, 206, 208, 212, 216, 222, 228, 232, 274, 278, 393, 1238, 1247, 1259], "artefakttypen": 11, "livehack": [11, 12, 47, 54, 115, 208, 214, 216, 225, 226, 233, 252, 265, 267, 268, 280, 289, 294, 296, 297, 305, 308, 315, 317, 322, 328, 333, 336, 339, 340, 343, 344, 349, 350, 355, 356, 361, 362, 365, 366, 380, 398, 416, 505, 541, 548, 620, 824, 838, 840, 852, 889, 1133, 1221, 1228], "st\u00fcckwerk": 11, "gew\u00f6hnlich": 11, "trainerin": 11, "oben": [11, 57, 121, 152, 165, 198, 222, 233, 239], "zielt": 11, "darauf": [11, 198, 208, 1238], "ab": [11, 20, 198, 200, 222, 232, 233, 242, 277, 281, 284, 299, 302, 323, 351, 519, 644, 646, 662, 749, 805, 1196], "transpar": [11, 17, 25, 871, 873, 924, 1204], "wiederzuverwenden": 11, "sodass": [11, 25, 216, 1259], "aufgebrochen": 11, "schwer": [11, 212, 222, 416, 1247], "abzusch\u00e4tzen": 11, "abzielt": 11, "grundlagen": [11, 152, 165, 283, 322, 415, 1238, 1240, 1247, 1258], "weg": [11, 198, 199, 208, 212, 224, 237, 252, 292, 416, 1238, 1239, 1240, 1247], "dorthin": 11, "m\u00fcssen": [11, 152, 165, 222, 398, 403, 1247], "unterst\u00fctzt": [11, 1259], "kursf\u00fchrung": [11, 416], "fragt": [11, 199], "unklarheiten": 11, "weist": [11, 198], "etwaig": 11, "verwandt": [11, 1238], "hin": [11, 416], "plausibl": [11, 192], "realistisch": 11, "bzgl": 11, "kursdauer": 11, "strukturierten": [11, 233], "langweiligen": 11, "tatsachen": 11, "entsprechend": 11, "hunderttausend": 11, "allerd": [11, 222, 224, 1239, 1240, 1259], "keinen": [11, 198, 341, 1238], "einfluss": 11, "wahl": [11, 1259], "gespr\u00e4ch": 11, "betroffenen": 11, "assoziieren": 11, "metadaten": 11, "setzt": [11, 152, 165, 206], "vorau": 11, "beziehungen": 11, "x": [11, 20, 30, 48, 50, 105, 108, 109, 112, 166, 195, 201, 208, 209, 210, 212, 222, 232, 237, 239, 241, 242, 245, 248, 258, 261, 264, 265, 269, 271, 277, 281, 284, 287, 289, 290, 299, 302, 306, 309, 318, 319, 323, 345, 351, 357, 363, 367, 394, 398, 439, 442, 443, 449, 464, 465, 467, 470, 473, 474, 478, 480, 488, 490, 494, 520, 526, 539, 588, 598, 635, 644, 645, 646, 647, 649, 651, 652, 653, 654, 655, 657, 659, 661, 662, 669, 676, 684, 725, 745, 746, 747, 749, 764, 766, 767, 768, 785, 796, 805, 913, 914, 915, 918, 923, 925, 930, 933, 935, 936, 944, 945, 970, 974, 978, 980, 986, 993, 994, 995, 1011, 1021, 1027, 1029, 1030, 1040, 1044, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1086, 1087, 1115, 1117, 1123, 1131, 1132, 1134, 1135, 1136, 1139, 1140, 1145, 1169, 1196, 1213, 1224, 1225, 1231], "passt": [11, 232, 233], "ganz": [11, 198, 199, 207, 208, 212, 222, 224, 238, 239, 253, 270, 271, 367, 416, 1239, 1240], "gut": [11, 152, 165, 198, 199, 222, 233, 416, 753], "y": [11, 102, 170, 173, 201, 209, 210, 212, 239, 248, 254, 255, 261, 262, 264, 265, 277, 287, 290, 299, 302, 309, 319, 323, 329, 345, 351, 363, 367, 443, 449, 467, 470, 473, 474, 478, 490, 494, 506, 524, 588, 598, 644, 645, 646, 647, 649, 651, 652, 653, 654, 655, 657, 659, 661, 662, 669, 676, 684, 723, 745, 746, 747, 749, 764, 766, 767, 768, 785, 796, 805, 855, 856, 887, 888, 921, 935, 948, 950, 961, 967, 993, 994, 995, 1072, 1080, 1086, 1145, 1148, 1196], "algorithmen": [11, 292, 1240], "automatisch": [11, 1259], "berechnen": 11, "semiautomatisch": 11, "kursnavig": 11, "nachbereitung": 11, "plaintext": 11, "meisten": [11, 216, 222, 416], "artefakt": [11, 1240], "slideshow": [11, 268, 280, 307, 317, 328, 336, 339, 343, 349, 350, 355, 356, 361, 362, 365, 366, 844, 847, 849, 852, 854, 857, 859, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 891, 893, 896, 898, 902, 905, 908, 1133, 1221, 1228], "text": [11, 15, 27, 28, 47, 188, 200, 210, 221, 224, 229, 230, 237, 249, 250, 255, 262, 269, 271, 289, 292, 295, 302, 304, 323, 325, 367, 369, 439, 518, 538, 840, 917, 981, 985, 1012, 1065, 1114, 1121, 1127, 1136, 1146, 1169, 1203, 1210, 1215, 1217, 1250, 1258], "restrukturierung": 11, "o": [11, 17, 20, 26, 27, 50, 54, 69, 76, 81, 88, 89, 91, 98, 101, 102, 115, 128, 132, 151, 168, 170, 190, 192, 193, 200, 201, 208, 212, 216, 226, 228, 229, 230, 232, 237, 239, 240, 246, 249, 250, 254, 256, 259, 260, 261, 262, 265, 266, 267, 268, 273, 274, 278, 279, 280, 281, 283, 285, 288, 290, 292, 295, 299, 301, 304, 305, 306, 308, 309, 311, 314, 315, 318, 320, 321, 322, 324, 325, 327, 329, 339, 341, 343, 344, 349, 350, 351, 355, 356, 358, 361, 362, 364, 365, 368, 369, 383, 384, 385, 386, 387, 388, 389, 398, 403, 405, 416, 417, 419, 435, 450, 459, 465, 466, 470, 472, 476, 479, 482, 483, 492, 494, 496, 498, 499, 501, 502, 506, 526, 534, 538, 540, 552, 579, 590, 601, 642, 659, 744, 782, 808, 814, 815, 816, 837, 838, 839, 840, 855, 856, 864, 865, 887, 894, 913, 914, 915, 916, 917, 918, 920, 921, 922, 924, 925, 933, 945, 948, 952, 953, 955, 956, 959, 960, 962, 968, 977, 978, 982, 985, 986, 993, 994, 1006, 1016, 1019, 1020, 1021, 1022, 1023, 1026, 1033, 1034, 1042, 1045, 1048, 1049, 1050, 1059, 1065, 1066, 1067, 1068, 1071, 1072, 1074, 1078, 1082, 1083, 1084, 1087, 1089, 1091, 1092, 1093, 1097, 1113, 1116, 1119, 1121, 1127, 1135, 1142, 1143, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1196, 1204, 1205, 1219, 1224, 1231, 1238, 1245, 1246, 1250, 1252, 1254, 1261], "konsistent": 11, "referenzierung": 11, "fremdmateri": 11, "speisekart": 11, "unterst\u00fctzung": 11, "themenauswahl": 11, "korrekt": [11, 1238], "vorbereitet": [11, 416], "vielen": [11, 207, 232, 416], "f\u00e4llen": [11, 152, 165, 233], "ma\u00dfnahmen": 11, "sicherstellung": 11, "geplant": 11, "beispielsweis": 11, "rahmen": 11, "webplattform": 11, "entsteht": 11, "erh\u00f6hung": 11, "sichtbarkeit": [11, 1238], "aktuel": 11, "inhalt": [11, 222, 224, 254, 399, 909, 1259], "wartung": 11, "performanceverbesserungen": 11, "plane": [11, 210, 212, 1193], "kein": [11, 152, 165, 207, 208, 212, 222, 232, 239, 254, 290, 309, 367, 393, 416], "impactmein": 11, "sicherzustellen": 11, "erkl\u00e4rung": [11, 246], "erkl\u00e4ren": [11, 1238], "gew\u00fcnscht": [11, 222], "ohn": [11, 206, 208, 216, 242, 245, 357, 909, 977, 1259], "erreicht": [11, 198, 199, 1247], "hatt": [11, 198, 199, 212, 222, 224], "button": [11, 53, 55, 115, 189, 197, 275, 986], "gew\u00e4hlt": [11, 198, 199], "dzugeh\u00f6rig": 11, "textfeld": 11, "l\u00e4sst": 11, "sich": [11, 25, 152, 165, 198, 199, 206, 207, 208, 212, 222, 224, 232, 253, 271, 274, 284, 399, 1238, 1239, 1240, 1247, 1258, 1259], "bearbeiten": 11, "daher": [11, 1259], "mein": [11, 198, 199, 207, 208, 222, 232, 233, 357, 363, 416, 988, 1058], "konvertiert": 11, "gemacht": [11, 198, 233, 1259], "unten": [11, 57, 121, 199, 212, 222], "beschriebenen": 11, "kan\u00e4len": 11, "promot": [11, 194], "angab": 11, "quellen": 11, "literatur": [11, 250, 656], "lightweight": [11, 182, 221, 225, 241, 275, 277, 289, 745, 803, 806, 1191, 1203, 1241], "daringfirebal": 11, "project": [11, 12, 17, 18, 26, 30, 41, 49, 51, 53, 54, 55, 59, 97, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 136, 141, 144, 156, 166, 170, 173, 182, 190, 191, 193, 195, 196, 197, 202, 203, 205, 208, 210, 212, 218, 221, 225, 228, 235, 240, 249, 268, 272, 275, 278, 305, 308, 315, 322, 354, 373, 375, 376, 378, 402, 403, 409, 411, 416, 486, 493, 497, 505, 509, 511, 512, 519, 520, 524, 526, 532, 534, 535, 537, 538, 539, 541, 542, 548, 588, 589, 598, 601, 660, 662, 663, 725, 808, 840, 887, 927, 984, 986, 988, 993, 994, 1005, 1023, 1065, 1066, 1067, 1081, 1082, 1090, 1093, 1144, 1150, 1177, 1179, 1189, 1190, 1192, 1193, 1197, 1205, 1207, 1221, 1223, 1227, 1228, 1233, 1257, 1260, 1261, 1262, 1263, 1265], "default": [11, 46, 48, 88, 101, 102, 110, 113, 115, 123, 124, 138, 190, 191, 196, 197, 201, 206, 217, 226, 228, 230, 237, 239, 250, 258, 261, 264, 267, 270, 273, 274, 277, 281, 284, 287, 292, 295, 302, 304, 305, 309, 313, 314, 316, 319, 323, 325, 326, 345, 351, 354, 357, 363, 369, 370, 379, 380, 391, 398, 443, 454, 486, 494, 500, 506, 510, 524, 531, 534, 535, 537, 545, 548, 562, 564, 573, 574, 590, 600, 642, 644, 645, 650, 651, 654, 678, 697, 698, 714, 719, 721, 723, 725, 727, 728, 729, 730, 732, 734, 735, 736, 737, 738, 739, 742, 743, 750, 751, 780, 782, 798, 807, 812, 814, 815, 816, 823, 824, 829, 831, 837, 839, 840, 883, 911, 914, 915, 917, 930, 943, 948, 967, 980, 981, 985, 986, 988, 993, 994, 996, 1002, 1005, 1019, 1023, 1029, 1034, 1036, 1038, 1050, 1062, 1064, 1066, 1068, 1080, 1081, 1109, 1111, 1117, 1136, 1138, 1140, 1146, 1182, 1199, 1209, 1212, 1214, 1219, 1224, 1226, 1241], "github": [11, 30, 32, 54, 88, 97, 100, 115, 136, 137, 141, 144, 153, 154, 156, 160, 163, 168, 170, 172, 173, 188, 197, 201, 202, 207, 209, 216, 217, 218, 228, 230, 235, 236, 240, 241, 243, 250, 251, 252, 256, 258, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 286, 289, 293, 294, 296, 297, 298, 301, 305, 308, 314, 315, 316, 318, 322, 326, 328, 332, 333, 336, 340, 344, 348, 350, 354, 356, 362, 366, 367, 371, 373, 374, 375, 376, 377, 378, 380, 382, 397, 402, 403, 404, 405, 412, 417, 507, 512, 513, 514, 515, 528, 530, 589, 620, 661, 843, 846, 848, 851, 853, 856, 865, 867, 877, 879, 887, 888, 889, 890, 895, 899, 988, 993, 995, 1065, 1066, 1067, 1069, 1076, 1080, 1082, 1083, 1084], "restructuredtext": [11, 20, 21, 22, 23, 24, 26, 841], "docutil": [11, 20, 22, 23, 24, 26], "sourceforg": 11, "io": [11, 20, 43, 50, 54, 82, 128, 132, 148, 151, 158, 188, 190, 194, 196, 210, 212, 226, 228, 229, 230, 231, 238, 240, 241, 249, 250, 263, 279, 295, 302, 304, 310, 325, 326, 340, 346, 352, 369, 370, 386, 398, 401, 403, 405, 419, 517, 643, 838, 840, 864, 883, 884, 899, 917, 920, 921, 929, 985, 994, 995, 1050, 1058, 1080, 1087, 1140, 1244, 1245, 1247, 1248, 1250, 1252, 1255], "rst": [11, 20, 22, 23, 24, 26, 115, 172, 185, 208, 215, 220, 223, 229, 277, 287, 351, 406, 621, 624, 627, 630, 633, 636, 639, 1054, 1057, 1061, 1230, 1235], "generatoren": [11, 212, 279, 416], "staticgen": 11, "learn": [11, 17, 59, 61, 66, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 160, 190, 192, 209, 210, 212, 221, 225, 229, 250, 259, 339, 343, 368, 384, 399, 401, 504, 788, 840, 930, 986, 994, 1050, 1114, 1189, 1193, 1197, 1205, 1226, 1245, 1248, 1250, 1252, 1261, 1264, 1265], "moodl": [11, 97, 100, 101, 102, 115, 136, 144, 147, 152, 165, 166, 197, 370, 402, 404, 405, 724, 739, 840, 917, 937, 943, 962, 968, 985], "schoologi": 11, "eduongo": 11, "produkt": 11, "dienstleistungen": 11, "gem\u00e4\u00df": [11, 199], "recherch": [11, 212], "hinblick": 11, "ihnen": [11, 199, 976, 1247], "nennen": 11, "beschreiben": 11, "st\u00e4rken": [11, 1238], "schw\u00e4chen": [11, 1240], "konkurrierenden": 11, "konzept": [11, 416], "relevant": [11, 212, 416], "anbiet": 11, "ziel": [11, 1247], "allumfassend": 11, "eh": [11, 20, 57, 222, 232, 237, 245, 271, 277, 281, 284, 329, 351], "all": [11, 12, 17, 23, 28, 30, 33, 45, 48, 49, 51, 53, 61, 71, 79, 101, 102, 114, 116, 120, 132, 133, 141, 148, 166, 173, 179, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 209, 210, 211, 216, 218, 221, 222, 224, 225, 227, 232, 237, 241, 247, 249, 250, 258, 261, 264, 265, 269, 274, 275, 277, 294, 296, 299, 302, 305, 307, 314, 316, 323, 340, 344, 371, 375, 379, 383, 385, 386, 393, 409, 420, 424, 434, 438, 439, 442, 443, 444, 455, 463, 464, 470, 480, 482, 484, 486, 487, 490, 493, 494, 497, 499, 504, 506, 508, 511, 512, 513, 515, 516, 520, 522, 524, 525, 528, 530, 531, 534, 535, 538, 540, 542, 543, 547, 549, 552, 554, 555, 563, 564, 569, 570, 591, 593, 601, 602, 620, 648, 649, 652, 658, 676, 677, 694, 699, 712, 713, 725, 728, 736, 738, 753, 755, 757, 770, 780, 784, 789, 790, 792, 802, 803, 806, 809, 811, 814, 830, 846, 848, 855, 858, 860, 865, 873, 877, 879, 883, 885, 887, 895, 901, 904, 913, 914, 915, 919, 920, 921, 923, 924, 926, 928, 930, 931, 932, 933, 948, 949, 960, 967, 970, 973, 975, 976, 977, 978, 980, 986, 987, 988, 989, 993, 994, 995, 1005, 1006, 1010, 1012, 1015, 1016, 1021, 1023, 1034, 1041, 1047, 1050, 1051, 1052, 1063, 1067, 1074, 1078, 1083, 1084, 1088, 1089, 1090, 1101, 1109, 1114, 1115, 1119, 1121, 1134, 1135, 1138, 1139, 1140, 1146, 1152, 1153, 1169, 1170, 1186, 1190, 1191, 1200, 1204, 1213, 1219, 1224, 1226, 1231, 1238, 1240, 1242, 1243, 1245, 1247, 1248, 1253, 1254, 1256, 1257, 1259, 1260], "vielmehr": 11, "bietet": [11, 206], "beim": [11, 57, 198, 199, 208, 212, 222, 1238], "verfassen": 11, "kernthema": 11, "bleibt": 11, "zwischen": [11, 206, 222, 232, 239, 245, 416, 1238, 1239, 1240, 1247, 1259], "benutz": 11, "vorgaben": 11, "existiert": [11, 222, 234], "wald": [11, 57], "dass": [11, 198, 199, 206, 208, 212, 216, 222, 233, 237, 239, 253, 398, 403, 416, 1238, 1239, 1240, 1247, 1259], "beisteuert": 11, "eben": [11, 206, 232], "\u00fcbergreifend": 11, "definiert": [11, 208, 222, 1238], "ansatz": 11, "mir": [11, 198, 199, 212, 222, 233, 237, 269, 398, 403, 416, 1238], "bekannt": [11, 222, 1240], "verfolgt": [11, 1247], "essentiel": 11, "gesundheit": 11, "unterlagen": [11, 416], "licht": 11, "lesen": [11, 206, 207, 208, 222, 234, 398, 403], "einig": [11, 199, 209, 224, 416, 1238], "plugin": [11, 192, 552, 789, 1080], "helfen": 11, "lieblo": 11, "halbherzig": 11, "add": [11, 30, 32, 37, 113, 120, 122, 133, 136, 170, 172, 187, 188, 190, 191, 192, 196, 197, 201, 209, 218, 221, 222, 225, 228, 237, 239, 240, 242, 245, 248, 250, 254, 258, 261, 262, 264, 269, 274, 277, 281, 284, 287, 293, 294, 299, 302, 305, 309, 313, 319, 323, 329, 334, 336, 341, 345, 351, 354, 357, 363, 367, 373, 375, 376, 378, 398, 404, 445, 446, 485, 486, 494, 508, 511, 514, 520, 528, 534, 539, 544, 546, 547, 563, 564, 568, 573, 574, 585, 593, 600, 602, 620, 634, 644, 656, 657, 659, 661, 731, 732, 733, 742, 750, 770, 781, 792, 800, 814, 816, 853, 855, 856, 860, 867, 875, 877, 887, 900, 903, 913, 988, 993, 994, 995, 1023, 1049, 1051, 1053, 1059, 1064, 1078, 1080, 1087, 1088, 1110, 1114, 1122, 1140, 1146, 1213, 1224, 1225, 1231], "On": [11, 53, 88, 92, 97, 100, 101, 102, 115, 136, 138, 148, 170, 190, 192, 225, 241, 251, 267, 283, 285, 293, 294, 296, 299, 305, 311, 314, 353, 367, 372, 398, 482, 488, 497, 500, 519, 552, 590, 598, 686, 705, 709, 725, 739, 742, 782, 790, 809, 839, 840, 865, 888, 892, 917, 920, 921, 922, 985, 987, 993, 995, 1002, 1006, 1007, 1010, 1014, 1021, 1024, 1026, 1045, 1053, 1063, 1068, 1076, 1077, 1081, 1119, 1207, 1211, 1226, 1241], "statt": [11, 152, 165, 224, 416, 1247, 1259], "zentral": 11, "ergebni": [11, 274], "niemand": 11, "s5": [11, 1059, 1063, 1251], "doc": [11, 25, 27, 54, 116, 128, 132, 153, 162, 173, 188, 194, 196, 208, 209, 211, 241, 249, 256, 258, 264, 273, 274, 277, 281, 284, 299, 342, 383, 395, 398, 403, 406, 407, 417, 517, 637, 843, 858, 864, 867, 948, 970, 1029, 1135, 1202], "slide": [11, 12, 15, 25, 52, 56, 190, 204, 205, 207, 214, 216, 221, 225, 229, 230, 231, 240, 241, 250, 251, 267, 293, 294, 305, 371, 409, 412, 637, 899, 1060, 1064, 1163, 1204, 1244, 1251, 1252, 1254, 1255], "show": [11, 12, 15, 17, 31, 46, 50, 53, 55, 110, 115, 124, 128, 133, 189, 190, 192, 193, 197, 217, 225, 228, 229, 241, 250, 258, 264, 267, 274, 275, 277, 305, 317, 318, 331, 339, 347, 353, 354, 367, 373, 375, 380, 381, 383, 384, 402, 404, 405, 406, 409, 467, 534, 535, 540, 569, 585, 591, 637, 726, 824, 850, 869, 871, 903, 914, 915, 948, 970, 974, 976, 978, 986, 988, 993, 994, 995, 1014, 1047, 1049, 1053, 1058, 1062, 1076, 1078, 1086, 1125, 1142, 1145, 1196, 1197, 1219, 1226, 1233, 1246, 1256], "revealj": 11, "option": [11, 19, 69, 186, 190, 191, 192, 196, 200, 208, 213, 229, 241, 265, 277, 281, 289, 292, 293, 294, 302, 307, 311, 323, 331, 332, 340, 343, 347, 348, 353, 357, 372, 375, 378, 398, 417, 426, 427, 443, 454, 455, 494, 513, 516, 517, 520, 522, 523, 524, 531, 532, 533, 534, 546, 573, 601, 824, 840, 856, 907, 911, 914, 915, 924, 977, 995, 996, 998, 1006, 1019, 1023, 1059, 1067, 1124, 1142, 1146, 1219, 1226, 1233, 1238, 1253, 1256], "webslid": 11, "tv": [11, 20, 197], "sicht": [11, 207, 278, 1238], "entscheidend": 11, "usp": 11, "wodurch": 11, "vorteilhaft": 11, "unterscheidet": [11, 1238], "600": [11, 258, 264, 513, 694], "kernfeatur": 11, "inbeziehungsetzen": 11, "dessen": [11, 207, 222, 319, 416, 1240], "versagen": 11, "implementierung": 11, "solcher": [11, 206, 222], "featur": [11, 17, 30, 34, 43, 44, 69, 71, 113, 115, 133, 145, 195, 197, 203, 205, 206, 217, 222, 225, 226, 228, 230, 235, 240, 249, 258, 264, 267, 274, 275, 277, 278, 280, 281, 320, 353, 372, 380, 381, 400, 416, 492, 496, 501, 502, 504, 505, 534, 715, 741, 744, 751, 758, 769, 783, 793, 794, 798, 802, 807, 815, 836, 837, 839, 840, 879, 887, 986, 994, 995, 1015, 1049, 1059, 1066, 1067, 1084, 1098, 1099, 1100, 1101, 1105, 1108, 1115, 1127, 1128, 1144, 1147, 1148, 1149, 1150, 1163, 1174, 1177, 1178, 1179, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1197, 1201, 1205, 1207, 1209, 1218, 1221, 1223, 1224, 1228, 1238, 1239, 1241, 1247, 1261, 1262, 1263, 1264, 1265], "indem": [11, 232, 399], "foku": [11, 416], "schulbetrieb": 11, "legen": [11, 976], "ferner": 11, "schwere": 11, "abh\u00e4ngigkeiten": [11, 1258], "fett": [11, 222, 239], "datenbanken": [11, 245, 416], "webserv": [11, 994], "hintergrund": [11, 232], "redaktionel": 11, "arbeit": [11, 212], "offlin": 11, "laptop": [11, 191, 193, 200, 1005], "zug": 11, "erledigen": 11, "einschr\u00e4nkung": 11, "output": [11, 21, 28, 39, 41, 43, 44, 48, 50, 76, 77, 98, 106, 114, 126, 132, 133, 141, 148, 192, 194, 195, 196, 208, 211, 217, 229, 230, 241, 250, 258, 264, 267, 268, 274, 277, 305, 380, 383, 398, 403, 420, 421, 426, 427, 428, 429, 433, 465, 499, 500, 506, 507, 511, 518, 519, 534, 568, 570, 585, 600, 603, 604, 605, 606, 618, 620, 628, 631, 656, 706, 724, 725, 726, 739, 787, 792, 800, 840, 845, 900, 911, 918, 928, 931, 932, 933, 944, 948, 970, 975, 976, 981, 982, 986, 996, 1007, 1015, 1018, 1021, 1029, 1034, 1035, 1039, 1059, 1062, 1063, 1065, 1068, 1071, 1072, 1096, 1135, 1140, 1141, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1165, 1171, 1173, 1175, 1180, 1181, 1182, 1183, 1194, 1197, 1198, 1203, 1207, 1216, 1219, 1232, 1247], "mittel": [11, 212, 222, 224, 240, 242, 247, 416, 1238], "geserv": 11, "erarbeitet": 11, "sinn": [11, 216, 1238], "prinzip": [11, 1259], "kostenlo": 11, "genutzt": [11, 206], "weiterentwickelt": [11, 1240], "f\u00f6rderbedingungen": 11, "projektseit": 11, "ver\u00f6ffentlichen": 11, "nachvollziehbar": 11, "strukturieren": 11, "f\u00f6rderzusag": 11, "hinwei": 11, "verpflichtend": 11, "gesondert": 11, "erw\u00e4hnen": 11, "projektzwischenbericht": 11, "projektzusammenfassung": 11, "projektendbericht": 11, "entwicklerdokument": 11, "anwenderdokument": 11, "dienstleistungsbeschreibung": 11, "abh\u00e4ngig": 11, "dokument": [11, 152, 165, 207, 222, 233, 254, 269, 281, 341, 393], "externkommunik": 11, "erreichung": 11, "nachhaltigkeit": 11, "repositori": [11, 68, 88, 100, 113, 170, 179, 193, 196, 207, 216, 218, 225, 226, 236, 241, 243, 246, 250, 251, 252, 256, 259, 262, 267, 268, 272, 275, 278, 280, 283, 289, 297, 305, 315, 316, 318, 322, 328, 332, 333, 336, 340, 344, 348, 350, 354, 356, 362, 366, 371, 373, 375, 376, 378, 380, 382, 383, 397, 398, 403, 590, 607, 642, 840, 887, 1233], "projektergebnistyp": 11, "haupteigenschaften": 11, "funktionalit\u00e4t": [11, 222], "sourcecod": [11, 206], "bestehend": 11, "unabh\u00e4ngigem": 11, "unitgetestetem": 11, "core": [11, 49, 51, 188, 189, 190, 192, 193, 221, 224, 228, 233, 246, 261, 272, 275, 277, 284, 287, 302, 306, 309, 319, 323, 345, 351, 357, 363, 372, 420, 432, 477, 541, 542, 549, 554, 568, 569, 600, 652, 656, 750, 780, 800, 858, 862, 887, 925, 963, 980, 1047, 1050, 1051, 1062, 1063, 1080, 1148, 1191, 1196, 1209, 1210, 1212, 1213, 1224, 1253], "reih": [11, 216, 224], "direct": [11, 25, 27, 50, 115, 132, 173, 190, 250, 308, 311, 384, 454, 465, 500, 526, 538, 659, 806, 846, 924, 982, 1009, 1011, 1027, 1029, 1030, 1067, 1082, 1109, 1196, 1204, 1213, 1249, 1256], "generierten": 11, "kursagenda": 11, "graphen": 11, "lizenz": 11, "gpl": [11, 652, 801, 843], "pypi": [11, 53, 54, 171, 221, 225, 240, 256, 272, 298, 1218, 1219, 1224, 1264], "installierbar": 11, "paket": [11, 206], "generiert": [11, 222], "readthedoc": [11, 20, 27, 54, 158], "gehostet": 11, "latex": [11, 12, 620], "beamer": [11, 12], "verf\u00fcgbar": [11, 1051, 1258], "obigen": 11, "bisherigen": [11, 1240], "aktuellen": [11, 232], "bereich": [11, 212, 416], "umfeld": 11, "projektantrag": 11, "bisher": 11, "softwarebasi": 11, "grundlegend": [11, 234, 1240, 1247], "semiprofessionel": 11, "visualisierung": 11, "plan": [11, 30, 48, 156, 189, 212, 221, 256, 265, 275, 340, 380, 397, 398, 402, 406, 412, 504, 640, 750, 808, 887, 1224, 1231], "kurz": [11, 198, 199, 222, 224, 233, 238, 253, 278], "lebensl\u00e4uf": 11, "projektbeteiligten": 11, "sowi": [11, 1258], "ver\u00f6ffentlichungen": 11, "b\u00fccher": 11, "fachartikel": 11, "patent": 11, "vortr\u00e4g": 11, "gebiet": [11, 199], "projektinhalt": 11, "verdeutlichen": 11, "teamleitung": 11, "softwareprojekt": 11, "stefan": [11, 207], "walkner": 11, "28": [11, 88, 96, 116, 141, 173, 193, 200, 201, 210, 211, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 393, 394, 411, 412, 415, 506, 540, 585, 601, 602, 625, 634, 654, 716, 764, 877, 930, 970, 995, 1023, 1066, 1067, 1080, 1148, 1195, 1236], "1983": [11, 643], "hallein": 11, "master": [11, 48, 163, 170, 193, 196, 399, 400, 883, 887, 978, 990], "scienc": [11, 16, 69, 168, 197, 210, 221, 225, 230, 259, 328, 342, 364, 400, 643, 695, 1115, 1195, 1196, 1197, 1198], "salzburg": 11, "consult": [11, 49, 51, 55, 190, 203, 240, 258, 264, 274, 277, 281, 404, 549], "isamberth": 11, "adnet": 11, "2000": [11, 245, 248, 264, 269, 281, 302, 506, 552, 1051], "2002": [11, 264, 652, 801], "divers": [11, 213], "2005": [11, 643], "2007": 11, "entwicklungsleit": 11, "nextsens": 11, "2016": [11, 224, 225, 246, 249, 264, 272, 298, 305, 313, 322, 344, 1191], "30": [11, 50, 88, 97, 100, 114, 115, 166, 192, 200, 202, 211, 221, 222, 227, 232, 237, 239, 241, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 313, 319, 323, 326, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 395, 415, 427, 441, 506, 588, 592, 627, 628, 633, 634, 636, 637, 753, 754, 801, 802, 803, 824, 826, 944, 970, 977, 993, 994, 995, 1053, 1080, 1089, 1092, 1093, 1146, 1195, 1199, 1207, 1224, 1233], "programmiererfahrung": [11, 1247, 1259], "bash": [11, 90, 115, 137, 168, 197, 203, 205, 229, 239, 241, 261, 269, 277, 284, 287, 295, 302, 304, 305, 309, 316, 319, 323, 325, 345, 351, 357, 363, 369, 398, 399, 400, 403, 405, 520, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 725, 792, 795, 815, 838, 839, 840, 910, 914, 915, 916, 917, 919, 920, 921, 922, 923, 925, 926, 929, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 974, 979, 980, 985, 1008, 1011, 1014, 1016, 1018, 1021, 1024, 1026, 1027, 1042, 1044, 1045, 1048, 1050, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1087, 1169, 1248, 1250], "20": [11, 50, 103, 104, 151, 166, 173, 193, 195, 200, 208, 209, 210, 211, 222, 227, 232, 233, 237, 239, 242, 243, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 306, 309, 313, 315, 319, 323, 330, 333, 334, 336, 341, 345, 351, 363, 367, 393, 394, 397, 415, 420, 422, 424, 440, 464, 504, 520, 526, 564, 592, 593, 598, 627, 628, 633, 634, 636, 637, 652, 749, 752, 753, 754, 763, 770, 792, 794, 795, 800, 801, 802, 803, 826, 906, 912, 933, 948, 970, 986, 993, 994, 995, 1051, 1078, 1092, 1093, 1117, 1136, 1145, 1146, 1172, 1195, 1196, 1224, 1226, 1233], "davon": [11, 198, 208, 1238], "teamleit": 11, "m\u00f6chten": [11, 1259], "ggf": 11, "kennenlernen": 11, "knackig": 11, "darstellung": 11, "handelnden": 11, "personen": 11, "sendung": 11, "minuten": [11, 977], "millionen": 11, "ihren": [11, 222, 234], "antrag": 11, "nochmal": 11, "vorgelesen": 11, "bekommen": [11, 216, 1258], "un": [11, 216, 224, 416, 865, 973, 1109], "hintergrundmusik": 11, "windger\u00e4usch": 11, "warum": [11, 233, 234, 242, 284, 379, 1247, 1259], "gerad": [11, 199, 232, 233, 416, 1238], "f\u00f6rdern": 11, "sollen": [11, 379], "animiert": 11, "produktvideo": 11, "interessieren": 11, "sicher": [11, 208, 212], "mindesten": [11, 208], "vier": [11, 208, 222, 232, 237, 239, 254, 258, 261, 269, 271, 274, 281, 287, 299, 302, 306, 309, 319, 329, 341, 345, 357, 367, 393], "monat": 11, "einreichschluss": 11, "uneingeschr\u00e4nkt": 11, "aufrufbar": 11, "youtu": [11, 795, 799], "hobyb1zukdi": 11, "projektrisiken": 11, "sehen": [11, 199], "wenig": [11, 207, 222, 292, 416], "viel": [11, 207, 212, 216, 222, 233, 243, 252, 258, 268, 269, 280, 299, 1238, 1239], "pflegen": 11, "frontalen": 11, "vortragsstil": 11, "starker": 11, "paradigmenwechsel": 11, "wechsel": 11, "jahrelang": 11, "gewohnten": 11, "verfahrensweisen": 11, "abrupt": 11, "gro\u00dfer": 11, "monolithisch": 11, "zerhacken": 11, "welchen": 11, "bewerten": 11, "messen": 11, "zielerreichung": 11, "kriterium": 11, "arbeitserleichterung": 11, "minimal": [11, 222], "erfolg": [11, 1238], "mindestkriterien": 11, "positiven": 11, "projekterfolg": 11, "jedenfal": 11, "abgedeckt": 11, "ausgezeichnet": 11, "kriterien": [11, 216, 977], "angestrebten": 11, "ausgezeichneten": 11, "anerkennen": 11, "gesteigerten": 11, "kurs": [11, 224, 235, 243, 252, 268, 280, 1247, 1259], "effekt": [11, 222, 233, 1259], "weiter": [11, 25, 57, 198, 199, 222, 224, 233, 247, 271, 289, 319, 367, 977, 1247, 1259], "bekundet": 11, "interess": [11, 278], "meinen": [11, 224, 416], "medien": 11, "berichtet": 11, "migrat": [11, 216], "zehn": [11, 232], "migrieren": 11, "verwenden": [11, 216, 222, 228, 232, 237], "untereinand": 11, "zutun": 11, "zusammenzuarbeiten": 11, "kooperationspartner_innen": 11, "dienstleister_innen": 11, "mitwirkend": 11, "zielgruppenvertreter_innen": 11, "werbeagentur": 11, "schaar": 11, "logo": 11, "webdesign": 11, "wof\u00fcr": 11, "arbeitsstunden": 11, "geld": 11, "allem": [11, 198, 212, 222, 416], "eingesetzt": 11, "basisarbeit": 11, "workflow": [11, 113, 216, 250, 265, 371, 860, 1059], "datenstrukturen": [11, 234, 252, 273, 1240], "zeitgem\u00e4\u00df": 11, "interakt": [11, 1140], "know": [11, 30, 49, 51, 60, 71, 75, 133, 189, 190, 191, 192, 195, 196, 197, 209, 210, 213, 217, 218, 221, 225, 229, 240, 241, 248, 251, 308, 311, 315, 340, 370, 371, 376, 400, 430, 432, 438, 443, 460, 470, 482, 484, 486, 488, 492, 493, 494, 496, 500, 501, 502, 504, 524, 531, 538, 543, 544, 556, 593, 601, 628, 644, 646, 652, 657, 676, 713, 716, 719, 741, 742, 744, 753, 755, 757, 780, 782, 791, 800, 802, 806, 816, 837, 839, 840, 842, 858, 865, 887, 927, 948, 986, 989, 993, 995, 1006, 1011, 1013, 1022, 1034, 1062, 1084, 1092, 1097, 1098, 1109, 1114, 1117, 1120, 1121, 1140, 1148, 1186, 1224, 1245, 1248, 1249, 1262], "person": [11, 105, 109, 197, 226, 245, 248, 287, 289, 291, 298, 302, 309, 340, 341, 405, 489, 525, 544, 545, 548, 573, 656, 715, 824, 1002, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1186, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1224, 1225], "welchem": [11, 208], "umfang": 11, "sachressourcen": 11, "ben\u00f6tigt": [11, 152, 165, 233, 234], "zugekauft": 11, "backendprogrammierung": 11, "programmiersprach": [11, 1240, 1247], "ca": [11, 20, 198, 200, 826, 1219], "200": [11, 208, 210, 222, 239, 241, 248, 255, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 306, 313, 323, 329, 341, 345, 351, 357, 363, 367, 390, 395, 671, 672, 673, 674, 675, 677, 678, 679, 680, 694, 749, 865, 1049, 1165], "stunden": 11, "webprogrammierung": 11, "javascript": [11, 222, 232, 244, 253, 277, 282, 1085, 1131], "css": 11, "150": [11, 208, 222, 232, 239, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 742], "kreativarbeit": 11, "erreichen": [11, 1247], "pers\u00f6nlich": [11, 416], "kontakt": 11, "freund": 11, "ebenfal": [11, 152, 165], "t\u00e4tig": 11, "mich": [11, 198, 212, 232, 240, 416], "ermutigt": 11, "\u00fcberhaupt": [11, 57, 1247, 1259], "starten": 11, "onlin": [11, 152, 165, 195, 202, 204, 205, 216, 221, 224, 416], "repr\u00e4sent": 11, "post": [11, 84, 176, 190, 192, 194, 195, 196, 197, 200, 250, 265, 314, 430, 444, 548, 644, 986, 1057, 1059, 1062, 1262], "meiner": [11, 278, 416], "facebookseit": 11, "relevanten": 11, "foren": 11, "linkedin": 11, "typisch": [11, 233, 1238], "projektbeginn": 11, "liegt": [11, 198, 208, 212, 281, 1239], "abschluss": [11, 199, 398], "oktob": 11, "projektdau": 11, "\u00fcberschreiten": 11, "2021": [11, 169, 200, 202, 237, 239, 248, 254, 255, 258, 263, 266, 289, 395, 397, 411, 412, 415, 620, 763, 788, 824, 944, 948, 970, 971, 1051, 1065, 1080, 1116, 1233], "funktion": [11, 212, 216, 222, 233, 234, 235, 239, 242, 245, 248, 269, 271, 274, 277, 309, 341, 393], "mitarbeiter_innen": 11, "stundenanzahl": 11, "jeweilig": 11, "stundens\u00e4tz": 11, "senior": 11, "junior": 11, "programmierer_in": 11, "designer_in": 11, "contentmanager_in": 11, "projektmanager_in": 11, "assistenz": 11, "administr": [11, 197, 524, 925, 993, 1002, 1009, 1050], "sachbearbeiter_in": 11, "social": [11, 33, 544, 551, 555, 568, 569, 570, 573, 579, 582, 583, 584], "media": [11, 69, 206, 887, 994, 1251], "spzialist_in": 11, "firmeneigent\u00fcmer_innen": 11, "gesellschafter_innen": 11, "vereinsfunktion\u00e4r_innen": 11, "betr\u00e4gt": 11, "f\u00f6rderbar": 11, "stundensatz": 11, "40": [11, 97, 152, 165, 193, 200, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 428, 506, 547, 549, 563, 633, 634, 801, 802, 803, 838, 970, 990, 994, 995, 1078, 1092, 1093, 1117], "brutto": 11, "nachweislich": 11, "angestellt": 11, "projektmitarbeiter_innen": 11, "errechnet": 11, "vollzeitvertrag": 11, "38": [11, 193, 200, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 547, 563, 588, 801, 838, 970, 1078, 1102, 1195, 1196], "jahresstundenteil": 11, "1720": [11, 264], "teilzeitbesch\u00e4ftigten": 11, "aliquot": [11, 152, 165], "reduziert": [11, 212, 367], "dienstgeberanteil": 11, "faktor": 11, "ber\u00fccksichtigt": 11, "kalkul": 11, "jahresbruttogehalt": 11, "hohe": 11, "risiko": 11, "h\u00f6herer": 11, "eigenmittelanteil": 11, "bedingung": 11, "festgelegt": 11, "erh\u00f6hen": 11, "gemeinkosten": 11, "gef\u00f6rdert": 11, "antr\u00e4gen": 11, "diplomarbeiten": 11, "mitarbeit": 11, "name": [11, 27, 28, 45, 101, 102, 103, 104, 105, 113, 115, 120, 133, 148, 166, 170, 173, 184, 189, 190, 192, 193, 194, 197, 209, 211, 213, 218, 221, 222, 225, 228, 230, 232, 237, 242, 245, 248, 249, 260, 262, 263, 264, 267, 269, 271, 274, 279, 281, 284, 299, 302, 306, 307, 309, 313, 323, 345, 351, 357, 363, 367, 375, 379, 383, 389, 392, 393, 394, 409, 430, 444, 450, 458, 459, 465, 466, 472, 476, 479, 483, 484, 487, 489, 492, 496, 498, 500, 501, 502, 504, 506, 508, 509, 510, 511, 512, 516, 518, 522, 528, 531, 532, 534, 535, 537, 538, 539, 540, 547, 549, 564, 568, 569, 570, 575, 578, 582, 583, 584, 599, 601, 604, 609, 614, 621, 636, 646, 655, 657, 659, 723, 725, 737, 743, 744, 754, 755, 764, 782, 784, 788, 794, 802, 837, 838, 839, 840, 843, 851, 855, 865, 869, 881, 883, 907, 913, 914, 915, 918, 927, 928, 930, 933, 934, 948, 954, 970, 977, 982, 989, 993, 994, 995, 997, 998, 1005, 1006, 1009, 1011, 1015, 1023, 1058, 1062, 1065, 1066, 1067, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1097, 1102, 1104, 1107, 1111, 1112, 1114, 1115, 1119, 1120, 1128, 1130, 1132, 1134, 1135, 1136, 1141, 1146, 1148, 1153, 1169, 1170, 1180, 1186, 1188, 1196, 1199, 1202, 1203, 1204, 1209, 1210, 1212, 1213, 1214, 1215, 1224, 1231, 1233, 1235, 1240, 1242, 1249, 1250], "betrag": 11, "8000": [11, 264], "frontendprogrammierung": 11, "4500": [11, 264], "sachkosten": 11, "projektbedingt": 11, "reisekosten": 11, "betriebskosten": 11, "unmittelbar": 11, "projektt\u00e4tigkeit": 11, "entstehen": [11, 390], "leistungen": 11, "reisen": 11, "gliedern": 11, "rechnung": [11, 199, 306], "enthalten": 11, "umsatzsteu": 11, "darf": [11, 398], "kostenabrechnung": 11, "nur": [11, 57, 152, 165, 198, 207, 208, 212, 222, 224, 232, 233, 237, 239, 247, 269, 367, 393, 416, 1238, 1247, 1258, 1259], "f\u00f6rdernehmer_in": 11, "vorsteuerabzugsberechtigt": 11, "13500": [11, 264], "beantragt": 11, "differenz": [11, 284], "aufgliedern": 11, "eigenmittel": 11, "f\u00f6rderungseinrichtungen": 11, "fremdmittel": 11, "kredit": 11, "leas": 11, "pro": [11, 225, 823, 977, 1083], "bono": 11, "beitrag": 11, "restfinanzierung": 11, "gesamtbetrag": 11, "ber\u00fccksichtigten": 11, "einzelkosten": 11, "achtung": 11, "gesamtprojektkosten": 11, "h\u00f6her": 11, "auszuf\u00fcllen": 11, "leer": [11, 239, 245, 253, 309], "bleiben": [11, 199, 222, 232, 1247], "reich": [11, 222], "nein": [11, 233, 239, 245, 290, 299, 357], "neben": [11, 212], "antr\u00e4g": 11, "oderstipendium": 11, "laufenden": 11, "call": [11, 20, 30, 38, 50, 53, 101, 102, 105, 109, 110, 121, 132, 148, 176, 189, 190, 191, 192, 193, 195, 200, 204, 206, 209, 211, 219, 225, 227, 248, 256, 258, 264, 269, 272, 274, 279, 281, 286, 287, 290, 305, 307, 309, 322, 323, 331, 340, 345, 347, 380, 398, 403, 405, 416, 419, 426, 430, 431, 434, 445, 461, 463, 467, 473, 474, 477, 487, 490, 491, 499, 513, 516, 522, 526, 528, 534, 542, 549, 553, 568, 569, 570, 586, 590, 595, 598, 599, 601, 602, 614, 628, 642, 646, 649, 652, 654, 657, 666, 712, 713, 716, 718, 719, 723, 725, 726, 731, 738, 746, 747, 755, 759, 770, 773, 776, 777, 778, 779, 789, 792, 800, 805, 806, 814, 815, 816, 819, 823, 839, 840, 841, 855, 865, 867, 869, 873, 875, 877, 879, 881, 883, 885, 887, 892, 895, 901, 906, 907, 913, 917, 920, 921, 922, 923, 924, 926, 928, 931, 932, 945, 948, 985, 989, 997, 1007, 1008, 1011, 1012, 1013, 1014, 1016, 1018, 1024, 1025, 1026, 1033, 1034, 1041, 1042, 1044, 1045, 1048, 1049, 1050, 1059, 1062, 1063, 1065, 1067, 1085, 1087, 1088, 1089, 1094, 1100, 1102, 1103, 1104, 1106, 1107, 1109, 1110, 1111, 1131, 1132, 1136, 1138, 1141, 1142, 1148, 1166, 1170, 1191, 1196, 1204, 1207, 1212, 1213, 1225, 1226, 1227, 1250, 1251, 1252, 1253, 1256], "weiteren": 11, "stipendium": 11, "imlaufenden": 11, "habe": [11, 198, 199, 207, 212, 228, 357, 416], "zuge": [11, 152, 165], "projektantragsstellung": 11, "rundschreiben": 11, "expert": [11, 16, 194, 195, 200, 601, 927, 948, 995, 1195], "group": [11, 17, 92, 93, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 138, 156, 185, 209, 221, 226, 228, 237, 240, 241, 248, 254, 261, 269, 278, 281, 287, 290, 302, 316, 323, 326, 329, 351, 357, 363, 369, 370, 398, 411, 412, 416, 426, 451, 494, 495, 590, 620, 840, 887, 914, 915, 917, 920, 921, 922, 923, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 970, 975, 976, 977, 978, 982, 985, 988, 993, 1005, 1006, 1014, 1015, 1016, 1021, 1024, 1026, 1042, 1045, 1050, 1063, 1087, 1143, 1169, 1224], "wirtschaftkamm": 11, "blah": [11, 27, 49, 53, 170, 188, 190, 193, 211, 222, 229, 232, 237, 245, 248, 254, 258, 264, 265, 267, 269, 274, 277, 284, 287, 299, 306, 309, 319, 323, 341, 351, 357, 390, 391, 398, 406, 409, 488, 524, 755, 819, 838, 843, 851, 1012, 1013, 1058, 1059, 1085, 1120, 1126, 1146, 1207, 1265], "nehmen": [11, 199], "\u212c": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2145": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u212d": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2102": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2146": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03dd": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2130": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2147": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2131": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u02c7": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u210f": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u210b": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2111": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2148": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2110": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2124": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2112": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2133": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2115": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2134": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u210c": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2119": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u210d": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u211a": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u211c": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u211b": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u211d": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03f5": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03d5": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03c5": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03b5": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03f0": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03c6": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03d6": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03f1": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03c2": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u03d1": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "\u2128": [12, 13, 14, 26, 29, 30, 31, 32, 33, 38, 42, 43, 50, 53, 54, 64, 65, 88, 97, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 188, 225, 226, 228, 229, 230, 231, 233, 235, 236, 243, 246, 249, 250, 251, 252, 256, 259, 262, 265, 267, 268, 272, 275, 278, 280, 283, 289, 293, 294, 295, 296, 297, 304, 305, 307, 314, 315, 316, 317, 318, 325, 326, 331, 332, 333, 336, 339, 340, 343, 344, 347, 348, 353, 354, 359, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 676, 677, 678, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 769, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 827, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 987, 988, 989, 990, 993, 996, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1065, 1066, 1067, 1068, 1074, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1225, 1226, 1227], "larg": [12, 18, 26, 69, 192, 195, 197, 221, 240, 241, 250, 261, 267, 308, 311, 473, 482, 484, 488, 494, 495, 554, 654, 779, 788, 838, 881, 887, 1065, 1090, 1092, 1094, 1114, 1121, 1148, 1169, 1209, 1213, 1231, 1263], "amount": [12, 97, 101, 102, 148, 190, 191, 192, 195, 201, 204, 221, 228, 256, 306, 307, 371, 494, 506, 656, 779, 780, 918, 920, 921, 1006, 1023, 1114], "pdf": [12, 25, 153, 154, 160, 214, 216, 221, 225, 228, 229, 231, 281, 295, 304, 305, 325, 326, 348, 369, 370, 371, 373, 397, 398, 401, 403, 406, 948, 970, 971, 995, 1027, 1067, 1163, 1244, 1251, 1252, 1253, 1254, 1255, 1258, 1259], "Not": [12, 31, 35, 41, 71, 100, 103, 104, 106, 107, 114, 136, 192, 193, 194, 197, 200, 221, 224, 225, 265, 267, 268, 269, 282, 291, 318, 322, 373, 434, 443, 465, 477, 480, 482, 488, 504, 513, 519, 534, 590, 607, 609, 642, 649, 651, 653, 657, 658, 727, 739, 759, 770, 774, 776, 777, 778, 796, 803, 806, 812, 817, 819, 838, 840, 850, 858, 865, 869, 871, 987, 1025, 1047, 1049, 1051, 1053, 1063, 1087, 1089, 1094, 1095, 1096, 1097, 1107, 1109, 1121, 1130, 1135, 1191, 1195, 1200, 1214, 1216, 1232, 1241, 1245], "entir": [12, 18, 71, 101, 102, 141, 148, 173, 190, 191, 192, 195, 201, 213, 218, 225, 228, 246, 249, 250, 258, 272, 275, 278, 281, 293, 294, 296, 298, 308, 315, 318, 322, 328, 333, 336, 340, 344, 350, 356, 362, 371, 380, 416, 434, 463, 467, 474, 477, 482, 490, 498, 506, 514, 544, 750, 781, 801, 887, 914, 915, 920, 921, 945, 950, 959, 967, 986, 993, 995, 998, 1004, 1021, 1031, 1034, 1067, 1097, 1101, 1115, 1120, 1121, 1138, 1140, 1160, 1191, 1224, 1227, 1230, 1242], "satisfi": [12, 20, 225, 543, 658, 747, 759, 792], "sai": [12, 97, 124, 133, 153, 154, 176, 180, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 209, 210, 221, 225, 262, 267, 289, 308, 311, 315, 317, 318, 339, 340, 373, 384, 398, 488, 494, 500, 507, 516, 524, 526, 532, 544, 553, 564, 570, 585, 587, 599, 628, 637, 646, 654, 655, 703, 716, 725, 729, 738, 742, 755, 770, 774, 776, 777, 778, 780, 785, 792, 795, 796, 801, 846, 860, 887, 927, 930, 932, 967, 986, 993, 995, 1006, 1010, 1021, 1023, 1031, 1035, 1047, 1058, 1062, 1068, 1078, 1081, 1082, 1088, 1092, 1114, 1130, 1142, 1148, 1178, 1199, 1233, 1242, 1264], "colleagu": [12, 16, 201, 241, 484, 524, 715, 1092, 1109, 1121], "aren": [12, 271, 281, 522, 526, 755, 949, 1041, 1051], "either": [12, 27, 30, 31, 190, 192, 200, 201, 305, 308, 311, 482, 519, 525, 569, 742, 750, 753, 814, 914, 915, 945, 948, 981, 995, 1089, 1157, 1207, 1241, 1264], "nobodi": [12, 31, 190, 192, 210, 221, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 485, 487, 644, 684, 757, 842, 914, 915, 925, 940, 942, 948, 949, 1002, 1010, 1142, 1197, 1227, 1233], "doe": [12, 26, 33, 36, 37, 48, 60, 69, 74, 75, 101, 102, 105, 109, 113, 115, 133, 154, 173, 189, 190, 191, 194, 195, 196, 197, 200, 201, 209, 217, 221, 225, 227, 239, 248, 251, 264, 281, 284, 290, 308, 309, 311, 314, 316, 318, 340, 353, 357, 370, 373, 380, 398, 409, 424, 430, 438, 442, 443, 444, 445, 452, 461, 462, 471, 474, 477, 478, 480, 482, 484, 486, 488, 493, 494, 495, 498, 499, 500, 504, 506, 511, 514, 515, 519, 531, 534, 537, 540, 542, 544, 547, 552, 556, 564, 566, 568, 594, 595, 596, 597, 598, 601, 602, 625, 634, 637, 644, 645, 646, 649, 652, 656, 659, 682, 689, 697, 703, 712, 715, 716, 721, 722, 723, 725, 731, 742, 747, 748, 750, 757, 759, 779, 781, 789, 790, 792, 796, 800, 801, 802, 805, 806, 808, 812, 813, 818, 819, 836, 838, 850, 851, 855, 856, 858, 865, 879, 887, 892, 903, 913, 923, 927, 928, 930, 933, 982, 986, 993, 994, 995, 1006, 1011, 1012, 1014, 1018, 1021, 1034, 1038, 1041, 1047, 1049, 1050, 1059, 1063, 1065, 1066, 1067, 1068, 1074, 1078, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1092, 1094, 1103, 1107, 1109, 1110, 1114, 1117, 1120, 1138, 1139, 1140, 1160, 1168, 1170, 1197, 1199, 1200, 1202, 1209, 1210, 1213, 1214, 1215, 1217, 1219, 1224, 1241, 1246, 1256], "even": [12, 17, 49, 51, 55, 69, 113, 180, 190, 191, 192, 197, 201, 210, 211, 221, 225, 228, 229, 233, 235, 240, 246, 248, 249, 251, 252, 261, 265, 268, 269, 272, 275, 278, 280, 281, 283, 286, 287, 298, 308, 311, 322, 323, 341, 344, 351, 357, 363, 373, 461, 470, 484, 490, 494, 519, 542, 547, 643, 651, 699, 725, 747, 789, 792, 799, 808, 819, 838, 840, 879, 887, 925, 944, 986, 994, 1011, 1012, 1047, 1049, 1050, 1066, 1086, 1098, 1109, 1135, 1138, 1150, 1153, 1154, 1189, 1191, 1212, 1219, 1226, 1256], "tech": [12, 33, 189], "work": [12, 15, 28, 30, 31, 32, 45, 48, 53, 55, 62, 69, 71, 89, 90, 95, 97, 100, 114, 116, 118, 132, 133, 136, 137, 152, 154, 170, 173, 177, 178, 189, 190, 191, 193, 195, 196, 197, 200, 201, 213, 217, 218, 219, 228, 229, 231, 241, 246, 248, 250, 258, 259, 262, 264, 265, 267, 272, 274, 277, 281, 286, 295, 298, 304, 305, 307, 308, 311, 318, 319, 322, 323, 325, 326, 328, 356, 357, 369, 370, 371, 373, 378, 379, 384, 398, 403, 404, 406, 411, 412, 417, 461, 462, 482, 484, 494, 504, 506, 509, 510, 516, 517, 519, 520, 525, 532, 534, 535, 537, 538, 540, 543, 544, 547, 548, 549, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 637, 642, 661, 690, 697, 731, 733, 735, 743, 745, 747, 790, 796, 800, 801, 802, 806, 808, 815, 836, 839, 840, 841, 850, 855, 865, 867, 871, 885, 887, 892, 895, 909, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 927, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 970, 972, 973, 982, 985, 986, 994, 998, 1002, 1006, 1008, 1013, 1014, 1016, 1019, 1022, 1024, 1026, 1033, 1042, 1045, 1047, 1048, 1050, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1089, 1112, 1115, 1116, 1117, 1136, 1142, 1145, 1146, 1168, 1178, 1179, 1191, 1198, 1207, 1209, 1210, 1212, 1213, 1215, 1224, 1233, 1241, 1245, 1249, 1250], "although": [12, 17, 69, 128, 132, 190, 192, 196, 201, 211, 227, 251, 271, 281, 416, 519, 526, 598, 742, 743, 784, 806, 927, 930, 1002, 1085, 1090, 1148, 1197], "gain": [12, 197, 308, 311, 494, 887, 927], "incred": 12, "momentum": 12, "expect": [12, 26, 38, 166, 189, 192, 237, 258, 264, 265, 274, 277, 284, 309, 323, 341, 343, 345, 380, 471, 526, 535, 544, 587, 652, 716, 721, 770, 779, 792, 860, 871, 986, 994, 995, 1036, 1053, 1062, 1109, 1119, 1132, 1163, 1173, 1196, 1230, 1231, 1234, 1249], "context": [12, 17, 49, 51, 101, 102, 148, 154, 190, 210, 213, 225, 228, 230, 232, 239, 270, 274, 275, 277, 281, 284, 290, 298, 302, 307, 317, 318, 319, 322, 329, 333, 336, 339, 340, 343, 344, 351, 416, 481, 563, 564, 578, 646, 652, 780, 801, 838, 840, 849, 854, 857, 859, 864, 867, 868, 869, 870, 873, 874, 878, 879, 880, 882, 883, 884, 891, 892, 893, 895, 896, 897, 898, 901, 902, 905, 907, 908, 920, 921, 925, 985, 986, 1009, 1051, 1062, 1063, 1091, 1100, 1189, 1200, 1260], "thi": [12, 16, 17, 18, 19, 27, 28, 31, 32, 33, 38, 41, 42, 45, 48, 49, 50, 51, 55, 60, 68, 69, 75, 76, 80, 81, 88, 95, 97, 100, 101, 102, 105, 111, 113, 115, 124, 133, 141, 144, 171, 173, 182, 186, 189, 190, 191, 193, 194, 195, 196, 204, 206, 208, 209, 211, 213, 215, 216, 217, 218, 221, 225, 226, 227, 228, 229, 230, 231, 241, 248, 250, 251, 258, 261, 262, 264, 267, 269, 271, 272, 274, 277, 280, 281, 287, 290, 294, 296, 298, 305, 313, 314, 316, 318, 323, 333, 336, 340, 341, 343, 351, 354, 360, 367, 371, 378, 379, 380, 384, 389, 398, 401, 404, 416, 418, 422, 429, 430, 443, 452, 453, 477, 481, 482, 484, 485, 486, 488, 493, 494, 504, 507, 508, 509, 510, 511, 514, 517, 518, 519, 522, 524, 526, 532, 535, 546, 554, 555, 566, 568, 570, 588, 590, 599, 600, 603, 604, 605, 606, 608, 610, 614, 615, 618, 619, 620, 621, 624, 627, 628, 630, 631, 633, 634, 636, 637, 639, 642, 644, 645, 646, 648, 649, 652, 654, 656, 659, 664, 672, 674, 675, 678, 690, 698, 703, 706, 713, 716, 719, 723, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 742, 751, 752, 753, 755, 764, 770, 772, 773, 776, 777, 778, 779, 780, 781, 782, 787, 790, 792, 794, 795, 798, 800, 802, 804, 805, 806, 807, 814, 815, 816, 817, 818, 819, 823, 824, 837, 838, 839, 840, 841, 846, 851, 856, 860, 862, 869, 883, 887, 892, 899, 907, 914, 915, 918, 919, 927, 930, 932, 933, 942, 944, 945, 948, 953, 955, 986, 991, 992, 993, 994, 995, 998, 1005, 1006, 1012, 1019, 1020, 1021, 1022, 1023, 1027, 1030, 1041, 1044, 1053, 1054, 1057, 1058, 1061, 1063, 1066, 1067, 1069, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1094, 1096, 1098, 1100, 1102, 1109, 1112, 1114, 1116, 1118, 1125, 1128, 1130, 1131, 1132, 1135, 1136, 1138, 1140, 1141, 1142, 1147, 1163, 1178, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1204, 1206, 1207, 1208, 1209, 1213, 1216, 1219, 1224, 1226, 1230, 1231, 1233, 1235, 1236, 1241, 1242, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1263, 1264, 1265], "defin": [12, 41, 116, 120, 123, 124, 128, 131, 133, 141, 193, 209, 211, 226, 228, 230, 232, 237, 245, 248, 249, 251, 258, 262, 264, 267, 271, 274, 277, 281, 289, 291, 302, 313, 323, 340, 341, 353, 357, 363, 371, 379, 393, 404, 424, 429, 434, 439, 440, 443, 460, 461, 462, 463, 464, 465, 478, 486, 487, 488, 490, 494, 507, 508, 509, 511, 513, 514, 522, 524, 526, 528, 534, 538, 552, 556, 564, 585, 586, 598, 620, 628, 645, 646, 647, 649, 651, 652, 654, 657, 658, 659, 666, 669, 690, 694, 715, 722, 742, 743, 752, 753, 754, 755, 756, 759, 779, 784, 788, 797, 800, 805, 806, 830, 846, 848, 860, 925, 945, 986, 987, 995, 1006, 1013, 1033, 1055, 1065, 1067, 1082, 1084, 1088, 1090, 1092, 1104, 1109, 1121, 1131, 1187, 1200, 1204, 1236, 1241, 1249, 1255, 1256], "solv": [12, 33, 71, 80, 114, 115, 161, 190, 191, 219, 221, 225, 226, 228, 230, 241, 246, 259, 267, 272, 275, 286, 289, 311, 315, 322, 326, 328, 331, 343, 347, 380, 384, 464, 506, 509, 741, 815, 821, 824, 839, 840, 887, 927, 985, 1026, 1042, 1076, 1078, 1080, 1109, 1186, 1191, 1197, 1242, 1256], "number": [12, 15, 17, 24, 41, 45, 49, 50, 51, 59, 69, 71, 73, 75, 76, 101, 102, 113, 116, 120, 122, 132, 148, 182, 189, 191, 192, 195, 197, 200, 201, 207, 209, 212, 218, 221, 225, 228, 231, 232, 233, 235, 240, 241, 244, 246, 247, 249, 252, 256, 258, 259, 261, 262, 264, 265, 268, 270, 271, 272, 274, 277, 278, 280, 282, 283, 285, 286, 287, 289, 294, 296, 298, 301, 302, 308, 309, 314, 315, 316, 317, 318, 319, 321, 322, 323, 327, 328, 331, 339, 340, 343, 344, 345, 347, 349, 350, 351, 355, 356, 357, 361, 362, 365, 366, 367, 371, 379, 380, 384, 389, 398, 405, 416, 420, 422, 424, 426, 428, 429, 430, 436, 440, 442, 443, 454, 465, 481, 485, 490, 494, 498, 504, 506, 510, 514, 518, 519, 524, 554, 555, 563, 588, 596, 598, 601, 603, 614, 620, 647, 666, 674, 677, 684, 700, 725, 726, 735, 738, 747, 759, 785, 792, 794, 838, 840, 846, 848, 855, 858, 867, 869, 881, 883, 889, 897, 901, 912, 920, 921, 928, 954, 974, 976, 978, 980, 982, 994, 1005, 1006, 1009, 1013, 1014, 1015, 1020, 1021, 1022, 1023, 1044, 1049, 1050, 1058, 1059, 1063, 1065, 1089, 1090, 1092, 1094, 1095, 1096, 1106, 1118, 1119, 1120, 1125, 1126, 1136, 1137, 1138, 1140, 1141, 1150, 1153, 1154, 1157, 1160, 1161, 1163, 1164, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1185, 1189, 1191, 1194, 1199, 1217, 1219, 1224, 1237, 1249, 1256, 1262], "provid": [12, 15, 25, 46, 59, 168, 173, 190, 192, 193, 194, 196, 197, 200, 201, 217, 258, 264, 265, 274, 277, 281, 315, 331, 347, 371, 480, 508, 509, 519, 526, 535, 544, 555, 563, 715, 779, 806, 887, 924, 927, 936, 967, 994, 995, 1002, 1016, 1050, 1059, 1092, 1101, 1119, 1132, 1196, 1226, 1244, 1248, 1256, 1264], "depth": [12, 221, 225, 246, 258, 264, 274, 275, 277, 484, 804, 1094, 1191, 1195, 1196], "repres": [12, 141, 190, 192, 213, 258, 264, 274, 277, 281, 302, 313, 384, 493, 547, 564, 566, 653, 725, 838, 858, 883, 920, 921, 924, 993, 995, 1023, 1121, 1148, 1186, 1209, 1216, 1249, 1262], "own": [12, 16, 28, 31, 53, 54, 101, 102, 136, 148, 188, 190, 191, 193, 194, 200, 217, 221, 267, 291, 296, 305, 315, 340, 353, 354, 372, 373, 379, 380, 381, 484, 490, 505, 522, 531, 547, 564, 569, 633, 634, 643, 733, 734, 736, 737, 751, 755, 758, 770, 780, 782, 794, 802, 817, 838, 839, 840, 887, 920, 921, 923, 924, 933, 935, 936, 944, 945, 967, 978, 993, 994, 1006, 1013, 1033, 1038, 1049, 1050, 1062, 1082, 1089, 1106, 1111, 1112, 1114, 1198, 1231, 1242, 1245, 1249, 1256], "iter": [12, 17, 50, 53, 55, 120, 121, 209, 212, 216, 221, 225, 226, 228, 230, 233, 234, 238, 240, 242, 246, 247, 249, 250, 252, 256, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 276, 279, 281, 283, 284, 288, 300, 303, 309, 317, 318, 320, 324, 329, 339, 342, 343, 344, 346, 352, 358, 363, 368, 381, 383, 398, 404, 455, 457, 470, 506, 551, 601, 620, 637, 678, 679, 680, 684, 687, 694, 697, 699, 701, 706, 757, 764, 773, 794, 834, 840, 1012, 1087, 1091, 1093, 1102, 1115, 1125, 1139, 1140, 1147, 1148, 1149, 1150, 1163, 1174, 1186, 1189, 1191, 1201, 1203, 1213, 1216, 1260], "yield": [12, 17, 208, 209, 222, 225, 226, 228, 237, 249, 256, 262, 266, 268, 270, 271, 277, 281, 286, 288, 298, 301, 302, 309, 317, 318, 319, 322, 323, 328, 330, 341, 344, 345, 351, 357, 361, 362, 363, 366, 367, 465, 554, 563, 770, 773, 776, 777, 778, 840, 1087, 1091, 1093, 1094, 1096, 1115, 1125, 1147, 1148, 1149, 1150, 1163, 1174, 1189, 1201, 1260], "multipl": [12, 23, 24, 49, 51, 67, 97, 101, 102, 148, 190, 191, 193, 206, 221, 225, 228, 248, 249, 250, 262, 264, 281, 316, 340, 420, 422, 426, 427, 430, 439, 441, 444, 453, 460, 464, 482, 487, 500, 505, 522, 526, 537, 564, 578, 591, 646, 658, 716, 723, 737, 764, 770, 792, 794, 801, 809, 812, 816, 817, 838, 840, 856, 858, 864, 868, 869, 877, 878, 879, 887, 889, 891, 892, 895, 896, 902, 905, 908, 920, 921, 924, 925, 928, 930, 935, 936, 982, 985, 994, 1015, 1031, 1033, 1038, 1058, 1071, 1072, 1109, 1120, 1121, 1134, 1135, 1140, 1191, 1216, 1248], "artifact": [12, 196, 200, 213, 218, 331, 347, 500, 848, 1065, 1066, 1067, 1078, 1233, 1256], "complet": [12, 30, 50, 69, 115, 116, 132, 168, 189, 190, 210, 221, 229, 237, 246, 259, 262, 265, 272, 286, 287, 289, 316, 322, 328, 333, 340, 353, 380, 383, 384, 464, 481, 494, 531, 534, 591, 600, 645, 646, 719, 789, 804, 838, 881, 887, 914, 915, 926, 989, 995, 1010, 1049, 1087, 1114, 1191, 1196, 1197, 1199, 1207, 1219, 1236, 1241, 1245, 1248, 1250, 1252, 1260, 1261, 1262, 1263, 1264, 1265], "prepar": [15, 113, 115, 131, 189, 221, 278, 374, 377, 398, 416, 548, 589, 620, 681, 718, 1058, 1083, 1187, 1196, 1225], "base": [15, 17, 18, 30, 33, 41, 53, 69, 71, 88, 98, 112, 115, 128, 133, 184, 188, 190, 192, 193, 211, 216, 221, 222, 225, 228, 229, 232, 236, 239, 241, 251, 265, 267, 270, 274, 275, 279, 284, 286, 292, 299, 302, 307, 309, 313, 314, 315, 316, 317, 318, 323, 328, 339, 340, 341, 343, 344, 345, 351, 354, 357, 362, 363, 367, 373, 376, 378, 379, 380, 381, 394, 398, 402, 409, 430, 438, 465, 482, 500, 505, 506, 507, 514, 520, 528, 529, 544, 548, 553, 554, 556, 563, 588, 600, 604, 620, 631, 672, 674, 675, 676, 677, 679, 680, 684, 716, 718, 719, 721, 764, 781, 782, 789, 794, 801, 805, 817, 823, 825, 827, 829, 834, 837, 839, 840, 860, 867, 871, 883, 887, 889, 939, 941, 982, 986, 1047, 1059, 1063, 1065, 1066, 1080, 1081, 1083, 1091, 1098, 1100, 1105, 1106, 1147, 1153, 1169, 1189, 1198, 1199, 1213, 1240, 1241, 1242, 1251], "upon": [15, 60, 88, 144, 192, 193, 221, 225, 229, 236, 275, 307, 314, 333, 336, 353, 373, 380, 486, 504, 518, 552, 604, 620, 658, 676, 800, 817, 860, 995, 1063, 1153, 1217, 1224, 1241, 1245, 1251], "exist": [15, 26, 34, 35, 41, 43, 44, 100, 101, 102, 140, 141, 148, 163, 173, 196, 201, 229, 241, 248, 314, 318, 375, 378, 380, 383, 395, 398, 401, 482, 504, 506, 520, 524, 528, 542, 547, 567, 570, 590, 601, 607, 609, 642, 652, 699, 721, 725, 735, 737, 746, 800, 838, 840, 887, 914, 915, 920, 921, 923, 930, 939, 941, 950, 954, 955, 967, 985, 995, 1006, 1011, 1015, 1021, 1024, 1026, 1045, 1052, 1059, 1078, 1082, 1083, 1088, 1089, 1098, 1103, 1138, 1140, 1159, 1200, 1208, 1209, 1219, 1224, 1226], "navig": [15, 1216], "through": [15, 22, 26, 48, 64, 69, 95, 166, 189, 190, 192, 197, 201, 217, 221, 225, 227, 230, 241, 249, 250, 251, 256, 262, 315, 317, 318, 333, 336, 339, 344, 370, 373, 374, 377, 405, 409, 416, 434, 454, 473, 493, 497, 516, 531, 570, 592, 595, 654, 660, 662, 663, 712, 713, 716, 719, 742, 757, 759, 784, 792, 796, 802, 806, 858, 885, 918, 927, 976, 986, 994, 995, 1004, 1059, 1062, 1063, 1089, 1094, 1097, 1112, 1114, 1117, 1153, 1198, 1213, 1241, 1243, 1249, 1252, 1260], "try": [15, 115, 120, 128, 141, 144, 189, 190, 192, 197, 208, 211, 221, 222, 225, 229, 232, 237, 239, 242, 245, 248, 251, 254, 256, 258, 261, 264, 267, 269, 271, 274, 277, 281, 284, 286, 287, 289, 290, 293, 294, 296, 298, 299, 302, 305, 306, 309, 316, 317, 318, 319, 322, 323, 329, 340, 341, 345, 351, 353, 357, 363, 367, 372, 384, 391, 392, 393, 394, 398, 402, 403, 413, 490, 494, 513, 518, 524, 532, 544, 551, 568, 573, 582, 590, 598, 607, 609, 642, 650, 667, 670, 686, 692, 696, 701, 705, 708, 709, 721, 724, 725, 727, 729, 731, 734, 735, 736, 737, 738, 739, 770, 778, 782, 792, 798, 802, 816, 819, 834, 836, 838, 839, 840, 892, 895, 994, 1015, 1062, 1087, 1094, 1148, 1191, 1197, 1208, 1209, 1213, 1226], "deviat": [15, 197, 209, 217, 226, 250, 281, 416, 887], "after": [15, 31, 166, 190, 191, 192, 197, 200, 209, 218, 221, 228, 241, 248, 258, 264, 274, 277, 280, 281, 287, 302, 307, 314, 316, 323, 351, 367, 371, 384, 422, 430, 431, 464, 484, 491, 516, 522, 525, 537, 568, 569, 592, 599, 651, 666, 701, 725, 750, 752, 753, 755, 764, 770, 817, 838, 865, 869, 875, 885, 928, 931, 948, 949, 982, 993, 1035, 1053, 1058, 1059, 1062, 1065, 1085, 1087, 1089, 1114, 1115, 1119, 1156, 1169, 1187, 1195, 1204, 1216, 1225, 1226, 1231], "writeup": [15, 201, 1078], "what": [15, 16, 31, 32, 35, 36, 43, 44, 45, 46, 49, 51, 55, 60, 69, 74, 77, 78, 88, 89, 90, 95, 98, 112, 115, 120, 121, 128, 133, 141, 166, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 208, 209, 210, 211, 212, 213, 215, 217, 221, 222, 225, 226, 227, 228, 229, 230, 231, 240, 248, 250, 251, 265, 266, 267, 276, 281, 289, 295, 305, 308, 311, 315, 317, 318, 331, 336, 339, 347, 351, 353, 354, 370, 371, 372, 381, 383, 384, 390, 398, 401, 403, 405, 406, 409, 416, 419, 427, 432, 442, 443, 445, 458, 467, 470, 477, 480, 482, 484, 485, 488, 489, 490, 494, 498, 500, 505, 506, 508, 510, 518, 519, 526, 535, 543, 545, 547, 568, 569, 579, 585, 587, 596, 599, 620, 621, 624, 627, 630, 633, 636, 637, 639, 649, 652, 654, 655, 656, 657, 659, 666, 669, 676, 712, 719, 721, 729, 747, 750, 753, 759, 764, 770, 780, 791, 792, 800, 801, 802, 806, 809, 813, 815, 816, 819, 823, 836, 838, 839, 840, 848, 851, 855, 858, 860, 865, 883, 890, 895, 900, 913, 914, 915, 917, 918, 920, 921, 922, 924, 925, 927, 928, 930, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 948, 963, 964, 966, 985, 986, 993, 994, 995, 997, 998, 999, 1000, 1001, 1012, 1013, 1019, 1020, 1021, 1022, 1024, 1026, 1033, 1034, 1035, 1036, 1037, 1042, 1045, 1048, 1050, 1051, 1053, 1054, 1057, 1058, 1059, 1061, 1063, 1066, 1076, 1077, 1081, 1083, 1084, 1085, 1087, 1089, 1092, 1095, 1096, 1100, 1101, 1109, 1114, 1132, 1138, 1142, 1143, 1148, 1151, 1159, 1186, 1198, 1200, 1207, 1216, 1224, 1226, 1230, 1231, 1233, 1235, 1245, 1246, 1249, 1256, 1260, 1261, 1262], "collect": [15, 17, 189, 191, 233, 240, 249, 255, 256, 273, 275, 276, 277, 289, 298, 300, 307, 315, 317, 318, 322, 333, 336, 339, 340, 343, 344, 356, 362, 366, 367, 383, 493, 500, 631, 676, 792, 801, 813, 840, 887, 918, 992, 1076, 1087, 1091, 1097, 1105, 1139, 1146, 1150, 1179, 1184, 1186, 1189, 1190, 1218, 1219, 1224, 1226, 1263], "question": [15, 17, 20, 23, 24, 26, 53, 93, 114, 115, 127, 138, 188, 192, 197, 209, 221, 225, 227, 249, 250, 251, 261, 262, 264, 265, 267, 287, 370, 398, 405, 412, 439, 468, 474, 486, 505, 510, 511, 537, 589, 653, 712, 719, 808, 812, 840, 865, 879, 895, 914, 915, 917, 937, 943, 967, 985, 993, 995, 1006, 1010, 1026, 1047, 1048, 1082, 1090, 1091, 1094, 1099, 1189, 1191], "ask": [15, 190, 195, 197, 221, 224, 225, 290, 322, 398, 405, 504, 543, 544, 566, 585, 637, 649, 659, 781, 803, 944, 1000, 1002, 1109, 1191], "answer": [15, 33, 105, 148, 194, 197, 209, 221, 225, 227, 228, 251, 262, 269, 341, 351, 379, 405, 511, 537, 589, 712, 719, 721, 792, 797, 816, 851, 895, 914, 915, 920, 921, 933, 935, 936, 939, 941, 993, 995, 1002, 1006, 1047, 1050, 1082, 1089, 1090, 1094, 1101, 1118, 1121, 1191], "list": [15, 17, 25, 50, 53, 81, 90, 115, 137, 166, 168, 172, 190, 197, 201, 204, 211, 216, 218, 221, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 240, 241, 244, 246, 247, 249, 252, 256, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 279, 280, 282, 283, 285, 286, 288, 290, 294, 295, 298, 300, 301, 303, 304, 305, 308, 310, 311, 314, 315, 316, 320, 321, 322, 324, 325, 326, 327, 328, 330, 339, 340, 342, 343, 344, 345, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 368, 369, 370, 372, 376, 383, 390, 393, 395, 398, 402, 403, 404, 416, 473, 479, 483, 484, 492, 496, 498, 500, 501, 502, 506, 513, 516, 518, 520, 522, 528, 531, 534, 546, 548, 549, 588, 590, 598, 601, 634, 636, 638, 642, 646, 647, 652, 676, 692, 705, 709, 729, 739, 744, 747, 782, 790, 796, 801, 814, 815, 837, 838, 839, 840, 841, 849, 853, 854, 857, 864, 865, 868, 878, 889, 891, 895, 896, 902, 905, 908, 913, 914, 915, 916, 917, 920, 921, 922, 928, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 977, 985, 994, 1014, 1016, 1018, 1024, 1026, 1036, 1038, 1042, 1045, 1048, 1050, 1065, 1067, 1083, 1087, 1090, 1091, 1094, 1095, 1096, 1109, 1111, 1113, 1114, 1120, 1121, 1126, 1127, 1128, 1129, 1132, 1138, 1140, 1141, 1142, 1148, 1150, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1181, 1183, 1186, 1188, 1189, 1191, 1196, 1199, 1209, 1212, 1216, 1226, 1231, 1238, 1247, 1261, 1262], "cover": [15, 69, 72, 116, 197, 213, 221, 225, 229, 231, 249, 250, 262, 275, 314, 316, 344, 504, 543, 830, 993, 995, 1080, 1089, 1114, 1163, 1186, 1191, 1195, 1196, 1224, 1242, 1245, 1248, 1249, 1255, 1260, 1264], "itself": [15, 120, 123, 133, 190, 192, 217, 221, 227, 258, 264, 274, 277, 323, 351, 374, 377, 380, 387, 432, 464, 500, 509, 515, 535, 563, 564, 586, 601, 647, 654, 712, 790, 805, 814, 817, 862, 865, 887, 907, 913, 914, 915, 930, 948, 978, 1050, 1063, 1078, 1106, 1109, 1114, 1135, 1176, 1217, 1233, 1255], "been": [15, 49, 51, 55, 113, 173, 189, 190, 191, 192, 194, 195, 196, 201, 209, 210, 221, 229, 258, 264, 274, 277, 308, 311, 313, 323, 340, 381, 395, 404, 463, 477, 478, 524, 534, 540, 547, 564, 620, 779, 818, 883, 901, 907, 912, 923, 927, 931, 951, 986, 993, 995, 1006, 1015, 1025, 1038, 1063, 1066, 1067, 1085, 1092, 1130, 1226, 1241, 1242, 1251, 1256], "further": [15, 189, 196, 200, 215, 264, 296, 311, 340, 353, 354, 372, 379, 380, 381, 406, 470, 481, 531, 601, 621, 624, 627, 630, 633, 636, 639, 751, 782, 829, 839, 840, 858, 881, 887, 970, 996, 1034, 1054, 1057, 1061, 1097, 1230, 1235, 1249], "inform": [15, 16, 17, 97, 173, 189, 192, 193, 195, 200, 204, 208, 209, 210, 212, 217, 237, 258, 264, 274, 277, 302, 317, 318, 339, 343, 344, 481, 491, 498, 499, 507, 513, 514, 515, 535, 540, 806, 838, 846, 858, 923, 948, 982, 986, 993, 995, 997, 1029, 1088, 1116, 1191, 1199, 1204, 1219, 1226, 1260, 1261], "internet": [15, 69, 189, 191, 194, 195, 197, 217, 229, 237, 265, 278, 317, 318, 333, 339, 343, 395, 506, 986, 987, 989, 1049, 1090, 1242, 1255], "subtract": [15, 105, 258, 281, 313, 441, 564, 578, 792, 947, 1050, 1101, 1109, 1121], "known": [15, 188, 191, 202, 241, 258, 264, 274, 277, 294, 296, 314, 331, 347, 395, 440, 442, 454, 461, 488, 494, 524, 678, 858, 948, 1081, 1198, 1242, 1256], "calcul": [15, 73, 76, 192, 225, 249, 258, 281, 379, 440, 442, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 563, 593, 598, 600, 744, 749, 782, 809, 837, 839, 840, 1033, 1050, 1092, 1094, 1166, 1198, 1203, 1224], "minimum": [15, 50, 281, 764, 824, 887, 1087, 1194, 1195, 1196, 1197], "durat": [15, 195, 477, 517, 536, 601, 812, 816, 817, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1264, 1265], "come": [15, 31, 69, 101, 102, 113, 121, 128, 132, 148, 173, 189, 190, 191, 192, 195, 196, 197, 200, 201, 211, 217, 218, 221, 241, 267, 294, 296, 307, 314, 315, 340, 353, 389, 395, 418, 420, 421, 437, 464, 500, 512, 534, 564, 598, 679, 716, 719, 724, 739, 791, 794, 796, 806, 816, 840, 855, 887, 918, 920, 921, 925, 931, 944, 948, 986, 993, 994, 995, 1021, 1049, 1078, 1089, 1090, 1094, 1112, 1114, 1115, 1121, 1132, 1140, 1142, 1148, 1153, 1171, 1182, 1199, 1202, 1207, 1220, 1242, 1261], "she": [15, 248, 716, 750, 923, 925, 1134, 1142], "who": [15, 17, 33, 120, 190, 194, 197, 201, 219, 221, 267, 277, 302, 333, 379, 380, 416, 490, 494, 504, 535, 552, 569, 601, 721, 792, 802, 860, 887, 895, 914, 915, 923, 927, 933, 944, 986, 994, 995, 1010, 1021, 1065, 1083, 1085, 1217, 1224, 1241, 1242, 1245, 1248, 1249, 1250, 1262], "repetit": [15, 302, 948, 1241], "prone": [15, 439, 647, 656, 676, 750, 794, 875, 1067, 1136, 1231, 1241], "possibl": [15, 48, 49, 51, 97, 112, 113, 115, 133, 161, 170, 179, 182, 189, 190, 197, 200, 211, 221, 225, 241, 251, 258, 264, 267, 269, 274, 275, 277, 294, 296, 305, 314, 317, 318, 323, 340, 344, 354, 371, 374, 377, 429, 440, 443, 460, 473, 480, 486, 490, 494, 495, 498, 504, 516, 518, 519, 528, 531, 542, 544, 547, 552, 556, 564, 566, 601, 634, 644, 646, 647, 652, 658, 659, 677, 694, 736, 742, 743, 750, 764, 768, 781, 792, 800, 801, 802, 806, 865, 892, 923, 932, 957, 987, 988, 993, 994, 1004, 1007, 1038, 1087, 1088, 1089, 1097, 1102, 1110, 1112, 1121, 1130, 1135, 1137, 1138, 1140, 1191, 1200, 1212, 1248, 1262], "abl": [15, 16, 18, 31, 189, 190, 192, 193, 195, 197, 221, 241, 248, 330, 484, 490, 510, 543, 547, 601, 749, 759, 914, 915, 933, 939, 941, 942, 986, 994, 995, 1021, 1059, 1203, 1244, 1249, 1260], "fix": [15, 34, 50, 67, 98, 132, 141, 166, 190, 225, 246, 251, 261, 262, 267, 286, 289, 316, 317, 318, 339, 373, 380, 398, 422, 445, 488, 504, 506, 530, 537, 569, 602, 614, 625, 637, 643, 661, 677, 725, 728, 735, 756, 840, 855, 860, 864, 867, 868, 888, 889, 895, 896, 902, 905, 908, 932, 985, 989, 1009, 1019, 1052, 1062, 1083, 1085, 1088, 1115, 1148, 1191], "inconsist": [15, 644, 1214], "easi": [15, 59, 120, 180, 190, 192, 193, 194, 195, 196, 197, 201, 209, 210, 213, 225, 271, 281, 354, 379, 380, 443, 458, 484, 500, 742, 759, 801, 823, 867, 869, 873, 885, 892, 927, 993, 994, 995, 1022, 1041, 1059, 1083, 1109, 1121, 1130, 1132, 1197, 1224, 1225, 1249, 1261, 1265], "plain": [15, 123, 192, 251, 409, 524, 620, 655, 658, 738, 791, 806, 890, 994, 1088, 1101], "file": [15, 17, 22, 23, 24, 26, 28, 32, 35, 38, 41, 42, 43, 44, 59, 69, 71, 76, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 113, 115, 116, 120, 121, 128, 132, 137, 141, 142, 144, 148, 151, 152, 166, 168, 172, 173, 179, 184, 188, 189, 190, 191, 192, 195, 196, 201, 208, 211, 213, 215, 216, 217, 218, 220, 221, 223, 225, 226, 228, 229, 230, 231, 236, 238, 239, 240, 241, 246, 249, 250, 251, 254, 255, 256, 259, 260, 262, 263, 264, 265, 267, 268, 271, 272, 274, 275, 278, 279, 280, 281, 283, 285, 288, 289, 293, 294, 295, 298, 302, 304, 307, 308, 310, 311, 317, 318, 320, 324, 325, 329, 331, 332, 339, 340, 343, 344, 346, 347, 348, 352, 355, 358, 364, 367, 369, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 395, 398, 399, 400, 401, 402, 403, 409, 411, 412, 416, 426, 429, 430, 460, 461, 463, 464, 465, 466, 472, 476, 479, 483, 487, 492, 496, 498, 500, 501, 502, 505, 507, 513, 517, 523, 528, 531, 533, 534, 535, 537, 538, 540, 542, 548, 562, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 621, 624, 627, 629, 630, 633, 636, 639, 642, 647, 649, 654, 660, 661, 662, 663, 669, 725, 726, 733, 736, 744, 759, 782, 788, 792, 802, 815, 837, 838, 839, 840, 843, 848, 849, 853, 854, 856, 857, 864, 865, 868, 878, 883, 889, 891, 894, 896, 902, 903, 905, 908, 911, 912, 913, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 944, 946, 947, 948, 952, 956, 957, 958, 959, 960, 962, 965, 968, 974, 977, 982, 985, 986, 989, 993, 994, 995, 996, 998, 999, 1001, 1002, 1008, 1009, 1012, 1013, 1014, 1023, 1026, 1027, 1030, 1032, 1033, 1039, 1042, 1045, 1048, 1050, 1054, 1056, 1057, 1058, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1082, 1083, 1084, 1089, 1090, 1091, 1094, 1097, 1102, 1105, 1108, 1113, 1117, 1119, 1121, 1132, 1138, 1141, 1142, 1149, 1150, 1160, 1163, 1174, 1175, 1178, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1196, 1204, 1205, 1212, 1213, 1216, 1219, 1224, 1225, 1226, 1227, 1230, 1232, 1235, 1238, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1261, 1265], "happi": [15, 195, 221, 488, 652, 1196], "clear": [15, 31, 190, 192, 197, 208, 241, 251, 280, 341, 399, 400, 465, 490, 494, 526, 531, 535, 545, 551, 657, 712, 746, 764, 801, 887, 895, 924, 927, 948, 1009, 1086, 1101, 1121, 1123, 1195, 1196, 1226], "front": [15, 69, 197, 221, 277, 323, 494, 694, 814, 1242], "later": [15, 71, 116, 132, 189, 190, 193, 200, 210, 221, 343, 420, 424, 430, 432, 434, 490, 494, 500, 513, 519, 534, 646, 647, 649, 660, 662, 663, 697, 753, 784, 787, 846, 848, 850, 855, 871, 873, 883, 890, 930, 993, 1015, 1031, 1033, 1034, 1036, 1047, 1051, 1102, 1110, 1120, 1123, 1125, 1204, 1210], "dure": [15, 33, 34, 95, 97, 153, 154, 182, 189, 190, 191, 192, 196, 197, 201, 209, 221, 225, 277, 371, 401, 463, 467, 468, 482, 494, 499, 526, 563, 570, 596, 599, 679, 697, 725, 755, 794, 883, 887, 892, 919, 926, 993, 995, 1004, 1067, 1082, 1083, 1102, 1115, 1117, 1132, 1217, 1224], "menu": [15, 53, 229, 887], "mine": [16, 189, 190, 193, 201, 217, 221, 225, 416, 634, 887], "basic": [16, 17, 19, 53, 63, 64, 65, 68, 69, 74, 88, 92, 94, 97, 101, 102, 115, 119, 120, 121, 122, 125, 128, 132, 133, 137, 138, 145, 148, 151, 190, 192, 197, 200, 203, 205, 210, 213, 216, 225, 238, 251, 256, 267, 275, 277, 280, 281, 305, 307, 314, 315, 316, 324, 332, 342, 346, 348, 354, 372, 373, 376, 379, 397, 398, 399, 400, 401, 403, 405, 409, 415, 466, 472, 476, 479, 483, 492, 494, 496, 498, 499, 501, 502, 517, 523, 524, 531, 533, 535, 536, 537, 546, 548, 549, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 636, 637, 642, 667, 675, 680, 692, 696, 704, 705, 708, 709, 713, 714, 715, 724, 725, 727, 734, 735, 736, 737, 738, 739, 744, 747, 748, 750, 753, 755, 782, 799, 815, 818, 824, 835, 837, 839, 840, 844, 847, 849, 854, 857, 864, 868, 878, 887, 889, 891, 896, 902, 905, 907, 908, 910, 914, 915, 922, 924, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 991, 992, 997, 998, 999, 1000, 1001, 1011, 1012, 1013, 1014, 1016, 1021, 1024, 1026, 1032, 1036, 1042, 1045, 1048, 1050, 1058, 1061, 1062, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1083, 1121, 1150, 1177, 1178, 1189, 1199, 1205, 1211, 1212, 1214, 1229, 1233, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1256, 1260, 1262, 1264], "hi": [16, 33, 209, 221, 225, 228, 246, 272, 275, 487, 596, 1102, 1191], "repertoir": [16, 185, 233, 243, 548], "data": [16, 17, 37, 61, 64, 69, 80, 99, 101, 102, 125, 133, 137, 163, 188, 190, 191, 192, 193, 197, 200, 208, 210, 212, 221, 225, 226, 230, 238, 240, 245, 255, 258, 259, 264, 265, 267, 274, 277, 281, 287, 302, 306, 307, 308, 309, 311, 314, 316, 317, 318, 323, 328, 331, 333, 336, 342, 345, 347, 351, 357, 364, 367, 378, 379, 380, 400, 401, 416, 429, 443, 450, 459, 466, 472, 473, 476, 478, 479, 483, 488, 492, 493, 495, 496, 501, 502, 505, 507, 512, 513, 514, 515, 528, 529, 537, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 607, 609, 618, 642, 643, 645, 649, 652, 664, 667, 669, 670, 681, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 744, 748, 751, 782, 794, 798, 806, 807, 815, 816, 824, 837, 838, 839, 840, 842, 845, 846, 877, 881, 885, 892, 900, 918, 925, 930, 932, 940, 987, 989, 993, 994, 995, 996, 1006, 1010, 1012, 1020, 1025, 1033, 1036, 1039, 1041, 1053, 1078, 1087, 1089, 1094, 1098, 1101, 1114, 1115, 1126, 1128, 1129, 1130, 1138, 1150, 1178, 1179, 1189, 1193, 1194, 1195, 1197, 1199, 1200, 1204, 1209, 1210, 1213, 1215, 1216, 1219, 1224, 1243, 1254, 1256], "convinc": [16, 443], "him": [16, 221, 225, 228, 246, 249, 272, 298, 322, 344, 791, 1038, 1191], "wai": [16, 31, 38, 49, 50, 51, 71, 72, 163, 182, 188, 189, 192, 197, 201, 202, 210, 213, 217, 222, 224, 225, 227, 228, 229, 232, 233, 241, 246, 249, 261, 262, 267, 270, 271, 272, 274, 275, 279, 281, 289, 293, 294, 307, 308, 311, 315, 317, 318, 339, 340, 378, 386, 390, 439, 443, 447, 448, 458, 464, 480, 481, 482, 490, 506, 508, 524, 534, 544, 546, 547, 551, 567, 569, 588, 598, 602, 614, 620, 628, 644, 645, 652, 656, 659, 697, 699, 726, 732, 743, 759, 780, 790, 802, 806, 821, 843, 856, 865, 879, 881, 887, 914, 915, 924, 930, 932, 935, 936, 942, 986, 993, 994, 995, 1006, 1013, 1021, 1049, 1052, 1062, 1063, 1067, 1074, 1078, 1089, 1101, 1106, 1112, 1115, 1116, 1119, 1130, 1134, 1135, 1137, 1140, 1142, 1148, 1176, 1191, 1209, 1217, 1224, 1231, 1249, 1251], "go": [16, 28, 30, 48, 49, 50, 51, 71, 88, 126, 132, 141, 154, 190, 193, 194, 196, 197, 218, 221, 228, 232, 241, 250, 251, 267, 308, 311, 313, 343, 371, 401, 504, 506, 524, 544, 585, 746, 784, 796, 802, 814, 840, 848, 851, 855, 887, 889, 918, 931, 948, 950, 985, 986, 993, 994, 1021, 1024, 1026, 1033, 1041, 1045, 1065, 1068, 1083, 1114, 1149], "relev": [16, 141, 192, 264, 289, 373, 430, 513, 524, 531, 601, 806, 887, 900, 993, 994, 1089, 1206, 1219, 1262], "part": [16, 31, 71, 83, 97, 115, 188, 190, 191, 192, 193, 195, 197, 200, 210, 213, 221, 228, 229, 230, 251, 277, 289, 308, 311, 323, 373, 375, 400, 407, 420, 443, 477, 504, 547, 552, 566, 587, 601, 644, 742, 814, 838, 858, 865, 887, 907, 914, 915, 948, 984, 986, 993, 994, 995, 996, 1011, 1065, 1114, 1127, 1132, 1134, 1181, 1183, 1197, 1198, 1209, 1210, 1212, 1213, 1214, 1215, 1234, 1244, 1264], "natur": [16, 26, 66, 190, 192, 197, 221, 275, 281, 323, 416, 420, 438, 482, 543, 544, 695, 697, 742, 802, 994, 1125], "straighforward": 16, "approach": [16, 23, 26, 189, 190, 228, 332, 348, 371, 374, 377, 422, 506, 516, 517, 523, 524, 531, 533, 800, 829, 840, 927, 994, 1049, 1051, 1208], "would": [16, 45, 95, 98, 105, 108, 109, 133, 189, 191, 192, 194, 195, 201, 209, 211, 218, 221, 225, 227, 240, 251, 264, 277, 281, 316, 318, 354, 454, 473, 480, 482, 493, 494, 511, 515, 524, 526, 531, 535, 537, 542, 600, 614, 618, 652, 655, 657, 659, 706, 713, 722, 747, 753, 792, 802, 814, 836, 838, 887, 890, 914, 915, 939, 941, 944, 970, 994, 995, 1005, 1006, 1022, 1033, 1041, 1062, 1082, 1083, 1087, 1089, 1090, 1110, 1121, 1125, 1129, 1132, 1138, 1142, 1148, 1169, 1196, 1199, 1209, 1216], "copi": [16, 24, 30, 38, 61, 88, 90, 92, 93, 105, 109, 115, 119, 123, 128, 132, 137, 138, 140, 142, 145, 168, 182, 184, 188, 190, 191, 192, 193, 196, 201, 210, 216, 219, 229, 236, 239, 251, 261, 267, 273, 277, 281, 284, 287, 293, 294, 295, 296, 299, 304, 305, 309, 313, 314, 316, 323, 325, 326, 329, 341, 354, 363, 369, 370, 373, 379, 401, 430, 432, 444, 450, 459, 464, 466, 468, 472, 473, 476, 479, 483, 492, 496, 501, 502, 519, 522, 539, 569, 570, 583, 584, 585, 590, 607, 619, 620, 622, 631, 636, 638, 640, 642, 643, 644, 650, 659, 660, 662, 663, 672, 676, 686, 694, 703, 705, 708, 709, 721, 723, 730, 733, 736, 739, 744, 745, 746, 750, 751, 752, 770, 782, 784, 794, 798, 802, 803, 807, 815, 819, 836, 837, 838, 839, 840, 862, 867, 887, 888, 903, 913, 914, 915, 916, 917, 918, 928, 948, 954, 955, 957, 958, 959, 960, 962, 968, 985, 996, 999, 1001, 1006, 1018, 1023, 1024, 1025, 1026, 1031, 1035, 1036, 1041, 1045, 1058, 1068, 1076, 1077, 1078, 1080, 1082, 1083, 1087, 1088, 1122, 1137, 1140, 1204, 1208, 1213, 1226, 1231, 1233, 1241], "dumb": [16, 33, 209, 240, 383, 858, 1036, 1038], "reason": [16, 48, 133, 179, 192, 210, 221, 250, 269, 380, 395, 477, 484, 486, 488, 494, 497, 516, 542, 660, 662, 663, 697, 742, 785, 804, 855, 871, 883, 887, 939, 941, 1041, 1049, 1050, 1063, 1078, 1083, 1121, 1130, 1132, 1196], "ar": [16, 20, 31, 33, 35, 41, 43, 44, 45, 46, 48, 49, 50, 51, 55, 59, 69, 71, 72, 80, 97, 99, 100, 101, 102, 105, 110, 111, 113, 120, 128, 133, 141, 148, 154, 161, 166, 172, 173, 179, 186, 189, 192, 193, 194, 196, 197, 200, 201, 204, 205, 206, 209, 210, 211, 213, 217, 219, 221, 225, 226, 227, 228, 229, 230, 241, 248, 249, 250, 251, 258, 261, 262, 264, 265, 267, 268, 270, 272, 273, 274, 275, 277, 281, 285, 289, 294, 296, 298, 305, 307, 308, 311, 313, 314, 315, 316, 318, 323, 326, 331, 335, 340, 341, 344, 345, 347, 354, 370, 371, 379, 380, 383, 384, 385, 389, 395, 398, 400, 401, 403, 404, 416, 419, 421, 422, 424, 427, 429, 430, 432, 434, 437, 438, 441, 442, 443, 449, 452, 455, 460, 461, 464, 468, 470, 471, 473, 474, 475, 480, 481, 482, 484, 485, 488, 491, 494, 497, 504, 505, 507, 518, 522, 526, 528, 530, 531, 534, 535, 537, 538, 540, 542, 543, 544, 554, 564, 566, 569, 588, 591, 598, 599, 600, 601, 602, 605, 609, 614, 618, 628, 634, 637, 644, 645, 646, 647, 649, 652, 653, 654, 655, 656, 657, 659, 666, 669, 676, 677, 678, 681, 691, 697, 698, 703, 706, 713, 715, 716, 718, 719, 723, 725, 730, 731, 732, 733, 737, 743, 745, 746, 747, 750, 753, 754, 755, 759, 764, 781, 784, 785, 790, 791, 792, 794, 796, 800, 801, 802, 803, 805, 806, 808, 811, 813, 817, 838, 840, 842, 843, 846, 856, 858, 860, 865, 871, 873, 875, 879, 881, 883, 885, 887, 892, 906, 913, 914, 915, 918, 920, 921, 923, 924, 926, 927, 928, 930, 931, 933, 934, 939, 941, 948, 949, 951, 961, 966, 970, 973, 976, 986, 987, 993, 994, 995, 996, 1002, 1004, 1006, 1009, 1011, 1012, 1015, 1016, 1023, 1029, 1033, 1034, 1036, 1038, 1039, 1041, 1044, 1050, 1051, 1052, 1053, 1058, 1062, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1074, 1078, 1080, 1081, 1083, 1084, 1085, 1087, 1089, 1090, 1092, 1094, 1098, 1101, 1102, 1103, 1104, 1108, 1110, 1114, 1117, 1118, 1119, 1120, 1121, 1123, 1126, 1130, 1138, 1140, 1141, 1142, 1145, 1153, 1158, 1186, 1191, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1207, 1209, 1210, 1213, 1215, 1216, 1224, 1226, 1227, 1230, 1231, 1234, 1242, 1245, 1249, 1250, 1251, 1255, 1256, 1261, 1262, 1263, 1264], "need": [16, 31, 33, 48, 50, 95, 116, 118, 120, 123, 133, 154, 161, 163, 190, 191, 192, 195, 197, 201, 204, 205, 210, 221, 228, 229, 231, 241, 251, 265, 267, 289, 333, 376, 380, 386, 398, 427, 429, 432, 452, 460, 461, 480, 486, 487, 493, 497, 499, 500, 504, 508, 515, 531, 534, 535, 537, 539, 543, 544, 566, 596, 598, 599, 600, 601, 631, 637, 643, 644, 658, 678, 698, 712, 719, 723, 725, 753, 759, 788, 802, 805, 811, 816, 819, 825, 846, 860, 862, 875, 879, 883, 887, 927, 931, 944, 949, 986, 987, 988, 989, 993, 994, 995, 1002, 1006, 1012, 1013, 1016, 1019, 1030, 1036, 1047, 1068, 1078, 1082, 1083, 1084, 1088, 1093, 1106, 1114, 1115, 1117, 1120, 1129, 1134, 1146, 1147, 1196, 1197, 1204, 1226, 1242, 1245, 1250, 1254, 1264], "mechan": [16, 20, 80, 179, 190, 191, 213, 221, 225, 236, 251, 305, 542, 719, 1038, 1059, 1098, 1191, 1219, 1241, 1249, 1251, 1253, 1254, 1255], "where": [16, 41, 80, 100, 113, 115, 133, 153, 154, 173, 177, 178, 189, 190, 191, 192, 193, 195, 197, 200, 209, 210, 217, 218, 221, 222, 225, 248, 249, 250, 251, 258, 261, 264, 265, 267, 274, 277, 281, 289, 298, 305, 323, 331, 340, 344, 347, 380, 398, 403, 404, 438, 442, 452, 460, 461, 463, 464, 465, 478, 482, 493, 495, 505, 509, 519, 548, 555, 586, 588, 599, 614, 620, 637, 655, 716, 719, 723, 742, 800, 801, 805, 824, 881, 885, 887, 899, 930, 931, 945, 948, 951, 973, 978, 986, 993, 994, 995, 1002, 1007, 1013, 1015, 1018, 1021, 1022, 1040, 1050, 1051, 1058, 1062, 1063, 1066, 1078, 1082, 1083, 1090, 1092, 1094, 1097, 1119, 1121, 1131, 1173, 1191, 1198, 1203, 1224, 1249, 1256], "could": [16, 38, 45, 101, 102, 115, 120, 128, 132, 154, 160, 163, 190, 191, 195, 197, 201, 210, 219, 221, 227, 241, 250, 251, 261, 271, 277, 305, 315, 317, 318, 336, 339, 351, 371, 380, 416, 443, 487, 511, 513, 516, 543, 544, 568, 601, 652, 659, 723, 736, 742, 755, 756, 764, 779, 789, 804, 858, 887, 900, 927, 945, 994, 995, 1002, 1013, 1019, 1058, 1068, 1121, 1173, 1187, 1203, 1213, 1219, 1231, 1241], "exchang": [16, 69, 218, 261, 351, 356, 358, 504, 552, 568, 598, 752, 753, 858, 932, 1053, 1148, 1156, 1244], "meta": [16, 27, 184, 188, 197, 887, 899, 948], "retriev": [16, 201, 770, 887, 1094, 1142], "metadata": [16, 27, 302, 919, 923, 994, 997, 1023, 1088, 1249], "process": [16, 48, 50, 64, 69, 71, 88, 90, 101, 102, 115, 137, 152, 195, 200, 206, 213, 219, 221, 228, 229, 231, 265, 295, 304, 317, 318, 325, 339, 369, 370, 371, 400, 401, 408, 413, 465, 471, 500, 526, 535, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 809, 815, 838, 839, 840, 849, 854, 857, 859, 864, 868, 870, 873, 874, 877, 878, 879, 880, 882, 884, 887, 891, 892, 893, 896, 898, 901, 902, 904, 905, 907, 908, 914, 915, 916, 917, 918, 922, 923, 924, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 985, 994, 997, 998, 999, 1000, 1001, 1004, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1021, 1023, 1024, 1026, 1033, 1034, 1035, 1042, 1047, 1048, 1050, 1051, 1052, 1059, 1062, 1063, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1084, 1093, 1101, 1114, 1115, 1119, 1170, 1236, 1245, 1248, 1249, 1250, 1252, 1253, 1255], "check": [16, 17, 26, 79, 88, 95, 110, 113, 120, 141, 153, 166, 177, 189, 190, 192, 193, 194, 195, 196, 201, 209, 221, 225, 229, 233, 258, 264, 267, 274, 277, 281, 305, 318, 373, 380, 383, 406, 409, 430, 445, 454, 456, 457, 462, 470, 477, 481, 489, 491, 513, 528, 534, 591, 592, 614, 625, 637, 644, 652, 658, 659, 676, 697, 736, 752, 753, 764, 801, 838, 840, 860, 862, 867, 887, 903, 904, 906, 985, 986, 993, 1016, 1021, 1027, 1030, 1036, 1066, 1067, 1073, 1076, 1078, 1085, 1114, 1119, 1132, 1142, 1146, 1150, 1152, 1154, 1170, 1176, 1189, 1219, 1224, 1233, 1241], "everyth": [16, 30, 31, 89, 115, 128, 137, 190, 196, 197, 213, 225, 229, 240, 248, 266, 267, 295, 304, 305, 308, 311, 325, 326, 340, 343, 369, 370, 409, 416, 432, 452, 455, 480, 494, 500, 504, 519, 585, 643, 644, 646, 653, 656, 661, 666, 716, 759, 788, 792, 808, 815, 838, 839, 840, 856, 865, 885, 889, 892, 917, 920, 921, 922, 924, 925, 949, 970, 985, 986, 987, 993, 994, 995, 1012, 1014, 1015, 1026, 1041, 1042, 1048, 1050, 1053, 1063, 1086, 1092, 1097, 1101, 1198, 1213, 1252, 1253], "clearli": [16, 31, 118, 221, 482, 513, 519, 749, 770, 797, 887, 906, 1022, 1090, 1121, 1142, 1256, 1264], "top": [16, 20, 22, 23, 26, 27, 38, 161, 189, 190, 192, 193, 210, 212, 213, 229, 231, 258, 264, 267, 274, 277, 379, 380, 526, 529, 534, 725, 890, 899, 986, 1006, 1047, 1049, 1068, 1089, 1097, 1119, 1166, 1170, 1241, 1245, 1247, 1250], "intersphinx": 16, "spinx": 16, "possibli": [17, 68, 76, 122, 185, 190, 221, 506, 514, 659, 736, 750, 759, 764, 779, 791, 801, 813, 814, 933, 970, 994, 1044, 1080, 1207], "arrang": [17, 75, 101, 102, 148, 194, 336, 601, 806, 920, 921, 982], "subgroup": [17, 23, 26, 620], "refer": [17, 81, 88, 101, 102, 115, 121, 133, 173, 176, 185, 189, 195, 196, 209, 211, 216, 225, 228, 230, 233, 234, 245, 246, 248, 250, 251, 256, 259, 260, 262, 263, 265, 266, 267, 272, 273, 274, 277, 281, 283, 285, 286, 288, 292, 300, 301, 303, 308, 310, 311, 315, 316, 318, 321, 322, 324, 327, 328, 330, 331, 339, 340, 342, 343, 344, 347, 349, 354, 355, 356, 358, 361, 362, 364, 365, 366, 368, 370, 379, 380, 381, 384, 385, 386, 387, 388, 389, 398, 461, 467, 474, 517, 519, 522, 524, 526, 538, 590, 598, 620, 642, 643, 644, 645, 659, 660, 662, 663, 664, 710, 718, 723, 727, 730, 731, 734, 735, 736, 737, 738, 739, 750, 770, 782, 783, 791, 794, 798, 802, 807, 815, 837, 838, 839, 840, 846, 847, 849, 851, 854, 857, 864, 868, 878, 887, 891, 896, 899, 902, 905, 908, 931, 961, 970, 985, 986, 993, 994, 1018, 1031, 1059, 1065, 1082, 1085, 1090, 1091, 1113, 1140, 1141, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205, 1224, 1226, 1241, 1243, 1256], "veri": [17, 23, 25, 26, 189, 190, 192, 210, 221, 225, 228, 230, 241, 246, 249, 272, 275, 298, 322, 344, 409, 416, 436, 443, 453, 454, 474, 490, 491, 493, 499, 506, 519, 535, 544, 631, 642, 654, 669, 687, 715, 745, 746, 784, 787, 790, 801, 804, 824, 887, 892, 897, 926, 927, 987, 992, 994, 995, 1012, 1013, 1029, 1036, 1051, 1065, 1094, 1102, 1118, 1121, 1125, 1126, 1132, 1136, 1140, 1146, 1191, 1198, 1199, 1220, 1236, 1241, 1248], "unawar": [17, 221, 228], "simpli": [17, 48, 53, 120, 186, 190, 193, 195, 197, 201, 204, 213, 277, 278, 317, 318, 339, 340, 443, 485, 547, 585, 652, 660, 662, 663, 712, 722, 734, 770, 791, 792, 797, 802, 816, 865, 919, 933, 993, 1015, 1019, 1065, 1082, 1090], "interest": [17, 113, 191, 192, 210, 221, 229, 398, 535, 544, 1089, 1210, 1248, 1250, 1260], "old": [17, 121, 190, 192, 195, 219, 229, 261, 262, 277, 309, 319, 323, 348, 373, 439, 478, 499, 504, 524, 547, 620, 672, 679, 684, 699, 732, 738, 741, 746, 747, 788, 806, 817, 844, 850, 860, 879, 986, 994, 1052, 1129, 1135, 1148, 1169, 1215, 1243, 1251], "catalog": [17, 1242], "book": [17, 20, 190, 195, 205, 216, 225, 250, 272, 308, 317, 318, 416, 505, 517, 536, 948, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "chapter": [17, 30, 133, 241, 250, 258, 264, 274, 277, 278, 366, 620, 948], "subchapt": 17, "cluster_python": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1198, 1201, 1204, 1205, 1207, 1211, 1218, 1221, 1223, 1228], "program": [17, 18, 27, 30, 49, 51, 55, 63, 64, 65, 67, 69, 75, 76, 81, 88, 92, 101, 102, 105, 106, 111, 114, 115, 116, 120, 123, 126, 128, 132, 133, 136, 138, 148, 151, 152, 154, 165, 168, 187, 188, 189, 190, 191, 192, 195, 197, 200, 201, 205, 207, 209, 210, 212, 213, 217, 224, 225, 226, 228, 229, 230, 235, 240, 241, 246, 249, 250, 256, 258, 259, 262, 265, 268, 272, 275, 278, 279, 280, 286, 291, 295, 304, 307, 308, 311, 314, 316, 324, 325, 326, 328, 332, 348, 350, 356, 358, 369, 370, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 395, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 415, 421, 423, 424, 427, 429, 430, 432, 433, 434, 435, 438, 440, 443, 445, 450, 463, 472, 476, 477, 479, 481, 482, 483, 484, 491, 493, 496, 498, 499, 500, 501, 505, 506, 507, 510, 517, 523, 532, 533, 534, 536, 537, 539, 542, 548, 552, 562, 563, 564, 568, 569, 570, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 602, 607, 609, 631, 637, 642, 643, 649, 650, 664, 667, 670, 686, 692, 696, 705, 706, 708, 709, 714, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 782, 784, 787, 792, 797, 798, 802, 807, 809, 815, 824, 837, 839, 840, 841, 845, 856, 858, 867, 887, 901, 903, 904, 917, 919, 920, 921, 922, 923, 924, 925, 928, 930, 931, 932, 943, 948, 951, 978, 982, 985, 986, 988, 991, 992, 993, 994, 1002, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1024, 1028, 1029, 1035, 1039, 1042, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1058, 1063, 1064, 1066, 1074, 1078, 1080, 1082, 1083, 1084, 1085, 1090, 1091, 1093, 1099, 1100, 1101, 1102, 1113, 1116, 1120, 1121, 1124, 1125, 1128, 1132, 1133, 1135, 1142, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1196, 1197, 1198, 1200, 1201, 1203, 1204, 1205, 1207, 1211, 1218, 1219, 1221, 1223, 1224, 1228, 1231, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1247, 1249, 1250, 1256, 1258, 1260, 1261, 1263, 1264, 1265], "cluster_python_exercis": [17, 246, 398, 840, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "exercis": [17, 69, 84, 88, 93, 95, 97, 115, 116, 128, 131, 132, 133, 137, 139, 140, 143, 151, 166, 208, 216, 221, 228, 229, 233, 235, 240, 243, 246, 252, 256, 259, 262, 263, 265, 268, 272, 275, 278, 280, 283, 285, 286, 295, 297, 304, 308, 310, 311, 325, 326, 330, 344, 348, 355, 369, 374, 376, 377, 383, 384, 385, 386, 387, 389, 397, 400, 403, 411, 412, 428, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 541, 549, 589, 610, 611, 612, 613, 615, 616, 617, 622, 642, 708, 709, 723, 744, 782, 810, 839, 840, 841, 848, 910, 914, 915, 917, 922, 929, 939, 941, 943, 968, 979, 985, 1001, 1024, 1026, 1037, 1045, 1064, 1071, 1072, 1114, 1149, 1178, 1189, 1190, 1224, 1241, 1242, 1249, 1252, 1253, 1254, 1261, 1262], "cluster_python_exercises_userdb": [17, 840, 1150, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "databas": [17, 30, 31, 43, 69, 208, 209, 228, 250, 256, 261, 262, 265, 267, 268, 271, 275, 289, 317, 318, 339, 371, 389, 544, 545, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 840, 944, 976, 997, 1108, 1148, 1150, 1169, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1205, 1209, 1220, 1236, 1263], "seri": [17, 91, 191, 203, 205, 207, 261, 265, 306, 307, 308, 309, 311, 313, 315, 340, 345, 351, 405, 484, 505, 554, 840, 998, 1115, 1148, 1150, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1196, 1205, 1210, 1211, 1212, 1214, 1215, 1245, 1246, 1247, 1248, 1249, 1250, 1262], "cluster_python_exercises_herdt": [17, 840, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1189], "cluster_python_exercises_legaci": [17, 246, 398, 840, 1150, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189], "legaci": [17, 246, 398, 547, 840, 1150, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189], "cluster_python_exercises_csv": [17, 840, 1147, 1148, 1149, 1150, 1189], "csv": [17, 32, 39, 41, 42, 43, 44, 69, 97, 120, 122, 125, 225, 228, 237, 240, 246, 250, 251, 254, 256, 258, 259, 262, 263, 265, 269, 272, 275, 277, 283, 284, 287, 302, 306, 307, 309, 312, 313, 317, 318, 324, 329, 333, 336, 339, 341, 345, 351, 357, 363, 367, 380, 505, 840, 930, 933, 948, 970, 1102, 1105, 1108, 1142, 1150, 1184, 1185, 1186, 1187, 1189, 1191, 1194, 1195, 1196, 1197, 1205], "cluster_python_exercises_sensor": [17, 840, 1150, 1177, 1178, 1179, 1189], "sensor": [17, 60, 63, 64, 65, 69, 72, 75, 88, 97, 100, 103, 104, 105, 106, 107, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 131, 132, 133, 136, 143, 144, 151, 153, 154, 160, 161, 166, 216, 225, 229, 265, 286, 297, 305, 314, 317, 318, 333, 336, 339, 343, 354, 357, 379, 380, 398, 402, 404, 507, 528, 530, 541, 546, 548, 556, 562, 563, 566, 567, 571, 577, 580, 586, 590, 591, 592, 593, 594, 595, 596, 607, 610, 611, 612, 613, 614, 615, 616, 617, 642, 650, 714, 752, 801, 802, 803, 828, 830, 840, 887, 985, 992, 994, 1024, 1026, 1045, 1102, 1150, 1178, 1189, 1245, 1247, 1248], "And": [17, 27, 56, 88, 90, 93, 94, 95, 97, 115, 125, 137, 140, 145, 147, 151, 156, 169, 190, 191, 192, 194, 197, 219, 225, 228, 248, 251, 256, 258, 267, 269, 278, 286, 293, 294, 295, 297, 298, 300, 301, 303, 304, 307, 311, 321, 322, 324, 325, 327, 332, 341, 346, 348, 349, 352, 355, 356, 358, 361, 362, 365, 366, 368, 369, 375, 376, 378, 381, 415, 505, 513, 517, 519, 523, 528, 533, 536, 539, 541, 548, 550, 562, 576, 590, 591, 592, 593, 594, 595, 596, 597, 600, 603, 607, 619, 620, 642, 650, 671, 679, 684, 694, 697, 705, 709, 715, 739, 751, 782, 783, 784, 793, 798, 805, 807, 815, 827, 831, 837, 838, 839, 840, 910, 916, 917, 920, 921, 922, 926, 930, 938, 940, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 979, 985, 992, 999, 1001, 1008, 1014, 1016, 1021, 1024, 1026, 1030, 1042, 1045, 1048, 1050, 1053, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1089, 1091, 1096, 1099, 1100, 1101, 1105, 1106, 1130, 1147, 1148, 1149, 1150, 1163, 1174, 1184, 1185, 1186, 1189, 1201, 1205, 1211, 1218, 1241, 1257, 1259], "acquisit": [17, 120, 190, 216, 317, 318, 333, 336, 339, 340, 343, 634, 840, 1146, 1150, 1178, 1179, 1189], "cluster_python_misc": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1144, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1198, 1204, 1205, 1207, 1211, 1218, 1221, 1228], "cluster_python_misc_panda": [17, 840, 1189, 1205, 1211], "panda": [17, 210, 221, 240, 246, 259, 272, 286, 289, 307, 310, 322, 339, 341, 343, 346, 350, 352, 363, 416, 506, 840, 1114, 1189, 1191, 1194, 1197, 1205], "cluster_python_misc_ai": [17, 840, 1189, 1192, 1193, 1197, 1198, 1205], "machin": [17, 93, 101, 102, 115, 148, 184, 188, 192, 197, 210, 225, 241, 248, 249, 258, 259, 262, 264, 274, 277, 331, 339, 343, 347, 357, 397, 401, 420, 436, 438, 446, 454, 482, 486, 500, 601, 602, 840, 887, 914, 915, 920, 921, 924, 927, 978, 985, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1050, 1065, 1068, 1071, 1072, 1076, 1090, 1189, 1193, 1197, 1205, 1255, 1256], "artifici": [17, 225, 250, 308, 339, 343, 482, 736, 840, 1006, 1082, 1189, 1193, 1197, 1198, 1205], "intellig": [17, 190, 225, 265, 301, 308, 311, 321, 327, 339, 343, 361, 362, 404, 840, 858, 1087, 1091, 1189, 1193, 1197, 1198, 1205], "cluster_python_advanc": [17, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1144, 1147, 1148, 1149, 1150, 1163, 1174, 1177, 1178, 1179, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1201, 1205, 1207, 1218, 1221, 1223, 1228], "languag": [17, 31, 49, 51, 69, 81, 115, 133, 145, 152, 165, 168, 203, 205, 210, 212, 224, 225, 226, 228, 230, 233, 235, 240, 241, 243, 246, 248, 249, 250, 252, 268, 272, 275, 278, 280, 283, 308, 311, 314, 315, 316, 343, 379, 380, 384, 385, 386, 387, 388, 389, 398, 401, 415, 418, 420, 432, 435, 446, 450, 459, 464, 466, 472, 476, 477, 479, 492, 496, 501, 504, 517, 519, 520, 524, 526, 533, 535, 536, 548, 562, 563, 564, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 607, 609, 642, 643, 650, 654, 656, 664, 667, 669, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 746, 751, 758, 759, 769, 783, 788, 790, 793, 798, 802, 805, 806, 807, 815, 823, 824, 837, 839, 840, 841, 919, 978, 986, 987, 1065, 1067, 1085, 1094, 1098, 1099, 1100, 1101, 1102, 1105, 1110, 1114, 1118, 1120, 1121, 1124, 1133, 1141, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1197, 1201, 1204, 1205, 1207, 1211, 1216, 1218, 1221, 1223, 1228, 1233, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1262, 1263, 1264], "cluster_python_advanced_oo": [17, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1150, 1177, 1178, 1179, 1184, 1186, 1189, 1218], "object": [17, 50, 61, 64, 65, 69, 81, 88, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 120, 121, 124, 133, 139, 144, 148, 152, 166, 206, 209, 211, 216, 221, 228, 237, 239, 240, 245, 248, 249, 251, 254, 256, 258, 261, 262, 265, 266, 267, 268, 269, 273, 274, 279, 280, 282, 284, 287, 291, 299, 303, 305, 306, 308, 309, 311, 313, 316, 319, 323, 329, 335, 341, 345, 351, 354, 356, 357, 363, 367, 373, 379, 385, 387, 388, 391, 393, 398, 399, 400, 401, 434, 460, 487, 505, 531, 534, 537, 538, 539, 540, 544, 546, 548, 553, 562, 564, 570, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 607, 609, 614, 620, 634, 642, 643, 645, 647, 650, 651, 653, 655, 660, 662, 663, 664, 666, 667, 670, 686, 692, 696, 697, 698, 705, 708, 709, 712, 713, 715, 718, 719, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 742, 750, 751, 753, 754, 764, 770, 782, 784, 786, 787, 791, 792, 797, 798, 800, 802, 803, 806, 807, 813, 815, 816, 823, 824, 829, 831, 834, 835, 837, 838, 839, 840, 931, 985, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1082, 1085, 1087, 1088, 1090, 1091, 1094, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1121, 1130, 1132, 1138, 1139, 1150, 1177, 1178, 1179, 1184, 1186, 1189, 1196, 1210, 1212, 1214, 1215, 1216, 1218, 1224, 1241, 1242, 1243, 1249, 1260], "orient": [17, 61, 64, 65, 69, 88, 115, 133, 144, 160, 209, 228, 240, 249, 251, 256, 262, 265, 268, 279, 280, 289, 291, 303, 308, 311, 314, 316, 354, 356, 379, 380, 385, 387, 388, 398, 399, 400, 432, 505, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 607, 609, 642, 643, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 806, 807, 815, 824, 831, 837, 839, 840, 1091, 1098, 1099, 1100, 1101, 1115, 1150, 1177, 1178, 1179, 1184, 1186, 1189, 1218, 1224, 1242, 1243, 1260], "cluster_python_advanced_multithread": [17, 840, 1091, 1098, 1099, 1100, 1101, 1189], "cluster_python_db": [17, 840, 1147, 1149, 1150, 1189, 1201], "cluster_python_bas": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "fundament": [17, 49, 51, 64, 81, 203, 205, 212, 221, 224, 226, 228, 230, 233, 235, 240, 243, 246, 249, 252, 262, 268, 272, 280, 283, 384, 385, 386, 387, 388, 389, 398, 416, 504, 554, 840, 865, 1091, 1098, 1099, 1100, 1101, 1105, 1124, 1133, 1138, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1201, 1204, 1205, 1211, 1218, 1219, 1252, 1260, 1262, 1263, 1264], "cluster_python_swdev": [17, 840, 1144, 1189, 1192, 1193, 1197, 1205, 1207, 1218, 1221, 1223, 1228], "cluster_python_swdev_pytest": [17, 840, 1189, 1218, 1223], "pytest": [17, 265, 275, 278, 286, 289, 298, 307, 315, 317, 322, 333, 336, 339, 340, 343, 344, 362, 406, 506, 840, 1179, 1187, 1188, 1189, 1218, 1259, 1264], "cluster_python_draft": [17, 840, 1144, 1189], "python_python_5550_xml_etre": [17, 840, 1189], "xml": [17, 120, 336, 357, 840, 1189, 1205, 1263], "elementtre": [17, 289, 840, 1189, 1205], "etre": [17, 289, 840, 1189, 1205, 1263], "python_advanced_modul": [17, 840, 1091, 1144, 1147, 1148, 1149, 1150, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1201, 1205, 1207, 1218, 1221, 1223, 1228], "45": [17, 39, 41, 43, 44, 63, 64, 65, 78, 81, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 173, 181, 184, 195, 198, 200, 211, 221, 222, 225, 227, 232, 237, 239, 242, 245, 246, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 384, 385, 386, 387, 388, 389, 392, 393, 398, 403, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 523, 533, 536, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 681, 682, 683, 684, 685, 686, 690, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 758, 769, 782, 783, 793, 798, 807, 815, 820, 824, 837, 838, 839, 840, 844, 847, 849, 852, 854, 857, 859, 863, 864, 866, 868, 870, 872, 878, 880, 882, 884, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 991, 992, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1028, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1195, 1197, 1201, 1204, 1205, 1207, 1211, 1218, 1221, 1223, 1228, 1229], "gt": [17, 20, 23, 24, 41, 43, 44, 63, 64, 65, 78, 81, 116, 117, 118, 119, 121, 123, 124, 125, 126, 132, 181, 208, 211, 222, 227, 232, 239, 245, 246, 248, 253, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 384, 385, 386, 387, 388, 389, 392, 393, 398, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 523, 533, 536, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 758, 782, 783, 793, 798, 807, 815, 824, 837, 839, 840, 844, 847, 849, 852, 854, 857, 859, 863, 864, 866, 868, 870, 872, 878, 880, 882, 884, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 991, 992, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1028, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1201, 1204, 1205, 1207, 1211, 1218, 1221, 1223, 1228, 1229], "python_basics_python_0220_for": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1147, 1148, 1149, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1205], "loop": [17, 20, 22, 26, 30, 49, 51, 53, 80, 81, 88, 101, 102, 115, 120, 124, 133, 148, 180, 190, 213, 225, 228, 230, 233, 234, 235, 238, 246, 248, 249, 250, 252, 256, 259, 262, 267, 268, 270, 272, 273, 278, 280, 282, 283, 285, 286, 288, 298, 301, 308, 311, 318, 321, 322, 327, 328, 336, 340, 344, 349, 350, 352, 354, 355, 356, 361, 362, 365, 366, 368, 371, 373, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 398, 403, 420, 423, 426, 435, 438, 450, 457, 458, 459, 466, 472, 476, 479, 480, 483, 484, 492, 496, 501, 502, 517, 523, 524, 533, 589, 590, 631, 642, 672, 677, 735, 742, 744, 770, 782, 805, 816, 837, 839, 840, 875, 885, 890, 904, 918, 920, 921, 925, 932, 989, 1011, 1012, 1013, 1021, 1049, 1053, 1059, 1062, 1063, 1091, 1092, 1095, 1096, 1101, 1113, 1147, 1148, 1149, 1150, 1152, 1154, 1160, 1162, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1201, 1205, 1207, 1240, 1241, 1244, 1255, 1261], "python_basics_python_0450_dictionari": [17, 81, 840, 1091, 1113, 1150, 1163, 1174, 1189], "dictionari": [17, 50, 81, 211, 221, 226, 227, 228, 230, 233, 234, 235, 238, 240, 244, 246, 247, 252, 256, 257, 259, 260, 262, 263, 265, 266, 268, 270, 272, 273, 276, 279, 280, 282, 283, 285, 286, 288, 291, 298, 300, 301, 303, 308, 310, 311, 315, 317, 318, 320, 321, 322, 324, 327, 328, 330, 333, 336, 339, 340, 342, 343, 344, 346, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 368, 398, 403, 406, 791, 840, 1091, 1094, 1098, 1099, 1100, 1101, 1104, 1105, 1109, 1113, 1148, 1150, 1158, 1163, 1168, 1169, 1174, 1177, 1178, 1179, 1181, 1183, 1184, 1189, 1191, 1199, 1209, 1216, 1218, 1261], "python_exercises_userdb_mqtt_publish_csv": [17, 840, 1150, 1184, 1185, 1189], "mqtt": [17, 113, 119, 120, 122, 125, 238, 240, 254, 256, 265, 278, 279, 283, 317, 318, 333, 336, 339, 375, 376, 378, 379, 404, 407, 409, 517, 523, 533, 840, 1105, 1146, 1150, 1184, 1187, 1189, 1205, 1263], "publish": [17, 113, 123, 194, 196, 265, 277, 278, 298, 340, 395, 404, 406, 840, 1105, 1150, 1184, 1187, 1189, 1191, 1222], "record": [17, 28, 41, 133, 187, 194, 196, 197, 222, 233, 234, 240, 250, 255, 262, 278, 298, 313, 333, 336, 389, 401, 499, 500, 840, 988, 1085, 1090, 1105, 1148, 1150, 1169, 1180, 1181, 1182, 1183, 1184, 1186, 1189, 1199], "python_exercises_userdb_user_json": [17, 840, 1150, 1184, 1185, 1186, 1187, 1189], "To": [17, 33, 48, 69, 93, 103, 104, 106, 107, 113, 114, 121, 189, 190, 192, 194, 205, 213, 217, 221, 236, 248, 258, 264, 274, 277, 278, 281, 285, 293, 294, 296, 298, 318, 333, 336, 340, 430, 433, 488, 500, 544, 589, 602, 697, 711, 722, 739, 741, 782, 798, 835, 839, 840, 860, 864, 875, 887, 916, 923, 985, 986, 994, 999, 1001, 1014, 1023, 1082, 1105, 1150, 1156, 1179, 1184, 1185, 1186, 1189, 1197, 1204, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "json": [17, 69, 76, 83, 115, 120, 123, 222, 228, 238, 252, 256, 257, 265, 266, 274, 277, 278, 282, 285, 291, 300, 333, 335, 336, 338, 340, 343, 357, 417, 840, 1105, 1150, 1184, 1185, 1186, 1189, 1207, 1220], "python_exercises_userdb_csvread": [17, 840, 1150, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "reader": [17, 261, 275, 278, 283, 286, 298, 301, 321, 322, 327, 328, 349, 350, 356, 357, 361, 362, 365, 366, 487, 506, 526, 549, 840, 932, 1102, 1105, 1132, 1150, 1180, 1181, 1184, 1185, 1186, 1187, 1188, 1189], "python_misc_csv": [17, 840, 1148, 1149, 1150, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1205], "python_basics_python_0139_commandline_argv": [17, 81, 246, 398, 840, 1113, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "commandlin": [17, 19, 30, 71, 81, 90, 115, 137, 140, 161, 168, 207, 209, 229, 231, 241, 243, 246, 250, 256, 267, 268, 272, 278, 279, 280, 283, 286, 301, 308, 311, 317, 321, 322, 327, 328, 339, 349, 350, 355, 356, 361, 362, 365, 366, 374, 377, 398, 399, 400, 401, 402, 416, 472, 476, 479, 483, 492, 496, 501, 502, 505, 514, 534, 539, 548, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 744, 782, 815, 837, 839, 840, 856, 887, 910, 914, 915, 916, 917, 920, 921, 922, 928, 929, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 986, 994, 1008, 1014, 1016, 1024, 1026, 1042, 1044, 1045, 1048, 1050, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1113, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1244, 1245, 1247, 1248, 1250, 1258, 1264], "argument": [17, 45, 50, 81, 88, 115, 140, 189, 192, 195, 208, 209, 222, 225, 237, 246, 249, 256, 258, 262, 264, 265, 267, 268, 270, 272, 274, 275, 278, 279, 280, 281, 283, 286, 301, 302, 305, 308, 311, 315, 317, 318, 321, 322, 323, 327, 328, 336, 339, 340, 343, 344, 345, 349, 350, 355, 356, 361, 362, 365, 366, 398, 419, 420, 465, 472, 476, 479, 483, 492, 496, 501, 502, 506, 522, 588, 620, 644, 654, 744, 759, 779, 782, 792, 804, 837, 838, 839, 840, 845, 846, 948, 970, 985, 1019, 1021, 1023, 1026, 1045, 1065, 1084, 1087, 1091, 1113, 1115, 1116, 1133, 1141, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1202, 1224, 1226, 1244], "sy": [17, 20, 81, 116, 128, 132, 141, 191, 207, 209, 211, 212, 237, 239, 240, 246, 249, 255, 258, 262, 264, 269, 272, 274, 277, 278, 280, 281, 283, 284, 286, 299, 301, 302, 307, 308, 311, 317, 321, 322, 323, 327, 328, 339, 343, 345, 349, 350, 355, 356, 357, 361, 362, 365, 366, 367, 383, 384, 391, 398, 493, 506, 585, 601, 602, 840, 842, 846, 867, 945, 975, 986, 993, 994, 995, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1029, 1030, 1031, 1046, 1053, 1055, 1058, 1062, 1080, 1090, 1097, 1112, 1113, 1132, 1140, 1142, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1216, 1224], "argv": [17, 30, 38, 81, 192, 208, 209, 212, 222, 240, 246, 249, 250, 255, 258, 262, 264, 267, 268, 272, 274, 277, 278, 280, 283, 286, 301, 307, 308, 311, 317, 321, 322, 327, 328, 339, 343, 349, 350, 355, 356, 357, 361, 362, 365, 366, 383, 391, 398, 471, 506, 513, 528, 534, 549, 588, 840, 993, 1019, 1020, 1021, 1022, 1023, 1027, 1030, 1031, 1046, 1053, 1062, 1084, 1090, 1097, 1113, 1142, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1231, 1236], "python_exercises_userdb_csvdictread": [17, 840, 1150, 1180, 1181, 1184, 1185, 1186, 1187, 1188, 1189], "dictread": [17, 240, 261, 262, 275, 278, 283, 286, 298, 301, 321, 322, 327, 328, 345, 349, 350, 356, 361, 362, 365, 366, 840, 1105, 1148, 1150, 1184, 1185, 1186, 1187, 1188, 1189], "python_exercises_userdb_csvreader_funct": [17, 840, 1150, 1183, 1184, 1189], "refactor": [17, 31, 43, 128, 171, 275, 278, 283, 286, 298, 301, 317, 321, 322, 327, 328, 349, 350, 356, 361, 362, 365, 366, 379, 415, 465, 505, 542, 789, 840, 848, 854, 864, 868, 878, 889, 891, 896, 902, 905, 908, 985, 1105, 1150, 1184, 1185, 1186, 1187, 1189], "Into": [17, 88, 267, 272, 275, 278, 283, 286, 298, 301, 307, 321, 322, 327, 328, 349, 350, 356, 361, 362, 365, 366, 435, 450, 459, 465, 466, 472, 476, 479, 483, 492, 496, 500, 501, 502, 589, 590, 642, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 744, 782, 837, 839, 840, 1080, 1105, 1150, 1184, 1185, 1186, 1187, 1189], "python_basics_python_0270_funct": [17, 81, 246, 840, 1091, 1113, 1133, 1147, 1148, 1149, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201], "python_exercises_userdb_userdb_modul": [17, 840, 1150, 1184, 1185, 1186, 1187, 1188, 1189], "both": [17, 42, 50, 55, 76, 115, 116, 118, 124, 128, 132, 182, 190, 192, 197, 209, 221, 227, 248, 264, 267, 275, 278, 281, 283, 286, 298, 301, 313, 321, 322, 327, 328, 349, 350, 356, 361, 362, 365, 366, 498, 504, 506, 534, 552, 598, 600, 620, 652, 659, 733, 789, 800, 840, 858, 881, 887, 927, 1029, 1035, 1039, 1052, 1076, 1082, 1089, 1102, 1105, 1109, 1116, 1123, 1130, 1134, 1139, 1150, 1153, 1156, 1162, 1184, 1185, 1186, 1187, 1189, 1197, 1224, 1231, 1241], "python_exercises_userdb_csvdictreader_funct": [17, 840, 1150, 1181, 1184, 1185, 1186, 1187, 1188, 1189], "python_exercises_userdb_user_class_person": [17, 840, 1150, 1184, 1186, 1189], "awai": [17, 50, 68, 75, 189, 190, 191, 195, 213, 229, 250, 256, 264, 298, 301, 321, 322, 327, 333, 336, 349, 355, 356, 361, 365, 371, 380, 387, 540, 801, 840, 927, 948, 1062, 1087, 1105, 1150, 1184, 1189], "raw": [17, 50, 128, 234, 237, 240, 245, 257, 260, 269, 273, 279, 293, 294, 298, 300, 301, 305, 307, 321, 322, 327, 330, 333, 336, 340, 349, 355, 356, 361, 365, 380, 383, 393, 418, 506, 534, 538, 556, 563, 601, 680, 802, 840, 924, 1105, 1121, 1126, 1142, 1150, 1184, 1189], "python_advanced_oo_namedtupl": [17, 840, 1091, 1105, 1150, 1184, 1186, 1189], "namedtupl": [17, 225, 233, 240, 255, 256, 258, 264, 274, 277, 298, 315, 317, 318, 322, 333, 336, 339, 340, 343, 344, 356, 362, 366, 367, 840, 1091, 1105, 1150, 1184, 1186, 1189, 1209], "python_exercises_herdt_boolean": [17, 840, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1189], "boolean": [17, 46, 75, 81, 209, 210, 226, 228, 230, 233, 234, 235, 246, 252, 256, 259, 260, 262, 263, 264, 268, 270, 272, 273, 278, 279, 280, 282, 283, 285, 286, 301, 308, 311, 321, 322, 327, 328, 349, 350, 352, 355, 356, 358, 361, 362, 365, 366, 367, 384, 385, 386, 387, 388, 389, 398, 403, 426, 449, 465, 519, 840, 1038, 1091, 1113, 1121, 1124, 1125, 1136, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1203, 1205], "express": [17, 49, 51, 208, 224, 225, 227, 228, 238, 248, 257, 262, 263, 265, 269, 288, 289, 291, 292, 293, 294, 297, 298, 303, 322, 323, 328, 341, 352, 358, 420, 422, 426, 430, 439, 440, 442, 443, 444, 447, 449, 452, 454, 455, 457, 459, 465, 466, 472, 476, 479, 483, 492, 496, 501, 502, 506, 519, 520, 522, 524, 541, 550, 562, 563, 566, 570, 576, 577, 590, 598, 642, 644, 744, 755, 759, 764, 782, 837, 839, 840, 948, 982, 1065, 1086, 1096, 1102, 1123, 1125, 1132, 1134, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1187, 1188, 1189, 1191, 1212, 1240, 1241, 1243, 1260], "python_basics_python_0160_boolean": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1124, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1205], "python_exercises_herdt_while_even_numb": [17, 840, 1150, 1152, 1154, 1189], "python_exercises_herdt_username_password": [17, 840, 1150, 1152, 1154, 1157, 1189], "usernam": [17, 233, 241, 262, 395, 840, 914, 923, 932, 996, 1006, 1136, 1150, 1152, 1154, 1169, 1189], "password": [17, 197, 200, 229, 233, 241, 262, 395, 398, 403, 840, 923, 945, 986, 996, 997, 1002, 1150, 1152, 1154, 1169, 1189, 1202], "python_basics_python_0193_whil": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1147, 1148, 1149, 1150, 1152, 1154, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1205], "python_exercises_herdt_greet": [17, 840, 1150, 1152, 1153, 1154, 1157, 1189], "greet": [17, 222, 233, 243, 246, 252, 258, 259, 268, 269, 271, 277, 278, 280, 283, 286, 301, 302, 394, 510, 840, 1066, 1067, 1074, 1084, 1150, 1152, 1154, 1157, 1189], "time": [17, 24, 26, 31, 41, 50, 64, 67, 76, 80, 89, 101, 102, 113, 115, 116, 120, 128, 133, 136, 148, 151, 153, 154, 161, 163, 173, 182, 189, 190, 191, 192, 194, 195, 197, 209, 210, 213, 221, 225, 227, 228, 229, 233, 239, 241, 243, 246, 248, 250, 251, 252, 258, 259, 261, 264, 265, 268, 269, 277, 278, 280, 283, 284, 286, 287, 301, 302, 305, 308, 309, 311, 314, 315, 317, 318, 319, 323, 326, 336, 339, 340, 343, 345, 350, 351, 356, 357, 363, 371, 376, 378, 380, 384, 405, 416, 432, 440, 454, 460, 463, 486, 488, 493, 494, 497, 498, 499, 500, 504, 507, 524, 526, 532, 535, 542, 543, 546, 552, 601, 631, 644, 651, 653, 693, 694, 749, 756, 770, 784, 792, 794, 805, 812, 816, 838, 840, 858, 860, 864, 865, 867, 879, 885, 887, 889, 902, 905, 908, 912, 918, 919, 920, 921, 927, 928, 932, 948, 980, 985, 986, 993, 994, 995, 1005, 1015, 1021, 1022, 1023, 1027, 1030, 1033, 1035, 1038, 1041, 1047, 1049, 1050, 1051, 1052, 1053, 1058, 1081, 1082, 1088, 1092, 1098, 1101, 1102, 1114, 1115, 1118, 1125, 1128, 1131, 1132, 1150, 1152, 1154, 1157, 1189, 1195, 1204, 1209, 1219, 1249, 1254, 1261], "dai": [17, 185, 191, 192, 194, 200, 203, 205, 208, 209, 213, 227, 233, 243, 246, 252, 254, 263, 268, 277, 278, 280, 283, 286, 301, 309, 313, 336, 404, 406, 407, 415, 505, 516, 517, 536, 542, 563, 840, 904, 944, 1010, 1049, 1120, 1129, 1150, 1152, 1154, 1157, 1189, 1190, 1197, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1265], "python_exercises_herdt_max_numb": [17, 840, 1150, 1152, 1153, 1154, 1155, 1157, 1189], "determin": [17, 93, 115, 138, 189, 212, 217, 219, 227, 228, 233, 235, 240, 246, 252, 256, 258, 259, 262, 268, 272, 278, 280, 283, 285, 286, 301, 308, 321, 322, 327, 328, 349, 350, 355, 356, 361, 362, 365, 366, 370, 373, 719, 754, 755, 792, 840, 895, 917, 937, 938, 939, 940, 941, 942, 943, 981, 985, 994, 1012, 1031, 1051, 1052, 1065, 1083, 1150, 1152, 1153, 1154, 1157, 1160, 1163, 1164, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1219], "maximum": [17, 222, 232, 233, 235, 237, 240, 242, 245, 246, 252, 256, 258, 259, 261, 262, 264, 268, 269, 271, 272, 274, 277, 278, 280, 281, 283, 285, 286, 301, 302, 308, 309, 321, 322, 323, 327, 328, 349, 350, 355, 356, 357, 361, 362, 363, 365, 366, 367, 394, 445, 738, 816, 840, 848, 925, 986, 1053, 1059, 1132, 1150, 1152, 1153, 1154, 1157, 1160, 1163, 1164, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1194, 1195, 1196, 1197, 1219], "two": [17, 20, 22, 23, 24, 26, 30, 32, 42, 53, 60, 76, 97, 124, 153, 154, 166, 168, 180, 182, 186, 189, 190, 191, 192, 209, 210, 211, 217, 221, 222, 227, 232, 233, 235, 237, 239, 240, 242, 245, 246, 248, 250, 251, 252, 256, 258, 259, 262, 264, 267, 268, 269, 271, 272, 277, 278, 280, 281, 283, 285, 286, 287, 299, 301, 302, 305, 307, 308, 309, 317, 319, 321, 322, 323, 327, 328, 329, 333, 336, 345, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 367, 371, 380, 384, 390, 398, 404, 407, 416, 427, 434, 464, 470, 472, 473, 476, 478, 479, 482, 483, 485, 487, 490, 492, 496, 501, 502, 504, 505, 506, 510, 517, 518, 522, 531, 534, 552, 554, 564, 568, 569, 588, 598, 600, 620, 628, 631, 637, 653, 657, 659, 676, 699, 742, 743, 744, 745, 746, 782, 788, 791, 792, 794, 801, 804, 806, 837, 839, 840, 885, 887, 890, 953, 955, 976, 986, 988, 993, 994, 995, 1012, 1015, 1016, 1023, 1035, 1036, 1044, 1049, 1058, 1063, 1074, 1084, 1092, 1098, 1101, 1104, 1109, 1112, 1119, 1122, 1125, 1136, 1138, 1140, 1147, 1150, 1152, 1153, 1154, 1157, 1159, 1160, 1163, 1164, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1186, 1189, 1190, 1196, 1198, 1204, 1212, 1225, 1231, 1241, 1253, 1261, 1262], "python_basics_python_0170_if": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1124, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1205], "statement": [17, 42, 81, 101, 102, 105, 109, 148, 209, 225, 227, 228, 233, 235, 240, 246, 249, 250, 252, 256, 259, 262, 268, 272, 278, 280, 283, 286, 292, 298, 301, 308, 311, 315, 317, 318, 321, 322, 327, 328, 333, 336, 339, 340, 343, 344, 349, 350, 355, 356, 361, 362, 365, 366, 384, 385, 386, 387, 388, 389, 398, 403, 419, 422, 426, 439, 452, 454, 455, 458, 459, 464, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 522, 697, 723, 725, 743, 744, 782, 837, 839, 840, 848, 920, 921, 961, 1050, 1071, 1072, 1086, 1089, 1091, 1092, 1097, 1101, 1103, 1113, 1120, 1123, 1125, 1132, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1197, 1201, 1205, 1207, 1218, 1221, 1224, 1228, 1260, 1261], "python_exercises_herdt_swap": [17, 840, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1189], "swap": [17, 168, 192, 227, 233, 243, 245, 252, 264, 267, 268, 280, 285, 286, 295, 304, 305, 325, 326, 367, 369, 472, 476, 479, 483, 492, 496, 501, 502, 620, 744, 782, 837, 839, 840, 873, 917, 929, 930, 985, 1120, 1150, 1152, 1153, 1154, 1155, 1157, 1189], "python_basics_python_0140_vari": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "python_basics_python_0150_datatypes_overview": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "datatyp": [17, 81, 221, 225, 228, 233, 234, 235, 238, 240, 244, 246, 247, 252, 256, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 278, 279, 280, 282, 283, 285, 288, 298, 300, 303, 310, 318, 320, 324, 330, 340, 342, 344, 346, 352, 358, 364, 368, 375, 378, 384, 385, 386, 387, 388, 389, 398, 403, 436, 443, 517, 518, 523, 526, 533, 648, 676, 745, 840, 1058, 1091, 1096, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218, 1261], "python_basics_python_0120_helloworld": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "hello": [17, 50, 81, 201, 222, 228, 232, 233, 235, 239, 243, 245, 246, 250, 252, 254, 256, 258, 259, 262, 264, 267, 268, 269, 271, 272, 278, 279, 280, 281, 283, 284, 286, 288, 301, 302, 308, 311, 319, 321, 322, 327, 328, 341, 349, 350, 351, 355, 356, 361, 362, 365, 366, 367, 384, 385, 386, 387, 388, 389, 393, 394, 398, 432, 435, 439, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 508, 509, 510, 511, 516, 518, 519, 525, 532, 534, 535, 537, 538, 539, 540, 649, 652, 721, 744, 750, 753, 770, 775, 776, 777, 778, 782, 837, 839, 840, 844, 847, 849, 852, 854, 857, 864, 868, 872, 878, 884, 889, 891, 896, 899, 902, 905, 908, 914, 915, 918, 919, 952, 954, 959, 960, 967, 985, 996, 1018, 1044, 1065, 1066, 1067, 1068, 1078, 1080, 1082, 1083, 1084, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1117, 1118, 1124, 1127, 1129, 1133, 1134, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1215, 1218, 1244], "world": [17, 69, 81, 122, 190, 195, 201, 219, 228, 232, 233, 235, 239, 246, 250, 252, 254, 256, 258, 259, 262, 264, 267, 268, 269, 271, 272, 278, 279, 280, 281, 283, 284, 286, 289, 301, 302, 308, 311, 321, 322, 327, 328, 341, 349, 350, 351, 355, 356, 361, 362, 365, 366, 367, 371, 384, 385, 386, 387, 388, 389, 393, 398, 430, 435, 439, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 518, 519, 532, 534, 537, 563, 568, 570, 741, 744, 782, 808, 816, 837, 839, 840, 844, 847, 849, 852, 854, 857, 864, 868, 872, 878, 884, 889, 891, 896, 899, 902, 905, 908, 926, 939, 951, 985, 1023, 1036, 1051, 1052, 1065, 1068, 1078, 1080, 1082, 1083, 1084, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1117, 1118, 1124, 1127, 1129, 1133, 1134, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1196, 1201, 1204, 1205, 1211, 1218, 1241, 1244, 1248], "python_exercises_legacy_python_0350_exercis": [17, 246, 840, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1189], "string": [17, 30, 38, 46, 81, 88, 97, 105, 109, 120, 121, 141, 144, 192, 216, 226, 227, 228, 230, 233, 234, 237, 240, 244, 246, 247, 249, 250, 252, 256, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 282, 283, 285, 288, 291, 293, 294, 296, 298, 300, 301, 303, 307, 308, 310, 311, 313, 321, 322, 324, 327, 328, 330, 339, 340, 342, 343, 344, 346, 349, 350, 352, 353, 354, 355, 356, 358, 361, 362, 364, 365, 366, 368, 373, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 394, 398, 403, 409, 421, 424, 428, 435, 444, 450, 459, 465, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 506, 508, 526, 545, 549, 551, 566, 568, 569, 570, 573, 575, 578, 579, 580, 582, 583, 584, 585, 601, 602, 603, 608, 619, 620, 628, 634, 637, 643, 645, 648, 649, 652, 666, 668, 685, 688, 689, 690, 694, 697, 698, 699, 700, 701, 702, 705, 709, 720, 722, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 744, 745, 746, 748, 750, 751, 755, 770, 774, 776, 777, 778, 779, 782, 784, 786, 787, 791, 801, 802, 803, 804, 806, 824, 831, 837, 838, 839, 840, 919, 1012, 1023, 1027, 1030, 1036, 1044, 1049, 1058, 1062, 1090, 1091, 1094, 1102, 1111, 1113, 1118, 1126, 1140, 1148, 1149, 1150, 1155, 1160, 1163, 1164, 1165, 1168, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1202, 1203, 1204, 1205, 1207, 1210, 1238, 1244, 1261], "right": [17, 22, 23, 24, 26, 30, 50, 71, 75, 120, 161, 173, 188, 189, 190, 192, 195, 209, 229, 240, 241, 246, 251, 256, 269, 271, 277, 281, 289, 302, 315, 323, 366, 373, 384, 390, 421, 441, 442, 443, 449, 460, 490, 507, 514, 532, 591, 599, 646, 660, 662, 663, 742, 754, 770, 796, 801, 806, 819, 840, 848, 867, 871, 887, 906, 930, 931, 933, 948, 1004, 1036, 1087, 1109, 1120, 1126, 1150, 1160, 1163, 1171, 1174, 1175, 1189], "justifi": [17, 209, 221, 246, 256, 277, 323, 421, 808, 840, 1114, 1150, 1160, 1163, 1171, 1174, 1175, 1189], "python_exercises_legacy_join_funct": [17, 246, 840, 1150, 1160, 1163, 1164, 1171, 1172, 1174, 1175, 1189], "join": [17, 23, 50, 201, 228, 246, 248, 249, 254, 256, 258, 261, 262, 264, 269, 273, 279, 287, 302, 309, 319, 323, 329, 345, 352, 357, 363, 368, 373, 383, 392, 506, 519, 619, 742, 803, 809, 814, 816, 840, 1034, 1039, 1062, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1189, 1224], "python_basics_python_0310_strings_format": [17, 81, 246, 840, 1113, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1189], "python_basics_python_0320_strings_method": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205], "method": [17, 30, 31, 42, 43, 45, 50, 60, 61, 64, 81, 88, 97, 98, 101, 102, 112, 115, 120, 126, 128, 132, 133, 195, 225, 226, 227, 228, 230, 233, 246, 247, 249, 251, 256, 259, 260, 262, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 283, 286, 288, 298, 301, 303, 307, 308, 311, 313, 315, 316, 317, 318, 321, 322, 324, 327, 328, 330, 333, 336, 339, 340, 342, 343, 344, 346, 349, 350, 352, 354, 355, 356, 358, 361, 362, 364, 365, 366, 368, 380, 384, 385, 386, 387, 388, 389, 398, 402, 403, 478, 504, 520, 544, 546, 548, 552, 562, 569, 570, 588, 590, 595, 600, 601, 602, 614, 620, 633, 635, 642, 643, 644, 647, 655, 669, 702, 712, 713, 714, 715, 718, 723, 724, 727, 730, 731, 734, 735, 736, 737, 738, 739, 742, 751, 764, 781, 782, 785, 789, 798, 806, 807, 815, 816, 823, 824, 830, 834, 835, 837, 838, 839, 840, 848, 850, 855, 856, 865, 867, 877, 889, 900, 1036, 1087, 1088, 1091, 1094, 1098, 1102, 1103, 1104, 1105, 1106, 1110, 1113, 1118, 1127, 1130, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1196, 1200, 1204, 1205, 1210, 1213, 1215, 1242, 1261], "python_basics_python_0300_str": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205], "python_exercises_legacy_max_numbers_funct": [17, 246, 840, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "python_exercises_legacy_for_prim": [17, 246, 840, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "prime": [17, 26, 208, 209, 228, 232, 233, 235, 240, 246, 252, 256, 268, 272, 275, 280, 286, 301, 308, 321, 322, 327, 328, 349, 350, 355, 356, 361, 362, 365, 366, 368, 482, 840, 1150, 1160, 1163, 1164, 1166, 1171, 1172, 1173, 1174, 1175, 1189], "python_exercises_legacy_max_numb": [17, 246, 840, 1150, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "python_exercises_legacy_while_prim": [17, 246, 840, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189], "python_basics_python_0225_rang": [17, 81, 246, 840, 1091, 1113, 1147, 1148, 1149, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1201], "rang": [17, 30, 50, 81, 99, 115, 116, 161, 163, 166, 197, 209, 210, 211, 216, 225, 228, 230, 233, 234, 237, 240, 242, 245, 246, 249, 256, 257, 259, 260, 262, 263, 264, 267, 268, 270, 272, 273, 276, 277, 282, 283, 285, 286, 288, 290, 292, 300, 301, 302, 308, 310, 311, 318, 319, 321, 322, 324, 327, 328, 330, 339, 341, 343, 344, 345, 349, 350, 351, 354, 355, 356, 358, 361, 362, 364, 365, 366, 368, 373, 379, 381, 390, 443, 470, 486, 488, 554, 588, 591, 592, 596, 620, 636, 637, 672, 674, 677, 680, 782, 834, 837, 839, 840, 851, 986, 993, 1044, 1050, 1053, 1086, 1089, 1091, 1096, 1098, 1100, 1102, 1112, 1113, 1121, 1125, 1142, 1147, 1148, 1149, 1150, 1160, 1162, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1201, 1204, 1212, 1214, 1240, 1241, 1261], "python_exercises_legacy_mixed_list_execut": [17, 246, 840, 1150, 1160, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "mix": [17, 228, 235, 246, 249, 256, 259, 262, 263, 267, 269, 272, 301, 308, 321, 322, 327, 328, 330, 349, 350, 355, 356, 361, 362, 365, 366, 416, 443, 482, 485, 486, 488, 490, 653, 840, 1118, 1121, 1137, 1140, 1150, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1190, 1204, 1209, 1215, 1253, 1262], "execut": [17, 32, 50, 99, 101, 102, 115, 148, 173, 190, 192, 200, 201, 209, 216, 221, 228, 235, 241, 246, 256, 258, 259, 262, 264, 272, 274, 277, 301, 308, 321, 322, 327, 328, 331, 332, 347, 348, 349, 350, 355, 356, 361, 362, 365, 366, 373, 374, 375, 376, 377, 378, 383, 384, 391, 398, 419, 420, 454, 456, 460, 482, 487, 491, 500, 511, 517, 523, 533, 536, 537, 544, 563, 566, 573, 580, 585, 599, 628, 652, 666, 770, 838, 840, 885, 887, 913, 914, 915, 923, 925, 930, 935, 936, 944, 948, 996, 1005, 1036, 1049, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1076, 1078, 1082, 1084, 1090, 1094, 1098, 1101, 1114, 1124, 1125, 1128, 1148, 1150, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1200, 1203, 1232, 1234, 1251, 1252, 1256], "python_exercises_legacy_distil": [17, 246, 840, 1150, 1160, 1163, 1174, 1189], "elimin": [17, 46, 246, 268, 275, 277, 278, 280, 286, 301, 308, 321, 327, 328, 349, 355, 356, 361, 362, 365, 366, 371, 569, 614, 742, 805, 824, 825, 840, 982, 1092, 1150, 1163, 1174, 1189], "empti": [17, 26, 30, 36, 38, 190, 193, 200, 207, 227, 229, 246, 258, 261, 268, 269, 275, 277, 278, 280, 281, 284, 286, 287, 290, 301, 302, 307, 308, 309, 319, 321, 323, 327, 328, 345, 349, 351, 355, 356, 357, 361, 362, 363, 365, 366, 393, 426, 478, 522, 524, 637, 646, 647, 651, 660, 662, 678, 679, 697, 715, 736, 742, 791, 801, 802, 814, 838, 840, 850, 887, 914, 915, 928, 932, 942, 980, 989, 1002, 1038, 1058, 1097, 1138, 1150, 1163, 1164, 1168, 1174, 1189], "comment": [17, 22, 23, 24, 26, 32, 110, 111, 192, 226, 246, 247, 249, 262, 268, 270, 274, 275, 278, 280, 285, 286, 301, 308, 310, 321, 327, 328, 349, 355, 356, 361, 362, 365, 366, 373, 398, 420, 465, 484, 537, 569, 570, 598, 725, 840, 994, 1135, 1150, 1163, 1174, 1189, 1204], "line": [17, 22, 23, 24, 26, 50, 53, 113, 121, 151, 168, 173, 188, 190, 192, 195, 208, 211, 212, 225, 229, 239, 241, 245, 246, 248, 249, 254, 255, 258, 259, 261, 262, 264, 265, 267, 268, 269, 272, 274, 275, 277, 278, 280, 281, 284, 286, 287, 289, 290, 301, 302, 307, 308, 309, 311, 315, 319, 321, 322, 323, 327, 328, 329, 341, 345, 349, 351, 355, 356, 357, 361, 362, 363, 365, 366, 367, 389, 398, 420, 426, 427, 435, 439, 442, 444, 450, 459, 461, 466, 472, 476, 479, 483, 488, 492, 495, 496, 498, 501, 502, 506, 531, 535, 537, 569, 570, 719, 722, 724, 726, 739, 744, 782, 837, 839, 840, 856, 860, 867, 869, 887, 914, 915, 918, 928, 930, 932, 954, 976, 978, 980, 981, 982, 986, 990, 993, 994, 995, 1039, 1049, 1081, 1087, 1088, 1089, 1092, 1093, 1094, 1102, 1103, 1109, 1110, 1117, 1131, 1132, 1134, 1136, 1138, 1140, 1141, 1142, 1148, 1150, 1163, 1169, 1174, 1188, 1189, 1191, 1194, 1199, 1204, 1212, 1213, 1225, 1260], "python_exercises_legacy_revert": [17, 246, 840, 1150, 1160, 1163, 1171, 1174, 1189], "revert": [17, 53, 132, 190, 246, 840, 865, 883, 1049, 1109, 1150, 1160, 1163, 1174, 1189], "python_basics_python_0500_fil": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1205], "python_exercises_legacy_passwd": [17, 840, 1150, 1163, 1174, 1189], "pars": [17, 151, 208, 245, 246, 256, 257, 259, 262, 268, 272, 277, 278, 280, 286, 289, 317, 322, 339, 343, 384, 389, 402, 526, 724, 739, 840, 1144, 1150, 1163, 1174, 1189, 1191, 1216], "passwd": [17, 91, 92, 115, 138, 151, 229, 239, 248, 261, 262, 264, 268, 269, 272, 277, 278, 280, 284, 286, 287, 295, 302, 304, 305, 309, 319, 323, 325, 326, 345, 351, 357, 363, 369, 370, 519, 520, 524, 724, 739, 838, 840, 917, 919, 923, 925, 928, 930, 932, 943, 962, 965, 967, 968, 970, 974, 976, 980, 982, 985, 986, 996, 997, 1005, 1006, 1010, 1011, 1016, 1022, 1044, 1058, 1087, 1089, 1136, 1140, 1150, 1163, 1174, 1189, 1219], "python_basics_python_0210_indexing_sl": [17, 81, 840, 1113, 1150, 1163, 1174, 1189, 1205, 1211], "slice": [17, 81, 210, 212, 221, 225, 226, 228, 230, 235, 238, 239, 242, 249, 261, 262, 264, 265, 268, 272, 273, 279, 280, 282, 283, 284, 286, 298, 301, 303, 308, 311, 318, 321, 322, 324, 327, 328, 330, 339, 340, 343, 344, 349, 350, 355, 356, 361, 362, 365, 366, 840, 885, 1050, 1113, 1126, 1130, 1150, 1163, 1174, 1189, 1205, 1209, 1211, 1213], "python_exercises_legacy_cmdline_digit": [17, 246, 398, 840, 1150, 1158, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189], "digit": [17, 208, 209, 228, 235, 240, 246, 256, 259, 268, 272, 277, 278, 280, 281, 283, 285, 286, 301, 308, 321, 322, 323, 327, 328, 340, 349, 350, 351, 355, 356, 361, 362, 365, 366, 367, 383, 403, 428, 437, 840, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189], "english": [17, 97, 205, 209, 228, 235, 246, 256, 259, 268, 272, 278, 280, 283, 285, 286, 301, 308, 313, 321, 322, 327, 328, 340, 349, 350, 355, 356, 361, 362, 365, 366, 396, 397, 398, 403, 517, 536, 840, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189, 1204, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "word": [17, 31, 190, 209, 217, 221, 225, 228, 235, 240, 246, 250, 256, 259, 267, 268, 272, 275, 277, 278, 280, 283, 285, 286, 293, 294, 296, 301, 308, 315, 321, 322, 323, 327, 328, 340, 349, 350, 353, 354, 355, 356, 361, 362, 365, 366, 372, 373, 379, 398, 403, 427, 480, 542, 547, 620, 719, 798, 807, 815, 839, 840, 928, 930, 978, 1052, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1176, 1189], "python_exercises_legacy_function_prim": [17, 246, 840, 1150, 1160, 1163, 1164, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "python_exercises_legacy_uniq_funct": [17, 246, 840, 1150, 1160, 1163, 1164, 1171, 1172, 1173, 1174, 1175, 1189], "uniq": [17, 208, 209, 226, 228, 240, 246, 256, 259, 262, 268, 272, 278, 280, 283, 301, 308, 321, 322, 327, 328, 344, 349, 350, 355, 356, 361, 362, 365, 366, 618, 840, 982, 1150, 1160, 1163, 1164, 1171, 1172, 1175, 1189], "python_basics_python_0150_datatypes_overview_compound": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1147, 1148, 1149, 1150, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "compound": [17, 81, 225, 228, 233, 234, 235, 244, 246, 252, 256, 257, 259, 260, 262, 263, 265, 266, 268, 270, 272, 273, 278, 279, 280, 282, 283, 285, 286, 288, 300, 301, 308, 311, 318, 320, 321, 322, 324, 327, 328, 330, 339, 340, 342, 343, 344, 346, 349, 350, 355, 356, 358, 361, 362, 364, 365, 366, 368, 384, 385, 386, 387, 388, 389, 398, 420, 451, 470, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1147, 1148, 1149, 1150, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "python_exercises_legacy_mixed_list_interact": [17, 246, 840, 1150, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1189], "interact": [17, 50, 76, 126, 128, 132, 137, 197, 228, 229, 235, 246, 256, 258, 259, 262, 264, 272, 274, 277, 282, 301, 302, 308, 321, 322, 327, 328, 330, 349, 350, 355, 356, 361, 362, 365, 366, 375, 378, 517, 523, 533, 840, 948, 997, 1002, 1005, 1015, 1080, 1115, 1150, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189, 1196, 1204], "interpret": [17, 50, 192, 209, 210, 221, 225, 228, 235, 246, 249, 256, 258, 259, 262, 264, 272, 274, 277, 281, 297, 298, 301, 307, 308, 321, 322, 323, 327, 328, 330, 339, 340, 344, 349, 350, 355, 356, 361, 362, 365, 366, 398, 482, 519, 539, 541, 548, 552, 562, 576, 590, 642, 840, 887, 972, 995, 1016, 1065, 1066, 1068, 1114, 1115, 1116, 1117, 1148, 1150, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1189, 1191, 1204, 1226, 1242, 1261], "python_exercises_legacy_uniq_gener": [17, 840, 1150, 1163, 1174, 1189], "python_advanced_python_1010_generators_yield": [17, 840, 1091, 1147, 1148, 1149, 1150, 1163, 1174, 1189, 1201], "python_exercises_legacy_wc": [17, 246, 840, 1150, 1160, 1163, 1171, 1174, 1175, 1189], "count": [17, 50, 78, 80, 113, 120, 190, 202, 242, 245, 246, 249, 254, 258, 261, 264, 269, 271, 274, 277, 281, 287, 290, 302, 308, 309, 323, 329, 341, 345, 351, 357, 363, 367, 426, 427, 428, 429, 442, 498, 574, 600, 628, 742, 792, 817, 840, 843, 846, 847, 848, 849, 851, 854, 857, 858, 864, 868, 878, 891, 896, 902, 905, 908, 918, 928, 948, 970, 982, 985, 1015, 1018, 1025, 1038, 1059, 1136, 1150, 1160, 1163, 1171, 1174, 1189, 1196, 1204, 1241], "charact": [17, 192, 207, 232, 237, 241, 246, 250, 254, 261, 267, 277, 284, 287, 305, 308, 323, 329, 345, 420, 421, 427, 435, 438, 444, 445, 450, 459, 466, 472, 476, 479, 482, 483, 487, 489, 492, 496, 501, 502, 706, 744, 782, 837, 838, 839, 840, 849, 854, 857, 864, 868, 878, 881, 889, 891, 896, 902, 903, 905, 908, 928, 930, 948, 970, 985, 993, 1050, 1101, 1120, 1134, 1135, 1136, 1140, 1142, 1150, 1153, 1160, 1163, 1171, 1174, 1189, 1204, 1231], "python_exercises_legacy_python_1011_generators_yield": [17, 840, 1150, 1163, 1189], "fibonacci": [17, 209, 212, 228, 249, 262, 301, 315, 317, 318, 322, 328, 339, 340, 343, 749, 771, 840, 1094, 1095, 1096, 1150, 1163, 1189], "python_exercises_legacy_dict_keyerror": [17, 840, 1150, 1159, 1163, 1189], "python_exercises_csv_csv_modul": [17, 840, 1148, 1149, 1150, 1189], "python_exercises_csv_csv_db": [17, 840, 1147, 1149, 1150, 1189], "sqlite3": [17, 76, 225, 256, 262, 268, 275, 375, 378, 379, 512, 517, 523, 533, 840, 1149, 1150, 1189, 1200, 1201, 1263], "python_db_sqlite3": [17, 840, 1147, 1149, 1150, 1189, 1201], "dbapi": [17, 225, 256, 268, 840, 1147, 1149, 1150, 1189, 1201], "2": [17, 20, 30, 38, 48, 50, 54, 63, 95, 97, 106, 113, 114, 116, 134, 152, 153, 154, 161, 166, 173, 188, 191, 193, 199, 200, 201, 206, 208, 209, 210, 211, 212, 223, 227, 233, 234, 237, 238, 242, 245, 248, 249, 253, 254, 255, 258, 263, 264, 269, 271, 274, 275, 277, 281, 284, 287, 289, 290, 299, 302, 306, 307, 309, 313, 319, 323, 329, 332, 334, 337, 341, 345, 348, 351, 357, 363, 367, 374, 377, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 407, 415, 427, 428, 440, 446, 447, 467, 471, 498, 504, 505, 506, 510, 513, 516, 517, 518, 519, 520, 522, 523, 524, 526, 531, 532, 533, 534, 537, 539, 540, 542, 564, 588, 589, 592, 598, 600, 601, 604, 608, 610, 611, 612, 613, 615, 616, 620, 635, 637, 644, 645, 646, 652, 654, 657, 659, 660, 661, 662, 663, 668, 673, 677, 681, 682, 683, 684, 685, 690, 694, 698, 699, 700, 701, 706, 716, 721, 742, 745, 746, 747, 749, 752, 755, 757, 759, 760, 762, 764, 767, 768, 770, 780, 781, 784, 785, 790, 791, 792, 794, 796, 797, 800, 801, 802, 803, 804, 805, 814, 816, 818, 819, 826, 831, 838, 840, 846, 887, 914, 915, 923, 926, 927, 930, 931, 932, 944, 967, 970, 974, 975, 980, 982, 984, 986, 990, 993, 994, 1006, 1009, 1011, 1012, 1013, 1015, 1016, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1029, 1030, 1031, 1044, 1046, 1049, 1051, 1053, 1064, 1065, 1068, 1081, 1083, 1085, 1086, 1088, 1089, 1094, 1096, 1098, 1102, 1106, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1119, 1122, 1123, 1124, 1126, 1131, 1132, 1137, 1142, 1145, 1147, 1148, 1149, 1150, 1152, 1156, 1159, 1169, 1173, 1176, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1189, 1191, 1194, 1195, 1196, 1201, 1208, 1209, 1210, 1212, 1213, 1214, 1219, 1224, 1225, 1226, 1230, 1231, 1242, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1264, 1265], "python_exercises_sensors_project_setup": [17, 840, 1150, 1177, 1178, 1179, 1189], "setup": [17, 97, 115, 128, 144, 151, 153, 172, 180, 216, 220, 221, 259, 261, 277, 284, 287, 289, 294, 296, 302, 305, 309, 319, 323, 345, 351, 357, 363, 395, 398, 403, 404, 488, 541, 555, 566, 568, 582, 596, 599, 601, 602, 735, 737, 840, 855, 881, 980, 985, 993, 994, 995, 1010, 1012, 1023, 1062, 1066, 1070, 1073, 1076, 1077, 1087, 1094, 1102, 1146, 1150, 1177, 1189, 1225, 1235, 1237], "python_exercises_sensors_sensor_const": [17, 840, 1150, 1177, 1178, 1179, 1189], "python_advanced_oo_method": [17, 840, 1091, 1105, 1150, 1177, 1178, 1179, 1189], "python_misc_encod": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205], "encod": [17, 31, 81, 208, 225, 226, 228, 230, 246, 249, 256, 258, 261, 264, 265, 268, 274, 275, 277, 283, 285, 288, 302, 306, 307, 309, 322, 323, 330, 340, 341, 343, 344, 346, 351, 357, 363, 383, 384, 385, 386, 387, 388, 389, 403, 506, 520, 840, 1091, 1113, 1121, 1126, 1140, 1148, 1149, 1150, 1160, 1163, 1171, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1199, 1205, 1207, 1261], "python_misc_vscod": [17, 840, 1189, 1205], "visual": [17, 69, 95, 138, 216, 221, 225, 226, 228, 230, 241, 250, 251, 256, 259, 272, 278, 286, 289, 301, 305, 308, 311, 315, 321, 322, 327, 328, 349, 350, 355, 356, 361, 365, 366, 398, 403, 417, 840, 927, 994, 1067, 1114, 1148, 1189, 1205], "studio": [17, 95, 138, 216, 221, 225, 226, 228, 230, 241, 250, 251, 256, 259, 272, 278, 286, 301, 305, 308, 311, 315, 321, 322, 327, 328, 349, 350, 355, 356, 361, 365, 366, 398, 403, 417, 840, 927, 1114, 1189, 1205], "python_misc_import": [17, 840, 1144, 1189, 1192, 1193, 1197, 1205, 1207, 1218, 1221, 1228], "incomplet": [17, 105, 108, 219, 258, 264, 274, 277, 281, 509, 642, 716, 824, 840, 992, 1144, 1189, 1192, 1193, 1197, 1205, 1207, 1218, 1221, 1228], "python_misc_mqtt": [17, 840, 1189, 1205, 1207], "python_swdev_venv": [17, 840, 1144, 1189, 1192, 1193, 1197, 1205, 1207, 1218, 1228], "python_misc_pandas_loc": [17, 840, 1189, 1205, 1211], "select": [17, 50, 189, 190, 192, 196, 248, 253, 261, 278, 308, 311, 340, 361, 365, 366, 443, 465, 840, 887, 932, 990, 995, 1029, 1030, 1051, 1054, 1056, 1059, 1080, 1148, 1189, 1194, 1203, 1205, 1211, 1213, 1224, 1232, 1253, 1255], "row": [17, 191, 212, 228, 248, 261, 265, 267, 269, 281, 306, 307, 308, 311, 315, 328, 340, 341, 345, 351, 361, 363, 365, 366, 453, 495, 840, 928, 1036, 1089, 1108, 1128, 1148, 1180, 1182, 1189, 1196, 1199, 1203, 1205, 1209, 1210, 1211, 1215], "column": [17, 50, 105, 109, 112, 192, 195, 209, 212, 258, 277, 306, 307, 308, 309, 311, 315, 340, 341, 345, 351, 361, 363, 365, 366, 495, 506, 840, 928, 933, 944, 1148, 1160, 1172, 1189, 1196, 1199, 1205, 1211], "With": [17, 56, 103, 104, 106, 107, 114, 133, 180, 191, 197, 216, 277, 286, 305, 307, 308, 311, 316, 323, 331, 333, 336, 340, 344, 347, 361, 365, 366, 373, 379, 415, 455, 484, 500, 516, 532, 541, 550, 562, 576, 590, 642, 751, 782, 824, 839, 840, 841, 887, 916, 917, 985, 992, 993, 1024, 1026, 1045, 1063, 1066, 1078, 1109, 1189, 1205, 1209, 1211, 1213, 1220, 1241, 1242, 1243, 1249, 1256, 1259, 1261], "loc": [17, 209, 302, 306, 307, 308, 309, 311, 313, 315, 340, 361, 365, 366, 481, 840, 1036, 1100, 1189, 1205, 1208, 1209, 1210, 1211, 1212], "python_misc_pandas_index": [17, 840, 1189, 1205, 1211], "python_misc_pandas_iloc": [17, 840, 1189, 1205, 1211], "iloc": [17, 308, 309, 311, 313, 315, 340, 345, 361, 365, 366, 506, 840, 1189, 1205, 1209, 1211, 1214], "python_misc_pandas_bas": [17, 840, 1189, 1205, 1211], "datafram": [17, 307, 308, 309, 311, 315, 318, 340, 345, 361, 365, 366, 506, 840, 1189, 1194, 1197, 1205, 1208, 1210, 1211, 1212, 1214, 1215], "python_misc_pandas_mod_col": [17, 840, 1189, 1205, 1211], "ad": [17, 20, 21, 27, 76, 116, 120, 133, 196, 200, 201, 202, 209, 229, 241, 251, 307, 308, 311, 315, 340, 361, 365, 366, 375, 378, 395, 445, 464, 486, 515, 517, 523, 533, 538, 543, 547, 552, 660, 662, 663, 698, 753, 789, 829, 830, 840, 856, 993, 995, 1047, 1051, 1052, 1088, 1106, 1121, 1140, 1189, 1205, 1211, 1212, 1216, 1225], "modifi": [17, 30, 66, 79, 101, 102, 116, 120, 131, 133, 166, 192, 197, 207, 209, 229, 248, 305, 307, 308, 311, 315, 316, 317, 318, 339, 340, 361, 365, 366, 373, 380, 409, 423, 425, 431, 468, 480, 487, 504, 506, 511, 522, 539, 547, 549, 552, 568, 569, 589, 598, 601, 602, 604, 605, 606, 618, 631, 634, 644, 651, 656, 659, 671, 723, 725, 728, 730, 733, 736, 750, 764, 787, 792, 804, 815, 817, 834, 835, 838, 839, 840, 860, 875, 895, 914, 915, 928, 933, 985, 998, 1002, 1007, 1026, 1036, 1042, 1081, 1082, 1088, 1090, 1101, 1122, 1166, 1170, 1188, 1189, 1205, 1211, 1213, 1254], "python_misc_pandas_add_row": [17, 840, 1189, 1205, 1211], "python_misc_pandas_filt": [17, 840, 1189, 1205, 1211], "filter": [17, 97, 100, 115, 206, 209, 242, 249, 262, 279, 302, 308, 311, 315, 316, 323, 340, 342, 345, 352, 357, 361, 365, 366, 520, 590, 607, 642, 800, 801, 840, 912, 932, 982, 1189, 1205, 1211, 1214, 1231], "python_misc_ai_k_mean": [17, 840, 1189, 1192, 1193, 1205], "k": [17, 192, 210, 212, 222, 225, 237, 239, 242, 245, 249, 250, 261, 264, 269, 271, 274, 277, 284, 287, 299, 302, 308, 309, 319, 329, 339, 341, 343, 345, 351, 357, 363, 367, 399, 400, 418, 566, 698, 742, 804, 823, 840, 948, 996, 1033, 1189, 1192, 1198, 1205, 1224], "mean": [17, 64, 65, 101, 102, 115, 120, 190, 192, 195, 197, 210, 212, 213, 225, 245, 248, 249, 262, 264, 277, 281, 308, 323, 331, 339, 343, 347, 379, 383, 384, 420, 441, 442, 443, 465, 484, 489, 494, 524, 568, 646, 656, 657, 723, 770, 792, 796, 804, 805, 840, 846, 862, 923, 930, 933, 935, 936, 944, 986, 993, 994, 995, 1022, 1029, 1047, 1051, 1053, 1082, 1085, 1094, 1109, 1117, 1120, 1134, 1135, 1140, 1169, 1189, 1192, 1196, 1198, 1199, 1205, 1210, 1231, 1245, 1246, 1249, 1256], "python_misc_ai_machine_learning_intro": [17, 840, 1189, 1192, 1193, 1197, 1198, 1205], "concept": [17, 69, 88, 89, 90, 114, 115, 151, 152, 190, 200, 213, 225, 227, 229, 231, 241, 292, 295, 304, 305, 308, 325, 339, 343, 369, 380, 400, 401, 416, 418, 465, 488, 526, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 683, 741, 782, 792, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 927, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1030, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1120, 1128, 1138, 1189, 1192, 1193, 1197, 1204, 1205, 1207, 1245, 1248, 1250, 1252, 1253], "terminologi": [17, 89, 90, 115, 137, 152, 196, 213, 225, 260, 295, 304, 305, 308, 325, 339, 343, 369, 371, 455, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 656, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1049, 1050, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1189, 1192, 1193, 1197, 1205, 1259], "python_misc_ai_linear_regress": [17, 840, 1189, 1192, 1193, 1197, 1205], "linear": [17, 210, 212, 222, 225, 227, 245, 253, 308, 339, 343, 473, 495, 666, 792, 840, 924, 994, 1062, 1125, 1189, 1192, 1193, 1198, 1205], "regress": [17, 225, 277, 308, 339, 343, 840, 1189, 1192, 1193, 1198, 1205], "python_advanced_comprehens": [17, 840, 1091, 1189], "comprehens": [17, 50, 59, 209, 210, 222, 225, 228, 234, 248, 249, 250, 257, 262, 263, 265, 266, 267, 270, 273, 279, 282, 298, 301, 303, 310, 315, 321, 322, 327, 328, 339, 340, 342, 343, 344, 349, 350, 352, 355, 356, 358, 361, 362, 364, 365, 366, 787, 840, 858, 875, 883, 1091, 1096, 1189, 1210, 1260], "python_advanced_decor": [17, 840, 1091, 1189], "decor": [17, 49, 51, 209, 221, 224, 225, 240, 249, 265, 275, 289, 344, 541, 548, 562, 576, 590, 642, 840, 1087, 1091, 1102, 1109, 1110, 1112, 1133, 1189, 1191, 1224, 1242, 1260], "python_advanced_closur": [17, 840, 1091, 1189], "closur": [17, 49, 50, 51, 208, 221, 225, 233, 234, 249, 262, 265, 275, 308, 311, 340, 344, 786, 840, 1088, 1091, 1131, 1133, 1189, 1260], "python_advanced_stararg": [17, 840, 1091, 1189], "keyword": [17, 27, 50, 172, 187, 222, 225, 226, 227, 228, 230, 249, 251, 265, 270, 275, 277, 298, 301, 302, 308, 311, 315, 317, 318, 321, 323, 327, 333, 336, 339, 340, 343, 344, 380, 398, 464, 494, 524, 656, 657, 659, 677, 729, 789, 840, 1040, 1087, 1088, 1089, 1091, 1115, 1131, 1133, 1146, 1189, 1202, 1238, 1240], "python_advanced_except": [17, 840, 1091, 1189], "python_advanced_oo_inherit": [17, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1189, 1218], "inherit": [17, 60, 64, 97, 133, 206, 216, 225, 249, 262, 279, 281, 314, 315, 316, 317, 318, 322, 339, 340, 343, 344, 354, 362, 407, 522, 526, 530, 548, 562, 590, 598, 600, 640, 642, 643, 666, 715, 718, 739, 781, 824, 831, 839, 840, 879, 919, 923, 926, 947, 949, 1059, 1089, 1091, 1099, 1100, 1101, 1102, 1105, 1107, 1110, 1189, 1218, 1248, 1260], "python_advanced_context_mgr": [17, 840, 1091, 1189], "python_advanced_iteration_gener": [17, 840, 1091, 1189], "python_advanced_oo_classes_and_dict": [17, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1150, 1177, 1178, 1179, 1184, 1186, 1189, 1218], "python_basics_python_0200_sequential_typ": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1147, 1148, 1149, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211], "sequenti": [17, 50, 81, 97, 99, 146, 225, 226, 228, 230, 233, 234, 235, 238, 246, 251, 256, 259, 262, 267, 268, 270, 272, 280, 282, 283, 286, 290, 298, 301, 308, 311, 314, 316, 318, 319, 321, 322, 327, 328, 339, 340, 343, 344, 349, 350, 352, 354, 355, 356, 361, 362, 365, 366, 368, 384, 385, 386, 387, 388, 389, 398, 403, 495, 590, 603, 607, 642, 676, 686, 694, 705, 709, 739, 840, 993, 995, 1025, 1091, 1096, 1113, 1147, 1148, 1149, 1150, 1160, 1163, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1261], "python_advanced_exec": [17, 840, 1091, 1189], "python_advanced_oo_abc": [17, 840, 1091, 1105, 1189], "abstract": [17, 56, 69, 75, 225, 265, 297, 314, 315, 316, 317, 318, 339, 340, 343, 344, 362, 372, 380, 402, 465, 504, 506, 541, 548, 552, 554, 556, 562, 564, 576, 590, 600, 642, 676, 715, 716, 794, 827, 840, 920, 921, 925, 995, 1010, 1091, 1105, 1189, 1242, 1249, 1251, 1255], "abc": [17, 20, 208, 222, 225, 227, 232, 237, 239, 245, 248, 250, 254, 258, 261, 264, 265, 269, 271, 274, 277, 281, 284, 287, 290, 298, 299, 302, 309, 315, 317, 318, 319, 323, 329, 333, 336, 339, 340, 341, 343, 344, 345, 351, 357, 362, 363, 367, 385, 393, 506, 600, 668, 689, 706, 708, 827, 840, 1091, 1105, 1121, 1189, 1213], "duck": [17, 20, 145, 224, 225, 279, 298, 315, 317, 318, 322, 339, 340, 343, 344, 354, 362, 372, 373, 379, 381, 541, 600, 742, 744, 782, 790, 791, 796, 802, 824, 829, 837, 839, 840, 1091, 1098, 1105, 1189, 1191, 1196, 1241, 1260], "type": [17, 38, 69, 74, 91, 101, 102, 133, 145, 173, 184, 188, 189, 190, 193, 195, 197, 208, 209, 212, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239, 241, 242, 245, 248, 249, 250, 253, 254, 258, 263, 266, 267, 269, 271, 276, 279, 281, 285, 287, 289, 290, 292, 300, 302, 305, 306, 309, 317, 318, 319, 322, 323, 329, 334, 338, 339, 340, 342, 343, 344, 345, 350, 351, 354, 357, 362, 364, 367, 370, 373, 379, 380, 381, 390, 391, 392, 393, 398, 400, 401, 409, 430, 441, 442, 449, 454, 459, 460, 464, 466, 470, 472, 473, 476, 479, 480, 481, 482, 483, 486, 488, 489, 491, 492, 496, 501, 502, 506, 507, 518, 519, 522, 524, 530, 542, 544, 553, 556, 564, 570, 600, 604, 625, 634, 644, 646, 652, 653, 656, 658, 659, 669, 677, 706, 712, 716, 719, 721, 723, 725, 726, 732, 744, 745, 750, 755, 756, 764, 770, 781, 782, 784, 789, 790, 791, 792, 801, 802, 804, 805, 806, 811, 822, 823, 825, 829, 830, 833, 835, 836, 837, 838, 839, 840, 843, 846, 848, 853, 856, 875, 887, 913, 917, 930, 933, 945, 948, 951, 962, 964, 965, 968, 977, 985, 986, 988, 993, 997, 1002, 1011, 1012, 1015, 1018, 1019, 1020, 1021, 1022, 1034, 1046, 1055, 1058, 1062, 1063, 1065, 1083, 1085, 1088, 1091, 1094, 1098, 1103, 1104, 1105, 1112, 1116, 1118, 1120, 1121, 1122, 1126, 1128, 1129, 1130, 1135, 1136, 1138, 1140, 1142, 1156, 1167, 1168, 1186, 1189, 1191, 1196, 1200, 1204, 1209, 1210, 1212, 1219, 1224, 1226, 1241, 1243, 1250, 1254, 1261, 1265], "python_advanced_oo_properti": [17, 840, 1091, 1105, 1189], "properti": [17, 28, 209, 225, 249, 262, 279, 281, 298, 302, 315, 317, 318, 322, 332, 333, 336, 339, 340, 343, 344, 348, 356, 362, 366, 374, 375, 376, 377, 402, 507, 513, 516, 517, 523, 524, 532, 533, 537, 539, 840, 1091, 1105, 1189, 1230, 1233, 1254], "python_advanced_oo_constructor": [17, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1189, 1218], "constructor": [17, 31, 41, 44, 61, 88, 101, 102, 110, 115, 120, 123, 126, 128, 132, 133, 216, 222, 228, 248, 249, 251, 262, 267, 275, 279, 298, 301, 303, 308, 311, 314, 315, 316, 317, 318, 319, 321, 322, 327, 333, 336, 339, 340, 343, 344, 349, 354, 355, 356, 361, 362, 365, 366, 379, 380, 400, 401, 402, 474, 548, 562, 588, 590, 593, 596, 600, 601, 620, 629, 635, 642, 643, 644, 650, 666, 697, 713, 714, 721, 723, 725, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 742, 750, 751, 752, 754, 780, 782, 798, 801, 802, 803, 807, 812, 813, 814, 815, 816, 824, 837, 839, 840, 846, 848, 879, 1036, 1091, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1121, 1189, 1218, 1224, 1236, 1241], "python_advanced_oo_operator_overload": [17, 840, 1091, 1105, 1189], "oper": [17, 21, 22, 23, 26, 64, 69, 71, 88, 99, 128, 132, 163, 189, 190, 192, 196, 207, 208, 210, 213, 216, 221, 225, 226, 227, 228, 230, 234, 239, 242, 247, 248, 249, 250, 251, 256, 258, 262, 263, 266, 269, 271, 272, 276, 279, 282, 285, 287, 290, 292, 302, 309, 314, 315, 316, 317, 318, 319, 322, 323, 339, 343, 344, 346, 351, 357, 362, 363, 371, 379, 380, 384, 398, 403, 420, 428, 438, 444, 459, 464, 465, 466, 470, 472, 473, 476, 479, 481, 483, 485, 488, 492, 494, 496, 501, 502, 524, 526, 544, 545, 564, 584, 590, 602, 637, 642, 643, 644, 649, 650, 654, 656, 660, 661, 662, 663, 664, 668, 676, 684, 685, 697, 700, 739, 742, 744, 750, 752, 753, 755, 759, 764, 766, 767, 768, 770, 773, 777, 780, 782, 784, 785, 786, 787, 792, 794, 801, 802, 805, 812, 816, 819, 828, 829, 830, 831, 837, 838, 839, 840, 849, 854, 857, 858, 864, 868, 878, 887, 889, 891, 896, 902, 903, 905, 908, 914, 915, 918, 948, 954, 980, 981, 985, 993, 994, 995, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1027, 1030, 1036, 1038, 1058, 1062, 1066, 1080, 1083, 1091, 1094, 1101, 1102, 1105, 1122, 1126, 1130, 1135, 1136, 1141, 1156, 1189, 1191, 1200, 1209, 1231, 1236, 1240, 1248, 1249, 1250, 1251, 1254, 1260], "overload": [17, 88, 133, 208, 216, 225, 251, 279, 314, 315, 316, 317, 318, 339, 343, 344, 346, 353, 362, 379, 380, 490, 590, 598, 642, 644, 664, 668, 676, 697, 721, 723, 724, 727, 728, 730, 731, 732, 734, 735, 736, 737, 738, 739, 750, 751, 755, 782, 798, 807, 815, 837, 839, 840, 846, 1091, 1105, 1189, 1210, 1240], "python_advanced_oo_str_repr": [17, 840, 1091, 1105, 1189], "str": [17, 173, 208, 211, 222, 232, 237, 239, 240, 245, 248, 250, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 298, 299, 301, 302, 306, 307, 308, 309, 311, 313, 315, 317, 318, 319, 321, 322, 323, 327, 329, 333, 334, 336, 337, 339, 340, 341, 343, 344, 345, 349, 351, 355, 356, 357, 361, 362, 363, 365, 367, 383, 389, 392, 393, 394, 398, 470, 488, 506, 519, 575, 580, 660, 661, 662, 663, 779, 791, 831, 840, 1089, 1091, 1103, 1105, 1106, 1109, 1118, 1120, 1121, 1132, 1136, 1140, 1148, 1156, 1158, 1189, 1204, 1210, 1215, 1216], "repr": [17, 239, 258, 264, 274, 277, 281, 284, 287, 298, 301, 302, 308, 311, 315, 317, 318, 321, 322, 323, 327, 333, 334, 336, 339, 340, 343, 344, 349, 355, 361, 362, 365, 840, 1089, 1091, 1105, 1106, 1189], "python_advanced_multithreading_bas": [17, 840, 1091, 1098, 1099, 1100, 1101, 1189], "python_advanced_multithreading_exam_quest": [17, 840, 1091, 1099, 1101, 1189], "exam": [17, 87, 88, 97, 167, 250, 266, 295, 304, 325, 369, 400, 412, 840, 917, 985, 1026, 1048, 1091, 1099, 1189], "python_advanced_multithreading_mutex": [17, 840, 1091, 1099, 1100, 1101, 1189], "race": [17, 63, 64, 65, 69, 78, 190, 207, 267, 293, 294, 296, 305, 316, 317, 318, 339, 340, 343, 353, 372, 406, 407, 413, 481, 491, 620, 792, 808, 815, 839, 840, 864, 868, 889, 891, 896, 900, 902, 905, 908, 985, 1015, 1025, 1026, 1033, 1041, 1042, 1048, 1091, 1099, 1101, 1189, 1249, 1253], "condit": [17, 63, 64, 65, 69, 78, 80, 132, 190, 201, 207, 248, 267, 287, 293, 294, 296, 305, 316, 317, 318, 339, 340, 343, 353, 372, 375, 378, 406, 407, 413, 420, 422, 426, 449, 450, 452, 453, 455, 457, 459, 466, 472, 476, 479, 481, 483, 491, 492, 496, 501, 502, 508, 509, 510, 517, 519, 523, 526, 533, 535, 620, 637, 725, 726, 744, 782, 792, 802, 808, 815, 816, 819, 837, 839, 840, 864, 868, 889, 891, 896, 900, 902, 904, 905, 908, 985, 1015, 1021, 1025, 1026, 1033, 1041, 1042, 1044, 1048, 1091, 1099, 1101, 1124, 1125, 1140, 1189, 1195, 1210, 1244, 1249, 1253, 1254, 1261], "mutex": [17, 63, 64, 65, 67, 69, 78, 80, 207, 236, 267, 292, 293, 294, 296, 305, 316, 317, 318, 339, 340, 343, 353, 372, 373, 381, 406, 407, 413, 620, 809, 811, 813, 814, 815, 839, 840, 864, 868, 885, 889, 890, 891, 896, 902, 905, 906, 908, 985, 1026, 1033, 1038, 1041, 1042, 1091, 1099, 1101, 1189, 1241, 1249, 1254], "python_db_postgr": [17, 840, 1189, 1201], "postgresql": [17, 840, 1189, 1200, 1201], "python_db_dbapi2": [17, 840, 1147, 1149, 1150, 1189, 1201], "python_basics_python_0130_syntax_etc": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "syntax": [17, 59, 81, 212, 221, 228, 229, 231, 233, 234, 235, 240, 246, 247, 252, 256, 259, 262, 268, 272, 274, 278, 279, 280, 283, 286, 288, 299, 301, 308, 310, 311, 321, 322, 324, 327, 328, 349, 350, 352, 353, 355, 356, 361, 362, 364, 365, 366, 372, 373, 379, 384, 385, 386, 387, 388, 389, 398, 526, 564, 643, 644, 747, 764, 791, 804, 840, 977, 1086, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1115, 1124, 1132, 1133, 1135, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218, 1241, 1261], "python_basics_python_0125_run": [17, 81, 246, 398, 840, 1113, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "run": [17, 30, 49, 50, 51, 53, 81, 88, 99, 101, 102, 128, 141, 148, 166, 173, 182, 189, 190, 191, 192, 193, 196, 197, 200, 201, 208, 220, 221, 228, 229, 241, 246, 250, 251, 256, 261, 269, 277, 278, 281, 284, 287, 289, 294, 301, 302, 305, 308, 309, 311, 319, 321, 322, 323, 327, 328, 332, 341, 345, 348, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 373, 374, 375, 377, 378, 380, 383, 398, 401, 422, 440, 482, 485, 493, 494, 498, 499, 517, 523, 524, 526, 533, 537, 544, 549, 568, 569, 570, 598, 600, 601, 602, 624, 651, 663, 672, 684, 742, 800, 801, 838, 840, 860, 875, 885, 887, 888, 897, 920, 921, 923, 925, 926, 927, 928, 944, 945, 948, 949, 980, 993, 994, 995, 996, 1004, 1006, 1014, 1016, 1034, 1047, 1049, 1050, 1051, 1053, 1058, 1063, 1065, 1068, 1071, 1072, 1074, 1076, 1078, 1082, 1087, 1098, 1101, 1113, 1114, 1116, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1193, 1207, 1219, 1225, 1230, 1231, 1236, 1249, 1255, 1261], "python_basics_python_0460_set": [17, 81, 840, 1113, 1189], "python_basics_python_0250_refs_flat_deep_copi": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1113, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205], "mutabl": [17, 81, 221, 225, 226, 228, 230, 233, 234, 240, 246, 247, 256, 259, 260, 262, 263, 264, 265, 270, 272, 273, 276, 279, 283, 285, 286, 288, 291, 301, 303, 308, 310, 311, 315, 317, 318, 320, 321, 322, 324, 327, 328, 330, 339, 340, 342, 343, 344, 346, 349, 352, 355, 356, 361, 362, 364, 365, 366, 368, 373, 384, 385, 386, 387, 388, 389, 398, 792, 840, 1091, 1113, 1122, 1126, 1148, 1149, 1150, 1160, 1163, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1204, 1205, 1261], "python_basics_python_0400_list": [17, 81, 840, 1113, 1189], "python_basics_python_0110_blahblah": [17, 81, 246, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "blahblah": [17, 81, 228, 233, 235, 246, 252, 256, 259, 262, 268, 272, 278, 279, 280, 282, 283, 285, 286, 288, 301, 308, 311, 321, 322, 327, 328, 349, 350, 352, 355, 356, 357, 361, 362, 365, 366, 384, 385, 386, 387, 388, 389, 398, 840, 1091, 1098, 1099, 1100, 1101, 1105, 1113, 1124, 1133, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1201, 1204, 1205, 1211, 1218], "python_basics_python_1000_function_object": [17, 81, 840, 1113, 1189], "python_basics_instal": [17, 81, 840, 1113, 1189], "python_swdev_unittest": [17, 840, 1189, 1218], "unittest": [17, 115, 185, 203, 205, 216, 218, 221, 224, 225, 235, 238, 249, 251, 256, 298, 307, 318, 372, 373, 380, 388, 398, 406, 407, 416, 838, 840, 1132, 1189, 1191, 1218, 1229, 1238, 1239, 1240, 1241, 1242, 1243, 1257, 1264], "python_swdev_pip": [17, 840, 1144, 1189, 1192, 1193, 1197, 1205, 1207, 1218, 1221, 1228], "python_swdev_pytest_intro": [17, 840, 1189, 1218, 1223], "introduct": [17, 63, 64, 65, 69, 88, 89, 90, 97, 115, 133, 137, 151, 152, 168, 185, 203, 205, 229, 231, 250, 251, 265, 267, 275, 278, 286, 289, 295, 297, 298, 304, 305, 307, 314, 317, 318, 322, 325, 333, 336, 339, 340, 343, 366, 369, 375, 378, 379, 380, 381, 397, 402, 406, 415, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 513, 517, 523, 533, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 744, 751, 763, 770, 782, 798, 807, 815, 824, 837, 839, 840, 889, 910, 914, 915, 916, 917, 920, 921, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 984, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1029, 1032, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1187, 1188, 1189, 1198, 1218, 1223, 1239, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1257, 1261, 1264], "By": [17, 39, 41, 143, 144, 151, 190, 192, 197, 201, 216, 222, 258, 264, 265, 267, 274, 275, 277, 278, 282, 286, 289, 293, 294, 296, 298, 307, 315, 317, 318, 322, 333, 336, 339, 340, 343, 353, 354, 366, 371, 372, 406, 437, 464, 487, 490, 727, 728, 730, 731, 734, 736, 738, 739, 782, 783, 837, 839, 840, 856, 930, 980, 993, 1029, 1050, 1066, 1068, 1078, 1102, 1109, 1187, 1188, 1189, 1198, 1218, 1223, 1250], "python_drafts_matplotlib": [17, 840, 1144, 1189], "matplotlib": [17, 221, 240, 259, 260, 272, 286, 287, 289, 291, 322, 341, 346, 350, 352, 363, 407, 840, 1086, 1144, 1189, 1191, 1197], "python_drafts_setuptool": [17, 840, 1144, 1189], "setuptool": [17, 48, 298, 333, 343, 840, 1144, 1189, 1226, 1264], "python_drafts_argpars": [17, 840, 1144, 1189], "argpars": [17, 265, 286, 317, 339, 343, 384, 840, 1144, 1189], "python_drafts_asyncio": [17, 840, 1144, 1189], "asyncio": [17, 56, 221, 225, 275, 316, 344, 770, 840, 1144, 1189, 1191], "As": [18, 34, 59, 71, 115, 190, 192, 197, 201, 206, 218, 221, 225, 256, 269, 331, 347, 380, 401, 417, 455, 486, 489, 585, 587, 601, 652, 654, 656, 658, 659, 737, 821, 860, 887, 913, 923, 993, 994, 1002, 1004, 1021, 1051, 1059, 1082, 1088, 1109, 1114, 1118, 1176, 1180, 1193, 1234, 1248, 1256], "follow": [18, 27, 31, 69, 97, 98, 100, 105, 108, 109, 110, 111, 112, 118, 121, 138, 141, 148, 161, 166, 182, 188, 189, 190, 192, 193, 194, 195, 197, 209, 213, 217, 218, 221, 225, 229, 230, 241, 258, 264, 274, 275, 277, 281, 290, 294, 296, 313, 314, 316, 322, 323, 380, 381, 395, 418, 421, 438, 439, 452, 455, 482, 484, 486, 488, 493, 494, 497, 505, 519, 524, 534, 537, 542, 543, 546, 547, 563, 564, 566, 567, 568, 569, 570, 588, 591, 592, 595, 596, 598, 599, 600, 601, 602, 614, 620, 646, 660, 661, 662, 663, 716, 723, 725, 726, 731, 733, 734, 737, 738, 741, 759, 792, 834, 835, 838, 848, 850, 856, 887, 913, 914, 915, 920, 921, 923, 925, 927, 939, 941, 942, 948, 952, 960, 961, 986, 993, 994, 995, 1016, 1019, 1020, 1021, 1022, 1033, 1050, 1059, 1063, 1065, 1071, 1072, 1074, 1076, 1078, 1080, 1081, 1082, 1085, 1089, 1090, 1094, 1101, 1120, 1134, 1142, 1148, 1151, 1156, 1160, 1162, 1166, 1169, 1170, 1173, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1213, 1217, 1226, 1242], "version": [18, 48, 106, 114, 188, 189, 193, 195, 196, 197, 200, 217, 218, 219, 221, 228, 237, 239, 248, 249, 258, 262, 264, 268, 274, 277, 284, 289, 292, 301, 307, 313, 314, 315, 316, 323, 356, 373, 374, 377, 379, 391, 406, 465, 504, 505, 511, 513, 514, 516, 524, 526, 532, 534, 539, 637, 734, 736, 737, 784, 788, 800, 819, 824, 835, 860, 862, 879, 887, 888, 903, 948, 993, 994, 1066, 1067, 1068, 1078, 1080, 1081, 1083, 1114, 1115, 1121, 1146, 1219, 1226, 1227, 1233], "control": [18, 33, 49, 50, 51, 77, 116, 118, 124, 125, 132, 133, 153, 154, 161, 166, 188, 189, 196, 207, 218, 221, 226, 228, 229, 230, 231, 240, 241, 256, 259, 272, 277, 283, 297, 354, 374, 377, 399, 400, 401, 403, 406, 443, 457, 458, 504, 534, 541, 548, 591, 592, 595, 601, 643, 840, 860, 885, 887, 892, 948, 985, 987, 988, 992, 993, 995, 1011, 1062, 1067, 1087, 1090, 1098, 1110, 1123, 1125, 1210, 1225, 1227, 1243, 1244, 1247, 1248, 1250, 1255, 1261, 1265], "done": [18, 30, 34, 35, 38, 41, 43, 44, 45, 50, 66, 75, 78, 82, 93, 101, 102, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 132, 133, 144, 148, 173, 179, 184, 189, 191, 192, 194, 195, 196, 197, 200, 209, 210, 213, 217, 221, 228, 250, 265, 269, 275, 277, 293, 294, 296, 308, 311, 318, 323, 341, 371, 379, 380, 384, 390, 401, 407, 421, 422, 470, 477, 478, 480, 482, 493, 504, 506, 511, 514, 534, 537, 566, 585, 599, 602, 644, 655, 656, 684, 698, 706, 711, 736, 737, 739, 742, 749, 770, 773, 777, 778, 788, 794, 802, 806, 814, 816, 840, 846, 856, 858, 877, 879, 887, 889, 914, 915, 919, 920, 921, 923, 924, 932, 944, 967, 986, 987, 989, 994, 995, 1011, 1012, 1013, 1023, 1031, 1039, 1047, 1053, 1062, 1066, 1067, 1076, 1080, 1082, 1089, 1092, 1093, 1094, 1112, 1121, 1132, 1140, 1141, 1142, 1146, 1149, 1170, 1203, 1224, 1248, 1249], "No": [18, 31, 50, 71, 105, 108, 182, 190, 192, 196, 197, 231, 248, 264, 265, 281, 307, 380, 409, 428, 430, 444, 460, 464, 471, 482, 487, 499, 504, 508, 511, 512, 513, 514, 518, 522, 525, 530, 531, 532, 535, 537, 539, 540, 552, 598, 637, 647, 648, 659, 666, 676, 691, 694, 712, 731, 741, 743, 746, 750, 753, 757, 801, 802, 809, 816, 865, 867, 869, 871, 885, 887, 892, 904, 924, 930, 932, 935, 936, 951, 959, 967, 970, 987, 989, 995, 1009, 1016, 1021, 1022, 1033, 1034, 1036, 1038, 1047, 1051, 1059, 1062, 1065, 1068, 1083, 1085, 1102, 1109, 1115, 1118, 1121, 1122, 1130, 1134, 1138, 1140, 1198, 1199, 1203, 1204, 1213, 1216, 1224, 1226, 1232], "proprietari": 18, "accept": [18, 20, 47, 132, 192, 217, 313, 379, 504, 506, 792, 802, 804, 855, 989, 1015, 1088, 1112, 1253, 1255], "proven": [18, 493, 497, 660, 662, 663, 753, 1245], "difficult": [18, 59, 248, 449, 467, 637, 873, 885, 1051], "ffmpeg": 19, "video4linux2": 19, "640x480": [19, 1086], "dev": [19, 50, 54, 91, 123, 153, 188, 190, 191, 201, 206, 207, 217, 218, 261, 267, 277, 284, 287, 302, 305, 309, 314, 316, 319, 323, 345, 351, 357, 370, 404, 493, 524, 526, 537, 596, 840, 842, 843, 845, 851, 858, 867, 881, 883, 887, 900, 917, 918, 928, 930, 931, 948, 962, 965, 968, 970, 985, 988, 994, 995, 1018, 1025, 1047, 1050, 1053, 1055, 1058, 1059, 1080, 1231, 1233, 1249], "video0": 19, "10": [19, 50, 88, 93, 96, 97, 100, 115, 156, 161, 181, 192, 193, 198, 200, 201, 210, 211, 222, 227, 229, 233, 234, 237, 239, 242, 245, 246, 248, 253, 254, 255, 256, 258, 259, 261, 262, 264, 269, 271, 274, 277, 281, 284, 286, 287, 289, 290, 300, 302, 307, 309, 316, 317, 318, 319, 322, 323, 328, 329, 334, 338, 341, 345, 351, 357, 363, 367, 384, 391, 392, 393, 394, 397, 411, 412, 415, 426, 428, 430, 432, 440, 458, 465, 482, 484, 498, 511, 513, 514, 530, 540, 568, 588, 590, 591, 593, 596, 599, 604, 607, 627, 628, 633, 634, 636, 637, 642, 652, 656, 663, 731, 732, 738, 742, 749, 753, 754, 780, 792, 801, 802, 803, 804, 814, 840, 877, 887, 895, 916, 918, 925, 944, 948, 950, 970, 973, 977, 980, 988, 993, 994, 995, 1012, 1021, 1029, 1058, 1061, 1065, 1066, 1067, 1080, 1081, 1087, 1092, 1093, 1103, 1121, 1122, 1129, 1152, 1153, 1173, 1179, 1191, 1195, 1196, 1219, 1224, 1236, 1262], "500k": 19, "matroska": 19, "out": [19, 32, 33, 38, 43, 50, 66, 76, 97, 105, 111, 113, 115, 117, 120, 128, 132, 153, 154, 178, 184, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 209, 210, 217, 218, 221, 225, 228, 229, 237, 242, 245, 250, 258, 264, 265, 267, 274, 277, 281, 285, 314, 340, 341, 363, 367, 371, 373, 384, 398, 404, 409, 419, 440, 458, 464, 465, 473, 484, 491, 498, 499, 500, 504, 506, 518, 522, 532, 534, 537, 539, 542, 544, 569, 570, 585, 588, 598, 614, 620, 637, 644, 646, 659, 674, 716, 719, 725, 755, 770, 789, 792, 805, 816, 836, 855, 856, 865, 887, 895, 900, 914, 915, 918, 923, 927, 930, 934, 944, 976, 982, 986, 993, 994, 995, 1012, 1013, 1029, 1049, 1052, 1062, 1063, 1065, 1078, 1083, 1090, 1094, 1134, 1135, 1142, 1169, 1172, 1199, 1204, 1206, 1212, 1214, 1215, 1219, 1225, 1241], "mk": [19, 20], "descript": [19, 27, 56, 97, 113, 172, 192, 193, 204, 205, 221, 225, 226, 228, 229, 230, 231, 236, 251, 256, 258, 262, 264, 267, 274, 277, 281, 293, 294, 297, 331, 332, 347, 348, 376, 531, 535, 547, 557, 558, 559, 560, 561, 565, 575, 599, 794, 801, 802, 803, 812, 814, 816, 838, 887, 899, 911, 913, 923, 948, 950, 970, 978, 981, 982, 995, 1007, 1015, 1067, 1080, 1131, 1146, 1169, 1226, 1242, 1262], "disabl": [19, 190, 193, 195, 201, 258, 264, 274, 277, 465, 879, 885, 890, 892, 1051, 1219], "audio": [19, 171, 180, 192, 197, 840], "forc": [19, 23, 189, 191, 195, 217, 277, 415, 416, 489, 504, 552, 648, 923, 1002, 1033, 1067, 1241, 1262], "appar": [19, 45, 48, 50, 176, 192, 194, 195, 197, 201, 250, 261, 313, 535, 543, 713, 759, 770, 802, 855, 993, 1053, 1204], "next": [19, 27, 30, 50, 89, 115, 136, 141, 151, 161, 166, 173, 191, 192, 197, 209, 211, 222, 227, 229, 237, 241, 248, 254, 258, 261, 262, 264, 267, 269, 271, 274, 277, 281, 287, 293, 294, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 383, 390, 404, 437, 455, 457, 478, 506, 564, 568, 582, 592, 601, 637, 673, 750, 763, 770, 772, 794, 877, 887, 906, 932, 948, 981, 993, 995, 1015, 1025, 1047, 1066, 1093, 1094, 1097, 1125, 1128, 1143, 1196, 1232], "mention": [19, 133, 190, 191, 217, 221, 225, 251, 275, 317, 318, 339, 340, 344, 587, 601, 785, 899, 994, 1085, 1191, 1207, 1255], "frame": [19, 186, 195, 206, 228, 258, 264, 274, 277, 307, 313, 345, 477, 490, 494, 564, 755, 987, 988, 1209], "size": [19, 91, 100, 120, 189, 191, 192, 208, 210, 216, 258, 259, 264, 267, 272, 274, 277, 281, 286, 289, 305, 322, 323, 328, 370, 380, 398, 428, 445, 450, 459, 466, 470, 472, 476, 477, 479, 482, 483, 485, 490, 491, 492, 494, 496, 501, 502, 520, 544, 545, 551, 590, 602, 603, 607, 608, 609, 610, 611, 615, 616, 619, 625, 637, 642, 644, 648, 652, 654, 656, 660, 662, 663, 676, 677, 678, 679, 684, 689, 690, 694, 698, 700, 701, 706, 708, 736, 738, 744, 747, 748, 753, 764, 765, 766, 768, 782, 792, 801, 805, 806, 814, 823, 837, 838, 839, 840, 846, 858, 873, 883, 903, 912, 917, 918, 925, 932, 962, 965, 968, 970, 977, 981, 985, 989, 994, 1015, 1017, 1031, 1058, 1059, 1065, 1083, 1086, 1191, 1204], "input": [19, 28, 59, 77, 123, 209, 210, 211, 212, 222, 225, 228, 230, 252, 258, 264, 267, 274, 277, 280, 281, 302, 305, 375, 398, 403, 426, 427, 433, 457, 465, 488, 493, 505, 603, 604, 605, 606, 618, 656, 706, 726, 749, 838, 858, 913, 932, 963, 982, 986, 996, 1012, 1015, 1027, 1029, 1030, 1039, 1096, 1111, 1140, 1153, 1157, 1158, 1170, 1173, 1176, 1182, 1185, 1193, 1194, 1197, 1198, 1247], "rate": [19, 200, 221, 281, 340, 486, 906, 1049], "hz": [19, 897], "bitrat": [19, 988], "If": [19, 31, 33, 35, 41, 43, 44, 45, 80, 113, 115, 133, 140, 166, 189, 190, 191, 192, 195, 196, 197, 205, 213, 221, 258, 264, 271, 274, 277, 281, 289, 294, 296, 305, 311, 323, 340, 380, 398, 403, 443, 452, 482, 494, 508, 510, 514, 542, 592, 598, 599, 614, 644, 649, 712, 719, 721, 736, 737, 750, 755, 801, 805, 806, 814, 816, 840, 860, 865, 879, 887, 892, 904, 913, 923, 927, 930, 948, 949, 957, 960, 985, 986, 994, 995, 996, 1002, 1016, 1024, 1026, 1036, 1041, 1045, 1058, 1081, 1082, 1094, 1102, 1104, 1114, 1121, 1129, 1131, 1142, 1168, 1196, 1199, 1213, 1225, 1241], "instead": [19, 46, 50, 120, 127, 133, 141, 189, 190, 191, 192, 209, 210, 218, 250, 267, 269, 277, 307, 323, 380, 383, 404, 409, 445, 494, 542, 585, 588, 602, 663, 679, 736, 738, 755, 759, 801, 802, 816, 824, 855, 856, 865, 918, 948, 970, 994, 1038, 1058, 1065, 1067, 1078, 1084, 1115, 1162, 1174, 1186, 1210, 1231], "stdout": [19, 133, 208, 241, 245, 249, 258, 264, 274, 277, 287, 295, 302, 304, 305, 325, 326, 340, 369, 373, 383, 391, 393, 398, 402, 404, 712, 840, 911, 913, 917, 929, 930, 974, 977, 980, 985, 1015, 1062, 1090, 1140, 1142, 1148, 1153, 1157, 1160, 1175, 1207, 1216, 1250], "hold": [19, 120, 189, 191, 209, 225, 227, 228, 248, 275, 380, 420, 432, 452, 524, 544, 673, 729, 736, 787, 792, 806, 814, 819, 824, 851, 885, 889, 890, 986, 993, 1051, 1090, 1103, 1125, 1174, 1196], "mplayer": [19, 319, 357], "stdin": [19, 30, 241, 249, 258, 264, 267, 274, 277, 391, 398, 429, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840, 913, 930, 931, 963, 1015, 1138, 1140, 1141, 1153, 1204, 1216, 1250], "unicod": [20, 22, 23, 24, 26, 249, 258, 262, 264, 274, 277, 299, 323, 357, 432, 1120, 1126, 1140, 1204], "sphinxemojicod": 20, "pip": [20, 48, 172, 173, 188, 221, 225, 246, 275, 289, 1015, 1114, 1145, 1146, 1178, 1191, 1207, 1219, 1220, 1224, 1226, 1227, 1264], "conf": [20, 173, 188, 191, 193, 195, 357, 378, 539, 887, 995, 1090], "grimac": 20, "astonish": 20, "rolling_ey": 20, "face_with_raised_eyebrow": 20, "flush": [20, 302, 601, 846, 858], "innoc": [20, 196, 487, 808, 927, 1064, 1109], "kiss": 20, "kissing_heart": 20, "middle_fing": 20, "metal": [20, 69, 71, 78, 80, 190, 416, 986, 994, 995], "muscl": 20, "nerd": [20, 948], "ok_hand": 20, "penguin": 20, "pig": [20, 482], "point_up": 20, "sleep": [20, 50, 53, 105, 111, 190, 264, 293, 294, 317, 318, 339, 384, 455, 464, 814, 840, 864, 867, 869, 879, 889, 892, 896, 902, 904, 905, 908, 985, 986, 994, 1023, 1027, 1030, 1047, 1049, 1050, 1053, 1058, 1098], "sunglass": 20, "think": [20, 30, 31, 60, 190, 191, 227, 251, 353, 372, 465, 486, 487, 490, 596, 600, 647, 666, 742, 750, 752, 801, 914, 915, 918, 1010, 1058, 1121], "thumbsdown": 20, "thumbsup": 20, "wink": 20, "1": [20, 27, 30, 38, 48, 50, 54, 63, 65, 78, 97, 100, 101, 102, 106, 111, 113, 114, 132, 134, 148, 153, 154, 165, 166, 170, 173, 184, 191, 193, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 224, 227, 234, 237, 238, 239, 242, 245, 248, 249, 253, 254, 255, 258, 261, 264, 267, 269, 271, 274, 277, 281, 284, 287, 289, 290, 294, 299, 302, 306, 307, 309, 313, 319, 323, 329, 332, 334, 337, 341, 345, 348, 351, 356, 357, 363, 367, 374, 377, 383, 384, 390, 391, 392, 393, 394, 395, 396, 398, 401, 403, 411, 412, 415, 428, 429, 451, 458, 467, 471, 473, 481, 498, 505, 506, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 563, 564, 570, 580, 588, 589, 592, 596, 598, 600, 601, 602, 604, 608, 610, 611, 612, 613, 614, 615, 616, 621, 624, 627, 630, 633, 636, 637, 639, 644, 645, 646, 652, 654, 657, 659, 660, 661, 662, 663, 668, 673, 675, 681, 682, 683, 684, 685, 690, 694, 706, 708, 716, 718, 721, 725, 726, 736, 742, 743, 745, 746, 747, 749, 752, 753, 755, 757, 759, 761, 762, 764, 766, 767, 768, 770, 771, 772, 779, 785, 787, 790, 791, 792, 794, 796, 797, 800, 801, 803, 804, 805, 814, 818, 819, 823, 825, 826, 827, 829, 831, 836, 838, 840, 845, 850, 856, 860, 865, 887, 904, 913, 914, 915, 918, 919, 920, 921, 923, 924, 925, 926, 927, 930, 931, 932, 933, 934, 938, 940, 942, 944, 945, 949, 950, 951, 967, 970, 971, 973, 974, 975, 977, 978, 980, 981, 982, 984, 986, 994, 996, 997, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1027, 1029, 1030, 1031, 1044, 1046, 1047, 1049, 1051, 1053, 1054, 1055, 1058, 1061, 1062, 1064, 1065, 1068, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1088, 1089, 1090, 1093, 1094, 1096, 1098, 1100, 1102, 1103, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1119, 1122, 1123, 1124, 1125, 1126, 1129, 1131, 1132, 1137, 1142, 1145, 1146, 1148, 1153, 1156, 1159, 1169, 1173, 1176, 1179, 1180, 1182, 1186, 1187, 1188, 1194, 1195, 1196, 1197, 1203, 1208, 1209, 1210, 1212, 1213, 1214, 1219, 1224, 1225, 1226, 1231, 1235, 1241, 1242, 1256, 1258, 1264], "1_tone1": 20, "1_tone2": 20, "1_tone3": 20, "1_tone4": 20, "1_tone5": 20, "100": [20, 113, 152, 165, 173, 188, 189, 190, 195, 208, 209, 222, 232, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 280, 281, 284, 287, 289, 290, 299, 302, 305, 306, 307, 309, 313, 319, 323, 329, 340, 341, 345, 351, 357, 363, 367, 393, 394, 398, 403, 455, 461, 462, 504, 524, 532, 534, 549, 582, 583, 591, 610, 671, 672, 673, 674, 675, 677, 678, 679, 680, 694, 742, 759, 780, 858, 897, 944, 947, 970, 988, 1027, 1051, 1053, 1057, 1058, 1066, 1067, 1093, 1125, 1129, 1148, 1179, 1224], "1234": [20, 242, 245, 255, 264, 269, 271, 323, 351, 363, 393, 1004, 1012, 1063, 1121], "1st_place_med": 20, "2nd_place_med": 20, "3rd_place_med": 20, "8ball": 20, "abacu": 20, "abcd": [20, 239, 245, 261, 281, 323], "ac": [20, 200, 237], "accordion": 20, "adhesive_bandag": 20, "admission_ticket": 20, "adult": [20, 1110], "adult_dark_skin_ton": 20, "adult_light_skin_ton": 20, "adult_medium_dark_skin_ton": 20, "adult_medium_light_skin_ton": 20, "adult_medium_skin_ton": 20, "adult_tone1": 20, "adult_tone2": 20, "adult_tone3": 20, "adult_tone4": 20, "adult_tone5": 20, "ae": [20, 200], "aerial_tramwai": 20, "af": [20, 200], "afghanistan": 20, "ai": [20, 225, 1198, 1263], "airplan": [20, 986], "airplane_arriv": 20, "airplane_departur": 20, "airplane_smal": 20, "aland_island": 20, "alarm_clock": 20, "albania": 20, "alemb": 20, "algeria": 20, "alien": 20, "ambul": 20, "american_samoa": 20, "amphora": 20, "anatomical_heart": 20, "anchor": 20, "andorra": 20, "angel": [20, 313], "angel_tone1": 20, "angel_tone2": 20, "angel_tone3": 20, "angel_tone4": 20, "angel_tone5": 20, "anger": 20, "anger_right": 20, "angola": 20, "angri": 20, "anguilla": 20, "anguish": 20, "ant": 20, "antarctica": 20, "antigua_barbuda": 20, "ao": 20, "appl": [20, 524, 1065, 1132], "aq": 20, "aquariu": 20, "archeri": 20, "argentina": 20, "ari": [20, 23, 26], "armenia": 20, "arrow_backward": 20, "arrow_double_down": 20, "arrow_double_up": 20, "arrow_down": 20, "arrow_down_smal": 20, "arrow_forward": 20, "arrow_heading_down": 20, "arrow_heading_up": 20, "arrow_left": 20, "arrow_lower_left": 20, "arrow_lower_right": 20, "arrow_right": 20, "arrow_right_hook": 20, "arrow_up": 20, "arrow_up_down": 20, "arrow_up_smal": 20, "arrow_upper_left": 20, "arrow_upper_right": 20, "arrows_clockwis": 20, "arrows_counterclockwis": 20, "articulated_lorri": 20, "artificial_satellit": 20, "artist": 20, "artist_dark_skin_ton": 20, "artist_light_skin_ton": 20, "artist_medium_dark_skin_ton": 20, "artist_medium_light_skin_ton": 20, "artist_medium_skin_ton": 20, "artist_tone1": 20, "artist_tone2": 20, "artist_tone3": 20, "artist_tone4": 20, "artist_tone5": 20, "aruba": 20, "ascens": 20, "astronaut": 20, "astronaut_dark_skin_ton": 20, "astronaut_light_skin_ton": 20, "astronaut_medium_dark_skin_ton": 20, "astronaut_medium_light_skin_ton": 20, "astronaut_medium_skin_ton": 20, "astronaut_tone1": 20, "astronaut_tone2": 20, "astronaut_tone3": 20, "astronaut_tone4": 20, "astronaut_tone5": 20, "athletic_sho": 20, "atm": 20, "atom": [20, 67, 79, 212, 267, 292, 293, 294, 296, 305, 316, 353, 354, 372, 373, 381, 620, 752, 801, 814, 815, 839, 840, 849, 854, 857, 859, 864, 867, 868, 870, 873, 874, 878, 879, 880, 882, 884, 889, 892, 893, 896, 897, 898, 902, 905, 907, 908, 985, 1025, 1037, 1038, 1101, 1241, 1254], "atom_symbol": 20, "australia": 20, "austria": [20, 190, 416], "auto_rickshaw": 20, "avocado": 20, "aw": 20, "ax": [20, 210, 1086], "az": 20, "azerbaijan": 20, "ba": [20, 200], "babi": 20, "baby_bottl": 20, "baby_chick": 20, "baby_symbol": 20, "baby_tone1": 20, "baby_tone2": 20, "baby_tone3": 20, "baby_tone4": 20, "baby_tone5": 20, "back_of_hand": 20, "back_of_hand_tone1": 20, "back_of_hand_tone2": 20, "back_of_hand_tone3": 20, "back_of_hand_tone4": 20, "back_of_hand_tone5": 20, "bacon": 20, "badger": 20, "badminton": 20, "bagel": 20, "baggage_claim": 20, "baguette_bread": 20, "bahama": 20, "bahrain": 20, "balance_scal": 20, "bald": 20, "ballet_sho": 20, "balloon": 20, "ballot_box": 20, "ballot_box_with_ballot": 20, "ballot_box_with_check": 20, "bamboo": 20, "banana": 20, "bangbang": 20, "bangladesh": 20, "banjo": 20, "bank": [20, 506], "bar_chart": 20, "barbado": 20, "barber": 20, "basebal": 20, "basket": 20, "basketbal": 20, "basketball_man": 20, "basketball_play": 20, "basketball_player_tone1": 20, "basketball_player_tone2": 20, "basketball_player_tone3": 20, "basketball_player_tone4": 20, "basketball_player_tone5": 20, "basketball_woman": 20, "bat": [20, 1226], "bath": 20, "bath_tone1": 20, "bath_tone2": 20, "bath_tone3": 20, "bath_tone4": 20, "bath_tone5": 20, "bathtub": 20, "batteri": [20, 80, 221, 398, 986, 1114, 1115, 1141, 1220, 1261], "bb": [20, 184, 193, 993], "bd": [20, 200], "beach": 20, "beach_umbrella": 20, "beach_with_umbrella": 20, "bear": [20, 1036, 1214], "bearded_person": 20, "bearded_person_dark_skin_ton": 20, "bearded_person_light_skin_ton": 20, "bearded_person_medium_dark_skin_ton": 20, "bearded_person_medium_light_skin_ton": 20, "bearded_person_medium_skin_ton": 20, "bearded_person_tone1": 20, "bearded_person_tone2": 20, "bearded_person_tone3": 20, "bearded_person_tone4": 20, "bearded_person_tone5": 20, "beaver": 20, "bed": 20, "bee": 20, "beer": [20, 484], "beetl": 20, "beginn": [20, 69, 168, 198, 216, 222, 241, 256, 259, 260, 262, 272, 278, 282, 328, 356, 442, 725, 770, 1115, 1121, 1149], "belaru": 20, "belgium": 20, "beliz": 20, "bell": [20, 1109, 1112], "bell_pepp": 20, "bellhop": 20, "bellhop_bel": 20, "benin": 20, "bento": 20, "bermuda": 20, "beverage_box": 20, "bf": [20, 200], "bg": [20, 506], "bh": 20, "bhutan": 20, "bicyclist": 20, "bicyclist_tone1": 20, "bicyclist_tone2": 20, "bicyclist_tone3": 20, "bicyclist_tone4": 20, "bicyclist_tone5": 20, "bike": 20, "biking_man": 20, "biking_woman": 20, "bikini": 20, "billed_cap": 20, "biohazard": 20, "biohazard_sign": 20, "bird": 20, "birthdai": [20, 230, 732], "bison": [20, 201, 867, 993, 1080], "bj": 20, "bl": 20, "black_cat": 20, "black_circl": 20, "black_flag": 20, "black_heart": 20, "black_jok": 20, "black_large_squar": 20, "black_medium_small_squar": 20, "black_medium_squar": 20, "black_nib": 20, "black_small_squar": 20, "black_square_button": 20, "blond": 20, "haired_man": 20, "haired_man_dark_skin_ton": 20, "haired_man_light_skin_ton": 20, "haired_man_medium_dark_skin_ton": 20, "haired_man_medium_light_skin_ton": 20, "haired_man_medium_skin_ton": 20, "haired_man_tone1": 20, "haired_man_tone2": 20, "haired_man_tone3": 20, "haired_man_tone4": 20, "haired_man_tone5": 20, "haired_woman": 20, "haired_woman_dark_skin_ton": 20, "haired_woman_light_skin_ton": 20, "haired_woman_medium_dark_skin_ton": 20, "haired_woman_medium_light_skin_ton": 20, "haired_woman_medium_skin_ton": 20, "haired_woman_tone1": 20, "haired_woman_tone2": 20, "haired_woman_tone3": 20, "haired_woman_tone4": 20, "haired_woman_tone5": 20, "blond_haired_person": 20, "blond_haired_person_tone1": 20, "blond_haired_person_tone2": 20, "blond_haired_person_tone3": 20, "blond_haired_person_tone4": 20, "blond_haired_person_tone5": 20, "blonde_man": 20, "blonde_woman": 20, "blossom": 20, "blowfish": 20, "blue_book": 20, "blue_car": 20, "blue_circl": 20, "blue_heart": 20, "blue_squar": 20, "blueberri": 20, "blush": 20, "bm": 20, "bn": 20, "bo": [20, 1103], "boar": 20, "boat": 20, "bolivia": 20, "bomb": 20, "bone": 20, "bookmark": [20, 1203], "bookmark_tab": 20, "boom": [20, 770, 787], "boomerang": 20, "boot": [20, 153, 182, 188, 191, 193, 197, 208, 309, 500, 817, 860, 865, 883, 887, 897, 926, 993, 994], "bosnia_herzegovina": 20, "botswana": 20, "bottle_with_popping_cork": 20, "bouquet": 20, "bouvet_island": 20, "bow": 20, "bow_and_arrow": 20, "bow_tone1": 20, "bow_tone2": 20, "bow_tone3": 20, "bow_tone4": 20, "bow_tone5": 20, "bowing_man": 20, "bowing_woman": 20, "bowl_with_spoon": 20, "bowl": 20, "boxing_glov": 20, "boi": 20, "boy_tone1": 20, "boy_tone2": 20, "boy_tone3": 20, "boy_tone4": 20, "boy_tone5": 20, "bq": 20, "br": [20, 287, 345], "brain": [20, 49, 51], "brazil": 20, "bread": 20, "breast_feed": 20, "breast_feeding_dark_skin_ton": 20, "breast_feeding_light_skin_ton": 20, "breast_feeding_medium_dark_skin_ton": 20, "breast_feeding_medium_light_skin_ton": 20, "breast_feeding_medium_skin_ton": 20, "breast_feeding_tone1": 20, "breast_feeding_tone2": 20, "breast_feeding_tone3": 20, "breast_feeding_tone4": 20, "breast_feeding_tone5": 20, "brick": [20, 189, 202], "bride_with_veil": 20, "bride_with_veil_tone1": 20, "bride_with_veil_tone2": 20, "bride_with_veil_tone3": 20, "bride_with_veil_tone4": 20, "bride_with_veil_tone5": 20, "bridge_at_night": 20, "briefcas": 20, "brief": [20, 188, 498, 948], "british_indian_ocean_territori": 20, "british_virgin_island": 20, "broccoli": 20, "broken_heart": 20, "broom": 20, "brown_circl": 20, "brown_heart": 20, "brown_squar": 20, "brunei": 20, "bt": 20, "bubble_tea": 20, "bucket": [20, 858], "bug": [20, 34, 43, 44, 98, 173, 191, 192, 193, 232, 251, 267, 278, 407, 462, 464, 465, 480, 485, 487, 491, 504, 508, 535, 625, 627, 629, 637, 643, 644, 647, 652, 713, 716, 770, 780, 799, 816, 840, 877, 1007, 1040, 1049, 1050, 1083, 1103, 1104, 1118, 1121, 1254], "building_construct": 20, "bulb": 20, "bulgaria": 20, "bullettrain_front": 20, "bullettrain_sid": 20, "burkina_faso": 20, "burrito": 20, "burundi": 20, "bu": [20, 54, 55, 72, 116, 141, 236, 261, 277, 284, 286, 287, 302, 305, 309, 319, 323, 345, 351, 357, 363, 380, 542, 556, 571, 585, 601, 602, 840, 858, 883, 948, 985, 987, 992, 993, 994, 1023, 1029, 1088, 1247, 1253, 1255, 1262], "business_suit_levit": 20, "busstop": 20, "bust_in_silhouett": 20, "busts_in_silhouett": 20, "butter": 20, "butterfli": 20, "bv": 20, "bw": 20, "bz": 20, "cactu": 20, "cake": 20, "calendar": 20, "calendar_spir": 20, "call_m": 20, "call_me_hand": 20, "call_me_hand_tone1": 20, "call_me_hand_tone2": 20, "call_me_hand_tone3": 20, "call_me_hand_tone4": 20, "call_me_hand_tone5": 20, "call_me_tone1": 20, "call_me_tone2": 20, "call_me_tone3": 20, "call_me_tone4": 20, "call_me_tone5": 20, "cambodia": 20, "camel": 20, "camera": [20, 21, 133, 136, 195, 197, 994], "camera_flash": 20, "camera_with_flash": 20, "cameroon": 20, "camp": 20, "canada": 20, "canary_island": 20, "cancer": 20, "candl": 20, "candi": 20, "canned_food": 20, "cano": 20, "cape_verd": 20, "capital_abcd": 20, "capricorn": 20, "car": [20, 161, 307, 506, 986], "card_box": 20, "card_file_box": 20, "card_index": 20, "card_index_divid": 20, "caribbean_netherland": 20, "carousel_hors": 20, "carpentry_saw": 20, "carrot": 20, "cartwheel": 20, "cartwheel_tone1": 20, "cartwheel_tone2": 20, "cartwheel_tone3": 20, "cartwheel_tone4": 20, "cartwheel_tone5": 20, "cat2": 20, "cat": [20, 137, 141, 173, 192, 196, 229, 241, 295, 304, 305, 307, 325, 326, 369, 370, 383, 384, 482, 506, 507, 601, 840, 845, 850, 867, 887, 903, 914, 915, 917, 918, 928, 930, 932, 960, 967, 976, 977, 979, 980, 982, 985, 986, 993, 994, 995, 996, 1020, 1022, 1023, 1027, 1053, 1059, 1062, 1250], "cayman_island": 20, "cd": [20, 48, 54, 166, 178, 188, 193, 194, 196, 197, 200, 201, 217, 218, 251, 261, 281, 289, 294, 296, 384, 398, 403, 534, 599, 602, 661, 860, 862, 887, 888, 911, 913, 914, 915, 918, 925, 933, 938, 940, 948, 972, 973, 986, 993, 994, 1002, 1015, 1066, 1067, 1080, 1081, 1146], "central_african_republ": 20, "ceuta_melilla": 20, "cf": [20, 351, 913, 1034], "cg": 20, "ch": 20, "chad": 20, "chain": [20, 189, 200, 209, 271, 288, 484, 526, 892, 1044], "chair": [20, 221], "champagn": 20, "champagne_glass": 20, "chart": [20, 235, 250, 259, 272, 286, 289, 322, 328, 1191, 1198], "chart_with_downwards_trend": 20, "chart_with_upwards_trend": 20, "checkered_flag": 20, "chees": 20, "cheese_wedg": 20, "cherri": 20, "cherry_blossom": 20, "chess_pawn": 20, "chestnut": 20, "chicken": 20, "child": [20, 90, 137, 206, 295, 304, 305, 325, 326, 369, 370, 520, 526, 838, 840, 917, 919, 922, 923, 934, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 957, 959, 960, 985, 997, 998, 999, 1000, 1001, 1026, 1034, 1041, 1046, 1063, 1076, 1077, 1107, 1216], "child_dark_skin_ton": 20, "child_light_skin_ton": 20, "child_medium_dark_skin_ton": 20, "child_medium_light_skin_ton": 20, "child_medium_skin_ton": 20, "child_tone1": 20, "child_tone2": 20, "child_tone3": 20, "child_tone4": 20, "child_tone5": 20, "children_cross": 20, "chile": 20, "china": 20, "chipmunk": 20, "chocolate_bar": 20, "chopstick": 20, "christmas_island": 20, "christmas_tre": 20, "church": 20, "ci": [20, 1224], "cinema": 20, "circus_t": 20, "city_dusk": 20, "city_sunris": 20, "city_sunset": 20, "cityscap": 20, "ck": 20, "cl": [20, 277, 302, 1106, 1107], "clamp": 20, "clap": 20, "clap_tone1": 20, "clap_tone2": 20, "clap_tone3": 20, "clap_tone4": 20, "clap_tone5": 20, "clapper": 20, "classical_build": 20, "clinking_glass": 20, "clipboard": 20, "clipperton_island": 20, "clock1030": 20, "clock10": 20, "clock1130": 20, "clock11": 20, "clock1230": 20, "clock12": 20, "clock130": 20, "clock1": 20, "clock230": 20, "clock2": 20, "clock330": 20, "clock3": 20, "clock430": 20, "clock4": 20, "clock530": 20, "clock5": 20, "clock630": 20, "clock6": 20, "clock730": 20, "clock7": 20, "clock830": 20, "clock8": 20, "clock930": 20, "clock9": 20, "clock": [20, 127, 153, 154, 264, 265, 493, 988, 993], "closed_book": 20, "closed_lock_with_kei": 20, "closed_umbrella": 20, "cloud": [20, 92, 197, 241, 265, 397, 398, 401, 745, 747, 1002, 1195, 1196, 1219], "cloud_lightn": 20, "cloud_rain": 20, "cloud_snow": 20, "cloud_tornado": 20, "cloud_with_lightn": 20, "cloud_with_lightning_and_rain": 20, "cloud_with_rain": 20, "cloud_with_snow": 20, "cloud_with_tornado": 20, "clown": 20, "clown_fac": 20, "club": [20, 26], "cm": [20, 162], "cn": [20, 200], "coat": 20, "cockroach": 20, "cocktail": 20, "coconut": [20, 313], "cocos_island": 20, "coffe": [20, 193, 716, 993], "coffin": 20, "coin": 20, "cold_fac": 20, "cold_sweat": 20, "colombia": 20, "comet": 20, "comoro": 20, "compass": 20, "compress": [20, 113, 166, 191, 295, 304, 305, 325, 369, 840, 911, 917, 985, 1076, 1077, 1078, 1081], "computer_mous": 20, "confetti_bal": 20, "confound": 20, "confus": [20, 190, 194, 221, 250, 439, 447, 493, 518, 524, 526, 659, 669, 746, 757, 1068, 1132, 1217], "congo": 20, "congo_brazzavil": 20, "congo_kinshasa": 20, "congratul": 20, "construct": [20, 221, 227, 308, 311, 373, 379, 380, 442, 455, 465, 494, 504, 628, 678, 697, 698, 755, 803, 1104, 1111, 1128, 1139, 1244], "construction_sit": 20, "construction_work": 20, "construction_worker_man": 20, "construction_worker_tone1": 20, "construction_worker_tone2": 20, "construction_worker_tone3": 20, "construction_worker_tone4": 20, "construction_worker_tone5": 20, "construction_worker_woman": 20, "control_knob": 20, "convenience_stor": 20, "cook": [20, 305], "cook_dark_skin_ton": 20, "cook_island": 20, "cook_light_skin_ton": 20, "cook_medium_dark_skin_ton": 20, "cook_medium_light_skin_ton": 20, "cook_medium_skin_ton": 20, "cook_tone1": 20, "cook_tone2": 20, "cook_tone3": 20, "cook_tone4": 20, "cook_tone5": 20, "cooki": [20, 869, 883], "cool": [20, 178, 191, 192, 195, 197, 209, 210, 221, 222, 225, 240, 305, 318, 371, 416, 500, 506, 519, 522, 554, 563, 699, 742, 743, 759, 762, 781, 791, 794, 816, 887, 944, 995, 1083, 1087, 1090, 1107, 1126, 1140, 1191, 1198, 1203, 1241], "cop": 20, "cop_tone1": 20, "cop_tone2": 20, "cop_tone3": 20, "cop_tone4": 20, "cop_tone5": 20, "copyright": [20, 24, 201, 241, 258, 264, 274, 277, 302, 391, 395, 652, 801, 819, 1116], "corn": 20, "costa_rica": 20, "cote_divoir": 20, "couch": 20, "couch_and_lamp": 20, "coupl": [20, 31, 133, 189, 190, 191, 192, 197, 209, 221, 225, 418, 455, 489, 494, 790, 982, 1017, 1038, 1245], "couple_mm": 20, "couple_with_heart": 20, "couple_with_heart_dark_skin_ton": 20, "couple_with_heart_light_skin_ton": 20, "couple_with_heart_man_man": 20, "couple_with_heart_man_man_dark_skin_ton": 20, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_man_man_light_skin_ton": 20, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_man_man_medium_dark_skin_ton": 20, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 20, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_man_man_medium_light_skin_ton": 20, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 20, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_man_man_medium_skin_ton": 20, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 20, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 20, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_man_man_tone1": 20, "couple_with_heart_man_man_tone1_tone2": 20, "couple_with_heart_man_man_tone1_tone3": 20, "couple_with_heart_man_man_tone1_tone4": 20, "couple_with_heart_man_man_tone1_tone5": 20, "couple_with_heart_man_man_tone2": 20, "couple_with_heart_man_man_tone2_tone1": 20, "couple_with_heart_man_man_tone2_tone3": 20, "couple_with_heart_man_man_tone2_tone4": 20, "couple_with_heart_man_man_tone2_tone5": 20, "couple_with_heart_man_man_tone3": 20, "couple_with_heart_man_man_tone3_tone1": 20, "couple_with_heart_man_man_tone3_tone2": 20, "couple_with_heart_man_man_tone3_tone4": 20, "couple_with_heart_man_man_tone3_tone5": 20, "couple_with_heart_man_man_tone4": 20, "couple_with_heart_man_man_tone4_tone1": 20, "couple_with_heart_man_man_tone4_tone2": 20, "couple_with_heart_man_man_tone4_tone3": 20, "couple_with_heart_man_man_tone4_tone5": 20, "couple_with_heart_man_man_tone5": 20, "couple_with_heart_man_man_tone5_tone1": 20, "couple_with_heart_man_man_tone5_tone2": 20, "couple_with_heart_man_man_tone5_tone3": 20, "couple_with_heart_man_man_tone5_tone4": 20, "couple_with_heart_medium_dark_skin_ton": 20, "couple_with_heart_medium_light_skin_ton": 20, "couple_with_heart_medium_skin_ton": 20, "couple_with_heart_mm": 20, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 20, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 20, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 20, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 20, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_person_person_tone1_tone2": 20, "couple_with_heart_person_person_tone1_tone3": 20, "couple_with_heart_person_person_tone1_tone4": 20, "couple_with_heart_person_person_tone1_tone5": 20, "couple_with_heart_person_person_tone2_tone1": 20, "couple_with_heart_person_person_tone2_tone3": 20, "couple_with_heart_person_person_tone2_tone4": 20, "couple_with_heart_person_person_tone2_tone5": 20, "couple_with_heart_person_person_tone3_tone1": 20, "couple_with_heart_person_person_tone3_tone2": 20, "couple_with_heart_person_person_tone3_tone4": 20, "couple_with_heart_person_person_tone3_tone5": 20, "couple_with_heart_person_person_tone4_tone1": 20, "couple_with_heart_person_person_tone4_tone2": 20, "couple_with_heart_person_person_tone4_tone3": 20, "couple_with_heart_person_person_tone4_tone5": 20, "couple_with_heart_person_person_tone5_tone1": 20, "couple_with_heart_person_person_tone5_tone2": 20, "couple_with_heart_person_person_tone5_tone3": 20, "couple_with_heart_person_person_tone5_tone4": 20, "couple_with_heart_tone1": 20, "couple_with_heart_tone2": 20, "couple_with_heart_tone3": 20, "couple_with_heart_tone4": 20, "couple_with_heart_tone5": 20, "couple_with_heart_woman_man": 20, "couple_with_heart_woman_man_dark_skin_ton": 20, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_man_light_skin_ton": 20, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_man_medium_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_man_medium_light_skin_ton": 20, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_man_medium_skin_ton": 20, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_man_tone1": 20, "couple_with_heart_woman_man_tone1_tone2": 20, "couple_with_heart_woman_man_tone1_tone3": 20, "couple_with_heart_woman_man_tone1_tone4": 20, "couple_with_heart_woman_man_tone1_tone5": 20, "couple_with_heart_woman_man_tone2": 20, "couple_with_heart_woman_man_tone2_tone1": 20, "couple_with_heart_woman_man_tone2_tone3": 20, "couple_with_heart_woman_man_tone2_tone4": 20, "couple_with_heart_woman_man_tone2_tone5": 20, "couple_with_heart_woman_man_tone3": 20, "couple_with_heart_woman_man_tone3_tone1": 20, "couple_with_heart_woman_man_tone3_tone2": 20, "couple_with_heart_woman_man_tone3_tone4": 20, "couple_with_heart_woman_man_tone3_tone5": 20, "couple_with_heart_woman_man_tone4": 20, "couple_with_heart_woman_man_tone4_tone1": 20, "couple_with_heart_woman_man_tone4_tone2": 20, "couple_with_heart_woman_man_tone4_tone3": 20, "couple_with_heart_woman_man_tone4_tone5": 20, "couple_with_heart_woman_man_tone5": 20, "couple_with_heart_woman_man_tone5_tone1": 20, "couple_with_heart_woman_man_tone5_tone2": 20, "couple_with_heart_woman_man_tone5_tone3": 20, "couple_with_heart_woman_man_tone5_tone4": 20, "couple_with_heart_woman_woman": 20, "couple_with_heart_woman_woman_dark_skin_ton": 20, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_woman_light_skin_ton": 20, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_woman_medium_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_woman_medium_light_skin_ton": 20, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 20, "couple_with_heart_woman_woman_medium_skin_ton": 20, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 20, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 20, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 20, "couple_with_heart_woman_woman_tone1": 20, "couple_with_heart_woman_woman_tone1_tone2": 20, "couple_with_heart_woman_woman_tone1_tone3": 20, "couple_with_heart_woman_woman_tone1_tone4": 20, "couple_with_heart_woman_woman_tone1_tone5": 20, "couple_with_heart_woman_woman_tone2": 20, "couple_with_heart_woman_woman_tone2_tone1": 20, "couple_with_heart_woman_woman_tone2_tone3": 20, "couple_with_heart_woman_woman_tone2_tone4": 20, "couple_with_heart_woman_woman_tone2_tone5": 20, "couple_with_heart_woman_woman_tone3": 20, "couple_with_heart_woman_woman_tone3_tone1": 20, "couple_with_heart_woman_woman_tone3_tone2": 20, "couple_with_heart_woman_woman_tone3_tone4": 20, "couple_with_heart_woman_woman_tone3_tone5": 20, "couple_with_heart_woman_woman_tone4": 20, "couple_with_heart_woman_woman_tone4_tone1": 20, "couple_with_heart_woman_woman_tone4_tone2": 20, "couple_with_heart_woman_woman_tone4_tone3": 20, "couple_with_heart_woman_woman_tone4_tone5": 20, "couple_with_heart_woman_woman_tone5": 20, "couple_with_heart_woman_woman_tone5_tone1": 20, "couple_with_heart_woman_woman_tone5_tone2": 20, "couple_with_heart_woman_woman_tone5_tone3": 20, "couple_with_heart_woman_woman_tone5_tone4": 20, "couple_with_heart_ww": 20, "couple_ww": 20, "couplekiss": 20, "couplekiss_man_man": 20, "couplekiss_man_woman": 20, "couplekiss_mm": 20, "couplekiss_woman_woman": 20, "couplekiss_ww": 20, "cow2": 20, "cow": 20, "cowboi": 20, "cowboy_hat_fac": 20, "cp": [20, 90, 115, 137, 168, 191, 193, 196, 229, 231, 295, 304, 305, 325, 326, 369, 370, 398, 403, 840, 887, 914, 915, 916, 917, 918, 948, 952, 953, 955, 956, 959, 960, 962, 968, 985, 993, 1005, 1016, 1080, 1250], "cr": [20, 1140], "crab": 20, "crayon": 20, "credit_card": 20, "crescent_moon": 20, "cricket": 20, "cricket_bat_bal": 20, "cricket_gam": 20, "croatia": 20, "crocodil": 20, "croissant": 20, "cross": [20, 26, 94, 95, 97, 123, 137, 139, 140, 148, 152, 156, 189, 202, 225, 319, 331, 332, 347, 348, 376, 399, 400, 401, 517, 526, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1023, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1073, 1074, 1075, 1077, 1080, 1256], "crossed_fing": 20, "crossed_flag": 20, "crossed_sword": 20, "crown": 20, "cruise_ship": 20, "cry": [20, 190], "crying_cat_fac": 20, "crystal_bal": 20, "cu": 20, "cuba": 20, "cucumb": 20, "cup_with_straw": 20, "cupcak": 20, "cupid": 20, "curacao": 20, "curling_ston": 20, "curly_hair": 20, "curly_loop": 20, "currency_exchang": 20, "curri": [20, 250], "custard": 20, "cut_of_meat": 20, "cw": 20, "cx": 20, "cy": 20, "cyclon": 20, "cypru": 20, "cz": 20, "czech_republ": 20, "dagger": [20, 26], "dagger_knif": 20, "dancer": 20, "dancer_tone1": 20, "dancer_tone2": 20, "dancer_tone3": 20, "dancer_tone4": 20, "dancer_tone5": 20, "dancing_men": 20, "dancing_women": 20, "dango": 20, "dark_sunglass": 20, "dart": 20, "dash": [20, 22, 23, 26, 685], "date": [20, 113, 193, 201, 221, 227, 257, 289, 305, 307, 350, 411, 412, 415, 506, 888, 1085, 1180, 1182, 1186, 1188, 1195, 1200], "deaf_man": 20, "deaf_man_dark_skin_ton": 20, "deaf_man_light_skin_ton": 20, "deaf_man_medium_dark_skin_ton": 20, "deaf_man_medium_light_skin_ton": 20, "deaf_man_medium_skin_ton": 20, "deaf_man_tone1": 20, "deaf_man_tone2": 20, "deaf_man_tone3": 20, "deaf_man_tone4": 20, "deaf_man_tone5": 20, "deaf_person": 20, "deaf_person_dark_skin_ton": 20, "deaf_person_light_skin_ton": 20, "deaf_person_medium_dark_skin_ton": 20, "deaf_person_medium_light_skin_ton": 20, "deaf_person_medium_skin_ton": 20, "deaf_person_tone1": 20, "deaf_person_tone2": 20, "deaf_person_tone3": 20, "deaf_person_tone4": 20, "deaf_person_tone5": 20, "deaf_woman": 20, "deaf_woman_dark_skin_ton": 20, "deaf_woman_light_skin_ton": 20, "deaf_woman_medium_dark_skin_ton": 20, "deaf_woman_medium_light_skin_ton": 20, "deaf_woman_medium_skin_ton": 20, "deaf_woman_tone1": 20, "deaf_woman_tone2": 20, "deaf_woman_tone3": 20, "deaf_woman_tone4": 20, "deaf_woman_tone5": 20, "deciduous_tre": 20, "deer": 20, "denmark": 20, "department_stor": 20, "derelict_hous": 20, "derelict_house_build": 20, "desert": 20, "desert_island": 20, "desktop": [20, 173, 180, 190, 195, 250, 319, 970, 1050, 1247], "desktop_comput": 20, "detective_tone1": 20, "detective_tone2": 20, "detective_tone3": 20, "detective_tone4": 20, "detective_tone5": 20, "dg": 20, "diamond_shape_with_a_dot_insid": 20, "diamond": [20, 22, 26, 249, 262], "diego_garcia": 20, "8": [20, 50, 100, 192, 193, 197, 201, 208, 209, 210, 211, 212, 216, 221, 222, 225, 227, 234, 237, 239, 240, 242, 245, 246, 248, 249, 254, 255, 256, 258, 259, 261, 262, 264, 268, 269, 271, 274, 277, 281, 284, 286, 287, 290, 298, 299, 302, 305, 306, 309, 313, 319, 323, 326, 328, 329, 334, 337, 340, 341, 345, 351, 357, 363, 367, 370, 390, 391, 392, 393, 398, 415, 438, 482, 494, 500, 506, 509, 516, 524, 537, 563, 595, 630, 637, 644, 649, 652, 654, 656, 660, 662, 663, 753, 801, 838, 860, 883, 887, 918, 925, 933, 970, 973, 980, 986, 987, 988, 989, 993, 994, 1065, 1083, 1089, 1092, 1098, 1121, 1122, 1127, 1135, 1140, 1145, 1146, 1152, 1188, 1191, 1195, 1196, 1202, 1219, 1226], "digit_eight": 20, "digit_f": 20, "4": [20, 48, 50, 97, 100, 103, 104, 113, 152, 165, 166, 173, 184, 189, 193, 195, 201, 208, 209, 210, 211, 212, 215, 222, 227, 229, 233, 234, 237, 239, 242, 245, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 264, 269, 271, 272, 274, 277, 281, 284, 286, 287, 290, 298, 299, 302, 306, 307, 309, 313, 319, 322, 323, 328, 329, 334, 341, 345, 351, 356, 357, 363, 367, 391, 392, 393, 395, 398, 411, 412, 415, 428, 444, 464, 467, 470, 487, 491, 494, 495, 505, 506, 511, 514, 520, 524, 546, 549, 588, 592, 593, 594, 595, 596, 598, 600, 601, 603, 619, 621, 637, 644, 646, 654, 657, 659, 660, 661, 662, 663, 675, 676, 684, 694, 745, 747, 749, 764, 765, 766, 768, 770, 779, 781, 785, 792, 794, 805, 818, 838, 887, 888, 926, 975, 978, 980, 988, 993, 994, 995, 1016, 1017, 1030, 1049, 1053, 1065, 1068, 1086, 1087, 1089, 1096, 1098, 1102, 1109, 1110, 1112, 1121, 1122, 1127, 1130, 1131, 1132, 1136, 1137, 1141, 1142, 1145, 1146, 1148, 1152, 1165, 1169, 1180, 1182, 1186, 1188, 1191, 1195, 1196, 1198, 1204, 1208, 1209, 1210, 1212, 1213, 1215, 1219, 1224], "digit_four": 20, "9": [20, 48, 50, 113, 191, 195, 198, 208, 209, 210, 211, 212, 220, 222, 224, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 254, 255, 256, 258, 261, 262, 264, 269, 271, 274, 277, 278, 281, 284, 287, 289, 290, 299, 302, 305, 306, 309, 313, 314, 316, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 376, 390, 391, 393, 394, 398, 403, 415, 420, 422, 428, 437, 440, 498, 506, 513, 543, 563, 572, 591, 637, 639, 663, 754, 764, 792, 865, 944, 967, 970, 993, 994, 995, 1011, 1049, 1086, 1089, 1096, 1102, 1115, 1116, 1122, 1127, 1129, 1137, 1141, 1146, 1153, 1158, 1195, 1196, 1204, 1213, 1219, 1224], "digit_nin": 20, "digit_on": 20, "7": [20, 30, 50, 190, 193, 195, 200, 206, 209, 210, 211, 212, 222, 227, 234, 237, 239, 240, 242, 245, 246, 248, 252, 254, 255, 256, 258, 259, 261, 264, 269, 271, 274, 277, 281, 284, 286, 287, 289, 290, 298, 299, 302, 306, 307, 309, 313, 319, 323, 328, 329, 334, 337, 341, 345, 351, 357, 363, 367, 373, 383, 392, 393, 398, 403, 404, 415, 428, 432, 446, 473, 482, 506, 509, 513, 516, 520, 524, 526, 534, 543, 563, 564, 588, 591, 596, 600, 601, 603, 604, 605, 606, 618, 625, 633, 637, 644, 652, 653, 656, 658, 659, 660, 662, 683, 687, 690, 699, 716, 726, 746, 754, 755, 779, 780, 781, 785, 792, 834, 835, 836, 918, 919, 931, 932, 948, 970, 980, 988, 993, 994, 995, 1012, 1020, 1046, 1049, 1058, 1059, 1062, 1063, 1066, 1067, 1089, 1092, 1098, 1102, 1110, 1115, 1120, 1121, 1122, 1125, 1127, 1129, 1130, 1146, 1158, 1176, 1179, 1191, 1195, 1196, 1199, 1204, 1215, 1224], "digit_seven": 20, "digit_six": 20, "3": [20, 48, 50, 53, 56, 97, 100, 101, 102, 103, 104, 106, 114, 120, 141, 152, 153, 154, 165, 170, 173, 195, 200, 201, 206, 208, 209, 210, 211, 212, 219, 221, 222, 227, 233, 234, 237, 238, 239, 242, 245, 248, 249, 253, 255, 257, 258, 263, 264, 267, 269, 271, 274, 277, 281, 284, 286, 288, 289, 290, 292, 299, 302, 306, 307, 309, 313, 319, 323, 329, 334, 336, 337, 342, 345, 351, 357, 363, 367, 391, 392, 393, 394, 398, 399, 400, 403, 415, 428, 440, 441, 442, 455, 464, 465, 486, 487, 495, 498, 500, 505, 506, 509, 513, 516, 520, 522, 524, 526, 530, 534, 546, 563, 564, 588, 589, 593, 596, 598, 599, 600, 601, 603, 604, 605, 606, 610, 611, 612, 613, 615, 616, 618, 620, 637, 644, 646, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 668, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 690, 706, 716, 721, 723, 725, 745, 746, 747, 749, 757, 759, 760, 764, 765, 766, 767, 768, 770, 785, 790, 792, 794, 796, 801, 802, 804, 805, 818, 819, 822, 838, 845, 851, 887, 926, 931, 945, 948, 970, 973, 975, 980, 982, 988, 990, 993, 994, 995, 997, 1006, 1007, 1009, 1011, 1012, 1013, 1016, 1020, 1021, 1022, 1030, 1031, 1033, 1034, 1038, 1044, 1046, 1049, 1052, 1053, 1054, 1057, 1059, 1062, 1063, 1065, 1066, 1067, 1068, 1086, 1088, 1089, 1094, 1096, 1098, 1102, 1109, 1112, 1114, 1115, 1116, 1119, 1120, 1122, 1124, 1126, 1127, 1130, 1132, 1137, 1138, 1139, 1141, 1145, 1146, 1148, 1165, 1169, 1173, 1179, 1180, 1182, 1186, 1188, 1191, 1194, 1195, 1196, 1199, 1202, 1208, 1209, 1210, 1212, 1213, 1215, 1219, 1224, 1225, 1226, 1233, 1239, 1241, 1242, 1244, 1250, 1253, 1260, 1261, 1265], "digit_thre": 20, "digit_two": 20, "digit_zero": 20, "disappoint": 20, "disappointed_reliev": 20, "disguised_fac": 20, "divid": [20, 23, 24, 26, 281, 1198], "diving_mask": 20, "diya_lamp": 20, "dizzi": 20, "dizzy_fac": 20, "dj": 20, "djibouti": 20, "dk": 20, "dm": 20, "dna": 20, "do_not_litt": 20, "dodo": 20, "dog2": 20, "dog": [20, 482], "dollar": [20, 24], "doll": 20, "dolphin": 20, "dominica": 20, "dominican_republ": 20, "door": [20, 267, 620, 877, 1100], "double_vertical_bar": 20, "doughnut": 20, "dove": 20, "dove_of_peac": 20, "dragon": [20, 88, 251, 267, 314, 316, 354, 373, 379, 380, 620, 644, 645, 650, 739, 751, 753, 782, 787, 798, 802, 807, 815, 837, 839, 840, 1062], "dragon_fac": 20, "dress": 20, "dromedary_camel": 20, "drool": 20, "drooling_fac": 20, "drop_of_blood": 20, "droplet": 20, "drum": 20, "drum_with_drumstick": 20, "dumpl": 20, "dvd": 20, "dz": 20, "mail": [20, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980, 1204], "ea": [20, 200], "eagl": [20, 261, 1148], "ear": 20, "ear_of_ric": 20, "ear_tone1": 20, "ear_tone2": 20, "ear_tone3": 20, "ear_tone4": 20, "ear_tone5": 20, "ear_with_hearing_aid": 20, "ear_with_hearing_aid_dark_skin_ton": 20, "ear_with_hearing_aid_light_skin_ton": 20, "ear_with_hearing_aid_medium_dark_skin_ton": 20, "ear_with_hearing_aid_medium_light_skin_ton": 20, "ear_with_hearing_aid_medium_skin_ton": 20, "ear_with_hearing_aid_tone1": 20, "ear_with_hearing_aid_tone2": 20, "ear_with_hearing_aid_tone3": 20, "ear_with_hearing_aid_tone4": 20, "ear_with_hearing_aid_tone5": 20, "earth_africa": 20, "earth_america": 20, "earth_asia": 20, "ec": [20, 88, 200, 241, 395, 398, 403, 406, 415, 840, 916, 917, 948, 985], "ecuador": 20, "ee": [20, 200], "eg": [20, 23, 120], "egg": [20, 48, 1134], "eggplant": 20, "egypt": 20, "eight": [20, 124, 192, 209, 222, 232, 240, 269, 271, 357, 398, 995, 1204], "eight_pointed_black_star": 20, "eight_spoked_asterisk": 20, "eject": 20, "eject_symbol": 20, "el_salvador": 20, "electric_plug": 20, "eleph": 20, "elev": 20, "elf": [20, 198, 201, 232, 248, 258, 537, 628, 1034, 1065, 1066, 1068, 1083, 1117, 1251], "elf_dark_skin_ton": 20, "elf_light_skin_ton": 20, "elf_medium_dark_skin_ton": 20, "elf_medium_light_skin_ton": 20, "elf_medium_skin_ton": 20, "elf_tone1": 20, "elf_tone2": 20, "elf_tone3": 20, "elf_tone4": 20, "elf_tone5": 20, "england": 20, "envelop": [20, 887], "envelope_with_arrow": 20, "equatorial_guinea": 20, "er": [20, 199, 207, 222, 224, 232, 269, 1238], "eritrea": 20, "estonia": 20, "et": [20, 88, 512, 652, 801, 1009, 1066, 1067, 1109], "ethiopia": 20, "euro": [20, 568, 569, 570, 582, 583, 584], "european_castl": 20, "european_post_offic": 20, "european_union": 20, "evergreen_tre": 20, "exclam": [20, 24], "expecting_woman": 20, "expecting_woman_tone1": 20, "expecting_woman_tone2": 20, "expecting_woman_tone3": 20, "expecting_woman_tone4": 20, "expecting_woman_tone5": 20, "exploding_head": 20, "expressionless": 20, "eye_in_speech_bubbl": 20, "eye_speech_bubbl": 20, "eyeglass": 20, "face_exh": 20, "face_in_cloud": 20, "face_palm": 20, "face_palm_tone1": 20, "face_palm_tone2": 20, "face_palm_tone3": 20, "face_palm_tone4": 20, "face_palm_tone5": 20, "face_vomit": 20, "face_with_cowboy_hat": 20, "face_with_hand_over_mouth": 20, "face_with_head_bandag": 20, "face_with_monocl": 20, "face_with_rolling_ey": 20, "face_with_spiral_ey": 20, "face_with_symbols_over_mouth": 20, "face_with_thermomet": 20, "facepalm": 20, "facepalm_tone1": 20, "facepalm_tone2": 20, "facepalm_tone3": 20, "facepalm_tone4": 20, "facepalm_tone5": 20, "factori": [20, 97, 249, 262, 297, 316, 372, 407, 541, 548, 562, 576, 590, 642, 840, 1015, 1242], "factory_work": 20, "factory_worker_dark_skin_ton": 20, "factory_worker_light_skin_ton": 20, "factory_worker_medium_dark_skin_ton": 20, "factory_worker_medium_light_skin_ton": 20, "factory_worker_medium_skin_ton": 20, "factory_worker_tone1": 20, "factory_worker_tone2": 20, "factory_worker_tone3": 20, "factory_worker_tone4": 20, "factory_worker_tone5": 20, "fairi": 20, "fairy_dark_skin_ton": 20, "fairy_light_skin_ton": 20, "fairy_medium_dark_skin_ton": 20, "fairy_medium_light_skin_ton": 20, "fairy_medium_skin_ton": 20, "fairy_tone1": 20, "fairy_tone2": 20, "fairy_tone3": 20, "fairy_tone4": 20, "fairy_tone5": 20, "falafel": 20, "falkland_island": 20, "fallen_leaf": 20, "famili": [20, 213, 989, 995, 1245, 1255], "family_man_boi": 20, "family_man_boy_boi": 20, "family_man_girl": 20, "family_man_girl_boi": 20, "family_man_girl_girl": 20, "family_man_man_boi": 20, "family_man_man_boy_boi": 20, "family_man_man_girl": 20, "family_man_man_girl_boi": 20, "family_man_man_girl_girl": 20, "family_man_woman_boi": 20, "family_man_woman_boy_boi": 20, "family_man_woman_girl": 20, "family_man_woman_girl_boi": 20, "family_man_woman_girl_girl": 20, "family_mmb": 20, "family_mmbb": 20, "family_mmg": 20, "family_mmgb": 20, "family_mmgg": 20, "family_mwbb": 20, "family_mwg": 20, "family_mwgb": 20, "family_mwgg": 20, "family_woman_boi": 20, "family_woman_boy_boi": 20, "family_woman_girl": 20, "family_woman_girl_boi": 20, "family_woman_girl_girl": 20, "family_woman_woman_boi": 20, "family_woman_woman_boy_boi": 20, "family_woman_woman_girl": 20, "family_woman_woman_girl_boi": 20, "family_woman_woman_girl_girl": 20, "family_wwb": 20, "family_wwbb": 20, "family_wwg": 20, "family_wwgb": 20, "family_wwgg": 20, "farmer": 20, "farmer_dark_skin_ton": 20, "farmer_light_skin_ton": 20, "farmer_medium_dark_skin_ton": 20, "farmer_medium_light_skin_ton": 20, "farmer_medium_skin_ton": 20, "farmer_tone1": 20, "farmer_tone2": 20, "farmer_tone3": 20, "farmer_tone4": 20, "farmer_tone5": 20, "faroe_island": 20, "fast_forward": 20, "fax": 20, "fear": [20, 307, 1023], "feather": 20, "feet": 20, "female_detect": 20, "female_sign": 20, "fencer": 20, "fenc": 20, "ferris_wheel": 20, "ferri": 20, "fi": [20, 1019, 1027, 1044], "field_hockei": 20, "fiji": 20, "file_cabinet": 20, "file_fold": 20, "film_fram": 20, "film_projector": 20, "film_strip": 20, "fingers_cross": 20, "fingers_crossed_tone1": 20, "fingers_crossed_tone2": 20, "fingers_crossed_tone3": 20, "fingers_crossed_tone4": 20, "fingers_crossed_tone5": 20, "finland": 20, "fire": [20, 31, 50, 484], "fire_engin": 20, "fire_extinguish": 20, "firecrack": 20, "firefight": 20, "firefighter_dark_skin_ton": 20, "firefighter_light_skin_ton": 20, "firefighter_medium_dark_skin_ton": 20, "firefighter_medium_light_skin_ton": 20, "firefighter_medium_skin_ton": 20, "firefighter_tone1": 20, "firefighter_tone2": 20, "firefighter_tone3": 20, "firefighter_tone4": 20, "firefighter_tone5": 20, "firework": 20, "first_plac": 20, "first_place_med": 20, "first_quarter_moon": 20, "first_quarter_moon_with_fac": 20, "fish": [20, 22, 1226], "fish_cak": 20, "fishing_pole_and_fish": 20, "fist": 20, "fist_left": 20, "fist_oncom": 20, "fist_rais": 20, "fist_right": 20, "fist_tone1": 20, "fist_tone2": 20, "fist_tone3": 20, "fist_tone4": 20, "fist_tone5": 20, "five": [20, 24, 50, 105, 110, 111, 190, 209, 222, 232, 240, 261, 271, 277, 287, 302, 323, 341, 345, 353, 357, 363, 367, 372, 398, 416, 1148, 1262], "fj": 20, "fk": 20, "flag_ac": 20, "flag_ad": 20, "flag_a": 20, "flag_af": 20, "flag_ag": 20, "flag_ai": 20, "flag_al": 20, "flag_am": 20, "flag_ao": 20, "flag_aq": 20, "flag_ar": 20, "flag_at": 20, "flag_au": 20, "flag_aw": 20, "flag_ax": 20, "flag_az": 20, "flag_ba": 20, "flag_bb": 20, "flag_bd": 20, "flag_b": 20, "flag_bf": 20, "flag_bg": 20, "flag_bh": 20, "flag_bi": 20, "flag_bj": 20, "flag_bl": 20, "flag_black": 20, "flag_bm": 20, "flag_bn": 20, "flag_bo": 20, "flag_bq": 20, "flag_br": 20, "flag_bt": 20, "flag_bv": 20, "flag_bw": 20, "flag_bz": 20, "flag_ca": 20, "flag_cc": 20, "flag_cd": 20, "flag_cf": 20, "flag_cg": 20, "flag_ch": 20, "flag_ci": 20, "flag_ck": 20, "flag_cl": 20, "flag_cm": 20, "flag_cn": 20, "flag_co": 20, "flag_cp": 20, "flag_cr": 20, "flag_cu": 20, "flag_cv": 20, "flag_cw": 20, "flag_cx": 20, "flag_cz": 20, "flag_d": 20, "flag_dg": 20, "flag_dj": 20, "flag_dk": 20, "flag_dm": 20, "flag_do": 20, "flag_dz": 20, "flag_ea": 20, "flag_ec": 20, "flag_e": 20, "flag_eg": 20, "flag_eh": 20, "flag_er": 20, "flag_": 20, "flag_et": 20, "flag_eu": 20, "flag_fi": 20, "flag_fj": 20, "flag_fk": 20, "flag_fm": 20, "flag_fo": 20, "flag_fr": 20, "flag_ga": 20, "flag_gb": 20, "flag_gd": 20, "flag_g": 20, "flag_gf": 20, "flag_gg": 20, "flag_gh": 20, "flag_gi": 20, "flag_gl": 20, "flag_gm": 20, "flag_gn": 20, "flag_gp": 20, "flag_gq": 20, "flag_gr": 20, "flag_gt": 20, "flag_gu": 20, "flag_gw": 20, "flag_hk": 20, "flag_hm": 20, "flag_hn": 20, "flag_hr": 20, "flag_ht": 20, "flag_hu": 20, "flag_ic": 20, "flag_id": 20, "flag_i": 20, "flag_il": 20, "flag_im": 20, "flag_in": 20, "flag_io": 20, "flag_iq": 20, "flag_ir": 20, "flag_it": 20, "flag_j": 20, "flag_jm": 20, "flag_jo": 20, "flag_jp": 20, "flag_k": 20, "flag_kg": 20, "flag_kh": 20, "flag_ki": 20, "flag_km": 20, "flag_kn": 20, "flag_kp": 20, "flag_kr": 20, "flag_kw": 20, "flag_kz": 20, "flag_la": 20, "flag_lb": 20, "flag_lc": 20, "flag_li": 20, "flag_lk": 20, "flag_lr": 20, "flag_l": 20, "flag_lt": 20, "flag_lu": 20, "flag_lv": 20, "flag_ma": 20, "flag_mc": 20, "flag_md": 20, "flag_m": 20, "flag_mf": 20, "flag_mg": 20, "flag_mh": 20, "flag_mk": 20, "flag_ml": 20, "flag_mm": 20, "flag_mn": 20, "flag_mo": 20, "flag_mp": 20, "flag_mq": 20, "flag_mr": 20, "flag_mt": 20, "flag_mu": 20, "flag_mv": 20, "flag_mw": 20, "flag_mx": 20, "flag_mi": 20, "flag_mz": 20, "flag_na": 20, "flag_nc": 20, "flag_n": 20, "flag_nf": 20, "flag_ng": 20, "flag_ni": 20, "flag_nl": 20, "flag_no": 20, "flag_np": 20, "flag_nr": 20, "flag_nu": 20, "flag_nz": 20, "flag_om": 20, "flag_pa": 20, "flag_p": 20, "flag_pf": 20, "flag_pg": 20, "flag_ph": 20, "flag_pk": 20, "flag_pl": 20, "flag_pm": 20, "flag_pn": 20, "flag_pr": 20, "flag_pt": 20, "flag_pw": 20, "flag_pi": 20, "flag_qa": 20, "flag_r": 20, "flag_ro": 20, "flag_ru": 20, "flag_rw": 20, "flag_sa": 20, "flag_sb": 20, "flag_sc": 20, "flag_sd": 20, "flag_s": 20, "flag_sg": 20, "flag_sh": 20, "flag_si": 20, "flag_sj": 20, "flag_sk": 20, "flag_sl": 20, "flag_sm": 20, "flag_sn": 20, "flag_so": 20, "flag_sr": 20, "flag_ss": 20, "flag_st": 20, "flag_sv": 20, "flag_sx": 20, "flag_sz": 20, "flag_ta": 20, "flag_tc": 20, "flag_td": 20, "flag_tf": 20, "flag_tg": 20, "flag_th": 20, "flag_tj": 20, "flag_tk": 20, "flag_tl": 20, "flag_tm": 20, "flag_tn": 20, "flag_to": 20, "flag_tr": 20, "flag_tt": 20, "flag_tv": 20, "flag_tw": 20, "flag_tz": 20, "flag_ua": 20, "flag_ug": 20, "flag_um": 20, "flag_u": 20, "flag_ui": 20, "flag_uz": 20, "flag_va": 20, "flag_vc": 20, "flag_v": 20, "flag_vg": 20, "flag_vi": 20, "flag_vn": 20, "flag_vu": 20, "flag_wf": 20, "flag_whit": 20, "flag_w": 20, "flag_xk": 20, "flag_y": 20, "flag_yt": 20, "flag_za": 20, "flag_zm": 20, "flag_zw": 20, "flag": [20, 36, 190, 192, 206, 217, 228, 258, 264, 267, 271, 274, 277, 302, 305, 316, 318, 332, 348, 374, 377, 391, 510, 516, 517, 522, 523, 524, 531, 533, 535, 724, 739, 816, 840, 846, 855, 869, 892, 895, 897, 987, 989, 1018, 1019, 1020, 1022, 1031, 1038, 1059, 1063, 1125], "flame": [20, 193], "flamingo": 20, "flan": 20, "flashlight": 20, "flatbread": 20, "fleur": 20, "li": [20, 281, 677], "fleur_de_li": 20, "flight_arriv": 20, "flight_departur": 20, "floppy_disk": 20, "flower_playing_card": 20, "fly": [20, 913, 986], "flying_disc": 20, "flying_sauc": 20, "fm": 20, "fo": 20, "fog": 20, "foggi": 20, "fondu": 20, "foot": [20, 60, 458, 950], "foot_dark_skin_ton": 20, "foot_light_skin_ton": 20, "foot_medium_dark_skin_ton": 20, "foot_medium_light_skin_ton": 20, "foot_medium_skin_ton": 20, "foot_tone1": 20, "foot_tone2": 20, "foot_tone3": 20, "foot_tone4": 20, "foot_tone5": 20, "footbal": 20, "footprint": [20, 221, 1114], "fork_and_knif": 20, "fork_and_knife_with_pl": 20, "fork_knife_pl": 20, "fortune_cooki": 20, "fountain": 20, "fountain_pen": 20, "four": [20, 23, 189, 194, 209, 221, 222, 225, 232, 239, 240, 248, 264, 269, 271, 281, 284, 287, 298, 302, 305, 319, 322, 323, 329, 344, 345, 351, 357, 363, 367, 398, 416, 522, 887, 954, 1128, 1136, 1191, 1199, 1224, 1242, 1262], "four_leaf_clov": 20, "fox": [20, 482], "fox_fac": 20, "fr": [20, 201], "frame_photo": 20, "frame_with_pictur": 20, "framed_pictur": 20, "franc": 20, "french_bread": 20, "french_guiana": 20, "french_polynesia": 20, "french_southern_territori": 20, "fried_egg": 20, "fried_shrimp": 20, "fri": 20, "frog": 20, "frowning2": 20, "frown": [20, 23, 60, 1241], "frowning_fac": 20, "frowning_man": 20, "frowning_woman": 20, "fuelpump": 20, "full_moon": 20, "full_moon_with_fac": 20, "funeral_urn": 20, "ga": [20, 357], "gabon": 20, "gambia": 20, "game_di": 20, "garlic": 20, "gay_pride_flag": 20, "gb": [20, 1017], "gd": 20, "ge": [20, 23], "gear": 20, "gem": 20, "gemini": 20, "geni": 20, "georgia": 20, "germani": [20, 190, 191, 416], "gf": 20, "gg": [20, 23, 26], "gh": [20, 1213], "ghana": 20, "ghost": 20, "gi": [20, 272], "gibraltar": 20, "gift": [20, 225, 256], "gift_heart": 20, "giraff": 20, "girl": 20, "girl_tone1": 20, "girl_tone2": 20, "girl_tone3": 20, "girl_tone4": 20, "girl_tone5": 20, "gl": [20, 23, 57], "glass_of_milk": 20, "globe_with_meridian": 20, "glove": 20, "gm": 20, "gn": 20, "goal": [20, 30, 59, 141, 190, 308, 311, 383, 506, 510, 805, 825, 914, 915, 1082, 1260], "goal_net": 20, "goat": 20, "goggl": 20, "golf": 20, "golfer": 20, "golfing_man": 20, "golfing_woman": 20, "gorilla": 20, "gp": 20, "gq": 20, "gr": [20, 329, 345, 1204], "grandma": 20, "grandma_tone1": 20, "grandma_tone2": 20, "grandma_tone3": 20, "grandma_tone4": 20, "grandma_tone5": 20, "grape": 20, "great_britain": 20, "greec": 20, "green_appl": 20, "green_book": 20, "green_circl": 20, "green_heart": 20, "green_salad": 20, "green_squar": 20, "greenland": 20, "grenada": 20, "grey_exclam": 20, "grey_quest": 20, "grin": 20, "gu": 20, "guadeloup": 20, "guam": 20, "guard": [20, 251, 267, 508, 813, 814, 816], "guard_tone1": 20, "guard_tone2": 20, "guard_tone3": 20, "guard_tone4": 20, "guard_tone5": 20, "guardsman": 20, "guardsman_tone1": 20, "guardsman_tone2": 20, "guardsman_tone3": 20, "guardsman_tone4": 20, "guardsman_tone5": 20, "guardswoman": 20, "guatemala": 20, "guernsei": 20, "guide_dog": 20, "guinea": 20, "guinea_bissau": 20, "guitar": 20, "gun": 20, "guyana": 20, "gw": 20, "gy": 20, "haircut": 20, "haircut_man": 20, "haircut_tone1": 20, "haircut_tone2": 20, "haircut_tone3": 20, "haircut_tone4": 20, "haircut_tone5": 20, "haircut_woman": 20, "haiti": 20, "hamburg": 20, "hammer": [20, 190, 265, 305, 867, 877], "hammer_and_pick": 20, "hammer_and_wrench": 20, "hammer_pick": 20, "hamster": 20, "hand": [20, 198, 209, 216, 225, 240, 251, 267, 286, 313, 371, 406, 432, 443, 462, 464, 547, 566, 634, 645, 660, 662, 663, 790, 932, 948, 994, 995, 1011, 1041, 1076, 1094, 1109, 1116, 1241, 1259], "hand_splai": 20, "hand_splayed_tone1": 20, "hand_splayed_tone2": 20, "hand_splayed_tone3": 20, "hand_splayed_tone4": 20, "hand_splayed_tone5": 20, "hand_with_index_and_middle_finger_cross": 20, "hand_with_index_and_middle_fingers_crossed_tone1": 20, "hand_with_index_and_middle_fingers_crossed_tone2": 20, "hand_with_index_and_middle_fingers_crossed_tone3": 20, "hand_with_index_and_middle_fingers_crossed_tone4": 20, "hand_with_index_and_middle_fingers_crossed_tone5": 20, "handbag": 20, "handbal": 20, "handball_tone1": 20, "handball_tone2": 20, "handball_tone3": 20, "handball_tone4": 20, "handball_tone5": 20, "handshak": [20, 814], "handshake_tone1": 20, "handshake_tone2": 20, "handshake_tone3": 20, "handshake_tone4": 20, "handshake_tone5": 20, "hankei": 20, "hash": [20, 221, 227, 228, 239, 245, 258, 264, 265, 268, 272, 274, 277, 281, 302, 309, 323, 363, 398, 518, 539, 887, 1138, 1219], "hatched_chick": 20, "hatching_chick": 20, "head_bandag": 20, "headphon": 20, "headston": 20, "health_work": 20, "health_worker_dark_skin_ton": 20, "health_worker_light_skin_ton": 20, "health_worker_medium_dark_skin_ton": 20, "health_worker_medium_light_skin_ton": 20, "health_worker_medium_skin_ton": 20, "health_worker_tone1": 20, "health_worker_tone2": 20, "health_worker_tone3": 20, "health_worker_tone4": 20, "health_worker_tone5": 20, "hear_no_evil": 20, "heart_decor": 20, "heart_exclam": 20, "heart_ey": 20, "heart_eyes_cat": 20, "heart_on_fir": 20, "heartbeat": 20, "heartpuls": 20, "heavy_check_mark": 20, "heavy_division_sign": 20, "heavy_dollar_sign": 20, "heavy_heart_exclam": 20, "heavy_heart_exclamation_mark_orna": 20, "heavy_minus_sign": 20, "heavy_multiplication_x": 20, "heavy_plus_sign": 20, "hedgehog": 20, "helicopt": 20, "helmet_with_cross": 20, "helmet_with_white_cross": 20, "herb": 20, "hibiscu": 20, "high_bright": 20, "high_heel": 20, "hiking_boot": 20, "hindu_templ": 20, "hippopotamu": 20, "hk": 20, "hn": 20, "hocho": 20, "hockei": 20, "hole": [20, 267, 840, 985, 1015, 1024, 1025, 1026, 1045, 1058], "hondura": 20, "honey_pot": 20, "hong_kong": 20, "hook": [20, 22, 26, 240, 258, 264, 274, 277, 307, 340, 498, 553, 809, 846], "hors": 20, "horse_rac": 20, "horse_racing_tone1": 20, "horse_racing_tone2": 20, "horse_racing_tone3": 20, "horse_racing_tone4": 20, "horse_racing_tone5": 20, "hospit": 20, "hot_dog": 20, "hot_fac": 20, "hot_pepp": 20, "hotdog": 20, "hotel": [20, 195, 416], "hotspr": 20, "hourglass": 20, "hourglass_flowing_sand": 20, "hous": [20, 190], "house_abandon": 20, "house_build": 20, "house_with_garden": 20, "hr": 20, "ht": 20, "hu": [20, 389, 390, 407], "hug": 20, "hugging_fac": 20, "hungari": 20, "hush": 20, "hut": 20, "ic": [20, 162, 443, 544, 573, 1240], "ice_cream": 20, "ice_cub": 20, "ice_hockei": 20, "ice_sk": 20, "icecream": 20, "iceland": 20, "id": [20, 30, 34, 98, 101, 102, 103, 104, 105, 106, 107, 114, 148, 173, 188, 192, 195, 208, 211, 221, 222, 232, 239, 245, 258, 261, 264, 271, 274, 275, 277, 284, 287, 291, 299, 302, 309, 315, 319, 323, 329, 334, 341, 346, 351, 357, 363, 367, 393, 538, 568, 569, 570, 582, 583, 584, 601, 851, 883, 885, 907, 914, 915, 920, 921, 923, 932, 933, 934, 944, 951, 973, 975, 976, 987, 993, 995, 1002, 1021, 1033, 1076, 1103, 1114, 1130, 1169, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1197, 1199, 1217], "ideograph_advantag": 20, "ie": 20, "il": [20, 200], "imp": 20, "inbox_trai": 20, "incoming_envelop": 20, "india": [20, 249, 298, 322, 344, 1191], "indonesia": 20, "infin": [20, 120, 228, 277, 350, 364, 1095, 1096], "information_desk_person": 20, "information_desk_person_tone1": 20, "information_desk_person_tone2": 20, "information_desk_person_tone3": 20, "information_desk_person_tone4": 20, "information_desk_person_tone5": 20, "\u2139": 20, "information_sourc": 20, "interrobang": 20, "iphon": 20, "iq": 20, "ir": [20, 948], "iran": 20, "iraq": 20, "ireland": 20, "island": 20, "isle_of_man": 20, "israel": [20, 249, 298, 1191], "itali": 20, "izakaya_lantern": 20, "jack_o_lantern": 20, "jamaica": 20, "japan": 20, "japanese_castl": 20, "japanese_goblin": 20, "japanese_ogr": 20, "jean": 20, "jersei": 20, "jigsaw": 20, "jm": 20, "jo": [20, 232, 245, 258, 261, 271, 274, 277, 281, 284, 323, 329, 357], "jordan": 20, "joi": 20, "joy_cat": 20, "joystick": 20, "jp": 20, "judg": 20, "judge_dark_skin_ton": 20, "judge_light_skin_ton": 20, "judge_medium_dark_skin_ton": 20, "judge_medium_light_skin_ton": 20, "judge_medium_skin_ton": 20, "judge_tone1": 20, "judge_tone2": 20, "judge_tone3": 20, "judge_tone4": 20, "judge_tone5": 20, "juggler": 20, "juggler_tone1": 20, "juggler_tone2": 20, "juggler_tone3": 20, "juggler_tone4": 20, "juggler_tone5": 20, "juggl": 20, "juggling_tone1": 20, "juggling_tone2": 20, "juggling_tone3": 20, "juggling_tone4": 20, "juggling_tone5": 20, "kaaba": 20, "kangaroo": 20, "karate_uniform": 20, "kayak": 20, "kazakhstan": 20, "ke": 20, "kenya": 20, "key2": 20, "keyboard": [20, 370, 398, 930, 981], "keycap_ten": 20, "kg": 20, "kh": 20, "ki": [20, 230], "kick_scoot": 20, "kimono": 20, "kiribati": 20, "kiss_dark_skin_ton": 20, "kiss_light_skin_ton": 20, "kiss_man_man_dark_skin_ton": 20, "kiss_man_man_dark_skin_tone_light_skin_ton": 20, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 20, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 20, "kiss_man_man_dark_skin_tone_medium_skin_ton": 20, "kiss_man_man_light_skin_ton": 20, "kiss_man_man_light_skin_tone_dark_skin_ton": 20, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 20, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 20, "kiss_man_man_light_skin_tone_medium_skin_ton": 20, "kiss_man_man_medium_dark_skin_ton": 20, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 20, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 20, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 20, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 20, "kiss_man_man_medium_light_skin_ton": 20, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 20, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 20, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 20, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 20, "kiss_man_man_medium_skin_ton": 20, "kiss_man_man_medium_skin_tone_dark_skin_ton": 20, "kiss_man_man_medium_skin_tone_light_skin_ton": 20, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 20, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 20, "kiss_man_man_tone1": 20, "kiss_man_man_tone1_tone2": 20, "kiss_man_man_tone1_tone3": 20, "kiss_man_man_tone1_tone4": 20, "kiss_man_man_tone1_tone5": 20, "kiss_man_man_tone2": 20, "kiss_man_man_tone2_tone1": 20, "kiss_man_man_tone2_tone3": 20, "kiss_man_man_tone2_tone4": 20, "kiss_man_man_tone2_tone5": 20, "kiss_man_man_tone3": 20, "kiss_man_man_tone3_tone1": 20, "kiss_man_man_tone3_tone2": 20, "kiss_man_man_tone3_tone4": 20, "kiss_man_man_tone3_tone5": 20, "kiss_man_man_tone4": 20, "kiss_man_man_tone4_tone1": 20, "kiss_man_man_tone4_tone2": 20, "kiss_man_man_tone4_tone3": 20, "kiss_man_man_tone4_tone5": 20, "kiss_man_man_tone5": 20, "kiss_man_man_tone5_tone1": 20, "kiss_man_man_tone5_tone2": 20, "kiss_man_man_tone5_tone3": 20, "kiss_man_man_tone5_tone4": 20, "kiss_medium_dark_skin_ton": 20, "kiss_medium_light_skin_ton": 20, "kiss_medium_skin_ton": 20, "kiss_mm": 20, "kiss_person_person_dark_skin_tone_light_skin_ton": 20, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 20, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 20, "kiss_person_person_dark_skin_tone_medium_skin_ton": 20, "kiss_person_person_light_skin_tone_dark_skin_ton": 20, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 20, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 20, "kiss_person_person_light_skin_tone_medium_skin_ton": 20, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 20, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 20, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 20, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 20, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 20, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 20, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 20, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 20, "kiss_person_person_medium_skin_tone_dark_skin_ton": 20, "kiss_person_person_medium_skin_tone_light_skin_ton": 20, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 20, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 20, "kiss_person_person_tone1_tone2": 20, "kiss_person_person_tone1_tone3": 20, "kiss_person_person_tone1_tone4": 20, "kiss_person_person_tone1_tone5": 20, "kiss_person_person_tone2_tone1": 20, "kiss_person_person_tone2_tone3": 20, "kiss_person_person_tone2_tone4": 20, "kiss_person_person_tone2_tone5": 20, "kiss_person_person_tone3_tone1": 20, "kiss_person_person_tone3_tone2": 20, "kiss_person_person_tone3_tone4": 20, "kiss_person_person_tone3_tone5": 20, "kiss_person_person_tone4_tone1": 20, "kiss_person_person_tone4_tone2": 20, "kiss_person_person_tone4_tone3": 20, "kiss_person_person_tone4_tone5": 20, "kiss_person_person_tone5_tone1": 20, "kiss_person_person_tone5_tone2": 20, "kiss_person_person_tone5_tone3": 20, "kiss_person_person_tone5_tone4": 20, "kiss_tone1": 20, "kiss_tone2": 20, "kiss_tone3": 20, "kiss_tone4": 20, "kiss_tone5": 20, "kiss_woman_man": 20, "kiss_woman_man_dark_skin_ton": 20, "kiss_woman_man_dark_skin_tone_light_skin_ton": 20, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 20, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 20, "kiss_woman_man_light_skin_ton": 20, "kiss_woman_man_light_skin_tone_dark_skin_ton": 20, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 20, "kiss_woman_man_light_skin_tone_medium_skin_ton": 20, "kiss_woman_man_medium_dark_skin_ton": 20, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 20, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 20, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 20, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 20, "kiss_woman_man_medium_light_skin_ton": 20, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 20, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 20, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 20, "kiss_woman_man_medium_skin_ton": 20, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 20, "kiss_woman_man_medium_skin_tone_light_skin_ton": 20, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 20, "kiss_woman_man_tone1": 20, "kiss_woman_man_tone1_tone2": 20, "kiss_woman_man_tone1_tone3": 20, "kiss_woman_man_tone1_tone4": 20, "kiss_woman_man_tone1_tone5": 20, "kiss_woman_man_tone2": 20, "kiss_woman_man_tone2_tone1": 20, "kiss_woman_man_tone2_tone3": 20, "kiss_woman_man_tone2_tone4": 20, "kiss_woman_man_tone2_tone5": 20, "kiss_woman_man_tone3": 20, "kiss_woman_man_tone3_tone1": 20, "kiss_woman_man_tone3_tone2": 20, "kiss_woman_man_tone3_tone4": 20, "kiss_woman_man_tone3_tone5": 20, "kiss_woman_man_tone4": 20, "kiss_woman_man_tone4_tone1": 20, "kiss_woman_man_tone4_tone2": 20, "kiss_woman_man_tone4_tone3": 20, "kiss_woman_man_tone4_tone5": 20, "kiss_woman_man_tone5": 20, "kiss_woman_man_tone5_tone1": 20, "kiss_woman_man_tone5_tone2": 20, "kiss_woman_man_tone5_tone3": 20, "kiss_woman_man_tone5_tone4": 20, "kiss_woman_woman_dark_skin_ton": 20, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 20, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 20, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 20, "kiss_woman_woman_light_skin_ton": 20, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 20, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 20, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 20, "kiss_woman_woman_medium_dark_skin_ton": 20, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 20, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 20, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 20, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 20, "kiss_woman_woman_medium_light_skin_ton": 20, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 20, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 20, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 20, "kiss_woman_woman_medium_skin_ton": 20, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 20, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 20, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 20, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 20, "kiss_woman_woman_tone1": 20, "kiss_woman_woman_tone1_tone2": 20, "kiss_woman_woman_tone1_tone3": 20, "kiss_woman_woman_tone1_tone4": 20, "kiss_woman_woman_tone1_tone5": 20, "kiss_woman_woman_tone2": 20, "kiss_woman_woman_tone2_tone1": 20, "kiss_woman_woman_tone2_tone3": 20, "kiss_woman_woman_tone2_tone4": 20, "kiss_woman_woman_tone2_tone5": 20, "kiss_woman_woman_tone3": 20, "kiss_woman_woman_tone3_tone1": 20, "kiss_woman_woman_tone3_tone2": 20, "kiss_woman_woman_tone3_tone4": 20, "kiss_woman_woman_tone3_tone5": 20, "kiss_woman_woman_tone4": 20, "kiss_woman_woman_tone4_tone1": 20, "kiss_woman_woman_tone4_tone2": 20, "kiss_woman_woman_tone4_tone3": 20, "kiss_woman_woman_tone4_tone5": 20, "kiss_woman_woman_tone5": 20, "kiss_woman_woman_tone5_tone1": 20, "kiss_woman_woman_tone5_tone2": 20, "kiss_woman_woman_tone5_tone3": 20, "kiss_woman_woman_tone5_tone4": 20, "kiss_ww": 20, "kissing_cat": 20, "kissing_closed_ey": 20, "kissing_smiling_ey": 20, "kite": 20, "kiwi": 20, "kiwi_fruit": 20, "kiwifruit": 20, "km": [20, 210, 212, 367], "kn": 20, "knife": [20, 846, 1015, 1241], "knot": 20, "koala": 20, "koko": 20, "korea": 20, "kosovo": 20, "kp": 20, "kr": 20, "kuwait": 20, "kw": [20, 258, 264, 274, 277], "ky": 20, "kyrgyzstan": 20, "kz": 20, "la": 20, "lab_coat": 20, "label": [20, 27, 28, 46, 210, 212, 259, 272, 286, 289, 322, 328, 367, 454, 459, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 743, 744, 782, 837, 839, 840, 867, 1191, 1198, 1210, 1213], "lacross": 20, "ladder": 20, "lady_beetl": 20, "lao": 20, "large_blue_circl": 20, "large_blue_diamond": 20, "large_orange_diamond": 20, "last_quarter_moon": 20, "last_quarter_moon_with_fac": 20, "latin_cross": 20, "latvia": 20, "laugh": [20, 372], "lb": 20, "lc": [20, 226], "leafy_green": 20, "leav": [20, 37, 110, 190, 191, 197, 200, 229, 258, 281, 318, 371, 409, 512, 646, 648, 654, 656, 657, 672, 674, 675, 835, 838, 850, 855, 865, 887, 993, 994, 1019, 1041, 1130, 1204], "lebanon": 20, "ledger": 20, "left_facing_fist": 20, "left_facing_fist_tone1": 20, "left_facing_fist_tone2": 20, "left_facing_fist_tone3": 20, "left_facing_fist_tone4": 20, "left_facing_fist_tone5": 20, "left_fist": 20, "left_fist_tone1": 20, "left_fist_tone2": 20, "left_fist_tone3": 20, "left_fist_tone4": 20, "left_fist_tone5": 20, "left_luggag": 20, "left_right_arrow": 20, "left_speech_bubbl": 20, "leftwards_arrow_with_hook": 20, "leg": [20, 23], "leg_dark_skin_ton": 20, "leg_light_skin_ton": 20, "leg_medium_dark_skin_ton": 20, "leg_medium_light_skin_ton": 20, "leg_medium_skin_ton": 20, "leg_tone1": 20, "leg_tone2": 20, "leg_tone3": 20, "leg_tone4": 20, "leg_tone5": 20, "lemon": 20, "leo": [20, 389, 390, 407], "leopard": 20, "lesotho": 20, "level_slid": 20, "levit": 20, "levitate_tone1": 20, "levitate_tone2": 20, "levitate_tone3": 20, "levitate_tone4": 20, "levitate_tone5": 20, "liar": 20, "liberia": 20, "libra": 20, "libya": 20, "liechtenstein": 20, "lifter": 20, "lifter_tone1": 20, "lifter_tone2": 20, "lifter_tone3": 20, "lifter_tone4": 20, "lifter_tone5": 20, "light_rail": 20, "linked_paperclip": 20, "lion": 20, "lion_fac": 20, "lip": 20, "lipstick": 20, "lithuania": 20, "lizard": 20, "lk": 20, "llama": 20, "lobster": 20, "lock": [20, 190, 192, 221, 225, 258, 264, 267, 274, 277, 293, 294, 296, 305, 326, 339, 340, 353, 357, 372, 381, 407, 480, 532, 620, 803, 809, 812, 814, 815, 835, 839, 840, 877, 885, 890, 895, 925, 1002, 1036, 1041, 1043, 1051, 1058, 1100, 1191, 1241, 1253], "lock_with_ink_pen": 20, "lollipop": 20, "long_drum": 20, "loud_sound": 20, "loudspeak": 20, "love_hotel": 20, "love_lett": 20, "love_you_gestur": 20, "love_you_gesture_dark_skin_ton": 20, "love_you_gesture_light_skin_ton": 20, "love_you_gesture_medium_dark_skin_ton": 20, "love_you_gesture_medium_light_skin_ton": 20, "love_you_gesture_medium_skin_ton": 20, "love_you_gesture_tone1": 20, "love_you_gesture_tone2": 20, "love_you_gesture_tone3": 20, "love_you_gesture_tone4": 20, "love_you_gesture_tone5": 20, "low_bright": 20, "lower_left_ballpoint_pen": 20, "lower_left_crayon": 20, "lower_left_fountain_pen": 20, "lower_left_paintbrush": 20, "lr": 20, "l": [20, 26, 48, 50, 54, 90, 115, 137, 168, 193, 197, 201, 208, 209, 211, 212, 217, 222, 227, 232, 237, 239, 240, 241, 242, 245, 248, 253, 254, 258, 261, 264, 267, 269, 271, 274, 277, 281, 284, 287, 290, 295, 299, 302, 304, 305, 309, 319, 323, 325, 326, 329, 341, 345, 351, 354, 357, 363, 367, 369, 370, 390, 392, 393, 398, 403, 470, 471, 478, 482, 494, 499, 500, 506, 510, 538, 539, 552, 564, 590, 637, 642, 660, 690, 742, 815, 838, 839, 840, 851, 865, 887, 888, 914, 915, 916, 917, 918, 920, 921, 922, 925, 927, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 952, 955, 956, 959, 960, 962, 963, 964, 966, 967, 968, 973, 978, 982, 985, 986, 988, 993, 994, 995, 996, 997, 1004, 1006, 1011, 1012, 1014, 1016, 1017, 1019, 1020, 1021, 1024, 1026, 1029, 1034, 1042, 1045, 1048, 1049, 1050, 1059, 1063, 1065, 1066, 1067, 1068, 1078, 1080, 1081, 1086, 1088, 1109, 1117, 1119, 1122, 1123, 1127, 1129, 1137, 1146, 1173, 1233, 1250], "lu": 20, "luggag": 20, "lung": 20, "luxembourg": 20, "lv": 20, "ly": 20, "lying_fac": 20, "ma": 20, "macau": 20, "macedonia": 20, "madagascar": 20, "mag": 20, "mag_right": 20, "mage": 20, "mage_dark_skin_ton": 20, "mage_light_skin_ton": 20, "mage_medium_dark_skin_ton": 20, "mage_medium_light_skin_ton": 20, "mage_medium_skin_ton": 20, "mage_tone1": 20, "mage_tone2": 20, "mage_tone3": 20, "mage_tone4": 20, "mage_tone5": 20, "magic_wand": 20, "magnet": 20, "mahjong": 20, "mailbox": 20, "mailbox_clos": 20, "mailbox_with_mail": 20, "mailbox_with_no_mail": 20, "malawi": 20, "malaysia": 20, "maldiv": 20, "male_danc": 20, "male_dancer_tone1": 20, "male_dancer_tone2": 20, "male_dancer_tone3": 20, "male_dancer_tone4": 20, "male_dancer_tone5": 20, "male_detect": 20, "male_sign": 20, "mali": 20, "malta": 20, "mammoth": 20, "man": [20, 25, 115, 141, 161, 190, 192, 198, 199, 206, 212, 216, 222, 224, 232, 233, 239, 242, 245, 250, 252, 254, 265, 271, 278, 281, 305, 326, 345, 398, 403, 405, 416, 526, 537, 625, 634, 646, 725, 808, 838, 846, 865, 913, 914, 915, 918, 919, 923, 930, 931, 932, 933, 934, 938, 940, 942, 945, 949, 950, 951, 967, 970, 971, 974, 975, 977, 978, 980, 981, 995, 1002, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1025, 1031, 1033, 1034, 1036, 1038, 1040, 1041, 1044, 1046, 1052, 1059, 1062, 1063, 1065, 1082, 1083, 1238, 1240, 1258, 1259], "man_artist": 20, "man_artist_dark_skin_ton": 20, "man_artist_light_skin_ton": 20, "man_artist_medium_dark_skin_ton": 20, "man_artist_medium_light_skin_ton": 20, "man_artist_medium_skin_ton": 20, "man_artist_tone1": 20, "man_artist_tone2": 20, "man_artist_tone3": 20, "man_artist_tone4": 20, "man_artist_tone5": 20, "man_astronaut": 20, "man_astronaut_dark_skin_ton": 20, "man_astronaut_light_skin_ton": 20, "man_astronaut_medium_dark_skin_ton": 20, "man_astronaut_medium_light_skin_ton": 20, "man_astronaut_medium_skin_ton": 20, "man_astronaut_tone1": 20, "man_astronaut_tone2": 20, "man_astronaut_tone3": 20, "man_astronaut_tone4": 20, "man_astronaut_tone5": 20, "man_bald": 20, "man_bald_dark_skin_ton": 20, "man_bald_light_skin_ton": 20, "man_bald_medium_dark_skin_ton": 20, "man_bald_medium_light_skin_ton": 20, "man_bald_medium_skin_ton": 20, "man_bald_tone1": 20, "man_bald_tone2": 20, "man_bald_tone3": 20, "man_bald_tone4": 20, "man_bald_tone5": 20, "man_beard": 20, "man_bik": 20, "man_biking_dark_skin_ton": 20, "man_biking_light_skin_ton": 20, "man_biking_medium_dark_skin_ton": 20, "man_biking_medium_light_skin_ton": 20, "man_biking_medium_skin_ton": 20, "man_biking_tone1": 20, "man_biking_tone2": 20, "man_biking_tone3": 20, "man_biking_tone4": 20, "man_biking_tone5": 20, "man_bouncing_bal": 20, "man_bouncing_ball_dark_skin_ton": 20, "man_bouncing_ball_light_skin_ton": 20, "man_bouncing_ball_medium_dark_skin_ton": 20, "man_bouncing_ball_medium_light_skin_ton": 20, "man_bouncing_ball_medium_skin_ton": 20, "man_bouncing_ball_tone1": 20, "man_bouncing_ball_tone2": 20, "man_bouncing_ball_tone3": 20, "man_bouncing_ball_tone4": 20, "man_bouncing_ball_tone5": 20, "man_bow": 20, "man_bowing_dark_skin_ton": 20, "man_bowing_light_skin_ton": 20, "man_bowing_medium_dark_skin_ton": 20, "man_bowing_medium_light_skin_ton": 20, "man_bowing_medium_skin_ton": 20, "man_bowing_tone1": 20, "man_bowing_tone2": 20, "man_bowing_tone3": 20, "man_bowing_tone4": 20, "man_bowing_tone5": 20, "man_cartwheel": 20, "man_cartwheeling_dark_skin_ton": 20, "man_cartwheeling_light_skin_ton": 20, "man_cartwheeling_medium_dark_skin_ton": 20, "man_cartwheeling_medium_light_skin_ton": 20, "man_cartwheeling_medium_skin_ton": 20, "man_cartwheeling_tone1": 20, "man_cartwheeling_tone2": 20, "man_cartwheeling_tone3": 20, "man_cartwheeling_tone4": 20, "man_cartwheeling_tone5": 20, "man_climb": 20, "man_climbing_dark_skin_ton": 20, "man_climbing_light_skin_ton": 20, "man_climbing_medium_dark_skin_ton": 20, "man_climbing_medium_light_skin_ton": 20, "man_climbing_medium_skin_ton": 20, "man_climbing_tone1": 20, "man_climbing_tone2": 20, "man_climbing_tone3": 20, "man_climbing_tone4": 20, "man_climbing_tone5": 20, "man_construction_work": 20, "man_construction_worker_dark_skin_ton": 20, "man_construction_worker_light_skin_ton": 20, "man_construction_worker_medium_dark_skin_ton": 20, "man_construction_worker_medium_light_skin_ton": 20, "man_construction_worker_medium_skin_ton": 20, "man_construction_worker_tone1": 20, "man_construction_worker_tone2": 20, "man_construction_worker_tone3": 20, "man_construction_worker_tone4": 20, "man_construction_worker_tone5": 20, "man_cook": 20, "man_cook_dark_skin_ton": 20, "man_cook_light_skin_ton": 20, "man_cook_medium_dark_skin_ton": 20, "man_cook_medium_light_skin_ton": 20, "man_cook_medium_skin_ton": 20, "man_cook_tone1": 20, "man_cook_tone2": 20, "man_cook_tone3": 20, "man_cook_tone4": 20, "man_cook_tone5": 20, "man_curly_hair": 20, "man_curly_haired_dark_skin_ton": 20, "man_curly_haired_light_skin_ton": 20, "man_curly_haired_medium_dark_skin_ton": 20, "man_curly_haired_medium_light_skin_ton": 20, "man_curly_haired_medium_skin_ton": 20, "man_curly_haired_tone1": 20, "man_curly_haired_tone2": 20, "man_curly_haired_tone3": 20, "man_curly_haired_tone4": 20, "man_curly_haired_tone5": 20, "man_danc": 20, "man_dancing_tone1": 20, "man_dancing_tone2": 20, "man_dancing_tone3": 20, "man_dancing_tone4": 20, "man_dancing_tone5": 20, "man_dark_skin_tone_beard": 20, "man_detect": 20, "man_detective_dark_skin_ton": 20, "man_detective_light_skin_ton": 20, "man_detective_medium_dark_skin_ton": 20, "man_detective_medium_light_skin_ton": 20, "man_detective_medium_skin_ton": 20, "man_detective_tone1": 20, "man_detective_tone2": 20, "man_detective_tone3": 20, "man_detective_tone4": 20, "man_detective_tone5": 20, "man_elf": 20, "man_elf_dark_skin_ton": 20, "man_elf_light_skin_ton": 20, "man_elf_medium_dark_skin_ton": 20, "man_elf_medium_light_skin_ton": 20, "man_elf_medium_skin_ton": 20, "man_elf_tone1": 20, "man_elf_tone2": 20, "man_elf_tone3": 20, "man_elf_tone4": 20, "man_elf_tone5": 20, "man_facepalm": 20, "man_facepalming_dark_skin_ton": 20, "man_facepalming_light_skin_ton": 20, "man_facepalming_medium_dark_skin_ton": 20, "man_facepalming_medium_light_skin_ton": 20, "man_facepalming_medium_skin_ton": 20, "man_facepalming_tone1": 20, "man_facepalming_tone2": 20, "man_facepalming_tone3": 20, "man_facepalming_tone4": 20, "man_facepalming_tone5": 20, "man_factory_work": 20, "man_factory_worker_dark_skin_ton": 20, "man_factory_worker_light_skin_ton": 20, "man_factory_worker_medium_dark_skin_ton": 20, "man_factory_worker_medium_light_skin_ton": 20, "man_factory_worker_medium_skin_ton": 20, "man_factory_worker_tone1": 20, "man_factory_worker_tone2": 20, "man_factory_worker_tone3": 20, "man_factory_worker_tone4": 20, "man_factory_worker_tone5": 20, "man_fairi": 20, "man_fairy_dark_skin_ton": 20, "man_fairy_light_skin_ton": 20, "man_fairy_medium_dark_skin_ton": 20, "man_fairy_medium_light_skin_ton": 20, "man_fairy_medium_skin_ton": 20, "man_fairy_tone1": 20, "man_fairy_tone2": 20, "man_fairy_tone3": 20, "man_fairy_tone4": 20, "man_fairy_tone5": 20, "man_farm": 20, "man_farmer_dark_skin_ton": 20, "man_farmer_light_skin_ton": 20, "man_farmer_medium_dark_skin_ton": 20, "man_farmer_medium_light_skin_ton": 20, "man_farmer_medium_skin_ton": 20, "man_farmer_tone1": 20, "man_farmer_tone2": 20, "man_farmer_tone3": 20, "man_farmer_tone4": 20, "man_farmer_tone5": 20, "man_feeding_babi": 20, "man_feeding_baby_dark_skin_ton": 20, "man_feeding_baby_light_skin_ton": 20, "man_feeding_baby_medium_dark_skin_ton": 20, "man_feeding_baby_medium_light_skin_ton": 20, "man_feeding_baby_medium_skin_ton": 20, "man_feeding_baby_tone1": 20, "man_feeding_baby_tone2": 20, "man_feeding_baby_tone3": 20, "man_feeding_baby_tone4": 20, "man_feeding_baby_tone5": 20, "man_firefight": 20, "man_firefighter_dark_skin_ton": 20, "man_firefighter_light_skin_ton": 20, "man_firefighter_medium_dark_skin_ton": 20, "man_firefighter_medium_light_skin_ton": 20, "man_firefighter_medium_skin_ton": 20, "man_firefighter_tone1": 20, "man_firefighter_tone2": 20, "man_firefighter_tone3": 20, "man_firefighter_tone4": 20, "man_firefighter_tone5": 20, "man_frown": 20, "man_frowning_dark_skin_ton": 20, "man_frowning_light_skin_ton": 20, "man_frowning_medium_dark_skin_ton": 20, "man_frowning_medium_light_skin_ton": 20, "man_frowning_medium_skin_ton": 20, "man_frowning_tone1": 20, "man_frowning_tone2": 20, "man_frowning_tone3": 20, "man_frowning_tone4": 20, "man_frowning_tone5": 20, "man_geni": 20, "man_gesturing_no": 20, "man_gesturing_no_dark_skin_ton": 20, "man_gesturing_no_light_skin_ton": 20, "man_gesturing_no_medium_dark_skin_ton": 20, "man_gesturing_no_medium_light_skin_ton": 20, "man_gesturing_no_medium_skin_ton": 20, "man_gesturing_no_tone1": 20, "man_gesturing_no_tone2": 20, "man_gesturing_no_tone3": 20, "man_gesturing_no_tone4": 20, "man_gesturing_no_tone5": 20, "man_gesturing_ok": 20, "man_gesturing_ok_dark_skin_ton": 20, "man_gesturing_ok_light_skin_ton": 20, "man_gesturing_ok_medium_dark_skin_ton": 20, "man_gesturing_ok_medium_light_skin_ton": 20, "man_gesturing_ok_medium_skin_ton": 20, "man_gesturing_ok_tone1": 20, "man_gesturing_ok_tone2": 20, "man_gesturing_ok_tone3": 20, "man_gesturing_ok_tone4": 20, "man_gesturing_ok_tone5": 20, "man_getting_face_massag": 20, "man_getting_face_massage_dark_skin_ton": 20, "man_getting_face_massage_light_skin_ton": 20, "man_getting_face_massage_medium_dark_skin_ton": 20, "man_getting_face_massage_medium_light_skin_ton": 20, "man_getting_face_massage_medium_skin_ton": 20, "man_getting_face_massage_tone1": 20, "man_getting_face_massage_tone2": 20, "man_getting_face_massage_tone3": 20, "man_getting_face_massage_tone4": 20, "man_getting_face_massage_tone5": 20, "man_getting_haircut": 20, "man_getting_haircut_dark_skin_ton": 20, "man_getting_haircut_light_skin_ton": 20, "man_getting_haircut_medium_dark_skin_ton": 20, "man_getting_haircut_medium_light_skin_ton": 20, "man_getting_haircut_medium_skin_ton": 20, "man_getting_haircut_tone1": 20, "man_getting_haircut_tone2": 20, "man_getting_haircut_tone3": 20, "man_getting_haircut_tone4": 20, "man_getting_haircut_tone5": 20, "man_golf": 20, "man_golfing_dark_skin_ton": 20, "man_golfing_light_skin_ton": 20, "man_golfing_medium_dark_skin_ton": 20, "man_golfing_medium_light_skin_ton": 20, "man_golfing_medium_skin_ton": 20, "man_golfing_tone1": 20, "man_golfing_tone2": 20, "man_golfing_tone3": 20, "man_golfing_tone4": 20, "man_golfing_tone5": 20, "man_guard": 20, "man_guard_dark_skin_ton": 20, "man_guard_light_skin_ton": 20, "man_guard_medium_dark_skin_ton": 20, "man_guard_medium_light_skin_ton": 20, "man_guard_medium_skin_ton": 20, "man_guard_tone1": 20, "man_guard_tone2": 20, "man_guard_tone3": 20, "man_guard_tone4": 20, "man_guard_tone5": 20, "man_health_work": 20, "man_health_worker_dark_skin_ton": 20, "man_health_worker_light_skin_ton": 20, "man_health_worker_medium_dark_skin_ton": 20, "man_health_worker_medium_light_skin_ton": 20, "man_health_worker_medium_skin_ton": 20, "man_health_worker_tone1": 20, "man_health_worker_tone2": 20, "man_health_worker_tone3": 20, "man_health_worker_tone4": 20, "man_health_worker_tone5": 20, "man_in_business_suit_levit": 20, "man_in_business_suit_levitating_dark_skin_ton": 20, "man_in_business_suit_levitating_light_skin_ton": 20, "man_in_business_suit_levitating_medium_dark_skin_ton": 20, "man_in_business_suit_levitating_medium_light_skin_ton": 20, "man_in_business_suit_levitating_medium_skin_ton": 20, "man_in_business_suit_levitating_tone1": 20, "man_in_business_suit_levitating_tone2": 20, "man_in_business_suit_levitating_tone3": 20, "man_in_business_suit_levitating_tone4": 20, "man_in_business_suit_levitating_tone5": 20, "man_in_lotus_posit": 20, "man_in_lotus_position_dark_skin_ton": 20, "man_in_lotus_position_light_skin_ton": 20, "man_in_lotus_position_medium_dark_skin_ton": 20, "man_in_lotus_position_medium_light_skin_ton": 20, "man_in_lotus_position_medium_skin_ton": 20, "man_in_lotus_position_tone1": 20, "man_in_lotus_position_tone2": 20, "man_in_lotus_position_tone3": 20, "man_in_lotus_position_tone4": 20, "man_in_lotus_position_tone5": 20, "man_in_manual_wheelchair": 20, "man_in_manual_wheelchair_dark_skin_ton": 20, "man_in_manual_wheelchair_light_skin_ton": 20, "man_in_manual_wheelchair_medium_dark_skin_ton": 20, "man_in_manual_wheelchair_medium_light_skin_ton": 20, "man_in_manual_wheelchair_medium_skin_ton": 20, "man_in_manual_wheelchair_tone1": 20, "man_in_manual_wheelchair_tone2": 20, "man_in_manual_wheelchair_tone3": 20, "man_in_manual_wheelchair_tone4": 20, "man_in_manual_wheelchair_tone5": 20, "man_in_motorized_wheelchair": 20, "man_in_motorized_wheelchair_dark_skin_ton": 20, "man_in_motorized_wheelchair_light_skin_ton": 20, "man_in_motorized_wheelchair_medium_dark_skin_ton": 20, "man_in_motorized_wheelchair_medium_light_skin_ton": 20, "man_in_motorized_wheelchair_medium_skin_ton": 20, "man_in_motorized_wheelchair_tone1": 20, "man_in_motorized_wheelchair_tone2": 20, "man_in_motorized_wheelchair_tone3": 20, "man_in_motorized_wheelchair_tone4": 20, "man_in_motorized_wheelchair_tone5": 20, "man_in_steamy_room": 20, "man_in_steamy_room_dark_skin_ton": 20, "man_in_steamy_room_light_skin_ton": 20, "man_in_steamy_room_medium_dark_skin_ton": 20, "man_in_steamy_room_medium_light_skin_ton": 20, "man_in_steamy_room_medium_skin_ton": 20, "man_in_steamy_room_tone1": 20, "man_in_steamy_room_tone2": 20, "man_in_steamy_room_tone3": 20, "man_in_steamy_room_tone4": 20, "man_in_steamy_room_tone5": 20, "man_in_tuxedo": 20, "man_in_tuxedo_dark_skin_ton": 20, "man_in_tuxedo_light_skin_ton": 20, "man_in_tuxedo_medium_dark_skin_ton": 20, "man_in_tuxedo_medium_light_skin_ton": 20, "man_in_tuxedo_medium_skin_ton": 20, "man_in_tuxedo_tone1": 20, "man_in_tuxedo_tone2": 20, "man_in_tuxedo_tone3": 20, "man_in_tuxedo_tone4": 20, "man_in_tuxedo_tone5": 20, "man_judg": 20, "man_judge_dark_skin_ton": 20, "man_judge_light_skin_ton": 20, "man_judge_medium_dark_skin_ton": 20, "man_judge_medium_light_skin_ton": 20, "man_judge_medium_skin_ton": 20, "man_judge_tone1": 20, "man_judge_tone2": 20, "man_judge_tone3": 20, "man_judge_tone4": 20, "man_judge_tone5": 20, "man_juggl": 20, "man_juggling_dark_skin_ton": 20, "man_juggling_light_skin_ton": 20, "man_juggling_medium_dark_skin_ton": 20, "man_juggling_medium_light_skin_ton": 20, "man_juggling_medium_skin_ton": 20, "man_juggling_tone1": 20, "man_juggling_tone2": 20, "man_juggling_tone3": 20, "man_juggling_tone4": 20, "man_juggling_tone5": 20, "man_kneel": 20, "man_kneeling_dark_skin_ton": 20, "man_kneeling_light_skin_ton": 20, "man_kneeling_medium_dark_skin_ton": 20, "man_kneeling_medium_light_skin_ton": 20, "man_kneeling_medium_skin_ton": 20, "man_kneeling_tone1": 20, "man_kneeling_tone2": 20, "man_kneeling_tone3": 20, "man_kneeling_tone4": 20, "man_kneeling_tone5": 20, "man_lifting_weight": 20, "man_lifting_weights_dark_skin_ton": 20, "man_lifting_weights_light_skin_ton": 20, "man_lifting_weights_medium_dark_skin_ton": 20, "man_lifting_weights_medium_light_skin_ton": 20, "man_lifting_weights_medium_skin_ton": 20, "man_lifting_weights_tone1": 20, "man_lifting_weights_tone2": 20, "man_lifting_weights_tone3": 20, "man_lifting_weights_tone4": 20, "man_lifting_weights_tone5": 20, "man_light_skin_tone_beard": 20, "man_mag": 20, "man_mage_dark_skin_ton": 20, "man_mage_light_skin_ton": 20, "man_mage_medium_dark_skin_ton": 20, "man_mage_medium_light_skin_ton": 20, "man_mage_medium_skin_ton": 20, "man_mage_tone1": 20, "man_mage_tone2": 20, "man_mage_tone3": 20, "man_mage_tone4": 20, "man_mage_tone5": 20, "man_mechan": 20, "man_mechanic_dark_skin_ton": 20, "man_mechanic_light_skin_ton": 20, "man_mechanic_medium_dark_skin_ton": 20, "man_mechanic_medium_light_skin_ton": 20, "man_mechanic_medium_skin_ton": 20, "man_mechanic_tone1": 20, "man_mechanic_tone2": 20, "man_mechanic_tone3": 20, "man_mechanic_tone4": 20, "man_mechanic_tone5": 20, "man_medium_dark_skin_tone_beard": 20, "man_medium_light_skin_tone_beard": 20, "man_medium_skin_tone_beard": 20, "man_mountain_bik": 20, "man_mountain_biking_dark_skin_ton": 20, "man_mountain_biking_light_skin_ton": 20, "man_mountain_biking_medium_dark_skin_ton": 20, "man_mountain_biking_medium_light_skin_ton": 20, "man_mountain_biking_medium_skin_ton": 20, "man_mountain_biking_tone1": 20, "man_mountain_biking_tone2": 20, "man_mountain_biking_tone3": 20, "man_mountain_biking_tone4": 20, "man_mountain_biking_tone5": 20, "man_office_work": 20, "man_office_worker_dark_skin_ton": 20, "man_office_worker_light_skin_ton": 20, "man_office_worker_medium_dark_skin_ton": 20, "man_office_worker_medium_light_skin_ton": 20, "man_office_worker_medium_skin_ton": 20, "man_office_worker_tone1": 20, "man_office_worker_tone2": 20, "man_office_worker_tone3": 20, "man_office_worker_tone4": 20, "man_office_worker_tone5": 20, "man_pilot": 20, "man_pilot_dark_skin_ton": 20, "man_pilot_light_skin_ton": 20, "man_pilot_medium_dark_skin_ton": 20, "man_pilot_medium_light_skin_ton": 20, "man_pilot_medium_skin_ton": 20, "man_pilot_tone1": 20, "man_pilot_tone2": 20, "man_pilot_tone3": 20, "man_pilot_tone4": 20, "man_pilot_tone5": 20, "man_playing_handbal": 20, "man_playing_handball_dark_skin_ton": 20, "man_playing_handball_light_skin_ton": 20, "man_playing_handball_medium_dark_skin_ton": 20, "man_playing_handball_medium_light_skin_ton": 20, "man_playing_handball_medium_skin_ton": 20, "man_playing_handball_tone1": 20, "man_playing_handball_tone2": 20, "man_playing_handball_tone3": 20, "man_playing_handball_tone4": 20, "man_playing_handball_tone5": 20, "man_playing_water_polo": 20, "man_playing_water_polo_dark_skin_ton": 20, "man_playing_water_polo_light_skin_ton": 20, "man_playing_water_polo_medium_dark_skin_ton": 20, "man_playing_water_polo_medium_light_skin_ton": 20, "man_playing_water_polo_medium_skin_ton": 20, "man_playing_water_polo_tone1": 20, "man_playing_water_polo_tone2": 20, "man_playing_water_polo_tone3": 20, "man_playing_water_polo_tone4": 20, "man_playing_water_polo_tone5": 20, "man_police_offic": 20, "man_police_officer_dark_skin_ton": 20, "man_police_officer_light_skin_ton": 20, "man_police_officer_medium_dark_skin_ton": 20, "man_police_officer_medium_light_skin_ton": 20, "man_police_officer_medium_skin_ton": 20, "man_police_officer_tone1": 20, "man_police_officer_tone2": 20, "man_police_officer_tone3": 20, "man_police_officer_tone4": 20, "man_police_officer_tone5": 20, "man_pout": 20, "man_pouting_dark_skin_ton": 20, "man_pouting_light_skin_ton": 20, "man_pouting_medium_dark_skin_ton": 20, "man_pouting_medium_light_skin_ton": 20, "man_pouting_medium_skin_ton": 20, "man_pouting_tone1": 20, "man_pouting_tone2": 20, "man_pouting_tone3": 20, "man_pouting_tone4": 20, "man_pouting_tone5": 20, "man_raising_hand": 20, "man_raising_hand_dark_skin_ton": 20, "man_raising_hand_light_skin_ton": 20, "man_raising_hand_medium_dark_skin_ton": 20, "man_raising_hand_medium_light_skin_ton": 20, "man_raising_hand_medium_skin_ton": 20, "man_raising_hand_tone1": 20, "man_raising_hand_tone2": 20, "man_raising_hand_tone3": 20, "man_raising_hand_tone4": 20, "man_raising_hand_tone5": 20, "man_red_hair": 20, "man_red_haired_dark_skin_ton": 20, "man_red_haired_light_skin_ton": 20, "man_red_haired_medium_dark_skin_ton": 20, "man_red_haired_medium_light_skin_ton": 20, "man_red_haired_medium_skin_ton": 20, "man_red_haired_tone1": 20, "man_red_haired_tone2": 20, "man_red_haired_tone3": 20, "man_red_haired_tone4": 20, "man_red_haired_tone5": 20, "man_rowing_boat": 20, "man_rowing_boat_dark_skin_ton": 20, "man_rowing_boat_light_skin_ton": 20, "man_rowing_boat_medium_dark_skin_ton": 20, "man_rowing_boat_medium_light_skin_ton": 20, "man_rowing_boat_medium_skin_ton": 20, "man_rowing_boat_tone1": 20, "man_rowing_boat_tone2": 20, "man_rowing_boat_tone3": 20, "man_rowing_boat_tone4": 20, "man_rowing_boat_tone5": 20, "man_run": 20, "man_running_dark_skin_ton": 20, "man_running_light_skin_ton": 20, "man_running_medium_dark_skin_ton": 20, "man_running_medium_light_skin_ton": 20, "man_running_medium_skin_ton": 20, "man_running_tone1": 20, "man_running_tone2": 20, "man_running_tone3": 20, "man_running_tone4": 20, "man_running_tone5": 20, "man_scientist": 20, "man_scientist_dark_skin_ton": 20, "man_scientist_light_skin_ton": 20, "man_scientist_medium_dark_skin_ton": 20, "man_scientist_medium_light_skin_ton": 20, "man_scientist_medium_skin_ton": 20, "man_scientist_tone1": 20, "man_scientist_tone2": 20, "man_scientist_tone3": 20, "man_scientist_tone4": 20, "man_scientist_tone5": 20, "man_shrug": 20, "man_shrugging_dark_skin_ton": 20, "man_shrugging_light_skin_ton": 20, "man_shrugging_medium_dark_skin_ton": 20, "man_shrugging_medium_light_skin_ton": 20, "man_shrugging_medium_skin_ton": 20, "man_shrugging_tone1": 20, "man_shrugging_tone2": 20, "man_shrugging_tone3": 20, "man_shrugging_tone4": 20, "man_shrugging_tone5": 20, "man_sing": 20, "man_singer_dark_skin_ton": 20, "man_singer_light_skin_ton": 20, "man_singer_medium_dark_skin_ton": 20, "man_singer_medium_light_skin_ton": 20, "man_singer_medium_skin_ton": 20, "man_singer_tone1": 20, "man_singer_tone2": 20, "man_singer_tone3": 20, "man_singer_tone4": 20, "man_singer_tone5": 20, "man_stand": 20, "man_standing_dark_skin_ton": 20, "man_standing_light_skin_ton": 20, "man_standing_medium_dark_skin_ton": 20, "man_standing_medium_light_skin_ton": 20, "man_standing_medium_skin_ton": 20, "man_standing_tone1": 20, "man_standing_tone2": 20, "man_standing_tone3": 20, "man_standing_tone4": 20, "man_standing_tone5": 20, "man_stud": 20, "man_student_dark_skin_ton": 20, "man_student_light_skin_ton": 20, "man_student_medium_dark_skin_ton": 20, "man_student_medium_light_skin_ton": 20, "man_student_medium_skin_ton": 20, "man_student_tone1": 20, "man_student_tone2": 20, "man_student_tone3": 20, "man_student_tone4": 20, "man_student_tone5": 20, "man_superhero": 20, "man_superhero_dark_skin_ton": 20, "man_superhero_light_skin_ton": 20, "man_superhero_medium_dark_skin_ton": 20, "man_superhero_medium_light_skin_ton": 20, "man_superhero_medium_skin_ton": 20, "man_superhero_tone1": 20, "man_superhero_tone2": 20, "man_superhero_tone3": 20, "man_superhero_tone4": 20, "man_superhero_tone5": 20, "man_supervillain": 20, "man_supervillain_dark_skin_ton": 20, "man_supervillain_light_skin_ton": 20, "man_supervillain_medium_dark_skin_ton": 20, "man_supervillain_medium_light_skin_ton": 20, "man_supervillain_medium_skin_ton": 20, "man_supervillain_tone1": 20, "man_supervillain_tone2": 20, "man_supervillain_tone3": 20, "man_supervillain_tone4": 20, "man_supervillain_tone5": 20, "man_surf": 20, "man_surfing_dark_skin_ton": 20, "man_surfing_light_skin_ton": 20, "man_surfing_medium_dark_skin_ton": 20, "man_surfing_medium_light_skin_ton": 20, "man_surfing_medium_skin_ton": 20, "man_surfing_tone1": 20, "man_surfing_tone2": 20, "man_surfing_tone3": 20, "man_surfing_tone4": 20, "man_surfing_tone5": 20, "man_swim": 20, "man_swimming_dark_skin_ton": 20, "man_swimming_light_skin_ton": 20, "man_swimming_medium_dark_skin_ton": 20, "man_swimming_medium_light_skin_ton": 20, "man_swimming_medium_skin_ton": 20, "man_swimming_tone1": 20, "man_swimming_tone2": 20, "man_swimming_tone3": 20, "man_swimming_tone4": 20, "man_swimming_tone5": 20, "man_teach": 20, "man_teacher_dark_skin_ton": 20, "man_teacher_light_skin_ton": 20, "man_teacher_medium_dark_skin_ton": 20, "man_teacher_medium_light_skin_ton": 20, "man_teacher_medium_skin_ton": 20, "man_teacher_tone1": 20, "man_teacher_tone2": 20, "man_teacher_tone3": 20, "man_teacher_tone4": 20, "man_teacher_tone5": 20, "man_technologist": 20, "man_technologist_dark_skin_ton": 20, "man_technologist_light_skin_ton": 20, "man_technologist_medium_dark_skin_ton": 20, "man_technologist_medium_light_skin_ton": 20, "man_technologist_medium_skin_ton": 20, "man_technologist_tone1": 20, "man_technologist_tone2": 20, "man_technologist_tone3": 20, "man_technologist_tone4": 20, "man_technologist_tone5": 20, "man_tipping_hand": 20, "man_tipping_hand_dark_skin_ton": 20, "man_tipping_hand_light_skin_ton": 20, "man_tipping_hand_medium_dark_skin_ton": 20, "man_tipping_hand_medium_light_skin_ton": 20, "man_tipping_hand_medium_skin_ton": 20, "man_tipping_hand_tone1": 20, "man_tipping_hand_tone2": 20, "man_tipping_hand_tone3": 20, "man_tipping_hand_tone4": 20, "man_tipping_hand_tone5": 20, "man_tone1": 20, "man_tone1_beard": 20, "man_tone2": 20, "man_tone2_beard": 20, "man_tone3": 20, "man_tone3_beard": 20, "man_tone4": 20, "man_tone4_beard": 20, "man_tone5": 20, "man_tone5_beard": 20, "man_vampir": 20, "man_vampire_dark_skin_ton": 20, "man_vampire_light_skin_ton": 20, "man_vampire_medium_dark_skin_ton": 20, "man_vampire_medium_light_skin_ton": 20, "man_vampire_medium_skin_ton": 20, "man_vampire_tone1": 20, "man_vampire_tone2": 20, "man_vampire_tone3": 20, "man_vampire_tone4": 20, "man_vampire_tone5": 20, "man_walk": 20, "man_walking_dark_skin_ton": 20, "man_walking_light_skin_ton": 20, "man_walking_medium_dark_skin_ton": 20, "man_walking_medium_light_skin_ton": 20, "man_walking_medium_skin_ton": 20, "man_walking_tone1": 20, "man_walking_tone2": 20, "man_walking_tone3": 20, "man_walking_tone4": 20, "man_walking_tone5": 20, "man_wearing_turban": 20, "man_wearing_turban_dark_skin_ton": 20, "man_wearing_turban_light_skin_ton": 20, "man_wearing_turban_medium_dark_skin_ton": 20, "man_wearing_turban_medium_light_skin_ton": 20, "man_wearing_turban_medium_skin_ton": 20, "man_wearing_turban_tone1": 20, "man_wearing_turban_tone2": 20, "man_wearing_turban_tone3": 20, "man_wearing_turban_tone4": 20, "man_wearing_turban_tone5": 20, "man_white_hair": 20, "man_white_haired_dark_skin_ton": 20, "man_white_haired_light_skin_ton": 20, "man_white_haired_medium_dark_skin_ton": 20, "man_white_haired_medium_light_skin_ton": 20, "man_white_haired_medium_skin_ton": 20, "man_white_haired_tone1": 20, "man_white_haired_tone2": 20, "man_white_haired_tone3": 20, "man_white_haired_tone4": 20, "man_white_haired_tone5": 20, "man_with_chinese_cap": 20, "man_with_chinese_cap_tone1": 20, "man_with_chinese_cap_tone2": 20, "man_with_chinese_cap_tone3": 20, "man_with_chinese_cap_tone4": 20, "man_with_chinese_cap_tone5": 20, "man_with_gua_pi_mao": 20, "man_with_gua_pi_mao_tone1": 20, "man_with_gua_pi_mao_tone2": 20, "man_with_gua_pi_mao_tone3": 20, "man_with_gua_pi_mao_tone4": 20, "man_with_gua_pi_mao_tone5": 20, "man_with_probing_can": 20, "man_with_probing_cane_dark_skin_ton": 20, "man_with_probing_cane_light_skin_ton": 20, "man_with_probing_cane_medium_dark_skin_ton": 20, "man_with_probing_cane_medium_light_skin_ton": 20, "man_with_probing_cane_medium_skin_ton": 20, "man_with_probing_cane_tone1": 20, "man_with_probing_cane_tone2": 20, "man_with_probing_cane_tone3": 20, "man_with_probing_cane_tone4": 20, "man_with_probing_cane_tone5": 20, "man_with_turban": 20, "man_with_turban_tone1": 20, "man_with_turban_tone2": 20, "man_with_turban_tone3": 20, "man_with_turban_tone4": 20, "man_with_turban_tone5": 20, "man_with_veil": 20, "man_with_veil_dark_skin_ton": 20, "man_with_veil_light_skin_ton": 20, "man_with_veil_medium_dark_skin_ton": 20, "man_with_veil_medium_light_skin_ton": 20, "man_with_veil_medium_skin_ton": 20, "man_with_veil_tone1": 20, "man_with_veil_tone2": 20, "man_with_veil_tone3": 20, "man_with_veil_tone4": 20, "man_with_veil_tone5": 20, "man_zombi": 20, "mango": 20, "mans_sho": 20, "mantelpiece_clock": 20, "mantlepiece_clock": 20, "manual_wheelchair": 20, "map": [20, 22, 30, 49, 51, 57, 97, 99, 100, 120, 121, 151, 192, 199, 216, 222, 236, 238, 240, 244, 246, 247, 249, 250, 253, 261, 262, 264, 279, 293, 294, 296, 302, 314, 316, 323, 342, 353, 356, 357, 372, 373, 379, 380, 398, 500, 545, 549, 578, 582, 583, 584, 590, 601, 607, 636, 638, 642, 696, 699, 700, 701, 702, 705, 709, 739, 742, 746, 750, 756, 782, 801, 802, 803, 805, 839, 840, 871, 883, 1032, 1049, 1058, 1059, 1108, 1112, 1121, 1122, 1141, 1198, 1245, 1251], "maple_leaf": 20, "marshall_island": 20, "martial_arts_uniform": 20, "martiniqu": 20, "mask": [20, 210, 281, 446, 883, 935, 936, 947, 1033, 1062, 1064], "massag": [20, 182, 201, 218, 294, 296, 841, 993, 1067], "massage_man": 20, "massage_tone1": 20, "massage_tone2": 20, "massage_tone3": 20, "massage_tone4": 20, "massage_tone5": 20, "massage_woman": 20, "mate": [20, 275, 940], "mauritania": 20, "mauritiu": 20, "mayott": 20, "mc": [20, 193, 307, 506], "md": [20, 172, 417, 888], "meat_on_bon": 20, "mechanic_dark_skin_ton": 20, "mechanic_light_skin_ton": 20, "mechanic_medium_dark_skin_ton": 20, "mechanic_medium_light_skin_ton": 20, "mechanic_medium_skin_ton": 20, "mechanic_tone1": 20, "mechanic_tone2": 20, "mechanic_tone3": 20, "mechanic_tone4": 20, "mechanic_tone5": 20, "mechanical_arm": 20, "mechanical_leg": 20, "medal": 20, "medal_militari": 20, "medal_sport": 20, "medical_symbol": 20, "mega": [20, 1087], "melon": 20, "memo": 20, "men_holding_hands_dark_skin_ton": 20, "men_holding_hands_dark_skin_tone_light_skin_ton": 20, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 20, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 20, "men_holding_hands_dark_skin_tone_medium_skin_ton": 20, "men_holding_hands_light_skin_ton": 20, "men_holding_hands_light_skin_tone_dark_skin_ton": 20, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 20, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 20, "men_holding_hands_light_skin_tone_medium_skin_ton": 20, "men_holding_hands_medium_dark_skin_ton": 20, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 20, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 20, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 20, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 20, "men_holding_hands_medium_light_skin_ton": 20, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 20, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 20, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 20, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 20, "men_holding_hands_medium_skin_ton": 20, "men_holding_hands_medium_skin_tone_dark_skin_ton": 20, "men_holding_hands_medium_skin_tone_light_skin_ton": 20, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 20, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 20, "men_holding_hands_tone1": 20, "men_holding_hands_tone1_tone2": 20, "men_holding_hands_tone1_tone3": 20, "men_holding_hands_tone1_tone4": 20, "men_holding_hands_tone1_tone5": 20, "men_holding_hands_tone2": 20, "men_holding_hands_tone2_tone1": 20, "men_holding_hands_tone2_tone3": 20, "men_holding_hands_tone2_tone4": 20, "men_holding_hands_tone2_tone5": 20, "men_holding_hands_tone3": 20, "men_holding_hands_tone3_tone1": 20, "men_holding_hands_tone3_tone2": 20, "men_holding_hands_tone3_tone4": 20, "men_holding_hands_tone3_tone5": 20, "men_holding_hands_tone4": 20, "men_holding_hands_tone4_tone1": 20, "men_holding_hands_tone4_tone2": 20, "men_holding_hands_tone4_tone3": 20, "men_holding_hands_tone4_tone5": 20, "men_holding_hands_tone5": 20, "men_holding_hands_tone5_tone1": 20, "men_holding_hands_tone5_tone2": 20, "men_holding_hands_tone5_tone3": 20, "men_holding_hands_tone5_tone4": 20, "men_with_bunny_ears_parti": 20, "men_wrestl": 20, "mending_heart": 20, "menorah": 20, "men": [20, 444, 500, 643], "mermaid": 20, "mermaid_dark_skin_ton": 20, "mermaid_light_skin_ton": 20, "mermaid_medium_dark_skin_ton": 20, "mermaid_medium_light_skin_ton": 20, "mermaid_medium_skin_ton": 20, "mermaid_tone1": 20, "mermaid_tone2": 20, "mermaid_tone3": 20, "mermaid_tone4": 20, "mermaid_tone5": 20, "merman": 20, "merman_dark_skin_ton": 20, "merman_light_skin_ton": 20, "merman_medium_dark_skin_ton": 20, "merman_medium_light_skin_ton": 20, "merman_medium_skin_ton": 20, "merman_tone1": 20, "merman_tone2": 20, "merman_tone3": 20, "merman_tone4": 20, "merman_tone5": 20, "merperson": 20, "merperson_dark_skin_ton": 20, "merperson_light_skin_ton": 20, "merperson_medium_dark_skin_ton": 20, "merperson_medium_light_skin_ton": 20, "merperson_medium_skin_ton": 20, "merperson_tone1": 20, "merperson_tone2": 20, "merperson_tone3": 20, "merperson_tone4": 20, "merperson_tone5": 20, "metal_tone1": 20, "metal_tone2": 20, "metal_tone3": 20, "metal_tone4": 20, "metal_tone5": 20, "metro": 20, "mexico": 20, "mf": [20, 261, 1148], "mg": 20, "mh": 20, "microb": 20, "micronesia": 20, "microphone2": 20, "microphon": [20, 195, 197], "microscop": 20, "middle_finger_tone1": 20, "middle_finger_tone2": 20, "middle_finger_tone3": 20, "middle_finger_tone4": 20, "middle_finger_tone5": 20, "military_helmet": 20, "military_med": 20, "milk": 20, "milk_glass": 20, "milky_wai": 20, "minibu": 20, "minidisc": 20, "mirror": [20, 507], "ml": 20, "mm": [20, 505], "mn": 20, "mo": [20, 634], "mobile_phon": 20, "mobile_phone_off": 20, "moldova": 20, "monaco": 20, "money_mouth": 20, "money_mouth_fac": 20, "money_with_w": 20, "moneybag": 20, "mongolia": 20, "monkei": 20, "monkey_fac": 20, "monorail": 20, "montenegro": 20, "montserrat": 20, "moon": 20, "moon_cak": 20, "morocco": 20, "mortar_board": 20, "mosqu": 20, "mosquito": 20, "mother_christma": 20, "mother_christmas_tone1": 20, "mother_christmas_tone2": 20, "mother_christmas_tone3": 20, "mother_christmas_tone4": 20, "mother_christmas_tone5": 20, "motor_boat": 20, "motor_scoot": 20, "motorbik": 20, "motorboat": 20, "motorcycl": 20, "motorized_wheelchair": 20, "motorwai": 20, "mount_fuji": 20, "mountain": 20, "mountain_bicyclist": 20, "mountain_bicyclist_tone1": 20, "mountain_bicyclist_tone2": 20, "mountain_bicyclist_tone3": 20, "mountain_bicyclist_tone4": 20, "mountain_bicyclist_tone5": 20, "mountain_biking_man": 20, "mountain_biking_woman": 20, "mountain_cablewai": 20, "mountain_railwai": 20, "mountain_snow": 20, "mouse2": 20, "mous": [20, 190, 195, 367, 948, 1128, 1136], "mouse_three_button": 20, "mouse_trap": 20, "movie_camera": 20, "moyai": 20, "mozambiqu": 20, "mp": [20, 26], "mq": [20, 1057, 1058], "mr": [20, 115, 258, 269, 277, 281, 1153], "mrs_clau": 20, "mrs_claus_tone1": 20, "mrs_claus_tone2": 20, "mrs_claus_tone3": 20, "mrs_claus_tone4": 20, "mrs_claus_tone5": 20, "mt": [20, 373, 407, 1061, 1062], "mu": [20, 281], "muscle_tone1": 20, "muscle_tone2": 20, "muscle_tone3": 20, "muscle_tone4": 20, "muscle_tone5": 20, "mushroom": 20, "musical_keyboard": 20, "musical_not": 20, "musical_scor": 20, "mute": 20, "mv": [20, 90, 115, 137, 168, 229, 231, 295, 304, 305, 325, 326, 369, 370, 398, 403, 530, 840, 860, 917, 955, 968, 985, 1250], "mw": 20, "mx": 20, "mx_clau": 20, "mx_claus_dark_skin_ton": 20, "mx_claus_light_skin_ton": 20, "mx_claus_medium_dark_skin_ton": 20, "mx_claus_medium_light_skin_ton": 20, "mx_claus_medium_skin_ton": 20, "mx_claus_tone1": 20, "mx_claus_tone2": 20, "mx_claus_tone3": 20, "mx_claus_tone4": 20, "mx_claus_tone5": 20, "myanmar": 20, "mz": 20, "na": [20, 258, 261, 264, 277, 284, 302, 357], "nail_car": 20, "nail_care_tone1": 20, "nail_care_tone2": 20, "nail_care_tone3": 20, "nail_care_tone4": 20, "nail_care_tone5": 20, "name_badg": 20, "namibia": 20, "national_park": 20, "nauru": 20, "nauseated_fac": 20, "nazar_amulet": 20, "nc": [20, 229, 231, 304, 325, 326, 369, 426, 1012], "ne": [20, 644, 661, 663, 1027], "neckti": 20, "negative_squared_cross_mark": 20, "nepal": 20, "nerd_fac": 20, "nesting_dol": 20, "netherland": [20, 191, 1115], "neutral_fac": 20, "new_caledonia": 20, "new_moon": 20, "new_moon_with_fac": 20, "new_zealand": 20, "newspaper2": 20, "newspap": [20, 31], "newspaper_rol": 20, "next_track": 20, "next_track_button": 20, "nf": [20, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1006], "ng": [20, 191, 202, 305, 840, 985, 1066, 1076, 1077, 1078, 1081], "ni": 20, "nicaragua": 20, "niger": 20, "nigeria": 20, "night_with_star": 20, "nine": [20, 173, 209, 222, 232, 240, 258, 269, 357, 398], "ninja_dark_skin_ton": 20, "ninja_light_skin_ton": 20, "ninja_medium_dark_skin_ton": 20, "ninja_medium_light_skin_ton": 20, "ninja_medium_skin_ton": 20, "ninja_tone1": 20, "ninja_tone2": 20, "ninja_tone3": 20, "ninja_tone4": 20, "ninja_tone5": 20, "niue": 20, "nl": [20, 426], "no_bel": 20, "no_bicycl": 20, "no_entri": 20, "no_entry_sign": 20, "no_good": 20, "no_good_man": 20, "no_good_tone1": 20, "no_good_tone2": 20, "no_good_tone3": 20, "no_good_tone4": 20, "no_good_tone5": 20, "no_good_woman": 20, "no_mobile_phon": 20, "no_mouth": 20, "no_pedestrian": 20, "no_smok": 20, "non": [20, 69, 115, 116, 131, 133, 170, 192, 193, 200, 216, 229, 251, 269, 277, 281, 286, 305, 314, 316, 323, 345, 373, 460, 482, 500, 510, 513, 531, 590, 633, 635, 642, 644, 647, 658, 659, 698, 713, 749, 755, 796, 800, 801, 816, 824, 839, 840, 873, 879, 892, 903, 925, 928, 930, 970, 996, 997, 1005, 1023, 1040, 1044, 1051, 1059, 1085, 1089, 1101, 1102, 1125, 1138, 1159, 1176, 1212, 1213, 1232, 1242, 1264], "potable_wat": 20, "norfolk_island": 20, "north_korea": 20, "northern_mariana_island": 20, "norwai": 20, "nose": 20, "nose_tone1": 20, "nose_tone2": 20, "nose_tone3": 20, "nose_tone4": 20, "nose_tone5": 20, "notebook_with_decorative_cov": 20, "notepad_spir": 20, "note": [20, 24, 28, 32, 47, 50, 113, 115, 128, 132, 152, 165, 171, 177, 189, 190, 192, 197, 209, 210, 240, 248, 250, 261, 262, 264, 289, 318, 323, 340, 343, 344, 373, 380, 389, 390, 506, 510, 516, 519, 524, 537, 566, 614, 637, 646, 647, 653, 654, 657, 716, 759, 779, 780, 781, 792, 794, 800, 801, 802, 804, 846, 887, 904, 914, 915, 976, 994, 1012, 1023, 1078, 1131, 1134, 1136, 1140, 1196, 1207, 1209, 1212, 1231], "np": [20, 212, 239, 307, 341, 506, 1194, 1213], "nr": [20, 237, 281, 846], "nu": 20, "nut_and_bolt": 20, "nz": 20, "o2": [20, 494], "ocean": 20, "octagonal_sign": 20, "octopu": 20, "oden": 20, "office_work": 20, "office_worker_dark_skin_ton": 20, "office_worker_light_skin_ton": 20, "office_worker_medium_dark_skin_ton": 20, "office_worker_medium_light_skin_ton": 20, "office_worker_medium_skin_ton": 20, "office_worker_tone1": 20, "office_worker_tone2": 20, "office_worker_tone3": 20, "office_worker_tone4": 20, "office_worker_tone5": 20, "oil": 20, "oil_drum": 20, "ok": [20, 41, 121, 166, 189, 191, 192, 196, 221, 237, 267, 307, 371, 394, 434, 470, 488, 490, 524, 532, 549, 599, 600, 601, 646, 654, 656, 661, 666, 676, 729, 736, 747, 755, 770, 789, 792, 801, 802, 819, 901, 994, 1021, 1041, 1068, 1080, 1098, 1101, 1114, 1231], "ok_hand_tone1": 20, "ok_hand_tone2": 20, "ok_hand_tone3": 20, "ok_hand_tone4": 20, "ok_hand_tone5": 20, "ok_man": 20, "ok_woman": 20, "ok_woman_tone1": 20, "ok_woman_tone2": 20, "ok_woman_tone3": 20, "ok_woman_tone4": 20, "ok_woman_tone5": 20, "old_kei": 20, "older_adult": 20, "older_adult_dark_skin_ton": 20, "older_adult_light_skin_ton": 20, "older_adult_medium_dark_skin_ton": 20, "older_adult_medium_light_skin_ton": 20, "older_adult_medium_skin_ton": 20, "older_adult_tone1": 20, "older_adult_tone2": 20, "older_adult_tone3": 20, "older_adult_tone4": 20, "older_adult_tone5": 20, "older_man": 20, "older_man_tone1": 20, "older_man_tone2": 20, "older_man_tone3": 20, "older_man_tone4": 20, "older_man_tone5": 20, "older_woman": 20, "older_woman_tone1": 20, "older_woman_tone2": 20, "older_woman_tone3": 20, "older_woman_tone4": 20, "older_woman_tone5": 20, "oliv": [20, 253], "om": [20, 780], "om_symbol": 20, "oman": 20, "oncoming_automobil": 20, "oncoming_bu": 20, "oncoming_police_car": 20, "oncoming_taxi": 20, "one_piece_swimsuit": 20, "onion": 20, "open_file_fold": 20, "open_hand": 20, "open_hands_tone1": 20, "open_hands_tone2": 20, "open_hands_tone3": 20, "open_hands_tone4": 20, "open_hands_tone5": 20, "open_mouth": 20, "open_umbrella": 20, "ophiuchu": 20, "orange_book": 20, "orange_circl": 20, "orange_heart": 20, "orange_squar": 20, "orangutan": 20, "orthodox_cross": 20, "otter": 20, "outbox_trai": 20, "owl": 20, "ox": 20, "oyster": 20, "pa": [20, 258, 264, 274, 277, 470, 673, 675, 676], "paella": 20, "page_facing_up": 20, "page_with_curl": 20, "pager": [20, 981], "paintbrush": 20, "pakistan": 20, "palau": 20, "palestinian_territori": 20, "palm_tre": 20, "palms_up_togeth": 20, "palms_up_together_dark_skin_ton": 20, "palms_up_together_light_skin_ton": 20, "palms_up_together_medium_dark_skin_ton": 20, "palms_up_together_medium_light_skin_ton": 20, "palms_up_together_medium_skin_ton": 20, "palms_up_together_tone1": 20, "palms_up_together_tone2": 20, "palms_up_together_tone3": 20, "palms_up_together_tone4": 20, "palms_up_together_tone5": 20, "panama": 20, "pancak": 20, "panda_fac": 20, "paperclip": 20, "papua_new_guinea": 20, "parachut": 20, "paraguai": 20, "parasol_on_ground": 20, "park": 20, "parrot": 20, "part_alternation_mark": 20, "partly_sunni": 20, "partying_fac": 20, "passenger_ship": 20, "passport_control": 20, "pause_button": 20, "paw_print": 20, "pe": 20, "peac": 20, "peace_symbol": 20, "peach": 20, "peacock": 20, "peanut": 20, "pear": 20, "pen": 20, "pen_ballpoint": 20, "pen_fountain": 20, "pencil2": 20, "pencil": 20, "pensiv": 20, "people_holding_hand": 20, "people_holding_hands_dark_skin_ton": 20, "people_holding_hands_dark_skin_tone_light_skin_ton": 20, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 20, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 20, "people_holding_hands_dark_skin_tone_medium_skin_ton": 20, "people_holding_hands_light_skin_ton": 20, "people_holding_hands_light_skin_tone_dark_skin_ton": 20, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 20, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 20, "people_holding_hands_light_skin_tone_medium_skin_ton": 20, "people_holding_hands_medium_dark_skin_ton": 20, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 20, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 20, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 20, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 20, "people_holding_hands_medium_light_skin_ton": 20, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 20, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 20, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 20, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 20, "people_holding_hands_medium_skin_ton": 20, "people_holding_hands_medium_skin_tone_dark_skin_ton": 20, "people_holding_hands_medium_skin_tone_light_skin_ton": 20, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 20, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 20, "people_holding_hands_tone1": 20, "people_holding_hands_tone1_tone2": 20, "people_holding_hands_tone1_tone3": 20, "people_holding_hands_tone1_tone4": 20, "people_holding_hands_tone1_tone5": 20, "people_holding_hands_tone2": 20, "people_holding_hands_tone2_tone1": 20, "people_holding_hands_tone2_tone3": 20, "people_holding_hands_tone2_tone4": 20, "people_holding_hands_tone2_tone5": 20, "people_holding_hands_tone3": 20, "people_holding_hands_tone3_tone1": 20, "people_holding_hands_tone3_tone2": 20, "people_holding_hands_tone3_tone4": 20, "people_holding_hands_tone3_tone5": 20, "people_holding_hands_tone4": 20, "people_holding_hands_tone4_tone1": 20, "people_holding_hands_tone4_tone2": 20, "people_holding_hands_tone4_tone3": 20, "people_holding_hands_tone4_tone5": 20, "people_holding_hands_tone5": 20, "people_holding_hands_tone5_tone1": 20, "people_holding_hands_tone5_tone2": 20, "people_holding_hands_tone5_tone3": 20, "people_holding_hands_tone5_tone4": 20, "people_hug": 20, "people_with_bunny_ears_parti": 20, "people_wrestl": 20, "performing_art": 20, "persever": 20, "person_bald": 20, "person_bik": 20, "person_biking_tone1": 20, "person_biking_tone2": 20, "person_biking_tone3": 20, "person_biking_tone4": 20, "person_biking_tone5": 20, "person_bouncing_bal": 20, "person_bouncing_ball_tone1": 20, "person_bouncing_ball_tone2": 20, "person_bouncing_ball_tone3": 20, "person_bouncing_ball_tone4": 20, "person_bouncing_ball_tone5": 20, "person_bow": 20, "person_bowing_tone1": 20, "person_bowing_tone2": 20, "person_bowing_tone3": 20, "person_bowing_tone4": 20, "person_bowing_tone5": 20, "person_climb": 20, "person_climbing_dark_skin_ton": 20, "person_climbing_light_skin_ton": 20, "person_climbing_medium_dark_skin_ton": 20, "person_climbing_medium_light_skin_ton": 20, "person_climbing_medium_skin_ton": 20, "person_climbing_tone1": 20, "person_climbing_tone2": 20, "person_climbing_tone3": 20, "person_climbing_tone4": 20, "person_climbing_tone5": 20, "person_curly_hair": 20, "person_dark_skin_tone_bald": 20, "person_dark_skin_tone_curly_hair": 20, "person_dark_skin_tone_red_hair": 20, "person_dark_skin_tone_white_hair": 20, "person_doing_cartwheel": 20, "person_doing_cartwheel_tone1": 20, "person_doing_cartwheel_tone2": 20, "person_doing_cartwheel_tone3": 20, "person_doing_cartwheel_tone4": 20, "person_doing_cartwheel_tone5": 20, "person_facepalm": 20, "person_facepalming_tone1": 20, "person_facepalming_tone2": 20, "person_facepalming_tone3": 20, "person_facepalming_tone4": 20, "person_facepalming_tone5": 20, "person_feeding_babi": 20, "person_feeding_baby_dark_skin_ton": 20, "person_feeding_baby_light_skin_ton": 20, "person_feeding_baby_medium_dark_skin_ton": 20, "person_feeding_baby_medium_light_skin_ton": 20, "person_feeding_baby_medium_skin_ton": 20, "person_feeding_baby_tone1": 20, "person_feeding_baby_tone2": 20, "person_feeding_baby_tone3": 20, "person_feeding_baby_tone4": 20, "person_feeding_baby_tone5": 20, "person_fenc": 20, "person_frown": 20, "person_frowning_tone1": 20, "person_frowning_tone2": 20, "person_frowning_tone3": 20, "person_frowning_tone4": 20, "person_frowning_tone5": 20, "person_gesturing_no": 20, "person_gesturing_no_tone1": 20, "person_gesturing_no_tone2": 20, "person_gesturing_no_tone3": 20, "person_gesturing_no_tone4": 20, "person_gesturing_no_tone5": 20, "person_gesturing_ok": 20, "person_gesturing_ok_tone1": 20, "person_gesturing_ok_tone2": 20, "person_gesturing_ok_tone3": 20, "person_gesturing_ok_tone4": 20, "person_gesturing_ok_tone5": 20, "person_getting_haircut": 20, "person_getting_haircut_tone1": 20, "person_getting_haircut_tone2": 20, "person_getting_haircut_tone3": 20, "person_getting_haircut_tone4": 20, "person_getting_haircut_tone5": 20, "person_getting_massag": 20, "person_getting_massage_tone1": 20, "person_getting_massage_tone2": 20, "person_getting_massage_tone3": 20, "person_getting_massage_tone4": 20, "person_getting_massage_tone5": 20, "person_golf": 20, "person_golfing_dark_skin_ton": 20, "person_golfing_light_skin_ton": 20, "person_golfing_medium_dark_skin_ton": 20, "person_golfing_medium_light_skin_ton": 20, "person_golfing_medium_skin_ton": 20, "person_golfing_tone1": 20, "person_golfing_tone2": 20, "person_golfing_tone3": 20, "person_golfing_tone4": 20, "person_golfing_tone5": 20, "person_in_bed_dark_skin_ton": 20, "person_in_bed_light_skin_ton": 20, "person_in_bed_medium_dark_skin_ton": 20, "person_in_bed_medium_light_skin_ton": 20, "person_in_bed_medium_skin_ton": 20, "person_in_bed_tone1": 20, "person_in_bed_tone2": 20, "person_in_bed_tone3": 20, "person_in_bed_tone4": 20, "person_in_bed_tone5": 20, "person_in_lotus_posit": 20, "person_in_lotus_position_dark_skin_ton": 20, "person_in_lotus_position_light_skin_ton": 20, "person_in_lotus_position_medium_dark_skin_ton": 20, "person_in_lotus_position_medium_light_skin_ton": 20, "person_in_lotus_position_medium_skin_ton": 20, "person_in_lotus_position_tone1": 20, "person_in_lotus_position_tone2": 20, "person_in_lotus_position_tone3": 20, "person_in_lotus_position_tone4": 20, "person_in_lotus_position_tone5": 20, "person_in_manual_wheelchair": 20, "person_in_manual_wheelchair_dark_skin_ton": 20, "person_in_manual_wheelchair_light_skin_ton": 20, "person_in_manual_wheelchair_medium_dark_skin_ton": 20, "person_in_manual_wheelchair_medium_light_skin_ton": 20, "person_in_manual_wheelchair_medium_skin_ton": 20, "person_in_manual_wheelchair_tone1": 20, "person_in_manual_wheelchair_tone2": 20, "person_in_manual_wheelchair_tone3": 20, "person_in_manual_wheelchair_tone4": 20, "person_in_manual_wheelchair_tone5": 20, "person_in_motorized_wheelchair": 20, "person_in_motorized_wheelchair_dark_skin_ton": 20, "person_in_motorized_wheelchair_light_skin_ton": 20, "person_in_motorized_wheelchair_medium_dark_skin_ton": 20, "person_in_motorized_wheelchair_medium_light_skin_ton": 20, "person_in_motorized_wheelchair_medium_skin_ton": 20, "person_in_motorized_wheelchair_tone1": 20, "person_in_motorized_wheelchair_tone2": 20, "person_in_motorized_wheelchair_tone3": 20, "person_in_motorized_wheelchair_tone4": 20, "person_in_motorized_wheelchair_tone5": 20, "person_in_steamy_room": 20, "person_in_steamy_room_dark_skin_ton": 20, "person_in_steamy_room_light_skin_ton": 20, "person_in_steamy_room_medium_dark_skin_ton": 20, "person_in_steamy_room_medium_light_skin_ton": 20, "person_in_steamy_room_medium_skin_ton": 20, "person_in_steamy_room_tone1": 20, "person_in_steamy_room_tone2": 20, "person_in_steamy_room_tone3": 20, "person_in_steamy_room_tone4": 20, "person_in_steamy_room_tone5": 20, "person_in_tuxedo": 20, "person_in_tuxedo_tone1": 20, "person_in_tuxedo_tone2": 20, "person_in_tuxedo_tone3": 20, "person_in_tuxedo_tone4": 20, "person_in_tuxedo_tone5": 20, "person_juggl": 20, "person_juggling_tone1": 20, "person_juggling_tone2": 20, "person_juggling_tone3": 20, "person_juggling_tone4": 20, "person_juggling_tone5": 20, "person_kneel": 20, "person_kneeling_dark_skin_ton": 20, "person_kneeling_light_skin_ton": 20, "person_kneeling_medium_dark_skin_ton": 20, "person_kneeling_medium_light_skin_ton": 20, "person_kneeling_medium_skin_ton": 20, "person_kneeling_tone1": 20, "person_kneeling_tone2": 20, "person_kneeling_tone3": 20, "person_kneeling_tone4": 20, "person_kneeling_tone5": 20, "person_lifting_weight": 20, "person_lifting_weights_tone1": 20, "person_lifting_weights_tone2": 20, "person_lifting_weights_tone3": 20, "person_lifting_weights_tone4": 20, "person_lifting_weights_tone5": 20, "person_light_skin_tone_bald": 20, "person_light_skin_tone_curly_hair": 20, "person_light_skin_tone_red_hair": 20, "person_light_skin_tone_white_hair": 20, "person_medium_dark_skin_tone_bald": 20, "person_medium_dark_skin_tone_curly_hair": 20, "person_medium_dark_skin_tone_red_hair": 20, "person_medium_dark_skin_tone_white_hair": 20, "person_medium_light_skin_tone_bald": 20, "person_medium_light_skin_tone_curly_hair": 20, "person_medium_light_skin_tone_red_hair": 20, "person_medium_light_skin_tone_white_hair": 20, "person_medium_skin_tone_bald": 20, "person_medium_skin_tone_curly_hair": 20, "person_medium_skin_tone_red_hair": 20, "person_medium_skin_tone_white_hair": 20, "person_mountain_bik": 20, "person_mountain_biking_tone1": 20, "person_mountain_biking_tone2": 20, "person_mountain_biking_tone3": 20, "person_mountain_biking_tone4": 20, "person_mountain_biking_tone5": 20, "person_playing_handbal": 20, "person_playing_handball_tone1": 20, "person_playing_handball_tone2": 20, "person_playing_handball_tone3": 20, "person_playing_handball_tone4": 20, "person_playing_handball_tone5": 20, "person_playing_water_polo": 20, "person_playing_water_polo_tone1": 20, "person_playing_water_polo_tone2": 20, "person_playing_water_polo_tone3": 20, "person_playing_water_polo_tone4": 20, "person_playing_water_polo_tone5": 20, "person_pout": 20, "person_pouting_tone1": 20, "person_pouting_tone2": 20, "person_pouting_tone3": 20, "person_pouting_tone4": 20, "person_pouting_tone5": 20, "person_raising_hand": 20, "person_raising_hand_tone1": 20, "person_raising_hand_tone2": 20, "person_raising_hand_tone3": 20, "person_raising_hand_tone4": 20, "person_raising_hand_tone5": 20, "person_red_hair": 20, "person_rowing_boat": 20, "person_rowing_boat_tone1": 20, "person_rowing_boat_tone2": 20, "person_rowing_boat_tone3": 20, "person_rowing_boat_tone4": 20, "person_rowing_boat_tone5": 20, "person_run": 20, "person_running_tone1": 20, "person_running_tone2": 20, "person_running_tone3": 20, "person_running_tone4": 20, "person_running_tone5": 20, "person_shrug": 20, "person_shrugging_tone1": 20, "person_shrugging_tone2": 20, "person_shrugging_tone3": 20, "person_shrugging_tone4": 20, "person_shrugging_tone5": 20, "person_stand": 20, "person_standing_dark_skin_ton": 20, "person_standing_light_skin_ton": 20, "person_standing_medium_dark_skin_ton": 20, "person_standing_medium_light_skin_ton": 20, "person_standing_medium_skin_ton": 20, "person_standing_tone1": 20, "person_standing_tone2": 20, "person_standing_tone3": 20, "person_standing_tone4": 20, "person_standing_tone5": 20, "person_surf": 20, "person_surfing_tone1": 20, "person_surfing_tone2": 20, "person_surfing_tone3": 20, "person_surfing_tone4": 20, "person_surfing_tone5": 20, "person_swim": 20, "person_swimming_tone1": 20, "person_swimming_tone2": 20, "person_swimming_tone3": 20, "person_swimming_tone4": 20, "person_swimming_tone5": 20, "person_tipping_hand": 20, "person_tipping_hand_tone1": 20, "person_tipping_hand_tone2": 20, "person_tipping_hand_tone3": 20, "person_tipping_hand_tone4": 20, "person_tipping_hand_tone5": 20, "person_tone1_bald": 20, "person_tone1_curly_hair": 20, "person_tone1_red_hair": 20, "person_tone1_white_hair": 20, "person_tone2_bald": 20, "person_tone2_curly_hair": 20, "person_tone2_red_hair": 20, "person_tone2_white_hair": 20, "person_tone3_bald": 20, "person_tone3_curly_hair": 20, "person_tone3_red_hair": 20, "person_tone3_white_hair": 20, "person_tone4_bald": 20, "person_tone4_curly_hair": 20, "person_tone4_red_hair": 20, "person_tone4_white_hair": 20, "person_tone5_bald": 20, "person_tone5_curly_hair": 20, "person_tone5_red_hair": 20, "person_tone5_white_hair": 20, "person_walk": 20, "person_walking_tone1": 20, "person_walking_tone2": 20, "person_walking_tone3": 20, "person_walking_tone4": 20, "person_walking_tone5": 20, "person_wearing_turban": 20, "person_wearing_turban_tone1": 20, "person_wearing_turban_tone2": 20, "person_wearing_turban_tone3": 20, "person_wearing_turban_tone4": 20, "person_wearing_turban_tone5": 20, "person_white_hair": 20, "person_with_bal": 20, "person_with_ball_tone1": 20, "person_with_ball_tone2": 20, "person_with_ball_tone3": 20, "person_with_ball_tone4": 20, "person_with_ball_tone5": 20, "person_with_blond_hair": 20, "person_with_blond_hair_tone1": 20, "person_with_blond_hair_tone2": 20, "person_with_blond_hair_tone3": 20, "person_with_blond_hair_tone4": 20, "person_with_blond_hair_tone5": 20, "person_with_pouting_fac": 20, "person_with_pouting_face_tone1": 20, "person_with_pouting_face_tone2": 20, "person_with_pouting_face_tone3": 20, "person_with_pouting_face_tone4": 20, "person_with_pouting_face_tone5": 20, "person_with_probing_can": 20, "person_with_probing_cane_dark_skin_ton": 20, "person_with_probing_cane_light_skin_ton": 20, "person_with_probing_cane_medium_dark_skin_ton": 20, "person_with_probing_cane_medium_light_skin_ton": 20, "person_with_probing_cane_medium_skin_ton": 20, "person_with_probing_cane_tone1": 20, "person_with_probing_cane_tone2": 20, "person_with_probing_cane_tone3": 20, "person_with_probing_cane_tone4": 20, "person_with_probing_cane_tone5": 20, "person_with_veil": 20, "person_with_veil_tone1": 20, "person_with_veil_tone2": 20, "person_with_veil_tone3": 20, "person_with_veil_tone4": 20, "person_with_veil_tone5": 20, "peru": 20, "petri_dish": 20, "pf": [20, 193, 819], "pg": [20, 498], "ph": 20, "philippin": 20, "phone": 20, "pick": [20, 69, 193, 200, 250, 371, 511, 601, 1047, 1078, 1083], "pickup_truck": 20, "pie": 20, "pig2": 20, "pig_nos": 20, "pill": 20, "pilot": 20, "pilot_dark_skin_ton": 20, "pilot_light_skin_ton": 20, "pilot_medium_dark_skin_ton": 20, "pilot_medium_light_skin_ton": 20, "pilot_medium_skin_ton": 20, "pilot_tone1": 20, "pilot_tone2": 20, "pilot_tone3": 20, "pilot_tone4": 20, "pilot_tone5": 20, "pinched_fing": 20, "pinched_fingers_dark_skin_ton": 20, "pinched_fingers_light_skin_ton": 20, "pinched_fingers_medium_dark_skin_ton": 20, "pinched_fingers_medium_light_skin_ton": 20, "pinched_fingers_medium_skin_ton": 20, "pinched_fingers_tone1": 20, "pinched_fingers_tone2": 20, "pinched_fingers_tone3": 20, "pinched_fingers_tone4": 20, "pinched_fingers_tone5": 20, "pinching_hand": 20, "pinching_hand_dark_skin_ton": 20, "pinching_hand_light_skin_ton": 20, "pinching_hand_medium_dark_skin_ton": 20, "pinching_hand_medium_light_skin_ton": 20, "pinching_hand_medium_skin_ton": 20, "pinching_hand_tone1": 20, "pinching_hand_tone2": 20, "pinching_hand_tone3": 20, "pinching_hand_tone4": 20, "pinching_hand_tone5": 20, "pineappl": [20, 313], "ping_pong": 20, "pirate_flag": 20, "pisc": 20, "pitcairn_island": 20, "pizza": 20, "pi\u00f1ata": 20, "pk": 20, "pl": 20, "placard": 20, "place_of_worship": 20, "plate_with_cutleri": 20, "play_or_pause_button": 20, "play_paus": 20, "pleading_fac": 20, "plunger": 20, "pm": [20, 26, 357], "pn": 20, "point_down": 20, "point_down_tone1": 20, "point_down_tone2": 20, "point_down_tone3": 20, "point_down_tone4": 20, "point_down_tone5": 20, "point_left": 20, "point_left_tone1": 20, "point_left_tone2": 20, "point_left_tone3": 20, "point_left_tone4": 20, "point_left_tone5": 20, "point_right": 20, "point_right_tone1": 20, "point_right_tone2": 20, "point_right_tone3": 20, "point_right_tone4": 20, "point_right_tone5": 20, "point_up_2": 20, "point_up_2_tone1": 20, "point_up_2_tone2": 20, "point_up_2_tone3": 20, "point_up_2_tone4": 20, "point_up_2_tone5": 20, "point_up_tone1": 20, "point_up_tone2": 20, "point_up_tone3": 20, "point_up_tone4": 20, "point_up_tone5": 20, "poland": 20, "polar_bear": 20, "police_car": 20, "police_offic": 20, "police_officer_tone1": 20, "police_officer_tone2": 20, "police_officer_tone3": 20, "police_officer_tone4": 20, "police_officer_tone5": 20, "policeman": 20, "policewoman": 20, "poo": 20, "poodl": 20, "poop": 20, "popcorn": 20, "portug": 20, "post_offic": 20, "postal_horn": 20, "postbox": 20, "potato": 20, "potted_pl": 20, "pouch": 20, "poultry_leg": 20, "pound": [20, 24], "pound_symbol": 20, "pouting_cat": 20, "pouting_man": 20, "pouting_woman": 20, "pr": [20, 23, 277, 292], "prai": 20, "pray_tone1": 20, "pray_tone2": 20, "pray_tone3": 20, "pray_tone4": 20, "pray_tone5": 20, "prayer_bead": 20, "pregnant_woman": 20, "pregnant_woman_tone1": 20, "pregnant_woman_tone2": 20, "pregnant_woman_tone3": 20, "pregnant_woman_tone4": 20, "pregnant_woman_tone5": 20, "pretzel": 20, "previous_track": 20, "previous_track_button": 20, "princ": 20, "prince_tone1": 20, "prince_tone2": 20, "prince_tone3": 20, "prince_tone4": 20, "prince_tone5": 20, "princess": 20, "princess_tone1": 20, "princess_tone2": 20, "princess_tone3": 20, "princess_tone4": 20, "princess_tone5": 20, "printer": 20, "probing_can": 20, "projector": 20, "p": [20, 26, 50, 105, 108, 115, 133, 136, 190, 191, 195, 196, 202, 217, 229, 231, 232, 248, 261, 277, 281, 307, 309, 367, 430, 464, 470, 473, 474, 477, 478, 482, 518, 519, 520, 522, 524, 525, 526, 530, 573, 598, 599, 601, 602, 644, 646, 649, 655, 656, 657, 659, 661, 662, 676, 684, 745, 748, 749, 752, 754, 757, 766, 767, 768, 770, 772, 773, 776, 777, 778, 784, 786, 787, 796, 800, 805, 816, 835, 838, 851, 887, 906, 914, 915, 925, 948, 950, 967, 970, 978, 988, 996, 1005, 1012, 1023, 1034, 1049, 1062, 1078, 1085, 1087, 1148, 1226, 1250], "pt": [20, 804, 918, 1049], "pud": 20, "puerto_rico": 20, "punch": 20, "punch_tone1": 20, "punch_tone2": 20, "punch_tone3": 20, "punch_tone4": 20, "punch_tone5": 20, "purple_circl": 20, "purple_heart": 20, "purple_squar": 20, "purs": 20, "pushpin": 20, "put_litter_in_its_plac": 20, "pw": 20, "qa": 20, "qatar": 20, "rabbit2": 20, "rabbit": 20, "raccoon": 20, "race_car": 20, "racehors": 20, "racing_car": 20, "racing_motorcycl": 20, "radio": 20, "radio_button": 20, "radioact": 20, "radioactive_sign": 20, "rage": 20, "railroad_track": 20, "railway_car": 20, "railway_track": 20, "rainbow": 20, "rainbow_flag": 20, "raised_back_of_hand": 20, "raised_back_of_hand_tone1": 20, "raised_back_of_hand_tone2": 20, "raised_back_of_hand_tone3": 20, "raised_back_of_hand_tone4": 20, "raised_back_of_hand_tone5": 20, "raised_hand": 20, "raised_hand_tone1": 20, "raised_hand_tone2": 20, "raised_hand_tone3": 20, "raised_hand_tone4": 20, "raised_hand_tone5": 20, "raised_hand_with_fingers_splai": 20, "raised_hand_with_fingers_splayed_tone1": 20, "raised_hand_with_fingers_splayed_tone2": 20, "raised_hand_with_fingers_splayed_tone3": 20, "raised_hand_with_fingers_splayed_tone4": 20, "raised_hand_with_fingers_splayed_tone5": 20, "raised_hand_with_part_between_middle_and_ring_fing": 20, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 20, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 20, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 20, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 20, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 20, "raised_hands_tone1": 20, "raised_hands_tone2": 20, "raised_hands_tone3": 20, "raised_hands_tone4": 20, "raised_hands_tone5": 20, "raising_hand": 20, "raising_hand_man": 20, "raising_hand_tone1": 20, "raising_hand_tone2": 20, "raising_hand_tone3": 20, "raising_hand_tone4": 20, "raising_hand_tone5": 20, "raising_hand_woman": 20, "ram": [20, 192, 193, 197, 314, 887, 924, 926, 1011], "ramen": 20, "rat": 20, "razor": 20, "re": [20, 26, 50, 113, 120, 122, 192, 197, 228, 237, 240, 241, 251, 254, 261, 262, 264, 269, 271, 277, 281, 287, 289, 290, 299, 302, 306, 322, 323, 329, 351, 357, 363, 398, 403, 460, 506, 510, 534, 544, 569, 599, 646, 652, 770, 792, 856, 892, 901, 906, 949, 1041, 1062, 1078, 1082, 1087, 1092, 1111, 1134, 1186, 1191, 1213], "receipt": 20, "record_button": 20, "recycl": 20, "red_car": 20, "red_circl": 20, "red_envelop": 20, "red_hair": 20, "red_squar": 20, "regional_indicator_a": 20, "regional_indicator_b": 20, "regional_indicator_c": 20, "regional_indicator_d": 20, "regional_indicator_": 20, "regional_indicator_f": 20, "regional_indicator_g": 20, "regional_indicator_h": 20, "regional_indicator_i": 20, "regional_indicator_j": 20, "regional_indicator_k": 20, "regional_indicator_l": 20, "regional_indicator_m": 20, "regional_indicator_n": 20, "regional_indicator_o": 20, "regional_indicator_p": 20, "regional_indicator_q": 20, "regional_indicator_r": 20, "regional_indicator_t": 20, "regional_indicator_u": 20, "regional_indicator_v": 20, "regional_indicator_w": 20, "regional_indicator_x": 20, "regional_indicator_z": 20, "regist": [20, 24, 26, 190, 200, 207, 232, 236, 264, 277, 323, 380, 384, 446, 480, 551, 579, 600, 602, 609, 843, 850, 858, 865, 871, 883, 976, 993, 1009, 1013, 1117, 1207], "relax": 20, "reliev": [20, 45], "reminder_ribbon": 20, "repeat": [20, 31, 91, 115, 133, 137, 166, 168, 182, 188, 196, 250, 305, 370, 381, 405, 494, 506, 661, 840, 887, 917, 948, 952, 956, 959, 962, 967, 968, 985, 998, 1025, 1125], "repeat_on": 20, "rescue_worker_helmet": 20, "restroom": 20, "reunion": 20, "reversed_hand_with_middle_finger_extend": 20, "reversed_hand_with_middle_finger_extended_tone1": 20, "reversed_hand_with_middle_finger_extended_tone2": 20, "reversed_hand_with_middle_finger_extended_tone3": 20, "reversed_hand_with_middle_finger_extended_tone4": 20, "reversed_hand_with_middle_finger_extended_tone5": 20, "revolving_heart": 20, "rewind": [20, 390, 792], "rhino": 20, "rhinocero": 20, "ribbon": 20, "rice": 20, "rice_bal": 20, "rice_crack": 20, "rice_scen": 20, "right_anger_bubbl": 20, "right_facing_fist": 20, "right_facing_fist_tone1": 20, "right_facing_fist_tone2": 20, "right_facing_fist_tone3": 20, "right_facing_fist_tone4": 20, "right_facing_fist_tone5": 20, "right_fist": 20, "right_fist_tone1": 20, "right_fist_tone2": 20, "right_fist_tone3": 20, "right_fist_tone4": 20, "right_fist_tone5": 20, "ring": [20, 23, 26, 948], "ringed_planet": 20, "ro": [20, 1031], "robot": [20, 277], "robot_fac": 20, "rock": [20, 318, 504, 1082, 1084, 1220], "rocket": [20, 197], "rofl": 20, "roll_ey": 20, "roll_of_pap": 20, "rolled_up_newspap": 20, "roller_coast": 20, "roller_sk": 20, "rolling_on_the_floor_laugh": 20, "romania": 20, "rooster": 20, "rosett": 20, "rotating_light": 20, "round_pushpin": 20, "rowboat": 20, "rowboat_tone1": 20, "rowboat_tone2": 20, "rowboat_tone3": 20, "rowboat_tone4": 20, "rowboat_tone5": 20, "rowing_man": 20, "rowing_woman": 20, "ru": 20, "rugby_footbal": 20, "runner": [20, 32, 1231, 1259], "runner_tone1": 20, "runner_tone2": 20, "runner_tone3": 20, "runner_tone4": 20, "runner_tone5": 20, "running_man": 20, "running_shirt_with_sash": 20, "running_woman": 20, "russia": [20, 1204], "rw": [20, 48, 50, 191, 192, 201, 208, 277, 287, 538, 838, 843, 851, 918, 930, 933, 944, 947, 967, 970, 986, 993, 994, 995, 997, 1006, 1017, 1020, 1021, 1029, 1031, 1059, 1065, 1066, 1067, 1078, 1080, 1081, 1117, 1146], "rwanda": 20, "safety_pin": 20, "safety_vest": 20, "sagittariu": 20, "sailboat": 20, "saint_martin": 20, "sake": 20, "salad": 20, "salt": [20, 944], "samoa": 20, "san_marino": 20, "sandal": 20, "sandwich": 20, "santa": 20, "santa_tone1": 20, "santa_tone2": 20, "santa_tone3": 20, "santa_tone4": 20, "santa_tone5": 20, "sao_tome_princip": 20, "sari": 20, "satellit": 20, "satellite_orbit": 20, "saudi": 20, "saudi_arabia": 20, "saudiarabia": 20, "sauropod": 20, "saxophon": 20, "sb": [20, 306], "sc": [20, 23], "scale": [20, 69, 221, 267, 281, 494, 993, 1082], "scarf": 20, "school": [20, 281, 585, 620, 1213, 1243], "school_satchel": 20, "scientist": [20, 221, 416, 1114, 1196, 1197, 1198], "scientist_dark_skin_ton": 20, "scientist_light_skin_ton": 20, "scientist_medium_dark_skin_ton": 20, "scientist_medium_light_skin_ton": 20, "scientist_medium_skin_ton": 20, "scientist_tone1": 20, "scientist_tone2": 20, "scientist_tone3": 20, "scientist_tone4": 20, "scientist_tone5": 20, "scissor": 20, "scooter": 20, "scorpion": 20, "scorpiu": 20, "scotland": 20, "scream": [20, 250, 948], "scream_cat": 20, "screwdriv": 20, "scroll": [20, 196, 585], "sd": [20, 54, 188, 261, 277, 281, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 887], "se": [20, 649], "seal": 20, "seat": 20, "second_plac": 20, "second_place_med": 20, "secret": [20, 729, 750, 1002, 1089, 1202], "see_no_evil": 20, "seedl": 20, "selfi": 20, "selfie_tone1": 20, "selfie_tone2": 20, "selfie_tone3": 20, "selfie_tone4": 20, "selfie_tone5": 20, "seneg": 20, "serbia": 20, "service_dog": 20, "seven": [20, 24, 75, 209, 222, 232, 240, 269, 357, 363, 398, 1158, 1169], "sewing_needl": 20, "seychel": 20, "sg": 20, "sh": [20, 48, 197, 201, 289, 526, 860, 914, 915, 933, 995, 1017, 1027, 1178], "shaking_hand": 20, "shaking_hands_tone1": 20, "shaking_hands_tone2": 20, "shaking_hands_tone3": 20, "shaking_hands_tone4": 20, "shaking_hands_tone5": 20, "shallow_pan_of_food": 20, "shamrock": 20, "shark": 20, "shaved_ic": 20, "sheep": 20, "shelled_peanut": 20, "shield": [20, 159, 190], "shinto_shrin": 20, "ship": [20, 195], "shirt": [20, 31], "shit": [20, 248], "shop": [20, 163, 313], "shopping_bag": 20, "shopping_cart": 20, "shopping_trollei": 20, "shower": 20, "shrimp": 20, "shrug": 20, "shrug_tone1": 20, "shrug_tone2": 20, "shrug_tone3": 20, "shrug_tone4": 20, "shrug_tone5": 20, "shushing_fac": 20, "si": 20, "sick": [20, 548], "sierra_leon": 20, "sign_of_the_horn": 20, "sign_of_the_horns_tone1": 20, "sign_of_the_horns_tone2": 20, "sign_of_the_horns_tone3": 20, "sign_of_the_horns_tone4": 20, "sign_of_the_horns_tone5": 20, "signal_strength": 20, "singapor": 20, "singer": 20, "singer_dark_skin_ton": 20, "singer_light_skin_ton": 20, "singer_medium_dark_skin_ton": 20, "singer_medium_light_skin_ton": 20, "singer_medium_skin_ton": 20, "singer_tone1": 20, "singer_tone2": 20, "singer_tone3": 20, "singer_tone4": 20, "singer_tone5": 20, "sint_maarten": 20, "six": [20, 209, 222, 232, 240, 258, 357, 363, 398, 1125], "six_pointed_star": 20, "sj": 20, "sk": 20, "skateboard": 20, "skeleton": [20, 193, 534, 725, 916], "ski": 20, "skier": 20, "skull": 20, "skull_and_crossbon": 20, "skull_crossbon": 20, "skunk": 20, "sl": [20, 390, 1049], "sled": 20, "sleeping_accommod": 20, "sleeping_b": 20, "sleepi": 20, "sleuth_or_spi": 20, "sleuth_or_spy_tone1": 20, "sleuth_or_spy_tone2": 20, "sleuth_or_spy_tone3": 20, "sleuth_or_spy_tone4": 20, "sleuth_or_spy_tone5": 20, "slight_frown": 20, "slight_smil": 20, "slightly_frowning_fac": 20, "slightly_smiling_fac": 20, "slot_machin": 20, "sloth": 20, "slovakia": 20, "slovenia": [20, 256], "sm": 20, "small_airplan": 20, "small_blue_diamond": 20, "small_orange_diamond": 20, "small_red_triangl": 20, "small_red_triangle_down": 20, "smile": [20, 23], "smile_cat": 20, "smilei": [20, 50], "smiley_cat": 20, "smiling_face_with_3_heart": 20, "smiling_face_with_tear": 20, "smiling_imp": 20, "smirk": 20, "smirk_cat": 20, "smoke": 20, "sn": 20, "snail": 20, "snake": 20, "sneez": 20, "sneezing_fac": 20, "snow_capped_mountain": 20, "snowboard": 20, "snowboarder_dark_skin_ton": 20, "snowboarder_light_skin_ton": 20, "snowboarder_medium_dark_skin_ton": 20, "snowboarder_medium_light_skin_ton": 20, "snowboarder_medium_skin_ton": 20, "snowboarder_tone1": 20, "snowboarder_tone2": 20, "snowboarder_tone3": 20, "snowboarder_tone4": 20, "snowboarder_tone5": 20, "snowflak": 20, "snowman2": 20, "snowman": 20, "snowman_with_snow": 20, "sob": 20, "soccer": 20, "sock": 20, "softbal": 20, "solomon_island": 20, "somalia": 20, "soon": [20, 191, 192, 197, 649, 736, 887, 995, 1049, 1063, 1207], "sound": [20, 49, 51, 189, 193, 196, 197, 265, 371, 806, 930, 986, 994, 995, 1225], "south_africa": 20, "south_georgia_south_sandwich_island": 20, "south_sudan": 20, "space_invad": 20, "spade": [20, 26], "spaghetti": [20, 120, 494, 505], "spain": 20, "sparkl": 20, "sparkler": 20, "sparkling_heart": 20, "speak_no_evil": 20, "speaker": [20, 824], "speaking_head": 20, "speaking_head_in_silhouett": 20, "speech_balloon": 20, "speech_left": 20, "speedboat": 20, "spider": 20, "spider_web": 20, "spiral_calendar": 20, "spiral_calendar_pad": 20, "spiral_note_pad": 20, "spiral_notepad": 20, "spong": 20, "spoon": 20, "sports_med": 20, "spy": 20, "spy_tone1": 20, "spy_tone2": 20, "spy_tone3": 20, "spy_tone4": 20, "spy_tone5": 20, "squeeze_bottl": 20, "squid": 20, "sr": [20, 261, 1148], "sri_lanka": 20, "ss": [20, 242, 245, 254, 258, 261, 269, 271, 277, 281, 287, 290, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367, 519, 721, 1245, 1250], "st": [20, 163, 255, 506, 1059, 1061, 1062], "st_barthelemi": 20, "st_helena": 20, "st_kitts_nevi": 20, "st_lucia": 20, "st_pierre_miquelon": 20, "st_vincent_grenadin": 20, "stadium": 20, "star2": 20, "star": [20, 26, 685, 995, 1080], "star_and_cresc": 20, "star_of_david": 20, "star_struck": 20, "station": 20, "statue_of_liberti": 20, "steam_locomot": 20, "stethoscop": 20, "stew": 20, "stop_button": 20, "stop_sign": 20, "stopwatch": 20, "straight_rul": 20, "strawberri": 20, "stuck_out_tongu": 20, "stuck_out_tongue_closed_ey": 20, "stuck_out_tongue_winking_ey": 20, "student": [20, 92, 97, 115, 133, 197, 289, 383, 384, 389, 390, 398, 1090, 1226], "student_dark_skin_ton": 20, "student_light_skin_ton": 20, "student_medium_dark_skin_ton": 20, "student_medium_light_skin_ton": 20, "student_medium_skin_ton": 20, "student_tone1": 20, "student_tone2": 20, "student_tone3": 20, "student_tone4": 20, "student_tone5": 20, "studio_microphon": 20, "stuffed_flatbread": 20, "stuffed_pita": 20, "sudan": 20, "sun_behind_large_cloud": 20, "sun_behind_rain_cloud": 20, "sun_behind_small_cloud": 20, "sun_with_fac": 20, "sunflow": 20, "sunni": [20, 100, 308, 311, 371, 590, 601, 607, 609, 642, 840, 1044, 1089], "sunris": 20, "sunrise_over_mountain": 20, "superhero": 20, "superhero_dark_skin_ton": 20, "superhero_light_skin_ton": 20, "superhero_medium_dark_skin_ton": 20, "superhero_medium_light_skin_ton": 20, "superhero_medium_skin_ton": 20, "superhero_tone1": 20, "superhero_tone2": 20, "superhero_tone3": 20, "superhero_tone4": 20, "superhero_tone5": 20, "supervillain": 20, "supervillain_dark_skin_ton": 20, "supervillain_light_skin_ton": 20, "supervillain_medium_dark_skin_ton": 20, "supervillain_medium_light_skin_ton": 20, "supervillain_medium_skin_ton": 20, "supervillain_tone1": 20, "supervillain_tone2": 20, "supervillain_tone3": 20, "supervillain_tone4": 20, "supervillain_tone5": 20, "surfer": 20, "surfer_tone1": 20, "surfer_tone2": 20, "surfer_tone3": 20, "surfer_tone4": 20, "surfer_tone5": 20, "surfing_man": 20, "surfing_woman": 20, "surinam": 20, "sushi": 20, "suspension_railwai": 20, "sv": [20, 568, 569], "swan": 20, "swaziland": 20, "sweat": 20, "sweat_drop": 20, "sweat_smil": 20, "sweden": 20, "sweet_potato": 20, "swimmer": 20, "swimmer_tone1": 20, "swimmer_tone2": 20, "swimmer_tone3": 20, "swimmer_tone4": 20, "swimmer_tone5": 20, "swimming_man": 20, "swimming_woman": 20, "switzerland": 20, "sx": 20, "symbol": [20, 21, 26, 115, 137, 201, 229, 250, 258, 264, 267, 274, 277, 295, 304, 305, 325, 326, 369, 370, 435, 450, 459, 466, 472, 476, 479, 483, 486, 487, 492, 496, 501, 502, 744, 782, 788, 837, 838, 839, 840, 843, 862, 865, 887, 917, 933, 948, 968, 970, 985, 994, 1097, 1250], "synagogu": 20, "syria": 20, "syring": 20, "sz": [20, 192, 195], "t_rex": 20, "ta": 20, "table_tenni": 20, "taco": 20, "tada": 20, "taiwan": 20, "tajikistan": 20, "takeout_box": 20, "tamal": 20, "tanabata_tre": 20, "tangerin": 20, "tanzania": 20, "tauru": 20, "taxi": 20, "tc": 20, "td": [20, 253], "tea": 20, "teacher": [20, 97, 195, 516, 537, 914, 915, 1078], "teacher_dark_skin_ton": 20, "teacher_light_skin_ton": 20, "teacher_medium_dark_skin_ton": 20, "teacher_medium_light_skin_ton": 20, "teacher_medium_skin_ton": 20, "teacher_tone1": 20, "teacher_tone2": 20, "teacher_tone3": 20, "teacher_tone4": 20, "teacher_tone5": 20, "teapot": 20, "technologist": 20, "technologist_dark_skin_ton": 20, "technologist_light_skin_ton": 20, "technologist_medium_dark_skin_ton": 20, "technologist_medium_light_skin_ton": 20, "technologist_medium_skin_ton": 20, "technologist_tone1": 20, "technologist_tone2": 20, "technologist_tone3": 20, "technologist_tone4": 20, "technologist_tone5": 20, "teddy_bear": 20, "telephon": 20, "telephone_receiv": 20, "telescop": 20, "ten": [20, 192, 212, 232, 271, 277, 363, 980], "tenni": 20, "tent": 20, "test_tub": 20, "tf": [20, 284, 913, 1087], "tg": 20, "th": [20, 225, 253, 428, 470, 599, 676, 1127, 1136], "thailand": 20, "thermomet": [20, 60, 73, 75, 76, 216, 225, 277, 297, 380, 402, 404, 405, 407, 541, 548, 551, 553, 562, 563, 576, 590, 630, 631, 639, 642, 716, 719, 840, 995], "thermometer_fac": 20, "thinking_fac": 20, "third_plac": 20, "third_place_med": 20, "thong_sand": 20, "thought_balloon": 20, "thread": [20, 49, 51, 53, 74, 80, 82, 188, 195, 206, 207, 216, 221, 225, 236, 258, 264, 265, 267, 274, 277, 292, 293, 294, 296, 305, 314, 316, 340, 353, 354, 372, 380, 381, 408, 411, 412, 413, 500, 549, 566, 580, 643, 784, 792, 801, 803, 810, 812, 815, 816, 839, 840, 869, 879, 885, 899, 907, 985, 1007, 1026, 1036, 1038, 1039, 1041, 1043, 1047, 1048, 1050, 1061, 1062, 1063, 1100, 1101, 1191, 1233, 1240, 1241, 1242, 1243, 1251, 1253, 1254], "three": [20, 24, 26, 31, 50, 101, 102, 120, 148, 185, 191, 203, 205, 209, 210, 221, 222, 225, 226, 232, 237, 239, 240, 242, 248, 256, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 307, 308, 309, 311, 317, 318, 319, 323, 328, 329, 341, 345, 351, 357, 363, 367, 371, 398, 416, 484, 522, 678, 723, 920, 921, 930, 933, 948, 986, 993, 995, 1015, 1049, 1058, 1094, 1104, 1122, 1126, 1136, 1138, 1140, 1153, 1159, 1190, 1191, 1240, 1242, 1243, 1253, 1262], "three_button_mous": 20, "thumbdown": 20, "thumbdown_tone1": 20, "thumbdown_tone2": 20, "thumbdown_tone3": 20, "thumbdown_tone4": 20, "thumbdown_tone5": 20, "thumbsdown_tone1": 20, "thumbsdown_tone2": 20, "thumbsdown_tone3": 20, "thumbsdown_tone4": 20, "thumbsdown_tone5": 20, "thumbsup_tone1": 20, "thumbsup_tone2": 20, "thumbsup_tone3": 20, "thumbsup_tone4": 20, "thumbsup_tone5": 20, "thumbup": 20, "thumbup_tone1": 20, "thumbup_tone2": 20, "thumbup_tone3": 20, "thumbup_tone4": 20, "thumbup_tone5": 20, "thunder_cloud_and_rain": 20, "thunder_cloud_rain": 20, "ticket": 20, "tiger2": 20, "tiger": 20, "timer": [20, 49, 51, 53, 115, 127, 161, 213, 314, 485, 817, 840, 864, 889, 896, 902, 905, 906, 908, 920, 921, 924, 985, 994, 1010, 1014, 1026, 1047, 1053, 1055, 1063, 1251, 1255], "timer_clock": 20, "timor_lest": 20, "tipping_hand_man": 20, "tipping_hand_woman": 20, "tired_fac": 20, "tj": 20, "tk": 20, "tl": [20, 195], "tm": 20, "tn": [20, 229], "togo": 20, "toilet": [20, 267, 620, 877, 1100], "tokelau": 20, "tokyo_tow": 20, "tomato": 20, "tone1": 20, "tone2": 20, "tone3": 20, "tone4": 20, "tone5": 20, "tonga": 20, "tongu": [20, 1241], "toolbox": [20, 210], "tool": [20, 48, 59, 115, 138, 141, 169, 185, 197, 201, 203, 205, 221, 229, 231, 241, 251, 277, 295, 304, 319, 324, 325, 331, 332, 342, 347, 348, 357, 369, 374, 376, 377, 380, 398, 401, 403, 416, 417, 462, 497, 499, 500, 504, 526, 715, 725, 770, 788, 840, 911, 917, 918, 932, 985, 995, 1006, 1009, 1066, 1067, 1068, 1076, 1080, 1081, 1114, 1115, 1118, 1146, 1210, 1239, 1241, 1243, 1245, 1247, 1250, 1257, 1264], "tooth": 20, "toothbrush": 20, "tophat": 20, "tornado": 20, "tr": [20, 153, 154, 253], "track_next": 20, "track_previ": 20, "trackbal": 20, "tractor": 20, "traffic_light": 20, "train2": 20, "tram": 20, "transgender_flag": 20, "transgender_symbol": 20, "triangular_flag_on_post": 20, "triangular_rul": 20, "trident": 20, "trinidad_tobago": 20, "tristan_da_cunha": 20, "triumph": 20, "trolleybu": 20, "trophi": 20, "tropical_drink": 20, "tropical_fish": 20, "truck": 20, "trumpet": 20, "tt": 20, "tulip": 20, "tumbler_glass": 20, "tunisia": 20, "turkei": 20, "turkmenistan": 20, "turks_caicos_island": 20, "turtl": 20, "tuvalu": 20, "tuxedo_tone1": 20, "tuxedo_tone2": 20, "tuxedo_tone3": 20, "tuxedo_tone4": 20, "tuxedo_tone5": 20, "tw": 20, "twisted_rightwards_arrow": 20, "two_heart": 20, "two_men_holding_hand": 20, "two_women_holding_hand": 20, "tz": 20, "u5272": 20, "u5408": 20, "u55b6": 20, "u6307": 20, "u6708": 20, "u6709": 20, "u6e80": 20, "u7121": 20, "u7533": 20, "u7981": 20, "u7a7a": 20, "ua": [20, 256, 265, 340], "ug": 20, "uganda": 20, "ukrain": 20, "umbrella2": 20, "umbrella": 20, "umbrella_on_ground": 20, "unamus": 20, "underag": 20, "unicorn": 20, "unicorn_fac": 20, "united_arab_emir": 20, "united_n": 20, "united_st": 20, "unlock": [20, 812, 814, 816, 879, 885, 1036], "upside_down": 20, "upside_down_fac": 20, "urn": 20, "uruguai": 20, "us_virgin_island": 20, "ui": [20, 55, 197, 443, 721], "uz": 20, "uzbekistan": 20, "v_tone1": 20, "v_tone2": 20, "v_tone3": 20, "v_tone4": 20, "v_tone5": 20, "va": [20, 308, 311], "vampir": 20, "vampire_dark_skin_ton": 20, "vampire_light_skin_ton": 20, "vampire_medium_dark_skin_ton": 20, "vampire_medium_light_skin_ton": 20, "vampire_medium_skin_ton": 20, "vampire_tone1": 20, "vampire_tone2": 20, "vampire_tone3": 20, "vampire_tone4": 20, "vampire_tone5": 20, "vanuatu": 20, "vatican_c": 20, "vc": [20, 170, 196], "ve": [20, 190, 192, 930, 1225], "venezuela": 20, "vertical_traffic_light": 20, "vg": 20, "vh": 20, "vi": [20, 819], "vibration_mod": 20, "video_camera": 20, "video_gam": 20, "vietnam": 20, "violin": 20, "virgo": 20, "vn": 20, "volcano": 20, "volleybal": 20, "vu": 20, "vulcan": 20, "vulcan_salut": 20, "vulcan_tone1": 20, "vulcan_tone2": 20, "vulcan_tone3": 20, "vulcan_tone4": 20, "vulcan_tone5": 20, "waffl": 20, "wale": 20, "walk": [20, 189, 208, 221, 317, 318, 339, 366, 368, 370, 373, 405, 416, 742, 759, 932, 995, 1102], "walking_man": 20, "walking_tone1": 20, "walking_tone2": 20, "walking_tone3": 20, "walking_tone4": 20, "walking_tone5": 20, "walking_woman": 20, "wallis_futuna": 20, "waning_crescent_moon": 20, "waning_gibbous_moon": 20, "warn": [20, 28, 133, 201, 241, 251, 302, 314, 395, 406, 430, 454, 485, 486, 488, 524, 526, 535, 543, 598, 600, 644, 648, 698, 743, 755, 840, 856, 862, 865, 925, 985, 1015, 1026, 1042, 1064, 1089, 1140, 1219], "wastebasket": 20, "water_buffalo": 20, "water_polo": 20, "water_polo_tone1": 20, "water_polo_tone2": 20, "water_polo_tone3": 20, "water_polo_tone4": 20, "water_polo_tone5": 20, "watermelon": [20, 313], "wave": [20, 22, 26, 305, 322], "wave_tone1": 20, "wave_tone2": 20, "wave_tone3": 20, "wave_tone4": 20, "wave_tone5": 20, "waving_black_flag": 20, "waving_white_flag": 20, "wavy_dash": 20, "waxing_crescent_moon": 20, "waxing_gibbous_moon": 20, "wc": [20, 249, 250, 267, 287, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 506, 744, 782, 837, 839, 840, 928, 931, 982, 996, 1175], "weari": 20, "wed": [20, 248], "weight_lift": 20, "weight_lifter_tone1": 20, "weight_lifter_tone2": 20, "weight_lifter_tone3": 20, "weight_lifter_tone4": 20, "weight_lifter_tone5": 20, "weight_lifting_man": 20, "weight_lifting_woman": 20, "western_sahara": 20, "wf": 20, "whale2": 20, "whale": 20, "wheel_of_dharma": 20, "wheelchair": 20, "whiski": 20, "white_check_mark": 20, "white_circl": 20, "white_flag": 20, "white_flow": 20, "white_frowning_fac": 20, "white_hair": 20, "white_heart": 20, "white_large_squar": 20, "white_medium_small_squar": 20, "white_medium_squar": 20, "white_small_squar": 20, "white_square_button": 20, "white_sun_behind_cloud": 20, "white_sun_behind_cloud_with_rain": 20, "white_sun_cloud": 20, "white_sun_rain_cloud": 20, "white_sun_small_cloud": 20, "white_sun_with_small_cloud": 20, "wilted_flow": 20, "wilted_ros": 20, "wind_blowing_fac": 20, "wind_chim": 20, "wind_fac": 20, "wine_glass": 20, "wolf": 20, "woman": 20, "woman_and_man_holding_hands_dark_skin_ton": 20, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 20, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 20, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 20, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 20, "woman_and_man_holding_hands_light_skin_ton": 20, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 20, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 20, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 20, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 20, "woman_and_man_holding_hands_medium_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 20, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 20, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 20, "woman_and_man_holding_hands_medium_light_skin_ton": 20, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 20, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 20, "woman_and_man_holding_hands_medium_skin_ton": 20, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 20, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 20, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 20, "woman_and_man_holding_hands_tone1": 20, "woman_and_man_holding_hands_tone1_tone2": 20, "woman_and_man_holding_hands_tone1_tone3": 20, "woman_and_man_holding_hands_tone1_tone4": 20, "woman_and_man_holding_hands_tone1_tone5": 20, "woman_and_man_holding_hands_tone2": 20, "woman_and_man_holding_hands_tone2_tone1": 20, "woman_and_man_holding_hands_tone2_tone3": 20, "woman_and_man_holding_hands_tone2_tone4": 20, "woman_and_man_holding_hands_tone2_tone5": 20, "woman_and_man_holding_hands_tone3": 20, "woman_and_man_holding_hands_tone3_tone1": 20, "woman_and_man_holding_hands_tone3_tone2": 20, "woman_and_man_holding_hands_tone3_tone4": 20, "woman_and_man_holding_hands_tone3_tone5": 20, "woman_and_man_holding_hands_tone4": 20, "woman_and_man_holding_hands_tone4_tone1": 20, "woman_and_man_holding_hands_tone4_tone2": 20, "woman_and_man_holding_hands_tone4_tone3": 20, "woman_and_man_holding_hands_tone4_tone5": 20, "woman_and_man_holding_hands_tone5": 20, "woman_and_man_holding_hands_tone5_tone1": 20, "woman_and_man_holding_hands_tone5_tone2": 20, "woman_and_man_holding_hands_tone5_tone3": 20, "woman_and_man_holding_hands_tone5_tone4": 20, "woman_artist": 20, "woman_artist_dark_skin_ton": 20, "woman_artist_light_skin_ton": 20, "woman_artist_medium_dark_skin_ton": 20, "woman_artist_medium_light_skin_ton": 20, "woman_artist_medium_skin_ton": 20, "woman_artist_tone1": 20, "woman_artist_tone2": 20, "woman_artist_tone3": 20, "woman_artist_tone4": 20, "woman_artist_tone5": 20, "woman_astronaut": 20, "woman_astronaut_dark_skin_ton": 20, "woman_astronaut_light_skin_ton": 20, "woman_astronaut_medium_dark_skin_ton": 20, "woman_astronaut_medium_light_skin_ton": 20, "woman_astronaut_medium_skin_ton": 20, "woman_astronaut_tone1": 20, "woman_astronaut_tone2": 20, "woman_astronaut_tone3": 20, "woman_astronaut_tone4": 20, "woman_astronaut_tone5": 20, "woman_bald": 20, "woman_bald_dark_skin_ton": 20, "woman_bald_light_skin_ton": 20, "woman_bald_medium_dark_skin_ton": 20, "woman_bald_medium_light_skin_ton": 20, "woman_bald_medium_skin_ton": 20, "woman_bald_tone1": 20, "woman_bald_tone2": 20, "woman_bald_tone3": 20, "woman_bald_tone4": 20, "woman_bald_tone5": 20, "woman_beard": 20, "woman_bik": 20, "woman_biking_dark_skin_ton": 20, "woman_biking_light_skin_ton": 20, "woman_biking_medium_dark_skin_ton": 20, "woman_biking_medium_light_skin_ton": 20, "woman_biking_medium_skin_ton": 20, "woman_biking_tone1": 20, "woman_biking_tone2": 20, "woman_biking_tone3": 20, "woman_biking_tone4": 20, "woman_biking_tone5": 20, "woman_bouncing_bal": 20, "woman_bouncing_ball_dark_skin_ton": 20, "woman_bouncing_ball_light_skin_ton": 20, "woman_bouncing_ball_medium_dark_skin_ton": 20, "woman_bouncing_ball_medium_light_skin_ton": 20, "woman_bouncing_ball_medium_skin_ton": 20, "woman_bouncing_ball_tone1": 20, "woman_bouncing_ball_tone2": 20, "woman_bouncing_ball_tone3": 20, "woman_bouncing_ball_tone4": 20, "woman_bouncing_ball_tone5": 20, "woman_bow": 20, "woman_bowing_dark_skin_ton": 20, "woman_bowing_light_skin_ton": 20, "woman_bowing_medium_dark_skin_ton": 20, "woman_bowing_medium_light_skin_ton": 20, "woman_bowing_medium_skin_ton": 20, "woman_bowing_tone1": 20, "woman_bowing_tone2": 20, "woman_bowing_tone3": 20, "woman_bowing_tone4": 20, "woman_bowing_tone5": 20, "woman_cartwheel": 20, "woman_cartwheeling_dark_skin_ton": 20, "woman_cartwheeling_light_skin_ton": 20, "woman_cartwheeling_medium_dark_skin_ton": 20, "woman_cartwheeling_medium_light_skin_ton": 20, "woman_cartwheeling_medium_skin_ton": 20, "woman_cartwheeling_tone1": 20, "woman_cartwheeling_tone2": 20, "woman_cartwheeling_tone3": 20, "woman_cartwheeling_tone4": 20, "woman_cartwheeling_tone5": 20, "woman_climb": 20, "woman_climbing_dark_skin_ton": 20, "woman_climbing_light_skin_ton": 20, "woman_climbing_medium_dark_skin_ton": 20, "woman_climbing_medium_light_skin_ton": 20, "woman_climbing_medium_skin_ton": 20, "woman_climbing_tone1": 20, "woman_climbing_tone2": 20, "woman_climbing_tone3": 20, "woman_climbing_tone4": 20, "woman_climbing_tone5": 20, "woman_construction_work": 20, "woman_construction_worker_dark_skin_ton": 20, "woman_construction_worker_light_skin_ton": 20, "woman_construction_worker_medium_dark_skin_ton": 20, "woman_construction_worker_medium_light_skin_ton": 20, "woman_construction_worker_medium_skin_ton": 20, "woman_construction_worker_tone1": 20, "woman_construction_worker_tone2": 20, "woman_construction_worker_tone3": 20, "woman_construction_worker_tone4": 20, "woman_construction_worker_tone5": 20, "woman_cook": 20, "woman_cook_dark_skin_ton": 20, "woman_cook_light_skin_ton": 20, "woman_cook_medium_dark_skin_ton": 20, "woman_cook_medium_light_skin_ton": 20, "woman_cook_medium_skin_ton": 20, "woman_cook_tone1": 20, "woman_cook_tone2": 20, "woman_cook_tone3": 20, "woman_cook_tone4": 20, "woman_cook_tone5": 20, "woman_curly_hair": 20, "woman_curly_haired_dark_skin_ton": 20, "woman_curly_haired_light_skin_ton": 20, "woman_curly_haired_medium_dark_skin_ton": 20, "woman_curly_haired_medium_light_skin_ton": 20, "woman_curly_haired_medium_skin_ton": 20, "woman_curly_haired_tone1": 20, "woman_curly_haired_tone2": 20, "woman_curly_haired_tone3": 20, "woman_curly_haired_tone4": 20, "woman_curly_haired_tone5": 20, "woman_dark_skin_tone_beard": 20, "woman_detect": 20, "woman_detective_dark_skin_ton": 20, "woman_detective_light_skin_ton": 20, "woman_detective_medium_dark_skin_ton": 20, "woman_detective_medium_light_skin_ton": 20, "woman_detective_medium_skin_ton": 20, "woman_detective_tone1": 20, "woman_detective_tone2": 20, "woman_detective_tone3": 20, "woman_detective_tone4": 20, "woman_detective_tone5": 20, "woman_elf": 20, "woman_elf_dark_skin_ton": 20, "woman_elf_light_skin_ton": 20, "woman_elf_medium_dark_skin_ton": 20, "woman_elf_medium_light_skin_ton": 20, "woman_elf_medium_skin_ton": 20, "woman_elf_tone1": 20, "woman_elf_tone2": 20, "woman_elf_tone3": 20, "woman_elf_tone4": 20, "woman_elf_tone5": 20, "woman_facepalm": 20, "woman_facepalming_dark_skin_ton": 20, "woman_facepalming_light_skin_ton": 20, "woman_facepalming_medium_dark_skin_ton": 20, "woman_facepalming_medium_light_skin_ton": 20, "woman_facepalming_medium_skin_ton": 20, "woman_facepalming_tone1": 20, "woman_facepalming_tone2": 20, "woman_facepalming_tone3": 20, "woman_facepalming_tone4": 20, "woman_facepalming_tone5": 20, "woman_factory_work": 20, "woman_factory_worker_dark_skin_ton": 20, "woman_factory_worker_light_skin_ton": 20, "woman_factory_worker_medium_dark_skin_ton": 20, "woman_factory_worker_medium_light_skin_ton": 20, "woman_factory_worker_medium_skin_ton": 20, "woman_factory_worker_tone1": 20, "woman_factory_worker_tone2": 20, "woman_factory_worker_tone3": 20, "woman_factory_worker_tone4": 20, "woman_factory_worker_tone5": 20, "woman_fairi": 20, "woman_fairy_dark_skin_ton": 20, "woman_fairy_light_skin_ton": 20, "woman_fairy_medium_dark_skin_ton": 20, "woman_fairy_medium_light_skin_ton": 20, "woman_fairy_medium_skin_ton": 20, "woman_fairy_tone1": 20, "woman_fairy_tone2": 20, "woman_fairy_tone3": 20, "woman_fairy_tone4": 20, "woman_fairy_tone5": 20, "woman_farm": 20, "woman_farmer_dark_skin_ton": 20, "woman_farmer_light_skin_ton": 20, "woman_farmer_medium_dark_skin_ton": 20, "woman_farmer_medium_light_skin_ton": 20, "woman_farmer_medium_skin_ton": 20, "woman_farmer_tone1": 20, "woman_farmer_tone2": 20, "woman_farmer_tone3": 20, "woman_farmer_tone4": 20, "woman_farmer_tone5": 20, "woman_feeding_babi": 20, "woman_feeding_baby_dark_skin_ton": 20, "woman_feeding_baby_light_skin_ton": 20, "woman_feeding_baby_medium_dark_skin_ton": 20, "woman_feeding_baby_medium_light_skin_ton": 20, "woman_feeding_baby_medium_skin_ton": 20, "woman_feeding_baby_tone1": 20, "woman_feeding_baby_tone2": 20, "woman_feeding_baby_tone3": 20, "woman_feeding_baby_tone4": 20, "woman_feeding_baby_tone5": 20, "woman_firefight": 20, "woman_firefighter_dark_skin_ton": 20, "woman_firefighter_light_skin_ton": 20, "woman_firefighter_medium_dark_skin_ton": 20, "woman_firefighter_medium_light_skin_ton": 20, "woman_firefighter_medium_skin_ton": 20, "woman_firefighter_tone1": 20, "woman_firefighter_tone2": 20, "woman_firefighter_tone3": 20, "woman_firefighter_tone4": 20, "woman_firefighter_tone5": 20, "woman_frown": 20, "woman_frowning_dark_skin_ton": 20, "woman_frowning_light_skin_ton": 20, "woman_frowning_medium_dark_skin_ton": 20, "woman_frowning_medium_light_skin_ton": 20, "woman_frowning_medium_skin_ton": 20, "woman_frowning_tone1": 20, "woman_frowning_tone2": 20, "woman_frowning_tone3": 20, "woman_frowning_tone4": 20, "woman_frowning_tone5": 20, "woman_geni": 20, "woman_gesturing_no": 20, "woman_gesturing_no_dark_skin_ton": 20, "woman_gesturing_no_light_skin_ton": 20, "woman_gesturing_no_medium_dark_skin_ton": 20, "woman_gesturing_no_medium_light_skin_ton": 20, "woman_gesturing_no_medium_skin_ton": 20, "woman_gesturing_no_tone1": 20, "woman_gesturing_no_tone2": 20, "woman_gesturing_no_tone3": 20, "woman_gesturing_no_tone4": 20, "woman_gesturing_no_tone5": 20, "woman_gesturing_ok": 20, "woman_gesturing_ok_dark_skin_ton": 20, "woman_gesturing_ok_light_skin_ton": 20, "woman_gesturing_ok_medium_dark_skin_ton": 20, "woman_gesturing_ok_medium_light_skin_ton": 20, "woman_gesturing_ok_medium_skin_ton": 20, "woman_gesturing_ok_tone1": 20, "woman_gesturing_ok_tone2": 20, "woman_gesturing_ok_tone3": 20, "woman_gesturing_ok_tone4": 20, "woman_gesturing_ok_tone5": 20, "woman_getting_face_massag": 20, "woman_getting_face_massage_dark_skin_ton": 20, "woman_getting_face_massage_light_skin_ton": 20, "woman_getting_face_massage_medium_dark_skin_ton": 20, "woman_getting_face_massage_medium_light_skin_ton": 20, "woman_getting_face_massage_medium_skin_ton": 20, "woman_getting_face_massage_tone1": 20, "woman_getting_face_massage_tone2": 20, "woman_getting_face_massage_tone3": 20, "woman_getting_face_massage_tone4": 20, "woman_getting_face_massage_tone5": 20, "woman_getting_haircut": 20, "woman_getting_haircut_dark_skin_ton": 20, "woman_getting_haircut_light_skin_ton": 20, "woman_getting_haircut_medium_dark_skin_ton": 20, "woman_getting_haircut_medium_light_skin_ton": 20, "woman_getting_haircut_medium_skin_ton": 20, "woman_getting_haircut_tone1": 20, "woman_getting_haircut_tone2": 20, "woman_getting_haircut_tone3": 20, "woman_getting_haircut_tone4": 20, "woman_getting_haircut_tone5": 20, "woman_golf": 20, "woman_golfing_dark_skin_ton": 20, "woman_golfing_light_skin_ton": 20, "woman_golfing_medium_dark_skin_ton": 20, "woman_golfing_medium_light_skin_ton": 20, "woman_golfing_medium_skin_ton": 20, "woman_golfing_tone1": 20, "woman_golfing_tone2": 20, "woman_golfing_tone3": 20, "woman_golfing_tone4": 20, "woman_golfing_tone5": 20, "woman_guard": 20, "woman_guard_dark_skin_ton": 20, "woman_guard_light_skin_ton": 20, "woman_guard_medium_dark_skin_ton": 20, "woman_guard_medium_light_skin_ton": 20, "woman_guard_medium_skin_ton": 20, "woman_guard_tone1": 20, "woman_guard_tone2": 20, "woman_guard_tone3": 20, "woman_guard_tone4": 20, "woman_guard_tone5": 20, "woman_health_work": 20, "woman_health_worker_dark_skin_ton": 20, "woman_health_worker_light_skin_ton": 20, "woman_health_worker_medium_dark_skin_ton": 20, "woman_health_worker_medium_light_skin_ton": 20, "woman_health_worker_medium_skin_ton": 20, "woman_health_worker_tone1": 20, "woman_health_worker_tone2": 20, "woman_health_worker_tone3": 20, "woman_health_worker_tone4": 20, "woman_health_worker_tone5": 20, "woman_in_lotus_posit": 20, "woman_in_lotus_position_dark_skin_ton": 20, "woman_in_lotus_position_light_skin_ton": 20, "woman_in_lotus_position_medium_dark_skin_ton": 20, "woman_in_lotus_position_medium_light_skin_ton": 20, "woman_in_lotus_position_medium_skin_ton": 20, "woman_in_lotus_position_tone1": 20, "woman_in_lotus_position_tone2": 20, "woman_in_lotus_position_tone3": 20, "woman_in_lotus_position_tone4": 20, "woman_in_lotus_position_tone5": 20, "woman_in_manual_wheelchair": 20, "woman_in_manual_wheelchair_dark_skin_ton": 20, "woman_in_manual_wheelchair_light_skin_ton": 20, "woman_in_manual_wheelchair_medium_dark_skin_ton": 20, "woman_in_manual_wheelchair_medium_light_skin_ton": 20, "woman_in_manual_wheelchair_medium_skin_ton": 20, "woman_in_manual_wheelchair_tone1": 20, "woman_in_manual_wheelchair_tone2": 20, "woman_in_manual_wheelchair_tone3": 20, "woman_in_manual_wheelchair_tone4": 20, "woman_in_manual_wheelchair_tone5": 20, "woman_in_motorized_wheelchair": 20, "woman_in_motorized_wheelchair_dark_skin_ton": 20, "woman_in_motorized_wheelchair_light_skin_ton": 20, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 20, "woman_in_motorized_wheelchair_medium_light_skin_ton": 20, "woman_in_motorized_wheelchair_medium_skin_ton": 20, "woman_in_motorized_wheelchair_tone1": 20, "woman_in_motorized_wheelchair_tone2": 20, "woman_in_motorized_wheelchair_tone3": 20, "woman_in_motorized_wheelchair_tone4": 20, "woman_in_motorized_wheelchair_tone5": 20, "woman_in_steamy_room": 20, "woman_in_steamy_room_dark_skin_ton": 20, "woman_in_steamy_room_light_skin_ton": 20, "woman_in_steamy_room_medium_dark_skin_ton": 20, "woman_in_steamy_room_medium_light_skin_ton": 20, "woman_in_steamy_room_medium_skin_ton": 20, "woman_in_steamy_room_tone1": 20, "woman_in_steamy_room_tone2": 20, "woman_in_steamy_room_tone3": 20, "woman_in_steamy_room_tone4": 20, "woman_in_steamy_room_tone5": 20, "woman_in_tuxedo": 20, "woman_in_tuxedo_dark_skin_ton": 20, "woman_in_tuxedo_light_skin_ton": 20, "woman_in_tuxedo_medium_dark_skin_ton": 20, "woman_in_tuxedo_medium_light_skin_ton": 20, "woman_in_tuxedo_medium_skin_ton": 20, "woman_in_tuxedo_tone1": 20, "woman_in_tuxedo_tone2": 20, "woman_in_tuxedo_tone3": 20, "woman_in_tuxedo_tone4": 20, "woman_in_tuxedo_tone5": 20, "woman_judg": 20, "woman_judge_dark_skin_ton": 20, "woman_judge_light_skin_ton": 20, "woman_judge_medium_dark_skin_ton": 20, "woman_judge_medium_light_skin_ton": 20, "woman_judge_medium_skin_ton": 20, "woman_judge_tone1": 20, "woman_judge_tone2": 20, "woman_judge_tone3": 20, "woman_judge_tone4": 20, "woman_judge_tone5": 20, "woman_juggl": 20, "woman_juggling_dark_skin_ton": 20, "woman_juggling_light_skin_ton": 20, "woman_juggling_medium_dark_skin_ton": 20, "woman_juggling_medium_light_skin_ton": 20, "woman_juggling_medium_skin_ton": 20, "woman_juggling_tone1": 20, "woman_juggling_tone2": 20, "woman_juggling_tone3": 20, "woman_juggling_tone4": 20, "woman_juggling_tone5": 20, "woman_kneel": 20, "woman_kneeling_dark_skin_ton": 20, "woman_kneeling_light_skin_ton": 20, "woman_kneeling_medium_dark_skin_ton": 20, "woman_kneeling_medium_light_skin_ton": 20, "woman_kneeling_medium_skin_ton": 20, "woman_kneeling_tone1": 20, "woman_kneeling_tone2": 20, "woman_kneeling_tone3": 20, "woman_kneeling_tone4": 20, "woman_kneeling_tone5": 20, "woman_lifting_weight": 20, "woman_lifting_weights_dark_skin_ton": 20, "woman_lifting_weights_light_skin_ton": 20, "woman_lifting_weights_medium_dark_skin_ton": 20, "woman_lifting_weights_medium_light_skin_ton": 20, "woman_lifting_weights_medium_skin_ton": 20, "woman_lifting_weights_tone1": 20, "woman_lifting_weights_tone2": 20, "woman_lifting_weights_tone3": 20, "woman_lifting_weights_tone4": 20, "woman_lifting_weights_tone5": 20, "woman_light_skin_tone_beard": 20, "woman_mag": 20, "woman_mage_dark_skin_ton": 20, "woman_mage_light_skin_ton": 20, "woman_mage_medium_dark_skin_ton": 20, "woman_mage_medium_light_skin_ton": 20, "woman_mage_medium_skin_ton": 20, "woman_mage_tone1": 20, "woman_mage_tone2": 20, "woman_mage_tone3": 20, "woman_mage_tone4": 20, "woman_mage_tone5": 20, "woman_mechan": 20, "woman_mechanic_dark_skin_ton": 20, "woman_mechanic_light_skin_ton": 20, "woman_mechanic_medium_dark_skin_ton": 20, "woman_mechanic_medium_light_skin_ton": 20, "woman_mechanic_medium_skin_ton": 20, "woman_mechanic_tone1": 20, "woman_mechanic_tone2": 20, "woman_mechanic_tone3": 20, "woman_mechanic_tone4": 20, "woman_mechanic_tone5": 20, "woman_medium_dark_skin_tone_beard": 20, "woman_medium_light_skin_tone_beard": 20, "woman_medium_skin_tone_beard": 20, "woman_mountain_bik": 20, "woman_mountain_biking_dark_skin_ton": 20, "woman_mountain_biking_light_skin_ton": 20, "woman_mountain_biking_medium_dark_skin_ton": 20, "woman_mountain_biking_medium_light_skin_ton": 20, "woman_mountain_biking_medium_skin_ton": 20, "woman_mountain_biking_tone1": 20, "woman_mountain_biking_tone2": 20, "woman_mountain_biking_tone3": 20, "woman_mountain_biking_tone4": 20, "woman_mountain_biking_tone5": 20, "woman_office_work": 20, "woman_office_worker_dark_skin_ton": 20, "woman_office_worker_light_skin_ton": 20, "woman_office_worker_medium_dark_skin_ton": 20, "woman_office_worker_medium_light_skin_ton": 20, "woman_office_worker_medium_skin_ton": 20, "woman_office_worker_tone1": 20, "woman_office_worker_tone2": 20, "woman_office_worker_tone3": 20, "woman_office_worker_tone4": 20, "woman_office_worker_tone5": 20, "woman_pilot": 20, "woman_pilot_dark_skin_ton": 20, "woman_pilot_light_skin_ton": 20, "woman_pilot_medium_dark_skin_ton": 20, "woman_pilot_medium_light_skin_ton": 20, "woman_pilot_medium_skin_ton": 20, "woman_pilot_tone1": 20, "woman_pilot_tone2": 20, "woman_pilot_tone3": 20, "woman_pilot_tone4": 20, "woman_pilot_tone5": 20, "woman_playing_handbal": 20, "woman_playing_handball_dark_skin_ton": 20, "woman_playing_handball_light_skin_ton": 20, "woman_playing_handball_medium_dark_skin_ton": 20, "woman_playing_handball_medium_light_skin_ton": 20, "woman_playing_handball_medium_skin_ton": 20, "woman_playing_handball_tone1": 20, "woman_playing_handball_tone2": 20, "woman_playing_handball_tone3": 20, "woman_playing_handball_tone4": 20, "woman_playing_handball_tone5": 20, "woman_playing_water_polo": 20, "woman_playing_water_polo_dark_skin_ton": 20, "woman_playing_water_polo_light_skin_ton": 20, "woman_playing_water_polo_medium_dark_skin_ton": 20, "woman_playing_water_polo_medium_light_skin_ton": 20, "woman_playing_water_polo_medium_skin_ton": 20, "woman_playing_water_polo_tone1": 20, "woman_playing_water_polo_tone2": 20, "woman_playing_water_polo_tone3": 20, "woman_playing_water_polo_tone4": 20, "woman_playing_water_polo_tone5": 20, "woman_police_offic": 20, "woman_police_officer_dark_skin_ton": 20, "woman_police_officer_light_skin_ton": 20, "woman_police_officer_medium_dark_skin_ton": 20, "woman_police_officer_medium_light_skin_ton": 20, "woman_police_officer_medium_skin_ton": 20, "woman_police_officer_tone1": 20, "woman_police_officer_tone2": 20, "woman_police_officer_tone3": 20, "woman_police_officer_tone4": 20, "woman_police_officer_tone5": 20, "woman_pout": 20, "woman_pouting_dark_skin_ton": 20, "woman_pouting_light_skin_ton": 20, "woman_pouting_medium_dark_skin_ton": 20, "woman_pouting_medium_light_skin_ton": 20, "woman_pouting_medium_skin_ton": 20, "woman_pouting_tone1": 20, "woman_pouting_tone2": 20, "woman_pouting_tone3": 20, "woman_pouting_tone4": 20, "woman_pouting_tone5": 20, "woman_raising_hand": 20, "woman_raising_hand_dark_skin_ton": 20, "woman_raising_hand_light_skin_ton": 20, "woman_raising_hand_medium_dark_skin_ton": 20, "woman_raising_hand_medium_light_skin_ton": 20, "woman_raising_hand_medium_skin_ton": 20, "woman_raising_hand_tone1": 20, "woman_raising_hand_tone2": 20, "woman_raising_hand_tone3": 20, "woman_raising_hand_tone4": 20, "woman_raising_hand_tone5": 20, "woman_red_hair": 20, "woman_red_haired_dark_skin_ton": 20, "woman_red_haired_light_skin_ton": 20, "woman_red_haired_medium_dark_skin_ton": 20, "woman_red_haired_medium_light_skin_ton": 20, "woman_red_haired_medium_skin_ton": 20, "woman_red_haired_tone1": 20, "woman_red_haired_tone2": 20, "woman_red_haired_tone3": 20, "woman_red_haired_tone4": 20, "woman_red_haired_tone5": 20, "woman_rowing_boat": 20, "woman_rowing_boat_dark_skin_ton": 20, "woman_rowing_boat_light_skin_ton": 20, "woman_rowing_boat_medium_dark_skin_ton": 20, "woman_rowing_boat_medium_light_skin_ton": 20, "woman_rowing_boat_medium_skin_ton": 20, "woman_rowing_boat_tone1": 20, "woman_rowing_boat_tone2": 20, "woman_rowing_boat_tone3": 20, "woman_rowing_boat_tone4": 20, "woman_rowing_boat_tone5": 20, "woman_run": 20, "woman_running_dark_skin_ton": 20, "woman_running_light_skin_ton": 20, "woman_running_medium_dark_skin_ton": 20, "woman_running_medium_light_skin_ton": 20, "woman_running_medium_skin_ton": 20, "woman_running_tone1": 20, "woman_running_tone2": 20, "woman_running_tone3": 20, "woman_running_tone4": 20, "woman_running_tone5": 20, "woman_scientist": 20, "woman_scientist_dark_skin_ton": 20, "woman_scientist_light_skin_ton": 20, "woman_scientist_medium_dark_skin_ton": 20, "woman_scientist_medium_light_skin_ton": 20, "woman_scientist_medium_skin_ton": 20, "woman_scientist_tone1": 20, "woman_scientist_tone2": 20, "woman_scientist_tone3": 20, "woman_scientist_tone4": 20, "woman_scientist_tone5": 20, "woman_shrug": 20, "woman_shrugging_dark_skin_ton": 20, "woman_shrugging_light_skin_ton": 20, "woman_shrugging_medium_dark_skin_ton": 20, "woman_shrugging_medium_light_skin_ton": 20, "woman_shrugging_medium_skin_ton": 20, "woman_shrugging_tone1": 20, "woman_shrugging_tone2": 20, "woman_shrugging_tone3": 20, "woman_shrugging_tone4": 20, "woman_shrugging_tone5": 20, "woman_sing": 20, "woman_singer_dark_skin_ton": 20, "woman_singer_light_skin_ton": 20, "woman_singer_medium_dark_skin_ton": 20, "woman_singer_medium_light_skin_ton": 20, "woman_singer_medium_skin_ton": 20, "woman_singer_tone1": 20, "woman_singer_tone2": 20, "woman_singer_tone3": 20, "woman_singer_tone4": 20, "woman_singer_tone5": 20, "woman_stand": 20, "woman_standing_dark_skin_ton": 20, "woman_standing_light_skin_ton": 20, "woman_standing_medium_dark_skin_ton": 20, "woman_standing_medium_light_skin_ton": 20, "woman_standing_medium_skin_ton": 20, "woman_standing_tone1": 20, "woman_standing_tone2": 20, "woman_standing_tone3": 20, "woman_standing_tone4": 20, "woman_standing_tone5": 20, "woman_stud": 20, "woman_student_dark_skin_ton": 20, "woman_student_light_skin_ton": 20, "woman_student_medium_dark_skin_ton": 20, "woman_student_medium_light_skin_ton": 20, "woman_student_medium_skin_ton": 20, "woman_student_tone1": 20, "woman_student_tone2": 20, "woman_student_tone3": 20, "woman_student_tone4": 20, "woman_student_tone5": 20, "woman_superhero": 20, "woman_superhero_dark_skin_ton": 20, "woman_superhero_light_skin_ton": 20, "woman_superhero_medium_dark_skin_ton": 20, "woman_superhero_medium_light_skin_ton": 20, "woman_superhero_medium_skin_ton": 20, "woman_superhero_tone1": 20, "woman_superhero_tone2": 20, "woman_superhero_tone3": 20, "woman_superhero_tone4": 20, "woman_superhero_tone5": 20, "woman_supervillain": 20, "woman_supervillain_dark_skin_ton": 20, "woman_supervillain_light_skin_ton": 20, "woman_supervillain_medium_dark_skin_ton": 20, "woman_supervillain_medium_light_skin_ton": 20, "woman_supervillain_medium_skin_ton": 20, "woman_supervillain_tone1": 20, "woman_supervillain_tone2": 20, "woman_supervillain_tone3": 20, "woman_supervillain_tone4": 20, "woman_supervillain_tone5": 20, "woman_surf": 20, "woman_surfing_dark_skin_ton": 20, "woman_surfing_light_skin_ton": 20, "woman_surfing_medium_dark_skin_ton": 20, "woman_surfing_medium_light_skin_ton": 20, "woman_surfing_medium_skin_ton": 20, "woman_surfing_tone1": 20, "woman_surfing_tone2": 20, "woman_surfing_tone3": 20, "woman_surfing_tone4": 20, "woman_surfing_tone5": 20, "woman_swim": 20, "woman_swimming_dark_skin_ton": 20, "woman_swimming_light_skin_ton": 20, "woman_swimming_medium_dark_skin_ton": 20, "woman_swimming_medium_light_skin_ton": 20, "woman_swimming_medium_skin_ton": 20, "woman_swimming_tone1": 20, "woman_swimming_tone2": 20, "woman_swimming_tone3": 20, "woman_swimming_tone4": 20, "woman_swimming_tone5": 20, "woman_teach": 20, "woman_teacher_dark_skin_ton": 20, "woman_teacher_light_skin_ton": 20, "woman_teacher_medium_dark_skin_ton": 20, "woman_teacher_medium_light_skin_ton": 20, "woman_teacher_medium_skin_ton": 20, "woman_teacher_tone1": 20, "woman_teacher_tone2": 20, "woman_teacher_tone3": 20, "woman_teacher_tone4": 20, "woman_teacher_tone5": 20, "woman_technologist": 20, "woman_technologist_dark_skin_ton": 20, "woman_technologist_light_skin_ton": 20, "woman_technologist_medium_dark_skin_ton": 20, "woman_technologist_medium_light_skin_ton": 20, "woman_technologist_medium_skin_ton": 20, "woman_technologist_tone1": 20, "woman_technologist_tone2": 20, "woman_technologist_tone3": 20, "woman_technologist_tone4": 20, "woman_technologist_tone5": 20, "woman_tipping_hand": 20, "woman_tipping_hand_dark_skin_ton": 20, "woman_tipping_hand_light_skin_ton": 20, "woman_tipping_hand_medium_dark_skin_ton": 20, "woman_tipping_hand_medium_light_skin_ton": 20, "woman_tipping_hand_medium_skin_ton": 20, "woman_tipping_hand_tone1": 20, "woman_tipping_hand_tone2": 20, "woman_tipping_hand_tone3": 20, "woman_tipping_hand_tone4": 20, "woman_tipping_hand_tone5": 20, "woman_tone1": 20, "woman_tone1_beard": 20, "woman_tone2": 20, "woman_tone2_beard": 20, "woman_tone3": 20, "woman_tone3_beard": 20, "woman_tone4": 20, "woman_tone4_beard": 20, "woman_tone5": 20, "woman_tone5_beard": 20, "woman_vampir": 20, "woman_vampire_dark_skin_ton": 20, "woman_vampire_light_skin_ton": 20, "woman_vampire_medium_dark_skin_ton": 20, "woman_vampire_medium_light_skin_ton": 20, "woman_vampire_medium_skin_ton": 20, "woman_vampire_tone1": 20, "woman_vampire_tone2": 20, "woman_vampire_tone3": 20, "woman_vampire_tone4": 20, "woman_vampire_tone5": 20, "woman_walk": 20, "woman_walking_dark_skin_ton": 20, "woman_walking_light_skin_ton": 20, "woman_walking_medium_dark_skin_ton": 20, "woman_walking_medium_light_skin_ton": 20, "woman_walking_medium_skin_ton": 20, "woman_walking_tone1": 20, "woman_walking_tone2": 20, "woman_walking_tone3": 20, "woman_walking_tone4": 20, "woman_walking_tone5": 20, "woman_wearing_turban": 20, "woman_wearing_turban_dark_skin_ton": 20, "woman_wearing_turban_light_skin_ton": 20, "woman_wearing_turban_medium_dark_skin_ton": 20, "woman_wearing_turban_medium_light_skin_ton": 20, "woman_wearing_turban_medium_skin_ton": 20, "woman_wearing_turban_tone1": 20, "woman_wearing_turban_tone2": 20, "woman_wearing_turban_tone3": 20, "woman_wearing_turban_tone4": 20, "woman_wearing_turban_tone5": 20, "woman_white_hair": 20, "woman_white_haired_dark_skin_ton": 20, "woman_white_haired_light_skin_ton": 20, "woman_white_haired_medium_dark_skin_ton": 20, "woman_white_haired_medium_light_skin_ton": 20, "woman_white_haired_medium_skin_ton": 20, "woman_white_haired_tone1": 20, "woman_white_haired_tone2": 20, "woman_white_haired_tone3": 20, "woman_white_haired_tone4": 20, "woman_white_haired_tone5": 20, "woman_with_headscarf": 20, "woman_with_headscarf_dark_skin_ton": 20, "woman_with_headscarf_light_skin_ton": 20, "woman_with_headscarf_medium_dark_skin_ton": 20, "woman_with_headscarf_medium_light_skin_ton": 20, "woman_with_headscarf_medium_skin_ton": 20, "woman_with_headscarf_tone1": 20, "woman_with_headscarf_tone2": 20, "woman_with_headscarf_tone3": 20, "woman_with_headscarf_tone4": 20, "woman_with_headscarf_tone5": 20, "woman_with_probing_can": 20, "woman_with_probing_cane_dark_skin_ton": 20, "woman_with_probing_cane_light_skin_ton": 20, "woman_with_probing_cane_medium_dark_skin_ton": 20, "woman_with_probing_cane_medium_light_skin_ton": 20, "woman_with_probing_cane_medium_skin_ton": 20, "woman_with_probing_cane_tone1": 20, "woman_with_probing_cane_tone2": 20, "woman_with_probing_cane_tone3": 20, "woman_with_probing_cane_tone4": 20, "woman_with_probing_cane_tone5": 20, "woman_with_turban": 20, "woman_with_veil": 20, "woman_with_veil_dark_skin_ton": 20, "woman_with_veil_light_skin_ton": 20, "woman_with_veil_medium_dark_skin_ton": 20, "woman_with_veil_medium_light_skin_ton": 20, "woman_with_veil_medium_skin_ton": 20, "woman_with_veil_tone1": 20, "woman_with_veil_tone2": 20, "woman_with_veil_tone3": 20, "woman_with_veil_tone4": 20, "woman_with_veil_tone5": 20, "woman_zombi": 20, "womans_cloth": 20, "womans_flat_sho": 20, "womans_hat": 20, "women_holding_hands_dark_skin_ton": 20, "women_holding_hands_dark_skin_tone_light_skin_ton": 20, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 20, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 20, "women_holding_hands_dark_skin_tone_medium_skin_ton": 20, "women_holding_hands_light_skin_ton": 20, "women_holding_hands_light_skin_tone_dark_skin_ton": 20, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 20, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 20, "women_holding_hands_light_skin_tone_medium_skin_ton": 20, "women_holding_hands_medium_dark_skin_ton": 20, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 20, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 20, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 20, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 20, "women_holding_hands_medium_light_skin_ton": 20, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 20, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 20, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 20, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 20, "women_holding_hands_medium_skin_ton": 20, "women_holding_hands_medium_skin_tone_dark_skin_ton": 20, "women_holding_hands_medium_skin_tone_light_skin_ton": 20, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 20, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 20, "women_holding_hands_tone1": 20, "women_holding_hands_tone1_tone2": 20, "women_holding_hands_tone1_tone3": 20, "women_holding_hands_tone1_tone4": 20, "women_holding_hands_tone1_tone5": 20, "women_holding_hands_tone2": 20, "women_holding_hands_tone2_tone1": 20, "women_holding_hands_tone2_tone3": 20, "women_holding_hands_tone2_tone4": 20, "women_holding_hands_tone2_tone5": 20, "women_holding_hands_tone3": 20, "women_holding_hands_tone3_tone1": 20, "women_holding_hands_tone3_tone2": 20, "women_holding_hands_tone3_tone4": 20, "women_holding_hands_tone3_tone5": 20, "women_holding_hands_tone4": 20, "women_holding_hands_tone4_tone1": 20, "women_holding_hands_tone4_tone2": 20, "women_holding_hands_tone4_tone3": 20, "women_holding_hands_tone4_tone5": 20, "women_holding_hands_tone5": 20, "women_holding_hands_tone5_tone1": 20, "women_holding_hands_tone5_tone2": 20, "women_holding_hands_tone5_tone3": 20, "women_holding_hands_tone5_tone4": 20, "women_with_bunny_ears_parti": 20, "women_wrestl": 20, "women": 20, "wood": 20, "woozy_fac": 20, "world_map": 20, "worm": [20, 539], "worri": [20, 485], "worship_symbol": 20, "wrench": 20, "wrestler": 20, "wrestlers_tone1": 20, "wrestlers_tone2": 20, "wrestlers_tone3": 20, "wrestlers_tone4": 20, "wrestlers_tone5": 20, "wrestl": 20, "wrestling_tone1": 20, "wrestling_tone2": 20, "wrestling_tone3": 20, "wrestling_tone4": 20, "wrestling_tone5": 20, "writing_hand": 20, "writing_hand_tone1": 20, "writing_hand_tone2": 20, "writing_hand_tone3": 20, "writing_hand_tone4": 20, "writing_hand_tone5": 20, "w": [20, 28, 168, 225, 229, 232, 254, 258, 264, 274, 277, 284, 305, 319, 399, 400, 418, 506, 660, 721, 933, 947, 994, 995, 1029, 1087, 1127, 1140, 1186, 1188, 1216, 1219, 1224], "xk": 20, "yarn": 20, "yawning_fac": 20, "yellow_circl": 20, "yellow_heart": 20, "yellow_squar": 20, "yemen": 20, "yen": [20, 24], "yin_yang": 20, "yo_yo": 20, "yt": 20, "yum": [20, 357], "za": [20, 329, 357, 437], "zambia": 20, "zany_fac": 20, "zap": 20, "zebra": 20, "zero": [20, 26, 192, 207, 209, 210, 212, 222, 232, 240, 242, 245, 258, 264, 269, 271, 274, 277, 281, 284, 299, 323, 357, 363, 398, 419, 428, 446, 791, 801, 805, 846, 858, 873, 918, 948, 963, 970, 995, 1015, 1038, 1044, 1047, 1050, 1053, 1058, 1059, 1126], "zimbabw": 20, "zipper_mouth": 20, "zipper_mouth_fac": 20, "zm": 20, "zombi": 20, "zw": 20, "zzz": [20, 363], "sheet": [21, 163, 191, 229, 241, 370, 402, 404, 405, 770, 948, 993, 994], "layout": [21, 206, 279, 371, 482, 495, 1224], "emoji": 21, "sphinxemoji": 21, "mmlalia": 21, "mathml": 21, "alias": [21, 357, 438, 949], "entiti": [21, 190, 446, 460, 487, 504, 544, 552, 658, 856, 1049, 1204], "isoamsa": 21, "mathemat": [21, 281, 1139], "arrow": [21, 23, 24, 26, 64, 65, 948, 1082], "isoamsr": 21, "relat": [21, 60, 180, 210, 221, 225, 246, 250, 305, 318, 374, 377, 450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 514, 535, 644, 744, 782, 799, 824, 837, 838, 839, 840, 855, 864, 912, 992, 1049, 1059, 1191, 1224, 1225, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1260, 1261, 1263, 1264, 1265], "isonum": 21, "binari": [21, 30, 38, 42, 43, 46, 67, 78, 79, 190, 196, 249, 250, 258, 262, 264, 265, 267, 272, 274, 277, 287, 406, 449, 482, 494, 654, 681, 759, 823, 865, 879, 887, 933, 1065, 1068, 1082, 1094, 1121, 1126, 1204], "sphinxish": 21, "send": [21, 92, 115, 133, 170, 190, 201, 204, 225, 226, 228, 229, 230, 231, 264, 265, 284, 286, 287, 305, 326, 370, 398, 403, 566, 911, 928, 944, 988, 989, 993, 1002, 1012, 1062, 1064, 1187, 1204], "v4l": [21, 133], "ssh": [21, 88, 92, 93, 115, 133, 136, 151, 152, 161, 170, 197, 201, 229, 261, 277, 284, 287, 295, 302, 304, 309, 319, 323, 325, 345, 351, 357, 363, 369, 375, 378, 384, 397, 398, 404, 405, 411, 412, 416, 601, 602, 840, 913, 914, 915, 923, 970, 980, 985, 986, 997, 998, 1023, 1068, 1076, 1077, 1078, 1245, 1247, 1250], "taken": [22, 23, 24, 26, 28, 64, 65, 119, 173, 189, 193, 194, 201, 249, 370, 371, 484, 510, 524, 601, 610, 656, 812, 890, 912, 923, 948, 1065, 1117, 1204, 1245], "standard": [22, 23, 24, 26, 97, 115, 145, 152, 184, 197, 217, 221, 226, 228, 230, 251, 258, 264, 273, 274, 277, 281, 292, 305, 307, 331, 347, 354, 379, 389, 398, 399, 400, 401, 403, 418, 419, 420, 426, 427, 432, 433, 437, 482, 590, 609, 628, 642, 643, 686, 692, 696, 703, 704, 705, 706, 708, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 759, 764, 790, 792, 794, 795, 819, 838, 840, 928, 931, 932, 948, 982, 996, 1012, 1018, 1021, 1036, 1039, 1063, 1094, 1114, 1130, 1204, 1216, 1220, 1234, 1238, 1240, 1241, 1243, 1250, 1256, 1261], "definit": [22, 23, 24, 26, 98, 105, 108, 109, 110, 123, 133, 144, 190, 192, 193, 195, 197, 209, 218, 221, 222, 227, 241, 248, 250, 314, 316, 332, 348, 374, 377, 380, 398, 418, 419, 420, 450, 459, 462, 465, 466, 472, 476, 479, 483, 489, 490, 491, 492, 494, 495, 496, 501, 502, 507, 509, 514, 517, 523, 524, 533, 535, 543, 544, 566, 588, 628, 646, 647, 648, 653, 659, 660, 662, 671, 674, 675, 697, 723, 725, 733, 744, 754, 770, 782, 784, 797, 801, 805, 837, 839, 840, 865, 887, 949, 994, 995, 1065, 1085, 1092, 1098, 1103, 1114, 1118, 1131, 1132, 1135, 1200, 1214, 1231, 1238, 1241], "includ": [22, 23, 24, 26, 32, 98, 105, 111, 112, 166, 184, 192, 197, 201, 204, 206, 217, 221, 228, 240, 241, 250, 251, 258, 262, 264, 265, 267, 274, 277, 281, 302, 316, 323, 332, 344, 348, 372, 373, 374, 375, 376, 377, 378, 380, 395, 406, 419, 420, 422, 426, 428, 430, 461, 462, 477, 482, 485, 487, 491, 498, 507, 508, 511, 512, 513, 514, 515, 516, 517, 523, 528, 531, 533, 534, 536, 537, 542, 543, 544, 545, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 628, 634, 637, 644, 645, 646, 648, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 668, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 721, 725, 726, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 747, 749, 752, 753, 754, 755, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 784, 785, 786, 787, 789, 791, 792, 794, 796, 800, 801, 802, 803, 804, 805, 806, 809, 811, 814, 816, 817, 818, 819, 823, 825, 827, 829, 831, 834, 835, 836, 838, 840, 846, 851, 856, 858, 865, 867, 869, 871, 873, 875, 879, 881, 883, 892, 897, 901, 904, 907, 925, 945, 948, 954, 982, 987, 989, 993, 1009, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1040, 1044, 1046, 1049, 1055, 1058, 1062, 1065, 1068, 1078, 1081, 1082, 1084, 1086, 1114, 1115, 1140, 1141, 1214, 1220, 1226, 1231, 1233, 1236, 1250, 1256], "substitut": [22, 23, 24, 26, 97, 105, 110, 111, 133, 241, 277, 323, 395, 488, 504, 511, 512, 514, 515, 759, 1006, 1203], "angzarr": 22, "0237c": 22, "angl": [22, 24, 26, 1242, 1246], "WITH": [22, 23, 26, 1012], "downward": [22, 23, 24, 26, 510], "zigzag": 22, "cirmid": 22, "02aef": 22, "vertic": [22, 23, 24, 26, 439], "circl": [22, 23, 26, 251, 620, 928], "abov": [22, 23, 26, 69, 115, 120, 139, 140, 166, 190, 192, 193, 194, 195, 197, 201, 208, 227, 230, 241, 250, 258, 264, 274, 277, 281, 340, 372, 409, 455, 478, 488, 498, 524, 544, 564, 566, 588, 591, 592, 601, 602, 627, 637, 654, 658, 659, 678, 722, 785, 848, 881, 887, 897, 914, 915, 932, 960, 993, 994, 995, 1019, 1023, 1051, 1058, 1082, 1090, 1121, 1135, 1207, 1213, 1224, 1231], "cudarrl": 22, "02938": 22, "side": [22, 209, 231, 305, 314, 434, 443, 484, 522, 526, 566, 598, 637, 660, 662, 663, 814, 867, 871, 927, 948, 997, 1090, 1123, 1170, 1196, 1198, 1207], "arc": 22, "clockwis": [22, 26], "cudarrr": 22, "02935": 22, "rightward": [22, 23, 24, 26], "THEN": 22, "curv": [22, 23, 161], "cularr": 22, "021b6": [22, 26], "anticlockwis": [22, 26], "semicircl": [22, 26], "cularrp": 22, "0293d": 22, "plu": [22, 23, 24, 26, 191, 197, 258, 264, 274, 277, 290, 455, 602, 628, 659, 661, 663, 887, 1015], "curarr": 22, "021b7": [22, 26], "curarrm": 22, "0293c": 22, "minu": [22, 23, 24, 26, 269, 661, 805], "darr": [22, 24], "021a1": 22, "head": [22, 26, 28, 48, 113, 188, 191, 193, 196, 229, 231, 241, 295, 304, 313, 325, 326, 369, 370, 814, 840, 917, 975, 976, 979, 982, 985, 1010, 1011, 1081, 1148], "021d3": [22, 26], "doubl": [22, 23, 24, 26, 105, 110, 111, 121, 124, 161, 251, 267, 271, 277, 406, 420, 438, 439, 440, 443, 462, 482, 491, 518, 526, 543, 549, 554, 556, 563, 572, 574, 575, 580, 581, 582, 583, 584, 585, 588, 596, 598, 600, 601, 602, 613, 644, 646, 652, 654, 658, 662, 694, 721, 746, 749, 752, 755, 759, 764, 765, 766, 767, 780, 799, 800, 802, 805, 814, 818, 823, 825, 827, 828, 829, 830, 887, 948, 993, 1090, 1110, 1134, 1212], "darr2": 22, "021ca": [22, 26], "pair": [22, 26, 92, 93, 120, 121, 246, 256, 259, 262, 267, 271, 272, 277, 284, 286, 298, 299, 322, 328, 356, 363, 545, 549, 552, 602, 620, 697, 698, 699, 702, 745, 791, 792, 796, 840, 851, 856, 985, 997, 998, 999, 1001, 1084, 1094, 1138, 1191, 1202, 1219], "ddarr": 22, "ddotrahd": 22, "02911": 22, "dot": [22, 23, 24, 26, 194, 380, 498, 538, 540, 970, 1067], "stem": [22, 520, 522, 856], "dfisht": 22, "0297f": 22, "down": [22, 23, 26, 166, 188, 189, 190, 193, 217, 294, 332, 348, 373, 374, 377, 404, 424, 465, 516, 517, 523, 524, 533, 542, 549, 591, 598, 599, 600, 601, 620, 661, 694, 719, 725, 742, 759, 784, 801, 824, 840, 855, 856, 887, 934, 981, 988, 995, 1065, 1068, 1231, 1236], "tail": [22, 26, 191, 229, 231, 241, 295, 304, 325, 326, 369, 370, 814, 840, 875, 917, 976, 979, 982, 985, 1216], "dhar": 22, "02965": 22, "harpoon": [22, 26], "barb": [22, 26], "left": [22, 23, 24, 26, 50, 75, 101, 102, 120, 161, 189, 190, 192, 209, 240, 251, 277, 323, 416, 441, 442, 449, 455, 524, 547, 591, 598, 644, 647, 651, 658, 659, 716, 723, 750, 930, 931, 948, 993, 1002, 1021, 1065, 1094, 1098, 1109, 1110, 1121, 1135, 1196, 1214, 1262], "besid": [22, 23, 26], "dharl": 22, "021c3": [22, 26], "leftward": [22, 23, 24, 26], "dharr": 22, "021c2": [22, 26], "dlarr": 22, "02199": [22, 26], "south": [22, 26], "west": [22, 26, 199], "drarr": 22, "02198": [22, 26], "east": [22, 26], "duarr": 22, "021f5": [22, 26], "OF": [22, 23, 26, 193, 792], "upward": [22, 24, 26], "duhar": 22, "0296f": [22, 26], "dzigrarr": 22, "027ff": 22, "long": [22, 23, 26, 41, 128, 153, 154, 189, 190, 191, 192, 193, 197, 200, 217, 221, 229, 241, 258, 262, 264, 267, 274, 277, 285, 313, 398, 416, 426, 436, 438, 439, 443, 447, 448, 475, 482, 484, 493, 497, 499, 500, 524, 531, 544, 601, 646, 647, 652, 656, 721, 792, 801, 811, 823, 825, 827, 829, 838, 846, 858, 867, 869, 885, 887, 892, 897, 901, 927, 948, 970, 995, 1006, 1012, 1015, 1047, 1055, 1085, 1092, 1132, 1142, 1191, 1198, 1209, 1216, 1241], "squiggl": 22, "erarr": 22, "02971": 22, "equal": [22, 23, 24, 26, 55, 146, 166, 192, 213, 225, 241, 248, 251, 277, 281, 313, 314, 323, 335, 351, 420, 426, 442, 449, 454, 465, 490, 493, 518, 524, 590, 596, 603, 607, 642, 686, 705, 709, 737, 739, 805, 840, 923, 927, 982, 1006, 1047, 1051, 1052, 1121, 1176, 1231], "sign": [22, 23, 24, 26, 193, 200, 267, 436, 438, 446, 490, 504, 518, 548, 785, 860, 1121, 1135, 1196, 1238, 1239], "harr": 22, "021d4": [22, 26], "02194": [22, 26], "harrcir": 22, "02948": 22, "small": [22, 26, 31, 97, 189, 191, 192, 221, 241, 245, 301, 340, 350, 371, 418, 490, 494, 547, 599, 644, 756, 801, 986, 987, 993, 1025, 1059, 1136, 1203, 1231, 1252, 1261], "harrw": 22, "021ad": [22, 26], "hoarr": 22, "021ff": 22, "imof": 22, "022b7": 22, "imag": [22, 23, 26, 163, 168, 186, 188, 189, 190, 191, 192, 200, 212, 274, 277, 281, 299, 363, 367, 374, 377, 398, 404, 500, 506, 538, 652, 865, 887, 986, 1193, 1198], "laarr": 22, "021da": [22, 26], "tripl": [22, 23, 26, 49, 51], "larr": [22, 24], "0219e": [22, 26], "larr2": 22, "021c7": [22, 26], "larrbf": 22, "0291f": 22, "bar": [22, 23, 24, 26, 196, 216, 236, 259, 272, 277, 286, 289, 319, 322, 323, 328, 341, 345, 351, 357, 363, 367, 407, 506, 524, 591, 806, 1088, 1130, 1191], "TO": [22, 23, 26, 378, 1146], "black": [22, 26, 195, 245, 253, 265, 268, 697, 1078], "larrf": 22, "0291d": 22, "larrhk": 22, "021a9": [22, 26], "larrlp": 22, "021ab": [22, 26], "larrpl": 22, "02939": 22, "larrsim": 22, "02973": 22, "tild": [22, 23, 26], "larrtl": 22, "021a2": [22, 26], "latail": 22, "0291b": 22, "02919": 22, "lbarr": 22, "0290e": 22, "0290c": 22, "ldca": 22, "02936": 22, "ldrdhar": 22, "02967": 22, "ldrushar": 22, "0294b": 22, "ldsh": 22, "021b2": 22, "tip": [22, 26, 246, 256, 259, 262, 286, 298, 322, 328, 1191], "lfisht": 22, "0297c": 22, "lhar": 22, "02962": 22, "lhard": 22, "021bd": [22, 26], "lharu": 22, "021bc": [22, 26], "lharul": 22, "0296a": 22, "llarr": 22, "llhard": 22, "0296b": 22, "below": [22, 23, 26, 123, 131, 141, 166, 173, 190, 191, 192, 195, 197, 201, 209, 221, 230, 248, 281, 294, 340, 429, 431, 498, 505, 510, 515, 569, 583, 591, 592, 598, 601, 725, 736, 738, 752, 764, 784, 785, 801, 805, 814, 816, 835, 836, 838, 860, 881, 923, 927, 931, 948, 986, 993, 995, 1016, 1062, 1065, 1231], "loarr": 22, "021fd": 22, "lrarr": 22, "021c6": [22, 26], "lrarr2": 22, "lrhar": 22, "021cb": [22, 26], "lrhar2": 22, "lrhard": 22, "0296d": 22, "lsh": [22, 26], "021b0": [22, 26], "lurdshar": 22, "0294a": 22, "luruhar": 22, "02966": 22, "02905": 22, "021a6": [22, 26], "midcir": 22, "02af0": 22, "mumap": 22, "022b8": [22, 26], "multimap": [22, 26, 314, 620, 696, 705, 709, 739, 840], "nearhk": 22, "02924": 22, "north": [22, 26], "nearr": 22, "021d7": 22, "02197": [22, 26], "nesear": 22, "02928": [22, 26], "AND": [22, 23, 26, 426, 442, 465, 528, 648, 977, 1109], "nharr": 22, "021ce": [22, 26], "stroke": [22, 26], "021ae": [22, 26], "nlarr": 22, "021cd": [22, 26], "0219a": [22, 26], "nrarr": 22, "021cf": [22, 26], "0219b": [22, 26], "nrarrc": 22, "02933": 22, "00338": [22, 26], "directli": [22, 28, 120, 290, 315, 384, 542, 658, 728, 858, 871, 883, 890, 901, 995, 1005, 1009, 1065, 1089, 1109, 1117, 1181, 1183, 1210], "slash": [22, 26, 972, 1059], "nrarrw": 22, "0219d": [22, 26], "nvharr": 22, "02904": 22, "nvlarr": 22, "02902": 22, "nvrarr": 22, "02903": 22, "nwarhk": 22, "02923": 22, "nwarr": 22, "021d6": 22, "02196": [22, 26], "nwnear": 22, "02927": 22, "olarr": 22, "021ba": [22, 26], "orarr": 22, "021bb": [22, 26], "origof": 22, "022b6": 22, "origin": [22, 23, 26, 48, 50, 53, 113, 160, 170, 193, 195, 200, 210, 222, 254, 258, 264, 267, 269, 274, 277, 302, 313, 318, 322, 323, 325, 326, 328, 332, 340, 344, 348, 350, 354, 356, 362, 366, 370, 373, 375, 378, 379, 380, 382, 464, 480, 544, 547, 598, 645, 653, 654, 682, 734, 735, 737, 738, 796, 800, 803, 805, 816, 860, 887, 888, 911, 914, 915, 931, 945, 1087, 1193, 1204, 1226], "raarr": 22, "021db": [22, 26], "rarr": [22, 24], "021a0": [22, 26], "rarr2": 22, "021c9": [22, 26], "rarrap": 22, "02975": 22, "almost": [22, 23, 26, 49, 51, 192, 213, 250, 443, 491, 493, 508, 649, 713, 742, 790, 806, 1059, 1245], "rarrbf": 22, "02920": 22, "rarrc": 22, "rarrf": 22, "0291e": 22, "rarrhk": 22, "021aa": [22, 26], "rarrlp": 22, "021ac": [22, 26], "rarrpl": 22, "02945": 22, "rarrsim": 22, "02974": 22, "rarrtl": 22, "02916": 22, "021a3": [22, 26], "rarrw": 22, "ratail": 22, "0291c": 22, "0291a": 22, "rbarr": 22, "02910": [22, 26], "0290f": [22, 26], "0290d": [22, 26], "rdca": 22, "02937": 22, "rdldhar": 22, "02969": 22, "rdsh": 22, "021b3": 22, "rfisht": 22, "0297d": 22, "rhar": 22, "02964": 22, "rhard": 22, "021c1": [22, 26], "rharu": 22, "021c0": [22, 26], "rharul": 22, "0296c": 22, "rlarr": 22, "021c4": [22, 26], "rlarr2": 22, "rlhar": 22, "021cc": [22, 26], "rlhar2": 22, "roarr": 22, "021fe": 22, "rrarr": 22, "rsh": [22, 26, 659, 996], "021b1": [22, 26], "ruluhar": 22, "02968": 22, "searhk": 22, "02925": [22, 26], "searr": 22, "021d8": 22, "seswar": 22, "02929": [22, 26], "simrarr": 22, "02972": 22, "slarr": 22, "02190": [22, 24, 26], "srarr": 22, "02192": [22, 24, 26], "swarhk": 22, "02926": [22, 26], "swarr": 22, "021d9": 22, "swnwar": 22, "0292a": 22, "uarr": [22, 24], "0219f": 22, "021d1": [22, 26], "uarr2": 22, "021c8": [22, 26], "uarrocir": 22, "02949": 22, "udarr": 22, "021c5": [22, 26], "udhar": 22, "0296e": [22, 26], "ufisht": 22, "0297e": 22, "uhar": 22, "02963": 22, "uharl": 22, "021bf": [22, 26], "uharr": 22, "021be": [22, 26], "uuarr": 22, "varr": 22, "021d5": [22, 26], "02195": [22, 26], "xharr": 22, "027fa": [22, 26], "027f7": [22, 26], "xlarr": 22, "027f8": [22, 26], "027f5": [22, 26], "xmap": 22, "027fc": [22, 26], "xrarr": 22, "027f9": [22, 26], "027f6": [22, 26], "zigrarr": 22, "021dd": 22, "ap": [23, 1019], "02a70": 23, "approxim": [23, 26, 192, 287, 518], "OR": [23, 26, 264, 426, 442, 465, 482, 977, 1109], "0224a": [23, 26], "apid": 23, "0224b": 23, "asymp": 23, "02248": [23, 26], "barv": 23, "02ae7": 23, "tack": [23, 26], "overbar": 23, "bcong": 23, "0224c": [23, 26], "bepsi": 23, "003f6": [23, 26], "greek": [23, 26], "revers": [23, 24, 26, 148, 234, 261, 267, 284, 302, 309, 314, 323, 329, 351, 357, 367, 423, 519, 620, 627, 628, 686, 690, 705, 709, 739, 784, 840, 842, 881, 920, 921, 986, 1049, 1137, 1171], "lunat": [23, 26], "epsilon": [23, 26], "bowti": 23, "022c8": 23, "bsim": 23, "0223d": [23, 26], "bsime": 23, "022cd": [23, 26], "bsolhsub": 23, "0005c": [23, 24], "02282": [23, 26], "solidu": [23, 24], "subset": [23, 26, 277, 1068, 1082, 1139], "bump": 23, "0224e": [23, 26], "geometr": [23, 26, 281], "equival": [23, 26, 69, 83, 97, 100, 277, 451, 455, 470, 475, 526, 655, 733, 911, 913, 949, 982, 1015, 1098, 1120, 1130, 1140], "02aae": 23, "bumpi": 23, "0224f": [23, 26], "between": [23, 26, 60, 80, 94, 128, 153, 154, 190, 191, 192, 194, 200, 201, 210, 225, 237, 250, 258, 261, 264, 269, 271, 274, 277, 281, 284, 299, 302, 309, 323, 328, 341, 351, 354, 357, 363, 379, 380, 384, 394, 427, 430, 443, 465, 470, 477, 490, 495, 504, 509, 556, 566, 588, 596, 659, 676, 736, 792, 802, 806, 817, 841, 842, 846, 892, 918, 919, 925, 986, 993, 1023, 1035, 1049, 1050, 1051, 1052, 1059, 1063, 1098, 1109, 1119, 1121, 1132, 1197, 1249, 1252], "cire": 23, "02257": [23, 26], "colon": [23, 24, 26, 1169], "02237": [23, 26], "proport": [23, 26, 191], "02a74": 23, "02254": [23, 26], "congdot": 23, "02a6d": 23, "congruent": [23, 26], "csub": 23, "02acf": 23, "close": [23, 42, 105, 110, 111, 133, 141, 195, 201, 209, 221, 239, 248, 249, 262, 269, 293, 294, 296, 319, 323, 351, 353, 354, 372, 373, 379, 470, 504, 518, 535, 602, 620, 770, 798, 807, 815, 839, 840, 931, 993, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1058, 1062, 1065, 1087, 1200, 1252], "csube": 23, "02ad1": 23, "csup": 23, "02ad0": 23, "superset": [23, 26, 1139, 1240], "csupe": 23, "02ad2": 23, "cuepr": 23, "022de": [23, 26], "preced": [23, 26, 242, 264, 269, 277, 282, 285, 420, 426, 441, 442, 450, 455, 459, 464, 466, 470, 472, 474, 476, 479, 483, 492, 496, 501, 502, 672, 676, 744, 782, 837, 839, 840, 948, 998], "cuesc": 23, "022df": [23, 26], "succe": [23, 26, 725, 819, 865, 967, 997, 1089], "cupr": 23, "0227c": [23, 26], "dashv": 23, "02ae4": [23, 26], "turnstil": [23, 26], "022a3": [23, 26], "easter": [23, 241], "02a6e": 23, "asterisk": [23, 24, 26], "ecir": 23, "02256": [23, 26], "IN": [23, 26, 194], "ecolon": 23, "02255": [23, 26], "eddot": 23, "02a77": [23, 26], "edot": 23, "02251": [23, 26], "efdot": 23, "02252": [23, 26], "THE": [23, 26, 378, 507, 1012], "02a9a": 23, "greater": [23, 24, 26, 97, 115, 316, 442, 524, 590, 596, 604, 607, 642, 784, 840, 873, 1121], "than": [23, 24, 26, 31, 59, 97, 113, 115, 123, 132, 133, 138, 190, 191, 195, 197, 200, 201, 221, 225, 228, 232, 241, 248, 251, 258, 264, 269, 271, 274, 277, 281, 308, 311, 316, 340, 343, 371, 380, 384, 442, 443, 462, 464, 493, 494, 495, 506, 509, 534, 535, 542, 590, 598, 604, 607, 642, 646, 657, 660, 662, 663, 721, 729, 742, 753, 779, 792, 816, 840, 843, 858, 873, 879, 883, 887, 948, 974, 978, 986, 994, 1004, 1005, 1012, 1015, 1034, 1062, 1066, 1082, 1083, 1098, 1103, 1120, 1121, 1166, 1170, 1200, 1207, 1210, 1226, 1241, 1261, 1265], "02a96": [23, 26], "slant": [23, 26], "egsdot": 23, "02a98": 23, "insid": [23, 27, 30, 38, 115, 120, 133, 189, 190, 217, 219, 241, 258, 264, 274, 277, 294, 314, 316, 331, 340, 347, 383, 398, 426, 430, 440, 458, 461, 463, 464, 482, 487, 506, 522, 588, 599, 604, 652, 657, 659, 816, 838, 848, 858, 927, 957, 967, 993, 995, 1018, 1034, 1053, 1080, 1085, 1088, 1097, 1134, 1140, 1209, 1212, 1216, 1227, 1249, 1256], "el": [23, 237, 248, 284], "02a99": 23, "less": [23, 24, 26, 49, 51, 69, 190, 191, 192, 197, 201, 250, 264, 281, 295, 304, 305, 311, 325, 326, 369, 370, 420, 442, 443, 447, 490, 493, 514, 519, 524, 526, 544, 596, 699, 719, 721, 746, 792, 794, 816, 840, 858, 860, 887, 917, 932, 948, 976, 979, 980, 982, 985, 1015, 1103, 1121, 1140, 1219, 1220, 1233, 1241, 1250], "02a95": [23, 26], "elsdot": 23, "02a97": 23, "equest": 23, "0225f": [23, 26], "equivdd": 23, "02a78": 23, "erdot": 23, "02253": [23, 26], "esdot": 23, "02250": [23, 26], "limit": [23, 26, 50, 53, 190, 191, 206, 228, 258, 264, 274, 277, 323, 374, 377, 443, 485, 518, 520, 697, 742, 887, 925, 1033, 1052, 1095, 1096, 1121, 1195, 1217], "esim": 23, "02a73": 23, "02242": [23, 26], "fork": [23, 31, 132, 192, 206, 210, 840, 846, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985, 1018, 1033, 1041, 1059, 1252], "022d4": [23, 26], "pitchfork": [23, 26], "forkv": 23, "02ad9": 23, "element": [23, 26, 97, 100, 101, 102, 115, 209, 211, 212, 222, 227, 228, 233, 234, 237, 239, 240, 242, 243, 245, 248, 252, 253, 254, 258, 261, 262, 264, 268, 270, 271, 277, 280, 281, 284, 288, 309, 313, 316, 319, 328, 341, 392, 393, 428, 455, 470, 478, 482, 485, 519, 590, 604, 607, 609, 618, 637, 642, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 687, 691, 694, 698, 701, 723, 742, 745, 747, 764, 778, 792, 794, 840, 848, 1059, 1092, 1094, 1111, 1122, 1127, 1128, 1137, 1139, 1173, 1199, 1216, 1224, 1242], "02322": 23, "gap": [23, 153, 154], "02a86": [23, 26], "02267": [23, 26], "gel": 23, "02a8c": [23, 26], "022db": [23, 26], "02a7e": [23, 26], "gescc": 23, "02aa9": 23, "gesdot": 23, "02a80": 23, "gesdoto": 23, "02a82": 23, "gesdotol": 23, "02a84": 23, "gesl": 23, "0fe00": [23, 26], "02a94": 23, "022d9": [23, 26], "02277": [23, 26], "gla": 23, "02aa5": 23, "gle": 23, "02a92": 23, "glj": 23, "02aa4": 23, "overlap": [23, 277, 281, 323, 838, 871, 1101], "gsdot": 23, "022d7": [23, 26], "gsim": 23, "02273": [23, 26], "gsime": 23, "02a8e": 23, "similar": [23, 49, 51, 121, 190, 192, 221, 225, 229, 231, 262, 275, 289, 445, 452, 528, 543, 570, 599, 600, 631, 643, 652, 725, 770, 805, 806, 835, 836, 858, 873, 887, 932, 1082, 1084, 1191], "gsiml": 23, "02a90": 23, "0226b": [23, 26], "gtcc": 23, "02aa7": 23, "gtcir": 23, "02a7a": 23, "gtdot": 23, "gtquest": 23, "02a7c": 23, "mark": [23, 24, 26, 248, 289, 399, 400, 439, 461, 781, 789, 903, 1098, 1100, 1219], "gtrarr": 23, "02978": 23, "homtht": 23, "0223b": 23, "homothet": 23, "lap": 23, "02a85": [23, 26], "lat": 23, "02aab": 23, "larger": [23, 59, 69, 221, 228, 251, 268, 281, 331, 347, 491, 494, 506, 564, 644, 654, 660, 662, 858, 907, 930, 993, 995, 1062, 1083, 1096, 1256], "late": [23, 190, 192, 314, 316, 805, 806, 995, 1053, 1098, 1115, 1132, 1242], "02aad": 23, "ldot": 23, "022d6": [23, 26], "le": [23, 564], "02266": [23, 26], "02a8b": [23, 26], "022da": [23, 26], "02a7d": [23, 26], "lescc": 23, "02aa8": 23, "lesdot": 23, "02a7f": 23, "lesdoto": 23, "02a81": 23, "lesdotor": 23, "02a83": 23, "lesg": 23, "02a93": 23, "lg": [23, 329, 345, 1204], "02276": [23, 26], "lge": 23, "02a91": 23, "ll": [23, 26, 49, 51, 115, 166, 189, 190, 191, 193, 195, 197, 200, 204, 205, 217, 219, 229, 231, 245, 274, 277, 305, 308, 311, 585, 599, 660, 662, 663, 887, 913, 986, 995, 1006, 1021, 1070, 1074, 1080, 1207, 1245, 1250, 1261], "022d8": 23, "lsim": 23, "02272": [23, 26], "lsime": 23, "02a8d": 23, "lsimg": 23, "02a8f": 23, "0226a": [23, 26], "ltcc": 23, "02aa6": 23, "ltcir": 23, "02a79": 23, "ltdot": 23, "ltlarr": 23, "02976": 23, "ltquest": 23, "02a7b": 23, "ltrie": 23, "022b4": [23, 26], "normal": [23, 26, 79, 173, 180, 190, 192, 197, 207, 212, 221, 281, 482, 508, 526, 531, 535, 657, 659, 903, 919, 925, 1049, 1063, 1117, 1197, 1210, 1224, 1236, 1254], "mcomma": 23, "02a29": 23, "comma": [23, 24, 227, 240, 261, 341, 1199], "mddot": 23, "0223a": 23, "mid": 23, "02223": [23, 26], "mlcp": 23, "02adb": 23, "transvers": 23, "intersect": [23, 26, 245, 269, 341, 1139], "model": [23, 113, 292, 307, 313, 316, 481, 1121, 1194, 1197, 1216], "022a7": 23, "mstpo": 23, "0223e": 23, "invert": [23, 24, 50, 144, 221, 371, 1029], "lazi": [23, 258, 264, 274, 277, 434, 801], "02abb": 23, "0227a": [23, 26], "prap": 23, "02ab7": [23, 26], "prcue": 23, "pre": [23, 164, 192, 221, 250, 444, 518, 646, 648, 652, 697, 698, 699, 750, 791, 792, 948, 1114, 1129, 1203], "02ab3": 23, "02aaf": [23, 26], "singl": [23, 24, 26, 32, 49, 50, 51, 75, 97, 101, 102, 105, 110, 111, 115, 120, 123, 133, 148, 162, 170, 190, 192, 209, 248, 249, 258, 262, 264, 270, 271, 274, 277, 281, 305, 420, 426, 438, 439, 451, 497, 500, 504, 506, 522, 535, 555, 568, 653, 706, 781, 792, 800, 802, 813, 846, 856, 858, 920, 921, 923, 924, 925, 948, 953, 954, 955, 957, 974, 986, 994, 998, 1036, 1047, 1049, 1050, 1059, 1062, 1066, 1068, 1071, 1072, 1078, 1082, 1083, 1084, 1097, 1134, 1135, 1142, 1158, 1164, 1197, 1204, 1212, 1215, 1219, 1224, 1225, 1232, 1248, 1251], "prsim": 23, "0227e": [23, 26], "prurel": 23, "022b0": 23, "ratio": [23, 281], "02236": 23, "rtrie": 23, "022b5": [23, 26], "AS": [23, 26, 1012], "rtriltri": 23, "029ce": 23, "triangl": [23, 26, 620], "samalg": 23, "02210": [23, 26], "coproduct": [23, 26], "02abc": 23, "0227b": [23, 26], "scap": 23, "02ab8": [23, 26], "sccue": 23, "0227d": [23, 26], "sce": 23, "02ab4": 23, "02ab0": [23, 26], "scsim": 23, "0227f": [23, 26], "sdote": 23, "02a66": 23, "sfrown": 23, "simg": 23, "02a9e": 23, "02aa0": 23, "siml": 23, "02a9d": 23, "02a9f": 23, "smid": 23, "02323": 23, "smt": 23, "02aaa": 23, "smaller": [23, 267, 281, 420, 482, 491, 506, 1084], "smte": 23, "02aac": 23, "spar": [23, 307, 506], "02225": [23, 26], "parallel": [23, 26, 49, 51, 63, 64, 65, 69, 82, 196, 218, 221, 225, 227, 262, 317, 318, 339, 508, 814, 840, 877, 879, 887, 890, 924, 932, 1036, 1047, 1050, 1098, 1100, 1101, 1186, 1191, 1249, 1254], "sqsub": 23, "0228f": [23, 26], "squar": [23, 24, 26, 50, 209, 222, 232, 248, 254, 261, 264, 269, 271, 277, 281, 290, 302, 316, 323, 341, 345, 351, 357, 363, 518, 552, 662, 1092, 1141, 1145, 1212], "sqsube": 23, "02291": [23, 26], "sqsup": 23, "02290": [23, 26], "sqsupe": 23, "02292": [23, 26], "ssmile": 23, "sub": [23, 277, 323, 547, 564, 644, 824, 1088, 1127, 1136, 1233], "022d0": [23, 26], "sube": 23, "02ac5": [23, 26], "subedot": 23, "02ac3": 23, "submult": 23, "02ac1": 23, "subplu": 23, "02abf": 23, "subrarr": 23, "02979": 23, "subsim": 23, "02ac7": 23, "subsub": 23, "02ad5": 23, "subsup": 23, "02ad3": 23, "sup": [23, 1019], "022d1": [23, 26], "supdsub": 23, "02ad8": 23, "supe": 23, "02ac6": [23, 26], "supedot": 23, "02ac4": 23, "suphsol": 23, "02283": [23, 26], "0002f": [23, 24], "suphsub": 23, "02ad7": 23, "suplarr": 23, "0297b": 23, "supmult": 23, "02ac2": 23, "supplu": 23, "02ac0": 23, "supsim": 23, "02ac8": 23, "supsub": 23, "02ad4": 23, "supsup": 23, "02ad6": 23, "thkap": 23, "thksim": 23, "0223c": [23, 26], "topfork": 23, "02ada": 23, "tee": [23, 932], "trie": 23, "0225c": [23, 26], "delta": [23, 26, 113, 254], "twixt": 23, "0226c": [23, 26], "vbar": 23, "02aeb": 23, "02ae8": 23, "underbar": 23, "vbarv": 23, "02ae9": 23, "vdash": 23, "022ab": 23, "022a9": 23, "022a8": [23, 26], "true": [23, 26, 38, 46, 50, 101, 102, 105, 109, 110, 111, 112, 148, 173, 191, 193, 195, 200, 208, 209, 210, 211, 221, 222, 227, 232, 237, 239, 240, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 269, 271, 274, 275, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 384, 390, 393, 426, 442, 443, 455, 467, 470, 516, 519, 524, 588, 652, 659, 684, 712, 723, 726, 747, 770, 771, 772, 773, 775, 776, 777, 778, 803, 812, 814, 816, 819, 838, 875, 877, 907, 920, 921, 948, 961, 1030, 1038, 1043, 1044, 1047, 1049, 1050, 1058, 1059, 1062, 1071, 1072, 1087, 1093, 1094, 1098, 1100, 1101, 1102, 1103, 1106, 1109, 1122, 1123, 1125, 1126, 1127, 1130, 1136, 1139, 1140, 1204, 1208, 1210, 1215, 1230, 1231, 1233], "022a2": [23, 26], "vdashl": 23, "02ae6": 23, "veebar": 23, "022bb": 23, "xor": [23, 1109], "vltri": 23, "022b2": [23, 26], "vprop": 23, "0221d": [23, 26], "vrtri": 23, "022b3": [23, 26], "vvdash": 23, "022aa": 23, "\u00bd": 24, "\u00bc": 24, "\u215b": 24, "\u00be": 24, "\u215c": 24, "\u215d": 24, "\u215e": 24, "_": [24, 27, 50, 209, 210, 245, 258, 261, 262, 264, 271, 274, 277, 284, 287, 299, 323, 345, 367, 390, 437, 506, 655, 779, 877, 948, 1053, 1080, 1098, 1100], "\u00b5": 24, "\u03c9": 24, "\u00aa": 24, "\u00ba": 24, "\u00b9": 24, "\u00b2": 24, "\u00b3": 24, "amp": [24, 261], "00026": 24, "ampersand": [24, 755], "apo": 24, "00027": 24, "apostroph": 24, "ast": [24, 564], "0002a": 24, "brvbar": 24, "000a6": 24, "broken": [24, 480, 481, 770, 879, 892, 1102, 1169, 1199], "bsol": 24, "cent": 24, "000a2": 24, "0003a": 24, "0002c": 24, "commat": 24, "00040": 24, "commerci": [24, 197, 865, 927], "AT": 24, "000a9": 24, "curren": 24, "000a4": 24, "currenc": [24, 307, 506], "02193": [24, 26], "deg": 24, "000b0": 24, "degre": [24, 141, 161, 543, 554, 585, 695, 995, 1115], "000f7": [24, 26], "divis": [24, 26, 234, 242, 245, 261, 264, 269, 271, 277, 393, 420, 441, 563, 564, 578, 1109, 1121, 1176], "00024": 24, "0003d": 24, "excl": 24, "00021": 24, "frac12": 24, "000bd": 24, "vulgar": 24, "fraction": [24, 281, 384], "ONE": [24, 743], "frac14": 24, "000bc": 24, "quarter": 24, "frac18": 24, "0215b": 24, "eighth": 24, "frac34": 24, "000be": 24, "frac38": 24, "0215c": 24, "frac58": 24, "0215d": 24, "frac78": 24, "0215e": 24, "0003e": 24, "horbar": 24, "02015": 24, "horizont": [24, 439], "hyphen": 24, "02010": 24, "iexcl": 24, "000a1": 24, "iquest": 24, "000bf": 24, "laquo": 24, "000ab": 24, "quotat": [24, 26], "lcub": 24, "0007b": [24, 26], "curli": [24, 26], "bracket": [24, 26, 1118], "ldquo": 24, "0201c": [24, 26], "lowbar": 24, "0005f": 24, "low": [24, 110, 116, 153, 154, 166, 232, 261, 281, 298, 432, 464, 500, 504, 535, 552, 575, 588, 591, 592, 596, 800, 802, 869, 883, 924, 993, 1051, 1067, 1148, 1251, 1252, 1254, 1255, 1256], "lpar": 24, "00028": 24, "parenthesi": 24, "lsqb": 24, "0005b": [24, 26], "lsquo": 24, "02018": [24, 26], "0003c": 24, "micro": [24, 258, 264, 274, 277], "000b5": 24, "middot": 24, "000b7": [24, 26], "middl": [24, 26, 27, 50, 200, 210, 265, 281, 333, 336, 366, 367, 484, 504, 591, 620, 865, 986, 996, 1002, 1065, 1100], "nbsp": [24, 367], "000a0": [24, 26], "NO": [24, 26, 133, 201, 241, 395, 524, 722, 819, 995, 1062], "space": [24, 26, 50, 69, 90, 101, 102, 115, 137, 148, 163, 188, 190, 191, 192, 197, 209, 212, 236, 250, 277, 295, 302, 304, 305, 323, 325, 326, 369, 370, 389, 400, 401, 409, 427, 446, 448, 467, 519, 548, 553, 562, 566, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 651, 659, 694, 815, 839, 840, 848, 885, 900, 914, 915, 916, 917, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985, 994, 997, 998, 999, 1000, 1001, 1008, 1012, 1013, 1014, 1015, 1016, 1024, 1026, 1031, 1033, 1041, 1042, 1044, 1045, 1048, 1050, 1058, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1098, 1101, 1135, 1245], "000ac": 24, "NOT": [24, 26, 219, 378, 426, 465, 513, 516, 522, 524, 526, 569, 570, 583, 584, 858, 977, 1210], "num": [24, 195, 208, 209, 222, 232, 248, 262, 264, 269, 271, 277, 281, 299, 302, 341, 345, 363, 367, 470, 674, 676, 759, 760, 761, 762, 771, 791, 823, 825, 827, 829, 977, 982, 1093, 1199], "00023": 24, "ohm": 24, "02126": 24, "ordf": 24, "000aa": 24, "feminin": 24, "ordin": [24, 277, 284, 287, 323, 329, 345, 351, 357, 1204], "indic": [24, 240, 258, 264, 269, 274, 277, 313, 697, 848], "ordm": 24, "000ba": 24, "masculin": 24, "para": 24, "000b6": 24, "pilcrow": 24, "percnt": 24, "00025": 24, "percent": [24, 281], "period": [24, 75, 124, 128, 161, 206, 229, 498, 651, 817, 897, 986, 994, 1013, 1023, 1047, 1049, 1062, 1219], "0002e": 24, "full": [24, 125, 133, 168, 173, 207, 252, 256, 302, 443, 458, 486, 491, 519, 614, 625, 659, 764, 801, 814, 840, 927, 932, 994, 1038, 1044, 1090, 1109, 1142, 1199, 1207, 1244], "stop": [24, 186, 195, 250, 277, 314, 316, 318, 323, 341, 351, 383, 535, 569, 583, 881, 986, 988, 1063, 1089, 1213, 1231], "0002b": 24, "plusmn": 24, "000b1": [24, 26], "000a3": 24, "quest": 24, "0003f": 24, "quot": [24, 209, 257, 260, 264, 271, 277, 285, 439, 522, 524, 912, 977, 978, 996, 1134], "00022": 24, "raquo": 24, "000bb": 24, "rcub": 24, "0007d": [24, 26], "rdquo": 24, "0201d": [24, 26], "reg": 24, "000ae": [24, 26], "rpar": 24, "00029": 24, "rsqb": 24, "0005d": [24, 26], "rsquo": 24, "02019": [24, 26], "sect": 24, "000a7": 24, "section": [24, 26, 79, 190, 194, 195, 196, 213, 226, 250, 308, 311, 314, 381, 416, 628, 646, 725, 728, 813, 877, 879, 948, 992, 993, 1009, 1065, 1066, 1067, 1069, 1076, 1082, 1083, 1084, 1224], "semi": [24, 309, 343, 556, 800, 1033, 1085], "0003b": 24, "semicolon": [24, 519, 535, 1199], "shy": 24, "000ad": 24, "soft": [24, 405, 885], "sol": 24, "sung": 24, "0266a": 24, "sup1": 24, "000b9": 24, "superscript": 24, "sup2": 24, "000b2": 24, "sup3": 24, "000b3": 24, "000d7": 24, "trade": 24, "02122": 24, "02191": [24, 26], "verbar": 24, "0007c": [24, 26], "000a5": 24, "lorem": 25, "ipsum": 25, "h\u00f6dlmoser": 25, "anywai": [25, 31, 41, 48, 173, 189, 191, 192, 201, 219, 221, 241, 250, 251, 277, 446, 494, 500, 504, 516, 646, 652, 660, 662, 663, 742, 750, 753, 757, 791, 792, 802, 879, 887, 927, 948, 1031, 1041, 1098, 1210, 1224], "hmm": [25, 196, 208, 219, 528, 631, 764, 1062], "annoi": [25, 31, 384, 506, 742, 1224], "thing": [25, 28, 30, 31, 37, 91, 128, 153, 154, 189, 190, 192, 193, 194, 195, 196, 197, 201, 209, 213, 217, 220, 221, 225, 229, 241, 258, 264, 265, 267, 274, 277, 287, 340, 350, 379, 380, 387, 444, 460, 464, 488, 494, 497, 504, 514, 548, 552, 620, 627, 628, 644, 646, 653, 657, 659, 681, 742, 764, 781, 805, 814, 838, 846, 851, 883, 887, 912, 927, 932, 982, 986, 987, 1014, 1019, 1044, 1049, 1065, 1078, 1082, 1083, 1089, 1103, 1117, 1140, 1231, 1245, 1249, 1251], "thin": [25, 26], "border": 25, "anfrag": 25, "dauer": 25, "tage": [25, 214, 216, 224, 415], "sysprog": [25, 305, 840, 894, 899, 985, 1026, 1027, 1030, 1251, 1252, 1254, 1255], "should": [25, 31, 33, 43, 45, 68, 71, 113, 116, 117, 120, 132, 133, 141, 173, 191, 192, 195, 197, 201, 211, 217, 221, 225, 250, 251, 265, 271, 277, 281, 305, 340, 343, 345, 384, 389, 404, 405, 418, 443, 465, 480, 490, 494, 504, 510, 517, 535, 542, 547, 552, 553, 555, 556, 564, 601, 645, 652, 725, 750, 753, 755, 759, 770, 814, 846, 865, 877, 879, 883, 887, 912, 932, 948, 955, 960, 993, 994, 995, 1002, 1021, 1039, 1050, 1089, 1098, 1102, 1110, 1121, 1156, 1160, 1169, 1197, 1207, 1219, 1224, 1225, 1253, 1260, 1261, 1264, 1265], "catcher": 25, "somehow": [25, 30, 121, 128, 132, 144, 172, 173, 191, 343, 371, 524, 657, 895, 1219, 1220], "einf\u00fchrungskur": 25, "richtet": [25, 1239], "programmier": [25, 415, 416, 1239, 1240, 1258], "kennen": [25, 152, 165, 399], "lernen": 25, "zusammenh\u00e4ng": 25, "grundpfeil": 25, "werden": [25, 152, 165, 198, 199, 206, 207, 208, 216, 222, 224, 233, 234, 237, 243, 252, 253, 268, 280, 292, 379, 977, 1238, 1239, 1240, 1247, 1258, 1259], "erkl\u00e4rt": [25, 209, 212, 216, 1238, 1259], "gro\u00dfe": [25, 222], "bild": [25, 212], "orientieren": 25, "zurechtfinden": [25, 152, 165, 399], "somedai": 25, "better": [25, 45, 48, 105, 106, 114, 132, 173, 186, 191, 195, 201, 202, 211, 221, 222, 224, 225, 227, 228, 229, 232, 233, 246, 250, 256, 258, 259, 261, 262, 267, 268, 269, 271, 272, 275, 278, 281, 286, 290, 298, 305, 318, 322, 328, 366, 371, 372, 423, 435, 443, 450, 459, 464, 465, 466, 472, 476, 479, 483, 484, 492, 494, 496, 501, 502, 505, 508, 509, 513, 517, 524, 532, 535, 542, 620, 647, 654, 668, 681, 698, 721, 734, 737, 742, 744, 782, 794, 805, 820, 837, 839, 840, 887, 967, 994, 995, 1015, 1033, 1036, 1062, 1063, 1092, 1103, 1121, 1135, 1148, 1187, 1188, 1191, 1196, 1198, 1203, 1209, 1224, 1233], "yet": [25, 69, 163, 182, 190, 197, 200, 209, 211, 278, 279, 289, 302, 340, 415, 461, 494, 507, 542, 551, 564, 566, 601, 602, 614, 620, 712, 816, 887, 904, 914, 915, 994, 1002, 1006, 1062, 1090, 1120, 1148, 1215, 1224, 1233, 1245], "redefin": 25, "wrap": [25, 50, 53, 248, 286, 340, 375, 378, 517, 523, 533, 563, 802, 808, 840, 887, 1082, 1216], "look": [25, 30, 31, 33, 49, 51, 55, 73, 80, 93, 115, 120, 128, 133, 153, 154, 173, 186, 189, 190, 191, 192, 193, 195, 197, 200, 209, 217, 221, 225, 228, 240, 246, 250, 275, 305, 308, 311, 314, 315, 333, 336, 340, 354, 383, 416, 478, 486, 494, 500, 504, 506, 516, 535, 539, 585, 600, 601, 614, 631, 656, 668, 680, 733, 746, 770, 802, 808, 809, 846, 856, 883, 887, 914, 915, 919, 924, 927, 938, 940, 945, 952, 960, 976, 987, 993, 994, 1002, 1019, 1029, 1058, 1059, 1083, 1087, 1097, 1114, 1117, 1156, 1160, 1169, 1191, 1198, 1199, 1210, 1226, 1241, 1242, 1251], "mdbootstrap": 25, "jqueri": 25, "icon": 25, "longrightarrow": 26, "rightarrow": 26, "doubleleftrightarrow": 26, "02220": 26, "applyfunct": 26, "02061": 26, "applic": [26, 50, 69, 85, 128, 177, 190, 195, 206, 219, 241, 336, 340, 343, 371, 380, 395, 416, 490, 493, 500, 601, 677, 680, 749, 790, 926, 987, 994, 1006, 1033, 1198, 1248, 1255], "approx": [26, 1179, 1224], "approxeq": 26, "assign": [26, 88, 209, 210, 211, 216, 222, 232, 239, 247, 258, 261, 264, 267, 269, 273, 274, 279, 281, 285, 309, 313, 314, 316, 341, 346, 357, 364, 368, 379, 380, 398, 404, 405, 426, 443, 449, 450, 459, 466, 472, 473, 476, 479, 483, 488, 490, 492, 496, 501, 502, 556, 563, 569, 570, 578, 583, 584, 646, 647, 650, 656, 712, 721, 729, 739, 743, 744, 746, 750, 757, 780, 782, 787, 796, 802, 836, 837, 839, 840, 993, 995, 1036, 1047, 1050, 1052, 1130, 1141, 1213, 1215], "backcong": 26, "backepsilon": 26, "backprim": 26, "02035": 26, "backsim": 26, "backsimeq": 26, "backslash": [26, 439, 972, 1134], "02216": 26, "barwedg": 26, "02305": 26, "02235": 26, "bernoulli": 26, "0212c": 26, "capit": [26, 242, 245, 254, 261, 271, 277, 302, 323, 392, 948, 1148], "bigcap": 26, "022c2": 26, "bigcirc": 26, "025ef": 26, "bigcup": 26, "022c3": 26, "union": [26, 245, 253, 269, 341, 372, 380, 381, 482, 820, 824, 827, 828, 829, 830, 831, 839, 840, 1139, 1243], "bigodot": 26, "02a00": 26, "bigoplu": 26, "02a01": 26, "bigotim": 26, "02a02": 26, "bigsqcup": 26, "02a06": 26, "bigstar": 26, "02605": 26, "bigtriangledown": 26, "025bd": 26, "white": [26, 313, 428], "bigtriangleup": 26, "025b3": 26, "biguplu": 26, "02a04": 26, "bigve": 26, "022c1": 26, "logic": [26, 55, 116, 136, 144, 192, 371, 376, 387, 434, 450, 459, 464, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 549, 566, 744, 782, 837, 839, 840, 1210, 1251], "bigwedg": 26, "022c0": 26, "bkarow": 26, "blacklozeng": 26, "029eb": 26, "lozeng": 26, "blacksquar": 26, "025aa": 26, "blacktriangl": 26, "025b4": 26, "blacktriangledown": 26, "025be": 26, "blacktriangleleft": 26, "025c2": 26, "blacktriangleright": 26, "025b8": 26, "bot": [26, 1224], "022a5": 26, "boxminu": 26, "0229f": 26, "boxplu": 26, "0229e": 26, "boxtim": 26, "022a0": 26, "breve": 26, "002d8": 26, "bullet": [26, 192, 1198], "02022": 26, "bumpeq": 26, "capitaldifferentiald": 26, "02145": 26, "struck": 26, "ital": 26, "d": [26, 55, 76, 88, 98, 112, 115, 151, 190, 191, 192, 193, 208, 211, 219, 222, 227, 232, 237, 239, 245, 248, 251, 254, 255, 259, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 305, 309, 318, 319, 322, 323, 329, 337, 341, 345, 351, 357, 363, 367, 375, 390, 392, 393, 398, 420, 427, 428, 430, 434, 461, 465, 494, 504, 506, 519, 532, 547, 552, 646, 652, 658, 712, 713, 718, 719, 721, 726, 752, 789, 801, 802, 814, 816, 818, 860, 881, 895, 911, 914, 915, 925, 927, 931, 932, 945, 948, 949, 970, 975, 977, 982, 988, 993, 994, 995, 1007, 1012, 1062, 1065, 1088, 1090, 1116, 1122, 1127, 1129, 1130, 1134, 1135, 1138, 1159], "caylei": 26, "0212d": 26, "letter": [26, 437, 1120], "cedilla": 26, "000b8": 26, "centerdot": 26, "checkmark": 26, "02713": 26, "circeq": 26, "circlearrowleft": 26, "circlearrowright": 26, "circledast": 26, "0229b": 26, "circledcirc": 26, "0229a": 26, "circleddash": 26, "0229d": 26, "circledot": 26, "02299": 26, "circledr": 26, "024c8": 26, "latin": [26, 268, 329, 345], "circleminu": 26, "02296": 26, "circleplu": 26, "02295": 26, "circletim": 26, "02297": 26, "clockwisecontourintegr": 26, "02232": 26, "contour": 26, "closecurlydoublequot": 26, "closecurlyquot": 26, "clubsuit": 26, "02663": 26, "suit": [26, 32, 88, 120, 144, 166, 225, 294, 298, 373, 406, 482, 491, 542, 543, 544, 546, 547, 549, 551, 564, 566, 567, 585, 598, 599, 600, 601, 602, 660, 661, 662, 663, 753, 754, 791, 800, 801, 834, 835, 836, 838, 1225, 1232, 1242, 1259], "coloneq": 26, "complement": [26, 97, 443, 520], "02201": 26, "complex": [26, 60, 190, 201, 221, 227, 247, 264, 269, 271, 277, 281, 285, 287, 302, 309, 323, 351, 398, 418, 461, 473, 488, 524, 817, 993, 994, 1018, 1036, 1059, 1121, 1130, 1237, 1242], "02102": 26, "02261": 26, "ident": [26, 273, 323, 335, 637, 1109, 1111, 1130], "contourintegr": 26, "0222e": 26, "counterclockwisecontourintegr": 26, "02233": 26, "cupcap": 26, "0224d": 26, "curlyeqprec": 26, "curlyeqsucc": 26, "curlyve": 26, "022ce": 26, "curlywedg": 26, "022cf": 26, "curvearrowleft": 26, "curvearrowright": 26, "dbkarow": 26, "ddagger": 26, "02021": 26, "ddotseq": 26, "del": [26, 208, 211, 212, 222, 237, 239, 242, 245, 253, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 391, 393, 1097, 1122, 1138], "02207": 26, "nabla": 26, "diacriticalacut": 26, "000b4": 26, "acut": 26, "accent": 26, "diacriticaldot": 26, "002d9": 26, "diacriticaldoubleacut": 26, "002dd": 26, "diacriticalgrav": 26, "00060": 26, "grave": 26, "diacriticaltild": 26, "002dc": 26, "022c4": 26, "diamondsuit": 26, "02666": 26, "differentiald": 26, "02146": 26, "digamma": 26, "003dd": 26, "div": [26, 494, 564], "divideontim": 26, "022c7": 26, "doteq": 26, "doteqdot": 26, "dotequ": 26, "dotminu": 26, "02238": 26, "dotplu": 26, "02214": 26, "dotsquar": 26, "022a1": 26, "doublebarwedg": 26, "02306": 26, "doublecontourintegr": 26, "0222f": 26, "surfac": [26, 221, 924, 993, 994, 1196, 1198], "doubledot": 26, "000a8": 26, "diaeresi": 26, "doubledownarrow": 26, "doubleleftarrow": 26, "021d0": 26, "doubleleftte": 26, "doublelongleftarrow": 26, "doublelongleftrightarrow": 26, "doublelongrightarrow": 26, "doublerightarrow": 26, "021d2": 26, "doublerightte": 26, "doubleuparrow": 26, "doubleupdownarrow": 26, "doubleverticalbar": 26, "downarrow": 26, "downarrowuparrow": 26, "downdownarrow": 26, "downharpoonleft": 26, "downharpoonright": 26, "downleftvector": 26, "downrightvector": 26, "downte": 26, "022a4": 26, "downteearrow": 26, "021a7": 26, "drbkarow": 26, "02208": 26, "emptyset": 26, "02205": 26, "eqcirc": 26, "eqcolon": 26, "eqsim": 26, "eqslantgtr": 26, "eqslantless": 26, "equaltild": 26, "equilibrium": 26, "02203": 26, "THERE": [26, 648], "02130": 26, "exponential": 26, "02147": 26, "fallingdotseq": 26, "foral": [26, 1141], "02200": 26, "FOR": [26, 201, 222, 229, 819], "fouriertrf": 26, "02131": 26, "geq": 26, "02265": 26, "geqq": 26, "geqslant": 26, "ggg": 26, "gnapprox": 26, "02a8a": 26, "gneq": 26, "02a88": 26, "gneqq": 26, "02269": 26, "BUT": 26, "greaterequ": 26, "greaterequalless": 26, "greaterfullequ": 26, "greaterless": 26, "greaterslantequ": 26, "greatertild": 26, "gtrapprox": 26, "gtrdot": 26, "gtreqless": 26, "gtreqqless": 26, "gtrless": 26, "gtrsim": 26, "gvertneqq": 26, "hacek": 26, "002c7": 26, "caron": 26, "hbar": 26, "0210f": 26, "planck": 26, "constant": [26, 250, 258, 264, 267, 268, 269, 274, 277, 281, 319, 340, 426, 434, 435, 440, 450, 454, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 524, 587, 693, 744, 755, 782, 792, 794, 837, 839, 840], "pi": [26, 56, 69, 97, 115, 133, 136, 158, 159, 185, 202, 205, 231, 261, 264, 305, 344, 404, 415, 440, 467, 470, 488, 598, 601, 602, 656, 676, 757, 819, 840, 864, 868, 891, 896, 902, 905, 908, 985, 992, 994, 995, 1006, 1053, 1066, 1068, 1076, 1077, 1080, 1121, 1245, 1246, 1253], "heartsuit": 26, "02665": 26, "hilbertspac": 26, "0210b": 26, "h": [26, 30, 32, 88, 105, 111, 115, 124, 128, 129, 130, 131, 133, 166, 192, 197, 212, 215, 217, 222, 228, 232, 237, 250, 251, 258, 261, 262, 269, 271, 281, 294, 305, 316, 351, 354, 363, 367, 373, 375, 380, 419, 420, 422, 426, 428, 430, 438, 461, 462, 464, 470, 477, 485, 487, 491, 507, 508, 509, 510, 511, 512, 513, 515, 516, 528, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 627, 628, 630, 631, 634, 637, 639, 644, 645, 646, 647, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 721, 725, 731, 732, 733, 734, 735, 736, 737, 738, 747, 749, 752, 753, 754, 770, 771, 774, 785, 788, 791, 792, 796, 800, 801, 802, 803, 805, 814, 816, 818, 819, 823, 825, 827, 828, 829, 830, 831, 834, 835, 836, 838, 846, 851, 855, 856, 858, 865, 867, 869, 871, 873, 875, 879, 881, 883, 892, 897, 900, 901, 904, 906, 907, 913, 925, 932, 945, 948, 970, 977, 987, 989, 993, 1009, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1046, 1049, 1053, 1055, 1057, 1058, 1062, 1063, 1065, 1066, 1067, 1068, 1074, 1078, 1081, 1082, 1084, 1127, 1142, 1219, 1226, 1231, 1233, 1236], "hksearow": 26, "hkswarow": 26, "hookleftarrow": 26, "hookrightarrow": 26, "hslash": 26, "humpdownhump": 26, "humpequ": 26, "iiiint": 26, "02a0c": 26, "quadrupl": 26, "iiint": 26, "0222d": 26, "02111": 26, "imaginaryi": 26, "02148": 26, "imaglin": 26, "02110": 26, "imagpart": 26, "impli": [26, 806, 1219], "integ": [26, 66, 67, 79, 141, 207, 209, 211, 226, 227, 228, 230, 234, 238, 244, 247, 251, 258, 261, 262, 264, 267, 270, 273, 274, 275, 277, 282, 285, 291, 303, 310, 323, 330, 342, 346, 352, 358, 368, 398, 420, 421, 426, 436, 439, 441, 442, 443, 454, 465, 467, 469, 470, 481, 482, 486, 492, 496, 501, 502, 563, 564, 567, 585, 620, 648, 673, 676, 724, 739, 743, 744, 746, 782, 785, 811, 837, 839, 840, 846, 1023, 1035, 1036, 1037, 1044, 1085, 1098, 1101, 1129, 1135, 1141, 1168, 1212, 1214, 1238, 1243], "02124": 26, "z": [26, 100, 166, 208, 209, 212, 222, 232, 264, 265, 277, 280, 302, 329, 357, 367, 427, 437, 448, 449, 516, 662, 726, 796, 913, 976, 1063, 1116, 1247], "0222b": 26, "interc": 26, "022ba": 26, "intercal": 26, "intprod": 26, "02a3c": 26, "interior": 26, "product": [26, 31, 69, 76, 144, 162, 163, 192, 313, 500, 504, 532, 824, 986, 995, 1068, 1083, 1146], "invisiblecomma": 26, "02063": 26, "invis": [26, 570, 1251], "separ": [26, 69, 94, 95, 115, 139, 190, 216, 218, 228, 248, 261, 267, 277, 281, 284, 287, 302, 305, 308, 309, 311, 319, 323, 331, 345, 347, 351, 357, 363, 371, 380, 427, 465, 486, 506, 510, 518, 519, 535, 548, 552, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 620, 637, 642, 666, 788, 816, 838, 840, 855, 856, 889, 924, 928, 933, 980, 982, 985, 995, 1033, 1049, 1065, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1084, 1089, 1147, 1164, 1169, 1199, 1231, 1238, 1253, 1256], "invisibletim": 26, "02062": 26, "langl": 26, "02329": 26, "laplacetrf": 26, "02112": 26, "lbrace": 26, "lbrack": 26, "leftanglebracket": 26, "leftarrow": 26, "leftarrowbar": 26, "021e4": 26, "leftarrowrightarrow": 26, "leftarrowtail": 26, "leftceil": 26, "02308": 26, "ceil": [26, 249, 262, 281, 351], "leftdoublebracket": 26, "0301a": 26, "leftdownvector": 26, "leftfloor": 26, "0230a": 26, "floor": [26, 234, 242, 245, 249, 261, 262, 264, 269, 271, 277, 281, 351, 393, 1109, 1121], "leftharpoondown": 26, "leftharpoonup": 26, "leftleftarrow": 26, "leftrightarrow": 26, "leftrightharpoon": 26, "leftrightsquigarrow": 26, "leftte": 26, "leftteearrow": 26, "021a4": 26, "leftthreetim": 26, "022cb": 26, "semidirect": 26, "lefttriangl": 26, "lefttriangleequ": 26, "leftupvector": 26, "leftvector": 26, "leq": 26, "02264": 26, "leqq": 26, "leqslant": 26, "lessapprox": 26, "lessdot": 26, "lesseqgtr": 26, "lesseqqgtr": 26, "lessequalgreat": 26, "lessfullequ": 26, "lessgreat": 26, "lessgtr": 26, "lesssim": 26, "lessslantequ": 26, "lesstild": 26, "llcorner": 26, "0231e": 26, "bottom": [26, 236, 340, 507, 585, 598, 885, 948, 967, 986, 1089], "corner": [26, 250, 313, 416, 427, 531, 534, 598, 814, 1248], "lleftarrow": 26, "lmoustach": 26, "023b0": 26, "upper": [26, 222, 245, 269, 271, 277, 287, 302, 309, 323, 345, 357, 383, 392, 416, 420, 424, 440, 464, 1050, 1152], "lower": [26, 192, 245, 258, 264, 269, 274, 277, 281, 287, 302, 323, 383, 392, 420, 424, 440, 464, 544, 687, 1051, 1059, 1109, 1215], "lnapprox": 26, "02a89": 26, "lneq": 26, "02a87": 26, "lneqq": 26, "02268": 26, "longleftarrow": 26, "longleftrightarrow": 26, "longmapsto": 26, "looparrowleft": 26, "looparrowright": 26, "lowerleftarrow": 26, "lowerrightarrow": 26, "025ca": 26, "lrcorner": 26, "0231f": 26, "lvertneqq": 26, "maltes": 26, "02720": 26, "mapsto": 26, "measuredangl": 26, "02221": 26, "measur": [26, 88, 120, 123, 133, 166, 192, 281, 314, 318, 340, 350, 373, 379, 490, 497, 563, 567, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 642, 654, 719, 823, 840, 846, 913, 923, 1015, 1058, 1083, 1196, 1198], "mellintrf": 26, "02133": 26, "minusplu": 26, "02213": 26, "napprox": 26, "02249": 26, "0266e": 26, "music": [26, 192, 319], "02115": 26, "nearrow": 26, "negativemediumspac": 26, "0200b": 26, "width": [26, 258, 264, 267, 268, 274, 277, 299, 307, 323, 420, 443, 552, 637, 660, 986, 1059, 1135, 1199, 1247], "negativethickspac": 26, "negativethinspac": 26, "negativeverythinspac": 26, "nestedgreatergreat": 26, "nestedlessless": 26, "nexist": 26, "02204": 26, "ngeq": 26, "02271": 26, "neither": [26, 209, 542, 569, 583, 753, 933, 935, 936, 1019, 1131], "nor": [26, 209, 265, 569, 583, 653, 753, 933, 935, 936, 986, 1006, 1019, 1131], "ngeqq": 26, "ngeqslant": 26, "ngtr": 26, "0226f": 26, "nleftarrow": 26, "nleftrightarrow": 26, "nleq": 26, "02270": 26, "nleqq": 26, "nleqslant": 26, "nless": 26, "0226e": 26, "nonbreakingspac": 26, "notcongru": 26, "02262": 26, "notdoubleverticalbar": 26, "02226": 26, "notel": 26, "02209": 26, "notequ": 26, "02260": 26, "notequaltild": 26, "notexist": 26, "notgreat": 26, "notgreaterequ": 26, "notgreaterfullequ": 26, "notgreatergreat": 26, "notgreaterless": 26, "02279": 26, "notgreaterslantequ": 26, "notgreatertild": 26, "02275": 26, "nothumpdownhump": 26, "notlefttriangl": 26, "022ea": 26, "notlefttriangleequ": 26, "022ec": 26, "notless": 26, "notlessequ": 26, "notlessgreat": 26, "02278": 26, "notlessless": 26, "notlessslantequ": 26, "notlesstild": 26, "02274": 26, "notpreced": 26, "02280": 26, "notprecedesequ": 26, "notprecedesslantequ": 26, "022e0": 26, "notreverseel": 26, "0220c": 26, "notrighttriangl": 26, "022eb": 26, "notrighttriangleequ": 26, "022ed": 26, "notsquaresubsetequ": 26, "022e2": 26, "notsquaresupersetequ": 26, "022e3": 26, "notsubset": 26, "020d2": 26, "notsubsetequ": 26, "02288": 26, "notsucce": 26, "02281": 26, "notsucceedsequ": 26, "notsucceedsslantequ": 26, "022e1": 26, "notsuperset": 26, "notsupersetequ": 26, "02289": 26, "nottild": 26, "02241": 26, "nottildeequ": 26, "02244": 26, "asymptot": 26, "nottildefullequ": 26, "02247": 26, "actual": [26, 30, 31, 36, 48, 192, 195, 200, 221, 248, 258, 264, 267, 274, 277, 281, 308, 311, 313, 343, 401, 544, 554, 712, 719, 742, 800, 846, 986, 993, 994, 1018, 1063, 1087, 1103, 1112, 1146, 1194, 1196, 1198, 1217, 1231], "nottildetild": 26, "notverticalbar": 26, "02224": 26, "nparallel": 26, "nprec": 26, "npreceq": 26, "nrightarrow": 26, "nshortmid": 26, "nshortparallel": 26, "nsimeq": 26, "nsubset": 26, "nsubseteq": 26, "nsubseteqq": 26, "nsucc": 26, "nsucceq": 26, "nsupset": 26, "nsupseteq": 26, "nsupseteqq": 26, "ntriangleleft": 26, "ntrianglelefteq": 26, "ntriangleright": 26, "ntrianglerighteq": 26, "nwarrow": 26, "oint": 26, "opencurlydoublequot": 26, "opencurlyquot": 26, "orderof": 26, "02134": 26, "partiald": 26, "02202": 26, "partial": [26, 105, 109, 315, 344, 865, 1195], "differenti": [26, 60, 736, 804, 887, 933, 993, 1121, 1190, 1204], "plusminu": 26, "poincareplan": 26, "0210c": 26, "prec": 26, "precapprox": 26, "preccurlyeq": 26, "precedesequ": 26, "precedesslantequ": 26, "precedestild": 26, "preceq": 26, "precnapprox": 26, "02ab9": 26, "precneqq": 26, "02ab5": 26, "precnsim": 26, "022e8": 26, "precsim": 26, "02119": 26, "propto": 26, "quaternion": 26, "0210d": 26, "questeq": 26, "rangl": 26, "0232a": 26, "0211a": 26, "q": [26, 115, 229, 281, 464, 470, 644, 661, 662, 676, 805, 925, 948, 981, 1058, 1219], "rbrace": 26, "rbrack": 26, "0211c": 26, "realin": 26, "0211b": 26, "realpart": 26, "real": [26, 64, 116, 122, 126, 128, 131, 132, 133, 183, 197, 200, 207, 209, 225, 246, 259, 264, 265, 272, 274, 277, 281, 286, 289, 299, 307, 313, 322, 328, 340, 363, 371, 381, 384, 444, 493, 500, 508, 532, 546, 563, 585, 593, 594, 595, 596, 597, 601, 643, 644, 649, 764, 779, 797, 800, 824, 839, 840, 848, 887, 925, 926, 948, 986, 994, 1006, 1049, 1136, 1191, 1194, 1196, 1225, 1241, 1242], "0211d": 26, "reverseel": 26, "0220b": 26, "reverseequilibrium": 26, "reverseupequilibrium": 26, "rightanglebracket": 26, "rightarrowbar": 26, "021e5": 26, "rightarrowleftarrow": 26, "rightarrowtail": 26, "rightceil": 26, "02309": 26, "rightdoublebracket": 26, "0301b": 26, "rightdownvector": 26, "rightfloor": 26, "0230b": 26, "rightharpoondown": 26, "rightharpoonup": 26, "rightleftarrow": 26, "rightleftharpoon": 26, "rightrightarrow": 26, "rightsquigarrow": 26, "rightte": 26, "rightteearrow": 26, "rightthreetim": 26, "022cc": 26, "righttriangl": 26, "righttriangleequ": 26, "rightupvector": 26, "rightvector": 26, "risingdotseq": 26, "rmoustach": 26, "023b1": 26, "rrightarrow": 26, "searrow": 26, "setminu": 26, "shortdownarrow": 26, "shortleftarrow": 26, "shortmid": 26, "shortparallel": 26, "shortrightarrow": 26, "shortuparrow": 26, "simeq": 26, "02243": 26, "smallcircl": 26, "02218": 26, "smallsetminu": 26, "spadesuit": 26, "02660": 26, "sqrt": [26, 249, 262, 351, 644, 646, 654, 662, 749, 764, 765, 766, 767, 768, 805], "0221a": 26, "sqsubset": 26, "sqsubseteq": 26, "sqsupset": 26, "sqsupseteq": 26, "025a1": 26, "squareintersect": 26, "02293": 26, "cap": [26, 261, 1148], "squaresubset": 26, "squaresubsetequ": 26, "squaresuperset": 26, "squaresupersetequ": 26, "squareunion": 26, "02294": 26, "cup": [26, 319, 357], "022c6": 26, "straightepsilon": 26, "003f5": 26, "straightphi": 26, "003d5": 26, "phi": 26, "subseteq": 26, "02286": 26, "subseteqq": 26, "subsetequ": 26, "subsetneq": 26, "0228a": 26, "subsetneqq": 26, "02acb": 26, "succ": 26, "succapprox": 26, "succcurlyeq": 26, "succeedsequ": 26, "succeedsslantequ": 26, "succeedstild": 26, "succeq": 26, "succnapprox": 26, "02aba": 26, "succneqq": 26, "02ab6": 26, "succnsim": 26, "022e9": 26, "succsim": 26, "suchthat": 26, "sum": [26, 50, 222, 242, 246, 247, 261, 262, 264, 267, 269, 277, 280, 281, 284, 287, 302, 309, 351, 357, 363, 367, 455, 470, 485, 487, 488, 490, 574, 600, 620, 644, 657, 659, 672, 676, 724, 739, 823, 825, 827, 829, 840, 1050, 1109, 1125, 1209], "02211": 26, "summat": 26, "supersetequ": 26, "02287": 26, "supset": 26, "supseteq": 26, "supseteqq": 26, "supsetneq": 26, "0228b": 26, "supsetneqq": 26, "02acc": 26, "swarrow": 26, "therefor": [26, 154, 182, 190], "02234": 26, "thickapprox": 26, "thicksim": 26, "thinspac": 26, "02009": 26, "tildeequ": 26, "tildefullequ": 26, "02245": 26, "tildetild": 26, "toea": 26, "tosa": 26, "025b5": 26, "triangledown": 26, "025bf": 26, "triangleleft": 26, "025c3": 26, "trianglelefteq": 26, "triangleq": 26, "triangleright": 26, "025b9": 26, "trianglerighteq": 26, "tripledot": 26, "020db": 26, "combin": [26, 55, 76, 99, 101, 102, 136, 148, 193, 210, 241, 297, 449, 460, 465, 482, 490, 541, 550, 562, 576, 590, 642, 676, 715, 794, 840, 869, 928, 930, 932, 948, 970, 982, 1019, 1020, 1022, 1071, 1072, 1125, 1140, 1157, 1210, 1241, 1250], "twoheadleftarrow": 26, "twoheadrightarrow": 26, "ulcorn": 26, "0231c": 26, "unionplu": 26, "0228e": 26, "multiset": 26, "uparrow": 26, "uparrowdownarrow": 26, "updownarrow": 26, "upequilibrium": 26, "upharpoonleft": 26, "upharpoonright": 26, "upperleftarrow": 26, "upperrightarrow": 26, "upsilon": 26, "003c5": 26, "upte": 26, "upteearrow": 26, "021a5": 26, "upuparrow": 26, "urcorn": 26, "0231d": 26, "varepsilon": 26, "003b5": 26, "varkappa": 26, "003f0": 26, "kappa": 26, "varnoth": 26, "varphi": 26, "003c6": 26, "varpi": 26, "003d6": 26, "varpropto": 26, "varrho": 26, "003f1": 26, "rho": 26, "varsigma": 26, "003c2": 26, "sigma": [26, 281], "varsubsetneq": 26, "variant": [26, 105, 109, 233, 249, 262, 292, 293, 294, 353, 372, 381, 420, 436, 507, 573, 637, 790, 794, 796, 820, 824, 827, 839, 840, 865, 1258], "varsubsetneqq": 26, "varsupsetneq": 26, "varsupsetneqq": 26, "vartheta": 26, "003d1": 26, "theta": 26, "vartriangleleft": 26, "vartriangleright": 26, "vee": 26, "02228": 26, "vert": 26, "02016": 26, "verticalbar": 26, "verticaltild": 26, "02240": 26, "wreath": 26, "verythinspac": 26, "0200a": 26, "hair": 26, "wedg": 26, "02227": 26, "wp": 26, "02118": 26, "wr": 26, "zeetrf": 26, "02128": 26, "restructured text": 27, "cheat sheet": 27, "tabl": [27, 50, 133, 161, 189, 221, 227, 228, 245, 253, 258, 264, 265, 267, 268, 271, 272, 274, 277, 284, 289, 323, 420, 435, 449, 450, 454, 455, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 721, 744, 782, 791, 837, 839, 840, 927, 1138, 1148, 1180, 1182, 1203, 1204], "given": [27, 49, 51, 60, 72, 93, 97, 98, 101, 102, 105, 108, 109, 177, 190, 192, 195, 197, 201, 210, 258, 264, 274, 277, 281, 305, 313, 314, 316, 323, 351, 367, 373, 384, 430, 445, 488, 526, 567, 596, 599, 601, 620, 644, 712, 723, 725, 749, 838, 848, 858, 869, 887, 925, 930, 939, 941, 948, 970, 993, 1076, 1088, 1176, 1185, 1191, 1193, 1199, 1210, 1213, 1242, 1253], "restructur": [27, 528], "markup": 27, "guid": [27, 141, 164, 172, 195, 225, 250, 380, 417, 497, 517, 595, 747, 858, 873, 927], "author": [27, 193, 200, 277, 659, 860, 993, 1146, 1200], "overridden": [27, 443, 713, 781, 1224], "titl": [27, 28, 196, 259, 272, 277, 286, 289, 322, 323, 328, 1106, 1191, 1196], "favorit": [27, 221, 225, 228, 246, 250, 272, 275, 384, 887, 995, 1049, 1114, 1191, 1245], "__": [27, 206, 208, 216, 323, 795, 799, 1110], "ref": [27, 115, 165, 188, 293, 294, 742, 757, 801, 835], "role": [27, 193, 197, 500, 601, 986], "must": [27, 31, 32, 101, 102, 115, 121, 140, 166, 193, 197, 211, 217, 221, 222, 224, 225, 228, 232, 233, 246, 248, 250, 258, 264, 265, 272, 274, 275, 277, 298, 323, 340, 420, 437, 440, 454, 462, 480, 482, 497, 504, 506, 510, 516, 547, 552, 553, 566, 569, 570, 583, 584, 598, 601, 604, 605, 606, 618, 628, 654, 656, 658, 668, 669, 703, 716, 723, 725, 731, 738, 746, 747, 749, 750, 770, 794, 796, 808, 812, 840, 865, 871, 879, 885, 892, 914, 915, 932, 942, 950, 985, 996, 1002, 1005, 1015, 1016, 1019, 1024, 1026, 1031, 1036, 1045, 1047, 1049, 1059, 1065, 1068, 1084, 1089, 1090, 1107, 1112, 1118, 1131, 1132, 1134, 1135, 1137, 1140, 1170, 1191, 1225, 1236], "uniqu": [27, 251, 293, 294, 296, 373, 601, 620, 802, 814, 835, 837, 839, 840, 995, 1009, 1023, 1085, 1138, 1142, 1213], "across": [27, 31, 190, 197, 206, 258, 264, 274, 277, 307, 316, 340, 380, 416, 443, 463, 487, 513, 515, 519, 526, 542, 547, 566, 629, 805, 816, 838, 914, 915, 927, 945, 993, 995, 1015, 1023, 1059, 1121, 1132, 1200], "tree": [27, 30, 54, 91, 93, 115, 137, 141, 144, 168, 182, 184, 191, 193, 196, 201, 217, 218, 225, 249, 262, 265, 268, 272, 305, 333, 336, 348, 370, 373, 374, 375, 376, 377, 378, 473, 495, 500, 507, 514, 530, 537, 564, 599, 601, 697, 700, 840, 862, 865, 879, 889, 912, 914, 915, 917, 932, 948, 949, 956, 960, 962, 968, 978, 985, 994, 999, 1001, 1006, 1026, 1036, 1045, 1068, 1074, 1094, 1106, 1198, 1216, 1224, 1226], "_dummi": 27, "dummi": [27, 196, 404, 405, 867, 906, 1231], "One": [27, 31, 49, 50, 51, 67, 71, 73, 88, 97, 106, 114, 148, 190, 192, 201, 217, 228, 249, 267, 288, 289, 314, 367, 371, 373, 375, 384, 398, 409, 415, 424, 464, 477, 486, 489, 498, 500, 505, 510, 536, 542, 601, 620, 628, 643, 661, 666, 676, 681, 747, 781, 806, 816, 887, 892, 918, 920, 921, 924, 932, 948, 993, 994, 995, 1019, 1033, 1038, 1049, 1050, 1058, 1063, 1101, 1125, 1199, 1200, 1204, 1209, 1254, 1256], "a_footnot": 27, "footer": 27, "block": [27, 53, 89, 101, 102, 148, 152, 165, 189, 190, 191, 192, 229, 231, 249, 256, 258, 262, 264, 274, 277, 286, 289, 298, 319, 322, 340, 383, 398, 403, 407, 420, 422, 440, 459, 465, 466, 472, 476, 479, 483, 491, 492, 494, 496, 501, 502, 518, 549, 649, 652, 725, 744, 770, 782, 801, 812, 813, 814, 815, 816, 837, 838, 839, 840, 873, 889, 899, 903, 917, 918, 920, 921, 922, 924, 925, 970, 985, 994, 1018, 1025, 1026, 1033, 1038, 1042, 1043, 1048, 1050, 1058, 1059, 1062, 1064, 1087, 1089, 1115, 1118, 1125, 1128, 1191], "rubric": 27, "nbsphinx": 28, "capabl": [28, 69, 190, 191, 197, 811, 887, 913, 978, 986, 994, 1049, 1217, 1242, 1245], "render": [28, 195, 357, 367], "nice": [28, 53, 190, 206, 229, 251, 316, 499, 500, 515, 532, 588, 654, 742, 906, 913, 988, 994, 1047, 1111, 1148, 1196, 1198, 1207, 1213, 1227], "few": [28, 116, 190, 191, 192, 193, 196, 197, 221, 225, 258, 418, 488, 518, 759, 887, 926, 1065, 1089, 1093, 1225, 1249], "keep": [28, 31, 101, 102, 191, 192, 213, 225, 228, 232, 248, 281, 354, 384, 409, 432, 488, 494, 495, 514, 524, 723, 764, 879, 887, 892, 911, 927, 930, 987, 1031, 1032, 1041, 1078, 1081, 1101, 1118, 1196, 1197, 1241], "mind": [28, 121, 190, 191, 421, 808, 1118], "though": [28, 31, 33, 41, 59, 189, 190, 195, 197, 200, 201, 204, 205, 210, 217, 221, 225, 227, 228, 246, 249, 251, 262, 264, 265, 267, 272, 275, 289, 298, 307, 308, 311, 322, 343, 344, 373, 380, 384, 424, 434, 443, 455, 460, 482, 513, 519, 526, 542, 543, 544, 547, 556, 564, 566, 599, 600, 601, 620, 644, 646, 647, 651, 654, 656, 659, 660, 662, 663, 676, 677, 712, 719, 742, 750, 752, 755, 759, 764, 770, 787, 791, 796, 801, 802, 805, 812, 825, 827, 842, 846, 865, 879, 918, 926, 927, 930, 933, 967, 982, 986, 993, 994, 995, 1005, 1013, 1015, 1044, 1049, 1051, 1053, 1059, 1087, 1089, 1090, 1093, 1098, 1100, 1107, 1109, 1117, 1121, 1134, 1160, 1191, 1198, 1199, 1212, 1219, 1220, 1224, 1226, 1241, 1242, 1248], "toplevel": [28, 32, 100, 115, 133, 217, 250, 299, 376, 508, 509, 510, 511, 513, 514, 515, 516, 524, 528, 532, 540, 585, 860, 888, 913, 1087, 1233], "rest": [28, 197, 199, 208, 232, 242, 245, 249, 251, 269, 277, 309, 323, 341, 344, 393, 418, 428, 453, 534, 674, 675, 737, 794, 875, 927, 989, 1019, 1049, 1109, 1112, 1136, 1166, 1170, 1199, 1214, 1256, 1259], "begin": [28, 30, 31, 113, 117, 118, 119, 123, 125, 126, 132, 133, 170, 189, 190, 200, 227, 248, 249, 261, 264, 277, 281, 293, 294, 298, 315, 323, 344, 415, 420, 428, 440, 443, 464, 470, 487, 488, 490, 532, 547, 637, 647, 659, 672, 674, 676, 677, 678, 680, 681, 683, 684, 685, 687, 688, 689, 690, 694, 697, 708, 742, 757, 770, 773, 777, 784, 790, 791, 794, 808, 840, 913, 948, 972, 973, 981, 1007, 1015, 1031, 1094, 1118, 1140, 1191, 1225, 1245], "deeper": [28, 191, 221, 308, 311, 535, 1044], "trail": [28, 194, 277, 319, 323, 341, 389, 390], "underscor": [28, 437, 1090, 1097, 1110, 1120], "For": [28, 113, 115, 185, 189, 190, 194, 197, 200, 202, 203, 205, 210, 213, 218, 219, 221, 225, 241, 246, 249, 256, 259, 262, 267, 277, 280, 282, 286, 294, 296, 297, 298, 322, 328, 333, 344, 409, 415, 428, 429, 435, 450, 459, 466, 472, 476, 479, 481, 483, 492, 496, 501, 502, 520, 530, 531, 564, 620, 645, 652, 655, 668, 677, 697, 744, 782, 789, 792, 796, 801, 806, 837, 839, 840, 858, 873, 887, 914, 915, 925, 948, 985, 986, 994, 995, 996, 1005, 1009, 1038, 1059, 1066, 1067, 1068, 1076, 1077, 1081, 1114, 1115, 1125, 1132, 1140, 1164, 1169, 1191, 1194, 1196, 1198, 1240, 1241, 1243], "ipynb": [28, 208, 228, 238, 240, 277, 287, 308, 312, 318, 322, 328, 333, 336, 340, 344, 350, 351, 356, 362, 366, 1193, 1197], "labels_": [28, 210, 212, 367], "result": [28, 69, 116, 121, 132, 192, 201, 206, 208, 228, 232, 248, 258, 264, 267, 274, 277, 281, 290, 299, 319, 323, 427, 443, 478, 485, 487, 488, 494, 524, 544, 569, 573, 659, 687, 749, 755, 764, 792, 819, 858, 1005, 1053, 1082, 1094, 1109, 1123, 1129, 1141, 1199], "cluster": [28, 212, 367, 1193, 1198], "membership": [28, 210, 227, 228, 270, 556, 1122, 1139], "each": [28, 50, 67, 97, 101, 102, 121, 124, 148, 161, 190, 191, 192, 210, 228, 229, 241, 258, 261, 264, 274, 277, 281, 314, 316, 323, 379, 380, 383, 389, 395, 398, 403, 470, 495, 498, 500, 544, 552, 585, 599, 600, 655, 742, 817, 824, 838, 875, 883, 887, 914, 920, 921, 942, 946, 948, 993, 994, 995, 1031, 1035, 1039, 1047, 1082, 1094, 1097, 1102, 1108, 1169, 1190, 1196, 1198, 1199, 1200, 1215, 1219, 1249, 1253, 1262], "sequenc": [28, 97, 100, 105, 109, 209, 210, 212, 222, 228, 249, 251, 260, 262, 263, 264, 267, 270, 274, 277, 281, 299, 314, 316, 323, 329, 368, 419, 473, 544, 590, 605, 606, 607, 642, 686, 705, 709, 726, 739, 747, 794, 840, 1050, 1094, 1095, 1096, 1112, 1121, 1122, 1127, 1129, 1132, 1136, 1137, 1161, 1173, 1204, 1242], "bring": [28, 33, 113, 121, 133, 173, 190, 192, 200, 201, 221, 225, 228, 231, 267, 305, 308, 311, 314, 316, 340, 343, 406, 411, 412, 416, 620, 658, 697, 721, 733, 741, 883, 887, 899, 993, 994, 995, 1066, 1114, 1163, 1186, 1204, 1241, 1242, 1245, 1248, 1252], "11": [28, 50, 97, 115, 202, 210, 211, 216, 217, 221, 222, 227, 228, 229, 233, 234, 237, 239, 242, 245, 248, 251, 253, 254, 255, 258, 263, 264, 265, 269, 271, 274, 277, 281, 284, 287, 290, 293, 294, 299, 303, 306, 309, 313, 319, 323, 329, 337, 340, 341, 352, 353, 357, 363, 367, 372, 378, 380, 390, 391, 392, 393, 394, 401, 404, 411, 412, 415, 418, 432, 498, 500, 508, 546, 599, 627, 636, 637, 643, 645, 646, 648, 652, 654, 660, 662, 672, 677, 679, 684, 697, 698, 699, 702, 715, 740, 744, 747, 750, 751, 756, 757, 758, 759, 769, 781, 782, 783, 784, 785, 786, 787, 789, 792, 793, 796, 798, 801, 802, 804, 805, 807, 814, 815, 816, 819, 820, 822, 824, 837, 838, 840, 841, 912, 926, 970, 980, 1036, 1041, 1065, 1066, 1067, 1116, 1122, 1127, 1146, 1180, 1182, 1186, 1188, 1193, 1195, 1196, 1207, 1224, 1236, 1240, 1241, 1243, 1262], "12": [28, 50, 56, 97, 113, 115, 170, 173, 195, 200, 201, 202, 210, 211, 215, 222, 227, 233, 234, 237, 239, 242, 245, 248, 249, 253, 254, 255, 258, 261, 262, 266, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 305, 306, 307, 309, 313, 319, 323, 329, 334, 337, 340, 341, 343, 345, 352, 363, 367, 392, 393, 397, 411, 412, 415, 482, 506, 509, 534, 620, 753, 759, 792, 838, 918, 930, 933, 948, 970, 973, 980, 988, 993, 995, 997, 1021, 1029, 1049, 1065, 1078, 1080, 1081, 1087, 1089, 1090, 1093, 1102, 1121, 1132, 1193, 1195, 1196, 1212, 1213, 1219, 1230, 1262], "bigplan": [28, 212, 1193], "686": [28, 210, 264, 367, 1080], "unknown": [28, 307, 415, 506, 824, 843, 994, 1103], "target": [28, 50, 99, 148, 191, 193, 201, 241, 250, 332, 348, 374, 375, 376, 377, 378, 379, 400, 488, 491, 507, 513, 516, 517, 523, 524, 525, 528, 532, 533, 534, 539, 553, 656, 840, 860, 862, 867, 887, 950, 993, 1016, 1043, 1067, 1068, 1071, 1072, 1078, 1080, 1087, 1098, 1100, 1198, 1226, 1246, 1249, 1257], "cmd": [28, 196, 881, 906, 1226], "color": [28, 195, 212, 367, 970, 1193, 1219], "tmp": [28, 141, 170, 173, 191, 193, 196, 232, 245, 248, 264, 269, 277, 281, 284, 287, 289, 294, 296, 299, 302, 309, 319, 323, 329, 345, 351, 357, 363, 367, 429, 471, 494, 507, 520, 526, 532, 537, 538, 601, 602, 799, 865, 887, 909, 913, 918, 928, 932, 933, 946, 947, 948, 950, 952, 953, 955, 957, 960, 967, 970, 971, 977, 998, 1005, 1016, 1017, 1019, 1020, 1022, 1031, 1049, 1055, 1068, 1089, 1140, 1147, 1203, 1225, 1226], "craft": [29, 34, 35, 39, 41, 43, 44, 185, 275, 317, 318, 372, 504, 569, 806, 840, 841], "tar": [30, 48, 54, 100, 115, 141, 166, 179, 188, 201, 229, 231, 295, 304, 305, 325, 326, 369, 370, 500, 840, 887, 909, 910, 912, 917, 985, 1016, 1074, 1076, 1077, 1078, 1080, 1081, 1087, 1146, 1226, 1250], "xz": [30, 48, 54, 141, 188, 193, 201, 305, 493, 1016, 1074, 1078, 1080, 1081], "push": [30, 68, 170, 194, 196, 207, 250, 265, 275, 332, 348, 374, 377, 404, 465, 516, 517, 523, 524, 533, 542, 566, 675, 678, 814, 840, 887, 1033, 1051, 1166, 1170, 1224], "cmakelist": [30, 32, 113, 115, 120, 133, 215, 216, 217, 218, 219, 250, 267, 373, 375, 376, 378, 380, 508, 509, 510, 511, 513, 514, 516, 524, 526, 528, 532, 534, 535, 537, 538, 539, 540, 585, 598, 599, 600, 601, 602, 621, 624, 627, 628, 630, 633, 636, 639, 733, 1054, 1057, 1061, 1066, 1067, 1230, 1233, 1235], "src": [30, 166, 190, 191, 193, 250, 264, 294, 296, 302, 404, 432, 444, 494, 513, 528, 530, 531, 540, 549, 585, 588, 598, 599, 600, 601, 603, 661, 678, 800, 801, 913, 932, 977, 1140, 1146, 1224], "talk": [30, 33, 38, 52, 54, 55, 56, 75, 115, 116, 132, 190, 194, 209, 213, 221, 225, 228, 233, 265, 267, 268, 344, 400, 504, 505, 787, 796, 887, 906, 986, 991, 993, 995, 1002, 1236], "memori": [30, 31, 37, 43, 64, 69, 71, 88, 100, 101, 102, 152, 185, 187, 189, 190, 191, 193, 195, 202, 205, 209, 210, 211, 214, 216, 221, 227, 228, 236, 240, 241, 245, 258, 264, 267, 274, 277, 292, 314, 316, 318, 323, 340, 343, 368, 372, 380, 416, 418, 432, 438, 460, 461, 467, 480, 482, 483, 485, 491, 492, 494, 496, 500, 501, 502, 549, 564, 566, 568, 569, 570, 572, 574, 575, 582, 583, 590, 607, 609, 610, 634, 642, 643, 648, 649, 658, 676, 677, 678, 694, 713, 723, 739, 742, 744, 753, 780, 782, 787, 794, 799, 801, 802, 803, 824, 837, 838, 839, 840, 849, 854, 857, 859, 864, 868, 878, 882, 883, 884, 887, 889, 891, 892, 896, 899, 905, 908, 918, 924, 926, 932, 985, 1002, 1011, 1031, 1032, 1033, 1035, 1036, 1049, 1050, 1083, 1087, 1100, 1101, 1114, 1121, 1203, 1238, 1239, 1243, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255], "load": [30, 31, 41, 44, 50, 66, 79, 189, 200, 201, 207, 208, 212, 228, 236, 237, 253, 254, 258, 264, 274, 277, 281, 284, 290, 299, 316, 317, 318, 334, 337, 339, 340, 357, 367, 373, 480, 500, 537, 815, 839, 840, 843, 844, 846, 847, 849, 852, 854, 855, 857, 862, 864, 867, 868, 872, 878, 881, 883, 884, 887, 889, 891, 896, 899, 902, 905, 908, 924, 985, 994, 995, 1026, 1036, 1042, 1082, 1083, 1191, 1209, 1249, 1251, 1254], "store": [30, 45, 50, 66, 79, 97, 120, 124, 188, 189, 191, 207, 209, 217, 218, 248, 251, 258, 316, 317, 318, 339, 340, 373, 428, 480, 519, 526, 544, 726, 770, 784, 787, 794, 815, 823, 825, 829, 839, 840, 853, 887, 927, 940, 985, 1002, 1026, 1036, 1042, 1066, 1085, 1089, 1090, 1094, 1138, 1169, 1203, 1219, 1254], "search": [30, 39, 41, 97, 151, 173, 187, 190, 210, 213, 219, 221, 227, 228, 237, 248, 249, 251, 254, 258, 261, 262, 264, 267, 268, 269, 272, 274, 277, 290, 299, 302, 306, 309, 314, 319, 323, 329, 331, 347, 351, 357, 363, 464, 491, 494, 506, 590, 601, 603, 607, 642, 686, 691, 705, 709, 725, 727, 739, 840, 865, 930, 948, 981, 1044, 1066, 1080, 1097, 1126, 1197, 1224, 1256], "payload": [30, 848, 875, 987, 989], "primari": [30, 190, 201, 221, 307, 308, 311, 498, 885, 914, 915, 923, 925, 1169], "insert": [30, 50, 53, 100, 113, 186, 189, 208, 225, 227, 232, 262, 264, 267, 269, 271, 277, 281, 284, 302, 323, 329, 341, 357, 367, 398, 461, 478, 482, 498, 545, 551, 573, 579, 590, 607, 608, 609, 620, 637, 642, 654, 677, 678, 691, 701, 702, 727, 735, 736, 737, 739, 746, 753, 755, 770, 791, 836, 838, 840, 865, 871, 881, 883, 887, 948, 993, 1006, 1039, 1049, 1122, 1137, 1138, 1147, 1203, 1224], "const": [30, 46, 61, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 120, 216, 251, 267, 353, 372, 373, 380, 432, 440, 444, 462, 464, 470, 478, 490, 492, 494, 496, 501, 502, 507, 528, 530, 534, 543, 544, 545, 546, 547, 549, 551, 566, 567, 573, 574, 575, 578, 579, 580, 582, 583, 584, 590, 594, 598, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 618, 619, 620, 628, 633, 635, 637, 642, 644, 645, 646, 647, 649, 651, 652, 657, 658, 659, 660, 661, 662, 663, 666, 669, 676, 680, 682, 683, 684, 685, 698, 701, 702, 712, 715, 716, 719, 721, 723, 725, 727, 728, 731, 732, 734, 735, 736, 737, 738, 739, 746, 748, 749, 750, 752, 753, 754, 755, 764, 765, 766, 767, 768, 770, 772, 773, 776, 777, 778, 779, 780, 784, 785, 786, 787, 789, 790, 792, 794, 800, 801, 802, 803, 804, 816, 825, 829, 831, 834, 835, 836, 838, 840, 843, 846, 851, 867, 869, 873, 881, 883, 897, 901, 907, 1007, 1015, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1034, 1036, 1038, 1046, 1052, 1055, 1058, 1059, 1063, 1084, 1102, 1179, 1202, 1236, 1239, 1240], "care": [30, 34, 36, 71, 133, 153, 154, 189, 190, 192, 195, 197, 221, 229, 261, 389, 420, 443, 452, 454, 470, 494, 495, 540, 569, 570, 645, 658, 676, 719, 725, 791, 792, 796, 805, 818, 829, 830, 834, 865, 877, 879, 887, 892, 913, 914, 915, 994, 1002, 1006, 1018, 1033, 1041, 1067, 1090, 1114, 1118, 1130, 1137, 1140, 1141, 1148, 1171, 1195, 1203, 1216, 1226], "dump": [30, 190, 208, 237, 253, 254, 264, 277, 281, 284, 290, 299, 334, 337, 340, 549, 568, 569, 652, 656, 780, 800, 926, 1062, 1063], "db": [30, 38, 200, 225, 250, 251, 252, 256, 262, 275, 290, 513, 516, 544, 545, 551, 573, 579, 734, 735, 736, 737, 738, 806, 1147], "start": [30, 53, 101, 102, 120, 121, 138, 141, 148, 173, 186, 189, 190, 191, 192, 195, 200, 201, 208, 213, 218, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 240, 241, 243, 246, 250, 251, 256, 262, 271, 277, 278, 287, 289, 302, 305, 307, 309, 311, 314, 316, 318, 323, 326, 341, 343, 344, 351, 354, 357, 363, 367, 370, 371, 381, 384, 401, 415, 417, 424, 427, 428, 437, 440, 454, 477, 498, 499, 518, 532, 537, 544, 547, 554, 620, 631, 637, 702, 713, 718, 721, 725, 742, 794, 817, 838, 848, 887, 900, 914, 915, 919, 920, 921, 924, 926, 927, 948, 949, 961, 970, 972, 986, 1012, 1013, 1022, 1025, 1031, 1034, 1035, 1039, 1043, 1044, 1047, 1049, 1052, 1058, 1062, 1065, 1080, 1085, 1092, 1097, 1098, 1100, 1101, 1109, 1119, 1120, 1126, 1136, 1153, 1160, 1161, 1179, 1198, 1200, 1208, 1209, 1213, 1216, 1224, 1232, 1241, 1242, 1252, 1254], "pull": [30, 32, 38, 50, 53, 68, 115, 116, 132, 194, 241, 250, 251, 265, 371, 373, 383, 406, 506, 513, 514, 516, 542, 658, 742, 860, 887, 1094, 1097, 1215], "paramet": [30, 46, 50, 101, 102, 103, 104, 105, 106, 107, 110, 114, 120, 128, 168, 189, 192, 197, 206, 209, 216, 217, 221, 226, 227, 228, 230, 232, 240, 241, 245, 248, 249, 250, 251, 258, 262, 264, 267, 268, 270, 273, 274, 277, 284, 287, 308, 309, 311, 313, 358, 375, 380, 384, 389, 398, 419, 428, 430, 434, 445, 449, 464, 465, 470, 472, 473, 476, 479, 483, 484, 490, 492, 496, 501, 502, 505, 513, 534, 537, 588, 598, 604, 620, 634, 644, 646, 649, 653, 655, 656, 659, 663, 668, 669, 723, 725, 730, 744, 747, 754, 770, 782, 784, 789, 802, 814, 824, 837, 839, 840, 845, 846, 853, 867, 890, 895, 900, 903, 906, 907, 928, 930, 994, 1009, 1034, 1044, 1059, 1067, 1081, 1085, 1090, 1104, 1107, 1112, 1119, 1135, 1142, 1148, 1158, 1164, 1166, 1170, 1176, 1185, 1196, 1199, 1202, 1209, 1212, 1213, 1215, 1238, 1244], "std": [30, 38, 46, 97, 99, 100, 101, 102, 105, 109, 111, 112, 115, 120, 121, 124, 144, 151, 201, 216, 217, 244, 292, 305, 314, 316, 379, 381, 507, 508, 511, 513, 535, 542, 545, 547, 549, 551, 556, 563, 566, 568, 569, 570, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 588, 590, 591, 596, 598, 600, 601, 602, 604, 605, 606, 607, 618, 620, 628, 638, 642, 645, 646, 648, 653, 654, 658, 666, 668, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 687, 688, 689, 693, 694, 696, 699, 700, 701, 702, 705, 706, 709, 710, 712, 713, 716, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 739, 744, 746, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 784, 786, 787, 789, 794, 797, 800, 804, 807, 809, 815, 820, 823, 825, 827, 834, 836, 837, 839, 840, 993, 1027, 1030, 1031, 1036, 1044, 1046, 1058, 1062, 1196, 1231, 1236, 1241], "entri": [30, 121, 161, 191, 192, 196, 253, 264, 375, 419, 531, 555, 697, 699, 719, 875, 913, 927, 931, 932, 933, 970, 977, 1009, 1015, 1029, 1083, 1090, 1138, 1202, 1233], "o_creat": [30, 140, 840, 985, 1015, 1016, 1020, 1024, 1026, 1045, 1058], "o_trunc": [30, 36, 1015], "o_wronli": [30, 140, 840, 985, 1015, 1016, 1018, 1019, 1020, 1024, 1025, 1026, 1027, 1030, 1045, 1058], "0666": [30, 947, 1019, 1020, 1058], "assert": [30, 34, 225, 249, 262, 274, 277, 291, 307, 340, 342, 506, 549, 690, 732, 735, 737, 743, 816, 1013, 1025, 1027, 1030, 1058, 1062, 1063, 1102, 1179, 1186, 1187, 1188, 1224, 1230, 1231, 1233, 1238], "ing": [30, 1021], "well": [30, 141, 166, 190, 192, 195, 196, 197, 201, 213, 217, 225, 248, 250, 277, 313, 315, 323, 331, 340, 347, 384, 443, 465, 494, 504, 518, 524, 526, 552, 592, 598, 601, 602, 625, 645, 649, 659, 673, 742, 749, 756, 779, 792, 802, 806, 912, 932, 948, 982, 989, 994, 995, 1006, 1019, 1021, 1041, 1065, 1067, 1081, 1089, 1090, 1093, 1097, 1100, 1104, 1107, 1110, 1121, 1125, 1135, 1194, 1196, 1204, 1220, 1256], "mode": [30, 92, 115, 138, 193, 206, 241, 249, 258, 261, 262, 264, 274, 277, 281, 284, 302, 305, 309, 323, 326, 340, 357, 369, 370, 494, 528, 590, 642, 815, 839, 840, 846, 879, 885, 913, 914, 915, 917, 920, 921, 922, 925, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 985, 988, 995, 1009, 1014, 1015, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1058, 1059, 1115, 1117, 1219], "binaryus": 30, "hton": [30, 1012], "arpa": [30, 1012], "inet": [30, 206, 1012], "again": [30, 53, 90, 115, 137, 168, 189, 190, 192, 195, 197, 201, 203, 205, 217, 221, 225, 227, 228, 229, 241, 250, 275, 280, 289, 295, 298, 304, 305, 322, 325, 328, 344, 369, 380, 398, 399, 400, 403, 404, 409, 416, 465, 506, 513, 515, 548, 552, 562, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 637, 642, 644, 646, 658, 659, 663, 673, 753, 764, 806, 814, 815, 835, 838, 839, 840, 907, 910, 914, 915, 916, 917, 920, 921, 922, 929, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 979, 985, 995, 1002, 1005, 1008, 1010, 1012, 1013, 1014, 1016, 1021, 1024, 1026, 1027, 1038, 1042, 1044, 1045, 1048, 1050, 1059, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1087, 1107, 1112, 1130, 1135, 1140, 1191, 1209, 1212, 1241, 1248, 1250], "od": [30, 277], "hardwir": [30, 50, 354, 848, 1011, 1107], "enter": [30, 101, 102, 124, 148, 222, 229, 258, 263, 264, 274, 277, 286, 287, 289, 290, 307, 340, 341, 383, 398, 403, 422, 637, 659, 718, 725, 753, 759, 770, 802, 865, 887, 903, 920, 921, 944, 1049, 1050, 1125, 1178], "666": [30, 38, 98, 105, 111, 121, 123, 208, 209, 222, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 389, 390, 391, 393, 394, 428, 511, 514, 547, 602, 603, 604, 605, 606, 610, 611, 612, 613, 615, 616, 618, 625, 637, 644, 648, 656, 658, 681, 682, 683, 684, 685, 687, 690, 698, 701, 721, 726, 755, 757, 764, 766, 767, 768, 772, 792, 796, 799, 801, 806, 809, 818, 823, 825, 827, 834, 835, 836, 845, 846, 1085, 1089, 1131, 1132, 1135, 1236], "joerg": [30, 38, 170, 208, 222, 223, 225, 226, 228, 230, 237, 241, 245, 248, 254, 261, 264, 267, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 316, 318, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 392, 395, 489, 510, 525, 544, 551, 585, 601, 603, 619, 656, 690, 702, 721, 725, 732, 733, 734, 735, 737, 754, 914, 915, 923, 925, 930, 944, 960, 974, 980, 1005, 1044, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1119, 1141, 1146, 1169, 1186, 1199, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "huber": [30, 271, 277, 1199], "caro": [30, 261, 271, 274, 281, 284, 287, 290, 299, 302, 309, 323, 341, 351, 367, 544, 551, 603, 619, 690, 702, 735, 737, 1106, 1108, 1128, 1180, 1182, 1186, 1188, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "johanna": [30, 261, 271, 274, 281, 284, 302, 309, 323, 341, 351, 367, 544, 603, 619, 690, 702, 1128, 1180, 1182, 1186, 1188, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "bodi": [30, 38, 43, 101, 102, 196, 372, 419, 420, 422, 426, 455, 465, 494, 522, 604, 637, 646, 647, 651, 723, 742, 743, 746, 805, 1094, 1225], "compil": [30, 31, 94, 95, 99, 101, 102, 105, 108, 115, 137, 138, 139, 148, 191, 192, 201, 209, 216, 217, 218, 237, 251, 254, 267, 274, 290, 299, 302, 305, 306, 314, 323, 329, 331, 347, 351, 354, 357, 363, 373, 374, 377, 380, 406, 417, 430, 439, 440, 449, 452, 454, 461, 462, 471, 473, 480, 483, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 506, 509, 514, 516, 528, 531, 538, 540, 542, 548, 562, 564, 569, 570, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 628, 634, 637, 642, 644, 647, 649, 653, 654, 658, 669, 697, 716, 723, 729, 731, 742, 743, 744, 745, 747, 749, 750, 752, 753, 755, 757, 759, 764, 767, 770, 779, 780, 782, 788, 791, 792, 794, 796, 800, 801, 837, 839, 840, 855, 856, 871, 985, 993, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1090, 1115, 1120, 1132, 1134, 1231, 1233, 1238, 1239, 1241, 1243, 1252, 1256], "still": [30, 42, 48, 144, 180, 186, 189, 190, 191, 192, 200, 201, 209, 210, 211, 251, 261, 267, 305, 307, 379, 380, 389, 409, 416, 417, 468, 480, 506, 509, 514, 518, 535, 588, 610, 631, 634, 652, 653, 673, 679, 712, 728, 753, 770, 787, 791, 796, 800, 801, 803, 804, 805, 850, 855, 887, 890, 931, 945, 967, 993, 994, 995, 1047, 1049, 1051, 1062, 1085, 1093, 1096, 1102, 1115, 1118, 1121, 1146, 1182, 1213, 1233, 1238, 1252, 1260, 1263], "funni": [30, 32, 38, 91, 115, 137, 168, 221, 305, 370, 547, 840, 917, 956, 962, 968, 985, 1066], "overflow": [30, 32, 38, 192, 232, 242, 258, 261, 262, 264, 267, 268, 274, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 443, 445, 481, 490, 925], "temp": [30, 32, 277, 407, 800, 801, 802], "got": [30, 33, 190, 200, 251, 323, 345, 357, 379, 380, 464, 756, 1015, 1260], "overwritten": [30, 35, 41, 43, 44, 678, 840, 1016, 1097], "suspect": [30, 154, 192, 194], "inmem": 30, "loos": [30, 31, 225, 241, 418, 443, 490, 877], "foolishli": 30, "find": [30, 32, 35, 36, 41, 115, 146, 166, 189, 190, 191, 192, 196, 201, 205, 217, 218, 219, 229, 231, 242, 245, 249, 251, 254, 258, 262, 264, 267, 269, 271, 274, 277, 281, 284, 287, 290, 295, 302, 304, 307, 309, 314, 316, 323, 325, 326, 329, 331, 341, 343, 345, 347, 351, 353, 357, 363, 367, 369, 370, 375, 376, 378, 383, 392, 398, 403, 485, 491, 498, 513, 516, 517, 519, 523, 533, 540, 545, 552, 573, 578, 579, 582, 583, 584, 585, 590, 607, 608, 637, 642, 645, 658, 660, 662, 663, 684, 686, 697, 700, 702, 705, 709, 725, 735, 737, 739, 742, 785, 789, 836, 840, 853, 892, 913, 914, 915, 917, 923, 927, 928, 930, 931, 932, 934, 948, 976, 979, 982, 985, 994, 995, 1006, 1036, 1065, 1068, 1083, 1117, 1128, 1136, 1197, 1234, 1245, 1247, 1249, 1250, 1256, 1261], "main": [30, 38, 50, 53, 54, 98, 105, 111, 112, 124, 136, 137, 141, 144, 166, 192, 195, 196, 201, 228, 250, 262, 274, 275, 277, 294, 305, 313, 316, 318, 331, 333, 336, 340, 347, 348, 373, 374, 375, 376, 377, 378, 379, 398, 417, 419, 420, 422, 426, 428, 430, 431, 445, 460, 461, 462, 464, 468, 480, 487, 491, 494, 495, 498, 500, 506, 507, 517, 525, 534, 535, 538, 549, 563, 568, 569, 570, 585, 586, 588, 596, 598, 600, 601, 620, 628, 631, 634, 648, 652, 653, 654, 656, 658, 659, 661, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 726, 731, 732, 733, 734, 735, 736, 737, 738, 742, 747, 757, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 784, 786, 787, 789, 792, 794, 800, 801, 803, 804, 805, 806, 809, 814, 816, 819, 838, 848, 855, 856, 858, 887, 925, 927, 945, 993, 995, 996, 1009, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1027, 1030, 1031, 1033, 1035, 1039, 1044, 1046, 1049, 1050, 1055, 1058, 1059, 1062, 1065, 1068, 1074, 1078, 1084, 1098, 1101, 1116, 1181, 1183, 1231, 1236, 1249], "chang": [30, 33, 53, 68, 71, 115, 117, 124, 131, 132, 163, 166, 188, 189, 192, 194, 195, 196, 197, 200, 201, 212, 225, 241, 250, 281, 289, 378, 405, 443, 480, 482, 486, 489, 490, 494, 504, 534, 542, 587, 593, 598, 599, 601, 602, 653, 654, 677, 735, 789, 814, 821, 838, 860, 865, 913, 923, 925, 927, 945, 954, 957, 972, 986, 988, 993, 994, 1005, 1009, 1030, 1062, 1065, 1081, 1097, 1121, 1130, 1170, 1181, 1183, 1186, 1209, 1213, 1227, 1241], "errorhandl": 30, "just": [30, 34, 50, 55, 60, 75, 99, 122, 123, 128, 141, 182, 189, 190, 191, 192, 193, 194, 196, 197, 201, 204, 211, 213, 217, 221, 228, 251, 262, 265, 290, 331, 340, 347, 371, 373, 386, 426, 445, 470, 473, 482, 500, 504, 514, 518, 522, 524, 525, 531, 535, 544, 585, 588, 598, 600, 601, 602, 625, 644, 645, 646, 652, 655, 656, 659, 678, 706, 713, 719, 723, 728, 742, 749, 753, 755, 756, 770, 785, 788, 802, 804, 806, 819, 823, 838, 845, 850, 858, 860, 867, 871, 877, 879, 887, 903, 927, 948, 951, 952, 982, 986, 993, 994, 995, 1010, 1012, 1013, 1019, 1020, 1022, 1033, 1034, 1044, 1051, 1059, 1078, 1082, 1085, 1088, 1089, 1092, 1094, 1112, 1119, 1120, 1121, 1128, 1132, 1140, 1141, 1196, 1197, 1204, 1209, 1210, 1214, 1215, 1220, 1224, 1236, 1245, 1256], "silent": [30, 271, 281, 746, 993], "truncat": [30, 277, 323, 420, 441, 563, 930, 1015, 1140], "faschingb": 30, "echo": [30, 141, 191, 241, 277, 305, 384, 526, 601, 726, 860, 869, 887, 914, 915, 918, 919, 928, 932, 942, 951, 954, 958, 967, 986, 988, 993, 994, 995, 996, 1016, 1018, 1027, 1029, 1030, 1031, 1044, 1047, 1053, 1062, 1226], "success": [30, 218, 258, 264, 274, 277, 481, 513, 516, 725, 759, 812, 865, 869, 960, 1157], "failur": [30, 31, 166, 258, 264, 274, 277, 289, 294, 323, 383, 490, 500, 506, 532, 598, 602, 725, 1224, 1225, 1232, 1233, 1236], "renam": [30, 38, 45, 50, 90, 113, 115, 137, 168, 176, 248, 295, 304, 305, 325, 326, 369, 370, 637, 789, 840, 855, 856, 917, 955, 968, 985, 1084, 1203], "most": [31, 32, 45, 49, 51, 78, 111, 113, 189, 190, 192, 193, 196, 201, 211, 213, 219, 221, 225, 227, 249, 258, 261, 264, 265, 274, 275, 277, 281, 287, 307, 309, 323, 343, 344, 345, 380, 383, 418, 426, 455, 458, 465, 480, 482, 488, 493, 494, 498, 499, 513, 518, 535, 543, 556, 599, 658, 659, 697, 750, 794, 799, 802, 808, 824, 865, 873, 887, 892, 912, 914, 915, 918, 926, 950, 982, 986, 995, 1007, 1015, 1021, 1036, 1051, 1059, 1062, 1063, 1065, 1087, 1088, 1089, 1094, 1101, 1102, 1103, 1109, 1110, 1118, 1120, 1121, 1122, 1125, 1128, 1131, 1132, 1136, 1138, 1141, 1142, 1148, 1191, 1200, 1204, 1208, 1212, 1213, 1220, 1224, 1225, 1231, 1242, 1249, 1256, 1264], "somebodi": [31, 197, 217, 251, 432, 489, 516, 628, 652, 703, 764, 770, 781, 812, 877, 895, 1053], "concis": [31, 189, 221, 225, 275, 344, 399, 400, 535, 887, 1191], "longer": [31, 524, 526, 1053, 1115, 1241], "necessari": [31, 48, 132, 191, 197, 201, 209, 218, 232, 248, 251, 308, 311, 343, 344, 422, 432, 464, 504, 506, 516, 542, 588, 647, 651, 718, 745, 746, 780, 790, 802, 814, 883, 887, 923, 995, 996, 1011, 1051, 1062, 1083, 1110, 1117, 1121, 1146, 1203, 1224], "gosh": [31, 443, 488, 490, 703, 787, 1041, 1087, 1088, 1094, 1121], "hungarian": [31, 484], "notat": [31, 216, 256, 272, 277, 282, 323, 484, 817, 994, 1103], "userdb": [31, 35, 36, 39, 41, 42, 44, 45, 251, 253, 267, 275, 322, 333, 336, 727, 735, 736, 737, 739, 840, 1180, 1181, 1182, 1183, 1188], "bolt": [31, 251], "onto": [31, 49, 51, 113, 121, 124, 200, 210, 251, 267, 340, 566, 648, 724, 739, 802, 840, 887, 974, 986, 994, 1013, 1047, 1070, 1078], "unclear": [31, 163, 371, 591, 1063], "semant": [31, 37, 72, 190, 213, 293, 294, 296, 314, 353, 372, 380, 381, 475, 489, 490, 564, 645, 697, 703, 743, 750, 782, 798, 801, 802, 803, 804, 807, 815, 837, 839, 840, 846, 851, 879, 1062, 1063, 1121, 1200, 1241], "backingstor": [31, 41, 44, 840], "mangl": [31, 248, 249, 262, 279, 1115], "prefix": [31, 48, 54, 201, 258, 262, 264, 274, 277, 323, 391, 522, 655, 685, 742, 887, 1078, 1080, 1087, 1109, 1110, 1135, 1142, 1226], "m_": 31, "enough": [31, 193, 197, 213, 221, 271, 281, 314, 323, 371, 409, 432, 543, 718, 993, 1006, 1036, 1066, 1089, 1106, 1114, 1135, 1204, 1209, 1216, 1225, 1256, 1264], "take": [31, 36, 77, 93, 101, 102, 116, 121, 123, 153, 154, 186, 188, 189, 190, 191, 194, 195, 196, 197, 200, 206, 209, 210, 212, 217, 221, 222, 227, 228, 229, 249, 262, 267, 269, 277, 281, 287, 311, 350, 379, 380, 383, 384, 389, 398, 427, 464, 467, 484, 486, 493, 495, 499, 500, 504, 505, 519, 522, 534, 542, 543, 566, 567, 569, 570, 588, 598, 601, 614, 620, 634, 646, 653, 656, 659, 661, 699, 723, 725, 742, 747, 754, 755, 764, 792, 794, 800, 804, 814, 829, 830, 850, 877, 887, 913, 914, 915, 993, 1023, 1053, 1078, 1084, 1088, 1092, 1114, 1130, 1131, 1148, 1155, 1158, 1160, 1164, 1165, 1166, 1169, 1170, 1171, 1173, 1175, 1185, 1198, 1199, 1204, 1209, 1219, 1226], "dogmat": [31, 267, 416, 1204], "switch": [31, 33, 42, 46, 49, 51, 101, 102, 110, 113, 115, 116, 117, 118, 119, 123, 124, 125, 128, 148, 166, 191, 195, 197, 208, 209, 250, 258, 264, 274, 275, 277, 354, 384, 385, 387, 404, 407, 410, 439, 453, 457, 459, 466, 472, 476, 479, 481, 483, 492, 496, 499, 501, 502, 506, 528, 530, 535, 542, 556, 590, 591, 592, 642, 702, 743, 744, 782, 825, 827, 837, 839, 840, 867, 885, 892, 901, 904, 906, 920, 921, 925, 986, 989, 1049, 1083, 1238, 1243], "bool": [31, 38, 41, 43, 44, 110, 126, 132, 232, 239, 261, 264, 267, 269, 271, 274, 277, 284, 287, 302, 306, 307, 309, 313, 323, 351, 357, 508, 510, 524, 603, 604, 608, 610, 615, 644, 646, 659, 660, 661, 662, 663, 681, 684, 690, 699, 747, 759, 760, 761, 762, 770, 773, 777, 784, 814, 816, 819, 840, 900, 907, 1049, 1055, 1062, 1121, 1148, 1210, 1215], "wear": [31, 191], "incorrect": [31, 258, 264, 274, 277, 281, 443, 462, 522, 1216], "metaphor": 31, "But": [31, 140, 190, 191, 192, 195, 203, 205, 241, 250, 331, 332, 340, 347, 348, 376, 380, 416, 426, 432, 461, 464, 470, 473, 486, 488, 494, 504, 513, 524, 643, 644, 652, 656, 657, 658, 676, 694, 712, 713, 752, 755, 791, 800, 804, 806, 824, 839, 840, 869, 871, 887, 897, 914, 915, 970, 985, 994, 995, 1002, 1016, 1024, 1026, 1033, 1041, 1045, 1068, 1083, 1085, 1106, 1109, 1115, 1196, 1199, 1210, 1243, 1257, 1258], "support": [31, 69, 121, 191, 193, 197, 201, 209, 213, 225, 237, 239, 258, 261, 264, 269, 271, 274, 277, 281, 284, 299, 302, 309, 341, 351, 357, 363, 394, 462, 486, 500, 506, 524, 643, 644, 646, 750, 802, 806, 823, 834, 838, 843, 879, 970, 993, 994, 995, 1005, 1059, 1065, 1094, 1102, 1109, 1115, 1132, 1146, 1196, 1198, 1213, 1231, 1245, 1248, 1250, 1255], "copy_process": 31, "law": [31, 241, 395, 437, 482, 1089, 1215], "tdd": [31, 115, 220, 225, 235, 275, 317, 333, 336, 340, 354, 1224], "until": [31, 43, 88, 89, 90, 93, 96, 101, 102, 115, 120, 128, 132, 136, 141, 148, 151, 166, 180, 182, 190, 192, 194, 196, 240, 249, 261, 280, 298, 318, 344, 373, 454, 460, 485, 488, 602, 661, 725, 726, 770, 776, 814, 816, 855, 875, 885, 895, 897, 903, 920, 921, 925, 932, 948, 960, 967, 1010, 1011, 1012, 1013, 1038, 1052, 1059, 1063, 1093, 1094, 1115, 1123, 1125, 1191], "fail": [31, 32, 140, 141, 166, 173, 190, 192, 200, 201, 216, 221, 251, 277, 294, 326, 383, 409, 513, 516, 524, 532, 534, 544, 549, 551, 598, 721, 729, 750, 752, 759, 764, 838, 840, 865, 887, 967, 985, 995, 1016, 1021, 1024, 1026, 1043, 1044, 1045, 1062, 1083, 1087, 1089, 1098, 1140, 1157, 1213, 1225, 1226, 1230, 1232, 1234], "suffici": [31, 117, 209, 221, 384, 651, 678, 719, 723, 735, 743, 824, 860, 970, 1063, 1112, 1114, 1142, 1225], "pass": [31, 32, 36, 43, 45, 46, 50, 101, 102, 103, 104, 106, 107, 110, 114, 166, 209, 217, 221, 226, 227, 228, 230, 237, 248, 250, 254, 258, 264, 267, 269, 271, 274, 277, 281, 284, 287, 289, 290, 294, 299, 302, 307, 308, 311, 319, 323, 341, 363, 367, 383, 409, 428, 430, 432, 443, 464, 468, 471, 473, 490, 518, 519, 528, 532, 542, 547, 549, 588, 598, 599, 600, 601, 603, 604, 644, 654, 660, 661, 662, 663, 672, 723, 725, 730, 754, 784, 792, 797, 801, 804, 834, 835, 836, 853, 890, 932, 993, 1019, 1022, 1035, 1044, 1067, 1085, 1087, 1088, 1089, 1090, 1102, 1103, 1104, 1106, 1112, 1130, 1132, 1140, 1142, 1179, 1208, 1224, 1231], "current": [31, 90, 100, 115, 120, 137, 161, 168, 178, 180, 191, 192, 193, 195, 197, 200, 201, 229, 251, 258, 264, 274, 277, 295, 302, 304, 305, 323, 325, 326, 369, 370, 390, 409, 412, 465, 498, 506, 520, 542, 544, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 642, 725, 732, 736, 801, 802, 815, 824, 839, 840, 856, 887, 895, 909, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 931, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 970, 972, 973, 985, 994, 1008, 1014, 1015, 1016, 1024, 1026, 1033, 1035, 1042, 1045, 1048, 1049, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1088, 1093, 1114, 1117, 1125, 1128, 1250], "initi": [31, 33, 50, 101, 102, 105, 109, 113, 115, 126, 166, 170, 189, 190, 193, 197, 206, 216, 221, 225, 230, 236, 245, 249, 250, 260, 261, 262, 277, 281, 284, 287, 292, 302, 309, 314, 316, 319, 323, 336, 345, 351, 357, 363, 371, 379, 380, 381, 420, 422, 429, 473, 478, 488, 492, 496, 498, 501, 502, 544, 546, 564, 569, 570, 583, 584, 588, 590, 591, 592, 593, 594, 595, 598, 620, 634, 637, 642, 646, 647, 648, 650, 656, 658, 660, 662, 677, 678, 679, 684, 697, 702, 723, 725, 729, 731, 732, 733, 738, 739, 753, 764, 782, 790, 801, 802, 804, 816, 837, 839, 840, 845, 848, 850, 851, 858, 865, 873, 883, 887, 914, 915, 924, 949, 980, 994, 995, 1010, 1013, 1033, 1036, 1049, 1058, 1059, 1065, 1101, 1104, 1134, 1196, 1200, 1241, 1249, 1254], "mess": [31, 190, 275, 294, 296, 351, 353, 354, 372, 379, 744, 782, 839, 840, 1121, 1134, 1225], "roughli": [31, 192, 197, 340, 493, 912, 1049, 1058], "took": [31, 189, 196, 225, 416, 1156], "our": [31, 41, 49, 51, 61, 68, 95, 114, 115, 126, 128, 132, 133, 153, 154, 170, 191, 192, 194, 196, 201, 211, 225, 240, 241, 250, 251, 265, 267, 305, 316, 318, 354, 373, 378, 380, 398, 490, 493, 504, 509, 514, 543, 547, 552, 564, 568, 585, 596, 601, 735, 738, 860, 867, 887, 993, 994, 1019, 1022, 1049, 1059, 1063, 1065, 1078, 1081, 1084, 1090, 1188, 1196, 1199], "craftsmanship": [31, 33], "anoth": [31, 50, 53, 55, 69, 113, 148, 189, 190, 191, 192, 196, 197, 200, 201, 211, 213, 218, 221, 227, 228, 251, 258, 264, 267, 274, 279, 281, 287, 302, 305, 308, 311, 314, 340, 371, 379, 434, 452, 453, 467, 475, 487, 494, 505, 522, 526, 542, 543, 546, 551, 566, 569, 570, 583, 584, 588, 593, 602, 654, 656, 657, 659, 742, 747, 770, 794, 802, 806, 816, 824, 829, 830, 875, 887, 913, 914, 915, 920, 921, 930, 932, 944, 982, 993, 995, 1005, 1006, 1020, 1036, 1038, 1050, 1058, 1063, 1081, 1084, 1085, 1088, 1089, 1106, 1121, 1137, 1141, 1147, 1199, 1207, 1213, 1216, 1224, 1242], "isol": [31, 42, 219, 221, 225, 275, 289, 993, 1049, 1050, 1101, 1191, 1203, 1219, 1235, 1237], "wrong": [31, 69, 105, 190, 192, 314, 371, 378, 443, 465, 484, 719, 806, 860, 1019, 1036, 1050, 1068, 1085, 1089, 1101, 1120, 1185, 1196, 1254], "oracl": [31, 1200], "conduct": [31, 1224], "serious": 31, "safeti": [31, 133, 267, 371, 373, 486, 489, 492, 496, 501, 502, 505, 620, 743, 813, 840, 846, 986, 1062, 1063, 1087], "architectur": [31, 99, 197, 248, 371, 415, 438, 465, 482, 505, 524, 806, 848, 986, 1013, 1065, 1066, 1076, 1078, 1242, 1245], "treat": [31, 72, 281, 371, 430, 460, 522, 930, 1251], "them": [31, 50, 101, 102, 148, 160, 163, 176, 189, 190, 192, 195, 196, 197, 200, 201, 209, 210, 211, 218, 221, 225, 226, 228, 230, 246, 248, 251, 262, 286, 289, 298, 318, 328, 340, 373, 460, 482, 518, 538, 544, 548, 564, 600, 660, 662, 663, 716, 723, 726, 729, 742, 792, 806, 887, 913, 919, 920, 921, 927, 930, 955, 967, 995, 1002, 1049, 1050, 1059, 1062, 1065, 1066, 1078, 1083, 1088, 1089, 1090, 1112, 1114, 1136, 1169, 1172, 1191, 1197, 1204, 1215, 1231, 1251, 1260], "carefulli": [31, 192, 490, 569, 759, 1197], "fast": [31, 113, 197, 228, 250, 265, 267, 281, 290, 340, 494, 620, 792, 806, 1138, 1220], "independ": [31, 50, 269, 281, 375, 379, 432, 465, 656, 972, 987, 995, 1067], "self": [31, 49, 50, 51, 55, 173, 190, 191, 201, 208, 209, 216, 222, 225, 227, 245, 248, 249, 261, 262, 264, 271, 274, 279, 281, 287, 290, 302, 309, 319, 323, 329, 341, 345, 367, 498, 506, 644, 646, 750, 752, 753, 787, 800, 806, 812, 848, 879, 883, 1046, 1065, 1083, 1087, 1088, 1089, 1098, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1212, 1213, 1225, 1230, 1231, 1233, 1241], "valid": [31, 189, 192, 200, 277, 280, 323, 409, 463, 470, 486, 490, 668, 676, 700, 721, 736, 750, 787, 790, 816, 900, 1120, 1121, 1135, 1136, 1153, 1158, 1212, 1213, 1219], "first": [31, 41, 48, 50, 78, 120, 168, 173, 182, 188, 189, 192, 193, 195, 196, 197, 201, 209, 219, 221, 228, 248, 261, 262, 269, 271, 275, 277, 281, 305, 307, 318, 323, 340, 379, 383, 389, 395, 418, 426, 449, 464, 465, 470, 478, 494, 495, 506, 508, 509, 511, 513, 516, 522, 524, 526, 532, 534, 535, 537, 538, 539, 540, 590, 631, 637, 642, 644, 650, 652, 655, 674, 675, 676, 680, 699, 702, 735, 737, 742, 764, 771, 772, 791, 792, 794, 834, 835, 836, 840, 854, 857, 864, 868, 878, 887, 889, 891, 896, 902, 905, 908, 926, 927, 928, 933, 944, 948, 954, 970, 972, 976, 980, 982, 985, 986, 993, 994, 1012, 1016, 1038, 1046, 1049, 1052, 1058, 1066, 1067, 1082, 1083, 1084, 1085, 1089, 1090, 1094, 1101, 1103, 1107, 1115, 1116, 1117, 1118, 1120, 1121, 1130, 1131, 1134, 1140, 1141, 1148, 1171, 1180, 1186, 1188, 1197, 1199, 1207, 1225, 1231, 1241, 1244, 1249, 1252], "debug": [31, 190, 191, 218, 248, 258, 264, 274, 277, 328, 332, 348, 374, 375, 376, 377, 378, 398, 403, 416, 465, 491, 494, 498, 499, 500, 511, 516, 517, 523, 528, 533, 536, 547, 625, 770, 787, 840, 845, 867, 869, 930, 948, 1015, 1041, 1062, 1140, 1219, 1239, 1243, 1250, 1253], "fact": [31, 41, 141, 190, 191, 221, 340, 371, 462, 470, 494, 504, 887, 933, 1019, 1059, 1200], "hard": [31, 61, 69, 76, 115, 120, 128, 132, 137, 141, 182, 190, 192, 195, 196, 201, 204, 205, 210, 217, 221, 228, 250, 265, 271, 281, 295, 304, 305, 325, 326, 340, 369, 370, 443, 462, 491, 504, 518, 519, 552, 628, 725, 838, 840, 887, 917, 924, 927, 968, 970, 985, 988, 994, 1078, 1087, 1089, 1109, 1126, 1140, 1193, 1214, 1241, 1254], "principl": [31, 41, 42, 74, 97, 105, 110, 111, 133, 192, 201, 315, 316, 317, 318, 505, 548, 549, 840, 887, 993, 995, 1006, 1068, 1199, 1254], "mayb": [31, 33, 45, 46, 48, 50, 69, 115, 120, 182, 190, 191, 192, 195, 196, 217, 221, 248, 264, 265, 315, 316, 317, 318, 333, 373, 401, 404, 406, 407, 514, 534, 546, 547, 548, 580, 633, 634, 703, 752, 836, 994, 1081, 1103, 1233], "overview": [31, 55, 89, 115, 137, 156, 185, 197, 213, 229, 231, 246, 250, 262, 295, 296, 304, 308, 311, 314, 316, 325, 326, 342, 369, 370, 412, 415, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 661, 758, 769, 782, 793, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1009, 1012, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1191, 1241, 1242, 1248, 1249, 1252, 1254, 1261], "respons": [31, 41, 44, 80, 105, 110, 111, 128, 133, 177, 189, 200, 252, 504, 566, 580, 588, 646, 654, 802, 840, 883, 895, 994, 995, 1018, 1049, 1050, 1117, 1198, 1249], "directori": [32, 48, 88, 90, 91, 93, 100, 115, 128, 132, 137, 138, 141, 166, 168, 188, 189, 190, 191, 192, 201, 215, 220, 223, 229, 241, 242, 248, 249, 250, 251, 258, 261, 262, 264, 274, 277, 289, 294, 295, 296, 304, 305, 317, 318, 322, 325, 326, 331, 339, 343, 347, 357, 368, 369, 370, 373, 375, 378, 383, 384, 398, 403, 409, 411, 412, 464, 498, 500, 505, 507, 508, 510, 511, 513, 514, 517, 523, 524, 528, 531, 533, 537, 540, 541, 544, 546, 548, 562, 563, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 621, 624, 627, 630, 633, 636, 639, 642, 733, 815, 839, 840, 865, 887, 889, 909, 913, 916, 917, 918, 920, 921, 922, 923, 925, 927, 928, 930, 931, 932, 934, 935, 936, 937, 942, 943, 945, 947, 948, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 964, 965, 968, 972, 973, 978, 985, 993, 994, 995, 997, 1002, 1006, 1008, 1011, 1014, 1021, 1022, 1023, 1024, 1026, 1029, 1033, 1042, 1045, 1048, 1050, 1054, 1057, 1061, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1089, 1097, 1117, 1169, 1178, 1179, 1226, 1230, 1235, 1250, 1253, 1256, 1261, 1265], "googl": [32, 187, 190, 197, 199, 210, 213, 216, 217, 221, 222, 225, 246, 251, 370, 417, 599, 800, 801, 978, 1115, 1191, 1231, 1233], "cloner": 32, "init": [32, 170, 188, 189, 191, 206, 210, 287, 294, 296, 357, 380, 428, 455, 507, 573, 574, 596, 599, 627, 644, 661, 679, 818, 842, 850, 855, 875, 877, 889, 924, 977, 1063], "cpp": [32, 38, 88, 113, 115, 116, 117, 118, 119, 120, 123, 124, 133, 136, 137, 144, 145, 146, 153, 154, 166, 188, 201, 215, 225, 250, 251, 267, 294, 305, 314, 316, 373, 378, 380, 417, 509, 511, 512, 513, 514, 515, 516, 520, 528, 530, 535, 542, 543, 544, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 644, 645, 646, 647, 648, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 721, 726, 731, 732, 733, 734, 735, 736, 737, 738, 742, 747, 749, 752, 753, 754, 757, 759, 764, 770, 779, 780, 781, 784, 785, 786, 787, 788, 789, 791, 792, 794, 796, 800, 801, 802, 803, 804, 805, 814, 816, 818, 819, 823, 825, 827, 829, 834, 835, 836, 838, 993, 1023, 1027, 1030, 1031, 1044, 1046, 1049, 1065], "assert_eq": [32, 166, 542, 544, 547, 551, 564, 591, 592, 598, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 615, 616, 617, 618, 619, 637, 644, 645, 646, 656, 657, 659, 660, 661, 662, 663, 721, 725, 747, 749, 752, 753, 754, 785, 796, 800, 801, 802, 803, 805, 818, 819, 834, 835, 836, 838, 1231, 1236], "test_f": [32, 566, 601, 602, 838, 1236], "simplefixtur": 32, "public": [32, 43, 92, 93, 98, 105, 108, 109, 110, 111, 112, 115, 120, 124, 128, 137, 138, 200, 241, 249, 262, 290, 295, 304, 305, 313, 319, 325, 326, 369, 370, 371, 375, 378, 395, 398, 403, 478, 508, 509, 510, 513, 517, 523, 528, 533, 540, 543, 545, 549, 551, 554, 555, 556, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 601, 602, 614, 628, 634, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 657, 658, 659, 666, 669, 684, 685, 702, 712, 713, 715, 716, 718, 719, 728, 729, 734, 736, 737, 742, 745, 746, 747, 748, 749, 752, 753, 755, 764, 766, 767, 768, 770, 772, 773, 776, 777, 778, 779, 780, 781, 785, 786, 787, 789, 800, 801, 802, 805, 806, 814, 816, 823, 825, 827, 829, 831, 838, 840, 851, 855, 916, 917, 923, 937, 943, 985, 997, 998, 999, 1000, 1001, 1006, 1110, 1115, 1236], "myfirstsuit": 32, "test_find": 32, "wtf": [32, 41, 115, 227, 258, 263, 264, 267, 269, 287, 326, 637, 652, 840, 985, 1010, 1014, 1026, 1062, 1064, 1088], "tallk": 32, "morph": [32, 50, 144, 216, 225, 250, 251, 316, 381, 622, 634, 637, 640, 646, 742, 794, 889, 1092], "fixtur": [32, 216, 225, 317, 318, 333, 339, 340, 343, 344, 354, 371, 372, 373, 380, 406, 555, 566, 602, 840, 1229, 1259], "trivial": [32, 190, 201, 331, 347, 444, 460, 637, 750, 755, 806, 892, 900, 995, 1011, 1049, 1256], "tempfil": [32, 1087], "crap": [32, 191, 265, 307, 363, 368, 490, 506, 524, 535, 703, 743, 824, 995, 1062], "null": [32, 50, 110, 191, 192, 193, 207, 232, 248, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 419, 432, 439, 467, 478, 488, 493, 506, 601, 656, 756, 845, 851, 858, 883, 918, 928, 930, 931, 948, 963, 970, 1013, 1018, 1025, 1031, 1034, 1036, 1038, 1040, 1046, 1049, 1050, 1055, 1058, 1062, 1065], "deriv": [32, 98, 112, 116, 132, 211, 265, 277, 344, 385, 409, 602, 620, 646, 715, 716, 718, 719, 781, 789, 823, 1089, 1102, 1236], "seminar": [33, 171], "psycho": 33, "rule": [33, 191, 197, 221, 271, 277, 281, 314, 353, 372, 373, 406, 420, 439, 441, 442, 443, 458, 464, 482, 493, 494, 495, 497, 505, 519, 524, 534, 552, 564, 569, 669, 715, 750, 753, 757, 759, 779, 805, 806, 927, 948, 1010, 1089, 1112, 1120, 1121, 1131, 1140, 1204, 1258], "dont": [33, 281, 504, 860], "scenario": [33, 192, 213, 221, 225, 371, 373, 427, 568, 719, 814, 1050, 1051, 1058, 1255], "robert": [33, 552], "martin": [33, 504, 505, 552], "someon": [33, 117, 221, 262, 277, 284, 287, 318, 375, 379, 380, 405, 658, 814, 879, 945, 951, 973, 995, 1019, 1065, 1114], "mistak": [33, 190, 196, 197, 246, 262, 286, 993, 1191, 1204], "kill": [33, 191, 192, 267, 948, 1003, 1034, 1053, 1062, 1063, 1093, 1250], "10000": [33, 242, 261, 264, 277, 309, 351, 1090, 1106], "peopl": [33, 50, 190, 192, 194, 195, 197, 209, 221, 250, 284, 416, 504, 552, 570, 759, 887, 927, 1098, 1114, 1142, 1198, 1200], "polit": [33, 792], "thei": [33, 43, 69, 113, 153, 154, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 209, 211, 213, 217, 229, 251, 258, 262, 264, 267, 274, 277, 281, 323, 331, 347, 373, 379, 380, 409, 434, 440, 460, 488, 491, 494, 500, 504, 505, 535, 540, 543, 544, 564, 569, 570, 598, 600, 620, 637, 647, 652, 677, 681, 713, 725, 742, 743, 746, 753, 754, 801, 802, 808, 846, 860, 879, 887, 912, 923, 927, 949, 986, 993, 994, 995, 1006, 1033, 1062, 1063, 1068, 1084, 1094, 1102, 1109, 1112, 1163, 1186, 1193, 1196, 1197, 1204, 1207, 1210, 1224, 1230, 1249, 1254, 1256, 1260], "regul": 33, "ethic": 33, "everi": [33, 41, 49, 50, 51, 69, 80, 101, 102, 121, 148, 190, 196, 225, 248, 277, 318, 429, 486, 500, 504, 514, 547, 552, 568, 587, 588, 656, 666, 718, 725, 741, 743, 748, 838, 858, 871, 887, 912, 920, 921, 923, 925, 926, 942, 949, 951, 994, 1009, 1046, 1049, 1062, 1063, 1083, 1085, 1094, 1130, 1149, 1160, 1171, 1197, 1231, 1248, 1256], "particular": [33, 113, 189, 201, 221, 473, 498, 544, 568, 620, 819, 838, 934, 1114], "electr": 33, "seem": [33, 144, 180, 189, 191, 192, 210, 315, 543, 993, 995, 1062], "adher": [33, 930], "immedi": [33, 50, 190, 191, 196, 197, 267, 308, 311, 314, 316, 384, 465, 694, 809, 814, 869, 879, 883, 986, 1038, 1047, 1050, 1052, 1134, 1231], "survei": [33, 210], "had": [33, 113, 189, 191, 192, 196, 197, 201, 209, 221, 225, 254, 256, 275, 434, 473, 564, 631, 643, 728, 742, 881, 914, 915, 927, 952, 993, 1006, 1080, 1114, 1121, 1140, 1210, 1214], "life": [33, 126, 132, 197, 202, 207, 209, 217, 649, 779, 800, 815, 824, 839, 840, 887, 927, 985, 1026, 1042, 1048, 1115, 1136, 1194], "accomplish": [33, 45, 69, 229, 315, 317, 318, 490, 505, 993], "state": [33, 110, 115, 120, 166, 197, 202, 221, 229, 251, 258, 261, 264, 274, 275, 277, 437, 454, 486, 504, 591, 592, 596, 597, 644, 750, 784, 814, 845, 883, 904, 918, 978, 988, 1034, 1038, 1049, 1050, 1088, 1094], "befor": [33, 116, 120, 128, 132, 190, 191, 193, 194, 195, 197, 200, 209, 225, 228, 232, 250, 277, 293, 294, 296, 317, 318, 323, 339, 340, 341, 344, 351, 353, 372, 422, 430, 431, 440, 460, 519, 522, 524, 535, 601, 631, 637, 675, 701, 716, 743, 755, 770, 782, 787, 788, 798, 802, 803, 808, 809, 814, 816, 817, 838, 839, 840, 851, 865, 875, 881, 887, 913, 950, 986, 993, 995, 1036, 1051, 1053, 1065, 1089, 1094, 1112, 1156, 1181, 1183, 1187, 1196, 1209, 1213, 1216, 1225, 1226, 1232], "formal": [33, 200, 213, 250, 251, 340, 343, 522, 591, 1225], "googletest": [33, 88, 166, 216, 218, 219, 251, 294, 296, 331, 347, 379, 380, 517, 532, 549, 585, 598, 600, 601, 661, 800, 801, 802, 838, 840, 841, 1231, 1233, 1256, 1259], "messag": [33, 120, 148, 173, 187, 195, 196, 207, 213, 219, 227, 228, 254, 258, 261, 264, 274, 277, 284, 287, 302, 309, 317, 318, 319, 323, 345, 351, 357, 363, 386, 398, 403, 505, 511, 513, 514, 516, 518, 519, 520, 522, 524, 525, 526, 528, 549, 669, 729, 759, 764, 784, 786, 787, 796, 806, 814, 840, 862, 887, 920, 921, 925, 930, 985, 1007, 1026, 1038, 1042, 1118, 1132, 1142, 1185, 1226, 1230, 1232, 1251, 1253, 1254], "saniti": [33, 496, 501, 502, 505, 535, 538, 658, 744, 782, 837, 839, 840], "perform": [33, 105, 109, 190, 196, 206, 228, 247, 248, 277, 318, 345, 379, 404, 444, 447, 470, 477, 482, 490, 493, 494, 497, 500, 501, 502, 511, 637, 676, 694, 697, 719, 741, 755, 797, 824, 840, 871, 1053, 1070, 1081, 1082, 1140, 1224, 1239, 1243], "delici": [33, 41], "fearlessli": [33, 41], "backlog": [33, 371], "Or": [33, 103, 104, 106, 107, 114, 116, 132, 190, 296, 353, 489, 505, 628, 756, 782, 793, 839, 840, 980, 1006, 1016, 1044, 1120, 1134, 1212, 1216], "Will": [33, 190, 222, 281, 384, 848, 1065, 1132, 1143, 1219, 1233], "high": [34, 41, 110, 116, 166, 210, 250, 264, 281, 371, 504, 552, 575, 588, 592, 596, 800, 802, 817, 869, 881, 885, 897, 906], "speed": [34, 41, 161, 182, 187, 190, 258, 262, 264, 274, 277, 281, 345, 495, 805, 881, 887, 1051, 1053, 1195, 1196], "hype": [34, 824], "we": [34, 38, 48, 49, 51, 53, 59, 116, 120, 124, 128, 131, 132, 133, 138, 141, 154, 160, 163, 170, 173, 182, 188, 189, 190, 192, 193, 194, 195, 196, 197, 201, 204, 205, 208, 209, 210, 211, 212, 213, 217, 218, 221, 225, 226, 227, 228, 229, 231, 240, 241, 248, 249, 250, 251, 255, 258, 261, 262, 264, 265, 267, 294, 296, 298, 305, 308, 311, 313, 315, 317, 318, 336, 340, 343, 344, 371, 373, 380, 381, 384, 401, 404, 405, 409, 419, 434, 445, 452, 460, 473, 482, 484, 488, 490, 493, 498, 505, 509, 510, 513, 514, 522, 524, 528, 530, 534, 542, 543, 544, 547, 549, 551, 554, 563, 564, 568, 569, 585, 586, 587, 588, 596, 599, 600, 601, 631, 637, 646, 654, 657, 681, 712, 716, 725, 734, 735, 736, 737, 738, 742, 753, 764, 770, 796, 797, 802, 805, 816, 821, 848, 851, 855, 856, 860, 862, 865, 883, 887, 889, 895, 903, 914, 915, 930, 931, 945, 951, 952, 967, 986, 993, 994, 995, 1002, 1006, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1031, 1036, 1049, 1058, 1076, 1080, 1081, 1082, 1090, 1109, 1114, 1140, 1142, 1147, 1149, 1178, 1185, 1186, 1187, 1191, 1196, 1197, 1198, 1199, 1206, 1207, 1213, 1216, 1232, 1233, 1245, 1248, 1249, 1250], "did": [34, 191, 192, 194, 196, 197, 200, 201, 208, 217, 221, 228, 313, 484, 488, 504, 549, 587, 735, 804, 806, 835, 860, 865, 887, 927, 986, 997, 1006, 1090, 1241], "consequ": [34, 189, 190, 308, 311, 464, 485, 488, 489, 552, 1019, 1109, 1210, 1241], "unsign": [34, 105, 111, 128, 153, 154, 262, 267, 436, 438, 446, 475, 478, 482, 490, 556, 571, 586, 600, 601, 602, 652, 721, 722, 732, 780, 814, 816, 823, 825, 827, 829, 831, 838, 843, 846, 851, 858, 867, 869, 871, 877, 883, 892, 897, 901, 1015, 1058, 1059, 1238, 1239], "fals": [34, 101, 102, 105, 109, 110, 112, 148, 193, 195, 208, 209, 222, 227, 232, 237, 239, 240, 242, 245, 248, 254, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 392, 407, 422, 426, 443, 480, 506, 524, 659, 684, 716, 723, 725, 747, 759, 812, 816, 819, 907, 920, 921, 948, 1043, 1044, 1049, 1051, 1071, 1072, 1087, 1102, 1106, 1109, 1122, 1123, 1125, 1126, 1130, 1209, 1210, 1213, 1215, 1231], "introduc": [34, 46, 69, 88, 144, 250, 267, 275, 316, 331, 347, 486, 494, 506, 524, 542, 547, 569, 587, 588, 589, 590, 620, 642, 728, 840, 906, 1062, 1092, 1118, 1132, 1198, 1245, 1248, 1256], "throw": [34, 120, 144, 194, 197, 204, 267, 544, 568, 569, 573, 579, 580, 582, 583, 584, 602, 620, 697, 721, 725, 736, 778, 799, 802, 813, 816, 818, 1236], "notfounderror": 34, "commit": [34, 68, 113, 170, 193, 196, 246, 250, 251, 262, 265, 275, 406, 860, 1191, 1200, 1203, 1224], "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 34, "cluster_clean_cod": [34, 35, 39, 41, 43, 44, 840], "clean": [34, 35, 39, 41, 43, 44, 50, 124, 171, 185, 256, 275, 415, 482, 493, 494, 497, 503, 644, 742, 840, 841, 1065, 1067, 1078, 1087, 1140, 1262], "cluster_clean_code_bug": [34, 35, 41, 43, 44, 840], "clean_code_bugs_find_error": [34, 35, 41, 840], "twice": [35, 41, 43, 44, 45, 190, 426, 465, 487, 534, 750, 753, 812, 840, 907, 948, 986, 1002, 1036, 1082], "crash": [35, 41, 50, 101, 102, 190, 191, 192, 195, 246, 248, 258, 264, 274, 277, 416, 455, 462, 482, 568, 652, 678, 723, 800, 840, 1049, 1063, 1191], "found": [35, 41, 99, 100, 121, 161, 173, 179, 189, 201, 209, 221, 254, 258, 261, 264, 267, 269, 271, 274, 277, 287, 302, 309, 323, 331, 341, 345, 347, 351, 357, 363, 367, 380, 384, 398, 491, 500, 513, 516, 528, 532, 537, 578, 582, 583, 584, 590, 601, 603, 607, 608, 609, 637, 642, 681, 684, 687, 697, 701, 702, 725, 727, 735, 737, 739, 747, 835, 840, 858, 919, 923, 930, 978, 995, 1065, 1068, 1078, 1083, 1089, 1097, 1106, 1136, 1169, 1195, 1198, 1234, 1256], "clean_code_bugs_overwrite_existing_fil": [35, 41, 43, 44, 840], "clean_code_bugs_overwrite_store_content_on_read": [35, 41, 43, 44, 840], "explicitli": [36, 191, 192, 196, 221, 261, 271, 281, 314, 442, 443, 461, 499, 505, 524, 569, 646, 649, 656, 697, 747, 750, 753, 806, 819, 918, 1050, 1059, 1088, 1098, 1117, 1204, 1212], "solut": [36, 115, 163, 195, 197, 205, 213, 215, 221, 240, 250, 251, 256, 259, 262, 267, 272, 278, 294, 297, 308, 317, 318, 322, 328, 353, 354, 366, 373, 379, 464, 465, 468, 487, 490, 507, 511, 524, 530, 541, 568, 590, 620, 642, 648, 649, 668, 705, 707, 709, 716, 731, 739, 754, 759, 764, 790, 806, 819, 833, 839, 840, 920, 949, 950, 967, 1033, 1038, 1051, 1052, 1071, 1094, 1130, 1162, 1174, 1204, 1242, 1248], "force_overwrit": 36, "descriptor": [36, 141, 190, 213, 245, 277, 281, 302, 323, 341, 405, 649, 846, 867, 903, 924, 930, 931, 989, 1011, 1012, 1013, 1059, 1245, 1251, 1255], "mani": [37, 41, 44, 49, 51, 55, 80, 105, 111, 133, 190, 192, 196, 197, 213, 218, 221, 237, 248, 269, 279, 284, 305, 309, 313, 314, 316, 322, 341, 380, 384, 405, 409, 432, 444, 446, 455, 470, 484, 486, 491, 506, 519, 522, 531, 532, 534, 543, 546, 551, 554, 593, 620, 666, 676, 695, 697, 716, 729, 741, 742, 750, 770, 791, 796, 804, 812, 840, 846, 848, 865, 873, 879, 883, 887, 913, 924, 925, 927, 928, 982, 993, 994, 1012, 1013, 1031, 1034, 1044, 1047, 1062, 1063, 1065, 1076, 1085, 1087, 1089, 1094, 1103, 1118, 1121, 1124, 1128, 1136, 1140, 1142, 1147, 1196, 1198, 1199, 1200, 1204, 1213, 1231, 1241, 1242, 1252, 1261], "overwrit": [37, 100, 380, 568, 569, 582, 590, 607, 609, 642, 652, 697, 699, 729, 840, 887, 950, 955, 967, 1020, 1138], "present": [37, 48, 133, 193, 197, 201, 209, 222, 277, 323, 331, 340, 347, 371, 380, 510, 648, 819, 883, 887, 923, 995, 1006, 1025, 1089, 1173, 1213, 1256], "continu": [38, 41, 50, 55, 80, 90, 97, 101, 102, 113, 116, 133, 191, 200, 201, 212, 221, 222, 225, 234, 239, 240, 241, 270, 275, 281, 287, 297, 371, 373, 395, 458, 459, 465, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 504, 506, 513, 516, 535, 547, 660, 662, 663, 723, 744, 752, 782, 835, 836, 837, 838, 839, 840, 986, 988, 992, 993, 998, 1021, 1022, 1062, 1063, 1068, 1080, 1087, 1094, 1098, 1131, 1134, 1153, 1198, 1213, 1231], "expected_cont": 38, "fill": [38, 192, 193, 226, 277, 278, 323, 446, 742, 746, 791, 801, 858, 883, 887, 954, 1012, 1092], "strategi": [38, 261, 372, 379, 380, 480, 994, 1148, 1224], "hurri": [38, 465], "read_fil": 38, "compar": [38, 115, 188, 249, 251, 262, 277, 318, 323, 443, 485, 499, 500, 519, 524, 535, 598, 644, 721, 801, 997, 1034, 1132, 1137, 1162, 1166, 1196], "binaryfil": 38, "per": [38, 69, 161, 196, 222, 340, 389, 409, 438, 477, 482, 519, 591, 823, 877, 883, 897, 901, 906, 907, 919, 924, 944, 970, 1040, 1049, 1066, 1237, 1259], "doesn": [38, 192, 195, 302, 351, 460, 462, 465, 480, 494, 796, 846, 907, 914, 915, 950, 954, 967, 1066, 1078, 1134], "belong": [38, 218, 221, 432, 452, 478, 505, 620, 644, 657, 659, 933, 941, 1021, 1105, 1119], "test_write_csv": 38, "test_read_csv": [38, 1188], "ah": [38, 49, 51, 53, 196, 211, 248, 250, 264, 698, 1065, 1068, 1142, 1207, 1254], "altern": [39, 41, 43, 44, 50, 59, 69, 74, 132, 154, 189, 190, 197, 222, 241, 267, 328, 357, 439, 510, 644, 653, 666, 677, 680, 750, 799, 805, 827, 840, 887, 927, 948, 989, 993, 995, 1007, 1015, 1021, 1034, 1040, 1058, 1065, 1114, 1134, 1137, 1212, 1216, 1219, 1226, 1236, 1247], "cluster_clean_code_featur": [39, 41, 43, 44, 840], "clean_code_features_csv": [39, 41, 43, 44, 840], "clean_code_features_other_index": [39, 41, 840], "establish": [41, 62, 161, 229, 241, 305, 317, 318, 339, 343, 395, 504, 887, 1049, 1242, 1255], "were": [41, 113, 132, 190, 192, 196, 221, 225, 416, 464, 532, 643, 652, 653, 678, 746, 785, 914, 915, 995, 1022, 1080, 1088, 1112, 1121, 1140, 1146, 1204, 1210, 1241], "occas": [41, 80, 191, 801], "ourselv": [41, 221, 986], "gather": [41, 197, 228, 317, 318, 339, 340, 343, 383, 498, 500, 1175], "wreak": [41, 101, 102, 480, 723], "havoc": [41, 101, 102, 480, 723], "shoehorn": 41, "violat": [41, 105, 110, 111, 133, 190, 504, 552, 780, 802, 901, 1049, 1063], "nearli": [41, 221, 227, 482, 1041], "solid": [41, 103, 104, 105, 106, 107, 114, 133, 202, 314, 316, 505, 552, 1239, 1240, 1251, 1252, 1254, 1255], "chanc": [41, 154, 190, 192, 226, 380, 484, 504, 842, 887, 993, 1014, 1249], "cluster_clean_code_refactor": [41, 43, 44, 840], "clean_code_refactoring_backingstore_monolith": [41, 43, 44, 840], "clean_code_refactoring_store_enum_switch": [41, 43, 44, 840], "clean_code_refactoring_pass_store_in_ctor": [41, 44, 840], "clean_code_refactoring_backingstore_interfac": [41, 44, 840], "now": [42, 48, 113, 141, 189, 190, 191, 192, 193, 194, 196, 197, 208, 217, 227, 237, 254, 261, 267, 271, 281, 289, 309, 313, 334, 371, 384, 385, 398, 460, 473, 488, 493, 518, 540, 544, 551, 564, 569, 591, 592, 599, 657, 681, 684, 690, 694, 702, 746, 797, 802, 817, 819, 845, 865, 887, 895, 897, 903, 919, 923, 986, 993, 994, 995, 1021, 1022, 1030, 1078, 1080, 1085, 1088, 1103, 1106, 1130, 1186, 1196, 1198, 1216, 1225, 1241], "violatin": 42, "respect": [42, 49, 51, 110, 191, 251, 313, 315, 390, 436, 484, 504, 569, 587, 646, 653, 715, 750, 801, 802, 918, 927, 993, 1049, 1063, 1109], "mainli": [43, 190, 225, 314, 323, 697, 838, 1029, 1092], "bugfix": 43, "ongo": [43, 113, 379, 380, 1051], "scene": [43, 1065, 1109], "pleas": [43, 115, 138, 173, 191, 192, 195, 197, 201, 204, 217, 221, 225, 226, 228, 229, 230, 231, 241, 267, 294, 296, 305, 326, 367, 370, 389, 430, 464, 494, 519, 524, 602, 658, 660, 661, 662, 663, 927, 986, 994, 995, 1010, 1041, 1059, 1067, 1068, 1114, 1217], "wait": [43, 63, 64, 65, 69, 74, 78, 128, 132, 148, 161, 181, 190, 191, 192, 193, 194, 196, 236, 340, 384, 713, 742, 809, 817, 840, 864, 879, 885, 889, 892, 895, 897, 920, 921, 924, 932, 985, 986, 1012, 1014, 1018, 1030, 1044, 1047, 1050, 1057, 1059, 1062, 1138, 1207, 1231, 1249, 1252], "place": [43, 115, 128, 180, 191, 192, 194, 195, 196, 197, 209, 218, 222, 245, 261, 267, 277, 313, 314, 380, 420, 436, 458, 465, 482, 505, 508, 512, 514, 540, 542, 566, 568, 582, 601, 614, 658, 672, 674, 675, 686, 697, 705, 708, 709, 719, 739, 805, 808, 816, 835, 838, 840, 865, 887, 916, 938, 939, 940, 941, 993, 994, 1002, 1050, 1081, 1083, 1092, 1122, 1131, 1135, 1137, 1156, 1213, 1226, 1245], "unnecessarili": [43, 60, 1059], "conflict": [43, 66, 68, 113, 116, 132, 316, 317, 318, 339, 373, 430, 481, 653, 743, 815, 839, 840, 843, 846, 856, 985, 994, 1026, 1036, 1042, 1062, 1097, 1227], "rip": [43, 193, 506, 585, 1049, 1206], "detail": [43, 75, 153, 154, 192, 195, 200, 216, 222, 236, 247, 248, 250, 251, 258, 264, 274, 278, 279, 281, 285, 307, 318, 357, 364, 368, 373, 398, 504, 524, 526, 535, 552, 589, 599, 601, 649, 725, 801, 865, 948, 988, 993, 995, 1051, 1084, 1193, 1233, 1239, 1260, 1261], "instanc": [43, 45, 98, 101, 102, 123, 197, 237, 245, 249, 258, 261, 262, 269, 271, 276, 279, 281, 284, 299, 302, 309, 323, 341, 351, 357, 363, 373, 379, 394, 409, 512, 542, 547, 555, 566, 568, 569, 570, 582, 583, 584, 587, 600, 654, 712, 721, 723, 731, 736, 784, 787, 848, 853, 856, 1058, 1059, 1087, 1089, 1103, 1104, 1106, 1109, 1132], "its": [43, 45, 49, 51, 75, 78, 99, 101, 102, 110, 128, 141, 148, 186, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 206, 211, 213, 217, 218, 219, 221, 241, 248, 249, 251, 258, 262, 264, 274, 277, 281, 290, 305, 307, 308, 311, 314, 316, 323, 340, 373, 379, 380, 389, 400, 430, 452, 463, 465, 480, 482, 484, 491, 493, 509, 512, 515, 518, 526, 543, 547, 566, 569, 570, 585, 586, 587, 588, 593, 598, 601, 643, 644, 645, 647, 649, 654, 683, 723, 742, 754, 764, 790, 809, 838, 851, 860, 865, 887, 892, 914, 915, 918, 920, 921, 925, 930, 935, 936, 948, 949, 970, 972, 994, 997, 998, 1005, 1015, 1016, 1021, 1038, 1044, 1047, 1049, 1050, 1051, 1059, 1082, 1087, 1089, 1092, 1097, 1102, 1106, 1112, 1120, 1130, 1132, 1137, 1141, 1148, 1196, 1198, 1217, 1224, 1226, 1241, 1242, 1245, 1248, 1249, 1250, 1252, 1254, 1256], "replac": [43, 50, 53, 88, 120, 185, 195, 239, 250, 258, 261, 262, 264, 265, 267, 274, 277, 309, 323, 340, 379, 383, 424, 439, 480, 506, 589, 590, 642, 674, 675, 735, 742, 770, 787, 801, 816, 824, 838, 839, 840, 890, 995, 1037, 1049, 1063, 1088], "symptom": [45, 200], "mismatch": [45, 524, 626], "onc": [45, 105, 110, 111, 116, 173, 185, 189, 191, 192, 195, 196, 197, 200, 209, 210, 383, 401, 422, 447, 456, 464, 494, 514, 534, 543, 544, 545, 549, 554, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 599, 601, 654, 658, 676, 677, 725, 732, 773, 784, 794, 812, 823, 825, 827, 828, 829, 830, 831, 838, 848, 851, 883, 986, 995, 1039, 1062, 1063, 1083, 1089, 1090, 1125, 1147, 1156, 1169, 1200, 1203, 1226, 1254, 1260], "remov": [45, 90, 100, 115, 120, 121, 137, 166, 168, 196, 197, 209, 211, 222, 237, 242, 248, 254, 262, 264, 269, 271, 277, 281, 284, 288, 289, 295, 302, 304, 305, 319, 323, 325, 326, 329, 340, 341, 345, 351, 357, 367, 369, 370, 513, 514, 515, 516, 519, 524, 528, 535, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 607, 608, 609, 614, 618, 637, 642, 671, 677, 694, 728, 750, 803, 814, 815, 816, 835, 838, 839, 840, 848, 865, 875, 883, 906, 913, 914, 915, 916, 917, 920, 921, 922, 935, 936, 938, 940, 941, 942, 943, 945, 946, 952, 953, 954, 955, 957, 958, 960, 962, 968, 985, 996, 1006, 1008, 1014, 1016, 1019, 1024, 1026, 1029, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1092, 1112, 1122, 1137, 1138, 1139, 1173], "sync": [45, 133, 191, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 480, 484, 887, 980], "imho": [45, 781], "forbidden": [46, 482], "accord": [46, 50, 115, 128, 189, 192, 277, 733, 932, 948, 982, 986, 993, 994, 995], "uncl": [46, 416], "bob": [46, 277, 416, 504], "enum": [46, 250, 251, 354, 379, 439, 454, 492, 496, 501, 502, 506, 535, 725, 744, 782, 825, 827, 837, 839, 840, 846, 848, 856, 1049, 1241], "valu": [46, 75, 99, 115, 116, 120, 121, 127, 132, 133, 141, 161, 166, 190, 192, 194, 206, 208, 209, 210, 222, 226, 228, 230, 232, 237, 239, 244, 245, 246, 248, 249, 250, 251, 253, 254, 256, 258, 259, 261, 262, 264, 265, 267, 269, 271, 272, 274, 277, 281, 284, 286, 287, 298, 299, 302, 305, 307, 309, 319, 322, 323, 328, 329, 341, 345, 351, 354, 356, 358, 363, 367, 373, 379, 384, 392, 398, 419, 424, 426, 428, 429, 439, 442, 443, 444, 452, 454, 455, 463, 465, 467, 468, 473, 484, 488, 490, 492, 496, 501, 502, 506, 507, 508, 510, 514, 518, 519, 524, 525, 526, 531, 535, 544, 547, 549, 563, 564, 566, 569, 573, 575, 578, 580, 581, 583, 594, 595, 596, 598, 601, 608, 620, 637, 646, 647, 648, 651, 654, 656, 659, 697, 699, 701, 702, 721, 744, 746, 747, 753, 764, 770, 773, 776, 777, 778, 782, 791, 802, 816, 818, 834, 837, 839, 840, 843, 846, 865, 867, 869, 871, 887, 897, 919, 933, 985, 994, 1015, 1023, 1025, 1026, 1028, 1029, 1030, 1035, 1038, 1044, 1047, 1058, 1059, 1062, 1063, 1083, 1085, 1087, 1090, 1094, 1098, 1100, 1102, 1109, 1120, 1121, 1122, 1130, 1132, 1135, 1137, 1138, 1142, 1148, 1151, 1156, 1158, 1161, 1168, 1170, 1191, 1194, 1196, 1199, 1202, 1203, 1209, 1210, 1213, 1214, 1215, 1231], "put": [46, 60, 71, 124, 128, 173, 189, 190, 191, 217, 225, 340, 343, 380, 506, 508, 509, 516, 528, 598, 642, 728, 752, 788, 814, 831, 856, 864, 877, 879, 904, 986, 994, 1023, 1050, 1065, 1081, 1084, 1089, 1148, 1246, 1248], "submiss": [47, 52, 56, 144], "submit": [47, 100, 141, 166, 881, 1016], "grazer": [47, 207, 228, 344, 991], "linuxtag": [47, 228, 344, 991], "pure": [48, 60, 123, 197, 398, 460, 553, 715, 742, 781, 806, 927, 1121, 1241], "local": [48, 139, 140, 152, 166, 173, 188, 190, 191, 193, 196, 217, 221, 222, 229, 230, 234, 250, 251, 265, 267, 268, 274, 277, 280, 281, 302, 305, 317, 319, 328, 331, 339, 340, 343, 344, 347, 349, 350, 355, 356, 357, 361, 362, 363, 365, 366, 375, 384, 398, 430, 434, 458, 460, 477, 509, 522, 526, 531, 548, 562, 564, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 642, 649, 666, 750, 753, 755, 784, 840, 860, 887, 892, 914, 915, 919, 970, 985, 993, 995, 996, 997, 998, 1004, 1006, 1012, 1023, 1033, 1076, 1078, 1085, 1088, 1133, 1219, 1242, 1254, 1256], "easili": [48, 133, 186, 191, 197, 379, 384, 439, 458, 491, 504, 543, 715, 792, 869, 885, 1015, 1047, 1053, 1084, 1097, 1129, 1241], "69": [48, 195, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1195, 1196, 1215], "70": [48, 152, 165, 192, 200, 222, 227, 229, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 506, 591, 993, 994, 995, 1092, 1195, 1196, 1224], "guess": [48, 271, 281, 307, 484, 489, 759, 1002, 1059], "autotool": [48, 201], "portabl": [48, 213, 432, 494, 809, 1033, 1040, 1059, 1063, 1121, 1200], "configur": [48, 49, 50, 51, 54, 55, 59, 64, 69, 73, 75, 76, 77, 95, 113, 115, 120, 126, 128, 132, 133, 137, 161, 164, 166, 177, 178, 188, 189, 191, 192, 195, 197, 219, 229, 295, 304, 305, 314, 325, 326, 332, 333, 336, 340, 348, 369, 370, 374, 375, 377, 379, 398, 404, 507, 508, 509, 517, 523, 533, 534, 537, 547, 549, 554, 591, 592, 593, 601, 840, 860, 867, 887, 901, 917, 918, 919, 923, 932, 968, 982, 985, 986, 994, 1006, 1013, 1027, 1029, 1059, 1066, 1067, 1080, 1090, 1161, 1199, 1203, 1212, 1219, 1242], "archiv": [48, 94, 95, 115, 139, 166, 201, 202, 229, 231, 295, 304, 305, 325, 369, 500, 531, 538, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 917, 948, 985, 1067, 1070, 1073, 1074, 1076, 1077, 1078, 1083, 1087, 1219], "m4": 48, "macro": [48, 267, 332, 348, 374, 375, 377, 378, 424, 435, 438, 450, 459, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 509, 510, 512, 514, 515, 516, 517, 518, 523, 524, 526, 528, 531, 533, 744, 782, 788, 837, 839, 840, 856, 875, 889, 930, 1009, 1015, 1021, 1033, 1067, 1140, 1231, 1236, 1238, 1243], "stock": [48, 261, 262, 1147, 1148], "sudo": [48, 54, 92, 115, 123, 138, 173, 188, 193, 195, 197, 218, 229, 267, 295, 304, 305, 314, 316, 325, 326, 357, 369, 370, 513, 515, 516, 539, 614, 840, 917, 943, 945, 985, 986, 995, 1051, 1080, 1226], "pwd": [48, 100, 113, 141, 166, 188, 217, 294, 296, 357, 398, 403, 507, 538, 599, 601, 661, 862, 865, 914, 915, 925, 970, 972, 973, 986, 1066, 1067, 1081, 1083, 1224], "blink": [48, 171, 316, 319, 340, 344, 384, 387, 986, 1027, 1030], "pub": [48, 54, 193, 229, 860, 1002, 1185], "scm": [48, 54, 193, 216, 243, 860], "lib": [48, 54, 115, 144, 195, 201, 228, 248, 251, 261, 277, 284, 287, 302, 309, 316, 319, 323, 345, 351, 357, 363, 378, 528, 537, 598, 865, 877, 883, 887, 980, 995, 1062, 1066, 1068, 1078, 1080, 1219, 1226], "remot": [48, 93, 95, 152, 165, 173, 193, 195, 197, 241, 250, 297, 375, 378, 384, 541, 562, 576, 590, 642, 840, 860, 887, 888, 892, 913, 916, 985, 994, 996, 999, 1000, 1001, 1004, 1012, 1078, 1090, 1242, 1245, 1247], "v0": 48, "v1": [48, 307, 549, 564, 746], "v2": [48, 50, 197, 216, 307, 549, 564, 746], "autotooleri": 48, "autogen": 48, "step": [48, 50, 55, 141, 189, 190, 196, 197, 201, 225, 264, 267, 268, 294, 296, 309, 313, 318, 341, 420, 422, 424, 440, 464, 506, 535, 546, 589, 599, 637, 661, 666, 800, 887, 914, 915, 993, 1065, 1074, 1212, 1213, 1225], "noconfigur": 48, "suppress": [48, 196, 241, 498, 524, 526, 543, 652, 801, 967, 1219], "manual": [48, 50, 116, 126, 128, 132, 188, 197, 227, 228, 258, 259, 264, 267, 274, 277, 307, 309, 380, 428, 429, 432, 439, 477, 482, 506, 643, 684, 735, 742, 753, 779, 791, 792, 824, 825, 827, 828, 839, 840, 842, 843, 846, 887, 914, 915, 986, 993, 994, 1016, 1019, 1034, 1036, 1038, 1080, 1082, 1087, 1095, 1096, 1100, 1104, 1146], "absorb": [48, 227, 503, 505, 753, 1148], "Be": [48, 88, 103, 104, 106, 107, 114, 267, 314, 316, 354, 373, 379, 380, 384, 437, 470, 519, 524, 599, 620, 645, 650, 711, 739, 751, 753, 782, 784, 787, 798, 807, 815, 837, 839, 840, 913, 1062, 1078, 1245], "awar": [48, 384, 481, 508, 1051, 1245], "enabl": [48, 153, 189, 195, 221, 229, 250, 258, 264, 274, 277, 305, 315, 443, 494, 532, 547, 569, 625, 885, 887, 892, 940, 986, 990, 994, 1006, 1051, 1076, 1080, 1090, 1249], "mkdir": [48, 91, 115, 137, 166, 168, 178, 191, 196, 200, 217, 218, 294, 296, 305, 370, 398, 403, 526, 530, 599, 601, 602, 661, 838, 840, 887, 914, 915, 916, 917, 952, 953, 954, 955, 956, 959, 960, 962, 968, 985, 1002, 1006, 1058, 1078, 1080, 1081, 1087], "dist": [48, 172, 805, 1146], "406332": 48, "apr": [48, 50, 248, 258, 287, 391, 1066, 1067, 1068, 1081], "15": [48, 50, 97, 113, 115, 166, 189, 197, 200, 208, 210, 211, 219, 222, 225, 227, 233, 234, 237, 239, 241, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 272, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 324, 329, 333, 334, 336, 341, 345, 351, 357, 367, 391, 393, 394, 395, 397, 404, 411, 412, 415, 506, 507, 592, 593, 610, 611, 612, 613, 615, 616, 718, 779, 802, 825, 827, 829, 838, 916, 931, 986, 1020, 1029, 1102, 1194, 1195, 1196, 1216, 1219], "transfer": [48, 190, 251, 254, 331, 347, 384, 500, 602, 652, 753, 858, 887, 900, 901, 913, 914, 915, 976, 996, 1002, 1005, 1207, 1241, 1256], "scp": [48, 88, 92, 115, 137, 138, 178, 201, 229, 295, 304, 305, 325, 326, 369, 601, 602, 840, 860, 914, 915, 985, 996, 997, 998, 999, 1001, 1006, 1023, 1068, 1076, 1077, 1078], "192": [48, 222, 229, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 404, 860, 923, 1006], "168": [48, 222, 229, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 404, 860, 923, 1006, 1078], "82": [48, 200, 208, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1148, 1195, 1196], "prerequisit": [48, 95, 138, 267, 860, 993, 1117, 1246], "apt": [48, 54, 123, 201, 218, 267, 314, 316, 614, 867, 988, 993, 995, 1006, 1067, 1080, 1226, 1231], "python3": [48, 50, 54, 77, 172, 173, 188, 201, 209, 222, 228, 248, 258, 264, 274, 277, 281, 357, 1043, 1053, 1080, 1090, 1117, 1212, 1213, 1219, 1226], "along": [48, 173, 191, 197, 249, 262, 416, 464, 554, 838, 933, 1044, 1065, 1097], "omit": [48, 50, 188, 196, 209, 258, 264, 274, 277, 278, 281, 351, 367, 380, 402, 445, 482, 494, 506, 528, 546, 719, 742, 789, 865, 881, 931, 993, 994, 995, 1002, 1018, 1019, 1023, 1036, 1087, 1090, 1142, 1224], "bind": [48, 54, 55, 133, 191, 292, 314, 316, 344, 354, 373, 379, 381, 442, 449, 699, 742, 755, 782, 806, 807, 809, 815, 839, 840, 989, 1065, 1098, 1102, 1121, 1132, 1210, 1241, 1253, 1255], "cxx": [48, 534, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 838, 1066, 1067], "xf": [48, 54, 201, 913, 1080], "ld_library_path": [48, 537, 1083], "gpiod": [48, 50, 56, 867], "py3": [48, 172, 1146], "aarch64": [48, 188, 201, 1078], "born": [49, 51, 55, 926, 1115], "bound": [49, 50, 51, 55, 267, 271, 302, 314, 329, 379, 481, 491, 496, 501, 502, 626, 654, 655, 657, 675, 755, 840, 926, 930, 987, 1050, 1053, 1107, 1128, 1152, 1212], "employe": [49, 51, 55, 216, 248, 1106], "year": [49, 51, 55, 189, 190, 191, 192, 196, 201, 221, 261, 267, 309, 313, 504, 643, 727, 728, 730, 731, 734, 735, 736, 737, 738, 739, 741, 788, 840, 1148], "emploi": [49, 51, 55, 191, 201, 225, 465, 887], "pattern": [49, 51, 53, 73, 97, 133, 185, 203, 205, 224, 225, 251, 254, 277, 316, 357, 371, 373, 380, 406, 415, 504, 518, 519, 541, 542, 543, 544, 546, 547, 549, 551, 552, 553, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 642, 805, 806, 824, 840, 841, 948, 978, 1047, 1095, 1096, 1231, 1240, 1241, 1243, 1258, 1259], "led": [49, 51, 63, 64, 65, 69, 82, 117, 118, 119, 124, 125, 133, 207, 229, 305, 384, 407, 591, 840, 846, 986, 994], "hei": [49, 51, 190, 229, 281, 658, 659, 923, 1010, 1135, 1204], "reinvent": [49, 51, 249, 298, 725, 1191], "wheel": [49, 51, 116, 172, 725, 889, 925, 1021, 1219], "admit": [49, 51, 197], "notori": [49, 51], "fun": [49, 51, 122, 190, 195, 247, 249, 285, 314, 416, 548, 785, 887, 927, 986, 993, 994, 1094, 1106, 1118, 1134, 1191, 1225, 1241, 1250, 1251, 1252, 1254, 1255, 1262, 1264], "live": [49, 51, 61, 88, 89, 115, 120, 137, 191, 195, 212, 216, 221, 225, 230, 241, 249, 250, 251, 252, 265, 267, 275, 286, 293, 294, 295, 296, 298, 304, 306, 307, 314, 315, 316, 317, 318, 322, 325, 326, 340, 344, 353, 354, 369, 370, 372, 373, 379, 380, 381, 398, 402, 406, 407, 409, 416, 417, 477, 494, 506, 518, 534, 537, 548, 553, 562, 564, 566, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 676, 677, 697, 740, 751, 782, 783, 784, 801, 815, 838, 839, 840, 841, 851, 887, 917, 920, 921, 922, 927, 943, 944, 985, 1026, 1097, 1114, 1148, 1191, 1217, 1225, 1240, 1241, 1243, 1248, 1251], "session": [49, 51, 151, 195, 197, 214, 221, 225, 229, 233, 258, 264, 274, 277, 289, 293, 294, 296, 307, 315, 372, 404, 889, 918, 919, 1003, 1014, 1179, 1191, 1217, 1224], "simpl": [49, 51, 63, 65, 66, 69, 77, 113, 179, 190, 194, 195, 197, 200, 201, 209, 213, 216, 217, 221, 225, 228, 251, 267, 269, 271, 277, 281, 333, 336, 418, 419, 426, 465, 467, 481, 484, 491, 506, 508, 509, 511, 516, 519, 522, 528, 534, 535, 539, 547, 645, 652, 653, 690, 718, 727, 728, 730, 731, 734, 735, 736, 737, 738, 739, 759, 792, 802, 811, 840, 846, 860, 867, 879, 887, 889, 897, 924, 978, 986, 987, 993, 994, 1023, 1029, 1033, 1036, 1051, 1059, 1062, 1066, 1067, 1068, 1074, 1090, 1094, 1114, 1115, 1123, 1142, 1191, 1197, 1199, 1215, 1230, 1231, 1251, 1261], "thu": [49, 51, 190, 191, 192, 227, 380, 449, 544, 860, 865, 907, 914, 1019, 1203, 1249], "techniqu": [49, 51, 60, 61, 62, 484, 494, 600, 723, 989, 1245, 1251], "usag": [49, 51, 71, 97, 105, 111, 116, 133, 151, 152, 192, 197, 241, 251, 262, 275, 289, 314, 316, 317, 339, 354, 372, 379, 380, 384, 404, 416, 465, 490, 491, 498, 507, 512, 513, 518, 526, 530, 531, 535, 538, 548, 549, 562, 588, 589, 590, 642, 652, 654, 658, 659, 677, 712, 714, 715, 718, 719, 739, 741, 753, 764, 770, 784, 791, 824, 839, 840, 889, 925, 948, 978, 981, 996, 1027, 1030, 1031, 1047, 1084, 1089, 1092, 1142, 1185, 1187, 1219, 1226, 1233, 1241, 1244, 1252, 1254], "At": [49, 51, 128, 190, 191, 194, 197, 201, 221, 225, 251, 261, 265, 267, 301, 429, 458, 462, 494, 542, 800, 879, 1085, 1102, 1191], "flow": [49, 51, 191, 221, 226, 228, 229, 230, 231, 235, 240, 241, 256, 259, 272, 283, 399, 400, 401, 403, 438, 458, 466, 472, 476, 479, 483, 492, 494, 496, 501, 502, 744, 782, 791, 837, 839, 840, 1062, 1098, 1123, 1125, 1132, 1210, 1243, 1261, 1265], "event": [49, 50, 51, 53, 55, 77, 123, 127, 148, 193, 213, 249, 258, 262, 264, 274, 277, 305, 317, 318, 500, 770, 814, 822, 826, 840, 855, 856, 864, 889, 890, 902, 903, 904, 905, 908, 920, 921, 925, 985, 989, 1014, 1026, 1029, 1047, 1050, 1051, 1055, 1059, 1101, 1207, 1216, 1249, 1251, 1254, 1255], "save": [49, 50, 51, 76, 173, 189, 190, 202, 209, 212, 258, 264, 274, 277, 308, 311, 314, 367, 446, 448, 518, 742, 773, 776, 777, 778, 932, 950, 1005, 1014, 1053, 1083, 1087, 1093, 1103, 1136, 1196, 1226, 1241], "schedul": [49, 50, 51, 90, 101, 102, 115, 127, 137, 152, 190, 206, 229, 231, 295, 304, 305, 325, 369, 370, 411, 412, 542, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 869, 879, 885, 892, 907, 914, 915, 916, 917, 922, 924, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1033, 1042, 1044, 1045, 1049, 1053, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1203, 1245, 1249, 1250, 1254], "overhead": [49, 51, 380, 494, 500, 631, 640, 805, 806], "usual": [49, 51, 75, 99, 115, 190, 191, 197, 200, 209, 219, 221, 281, 315, 331, 347, 420, 460, 461, 487, 500, 504, 513, 516, 526, 537, 539, 542, 556, 564, 570, 599, 644, 659, 700, 755, 790, 791, 805, 814, 817, 838, 846, 858, 860, 865, 875, 881, 883, 887, 901, 903, 907, 924, 926, 930, 949, 986, 987, 994, 1015, 1029, 1049, 1050, 1065, 1066, 1067, 1068, 1078, 1082, 1087, 1088, 1089, 1090, 1094, 1097, 1100, 1101, 1107, 1109, 1111, 1112, 1114, 1117, 1123, 1128, 1197, 1198, 1204, 1226, 1227, 1233, 1245, 1251, 1256, 1262], "exhibit": [49, 51, 267, 371, 736, 995, 1016, 1021], "glitch": [49, 51, 192, 197, 994, 995], "caus": [49, 51, 144, 190, 193, 258, 264, 274, 277, 281, 380, 522, 725, 995, 1044, 1049, 1213], "hiccup": [49, 51, 197, 307, 1067], "twist": [49, 51, 871], "amazingli": [49, 51, 932, 1245], "download": [50, 97, 144, 166, 173, 180, 188, 189, 195, 197, 201, 209, 212, 221, 228, 233, 241, 243, 246, 249, 250, 251, 256, 259, 262, 272, 275, 278, 280, 283, 286, 289, 298, 301, 308, 312, 319, 336, 356, 362, 366, 389, 417, 507, 512, 516, 518, 519, 520, 522, 524, 525, 526, 528, 534, 591, 592, 593, 594, 595, 596, 597, 600, 601, 646, 725, 731, 733, 737, 738, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 792, 794, 948, 950, 970, 972, 986, 993, 994, 995, 1005, 1016, 1068, 1074, 1080, 1114, 1148, 1160, 1169, 1179, 1180, 1182, 1193, 1195, 1197, 1219], "multi": [50, 153, 154, 522, 1197, 1204], "chmod": [50, 197, 398, 914, 915, 933, 938, 940, 942, 945, 998, 1002], "snippet": [50, 53, 105, 108, 209, 228, 350, 383, 524, 706, 994, 1090], "subdirectori": [50, 133, 196, 216, 218, 241, 332, 348, 373, 374, 375, 376, 377, 378, 517, 523, 525, 526, 530, 533, 534, 536, 537, 585, 599, 840, 862, 913, 914, 915, 928, 938, 940, 957, 972, 977, 994, 995, 1078, 1179, 1231], "stuff": [50, 53, 61, 69, 91, 115, 124, 137, 168, 189, 192, 196, 209, 221, 225, 228, 241, 250, 251, 272, 286, 305, 307, 328, 370, 371, 384, 402, 500, 506, 512, 628, 674, 838, 840, 846, 855, 887, 917, 948, 956, 962, 968, 985, 993, 1023, 1087, 1089, 1146, 1186, 1191, 1193, 1224], "strace": [50, 53, 88, 137, 190, 192, 416, 845, 850, 903, 1012, 1018, 1033, 1049, 1058, 1065, 1245, 1252], "pid": [50, 53, 190, 192, 193, 499, 906, 919, 924, 926, 1033, 1049, 1052, 1058, 1062, 1063], "4677": 50, "11hello": 50, "clock_gettime64": 50, "clock_monoton": [50, 817, 1013, 1049], "tv_sec": [50, 1049], "164646": 50, "tv_nsec": [50, 1049], "833862215": 50, "_newselect": 50, "tv_usec": 50, "500000": [50, 988, 994, 1196], "unfinish": [50, 192], "4679": 50, "resum": [50, 772, 773, 776, 777, 778, 883, 1049], "timeout": [50, 812, 814, 816, 1012, 1219], "mi": [50, 269], "61": [50, 152, 165, 200, 210, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 398, 403, 1195, 1196], "845864201": 50, "4678": [50, 264], "fd": [50, 141, 200, 261, 305, 602, 846, 993, 1007, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1055, 1058, 1062, 1148], "fourth": 50, "involv": [50, 69, 190, 193, 197, 200, 251, 305, 317, 318, 339, 371, 404, 480, 488, 494, 500, 585, 652, 743, 858, 887, 986, 1066, 1076, 1078], "occasion": [50, 180, 221, 250, 267, 490, 504, 508, 736, 887, 932, 1114, 1128, 1245, 1263], "due": [50, 197, 221, 542, 806, 1219], "weird": [50, 144, 305, 350, 358, 490, 780, 819, 846, 871, 1044, 1062], "gil": [50, 221, 225, 317, 318, 339, 340, 343, 1191], "jitter": [50, 1051, 1053], "heavi": [50, 213, 221, 371, 552, 995, 1114], "usr": [50, 173, 190, 191, 195, 201, 209, 212, 217, 219, 241, 248, 249, 258, 261, 264, 274, 277, 281, 284, 287, 302, 307, 309, 319, 323, 345, 351, 357, 363, 395, 398, 513, 516, 520, 526, 534, 535, 537, 538, 539, 759, 792, 802, 838, 860, 887, 913, 919, 932, 944, 977, 980, 993, 995, 1043, 1053, 1062, 1065, 1066, 1067, 1068, 1078, 1081, 1083, 1090, 1093, 1117, 1179, 1194, 1207, 1219, 1226, 1233], "env": [50, 188, 191, 212, 307, 526, 1043, 1053, 1117, 1145, 1179, 1194, 1207], "def": [50, 53, 208, 209, 212, 222, 227, 228, 232, 237, 239, 240, 242, 245, 248, 249, 254, 255, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 307, 309, 319, 323, 329, 334, 337, 341, 345, 351, 357, 363, 367, 393, 394, 506, 784, 1043, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1100, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1118, 1121, 1131, 1132, 1137, 1141, 1173, 1179, 1186, 1187, 1188, 1207, 1213, 1215, 1224, 1225], "hello_left": 50, "print": [50, 208, 209, 211, 212, 222, 225, 227, 228, 232, 237, 239, 240, 241, 242, 245, 248, 249, 253, 254, 255, 258, 261, 262, 264, 269, 271, 274, 277, 280, 281, 284, 287, 290, 299, 302, 306, 307, 309, 319, 323, 329, 334, 340, 341, 345, 351, 356, 357, 363, 367, 390, 391, 392, 393, 394, 416, 423, 427, 429, 498, 526, 535, 672, 699, 722, 770, 784, 792, 794, 925, 926, 932, 948, 950, 951, 993, 1043, 1053, 1085, 1088, 1089, 1090, 1092, 1093, 1094, 1098, 1100, 1102, 1103, 1106, 1108, 1111, 1116, 1117, 1118, 1119, 1124, 1125, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1140, 1141, 1156, 1158, 1168, 1169, 1170, 1172, 1173, 1179, 1194, 1199, 1203, 1207, 1216], "hello_right": 50, "rjust": [50, 209, 277, 323], "60": [50, 97, 152, 165, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 289, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 393, 568, 569, 570, 582, 583, 584, 591, 930, 993, 994, 995, 1068, 1092, 1195, 1196], "hello_middl": 50, "center": [50, 53, 212, 254, 269, 271, 277, 281, 302, 309, 323, 341, 345, 351, 357, 363, 367, 392, 498, 598, 1245], "t1": [50, 208, 271, 281, 302, 306, 323, 345, 357, 1034], "t2": [50, 208, 264, 271, 281, 302, 345, 357, 1034], "t3": 50, "async": [50, 53, 54, 55, 190, 221, 225, 258, 264, 274, 275, 277, 340, 344, 770, 1041, 1064, 1191, 1253], "await": [50, 54, 340], "epoll_wait": 50, "201": [50, 193, 222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "multiplex": [50, 994, 1013, 1049], "create_task": 50, "sysf": [50, 115, 116, 117, 119, 125, 126, 136, 236, 305, 385, 386, 528, 530, 601, 840, 843, 844, 889, 985, 986, 993, 995, 1026, 1027, 1030, 1245, 1247], "unmaintain": [50, 295, 304, 305, 348, 1067, 1132], "immun": [50, 658, 817], "hotplug": [50, 993], "reset": [50, 189, 549, 551, 801, 802, 803, 818, 838, 1213, 1254], "pullup": 50, "pulldown": 50, "rpi": [50, 170, 201, 384, 887, 888, 993], "specif": [50, 54, 113, 193, 204, 258, 264, 265, 274, 277, 323, 329, 340, 371, 374, 377, 384, 417, 465, 482, 494, 544, 591, 594, 596, 599, 725, 745, 788, 802, 838, 846, 860, 883, 887, 913, 924, 986, 993, 995, 1009, 1015, 1033, 1034, 1059, 1065, 1078, 1089, 1097, 1098, 1200, 1216, 1224, 1253, 1254], "hope": [50, 190, 192, 195, 197, 201, 416], "major": [50, 195, 207, 258, 264, 274, 277, 314, 316, 379, 380, 504, 511, 514, 658, 846, 853, 918, 1050, 1115, 1121, 1136], "releas": [50, 173, 188, 193, 218, 332, 348, 357, 374, 375, 376, 377, 378, 465, 517, 523, 533, 536, 802, 813, 814, 816, 840, 846, 860, 986, 993, 1038, 1043, 1080, 1083, 1115, 1225], "ton": [50, 800, 927, 990, 1015, 1049, 1053, 1241], "bartosz": 50, "golaszewski": 50, "gpiochip0": [50, 867, 1029], "ioctl": [50, 153, 154, 305, 486, 853, 855, 881, 889, 890, 895, 901, 989, 993], "crw": [50, 851, 918, 970, 993, 994, 995], "254": [50, 210, 261, 264, 269, 271, 274, 281, 284, 302, 309, 319, 323, 329, 345, 357, 363, 367], "13": [50, 97, 151, 171, 193, 195, 202, 208, 210, 211, 222, 227, 230, 234, 237, 239, 242, 245, 248, 253, 255, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 307, 310, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 393, 394, 415, 498, 505, 516, 538, 644, 759, 801, 819, 851, 930, 970, 994, 1019, 1029, 1051, 1080, 1087, 1089, 1130, 1141, 1195, 1196, 1219], "request": [50, 53, 84, 89, 116, 132, 191, 192, 195, 251, 253, 278, 284, 340, 357, 505, 544, 566, 580, 749, 750, 753, 754, 845, 889, 1015, 1030, 1224], "27": [50, 88, 115, 151, 200, 202, 210, 211, 222, 232, 237, 239, 241, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 280, 281, 284, 287, 289, 290, 299, 302, 306, 309, 313, 319, 323, 329, 336, 341, 345, 351, 357, 363, 367, 374, 377, 390, 392, 393, 395, 415, 506, 524, 600, 625, 792, 970, 993, 995, 1065, 1195, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "request_lin": [50, 53], "consum": [50, 133, 148, 192, 195, 211, 261, 340, 373, 498, 509, 564, 814, 816, 912, 920, 921, 928, 1038, 1039, 1050, 1055, 1057, 1059, 1062, 1090, 1112, 1121, 1148, 1203, 1249], "mytest": 50, "config": [50, 88, 120, 121, 153, 181, 182, 188, 191, 193, 195, 201, 208, 302, 319, 323, 373, 378, 379, 380, 402, 409, 417, 507, 512, 601, 802, 840, 860, 888, 970, 993, 994, 1002, 1080, 1090, 1219], "lineset": 50, "set_valu": [50, 53, 816], "all_io": 50, "22": [50, 88, 96, 97, 115, 151, 192, 195, 200, 202, 210, 211, 222, 227, 229, 232, 237, 238, 239, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 330, 333, 334, 336, 341, 351, 357, 363, 367, 390, 392, 393, 394, 415, 838, 933, 970, 995, 996, 1004, 1005, 1020, 1066, 1067, 1068, 1153, 1195, 1196, 1262], "17": [50, 87, 97, 115, 151, 166, 195, 201, 208, 210, 211, 222, 227, 229, 232, 237, 239, 242, 245, 248, 253, 254, 258, 263, 265, 266, 270, 271, 272, 274, 277, 281, 284, 290, 293, 294, 300, 302, 306, 309, 313, 319, 324, 329, 333, 334, 336, 341, 345, 351, 357, 367, 390, 393, 394, 415, 652, 699, 741, 750, 759, 780, 792, 802, 822, 838, 851, 887, 918, 970, 995, 1011, 1017, 1049, 1053, 1068, 1081, 1110, 1153, 1195, 1196, 1204, 1216], "25": [50, 88, 200, 201, 210, 211, 212, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 275, 277, 280, 281, 284, 287, 289, 290, 299, 302, 306, 309, 313, 319, 323, 329, 336, 341, 345, 351, 357, 363, 367, 384, 393, 394, 415, 636, 637, 759, 796, 821, 867, 970, 995, 1065, 1092, 1135, 1180, 1182, 1186, 1188, 1195, 1196, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "18": [50, 154, 173, 193, 200, 201, 210, 211, 227, 232, 237, 239, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 270, 271, 277, 281, 284, 287, 290, 299, 303, 305, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 363, 367, 391, 393, 394, 397, 415, 652, 716, 781, 789, 801, 840, 851, 860, 887, 925, 931, 933, 967, 970, 985, 995, 1019, 1021, 1057, 1068, 1076, 1077, 1078, 1081, 1109, 1110, 1146, 1153, 1195, 1196], "16": [50, 195, 197, 198, 200, 208, 210, 211, 216, 217, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 303, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 390, 391, 392, 393, 394, 398, 403, 404, 415, 438, 482, 489, 500, 534, 663, 721, 801, 865, 877, 970, 988, 993, 995, 1006, 1011, 1012, 1020, 1029, 1065, 1067, 1080, 1081, 1086, 1093, 1096, 1121, 1148, 1195, 1196, 1226], "24": [50, 88, 96, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 193, 200, 207, 210, 211, 212, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 323, 329, 334, 341, 351, 357, 363, 367, 390, 391, 393, 394, 415, 524, 539, 735, 737, 759, 801, 802, 840, 887, 914, 915, 970, 993, 1065, 1083, 1109, 1195, 1196], "23": [50, 115, 156, 193, 200, 201, 202, 207, 210, 211, 212, 222, 227, 229, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 275, 277, 280, 281, 284, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 415, 470, 506, 535, 770, 821, 933, 970, 993, 994, 1078, 1148, 1153, 1195, 1196, 1226, 1233], "14": [50, 151, 200, 210, 211, 222, 227, 234, 237, 239, 241, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 289, 290, 293, 299, 302, 306, 309, 313, 319, 323, 329, 340, 341, 343, 345, 351, 357, 363, 367, 390, 391, 393, 394, 395, 415, 506, 532, 539, 540, 549, 643, 716, 741, 753, 792, 794, 802, 804, 838, 930, 933, 945, 970, 973, 993, 994, 995, 997, 1012, 1021, 1053, 1065, 1066, 1067, 1087, 1103, 1195, 1196, 1240, 1262], "transform": [50, 53, 176, 209, 224, 225, 228, 230, 240, 245, 246, 248, 249, 256, 267, 269, 272, 275, 298, 305, 307, 316, 322, 340, 353, 371, 375, 383, 494, 605, 606, 618, 620, 672, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 770, 794, 840, 1076, 1096, 1140, 1174, 1191], "ntime": [50, 831, 1100], "task": [50, 53, 68, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 246, 259, 272, 286, 289, 292, 322, 328, 402, 405, 407, 408, 411, 412, 413, 416, 524, 840, 914, 915, 933, 976, 985, 993, 996, 1011, 1026, 1034, 1047, 1048, 1050, 1051, 1191, 1224], "interv": [50, 80, 120, 228, 258, 264, 265, 274, 277, 281, 302, 340, 402, 586, 588, 601, 602, 742, 816, 817, 1013, 1023, 1049, 1053], "none": [50, 128, 161, 172, 189, 190, 195, 200, 208, 210, 222, 232, 239, 240, 249, 254, 255, 258, 261, 264, 270, 271, 274, 277, 281, 284, 290, 299, 302, 306, 307, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 484, 485, 506, 522, 535, 649, 735, 737, 1012, 1029, 1059, 1087, 1090, 1112, 1138, 1146, 1216, 1231], "itertool": [50, 286, 288, 340, 1094], "cram": [50, 219, 380, 512, 855, 1049, 1087, 1204, 1260], "goe": [50, 76, 113, 123, 193, 195, 209, 314, 494, 549, 614, 716, 737, 746, 796, 851, 887, 930, 931, 1018, 1047, 1053, 1063, 1066, 1074, 1117, 1120, 1140], "stuff_raw": 50, "mod": [50, 277, 302, 322, 865], "sidewai": [50, 225, 228, 283, 411, 412, 1095, 1096], "numpi": [50, 221, 225, 240, 259, 265, 272, 307, 313, 341, 343, 346, 368, 506, 1114, 1194, 1197, 1209, 1219, 1226, 1262, 1263], "transpos": [50, 948], "col": 50, "tolist": 50, "outsid": [50, 141, 277, 522, 553, 566, 646, 654, 658, 801, 802, 877, 949, 1034, 1050, 1090], "instanti": [50, 124, 248, 380, 402, 512, 544, 555, 569, 570, 583, 584, 585, 588, 669, 698, 716, 738, 764, 770, 792, 805, 806, 1102, 1103, 1194], "coro": [50, 770, 772, 773, 775, 776, 777, 778], "cannot": [50, 101, 102, 154, 190, 191, 192, 197, 201, 211, 212, 218, 219, 221, 228, 248, 281, 308, 311, 345, 384, 460, 461, 464, 465, 484, 486, 488, 491, 494, 507, 509, 513, 522, 526, 537, 547, 570, 598, 637, 646, 649, 651, 654, 677, 712, 713, 715, 716, 718, 719, 723, 743, 746, 749, 755, 781, 791, 792, 796, 802, 804, 814, 816, 824, 883, 887, 892, 907, 925, 930, 933, 944, 959, 967, 1004, 1050, 1059, 1082, 1083, 1084, 1088, 1090, 1102, 1107, 1114, 1122, 1123, 1129, 1130, 1140, 1210, 1212, 1213, 1224, 1249], "stuff_raw2": 50, "01": [50, 87, 88, 96, 97, 106, 114, 115, 165, 195, 200, 202, 208, 212, 230, 241, 248, 255, 264, 270, 277, 289, 306, 307, 309, 313, 352, 395, 397, 411, 412, 415, 493, 506, 532, 534, 627, 628, 817, 916, 944, 995, 1051, 1053, 1081, 1179, 1195, 1224, 1262], "05": [50, 88, 115, 151, 193, 200, 248, 283, 306, 313, 324, 333, 336, 397, 415, 538, 1195], "runtimeerror": [50, 212, 248, 302, 383, 1087, 1089], "reus": [50, 113, 210, 1082, 1132], "alreadi": [50, 71, 115, 124, 140, 190, 191, 193, 201, 211, 213, 221, 225, 281, 308, 311, 477, 488, 494, 514, 546, 566, 568, 579, 582, 601, 618, 697, 840, 846, 860, 867, 875, 885, 887, 890, 907, 985, 993, 994, 995, 1002, 1015, 1016, 1018, 1023, 1024, 1026, 1045, 1081, 1087, 1114, 1140, 1219, 1224, 1226, 1233], "bare": [50, 69, 71, 78, 80, 99, 170, 190, 416, 986, 994], "create_coro": 50, "ctor": [50, 216, 225, 274, 323, 356, 380, 598, 620, 628, 645, 648, 649, 652, 654, 661, 663, 698, 721, 746, 747, 749, 753, 754, 779, 787, 802, 818, 819, 906], "nest": [50, 249, 262, 271, 281, 288, 292, 309, 319, 428, 457, 458, 484, 518, 725, 764, 816, 834, 892, 1087, 1130], "_blink": 50, "coro_cr": 50, "creator": [50, 186, 201], "create_factory_for_blink": 50, "blinkfunc": 50, "view": [50, 151, 195, 196, 200, 210, 212, 225, 227, 293, 294, 298, 305, 353, 354, 367, 372, 379, 416, 432, 434, 497, 744, 782, 791, 793, 839, 840, 914, 915, 925, 932, 986, 995, 997, 1068, 1121, 1190, 1241, 1242, 1249], "blink_func": 50, "stuff_decorator_stage1": 50, "stage1": 50, "stararg": [50, 1088, 1112, 1260], "func": [50, 248, 258, 264, 274, 277, 308, 322, 604, 672, 742, 757, 764, 805, 1088, 1092], "becom": [50, 59, 69, 80, 83, 123, 128, 132, 190, 192, 217, 229, 308, 311, 331, 333, 336, 347, 443, 473, 475, 482, 485, 506, 528, 542, 546, 585, 746, 801, 802, 803, 887, 925, 944, 978, 994, 995, 1002, 1047, 1050, 1051, 1087, 1093, 1123, 1225, 1231, 1242, 1256], "obsolet": [50, 221, 1114], "prog": [50, 262, 383], "demo": [50, 53, 88, 89, 113, 115, 123, 133, 137, 145, 146, 190, 212, 216, 221, 224, 226, 229, 230, 233, 241, 248, 256, 259, 262, 265, 267, 272, 278, 295, 298, 301, 304, 305, 325, 326, 369, 370, 373, 375, 398, 416, 507, 511, 526, 532, 534, 537, 538, 539, 588, 596, 726, 803, 840, 917, 920, 921, 922, 943, 944, 985, 1014, 1058, 1067, 1114, 1197, 1230], "opposit": [50, 194, 380, 458, 995, 1050, 1204], "futur": [50, 53, 115, 131, 197, 261, 281, 293, 294, 296, 305, 353, 372, 373, 381, 389, 411, 412, 482, 524, 566, 736, 770, 812, 814, 815, 839, 840, 897, 1241], "blueprint": 53, "box": [53, 178, 182, 221, 986, 993, 1114], "quickli": [53, 229, 316, 331, 343, 344, 347, 381, 401, 464, 544, 994, 1256], "glt2024": [53, 54], "matrix": [53, 210, 212, 313, 405, 407, 495], "complain": [53, 192, 201, 218, 444, 637, 652, 653, 862, 890, 1002], "forev": [53, 211, 464, 465], "wait_button": 53, "enclos": [53, 209, 277, 457], "secon": 53, "edg": [53, 207, 251, 513, 869, 1029, 1030], "timestamp": [53, 120, 254, 264, 284, 313, 317, 318, 339, 341, 343, 345, 351, 373, 506, 806, 848, 950, 970, 1005, 1058], "bounc": [53, 495, 906], "debounce_period": 53, "second": [53, 80, 168, 189, 192, 193, 197, 208, 221, 227, 248, 254, 258, 262, 264, 269, 274, 277, 281, 307, 309, 371, 384, 418, 428, 482, 498, 506, 508, 509, 510, 511, 516, 518, 522, 526, 534, 535, 537, 538, 539, 540, 578, 582, 583, 584, 588, 591, 601, 637, 652, 699, 701, 702, 742, 771, 772, 791, 802, 803, 816, 817, 834, 835, 836, 897, 925, 930, 933, 994, 1013, 1016, 1023, 1049, 1058, 1062, 1066, 1067, 1082, 1083, 1084, 1134, 1142, 1219, 1231, 1241, 1244], "print_ev": 53, "aha": [53, 192, 211, 222, 383, 850, 867, 994, 1204, 1231], "asynchron": [53, 54, 190, 258, 264, 274, 277, 344, 384, 1010, 1027, 1030, 1062, 1063, 1143], "imageview": 53, "vimg": 53, "img": [53, 178, 210, 212, 367, 493, 887, 993], "tab": [53, 195, 196, 208, 277, 305, 323, 389, 439, 887, 948, 1134, 1160, 1250], "dbu": [53, 54, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 926], "termin": [53, 55, 120, 189, 191, 195, 208, 219, 241, 287, 289, 305, 308, 311, 314, 316, 318, 419, 422, 426, 429, 432, 439, 451, 457, 480, 500, 506, 514, 515, 540, 542, 568, 569, 601, 620, 649, 770, 776, 803, 809, 903, 923, 926, 930, 931, 932, 948, 970, 981, 982, 1015, 1035, 1039, 1044, 1049, 1061, 1062, 1063, 1119, 1121, 1125, 1140, 1153, 1170, 1198, 1204, 1207, 1254], "busctl": 53, "introspect": [53, 173, 1049, 1252], "outcom": [54, 180, 225, 230, 316, 373, 380, 416, 887, 947, 948, 1074, 1147], "en": [54, 69, 158, 162, 163, 173, 188, 195, 206, 216, 277, 305, 721], "latest": [54, 158, 173, 188, 201, 514, 517, 843, 858, 864, 1219], "async_watch_line_valu": 54, "find_line_by_nam": 54, "get_chip_info": 54, "get_line_info": 54, "get_line_valu": 54, "get_multiple_line_valu": 54, "makefil": [54, 59, 88, 151, 173, 251, 294, 296, 534, 540, 856, 860, 888, 889, 1070, 1074, 1076, 1083, 1084], "reconfigure_input_to_output": 54, "toggle_line_valu": 54, "toggle_multiple_line_valu": 54, "watch_line_info": 54, "watch_line_ris": 54, "watch_line_valu": 54, "watch_multiple_line_valu": 54, "yuri": [54, 1143], "selivanov": [54, 1143], "awesom": [54, 241, 1224], "david": [54, 221, 224, 225, 233, 246, 249, 272, 298, 313, 317, 318, 322, 339, 343, 344, 399, 400, 750, 799], "beazlei": [54, 221, 224, 225, 233, 246, 249, 272, 298, 317, 318, 322, 339, 343, 344, 399, 400], "lennart": 54, "p\u00f6ttere": 54, "recommend": [54, 170, 201, 221, 229, 241, 274, 494, 666, 697, 887, 948, 994, 1146, 1200, 1208, 1257], "0pointer": 54, "blog": [54, 188, 190, 193, 200, 804], "api": [54, 123, 190, 197, 213, 236, 250, 277, 409, 413, 840, 843, 850, 858, 865, 869, 881, 985, 1026, 1040, 1048, 1051, 1059, 1146, 1202, 1220, 1245, 1248, 1249], "systemd": [54, 55, 188, 206, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 370, 887, 926, 980, 995, 1062], "freedesktop": [54, 229], "wiki": [54, 188, 193, 206, 317, 318, 339, 343, 860, 887], "libssl": [54, 867, 993], "libreadlin": 54, "libffi": 54, "libsystemd": 54, "wget": [54, 178, 188, 195, 197, 201, 319, 1078, 1080], "ftp": [54, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 976, 1080], "readlin": [54, 212, 239, 241, 248, 249, 261, 262, 268, 277, 284, 309, 319, 345, 351, 357, 363, 370, 390, 948, 1140], "love": [55, 173, 315, 1186], "allow": [55, 227, 228, 248, 277, 380, 437, 482, 504, 729, 802, 838, 869, 892, 1153, 1224, 1241], "style": [55, 120, 190, 195, 258, 264, 267, 274, 277, 316, 372, 380, 381, 490, 505, 506, 507, 620, 645, 646, 651, 684, 718, 721, 733, 742, 747, 778, 794, 820, 824, 828, 829, 830, 831, 839, 840, 855, 904, 1029, 1118, 1160, 1185, 1196], "isn": [55, 189, 242, 308, 311, 406, 419, 470, 530, 676, 680, 719, 743, 770, 790, 993, 1134, 1231], "subsystem": [55, 77, 88, 89, 94, 95, 115, 136, 207, 229, 236, 241, 278, 294, 296, 298, 304, 305, 314, 316, 317, 333, 339, 370, 375, 378, 840, 865, 883, 897, 917, 922, 924, 985, 986, 993, 994, 995, 1029, 1047, 1089, 1224, 1245, 1247, 1249], "stori": [55, 190, 191, 192, 196, 197, 201, 217, 218, 250, 313, 475, 628, 646, 659, 824, 862, 865, 888, 927, 989, 1006], "pointlessli": 55, "light": [55, 75, 200, 927, 1224, 1248], "notifi": [55, 548, 814, 1010, 1059, 1207], "press": [55, 168, 189, 867, 904, 948, 986], "hint": [55, 115, 128, 141, 277, 289, 318, 421, 544, 604, 614, 618, 729, 914, 915, 928, 998, 1049], "asyncron": 55, "fit": [55, 95, 201, 205, 210, 212, 367, 373, 438, 443, 543, 666, 742, 764, 819, 846, 887, 986, 1194, 1196, 1255, 1263], "addition": [55, 97, 189, 192, 380, 443, 547, 564], "textual": [55, 56, 219, 221, 599], "sdbu": [55, 56], "client": [55, 113, 123, 153, 170, 195, 197, 207, 252, 256, 284, 298, 504, 552, 553, 566, 805, 806, 989, 1002, 1004, 1012, 1059, 1203, 1219], "glt": 56, "2023": [56, 87, 97, 114, 115, 306, 307, 310, 313, 324, 330, 341, 352, 362, 364, 374, 377, 415, 505, 506, 795, 819, 1068], "libgpiod": [56, 125, 132, 170, 344, 384, 386, 840], "raspberri": [56, 69, 88, 95, 97, 123, 136, 154, 158, 159, 170, 185, 187, 202, 205, 231, 305, 344, 401, 403, 404, 415, 602, 840, 864, 868, 887, 891, 896, 902, 905, 908, 985, 992, 994, 995, 1006, 1053, 1066, 1068, 1073, 1076, 1078, 1080, 1117, 1207, 1245, 1246, 1253, 1260, 1261, 1263, 1264], "2024": [56, 114, 151, 152, 156, 165, 166, 169, 264, 382, 415], "taskgroup": 56, "intro": [56, 84, 115, 132, 133, 151, 216, 240, 250, 259, 272, 273, 286, 289, 308, 311, 316, 322, 328, 340, 381, 416, 642, 742, 750, 770, 794, 840, 985, 1009, 1026, 1028, 1030, 1191, 1242, 1243, 1253, 1261, 1265], "biographi": [56, 249, 298, 344, 1191], "knapp": 57, "wehr": 57, "schleus": 57, "vorbei": [57, 212, 271, 277, 1258], "recht": [57, 121, 174, 198, 199, 208, 216, 222, 233, 242, 357, 1247], "anlegeplattform": 57, "rau": [57, 198, 271], "ersten": [57, 222, 224, 237, 329, 390, 1259], "kurv": 57, "anlegebucht": 57, "pennen": 57, "oberm\u00fchl": 57, "gasthau": 57, "rauf": [57, 198], "wies": 57, "steg": 57, "darunt": 57, "ist": [57, 152, 165, 198, 199, 206, 207, 208, 212, 216, 224, 232, 233, 237, 239, 242, 243, 245, 248, 252, 254, 258, 261, 262, 267, 268, 269, 271, 274, 277, 280, 284, 290, 299, 309, 323, 341, 351, 357, 367, 390, 393, 394, 398, 403, 416, 460, 528, 1051, 1209, 1238, 1239, 1240, 1247, 1258, 1259], "ramp": [57, 161], "h\u00f6he": 57, "schleusenmau": 57, "mal": [57, 199, 212, 222, 233, 284, 351, 416, 1240], "schaun": 57, "innbach": 57, "m\u00fcndung": 57, "schotterbank": 57, "altarm": 57, "gatschinsel": 57, "unterhalb": [57, 977], "anfangt": 57, "br\u00fccke": 57, "westr": 57, "danach": [57, 207], "hauptbr\u00fcck": 57, "schiffsanlegestel": 57, "eingang": [57, 199], "bissl": [57, 252], "rein": [57, 199, 208, 233, 1247], "zelten": 57, "den": [57, 152, 165, 199, 206, 207, 208, 212, 216, 222, 224, 232, 233, 238, 245, 252, 281, 329, 398, 399, 403, 416, 909, 1238, 1239, 1240, 1247, 1258, 1259], "hinten": [57, 199], "sch\u00f6n": 57, "m\u00fchl": 57, "noch": [57, 198, 199, 208, 212, 216, 222, 232, 233, 237, 239, 242, 245, 248, 258, 271, 277, 278, 281, 302, 309, 416, 1240], "sch\u00f6ner": [57, 199, 222], "abschnitt": 57, "inseln": 57, "dornach": 57, "steinbruch": 57, "davor": [57, 199, 240], "freizeithafen": 57, "steckerlfisch": 57, "rechtskurv": 57, "insel": 57, "eher": [57, 198, 233], "langweilig": 57, "gesehen": [57, 199, 222, 228, 262], "mole": 57, "schiffen": 57, "glaub": [57, 198, 206, 207], "schling": 57, "marbach": 57, "campingplatz": 57, "app": [57, 191, 195, 507, 515, 1049, 1203], "goo": 57, "b1o63g8mdg1umnn29": 57, "unterm": 57, "hafenst\u00fcberl": 57, "luberegg": 57, "hinter": 57, "schaut": 57, "vielleicht": [57, 198, 222, 233, 284, 1240], "reinschauen": [57, 233], "weissenkirchen": 57, "krem": 57, "evtl": 57, "paar": [57, 198, 207, 222, 224, 232, 239, 271, 398, 403, 1259], "geil": 57, "str\u00e4nde": 57, "schon": [57, 198, 199, 207, 222, 224, 232, 262, 416, 1238, 1240, 1247], "langenzersdorf": 57, "langsam": [57, 216, 222, 271], "grillen": 57, "increasingli": 59, "whose": [59, 201, 258, 264, 274, 277, 313, 323, 411, 412, 564, 634, 737, 738, 986, 1090, 1224, 1231, 1245], "mainten": [59, 439, 465, 484, 1083], "easier": [59, 71, 76, 83, 210, 251, 506, 552, 656, 741, 887, 1241], "never": [59, 101, 102, 190, 191, 192, 197, 209, 271, 277, 281, 323, 341, 443, 464, 480, 491, 494, 504, 542, 564, 643, 723, 725, 802, 824, 825, 827, 829, 927, 986, 1009, 1036, 1066], "simpler": [59, 201, 251, 315, 318, 422, 481, 509, 680, 883, 887, 994, 1006], "wors": [59, 180, 193, 277, 490, 506, 764, 1011, 1227], "everytbodi": 60, "runtim": [60, 148, 173, 190, 201, 222, 226, 250, 274, 277, 357, 380, 419, 440, 488, 498, 499, 524, 526, 537, 539, 568, 569, 582, 596, 631, 640, 679, 697, 698, 742, 784, 791, 805, 806, 1034, 1065, 1071, 1072, 1102, 1120, 1132, 1197, 1198], "dispatch": [60, 340, 357, 380, 631, 640, 715, 718, 719, 823, 824, 825, 827, 831, 839, 840], "hell": [60, 241, 275, 490, 543, 756, 787, 809, 877, 912, 1041, 1204], "destructor": [60, 61, 88, 97, 123, 133, 251, 267, 288, 314, 316, 354, 379, 380, 400, 401, 548, 562, 590, 600, 614, 620, 629, 635, 642, 643, 644, 645, 650, 652, 666, 714, 715, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 755, 782, 798, 807, 813, 815, 819, 824, 837, 839, 840, 848, 879, 892, 904, 1236], "opportun": [60, 197, 200, 209, 221, 240, 494, 733, 1103, 1242], "shoot": [60, 950], "oneself": [60, 1249], "encapsul": [61, 64, 249, 262, 267, 314, 316, 340, 379, 380, 384, 504, 544, 548, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 642, 643, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 751, 782, 798, 807, 815, 824, 837, 839, 840, 856, 889, 1059, 1115, 1243], "hide": [61, 250, 262, 318, 1115], "fanci": [61, 1135, 1197, 1217], "whatnot": [61, 265, 814, 887, 986, 994, 1012, 1044], "boost": [62, 267, 532, 539, 620, 770, 1052, 1259], "feel": [62, 190, 192, 201, 221, 371, 637, 734, 736, 737, 742, 1033, 1051, 1114, 1245], "cluster_ecpropos": [63, 64, 65, 78, 840], "cluster_ecproposal_ec1": [63, 64, 65, 78, 840], "cluster_ecproposal_ec1_linux": [63, 64, 65, 840], "cluster_ecproposal_ec1_mt": [63, 64, 65, 78, 840], "cluster_ecproposal_ec1_cxx": [63, 64, 65, 78, 840], "cluster_ecproposal_ec2": [63, 65, 840], "cluster_ecproposal_ec2_python": [63, 65, 840], "ecproposal_ec1_git": [63, 64, 65, 840], "ecproposal_ec1_linux_exercise_sensor": [63, 64, 65, 840], "ex": [63, 64, 65, 69, 78, 180, 249, 262, 614, 631, 792, 840, 933, 948, 1226], "temperatur": [63, 64, 65, 69, 73, 82, 85, 88, 105, 110, 111, 115, 116, 117, 118, 123, 124, 125, 133, 136, 141, 153, 154, 166, 225, 258, 305, 340, 353, 354, 380, 404, 407, 421, 423, 425, 543, 549, 554, 575, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 602, 613, 631, 642, 719, 752, 823, 825, 827, 829, 840, 887, 985, 992, 994, 1024, 1026, 1045, 1102, 1179, 1194, 1195, 1196, 1197], "ecproposal_ec1_linux_dev_mgmt": [63, 64, 65, 840], "ecproposal_ec1_cxx_ifac": [63, 64, 65, 840], "ecproposal_ec1_cxx_build": [63, 64, 65, 78, 840], "ecproposal_ec1_linux_gpio": [63, 64, 65, 840], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [63, 64, 65, 840], "averag": [63, 64, 65, 69, 75, 76, 225, 261, 265, 281, 316, 340, 379, 547, 563, 593, 600, 840, 1053, 1148], "ecproposal_ec1_linux_exercise_avg_sensor": [63, 64, 65, 840], "ecproposal_ec1_mt_wait": [63, 64, 65, 78, 840], "ecproposal_ec1_mt_exercise_mt_race_fix": [63, 64, 65, 78, 840], "avoid": [63, 64, 65, 69, 78, 190, 197, 281, 374, 377, 430, 465, 563, 598, 600, 610, 644, 648, 698, 840, 885, 978, 994, 1243, 1254], "ecproposal_ec1_cxx_unittest": [63, 64, 65, 840], "ecproposal_ec1_linux_bas": [63, 64, 65, 840], "ecproposal_ec1_linux_exercise_led_displai": [63, 64, 65, 840], "displai": [63, 64, 65, 69, 103, 104, 106, 107, 114, 116, 125, 133, 195, 258, 264, 274, 277, 302, 305, 307, 309, 314, 319, 323, 345, 351, 357, 363, 407, 498, 591, 840, 923, 970, 980, 993, 1049, 1226], "ecproposal_ec1_mt_exercise_mt_rac": [63, 64, 65, 78, 840], "ecproposal_ec1_mt_lock": [63, 64, 65, 78, 840], "semaphor": [63, 64, 65, 67, 69, 78, 80, 187, 213, 214, 236, 258, 264, 274, 277, 416, 814, 840, 879, 1038, 1249, 1251, 1253], "ecproposal_ec1_cxx_oo_bas": [63, 64, 65, 840], "ecproposal_ec2_python_bas": [63, 65, 840], "ecproposal_ec2_python_exercise_avg_displai": [63, 65, 840], "ecproposal_ec2_python_exercise_sensor": [63, 65, 840], "ecproposal_ec2_python_web_sensor": [63, 65, 840], "ecproposal_ec2_python_flask": [63, 65, 840], "qualiti": [64, 197, 250, 313, 994, 1264], "assur": 64, "characterist": 64, "polymorph": [65, 97, 115, 116, 131, 248, 249, 262, 314, 316, 318, 333, 336, 506, 507, 548, 562, 590, 642, 714, 715, 718, 719, 739, 800, 805, 823, 824, 825, 839, 840, 1241, 1242], "concurr": [65, 221, 225, 275, 344, 792, 877, 1098, 1191], "templat": [65, 97, 151, 152, 161, 216, 251, 292, 314, 319, 354, 373, 400, 401, 511, 590, 609, 642, 643, 686, 692, 696, 697, 704, 705, 706, 708, 727, 734, 735, 736, 737, 738, 739, 746, 752, 757, 760, 761, 762, 763, 767, 768, 770, 773, 800, 804, 806, 814, 816, 823, 824, 825, 827, 829, 831, 838, 839, 840, 1036, 1240, 1243], "increment": [66, 207, 250, 264, 267, 290, 313, 422, 426, 430, 450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 620, 637, 744, 782, 837, 839, 840, 919, 1035, 1036, 1037, 1058, 1059, 1098], "turn": [66, 101, 102, 148, 161, 166, 190, 192, 195, 200, 201, 221, 225, 241, 250, 267, 313, 371, 380, 398, 494, 516, 518, 524, 535, 566, 591, 592, 749, 764, 944, 986, 988, 993, 994, 995, 1065, 1067, 1071, 1072, 1082, 1090, 1095, 1096, 1106, 1108, 1217], "lossi": 66, "access": [67, 69, 79, 101, 102, 105, 111, 120, 148, 163, 191, 192, 193, 195, 197, 209, 219, 229, 236, 248, 258, 261, 264, 267, 274, 277, 284, 287, 302, 305, 309, 319, 323, 333, 345, 350, 351, 357, 363, 384, 398, 401, 403, 434, 473, 494, 495, 522, 526, 553, 569, 594, 595, 596, 597, 620, 643, 656, 659, 660, 662, 663, 677, 702, 716, 723, 727, 730, 731, 734, 735, 736, 737, 738, 739, 753, 770, 785, 789, 801, 840, 845, 855, 858, 864, 875, 883, 887, 889, 905, 920, 921, 924, 933, 935, 936, 942, 959, 985, 995, 1004, 1005, 1011, 1015, 1019, 1021, 1025, 1029, 1031, 1032, 1035, 1049, 1050, 1058, 1063, 1065, 1085, 1090, 1097, 1098, 1101, 1120, 1127, 1129, 1142, 1159, 1195, 1212, 1226, 1249, 1251, 1261], "flavor": [67, 78, 190, 534, 791, 796, 1245], "stash": 68, "resolv": [68, 113, 176, 201, 258, 261, 264, 267, 274, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 461, 487, 655, 1006, 1065, 1068, 1195, 1196], "suffic": [68, 197, 432, 482], "purpos": [68, 69, 71, 120, 131, 148, 191, 195, 201, 221, 240, 258, 264, 274, 277, 289, 302, 371, 372, 401, 428, 506, 525, 528, 540, 645, 676, 716, 806, 819, 887, 920, 921, 930, 994, 1016, 1021, 1044, 1065, 1084, 1114, 1196, 1225, 1245, 1247], "unifi": [69, 128, 228, 669], "intention": [69, 250, 323, 757], "power": [69, 80, 162, 189, 191, 203, 205, 210, 250, 267, 331, 332, 347, 348, 376, 380, 399, 400, 401, 416, 418, 430, 431, 473, 482, 887, 897, 904, 918, 986, 990, 993, 994, 995, 1014, 1029, 1049, 1053, 1109, 1115, 1121, 1126, 1138, 1143, 1214, 1243, 1251, 1257, 1258, 1260, 1261], "being": [69, 72, 116, 180, 190, 193, 194, 200, 213, 221, 227, 248, 277, 281, 340, 354, 373, 379, 398, 443, 470, 487, 522, 543, 546, 631, 654, 697, 800, 802, 806, 808, 814, 838, 869, 883, 887, 923, 1006, 1021, 1049, 1097, 1104, 1114, 1117, 1195, 1233, 1236, 1245, 1249], "address": [69, 90, 97, 101, 102, 115, 116, 137, 148, 163, 168, 190, 192, 193, 194, 197, 229, 236, 241, 248, 250, 251, 267, 269, 295, 304, 305, 316, 325, 326, 367, 369, 370, 395, 400, 401, 409, 461, 463, 472, 476, 479, 482, 483, 491, 492, 496, 501, 502, 542, 548, 553, 556, 562, 564, 566, 571, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 642, 652, 656, 744, 754, 755, 782, 796, 815, 837, 839, 840, 867, 871, 883, 885, 914, 915, 916, 917, 920, 921, 922, 924, 928, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985, 987, 989, 994, 995, 997, 998, 999, 1000, 1001, 1006, 1008, 1012, 1014, 1016, 1023, 1024, 1026, 1031, 1033, 1041, 1042, 1044, 1045, 1048, 1050, 1058, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1098, 1101, 1195, 1196, 1215, 1224, 1245, 1255], "crucial": [69, 190, 213, 497, 678], "piec": [69, 161, 191, 484, 620, 671, 994, 1025], "mmu": [69, 190, 858, 901, 925, 1049], "sophist": [69, 258, 543, 564, 601, 738], "permiss": [69, 88, 91, 92, 93, 115, 151, 152, 173, 224, 225, 229, 231, 241, 248, 264, 284, 295, 304, 319, 322, 325, 340, 369, 384, 393, 398, 399, 400, 401, 403, 590, 642, 728, 815, 838, 839, 840, 846, 887, 914, 915, 917, 920, 921, 922, 925, 931, 934, 938, 939, 940, 941, 942, 944, 945, 946, 950, 962, 965, 967, 968, 970, 985, 986, 996, 999, 1001, 1002, 1005, 1006, 1011, 1014, 1015, 1016, 1019, 1021, 1022, 1024, 1026, 1042, 1045, 1048, 1050, 1051, 1063, 1089, 1191, 1219, 1226, 1250, 1251, 1253], "nativ": [69, 88, 95, 115, 151, 189, 195, 197, 222, 258, 294, 296, 314, 405, 840, 887, 985, 1066, 1070, 1073, 1076, 1200, 1203, 1209], "varieti": [69, 500, 924, 1065, 1242], "storag": [69, 195, 200, 534, 755, 887, 924, 986, 994, 1011, 1033, 1254], "underli": [69, 173, 249, 256, 272, 281, 322, 398, 403, 792, 995, 1191, 1196, 1200], "platform": [69, 173, 197, 204, 249, 258, 262, 264, 274, 277, 281, 289, 307, 357, 374, 377, 391, 400, 417, 867, 887, 993, 994, 995, 1029, 1049, 1179, 1224, 1226], "offer": [69, 190, 200, 240, 315, 458, 654, 658], "pc": [69, 99, 136, 241, 305, 384, 401, 404, 602, 987, 988, 994, 1068], "popular": [69, 201, 213, 217, 453, 522, 750, 912, 995, 1049, 1065, 1082, 1108, 1193, 1199, 1207, 1220, 1242], "often": [69, 80, 189, 190, 191, 192, 221, 271, 281, 308, 311, 331, 347, 439, 449, 470, 526, 535, 544, 556, 669, 792, 887, 948, 1025, 1094, 1114, 1128, 1242, 1256], "appropri": [69, 117, 128, 179, 185, 190, 200, 209, 241, 281, 439, 453, 465, 600, 806, 883, 993, 1005, 1058, 1197, 1203, 1242, 1244], "prototyp": [69, 154, 161, 380, 384, 430, 525, 542, 604, 637, 753, 887, 986, 994, 1007, 1087, 1203], "higher": [69, 138, 190, 201, 258, 264, 274, 277, 838, 885, 986, 1050, 1052, 1059, 1067, 1076, 1203, 1256], "fulli": [69, 194, 197, 201, 225, 486, 601, 1059], "distribut": [69, 195, 200, 216, 221, 241, 251, 269, 281, 395, 517, 542, 588, 596, 809, 858, 887, 926, 927, 1051, 1114], "vogu": 69, "serial": [69, 189, 190, 200, 229, 264, 265, 277, 920, 921, 923, 1247], "groundwork": 69, "lai": 69, "instruct": [69, 141, 189, 193, 197, 219, 250, 305, 314, 316, 494, 507, 585, 801, 816, 1016, 1037, 1049, 1081, 1179], "consolid": [69, 221, 371], "rel": [69, 90, 115, 137, 168, 190, 197, 225, 241, 262, 295, 304, 305, 325, 326, 369, 370, 416, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 759, 764, 815, 839, 840, 887, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 985, 993, 1005, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1195, 1196, 1203, 1216], "makeri": 69, "everybodi": [69, 195, 315, 373, 486, 552, 646, 684, 728, 918, 1117, 1121, 1224, 1241, 1248], "sens": [69, 161, 192, 194, 210, 213, 218, 221, 240, 373, 531, 547, 564, 649, 659, 666, 713, 742, 755, 819, 848, 887, 927, 995, 1019, 1044, 1051, 1058, 1109, 1139, 1196, 1242], "clarifi": [69, 371], "earli": [69, 189, 221, 225, 230, 315, 513, 892, 904, 919, 1051, 1085, 1102, 1140, 1256], "matter": [69, 189, 194, 195, 197, 221, 227, 229, 380, 424, 468, 500, 508, 524, 534, 544, 644, 645, 656, 659, 746, 785, 792, 802, 804, 862, 887, 889, 933, 944, 987, 993, 995, 1006, 1089, 1114, 1216, 1226, 1236, 1242], "rewrit": [69, 71, 190, 506], "translat": [69, 82, 83, 209, 222, 240, 277, 281, 284, 287, 323, 791, 1158], "flask": [69, 84, 225, 228, 1088], "advanc": [69, 185, 197, 203, 205, 210, 213, 216, 226, 230, 238, 241, 246, 256, 261, 262, 272, 286, 328, 379, 399, 400, 415, 492, 494, 496, 501, 502, 520, 523, 526, 533, 673, 744, 782, 817, 837, 839, 840, 1030, 1090, 1093, 1115, 1148, 1196, 1198, 1231, 1238, 1243, 1251, 1260], "network": [69, 101, 102, 148, 178, 187, 190, 197, 206, 207, 229, 231, 236, 261, 277, 284, 287, 298, 302, 304, 305, 309, 319, 323, 325, 340, 345, 351, 357, 363, 369, 400, 416, 500, 553, 840, 841, 864, 904, 920, 921, 923, 924, 926, 985, 988, 989, 994, 995, 996, 1006, 1010, 1011, 1014, 1015, 1026, 1047, 1245, 1247, 1248, 1250, 1251, 1253, 1254], "oppos": [71, 115, 189, 228, 262, 269, 279, 314, 370, 371, 465, 508, 535, 631, 972, 987, 994, 1002, 1031, 1038, 1051, 1058, 1063, 1082, 1083, 1109, 1120, 1121, 1204, 1212], "ahead": [71, 504, 1104], "optimz": 71, "donald": [71, 493], "knuth": [71, 493], "prematur": [71, 493, 497], "optim": [71, 191, 302, 314, 345, 379, 380, 480, 496, 497, 501, 502, 535, 824, 840, 871, 1203, 1240, 1243], "evil": [71, 267, 434, 484, 493, 497, 535, 656], "knowledg": [72, 76, 308, 311, 314, 601, 735, 737, 887, 987, 995, 1257], "onewir": [72, 76, 88, 97, 115, 116, 117, 125, 133, 136, 305, 316, 353, 380, 398, 401, 589, 590, 642, 840, 985, 992, 993, 1024, 1026, 1045], "protocol": [72, 184, 195, 227, 228, 238, 260, 263, 265, 266, 270, 273, 276, 279, 288, 301, 303, 308, 311, 317, 318, 320, 321, 324, 327, 339, 340, 342, 343, 344, 346, 350, 352, 358, 361, 362, 404, 407, 438, 446, 553, 566, 845, 976, 987, 989, 993, 995, 996, 1004, 1005, 1025, 1087, 1091, 1095, 1102, 1245, 1255], "aspect": [72, 120, 221, 225, 251, 275, 314, 316, 344, 549, 918, 993, 995, 1191, 1224, 1249, 1251, 1264], "regard": [72, 197, 221, 384, 948, 1114, 1121, 1220, 1224], "filesystem": [72, 76, 97, 115, 189, 192, 201, 229, 231, 241, 292, 357, 375, 378, 380, 398, 403, 507, 517, 523, 533, 601, 839, 840, 887, 913, 994, 1006, 1022, 1029, 1049, 1068, 1224, 1245, 1247, 1250, 1252], "hwmon": [72, 76, 116, 404, 407], "composit": [73, 97, 119, 122, 133, 225, 251, 297, 315, 316, 333, 378, 379, 512, 541, 548, 562, 576, 590, 642, 840, 1094, 1242], "mock": [73, 115, 116, 131, 132, 133, 161, 166, 315, 317, 318, 339, 343, 354, 371, 385, 387, 590, 591, 592, 593, 595, 631, 642, 840, 1231], "pool": [74, 250, 907, 1050, 1052], "pin": [75, 132, 154, 305, 384, 986, 990, 994], "emit": [75, 160, 163, 176, 569, 570, 930], "linearli": [75, 281, 683, 924], "cold": [75, 240], "hot": [75, 192, 495, 498, 869], "queri": [75, 1122], "feed": [75, 1196], "said": [75, 101, 102, 192, 221, 308, 311, 318, 381, 564, 676, 723, 808, 814, 848, 986, 994, 995, 1006, 1035, 1050, 1094, 1114, 1134, 1204, 1217], "ds18s20": [76, 404, 1224], "datasheet": [76, 153, 154, 160, 162, 177, 883, 986, 995], "lm73": [76, 153, 154, 305, 404, 407, 840, 985, 992, 994, 995], "ti": [76, 189, 504, 602, 646, 803, 1252], "hoc": [76, 251, 464], "report": [76, 116, 119, 125, 133, 173, 189, 192, 193, 206, 208, 409, 490, 500, 643, 840, 1007, 1044, 1231, 1233, 1250], "sort": [76, 97, 99, 151, 179, 190, 216, 222, 230, 234, 249, 251, 261, 262, 267, 269, 271, 272, 277, 285, 299, 302, 309, 314, 323, 329, 351, 357, 367, 494, 495, 498, 499, 535, 620, 677, 695, 705, 709, 739, 780, 784, 792, 805, 814, 816, 840, 928, 932, 970, 982, 995, 1089, 1137, 1138, 1193, 1219], "rather": [76, 128, 132, 133, 141, 190, 192, 193, 194, 195, 196, 197, 200, 201, 213, 217, 221, 225, 241, 250, 268, 269, 343, 371, 373, 380, 384, 409, 416, 420, 462, 494, 495, 504, 528, 542, 593, 594, 595, 596, 597, 602, 637, 644, 646, 659, 666, 677, 697, 722, 729, 743, 764, 814, 816, 860, 887, 892, 925, 927, 974, 986, 993, 994, 995, 997, 1004, 1009, 1034, 1035, 1062, 1066, 1082, 1107, 1114, 1117, 1125, 1166, 1167, 1170, 1181, 1183, 1198, 1226, 1231, 1241, 1256, 1263], "experi": [76, 180, 197, 221, 373, 504, 535, 628, 994, 995, 1225, 1244, 1245, 1261, 1265], "especi": [77, 83, 113, 123, 141, 191, 195, 213, 221, 305, 398, 416, 417, 443, 454, 484, 504, 725, 746, 862, 995, 1244, 1251, 1264], "deprec": [77, 132, 136, 318, 524, 710, 1015, 1029, 1241], "foremost": 78, "osen": [78, 80, 200, 808, 838, 1049], "recurs": [78, 79, 225, 249, 258, 264, 274, 277, 812, 879, 892, 932, 933, 948, 960, 970, 978, 998, 1005, 1044, 1126, 1130, 1241, 1254], "mother": [79, 99, 185, 203, 205, 267, 373, 416, 620, 1107, 1241, 1243, 1254, 1256, 1257], "protect": [79, 133, 190, 192, 241, 249, 261, 314, 316, 379, 380, 445, 464, 582, 583, 643, 646, 656, 712, 714, 715, 739, 814, 840, 871, 879, 885, 925, 967, 994, 1031, 1037, 1038, 1049, 1098, 1101, 1110, 1236, 1249], "critic": [79, 190, 200, 500, 813, 877, 879, 1219], "kind": [79, 110, 190, 192, 200, 209, 221, 225, 258, 264, 265, 274, 275, 277, 289, 305, 317, 318, 339, 343, 379, 526, 549, 601, 649, 695, 721, 746, 755, 800, 814, 918, 986, 993, 994, 1098, 1191, 1217, 1249, 1264], "poll": [80, 196, 206, 879, 881, 904, 1029, 1036, 1038, 1055, 1059, 1247, 1253, 1255], "readi": [80, 189, 986, 1224], "rare": [80, 195, 211, 225, 371, 519, 534, 539, 599, 601, 652, 750, 801, 970, 1010, 1125, 1129, 1142, 1225], "btw": [80, 194, 200, 221, 227, 241, 248, 268, 271, 398, 481, 856, 923, 1180, 1182], "increas": [80, 192, 494, 986, 1051, 1053, 1082, 1242], "tight": [80, 213, 438, 816, 890, 1216], "bui": [80, 190, 543], "bigger": [80, 190, 221, 494, 1197, 1244], "avail": [80, 123, 128, 133, 188, 189, 190, 192, 193, 195, 201, 213, 217, 241, 250, 258, 264, 274, 277, 331, 339, 340, 343, 347, 373, 509, 511, 513, 515, 516, 519, 531, 544, 569, 570, 725, 770, 806, 812, 816, 860, 887, 892, 919, 944, 986, 990, 994, 1047, 1050, 1051, 1068, 1080, 1085, 1090, 1097, 1121, 1139, 1140, 1190, 1199, 1216, 1219, 1226, 1227, 1249, 1256], "rout": [84, 225, 1088], "jinja2": [84, 188], "ss2022": [87, 840, 916, 917, 985], "log": [87, 121, 173, 185, 195, 196, 211, 216, 219, 228, 248, 258, 264, 274, 277, 305, 307, 319, 336, 357, 379, 397, 516, 535, 549, 806, 850, 887, 916, 924, 926, 948, 986, 988, 996, 1000, 1002, 1005, 1006, 1068, 1190, 1193, 1219, 1233, 1265], "ws2022": 87, "lab": [87, 97, 115, 151, 398], "vo": [88, 97, 115, 404], "ku": [88, 96, 97, 115], "g1": [88, 840, 916, 917, 985], "g2": [88, 398, 840, 916, 917, 985], "2022": [88, 96, 97, 169, 171, 202, 264, 270, 274, 277, 293, 294, 300, 303, 351, 411, 412, 415, 506, 539, 599, 770, 795, 799, 821, 824, 838, 948, 950, 1067, 1078, 1146, 1262], "03": [88, 96, 115, 151, 195, 200, 202, 208, 216, 251, 272, 274, 277, 306, 307, 310, 313, 319, 332, 351, 378, 394, 397, 401, 415, 498, 505, 506, 534, 588, 620, 637, 643, 645, 646, 648, 652, 653, 656, 659, 741, 950, 1078, 1195, 1233, 1240], "08": [88, 90, 96, 115, 156, 193, 200, 201, 202, 255, 258, 283, 287, 313, 351, 415, 540, 986, 993, 995, 1017, 1081, 1195], "cont": [88, 115, 151, 259, 322], "command": [88, 90, 113, 115, 137, 161, 189, 194, 200, 229, 241, 246, 256, 258, 264, 265, 272, 274, 277, 286, 289, 295, 297, 304, 305, 322, 325, 326, 369, 370, 378, 384, 398, 403, 416, 465, 486, 497, 507, 514, 517, 519, 524, 526, 531, 532, 535, 541, 548, 562, 566, 576, 590, 599, 621, 636, 642, 652, 801, 815, 839, 840, 887, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 926, 927, 928, 930, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 950, 951, 952, 953, 955, 956, 957, 959, 960, 962, 963, 964, 966, 968, 977, 982, 985, 994, 995, 996, 997, 998, 1005, 1009, 1014, 1016, 1024, 1026, 1042, 1044, 1045, 1048, 1049, 1050, 1051, 1065, 1066, 1074, 1078, 1082, 1142, 1191, 1219, 1226, 1233, 1235, 1242, 1250], "wsl": [88, 89, 94, 95, 115, 138, 151, 278, 298, 304, 317, 333, 339, 370, 375, 378, 840, 917, 922, 985, 1068, 1076, 1077, 1081], "homework": [88, 93, 96, 115, 151, 192], "21": [88, 90, 93, 96, 97, 115, 141, 151, 197, 200, 210, 211, 222, 227, 230, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 341, 345, 351, 357, 363, 367, 393, 397, 415, 506, 838, 877, 930, 970, 994, 995, 1006, 1080, 1195, 1196], "sshf": [88, 92, 115, 138, 295, 304, 305, 325, 326, 369, 370, 405, 840, 985, 996, 1001, 1078], "toolchain": [88, 94, 95, 97, 99, 114, 115, 123, 140, 151, 152, 153, 165, 187, 202, 216, 218, 305, 374, 376, 377, 378, 416, 506, 534, 538, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 815, 839, 840, 888, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1023, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1074, 1082, 1083, 1084, 1115, 1238, 1239, 1240, 1252, 1253, 1257, 1258], "04": [88, 96, 115, 151, 171, 197, 200, 202, 216, 217, 241, 289, 305, 306, 309, 313, 341, 395, 397, 415, 534, 840, 985, 1068, 1076, 1077, 1081, 1195, 1224], "bashrc": [88, 95, 115, 137, 189, 201, 261, 295, 304, 305, 319, 325, 326, 357, 369, 370, 840, 917, 919, 968, 970, 985, 1005, 1078, 1080], "studi": [88, 95, 136, 250, 293, 294, 296, 297, 305, 353, 372, 380, 541, 548, 742, 782, 839, 840, 985, 1070, 1073, 1076], "09": [88, 113, 165, 193, 202, 225, 241, 306, 341, 351, 395, 415, 506, 535, 970, 994, 995, 1019, 1117, 1195], "ds18b20": [88, 115, 117, 133, 136, 305, 353, 380, 398, 840, 985, 992, 1023], "slave": [88, 115, 117, 133, 136, 154, 305, 353, 380, 840, 985, 990, 992, 994, 1023], "redirect": [88, 91, 115, 137, 168, 191, 194, 229, 231, 241, 258, 264, 274, 277, 295, 304, 305, 325, 369, 383, 398, 403, 840, 914, 915, 916, 917, 932, 952, 953, 955, 956, 959, 960, 962, 968, 982, 985, 1015, 1140, 1244, 1250, 1252], "pipe": [88, 190, 195, 197, 209, 229, 231, 241, 295, 304, 305, 307, 325, 369, 383, 398, 403, 838, 840, 917, 925, 930, 970, 976, 985, 1015, 1061, 1062, 1063, 1078, 1140, 1244, 1250], "06": [88, 97, 114, 115, 151, 200, 230, 274, 293, 306, 313, 330, 333, 336, 378, 397, 415, 506, 539, 620, 838, 1117, 1195], "02": [88, 97, 106, 114, 115, 152, 193, 200, 202, 208, 212, 238, 248, 275, 289, 306, 307, 313, 411, 412, 415, 498, 506, 534, 995, 1065, 1066, 1067, 1078, 1080, 1195], "past": [88, 185, 190, 194, 195, 251, 267, 371, 470, 522, 674, 676, 680, 683, 687, 753, 860, 862, 927, 1186, 1190, 1238], "2p": [88, 95], "3p": [88, 95], "5p": [88, 95], "pointer": [88, 99, 110, 115, 124, 133, 193, 216, 292, 353, 379, 381, 390, 399, 400, 401, 416, 428, 430, 432, 473, 474, 476, 477, 479, 481, 482, 483, 492, 496, 501, 502, 522, 556, 601, 614, 631, 636, 638, 643, 644, 646, 660, 662, 671, 675, 679, 683, 684, 687, 693, 697, 710, 744, 751, 752, 753, 780, 782, 787, 789, 791, 796, 801, 803, 806, 807, 815, 818, 819, 823, 824, 827, 829, 835, 836, 837, 839, 840, 846, 853, 858, 869, 875, 904, 907, 1007, 1035, 1063, 1140, 1238, 1239, 1240, 1241, 1242, 1243], "exit": [88, 115, 190, 192, 219, 240, 258, 264, 267, 274, 277, 299, 305, 340, 391, 416, 419, 471, 532, 538, 549, 652, 718, 799, 801, 840, 850, 855, 889, 985, 995, 1011, 1012, 1013, 1015, 1016, 1021, 1023, 1026, 1027, 1031, 1045, 1055, 1062, 1063, 1065, 1083, 1089, 1097, 1098, 1116, 1119, 1132, 1142, 1153, 1170, 1219, 1226], "statu": [88, 115, 116, 125, 133, 191, 193, 258, 264, 267, 274, 277, 289, 299, 305, 416, 419, 471, 532, 535, 538, 718, 838, 840, 889, 903, 985, 1016, 1021, 1023, 1026, 1045, 1049, 1062, 1083, 1119, 1146, 1250, 1263], "arrai": [88, 99, 115, 212, 233, 234, 239, 244, 246, 250, 251, 253, 259, 267, 272, 277, 286, 289, 293, 294, 314, 322, 328, 367, 373, 420, 429, 435, 439, 450, 459, 466, 476, 479, 483, 485, 487, 488, 491, 492, 496, 501, 502, 600, 603, 626, 634, 637, 674, 675, 677, 679, 681, 684, 685, 690, 694, 706, 727, 734, 735, 736, 737, 738, 739, 742, 744, 782, 790, 805, 823, 837, 839, 840, 858, 919, 925, 1044, 1122, 1126, 1138, 1191, 1194, 1196, 1219], "yai": [88, 156, 261, 269, 271, 284, 290, 309, 319, 351, 363, 367, 684, 736, 742, 1044], "07": [88, 97, 115, 200, 202, 212, 225, 254, 255, 289, 294, 306, 307, 313, 329, 397, 411, 412, 415, 537, 914, 915, 993, 1117, 1146, 1195, 1262], "ol": [88, 115, 267, 314, 316, 323, 379, 380, 407, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 646, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 794, 798, 804, 807, 815, 824, 827, 837, 839, 840, 982, 1059, 1135, 1140, 1163], "randomsensor": [88, 133, 549, 554, 563, 575, 589, 590, 596, 600, 610, 611, 612, 613, 615, 616, 642, 800, 801, 802, 803, 840, 1102], "rectangl": [88, 552, 620, 649, 664, 739, 840], "mystr": [88, 215, 267], "29": [88, 97, 152, 200, 201, 210, 211, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 352, 357, 363, 390, 393, 397, 411, 412, 415, 506, 804, 851, 993, 995, 1065, 1078, 1195], "point3d": [88, 664, 739, 840], "cuboid": [88, 664, 739, 840], "hierarchi": [90, 97, 101, 102, 105, 111, 120, 137, 148, 225, 226, 228, 230, 248, 249, 262, 265, 277, 295, 304, 305, 325, 326, 336, 369, 370, 409, 495, 542, 543, 544, 547, 548, 562, 563, 567, 569, 590, 600, 642, 840, 917, 920, 921, 922, 923, 934, 937, 938, 939, 940, 941, 942, 943, 948, 954, 960, 967, 985, 997, 998, 999, 1000, 1001, 1026, 1046, 1076, 1077], "parent": [90, 100, 101, 102, 137, 148, 192, 206, 295, 304, 305, 325, 326, 369, 370, 520, 522, 526, 838, 840, 867, 917, 919, 920, 921, 922, 923, 924, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 957, 959, 960, 961, 973, 985, 997, 998, 999, 1000, 1001, 1016, 1026, 1034, 1076, 1077], "login": [90, 115, 133, 136, 195, 197, 229, 241, 295, 357, 397, 398, 840, 914, 915, 917, 918, 919, 922, 924, 925, 926, 934, 937, 938, 939, 940, 941, 942, 943, 949, 985, 986, 994, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1023, 1076, 1077, 1169, 1245, 1247], "bourn": [90, 115, 137, 168, 203, 205, 229, 231, 295, 304, 305, 325, 369, 398, 399, 400, 403, 416, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 838, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 979, 985, 1008, 1014, 1016, 1024, 1026, 1027, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1248, 1250], "absolut": [90, 115, 137, 160, 168, 192, 197, 212, 222, 241, 250, 258, 264, 274, 277, 281, 295, 304, 305, 308, 311, 318, 325, 326, 369, 370, 395, 416, 500, 520, 524, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 812, 815, 839, 840, 885, 897, 913, 914, 915, 916, 917, 920, 921, 922, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 985, 1005, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1214, 1216], "special": [90, 115, 120, 137, 168, 190, 236, 269, 271, 277, 281, 295, 304, 305, 325, 326, 369, 370, 419, 471, 522, 524, 552, 563, 566, 569, 570, 590, 614, 637, 642, 755, 757, 811, 815, 836, 839, 840, 913, 914, 915, 916, 917, 920, 921, 922, 925, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 985, 987, 1009, 1014, 1015, 1016, 1024, 1026, 1039, 1042, 1045, 1048, 1050, 1063, 1083, 1088, 1107, 1109, 1117, 1126, 1128, 1132, 1193, 1198, 1249, 1250], "verifi": [91, 93, 115, 128, 132, 137, 153, 168, 180, 200, 204, 205, 217, 229, 241, 305, 370, 371, 409, 637, 654, 840, 917, 923, 952, 955, 956, 959, 962, 968, 985, 998, 999, 1001, 1157, 1194, 1197, 1219], "joke": [91, 190], "mostli": [91, 105, 110, 111, 275, 416, 420, 426, 438, 454, 484, 493, 513, 519, 528, 657, 698, 801, 806, 855, 924, 927, 948, 1015, 1044, 1047, 1068, 1251, 1256], "secur": [92, 115, 137, 148, 151, 152, 193, 195, 197, 241, 261, 267, 295, 304, 325, 357, 369, 370, 397, 840, 914, 915, 920, 921, 923, 926, 944, 948, 985, 986, 996, 997, 998, 999, 1000, 1004, 1015, 1023, 1076, 1077, 1083, 1085, 1117, 1148], "account": [92, 101, 102, 115, 195, 197, 216, 221, 225, 226, 261, 267, 277, 284, 287, 302, 306, 307, 309, 319, 323, 345, 351, 357, 363, 398, 403, 427, 500, 506, 723, 742, 860, 993, 1006, 1114, 1195], "authent": [92, 115, 137, 138, 229, 241, 250, 295, 304, 305, 325, 326, 369, 370, 395, 398, 840, 914, 915, 985, 996, 997, 998, 999, 1000, 1001, 1006, 1157], "ownership": [92, 115, 138, 216, 251, 305, 326, 340, 369, 370, 590, 610, 614, 620, 642, 755, 797, 800, 801, 815, 839, 840, 914, 915, 917, 920, 921, 922, 925, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 985, 1014, 1015, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1241, 1242], "setuid": [92, 115, 138, 139, 229, 295, 304, 305, 325, 326, 369, 370, 840, 917, 923, 943, 985], "quick": [93, 115, 141, 221, 228, 246, 250, 256, 265, 272, 286, 298, 328, 569, 806, 976, 986, 1191, 1217], "credenti": [93, 115, 138, 197, 289, 370, 840, 915, 916, 917, 923, 937, 938, 939, 940, 941, 942, 943, 985, 1002, 1033, 1087], "share": [93, 94, 97, 101, 102, 115, 138, 148, 170, 187, 188, 190, 192, 197, 201, 213, 214, 216, 217, 219, 222, 241, 251, 258, 261, 264, 274, 277, 281, 284, 287, 292, 293, 294, 296, 302, 305, 309, 319, 323, 332, 345, 348, 351, 353, 357, 363, 370, 372, 374, 375, 376, 377, 378, 395, 416, 460, 487, 488, 494, 500, 513, 517, 522, 523, 528, 531, 533, 534, 536, 540, 543, 555, 600, 620, 628, 742, 803, 805, 806, 814, 816, 837, 839, 840, 865, 869, 885, 892, 916, 917, 920, 921, 927, 937, 940, 941, 943, 980, 985, 994, 1018, 1033, 1035, 1041, 1047, 1053, 1065, 1068, 1076, 1078, 1098, 1101, 1233, 1245, 1249, 1252, 1253, 1254, 1255], "adjust": [93, 182, 186, 371, 840, 887, 985, 994, 999, 1001, 1059, 1066], "ubuntu": [94, 123, 191, 197, 201, 216, 217, 218, 219, 229, 294, 296, 305, 416, 840, 927, 985, 988, 1006, 1067, 1068, 1076, 1077, 1081, 1226, 1231], "zoom": [94, 95, 115, 139, 197, 204, 205, 221, 305, 319, 416, 534, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 970, 985, 1067, 1070, 1071, 1072, 1073, 1074, 1076], "recap": [95, 115, 151, 156, 225, 229, 238, 267, 314, 315, 342, 375, 380, 398, 638, 1096], "endeavor": 95, "hoop": [95, 927, 1062], "doze": [95, 196, 250, 251, 264, 398, 405, 482, 838, 927, 972, 1134, 1140, 1226], "big": [95, 133, 190, 191, 197, 221, 225, 245, 251, 265, 272, 275, 318, 344, 398, 443, 488, 500, 599, 649, 678, 742, 806, 1009, 1191, 1203, 1253], "pictur": [95, 190, 210, 221, 225, 318, 319, 494, 500, 599, 899, 948, 950, 970, 986, 1005, 1009, 1253], "theori": [97, 225, 467, 494, 1196], "Of": [97, 115, 133, 185, 192, 195, 224, 225, 275, 293, 294, 296, 298, 305, 314, 316, 354, 372, 373, 380, 518, 548, 562, 590, 600, 642, 674, 714, 715, 726, 739, 824, 837, 839, 840, 916, 932, 980, 985, 1023, 1026, 1028, 1096, 1191, 1204, 1242], "31": [97, 115, 193, 195, 200, 211, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 272, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 392, 393, 415, 478, 506, 538, 779, 970, 1029, 1063, 1081, 1115, 1148, 1195], "ece20": [97, 100, 585, 601, 661, 914, 915, 923], "uml": [97, 133, 297, 315, 317, 318, 548, 562, 590, 600, 642, 840], "foundat": [97, 272, 302, 548, 562, 590, 642, 819, 840, 887, 1247], "adapt": [97, 133, 193, 225, 297, 315, 372, 379, 541, 548, 550, 551, 562, 566, 576, 580, 590, 642, 806, 840, 994, 995, 1242], "syllabu": [97, 150, 155, 406], "vote": 97, "beurteilungsschema": 97, "grade": [97, 100, 115, 133, 402, 412, 1224], "total": [97, 100, 103, 104, 113, 166, 192, 201, 208, 261, 277, 287, 294, 493, 498, 506, 532, 549, 564, 598, 599, 600, 601, 652, 661, 801, 970, 973, 986, 993, 994, 995, 1006, 1029, 1059, 1066, 1067, 1068, 1078, 1081, 1146, 1148, 1231], "compos": [97, 119, 120, 170, 204, 205, 267, 340, 432, 544, 722, 887, 1080, 1083, 1092, 1106, 1153, 1204], "practic": [97, 262, 271, 281, 372, 374, 377, 467, 504, 676, 715, 753, 788, 795, 993, 1019, 1063, 1199, 1241, 1242], "theoret": [97, 400, 418, 809], "semest": [97, 100, 136, 152, 165, 402, 404], "deliv": [97, 190, 989, 1062, 1063], "variou": [97, 192, 267, 293, 294, 519, 800, 814, 816, 887, 919, 1249], "weight": [97, 212, 221, 489, 881, 995, 1114], "decid": [97, 191, 192, 197, 221, 275, 493, 543, 604, 618, 681, 883, 887, 907, 993, 1097, 1114], "excerpt": [97, 225, 228, 379, 400, 401, 1148, 1263], "w1": [97, 105, 111, 115, 116, 130, 141, 305, 354, 528, 530, 585, 601, 602, 1023], "soup": [97, 370, 509, 510, 516, 520, 526, 532, 535, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 802, 838, 1027, 1030, 1090, 1093, 1142, 1224, 1233], "armv8": [97, 201, 305, 526, 602, 1066, 1080, 1081], "rpi4": [97, 201, 305, 526, 602, 1066, 1080, 1081], "gnueabihf": [97, 201, 305, 526, 602, 887, 1066, 1078, 1080, 1081], "shape": [97, 210, 212, 251, 313, 314, 345, 367, 379, 590, 620, 642, 661, 742, 840, 887, 1015, 1196, 1199, 1209], "50": [97, 100, 200, 210, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 399, 400, 489, 491, 534, 598, 633, 634, 970, 993, 994, 995, 1092, 1115, 1135, 1148, 1195, 1196, 1208, 1224], "algorithm": [97, 146, 147, 191, 200, 210, 258, 264, 272, 274, 277, 285, 287, 293, 294, 314, 323, 494, 590, 607, 631, 638, 642, 668, 679, 681, 682, 684, 685, 688, 689, 705, 708, 709, 739, 784, 792, 794, 805, 809, 840, 1170, 1193, 1197], "find_if": [97, 99, 146, 251, 267, 314, 353, 683, 686, 705, 709, 727, 736, 739, 805, 840], "customiz": [97, 146, 314, 686, 705, 709, 739, 840], "binary_search": [97, 99, 251, 267, 314, 686, 705, 709, 739, 840], "associ": [97, 201, 218, 226, 228, 230, 246, 251, 305, 308, 311, 314, 316, 354, 441, 442, 450, 455, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 590, 591, 607, 609, 642, 676, 705, 709, 739, 742, 744, 770, 782, 837, 839, 840, 846, 853, 911, 987, 1015, 1090, 1120, 1121, 1122, 1138, 1140, 1198, 1242, 1252, 1261], "hour": [97, 195, 197, 221, 225, 258, 280, 298, 309, 322, 344, 404, 1153, 1191, 1198], "sent": [97, 190, 191, 229, 334, 500, 566, 928, 1039, 1059, 1063, 1207], "015": 97, "voluntari": [97, 885], "odd": [97, 115, 281, 316, 482, 590, 604, 607, 642, 840, 994, 1092, 1094], "char": [98, 192, 207, 250, 267, 277, 323, 420, 427, 432, 433, 436, 438, 439, 440, 443, 444, 457, 462, 465, 470, 471, 478, 482, 488, 489, 491, 534, 545, 549, 579, 583, 588, 602, 603, 634, 649, 652, 653, 656, 666, 706, 721, 722, 737, 753, 755, 780, 787, 804, 831, 838, 843, 846, 851, 867, 869, 881, 907, 993, 1007, 1011, 1012, 1015, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1046, 1049, 1055, 1058, 1059, 1062, 1084, 1129, 1135, 1202, 1231, 1236], "cout": [98, 105, 108, 111, 112, 120, 201, 379, 508, 511, 549, 563, 568, 569, 570, 582, 583, 584, 585, 588, 596, 600, 601, 628, 646, 648, 653, 654, 658, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 722, 726, 733, 736, 742, 747, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 784, 786, 787, 789, 790, 792, 794, 803, 804, 805, 806, 814, 816, 817, 819, 823, 825, 827, 829, 831, 931, 993, 1027, 1030, 1044, 1046, 1058, 1062, 1231], "endl": [98, 105, 108, 111, 201, 511, 513, 549, 563, 568, 569, 570, 582, 583, 584, 585, 588, 596, 600, 601, 628, 646, 648, 653, 658, 659, 666, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 722, 726, 733, 736, 742, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 784, 786, 787, 789, 790, 792, 794, 803, 804, 805, 806, 814, 816, 817, 819, 823, 825, 827, 829, 831, 993, 1027, 1030, 1044, 1046, 1058, 1062, 1231], "constitut": 98, "_id": [98, 105, 111], "objectcontain": 98, "add_object": 98, "_contain": [98, 792], "push_back": [98, 573, 574, 637, 677, 678, 679, 684, 687, 690, 694, 698, 746, 747, 750, 755, 814, 1062, 1236], "fragment": [98, 495, 1094, 1231], "iostream": [98, 105, 111, 112, 258, 264, 274, 277, 549, 563, 568, 569, 570, 578, 582, 583, 584, 585, 588, 596, 600, 628, 646, 648, 653, 654, 658, 659, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 685, 688, 689, 690, 694, 698, 699, 700, 701, 702, 708, 712, 713, 716, 718, 719, 726, 732, 733, 734, 735, 736, 737, 742, 747, 757, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 784, 786, 787, 789, 792, 794, 803, 804, 805, 806, 814, 816, 819, 823, 825, 827, 829, 831, 838, 993, 1027, 1030, 1031, 1036, 1044, 1046, 1058, 1062, 1063, 1231], "my_vector": 98, "sysroot": [99, 148, 201, 1066, 1071, 1072, 1081], "intel": [99, 177, 181, 193, 840, 1065], "produc": [99, 148, 209, 211, 250, 264, 363, 373, 482, 494, 499, 770, 776, 778, 814, 816, 1006, 1038, 1039, 1057, 1065, 1068, 1071, 1072, 1082, 1095, 1096, 1129, 1132, 1134, 1199, 1245], "header": [99, 217, 251, 267, 292, 322, 331, 332, 347, 348, 374, 375, 377, 464, 465, 466, 472, 476, 479, 483, 487, 492, 496, 501, 502, 506, 514, 517, 523, 531, 533, 537, 538, 540, 549, 654, 669, 725, 744, 759, 764, 782, 788, 837, 839, 840, 932, 990, 995, 1066, 1068, 1078, 1148, 1181, 1185, 1186, 1188, 1196, 1199, 1256], "match": [99, 173, 189, 196, 204, 224, 237, 254, 261, 262, 264, 269, 277, 287, 289, 290, 299, 302, 322, 323, 329, 340, 351, 357, 363, 380, 462, 506, 601, 755, 759, 779, 792, 796, 923, 932, 1006, 1068, 1089, 1135, 1191, 1231], "linker": [99, 101, 102, 148, 187, 216, 331, 347, 374, 377, 461, 487, 494, 498, 499, 516, 539, 658, 669, 887, 1065, 1068, 1071, 1072, 1076, 1083, 1238, 1239, 1240, 1252, 1256, 1258], "arithmet": [99, 209, 242, 247, 267, 270, 282, 297, 314, 398, 421, 435, 442, 443, 449, 450, 459, 465, 466, 472, 476, 479, 481, 482, 483, 492, 496, 501, 502, 541, 550, 562, 563, 576, 590, 638, 642, 671, 675, 676, 679, 684, 742, 744, 782, 791, 792, 837, 839, 840], "uniquifi": [100, 316, 590, 607, 642, 840], "lookup": [100, 121, 209, 226, 239, 258, 264, 269, 274, 277, 291, 323, 489, 564, 590, 607, 609, 642, 757, 840, 1102, 1131, 1138, 1169, 1204, 1213, 1255], "leak": [100, 141, 192, 372, 477, 491, 549, 569, 570, 590, 607, 609, 610, 626, 634, 637, 642, 643, 649, 713, 788, 799, 801, 840, 1090], "sure": [100, 138, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 229, 241, 248, 265, 267, 307, 395, 488, 513, 519, 543, 544, 547, 566, 569, 570, 599, 625, 654, 721, 796, 835, 887, 994, 995, 1016, 1020, 1078, 1090, 1242, 1250, 1264], "gz": [100, 166, 887, 888, 911, 912, 913, 1146, 1226], "whatev": [100, 121, 128, 132, 189, 190, 192, 197, 212, 227, 287, 384, 500, 566, 645, 745, 770, 838, 953, 955, 1006, 1011, 1049, 1051, 1120, 1188, 1196, 1203, 1204, 1226], "quiz": [101, 102, 115, 148, 151, 724, 739, 840, 917, 922, 937, 943, 962, 968, 985, 1073, 1076], "servic": [101, 102, 148, 195, 196, 197, 229, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 370, 500, 506, 809, 879, 885, 890, 920, 921, 924, 976, 995, 1004, 1006, 1013, 1051, 1119], "owner": [101, 102, 148, 191, 229, 398, 403, 802, 846, 887, 920, 921, 935, 936, 944, 970, 1006, 1036], "dimension": [101, 102, 148, 210, 764, 920, 921, 1196, 1197], "identifi": [101, 102, 148, 191, 200, 258, 264, 274, 277, 323, 443, 465, 486, 488, 498, 733, 845, 885, 920, 921, 993, 995, 1136, 1198], "pthread": [101, 102, 148, 190, 201, 206, 258, 264, 274, 277, 808, 814, 920, 921, 1033, 1038, 1041, 1049, 1063, 1068], "timeslic": [101, 102, 148, 190, 920, 921, 1047, 1052], "suspend": [101, 102, 148, 190, 191, 363, 770, 772, 812, 883, 918, 920, 921, 932, 1038, 1063], "favor": [101, 102, 148, 920, 921, 1050, 1241], "fair": [101, 102, 148, 190, 885, 920, 921, 1050, 1052], "ensur": [101, 102, 148, 166, 277, 544, 592, 920, 921], "evenli": [101, 102, 148, 269, 920, 921], "cpu": [101, 102, 122, 136, 148, 189, 190, 193, 197, 200, 222, 232, 236, 316, 363, 409, 413, 480, 481, 493, 495, 500, 677, 809, 816, 840, 858, 871, 885, 892, 897, 907, 918, 920, 921, 924, 928, 985, 993, 994, 995, 1009, 1026, 1036, 1038, 1048, 1049, 1050, 1051, 1052, 1100, 1117, 1249, 1251], "infinit": [101, 102, 148, 190, 209, 228, 258, 262, 264, 267, 269, 274, 277, 285, 318, 322, 455, 473, 480, 920, 921, 925, 1047, 1050, 1094, 1095, 1096, 1125, 1161], "illus": [101, 102, 148, 920, 921, 925, 1047, 1050, 1249], "action": [101, 102, 200, 228, 284, 380, 534, 538, 645, 723, 947, 948, 1010, 1015, 1049, 1062, 1064, 1065, 1198, 1219], "undefin": [101, 102, 250, 371, 436, 443, 470, 522, 524, 538, 651, 658, 682, 689, 694, 718, 723, 755, 784, 1062], "behavior": [101, 102, 120, 148, 190, 192, 195, 226, 248, 250, 277, 443, 524, 526, 682, 689, 694, 723, 755, 772, 920, 921, 1016, 1020, 1063, 1066, 1087, 1092, 1109], "declar": [101, 102, 249, 250, 262, 267, 419, 435, 450, 459, 464, 466, 472, 473, 476, 479, 480, 483, 486, 487, 488, 492, 494, 496, 501, 502, 507, 534, 647, 654, 656, 716, 723, 725, 733, 734, 744, 755, 764, 780, 782, 802, 837, 839, 840, 995, 1015, 1019, 1021, 1022, 1050, 1233], "promis": [101, 102, 192, 293, 294, 296, 305, 353, 372, 373, 381, 430, 488, 566, 634, 646, 723, 770, 772, 773, 776, 777, 814, 815, 839, 840, 1062, 1115, 1241], "caller": [101, 102, 192, 267, 430, 432, 468, 474, 498, 500, 522, 656, 723, 736, 753, 802, 804, 809, 812, 879, 890, 1034, 1038, 1090, 1170], "uniniti": [101, 102, 372, 491, 637, 644, 646, 647, 648, 651, 723, 842], "guarante": [101, 102, 190, 227, 258, 277, 482, 547, 654, 723, 851, 858, 994, 995, 1050, 1051, 1059, 1087], "contigu": [101, 102, 495, 677, 694, 723, 873, 1025, 1212], "vec": [101, 102, 644, 646, 653, 654, 659, 660, 661, 662, 663, 723], "hysteresi": [103, 104, 106, 107, 114, 116, 126, 131, 132, 133, 167, 354, 407, 528, 530, 592], "_x": [105, 108, 588, 646, 647, 649, 651, 653, 654, 655, 657, 659, 669, 684, 749, 764, 766, 767, 768], "firstnam": [105, 109, 115, 133, 136, 222, 248, 261, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 309, 323, 329, 334, 341, 357, 384, 389, 544, 545, 573, 579, 588, 589, 602, 656, 702, 729, 733, 735, 737, 754, 914, 915, 952, 953, 955, 957, 960, 1090, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1119, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1199, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "lastnam": [105, 109, 115, 133, 136, 222, 251, 261, 267, 269, 271, 274, 277, 281, 284, 287, 289, 290, 302, 309, 323, 329, 334, 341, 357, 384, 389, 544, 545, 573, 579, 588, 589, 602, 656, 702, 727, 729, 733, 736, 739, 754, 840, 914, 915, 952, 953, 955, 957, 960, 1090, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1119, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1199, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "chosen": [105, 109, 201, 535, 986, 993, 995, 1021, 1025, 1047, 1051, 1197, 1210], "shorter": [105, 109, 209, 1097, 1108, 1140], "temporari": [105, 109, 191, 200, 216, 258, 264, 267, 274, 277, 317, 318, 339, 343, 535, 601, 602, 654, 750, 754, 755, 770, 784, 792, 838, 932, 1065, 1092, 1174], "consid": [105, 110, 111, 190, 192, 221, 225, 249, 258, 264, 274, 275, 277, 281, 305, 323, 344, 458, 485, 486, 494, 524, 526, 566, 719, 948, 993, 1050, 1106, 1114, 1191, 1219, 1256, 1264], "imagin": [105, 111, 190, 192, 371, 484, 489, 490, 507, 542, 555, 887, 927, 944, 986, 995, 1036, 1063], "w1sensor": [105, 111, 133, 586, 587, 588, 589, 601], "pragma": [105, 110, 111, 482, 514, 543, 545, 549, 554, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 601, 654, 658, 675, 678, 725, 773, 823, 825, 827, 828, 829, 830, 831, 838], "get_temperatur": [105, 110, 111, 225, 277, 340, 543, 546, 547, 549, 554, 556, 566, 567, 572, 574, 575, 577, 580, 581, 585, 588, 593, 594, 595, 596, 600, 601, 602, 613, 631, 752, 800, 801, 802, 803, 823, 825, 827, 828, 829, 830, 1102, 1179], "unus": [105, 111, 488, 543, 598, 600, 644, 648, 658, 697, 698, 752, 865, 925, 1044, 1058], "cstdint": [105, 111, 743, 771, 772, 819], "uint64_t": [105, 111, 438, 475, 601, 771, 772, 806, 1013, 1058], "w1_address": [105, 111], "_w1_address": [105, 111], "overrid": [105, 111, 112, 133, 249, 262, 277, 292, 354, 379, 380, 543, 549, 551, 556, 571, 573, 574, 575, 577, 578, 580, 602, 715, 716, 781, 782, 823, 831, 839, 840, 1087, 1102, 1236], "physic": [105, 111, 192, 195, 229, 236, 317, 318, 339, 343, 371, 380, 495, 719, 871, 924, 994, 1013, 1017, 1049, 1050], "36": [105, 111, 191, 195, 200, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 398, 403, 516, 543, 549, 567, 591, 594, 595, 596, 600, 601, 602, 752, 801, 802, 803, 819, 838, 970, 993, 1102, 1179], "samp": [105, 111], "unistd": [105, 111, 192, 485, 602, 634, 945, 993, 1009, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1031, 1046, 1049, 1055, 1058, 1062], "0xdeadbe": [105, 111], "correct": [105, 189, 197, 201, 228, 248, 250, 261, 398, 443, 480, 484, 485, 492, 495, 496, 501, 502, 504, 518, 552, 620, 652, 716, 718, 719, 752, 797, 800, 808, 840, 931, 935, 936, 960, 993, 994, 995, 1050, 1093, 1101, 1196, 1219, 1244], "liskov": [105, 110, 111, 504], "segreg": [105, 110, 111, 133, 504], "invers": [105, 110, 111, 133, 281, 372, 379, 413, 504, 542, 549, 851, 1050, 1051, 1254], "question2": [106, 114], "26": [106, 114, 193, 195, 200, 201, 202, 210, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 294, 299, 302, 306, 309, 313, 323, 329, 334, 341, 345, 351, 357, 363, 367, 393, 397, 415, 636, 637, 764, 780, 948, 970, 995, 1027, 1029, 1030, 1065, 1067, 1109, 1195, 1196, 1219], "sampl": [106, 114, 115, 123, 190, 201, 246, 249, 250, 262, 266, 272, 278, 281, 298, 314, 340, 357, 373, 376, 384, 500, 588, 814, 988, 1038, 1058, 1142], "set_stat": [110, 126, 132, 354], "nullptr": [110, 582, 583, 601, 612, 616, 742, 752, 753, 800, 801, 802, 814, 816, 818, 819, 835, 836, 1030, 1241], "_sensor": [110, 549, 556, 574, 575, 577, 580, 581, 802], "_switch": [110, 556], "_displai": 110, "_low": 110, "_high": 110, "current_temperatur": 110, "obvious": [111, 192, 193, 195, 201, 212, 420, 484, 488, 509, 564, 628, 659, 697, 712, 713, 742, 753, 787, 791, 796, 824, 838, 885, 887, 900, 924, 925, 931, 945, 994, 995, 1005, 1021, 1022, 1051, 1063, 1065, 1082, 1103, 1106, 1256], "remain": [111, 141, 190, 191, 201, 209, 222, 269, 277, 323, 513, 605, 606, 618, 647, 694, 700, 732, 738, 743, 805, 813, 869, 1002, 1052, 1063, 1065, 1166, 1169, 1170, 1173, 1181, 1183, 1199, 1233], "situat": [111, 113, 180, 190, 192, 201, 221, 248, 380, 528, 598, 599, 602, 614, 675, 753, 881, 887, 939, 941, 986, 1002, 1021, 1051, 1068, 1078, 1081, 1082, 1130, 1241], "carri": [113, 192, 197, 211, 486, 540, 547, 564, 819, 838, 993, 1052, 1065, 1089], "norm": [113, 267, 1204], "meantim": [113, 549, 1010], "fresh": [113, 191], "team": [113, 116, 133, 197, 202, 204, 205, 216, 224, 225, 226, 241, 250, 275, 317, 416, 927, 933, 940, 942, 1092, 1256, 1262], "made": [113, 120, 132, 186, 189, 190, 191, 193, 196, 197, 201, 241, 256, 281, 305, 340, 373, 398, 429, 467, 468, 470, 473, 504, 544, 548, 564, 570, 770, 871, 887, 918, 919, 925, 986, 993, 1019, 1025, 1030, 1050, 1068, 1094, 1101, 1111, 1148, 1196], "arbitrari": [113, 190, 210, 277, 281, 424, 440, 458, 494, 535, 666, 693, 694, 747, 805, 817, 846, 990, 1015, 1019, 1049, 1090, 1126, 1140, 1169], "sinc": [113, 170, 201, 206, 251, 257, 288, 394, 494, 497, 520, 524, 646, 684, 697, 741, 742, 770, 791, 796, 802, 817, 838, 887, 993, 1006, 1013, 1019, 1022, 1036, 1051, 1058, 1120, 1243], "whichev": 113, "enumer": [113, 210, 212, 222, 228, 233, 234, 238, 240, 246, 247, 249, 270, 274, 279, 285, 299, 303, 320, 323, 342, 352, 364, 367, 439, 486, 506, 743, 848, 883, 995], "pack": [113, 201, 250, 599, 620, 913, 948, 987, 989], "unpack": [113, 166, 208, 228, 234, 238, 240, 245, 249, 253, 258, 261, 266, 270, 271, 277, 282, 284, 288, 289, 300, 305, 307, 310, 319, 323, 341, 344, 346, 352, 354, 364, 367, 373, 379, 381, 383, 398, 782, 839, 840, 887, 913, 987, 989, 993, 1066, 1074, 1080, 1081, 1120, 1138, 1241], "kib": 113, "222": [113, 222, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 345, 351, 357, 363, 367, 538], "00": [113, 173, 192, 193, 195, 200, 212, 216, 224, 225, 226, 228, 229, 230, 231, 233, 235, 237, 239, 241, 243, 246, 250, 256, 258, 264, 274, 277, 278, 305, 306, 313, 314, 316, 376, 391, 498, 506, 532, 795, 817, 822, 826, 838, 914, 915, 970, 993, 994, 995, 1049, 1078, 1116, 1224], "addit": [113, 161, 192, 209, 221, 248, 277, 280, 380, 383, 441, 488, 513, 535, 563, 564, 578, 600, 646, 657, 663, 735, 887, 925, 1002, 1109, 1121, 1137, 1139, 1219], "checkout": [113, 170, 184, 193, 218, 860, 887, 888], "previou": [113, 194, 209, 340, 585, 637, 653, 735, 948, 981, 1021, 1093, 1115, 1160], "9bfda12": 113, "mosquitto": [113, 261, 265, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 376, 512, 1185, 1207], "smoothli": 113, "forward": [113, 161, 267, 293, 294, 295, 304, 325, 326, 353, 369, 373, 435, 450, 459, 465, 466, 472, 476, 479, 483, 492, 496, 501, 502, 706, 744, 751, 782, 792, 837, 839, 840, 887, 948, 972, 981, 985, 986, 996, 1001, 1241], "diverg": [113, 1049], "00aea42": 113, "delet": [113, 216, 228, 258, 277, 292, 302, 323, 354, 379, 380, 393, 491, 542, 545, 584, 601, 610, 614, 626, 634, 649, 652, 710, 713, 718, 742, 752, 753, 754, 782, 787, 799, 800, 801, 802, 818, 819, 829, 839, 840, 865, 895, 925, 1200, 1226, 1240, 1241], "footnot": [113, 193, 195, 196, 197, 200, 201, 204, 205, 212, 218, 221, 224, 308, 311, 543, 570, 614, 660, 662, 663, 676, 706, 725, 726, 856, 858, 919, 927, 942, 993, 994, 995, 1016, 1019, 1082, 1114, 1117, 1148, 1182, 1197, 1241, 1242], "term": [113, 120, 148, 188, 190, 192, 213, 241, 281, 314, 316, 371, 395, 494, 656, 659, 723, 802, 805, 920, 921, 995, 1014, 1050, 1062, 1196, 1231, 1244, 1255], "ss2023": 114, "ws2023": [114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 840], "ece21": [114, 115, 132, 133], "handout": [114, 115, 149], "bouncem": [115, 133, 136, 601, 602, 914, 915], "procf": [115, 229, 231, 305, 840, 926, 985, 1026, 1045, 1245, 1247], "umask": [115, 138, 295, 304, 305, 325, 326, 369, 370, 398, 403, 840, 917, 943, 967, 985, 1019, 1033], "diff": [115, 245, 264, 357, 644, 646, 1109, 1250], "raspi": [115, 153, 319, 398, 404, 840, 864, 887, 888, 889, 891, 896, 902, 905, 908, 985, 987, 988, 989, 990, 993, 994, 995, 1080, 1081], "spirit": [115, 458], "readm": [115, 172, 208, 314, 316, 993, 994], "modular": [115, 221, 226, 228, 256, 275, 307, 400, 401, 430, 534, 1065, 1093, 1261], "plc": 115, "sallok": 115, "constantsensor_nopoli": [115, 133, 590, 596, 642, 840], "randomsensor_nopoli": [115, 133, 590, 642, 840], "labexam": 115, "hysteresis_nopoli": [115, 116, 133, 590, 591, 642, 840], "upload": [115, 196, 948, 1146, 1218], "j": [115, 141, 166, 195, 201, 237, 252, 254, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 323, 329, 341, 345, 357, 444, 447, 464, 488, 495, 564, 656, 746, 757, 805, 897, 913, 1016, 1074, 1078, 1094, 1204, 1210], "bz2": [115, 166, 191, 500, 887, 909, 912, 1068, 1087], "influenc": [115, 1066, 1241], "felber": 115, "vscode": [115, 151, 219, 375, 378, 404, 417, 970], "folder": [115, 196], "comprehend": [115, 275, 443, 449, 1062], "workspacefold": 115, "suppli": [115, 192, 229, 602, 604, 648, 846, 887, 903, 923, 986, 990, 993, 995, 1010, 1019, 1152], "cpprefer": [115, 681, 682, 683, 684, 685, 687, 688, 689, 690, 693, 702, 721], "averagingsensor_nopoli": [115, 133, 590, 642, 840], "toolcas": [115, 128, 133, 166, 314, 316, 373, 380, 512, 513, 514, 515, 528, 529, 759], "mocksensor_nopoli": [115, 133, 590, 591, 592, 593, 642, 840], "figur": [115, 178, 184, 195, 196, 210, 265, 1086], "specifi": [115, 190, 206, 277, 289, 323, 438, 506, 509, 588, 591, 596, 599, 648, 728, 742, 757, 781, 792, 887, 948, 1006, 1019, 1023, 1051, 1063, 1117, 1132, 1140, 1145, 1162, 1181, 1183, 1212, 1214, 1219], "target_link_librari": [115, 217, 376, 378, 507, 508, 509, 512, 513, 515, 516, 531, 537, 538, 585, 621, 624, 630, 636, 639, 1061, 1066, 1067, 1230, 1233, 1235], "inter": [115, 190, 207, 213, 1050, 1247], "likewis": [115, 161, 264, 631, 661, 913, 933, 1005, 1021, 1074, 1196, 1233], "ledstripedisplay_nopoli": [115, 133, 590, 642, 840], "somewhat": [116, 209, 250, 494, 519, 547], "02131d959eaa": [116, 141, 585, 601, 602, 1023], "heat": [116, 166, 297, 541, 548, 592, 601, 840, 995, 1195, 1196], "hwmon2": [116, 363, 993], "temp1_input": [116, 993, 995], "boilingpot": [116, 118], "knob": [116, 1118], "steer": 116, "desir": [116, 195, 258, 264, 274, 277, 380, 439, 443, 454, 596, 646, 648, 654, 736, 885, 1020, 1022, 1198], "hardcod": [116, 191, 402, 620, 846, 850, 1157], "ledstripedisplai": [116, 126, 128, 131, 132], "unreason": 116, "cluster_fh2021": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 840], "fh2021_switch_interfac": [116, 117, 118, 119, 124, 125, 126, 132, 840], "fh2021_sensor_interfac": [116, 117, 118, 119, 125, 132, 840], "fh2021_boiling_pot": [116, 117, 118, 119, 125, 132, 840], "fh2021_sysfs_gpio_switch": [116, 117, 119, 125, 132, 840], "breadboard": [117, 119, 995, 1245, 1247], "acrobat": [117, 119], "boilingpot_suit": 118, "status_report": 118, "percentage_displai": 118, "fh2021_pwm_displai": [118, 124, 125, 128, 840], "pwm": [118, 119, 124, 125, 133, 136, 156, 161, 164, 305, 314, 840, 887, 985, 986, 992, 1029, 1247], "fh2021_boiling_pot_displai": [118, 125, 840], "fh2021_display_infrastructur": [118, 124, 125, 840], "infrastructur": [118, 119, 125, 133, 190, 499, 840, 843, 1059], "stripe": [119, 124, 128, 591], "reusabl": [120, 371], "compon": [120, 249, 262, 354, 497, 520, 973, 1050, 1251], "dedic": [120, 190, 191, 221, 226, 275, 305, 308, 311, 490, 506, 507, 514, 526, 855, 926, 927, 993, 994, 995, 1029, 1033, 1067, 1086, 1097, 1130, 1242, 1245], "constrain": [120, 824, 926, 1248, 1251], "decoupl": [120, 265, 542, 1049], "sink": [120, 122, 125, 317, 318, 333, 336, 339, 343, 380, 512, 513, 514, 515, 840], "datalogg": [120, 136, 137, 318, 340, 507], "target_include_directori": [120, 375, 378, 380, 507, 509, 510, 512, 513, 528, 529, 530, 531, 540], "announc": [120, 405, 509, 510, 712, 993, 994], "anyon": [120, 190, 634, 858], "node": [120, 195, 200, 209, 380, 478, 498, 509, 515, 529, 697, 843, 846, 850, 856, 865, 1082, 1207, 1224], "startlog": 120, "uint16_t": [120, 438], "unif": [120, 643], "leftov": 120, "gettim": 120, "defer": [120, 190, 504, 885, 907], "sinkfil": 120, "sinkmock": 120, "usabl": [120, 277, 323, 448, 547, 598, 753, 996], "sensorconfig": [120, 133, 344, 507], "sensorvalu": [120, 121, 123, 563, 577], "runtime_error": [120, 568, 569, 580, 582, 583, 584, 602, 816], "logger_suit": 120, "loggerbasictest": 120, "sensor_values_suit": 120, "sensor_config_suit": 120, "duplicate_sensor": 120, "outlook": [120, 133, 136, 151, 927], "prebuilt": [120, 993], "order": [120, 157, 179, 189, 195, 196, 200, 201, 209, 221, 222, 225, 227, 258, 264, 269, 279, 281, 284, 314, 331, 347, 423, 449, 460, 482, 494, 535, 544, 563, 618, 620, 627, 629, 691, 738, 838, 842, 858, 871, 887, 978, 986, 993, 995, 1011, 1052, 1065, 1078, 1094, 1114, 1163, 1173, 1256], "acquisitionloop": [120, 340, 344], "n_iter": 120, "doit": [120, 261, 549, 831], "write_measur": [120, 340], "mockingsink": 120, "receiv": [120, 191, 209, 264, 267, 305, 334, 375, 430, 566, 656, 755, 846, 858, 879, 887, 948, 986, 989, 995, 1002, 1010, 1015, 1039, 1047, 1062, 1063, 1087, 1090, 1140, 1172, 1187, 1204], "yaml": 120, "ini": [120, 172, 195, 208, 406, 409, 507, 1224], "fh2021_datalogg": [120, 121, 122, 123, 125, 840], "predecessor": [121, 123, 275, 283, 289, 333, 336], "sinklogg": [121, 123], "csvsink": [121, 340], "logfil": [121, 191, 228, 930, 982], "linksoben": 121, "rechtsunten": 121, "addmeasur": 121, "37": [121, 123, 200, 210, 211, 222, 223, 227, 232, 237, 239, 242, 245, 248, 250, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 393, 394, 567, 818, 823, 825, 827, 829, 1102, 1195, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "rememb": [121, 195, 196, 210, 217, 227, 248, 375, 449, 482, 524, 552, 677, 678, 712, 715, 753, 754, 802, 883, 887, 930, 945, 948, 967, 993, 1002, 1004, 1088, 1155, 1165], "auto": [121, 151, 199, 206, 210, 216, 292, 354, 372, 373, 379, 381, 513, 544, 549, 573, 574, 578, 579, 582, 583, 584, 637, 645, 677, 699, 700, 702, 744, 745, 752, 759, 762, 764, 767, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 785, 786, 787, 792, 794, 796, 801, 802, 803, 805, 816, 823, 825, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 887, 1062, 1241, 1247, 1254], "csvname": [121, 262, 307, 506], "valuenam": 121, "_config": 121, "sensor_valu": [121, 373], "getmeasur": 121, "rotat": [121, 191, 986, 1011], "backup": [121, 196, 229, 534, 916, 918, 1002, 1209], "fh2021_datalogger_csv_sink": [121, 125, 840], "boil": [122, 123, 126, 132, 514, 528, 529, 840, 887], "pot": [122, 123, 126, 132, 514, 528, 529, 840], "struct": [123, 153, 154, 168, 193, 216, 250, 251, 267, 368, 465, 470, 476, 477, 478, 479, 482, 483, 486, 488, 490, 492, 496, 501, 502, 507, 544, 549, 566, 601, 602, 646, 647, 652, 654, 655, 656, 676, 725, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 742, 744, 745, 746, 747, 754, 770, 773, 775, 776, 777, 778, 782, 787, 805, 806, 816, 819, 827, 828, 830, 831, 837, 838, 839, 840, 846, 848, 851, 853, 855, 856, 858, 871, 875, 877, 879, 881, 883, 889, 890, 895, 897, 900, 904, 906, 907, 987, 989, 993, 1012, 1013, 1025, 1031, 1038, 1049, 1052, 1058, 1059, 1062, 1063, 1243], "sensor_config": 123, "getallmeasur": 123, "localhost": [123, 1202, 1207], "1883": [123, 1207], "port": [123, 148, 192, 197, 202, 261, 295, 304, 325, 326, 340, 369, 384, 416, 840, 920, 921, 927, 976, 985, 996, 1001, 1005, 1023, 1148, 1203, 1207, 1219, 1247], "transport": [123, 213, 265, 267, 599, 816, 1187, 1207], "sensor1": [123, 299, 549, 823, 825, 827, 829, 830], "sensor2": [123, 549, 823, 825, 827, 829, 830], "burden": [123, 173, 506, 658, 1092, 1225], "handmad": 123, "fedora": [123, 173, 188, 195, 201, 202, 218, 305, 357, 614, 840, 844, 847, 849, 852, 854, 857, 864, 866, 867, 868, 872, 878, 884, 888, 891, 896, 902, 905, 908, 944, 948, 985, 988, 1067, 1068, 1076, 1077, 1078, 1081, 1207, 1231], "mosquitto_new": 123, "mosquitto_connect": 123, "mosquitto_destroi": 123, "prohibit": [123, 654], "wide": [123, 197, 201, 420, 421, 819, 919, 1002, 1059, 1065], "iot": [123, 125, 133, 265, 305, 840], "broadcast": [123, 814, 987, 994, 1038, 1063], "flexibl": [123, 297, 380, 509, 541, 555, 562, 576, 590, 642, 687, 840, 1034, 1049, 1065, 1066, 1067, 1083, 1084, 1135], "fh2021_datalogger_mqtt_sink": [123, 125, 840], "percentag": [124, 128, 498], "show_percentag": [124, 128], "wire": [124, 986, 996, 1078, 1245], "connect": [124, 154, 177, 190, 197, 209, 229, 241, 262, 305, 334, 395, 403, 404, 478, 816, 918, 982, 986, 987, 994, 995, 1004, 1009, 1015, 1029, 1200, 1202, 1207, 1219, 1242, 1253, 1255], "shown": [124, 195, 227, 389, 970, 1059, 1204], "src_demo": [124, 128], "logger": [125, 133, 137, 318, 336, 340, 343, 378, 379, 507, 512, 513, 514, 515, 528, 529, 806, 840], "fh2021_libgpiod_switch": [125, 126, 840], "fh2021_datalogger_integr": [125, 840], "fh2021_boiling_pot_full_integr": [125, 840], "fh2021_boiling_pot_basic_integr": [125, 840], "fh2021_sensor_w1": [125, 840], "fh2021_mqtt_tkinter": [125, 127, 840], "subscrib": [125, 265, 277, 840], "jjj": [126, 157, 166, 185, 230, 235, 243, 265, 313, 318, 407, 842, 843, 844, 848, 856, 1259], "mockswitch": [126, 131, 132, 166], "libgpiodswitch": 126, "tkinter": 127, "stackoverflow": [127, 398, 403, 480], "2400262": 127, "simul": [127, 221, 371, 404, 405, 601], "random": [127, 133, 207, 209, 225, 237, 249, 261, 262, 265, 269, 271, 274, 277, 282, 284, 287, 309, 318, 351, 357, 363, 367, 373, 393, 398, 440, 519, 528, 530, 547, 549, 554, 563, 589, 600, 610, 611, 612, 613, 615, 616, 617, 647, 800, 918, 995, 1006, 1025, 1055, 1090, 1102, 1125, 1198, 1207], "pca9685": [128, 133, 136, 153, 154, 305, 840, 985, 986, 992], "pwmchip0": [128, 986, 994], "pwm0": [128, 986, 994], "danc": [128, 196, 601, 907, 1082], "phase": [128, 141, 237, 568, 582, 988, 1059, 1094], "cumbersom": [128, 192, 194, 228, 654, 677, 746, 790, 843, 1033, 1059, 1231], "percentagedisplai": 128, "round": [128, 190, 256, 261, 271, 281, 297, 302, 351, 353, 367, 541, 548, 549, 551, 553, 562, 563, 576, 590, 642, 840, 1052, 1254], "hood": [128, 192, 1065], "relationship": [128, 354, 373, 398, 556, 589, 631, 712, 806, 1034, 1067, 1082, 1098, 1102, 1197], "pwmdisplai": 128, "pwm_control": 128, "channel": [128, 154, 195, 210, 233, 243, 986, 994, 1058], "bit": [128, 132, 186, 189, 190, 192, 195, 197, 200, 201, 221, 222, 225, 232, 251, 262, 264, 265, 271, 295, 298, 304, 305, 308, 311, 325, 326, 344, 369, 370, 393, 398, 403, 409, 420, 426, 432, 438, 443, 450, 459, 466, 467, 472, 476, 479, 482, 483, 492, 496, 501, 502, 585, 599, 659, 725, 744, 779, 782, 792, 802, 837, 838, 839, 840, 883, 887, 906, 917, 918, 943, 945, 947, 985, 986, 987, 989, 994, 996, 1019, 1049, 1066, 1068, 1076, 1086, 1126, 1191, 1204, 1241], "pwm5": 128, "visibl": [128, 132, 230, 250, 316, 384, 430, 432, 434, 458, 460, 491, 492, 496, 501, 502, 522, 526, 530, 586, 735, 840, 858, 995, 1059, 1131, 1160, 1200, 1251], "10000000": [128, 192, 264, 446, 1035, 1092, 1100], "set_percentag": [128, 161], "duti": [128, 161, 986, 994], "duty_cycl": [128, 986, 994], "unbuff": 128, "automat": [128, 132, 180, 192, 194, 196, 197, 239, 241, 245, 251, 258, 264, 274, 277, 281, 314, 316, 434, 443, 470, 487, 490, 494, 506, 555, 556, 645, 648, 712, 716, 755, 784, 824, 839, 840, 843, 858, 887, 993, 995, 1022, 1087, 1140, 1148, 1153, 1251, 1257], "serv": [131, 194, 196, 455, 1197, 1225, 1253], "ground": [131, 994, 995], "mocksensor": [131, 133, 166], "upstream": [132, 193, 196, 201, 865], "sysfsgpioswitch": 132, "wherea": [132, 522], "gpio20": 132, "voltag": [132, 986, 993], "constructur": 132, "proid": 132, "lifecycl": [132, 1254], "avg": [133, 277, 357, 487, 528, 530, 546, 563, 574, 593, 600, 823, 825, 827, 829], "inlin": [133, 210, 216, 228, 242, 258, 287, 290, 292, 314, 341, 345, 351, 380, 465, 487, 490, 631, 646, 659, 698, 736, 788, 806, 823, 825, 827, 828, 829, 830, 838, 1086, 1166], "lifetim": [133, 191, 248, 250, 267, 279, 435, 450, 459, 466, 472, 476, 477, 479, 483, 492, 496, 501, 502, 556, 649, 732, 744, 755, 782, 837, 839, 840, 1085], "averagingsensor": [133, 546, 574], "scheme": [133, 277, 323, 340, 343, 657, 1085, 1089], "constantsensor": [133, 507, 546, 549, 554, 566, 567, 575, 587, 594, 600, 610, 611, 612, 613, 615, 616, 752, 800, 801, 802, 803, 1102, 1179], "meet": [133, 195, 197, 221, 371, 482, 932, 1078, 1260], "liskow": [133, 552], "gcc": [133, 188, 191, 192, 217, 237, 239, 258, 264, 274, 277, 391, 417, 419, 443, 460, 464, 482, 485, 486, 488, 498, 499, 534, 535, 628, 675, 678, 811, 819, 887, 888, 925, 945, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1033, 1036, 1066, 1068, 1078, 1080, 1081, 1082, 1083, 1084, 1116, 1233], "cycl": [133, 166, 251, 286, 504, 506, 770, 801, 815, 839, 840, 985, 986, 994, 1026, 1042, 1048], "todai": [133, 191, 241, 249, 265, 298, 315, 331, 344, 347, 407, 432, 1191, 1249, 1256], "minut": [133, 168, 190, 196, 197, 221, 225, 228, 265, 995, 1191, 1207], "suppos": [133, 141, 225, 281, 383, 517, 566, 865, 887, 904, 927, 986, 1036, 1185, 1224], "deploi": [133, 202, 229, 398, 403, 542, 877, 914, 915, 994, 995, 1000, 1002, 1006], "leddisplai": 133, "pwmcontrol": 133, "minor": [133, 197, 201, 258, 264, 274, 277, 307, 846, 853, 918], "tweak": [133, 1224], "standup": 133, "followup": [133, 272, 333, 336, 587, 1180], "bonu": 133, "donat": [133, 987], "relai": 133, "board": [133, 160, 162, 163, 189, 191, 887, 993, 1245], "cooker": 133, "gapher": 133, "tape": 133, "coordin": [133, 598, 644, 646, 653, 764, 1011], "fat": [133, 189, 193, 197, 265, 736, 806, 918, 1203], "notic": [133, 189, 190, 192, 258, 264, 274, 277, 490, 516, 535, 587, 836, 928, 1035, 1037, 1098, 1213], "wikipedia": [133, 154, 206, 267, 494, 656, 995, 1006, 1052, 1085, 1204], "summer": [134, 152, 397, 398, 404], "winter": [134, 136, 165], "gl\u00fchwein": 136, "trinken": 136, "stece2022": [136, 137, 141, 144, 151, 156], "blob": [136, 137, 144, 163, 190, 305, 316, 378, 417, 620, 887], "deploy": [137, 152, 190, 221, 225, 246, 332, 348, 374, 375, 376, 377, 378, 517, 523, 533, 536, 539, 840, 862, 1191, 1257], "wednesdai": [138, 221, 229, 311], "essenti": [138, 192, 218, 267, 314, 316, 732], "syscal": [139, 1009], "o_rdonli": [140, 840, 845, 985, 1011, 1015, 1016, 1019, 1022, 1023, 1024, 1026, 1027, 1030, 1031, 1045, 1055, 1058, 1062, 1065], "o_excl": [140, 840, 985, 1015, 1016, 1024, 1026, 1045, 1058], "unchang": [141, 281, 654, 743, 1083], "green": [141, 166, 245, 281, 566, 601, 602, 661, 986], "x86_64": [141, 173, 193, 195, 241, 248, 357, 395, 417, 443, 534, 601, 661, 860, 865, 1068, 1078], "omg": [141, 383, 464, 846, 1225], "sscanf": [141, 580], "errno": [141, 249, 262, 264, 284, 319, 490, 865, 1016, 1033, 1062, 1063, 1081, 1089, 1219], "enoent": [141, 1065], "eacc": [141, 248], "convers": [141, 168, 228, 240, 247, 250, 251, 258, 263, 264, 267, 270, 273, 274, 279, 282, 285, 303, 314, 316, 320, 324, 330, 342, 346, 350, 352, 358, 364, 398, 421, 436, 450, 459, 466, 472, 476, 479, 483, 490, 492, 496, 501, 502, 506, 563, 625, 712, 716, 741, 743, 744, 746, 782, 837, 839, 840, 890, 1140, 1158, 1162, 1165, 1176, 1255], "milli": [141, 993, 995], "celsiu": [141, 420, 421, 543, 554, 585, 993, 995], "21340": 141, "34": [141, 200, 201, 208, 211, 222, 227, 232, 237, 239, 241, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 289, 290, 299, 302, 306, 307, 309, 313, 319, 323, 329, 334, 337, 341, 345, 351, 357, 363, 367, 392, 393, 394, 395, 549, 563, 567, 568, 569, 570, 582, 583, 584, 681, 682, 683, 684, 685, 690, 722, 945, 948, 970, 1102, 1121, 1195, 1196], "ordinari": [141, 420, 659, 713, 764, 871, 879, 951, 1029, 1112, 1119], "float": [141, 211, 222, 226, 228, 230, 232, 239, 240, 245, 248, 258, 261, 262, 264, 267, 269, 271, 274, 277, 282, 285, 299, 302, 307, 319, 323, 329, 340, 342, 345, 351, 357, 363, 367, 393, 394, 420, 421, 422, 426, 436, 438, 439, 443, 473, 482, 487, 506, 554, 563, 668, 669, 721, 759, 819, 993, 1053, 1063, 1102, 1120, 1135, 1142, 1148, 1238, 1243], "read_temperatur": 141, "somewher": [141, 210, 229, 241, 248, 281, 293, 294, 383, 395, 465, 482, 484, 504, 549, 570, 637, 770, 1034, 1092, 1117, 1204], "overcom": [144, 192, 340, 398, 484], "signatur": [144, 200, 245, 277, 281, 302, 323, 646, 742, 789, 805, 806, 1059], "sensor_get_temperatur": 144, "react": [144, 211, 226, 228, 230, 331, 347, 486, 666, 993, 1010, 1089, 1256], "catch": [144, 211, 251, 267, 290, 316, 383, 409, 544, 551, 573, 590, 607, 609, 642, 667, 670, 686, 692, 696, 701, 705, 708, 709, 721, 724, 725, 727, 734, 735, 736, 737, 738, 739, 770, 778, 816, 819, 838, 840, 1063], "attent": [144, 190, 245, 261, 269, 428, 449, 451, 480, 499, 535, 678, 683, 753, 784, 787, 879, 1051, 1087, 1214, 1236], "ptr": [145, 373, 477, 620, 752, 800, 801, 802, 803, 818], "arith": [145, 564, 636, 637, 672, 673, 674, 675, 680], "stl": [145, 147, 216, 407, 470, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 643, 680, 684, 706, 708, 709, 723, 739, 750, 840, 1240, 1241, 1243], "demo2": 145, "err": [145, 173, 190, 228, 248, 313, 354, 371, 373, 381, 601, 697, 742, 744, 782, 790, 802, 837, 839, 840, 851, 881, 883, 918, 987, 989, 993, 1109, 1213], "lambda": [146, 216, 248, 249, 262, 264, 267, 279, 292, 299, 316, 319, 324, 341, 345, 357, 373, 379, 380, 506, 620, 684, 757, 782, 787, 792, 794, 806, 809, 814, 839, 840, 1085, 1240, 1241, 1243], "queue": [148, 187, 188, 191, 200, 201, 207, 213, 233, 234, 236, 265, 293, 294, 296, 305, 317, 318, 339, 340, 343, 353, 372, 373, 381, 566, 815, 839, 840, 881, 889, 907, 920, 921, 925, 985, 1026, 1038, 1042, 1251, 1253, 1254], "enhanc": [148, 490, 920, 921], "against": [148, 192, 201, 241, 249, 261, 262, 464, 506, 508, 516, 585, 601, 817, 860, 862, 867, 871, 879, 923, 1021, 1068, 1071, 1072, 1074, 1084, 1098, 1157, 1224, 1249], "libc": [148, 201, 1065, 1068, 1071, 1072, 1082, 1083], "ss2024": 149, "livecod": [151, 373, 375], "findet": [152, 165, 207], "bachelorstudium": [152, 165], "elektronik": [152, 165, 1247], "semesterwochenstunden": [152, 165], "ect": [152, 165], "lehrveranstaltungsleit": [152, 165], "studierenden": [152, 165], "vorkenntniss": [152, 165, 1246, 1257], "lehrveranstaltungen": [152, 165], "vorausgesetzt": [152, 165, 1239, 1240, 1258], "informatik": [152, 165, 399], "wissen": [152, 165, 206, 416, 1238], "grundaufgaben": [152, 165], "betriebssystemen": [152, 165, 416, 1247], "bescheid": [152, 165], "abstraktionen": [152, 165], "programmierparadigmen": [152, 165], "gesamtnot": [152, 165], "praktischen": [152, 165], "theoretischen": [152, 165], "teil": [152, 165, 198, 207, 216, 224, 1238], "mehreren": [152, 165, 222, 238], "laborklausuren": [152, 165], "klausur": [152, 165], "besteht": [152, 165], "m\u00f6glichkeit": [152, 165, 206, 224, 1238], "hausaufgaben": [152, 165], "sammeln": [152, 165], "diesen": [152, 165, 416], "hinzugerechnet": [152, 165], "ausfallsicherung": [152, 165], "dienen": [152, 165, 1238], "einzelergebniss": [152, 165], "erfolgt": [152, 165], "punkten": [152, 165], "gesamtergebniss": [152, 165], "durch": [152, 165, 198, 199, 206, 212, 216, 224, 232, 242, 274, 284, 367, 398, 403, 416, 977, 1238], "umrechnung": [152, 165], "prozent": [152, 165], "notwendigen": [152, 165], "unterricht": [152, 165], "klausuren": [152, 165], "abgehalten": [152, 165], "endnot": [152, 165], "ergibt": [152, 165], "erreichten": [152, 165], "wobei": [152, 165, 232], "folgend": [152, 165, 222, 233, 278], "anwendung": [152, 165], "kommt": [152, 165, 224, 239, 249, 252, 278, 1258, 1259], "91": [152, 165, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1195, 1196], "81": [152, 165, 200, 208, 210, 222, 232, 237, 239, 245, 248, 250, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1067, 1092, 1195, 1196], "90": [152, 165, 193, 200, 208, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 506, 1195, 1196, 1224], "71": [152, 165, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1066, 1067, 1195, 1196], "80": [152, 165, 195, 200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 498, 591, 970, 1049, 1080, 1092, 1148, 1195, 1196, 1224], "befriedigend": [152, 165], "gen\u00fcgend": [152, 165], "einzuloggen": [152, 165], "abschlussklausur": [152, 165], "zugelassen": [152, 165], "beschrieben": [152, 165], "negativen": [152, 165], "beurteilung": [152, 165], "sowohl": [152, 165, 1247], "laborklausur": [152, 165], "theoretisch": [152, 165], "schriftlich": [152, 165, 399], "wiederholt": [152, 165], "kommissionel": [152, 165], "wiederholung": [152, 165, 216, 233, 240, 276], "immer": [152, 165, 198, 199, 212, 216, 222, 224, 237, 309, 1240], "gesamtpr\u00fcfung": [152, 165], "vergleichbar": [152, 165, 222], "antritt": [152, 165], "bestanden": [152, 165], "einmalig": [152, 165], "positiv": [152, 165], "absolvierten": [152, 165], "innerhalb": [152, 165, 1051], "zwei": [152, 165, 174, 199, 208, 216, 222, 234, 237, 239, 242, 245, 258, 261, 269, 274, 277, 281, 287, 309, 329, 337, 341, 345, 367, 393, 608, 698, 699, 700, 701, 976, 1238], "wochen": [152, 165], "bekanntgab": [152, 165], "pr\u00fcfungsergebniss": [152, 165], "melden": [152, 165], "teilleistungen": [152, 165], "erbringen": [152, 165], "legt": [152, 165], "fest": [152, 165, 199], "welch": [152, 165, 222, 262], "wiederholen": [152, 165, 212, 416], "anmeldung": [152, 165, 416], "erforderlich": [152, 165], "gesamtzahl": [152, 165], "pr\u00fcfungsversuch": [152, 165], "angerechnet": [152, 165], "jeder": [152, 165, 198, 1238, 1239], "wiederholungspr\u00fcfung": [152, 165], "z\u00e4hlt": [152, 165], "zumindest": [152, 165, 198, 222, 1238], "besuchen": [152, 165], "labor\u00fcbungen": [152, 165, 399], "gilt": [152, 165, 199, 212, 253, 416], "anwesenheitspflicht": [152, 165], "ausnahmen": [152, 165, 233], "begr\u00fcndeten": [152, 165], "einzelf\u00e4llen": [152, 165], "krankheit": [152, 165], "m\u00f6glich": [152, 165, 1240], "solchen": [152, 165, 222, 232], "\u00fcbungen": [152, 165, 216, 233, 234, 252, 416, 1238], "nachzuholen": [152, 165], "ersatzleistungen": [152, 165], "bjarn": [152, 165, 643, 824], "stroustrup": [152, 165, 643, 824], "4th": [152, 165], "edit": [152, 165, 168, 193, 195, 196, 236, 241, 277, 305, 370, 418, 598, 860, 887, 994, 1146, 1217, 1250], "brian": [152, 165, 168, 399, 400, 418, 1238], "kernighan": [152, 165, 168, 418, 1238, 1239], "denni": [152, 165, 168, 418, 458, 676, 1238], "ritchi": [152, 165, 168, 418, 458, 676, 1238, 1239], "bl\u00f6cken": [152, 165], "crossdevelop": [152, 165], "tats\u00e4chlich": [152, 165], "vorgetragen": [152, 165, 224], "stoff": [152, 165, 252], "dort": [152, 165, 174, 199, 206, 208, 216, 232, 233, 242, 416, 1259], "tagesaktuel": [152, 165], "verf\u00fcgung": [152, 165, 222, 1240], "gestellt": [152, 165, 212, 222, 416, 1240], "proxim": [153, 154, 161], "vl53l1x": [153, 154, 161], "gyroscop": [153, 154, 161], "bno055": [153, 154, 161], "motor": [153, 154, 161, 407, 840, 985, 992], "btn9960lv": [153, 154, 161], "servo": [153, 154, 161], "bootload": [153, 182, 189, 200, 500, 924, 993], "i2cdetect": [153, 994], "ic2": 153, "smbu": 153, "ws2812": [153, 154], "spi_ioc_transf": [153, 154], "tx_buf": [153, 154], "xfer_byt": [153, 154], "len": [153, 154, 208, 209, 210, 212, 222, 232, 237, 239, 240, 245, 248, 249, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 330, 341, 345, 351, 357, 363, 367, 390, 393, 506, 883, 989, 1093, 1106, 1119, 1121, 1127, 1129, 1136, 1138, 1140, 1141, 1186, 1204, 1208, 1212, 1215], "uint32_t": [153, 154, 438], "xfer_siz": [153, 154], "speed_hz": [153, 154], "profil": [153, 154, 258, 264, 274, 277, 357, 416, 493, 499, 502, 840, 887, 919, 1239, 1243], "frequency_hz": [153, 154], "ret": [153, 154, 261, 264, 269, 506, 764, 1055, 1092, 1137], "_fd": [153, 154], "spi_ioc_messag": [153, 154], "raspberrypi": [153, 154, 188, 887, 888, 993, 1067, 1075], "bcm2711": [153, 154], "accout": [153, 154], "byte": [153, 154, 189, 192, 206, 208, 258, 264, 274, 277, 284, 287, 302, 323, 329, 345, 351, 357, 363, 383, 398, 420, 428, 438, 439, 470, 473, 482, 485, 491, 495, 549, 644, 649, 652, 656, 663, 676, 801, 838, 901, 918, 925, 948, 980, 987, 993, 1010, 1011, 1012, 1015, 1017, 1019, 1020, 1021, 1022, 1031, 1047, 1050, 1055, 1058, 1062, 1115, 1121, 1126, 1140, 1204], "waveform": [153, 154], "garante": [153, 154], "mosi": [153, 154, 990], "signal": [153, 154, 177, 214, 316, 416, 498, 816, 840, 858, 879, 925, 985, 986, 994, 1026, 1033, 1041, 1049, 1050, 1055, 1059, 1250, 1251, 1252], "ala": [153, 154, 340, 343, 569, 659, 944, 1011, 1053, 1219], "These": [154, 166, 186, 192, 194, 195, 258, 264, 274, 277, 535, 542, 860, 887, 993, 1067, 1246], "coincident": 154, "ppm": [154, 164], "peripher": [154, 156, 924, 1247], "kickoff": 156, "amazon": [157, 168], "ueber": [158, 237], "luma": 158, "anzeig": 158, "plattform": 158, "evaluierung": [158, 247], "erweiterungsboard": 158, "touch": [159, 190, 196, 221, 258, 264, 274, 277, 506, 933, 942, 947, 993, 1016, 1022, 1245, 1248, 1249], "800x480": 159, "pixel": [159, 210, 367], "breakout": [160, 163, 197, 993], "adafruit": 160, "arduino": [404, 406, 986, 994, 1207], "cdn": 160, "asset": [160, 261, 1148], "000": [160, 306, 341, 345, 351, 506, 947, 986], "125": [160, 208, 232, 237, 239, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 988], "776": [160, 264], "bst": 160, "ds000": 160, "crazi": 161, "calibr": 161, "acceler": [161, 986], "stellmotor": 161, "sensoren": 161, "allgemein": [161, 233], "1024": [161, 232, 264, 918, 925, 948, 988, 1011, 1065], "adc": 161, "get_valu": 161, "gyro": 161, "spaeter": 161, "braucht": [161, 198, 199], "fuer": [161, 208, 269, 274, 281], "regelkreis": 161, "accel": 161, "cancel": [161, 809, 1041], "void_mov": 161, "extra": [161, 201, 222, 232, 258, 455, 510, 628, 799, 887], "rpm": [161, 326, 357, 539], "evalu": [162, 239, 258, 263, 269, 279, 422, 442, 447, 449, 457, 464, 465, 519, 563, 564, 577, 578, 749, 759, 931, 948, 1089, 1123, 1125, 1132, 1231], "infineon": 162, "dc": [162, 200, 544], "shield_btn9960lv": 162, "brush": 162, "bridg": [162, 193], "flight": [163, 986], "tof": [163, 1141], "pimoroni": 163, "photon": 163, "pololu": 163, "mjbogusz": 163, "vl53l0x": 163, "torvald": [163, 879, 887], "iio": 163, "research": [163, 189, 190, 302, 1197], "rc": [164, 191, 357, 986], "hobbi": [164, 986], "discret": [164, 251, 281, 340, 492, 496, 501, 502, 744, 782, 837, 839, 840], "beurteilungsschema_1": 165, "thermostat": [166, 592], "certain": [166, 190, 221, 228, 371, 380, 485, 490, 568, 591, 592, 770, 792, 883, 918, 932, 1038, 1065, 1114], "threshold": [166, 592], "rise": [166, 195, 592, 869, 1029, 1030, 1049], "drive": [166, 177, 307, 484, 592, 994, 1015, 1198], "nop_when_within_rang": [166, 592], "hysteresis_suit": [166, 592], "hyst": [166, 592], "within": [166, 192, 267, 277, 323, 416, 591, 592, 596, 601, 646, 716, 780, 851, 986, 1101, 1118, 1130, 1215], "falls_below_rang": [166, 592], "set_temperatur": [166, 591, 592, 593, 595], "ON": [166, 509, 510, 524, 537, 539, 591, 592, 597, 1049], "rises_above_rang": [166, 592], "35": [166, 200, 211, 222, 229, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 394, 563, 592, 735, 737, 753, 1102, 1195], "rises_above_range_when_on": [166, 592], "273": [166, 261, 264, 269, 271, 277, 281, 302, 309, 323, 329, 351, 357, 363, 367, 507, 592, 610, 611, 612, 613, 615, 616, 825, 827, 829, 1102], "placehold": [166, 192, 570, 602, 757, 806, 993, 995], "recreat": [166, 858, 960, 1082], "dtle": [166, 1233], "cwd": [166, 357, 599, 838, 913, 925, 951, 970, 972, 973, 977, 1067], "roedel": [166, 193, 599, 602, 1067, 1081, 1178, 1226], "gtest_main": [166, 294, 549, 598, 600, 601, 621, 624, 636, 661, 800, 801, 1230, 1235], "global": [166, 192, 193, 210, 216, 221, 225, 230, 234, 237, 250, 258, 261, 264, 267, 268, 274, 277, 280, 291, 294, 302, 314, 317, 319, 323, 328, 332, 339, 343, 344, 348, 349, 350, 355, 356, 361, 362, 363, 365, 366, 374, 377, 393, 398, 443, 460, 466, 472, 476, 479, 483, 487, 490, 492, 496, 497, 501, 502, 510, 516, 517, 523, 524, 526, 529, 533, 549, 555, 564, 598, 599, 600, 601, 642, 649, 661, 744, 782, 785, 800, 801, 811, 837, 839, 840, 856, 995, 1033, 1036, 1040, 1041, 1043, 1065, 1087, 1090, 1098, 1100, 1133, 1148, 1191, 1219, 1227, 1231], "tear": [166, 190, 294, 549, 598, 599, 600, 601, 661, 801, 856, 1065, 1231], "ran": [166, 222, 294, 344, 537, 549, 598, 599, 600, 601, 661, 801, 1083, 1231], "anyth": [166, 192, 196, 197, 221, 248, 264, 268, 291, 313, 314, 405, 504, 509, 531, 556, 591, 665, 735, 755, 834, 835, 836, 986, 998, 1006, 1010, 1016, 1047, 1082, 1087, 1088, 1089, 1132, 1140, 1196, 1213, 1217, 1245], "virtualbox": [168, 241, 927], "egon": 168, "teinik": 168, "ansi": [168, 418], "prentic": 168, "hall": 168, "willian": 168, "shott": 168, "2nd": [168, 792, 1233], "1st": [168, 282, 1233], "starch": 168, "laboratori": 169, "stece": 169, "dir": [170, 222, 241, 249, 262, 271, 274, 281, 299, 302, 322, 323, 341, 363, 367, 383, 391, 471, 506, 534, 538, 540, 933, 1066, 1067, 1080, 1103, 1219, 1226], "wo": [170, 198, 207, 208, 216, 222, 224, 416, 1238, 1239], "jf": [170, 197, 233, 234, 292, 309, 398, 403, 566, 580, 862, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "aon": 170, "biz": 170, "svn": [170, 251], "lokalen": 170, "fetch": [170, 191, 887, 1034, 1062], "myremot": 170, "orig": [170, 193, 239], "stia": 170, "seo": [171, 899], "playground": [171, 173], "i2": [171, 177, 182, 284, 319, 840], "kontron": [171, 184, 840], "smarc": [171, 184, 840], "pointless": [171, 302, 316, 323, 340, 344, 353, 486, 653, 1031], "kajak": 171, "donau": 171, "proper": [172, 190, 217, 480, 862, 887, 1021, 1109], "manifest": [172, 1078, 1227], "cfg": [172, 184, 357], "author_email": 172, "classifi": [172, 1146, 1193], "tox": 172, "travi": 172, "yml": 172, "upgrad": [172, 180, 181, 208, 840, 1219, 1226], "zip": [172, 184, 249, 269, 275, 289, 302, 352, 357, 948, 954, 970], "zipfil": [172, 249], "99": [172, 200, 208, 222, 232, 239, 245, 248, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 498, 1052, 1129, 1165, 1195], "999": [172, 261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357], "whl": [172, 1146, 1219], "uninstal": [172, 515, 537, 1219, 1224], "pypa": 172, "sampleproject": 172, "gnome3": [173, 923], "fedoraproject": [173, 193, 860], "workstat": [173, 887], "redhat": [173, 326, 357, 500], "39": [173, 200, 208, 210, 211, 222, 227, 232, 237, 239, 241, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 334, 337, 341, 345, 351, 357, 363, 367, 390, 391, 392, 393, 394, 395, 563, 716, 764, 933, 1065, 1195, 1196], "thirti": 173, "flatpak": [173, 261, 277, 284, 287, 302, 309, 319, 323, 326, 345, 351, 357, 363, 980], "flathub": [173, 219], "stabl": [173, 182, 197, 201, 504, 865, 887, 927, 1049, 1082, 1084, 1146, 1220], "gnome": [173, 180, 190, 195, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 500, 887, 923, 980, 1050], "ipc": [173, 187, 190, 415, 838, 840, 985, 1026, 1056, 1245, 1253, 1254, 1255], "fallback": [173, 1089, 1109], "x11": [173, 180, 357], "wayland": [173, 180, 188, 195], "dri": 173, "op": [173, 951, 1141], "kb": [173, 192, 1226], "369": [173, 264, 309, 323, 351, 357], "mb": [173, 192, 926], "230": [173, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 513], "375": [173, 264, 271, 281, 309, 323, 341, 351, 357, 367, 493], "diagram": [173, 267, 546, 564, 566, 900, 986, 993, 995], "first_model": 173, "unavail": [173, 812], "cairo": 173, "gobject": 173, "append": [173, 208, 209, 210, 211, 212, 222, 227, 229, 232, 237, 239, 240, 241, 242, 245, 248, 253, 254, 255, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 376, 380, 393, 394, 506, 519, 528, 535, 619, 637, 678, 694, 706, 734, 848, 860, 875, 887, 914, 915, 930, 933, 954, 967, 993, 1002, 1015, 1053, 1086, 1092, 1093, 1106, 1122, 1127, 1130, 1132, 1137, 1140, 1141, 1168, 1216, 1219], "regogn": 173, "cental": 173, "phycial": 173, "gaphor_model": 173, "fh_source_sink": 173, "progress": [173, 841, 950, 1233], "sourceandsink": 173, "stuck": [173, 200], "assum": [173, 192, 277, 281, 323, 488, 816, 865, 948, 993, 995, 1006, 1081, 1151, 1226], "lib64": [173, 217, 222, 248, 258, 264, 274, 277, 281, 357, 500, 516, 526, 537, 539, 1065, 1068, 1083, 1090, 1212, 1213, 1219, 1233], "pathlib": [173, 358, 366, 368, 1224], "682": [173, 264, 970], "relative_to": 173, "rais": [173, 211, 212, 226, 228, 230, 248, 249, 258, 262, 264, 265, 269, 271, 274, 275, 277, 281, 289, 290, 323, 340, 383, 409, 1087, 1094, 1100, 1110, 1136, 1138, 1212, 1213], "valueerror": [173, 222, 232, 248, 254, 261, 269, 271, 274, 277, 281, 284, 287, 290, 302, 309, 323, 341, 345, 351, 357, 363, 367, 1089, 1136], "subpath": 173, "occur": [173, 219, 281, 371, 424, 439, 444, 445, 491, 509, 518, 618, 812, 885, 948, 978, 1050, 1135, 1136, 1140, 1249], "traceback": [173, 211, 258, 264, 274, 277, 287, 307, 309, 323, 345, 1087, 1088, 1089, 1094, 1102, 1103, 1109, 1110, 1131, 1132, 1136, 1138, 1141, 1142, 1204, 1212, 1213, 1225], "niho62fg": 173, "tracker": [173, 406, 407], "thank": [173, 195, 275, 302, 756, 792, 869, 1033, 1196], "tutori": [173, 197, 210, 221, 224, 229, 233, 241, 243, 249, 250, 259, 262, 272, 275, 298, 328, 340, 356, 384, 398, 403, 948, 995, 1142, 1145, 1209, 1210, 1212, 1213, 1214, 1215, 1217, 1227], "steig": [174, 198], "normalweg": 174, "da": [174, 198, 199, 206, 207, 208, 209, 216, 224, 228, 232, 233, 237, 240, 242, 243, 245, 249, 252, 253, 254, 258, 261, 269, 271, 274, 277, 278, 282, 290, 292, 299, 309, 319, 323, 341, 344, 351, 353, 357, 367, 390, 393, 398, 403, 416, 977, 1238, 1239, 1240, 1247, 1259], "w\u00e4r": 174, "umst\u00e4nden": [174, 1240], "renat": 174, "beschreibung": [174, 233, 235, 243, 246, 249, 250, 252, 268, 280, 977], "bergfex": 174, "reden": 174, "sie": [174, 198, 208, 212, 269, 274, 341, 393, 399, 416, 909, 976, 1238, 1239, 1259], "tagen": 174, "wir": [174, 207, 212, 216, 222, 224, 232, 233, 238, 252, 271, 277, 284, 337, 416, 702, 1247], "w\u00fcrden": 174, "denk": [174, 198, 253], "beiden": [174, 208, 222, 269, 277, 284], "h\u00fctten": [174, 199], "schlafen": 174, "gaphor": 175, "hochk\u00f6nig": 175, "buildenviron": 176, "resolve_refer": 176, "builder": [176, 261, 372, 379, 1148], "get_and_resolve_doctre": 176, "apply_post_transform": 176, "addnod": 176, "docstr": [176, 245, 248, 258, 264, 270, 282, 285, 288, 310, 342, 364, 398, 1118], "doctre": 176, "devicetre": [177, 994], "audio_mck": 177, "i2s0_ck": 177, "i2s0_lrck": 177, "i2s0_sdout": 177, "alsa": [177, 193, 357], "tlv320dac3203irg": 177, "tlv320dac3203": 177, "suggest": [177, 189, 190, 192, 194, 196, 197, 213, 221, 228, 229, 230, 231, 294, 296, 314, 316, 458, 1114, 1142, 1224], "tlv320aic32x4": 177, "compat": [177, 195, 210, 313, 379, 380, 653, 743, 759, 838, 843, 862, 1068, 1115, 1138, 1204, 1219, 1220], "tlv320aic31xxsw": 177, "tlv320aic31xx": 177, "cdimag": 178, "amd64": [178, 241, 395, 438], "iso": [178, 249, 267, 268, 284, 287, 307, 329, 341, 345, 418, 506, 643, 658, 911], "netinst": 178, "qcow2": 178, "virtualdebian": 178, "30g": [178, 197], "kvm": [178, 193], "hda": 178, "cdrom": 178, "2048": [178, 200, 264], "nic": 178, "sic": [178, 201], "deliveri": [179, 183, 190, 1061, 1064], "dirti": [180, 181, 192, 203, 205, 331, 332, 347, 348, 376, 380, 416, 464, 549, 840, 1243, 1244, 1257, 1258], "forget": [180, 190, 191, 192, 265, 429, 432, 477, 506, 530, 531, 725, 1200, 1206, 1225, 1241], "graphic": [180, 499, 923, 924, 994], "plug": [180, 191, 193, 548], "monitor": [180, 193, 206], "4k": [180, 192, 1049, 1058], "dual": [180, 182], "applianc": [180, 192, 500], "benchmark": 180, "glxgear": 180, "su": [180, 1080], "pect": 180, "cluster_project_xxx": [181, 840], "project_xxx_dirty_upgrad": [181, 840], "project_xxx_yocto_kernel": [181, 840], "bsp": [181, 840], "project_xxx_debian_config": [181, 840], "project_xxx_debian_kernel_packag": [181, 840], "finish": [181, 221, 240, 371, 809, 840, 897, 1101], "project_xxx_hardware_bringup": [181, 840], "bringup": [181, 182, 840], "project_xxx_audio_chip": [181, 840], "chip": [181, 207, 261, 840, 986, 990, 993, 1011, 1013, 1049, 1148], "project_xxx_wait_hardwar": [181, 840], "shot": [182, 197, 458, 742, 816, 838], "dac": 182, "massacr": [182, 208, 267, 398, 458, 464, 490, 508, 514, 515, 528, 742, 1097], "distro": [182, 537, 1121, 1233], "oldconfig": [182, 191, 860, 867, 887, 888], "qemu": [182, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1068], "grub": [182, 200, 357], "yoctoproject": [184, 188], "v5": [184, 193], "bsp_smarc": 184, "sxal4_smarc": 184, "sxal_r1": 184, "0_combin": 184, "sxal4_5": 184, "sxal4": 184, "inc": [184, 193, 313, 481, 531, 540, 811, 819, 1036, 1100], "filesextrapaths_prepend": 184, "thisdir": 184, "linux_vers": 184, "linux_version_extens": 184, "linux_kernel_typ": 184, "kbranch": 184, "kmeta": 184, "lic_files_chksum": 184, "md5": 184, "bbea815ee2795b2f4230826c0c6b8814": 184, "srcrev_machine_pn": 184, "3604bc07c035939266d78d65084c6cd54ffc6d56": 184, "srcrev_meta_pn": 184, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 184, "src_uri": 184, "bareclon": 184, "cach": [184, 188, 191, 316, 319, 357, 480, 494, 499, 500, 525, 677, 694, 824, 970, 1050, 1065, 1219, 1226, 1239], "destsuffix": 184, "scc": 184, "pv": 184, "srcpv": 184, "include_patch": 184, "patch": [184, 188, 201, 202, 1051, 1080], "compatible_machin": 184, "englisch": [185, 253], "week": [185, 191, 205, 229, 416, 484, 1245, 1246, 1253], "modern": [185, 197, 201, 203, 205, 213, 216, 221, 228, 250, 272, 381, 516, 517, 804, 824, 840, 847, 849, 854, 857, 864, 868, 878, 889, 891, 896, 902, 905, 908, 985, 1065, 1085, 1115, 1191, 1217, 1240, 1242, 1243, 1251], "contact": [185, 204], "impressum": 185, "suchen": [185, 232, 253, 976, 1240], "obs studio": 186, "video edit": 186, "screen record": 186, "offici": [186, 225, 226, 229, 230, 231, 236, 642, 1080, 1259], "jonathan": [186, 399, 400, 824], "thoma": 186, "himself": [186, 995], "paus": [186, 192, 1049, 1062], "meanwhil": 186, "freez": [186, 1219, 1227], "photo": 186, "length": [186, 245, 248, 258, 264, 274, 277, 306, 313, 323, 345, 351, 363, 506, 519, 526, 598, 649, 660, 721, 858, 871, 883, 987, 989, 1015, 1025, 1031, 1059, 1196, 1204, 1208, 1215], "grab": [186, 986, 994], "neil": 187, "patel": 187, "insight": [187, 189, 535, 1078, 1244, 1251, 1252, 1264], "consol": [187, 241, 923, 926, 982, 1170, 1250], "crawlabl": 187, "dn": [187, 194, 197, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1255], "domain": [187, 196, 197, 202, 490, 504, 510, 1050, 1193, 1253, 1255, 1262], "yoctoprojectq": 188, "dunfel": 188, "wish": [188, 195, 197, 204, 225, 498, 534, 665, 733, 814, 1209, 1210, 1226], "gawk": [188, 201, 1080], "bzip2": [188, 191, 201, 229, 231, 912, 913, 1080], "gzip": [188, 229, 231, 295, 304, 325, 326, 369, 370, 840, 887, 910, 912, 913, 917, 985, 1076, 1077, 1250], "unzip": [188, 201, 888, 1080], "diffutil": [188, 201], "diffstat": 188, "glibc": [188, 192, 867, 1078, 1080, 1081], "texinfo": [188, 201, 1080], "chrpath": 188, "ccach": [188, 526], "dumper": [188, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "parseword": 188, "bignum": 188, "socat": 188, "pexpect": 188, "findutil": [188, 948], "cpio": [188, 912], "gitpython": 188, "rpcgen": 188, "findbin": 188, "zstd": 188, "lz4": 188, "hostnam": [188, 197, 357, 1219], "langpack": 188, "libacl": 188, "scarthgap": 188, "poki": 188, "raspberrypi3": 188, "64": [188, 192, 195, 200, 222, 227, 232, 237, 239, 242, 245, 248, 250, 251, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 426, 438, 443, 467, 482, 488, 491, 539, 883, 1027, 1030, 1055, 1062, 1065, 1068, 1083, 1148, 1195], "oe": 188, "raspberry3": 188, "agherzan": 188, "layer": [188, 195, 294, 296, 314, 846, 918, 994, 1006, 1016, 1025], "bblayer": 188, "sstate": 188, "pi4": 188, "dl_dir": 188, "sstate_dir": 188, "bitbak": [188, 984], "license_flags_accept": 188, "synapt": 188, "killswitch": 188, "enlarg": 188, "rootf": [188, 887], "card": [188, 506, 887, 916, 952, 954, 959, 960], "ideal": [188, 201, 216, 258, 264, 274, 277, 294, 296, 493, 532, 535, 547, 595, 715, 770, 846, 865, 883, 887, 982, 1002, 1068, 1109, 1111], "mmcblk0": 188, "resizepart": 188, "resize2f": 188, "mmcblk0p2": 188, "bootlin": 188, "strip": [188, 194, 212, 221, 255, 257, 258, 261, 269, 273, 274, 279, 281, 287, 290, 302, 309, 319, 323, 329, 345, 351, 357, 363, 367, 398, 407, 824, 1065, 1066, 1068, 1078, 1097, 1171, 1216], "stackexchang": 188, "626496": 188, "openembed": 188, "emul": [188, 190, 294, 296, 314, 482, 491, 497], "gitlab": [188, 398, 517], "friend": [189, 190, 236, 257, 293, 294, 296, 305, 316, 353, 354, 372, 373, 381, 500, 583, 659, 815, 816, 839, 840, 858, 879, 986, 1233], "alia": [189, 194, 241, 267, 476, 479, 483, 492, 496, 501, 502, 516, 744, 782, 837, 839, 840, 948, 949, 1080], "rm": [189, 191, 195, 196, 229, 231, 398, 403, 996, 1006, 1226], "rf": [189, 191, 948, 958, 1226], "creativ": [189, 266], "variat": [189, 375, 804, 892, 930], "thereof": [189, 305, 313, 547, 663, 1106], "happili": [189, 190, 267, 490, 658], "stage3": 189, "decad": [189, 197, 213, 887, 993, 995, 1006, 1088, 1242], "busybox": [189, 190], "initramf": [189, 912], "resid": [189, 192], "flash": [189, 192, 197, 500, 926, 986, 1049], "eras": [189, 579, 637, 697, 803, 834, 945], "hit": [189, 191, 192, 210, 213, 251, 838, 948, 978, 981, 1219], "sole": 189, "liter": [189, 204, 211, 227, 232, 239, 249, 257, 258, 262, 269, 274, 277, 281, 284, 293, 294, 302, 309, 323, 341, 345, 351, 353, 357, 363, 390, 394, 398, 424, 432, 439, 488, 524, 563, 578, 598, 742, 755, 887, 1063, 1121, 1134, 1138], "told": [189, 192, 516, 569, 986], "reboot": [189, 191, 207, 887, 949, 993, 994, 995], "fatal": [189, 216, 511, 513, 514, 530, 540, 887, 1232], "saw": [189, 192, 221, 250, 409, 445, 646, 1019, 1021, 1082], "115200": 189, "8n1": 189, "remaind": [189, 190, 193, 195, 217, 221, 305, 865, 887, 986, 994, 1067], "recov": [189, 208, 416], "fauxpa": 189, "explan": [189, 192, 217, 221, 228, 251, 282, 342, 398, 498, 531, 620, 821, 887, 918, 986, 994, 1021, 1053, 1058, 1194, 1197, 1226], "annot": [189, 249, 298, 338, 499, 643, 1191, 1261], "beagl": 189, "omap": 189, "rom": 189, "stage": [189, 250, 374, 377, 1198], "processor": [189, 190, 248, 249, 262, 438, 482, 694, 806, 887, 892, 1033, 1050, 1065, 1245], "sram": 189, "dram": 189, "latter": [189, 192, 1049, 1090, 1130, 1198], "abil": [189, 742], "wrote": [189, 192, 406, 1241], "ones": [189, 211, 213, 277, 315, 323, 426, 494, 994, 995, 1123, 1208], "revis": [189, 193, 196, 292, 643, 741, 1241], "slightli": [189, 201, 221, 250, 267, 268, 620, 1118, 1246], "season": 189, "recent": [189, 192, 197, 211, 219, 258, 264, 274, 277, 287, 307, 309, 323, 345, 418, 513, 887, 967, 1087, 1088, 1089, 1094, 1102, 1103, 1109, 1110, 1131, 1132, 1136, 1138, 1141, 1142, 1204, 1212, 1213, 1225], "c4": [189, 200], "valuabl": [189, 498, 914, 915, 1082, 1084, 1090], "c3": [189, 193, 200], "angstrom": 189, "mlo": 189, "brows": [189, 927, 994], "ift": 189, "fdisk": 189, "obvoiusli": 189, "fat32": [189, 887], "fat16": 189, "partit": [189, 190, 191, 277, 323, 887], "mount": [189, 191, 305, 404, 843, 887, 918, 1029, 1058, 1059, 1078, 1080], "disk": [189, 190, 193, 197, 202, 493, 924, 925, 945, 975, 1010, 1011, 1083, 1140], "sector": [189, 261, 1148], "intend": [189, 195, 196, 197, 206, 241, 258, 264, 274, 277, 535, 755, 860, 994, 1021, 1022, 1146], "slot": [189, 1025, 1109], "partli": [189, 191, 486], "meaning": [189, 197, 869], "scr": 189, "omap3": 189, "mmc1": 189, "arch": [189, 193, 867, 887, 888, 993], "mach": [189, 250, 255, 271], "omap2": 189, "omap3beagl": 189, "Near": 189, "offset": [189, 838, 858, 1018, 1031, 1083], "128k": 189, "0x80000": 189, "reli": [189, 221, 791, 897, 1121], "ecc": [189, 193], "nandecc": 189, "hw": 189, "80000": 189, "0x0": [189, 993], "0x60000": 189, "unlik": [189, 241, 292, 806, 813, 819, 986, 1129, 1209, 1249], "intermedi": [189, 209, 526, 547, 1065, 1115], "nevertheless": [189, 190, 197, 308, 311, 887], "0x20000": 189, "fatload": 189, "80200000": 189, "20392": 189, "131072": [189, 845], "40000": 189, "0x40000": 189, "60000": 189, "incarn": [189, 197, 464, 790], "choic": [189, 190, 191, 213, 249, 262, 281, 494, 504, 508, 599, 647, 715, 801, 993, 1049, 1078, 1207], "finger": [189, 200, 494, 927, 986], "sw": [189, 597], "0x1e0000": 189, "1e0000": 189, "0x240000": 189, "275928": 189, "1966080": 189, "prompt": [189, 197, 200, 209, 241, 252, 280, 289, 919, 948, 950, 1002, 1115, 1116, 1153, 1157, 1170, 1176, 1226], "280000": 189, "400000": [189, 994, 1196], "month": [190, 251, 261, 309, 313, 439], "met": [190, 486, 995], "audienc": [190, 192, 221, 226, 343, 1146, 1241, 1246, 1249, 1257], "microcontrol": [190, 455, 986, 994, 1049], "clue": 190, "minim": [190, 192, 201, 209, 488, 494, 666, 970, 1078, 1089], "vxwork": 190, "ce": [190, 200, 1080], "quit": [190, 192, 195, 316, 465, 480, 482, 719, 735, 888, 948, 949, 981, 986, 994, 1039, 1062, 1078], "presenc": [190, 192, 510, 1249], "probabl": [190, 196, 221, 281, 311, 390, 509, 517, 524, 532, 645, 750, 887, 899, 948, 995, 1049, 1126, 1140, 1204, 1207, 1252], "sooner": [190, 490, 890], "chose": [190, 201, 267, 736, 972, 1006, 1078], "opinion": [190, 201, 221, 275, 372, 838, 927, 1098], "unless": [190, 271, 277, 281, 323, 513, 713, 747, 913, 970, 1034, 1121, 1140, 1212, 1251], "hire": 190, "cheap": [190, 192, 534, 656, 750, 755, 791, 792, 892, 1241], "misl": 190, "posix": [190, 192, 214, 808, 815, 817, 839, 840, 925, 985, 1015, 1026, 1034, 1038, 1040, 1048, 1056, 1140, 1251, 1253, 1254], "tell": [190, 191, 192, 195, 196, 197, 218, 265, 487, 677, 913, 995, 1065], "pitfal": [190, 273, 293, 294, 296, 353, 354, 372, 398, 677, 757, 782, 783, 784, 802, 839, 840, 986, 1241], "seen": [190, 192, 197, 209, 222, 250, 380, 430, 449, 487, 524, 530, 542, 552, 858, 883, 912, 1036, 1198, 1202, 1236], "didn": [190, 191, 192, 201, 221, 225, 241, 251, 275, 344, 887, 967, 1020, 1140, 1142, 1191, 1195], "rtoss": 190, "commonli": [190, 258, 281, 308, 311, 556, 817, 838, 873, 907, 950, 1015, 1065, 1216], "notif": [190, 195, 213, 814, 990, 1063], "dread": 190, "segment": [190, 192, 462, 591, 656, 780, 800, 1049, 1059], "fault": [190, 192, 411, 412, 462, 656, 800, 1049], "arriv": [190, 373, 879, 904, 1047, 1062], "handler": [190, 258, 264, 274, 277, 316, 323, 336, 498, 867, 869, 897, 1033, 1049, 1061, 1064], "pai": [190, 313, 493, 510, 918], "safe": [190, 258, 264, 265, 274, 277, 287, 490, 750, 792, 794, 802, 816, 1002, 1007, 1033, 1036, 1041, 1064], "pthread_": 190, "regular": [190, 213, 224, 238, 254, 261, 262, 269, 288, 289, 291, 293, 294, 303, 322, 323, 352, 358, 422, 488, 506, 519, 520, 656, 658, 791, 838, 875, 887, 933, 967, 970, 973, 982, 995, 1006, 1058, 1059, 1102, 1132, 1134, 1191], "trick": [190, 246, 256, 259, 262, 286, 298, 322, 328, 465, 518, 522, 1191], "sigwait": [190, 1062], "sigwaitinfo": 190, "sigtimedwait": 190, "caught": [190, 258, 264, 274, 277, 497, 666], "synchron": [190, 261, 267, 277, 284, 287, 302, 309, 317, 318, 319, 323, 339, 340, 343, 345, 351, 357, 363, 809, 815, 839, 840, 980, 985, 1010, 1026, 1034, 1035, 1042, 1048, 1049, 1059, 1061, 1064, 1249, 1254], "signalfd": [190, 1015, 1055, 1251, 1253], "Its": [190, 192, 195, 598, 978, 1050], "emb": 190, "among": [190, 213, 221, 258, 264, 274, 277, 487, 801, 933, 993, 1015, 1021, 1047, 1063, 1114, 1199, 1200, 1224, 1242], "epol": [190, 1029, 1055, 1059, 1253, 1255], "naiv": [190, 209, 264, 267, 331, 347, 482, 509, 524, 544, 636, 638, 652, 718, 800, 836, 895, 1033, 1053, 1064, 1095, 1096, 1198, 1203, 1236, 1256], "intra": 190, "primit": [190, 233, 234, 314, 381, 1096, 1241], "oss": 190, "synchronis": [190, 1033], "pthread_mutex_init": [190, 814, 1036], "critical_sect": 190, "closest": [190, 750], "pendant": [190, 637, 846], "expir": [190, 897, 1013, 1047, 1049, 1063], "sometim": [190, 281, 380, 454, 470, 494, 651, 741, 918, 926, 1020, 1034, 1080, 1086, 1117, 1224, 1254], "setitim": 190, "timer_cr": [190, 1049], "drawback": [190, 464, 481, 486, 491, 555, 677, 1002], "unfortun": [190, 191, 213, 250, 569, 986, 1209], "straightforward": [190, 268, 375, 378, 764, 802, 855, 1092, 1109, 1127, 1196], "nanosleep": [190, 816, 1049], "timerfd_cr": [190, 1013, 1015, 1251, 1253], "conjunct": 190, "stupid": [190, 192, 248, 264, 267, 269, 439, 464, 470, 488, 494, 504, 750, 805, 904, 967, 1010, 1094, 1140], "screw": [190, 703], "otherwis": [190, 191, 275, 277, 281, 318, 323, 351, 367, 389, 443, 454, 480, 490, 659, 697, 755, 784, 791, 806, 812, 858, 871, 879, 887, 895, 914, 915, 1002, 1031, 1033, 1038, 1044, 1059, 1089, 1118, 1121, 1138, 1140, 1160, 1171, 1213, 1236, 1248], "millisecond": [190, 258, 264, 274, 277, 803, 817, 895, 994], "etern": 190, "nowadai": [190, 192, 194, 195, 250, 317, 318, 339, 420, 438, 862, 897, 923, 926, 1015, 1063, 1204], "moder": [190, 197, 256], "tri": [190, 191, 192, 201, 210, 221, 269, 367, 379, 380, 409, 599, 729, 812, 838, 986, 995, 1050, 1241], "achiev": [190, 248, 281, 373, 380, 719, 1047, 1101], "albeit": [190, 564, 790, 1044, 1126, 1241], "lose": [190, 240, 251, 271, 274, 277, 287, 351, 357, 363, 1125], "wealth": 190, "socket": [190, 207, 228, 298, 838, 840, 920, 921, 924, 985, 1010, 1014, 1015, 1026, 1059, 1063, 1219, 1245, 1251, 1253, 1255], "uart": [190, 486, 920, 921, 1245], "previous": [190, 258, 264, 274, 277, 281, 1063, 1241], "regardless": [190, 465, 994], "surpris": [190, 192, 305, 488, 524, 712, 1085, 1109], "alon": [190, 191, 192, 314, 316, 494, 498, 759, 1130, 1198, 1249], "advantag": [190, 380, 486, 656], "regularli": [190, 491], "buffer": [190, 277, 302, 317, 318, 323, 339, 343, 426, 575, 580, 755, 903, 932, 1007, 1010, 1011, 1012, 1013, 1021, 1062, 1140, 1250], "ttys0": 190, "stream": [190, 195, 197, 236, 262, 277, 302, 643, 659, 932, 987, 1047, 1094, 1216, 1255], "eventfd": [190, 1015, 1055, 1251, 1253], "complic": [190, 191, 200, 228, 271, 281, 436, 455, 494, 519, 531, 669, 753, 759, 779, 846, 883, 987, 995, 1062, 1065, 1094, 1207, 1249, 1256], "unregist": [190, 551], "callback": [190, 225, 258, 264, 274, 277, 407, 770, 897, 906, 1207], "comfort": [190, 241, 401, 794, 993, 1216], "excit": 190, "hundr": [190, 192, 197, 299, 302, 1015], "panel": 190, "basta": [190, 242, 1121], "deal": [190, 265, 488, 887, 995, 1119, 1193, 1204, 1241, 1249], "stai": [190, 213, 225, 256, 1062], "harder": [190, 806, 996], "buggi": [190, 652, 780, 792, 1049], "examin": [190, 192, 490, 519, 659, 801, 829, 948, 1044], "debugg": [190, 258, 264, 274, 275, 277, 547, 1239, 1252], "gdb": [190, 241, 416, 1239], "spidev": 190, "bluntli": 190, "whether": [190, 209, 277, 281, 302, 313, 323, 429, 493, 604, 649, 681, 838, 883, 994, 1170, 1176, 1219], "deadlin": [190, 1254], "howev": [190, 200, 218, 281, 543, 860, 862, 986, 1029, 1033], "sched_setschedul": [190, 206, 1052], "pthread_attr_setschedparam": [190, 1052], "runnabl": [190, 885, 1050, 1051, 1052], "prioriti": [190, 206, 277, 879, 885, 887, 889, 925, 1050, 1051, 1059, 1254], "anymor": [190, 196, 201, 213, 250, 267, 506, 516, 518, 658, 753, 755, 764, 788, 801, 802, 806, 923, 993, 1038, 1049, 1051, 1083, 1121, 1123, 1213], "potenti": [190, 534, 656, 764, 812, 1006, 1089, 1101, 1147], "harm": [190, 458, 486, 802, 804, 1089], "polici": [190, 195, 206, 357, 506, 526, 542, 715, 719, 865, 1050, 1051, 1254], "sched_fifo": [190, 1051, 1052], "sched_rr": [190, 192, 1052], "robin": [190, 256, 1052, 1254], "manner": [190, 464, 725, 887], "troubl": 190, "trigger": [190, 378, 409, 869, 873, 993, 1109, 1200], "circumst": [190, 1050], "deadlock": [190, 620, 812, 813, 879, 892, 1036, 1050, 1051], "inspect": [190, 192, 258, 264, 274, 277, 295, 304, 315, 325, 340, 369, 840, 917, 985, 1006], "item": [190, 209, 211, 222, 227, 232, 237, 239, 242, 245, 248, 249, 253, 254, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 289, 293, 294, 296, 299, 302, 307, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 482, 486, 488, 519, 534, 725, 791, 837, 839, 840, 1058, 1059, 1094, 1095, 1096, 1102, 1128, 1135, 1138, 1140, 1179, 1224], "uclibc": 190, "investig": 190, "spend": [190, 197, 210, 221, 225, 246, 249, 272, 298, 322, 344, 493, 1191], "browser": [191, 197, 208, 219, 252], "significantli": [191, 1062], "decreas": [191, 192, 482, 948, 1053], "forth": [191, 495, 918, 993, 1006, 1121], "spare": 191, "volum": 191, "undertak": 191, "indirectli": [191, 801], "pocket": 191, "purchas": [191, 281], "corsair": 191, "120": [191, 208, 222, 232, 239, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 660, 742, 1057, 1058], "overhaul": [191, 379, 380], "reserv": [191, 197, 213, 225, 261, 277, 302, 323, 437, 524, 678, 851, 883, 944, 1052, 1148], "livecd": 191, "ssd": [191, 493, 1011], "vanish": 191, "gone": [191, 211, 261, 770, 802, 867, 890, 949, 1041], "nowher": [191, 329, 612], "depart": 191, "unusu": 191, "cope": 191, "bet": 191, "themselv": [191, 464, 504, 564], "aggress": [191, 380], "harddisk": 191, "treatment": [191, 281, 948, 1083], "proud": 191, "120g": 191, "fresher": 191, "extend": [191, 192, 222, 239, 240, 242, 247, 253, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 315, 319, 323, 329, 351, 357, 363, 367, 393, 547, 554, 563, 588, 660, 662, 663, 715, 848, 919, 1031, 1122, 1127, 1137, 1196, 1208, 1251, 1252], "plenti": [191, 193, 498], "4g": [191, 192], "shouldn": [191, 742, 887, 1138], "hibern": 191, "fstab": [191, 357], "room": [191, 197, 225, 340, 544, 694, 881, 995, 1204, 1242], "swapon": 191, "sda1": 191, "swapoff": 191, "overal": 191, "mitig": [191, 881], "perfect": [191, 197, 250, 298, 353, 373, 418, 694, 751, 782, 805, 839, 840, 1092, 1146, 1191, 1222, 1241], "portag": [191, 887, 978], "openoffic": 191, "tmpdir": [191, 315, 344, 506, 601, 838, 1087, 1186, 1188, 1224], "500m": 191, "2g": 191, "6g": 191, "throwawai": 191, "1tb": 191, "sdc1": [191, 918], "mnt": [191, 918, 927, 1059], "emerg": 191, "umount": 191, "runnung": 191, "offend": [191, 193, 195, 482, 569, 1049], "trap": [191, 251, 477, 482, 500, 648, 1243], "beagleboard": [191, 202], "candid": [191, 209, 250, 494, 759, 779, 792, 1089, 1162], "destin": [191, 445, 507, 528, 537, 637, 677, 753, 1005, 1012], "admin": [191, 197, 398, 1000, 1004], "cron": [191, 931, 1119], "grep": [191, 195, 201, 229, 231, 241, 295, 304, 325, 326, 369, 370, 840, 906, 911, 917, 923, 925, 930, 932, 944, 976, 979, 982, 985, 993, 995, 996, 1034, 1044, 1049, 1207, 1245, 1247, 1250], "he": [191, 212, 221, 225, 228, 241, 246, 249, 251, 272, 275, 298, 317, 318, 322, 339, 344, 755, 757, 792, 795, 1004, 1039, 1052, 1063, 1106, 1134, 1191, 1217], "tune": [191, 192, 201, 494, 914, 915, 938, 940, 942, 949, 998, 1118], "exce": [191, 225, 848, 1049, 1059], "20m": [191, 986, 1047], "compresscmd": 191, "compressopt": 191, "compressext": 191, "missingok": 191, "sharedscript": 191, "postrot": 191, "reload": [191, 229], "endscript": 191, "adjac": [191, 405, 801, 858], "locat": [191, 196, 201, 221, 258, 264, 274, 277, 281, 331, 347, 398, 416, 467, 480, 488, 494, 542, 564, 656, 676, 753, 801, 862, 887, 993, 994, 995, 1015, 1035, 1059, 1066, 1087, 1195, 1212, 1256], "sda": [191, 993, 995], "cfq": 191, "noop": [191, 988], "believ": [191, 197, 986, 995, 1023], "r5": 191, "menuconfig": [191, 201, 887, 993, 1080], "xorg": [191, 195], "emerge_log_dir": 191, "unionf": 191, "fuse": [191, 193, 357, 996, 1006], "persist": [191, 206, 434, 438, 446, 510, 525, 526, 949, 994], "held": [192, 333, 336, 416, 824, 845, 879, 892], "compani": [192, 195, 196, 197, 231, 241, 281, 307, 318, 333, 416, 504, 542, 543, 927, 1146, 1193], "z\u00fcrich": [192, 415], "hardcor": 192, "attitud": [192, 197, 315], "began": 192, "dive": [192, 308, 311], "inevit": [192, 373, 416, 515, 794], "came": [192, 258, 262, 264, 274, 277, 945, 951, 993, 1121, 1174, 1241], "heap": [192, 477, 549, 649, 652, 703, 784, 801, 848, 873], "128": [192, 195, 208, 222, 232, 239, 245, 248, 254, 258, 261, 264, 267, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 493, 656, 993, 1021, 1068, 1081, 1204], "dead": [192, 201, 494], "attempt": [192, 197, 219, 277, 750, 752, 824, 1219], "reject": 192, "proof": [192, 213, 482, 493, 497, 547, 631], "evid": 192, "fortun": [192, 197, 494, 506, 755, 1196], "overnight": [192, 256], "night": [192, 225], "instinct": 192, "defens": [192, 436, 437], "grow": [192, 677, 925, 1082], "growth": [192, 261, 1148], "handi": [192, 1247], "tricki": 192, "alloca": 192, "stdio": [192, 250, 262, 419, 420, 422, 426, 428, 430, 461, 487, 534, 653, 658, 925, 945, 993, 1011, 1012, 1013, 1015, 1016, 1019, 1020, 1021, 1022, 1036, 1049, 1055, 1058, 1062, 1063, 1065, 1068, 1078, 1082, 1084, 1140], "stdlib": [192, 477, 491, 993, 1011, 1012, 1013, 1046, 1055, 1062], "size_t": [192, 477, 490, 545, 625, 634, 637, 679, 684, 690, 694, 700, 721, 736, 748, 753, 764, 765, 766, 767, 768, 834, 835, 836, 838, 846, 873, 1007, 1015, 1025, 1059, 1062], "stack_growth": 192, "argc": [192, 471, 513, 528, 549, 588, 993, 1019, 1020, 1021, 1022, 1027, 1030, 1031, 1046, 1062, 1084, 1231, 1236], "mem": [192, 207, 380, 634, 819, 851], "fprintf": [192, 452, 465, 1007, 1049, 1084], "stderr": [192, 240, 249, 258, 264, 274, 277, 287, 295, 304, 305, 325, 326, 369, 391, 398, 452, 465, 535, 840, 917, 929, 930, 985, 1007, 1015, 1049, 1084, 1119, 1132, 1140, 1250], "atoi": [192, 1023], "printf": [192, 201, 250, 262, 419, 420, 422, 428, 430, 434, 460, 461, 464, 465, 487, 534, 653, 658, 925, 945, 1009, 1013, 1055, 1062, 1063, 1065, 1068, 1078, 1082, 1084, 1129, 1135], "getpid": [192, 1062], "memset": [192, 1012, 1049, 1058, 1062], "24299": 192, "vsz": 192, "rss": 192, "3944": [192, 264], "986": [192, 261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "188": [192, 222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 299, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "320": [192, 264, 274, 277, 302, 309, 323, 329, 341, 357, 363, 367], "exact": [192, 241, 281, 395, 458, 789, 806, 860, 862, 1219], "presum": [192, 373], "writabl": [192, 488, 933, 948, 1021], "eater": [192, 1053], "1k": 192, "furthermor": 192, "188k": 192, "proce": [192, 200, 278, 311, 404, 601], "million": [192, 227, 542, 719, 887, 1092], "1000000": [192, 222, 242, 319, 357, 393, 498, 986, 994], "24908": 192, "4800": [192, 264], "1200": [192, 264, 694], "1044": [192, 264], "1376": [192, 264], "grown": [192, 195], "reflect": [192, 528, 887, 1050, 1081, 1082, 1109, 1248], "greedi": 192, "24960": 192, "8mb": 192, "barrier": [192, 480, 801, 816, 871], "ulimit": [192, 925], "8192": [192, 264, 465, 925, 1065], "8000000": 192, "25018": 192, "11632": [192, 264], "2908": [192, 264], "7876": [192, 264], "8236": [192, 264], "demand": [192, 195, 211, 311, 488, 887, 939, 941, 1094, 1129, 1261, 1265], "magic": [192, 194, 357, 471, 506, 522, 770, 846, 887, 1094, 1224], "bother": [192, 1006, 1010], "pthread_attr_setstacks": 192, "2mb": 192, "rlimit_stack": [192, 1065], "pthread_creat": [192, 1034, 1049], "nthread": 192, "act": [192, 248, 514, 609, 678, 995, 1006, 1009, 1063, 1100], "shut": [192, 855, 887], "sit": [192, 267, 404, 554, 932, 993, 994, 1004, 1006, 1010, 1062, 1207], "stack_limit": 192, "thread_func": 192, "arg": [192, 208, 222, 248, 249, 258, 262, 264, 274, 275, 277, 281, 287, 302, 323, 341, 522, 534, 846, 1034, 1087, 1112, 1119, 1142, 1233, 1260], "pthread_attr_t": [192, 1034, 1052], "attr": [192, 206, 1034, 1036, 1038, 1052, 1058, 1059], "pthread_attr_init": 192, "ld": [192, 357, 538, 539, 628, 646, 718, 865, 887, 914, 915, 933, 946, 970, 1055, 1065, 1066, 1068, 1078, 1083], "strerror": [192, 264, 1007, 1016, 1049, 1062], "p_attr": 192, "pthread_t": [192, 1034, 1049, 1052], "rv": [192, 237, 299, 357, 363], "31524": 192, "825840": 192, "206460": 192, "819936": 192, "1404": [192, 264], "800mb": 192, "writeabl": [192, 936, 944, 967], "worth": [192, 887, 995, 1118, 1190, 1241, 1251, 1253, 1262], "eaten": 192, "field": [192, 195, 197, 208, 213, 219, 255, 262, 269, 277, 287, 290, 307, 309, 313, 323, 357, 390, 409, 421, 725, 825, 827, 923, 928, 947, 982, 1136, 1148, 1169, 1198, 1199], "alleg": 192, "wast": [192, 200, 201, 490, 797, 814, 1204], "moment": [192, 225, 490, 542, 544, 738, 787], "771": [192, 264, 351], "766604": 192, "hasn": [192, 195, 196, 881, 904, 1120], "effect": [192, 196, 216, 380, 399, 400, 434, 484, 494, 522, 526, 566, 712, 755, 842, 871, 944, 949, 993, 1005, 1006, 1050, 1064, 1090, 1102, 1123, 1170, 1198, 1226, 1264], "4096": [192, 208, 264, 838, 914, 915, 986, 993, 994, 995, 1006, 1029, 1031, 1058, 1065], "1026": [192, 264], "invalid": [192, 232, 239, 269, 274, 275, 277, 281, 284, 302, 309, 316, 323, 341, 345, 351, 357, 363, 394, 409, 491, 522, 569, 580, 583, 637, 652, 735, 736, 737, 750, 753, 759, 800, 802, 816, 845, 1038, 1065, 1142], "insist": [192, 221, 658, 1233], "pthread_stack_min": 192, "16384": [192, 197, 264, 993, 994, 995, 1065], "1125": 192, "7840": [192, 264], "1960": [192, 264], "1936": [192, 264], "fine": [192, 197, 225, 514, 516, 535, 645, 757, 759, 867, 897, 1006, 1010, 1081, 1098, 1110, 1119, 1125, 1140, 1204, 1245], "risk": [192, 542, 986, 1004, 1051, 1117], "512": [192, 264, 309, 341, 357, 367, 495, 925], "513": [192, 264, 309, 357, 801], "2212": [192, 264], "4210920": 192, "1052730": 192, "4205016": 192, "4576": [192, 264], "misunderstand": [192, 810], "overcommit": 192, "kept": [192, 197, 221, 227, 465, 480, 925, 987, 1065, 1094], "plai": [192, 200, 241, 482, 500, 887, 986, 1107, 1110, 1198], "stutter": 192, "4353": 192, "red": [192, 193, 237, 239, 245, 253, 265, 268, 281, 313, 391, 697, 819, 986, 1116, 1207], "chili": 192, "pepper": 192, "overli": [192, 931, 1093], "adob": 192, "riddanc": 192, "8462": [192, 264], "3284640": 192, "821160": 192, "3278736": 192, "3064580": 192, "lie": [192, 792], "constraint": [192, 200, 759, 762, 764, 995], "800": [192, 232, 264, 694, 1151], "4000000": 192, "11338": [192, 264], "900": [192, 264, 694], "12156": [192, 264], "shrink": [192, 677], "inadvert": 192, "3mb": 192, "nois": 192, "henc": [192, 197, 524, 601, 698, 1011, 1015, 1065], "14386": [192, 264], "child_stack": 192, "0x7f5813f22ff0": 192, "clone_vm": 192, "clone_f": 192, "clone_fil": 192, "clone_sigha": 192, "14413": 192, "mmap": [192, 1026, 1057, 1059, 1065, 1251], "8392704": 192, "prot_read": [192, 1031, 1058, 1065], "prot_writ": [192, 1058, 1065], "map_priv": [192, 1031, 1058, 1065], "map_anonym": [192, 1065], "map_stack": 192, "0x7fd14f9af000": 192, "mprotect": [192, 1065], "0x7fd14f1ae000": 192, "prot_non": 192, "proc": [192, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 850, 867, 869, 871, 887, 888, 1015, 1034, 1058, 1062, 1252], "7fd14f1af000": 192, "7fd14f9af000": 192, "00000000": 192, "7fd14f9b0000": 192, "topmost": [192, 1224], "pseudo": [192, 209], "redund": [192, 465, 494], "smap": 192, "7fd14f1ae000": 192, "pss": 192, "shared_clean": 192, "shared_dirti": 192, "private_clean": 192, "private_dirti": 192, "referenc": [192, 209, 232, 340, 343, 522, 526, 541, 658, 801, 802, 803, 1023, 1233], "anonym": [192, 544, 860, 1031, 1058], "anonhugepag": 192, "kernelpages": 192, "mmupages": 192, "miss": [192, 210, 217, 219, 221, 237, 264, 269, 274, 281, 340, 343, 398, 454, 499, 500, 511, 513, 516, 522, 540, 600, 631, 652, 743, 779, 862, 865, 1013, 1049, 1067, 1260], "shallow": [192, 261, 273, 363, 745], "extent": [192, 221, 228, 241, 395, 485, 490, 887, 1065, 1114], "8k": [192, 932], "swamp": 192, "panic": [192, 895, 948], "meaningless": 192, "dig": [192, 194], "thorough": [192, 201, 415, 1198, 1217, 1253, 1261], "counter": [192, 274, 422, 428, 429, 438, 494, 499, 500, 644, 753, 1058], "delai": [192, 258, 264, 274, 277, 994], "substanti": 192, "beforehand": 192, "mlock": [192, 1251], "mlockal": [192, 1251], "contradictori": 192, "lengthi": [192, 373], "felt": 192, "lucki": [192, 652], "kilomet": [192, 784, 948], "agre": [192, 221, 225, 380, 404, 552, 1050, 1197], "glad": 192, "outdat": [193, 201, 887, 1219], "halfwai": 193, "procedur": [193, 201, 430, 794, 986, 1148], "thunderbolt": 193, "hdmi": 193, "unplug": 193, "oop": [193, 1240], "feb": [193, 237, 239, 241, 395, 439, 970, 1029, 1078], "58": [193, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 405, 506, 995, 1066, 1067, 1068, 1078, 1195, 1196], "zen": [193, 233, 243, 271, 282, 315, 759], "derefer": [193, 656], "0000000000000080": 193, "supervisor": 193, "error_cod": 193, "0x0000": 193, "pgd": 193, "p4d": 193, "0000": [193, 277, 323, 995], "smp": [193, 241, 248, 395], "pti": 193, "281": [193, 261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 323, 329, 341, 351, 357, 363], "comm": 193, "kworker": 193, "taint": 193, "fc31": 193, "asustek": 193, "zenbook": 193, "ux391ua": 193, "bio": 193, "204": [193, 222, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367, 549], "workqueu": [193, 840, 864, 889, 902, 905, 985], "ucsi_connector_chang": 193, "typec_ucsi": 193, "0010": 193, "ucsi_displayport_remove_partn": 193, "0xa": 193, "0x20": [193, 877, 1065], "c7": [193, 200, 1219], "48": [193, 200, 208, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 993], "83": [193, 200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 838, 888, 1195, 1196], "5b": [193, 200], "e9": [193, 200], "6d": [193, 200, 421, 422], "f3": [193, 200], "3d": [193, 200, 210], "fb": [193, 200], "66": [193, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 721, 1148, 1195, 1196], "2e": [193, 200, 746], "0f": [193, 200], "1f": [193, 200], "84": [193, 200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1195, 1196], "44": [193, 200, 211, 222, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 824, 995, 1219], "85": [193, 200, 208, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1066, 1067, 1195, 1196, 1231], "ff": [193, 200, 416, 826, 995], "74": [193, 195, 200, 222, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 970, 980, 1148, 1195, 1196], "8b": 193, "47": [193, 195, 200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 792, 982, 1049, 1065, 1078, 1135, 1195], "78": [193, 200, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 598, 1195, 1196], "c6": 193, "rsp": [193, 261, 1148], "0018": 193, "ffff9daa002d3df8": 193, "eflag": 193, "00010202": 193, "rax": 193, "0000000000000008": 193, "rbx": 193, "ffff901f4ce35710": 193, "rcx": 193, "0000000000003c7d": 193, "rdx": 193, "0000000000003c7c": 193, "rsi": [193, 948], "0000000000000001": 193, "rdi": 193, "rbp": 193, "0000000000000000": [193, 1084], "r08": 193, "ffffffffbc7dbe60": 193, "r09": 193, "ffff9daa002d3cf0": 193, "r10": 193, "ffff901f54951a18": 193, "r11": 193, "ffff901f56a68a78": 193, "r12": 193, "r13": 193, "r14": 193, "ffff901f4ce35860": 193, "r15": 193, "ffff901f4ce355d8": 193, "ffff901f56a00000": 193, "knlg": 193, "cr0": 193, "0000000080050033": 193, "cr2": 193, "cr3": 193, "000000028fbbc003": 193, "cr4": 193, "00000000003606f0": 193, "trace": [193, 211, 258, 264, 274, 277, 535, 877], "ucsi_unregister_altmod": 193, "0x77": 193, "0x90": [193, 877], "ucsi_unregister_partn": 193, "0x13": 193, "0x30": [193, 446], "0x247": 193, "0x340": 193, "process_one_work": 193, "0x1b5": 193, "0x360": 193, "worker_thread": 193, "0x50": 193, "0x3c0": 193, "kthread": 193, "0xf9": 193, "0x130": 193, "kthread_park": 193, "ret_from_fork": 193, "0x35": 193, "0x40": [193, 994], "cdc_ether": 193, "usbnet": 193, "r8152": 193, "mii": 193, "rc_cec": 193, "typec_displayport": 193, "uinput": 193, "rfcomm": 193, "ccm": 193, "xt_checksum": 193, "xt_masquerad": 193, "nf_nat_tftp": 193, "nf_conntrack_tftp": 193, "tun": [193, 198, 212, 216, 232, 239, 278, 1238, 1239, 1240], "stp": 193, "llc": 193, "nf_conntrack_netbios_n": 193, "nf_conntrack_broadcast": 193, "xt_ct": 193, "ip6t_reject": 193, "nf_reject_ipv6": 193, "ip6t_rpfilt": 193, "ipt_reject": 193, "nf_reject_ipv4": 193, "xt_conntrack": 193, "ebtable_nat": 193, "ebtable_brout": 193, "ip6table_nat": 193, "ip6table_mangl": 193, "ip6table_raw": 193, "ip6table_secur": 193, "iptable_nat": 193, "nf_nat": 193, "iptable_mangl": 193, "iptable_raw": 193, "iptable_secur": 193, "nf_conntrack": 193, "nf_defrag_ipv6": 193, "nf_defrag_ipv4": 193, "libcrc32c": 193, "ip_set": 193, "nfnetlink": 193, "ebtable_filt": 193, "ebtabl": 193, "ip6table_filt": 193, "ip6_tabl": 193, "iptable_filt": 193, "cmac": 193, "bnep": 193, "sunrpc": 193, "vfat": [193, 887, 918], "snd_hda_codec_hdmi": 193, "snd_soc_skl": 193, "snd_soc_sst_ipc": 193, "snd_soc_sst_dsp": 193, "snd_hda_ext_cor": 193, "x86_pkg_temp_therm": 193, "intel_powerclamp": 193, "snd_soc_acpi_intel_match": 193, "coretemp": 193, "snd_soc_acpi": 193, "kvm_intel": 193, "snd_soc_cor": 193, "snd_hda_codec_realtek": 193, "snd_hda_codec_gener": 193, "snd_compress": 193, "ledtrig_audio": 193, "ac97_bu": 193, "snd_pcm_dmaengin": 193, "iwlmvm": 193, "snd_hda_intel": 193, "snd_intel_dspcfg": 193, "irqbypass": 193, "snd_hda_codec": 193, "uvcvideo": 193, "mac80211": 193, "btusb": 193, "itco_wdt": 193, "btrtl": 193, "crct10dif_pclmul": 193, "videobuf2_vmalloc": 193, "itco_vendor_support": 193, "videobuf2_memop": 193, "mei_hdcp": 193, "btbcm": 193, "btintel": 193, "crc32_pclmul": 193, "intel_rapl_msr": 193, "snd_hda_cor": 193, "videobuf2_v4l2": 193, "libarc4": 193, "ghash_clmulni_intel": 193, "videobuf2_common": 193, "snd_hwdep": 193, "intel_cst": 193, "bluetooth": [193, 357, 1245, 1255], "snd_seq": 193, "asus_nb_wmi": 193, "iwlwifi": 193, "videodev": 193, "snd_seq_devic": 193, "intel_uncor": 193, "asus_wmi": 193, "snd_pcm": 193, "intel_rapl_perf": 193, "cdc_acm": 193, "sparse_keymap": 193, "wmi_bmof": 193, "ecdh_gener": 193, "cfg80211": 193, "intel_wmi_thunderbolt": 193, "pcspkr": 193, "snd_timer": 193, "snd": 193, "i2c_i801": 193, "soundcor": 193, "joydev": 193, "idma64": 193, "intel_xhci_usb_role_switch": 193, "mei_m": 193, "ucsi_acpi": 193, "processor_thermal_devic": 193, "intel_rapl_common": 193, "mei": [193, 264], "intel_soc_dts_iosf": 193, "intel_pch_therm": 193, "typec": 193, "int3403_therm": 193, "int340x_thermal_zon": 193, "int3400_therm": 193, "acpi_thermal_rel": 193, "acpi_pad": 193, "binfmt_misc": 193, "ip_tabl": 193, "rfkill": 193, "i915": 193, "i2c_algo_bit": 193, "drm_kms_helper": 193, "hid_multitouch": 193, "drm": 193, "nvme": 193, "crc32c_intel": 193, "nvme_cor": 193, "serio_raw": 193, "wmi": 193, "i2c_hid": 193, "76d248e576fee192": 193, "deferenc": 193, "dp": 193, "ness": [193, 228, 313], "ucsi": 193, "displayport": 193, "linu": [193, 879, 887], "typec_altmod": 193, "alt": [193, 222, 948, 977, 1238, 1247], "ucsi_dp": 193, "typec_altmode_get_drvdata": 193, "271": [193, 261, 264, 269, 271, 277, 302, 309, 323, 329, 351, 357, 363, 367], "bugzilla": 193, "1785972": 193, "john": [193, 494], "stebbin": 193, "roundtrip": 193, "explod": [193, 367, 862, 1129], "jwboyer": [193, 860], "f31": 193, "quiet": [193, 225, 1219], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 193, "tag": [193, 195, 198, 199, 222, 238, 240, 282, 535, 539, 860, 1080, 1083], "josh": 193, "boyer": 193, "mon": 193, "0001": [193, 210, 242], "rpmdevtool": [193, 860], "koji": 193, "rpmdev": 193, "setuptre": 193, "spec": [193, 277, 725, 860, 883], "srpm": 193, "unam": [193, 860, 865, 883, 887, 888], "correspond": [193, 277, 419, 462, 514, 725, 994, 1074, 1082, 1121, 1158, 1193, 1219], "kenrel": 193, "ivh": [193, 195], "crypto": [193, 357], "ccp": 193, "sha": 193, "drop": [193, 340, 545, 564, 573, 794, 801, 803, 906, 1058, 1063], "53": [193, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 405, 568, 569, 795, 867, 970, 993, 1065, 1078, 1195, 1196], "zips": 193, "ko": [193, 856, 865, 887], "endif": [193, 462, 464, 465, 508, 509, 512, 514, 515, 519, 522, 524, 526, 528, 534, 535, 628, 637, 646, 652, 694, 753, 754, 800, 816, 1065, 1082, 1084, 1233], "buildid": [193, 860, 1066, 1068], "primary_target": 193, "825": [193, 264], "asoc": 193, "patch601": 193, "patch999": 193, "patienc": [193, 221, 1114], "oldpackag": 193, "uefi": [193, 200], "market": [194, 197, 261, 305, 313, 1148], "url": [194, 196, 216, 599, 1088, 1146], "unprofession": 194, "intent": [194, 196, 200, 201, 547, 802, 806, 860, 1019, 1021, 1022], "remark": 194, "organ": [194, 218, 460, 495, 506, 554, 694, 924, 1011, 1081], "numer": [194, 210, 226, 228, 230, 264, 274, 277, 281, 313, 323, 363, 519, 524, 535, 700, 725, 1006], "enforc": [194, 251, 482, 504, 654, 658, 846, 995], "cname": [194, 196], "propag": [194, 375, 436, 494, 509, 513, 514, 515, 516, 531, 540, 719, 770, 996], "1100": [194, 258, 264, 281, 694], "3600": [194, 264], "185": [194, 222, 239, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "199": [194, 222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 887, 1148], "109": [194, 208, 222, 232, 237, 239, 245, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403], "153": [194, 208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 405], "111": [194, 208, 210, 222, 232, 239, 245, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393], "110": [194, 208, 222, 232, 239, 245, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 582, 583, 742, 947, 1057, 1058], "108": [194, 208, 222, 232, 239, 245, 248, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393], "breviti": 194, "fqdn": 194, "qualifi": [194, 488, 654, 792], "surf": 194, "consequenti": [194, 197, 200, 227, 918, 993, 1086, 1107, 1233], "microsoft team": 195, "chrome": 195, "google chrom": 195, "confer": [195, 197, 225, 249, 272, 298, 344, 824, 1143], "virtual classroom": 195, "classroom": [195, 197], "remote train": 195, "dr": [195, 1068, 1081], "chromium": [195, 229, 357], "frequent": [195, 197, 221, 281, 974, 994, 1114, 1135], "face": [195, 197, 221, 271, 281, 808, 1254], "travel": [195, 948], "corona": [195, 197, 221], "viru": [195, 197], "conferenc": 195, "dramat": 195, "march": 195, "spent": [195, 371, 493, 817, 1088, 1197], "weston": 195, "invest": [195, 197, 201, 281], "smooth": 195, "cornercas": 195, "hover": 195, "sharer": 195, "particip": [195, 197, 218, 221, 305, 336, 371, 416, 585, 988, 1114, 1128, 1149], "gdm": [195, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 923, 980], "daemon": [195, 241, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 500, 520, 923, 926, 974, 975, 978, 980, 996, 1004, 1009, 1011, 1043, 1100], "uncom": [195, 569, 570, 764, 993], "waylanden": 195, "defaultsess": 195, "deb": [195, 326], "5153": 195, "marjan": 195, "javorka": 195, "fashion": 195, "efl": [195, 906, 996, 1049], "61762": 195, "1670": [195, 264], "947213": 195, "61764": 195, "98775": 195, "zygot": 195, "sandbox": [195, 221, 225, 275, 289, 307, 1191, 1226, 1227], "61800": 195, "239615": 195, "gpu": 195, "sharedarraybuff": 195, "sparerendererforsiteperprocess": 195, "prefer": [195, 271, 281, 438, 494, 518, 524, 526, 556, 659, 747, 755, 759, 879, 932, 1142], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 195, "token": [195, 251, 267, 424, 464, 923, 1039, 1146, 1238], "4327801531638606376": 195, "61825": 195, "420846": 195, "autoplai": 195, "gestur": 195, "12993561460135093079": 195, "lang": [195, 198, 199, 207, 242, 389, 390, 407, 416, 535], "asar": 195, "agent": [195, 1002, 1198], "mozilla": [195, 319, 970], "applewebkit": 195, "537": [195, 264, 351, 357, 367], "khtml": 195, "gecko": 195, "microsoftteam": 195, "preview": [195, 279, 332, 348, 374, 375, 376, 377, 378, 517, 523, 533, 536, 840], "3497": 195, "safari": 195, "webview": 195, "preload": [195, 1065], "preload_notif": 195, "fff": 195, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 195, "raster": 195, "v8_context_snapshot_data": 195, "v8_natives_data": 195, "101": [195, 208, 222, 232, 239, 245, 254, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1125, 1195, 1196], "msteam": 195, "notificationsmanag": 195, "61973": 195, "790018": 195, "432557619363765409": 195, "mainwindow": 195, "62033": 195, "1259666": 195, "5585537623314398260": 195, "pluginhost": 195, "insan": [195, 333, 918], "killal": [195, 1053, 1063], "63500": 195, "298385": 195, "41": [195, 200, 210, 211, 222, 232, 237, 239, 242, 245, 248, 250, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 549, 805, 838, 877, 970, 994, 1102, 1146, 1148, 1195, 1226], "63502": 195, "blood": 195, "pressur": [195, 258], "wipe": 195, "logout": 195, "pop": [195, 207, 269, 271, 284, 299, 309, 319, 329, 341, 357, 363, 367, 465, 675, 678, 814, 1112, 1137], "morn": [195, 230, 240, 258, 267, 269, 275, 344, 1153], "webassembli": 195, "blow": 195, "water": [195, 313], "firefox": [195, 357, 500, 1034, 1063, 1203], "dom": [195, 253], "gave": [195, 197, 209, 221, 991, 1196], "3987": 195, "132": [195, 208, 210, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "plagu": 195, "invent": [195, 432, 464, 544, 566, 567, 1242, 1256], "game": [195, 261, 277, 284, 287, 302, 309, 319, 323, 340, 345, 351, 357, 363, 373, 944, 1009, 1128], "pornwatch": 195, "teamview": 195, "webpag": 196, "properli": [196, 738, 816, 887, 1078], "retrospect": 196, "jekyl": 196, "bend": [196, 596], "companion": [196, 313], "pollut": [196, 465, 488, 494, 547, 743, 1067], "distinguish": [196, 653, 806, 919, 1078], "handwritten": [196, 293, 294, 296, 353, 354, 372, 375, 376, 378, 517, 523, 533, 652, 752, 782, 783, 784, 800, 839, 840, 1254], "remind": 196, "huge": [196, 201, 204, 210, 379, 380, 555, 791, 865, 883, 1115, 1220, 1261], "pile": [196, 379, 380, 554, 1063, 1245], "incomprehens": [196, 275, 715, 824, 1241], "blame": [196, 995], "technic": [196, 197, 218, 354, 531, 543, 643, 697, 742, 1094, 1204, 1236], "nojekyl": 196, "eof": [196, 245, 248, 267, 268, 284, 390, 426, 427, 428, 429, 442, 726, 889, 903, 1011, 1012, 1015, 1021, 1031, 1055, 1062, 1116], "doctyp": 196, "constel": [196, 507], "machineri": [196, 317, 318, 339, 343], "eventu": [196, 497, 1029, 1081], "click": [196, 197], "404": [196, 264, 271, 309, 323, 341, 357, 367], "cri": [196, 805], "haven": [196, 197, 221, 620, 986, 993], "subdomain": 196, "afterthough": 196, "preserv": [196, 206, 227, 284, 482, 914, 915, 950, 1005, 1216], "_build": 196, "restor": [196, 211, 258, 264, 274, 277, 860, 1063, 1087], "shini": 196, "nervous": 196, "marketinges": [196, 305], "familiar": [196, 221, 277, 400, 401, 809, 994, 1114], "big blue button": 197, "strongli": [197, 258, 264, 274, 277, 308, 311, 354, 379, 600, 697, 744, 782, 837, 839, 840, 1241], "shame": 197, "pursu": 197, "collabor": [197, 206, 213, 218, 225, 298], "moreov": 197, "focus": 197, "teach": [197, 221, 416], "trust": [197, 200, 261, 317, 318, 339, 357, 367, 750, 1002, 1004, 1148, 1219, 1236], "benefit": [197, 308, 311, 314, 316, 488, 1186], "beat": [197, 271, 281, 824, 1262], "talent": [197, 416], "whiteboard": [197, 1058], "chat": 197, "grain": [197, 506, 535, 897, 1110, 1125, 1245], "stabil": [197, 549, 995, 1220], "thousand": [197, 302, 351, 918], "curiou": [197, 1191], "curious": 197, "licens": [197, 302, 510, 843, 1116, 1146], "lgpl": 197, "blindsid": 197, "govern": [197, 873, 1015], "html5": 197, "exception": [197, 995], "heavili": [197, 218, 221, 305, 307, 416, 600, 795, 887, 986, 995, 1114], "webrtc": 197, "pain": [197, 887, 1068, 1078], "death": [197, 248, 1063], "firewal": [197, 229, 1004], "busi": [197, 340, 504, 508, 658, 892, 904, 916, 952, 954, 959, 960], "couldn": [197, 201, 225, 228, 367, 1128], "indefinit": [197, 732], "vm": [197, 401], "ssl": [197, 357, 1219], "certif": [197, 200, 246, 1219], "encrypt": [197, 923, 944, 996, 1004, 1005, 1006, 1169, 1207], "bbb": [197, 208, 269, 287, 357], "provis": 197, "gcp": 197, "expertis": [197, 601], "n1": [197, 222, 281], "accordingli": [197, 229, 515, 588, 598, 601, 631, 993, 995, 1083, 1118, 1121, 1216], "500gb": 197, "10gb": 197, "spars": [197, 271, 281, 661, 663, 883], "mandatori": [197, 995, 1115], "issuanc": 197, "udp": [197, 987, 989, 1253, 1255], "32768": 197, "clickabl": 197, "lost": [197, 261, 267, 491, 620, 742, 801, 1002, 1038, 1041, 1058, 1101, 1224, 1225, 1231, 1254], "7443": 197, "755": [197, 264, 398, 933, 1117], "xenial": 197, "220": [197, 222, 237, 248, 258, 261, 264, 269, 271, 277, 281, 284, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "certbot": 197, "greenlight": 197, "letsencrypt": 197, "docker": [197, 201, 357], "bundl": [197, 219, 1203, 1219], "rake": 197, "succesfulli": 197, "screenshot": [197, 219, 398], "tryout": [197, 995], "kid": [197, 241, 259, 384], "layman": 197, "knew": [197, 225, 757, 1083], "reproduc": [197, 200, 315, 491, 995], "thought": [197, 465, 797, 887, 1204], "cite": [197, 204, 210, 221, 343], "fred": [197, 987, 1090], "dixon": 197, "leader": 197, "aka": [197, 241, 264, 267, 269, 289, 620, 804], "canva": 197, "bradlei": 197, "schreffler": 197, "upfront": 197, "far": [197, 221, 229, 250, 256, 264, 267, 307, 434, 449, 470, 471, 473, 484, 488, 493, 524, 540, 666, 676, 742, 805, 865, 930, 995, 1092, 1114, 1196, 1241], "exhaust": [197, 1047, 1050, 1094], "heard": 197, "tast": [197, 424, 659, 715, 742, 785, 805], "era": 197, "budget": [197, 245], "advertis": [197, 795], "viabl": 197, "shout": [197, 784, 787], "loud": [197, 443, 677, 746, 784, 790, 791], "gmunden": [198, 416], "traunse": 198, "hike": [198, 199, 225], "bergsteigen": [198, 199], "climb": [198, 199, 225, 256], "klettern": [198, 199], "outdoor": [198, 199], "donnerstag": 198, "geistigen": 198, "ersch\u00f6pfung": 198, "k\u00f6rperlich": 198, "erfahren": [198, 199, 416, 1239], "dazu": [198, 206, 207, 212, 216, 233, 398, 403, 1259], "ausgesucht": [198, 199], "zwar": [198, 1240, 1247], "lo": [198, 199, 239, 277, 313, 596, 867, 1102], "\u00fcbernachtung": 198, "gmundner": [198, 225], "h\u00fctte": [198, 199, 225], "n\u00e4chsten": 198, "naturfreundesteig": 198, "zusammenfassung": 198, "wunsch": 198, "vollend": 198, "erf\u00fcllt": 198, "unversichert": 198, "unmarkiert": 198, "leicht": [198, 233], "panik": 198, "geraten": 198, "h\u00e4nde": [198, 199], "fingern\u00e4gel": 198, "z\u00e4hne": 198, "mitunt": [198, 199, 1258], "verkoffert": 198, "augen": [198, 284], "offenhalten": 198, "spur": 198, "folgen": [198, 233, 234, 1238], "fr\u00fcher": [198, 278], "umdrehen": 198, "sackgass": 198, "erweist": 198, "weggehen": 198, "stirnlamp": 198, "mitnehmen": 198, "tour": [198, 256, 293, 294, 296, 316, 353, 354, 372, 373, 379, 380, 415, 416, 588, 740, 839, 840, 1241, 1243, 1262], "war": [198, 207, 212, 214, 222, 233, 237, 416, 504, 1238, 1240], "sch\u00f6nsten": 198, "jemal": 198, "zuletzt": 198, "traumhaften": 198, "gegend": 198, "griffweit": 198, "erscheint": 198, "eindr\u00fcck": 198, "m\u00fcder": 198, "abklatsch": 198, "erinnerungen": 198, "hirn": 198, "eingebrannt": 198, "haben": [198, 199, 207, 212, 216, 224, 232, 233, 245, 416, 702, 1238, 1239, 1240], "einstieg": [198, 233], "traunsteinstra\u00df": 198, "hundert": [198, 208, 281], "meter": 198, "s\u00fcdlich": 198, "hoisn": [198, 225], "wirt": [198, 225], "markiert": [198, 199], "wanderweg": [198, 199], "wegweisern": [198, 199], "bergauf": [198, 199], "kupp": 198, "klamm": 198, "einsteigt": 198, "bergab": 198, "touristisch": 198, "erschlossen": 198, "trifft": 198, "familien": 198, "kindern": [198, 1247], "ungef\u00e4hr": 198, "rechter": 198, "felsstock": 198, "adlerhorst": 198, "sieht": [198, 208, 212, 222], "touristenzon": 198, "schart": 198, "durchschnaufen": 198, "einstellen": 198, "jetzt": [198, 208, 212, 222, 232, 239, 242, 252, 281, 337, 357, 367], "gen\u00fcsslich": 198, "h\u00f6henmet": 198, "verspeisen": 198, "steinmanderl": 198, "verfehlen": 198, "erkennbar": [198, 208], "kamm": 198, "r\u00fcber": 198, "traunsteinfelsen": 198, "erstreckt": [198, 199], "sch\u00f6nste": 198, "meditativ": 198, "wundersch\u00f6n": [198, 199], "steil": 198, "voll": 198, "zecken": 198, "bl\u00fcht": 198, "rinnen": 198, "leichtest": [198, 208], "dahin": 198, "wieder": [198, 222, 224, 232, 237, 239, 253, 1238, 1247], "vertun": 198, "manderl": 198, "aufstellen": 198, "nachwelt": 198, "nemesi": 198, "bergverr\u00fcckten": 198, "gleich": [198, 208, 222, 232, 233, 237, 239, 271, 319, 351, 357, 367, 393], "schl\u00fcsselstel": 198, "quert": 198, "latschen": 198, "\u00f6fter": [198, 199], "festhalten": 198, "gel\u00e4nd": 198, "einsam": 198, "bohrhaken": 198, "verrotteten": 198, "schuhband": 198, "festh\u00e4lt": 198, "runterfallen": 198, "stell": [198, 222, 253], "umgehen": 198, "querung": 198, "hierher": 198, "st\u00fcck": 198, "reinzum\u00fcnden": 198, "scheint": [198, 206], "gibt": [198, 199, 206, 208, 209, 212, 222, 233, 234, 245, 271, 393, 1238, 1240], "foto": [198, 950], "mittendrin": 198, "besch\u00e4ftigt": 198, "hose": 198, "kacken": 198, "gesagt": [198, 212, 222, 232, 416], "manderln": 198, "aufnahmen": 198, "zunehmenden": 198, "sonnenuntergang": 198, "unvergesslich": 198, "nacht": [198, 199], "geworden": 198, "halten": [198, 199], "hinauf": 198, "stund": [198, 976, 1259], "gekostet": 198, "exklus": [198, 222, 232], "schluss": [198, 222, 242], "schneck": 198, "j\u00e4gerbrot": 198, "schein": 198, "ausstieg": 198, "hernlersteig": 198, "m\u00fcndet": 198, "gmundnerh\u00fctt": 198, "gem\u00fctlich": [198, 199], "nett": [198, 199, 212, 323, 416, 1247], "wirtsleut": 198, "h\u00fcttenruh": 198, "ansitzen": 198, "schweinsbraten": 198, "reinkommt": 198, "k\u00fcche": 198, "geputzt": 198, "backerbsen": 198, "morgen": [198, 277, 281], "hochnebel": 198, "blick": [198, 199], "flugzeug": 198, "gipfel": [198, 199], "dolin": 198, "nebel": 198, "dabei": [198, 208, 212, 248, 367, 416], "verziehen": 198, "r\u00fcckweg": 198, "hoisnwirt": 198, "miesweg": 198, "karibik": 198, "steiner alpen": 199, "kamni\u0161ke alp": 199, "kamni\u0161ko savinjskih alp": 199, "alten": [199, 1240], "tradit": [199, 261, 264, 490, 505, 660, 662, 663, 665, 685, 930, 995, 1137, 1169], "bleiburg": [199, 256], "k\u00e4rnten": [199, 416], "umliegenden": 199, "bergen": 199, "interessantesten": 199, "2558m": [199, 256], "steiner": 199, "alpen": 199, "gekannt": 199, "nun": [199, 216, 222, 245, 252, 277, 702], "steht": [199, 222, 232, 233, 1258], "n\u00e4chste": [199, 216], "jahr": [199, 222], "\u00fcberschreitung": 199, "soweit": [199, 1247], "h\u00f6chst": 199, "interessant": 199, "steinhaufen": 199, "unge\u00fcbt": 199, "verloren": [199, 237, 240], "h\u00f6henangst": 199, "schauen": [199, 233], "helm": 199, "schaden": 199, "schottersurf": 199, "kommen": [199, 271, 398, 403, 416, 977], "ihr": [199, 207, 212, 222, 367, 909, 1239, 1240, 1247], "artikel": [199, 206], "ins": [199, 207, 416, 811, 1247], "eisenkappel": 199, "seebergsattel": 199, "openstreetmap": 199, "klein": [199, 207, 208, 212, 1238, 1239], "dorf": 199, "uhren": 199, "stehengeblieben": 199, "scheinen": 199, "parkplatz": 199, "geparkt": 199, "wissend": 199, "tal": 199, "beginnt": [199, 232, 1259], "ahnen": 199, "stetig": 199, "verzagen": 199, "kar": 199, "pl\u00f6tzlich": 199, "freundlich": 199, "vorhanden": [199, 1247], "fr\u00fchst\u00fcck": 199, "lager": [199, 313], "gebucht": [199, 212, 224, 416], "respektvol": 199, "erklimmenden": 199, "zieht": 199, "haltend": 199, "wand": 199, "wiederum": [199, 222], "mittlerweil": 199, "akzeptiert": 199, "deswegen": [199, 232, 237, 1238], "schliesslich": 199, "stehend": 199, "denn": [199, 222, 232, 1259], "hinaufkomm": 199, "passiert": [199, 222, 239], "anf\u00e4ngern": 199, "geschehen": [199, 357], "jung": [199, 416], "izola": 199, "slowenien": 199, "stellten": 199, "frage": [199, 208, 212, 239, 242, 245, 251, 271, 416, 1247, 1259], "ankam": 199, "ob": [199, 206, 232, 1240, 1259], "wurd": [199, 212, 216, 222, 224, 233, 398, 403, 416, 1240, 1247], "beantwortet": 199, "adoptivs\u00f6hn": 199, "gewonnen": 199, "nachbarberg": 199, "ko\u010dna": 199, "sichtlich": 199, "spa\u00df": [199, 278], "abstieg": 199, "erweitert": 199, "rund": 199, "fertig": [199, 232, 249, 277, 357, 763, 770], "empfehl": 199, "runterzugehen": 199, "raufgekommen": 199, "ostseitigen": 199, "westseitig": 199, "langen": 199, "grat": 199, "felst\u00fcrm": 199, "daf\u00fcr": [199, 216, 222, 232, 233], "anstrengend": 199, "200m": 199, "pulverhangerl": 199, "zur\u00fcck": [199, 222, 234, 1247], "wohlverdient": 199, "la\u0161ko": 199, "geschmack": 199, "schroff": 199, "selektiv": 199, "jedermann": 199, "kett": 199, "umfasst": 199, "2000m": 199, "umschlossen": 199, "gletschergeformten": 199, "karen": 199, "steilen": 199, "w\u00e4nden": 199, "ost": 199, "richtung": 199, "schlafm\u00f6glichkeiten": 199, "biwak": 199, "einladung": 199, "\u00fcberquerung": 199, "dringend": 199, "f\u00e4llig": [199, 416], "fu\u00dfnoten": 199, "belieben": 199, "gummi": 199, "reifen": 199, "fahren": 199, "mehrplatzlag": 199, "reserviert": 199, "h\u00fcttenschl\u00e4fer": 199, "ohrenst\u00f6psel": 199, "f\u00e4lle": 199, "eingetreten": 199, "fassen": [199, 277], "typ": [199, 234, 245, 255, 977, 1203], "geschnarcht": 199, "geschrien": 199, "modules sign": 200, "secure boot": 200, "shim": 200, "dell xps 13": 200, "unresolv": [200, 862, 865, 1065], "upset": [200, 795], "tendenc": 200, "vendor": [200, 201, 532, 542, 601, 883, 887, 993, 1023], "efi": [200, 357], "implementor": [200, 293, 294, 296, 353, 354, 372, 379, 744, 782, 791, 839, 840, 846, 1224, 1241], "shine": 200, "cryptographi": 200, "third": [200, 236, 248, 277, 323, 516, 657, 659, 771, 772, 865, 867, 933, 976, 1019], "parti": [200, 548, 659, 858, 865, 1015, 1058, 1207], "openssl": [200, 944], "req": 200, "x509": 200, "newkei": 200, "rsa": [200, 1002], "keyout": 200, "xps13": 200, "priv": [200, 881], "outform": 200, "36500": [200, 601], "subj": 200, "passphras": [200, 229, 1002], "expiri": 200, "0x2": 200, "97": [200, 208, 222, 232, 237, 239, 245, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 498, 1195], "e5": 200, "ef": 200, "55": [200, 208, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 394, 405, 481, 506, 732, 733, 734, 735, 737, 838, 1065, 1148], "88": [200, 208, 222, 232, 237, 239, 245, 248, 250, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 500, 1134, 1195, 1196, 1231], "3a": 200, "b3": 200, "9c": 200, "1b": 200, "a4": 200, "d7": 200, "sha256withrsaencrypt": 200, "issuer": [200, 544], "sep": [200, 201, 228, 248, 261, 264, 269, 277, 281, 284, 302, 323, 341, 357, 368, 506, 722, 970, 993, 995, 1006, 1065], "57": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 538, 540, 970, 993, 1006, 1066, 1067, 1195], "56": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 405, 443, 567, 838, 967, 993, 995, 1195, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "gmt": 200, "aug": [200, 264, 986, 994], "2121": 200, "subject": [200, 534, 848, 885, 1224], "rsaencrypt": 200, "modulu": [200, 258, 264, 274, 277], "b5": 200, "2d": [200, 251, 659, 1135], "5c": 200, "6f": [200, 357, 1053], "b0": 200, "95": [200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1195, 1196], "f6": 200, "9e": 200, "67": [200, 210, 222, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 506, 591, 1053, 1135, 1148, 1195, 1196], "9d": 200, "0d": 200, "bc": [200, 867, 993], "f5": 200, "6e": 200, "fe": [200, 506], "94": [200, 208, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 569, 570, 1195], "2b": [200, 995], "e6": 200, "b2": 200, "59": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 405, 1067, 1078, 1195], "a0": [200, 994], "f8": 200, "7d": 200, "1c": 200, "2c": 200, "9f": 200, "62": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 930, 1148, 1195], "4d": [200, 1135], "86": [200, 208, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1195, 1196], "e3": [200, 563], "dd": [200, 918, 948], "7b": 200, "3f": 200, "aa": 200, "b8": 200, "a5": [200, 994], "d5": 200, "0b": 200, "d1": [200, 271, 334, 357, 716], "e8": 200, "c5": 200, "d2": [200, 271, 334, 363, 716], "c2": [200, 547, 660, 746], "0a": [200, 426], "a1": [200, 261, 306, 818, 1148], "e1": [200, 249, 262, 563, 743], "89": [200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 498, 993, 994, 995, 1067, 1195, 1196], "4c": 200, "4a": 200, "77": [200, 222, 230, 232, 237, 239, 241, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 395, 398, 403, 1195, 1196], "a9": 200, "52": [200, 208, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 394, 995, 1195], "68": [200, 222, 227, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 970, 1195, 1196], "b6": 200, "a8": 200, "9b": 200, "d8": 200, "7f": [200, 995], "54": [200, 208, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 392, 393, 405, 513, 698, 699, 700, 701, 802, 877, 970, 993, 1078, 1195], "e2": [200, 249, 262, 563, 743], "a3": [200, 818], "79": [200, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1195, 1196], "f4": 200, "96": [200, 208, 222, 232, 237, 239, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 498, 1066, 1067, 1195, 1196], "63": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 398, 403, 1148, 1195], "73": [200, 210, 222, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 1195], "4f": [200, 1135], "1d": 200, "7e": 200, "4e": 200, "0e": 200, "d9": 200, "8c": 200, "d3": [200, 716], "c8": 200, "f7": 200, "8e": 200, "49": [200, 208, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 394, 785, 933, 1078, 1092], "d6": 200, "3b": 200, "1e": 200, "4b": [200, 995, 1053], "72": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 398, 403, 652, 980, 1078, 1148, 1195, 1196], "5e": [200, 1121], "5f": [200, 819], "7c": 200, "51": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 698, 699, 700, 701, 970, 973, 1195], "expon": [200, 1121], "65537": 200, "0x10001": 200, "x509v3": 200, "75": [200, 222, 232, 237, 239, 242, 245, 248, 250, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 506, 1195, 1196], "98": [200, 208, 222, 232, 239, 245, 248, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 381, 393, 398, 403, 643, 679, 1067, 1068], "0c": [200, 995], "keyid": 200, "c0": 200, "8f": 200, "b1": 200, "b7": 200, "9a": 200, "fa": 200, "7a": 200, "df": [200, 225, 341, 345, 351, 363, 506], "a6": 200, "32": [200, 201, 206, 208, 211, 222, 227, 232, 237, 239, 242, 245, 248, 251, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 420, 422, 438, 443, 482, 543, 549, 572, 588, 601, 883, 912, 918, 944, 970, 987, 989, 1066, 1067, 1068, 1078, 1146], "c9": 200, "76": [200, 222, 232, 237, 239, 245, 248, 250, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 539, 540, 802, 838, 1148, 1195, 1196], "f0": 200, "b4": 200, "f9": 200, "eb": 200, "f1": 200, "46": [200, 222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 822, 970, 995, 1011, 1195, 1196], "6c": [200, 995], "2f": [200, 422, 1135], "5a": 200, "c1": [200, 547, 660, 746], "e0": 200, "d0": 200, "93": [200, 208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1195], "8d": 200, "33": [200, 211, 222, 227, 232, 237, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 306, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 392, 393, 394, 506, 547, 918, 960, 1065, 1195, 1196], "2a": 200, "fc": [200, 543, 544], "1a": 200, "b9": 200, "cb": [200, 706], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 200, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 200, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 200, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 200, "wl72mzqr": 200, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 200, "hmszvaowukuzi2kflrpvc": 200, "79gwnr4": 200, "jc": 200, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 200, "valspcvotvjdokib4eyxnavjbdjdldd": 200, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 200, "nb3kgq7zt5ym": 200, "b8ce2f": 200, "ettmprmfi94x": 200, "7i5tuqrbsylistict": 200, "rf1kw6": 200, "zuzvmwyow9cyzwc5rar": 200, "ys0exg3v": 200, "hyjl7vaxa23rb": 200, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 200, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 200, "dz1idzapbgnvhrmbaf8ebtadaqh": 200, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 200, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 200, "xra": 200, "kdtflvc7uuvwtp": 200, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 200, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 200, "yqfvxbjphkw": 200, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 200, "ahemjzbycfiiq65b5x": 200, "y7aq": 200, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 200, "rk": 200, "b3lljngstu2g": 200, "mokutil": 200, "mokmanag": 200, "bloodi": [200, 1062, 1204], "fan": [200, 221, 225, 251, 275, 344, 1191], "highest": [200, 258, 264, 274, 277, 323, 449, 494, 994, 1052], "melt": 200, "7390": [200, 264], "cross develop": 201, "raspberry pi": [201, 986, 987, 988, 989, 990, 993, 994, 995], "crosstool-ng": 201, "c++": [201, 203, 1240, 1241, 1242, 1243], "sadli": [201, 251, 488, 755, 856, 993, 1027, 1030, 1066, 1089], "linaro": [201, 840, 985, 1076, 1077], "libstdc": [201, 1078, 1080], "unsatisfi": 201, "libpthread": [201, 1068], "feedback": [201, 216, 219, 228, 229, 230], "thankfulli": 201, "gperf": [201, 1080], "flex": [201, 867, 993, 1080], "help2man": [201, 1080], "libtool": [201, 1080], "ncurs": [201, 860], "rsync": [201, 1080], "libncurses5": [201, 1080], "util": [201, 207, 228, 357, 528, 530, 541, 547, 566, 580, 694, 750, 753, 755, 838, 1080, 1087, 1219, 1251], "ct": [201, 1068, 1080], "zlib": [201, 1080], "prior": [201, 913, 930, 955, 993, 1065, 1082, 1136, 1257], "bootstrap": [201, 1080, 1226], "yann": 201, "morin": 201, "warranti": [201, 241, 395, 819], "merchant": [201, 819], "rpi3": 201, "armv7": 201, "rpi2": 201, "23179": 201, "glibc_2": [201, 1065], "ldd": [201, 516, 537, 1065, 1068, 1083], "0xb6e06000": 201, "invok": [201, 230, 249, 262, 384, 389, 518, 522, 544, 646, 657, 716, 747, 1044, 1066, 1104, 1116, 1117, 1142], "rpt2": 201, "rpi1": 201, "deb10u1": 201, "quirk": [201, 986], "werror": [201, 430, 443, 486, 535, 544, 551, 838, 855, 856, 1233], "behind": [201, 240, 371, 443, 494, 544, 566, 675, 887, 1004, 1032, 1065, 1109, 1208], "glibcxx_3": 201, "libgcc_": 201, "downgrad": 201, "cmake_find_root_path": [201, 1066], "cmake_sysroot": [201, 1066], "viewpoint": [201, 1248], "bye": [201, 770, 774, 776, 777, 778, 1204], "relocat": 201, "fragil": 201, "sdk": 201, "job": [201, 221, 231, 290, 487, 519, 986, 1011, 1012, 1013, 1085, 1103, 1115, 1119, 1196, 1224, 1245, 1250], "buildroot": 201, "encount": [201, 229, 277, 281, 725, 994, 995, 1021], "ct_prefix": 201, "categori": [202, 213, 506, 1193], "crosstool": [202, 305, 840, 985, 1066, 1076, 1077, 1078, 1081], "1399": 202, "dell": 202, "xp": [202, 504], "grintovec": [202, 256], "plan\u0161arsko": 202, "jezero": 202, "\u010de\u0161ka": [202, 256], "ko\u010da": [202, 256], "traunstein": [202, 225, 416], "zierlersteig": [202, 225], "bigbluebutton": [202, 204, 205], "suck": 202, "consumpt": 202, "repair": [202, 261], "nand": 202, "40w": 202, "beratung": 203, "gentl": [203, 205, 229, 231, 416, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1256, 1264], "necessarili": [204, 340, 470, 500, 676, 838, 873, 887, 925, 1006, 1107, 1226, 1233], "solder": [204, 205], "tinker": [204, 205, 1245], "individu": [205, 241, 395, 446, 504], "sysv": [206, 1066, 1068], "grace": [206, 318, 809], "sigterm": [206, 1062, 1063], "sigkil": 206, "beeinflussen": 206, "shutdown": [206, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 354, 357, 363, 406, 865, 980, 1059, 1098], "herausgefunden": [206, 212, 416], "nachfolgend": 206, "manpag": 206, "verhindern": 206, "genehm": 206, "w\u00e4re": [206, 232, 242, 278, 1240], "inhibit": [206, 353, 742, 780], "children": [206, 498, 526], "vererbt": 206, "attributen": 206, "setprior": 206, "execv": [206, 1018, 1065], "sched_reset_on_fork": 206, "ORed": 206, "privileg": [206, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 944, 980], "playback": 206, "prevent": [206, 209, 258, 264, 267, 274, 277, 305, 380, 480, 486, 490, 925, 1015, 1020, 1051, 1062, 1089, 1101, 1131], "evad": 206, "rlimit_rttim": 206, "getr": 206, "anstel": 206, "prozessen": 206, "teilen": 206, "prozess": [206, 399], "startenden": 206, "gestarteten": 206, "weitergegeben": 206, "ausser": [206, 233, 393], "unterbunden": 206, "pthread_attr_setinheritsch": 206, "pthread_inherit_sch": 206, "ignor": [206, 218, 277, 323, 409, 444, 464, 494, 510, 524, 544, 675, 678, 742, 757, 770, 792, 845, 930, 994, 1019, 1063, 1087, 1219], "pthread_explicit_sch": 206, "newli": [206, 486], "sowa": [206, 212, 416], "\u00e4hnlich": [206, 237], "filter_driv": 206, "offenbar": [206, 222, 416, 1238], "miser": [206, 694], "netzwerkdrivern": 206, "hoher": 206, "interruptlast": 206, "verbessern": 206, "n\u00f6tig": 206, "diesbez\u00fcglich": 206, "\u00fcberlegt": 206, "schaltet": 206, "netzwerkdriv": 206, "30107": 206, "linuxfound": 206, "workgroup": 206, "napi": [206, 236, 881], "implementationen": 206, "libmodbu": 206, "freemodbu": 206, "konfiguriert": [206, 207], "jumbo": 206, "jumbo_fram": 206, "mtu": [206, 988], "1500": [206, 264], "eth0": 206, "9000": [206, 264], "ifconfig": [206, 881], "abgelegt": 206, "konfigur": [206, 208], "ifac": [206, 569, 583, 806], "vorsicht": [206, 232, 977], "routern": 206, "fragmentieren": 206, "tracerout": 206, "netzwerkverbindung": 206, "g\u00fcte": 206, "sar": 206, "sysstat": 206, "schmerzvol": 206, "netter": 206, "ausprogrammiert": 207, "konflikt": 207, "anhand": [207, 216, 233, 234, 283, 415], "parallelen": 207, "demonstr": [207, 209, 229, 301, 596, 645, 725, 1193, 1197, 1236], "mutter": [207, 1258], "aller": [207, 216, 1258], "hilf": [207, 232, 398, 403], "gefixt": 207, "kommunk": 207, "variablen": [207, 208, 233, 234, 237, 240, 245, 273, 291, 292, 390, 393, 399, 1244, 1258], "frontal": 207, "vorgef\u00fchrt": 207, "diskuss": [207, 216, 238, 416], "dank": [207, 212, 416], "beispielcod": 207, "h\u00e4ndisch": [207, 1239], "zweier": [207, 233], "bewundern": 207, "k\u00f6nnt": 207, "euch": 207, "erinnern": [207, 416], "blinken": 207, "liess": 207, "irgendwo": [207, 281], "hatten": [207, 212, 416], "waren": [207, 212, 1240], "kleinen": 207, "empf": 207, "unbedingt": [207, 222], "beispielprogramm": 207, "horcht": 207, "gesprochen": 207, "ausf\u00fchrlich": [207, 292], "schamlos": 207, "eigenwerbung": 207, "vortrag": 207, "linuxtagen": 207, "\u00fcberbleibsel": 207, "ehemaligen": 207, "socketcan": [207, 987, 988, 1245], "absorbiert": 207, "worden": [207, 216], "enth\u00e4lt": [207, 222], "schnuckelig": 207, "aufzeichnen": 207, "replai": [207, 988], "folien": [207, 216, 224], "freitag": 207, "kerneldrivertag": 207, "sorri": [207, 213, 927], "emanuel": 207, "beispieldriv": 207, "finden": [207, 216], "han": 207, "angeboten": 207, "promin": [207, 512, 514, 799, 883], "implementiert": [207, 222, 253, 1259], "gute": [207, 224, 1247], "anfang": [207, 208, 216, 367], "mcp2515": [207, 887], "angesprochen": [207, 224], "fortgeschrittener": [207, 224], "einpflegt": 207, "agiert": 207, "mcp251x": 207, "at91": 207, "soc": [207, 993, 994, 995, 1029], "deinem": 207, "stecker": 207, "verbaut": 207, "at91_can": 207, "lacht": 207, "openh": [207, 248], "zeilenweisen": 208, "nutzdaten": [208, 261], "zeil": [208, 222, 232, 239, 242, 245, 248, 254, 258, 277, 281, 299, 302, 341, 345, 357, 393], "extrahieren": [208, 235], "wollend": [208, 1247], "spalt": 208, "offensichtlich": [208, 1239], "separiert": 208, "felder": 208, "antwort": [208, 309, 351], "stdtype": 208, "gscheitesten": 208, "aufeinanderfolgend": 208, "whitespac": [208, 269, 277, 323, 428, 518, 526, 1136, 1160, 1216], "nimmt": [208, 233, 245, 269, 271, 277, 309, 1238], "tupl": [208, 221, 226, 228, 230, 234, 238, 240, 246, 247, 249, 253, 256, 259, 260, 262, 263, 265, 266, 270, 272, 273, 274, 279, 282, 285, 286, 288, 298, 300, 303, 306, 307, 310, 320, 322, 324, 328, 329, 341, 344, 346, 352, 354, 356, 358, 364, 367, 373, 379, 381, 383, 398, 573, 782, 839, 840, 1094, 1112, 1120, 1121, 1126, 1135, 1138, 1168, 1191, 1241, 1261], "weiss": [208, 212, 222, 341, 1259], "rauskommen": 208, "aaa": [208, 269, 281, 287, 323, 357], "tbbb": 208, "tccc": 208, "feld0": 208, "feld1": 208, "feld2": 208, "ccc": [208, 287], "optional": [208, 1238], "splittet": 208, "bearbeitet": 208, "manuel": [208, 232, 237], "ddd": 208, "eee": 208, "maxsplit": [208, 277, 323, 506], "restfield": 208, "her": [208, 233, 277, 280, 737, 923, 944, 1157, 1199], "10101010": 208, "switchnumb": 208, "rsplit": [208, 277, 323, 506, 1136], "l1": [208, 211, 222, 239, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 564], "l2": [208, 211, 222, 239, 245, 248, 253, 258, 261, 264, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "\u00e4nderung": [208, 222, 1259], "87": [208, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1148, 1195, 1196], "zeigen": [208, 976], "dasselb": 208, "objekt": [208, 222, 232, 323], "140070310441600": 208, "ver\u00e4ndert": 208, "140070371015728": 208, "92": [208, 209, 232, 237, 239, 241, 245, 248, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 973, 1195, 1196], "attributeerror": [208, 222, 258, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1089, 1102, 1103, 1110], "gottseidank": 208, "alternativ": [208, 367], "aufruf": [208, 222, 228, 232, 277, 394], "paaren": 208, "keyerror": [208, 211, 222, 232, 239, 248, 258, 261, 264, 269, 271, 274, 277, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1089, 1138, 1213], "nix": [208, 209, 222, 240, 248, 269, 271, 274, 299, 319, 351, 357, 393, 602], "umstaendlich": 208, "einfach": [208, 222, 233, 237, 319, 1239, 1240, 1259], "102": [208, 222, 232, 237, 239, 245, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403], "103": [208, 222, 232, 239, 245, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393], "104": [208, 210, 222, 232, 237, 239, 245, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1148], "105": [208, 222, 232, 237, 239, 245, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 403, 1053], "106": [208, 222, 232, 237, 239, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 970], "setdefault": [208, 249, 269, 284, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1138], "107": [208, 222, 232, 237, 239, 241, 245, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 395, 493], "meinvoelligsinnlosertyp": 208, "sinnlose_addit": 208, "sinnlobj": 208, "112": [208, 222, 229, 232, 237, 239, 245, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 970], "113": [208, 222, 232, 237, 239, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 549], "__main__": [208, 212, 222, 227, 245, 248, 258, 261, 262, 264, 269, 271, 274, 277, 281, 284, 287, 290, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 398, 1090, 1093, 1097, 1103, 1111, 1219, 1225], "0x7f64a8934890": 208, "114": [208, 210, 222, 232, 239, 245, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "115": [208, 222, 232, 237, 239, 245, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "116": [208, 222, 232, 239, 245, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "nochwenigersinnvol": 208, "der_absolute_unsinn": 208, "super": [208, 224, 225, 232, 246, 248, 249, 264, 272, 275, 279, 298, 302, 313, 322, 344, 363, 520, 563, 1087, 1089, 1106, 1191, 1198], "unsinn": 208, "uebertreibs_jetzt_bitt": 208, "117": [208, 222, 232, 239, 245, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "118": [208, 222, 232, 239, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 970, 1148], "0x7f64a894a790": 208, "119": [208, 222, 232, 239, 241, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 395], "121": [208, 210, 222, 232, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "1335": 208, "122": [208, 210, 222, 232, 237, 239, 245, 248, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1067], "819508": 208, "123": [208, 222, 232, 239, 240, 245, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 439, 988, 1148, 1155, 1225], "uptim": 208, "timedelta": [208, 227, 254, 256, 309], "358": [208, 264, 309, 323, 341, 351, 357, 367, 500], "124": [208, 222, 229, 232, 239, 245, 248, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1148], "irgendwann_einmal_gewesen": 208, "834972": 208, "126": [208, 222, 232, 237, 239, 245, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "datetime_from_batteri": 208, "840837": 208, "127": [208, 222, 232, 237, 239, 245, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1004, 1012], "846889": 208, "woher": [208, 271], "ausschauen": 208, "sinnlo": [208, 271], "sinnlos": [208, 245, 323], "repraesent": 208, "129": [208, 222, 232, 239, 241, 248, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 395], "130": [208, 222, 232, 239, 254, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 742, 860, 1134], "completedprocess": [208, 277, 287], "returncod": [208, 277, 287], "erfolgreich": 208, "beendet": 208, "schau": 208, "du": [208, 222, 277, 284, 290, 1012, 1017], "verwendest": 208, "anzuzeigen": [208, 363], "cell": [208, 221, 368, 986, 1087, 1088, 1089, 1094, 1102, 1103, 1109, 1110, 1114, 1131, 1132, 1136, 1196, 1212, 1213], "gesendet": 208, "ausf\u00fchrt": 208, "krieg": 208, "131": [208, 222, 232, 239, 248, 254, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 792], "capture_output": [208, 287], "ndrwxrwxr": [208, 287], "mar": [208, 277, 439, 914, 915, 918, 933, 945, 967, 970, 973, 997, 1011, 1021, 1065, 1078], "2607": 208, "33768": 208, "misc": [208, 209, 368, 620, 856, 900], "ndrwxr": 208, "xr": [208, 539, 914, 915, 933, 935, 936, 944, 945, 970, 986, 993, 994, 995, 1065, 1068, 1078, 1080, 1081, 1117], "switchzeug": 208, "sondern": [208, 222, 233, 1258], "keiner": [208, 222, 341, 1240], "seinen": [208, 222], "formuliert": [208, 216], "logisch": [208, 232], "irgendwa": [208, 254, 269, 271], "konverti": 208, "musst": 208, "dich": 208, "festlegen": 208, "133": [208, 222, 232, 239, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "stdout_as_utf8": 208, "utf": [208, 249, 258, 261, 262, 264, 268, 274, 277, 287, 309, 323, 329, 341, 345, 351, 357, 363, 1121, 1140, 1188], "134": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 801], "135": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "drwxrwxr": [208, 287, 970, 1029, 1066, 1067, 1078, 1080], "drwxr": [208, 914, 915, 933, 970, 986, 993, 994, 995, 1078, 1080], "136": [208, 210, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 540], "elem": [208, 212, 222, 227, 232, 237, 239, 242, 254, 261, 264, 269, 274, 299, 302, 309, 319, 323, 329, 345, 351, 357, 363, 367, 604, 700, 702, 750, 770, 772, 774, 777, 791, 792, 794, 814, 1094, 1137, 1141], "listdir": [208, 315, 319, 351, 357, 368, 405, 506], "ipynb_checkpoint": [208, 287, 351], "gitignor": [208, 534, 1067], "137": [208, 219, 222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "rekurs": 208, "iterieren": [208, 212, 222, 237, 245], "dirpath": 208, "dirnam": [208, 261, 264, 315, 506, 601, 838, 1224], "checkpoint": [208, 258, 264, 274, 277], "itg": 208, "scope": [208, 216, 222, 233, 234, 237, 268, 280, 293, 294, 296, 305, 317, 328, 339, 343, 344, 349, 350, 353, 355, 356, 361, 362, 365, 366, 372, 381, 398, 434, 440, 528, 564, 614, 634, 647, 649, 657, 743, 784, 796, 799, 814, 815, 839, 840, 1088, 1133, 1241, 1251], "getter": [208, 702], "setter": [208, 248, 1110], "fibo": [208, 209, 228, 248, 262, 770, 772, 1093], "listcomprehens": 208, "generatorexpress": [208, 209], "switchdb": 208, "schema": [208, 289, 644, 1147], "michi": 208, "pyexec": 208, "ifadminstatu": 208, "ifdescr": 208, "iflastchang": 208, "snmpenginetim": 208, "ifoperstatu": 208, "fein": [208, 232], "helferlein": 208, "hochtrabend": 208, "nennt": 208, "funktional": 208, "138": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1148], "139": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "140": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 319, 323, 329, 341, 345, 351, 357, 363, 367, 742], "l_quadrat": 208, "141": [208, 222, 232, 239, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 439, 970], "kompliziert": [208, 222, 274, 277, 299], "anm": 208, "versionen": [208, 278], "aufgebaut": 208, "rausnehmen": 208, "konfigurationsfil": 208, "configpars": 208, "142": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 306, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1006, 1053], "143": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1068], "liste_als_str": 208, "144": [208, 222, 232, 239, 248, 255, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 540], "145": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1209], "herbert": 208, "146": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "heraussen": 208, "147": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 923], "148": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 660], "149": [208, 222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "151": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 405], "152": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 405, 1213], "mein_dict": 208, "gerhard": 208, "175": [208, 222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 323, 329, 341, 345, 351, 357, 363, 367], "154": [208, 222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 970], "dict_as_json_str": 208, "155": [208, 222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 405], "gelesenes_dict_von_json": 208, "nahm": 209, "woch": 209, "anspruch": 209, "platz": 209, "gesammelten": 209, "notizen": 209, "schnell": [209, 212, 232, 253, 278, 1239], "sachen": [209, 235], "is_prim": [209, 232, 235, 240, 1170], "divisor": [209, 240, 367, 838, 1162], "unmodifi": [209, 222, 258, 269, 547, 598, 644, 657, 993, 995, 1089, 1102, 1173], "randomnumb": 209, "howmani": 209, "randrang": [209, 237, 261, 269, 271, 274, 277, 281, 284, 287, 309, 351, 357, 363, 367, 393, 1090, 1125], "prev": [209, 877], "cur": [209, 329, 444], "fibonum": 209, "tend": [209, 308, 311, 318, 494, 860, 927, 1081], "input_list_str": 209, "input_list": [209, 284, 1173], "__n": [209, 838], "__lt__": [209, 271, 274, 277, 281, 299, 302, 323, 341, 363], "rh": [209, 258, 262, 277, 367, 432, 474, 490, 519, 564, 578, 644, 657, 659, 784], "__le__": [209, 271, 274, 277, 281, 299, 302, 323, 341, 363, 1109], "__eq__": [209, 271, 274, 277, 281, 299, 302, 323, 341, 363, 1109], "__iadd__": 209, "iadd": 209, "__add__": [209, 274, 277, 281, 299, 323, 341, 363, 1109], "new_numb": [209, 264], "__radd__": [209, 274, 281, 299, 363, 1109], "radd": 209, "lh": [209, 258, 262, 367, 432, 474, 490, 519, 564, 578, 634, 644, 657, 659, 784, 918], "makesnosens": 209, "__number": 209, "input_numb": 209, "numnber": 209, "list_of_squar": 209, "compehens": 209, "effort": [209, 281, 315, 487, 488, 505, 994], "local_assign": 209, "read_global_vari": 209, "local_shadows_glob": 209, "explicit_global_assign": 209, "creation": [209, 318, 340, 808, 810, 815, 839, 840, 947, 985, 1015, 1026, 1033, 1042, 1048, 1059, 1068, 1131, 1140, 1141, 1226, 1248, 1254], "captur": [209, 292, 293, 294, 296, 316, 353, 354, 372, 373, 381, 383, 398, 782, 783, 786, 839, 840, 986, 1085, 1241], "create_funct": 209, "inner_funct": [209, 522, 526], "whic": 209, "f_one": 209, "f_two": 209, "launch": [209, 225], "discov": [209, 221, 228], "area": [209, 218, 251, 281, 374, 377, 883, 994, 1247, 1255], "scikit": [210, 212, 259, 368, 1226], "manipul": [210, 375, 378, 517, 523, 533, 535, 677, 801, 838, 840, 885, 993, 1006, 1015, 1052, 1064, 1128, 1147, 1244], "appreci": [210, 261, 927, 1148], "beauti": [210, 224, 225, 228, 246, 248, 249, 256, 267, 271, 272, 275, 281, 298, 322, 398, 470, 620, 677, 1033, 1140, 1148, 1191, 1260], "spectral": [210, 1193], "matlab": [210, 212, 265, 416, 1193, 1262], "mat": 210, "scipi": [210, 212, 240, 259, 1226], "loadmat": [210, 212], "sklearn": [210, 212, 367, 1194, 1196, 1226], "rgb": [210, 212, 367, 407], "dimens": [210, 212, 1196, 1242], "xkcd": 210, "corei": [210, 221, 224, 225, 228, 230, 233, 235, 241, 243, 246, 249, 256, 259, 262, 272, 275, 286, 289, 298, 322, 328, 356, 398, 403, 1191, 1209, 1210, 1212, 1213, 1214, 1215, 1217, 1227], "schafer": [210, 221, 224, 225, 228, 246, 249, 256, 259, 262, 272, 275, 286, 289, 298, 322, 328, 356, 398, 403, 1191, 1209, 1210, 1212, 1213, 1214, 1215, 1217, 1227], "keith": [210, 221, 225, 246, 259, 272, 286, 289, 322, 328, 1191], "galli": [210, 221, 225, 246, 259, 272, 286, 289, 322, 328, 1191], "sci": 210, "kit": [210, 407], "spyder": [210, 221, 1114], "pycharm": [210, 221, 315, 1114], "retain": [210, 463, 1132], "invoc": [210, 380, 525, 564], "comparison": [210, 227, 250, 264, 267, 277, 285, 323, 439, 443, 449, 620, 784, 1123, 1166], "misfeatur": 210, "png": [210, 212, 357, 367, 538, 1067, 1193], "imgfil": 210, "veggi": [210, 212, 367, 1193], "pillow": [210, 212], "welcom": 210, "cooper": [210, 809], "477x686": 210, "imgarrai": [210, 212], "ndim": [210, 1196], "477": [210, 264, 309, 357, 367], "dtype": [210, 212, 306, 309, 313, 345, 351, 363, 367, 1196, 1209, 1210, 1212, 1213, 1214, 1215], "uint8": [210, 367, 819], "255": [210, 245, 261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1044], "172": [210, 222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 489], "cut": [210, 228, 241, 281, 295, 304, 325, 326, 369, 370, 443, 478, 840, 877, 917, 932, 979, 982, 985, 995], "nrow": [210, 212], "ncol": [210, 212], "stack": [210, 211, 212, 219, 233, 234, 252, 258, 261, 264, 274, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 488, 494, 513, 564, 648, 678, 799, 920, 921, 925, 994, 1019, 1033, 1255], "reshap": [210, 212, 246, 259, 272, 286, 289, 322, 328, 367, 1191, 1194, 1196], "irrelev": [210, 227, 232, 265, 439, 481, 504, 933, 1121, 1204], "colorspac": 210, "mpl_toolkit": 210, "mplot3d": 210, "axes3d": 210, "pyplot": [210, 239, 258, 287, 290, 341, 345, 351, 363, 1086, 1145, 1196], "plt": [210, 239, 258, 287, 290, 341, 345, 351, 363, 1086, 1145, 1196], "fig": 210, "add_subplot": 210, "set_xlabel": 210, "set_ylabel": 210, "set_zlabel": 210, "ndindex": 210, "scatter": [210, 858], "rgb_linear": [210, 367], "n_cluster": [210, 212, 367], "copy_x": 210, "max_it": 210, "n_init": 210, "n_job": 210, "precompute_dist": 210, "random_st": [210, 1194, 1196], "tol": 210, "verbos": [210, 217, 375, 522, 535, 802, 913, 948, 950, 1068, 1125, 1219], "cluster_cent": 210, "int32": [210, 367, 490], "327222": 210, "cluster_centers_": [210, 212, 367], "20529747": 210, "50360681": 210, "3796182": 210, "94408609": 210, "75471018": 210, "53133237": 210, "226": [210, 222, 241, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367, 395], "64913628": 210, "76939951": 210, "92569235": 210, "71464963": 210, "47333306": 210, "60640492": 210, "8888303": 210, "92275244": 210, "84313209": 210, "157": [210, 222, 232, 239, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "30685398": 210, "43988931": 210, "03959132": 210, "225": [210, 222, 261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 323, 329, 345, 351, 357, 363, 367, 538, 1148], "55934051": 210, "182": [210, 222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "98255893": 210, "3232048": 210, "241": [210, 261, 264, 269, 271, 274, 277, 284, 287, 302, 319, 323, 329, 345, 357, 363, 367, 1148], "37322907": 210, "159": [210, 222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "54158234": 210, "51775529": 210, "idx": [210, 212, 277, 363, 367], "cube": [210, 367], "concaten": [210, 212, 249, 261, 262, 269, 277, 323, 351, 367, 392, 439, 505, 974, 1126, 1134], "axi": [210, 212, 313, 367, 1212, 1213], "reduced_img": [210, 212, 367], "fromarrai": [210, 212, 367], "franziska": [211, 212], "baseexcept": [211, 248, 277, 281, 302, 1089], "callabl": [211, 225, 261, 274, 284, 287, 302, 309, 319, 323, 330, 357, 742, 784, 806, 814, 1103, 1104, 1141], "rescu": [211, 269, 656, 677, 800, 802, 887, 1087], "pooh": [211, 522, 669], "hex": [211, 222, 232, 239, 254, 264, 274, 287, 299, 302, 309, 319, 329, 345, 351, 357, 367, 393, 409, 601, 995, 1135], "0x7f03d41165f0": 211, "nonexist": 211, "ensu": 211, "jessa": [211, 232, 239, 261, 290, 341], "verdammt": [211, 398], "ipython": [211, 248, 258, 264, 274, 277, 302, 319, 357, 970], "bd3a1af9b474": 211, "issubclass": [211, 248, 264, 277, 302], "bummer": [211, 264, 816, 1134], "peter": [211, 234, 271, 281, 389, 390, 1127], "paul": [211, 389, 390, 1127], "mari": [211, 1127], "pet": 211, "perfectli": [211, 267, 482], "bloh": [211, 248], "blech": [211, 319, 755, 1207], "range_iter": [211, 222, 237, 254, 261, 269, 271, 274, 277, 287, 299, 302, 309, 319, 367], "0x7f03d402e570": 211, "stopiter": [211, 222, 237, 248, 254, 258, 261, 264, 269, 271, 274, 277, 281, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 770, 778, 1089, 1094], "einf\u00fchrung": [212, 216, 229, 1240, 1261], "beantwortung": [212, 416], "herrschaft": [212, 416], "gehalten": [212, 224, 233, 416, 1240], "schulungsr\u00e4umen": [212, 416], "tectrain": [212, 224, 233, 235, 243, 246, 249, 250, 251, 252, 256, 268, 280, 416], "platzhirsch": [212, 416], "schlagen": [212, 416], "guten": [212, 222, 224, 233, 243, 277, 281, 416, 1240], "spass": [212, 416, 1247], "unglaublich": [212, 416], "lustig": [212, 233, 416], "vermittelt": [212, 416], "gelernt": [212, 416], "anwend": [212, 416], "beachten": [212, 233, 416], "zudem": [212, 416], "kursleit": [212, 416], "sympathisch": [212, 416], "kompet": [212, 416], "w\u00fcrde": [212, 222, 416], "weiterempfehlen": [212, 416], "christoph": [212, 254, 416], "nie": [212, 224, 416, 1240], "jemand": [212, 416], "datentypen": [212, 216, 233, 234, 240, 243, 274, 292, 399, 1238], "lassen": [212, 222, 233, 1239, 1259], "bevor": [212, 1247, 1259], "anf\u00e4ngerthemen": 212, "herumzureiten": 212, "gehackt": [212, 252], "zeug": [212, 341], "chef": 212, "vorgespr\u00e4ch": 212, "\u00fcbungsbeispiel": [212, 222], "teilnehm": [212, 216, 224, 416, 1247], "mitgegeben": 212, "ausgehend": [212, 233, 416], "spektralbild": 212, "sagt": [212, 269], "verwend": [212, 245], "clusteringalgorithmu": 212, "kategorisieren": 212, "abgebildeten": 212, "st\u00fccke": [212, 216], "erkennen": [212, 1240], "hab": 212, "erlaubt": [212, 222], "kursvorbereitung": 212, "appet": 212, "reduzieren": 212, "farbredukt": 212, "farben": 212, "bilddaten": 212, "schreiben": [212, 234, 398, 399, 403, 1238], "interoperiert": 212, "nahtlo": [212, 1247], "zufal": [212, 238, 1239], "alpha": [212, 277, 323, 367, 1146], "ausgangsbild": 212, "abzuschneiden": 212, "restoren": 212, "algorithmu": [212, 232, 277, 281, 284], "ander": [212, 222, 233, 243, 253, 261, 274, 393, 398, 403, 407, 416, 913, 1240, 1258], "reduc": [212, 367, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 542, 744, 782, 837, 839, 840, 995, 1193], "acht": [212, 232, 233, 277, 309, 329, 357], "\u00fcberschaubar": 212, "ausdrucksst\u00e4rk": 212, "bemerkbar": 212, "wegschneiden": 212, "pil": [212, 367], "kmean": [212, 367], "nrgba": 212, "disregard": [212, 443], "arbitrarili": [212, 846, 1021, 1025, 1087], "linear_rgb": 212, "rgba": 212, "ergeben": 212, "testprogramm": 212, "imndata": 212, "teilzeitmitarbeiterin": 212, "studiert": 212, "physik": 212, "folgendem": [212, 254, 1259], "bekackten": 212, "inputformat": 212, "parsen": [212, 237], "zwischendurch": 212, "gruppenarbeit": 212, "h2o": 212, "dat": 212, "mass": [212, 318], "0000000e": 212, "2662399e": 212, "5994910e": 212, "4391972e": 212, "0048070e": 212, "0078250e": 212, "hessian": 212, "hartre": 212, "bohr": 212, "kamu": 212, "05054e": 212, "61610e": 212, "00000e": 212, "20781e": 212, "08051e": 212, "83024e": 212, "06829e": 212, "42629e": 212, "65256e": 212, "52600e": 212, "69570e": 212, "91733e": 212, "04388e": 212, "34292e": 212, "04780e": 212, "63758e": 212, "19019e": 212, "41217e": 212, "11622e": 212, "21912e": 212, "11752e": 212, "04198e": 212, "36702e": 212, "14839e": 212, "71613e": 212, "96373e": 212, "40456e": 212, "21369e": 212, "24236e": 212, "60956e": 212, "84350e": 212, "29686e": 212, "92365e": 212, "einigen": [212, 233, 416], "runden": [212, 222], "nachdenken": 212, "einigerma\u00dfen": 212, "zufrieden": 212, "load_dat": 212, "matrix_lin": 212, "vergeigt": 212, "matrix_el": 212, "unnecessari": [212, 378, 434, 464], "triangular": 212, "max": [212, 222, 240, 245, 258, 264, 267, 269, 271, 274, 279, 284, 302, 356, 357, 367, 448, 464, 620, 668, 925, 987, 1196], "row_no": 212, "__name__": [212, 248, 249, 262, 271, 277, 281, 302, 319, 323, 391, 398, 1088, 1090, 1093, 1097], "bildverarbeitung": 212, "ahnung": [212, 254], "beeeeeep": 213, "broad": [213, 543, 1198, 1241], "histori": [213, 249, 267, 293, 294, 296, 298, 344, 353, 354, 372, 443, 740, 744, 746, 782, 837, 839, 840, 846, 889, 918, 925, 977, 1191, 1197, 1203, 1244, 1250, 1256], "responsibl": [213, 1050, 1224], "sane": [213, 357, 409, 524, 925, 1199, 1224], "interfer": [213, 494, 534, 994], "paradigm": [213, 924, 932, 986, 994, 1253, 1255], "breakag": [213, 867], "nontrivi": [213, 221, 225, 400, 1114, 1264], "inappropri": [213, 421, 426, 547, 845], "conclus": [213, 221, 228, 885], "awkward": 213, "encourag": [213, 846], "hear": 213, "predat": [213, 850, 978, 1059], "doubt": [213, 258, 264, 274, 277, 281, 801, 1121], "schulungsbeschreibung": 214, "drehbuch": 214, "workshop": 214, "infolgedessen": 214, "virtuel": [214, 278, 1253], "konzipiert": [214, 224, 416], "add_subdirectori": [215, 508, 526, 530, 540, 1057, 1233], "group1": 215, "group2": 215, "montag": [216, 224, 225, 246, 250], "vorbereitung": [216, 416, 1238], "mitbringen": 216, "teilzunehmen": 216, "stattfinden": [216, 292], "folgt": 216, "bauanleitung": 216, "vorab": [216, 252], "ausprobieren": 216, "willkommen": 216, "schulungsbeschreibungen": 216, "dynam": [216, 224, 225, 258, 264, 274, 275, 277, 320, 380, 416, 479, 483, 492, 496, 501, 502, 537, 563, 600, 631, 640, 642, 649, 713, 715, 718, 719, 739, 744, 753, 782, 806, 823, 824, 825, 831, 837, 839, 840, 844, 849, 854, 857, 859, 864, 868, 878, 882, 884, 889, 891, 896, 902, 905, 908, 913, 925, 985, 1036, 1038, 1047, 1065, 1066, 1068, 1082, 1106, 1120, 1141, 1191, 1243, 1249], "raii": [216, 318, 642, 840], "scott": [216, 749, 755, 804], "meyer": [216, 552, 755, 804], "primer": [216, 1231], "sonstig": 216, "argh": [216, 465, 524, 736, 764, 1089, 1219, 1231], "kursanforderung": 216, "erg\u00e4nzend": 216, "lasst": 216, "testgetrieben": 216, "entwickeln": 216, "testcas": [216, 1225], "aufgab": [216, 222, 252, 1258], "hacken": 216, "diskutieren": 216, "niederschrift": 216, "geschehenen": 216, "geh\u00f6renden": 216, "privaten": 216, "respositori": [216, 371], "entwickelt": [216, 1247], "verl\u00e4uft": 216, "ansehen": 216, "clonen": 216, "wann": [216, 224], "erw\u00e4hnt": 216, "zugeh\u00f6rigen": 216, "entspricht": 216, "unbetr\u00e4chtlich": 216, "gcc5": 216, "laufen": 216, "darau": [216, 224], "entstanden": 216, "installationsanleitung": 216, "benutzung": [216, 398, 403], "zuerst": [216, 1259], "aggreg": [216, 375, 495, 506, 644, 899, 1209, 1231], "einzeln": 216, "klassen": [216, 222, 228, 399, 1240], "konstruktoren": [216, 240, 292, 399, 1240], "methoden": [216, 222, 234, 393, 1240], "referenzen": [216, 222, 233, 234, 292, 1240], "klass": [216, 245, 341], "\u00e4quival": 216, "\u00fcbergab": 216, "ausbauen": 216, "dynamisch": [216, 247, 1238, 1240], "dynmem": 216, "demonstrieren": 216, "alloziert": [216, 222, 239], "konstruktor": 216, "destruktor": 216, "fehler": [216, 222, 242, 398, 403], "vermeiden": [216, 222], "dtor": [216, 380, 542, 628, 713, 718, 750, 753, 787], "ausflug": [216, 232, 273], "capac": [216, 694], "\u00fcbung": [216, 233, 234], "handgestrickt": 216, "fallen": [216, 1239, 1240], "lustvol": 216, "erleiden": 216, "teufel": [216, 1239], "smart": [216, 292, 314, 353, 379, 399, 400, 401, 416, 504, 601, 710, 751, 752, 782, 802, 807, 815, 824, 837, 839, 840, 1241, 1242], "shared_ptr": [216, 251, 267, 293, 294, 296, 314, 316, 353, 354, 379, 381, 556, 620, 710, 742, 751, 782, 797, 803, 804, 807, 815, 837, 839, 840, 1241], "unique_ptr": [216, 251, 267, 293, 294, 296, 314, 316, 353, 354, 379, 381, 542, 549, 556, 582, 583, 620, 710, 750, 751, 782, 797, 800, 807, 815, 836, 837, 838, 839, 840, 1241], "exclus": [216, 242, 264, 281, 318, 446, 676, 812, 1015, 1050, 1100, 1136, 1140, 1152, 1212], "demonstriert": 216, "vorgriff": 216, "sortieren": [216, 1240], "employeerecord": 216, "parametrisierbarem": 216, "koordinatentyp": 216, "102ff": 216, "arten": [216, 1238], "containern": 216, "pointerarithmetik": 216, "iteratoren": [216, 279], "laufzeitverhalten": [216, 234], "verbesserungen": 216, "gegen\u00fcb": [216, 1238], "6ff": 216, "gegen\u00fcberstellung": 216, "sort_algorithm_reverse_lambda": 216, "vererbung": [216, 1240], "fallstudi": 216, "livegehackt": 216, "angebunden": 216, "komplex": [216, 269, 271, 277, 284, 309], "aufbauen": 216, "kund": 216, "vergleichbaren": 216, "anbinden": 216, "m\u00f6glichkeiten": 216, "wurden": [216, 224], "eigen": [216, 235, 1240, 1247], "kapitel": [216, 398, 403, 1238], "behandelt": 216, "vorbeigehen": 216, "dcmake_cxx_flag": 217, "dcmake_install_prefix": [217, 537], "libgtest": [217, 218, 314, 316, 1231, 1233], "claim": [217, 432, 660, 662, 663, 923, 1017], "simlp": 217, "concret": [217, 225, 251, 314, 379, 380, 524, 542, 549, 554, 569, 631, 716, 718, 814, 823, 1102, 1198], "find_packag": [217, 219, 376, 512, 514, 515, 1233], "add_execut": [217, 378, 507, 531, 534, 538, 585, 621, 624, 627, 630, 633, 636, 639, 733, 1054, 1061, 1066, 1067, 1230, 1233, 1235], "add_test": [217, 532, 621, 624, 636, 1230, 1233, 1235], "emphasi": [217, 1245, 1248], "ultim": [217, 248, 268, 652, 817, 994], "luke": [217, 277, 1233], "thetoplevel": 217, "findgtest": [217, 219, 517, 1233], "gtest_root": 217, "dgtest_root": 217, "paranoidli": 217, "bitrot": [218, 1233], "clutter": [218, 514, 528], "var": [218, 222, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 578, 887, 919, 950, 970, 976, 977, 980, 1065, 1068, 1080], "libgmock": [218, 314, 316], "gmock": [218, 1231], "dcmake_build_typ": [218, 535], "loudli": [218, 652, 890, 1002], "central": [218, 251, 340, 343, 418, 462, 542, 838, 1083, 1128, 1140, 1242], "appstream": [219, 357], "visualstudio": [219, 278, 417], "flatpakref": 219, "stone": 219, "snap": 219, "hate": [219, 646], "findpackagehandlestandardarg": [219, 512, 513], "gtest_librari": 219, "gtest_include_dir": 219, "gtest_main_librari": 219, "378": [219, 261, 264, 271, 309, 351, 357, 367, 1148], "_fphsa_failure_messag": [219, 513], "197": [219, 222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "find_package_handle_standard_arg": [219, 512, 513], "gessmann": 219, "cpoint_demo": 219, "cmakefil": [219, 534, 538, 540, 1066, 1067], "cmakeoutput": 219, "sigh": [219, 251, 601, 804, 1182], "jail": 219, "dict_extensions_suit": 220, "thing_suit": 220, "xsv": 220, "dict_extens": 220, "thursdai": [221, 225], "freedom": [221, 494, 719], "spontan": 221, "cost": 221, "agil": [221, 235, 504, 1264], "methodologi": [221, 371], "formul": [221, 317, 506, 759, 817, 1012, 1242], "diadact": [221, 1114], "anaconda": [221, 315, 357, 1114], "dictat": [221, 331, 347, 443, 482, 528, 1059, 1114, 1115, 1200, 1217, 1219, 1256], "volumin": [221, 1114], "nodepad": [221, 1114], "configurabilti": [221, 1217], "eclips": [221, 1114, 1207], "pydev": [221, 1114], "seemingli": [221, 225, 1065, 1114, 1191], "strang": [221, 993, 1114], "emac": [221, 241, 319, 370, 948, 970, 1065, 1114, 1217], "immutabilii": 221, "crisi": 221, "slept": 221, "lunch": 221, "squeez": 221, "Such": [221, 300, 1065, 1224], "takeawai": 221, "nonverb": 221, "antenna": 221, "Being": [221, 931, 972, 995, 1130, 1252], "stubborn": 221, "greybeard": 221, "therebi": [221, 371, 750, 980, 1062, 1109, 1148], "distutil": 221, "azur": 221, "devop": [221, 1264], "heavyweight": [221, 404, 806], "reach": [221, 269, 522, 721, 725, 726, 801, 825, 827, 846, 851, 918, 1021, 1135], "afternoon": [221, 344], "simplic": [221, 564, 918, 987, 1010, 1087], "paral": 221, "imposs": [221, 281, 490, 546, 770, 781, 885, 1041], "expand": [221, 277, 323, 464, 465, 524, 992, 1021, 1065, 1067], "entertain": [221, 225, 246, 249, 272, 298, 322, 344, 1191], "freelanc": 221, "raymond": [221, 224, 225, 228, 232, 233, 246, 249, 256, 272, 275, 298, 322, 344], "hetting": [221, 224, 225, 228, 232, 233, 246, 249, 256, 272, 275, 298, 322, 344], "bias": 221, "humor": [221, 993, 1135], "emphas": [221, 228, 250, 637, 842, 850, 867, 1219], "hehe": [221, 228], "dissect": [221, 225, 313, 373, 725, 787, 1094, 1191], "multiprocess": [221, 225, 275, 317, 318, 344, 1191, 1247, 1253], "truli": [221, 225, 1191], "chri": [221, 225, 246, 1191], "wilcox": [221, 225, 246, 1191], "frontier": [221, 225, 298, 322, 344, 1191], "whop": [221, 225, 298, 322, 344, 1081, 1191, 1198], "precis": [221, 225, 281, 298, 322, 344, 351, 367, 420, 438, 721, 817, 887, 1135, 1191], "covid": 221, "apart": [221, 281, 318, 457, 743, 987, 1092], "venv": [222, 248, 258, 264, 274, 275, 277, 289, 319, 357, 405, 406, 970, 1145, 1178, 1191, 1206, 1224, 1226, 1227, 1264], "ipykernel_launch": [222, 274, 277, 357], "57bd7d77": 222, "6e54": 222, "4dcd": 222, "b7a8": 222, "452f82f88569": 222, "hallo": [222, 232, 237, 240, 242, 245, 253, 261, 264, 271, 274, 277, 281, 284, 290, 302, 306, 309, 329, 341, 345, 351, 357, 393, 440, 652, 838, 918, 967, 996, 1009, 1012, 1018], "welt": [222, 232, 245, 393, 416], "gern": [222, 1247], "doku": [222, 232, 299], "aeh": 222, "__doc__": [222, 245, 248, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 323, 341, 345, 351, 357, 363, 391, 393, 1090, 1118, 1141], "interaktiven": 222, "modu": 222, "formatierung": [222, 232, 292], "\u00fcbernimmt": 222, "nachdem": [222, 232], "hamma": 222, "bieten": 222, "sech": [222, 232, 245, 277, 284, 309, 323], "zurueck": [222, 281, 319], "objektidentit\u00e4t": [222, 240], "0x7fe9d8578dc0": 222, "namen": [222, 232, 281, 341, 977, 1259], "referenzieren": 222, "wechselt": 222, "zeigt": [222, 232, 1247], "identit\u00e4t": 222, "0x7fe9c4454d90": 222, "listen": [222, 228, 233, 234, 238, 273, 292, 345, 398, 524, 871, 988, 1004, 1207, 1253, 1255], "ausdrucksstark": 222, "trotzdem": [222, 1247], "lesbar": [222, 271], "beid": [222, 237, 253, 357, 1259], "modifizieren": 222, "modifik": 222, "sichtbar": [222, 416], "gerechnet": 222, "18446744073709551615": [222, 232, 242, 245, 258, 261, 269, 271, 277, 281, 284, 287, 309, 341, 363, 393], "18446744073709551616": [222, 232, 242, 245, 258, 261, 269, 271, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 393], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [222, 232, 242, 245, 258, 281, 284, 302, 329, 357], "typeerror": [222, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 341, 345, 351, 357, 363, 392, 1088, 1089, 1102, 1109, 1132, 1141, 1212, 1213], "gel\u00f6scht": 222, "retten": 222, "uff": 222, "140641996429568": 222, "\u00e4ndern": [222, 234, 1259], "erzeugt": [222, 232], "operanden": 222, "unver\u00e4ndert": 222, "new_l": [222, 277, 1122], "140641996429632": 222, "65": [222, 227, 232, 237, 239, 242, 245, 248, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 306, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 390, 393, 732, 1053, 1195, 1196], "hurra": [222, 239, 302], "killerfeatur": 222, "abcabc": [222, 261], "sequentiel": [222, 232, 271, 276, 1240], "suche": 222, "Suche": [222, 234, 245, 253, 271], "umst\u00e4ndlich": [222, 232], "andrea": [222, 223, 281, 763, 770], "pfeifer": 222, "gefundener_us": 222, "glauben": 222, "klammern": 222, "begrenz": 222, "interpretiert": 222, "pr\u00e4zedenz": [222, 234, 242], "overriden": 222, "ausdruck": 222, "implizit": [222, 242, 319, 1238], "evaluierungsreihenfolg": 222, "erzwingen": [222, 234, 242], "9223372036854775808": 222, "einstellig": 222, "schreibt": [222, 977, 1259], "datenmengen": 222, "abzulegen": 222, "sucht": 222, "vorstellungsvermoegen": 222, "milliarden": 222, "sebastian": 222, "hugo": [222, 264], "machma": 222, "behandeln": 222, "nichtvorhandensein": 222, "ausnahm": 222, "regel": 222, "mim": 222, "victor": 222, "festzustellen": 222, "evaluiert": 222, "aufgerufen": 222, "operand": [222, 239, 258, 261, 287, 441, 442, 443, 449, 659, 660, 662, 663, 759, 792, 1109, 1123], "bereit": [222, 233, 1240], "gesamtergebni": 222, "jaja": [222, 277], "rechten": 222, "sparen": 222, "potschert": [222, 234, 237, 240, 264, 271, 284, 351, 363], "berechnung": [222, 271], "summ": [222, 245, 271, 277, 281, 284, 309, 334, 357, 363, 367], "5050": [222, 242, 264, 277, 284, 309, 351, 357, 363, 367], "einzig": [222, 570, 584], "iteriert": [222, 232], "bildet": [222, 277], "primitiveren": 222, "intelligenteren": 222, "0x7fe9c43c3c90": 222, "letzt": [222, 237, 282], "schleif": [222, 233, 234, 238], "jede": [222, 398, 403, 1259], "selb": [222, 232], "k\u00fcrzer": 222, "vergleicht": 222, "objektidentit\u00e4ten": 222, "objektinhalt": 222, "vergleichen": [222, 242], "modifiziert": 222, "kopieren": [222, 398, 403, 1240], "vermeintlich": 222, "modifiktionen": 222, "sch\u00fctzen": 222, "l3": [222, 239, 271, 277, 287, 299, 309, 319, 329, 351, 564], "kopi": [222, 271], "klar": [222, 232], "geschachtelt": [222, 233, 234], "gleicher": 222, "referenziert": [222, 232], "erachtet": 222, "ersparst": 222, "kopien": 222, "parametern": [222, 245], "beliebigen": [222, 977], "definieren": 222, "unterst\u00fctzen": 222, "ihn": [222, 281], "\u00e4pfel": 222, "birnen": 222, "verglichen": 222, "hingegen": [222, 232], "php": [222, 252, 268, 804], "falschem": 222, "uebergeben": 222, "vergleich": [222, 245, 253, 282, 292], "aepfeln": 222, "140641996137808": 222, "add_to_list": 222, "__defaults__": [222, 271, 281, 302, 323, 1132], "meine_list": [222, 232], "defaultwert": 222, "benutzt": 222, "allerhand": 222, "seiteneffekten": 222, "aufpassen": 222, "ewig": 222, "existierend": 222, "unf\u00e4ll": 222, "wechselwirkungen": 222, "eventuellen": 222, "globalen": [222, 232], "156": [222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "erzwingt": 222, "158": [222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 306, 319, 323, 329, 341, 345, 351, 357, 363, 367], "160": [222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 299, 302, 313, 319, 323, 329, 341, 345, 351, 357, 363, 367, 517, 523, 533, 840], "gesucht": 222, "genauer": 222, "n\u00e4chst\u00e4u\u00dferen": 222, "162": [222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "nirgend": 222, "163": [222, 232, 239, 255, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "gibtsnetglob": 222, "gibtsnet": 222, "164": [222, 232, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "nameerror": [222, 237, 271, 277, 302, 323, 329, 357, 363, 1089, 1131], "aufgabenstellung": 222, "kandidat": 222, "unsportlich": 222, "zweiten": [222, 224, 329], "unnachhaltig": 222, "dritten": [222, 329], "gelegenheit": 222, "gab": [222, 224], "erz\u00e4hlen": [222, 1238], "165": [222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1148], "seq": [222, 240, 302, 357, 367, 877, 1053, 1092], "fromkei": [222, 268, 273, 285, 357], "166": [222, 232, 239, 261, 264, 269, 271, 277, 281, 284, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "167": [222, 232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "xxx": [222, 239, 261, 269, 271, 277, 287, 309, 341, 345, 351, 357, 363, 392, 394, 473, 569], "kksvjhbsk": 222, "sgkysdudsvvc": 222, "dict_kei": [222, 290, 319, 1138], "diesmal": 222, "169": [222, 232, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "170": [222, 239, 248, 255, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "irgendein": [222, 254], "171": [222, 239, 241, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 395], "sonst": [222, 232, 269, 271, 284], "kategori": 222, "number_str": 222, "173": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 980], "ihm": [222, 224, 233], "174": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 970], "176": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 323, 329, 341, 345, 351, 357, 363, 367], "177": [222, 239, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "178": [222, 239, 248, 261, 264, 269, 271, 277, 281, 284, 290, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "179": [222, 229, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "180": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 506, 871], "181": [222, 239, 261, 264, 269, 271, 277, 281, 284, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 506, 1213], "heisst": [222, 234, 238, 239, 1239], "sequenz": 222, "kopiert": 222, "unterschi": [222, 239, 245, 269], "vermutlich": 222, "sobald": [222, 224], "183": [222, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "\u00fcbergeben": 222, "184": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "it1": 222, "it2": 222, "multipli": [222, 249, 262, 281, 323, 749], "n2": [222, 281], "combined_iter": 222, "186": [222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "schlecht": 222, "simplen": 222, "transformationen": 222, "generieren": 222, "quadratzahlen": [222, 271], "187": [222, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "quadrat": 222, "naeherung": 222, "performant": 222, "gen_squar": 222, "189": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 319, 323, 329, 341, 345, 357, 363, 367], "190": [222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "syntaktisch": [222, 245], "191": [222, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 290, 299, 302, 319, 323, 329, 341, 345, 357, 363, 367], "genexpr": [222, 248, 341, 351, 357], "0x7fe9c43f2900": 222, "193": [222, 239, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "194": [222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367], "195": [222, 239, 261, 264, 269, 271, 274, 277, 281, 284, 290, 302, 323, 329, 341, 345, 351, 357, 363, 367], "indent": [222, 237, 255, 262, 268, 277, 278, 452, 1112, 1115, 1125, 1216], "196": [222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "userlist": 222, "nochwa": [222, 271, 309, 367], "dropdown": 222, "dropdownlist": 222, "fehleranf\u00e4llig": 222, "198": [222, 239, 248, 261, 264, 269, 271, 274, 277, 281, 284, 290, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "202": [222, 239, 248, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 323, 329, 341, 345, 357, 363, 367, 506, 549], "203": [222, 239, 248, 250, 261, 264, 269, 271, 274, 277, 281, 284, 299, 302, 323, 329, 341, 345, 351, 357, 363, 367, 1065], "205": [222, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "206": [222, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 323, 329, 341, 345, 351, 357, 363, 367], "207": [222, 248, 261, 264, 269, 271, 277, 281, 284, 287, 302, 323, 329, 345, 351, 357, 363, 367], "208": [222, 261, 264, 269, 271, 277, 281, 284, 287, 302, 323, 329, 341, 345, 351, 357, 363, 367], "209": [222, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 323, 329, 341, 345, 351, 357, 363, 367], "user_a": 222, "user_b": 222, "n\u00e4herung": 222, "nackten": [222, 1238], "210": [222, 248, 261, 264, 269, 271, 277, 281, 284, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367], "hantiert": [222, 1239], "anderem": [222, 1247], "211": [222, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 345, 351, 357, 363, 367], "reviewten": 222, "funktionsaufruf": [222, 284], "sonder": 222, "stackoverflowprogrammierung": 222, "entgegenwirken": 222, "ausholen": 222, "212": [222, 248, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 323, 329, 341, 351, 357, 363, 367], "veloc": [222, 248, 394, 1132], "length_m": [222, 248, 394, 1132], "time_": [222, 248, 394, 1132], "213": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 323, 329, 351, 357, 363, 367], "spiel": 222, "214": [222, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 323, 329, 341, 351, 357, 363, 367], "liegen": 222, "positionel": 222, "215": [222, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 323, 329, 351, 357, 363, 367], "param": [222, 232, 245, 262, 290, 323, 522, 755, 804, 805, 994, 1052], "216": [222, 248, 261, 264, 269, 271, 277, 281, 284, 299, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367], "217": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "218": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "219": [222, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 351, 357, 363, 367], "entpacken": 222, "positionellen": 222, "221": [222, 248, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "kwarg": [222, 248, 275, 277, 281, 302, 323, 1087, 1112, 1260], "explizi": 222, "rauskletzeln": 222, "223": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367, 1204], "celebrate_another_birthdai": 222, "224": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 323, 329, 345, 351, 357, 363, 367], "227": [222, 261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 351, 357, 363, 367], "228": [222, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 323, 329, 341, 351, 357, 363, 367], "zeiterfassung": 223, "__pycache__": [223, 249, 262], "supp": 223, "cpython": [223, 248, 258, 264, 274, 277], "pyc": 223, "dienstag": 224, "fand": [224, 416], "offen": [224, 416], "vorwissen": [224, 1240], "konkreten": [224, 416], "aufgabenstellungen": 224, "dienstgeb": 224, "mitgebracht": 224, "quickstart": [224, 1249], "wenngleich": [224, 416], "un\u00fcblichen": 224, "reihenfolg": 224, "verbrachten": 224, "firmenprojekt": 224, "entspringenden": 224, "festgehalten": 224, "empfehlungen": 224, "weitergehen": 224, "k\u00f6nnte": [224, 1259], "idiomat": [224, 225, 228, 246, 249, 256, 272, 275, 298, 322, 1191], "lieblingsphras": 224, "bringt": [224, 1238], "forgiv": [224, 225, 322, 1191], "eafp": [224, 225, 322, 1191], "begriff": [224, 238], "viertelstund": 224, "regex": [224, 237, 262, 264, 289, 290, 299, 322, 329, 357, 1134, 1191], "unumg\u00e4nglich": 224, "textuel": 224, "analysieren": 224, "hero": [224, 225, 246, 249, 272, 298, 322, 344, 1191], "unterhaltsamen": 224, "keynot": [224, 225, 246, 249, 272, 275, 298, 322, 344, 1191], "konferenz": 224, "pydata": [224, 225, 246, 249, 272, 298, 322, 344, 1191], "chicago": [224, 225, 246, 249, 272, 298, 322, 344, 1191], "witzig": 224, "selten": 224, "l\u00e4nge": 224, "ganzen": [224, 233], "abend": 224, "totalschaden": 224, "\u00fcbertragen": 224, "jedem": 224, "angemeldet": 224, "experienc": [225, 314, 316, 343, 416, 1118, 1249], "machinelearn": 225, "fuzzi": [225, 264], "accompani": [225, 314, 316, 1194, 1249], "improvis": 225, "shall": 225, "060": [225, 406, 742], "jango": 225, "rush": 225, "strong": [225, 275, 442, 1198, 1200, 1245, 1248, 1250], "claus": [225, 228, 258, 264, 274, 279, 301, 764, 1092, 1125, 1128], "whet": [225, 308], "appetit": [225, 308], "__dict__": [225, 245, 248, 249, 261, 262, 271, 274, 277, 281, 290, 302, 319, 323, 341, 363, 1103, 1109], "con": [225, 823, 974, 1083], "fiction": 225, "get_temperature_celsiu": 225, "competitor": 225, "eana": 225, "get_temperature_fahrenheit": 225, "eanaadapt": 225, "unserthermomet": 225, "revisit": [225, 267, 275, 298, 316, 340, 676], "shift": [225, 266, 482, 494, 646, 694, 994, 1109], "visitor": [225, 828, 830, 831], "gang": [225, 1242], "idiom": [225, 643, 780], "classic": [225, 380, 481, 552, 643, 824, 839, 840, 879, 1242], "travers": [225, 495, 788, 800, 1089, 1094, 1130], "convolut": 225, "__call__": [225, 271, 281, 302, 323, 329, 1088], "__str__": [225, 248, 249, 262, 271, 274, 277, 281, 299, 302, 323, 340, 341, 363, 409, 1089], "__repr__": [225, 271, 274, 277, 281, 299, 302, 323, 341, 363], "poor": [225, 267, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840, 877, 986, 1016, 1063], "deleg": [225, 354, 379, 652, 782, 839, 840, 1241], "deck": [225, 250, 416, 620], "sensordata": 225, "sensordata_test": 225, "historydata": 225, "slowli": [225, 637, 742, 869, 986], "csvreport": 225, "csv2sqlite3": 225, "frontend": [225, 653, 1065, 1084, 1220], "flaskerl": 225, "reiter": [225, 246, 265, 267, 272, 275, 406, 654, 1191], "phrase": [225, 228, 246, 269, 271, 272, 275, 277, 302, 914, 915, 1107, 1191], "went": [225, 371, 1260], "impress": [225, 416, 480, 519, 1244], "brought": [225, 380, 494, 1098], "cloth": 225, "extraordinari": 225, "mondai": [226, 228, 230, 231, 256, 305, 311, 314, 316, 370], "preliminari": [226, 228, 229, 230, 231], "homogen": [226, 416], "versu": [226, 228, 230], "immut": [226, 228, 230, 232, 233, 240, 247, 249, 260, 261, 262, 264, 270, 276, 279, 285, 291, 300, 308, 310, 311, 324, 341, 345, 352, 358, 393, 464, 1120, 1121, 1122, 1126, 1261], "datastructur": [226, 250, 268, 1126], "exercise4": 226, "summari": [226, 549, 652, 801, 1224], "uh2ebfw8oym": [226, 230], "f26namfjggw": 226, "5qqq3yzbkp8": 226, "ugharkscop9uthgcoaec": 226, "pairwis": [227, 261, 658], "vale": 227, "bewar": [227, 443, 514, 993, 1063, 1196, 1198], "simplest": [227, 289, 534, 544, 676, 683, 791, 812, 892, 923, 978, 1044, 1078, 1116, 1121, 1224, 1232], "cheaper": [227, 494, 660, 662, 663, 742], "memorywis": 227, "johann": 227, "syntact": [227, 248, 451, 614, 654, 742, 794], "sugar": [227, 742, 794], "retval": [227, 490, 699, 1034], "prio": [227, 1051, 1052, 1058], "dlc": 227, "msg1": 227, "readabl": [227, 271, 281, 315, 430, 461, 465, 485, 486, 487, 494, 504, 506, 585, 698, 719, 735, 743, 746, 781, 792, 794, 800, 805, 806, 923, 933, 939, 944, 948, 970, 996, 1065, 1092, 1111, 1132, 1140, 1142, 1162, 1260], "0x7f41f5ff26a0": 227, "msglist": 227, "0x7f41f5ff4160": 227, "0x7f41f5ff41c0": 227, "291130": 227, "now_timestamp": 227, "1603884859": 227, "3412576": 227, "fromtimestamp": 227, "341258": 227, "372": [227, 264, 271, 309, 357, 367], "45259": 227, "microsecond": [227, 485, 925], "programmverweis": 228, "xy": [228, 271, 274, 309, 661, 1130], "zab": 228, "eventcodefil": 228, "definedlisaev": 228, "event_id": 228, "bla": [228, 351, 357], "blubb": 228, "verbessert": 228, "stringformatierung": 228, "ctype": 228, "headerfil": [228, 977], "lst": [228, 264, 930], "inclus": [228, 242, 269, 281, 464, 676, 1152, 1212], "callbackfunc": 228, "datetim": [228, 249, 255, 256, 257, 262, 310, 313, 350, 351, 1148], "observ": [228, 297, 315, 372, 383, 541, 548, 562, 565, 576, 590, 642, 840, 1095, 1096, 1203, 1242], "longish": 228, "resurrect": [228, 534, 948], "outputsequ": 228, "resist": 228, "uncondition": [228, 890, 1089], "suitabl": [228, 277, 323, 818, 860, 986, 1037, 1102, 1111], "analysi": [228, 372, 494, 824, 1193, 1196, 1209], "cp1252": [228, 1185, 1186, 1188], "csvlog": 228, "csv_reader": 228, "recv": [228, 229, 989], "tuesdai": [229, 311, 326], "246": [229, 261, 264, 269, 271, 274, 277, 284, 302, 319, 323, 329, 351, 357, 363, 367, 1204], "corpor": [229, 302], "commandin": [229, 231], "comress": [229, 231], "diagnos": [229, 231, 399, 400, 1245, 1247], "netstat": [229, 231, 304, 325, 326, 369, 1207, 1245, 1247, 1250], "netcat": [229, 231, 304, 325, 326, 369, 1250], "subshel": [229, 231, 241], "telnetd": 229, "insecur": [229, 1002], "proto": 229, "foreign": [229, 305, 465], "34490": 229, "56062": 229, "sshd": [229, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 919, 924, 926, 980, 996, 1006], "systemctl": [229, 1080, 1207], "systemd1": 229, "unprivileg": 229, "putti": [229, 241, 395], "puttygen": 229, "id_rsa": [229, 1002], "authorized_kei": [229, 1002], "trivia": 229, "hoorai": [229, 274, 287, 309, 363, 1125], "idiot": 229, "blinker": 229, "briana": 229, "mac": [229, 246, 262, 948, 1116, 1191, 1227], "wakeup": [230, 267, 344, 363, 409, 413, 814, 840, 883, 985, 994, 1013, 1026, 1038, 1048, 1050, 1254], "todo": [230, 265, 293, 294, 411, 412, 600, 742, 824, 841], "patrick": 230, "1996": [230, 264], "wagna": 230, "gernot": 230, "1982": [230, 264], "birthplac": 230, "txt2json": 230, "schaefer": [230, 233, 235, 241, 243], "traine": 231, "equip": [231, 305, 406, 986, 1247], "deppert": [232, 245, 393], "sidestep": 232, "builtin_function_or_method": [232, 302, 329, 351], "sozusagen": 232, "genauso": 232, "aufrufen": [232, 977], "zaehler": 232, "initialwert": 232, "zaehlen": 232, "naechsten": 232, "schleifendurchlauf": 232, "locker": [232, 885], "mein_integ": 232, "sch\u00fctzt": 232, "zahlen": [232, 233, 242, 1238], "passen": [232, 299], "gehandhabt": 232, "1267650600228229401496703205376": [232, 258, 261, 269, 281, 287, 309], "hoch": 232, "rechnen": [232, 398, 403], "tut": [232, 341, 393, 1238], "ausschliesslich": 232, "ganzzahldivis": 232, "ganzzahligen": 232, "resultat": 232, "gleichen": 232, "vorrang": 232, "ghi": [232, 271, 357, 363], "multilin": [232, 242, 257, 260, 264, 269, 277, 281, 341, 352, 398, 465, 1090, 1118], "viert": 232, "nwelt": 232, "nwie": 232, "linefe": [232, 241, 262, 269, 426, 427, 518, 1134, 1140, 1171, 1216], "speziel": [232, 233, 292, 1258], "bedeutung": [232, 1240], "unangetastet": 232, "glump": 232, "nebenlaeufigkeitsdemo": 232, "ebenlaeufigkeitsdemo": 232, "l\u00f6sung": [232, 245, 254, 416, 988], "formatierungsm\u00f6glichkeit": 232, "var1": [232, 242, 1156], "var2": [232, 242, 1156], "pfx_var1": 232, "pfx_var2": 232, "ausgab": [232, 1238], "notwendig": 232, "abzubrechen": 232, "ignorieren": [232, 233, 239], "gefunden": [232, 302, 977], "value1": [232, 524, 1151], "501": [232, 264, 357, 367, 1151], "value2": [232, 524, 1151], "799": [232, 261, 264, 1148, 1151], "value3": [232, 1151], "sprachen": [232, 233, 1238], "neg": [232, 277, 281, 351, 367, 443, 485, 490, 721, 865, 980, 1231], "indiz": 232, "erscheinen": 232, "komisch": 232, "bequem": 232, "mapping_t": 232, "f\u00fcnf": 232, "sieben": [232, 245, 271, 699], "neun": [232, 357, 367], "explicit": [232, 251, 258, 262, 271, 279, 281, 380, 440, 449, 477, 490, 494, 534, 569, 570, 583, 584, 620, 646, 648, 649, 672, 698, 742, 743, 752, 759, 764, 772, 779, 784, 799, 802, 858, 1015, 1029, 1063, 1084, 1085, 1115, 1118, 1121, 1199, 1212, 1251], "implicit": [232, 258, 271, 281, 430, 436, 440, 625, 741, 743, 759, 948, 1018, 1107, 1121, 1251], "primzahlen": 232, "checken": 232, "primzahl": [232, 233], "checkenden": 232, "zahl": [232, 239, 245, 270, 271, 274, 284, 393], "probier": 232, "gach": [232, 271], "teiler": 232, "teiler_kandidaten": 232, "prim": 232, "gleichema\u00dfen": 232, "vollst\u00e4ndigkeit": 232, "halber": 232, "startend": [232, 271], "schrittweit": 232, "0x7f24f2ac0e50": 232, "ablegen": 232, "0x7f24f2ac0e70": 232, "arschlangsam": 232, "num_comparison": 232, "datenstruktur": [232, 253], "einf\u00fcgen": 232, "l\u00f6schen": [232, 238, 242, 398], "optimiert": [232, 245], "perfekt": 232, "einitreten": 232, "himmi": 232, "list_reverseiter": [232, 261, 284, 309], "0x7f24ec31d190": 232, "bricht": 232, "beinhart": 232, "liefert": 232, "lieber": 232, "zweit": [232, 245, 271, 302, 341, 357, 393], "po": [232, 271, 277, 281, 302, 307, 319, 323, 345, 351, 367, 506, 602, 694, 721], "wirklichkeit": 232, "ordin\u00e4r": 232, "alternativen": 232, "hang": [232, 644, 890, 913], "fruit": 232, "gemma": 232, "divisor_candid": [232, 367], "161": [232, 239, 261, 264, 269, 271, 274, 277, 281, 284, 287, 299, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "wegen": 232, "dogma": 232, "zugewiesen": 232, "meine_vari": 232, "eine_vari": [232, 309, 319, 351], "angelegt": 232, "streng": 232, "obigem": 232, "dazusagen": 232, "noch_eine_globale_vari": 232, "increment_diese_vari": 232, "mittwoch": [233, 235, 243], "offiziel": [233, 235, 243, 246, 249, 250, 252, 268, 280], "leitfaden": 233, "kommentar": [233, 234, 245, 309, 393], "platziert": [233, 253], "themenreihenfolg": [233, 252], "skriptum": [233, 252], "beispielen": [233, 252], "\u00fcbernommen": [233, 252], "allgemeinen": [233, 237], "dadurch": [233, 416, 1238], "verwirrend": 233, "weswegen": 233, "kurssprach": [233, 243, 252, 268, 280], "spezifisch": [233, 243, 252, 268, 280], "unterrichtet": [233, 243, 252, 268, 280], "hackereien": 233, "gleicherma\u00dfen": 233, "sogenannten": 233, "\u00fcbersicht": [233, 243, 246, 256, 259, 262], "semantik": [233, 234], "sprach": [233, 234, 1238, 1239, 1240, 1247, 1259], "standarddatentypen": [233, 234], "literal": [233, 234, 292], "python2": [233, 271], "endg\u00fcltig": 233, "rausl\u00f6schen": 233, "konstanten": [233, 234], "typen": [233, 239], "operatoren": [233, 234, 977, 1240], "angeschnitten": 233, "vertiefung": [233, 249], "nocheinm": [233, 416], "ausdr\u00fcck": [233, 234, 292], "operatorrangfolgen": [233, 234], "grundlegenden": [233, 399], "sprachelementen": 233, "rede": 233, "syntaxdiagramm": 233, "gespritzt": 233, "gesamt": 233, "sperrig": 233, "n\u00fctzt": 233, "menschlich": 233, "abzubilden": 233, "tabel": 233, "anweisungen": [233, 234], "gro\u00dfen": 233, "fisch": 233, "instruktiv": 233, "bedingungen": [233, 234], "verzweigungen": [233, 234], "bedingt": [233, 234, 1238], "anweisung": [233, 234], "formulierungen": 233, "mehrfach": [233, 234], "fallauswahl": [233, 234], "benutzereingaben": 233, "\u00fcberpr\u00fcfen": 233, "schleifenkonstrukt": 233, "weitgehend": 233, "unserem": 233, "vehikel": 233, "hilfreich": 233, "klarstellung": 233, "fu\u00dfgesteuert": [233, 234], "z\u00e4hlergesteuert": [233, 234], "auslassen": 233, "kopfgesteuert": [233, 234], "gewinnt": 233, "konsol": 233, "anzeigen": 233, "voraussetzung": 233, "ausblick": 233, "schnell\u00fcbersicht": [233, 234], "sprunganweisungen": [233, 234], "endlosschleifen": [233, 234], "naja": 233, "mager": 233, "ersatz": 233, "ausgelassen": 233, "eindimensional": [233, 234], "gefolgt": [233, 271], "zeichenketten": [233, 234], "tupel": [233, 234, 237], "mengen": [233, 234, 244], "besonder": [233, 234], "stapel": [233, 234], "schlangen": [233, 234], "tempo": 233, "schauma": [233, 239], "fallt": 233, "gscheit": [233, 240, 351], "gemeinsam": 233, "dr\u00fcber": 233, "vielzahl": 233, "l\u00f6sungsm\u00f6glichkeiten": 233, "eingegangen": 233, "pythonischst": 233, "bestritten": 233, "unterprogramm": [233, 234], "parameter\u00fcbergab": [233, 234], "r\u00fcckgabewert": [233, 234], "inner": [233, 234, 254, 363, 506, 1088], "standardbibliotheken": [233, 234], "funktionalit\u00e4ten": [233, 234], "berechnet": [233, 269, 277], "pep": [233, 243, 315, 317, 318, 339, 340], "hacker": [233, 243, 1249], "schier": [233, 243], "unendlich": [233, 242, 243], "anzahl": [233, 243], "stil": [233, 243], "auswahl": [233, 243], "satz": 233, "gepr\u00e4gt": 233, "konferenzen": 233, "definitiv": 233, "sehenswert": 233, "anf\u00e4nger": 233, "hochinteress": 233, "sprachelement": 234, "einr\u00fcckung": [234, 242], "elementar": 234, "beliebig": [234, 269, 1247], "gro\u00df": 234, "vergleichsoperatoren": 234, "strichrechnung": 234, "modulo": [234, 245, 258, 264, 269, 277, 393, 441, 1109, 1121], "un\u00e4rer": 234, "negat": [234, 258, 281, 978, 1109, 1121, 1139], "konvertierungen": [234, 1238], "pr\u00e4zendenzregeln": 234, "vertauschen": [234, 245, 393], "kontrollstrukturen": [234, 270, 1238], "verzweigung": 234, "schleifen": [234, 292], "versuch": [234, 246, 357, 363], "hybrid": [234, 715], "supergscheit": 234, "prozeduren": 234, "funktionen": [234, 238, 292, 399, 1238, 1240, 1258], "funktionspoint": 234, "funktionsobjekt": 234, "primzahlenbeispiel": 234, "laufzeitfehl": 234, "lokal": [234, 245, 291, 292], "zuweisen": 234, "fehlerfal": 234, "anschliessend": 235, "interaktiv": 235, "uebungen": 235, "idealerweis": [235, 309], "ueblichen": 235, "negoti": 236, "deiniti": [236, 865, 1249], "unload": [236, 867, 881, 883, 1249], "synchronizt": 236, "spinlock": [236, 840, 864, 879, 885, 889, 891, 895, 896, 902, 905, 906, 908, 985, 1051, 1249], "rcu": 236, "halv": 236, "softirq": 236, "tasklet": [236, 885], "irss": 236, "kmalloc": [236, 840, 849, 854, 857, 858, 859, 864, 868, 877, 878, 882, 884, 891, 896, 899, 902, 905, 908, 985], "dma": [236, 840, 864, 882, 884, 927, 985, 1010, 1011, 1012, 1249], "coher": [236, 858], "20201125": [237, 239], "unbekannten": 237, "lookup_t": [237, 240, 393], "12345": [237, 269, 281, 309, 357, 1225], "noch_eine_list": 237, "gesamte_list": 237, "vorl\u00e4ufig": 237, "letz": 237, "indented_text": 237, "nebenbei": [237, 239, 393], "eine_zum_sterben_verurteilte_vari": 237, "ein_set": 237, "sequenzen": 237, "grottenlangsam": 237, "subscript": [237, 271, 341, 363, 470, 676, 697, 701, 1212], "multiple_return_valu": 237, "xyz": [237, 239, 245, 264, 271, 302], "mein_formatierter_str": 237, "my_rang": [237, 277, 323, 329, 351], "retlist": 237, "zeichenkett": 237, "funktionieren": [237, 1240], "my_list": [237, 248, 290], "airms_eth": 237, "simplizistisch": 237, "bl\u00f6d": 237, "i_oder_v": 237, "iv": 237, "rms_eth": 237, "vorcompilieren": 237, "acirms_eth": 237, "my_regex": 237, "zeilennumm": 237, "dazuhaben": 237, "meine_zu_sendenden_daten": 237, "345": [237, 258, 264, 277, 309, 341, 351, 357, 363, 367], "234": [237, 261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393], "meine_zu_sendenden_daten_in_string_form": 237, "ueblicherweis": 237, "verschickt": 237, "empfangen": [237, 252], "geschrieben": 237, "empfaeng": 237, "empfangenen": 237, "natuerlich": 237, "zurueckkonvertieren": 237, "meine_empfangenen_daten_python_form": 237, "gegangen": [237, 290], "wurscht": [237, 277, 351, 977], "returnwerten": 238, "containerdatentypen": 238, "untypisiert": 238, "zeilen": [239, 281], "neiner": 239, "nnoch": [239, 242, 258], "nund": [239, 258], "nb": 239, "stoppt": 239, "newlin": [239, 241, 254, 277, 302, 319, 389, 419, 426, 439, 1118, 1134], "ndrin": 239, "drin": [239, 240, 245, 281, 309, 319, 357, 393, 398], "zuviel": [239, 1240], "mischt": 239, "unsupport": [239, 261, 287, 1109], "140546731085392": 239, "0x7fd395fb0e50": 239, "0x7fd3900395b0": 239, "new_t": [239, 1122], "0x7fd390052800": 239, "667": [239, 261, 264, 284, 290, 637], "2923750584022716461": 239, "529344067295497451": 239, "unhash": [239, 299, 309, 323, 351, 363], "fuenf": [239, 261, 271, 299, 309, 323, 341, 357, 367, 393], "verschluckt": 239, "6000000": 239, "elementen": [239, 253], "nonetyp": [239, 249, 263, 264, 319, 329, 341, 357, 363], "_io": [239, 258, 261, 264, 274, 277, 309, 323, 357, 390, 889], "textiowrapp": [239, 258, 261, 264, 274, 277, 309, 323, 357, 390, 1087], "oi": 239, "456": [239, 240, 264, 271, 309, 357, 439], "hansi": [239, 277, 281, 284], "linspac": [239, 345], "11111111": 239, "22222222": 239, "33333333": 239, "44444444": 239, "55555556": 239, "66666667": 239, "77777778": 239, "88888889": 239, "sin": 239, "8961922": 239, "79522006": 239, "19056796": 239, "96431712": 239, "66510151": 239, "37415123": 239, "99709789": 239, "51060568": 239, "54402111": 239, "plot": [239, 258, 287, 290, 341, 345, 351, 363, 1086, 1145, 1197, 1198], "line2d": [239, 287, 290, 341, 345, 351, 363], "0x7fd35cd3ef40": 239, "splev": 239, "splrep": 239, "spline": 239, "represent": [239, 258, 277, 367, 788, 897, 993, 994], "spl": 239, "x2": [239, 281], "y2": 239, "0x7fd341a486d0": 239, "speicher": [240, 1238, 1247], "sch\u00fctze": 240, "gemischten": 240, "operationen": 240, "interpol": [240, 281, 518, 519, 524, 1196], "lag": 240, "gib": [240, 319], "depp": [240, 269], "ret_l": 240, "uniq_l": 240, "read_excel": [240, 1196], "invit": [241, 715, 1245], "effici": [241, 286, 340, 454, 493, 495, 497, 677, 681, 691, 694, 797, 932, 980, 982, 1032, 1094, 1198, 1209, 1212, 1249], "expans": [241, 518, 526, 977, 978, 1244], "ecdsa": [241, 395], "fingerprint": [241, 395, 997, 1050], "sha256": [241, 395, 520, 997], "in22o4vcd400x0bb4flcb5": [241, 395], "vqnrvkvoirgfqq6mapo": [241, 395], "perman": [241, 395], "sat": [241, 395], "straight": [241, 764, 1213], "startung": 241, "standpoint": 241, "suboptim": [241, 290], "pwned": 241, "hidden": [241, 555, 750, 860, 1065], "clumsi": [241, 267, 268, 308, 311, 532, 544, 644, 652, 659, 672, 699, 742, 805, 1086, 1087, 1103, 1104, 1212, 1241], "clumsier": 241, "dumpbin": 241, "hmoe": 241, "frcoll": 241, "bunch": [241, 806, 914, 1078, 1102], "oom": [241, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1093], "killer": [241, 261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1127], "amoc": 241, "snapshot": [241, 784, 817, 926, 1078], "tinkernut": 241, "raspberi": 241, "tunnel": [241, 307, 996, 1004, 1015], "centric": [241, 1249], "cygwin": [241, 294, 296, 314, 927], "assort": 241, "nano": 241, "univers": [241, 316, 601, 1015, 1115, 1249], "scripe": 241, "wichtig": [242, 292, 398, 403, 1259], "kleiner": [242, 976], "decim": [242, 277, 281, 323, 351, 367, 384, 420, 506, 1121, 1135], "hexadecim": [242, 281, 439, 994, 1121, 1134, 1135], "0x1234": [242, 1121], "4660": [242, 264, 1121], "0b100110": [242, 271, 1121], "behaviour": [242, 250, 371, 873, 1021, 1140], "restklassen": 242, "klammerung": [242, 977], "6666666666666665": 242, "6665": 242, "6667": 242, "ieee": 242, "floatingpoint": [242, 441, 442, 585, 887, 1168], "representaion": 242, "4294967295": [242, 261, 269, 277], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [242, 261, 277, 309, 351], "eingebettet": 242, "eingenbettet": 242, "mississippi": [242, 245, 254, 258, 261, 269, 271, 277, 281, 287, 290, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367, 519, 721], "is_integ": [242, 299, 363], "rot": [242, 253], "gruen": 242, "blau": [242, 253], "schwarz": [242, 253], "bestimmen": 242, "6712": [242, 264], "hen": 243, "vehikelkauf": 243, "einleitung": 244, "mathematisch": [244, 302], "voellig": 245, "wohl": [245, 329, 1238, 1259], "selbsterklaerend": 245, "printet": 245, "builtin": [245, 251, 258, 264, 265, 274, 277, 281, 302, 323, 340, 341, 351, 357, 367, 948, 1090, 1254], "accur": [245, 277, 281, 302, 323, 499], "__weakref__": [245, 261, 271, 274, 277, 281, 290, 302, 323, 341], "weak": [245, 277, 281, 302, 323, 341, 373, 803, 1198], "_abc": [245, 258, 264, 274, 277], "_1": [245, 805, 806], "a123": 245, "vernichten": 245, "laufzeit": 245, "140032702361168": 245, "refcount": [245, 801, 803, 1087, 1241], "dezim": 245, "oktal": 245, "0o755": [245, 281, 393], "493": [245, 264, 281, 357, 367], "0b11": [245, 281, 284], "sql": [245, 256, 268, 1200, 1203], "0b11111111": 245, "ordnung": 245, "uhrzeit": 245, "vormittag": 245, "6666666666666666": [245, 281], "nda": [245, 299], "python_dir": 245, "jan": [245, 274, 277, 389, 390, 407, 439, 824, 851, 944, 970, 1029, 1065, 1080, 1117], "lowercas": [245, 277, 323, 948, 996, 1135, 1153, 1158], "140032636418048": 245, "ein_iterierbares_d": 245, "extraw\u00fcrschtl": 245, "sex": [245, 258, 280, 281, 1153], "diver": 245, "translation_t": [245, 281, 284, 287, 357], "bag": [245, 293, 294, 296, 534, 539, 837, 839, 840, 1059, 1122], "blue": [245, 253, 261, 281, 1148], "mengenoperationen": 245, "set1": 245, "set2": 245, "symm_diff": 245, "lisa": 245, "eugeni": [245, 248], "okan": 245, "mcguir": 245, "sinner": 245, "implicitli": [245, 250, 261, 471, 519, 528, 541, 649, 656, 747, 755, 850, 1019, 1087, 1119, 1204], "vornam": [245, 253, 254], "nachnam": [245, 253, 254], "persnr": 245, "personalnumm": 245, "doch": [245, 319, 329, 416], "5000": [245, 258, 264, 1106], "4000": [245, 264], "3000": [245, 258, 264, 284, 323], "15000": [245, 264], "uppercas": [245, 277, 323, 948, 1135, 1153], "verfuegbar": 245, "restlichen": 245, "gehaelt": 245, "konstant": [245, 253, 276], "unexpect": [245, 484, 526], "pcap": [246, 266], "certifi": 246, "math": [246, 249, 259, 261, 262, 264, 272, 281, 286, 289, 322, 328, 351, 644, 646, 1115, 1191], "statist": [246, 259, 272, 281, 286, 289, 322, 328, 498, 1053, 1175, 1191, 1196, 1224], "undo": [246, 948, 1191], "brad": [246, 1191], "traversi": [246, 1191], "eval": [247, 275, 276, 285, 303, 317, 318, 323, 330, 339, 342, 343, 1111, 1260], "openfil": 248, "hanld": 248, "soemth": [248, 901], "zf": [248, 357], "namelist": 248, "zipdemo": 248, "extracted_nam": 248, "prankergass": [248, 269, 960], "8020": [248, 264, 269, 307, 506, 914, 915, 954, 960], "isinst": [248, 249, 262, 264, 277, 290, 302, 1109, 1213], "superclass": [248, 249, 262, 277], "subclass": [248, 249, 262, 277, 281, 1089, 1106], "class1": 248, "class2": 248, "salari": 248, "selina": 248, "orgl": 248, "8010": [248, 264, 506], "birth": [248, 274, 287, 644, 838, 1180, 1181, 1182, 1183, 1186, 1187, 1188], "1622102062": 248, "4778333": 248, "019427776336669922": 248, "009679079055786133": 248, "daniel": [248, 251, 389, 390, 407], "ortner": 248, "num_employe": 248, "__first": 248, "__last": 248, "__address": 248, "_person__first": 248, "_person__last": 248, "_person__address": 248, "_first": 248, "_last": 248, "_address": 248, "do_debug": 248, "val": [248, 277, 805, 994], "ueberhaupt": 248, "l_float": 248, "0x7fd9881b04a0": 248, "functool": [248, 315], "wrapper": [248, 277, 287, 292, 329, 351, 547, 745, 770, 1009, 1059, 1088, 1109, 1193], "komplexen": 248, "testfil": 248, "nzeil": [248, 277, 345], "seek": [248, 323, 357, 390], "nth_fibo": 248, "accomod": 248, "0x7fd9801cec10": 248, "lf": [248, 580, 1140], "0x7fd9801b8d60": 248, "0x7fd9801b4900": 248, "0x7fd98014cd40": 248, "gen": [248, 323], "sequenceno": 248, "kv_pair": 248, "permissionerror": [248, 264, 284, 302, 319, 1089], "deni": [248, 264, 284, 319, 357, 569, 583, 931, 967, 996, 1004, 1016, 1021, 1022, 1089, 1219], "filenotfounderror": [248, 264, 302, 1089], "64bit": 248, "utc": 248, "python_implement": [248, 249, 262], "python_version_tupl": [248, 249, 262], "python39": 248, "dynload": [248, 357], "isfil": [248, 383, 506], "isdir": [248, 506], "my_path": 248, "hopefulli": 248, "the_except": 248, "__class__": [248, 271, 274, 277, 281, 290, 299, 302, 323, 341, 363], "__bases__": [248, 249, 262, 279], "distrust": 248, "guido": [248, 1215], "incompet": 248, "precondit": [248, 916], "abdefg": 248, "beg": [248, 465, 1090], "bdefg": 248, "stringifi": 248, "0x7ffa9c2ac3a0": 248, "formatstr": 248, "ding": [248, 278, 1058], "formatierter_str": 248, "oserror": [249, 277, 302, 1089], "assertionerror": [249, 274, 290, 302, 341, 1089, 1102, 1224, 1225], "jjjj": [249, 411, 412, 503], "line_count": 249, "aud": 249, "qualifii": [249, 262], "trunc": [249, 262], "hypot": [249, 262], "seed": [249, 262, 281, 596], "ascii": [249, 262, 277, 284, 287, 302, 323, 329, 345, 351, 357, 426, 429, 432, 438, 1120, 1121, 1134, 1140, 1199], "codepoint": [249, 262], "escap": [249, 262, 269, 277, 299, 419, 518, 1199], "ord": [249, 262, 281, 302, 1129], "chr": [249, 262, 302], "isxxx": [249, 262], "rfind": [249, 262, 277, 323, 329, 363, 1136], "grammar": [249, 262], "instrospect": [249, 262], "hasattr": [249, 262, 277, 290, 302, 1103, 1109], "__module__": [249, 261, 262, 271, 274, 277, 281, 290, 302, 323, 341], "bytearrai": [249, 262, 277, 302], "histogram": [249, 250, 267, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 630, 631, 639, 744, 782, 837, 839, 840], "defaultdict": [249, 275, 276, 300], "make_histogram": [249, 631, 640], "fileobj": 249, "stringio": [249, 277], "8859": [249, 267, 268, 284, 287, 307, 329, 341, 345, 506], "pycon": [249, 275, 298, 322, 344, 1191], "2017": [249, 275, 298, 344, 652, 750, 801, 1191], "metaprogram": [249, 276, 298, 759, 1102, 1191, 1243], "contract": [249, 251, 298, 1191], "evolut": [249, 298, 344, 948, 1191], "unauthor": [249, 298, 344, 1191], "lesson": [249, 298, 344, 395, 401, 505, 788, 1082, 1191], "evolv": [249, 298, 344, 785, 1191], "assembli": [249, 298, 322, 344, 1065, 1067, 1191, 1256], "revolv": [249, 275, 344, 1191, 1197], "mro": [249, 275, 279, 344, 1191], "cpa": 250, "fahr": [250, 420, 422], "tomorrow": [250, 265, 405, 406], "correctli": [250, 340, 384, 482, 518, 993, 1016, 1142, 1199], "consecut": [250, 445, 794, 982], "becam": [250, 336], "44ff": 250, "gig": 250, "upcom": 250, "merg": [250, 889, 1051, 1138], "msi": 250, "wswitch": [250, 486, 743, 856], "wall": [250, 264, 265, 443, 493, 535, 817, 855, 856, 1233], "77ff": 250, "skip": [250, 277, 390, 534, 535, 862, 994, 1066, 1067, 1089, 1226], "89ff": 250, "alongsid": [250, 881], "num_us": 250, "199ff": 250, "204ff": 250, "208ff": 250, "220ff": 250, "222ff": 250, "db_get_user_at_index": 250, "298ff": 250, "strcpy": [250, 267, 432, 478, 634, 649, 652, 753, 787, 989, 1049], "strlen": [250, 432, 457, 485, 649, 652, 753, 787, 1027, 1030, 1062], "bahavior": 250, "dest": [250, 432], "strtol": 250, "stringif": [250, 1238], "db_error_str": 250, "sexi": [250, 1041], "caleb": 250, "bleed": 251, "rect": [251, 473, 620], "sphere": [251, 620], "preprocessor": [251, 267, 439, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 741, 744, 782, 837, 839, 840, 1065, 1231, 1243], "julia": 251, "yesterdai": [251, 267, 275, 315, 375, 380], "distanc": [251, 646, 674, 792, 805], "has_lastnam": 251, "botton": 251, "mingw": [251, 294, 296, 314, 405, 417, 927], "resembl": [251, 380], "tortur": 251, "functor": [251, 293, 294, 296, 353, 354, 372, 685, 782, 783, 839, 840], "rudimentarili": [251, 1119, 1194], "gotten": [251, 819], "recourc": 251, "outright": [251, 307, 480, 1094, 1125], "geniu": [251, 307, 676, 1094, 1125], "livehackingli": 251, "herdt": 252, "commandlineargument": 252, "summenbeispiel": 252, "showcas": 252, "datenbank": 252, "formulieren": 252, "verbindung": [252, 1247], "schicken": 252, "schickman": 252, "muessen": 252, "verwandlen": 252, "fractal": [252, 268], "schatzi": 253, "zeitkomplexit\u00e4t": 253, "foreach": [253, 517, 520, 523, 528, 533, 840], "assozi": [253, 1240], "color_transl": 253, "gelb": 253, "yellow": 253, "hashtabl": [253, 1213], "sack": 253, "my_color": 253, "her_color": 253, "pink": 253, "gr\u00fcn": 253, "beig": 253, "vereiningungsmeng": 253, "schnittmeng": 253, "symmetrisch": 253, "differenzmeng": 253, "sei": 253, "gewesen": 253, "waer": [253, 329], "1037190666": [253, 269, 271, 277, 281, 284, 287, 290, 544, 551, 568, 569, 570, 582, 583, 584, 702, 1103], "6666010185": 253, "schwarzbauer": 253, "json_string_fuer_den_brows": 253, "response_dict": 253, "svnr": [253, 261, 264, 271, 277, 281, 284, 287, 289, 290, 329, 545, 551, 573, 579, 1103, 1208], "pprint": [253, 255, 262, 264, 299, 1090, 1199], "formatieren": 253, "endlich": 253, "transfer_string_in_php_am_serv": 253, "u00f6rg": 253, "transfer_string_in_js_am_brows": 253, "response_dict_am_brows": 253, "verwandeln": 253, "schlussendlich": 253, "geeignet": 253, "platzieren": 253, "meine_t": 253, "sozialversicherungsnumm": 253, "simmer": 254, "mein_str": 254, "sq": [254, 261, 264, 271, 281, 302, 323, 341, 345, 357], "docu": 254, "nmehrzeilig": 254, "nvon": 254, "mehrzeilig": 254, "deppertem": 254, "irrelevant": 254, "quargel": [254, 255], "190666": 254, "inkorrekt": 254, "geburtsdatum": 254, "endswith": [254, 269, 271, 277, 287, 302, 306, 309, 323, 329, 345, 351, 357, 363, 367, 1136], "sss": 254, "isalpha": [254, 258, 269, 271, 277, 281, 302, 323, 329, 351, 367, 1136], "isidentifi": [254, 258, 271, 277, 287, 302, 323, 329, 1136], "islow": [254, 277, 287, 302, 323, 357, 363, 1136], "arg1": 254, "arg2": 254, "arg3": 254, "abcblah": 254, "blahabcbcabcc": 254, "lah": 254, "rstrip": [254, 258, 262, 269, 273, 274, 277, 287, 302, 319, 323, 329, 345, 363, 367, 389, 398], "lstrip": [254, 269, 273, 277, 302, 323, 329, 363, 367, 398], "wieviel": [254, 1247], "995237": 254, "datestr": 254, "dt": [254, 351, 887, 993], "strptime": [254, 255, 256, 262, 351], "uuid": 254, "msg_aussi": 254, "sea": [254, 269, 302, 394, 763], "oida": [254, 271, 274, 323, 535], "msgid": 254, "uuid4": 254, "345654325678": 254, "json_aussi": 254, "6563515ef0824d42b459389cefd09127": 254, "json_eini": 254, "sender": [254, 1063], "msg_eini": 254, "sauberestextfil": 255, "12345678": 255, "2270": [255, 264], "20333": 255, "360": [255, 264, 341, 351, 357, 363, 367], "91011121": 255, "30333": 255, "36756788": 255, "1112": [255, 264], "1244": [255, 264], "31333": 255, "45011121": 255, "44444": 255, "340": [255, 264, 271, 277, 309, 323, 351, 357, 363, 367], "sauber": 255, "read_sauberes_text_fil": 255, "item1": [255, 351], "item13": 255, "werk": 255, "lort": 255, "charg": [255, 548, 555, 568, 569, 570, 582, 583, 584], "sonderbestandsnumm": 255, "materialkurztext": 255, "lagerplatz": 255, "verfueg_bestand": 255, "bme": 255, "we_datum": 255, "verf\u00fcg": 255, "bestand": 255, "datum": [255, 1198], "sap": [256, 307, 415, 1211], "api2": 256, "opc": [256, 265, 340], "rrdtool": 256, "rrd": 256, "subprocess": [256, 272, 277, 286, 288, 298, 322, 383, 398, 403, 1191], "commmon": [258, 465], "140576769461632": 258, "simplicit": 258, "inputfil": [258, 506], "450": [258, 264, 271, 306, 309, 357, 367], "paragraph": [258, 531], "highli": [258, 416, 601], "pathnam": [258, 264, 274, 277, 375, 378, 517, 523, 533, 840, 846, 1015, 1019, 1134], "displayhook": [258, 264, 274, 277, 391], "excepthook": [258, 264, 274, 277, 391], "uncaught": [258, 264, 274, 277, 620], "systemexit": [258, 264, 274, 277, 299, 302, 391, 1089], "behav": [258, 264, 267, 274, 277, 599, 620, 746, 801, 802, 835, 903, 930, 1053], "last_typ": [258, 264, 274, 277, 391], "last_valu": [258, 264, 274, 277, 391, 770, 773, 776, 777, 778], "last_traceback": [258, 264, 274, 277, 391], "builtin_module_nam": [258, 264, 274, 277, 391], "pertain": [258, 264, 274, 277], "exec_prefix": [258, 264, 274, 277, 391], "float_info": [258, 264, 274, 277, 391], "float_repr_styl": [258, 264, 274, 277, 391], "hash_info": [258, 264, 274, 277, 391], "hexvers": [258, 264, 274, 277, 391], "int_info": [258, 264, 274, 277, 391], "maxsiz": [258, 264, 274, 277, 391], "largest": [258, 264, 274, 277, 482], "maxunicod": [258, 264, 274, 277, 391], "thread_info": [258, 264, 274, 277, 391], "version_info": [258, 264, 274, 277, 391], "__stdin__": [258, 264, 274, 277, 391], "__stdout__": [258, 264, 274, 277, 391], "__stderr__": [258, 264, 274, 277, 391], "__displayhook__": [258, 264, 274, 277, 391], "__excepthook__": [258, 264, 274, 277, 391], "screen": [258, 264, 274, 277, 924, 930, 948], "exc_info": [258, 264, 274, 277, 391], "getdlopenflag": [258, 264, 274, 277, 391], "dlopen": [258, 264, 274, 277, 1251], "getprofil": [258, 264, 274, 277, 391], "getrefcount": [258, 264, 274, 277, 284, 391], "getrecursionlimit": [258, 264, 274, 277, 391], "getsizeof": [258, 264, 274, 277, 299, 302, 345, 367, 391], "gettrac": [258, 264, 274, 277, 391], "setdlopenflag": [258, 264, 274, 277, 391], "setprofil": [258, 264, 274, 277, 391], "setrecursionlimit": [258, 264, 274, 277, 391], "settrac": [258, 264, 274, 277, 391], "__breakpointhook__": [258, 264, 274, 277, 391], "breakpointhook": [258, 264, 274, 277, 391], "breakpoint": [258, 264, 274, 277, 302], "exctyp": [258, 264, 274, 277], "__unraisablehook__": [258, 264, 274, 277, 391], "unraisablehook": [258, 264, 274, 277, 391], "unrais": [258, 264, 274, 277], "exc_typ": [258, 264, 274, 277, 1087], "exc_valu": [258, 264, 274, 277, 1087], "exc_traceback": [258, 264, 274, 277, 1087], "err_msg": [258, 264, 274, 277], "addaudithook": [258, 264, 274, 277, 391], "audit": [258, 264, 274, 277, 357, 391], "call_trac": [258, 264, 274, 277, 391], "afterward": [258, 264, 274, 277, 444, 494, 651, 801, 802, 803, 816, 883, 1059, 1225], "older": [258, 264, 274, 277, 912, 1059], "get_asyncgen_hook": [258, 264, 274, 277, 391], "firstit": [258, 264, 274, 277], "get_coroutine_origin_tracking_depth": [258, 264, 274, 277, 391], "coroutin": [258, 264, 274, 277, 353, 772, 773, 775, 776, 777, 778, 782, 839, 840, 1191], "getallocatedblock": [258, 264, 274, 277, 391], "getdefaultencod": [258, 264, 274, 277, 323, 391], "getfilesystemencodeerror": [258, 264, 274, 277, 391], "getfilesystemencod": [258, 264, 274, 277, 391], "getswitchinterv": [258, 264, 274, 277, 391], "setswitchinterv": [258, 264, 274, 277, 391], "is_fin": [258, 264, 274, 277, 391], "set_asyncgen_hook": [258, 264, 274, 277, 391], "set_coroutine_origin_tracking_depth": [258, 264, 274, 277, 391], "cr_origin": [258, 264, 274, 277], "rtld_global": [258, 264, 274, 277], "rtld_xxx": [258, 264, 274, 277], "rtld_lazi": [258, 264, 274, 277], "frequenc": [258, 264, 274, 277, 281, 317, 318, 339, 343, 384, 409, 413, 840, 985, 986, 994, 1026, 1048, 1050], "uninterrupt": [258, 264, 274, 277, 879], "workload": [258, 264, 274, 277], "typic": [258, 264, 274, 277, 305, 315, 331, 343, 347, 465, 505, 535, 546, 570, 599, 725, 726, 858, 907, 933, 1066, 1112, 1122, 1241, 1245, 1248, 1256], "005": [258, 264, 274, 277], "abiflag": [258, 264, 274, 277, 391], "api_vers": [258, 264, 274, 277, 391], "1013": [258, 264, 274, 277], "ipyk": 258, "base_exec_prefix": [258, 264, 274, 277, 391], "base_prefix": [258, 264, 274, 277, 391], "_ast": [258, 264, 274, 277], "_codec": [258, 264, 274, 277], "_collect": [258, 264, 274, 277], "_f": [258, 264, 274, 277], "byteord": [258, 264, 274, 277, 299, 391, 987], "foundati": [258, 264, 274, 277], "emati": [258, 264, 274, 277], "ipykernel": [258, 264, 274, 277, 302], "zmqshelldisplayhook": [258, 264, 274, 277], "dont_write_bytecod": [258, 264, 274, 277, 391], "opt": [258, 264, 274, 277, 357, 471], "ation": [258, 264, 274, 277], "7976931348623157e": [258, 264, 274, 277], "308": [258, 264, 271, 274, 277, 319, 329, 341, 351, 357, 363], "max_": [258, 264, 274, 277], "epsilo": [258, 264, 274, 277], "2305843009213693": [258, 264, 274, 277], "iphash2": [258, 264, 274, 277], "50922736": 258, "cache_tag": [258, 264, 274, 277], "xv": [258, 264, 274, 277], "bits_per_digit": [258, 264, 274, 277], "sizeof_digit": [258, 264, 274, 277], "syntaxerror": [258, 274, 281, 302, 1089], "eol": [258, 281], "scan": [258, 281, 284, 351, 995], "9223372036854775807": [258, 264, 274, 277, 838], "1114111": [258, 264, 274, 277], "meta_path": [258, 264, 274, 277, 391], "_frozen_importlib": [258, 264, 274, 277, 302], "builtinimport": [258, 264, 274, 277, 302], "_fro": [258, 264, 274, 277], "homepa": 258, "path_hook": [258, 264, 274, 277, 391], "zipimport": [258, 264, 274, 277], "filefind": [258, 264, 274, 277], "path_importer_cach": [258, 264, 274, 277, 391], "jfa": [258, 264, 274, 277], "platlibdir": [258, 264, 274, 277, 391], "ps1": [258, 264, 274, 277, 391, 1226], "ps2": [258, 264, 274, 277, 391], "ps3": [258, 264, 274, 277, 391], "pycache_prefix": [258, 264, 274, 277, 391], "outstream": [258, 264, 274, 277], "versio": [258, 264, 274, 277], "202103": 258, "releaselev": [258, 264, 274, 277], "warnopt": [258, 264, 274, 277, 391], "isdigit": [258, 269, 277, 281, 302, 309, 323, 329, 357, 367, 1136], "xx": [258, 289, 323, 329, 345, 351, 367, 382], "pp": [258, 309, 470, 676], "list_of_str": 258, "tensorflow": 259, "kesselfal": 259, "rettenbachklamm": 259, "hochtor": 259, "hochschwab": 259, "_a": [261, 277, 302], "_123": 261, "140575811317328": 261, "140575811316208": 261, "0xffffffff": [261, 262, 367, 443], "4294967296": [261, 269], "0x48": [261, 993], "330": [261, 264, 277, 302, 309, 323, 341, 351, 357, 363], "332": [261, 264, 277, 309, 323, 341, 357, 363], "333": [261, 264, 277, 309, 323, 351, 357, 363, 394], "334": [261, 264, 277, 309, 351, 357, 363], "dstr": 261, "777": [261, 264, 351], "aliv": [261, 463, 1041, 1085], "bcd": 261, "dusan": 261, "alex": [261, 275, 1107], "mist": [261, 309], "span": [261, 287, 290, 292, 299, 323, 357, 420, 439, 463, 862, 1031], "141592653589793": [261, 264], "roll": [261, 280, 301, 317, 318, 1125, 1238], "dice": [261, 280, 301, 317, 318, 1125], "win": [261, 277, 287, 351, 363, 980, 1049, 1125], "rnd": [261, 284], "convention": 261, "wise": [261, 305, 488, 652, 723, 755, 824, 838, 840, 855, 865, 885, 985, 1026, 1089], "resultset": [261, 264, 1203], "sbin": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 526, 919, 924, 926, 974, 980, 1011, 1021, 1068], "nologin": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 974, 980, 1011, 1021], "adm": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 975, 978, 980], "lp": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 980], "spool": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 980], "lpd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 520, 980], "65534": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "apach": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "httpd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "coredump": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980, 1062], "997": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "998": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "996": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "timesync": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "995": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "tss": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "tpm": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "polkitd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 926], "994": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "avahi": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 926], "mdn": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "unbound": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 1121], "992": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "dnsmasq": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 926], "991": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "dhcp": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "nm": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 500, 653, 887, 1078, 1084], "openconnect": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "993": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "989": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "networkmanag": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 500, 926], "usbmuxd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "gluster": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "988": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "glusterf": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "rtkit": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "realtimekit": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "pipewir": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "987": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "geoclu": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "990": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "chroni": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "984": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "saslauth": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "saslauthd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "radvd": [261, 277, 284, 287], "rpc": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "rpcbind": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "openvpn": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "982": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "981": [261, 264, 277, 284, 287, 363], "spawn": [261, 277, 284, 287, 302, 309, 319, 323, 340, 345, 351, 357, 363], "colord": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "985": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "980": [261, 264, 277, 284, 287, 742], "rpcuser": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363], "abrt": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 926, 980], "979": [261, 264, 277, 284, 287], "helper": [261, 277, 281, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 438, 652, 715, 764, 805, 881, 980, 1216, 1219, 1261], "983": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "978": [261, 264, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 980], "vboxadd": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "tcpdump": [261, 277, 284, 287, 302, 309, 319, 323, 345, 351, 357, 363, 980], "974": [261, 264, 277, 284, 287], "broker": [261, 265, 277, 284, 287, 302, 309, 319, 323, 340, 345, 351, 357, 926, 1185], "mappingproxi": [261, 277, 290], "229": [261, 264, 269, 271, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "231": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 323, 329, 345, 351, 357, 363, 367, 568, 569, 570, 582, 583, 584], "232": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 323, 329, 345, 351, 357, 363, 367], "233": [261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 319, 323, 329, 345, 351, 357, 363, 367], "inputlist": [261, 1092], "235": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "236": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 323, 329, 341, 345, 351, 357, 363, 367, 491], "237": [261, 264, 269, 271, 277, 281, 284, 287, 302, 319, 323, 329, 345, 351, 357, 363, 367], "238": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "239": [261, 264, 269, 271, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "240": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 319, 323, 329, 345, 351, 357, 363, 367], "242": [261, 264, 269, 271, 274, 277, 284, 287, 302, 319, 323, 329, 341, 345, 351, 357, 363, 367], "243": [261, 264, 269, 271, 277, 284, 287, 302, 319, 323, 329, 341, 351, 357, 363, 367], "244": [261, 264, 269, 271, 274, 277, 284, 287, 302, 323, 329, 341, 351, 357, 363, 367], "245": [261, 264, 269, 271, 284, 302, 319, 323, 329, 341, 351, 357, 363, 367], "247": [261, 264, 269, 271, 277, 281, 284, 302, 319, 323, 329, 345, 351, 357, 363, 367], "248": [261, 264, 269, 271, 274, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367], "249": [261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 323, 329, 341, 345, 351, 357, 363, 367], "250": [261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 313, 319, 323, 329, 351, 357, 363, 367, 978], "251": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 341, 345, 357, 363, 367], "252": [261, 264, 269, 271, 274, 281, 284, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 1204], "253": [261, 264, 269, 271, 274, 277, 284, 287, 302, 309, 323, 329, 345, 357, 363, 367], "256": [261, 264, 269, 271, 277, 284, 287, 302, 309, 319, 323, 329, 345, 351, 357, 363, 367, 429, 656, 819, 1193, 1204], "257": [261, 264, 269, 271, 274, 277, 281, 284, 287, 302, 309, 319, 323, 329, 351, 357, 363, 367], "258": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 357, 363, 367], "0x7fda5444e6a0": 261, "259": [261, 264, 269, 271, 274, 277, 284, 302, 309, 319, 323, 329, 351, 357, 363, 367], "260": [261, 264, 269, 271, 274, 277, 284, 302, 309, 319, 323, 329, 341, 351, 357, 363, 367], "261": [261, 264, 269, 271, 277, 281, 287, 302, 309, 319, 323, 329, 357, 363, 367], "262": [261, 264, 269, 271, 277, 287, 302, 309, 319, 323, 329, 341, 351, 357, 363, 367], "263": [261, 264, 269, 271, 277, 281, 284, 287, 302, 309, 319, 323, 329, 341, 357, 363, 367], "264": [261, 264, 269, 271, 274, 277, 284, 287, 302, 309, 323, 329, 341, 351, 357, 363, 367], "265": [261, 264, 269, 271, 277, 284, 302, 309, 323, 329, 341, 351, 357, 363, 367], "266": [261, 264, 269, 271, 274, 277, 281, 287, 302, 323, 329, 357, 363, 367], "267": [261, 264, 269, 271, 274, 277, 284, 287, 302, 309, 323, 329, 341, 357, 363, 367], "268": [261, 264, 269, 271, 277, 284, 287, 302, 309, 323, 329, 351, 357, 363, 367], "269": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 357, 363, 367, 1067], "270": [261, 264, 269, 271, 277, 281, 284, 302, 309, 319, 323, 329, 341, 351, 357, 363, 367], "other_map": 261, "272": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 341, 357, 363, 367], "274": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 319, 323, 329, 351, 357, 363, 367], "140575811316304": 261, "275": [261, 264, 269, 271, 277, 281, 284, 302, 309, 319, 323, 329, 341, 357, 363, 367], "276": [261, 264, 269, 271, 274, 284, 302, 309, 319, 323, 329, 341, 357, 363, 367], "277": [261, 264, 269, 271, 274, 277, 281, 284, 302, 319, 323, 329, 351, 357, 363], "278": [261, 264, 269, 271, 277, 284, 302, 309, 323, 329, 341, 351, 357, 363], "279": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 323, 329, 341, 357, 363], "280": [261, 264, 269, 271, 274, 277, 281, 302, 309, 323, 329, 341, 357, 363, 1066, 1067], "140575692459008": 261, "282": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 323, 329, 341, 357, 363], "283": [261, 264, 269, 271, 274, 277, 281, 284, 302, 323, 329, 357, 363], "284": [261, 264, 269, 271, 277, 281, 284, 302, 306, 329, 341, 351, 357, 363], "elementwis": 261, "285": [261, 264, 269, 271, 274, 277, 302, 309, 323, 329, 341, 357, 363], "286": [261, 264, 269, 271, 274, 277, 281, 302, 323, 329, 341, 357, 363], "287": [261, 264, 269, 271, 274, 277, 281, 284, 302, 309, 329, 341, 351, 357, 363], "140575692438848": 261, "288": [261, 264, 269, 271, 277, 281, 284, 302, 309, 323, 329, 341, 351, 357, 363], "140575692448960": 261, "289": [261, 264, 269, 271, 277, 302, 309, 323, 329, 341, 351, 357, 363], "290": [261, 264, 269, 271, 277, 302, 309, 323, 329, 357, 363], "292": [261, 264, 269, 277, 281, 302, 309, 319, 323, 357, 363], "293": [261, 264, 269, 271, 277, 302, 309, 319, 323, 329, 357, 363], "295": [261, 264, 269, 271, 277, 281, 302, 309, 319, 323, 357, 363], "296": [261, 264, 269, 271, 277, 302, 309, 319, 323, 329, 357, 363], "298": [261, 264, 269, 277, 281, 302, 309, 319, 323, 329, 351, 357, 363], "deep": [261, 273, 341, 759, 764, 1053], "301": [261, 264, 269, 274, 277, 281, 302, 309, 319, 323, 329, 341, 357, 363], "302": [261, 264, 269, 271, 277, 281, 302, 309, 323, 329, 341, 357, 363, 1148], "deepcopi": [261, 271, 284, 309, 329, 341, 1130], "303": [261, 264, 269, 271, 274, 277, 309, 323, 329, 341, 351, 357, 363, 1067], "304": [261, 264, 269, 271, 274, 277, 281, 341, 357, 363], "305": [261, 264, 274, 277, 302, 319, 323, 329, 341, 357, 363], "314": [261, 264, 271, 274, 277, 302, 309, 319, 323, 329, 351, 357, 363], "315": [261, 264, 277, 302, 323, 329, 351, 357, 363], "rdr": [261, 262, 345, 506, 549, 1199], "delimit": [261, 262, 277, 306, 307, 323, 345, 351, 363, 672, 725, 975, 1118, 1199], "fund_nam": [261, 262, 1148], "fund_isin": [261, 262, 1148], "fund_tick": [261, 262, 1148], "as_of_d": [261, 262, 1148], "fund_in_univers": [261, 262, 1148], "fund_of_fund": [261, 262, 1148], "fund_holdings_count": [261, 262, 1148], "fund_holding_funds_count": [261, 262, 1148], "american": [261, 267, 724, 739, 840, 1148, 1204], "fund": [261, 1148], "balanc": [261, 265, 473, 1148], "us0240711020": [261, 1148], "abalx": [261, 1148], "20210103": [261, 1148], "084": [261, 1148], "dodg": [261, 1148], "cox": [261, 1148], "us2562011047": [261, 1148], "dodbx": [261, 1148], "410": [261, 264, 309, 323, 357, 367, 1148], "us2562191062": [261, 1148], "dodgx": [261, 1148], "franklin": [261, 1148], "incom": [261, 277, 340, 1148, 1207], "us3534963000": [261, 1148], "fkinx": [261, 1148], "america": [261, 1148], "us3998741066": [261, 1148], "agthx": [261, 1148], "price": [261, 281, 499, 542, 1148], "us7414791092": [261, 1148], "prgfx": [261, 1148], "fidel": [261, 1148], "puritan": [261, 1148], "us3163451079": [261, 1148], "fpurx": [261, 1148], "contrafund": [261, 1148], "us3160711095": [261, 1148], "fcntx": [261, 1148], "363": [261, 264, 309, 323, 341, 351, 357, 363, 367, 1148], "us77954m1053": [261, 1148], "prwcx": [261, 1148], "westburi": [261, 1148], "us6804141090": [261, 1148], "owlsx": [261, 1148], "us1401931035": [261, 1148], "caibx": [261, 1148], "582": [261, 264, 357, 1148], "harbor": [261, 1148], "institut": [261, 262, 555, 570, 1148], "us4115115044": [261, 1148], "hacax": [261, 1148], "us77954q1067": [261, 1148], "trbcx": [261, 1148], "dreyfu": [261, 1148], "treasuri": [261, 1148], "cash": [261, 1148], "inst": [261, 1148], "us2619411083": [261, 1148], "dirxx": [261, 1148], "blackrock": [261, 1148], "us09251t5092": [261, 1148], "malox": [261, 1148], "us3163453059": [261, 1148], "flpsx": [261, 1148], "liquid": [261, 1148], "us09248u5517": [261, 1148], "tttxx": [261, 1148], "dfa": [261, 1148], "portfolio": [261, 281, 1148], "us2332038841": [261, 1148], "dfgbx": [261, 1148], "feder": [261, 1148], "herm": [261, 1148], "us60934n6821": [261, 1148], "utixx": [261, 1148], "oakmark": [261, 1148], "investor": [261, 281, 1148], "us4138382027": [261, 1148], "oakix": [261, 1148], "us00767h4939": [261, 1148], "787": [261, 264, 1148], "fpa": [261, 1148], "crescent": [261, 1148], "us30254t7596": [261, 1148], "fpacx": [261, 1148], "us3534968058": [261, 1148], "fcisx": [261, 1148], "us5529836943": [261, 1148], "meiix": [261, 1148], "goldman": [261, 1148], "sach": [261, 1148, 1259], "instrument": [261, 497, 499, 993, 1148, 1252], "us38142b5003": [261, 1148], "ftixx": [261, 1148], "schwab": [261, 1148], "us8085098551": [261, 1148], "swppx": [261, 1148], "508": [261, 264, 309, 341, 357, 1148], "templeton": [261, 1148], "bond": [261, 1148], "advisor": [261, 1148], "us8802084009": [261, 1148], "tgbax": [261, 1148], "us32008f6060": [261, 1148], "sgiix": [261, 1148], "ishar": [261, 1148], "etf": [261, 1148], "us4642872000": [261, 1148], "ivv": [261, 1148], "507": [261, 264, 341, 1148], "vanguard": [261, 1148], "admir": [261, 1148], "us9229087104": [261, 1148], "vfiax": [261, 1148], "510": [261, 264, 341, 351, 357, 1148], "us9229087286": [261, 1148], "vtsax": [261, 1148], "370": [261, 264, 309, 323, 351, 357, 363, 367, 1148], "spdr": [261, 1148], "midcap": [261, 1148], "us78467y1073": [261, 1148], "mdy": [261, 1148], "dow": [261, 1148], "jone": [261, 399, 400, 1148], "industri": [261, 887, 1148], "us78467x1090": [261, 1148], "health": [261, 1148], "us81369y2090": [261, 1148], "xlv": [261, 1148], "discretionari": [261, 1148], "us81369y4070": [261, 1148], "xly": [261, 1148], "energi": [261, 371, 1148], "us81369y5069": [261, 1148], "xle": [261, 1148], "financi": [261, 1148], "us81369y6059": [261, 1148], "xlf": [261, 1148], "us81369y8030": [261, 1148], "xlk": [261, 1148], "invesco": [261, 1148], "qqq": [261, 1148], "us46090e1038": [261, 1148], "us2562061034": [261, 1148], "dodfx": [261, 1148], "msci": [261, 1148], "eaf": [261, 1148], "us4642874659": [261, 1148], "efa": [261, 1148], "897": [261, 264, 1148], "jpmorgan": [261, 1148], "sec": [261, 532, 1049, 1148, 1219], "mny": [261, 1148], "mkt": [261, 1148], "us4812a28358": [261, 1148], "jtsxx": [261, 1148], "eql": [261, 1148], "wght": [261, 1148], "us46137v3574": [261, 1148], "us4812a03757": [261, 1148], "cjtxx": [261, 1148], "us00143w8753": [261, 1148], "odvyx": [261, 1148], "dividend": [261, 1148], "us78464a7634": [261, 1148], "sdy": [261, 1148], "equiti": [261, 1148], "us2332033719": [261, 1148], "dfiex": [261, 1148], "888": [261, 264, 1148], "edgewood": [261, 1148], "us0075w07594": [261, 1148], "egfix": [261, 1148], "prudenti": [261, 1148], "us00767h7585": [261, 1148], "r6": [261, 1148], "us55273h3536": [261, 1148], "meikx": [261, 1148], "327": [261, 264, 277, 302, 309, 319, 351, 357, 363, 367], "328": [261, 264, 271, 277, 309, 357, 363, 367], "geschieht": [262, 976], "wunder": 262, "groesser": 262, "jave": 262, "shorthand": [262, 430, 967, 1103], "lin": 262, "lout": 262, "faster": [262, 281, 340, 482, 494, 1053, 1059], "outputlist": 262, "getus": [262, 1169], "userdatabas": [262, 1169], "userid": [262, 274], "groupid": 262, "loginshel": [262, 363], "userrecord": 262, "dens": [262, 271, 281], "pratic": 262, "_fix_float_numb": 262, "fieldnam": [262, 1199], "_fix_bool": 262, "elif": [262, 269, 345, 428, 465, 506, 1109, 1124, 1125], "_fix_dat": 262, "read_stock": [262, 1148], "csvfile": [262, 1102], "converted_record": 262, "dbname": [262, 1202], "stmt": 262, "predefin": [262, 380, 1021, 1058, 1063, 1237], "circuit": [263, 269, 279, 994, 1123, 1247], "windows_path": [264, 269], "festplatt": 264, "eue": [264, 341, 357, 393], "lehrer": 264, "50923504": 264, "202107": 264, "140106795875920": 264, "140106669190640": 264, "669": [264, 281], "140106669191024": 264, "0j": 264, "copied_l": [264, 271], "140106669249856": 264, "copied_t": 264, "tuple_containing_one_el": 264, "tran": 264, "satan": [264, 274], "queen": [264, 284, 1180, 1182, 1186, 1188, 1199], "10000000000": [264, 319, 393], "prod": 264, "resultset_to_local_db": 264, "my_local_db": 264, "basenam": 264, "normalized_path": 264, "normpath": [264, 271, 1097], "291": [264, 269, 277, 302, 319, 329, 341, 351, 357, 363, 498], "294": [264, 269, 277, 302, 319, 323, 329, 357, 363], "297": [264, 269, 271, 277, 281, 323, 351, 357, 363], "299": [264, 269, 274, 277, 281, 302, 309, 319, 323, 329, 351, 357, 363], "306": [264, 274, 281, 302, 319, 323, 329, 341, 351, 357, 363], "307": [264, 271, 277, 302, 319, 323, 329, 341, 351, 357, 363], "309": [264, 271, 274, 277, 309, 319, 323, 329, 341, 345, 357, 363, 367], "310": [264, 271, 274, 277, 323, 329, 341, 357, 363, 443], "311": [264, 271, 302, 323, 329, 351, 357, 363], "312": [264, 271, 277, 302, 309, 319, 329, 351, 357, 363], "313": [264, 271, 277, 309, 323, 329, 351, 357, 363], "316": [264, 271, 274, 277, 302, 323, 341, 351, 357, 363], "317": [264, 271, 274, 302, 309, 319, 323, 341, 351, 357, 363], "318": [264, 274, 277, 309, 323, 351, 357, 363], "319": [264, 271, 274, 277, 302, 319, 323, 341, 351, 357, 363], "321": [264, 274, 277, 309, 319, 323, 329, 341, 357, 363, 367], "322": [264, 274, 277, 309, 329, 341, 351, 357, 363], "323": [264, 271, 274, 277, 302, 323, 329, 341, 351, 357, 363], "324": [264, 274, 277, 302, 319, 323, 329, 341, 351, 357, 363, 601], "325": [264, 271, 277, 309, 319, 329, 351, 357, 363], "326": [264, 271, 277, 302, 319, 329, 341, 351, 357, 363], "329": [264, 277, 302, 309, 341, 357, 363, 367], "331": [264, 271, 277, 302, 323, 357, 363, 367], "335": [264, 271, 277, 309, 323, 351, 357, 363], "336": [264, 271, 277, 323, 351, 357, 363, 538], "337": [264, 277, 309, 323, 351, 357, 363, 367], "338": [264, 271, 309, 323, 351, 357, 363], "339": [264, 271, 277, 323, 351, 357, 363, 367], "341": [264, 271, 277, 309, 323, 341, 351, 357, 363, 367], "342": [264, 271, 277, 309, 329, 351, 357, 363], "343": [264, 277, 309, 323, 341, 357, 363, 367], "344": [264, 277, 309, 323, 341, 351, 357, 363], "346": [264, 277, 323, 341, 351, 357, 363, 698, 699, 700, 701], "347": [264, 309, 323, 341, 351, 357, 363], "348": [264, 277, 341, 351, 357, 363], "349": [264, 277, 323, 341, 351, 357, 363, 493], "351": [264, 271, 277, 323, 351, 357, 363], "352": [264, 271, 277, 309, 323, 351, 357, 363], "353": [264, 271, 277, 309, 323, 351, 357, 363], "354": [264, 277, 323, 351, 357, 363, 547], "355": [264, 309, 323, 351, 357, 363, 367], "356": [264, 284, 323, 341, 357, 363, 367], "357": [264, 309, 323, 341, 351, 357, 363, 367], "359": [264, 323, 351, 357], "361": [264, 323, 341, 351, 357, 367], "362": [264, 309, 323, 341, 351, 357], "364": [264, 323, 357, 363, 367], "365": [264, 341, 357, 363], "366": [264, 309, 323, 357, 363, 367], "367": [264, 323, 341, 351, 357, 363, 367], "368": [264, 323, 351, 357, 363, 367], "371": [264, 309, 351, 357, 363, 367], "373": [264, 271, 309, 341, 351, 357, 367], "374": [264, 271, 323, 341, 357, 367], "376": [264, 309, 323, 341, 351, 357, 367], "377": [264, 271, 309, 323, 341, 351, 357], "379": [264, 309, 323, 341, 351, 357], "380": [264, 309, 323, 341, 357], "381": [264, 271, 309, 323, 357], "382": [264, 309, 323, 341, 357], "383": [264, 271, 309, 313, 341, 351, 357], "384": [264, 309, 323, 341, 351, 357, 367], "385": [264, 309, 323, 341, 357, 367], "386": [264, 309, 323, 341, 357, 367], "387": [264, 357, 367], "388": [264, 309, 323, 341, 357, 367], "389": [264, 341, 357, 367], "390": [264, 323, 341, 357, 367], "391": [264, 309, 341, 357], "392": [264, 309, 357, 367], "393": [264, 271, 309, 323, 341, 357, 367], "394": [264, 271, 309, 323, 341, 357, 367], "395": [264, 271, 309, 323, 341, 351, 357, 367], "396": [264, 271, 309, 357, 367, 933], "397": [264, 271, 323, 341, 357, 367], "398": [264, 271, 323, 357, 367], "399": [264, 271, 323, 341, 357, 367], "401": [264, 271, 309, 323, 357, 367], "402": [264, 309, 341, 357, 367], "403": [264, 271, 323, 341, 357, 367], "405": [264, 323, 357, 367], "406": [264, 271, 309, 323, 341, 357], "407": [264, 309, 323, 341, 357, 367], "408": [264, 271, 309, 323, 341, 357, 367], "409": [264, 271, 309, 323, 341, 351, 357, 367], "411": [264, 271, 309, 323, 351, 357], "412": [264, 323, 357], "413": [264, 271, 309, 323, 357], "414": [264, 271, 309, 323, 341, 357], "415": [264, 323, 341, 357], "416": [264, 271, 309, 341, 357], "417": [264, 271, 309, 323, 357], "418": [264, 271, 309, 341, 357, 367], "419": [264, 271, 309, 323, 341, 357], "420": [264, 271, 309, 323, 341, 357], "421": [264, 271, 309, 323, 341, 357], "422": [264, 271, 351, 357, 367], "423": [264, 309, 323, 341, 357, 367, 838], "424": [264, 271, 309, 323, 357, 367], "425": [264, 309, 357], "426": [264, 341], "427": [264, 271, 309, 341, 357, 367], "428": [264, 271, 309, 341, 357, 367], "429": [264, 309, 341, 357, 367], "430": [264, 271, 309, 341, 357, 367], "431": [264, 309, 341, 351, 357, 367, 838], "432": [264, 271, 309, 341, 367], "433": [264, 309, 341, 351, 367], "434": [264, 309, 357, 367], "435": [264, 367], "436": [264, 309, 341, 357, 367], "437": [264, 271, 309, 341, 351, 357, 367], "438": [264, 271, 341, 357, 367], "439": [264, 309, 357, 367], "440": [264, 271, 309, 357, 367], "441": [264, 271, 309, 357, 367], "442": [264, 271, 309, 351, 367], "443": [264, 271, 341, 357, 367], "444": [264, 271, 341, 357, 367], "445": [264, 271, 341, 351, 357, 367], "446": [264, 309, 367], "447": [264, 271, 309, 341, 351, 357, 367], "448": [264, 309, 357, 367], "449": [264, 271, 357], "451": [264, 271, 341, 357], "452": [264, 271, 309, 357, 367], "453": [264, 271, 341, 357, 367], "454": [264, 271, 309, 357, 367], "455": [264, 271, 357, 367], "457": 264, "458": [264, 309, 357, 367], "459": [264, 351], "460": [264, 309], "461": [264, 309, 367], "462": [264, 309, 367], "463": [264, 357], "464": [264, 309, 357, 367], "465": [264, 309, 313, 351, 357, 367], "466": [264, 309, 367], "467": [264, 309, 351, 357, 367], "468": [264, 309, 357, 367], "469": [264, 309, 357, 367, 802], "470": [264, 309, 357], "471": [264, 309, 351, 357, 367], "472": [264, 309, 357, 367], "473": [264, 357], "474": [264, 309, 357, 367], "475": [264, 309, 357, 367], "476": [264, 309, 351, 357, 367], "478": [264, 367], "479": [264, 309, 357, 367], "480": [264, 309, 357, 367], "481": [264, 309, 357], "482": [264, 309, 351, 367], "483": [264, 309, 351, 357, 367], "484": [264, 367], "485": [264, 367], "486": [264, 309, 357, 367], "487": [264, 309, 357, 367], "488": [264, 309, 357, 367], "489": 264, "490": [264, 357, 970], "491": [264, 357], "492": [264, 357, 367], "494": [264, 309, 357], "495": [264, 367], "496": [264, 367], "497": [264, 309, 357], "498": [264, 309, 357], "499": [264, 357, 367], "502": [264, 309, 357, 367], "503": [264, 357], "504": [264, 309], "505": [264, 277, 309, 357], "506": [264, 309, 357], "509": [264, 341, 367], "511": [264, 341, 351, 357], "514": [264, 357], "515": [264, 309, 357, 801], "516": [264, 309], "517": [264, 309, 357], "518": [264, 309, 357, 367], "519": [264, 357, 367], "520": [264, 309, 367], "521": [264, 309, 367, 822, 826], "522": 264, "523": 264, "524": [264, 309], "525": [264, 309, 357], "526": 264, "527": [264, 357], "528": 264, "529": [264, 351, 357], "530": 264, "531": [264, 309, 357, 367], "532": [264, 367, 838], "533": [264, 357, 367], "534": [264, 357, 367], "535": [264, 357, 367], "536": [264, 970], "538": [264, 357], "539": [264, 357], "540": [264, 351, 367], "541": [264, 357], "542": [264, 357], "543": [264, 367], "544": [264, 351, 357, 367], "545": [264, 351, 357], "546": [264, 357], "547": [264, 357, 367], "548": [264, 313, 357], "549": [264, 357], "550": [264, 357], "551": 264, "552": [264, 351, 357, 367], "553": [264, 351, 357, 367], "554": [264, 973], "555": [264, 367], "556": [264, 351], "557": [264, 357], "558": [264, 357], "559": [264, 357], "560": [264, 367], "561": [264, 357, 367], "562": [264, 357, 367], "563": [264, 357, 367], "564": [264, 357, 367], "565": [264, 357], "566": 264, "567": [264, 357, 367], "568": [264, 367], "569": [264, 357, 367], "570": 264, "571": 264, "572": 264, "573": 264, "574": [264, 357], "575": [264, 357], "576": 264, "577": [264, 357], "578": [264, 357], "579": [264, 357], "580": [264, 357], "581": [264, 357], "583": [264, 351], "584": 264, "585": [264, 357], "586": 264, "587": 264, "588": [264, 345, 357], "589": [264, 357], "590": [264, 357], "591": [264, 351], "592": 264, "593": [264, 357], "594": [264, 351], "595": [264, 357], "596": [264, 1080], "597": 264, "598": 264, "599": 264, "601": 264, "602": 264, "603": 264, "604": 264, "605": 264, "606": 264, "607": [264, 351], "608": 264, "609": [264, 351], "610": [264, 970], "611": 264, "612": [264, 933], "613": 264, "614": 264, "615": [264, 351], "616": 264, "617": 264, "618": 264, "619": 264, "620": 264, "621": 264, "622": 264, "623": 264, "624": 264, "625": [264, 281], "626": 264, "627": 264, "628": 264, "629": 264, "630": 264, "631": 264, "632": 264, "633": 264, "634": 264, "635": 264, "636": 264, "637": 264, "638": 264, "639": 264, "640": [264, 652], "641": 264, "642": 264, "643": 264, "644": [264, 1117], "645": 264, "646": 264, "647": 264, "648": 264, "649": 264, "650": [264, 351], "651": 264, "652": 264, "653": 264, "654": 264, "655": [264, 351], "656": 264, "657": [264, 351], "658": 264, "659": 264, "660": 264, "661": 264, "662": 264, "663": 264, "665": [264, 351], "668": [264, 351, 1121], "670": 264, "671": [264, 351], "672": 264, "673": 264, "674": 264, "675": 264, "676": 264, "677": 264, "678": 264, "679": 264, "680": [264, 351], "681": [264, 351], "683": 264, "684": 264, "685": 264, "687": 264, "688": 264, "689": 264, "690": 264, "691": 264, "692": 264, "693": 264, "694": 264, "695": [264, 351], "696": 264, "697": [264, 351], "698": [264, 970, 1011], "699": 264, "700": [264, 694, 803, 1002], "701": [264, 351], "702": 264, "703": [264, 317, 318, 339], "704": 264, "705": 264, "706": [264, 351], "707": 264, "708": [264, 277], "709": 264, "710": [264, 652], "711": 264, "712": 264, "713": 264, "714": 264, "715": [264, 726], "716": [264, 351], "717": 264, "718": 264, "719": 264, "720": 264, "721": 264, "722": 264, "723": 264, "724": 264, "725": 264, "726": 264, "727": [264, 351], "728": 264, "729": 264, "730": [264, 306], "731": 264, "732": 264, "733": 264, "734": 264, "735": 264, "736": 264, "737": 264, "738": 264, "739": 264, "740": 264, "741": 264, "742": 264, "743": 264, "744": 264, "745": 264, "746": [264, 351, 1067], "747": 264, "748": 264, "749": 264, "750": 264, "751": 264, "752": 264, "753": 264, "754": 264, "756": 264, "757": 264, "758": 264, "759": 264, "760": 264, "761": 264, "762": 264, "763": 264, "764": 264, "765": 264, "766": 264, "767": 264, "768": [264, 351], "769": 264, "770": [264, 351], "772": 264, "773": 264, "774": [264, 351], "775": 264, "778": 264, "779": 264, "780": 264, "781": [264, 351], "782": [264, 313], "783": 264, "784": [264, 1065], "785": 264, "786": 264, "788": [264, 351], "789": [264, 271], "790": 264, "791": [264, 801], "792": 264, "793": 264, "794": 264, "795": 264, "796": 264, "797": 264, "798": 264, "801": [264, 306], "802": 264, "803": 264, "804": [264, 351], "805": 264, "806": 264, "807": 264, "808": 264, "809": [264, 345], "810": 264, "811": [264, 351], "812": [264, 351], "813": [264, 351], "814": 264, "815": [264, 281], "816": [264, 287, 351], "817": 264, "818": 264, "819": 264, "820": 264, "821": 264, "822": 264, "823": 264, "824": 264, "826": 264, "827": [264, 351], "828": [264, 313, 351], "829": 264, "830": 264, "831": 264, "832": [264, 1065], "833": 264, "834": 264, "835": 264, "836": 264, "837": 264, "838": 264, "839": [264, 351], "840": 264, "841": 264, "842": 264, "843": 264, "844": [264, 351], "845": 264, "846": 264, "847": 264, "848": 264, "849": 264, "850": 264, "851": 264, "852": 264, "853": 264, "854": 264, "855": 264, "856": 264, "857": 264, "858": 264, "859": 264, "860": 264, "861": 264, "862": [264, 351], "863": 264, "864": 264, "865": 264, "866": 264, "867": 264, "868": 264, "869": [264, 351], "870": 264, "871": 264, "872": 264, "873": 264, "874": [264, 549], "875": [264, 988], "876": 264, "877": [264, 351], "878": 264, "879": [264, 493], "880": 264, "881": [264, 351], "882": 264, "883": [264, 351], "884": 264, "885": 264, "886": 264, "887": [264, 351], "889": 264, "890": 264, "891": [264, 351], "892": 264, "893": 264, "894": 264, "895": 264, "896": 264, "898": [264, 351], "899": 264, "901": 264, "902": [264, 970], "903": 264, "904": 264, "905": 264, "906": 264, "907": 264, "908": 264, "909": [264, 351], "910": [264, 970], "911": 264, "912": 264, "913": 264, "914": 264, "915": 264, "916": 264, "917": [264, 313], "918": [264, 351], "919": 264, "920": 264, "921": [264, 351], "922": [264, 351], "923": 264, "924": 264, "925": 264, "926": [264, 351], "927": 264, "928": 264, "929": [264, 351], "930": 264, "931": 264, "932": 264, "933": [264, 351], "934": 264, "935": [264, 351], "936": 264, "937": 264, "938": 264, "939": [264, 351], "940": [264, 351], "941": [264, 351], "942": 264, "943": 264, "944": 264, "945": 264, "946": [264, 351], "947": 264, "948": 264, "949": [264, 351], "950": 264, "951": [264, 345], "952": 264, "953": 264, "954": 264, "955": 264, "956": 264, "957": 264, "958": 264, "959": 264, "960": 264, "961": 264, "962": 264, "963": 264, "964": [264, 351], "965": 264, "966": 264, "967": [264, 351], "968": 264, "969": 264, "970": 264, "971": [264, 351], "972": 264, "973": 264, "975": 264, "976": [264, 302, 309, 319, 323, 345, 351, 357], "977": [264, 302, 309, 319, 323, 345, 351, 357, 980], "timeaxi": 264, "myrang": 264, "1002": [264, 698, 699, 700, 701, 933], "1004": 264, "1006": 264, "1008": 264, "1010": 264, "1012": 264, "1014": 264, "1016": 264, "1018": 264, "1020": [264, 914, 915, 923], "1022": 264, "1028": 264, "1030": 264, "1032": 264, "1034": 264, "1036": 264, "1038": 264, "1040": 264, "1042": [264, 1053], "1046": 264, "1048": 264, "1050": 264, "1052": 264, "1054": 264, "1056": 264, "1058": 264, "1060": 264, "1062": 264, "1064": 264, "1066": 264, "1068": [264, 313], "1070": [264, 313], "1072": [264, 313], "1074": 264, "1076": 264, "1078": 264, "1080": 264, "1082": 264, "1084": 264, "1086": 264, "1088": 264, "1090": 264, "1092": 264, "1094": 264, "1096": 264, "1098": 264, "1102": 264, "1104": 264, "1106": 264, "1108": 264, "1110": 264, "1114": 264, "1116": 264, "1118": 264, "1120": 264, "1122": 264, "1124": 264, "1126": 264, "1128": 264, "1130": 264, "1132": 264, "1134": 264, "1136": 264, "1138": 264, "1140": 264, "1142": 264, "1144": 264, "1146": 264, "1148": 264, "1150": [264, 1212, 1213], "1152": [264, 1212, 1213], "1154": 264, "1156": 264, "1158": 264, "1160": 264, "1162": 264, "1164": 264, "1166": 264, "1168": 264, "1170": 264, "1172": 264, "1174": 264, "1176": 264, "1178": 264, "1180": 264, "1182": 264, "1184": 264, "1186": 264, "1188": 264, "1190": 264, "1192": 264, "1194": 264, "1196": 264, "1198": 264, "1202": 264, "1204": 264, "1206": 264, "1208": 264, "1210": 264, "1212": 264, "1214": 264, "1216": 264, "1218": 264, "1220": 264, "1222": 264, "1224": 264, "1226": 264, "1228": 264, "1230": 264, "1232": 264, "1236": 264, "1238": 264, "1240": 264, "1242": 264, "1246": 264, "1248": 264, "1250": 264, "1252": 264, "1254": [264, 568, 569, 570, 582, 583, 584], "1256": 264, "1258": 264, "1260": [264, 538], "1262": 264, "1264": 264, "1266": 264, "1268": 264, "1270": 264, "1272": 264, "1274": 264, "1276": 264, "1278": 264, "1280": 264, "1282": 264, "1284": 264, "1286": 264, "1288": 264, "1290": 264, "1292": 264, "1294": 264, "1296": 264, "1298": 264, "1300": 264, "1302": 264, "1304": 264, "1306": 264, "1308": 264, "1310": 264, "1312": 264, "1314": 264, "1316": 264, "1318": 264, "1320": 264, "1322": 264, "1324": 264, "1326": 264, "1328": 264, "1330": 264, "1332": 264, "1334": 264, "1336": 264, "1338": 264, "1340": 264, "1342": [264, 1213], "1344": 264, "1346": 264, "1348": 264, "1350": 264, "1352": [264, 1021], "1354": 264, "1356": 264, "1358": 264, "1360": 264, "1362": 264, "1364": 264, "1366": 264, "1368": 264, "1370": 264, "1372": 264, "1374": 264, "1378": 264, "1380": 264, "1382": 264, "1384": 264, "1386": 264, "1388": 264, "1390": 264, "1392": [264, 549, 1213], "1394": 264, "1396": 264, "1398": 264, "1400": 264, "1402": 264, "1406": 264, "1408": 264, "1410": 264, "1412": 264, "1414": 264, "1416": [264, 1135], "1418": 264, "1420": 264, "1422": 264, "1424": 264, "1426": 264, "1428": 264, "1430": 264, "1432": 264, "1434": 264, "1436": 264, "1438": 264, "1440": 264, "1442": 264, "1444": 264, "1446": 264, "1448": 264, "1450": 264, "1452": 264, "1454": 264, "1456": 264, "1458": 264, "1460": 264, "1462": 264, "1464": 264, "1466": 264, "1468": 264, "1470": 264, "1472": 264, "1474": 264, "1476": 264, "1478": 264, "1480": 264, "1482": 264, "1484": 264, "1486": 264, "1488": 264, "1490": 264, "1492": 264, "1494": 264, "1496": 264, "1498": 264, "1502": 264, "1504": 264, "1506": 264, "1508": 264, "1510": 264, "1512": 264, "1514": 264, "1516": 264, "1518": 264, "1520": 264, "1522": 264, "1524": 264, "1526": 264, "1528": 264, "1530": 264, "1532": 264, "1534": 264, "1536": [264, 1065], "1538": 264, "1540": 264, "1542": 264, "1544": 264, "1546": 264, "1548": 264, "1550": 264, "1552": 264, "1554": 264, "1556": 264, "1558": [264, 931], "1560": 264, "1562": 264, "1564": 264, "1566": 264, "1568": 264, "1570": 264, "1572": 264, "1574": 264, "1576": 264, "1578": 264, "1580": 264, "1582": 264, "1584": 264, "1586": 264, "1588": 264, "1590": 264, "1592": 264, "1594": 264, "1596": 264, "1598": 264, "1600": 264, "1602": 264, "1604": [264, 1059], "1606": 264, "1608": 264, "1610": 264, "1612": 264, "1614": 264, "1616": 264, "1618": 264, "1620": 264, "1622": 264, "1624": 264, "1626": 264, "1628": 264, "1630": 264, "1632": 264, "1634": [264, 568, 569], "1636": 264, "1638": 264, "1640": 264, "1642": 264, "1644": 264, "1646": [264, 1212], "1648": 264, "1650": 264, "1652": 264, "1654": [264, 1068], "1656": 264, "1658": 264, "1660": [264, 1068], "1662": 264, "1664": 264, "1666": 264, "1668": 264, "1672": 264, "1674": 264, "1676": 264, "1678": 264, "1680": 264, "1682": 264, "1684": 264, "1686": 264, "1688": [264, 1066, 1067], "1690": 264, "1692": 264, "1694": 264, "1696": 264, "1698": 264, "1700": 264, "1702": 264, "1704": 264, "1706": [264, 1078], "1708": 264, "1710": 264, "1712": 264, "1714": [264, 1212], "1716": [264, 1212], "1718": 264, "1722": 264, "1724": 264, "1726": 264, "1728": 264, "1730": 264, "1732": 264, "1734": 264, "1736": 264, "1738": 264, "1740": 264, "1742": 264, "1744": 264, "1746": 264, "1748": 264, "1750": 264, "1752": 264, "1754": 264, "1756": 264, "1758": 264, "1760": 264, "1762": 264, "1764": [264, 323], "1766": 264, "1768": 264, "1770": 264, "1772": 264, "1774": 264, "1776": 264, "1778": 264, "1780": 264, "1782": 264, "1784": 264, "1786": 264, "1788": 264, "1790": 264, "1792": 264, "1794": 264, "1796": 264, "1798": 264, "1800": [264, 1065], "1802": 264, "1804": 264, "1806": 264, "1808": 264, "1810": 264, "1812": 264, "1814": 264, "1816": 264, "1818": 264, "1820": 264, "1822": 264, "1824": 264, "1826": 264, "1828": 264, "1830": 264, "1832": 264, "1834": 264, "1836": 264, "1838": 264, "1840": 264, "1842": 264, "1844": 264, "1846": 264, "1848": 264, "1850": 264, "1852": 264, "1854": 264, "1856": 264, "1858": 264, "1860": 264, "1862": 264, "1864": 264, "1866": 264, "1868": 264, "1870": 264, "1872": 264, "1874": 264, "1876": 264, "1878": 264, "1880": 264, "1882": 264, "1884": 264, "1886": 264, "1888": 264, "1890": 264, "1892": 264, "1894": 264, "1896": 264, "1898": 264, "1900": [264, 274, 1180, 1182, 1186, 1188], "1902": 264, "1904": 264, "1906": 264, "1908": 264, "1910": 264, "1912": 264, "1914": 264, "1916": 264, "1918": 264, "1920": 264, "1922": 264, "1924": 264, "1926": 264, "1928": 264, "1930": 264, "1932": 264, "1934": 264, "1938": 264, "1940": 264, "1942": 264, "1944": 264, "1946": 264, "1948": 264, "1950": 264, "1952": 264, "1954": [264, 1146], "1956": [264, 1115], "1958": 264, "1962": 264, "1964": 264, "1968": [264, 458], "1970": [264, 817], "1972": 264, "1974": 264, "1976": 264, "1978": [264, 418], "1980": [264, 643, 1065], "1984": 264, "1986": [264, 1180, 1182, 1186, 1188], "1988": [264, 418, 552], "1990": [264, 643], "1992": 264, "1994": 264, "2004": 264, "2026": 264, "2028": 264, "2030": 264, "2032": 264, "2034": 264, "2036": 264, "2038": 264, "2040": 264, "2042": 264, "2044": 264, "2046": 264, "2050": 264, "2052": 264, "2054": 264, "2056": 264, "2058": 264, "2060": 264, "2062": 264, "2064": 264, "2066": 264, "2068": 264, "2070": 264, "2072": 264, "2074": 264, "2076": 264, "2078": 264, "2080": 264, "2082": 264, "2084": 264, "2086": 264, "2088": 264, "2090": 264, "2092": 264, "2094": 264, "2096": 264, "2098": 264, "2100": 264, "2102": 264, "2104": 264, "2106": 264, "2108": 264, "2110": 264, "2112": 264, "2114": 264, "2116": 264, "2118": 264, "2120": 264, "2122": 264, "2124": 264, "2126": 264, "2128": 264, "2130": 264, "2132": 264, "2134": 264, "2136": 264, "2138": 264, "2140": 264, "2142": 264, "2144": 264, "2146": 264, "2148": 264, "2150": 264, "2152": 264, "2154": 264, "2156": 264, "2158": 264, "2160": 264, "2162": 264, "2164": 264, "2166": 264, "2168": 264, "2170": 264, "2172": 264, "2174": 264, "2176": 264, "2178": 264, "2180": 264, "2182": 264, "2184": 264, "2186": 264, "2188": 264, "2190": 264, "2192": 264, "2194": 264, "2196": [264, 838], "2198": 264, "2200": 264, "2202": 264, "2204": 264, "2206": 264, "2208": 264, "2210": 264, "2214": 264, "2216": 264, "2218": 264, "2220": 264, "2222": 264, "2224": 264, "2226": 264, "2228": 264, "2230": 264, "2232": 264, "2234": 264, "2236": 264, "2238": 264, "2240": 264, "2242": 264, "2244": 264, "2246": 264, "2248": 264, "2250": 264, "2252": 264, "2254": 264, "2256": 264, "2258": 264, "2260": 264, "2262": 264, "2264": 264, "2266": 264, "2268": 264, "2272": 264, "2274": 264, "2276": 264, "2278": 264, "2280": 264, "2282": 264, "2284": 264, "2286": 264, "2288": 264, "2290": 264, "2292": 264, "2294": 264, "2296": 264, "2298": 264, "2300": 264, "2302": 264, "2304": 264, "2306": 264, "2308": 264, "2310": 264, "2312": 264, "2314": 264, "2316": 264, "2318": 264, "2320": 264, "2322": 264, "2324": 264, "2326": 264, "2328": 264, "2330": 264, "2332": [264, 970], "2334": 264, "2336": 264, "2338": 264, "2340": 264, "2342": 264, "2344": 264, "2346": 264, "2348": 264, "2350": 264, "2352": 264, "2354": 264, "2356": 264, "2358": 264, "2360": 264, "2362": 264, "2364": [264, 1068], "2366": 264, "2368": 264, "2370": 264, "2372": 264, "2374": 264, "2376": 264, "2378": 264, "2380": 264, "2382": 264, "2384": 264, "2386": 264, "2388": 264, "2390": 264, "2392": 264, "2394": 264, "2396": 264, "2398": 264, "2400": 264, "2402": 264, "2404": 264, "2406": 264, "2408": 264, "2410": 264, "2412": 264, "2414": 264, "2416": 264, "2418": 264, "2420": 264, "2422": 264, "2424": 264, "2426": 264, "2428": 264, "2430": 264, "2432": 264, "2434": 264, "2436": 264, "2438": 264, "2440": [264, 345, 351, 357], "2442": 264, "2444": 264, "2446": 264, "2448": 264, "2450": 264, "2452": 264, "2454": 264, "2456": 264, "2458": 264, "2460": [264, 792], "2462": 264, "2464": 264, "2466": 264, "2468": 264, "2470": 264, "2472": 264, "2474": 264, "2476": 264, "2478": 264, "2480": 264, "2482": 264, "2484": 264, "2486": 264, "2488": 264, "2490": 264, "2492": 264, "2494": 264, "2496": 264, "2498": 264, "2500": 264, "2502": 264, "2504": 264, "2506": 264, "2508": 264, "2510": 264, "2512": 264, "2514": 264, "2516": 264, "2518": 264, "2520": 264, "2522": 264, "2524": 264, "2526": 264, "2528": 264, "2530": 264, "2532": 264, "2534": 264, "2536": 264, "2538": 264, "2540": 264, "2542": 264, "2544": 264, "2546": 264, "2548": 264, "2550": 264, "2552": 264, "2554": 264, "2556": 264, "2558": 264, "2560": 264, "2562": 264, "2564": 264, "2566": 264, "2568": 264, "2570": 264, "2572": 264, "2574": 264, "2576": 264, "2578": 264, "2580": 264, "2582": 264, "2584": 264, "2586": 264, "2588": 264, "2590": 264, "2592": 264, "2594": 264, "2596": 264, "2598": 264, "2600": 264, "2602": 264, "2604": 264, "2606": 264, "2608": 264, "2610": 264, "2612": 264, "2614": 264, "2616": 264, "2618": 264, "2620": 264, "2622": 264, "2624": 264, "2626": 264, "2628": 264, "2630": 264, "2632": 264, "2634": 264, "2636": 264, "2638": 264, "2640": [264, 323], "2642": 264, "2644": 264, "2646": 264, "2648": 264, "2650": 264, "2652": 264, "2654": 264, "2656": 264, "2658": 264, "2660": 264, "2662": 264, "2664": 264, "2666": 264, "2668": 264, "2670": 264, "2672": 264, "2674": 264, "2676": 264, "2678": 264, "2680": 264, "2682": 264, "2684": 264, "2686": 264, "2688": 264, "2690": 264, "2692": 264, "2694": 264, "2696": 264, "2698": 264, "2700": 264, "2702": 264, "2704": 264, "2706": [264, 269], "2708": 264, "2710": 264, "2712": 264, "2714": 264, "2716": 264, "2718": 264, "2720": 264, "2722": 264, "2724": 264, "2726": 264, "2728": 264, "2730": [264, 319], "2732": 264, "2734": 264, "2736": 264, "2738": 264, "2740": 264, "2742": 264, "2744": 264, "2746": [264, 970, 997, 1021], "2748": [264, 284, 302, 309, 341, 345, 351, 357], "2750": 264, "2752": 264, "2754": 264, "2756": 264, "2758": 264, "2760": 264, "2762": 264, "2764": 264, "2766": 264, "2768": 264, "2770": 264, "2772": 264, "2774": 264, "2776": 264, "2778": 264, "2780": 264, "2782": 264, "2784": 264, "2786": 264, "2788": 264, "2790": 264, "2792": 264, "2794": 264, "2796": 264, "2798": 264, "2800": [264, 307, 506], "2802": [264, 506], "2804": 264, "2806": 264, "2808": 264, "2810": 264, "2812": 264, "2814": 264, "2816": 264, "2818": 264, "2820": 264, "2822": 264, "2824": 264, "2826": 264, "2828": [264, 500], "2830": 264, "2832": 264, "2834": 264, "2836": 264, "2838": 264, "2840": 264, "2842": 264, "2844": 264, "2846": 264, "2848": 264, "2850": 264, "2852": 264, "2854": 264, "2856": 264, "2858": 264, "2860": 264, "2862": 264, "2864": 264, "2866": 264, "2868": 264, "2870": 264, "2872": 264, "2874": 264, "2876": 264, "2878": 264, "2880": 264, "2882": 264, "2884": 264, "2886": 264, "2888": 264, "2890": 264, "2892": 264, "2894": 264, "2896": 264, "2898": 264, "2900": 264, "2902": 264, "2904": 264, "2906": 264, "2910": 264, "2912": 264, "2914": 264, "2916": 264, "2918": 264, "2920": 264, "2922": 264, "2924": 264, "2926": 264, "2928": 264, "2930": 264, "2932": 264, "2934": 264, "2936": 264, "2938": 264, "2940": 264, "2942": 264, "2944": 264, "2946": 264, "2948": 264, "2950": 264, "2952": 264, "2954": 264, "2956": 264, "2958": 264, "2960": 264, "2962": 264, "2964": 264, "2966": 264, "2968": 264, "2970": 264, "2972": 264, "2974": 264, "2976": 264, "2978": 264, "2980": 264, "2982": 264, "2984": 264, "2986": 264, "2988": 264, "2990": 264, "2992": 264, "2994": 264, "2996": 264, "2998": 264, "3002": 264, "3004": 264, "3006": 264, "3008": 264, "3010": 264, "3012": 264, "3014": 264, "3016": 264, "3018": 264, "3020": 264, "3022": 264, "3024": 264, "3026": 264, "3028": 264, "3030": 264, "3032": 264, "3034": 264, "3036": 264, "3038": 264, "3040": 264, "3042": 264, "3044": 264, "3046": 264, "3048": 264, "3050": 264, "3052": 264, "3054": 264, "3056": 264, "3058": 264, "3060": 264, "3062": 264, "3064": 264, "3066": 264, "3068": 264, "3070": 264, "3072": 264, "3074": 264, "3076": 264, "3078": 264, "3080": 264, "3082": 264, "3084": 264, "3086": 264, "3088": 264, "3090": 264, "3092": 264, "3094": 264, "3096": 264, "3098": 264, "3100": 264, "3102": 264, "3104": 264, "3106": 264, "3108": 264, "3110": [264, 313], "3112": 264, "3114": 264, "3116": 264, "3118": 264, "3120": 264, "3122": 264, "3124": 264, "3126": 264, "3128": 264, "3130": 264, "3132": 264, "3134": 264, "3136": 264, "3138": 264, "3140": 264, "3142": 264, "3144": 264, "3146": 264, "3148": 264, "3150": 264, "3152": 264, "3154": 264, "3156": 264, "3158": 264, "3160": 264, "3162": 264, "3164": 264, "3166": 264, "3168": 264, "3170": 264, "3172": 264, "3174": 264, "3176": 264, "3178": 264, "3180": 264, "3182": 264, "3184": 264, "3186": 264, "3188": 264, "3190": 264, "3192": 264, "3194": 264, "3196": 264, "3198": 264, "3200": 264, "3202": 264, "3204": 264, "3206": 264, "3208": 264, "3210": 264, "3212": 264, "3214": 264, "3216": 264, "3218": 264, "3220": 264, "3222": 264, "3224": 264, "3226": 264, "3228": 264, "3230": 264, "3232": 264, "3234": 264, "3236": 264, "3238": 264, "3240": 264, "3242": 264, "3244": 264, "3246": 264, "3248": 264, "3250": 264, "3252": 264, "3254": 264, "3256": 264, "3258": 264, "3260": 264, "3262": 264, "3264": 264, "3266": 264, "3268": 264, "3270": 264, "3272": 264, "3274": 264, "3276": 264, "3278": 264, "3280": 264, "3282": 264, "3284": 264, "3286": 264, "3288": 264, "3290": 264, "3292": 264, "3294": 264, "3296": 264, "3298": 264, "3300": 264, "3302": 264, "3304": 264, "3306": 264, "3308": 264, "3310": 264, "3312": 264, "3314": 264, "3316": 264, "3318": 264, "3320": 264, "3322": 264, "3324": 264, "3326": 264, "3328": 264, "3330": 264, "3332": 264, "3334": 264, "3336": 264, "3338": 264, "3340": 264, "3342": 264, "3344": 264, "3346": 264, "3348": 264, "3350": 264, "3352": 264, "3354": 264, "3356": 264, "3358": 264, "3360": 264, "3362": 264, "3364": 264, "3366": 264, "3368": 264, "3370": 264, "3372": 264, "3374": 264, "3376": 264, "3378": 264, "3380": 264, "3382": 264, "3384": 264, "3386": 264, "3388": 264, "3390": 264, "3392": 264, "3394": 264, "3396": 264, "3398": 264, "3400": 264, "3402": 264, "3404": 264, "3406": 264, "3408": 264, "3410": 264, "3412": 264, "3414": 264, "3416": 264, "3418": 264, "3420": 264, "3422": 264, "3424": 264, "3426": 264, "3428": 264, "3430": 264, "3432": 264, "3434": 264, "3436": 264, "3438": 264, "3440": 264, "3442": 264, "3444": 264, "3446": 264, "3448": 264, "3450": 264, "3452": 264, "3454": 264, "3456": 264, "3458": 264, "3460": 264, "3462": 264, "3464": 264, "3466": 264, "3468": 264, "3470": 264, "3472": 264, "3474": 264, "3476": 264, "3478": 264, "3480": 264, "3482": 264, "3484": 264, "3486": 264, "3488": 264, "3490": 264, "3492": 264, "3494": 264, "3496": 264, "3498": 264, "3500": 264, "3502": 264, "3504": 264, "3506": 264, "3508": 264, "3510": 264, "3512": 264, "3514": 264, "3516": 264, "3518": 264, "3520": 264, "3522": 264, "3524": 264, "3526": 264, "3528": 264, "3530": 264, "3532": 264, "3534": 264, "3536": 264, "3538": 264, "3540": 264, "3542": 264, "3544": 264, "3546": 264, "3548": 264, "3550": 264, "3552": 264, "3554": 264, "3556": 264, "3558": 264, "3560": 264, "3562": 264, "3564": 264, "3566": 264, "3568": 264, "3570": 264, "3572": 264, "3574": 264, "3576": 264, "3578": 264, "3580": 264, "3582": 264, "3584": 264, "3586": 264, "3588": 264, "3590": 264, "3592": 264, "3594": 264, "3596": 264, "3598": 264, "3602": 264, "3604": 264, "3606": 264, "3608": 264, "3610": 264, "3612": 264, "3614": 264, "3616": 264, "3618": 264, "3620": 264, "3622": 264, "3624": 264, "3626": 264, "3628": 264, "3630": 264, "3632": 264, "3634": 264, "3636": 264, "3638": 264, "3640": 264, "3642": 264, "3644": 264, "3646": 264, "3648": 264, "3650": 264, "3652": 264, "3654": 264, "3656": 264, "3658": 264, "3660": 264, "3662": 264, "3664": 264, "3666": 264, "3668": 264, "3670": 264, "3672": 264, "3674": 264, "3676": 264, "3678": 264, "3680": 264, "3682": 264, "3684": 264, "3686": 264, "3688": 264, "3690": 264, "3692": 264, "3694": 264, "3696": 264, "3698": 264, "3700": 264, "3702": 264, "3704": 264, "3706": 264, "3708": 264, "3710": 264, "3712": 264, "3714": 264, "3716": 264, "3718": 264, "3720": 264, "3722": [264, 1018], "3724": 264, "3726": 264, "3728": 264, "3730": 264, "3732": 264, "3734": 264, "3736": 264, "3738": 264, "3740": 264, "3742": 264, "3744": 264, "3746": 264, "3748": 264, "3750": 264, "3752": 264, "3754": 264, "3756": 264, "3758": 264, "3760": 264, "3762": 264, "3764": 264, "3766": 264, "3768": 264, "3770": [264, 313], "3772": 264, "3774": 264, "3776": 264, "3778": 264, "3780": 264, "3782": 264, "3784": 264, "3786": 264, "3788": 264, "3790": [264, 1213], "3792": [264, 1213], "3794": [264, 1213], "3796": [264, 1213], "3798": [264, 1213], "3800": [264, 1213], "3802": [264, 1213], "3804": 264, "3806": 264, "3808": 264, "3810": 264, "3812": 264, "3814": 264, "3816": 264, "3818": 264, "3820": 264, "3822": 264, "3824": 264, "3826": 264, "3828": 264, "3830": 264, "3832": 264, "3834": 264, "3836": 264, "3838": 264, "3840": 264, "3842": 264, "3844": 264, "3846": 264, "3848": 264, "3850": 264, "3852": 264, "3854": 264, "3856": 264, "3858": 264, "3860": 264, "3862": 264, "3864": 264, "3866": 264, "3868": 264, "3870": 264, "3872": 264, "3874": 264, "3876": 264, "3878": 264, "3880": 264, "3882": 264, "3884": 264, "3886": 264, "3888": 264, "3890": 264, "3892": 264, "3894": 264, "3896": 264, "3898": 264, "3900": 264, "3902": 264, "3904": 264, "3906": 264, "3908": 264, "3910": 264, "3912": 264, "3914": 264, "3916": 264, "3918": 264, "3920": 264, "3922": 264, "3924": 264, "3926": 264, "3928": 264, "3930": 264, "3932": 264, "3934": 264, "3936": 264, "3938": 264, "3940": 264, "3942": 264, "3946": 264, "3948": 264, "3950": 264, "3952": 264, "3954": 264, "3956": 264, "3958": 264, "3960": 264, "3962": 264, "3964": 264, "3966": 264, "3968": 264, "3970": 264, "3972": 264, "3974": 264, "3976": 264, "3978": 264, "3980": 264, "3982": 264, "3984": 264, "3986": 264, "3988": 264, "3990": 264, "3992": 264, "3994": 264, "3996": 264, "3998": 264, "4002": 264, "4004": 264, "4006": 264, "4008": 264, "4010": 264, "4012": 264, "4014": 264, "4016": 264, "4018": 264, "4020": 264, "4022": 264, "4024": 264, "4026": 264, "4028": 264, "4030": 264, "4032": 264, "4034": 264, "4036": 264, "4038": 264, "4040": 264, "4042": 264, "4044": 264, "4046": 264, "4048": 264, "4050": 264, "4052": 264, "4054": 264, "4056": 264, "4058": 264, "4060": 264, "4062": 264, "4064": 264, "4066": 264, "4068": 264, "4070": 264, "4072": 264, "4074": 264, "4076": 264, "4078": 264, "4080": 264, "4082": 264, "4084": 264, "4086": 264, "4088": 264, "4090": 264, "4092": 264, "4094": 264, "4098": 264, "4100": 264, "4102": 264, "4104": 264, "4106": 264, "4108": 264, "4110": 264, "4112": 264, "4114": 264, "4116": 264, "4118": 264, "4120": 264, "4122": 264, "4124": 264, "4126": 264, "4128": 264, "4130": 264, "4132": 264, "4134": 264, "4136": 264, "4138": 264, "4140": 264, "4142": 264, "4144": 264, "4146": 264, "4148": 264, "4150": 264, "4152": 264, "4154": 264, "4156": 264, "4158": 264, "4160": 264, "4162": 264, "4164": 264, "4166": 264, "4168": 264, "4170": 264, "4172": 264, "4174": 264, "4176": 264, "4178": 264, "4180": 264, "4182": 264, "4184": 264, "4186": 264, "4188": 264, "4190": 264, "4192": 264, "4194": 264, "4196": 264, "4198": 264, "4200": 264, "4202": 264, "4204": 264, "4206": 264, "4208": 264, "4210": 264, "4212": 264, "4214": 264, "4216": 264, "4218": 264, "4220": 264, "4222": 264, "4224": 264, "4226": 264, "4228": 264, "4230": 264, "4232": 264, "4234": [264, 1213], "4236": [264, 1213], "4238": [264, 1213], "4240": 264, "4242": 264, "4244": 264, "4246": 264, "4248": 264, "4250": 264, "4252": 264, "4254": 264, "4256": 264, "4258": 264, "4260": 264, "4262": 264, "4264": 264, "4266": 264, "4268": 264, "4270": 264, "4272": 264, "4274": 264, "4276": 264, "4278": 264, "4280": 264, "4282": 264, "4284": 264, "4286": 264, "4288": 264, "4290": 264, "4292": 264, "4294": 264, "4296": 264, "4298": 264, "4300": 264, "4302": 264, "4304": 264, "4306": 264, "4308": 264, "4310": 264, "4312": 264, "4314": 264, "4316": 264, "4318": 264, "4320": 264, "4322": 264, "4324": 264, "4326": 264, "4328": 264, "4330": 264, "4332": 264, "4334": 264, "4336": 264, "4338": 264, "4340": 264, "4342": 264, "4344": 264, "4346": 264, "4348": 264, "4350": 264, "4352": 264, "4354": 264, "4356": 264, "4358": 264, "4360": 264, "4362": 264, "4364": 264, "4366": 264, "4368": 264, "4370": 264, "4372": 264, "4374": 264, "4376": 264, "4378": 264, "4380": 264, "4382": 264, "4384": 264, "4386": 264, "4388": 264, "4390": 264, "4392": 264, "4394": 264, "4396": 264, "4398": 264, "4400": 264, "4402": 264, "4404": 264, "4406": 264, "4408": 264, "4410": 264, "4412": 264, "4414": 264, "4416": 264, "4418": 264, "4420": 264, "4422": 264, "4424": 264, "4426": 264, "4428": 264, "4430": 264, "4432": 264, "4434": 264, "4436": 264, "4438": 264, "4440": 264, "4442": 264, "4444": 264, "4446": 264, "4448": 264, "4450": 264, "4452": 264, "4454": 264, "4456": 264, "4458": 264, "4460": 264, "4462": 264, "4464": 264, "4466": 264, "4468": 264, "4470": 264, "4472": 264, "4474": 264, "4476": 264, "4478": 264, "4480": 264, "4482": 264, "4484": 264, "4486": 264, "4488": 264, "4490": 264, "4492": 264, "4494": 264, "4496": 264, "4498": 264, "4502": 264, "4504": 264, "4506": 264, "4508": 264, "4510": 264, "4512": 264, "4514": 264, "4516": 264, "4518": 264, "4520": 264, "4522": 264, "4524": 264, "4526": 264, "4528": 264, "4530": 264, "4532": 264, "4534": 264, "4536": 264, "4538": 264, "4540": 264, "4542": 264, "4544": 264, "4546": 264, "4548": 264, "4550": 264, "4552": 264, "4554": 264, "4556": 264, "4558": 264, "4560": 264, "4562": 264, "4564": 264, "4566": 264, "4568": 264, "4570": 264, "4572": 264, "4574": 264, "4578": 264, "4580": 264, "4582": 264, "4584": 264, "4586": 264, "4588": 264, "4590": 264, "4592": 264, "4594": 264, "4596": 264, "4598": 264, "4600": 264, "4602": 264, "4604": 264, "4606": 264, "4608": 264, "4610": 264, "4612": 264, "4614": 264, "4616": 264, "4618": 264, "4620": 264, "4622": 264, "4624": 264, "4626": 264, "4628": [264, 277], "4630": [264, 500], "4632": 264, "4634": 264, "4636": 264, "4638": 264, "4640": 264, "4642": 264, "4644": 264, "4646": 264, "4648": 264, "4650": 264, "4652": 264, "4654": 264, "4656": 264, "4658": 264, "4662": 264, "4664": 264, "4666": 264, "4668": 264, "4670": 264, "4672": 264, "4674": 264, "4676": 264, "4680": 264, "4682": 264, "4684": 264, "4686": 264, "4688": 264, "4690": 264, "4692": 264, "4694": 264, "4696": 264, "4698": 264, "4700": 264, "4702": 264, "4704": 264, "4706": 264, "4708": 264, "4710": 264, "4712": 264, "4714": 264, "4716": 264, "4718": 264, "4720": 264, "4722": 264, "4724": 264, "4726": 264, "4728": 264, "4730": 264, "4732": 264, "4734": 264, "4736": 264, "4738": 264, "4740": 264, "4742": 264, "4744": 264, "4746": 264, "4748": 264, "4750": 264, "4752": 264, "4754": 264, "4756": 264, "4758": 264, "4760": 264, "4762": 264, "4764": 264, "4766": 264, "4768": 264, "4770": 264, "4772": 264, "4774": 264, "4776": 264, "4778": 264, "4780": 264, "4782": 264, "4784": 264, "4786": 264, "4788": 264, "4790": 264, "4792": 264, "4794": 264, "4796": 264, "4798": 264, "4802": 264, "4804": 264, "4806": 264, "4808": 264, "4810": 264, "4812": 264, "4814": 264, "4816": 264, "4818": 264, "4820": 264, "4822": 264, "4824": 264, "4826": 264, "4828": 264, "4830": 264, "4832": 264, "4834": 264, "4836": 264, "4838": 264, "4840": 264, "4842": 264, "4844": 264, "4846": 264, "4848": 264, "4850": 264, "4852": 264, "4854": 264, "4856": 264, "4858": 264, "4860": 264, "4862": 264, "4864": 264, "4866": [264, 274], "4868": 264, "4870": 264, "4872": 264, "4874": 264, "4876": 264, "4878": 264, "4880": 264, "4882": [264, 933], "4884": 264, "4886": 264, "4888": 264, "4890": 264, "4892": 264, "4894": 264, "4896": 264, "4898": 264, "4900": 264, "4902": 264, "4904": 264, "4906": 264, "4908": 264, "4910": 264, "4912": 264, "4914": 264, "4916": 264, "4918": 264, "4920": 264, "4922": 264, "4924": 264, "4926": [264, 277], "4928": 264, "4930": 264, "4932": 264, "4934": 264, "4936": 264, "4938": 264, "4940": 264, "4942": 264, "4944": 264, "4946": 264, "4948": 264, "4950": [264, 281], "4952": 264, "4954": 264, "4956": 264, "4958": 264, "4960": 264, "4962": 264, "4964": 264, "4966": 264, "4968": 264, "4970": 264, "4972": 264, "4974": 264, "4976": 264, "4978": 264, "4980": 264, "4982": 264, "4984": 264, "4986": 264, "4988": 264, "4990": 264, "4992": 264, "4994": 264, "4996": 264, "4998": 264, "5002": 264, "5004": 264, "5006": 264, "5008": 264, "5010": 264, "5012": 264, "5014": 264, "5016": 264, "5018": 264, "5020": 264, "5022": 264, "5024": 264, "5026": 264, "5028": 264, "5030": 264, "5032": 264, "5034": 264, "5036": 264, "5038": 264, "5040": 264, "5042": 264, "5044": 264, "5046": 264, "5048": 264, "5052": 264, "5054": 264, "5056": 264, "5058": 264, "5060": 264, "5062": 264, "5064": 264, "5066": 264, "5068": 264, "5070": 264, "5072": 264, "5074": 264, "5076": 264, "5078": 264, "5080": [264, 970], "5082": 264, "5084": 264, "5086": 264, "5088": 264, "5090": 264, "5092": 264, "5094": 264, "5096": 264, "5098": 264, "5100": 264, "5102": 264, "5104": 264, "5106": 264, "5108": 264, "5110": 264, "5112": 264, "5114": 264, "5116": 264, "5118": 264, "5120": 264, "5122": 264, "5124": 264, "5126": 264, "5128": 264, "5130": 264, "5132": 264, "5134": 264, "5136": 264, "5138": 264, "5140": 264, "5142": 264, "5144": 264, "5146": 264, "5148": 264, "5150": 264, "5152": 264, "5154": 264, "5156": 264, "5158": 264, "5160": 264, "5162": 264, "5164": 264, "5166": 264, "5168": 264, "5170": 264, "5172": 264, "5174": 264, "5176": 264, "5178": 264, "5180": 264, "5182": 264, "5184": 264, "5186": 264, "5188": 264, "5190": 264, "5192": 264, "5194": 264, "5196": 264, "5198": 264, "5200": 264, "5202": 264, "5204": 264, "5206": 264, "5208": 264, "5210": 264, "5212": 264, "5214": 264, "5216": 264, "5218": 264, "5220": 264, "5222": 264, "5224": 264, "5226": 264, "5228": 264, "5230": 264, "5232": 264, "5234": 264, "5236": 264, "5238": 264, "5240": 264, "5242": 264, "5244": 264, "5246": 264, "5248": 264, "5250": 264, "5252": 264, "5254": 264, "5256": 264, "5258": 264, "5260": 264, "5262": 264, "5264": 264, "5266": 264, "5268": 264, "5270": 264, "5272": 264, "5274": 264, "5276": 264, "5278": 264, "5280": 264, "5282": 264, "5284": 264, "5286": 264, "5288": 264, "5290": 264, "5292": 264, "5294": 264, "5296": 264, "5298": 264, "5300": 264, "5302": 264, "5304": 264, "5306": 264, "5308": 264, "5310": 264, "5312": 264, "5314": 264, "5316": 264, "5318": 264, "5320": 264, "5322": 264, "5324": 264, "5326": 264, "5328": 264, "5330": 264, "5332": 264, "5334": 264, "5336": 264, "5338": 264, "5340": 264, "5342": 264, "5344": 264, "5346": 264, "5348": 264, "5350": 264, "5352": 264, "5354": 264, "5356": 264, "5358": 264, "5360": 264, "5362": [264, 307, 506], "5364": 264, "5366": 264, "5368": 264, "5370": 264, "5372": 264, "5374": 264, "5376": 264, "5378": 264, "5380": 264, "5382": 264, "5384": 264, "5386": 264, "5388": 264, "5390": 264, "5392": 264, "5394": 264, "5396": 264, "5398": 264, "5400": 264, "5402": 264, "5404": 264, "5406": 264, "5408": 264, "5410": [264, 500], "5412": 264, "5414": 264, "5416": 264, "5418": 264, "5420": 264, "5422": 264, "5424": 264, "5426": 264, "5428": 264, "5430": 264, "5432": 264, "5434": 264, "5436": 264, "5438": 264, "5440": 264, "5442": 264, "5444": 264, "5446": 264, "5448": 264, "5450": 264, "5452": 264, "5454": 264, "5456": 264, "5458": 264, "5460": 264, "5462": 264, "5464": 264, "5466": 264, "5468": 264, "5470": 264, "5472": 264, "5474": 264, "5476": 264, "5478": 264, "5480": 264, "5482": 264, "5484": 264, "5486": 264, "5488": 264, "5490": 264, "5492": 264, "5494": 264, "5496": 264, "5498": 264, "5500": 264, "5502": 264, "5504": 264, "5506": 264, "5508": 264, "5510": 264, "5512": 264, "5514": 264, "5516": 264, "5518": 264, "5520": 264, "5522": 264, "5524": 264, "5526": 264, "5528": 264, "5530": 264, "5532": 264, "5534": 264, "5536": 264, "5538": 264, "5540": 264, "5542": 264, "5544": 264, "5546": 264, "5548": 264, "5550": 264, "5552": 264, "5554": 264, "5556": 264, "5558": 264, "5560": 264, "5562": 264, "5564": 264, "5566": 264, "5568": 264, "5570": 264, "5572": 264, "5574": 264, "5576": 264, "5578": 264, "5580": 264, "5582": 264, "5584": 264, "5586": 264, "5588": 264, "5590": 264, "5592": 264, "5594": 264, "5596": 264, "5598": 264, "5600": 264, "5602": 264, "5604": 264, "5606": 264, "5608": 264, "5610": 264, "5612": 264, "5614": 264, "5616": 264, "5618": 264, "5620": 264, "5622": 264, "5624": 264, "5626": 264, "5628": 264, "5630": 264, "5632": 264, "5634": 264, "5636": 264, "5638": 264, "5640": 264, "5642": 264, "5644": 264, "5646": 264, "5648": 264, "5650": 264, "5652": 264, "5654": 264, "5656": 264, "5658": 264, "5660": 264, "5662": 264, "5664": 264, "5666": 264, "5668": 264, "5670": 264, "5672": 264, "5674": 264, "5676": 264, "5678": [264, 1004], "5680": 264, "5682": 264, "5684": 264, "5686": 264, "5688": 264, "5690": 264, "5692": 264, "5694": 264, "5696": 264, "5698": 264, "5700": 264, "5702": 264, "5704": 264, "5706": 264, "5708": 264, "5710": 264, "5712": 264, "5714": 264, "5716": 264, "5718": 264, "5720": 264, "5722": 264, "5724": 264, "5726": 264, "5728": 264, "5730": 264, "5732": 264, "5734": 264, "5736": 264, "5738": 264, "5740": 264, "5742": 264, "5744": 264, "5746": 264, "5748": 264, "5750": 264, "5752": 264, "5754": 264, "5756": 264, "5758": 264, "5760": 264, "5762": 264, "5764": 264, "5766": 264, "5768": 264, "5770": 264, "5772": 264, "5774": 264, "5776": 264, "5778": 264, "5780": 264, "5782": 264, "5784": 264, "5786": 264, "5788": 264, "5790": 264, "5792": 264, "5794": 264, "5796": 264, "5798": 264, "5800": 264, "5802": 264, "5804": 264, "5806": 264, "5808": 264, "5810": 264, "5812": 264, "5814": 264, "5816": 264, "5818": 264, "5820": 264, "5822": 264, "5824": 264, "5826": 264, "5828": 264, "5830": 264, "5832": [264, 274], "5834": 264, "5836": 264, "5838": 264, "5840": 264, "5842": 264, "5844": 264, "5846": 264, "5848": 264, "5850": 264, "5852": 264, "5854": 264, "5856": 264, "5858": 264, "5860": 264, "5862": 264, "5864": 264, "5866": 264, "5868": 264, "5870": 264, "5872": 264, "5874": 264, "5876": 264, "5878": 264, "5880": 264, "5882": 264, "5884": 264, "5886": 264, "5888": 264, "5890": 264, "5892": 264, "5894": 264, "5896": 264, "5898": 264, "5900": 264, "5902": 264, "5904": 264, "5906": 264, "5908": 264, "5910": 264, "5912": 264, "5914": 264, "5916": 264, "5918": 264, "5920": 264, "5922": 264, "5924": 264, "5926": 264, "5928": 264, "5930": 264, "5932": 264, "5934": 264, "5936": 264, "5938": 264, "5940": 264, "5942": 264, "5944": 264, "5946": 264, "5948": 264, "5950": 264, "5952": 264, "5954": 264, "5956": 264, "5958": 264, "5960": 264, "5962": 264, "5964": 264, "5966": 264, "5968": 264, "5970": 264, "5972": 264, "5974": 264, "5976": 264, "5978": 264, "5980": 264, "5982": 264, "5984": 264, "5986": 264, "5988": 264, "5990": 264, "5992": 264, "5994": 264, "5996": 264, "5998": 264, "6000": [264, 1106], "6002": 264, "6004": 264, "6006": 264, "6008": 264, "6010": 264, "6012": 264, "6014": 264, "6016": 264, "6018": 264, "6020": 264, "6022": 264, "6024": 264, "6026": 264, "6028": 264, "6030": 264, "6032": 264, "6034": 264, "6036": 264, "6038": 264, "6040": 264, "6042": 264, "6044": 264, "6046": 264, "6048": 264, "6050": 264, "6052": 264, "6054": 264, "6056": 264, "6058": 264, "6060": 264, "6062": 264, "6064": 264, "6066": 264, "6068": 264, "6070": 264, "6072": 264, "6074": 264, "6076": 264, "6078": 264, "6080": 264, "6082": 264, "6084": 264, "6086": 264, "6088": 264, "6090": 264, "6092": 264, "6094": 264, "6096": 264, "6098": 264, "6100": 264, "6102": 264, "6104": 264, "6106": 264, "6108": 264, "6110": 264, "6112": 264, "6114": 264, "6116": 264, "6118": 264, "6120": 264, "6122": 264, "6124": 264, "6126": 264, "6128": 264, "6130": 264, "6132": 264, "6134": 264, "6136": 264, "6138": 264, "6140": 264, "6142": 264, "6144": 264, "6146": 264, "6148": 264, "6150": 264, "6152": 264, "6154": 264, "6156": 264, "6158": 264, "6160": 264, "6162": 264, "6164": 264, "6166": 264, "6168": 264, "6170": 264, "6172": 264, "6174": 264, "6176": 264, "6178": 264, "6180": 264, "6182": 264, "6184": 264, "6186": 264, "6188": 264, "6190": 264, "6192": 264, "6194": 264, "6196": 264, "6198": 264, "6200": 264, "6202": 264, "6204": 264, "6206": 264, "6208": 264, "6210": 264, "6212": 264, "6214": 264, "6216": 264, "6218": 264, "6220": 264, "6222": 264, "6224": 264, "6226": 264, "6228": 264, "6230": 264, "6232": 264, "6234": 264, "6236": 264, "6238": 264, "6240": 264, "6242": 264, "6244": 264, "6246": 264, "6248": 264, "6250": 264, "6252": 264, "6254": 264, "6256": 264, "6258": 264, "6260": 264, "6262": 264, "6264": 264, "6266": 264, "6268": 264, "6270": 264, "6272": 264, "6274": 264, "6276": 264, "6278": 264, "6280": 264, "6282": 264, "6284": 264, "6286": 264, "6288": 264, "6290": 264, "6292": 264, "6294": 264, "6296": 264, "6298": 264, "6300": 264, "6302": 264, "6304": 264, "6306": 264, "6308": 264, "6310": 264, "6312": 264, "6314": 264, "6316": 264, "6318": 264, "6320": 264, "6322": 264, "6324": 264, "6326": 264, "6328": 264, "6330": 264, "6332": 264, "6334": 264, "6336": 264, "6338": 264, "6340": 264, "6342": 264, "6344": 264, "6346": 264, "6348": 264, "6350": 264, "6352": 264, "6354": 264, "6356": 264, "6358": 264, "6360": 264, "6362": 264, "6364": 264, "6366": 264, "6368": 264, "6370": 264, "6372": 264, "6374": 264, "6376": 264, "6378": 264, "6380": 264, "6382": 264, "6384": 264, "6386": 264, "6388": 264, "6390": 264, "6392": 264, "6394": 264, "6396": 264, "6398": 264, "6400": 264, "6402": 264, "6404": 264, "6406": 264, "6408": 264, "6410": 264, "6412": 264, "6414": 264, "6416": 264, "6418": 264, "6420": 264, "6422": 264, "6424": 264, "6426": 264, "6428": 264, "6430": 264, "6432": 264, "6434": 264, "6436": 264, "6438": 264, "6440": 264, "6442": 264, "6444": 264, "6446": 264, "6448": 264, "6450": 264, "6452": 264, "6454": 264, "6456": 264, "6458": 264, "6460": 264, "6462": 264, "6464": 264, "6466": 264, "6468": 264, "6470": 264, "6472": 264, "6474": 264, "6476": 264, "6478": 264, "6480": 264, "6482": 264, "6484": 264, "6486": 264, "6488": 264, "6490": 264, "6492": 264, "6494": 264, "6496": 264, "6498": 264, "6500": 264, "6502": 264, "6504": 264, "6506": 264, "6508": 264, "6510": 264, "6512": 264, "6514": 264, "6516": 264, "6518": 264, "6520": 264, "6522": 264, "6524": 264, "6526": 264, "6528": 264, "6530": 264, "6532": 264, "6534": 264, "6536": 264, "6538": 264, "6540": 264, "6542": 264, "6544": 264, "6546": 264, "6548": 264, "6550": 264, "6552": 264, "6554": 264, "6556": 264, "6558": 264, "6560": 264, "6562": 264, "6564": 264, "6566": 264, "6568": 264, "6570": 264, "6572": 264, "6574": 264, "6576": 264, "6578": 264, "6580": 264, "6582": 264, "6584": 264, "6586": 264, "6588": 264, "6590": 264, "6592": 264, "6594": 264, "6596": 264, "6598": 264, "6600": 264, "6602": 264, "6604": 264, "6606": 264, "6608": 264, "6610": 264, "6612": 264, "6614": 264, "6616": 264, "6618": 264, "6620": 264, "6622": 264, "6624": 264, "6626": 264, "6628": 264, "6630": 264, "6632": 264, "6634": 264, "6636": 264, "6638": 264, "6640": 264, "6642": 264, "6644": 264, "6646": 264, "6648": 264, "6650": 264, "6652": 264, "6654": 264, "6656": 264, "6658": 264, "6660": 264, "6662": 264, "6664": 264, "6666": 264, "6668": 264, "6670": 264, "6672": 264, "6674": 264, "6676": 264, "6678": 264, "6680": 264, "6682": 264, "6684": 264, "6686": 264, "6688": 264, "6690": 264, "6692": 264, "6694": 264, "6696": 264, "6698": 264, "6700": 264, "6702": 264, "6704": 264, "6706": 264, "6708": 264, "6710": 264, "6714": 264, "6716": [264, 287], "6718": 264, "6720": 264, "6722": 264, "6724": 264, "6726": 264, "6728": 264, "6730": 264, "6732": 264, "6734": 264, "6736": 264, "6738": 264, "6740": 264, "6742": 264, "6744": 264, "6746": 264, "6748": 264, "6750": 264, "6752": 264, "6754": 264, "6756": 264, "6758": 264, "6760": 264, "6762": 264, "6764": 264, "6766": 264, "6768": 264, "6770": 264, "6772": 264, "6774": 264, "6776": 264, "6778": 264, "6780": 264, "6782": 264, "6784": 264, "6786": 264, "6788": 264, "6790": 264, "6792": 264, "6794": 264, "6796": 264, "6798": 264, "6800": 264, "6802": 264, "6804": 264, "6806": 264, "6808": 264, "6810": 264, "6812": 264, "6814": 264, "6816": 264, "6818": 264, "6820": 264, "6822": 264, "6824": 264, "6826": 264, "6828": 264, "6830": 264, "6832": 264, "6834": 264, "6836": 264, "6838": 264, "6840": 264, "6842": 264, "6844": 264, "6846": 264, "6848": 264, "6850": 264, "6852": 264, "6854": 264, "6856": 264, "6858": [264, 313], "6860": 264, "6862": 264, "6864": 264, "6866": 264, "6868": 264, "6870": 264, "6872": 264, "6874": 264, "6876": 264, "6878": 264, "6880": 264, "6882": 264, "6884": 264, "6886": 264, "6888": 264, "6890": 264, "6892": 264, "6894": 264, "6896": 264, "6898": 264, "6900": 264, "6902": 264, "6904": 264, "6906": 264, "6908": 264, "6910": 264, "6912": 264, "6914": 264, "6916": 264, "6918": 264, "6920": 264, "6922": 264, "6924": 264, "6926": 264, "6928": 264, "6930": 264, "6932": 264, "6934": 264, "6936": 264, "6938": 264, "6940": 264, "6942": 264, "6944": 264, "6946": 264, "6948": 264, "6950": 264, "6952": 264, "6954": 264, "6956": 264, "6958": 264, "6960": 264, "6962": 264, "6964": 264, "6966": 264, "6968": 264, "6970": 264, "6972": 264, "6974": 264, "6976": 264, "6978": 264, "6980": 264, "6982": 264, "6984": 264, "6986": 264, "6988": 264, "6990": 264, "6992": 264, "6994": 264, "6996": 264, "6998": 264, "7000": 264, "7002": 264, "7004": 264, "7006": 264, "7008": 264, "7010": 264, "7012": 264, "7014": 264, "7016": 264, "7018": 264, "7020": 264, "7022": 264, "7024": 264, "7026": 264, "7028": 264, "7030": 264, "7032": 264, "7034": 264, "7036": 264, "7038": 264, "7040": 264, "7042": 264, "7044": 264, "7046": 264, "7048": 264, "7050": 264, "7052": 264, "7054": 264, "7056": 264, "7058": 264, "7060": 264, "7062": 264, "7064": 264, "7066": 264, "7068": 264, "7070": 264, "7072": 264, "7074": 264, "7076": 264, "7078": 264, "7080": [264, 1213], "7082": 264, "7084": 264, "7086": 264, "7088": [264, 1213], "7090": 264, "7092": 264, "7094": 264, "7096": 264, "7098": 264, "7100": 264, "7102": 264, "7104": 264, "7106": 264, "7108": 264, "7110": 264, "7112": 264, "7114": 264, "7116": 264, "7118": 264, "7120": 264, "7122": 264, "7124": 264, "7126": 264, "7128": 264, "7130": 264, "7132": 264, "7134": 264, "7136": 264, "7138": 264, "7140": 264, "7142": 264, "7144": 264, "7146": 264, "7148": 264, "7150": 264, "7152": 264, "7154": 264, "7156": 264, "7158": 264, "7160": 264, "7162": 264, "7164": 264, "7166": 264, "7168": 264, "7170": 264, "7172": 264, "7174": 264, "7176": 264, "7178": 264, "7180": 264, "7182": 264, "7184": 264, "7186": 264, "7188": 264, "7190": 264, "7192": 264, "7194": 264, "7196": 264, "7198": 264, "7200": 264, "7202": 264, "7204": 264, "7206": 264, "7208": 264, "7210": 264, "7212": 264, "7214": 264, "7216": 264, "7218": 264, "7220": 264, "7222": 264, "7224": 264, "7226": 264, "7228": 264, "7230": 264, "7232": 264, "7234": 264, "7236": 264, "7238": 264, "7240": 264, "7242": 264, "7244": 264, "7246": 264, "7248": 264, "7250": 264, "7252": 264, "7254": 264, "7256": 264, "7258": 264, "7260": 264, "7262": 264, "7264": 264, "7266": 264, "7268": 264, "7270": 264, "7272": 264, "7274": 264, "7276": 264, "7278": 264, "7280": 264, "7282": 264, "7284": 264, "7286": 264, "7288": 264, "7290": 264, "7292": 264, "7294": 264, "7296": 264, "7298": 264, "7300": 264, "7302": 264, "7304": 264, "7306": 264, "7308": 264, "7310": 264, "7312": 264, "7314": 264, "7316": 264, "7318": 264, "7320": 264, "7322": 264, "7324": 264, "7326": 264, "7328": 264, "7330": 264, "7332": 264, "7334": 264, "7336": 264, "7338": 264, "7340": 264, "7342": 264, "7344": 264, "7346": 264, "7348": 264, "7350": 264, "7352": 264, "7354": 264, "7356": 264, "7358": 264, "7360": 264, "7362": 264, "7364": 264, "7366": 264, "7368": 264, "7370": 264, "7372": 264, "7374": 264, "7376": 264, "7378": 264, "7380": 264, "7382": 264, "7384": 264, "7386": 264, "7388": 264, "7392": 264, "7394": 264, "7396": 264, "7398": 264, "7400": 264, "7402": 264, "7404": 264, "7406": 264, "7408": 264, "7410": 264, "7412": 264, "7414": 264, "7416": 264, "7418": 264, "7420": 264, "7422": 264, "7424": 264, "7426": 264, "7428": 264, "7430": 264, "7432": 264, "7434": 264, "7436": 264, "7438": 264, "7440": 264, "7442": 264, "7444": 264, "7446": 264, "7448": 264, "7450": 264, "7452": 264, "7454": 264, "7456": 264, "7458": 264, "7460": 264, "7462": 264, "7464": 264, "7466": 264, "7468": 264, "7470": 264, "7472": 264, "7474": 264, "7476": 264, "7478": 264, "7480": 264, "7482": 264, "7484": 264, "7486": 264, "7488": 264, "7490": 264, "7492": 264, "7494": 264, "7496": 264, "7498": 264, "7500": 264, "7502": 264, "7504": 264, "7506": 264, "7508": 264, "7510": 264, "7512": 264, "7514": 264, "7516": 264, "7518": 264, "7520": 264, "7522": 264, "7524": 264, "7526": 264, "7528": 264, "7530": 264, "7532": 264, "7534": 264, "7536": 264, "7538": 264, "7540": 264, "7542": 264, "7544": 264, "7546": 264, "7548": 264, "7550": 264, "7552": 264, "7554": 264, "7556": 264, "7558": 264, "7560": 264, "7562": 264, "7564": 264, "7566": 264, "7568": 264, "7570": 264, "7572": 264, "7574": 264, "7576": 264, "7578": 264, "7580": 264, "7582": 264, "7584": 264, "7586": 264, "7588": 264, "7590": 264, "7592": 264, "7594": 264, "7596": 264, "7598": 264, "7600": 264, "7602": 264, "7604": 264, "7606": 264, "7608": 264, "7610": 264, "7612": 264, "7614": 264, "7616": 264, "7618": 264, "7620": 264, "7622": 264, "7624": 264, "7626": 264, "7628": 264, "7630": 264, "7632": 264, "7634": 264, "7636": 264, "7638": 264, "7640": 264, "7642": 264, "7644": 264, "7646": 264, "7648": 264, "7650": 264, "7652": 264, "7654": 264, "7656": 264, "7658": 264, "7660": 264, "7662": 264, "7664": 264, "7666": 264, "7668": 264, "7670": 264, "7672": 264, "7674": 264, "7676": 264, "7678": 264, "7680": 264, "7682": 264, "7684": 264, "7686": 264, "7688": 264, "7690": 264, "7692": 264, "7694": 264, "7696": 264, "7698": 264, "7700": 264, "7702": 264, "7704": 264, "7706": 264, "7708": 264, "7710": 264, "7712": 264, "7714": 264, "7716": 264, "7718": 264, "7720": 264, "7722": 264, "7724": 264, "7726": 264, "7728": 264, "7730": 264, "7732": 264, "7734": 264, "7736": 264, "7738": 264, "7740": 264, "7742": 264, "7744": 264, "7746": 264, "7748": 264, "7750": 264, "7752": 264, "7754": 264, "7756": 264, "7758": 264, "7760": 264, "7762": 264, "7764": 264, "7766": 264, "7768": 264, "7770": 264, "7772": 264, "7774": 264, "7776": 264, "7778": 264, "7780": 264, "7782": 264, "7784": 264, "7786": 264, "7788": 264, "7790": 264, "7792": 264, "7794": 264, "7796": 264, "7798": 264, "7800": 264, "7802": 264, "7804": 264, "7806": 264, "7808": 264, "7810": 264, "7812": 264, "7814": 264, "7816": 264, "7818": 264, "7820": 264, "7822": 264, "7824": 264, "7826": 264, "7828": 264, "7830": 264, "7832": 264, "7834": 264, "7836": 264, "7838": 264, "7842": 264, "7844": 264, "7846": 264, "7848": 264, "7850": 264, "7852": 264, "7854": 264, "7856": 264, "7858": 264, "7860": 264, "7862": 264, "7864": 264, "7866": 264, "7868": 264, "7870": 264, "7872": 264, "7874": 264, "7878": 264, "7880": 264, "7882": 264, "7884": 264, "7886": 264, "7888": 264, "7890": 264, "7892": 264, "7894": 264, "7896": 264, "7898": 264, "7900": 264, "7902": 264, "7904": 264, "7906": 264, "7908": 264, "7910": 264, "7912": 264, "7914": 264, "7916": 264, "7918": 264, "7920": 264, "7922": 264, "7924": 264, "7926": 264, "7928": 264, "7930": 264, "7932": 264, "7934": 264, "7936": 264, "7938": 264, "7940": 264, "7942": 264, "7944": 264, "7946": 264, "7948": 264, "7950": 264, "7952": 264, "7954": 264, "7956": 264, "7958": 264, "7960": 264, "7962": 264, "7964": 264, "7966": 264, "7968": 264, "7970": 264, "7972": 264, "7974": 264, "7976": 264, "7978": 264, "7980": 264, "7982": 264, "7984": 264, "7986": 264, "7988": 264, "7990": 264, "7992": 264, "7994": 264, "7996": 264, "7998": 264, "8002": [264, 1090], "8004": 264, "8006": 264, "8008": 264, "8012": 264, "8014": 264, "8016": 264, "8018": 264, "8022": 264, "8024": 264, "8026": 264, "8028": 264, "8030": 264, "8032": 264, "8034": 264, "8036": 264, "8038": 264, "8040": 264, "8042": 264, "8044": 264, "8046": 264, "8048": 264, "8050": 264, "8052": 264, "8054": 264, "8056": 264, "8058": 264, "8060": 264, "8062": 264, "8064": 264, "8066": 264, "8068": 264, "8070": 264, "8072": 264, "8074": 264, "8076": 264, "8078": 264, "8080": 264, "8082": 264, "8084": 264, "8086": 264, "8088": 264, "8090": 264, "8092": 264, "8094": 264, "8096": 264, "8098": 264, "8100": 264, "8102": [264, 1066, 1067], "8104": 264, "8106": 264, "8108": 264, "8110": 264, "8112": 264, "8114": 264, "8116": 264, "8118": 264, "8120": 264, "8122": 264, "8124": 264, "8126": 264, "8128": 264, "8130": 264, "8132": 264, "8134": 264, "8136": 264, "8138": 264, "8140": 264, "8142": 264, "8144": 264, "8146": 264, "8148": 264, "8150": 264, "8152": 264, "8154": 264, "8156": 264, "8158": 264, "8160": 264, "8162": 264, "8164": 264, "8166": 264, "8168": 264, "8170": 264, "8172": 264, "8174": 264, "8176": 264, "8178": 264, "8180": 264, "8182": 264, "8184": 264, "8186": 264, "8188": 264, "8190": 264, "8194": 264, "8196": 264, "8198": 264, "8200": 264, "8202": 264, "8204": 264, "8206": 264, "8208": 264, "8210": 264, "8212": 264, "8214": 264, "8216": 264, "8218": 264, "8220": 264, "8222": 264, "8224": 264, "8226": 264, "8228": 264, "8230": 264, "8232": 264, "8234": 264, "8238": 264, "8240": 264, "8242": 264, "8244": 264, "8246": 264, "8248": 264, "8250": 264, "8252": 264, "8254": 264, "8256": 264, "8258": 264, "8260": [264, 887], "8262": 264, "8264": 264, "8266": 264, "8268": 264, "8270": 264, "8272": 264, "8274": 264, "8276": 264, "8278": 264, "8280": 264, "8282": 264, "8284": 264, "8286": 264, "8288": 264, "8290": 264, "8292": 264, "8294": 264, "8296": 264, "8298": 264, "8300": 264, "8302": 264, "8304": 264, "8306": 264, "8308": 264, "8310": 264, "8312": 264, "8314": 264, "8316": 264, "8318": 264, "8320": 264, "8322": 264, "8324": 264, "8326": 264, "8328": 264, "8330": 264, "8332": 264, "8334": 264, "8336": 264, "8338": 264, "8340": 264, "8342": 264, "8344": 264, "8346": 264, "8348": 264, "8350": 264, "8352": 264, "8354": 264, "8356": 264, "8358": 264, "8360": 264, "8362": 264, "8364": 264, "8366": 264, "8368": 264, "8370": 264, "8372": 264, "8374": 264, "8376": 264, "8378": 264, "8380": 264, "8382": 264, "8384": 264, "8386": 264, "8388": 264, "8390": 264, "8392": 264, "8394": 264, "8396": 264, "8398": 264, "8400": 264, "8402": 264, "8404": 264, "8406": 264, "8408": 264, "8410": 264, "8412": 264, "8414": 264, "8416": 264, "8418": 264, "8420": 264, "8422": 264, "8424": 264, "8426": 264, "8428": 264, "8430": 264, "8432": 264, "8434": 264, "8436": 264, "8438": 264, "8440": 264, "8442": 264, "8444": 264, "8446": 264, "8448": 264, "8450": 264, "8452": 264, "8454": 264, "8456": 264, "8458": 264, "8460": 264, "8464": 264, "8466": 264, "8468": 264, "8470": 264, "8472": 264, "8474": 264, "8476": 264, "8478": 264, "8480": 264, "8482": 264, "8484": 264, "8486": 264, "8488": 264, "8490": 264, "8492": 264, "8494": 264, "8496": 264, "8498": 264, "8500": 264, "8502": 264, "8504": 264, "8506": 264, "8508": 264, "8510": 264, "8512": 264, "8514": 264, "8516": 264, "8518": 264, "8520": 264, "8522": 264, "8524": 264, "8526": 264, "8528": 264, "8530": 264, "8532": 264, "8534": 264, "8536": 264, "8538": 264, "8540": 264, "8542": 264, "8544": 264, "8546": 264, "8548": 264, "8550": 264, "8552": 264, "8554": 264, "8556": 264, "8558": 264, "8560": 264, "8562": 264, "8564": 264, "8566": 264, "8568": 264, "8570": 264, "8572": 264, "8574": 264, "8576": 264, "8578": 264, "8580": 264, "8582": 264, "8584": 264, "8586": 264, "8588": 264, "8590": 264, "8592": 264, "8594": 264, "8596": 264, "8598": 264, "8600": 264, "8602": 264, "8604": 264, "8606": 264, "8608": 264, "8610": 264, "8612": 264, "8614": 264, "8616": 264, "8618": 264, "8620": 264, "8622": 264, "8624": 264, "8626": 264, "8628": 264, "8630": 264, "8632": 264, "8634": 264, "8636": 264, "8638": 264, "8640": 264, "8642": 264, "8644": 264, "8646": 264, "8648": 264, "8650": 264, "8652": 264, "8654": 264, "8656": 264, "8658": 264, "8660": 264, "8662": 264, "8664": 264, "8666": 264, "8668": 264, "8670": 264, "8672": 264, "8674": 264, "8676": 264, "8678": 264, "8680": 264, "8682": 264, "8684": 264, "8686": 264, "8688": 264, "8690": 264, "8692": 264, "8694": 264, "8696": 264, "8698": 264, "8700": 264, "8702": 264, "8704": 264, "8706": 264, "8708": 264, "8710": 264, "8712": 264, "8714": 264, "8716": 264, "8718": 264, "8720": 264, "8722": 264, "8724": 264, "8726": 264, "8728": 264, "8730": 264, "8732": 264, "8734": 264, "8736": 264, "8738": 264, "8740": 264, "8742": 264, "8744": 264, "8746": 264, "8748": 264, "8750": 264, "8752": 264, "8754": 264, "8756": 264, "8758": 264, "8760": 264, "8762": 264, "8764": 264, "8766": 264, "8768": 264, "8770": 264, "8772": 264, "8774": 264, "8776": 264, "8778": 264, "8780": 264, "8782": 264, "8784": 264, "8786": 264, "8788": 264, "8790": 264, "8792": 264, "8794": 264, "8796": 264, "8798": 264, "8800": 264, "8802": 264, "8804": 264, "8806": 264, "8808": 264, "8810": 264, "8812": 264, "8814": 264, "8816": 264, "8818": 264, "8820": 264, "8822": 264, "8824": 264, "8826": 264, "8828": 264, "8830": 264, "8832": 264, "8834": 264, "8836": 264, "8838": 264, "8840": 264, "8842": 264, "8844": 264, "8846": 264, "8848": 264, "8850": 264, "8852": 264, "8854": 264, "8856": 264, "8858": 264, "8860": 264, "8862": 264, "8864": 264, "8866": 264, "8868": 264, "8870": 264, "8872": 264, "8874": 264, "8876": 264, "8878": 264, "8880": 264, "8882": 264, "8884": 264, "8886": 264, "8888": 264, "8890": 264, "8892": 264, "8894": 264, "8896": 264, "8898": 264, "8900": 264, "8902": 264, "8904": 264, "8906": 264, "8908": 264, "8910": 264, "8912": 264, "8914": 264, "8916": 264, "8918": 264, "8920": 264, "8922": 264, "8924": 264, "8926": 264, "8928": 264, "8930": 264, "8932": 264, "8934": 264, "8936": 264, "8938": 264, "8940": 264, "8942": 264, "8944": 264, "8946": 264, "8948": 264, "8950": 264, "8952": 264, "8954": 264, "8956": 264, "8958": 264, "8960": 264, "8962": 264, "8964": 264, "8966": 264, "8968": 264, "8970": 264, "8972": 264, "8974": 264, "8976": 264, "8978": 264, "8980": 264, "8982": 264, "8984": 264, "8986": 264, "8988": 264, "8990": 264, "8992": 264, "8994": 264, "8996": 264, "8998": 264, "9002": 264, "9004": 264, "9006": 264, "9008": 264, "9010": 264, "9012": 264, "9014": 264, "9016": 264, "9018": 264, "9020": 264, "9022": 264, "9024": 264, "9026": 264, "9028": 264, "9030": 264, "9032": 264, "9034": 264, "9036": 264, "9038": 264, "9040": 264, "9042": 264, "9044": 264, "9046": 264, "9048": 264, "9050": 264, "9052": 264, "9054": 264, "9056": 264, "9058": 264, "9060": 264, "9062": 264, "9064": 264, "9066": 264, "9068": 264, "9070": 264, "9072": 264, "9074": 264, "9076": 264, "9078": 264, "9080": 264, "9082": 264, "9084": 264, "9086": 264, "9088": 264, "9090": 264, "9092": 264, "9094": 264, "9096": 264, "9098": 264, "9100": 264, "9102": 264, "9104": 264, "9106": 264, "9108": 264, "9110": 264, "9112": 264, "9114": 264, "9116": 264, "9118": 264, "9120": 264, "9122": 264, "9124": 264, "9126": 264, "9128": 264, "9130": 264, "9132": 264, "9134": 264, "9136": 264, "9138": 264, "9140": 264, "9142": 264, "9144": 264, "9146": 264, "9148": 264, "9150": 264, "9152": 264, "9154": 264, "9156": 264, "9158": 264, "9160": 264, "9162": 264, "9164": 264, "9166": 264, "9168": 264, "9170": 264, "9172": 264, "9174": 264, "9176": 264, "9178": 264, "9180": 264, "9182": 264, "9184": 264, "9186": 264, "9188": 264, "9190": 264, "9192": 264, "9194": 264, "9196": 264, "9198": 264, "9200": 264, "9202": 264, "9204": 264, "9206": 264, "9208": 264, "9210": 264, "9212": 264, "9214": 264, "9216": 264, "9218": 264, "9220": 264, "9222": 264, "9224": 264, "9226": 264, "9228": 264, "9230": 264, "9232": 264, "9234": 264, "9236": 264, "9238": 264, "9240": 264, "9242": 264, "9244": 264, "9246": 264, "9248": 264, "9250": 264, "9252": 264, "9254": 264, "9256": 264, "9258": 264, "9260": 264, "9262": 264, "9264": 264, "9266": 264, "9268": 264, "9270": 264, "9272": 264, "9274": 264, "9276": 264, "9278": 264, "9280": 264, "9282": 264, "9284": 264, "9286": 264, "9288": 264, "9290": 264, "9292": 264, "9294": 264, "9296": 264, "9298": 264, "9300": 264, "9302": 264, "9304": 264, "9306": 264, "9308": 264, "9310": 264, "9312": 264, "9314": 264, "9316": 264, "9318": 264, "9320": 264, "9322": 264, "9324": 264, "9326": 264, "9328": 264, "9330": 264, "9332": 264, "9334": 264, "9336": 264, "9338": 264, "9340": 264, "9342": 264, "9344": 264, "9346": 264, "9348": 264, "9350": 264, "9352": 264, "9354": 264, "9356": 264, "9358": 264, "9360": 264, "9362": 264, "9364": 264, "9366": 264, "9368": 264, "9370": 264, "9372": 264, "9374": 264, "9376": 264, "9378": 264, "9380": 264, "9382": 264, "9384": 264, "9386": 264, "9388": 264, "9390": 264, "9392": 264, "9394": [264, 948], "9396": 264, "9398": 264, "9400": 264, "9402": 264, "9404": 264, "9406": 264, "9408": 264, "9410": 264, "9412": 264, "9414": 264, "9416": 264, "9418": 264, "9420": 264, "9422": 264, "9424": 264, "9426": 264, "9428": 264, "9430": 264, "9432": 264, "9434": 264, "9436": 264, "9438": 264, "9440": 264, "9442": 264, "9444": 264, "9446": 264, "9448": 264, "9450": 264, "9452": 264, "9454": 264, "9456": 264, "9458": 264, "9460": 264, "9462": 264, "9464": 264, "9466": 264, "9468": 264, "9470": 264, "9472": 264, "9474": 264, "9476": 264, "9478": 264, "9480": 264, "9482": 264, "9484": 264, "9486": 264, "9488": 264, "9490": 264, "9492": 264, "9494": 264, "9496": 264, "9498": 264, "9500": 264, "9502": 264, "9504": 264, "9506": 264, "9508": 264, "9510": 264, "9512": 264, "9514": 264, "9516": 264, "9518": 264, "9520": 264, "9522": 264, "9524": 264, "9526": 264, "9528": 264, "9530": 264, "9532": 264, "9534": 264, "9536": 264, "9538": 264, "9540": 264, "9542": 264, "9544": 264, "9546": 264, "9548": 264, "9550": 264, "9552": 264, "9554": 264, "9556": 264, "9558": 264, "9560": 264, "9562": 264, "9564": 264, "9566": 264, "9568": 264, "9570": 264, "9572": 264, "9574": 264, "9576": 264, "9578": 264, "9580": 264, "9582": 264, "9584": 264, "9586": 264, "9588": 264, "9590": 264, "9592": 264, "9594": 264, "9596": 264, "9598": 264, "9600": 264, "9602": 264, "9604": 264, "9606": 264, "9608": 264, "9610": 264, "9612": 264, "9614": 264, "9616": 264, "9618": 264, "9620": 264, "9622": 264, "9624": 264, "9626": 264, "9628": 264, "9630": 264, "9632": 264, "9634": 264, "9636": 264, "9638": 264, "9640": 264, "9642": 264, "9644": 264, "9646": 264, "9648": 264, "9650": 264, "9652": 264, "9654": 264, "9656": 264, "9658": 264, "9660": 264, "9662": 264, "9664": 264, "9666": 264, "9668": 264, "9670": 264, "9672": 264, "9674": 264, "9676": 264, "9678": 264, "9680": 264, "9682": 264, "9684": 264, "9686": 264, "9688": 264, "9690": 264, "9692": 264, "9694": 264, "9696": 264, "9698": 264, "9700": 264, "9702": 264, "9704": 264, "9706": 264, "9708": 264, "9710": 264, "9712": 264, "9714": 264, "9716": 264, "9718": 264, "9720": 264, "9722": 264, "9724": 264, "9726": 264, "9728": 264, "9730": 264, "9732": 264, "9734": 264, "9736": 264, "9738": 264, "9740": 264, "9742": 264, "9744": 264, "9746": 264, "9748": 264, "9750": 264, "9752": 264, "9754": 264, "9756": 264, "9758": 264, "9760": 264, "9762": 264, "9764": 264, "9766": 264, "9768": [264, 274], "9770": 264, "9772": 264, "9774": 264, "9776": 264, "9778": 264, "9780": 264, "9782": 264, "9784": 264, "9786": 264, "9788": 264, "9790": 264, "9792": 264, "9794": 264, "9796": 264, "9798": 264, "9800": 264, "9802": 264, "9804": 264, "9806": 264, "9808": 264, "9810": 264, "9812": 264, "9814": 264, "9816": 264, "9818": 264, "9820": 264, "9822": 264, "9824": 264, "9826": 264, "9828": 264, "9830": 264, "9832": 264, "9834": 264, "9836": 264, "9838": 264, "9840": 264, "9842": 264, "9844": 264, "9846": 264, "9848": 264, "9850": 264, "9852": 264, "9854": 264, "9856": 264, "9858": 264, "9860": 264, "9862": 264, "9864": 264, "9866": 264, "9868": 264, "9870": 264, "9872": 264, "9874": 264, "9876": 264, "9878": 264, "9880": 264, "9882": 264, "9884": 264, "9886": 264, "9888": 264, "9890": 264, "9892": 264, "9894": 264, "9896": 264, "9898": 264, "9900": 264, "9902": 264, "9904": 264, "9906": 264, "9908": 264, "9910": 264, "9912": 264, "9914": 264, "9916": 264, "9918": 264, "9920": 264, "9922": 264, "9924": 264, "9926": 264, "9928": 264, "9930": 264, "9932": 264, "9934": 264, "9936": 264, "9938": 264, "9940": 264, "9942": 264, "9944": 264, "9946": 264, "9948": 264, "9950": 264, "9952": 264, "9954": 264, "9956": 264, "9958": 264, "9960": 264, "9962": 264, "9964": 264, "9966": 264, "9968": 264, "9970": 264, "9972": 264, "9974": 264, "9976": 264, "9978": 264, "9980": 264, "9982": 264, "9984": 264, "9986": 264, "9988": 264, "9990": 264, "9992": 264, "9994": 264, "9996": 264, "9998": 264, "10002": 264, "10004": 264, "10006": 264, "10008": 264, "10010": 264, "10012": 264, "10014": 264, "10016": 264, "10018": 264, "10020": 264, "10022": 264, "10024": 264, "10026": 264, "10028": 264, "10030": 264, "10032": 264, "10034": 264, "10036": 264, "10038": 264, "10040": 264, "10042": 264, "10044": 264, "10046": 264, "10048": 264, "10050": 264, "10052": 264, "10054": 264, "10056": 264, "10058": 264, "10060": 264, "10062": 264, "10064": 264, "10066": 264, "10068": 264, "10070": 264, "10072": 264, "10074": 264, "10076": 264, "10078": 264, "10080": 264, "10082": 264, "10084": 264, "10086": 264, "10088": 264, "10090": 264, "10092": 264, "10094": 264, "10096": 264, "10098": 264, "10100": 264, "10102": 264, "10104": 264, "10106": 264, "10108": 264, "10110": 264, "10112": 264, "10114": 264, "10116": 264, "10118": 264, "10120": 264, "10122": 264, "10124": 264, "10126": 264, "10128": 264, "10130": 264, "10132": 264, "10134": 264, "10136": 264, "10138": 264, "10140": 264, "10142": 264, "10144": 264, "10146": 264, "10148": 264, "10150": 264, "10152": 264, "10154": 264, "10156": 264, "10158": 264, "10160": 264, "10162": 264, "10164": 264, "10166": 264, "10168": 264, "10170": 264, "10172": 264, "10174": 264, "10176": 264, "10178": 264, "10180": 264, "10182": 264, "10184": 264, "10186": 264, "10188": 264, "10190": 264, "10192": 264, "10194": 264, "10196": 264, "10198": 264, "10200": 264, "10202": 264, "10204": 264, "10206": 264, "10208": 264, "10210": 264, "10212": 264, "10214": 264, "10216": 264, "10218": 264, "10220": 264, "10222": 264, "10224": 264, "10226": [264, 313], "10228": 264, "10230": 264, "10232": 264, "10234": 264, "10236": 264, "10238": 264, "10240": 264, "10242": 264, "10244": 264, "10246": 264, "10248": 264, "10250": 264, "10252": 264, "10254": 264, "10256": 264, "10258": 264, "10260": 264, "10262": 264, "10264": 264, "10266": 264, "10268": 264, "10270": 264, "10272": 264, "10274": 264, "10276": 264, "10278": 264, "10280": 264, "10282": 264, "10284": 264, "10286": 264, "10288": 264, "10290": 264, "10292": 264, "10294": 264, "10296": 264, "10298": 264, "10300": 264, "10302": 264, "10304": 264, "10306": 264, "10308": 264, "10310": 264, "10312": 264, "10314": 264, "10316": 264, "10318": 264, "10320": 264, "10322": 264, "10324": 264, "10326": 264, "10328": 264, "10330": 264, "10332": 264, "10334": 264, "10336": 264, "10338": 264, "10340": 264, "10342": 264, "10344": 264, "10346": 264, "10348": 264, "10350": 264, "10352": 264, "10354": 264, "10356": 264, "10358": 264, "10360": 264, "10362": 264, "10364": 264, "10366": 264, "10368": 264, "10370": 264, "10372": 264, "10374": 264, "10376": 264, "10378": 264, "10380": 264, "10382": 264, "10384": 264, "10386": 264, "10388": 264, "10390": 264, "10392": 264, "10394": 264, "10396": 264, "10398": 264, "10400": 264, "10402": 264, "10404": 264, "10406": 264, "10408": 264, "10410": 264, "10412": 264, "10414": 264, "10416": 264, "10418": 264, "10420": 264, "10422": 264, "10424": 264, "10426": 264, "10428": 264, "10430": 264, "10432": 264, "10434": 264, "10436": 264, "10438": 264, "10440": 264, "10442": 264, "10444": 264, "10446": 264, "10448": 264, "10450": 264, "10452": 264, "10454": 264, "10456": 264, "10458": 264, "10460": 264, "10462": 264, "10464": 264, "10466": 264, "10468": 264, "10470": 264, "10472": 264, "10474": 264, "10476": 264, "10478": 264, "10480": 264, "10482": 264, "10484": 264, "10486": 264, "10488": 264, "10490": 264, "10492": 264, "10494": 264, "10496": 264, "10498": 264, "10500": 264, "10502": 264, "10504": 264, "10506": 264, "10508": 264, "10510": 264, "10512": 264, "10514": 264, "10516": 264, "10518": 264, "10520": 264, "10522": 264, "10524": 264, "10526": 264, "10528": 264, "10530": 264, "10532": 264, "10534": 264, "10536": 264, "10538": 264, "10540": 264, "10542": 264, "10544": 264, "10546": 264, "10548": 264, "10550": 264, "10552": [264, 1078], "10554": 264, "10556": 264, "10558": 264, "10560": 264, "10562": 264, "10564": 264, "10566": 264, "10568": 264, "10570": 264, "10572": 264, "10574": 264, "10576": 264, "10578": 264, "10580": 264, "10582": 264, "10584": 264, "10586": 264, "10588": 264, "10590": 264, "10592": 264, "10594": 264, "10596": 264, "10598": 264, "10600": 264, "10602": 264, "10604": 264, "10606": 264, "10608": 264, "10610": 264, "10612": 264, "10614": 264, "10616": 264, "10618": 264, "10620": 264, "10622": 264, "10624": 264, "10626": 264, "10628": 264, "10630": 264, "10632": 264, "10634": 264, "10636": 264, "10638": 264, "10640": 264, "10642": 264, "10644": 264, "10646": 264, "10648": 264, "10650": 264, "10652": 264, "10654": 264, "10656": 264, "10658": 264, "10660": 264, "10662": 264, "10664": 264, "10666": 264, "10668": 264, "10670": 264, "10672": 264, "10674": 264, "10676": 264, "10678": 264, "10680": 264, "10682": 264, "10684": 264, "10686": 264, "10688": 264, "10690": 264, "10692": 264, "10694": 264, "10696": 264, "10698": 264, "10700": 264, "10702": 264, "10704": 264, "10706": 264, "10708": 264, "10710": 264, "10712": 264, "10714": 264, "10716": 264, "10718": 264, "10720": 264, "10722": 264, "10724": 264, "10726": 264, "10728": 264, "10730": 264, "10732": 264, "10734": 264, "10736": 264, "10738": 264, "10740": 264, "10742": 264, "10744": 264, "10746": 264, "10748": 264, "10750": 264, "10752": 264, "10754": 264, "10756": 264, "10758": 264, "10760": 264, "10762": 264, "10764": 264, "10766": 264, "10768": 264, "10770": 264, "10772": 264, "10774": 264, "10776": 264, "10778": 264, "10780": 264, "10782": 264, "10784": 264, "10786": 264, "10788": 264, "10790": 264, "10792": 264, "10794": 264, "10796": 264, "10798": 264, "10800": 264, "10802": 264, "10804": 264, "10806": 264, "10808": 264, "10810": 264, "10812": 264, "10814": 264, "10816": 264, "10818": 264, "10820": 264, "10822": 264, "10824": 264, "10826": 264, "10828": 264, "10830": 264, "10832": 264, "10834": 264, "10836": 264, "10838": 264, "10840": 264, "10842": 264, "10844": 264, "10846": 264, "10848": 264, "10850": 264, "10852": 264, "10854": 264, "10856": 264, "10858": 264, "10860": 264, "10862": 264, "10864": 264, "10866": 264, "10868": 264, "10870": 264, "10872": 264, "10874": 264, "10876": 264, "10878": 264, "10880": 264, "10882": 264, "10884": 264, "10886": 264, "10888": 264, "10890": 264, "10892": 264, "10894": 264, "10896": 264, "10898": 264, "10900": 264, "10902": 264, "10904": 264, "10906": 264, "10908": 264, "10910": 264, "10912": 264, "10914": 264, "10916": 264, "10918": 264, "10920": 264, "10922": 264, "10924": 264, "10926": 264, "10928": 264, "10930": 264, "10932": 264, "10934": 264, "10936": 264, "10938": 264, "10940": 264, "10942": 264, "10944": 264, "10946": 264, "10948": 264, "10950": 264, "10952": 264, "10954": 264, "10956": 264, "10958": 264, "10960": 264, "10962": 264, "10964": 264, "10966": 264, "10968": 264, "10970": 264, "10972": 264, "10974": 264, "10976": 264, "10978": 264, "10980": 264, "10982": 264, "10984": 264, "10986": 264, "10988": 264, "10990": 264, "10992": 264, "10994": 264, "10996": 264, "10998": 264, "11000": 264, "11002": 264, "11004": 264, "11006": 264, "11008": 264, "11010": 264, "11012": 264, "11014": 264, "11016": 264, "11018": 264, "11020": 264, "11022": 264, "11024": 264, "11026": 264, "11028": 264, "11030": 264, "11032": 264, "11034": 264, "11036": 264, "11038": 264, "11040": 264, "11042": 264, "11044": 264, "11046": 264, "11048": 264, "11050": 264, "11052": 264, "11054": 264, "11056": 264, "11058": 264, "11060": 264, "11062": 264, "11064": 264, "11066": 264, "11068": 264, "11070": 264, "11072": 264, "11074": 264, "11076": 264, "11078": 264, "11080": 264, "11082": 264, "11084": 264, "11086": 264, "11088": 264, "11090": 264, "11092": 264, "11094": 264, "11096": 264, "11098": 264, "11100": 264, "11102": 264, "11104": 264, "11106": 264, "11108": 264, "11110": 264, "11112": 264, "11114": 264, "11116": 264, "11118": 264, "11120": 264, "11122": 264, "11124": 264, "11126": 264, "11128": 264, "11130": 264, "11132": 264, "11134": 264, "11136": 264, "11138": 264, "11140": 264, "11142": 264, "11144": 264, "11146": 264, "11148": 264, "11150": 264, "11152": 264, "11154": 264, "11156": 264, "11158": 264, "11160": 264, "11162": 264, "11164": 264, "11166": 264, "11168": 264, "11170": 264, "11172": 264, "11174": 264, "11176": 264, "11178": 264, "11180": 264, "11182": 264, "11184": 264, "11186": 264, "11188": 264, "11190": 264, "11192": 264, "11194": 264, "11196": 264, "11198": 264, "11200": 264, "11202": 264, "11204": 264, "11206": 264, "11208": 264, "11210": 264, "11212": 264, "11214": 264, "11216": 264, "11218": 264, "11220": 264, "11222": 264, "11224": 264, "11226": 264, "11228": 264, "11230": 264, "11232": 264, "11234": 264, "11236": 264, "11238": 264, "11240": 264, "11242": 264, "11244": 264, "11246": 264, "11248": 264, "11250": 264, "11252": 264, "11254": 264, "11256": 264, "11258": 264, "11260": 264, "11262": 264, "11264": 264, "11266": 264, "11268": 264, "11270": 264, "11272": 264, "11274": 264, "11276": 264, "11278": 264, "11280": 264, "11282": 264, "11284": 264, "11286": 264, "11288": 264, "11290": 264, "11292": 264, "11294": 264, "11296": 264, "11298": 264, "11300": 264, "11302": 264, "11304": 264, "11306": 264, "11308": 264, "11310": 264, "11312": 264, "11314": 264, "11316": 264, "11318": 264, "11320": 264, "11322": 264, "11324": 264, "11326": 264, "11328": 264, "11330": 264, "11332": 264, "11334": 264, "11336": 264, "11340": 264, "11342": 264, "11344": 264, "11346": 264, "11348": [264, 313], "11350": 264, "11352": 264, "11354": 264, "11356": 264, "11358": 264, "11360": 264, "11362": 264, "11364": 264, "11366": 264, "11368": 264, "11370": 264, "11372": 264, "11374": 264, "11376": 264, "11378": 264, "11380": 264, "11382": 264, "11384": 264, "11386": 264, "11388": 264, "11390": 264, "11392": 264, "11394": 264, "11396": 264, "11398": 264, "11400": 264, "11402": 264, "11404": 264, "11406": 264, "11408": 264, "11410": 264, "11412": 264, "11414": 264, "11416": 264, "11418": 264, "11420": 264, "11422": 264, "11424": 264, "11426": 264, "11428": 264, "11430": 264, "11432": 264, "11434": 264, "11436": 264, "11438": 264, "11440": 264, "11442": 264, "11444": 264, "11446": 264, "11448": 264, "11450": 264, "11452": 264, "11454": 264, "11456": 264, "11458": 264, "11460": 264, "11462": 264, "11464": 264, "11466": 264, "11468": 264, "11470": 264, "11472": 264, "11474": 264, "11476": 264, "11478": 264, "11480": 264, "11482": 264, "11484": 264, "11486": 264, "11488": 264, "11490": 264, "11492": 264, "11494": 264, "11496": 264, "11498": 264, "11500": 264, "11502": 264, "11504": 264, "11506": 264, "11508": 264, "11510": 264, "11512": 264, "11514": 264, "11516": 264, "11518": 264, "11520": 264, "11522": 264, "11524": 264, "11526": 264, "11528": 264, "11530": 264, "11532": 264, "11534": 264, "11536": 264, "11538": 264, "11540": 264, "11542": 264, "11544": 264, "11546": 264, "11548": 264, "11550": 264, "11552": 264, "11554": 264, "11556": 264, "11558": 264, "11560": 264, "11562": 264, "11564": 264, "11566": 264, "11568": 264, "11570": 264, "11572": 264, "11574": 264, "11576": 264, "11578": 264, "11580": 264, "11582": 264, "11584": 264, "11586": 264, "11588": 264, "11590": 264, "11592": 264, "11594": 264, "11596": 264, "11598": 264, "11600": 264, "11602": 264, "11604": 264, "11606": 264, "11608": 264, "11610": 264, "11612": 264, "11614": 264, "11616": 264, "11618": 264, "11620": 264, "11622": 264, "11624": 264, "11626": 264, "11628": 264, "11630": 264, "11634": 264, "11636": 264, "11638": 264, "11640": 264, "11642": 264, "11644": 264, "11646": 264, "11648": 264, "11650": 264, "11652": 264, "11654": 264, "11656": 264, "11658": 264, "11660": 264, "11662": 264, "11664": 264, "11666": 264, "11668": 264, "11670": 264, "11672": 264, "11674": 264, "11676": 264, "11678": 264, "11680": 264, "11682": 264, "11684": 264, "11686": 264, "11688": 264, "11690": 264, "11692": 264, "11694": 264, "11696": 264, "11698": 264, "11700": 264, "11702": 264, "11704": 264, "11706": 264, "11708": 264, "11710": 264, "11712": 264, "11714": 264, "11716": 264, "11718": 264, "11720": 264, "11722": 264, "11724": 264, "11726": 264, "11728": 264, "11730": 264, "11732": 264, "11734": 264, "11736": 264, "11738": 264, "11740": 264, "11742": 264, "11744": 264, "11746": 264, "11748": 264, "11750": 264, "11752": 264, "11754": 264, "11756": 264, "11758": 264, "11760": 264, "11762": 264, "11764": 264, "11766": 264, "11768": 264, "11770": 264, "11772": 264, "11774": 264, "11776": 264, "11778": 264, "11780": 264, "11782": 264, "11784": 264, "11786": 264, "11788": 264, "11790": 264, "11792": 264, "11794": 264, "11796": 264, "11798": 264, "11800": 264, "11802": 264, "11804": 264, "11806": 264, "11808": 264, "11810": 264, "11812": 264, "11814": 264, "11816": 264, "11818": 264, "11820": 264, "11822": 264, "11824": 264, "11826": 264, "11828": 264, "11830": 264, "11832": 264, "11834": 264, "11836": 264, "11838": 264, "11840": 264, "11842": 264, "11844": 264, "11846": 264, "11848": 264, "11850": 264, "11852": 264, "11854": 264, "11856": 264, "11858": 264, "11860": 264, "11862": 264, "11864": 264, "11866": 264, "11868": 264, "11870": 264, "11872": 264, "11874": 264, "11876": 264, "11878": 264, "11880": 264, "11882": 264, "11884": 264, "11886": 264, "11888": 264, "11890": 264, "11892": 264, "11894": 264, "11896": 264, "11898": 264, "11900": 264, "11902": 264, "11904": 264, "11906": 264, "11908": 264, "11910": 264, "11912": 264, "11914": 264, "11916": 264, "11918": 264, "11920": 264, "11922": 264, "11924": 264, "11926": 264, "11928": 264, "11930": 264, "11932": 264, "11934": 264, "11936": 264, "11938": 264, "11940": 264, "11942": 264, "11944": 264, "11946": 264, "11948": 264, "11950": 264, "11952": 264, "11954": 264, "11956": 264, "11958": 264, "11960": 264, "11962": 264, "11964": 264, "11966": 264, "11968": 264, "11970": 264, "11972": 264, "11974": 264, "11976": 264, "11978": 264, "11980": 264, "11982": 264, "11984": 264, "11986": 264, "11988": 264, "11990": 264, "11992": 264, "11994": 264, "11996": 264, "11998": 264, "12000": 264, "12002": 264, "12004": 264, "12006": 264, "12008": 264, "12010": 264, "12012": 264, "12014": 264, "12016": 264, "12018": 264, "12020": 264, "12022": 264, "12024": 264, "12026": 264, "12028": 264, "12030": 264, "12032": 264, "12034": 264, "12036": 264, "12038": 264, "12040": 264, "12042": 264, "12044": 264, "12046": 264, "12048": 264, "12050": 264, "12052": 264, "12054": 264, "12056": 264, "12058": 264, "12060": 264, "12062": 264, "12064": 264, "12066": 264, "12068": 264, "12070": 264, "12072": 264, "12074": 264, "12076": 264, "12078": 264, "12080": 264, "12082": 264, "12084": 264, "12086": 264, "12088": 264, "12090": 264, "12092": 264, "12094": 264, "12096": 264, "12098": 264, "12100": 264, "12102": 264, "12104": 264, "12106": 264, "12108": 264, "12110": 264, "12112": 264, "12114": 264, "12116": 264, "12118": 264, "12120": 264, "12122": 264, "12124": 264, "12126": 264, "12128": 264, "12130": 264, "12132": 264, "12134": 264, "12136": 264, "12138": 264, "12140": 264, "12142": 264, "12144": 264, "12146": 264, "12148": 264, "12150": 264, "12152": 264, "12154": 264, "12158": 264, "12160": 264, "12162": 264, "12164": 264, "12166": 264, "12168": 264, "12170": 264, "12172": 264, "12174": 264, "12176": 264, "12178": 264, "12180": 264, "12182": 264, "12184": 264, "12186": 264, "12188": 264, "12190": 264, "12192": 264, "12194": 264, "12196": 264, "12198": 264, "12200": 264, "12202": 264, "12204": 264, "12206": 264, "12208": 264, "12210": 264, "12212": 264, "12214": 264, "12216": 264, "12218": 264, "12220": 264, "12222": 264, "12224": 264, "12226": 264, "12228": 264, "12230": 264, "12232": 264, "12234": 264, "12236": 264, "12238": 264, "12240": 264, "12242": 264, "12244": 264, "12246": 264, "12248": 264, "12250": 264, "12252": 264, "12254": 264, "12256": 264, "12258": 264, "12260": 264, "12262": 264, "12264": 264, "12266": 264, "12268": 264, "12270": 264, "12272": 264, "12274": 264, "12276": 264, "12278": 264, "12280": 264, "12282": 264, "12284": 264, "12286": 264, "12288": 264, "12290": 264, "12292": 264, "12294": 264, "12296": 264, "12298": 264, "12300": 264, "12302": 264, "12304": 264, "12306": 264, "12308": 264, "12310": 264, "12312": 264, "12314": 264, "12316": 264, "12318": 264, "12320": 264, "12322": 264, "12324": 264, "12326": 264, "12328": 264, "12330": 264, "12332": 264, "12334": 264, "12336": 264, "12338": 264, "12340": 264, "12342": 264, "12344": 264, "12346": 264, "12348": 264, "12350": 264, "12352": 264, "12354": 264, "12356": 264, "12358": 264, "12360": 264, "12362": 264, "12364": 264, "12366": 264, "12368": 264, "12370": 264, "12372": 264, "12374": 264, "12376": 264, "12378": 264, "12380": 264, "12382": 264, "12384": 264, "12386": 264, "12388": 264, "12390": 264, "12392": 264, "12394": 264, "12396": 264, "12398": 264, "12400": 264, "12402": 264, "12404": 264, "12406": 264, "12408": 264, "12410": 264, "12412": 264, "12414": 264, "12416": 264, "12418": 264, "12420": 264, "12422": 264, "12424": 264, "12426": 264, "12428": 264, "12430": 264, "12432": 264, "12434": 264, "12436": 264, "12438": 264, "12440": 264, "12442": 264, "12444": 264, "12446": 264, "12448": 264, "12450": 264, "12452": 264, "12454": 264, "12456": 264, "12458": 264, "12460": 264, "12462": 264, "12464": 264, "12466": 264, "12468": 264, "12470": 264, "12472": 264, "12474": 264, "12476": 264, "12478": 264, "12480": 264, "12482": 264, "12484": 264, "12486": 264, "12488": 264, "12490": 264, "12492": 264, "12494": 264, "12496": 264, "12498": 264, "12500": 264, "12502": 264, "12504": 264, "12506": 264, "12508": 264, "12510": 264, "12512": 264, "12514": 264, "12516": 264, "12518": 264, "12520": 264, "12522": 264, "12524": 264, "12526": 264, "12528": 264, "12530": 264, "12532": 264, "12534": 264, "12536": 264, "12538": 264, "12540": 264, "12542": 264, "12544": 264, "12546": 264, "12548": 264, "12550": 264, "12552": 264, "12554": 264, "12556": 264, "12558": 264, "12560": 264, "12562": 264, "12564": 264, "12566": 264, "12568": 264, "12570": 264, "12572": 264, "12574": 264, "12576": 264, "12578": 264, "12580": 264, "12582": 264, "12584": 264, "12586": 264, "12588": 264, "12590": 264, "12592": 264, "12594": 264, "12596": 264, "12598": 264, "12600": 264, "12602": 264, "12604": 264, "12606": 264, "12608": 264, "12610": 264, "12612": 264, "12614": 264, "12616": 264, "12618": 264, "12620": 264, "12622": 264, "12624": 264, "12626": 264, "12628": 264, "12630": 264, "12632": 264, "12634": 264, "12636": 264, "12638": 264, "12640": 264, "12642": 264, "12644": 264, "12646": 264, "12648": 264, "12650": 264, "12652": 264, "12654": 264, "12656": 264, "12658": 264, "12660": 264, "12662": 264, "12664": 264, "12666": 264, "12668": 264, "12670": 264, "12672": 264, "12674": 264, "12676": 264, "12678": 264, "12680": 264, "12682": 264, "12684": 264, "12686": 264, "12688": 264, "12690": 264, "12692": 264, "12694": 264, "12696": 264, "12698": 264, "12700": 264, "12702": 264, "12704": 264, "12706": 264, "12708": 264, "12710": 264, "12712": 264, "12714": 264, "12716": 264, "12718": 264, "12720": 264, "12722": 264, "12724": 264, "12726": 264, "12728": 264, "12730": 264, "12732": 264, "12734": 264, "12736": 264, "12738": 264, "12740": 264, "12742": 264, "12744": 264, "12746": 264, "12748": 264, "12750": 264, "12752": 264, "12754": 264, "12756": 264, "12758": 264, "12760": 264, "12762": 264, "12764": 264, "12766": 264, "12768": 264, "12770": 264, "12772": 264, "12774": 264, "12776": 264, "12778": 264, "12780": 264, "12782": 264, "12784": 264, "12786": 264, "12788": 264, "12790": 264, "12792": 264, "12794": 264, "12796": 264, "12798": 264, "12800": 264, "12802": 264, "12804": 264, "12806": 264, "12808": 264, "12810": 264, "12812": 264, "12814": 264, "12816": 264, "12818": 264, "12820": 264, "12822": 264, "12824": 264, "12826": 264, "12828": 264, "12830": 264, "12832": 264, "12834": 264, "12836": 264, "12838": 264, "12840": 264, "12842": 264, "12844": 264, "12846": 264, "12848": 264, "12850": 264, "12852": 264, "12854": 264, "12856": 264, "12858": 264, "12860": 264, "12862": 264, "12864": 264, "12866": 264, "12868": 264, "12870": 264, "12872": 264, "12874": 264, "12876": 264, "12878": 264, "12880": 264, "12882": 264, "12884": 264, "12886": 264, "12888": 264, "12890": 264, "12892": 264, "12894": 264, "12896": 264, "12898": 264, "12900": 264, "12902": 264, "12904": 264, "12906": 264, "12908": 264, "12910": 264, "12912": 264, "12914": 264, "12916": 264, "12918": 264, "12920": 264, "12922": 264, "12924": 264, "12926": 264, "12928": 264, "12930": 264, "12932": 264, "12934": 264, "12936": 264, "12938": 264, "12940": 264, "12942": 264, "12944": 264, "12946": 264, "12948": 264, "12950": 264, "12952": 264, "12954": 264, "12956": 264, "12958": 264, "12960": 264, "12962": 264, "12964": 264, "12966": 264, "12968": 264, "12970": 264, "12972": 264, "12974": 264, "12976": 264, "12978": 264, "12980": 264, "12982": 264, "12984": 264, "12986": 264, "12988": 264, "12990": 264, "12992": 264, "12994": 264, "12996": 264, "12998": 264, "13000": 264, "13002": 264, "13004": 264, "13006": 264, "13008": 264, "13010": 264, "13012": 264, "13014": 264, "13016": 264, "13018": 264, "13020": 264, "13022": 264, "13024": 264, "13026": 264, "13028": 264, "13030": 264, "13032": 264, "13034": 264, "13036": 264, "13038": 264, "13040": 264, "13042": 264, "13044": 264, "13046": 264, "13048": 264, "13050": 264, "13052": 264, "13054": 264, "13056": 264, "13058": 264, "13060": 264, "13062": 264, "13064": 264, "13066": 264, "13068": 264, "13070": 264, "13072": 264, "13074": 264, "13076": 264, "13078": 264, "13080": 264, "13082": 264, "13084": 264, "13086": 264, "13088": 264, "13090": 264, "13092": 264, "13094": 264, "13096": 264, "13098": 264, "13100": 264, "13102": 264, "13104": 264, "13106": 264, "13108": 264, "13110": 264, "13112": 264, "13114": 264, "13116": 264, "13118": 264, "13120": 264, "13122": 264, "13124": 264, "13126": 264, "13128": 264, "13130": 264, "13132": 264, "13134": 264, "13136": 264, "13138": 264, "13140": 264, "13142": 264, "13144": 264, "13146": 264, "13148": 264, "13150": 264, "13152": 264, "13154": 264, "13156": 264, "13158": 264, "13160": 264, "13162": 264, "13164": 264, "13166": 264, "13168": 264, "13170": 264, "13172": 264, "13174": 264, "13176": 264, "13178": 264, "13180": 264, "13182": 264, "13184": 264, "13186": 264, "13188": 264, "13190": 264, "13192": 264, "13194": 264, "13196": 264, "13198": 264, "13200": 264, "13202": 264, "13204": 264, "13206": 264, "13208": 264, "13210": 264, "13212": 264, "13214": 264, "13216": 264, "13218": 264, "13220": 264, "13222": 264, "13224": 264, "13226": 264, "13228": 264, "13230": 264, "13232": 264, "13234": 264, "13236": 264, "13238": 264, "13240": 264, "13242": 264, "13244": 264, "13246": 264, "13248": 264, "13250": 264, "13252": 264, "13254": 264, "13256": 264, "13258": 264, "13260": 264, "13262": 264, "13264": 264, "13266": 264, "13268": 264, "13270": 264, "13272": 264, "13274": 264, "13276": 264, "13278": 264, "13280": 264, "13282": 264, "13284": 264, "13286": 264, "13288": 264, "13290": 264, "13292": 264, "13294": 264, "13296": 264, "13298": 264, "13300": 264, "13302": 264, "13304": 264, "13306": 264, "13308": 264, "13310": 264, "13312": 264, "13314": 264, "13316": 264, "13318": 264, "13320": 264, "13322": 264, "13324": 264, "13326": 264, "13328": 264, "13330": 264, "13332": 264, "13334": 264, "13336": 264, "13338": 264, "13340": 264, "13342": 264, "13344": 264, "13346": 264, "13348": 264, "13350": 264, "13352": 264, "13354": 264, "13356": 264, "13358": 264, "13360": 264, "13362": 264, "13364": 264, "13366": 264, "13368": 264, "13370": 264, "13372": 264, "13374": 264, "13376": 264, "13378": 264, "13380": 264, "13382": 264, "13384": 264, "13386": 264, "13388": 264, "13390": 264, "13392": 264, "13394": 264, "13396": 264, "13398": 264, "13400": 264, "13402": 264, "13404": 264, "13406": 264, "13408": 264, "13410": 264, "13412": 264, "13414": 264, "13416": 264, "13418": 264, "13420": 264, "13422": 264, "13424": 264, "13426": 264, "13428": 264, "13430": 264, "13432": 264, "13434": 264, "13436": 264, "13438": 264, "13440": 264, "13442": 264, "13444": 264, "13446": 264, "13448": 264, "13450": 264, "13452": 264, "13454": 264, "13456": 264, "13458": 264, "13460": 264, "13462": 264, "13464": 264, "13466": 264, "13468": 264, "13470": 264, "13472": 264, "13474": 264, "13476": 264, "13478": 264, "13480": 264, "13482": 264, "13484": 264, "13486": 264, "13488": 264, "13490": 264, "13492": 264, "13494": 264, "13496": 264, "13498": 264, "13502": 264, "13504": 264, "13506": 264, "13508": 264, "13510": 264, "13512": 264, "13514": 264, "13516": 264, "13518": 264, "13520": 264, "13522": 264, "13524": 264, "13526": 264, "13528": 264, "13530": 264, "13532": 264, "13534": 264, "13536": 264, "13538": 264, "13540": 264, "13542": 264, "13544": 264, "13546": 264, "13548": 264, "13550": 264, "13552": 264, "13554": 264, "13556": 264, "13558": 264, "13560": 264, "13562": 264, "13564": 264, "13566": 264, "13568": 264, "13570": 264, "13572": 264, "13574": 264, "13576": 264, "13578": 264, "13580": 264, "13582": 264, "13584": 264, "13586": 264, "13588": 264, "13590": 264, "13592": 264, "13594": 264, "13596": 264, "13598": 264, "13600": 264, "13602": 264, "13604": 264, "13606": 264, "13608": 264, "13610": 264, "13612": 264, "13614": 264, "13616": 264, "13618": 264, "13620": 264, "13622": 264, "13624": 264, "13626": 264, "13628": 264, "13630": 264, "13632": 264, "13634": 264, "13636": 264, "13638": 264, "13640": 264, "13642": 264, "13644": 264, "13646": 264, "13648": 264, "13650": 264, "13652": 264, "13654": 264, "13656": 264, "13658": 264, "13660": 264, "13662": 264, "13664": 264, "13666": 264, "13668": 264, "13670": 264, "13672": 264, "13674": 264, "13676": 264, "13678": 264, "13680": 264, "13682": 264, "13684": 264, "13686": 264, "13688": 264, "13690": 264, "13692": 264, "13694": 264, "13696": 264, "13698": 264, "13700": 264, "13702": 264, "13704": 264, "13706": 264, "13708": 264, "13710": 264, "13712": 264, "13714": 264, "13716": 264, "13718": 264, "13720": 264, "13722": 264, "13724": 264, "13726": 264, "13728": 264, "13730": 264, "13732": 264, "13734": 264, "13736": 264, "13738": 264, "13740": 264, "13742": 264, "13744": 264, "13746": 264, "13748": 264, "13750": 264, "13752": 264, "13754": 264, "13756": 264, "13758": 264, "13760": 264, "13762": 264, "13764": 264, "13766": 264, "13768": 264, "13770": 264, "13772": 264, "13774": 264, "13776": 264, "13778": 264, "13780": 264, "13782": 264, "13784": 264, "13786": 264, "13788": 264, "13790": 264, "13792": 264, "13794": 264, "13796": 264, "13798": 264, "13800": 264, "13802": 264, "13804": 264, "13806": 264, "13808": 264, "13810": 264, "13812": 264, "13814": 264, "13816": 264, "13818": 264, "13820": 264, "13822": 264, "13824": 264, "13826": 264, "13828": 264, "13830": 264, "13832": 264, "13834": 264, "13836": 264, "13838": 264, "13840": 264, "13842": 264, "13844": 264, "13846": 264, "13848": 264, "13850": 264, "13852": 264, "13854": 264, "13856": 264, "13858": 264, "13860": 264, "13862": 264, "13864": 264, "13866": 264, "13868": 264, "13870": 264, "13872": 264, "13874": 264, "13876": 264, "13878": 264, "13880": 264, "13882": 264, "13884": 264, "13886": 264, "13888": 264, "13890": 264, "13892": 264, "13894": 264, "13896": 264, "13898": 264, "13900": 264, "13902": 264, "13904": 264, "13906": 264, "13908": 264, "13910": 264, "13912": 264, "13914": 264, "13916": 264, "13918": 264, "13920": 264, "13922": 264, "13924": 264, "13926": 264, "13928": 264, "13930": 264, "13932": 264, "13934": 264, "13936": 264, "13938": 264, "13940": 264, "13942": 264, "13944": 264, "13946": 264, "13948": 264, "13950": 264, "13952": 264, "13954": 264, "13956": 264, "13958": 264, "13960": [264, 1034], "13962": 264, "13964": 264, "13966": 264, "13968": 264, "13970": 264, "13972": 264, "13974": 264, "13976": 264, "13978": 264, "13980": 264, "13982": 264, "13984": 264, "13986": 264, "13988": 264, "13990": 264, "13992": 264, "13994": 264, "13996": 264, "13998": 264, "14000": 264, "14002": 264, "14004": 264, "14006": 264, "14008": 264, "14010": 264, "14012": 264, "14014": 264, "14016": 264, "14018": 264, "14020": 264, "14022": 264, "14024": 264, "14026": 264, "14028": 264, "14030": 264, "14032": 264, "14034": 264, "14036": 264, "14038": 264, "14040": 264, "14042": 264, "14044": 264, "14046": 264, "14048": 264, "14050": 264, "14052": 264, "14054": 264, "14056": 264, "14058": 264, "14060": 264, "14062": 264, "14064": 264, "14066": 264, "14068": 264, "14070": 264, "14072": 264, "14074": 264, "14076": 264, "14078": 264, "14080": 264, "14082": 264, "14084": 264, "14086": 264, "14088": 264, "14090": 264, "14092": 264, "14094": 264, "14096": 264, "14098": 264, "14100": 264, "14102": 264, "14104": 264, "14106": 264, "14108": 264, "14110": 264, "14112": 264, "14114": 264, "14116": 264, "14118": 264, "14120": 264, "14122": 264, "14124": 264, "14126": 264, "14128": 264, "14130": 264, "14132": 264, "14134": 264, "14136": 264, "14138": 264, "14140": 264, "14142": 264, "14144": 264, "14146": 264, "14148": 264, "14150": 264, "14152": 264, "14154": 264, "14156": 264, "14158": 264, "14160": 264, "14162": 264, "14164": 264, "14166": 264, "14168": 264, "14170": 264, "14172": 264, "14174": 264, "14176": 264, "14178": 264, "14180": 264, "14182": 264, "14184": 264, "14186": 264, "14188": 264, "14190": 264, "14192": 264, "14194": 264, "14196": 264, "14198": 264, "14200": 264, "14202": 264, "14204": 264, "14206": 264, "14208": 264, "14210": 264, "14212": 264, "14214": 264, "14216": 264, "14218": 264, "14220": 264, "14222": 264, "14224": 264, "14226": 264, "14228": 264, "14230": 264, "14232": 264, "14234": 264, "14236": 264, "14238": 264, "14240": 264, "14242": 264, "14244": 264, "14246": 264, "14248": 264, "14250": 264, "14252": 264, "14254": 264, "14256": 264, "14258": 264, "14260": 264, "14262": 264, "14264": 264, "14266": 264, "14268": 264, "14270": 264, "14272": 264, "14274": 264, "14276": 264, "14278": 264, "14280": 264, "14282": 264, "14284": 264, "14286": 264, "14288": 264, "14290": 264, "14292": 264, "14294": 264, "14296": 264, "14298": 264, "14300": 264, "14302": 264, "14304": 264, "14306": 264, "14308": 264, "14310": 264, "14312": 264, "14314": 264, "14316": 264, "14318": 264, "14320": 264, "14322": 264, "14324": 264, "14326": 264, "14328": 264, "14330": 264, "14332": 264, "14334": 264, "14336": 264, "14338": 264, "14340": 264, "14342": 264, "14344": 264, "14346": 264, "14348": 264, "14350": 264, "14352": 264, "14354": 264, "14356": 264, "14358": 264, "14360": 264, "14362": 264, "14364": 264, "14366": 264, "14368": 264, "14370": 264, "14372": 264, "14374": 264, "14376": 264, "14378": 264, "14380": 264, "14382": 264, "14384": 264, "14388": 264, "14390": 264, "14392": 264, "14394": 264, "14396": 264, "14398": 264, "14400": 264, "14402": 264, "14404": 264, "14406": 264, "14408": 264, "14410": 264, "14412": 264, "14414": 264, "14416": 264, "14418": 264, "14420": 264, "14422": 264, "14424": 264, "14426": 264, "14428": 264, "14430": 264, "14432": 264, "14434": 264, "14436": 264, "14438": 264, "14440": 264, "14442": 264, "14444": 264, "14446": 264, "14448": 264, "14450": 264, "14452": 264, "14454": 264, "14456": 264, "14458": 264, "14460": 264, "14462": 264, "14464": 264, "14466": 264, "14468": 264, "14470": 264, "14472": 264, "14474": 264, "14476": 264, "14478": 264, "14480": 264, "14482": 264, "14484": 264, "14486": 264, "14488": 264, "14490": 264, "14492": 264, "14494": 264, "14496": 264, "14498": 264, "14500": 264, "14502": 264, "14504": 264, "14506": 264, "14508": 264, "14510": 264, "14512": 264, "14514": 264, "14516": 264, "14518": 264, "14520": 264, "14522": 264, "14524": 264, "14526": 264, "14528": 264, "14530": 264, "14532": 264, "14534": 264, "14536": 264, "14538": 264, "14540": 264, "14542": 264, "14544": 264, "14546": 264, "14548": 264, "14550": 264, "14552": 264, "14554": 264, "14556": 264, "14558": 264, "14560": 264, "14562": 264, "14564": 264, "14566": 264, "14568": 264, "14570": 264, "14572": 264, "14574": 264, "14576": 264, "14578": 264, "14580": 264, "14582": 264, "14584": 264, "14586": 264, "14588": 264, "14590": 264, "14592": 264, "14594": 264, "14596": 264, "14598": 264, "14600": 264, "14602": 264, "14604": 264, "14606": 264, "14608": 264, "14610": 264, "14612": 264, "14614": 264, "14616": 264, "14618": 264, "14620": 264, "14622": 264, "14624": 264, "14626": 264, "14628": 264, "14630": 264, "14632": 264, "14634": 264, "14636": 264, "14638": 264, "14640": 264, "14642": 264, "14644": 264, "14646": 264, "14648": 264, "14650": 264, "14652": 264, "14654": 264, "14656": 264, "14658": 264, "14660": 264, "14662": 264, "14664": 264, "14666": 264, "14668": 264, "14670": 264, "14672": 264, "14674": 264, "14676": 264, "14678": 264, "14680": 264, "14682": 264, "14684": 264, "14686": 264, "14688": 264, "14690": 264, "14692": 264, "14694": 264, "14696": 264, "14698": 264, "14700": 264, "14702": 264, "14704": 264, "14706": 264, "14708": 264, "14710": 264, "14712": 264, "14714": 264, "14716": 264, "14718": 264, "14720": 264, "14722": 264, "14724": 264, "14726": 264, "14728": 264, "14730": 264, "14732": 264, "14734": 264, "14736": 264, "14738": 264, "14740": 264, "14742": 264, "14744": 264, "14746": 264, "14748": 264, "14750": 264, "14752": 264, "14754": 264, "14756": 264, "14758": 264, "14760": 264, "14762": 264, "14764": 264, "14766": 264, "14768": 264, "14770": 264, "14772": 264, "14774": 264, "14776": 264, "14778": 264, "14780": 264, "14782": 264, "14784": 264, "14786": 264, "14788": 264, "14790": 264, "14792": 264, "14794": 264, "14796": 264, "14798": 264, "14800": 264, "14802": 264, "14804": 264, "14806": 264, "14808": 264, "14810": 264, "14812": 264, "14814": 264, "14816": 264, "14818": 264, "14820": 264, "14822": 264, "14824": 264, "14826": 264, "14828": 264, "14830": 264, "14832": 264, "14834": 264, "14836": 264, "14838": 264, "14840": 264, "14842": 264, "14844": 264, "14846": 264, "14848": 264, "14850": 264, "14852": 264, "14854": 264, "14856": 264, "14858": 264, "14860": 264, "14862": 264, "14864": 264, "14866": 264, "14868": 264, "14870": 264, "14872": 264, "14874": 264, "14876": 264, "14878": 264, "14880": 264, "14882": [264, 643], "14884": 264, "14886": 264, "14888": 264, "14890": 264, "14892": 264, "14894": 264, "14896": 264, "14898": 264, "14900": 264, "14902": 264, "14904": 264, "14906": 264, "14908": 264, "14910": 264, "14912": 264, "14914": 264, "14916": 264, "14918": 264, "14920": 264, "14922": 264, "14924": 264, "14926": 264, "14928": 264, "14930": 264, "14932": 264, "14934": 264, "14936": 264, "14938": 264, "14940": 264, "14942": 264, "14944": 264, "14946": 264, "14948": 264, "14950": 264, "14952": 264, "14954": 264, "14956": 264, "14958": 264, "14960": 264, "14962": 264, "14964": 264, "14966": 264, "14968": 264, "14970": 264, "14972": 264, "14974": 264, "14976": 264, "14978": 264, "14980": 264, "14982": 264, "14984": 264, "14986": 264, "14988": 264, "14990": [264, 313], "14992": 264, "14994": 264, "14996": 264, "14998": 264, "15002": 264, "15004": 264, "15006": 264, "15008": 264, "15010": 264, "15012": 264, "15014": 264, "15016": 264, "15018": 264, "15020": 264, "15022": 264, "15024": 264, "15026": 264, "15028": 264, "15030": 264, "15032": 264, "15034": 264, "15036": 264, "15038": 264, "15040": 264, "15042": 264, "15044": 264, "15046": 264, "15048": 264, "15050": 264, "15052": 264, "15054": 264, "15056": 264, "15058": 264, "15060": 264, "15062": 264, "15064": 264, "15066": 264, "15068": 264, "15070": 264, "15072": 264, "15074": 264, "15076": 264, "15078": 264, "15080": 264, "15082": 264, "15084": 264, "15086": 264, "15088": 264, "15090": 264, "15092": 264, "15094": 264, "15096": 264, "15098": 264, "15100": 264, "15102": 264, "15104": 264, "15106": 264, "15108": 264, "15110": 264, "15112": 264, "15114": 264, "15116": 264, "15118": 264, "15120": 264, "15122": 264, "15124": 264, "15126": 264, "15128": 264, "15130": 264, "15132": 264, "15134": 264, "15136": 264, "15138": 264, "15140": 264, "15142": 264, "15144": 264, "15146": 264, "15148": 264, "15150": 264, "15152": 264, "15154": 264, "15156": 264, "15158": 264, "15160": 264, "15162": 264, "15164": 264, "15166": 264, "15168": 264, "15170": 264, "15172": 264, "15174": 264, "15176": 264, "15178": 264, "15180": 264, "15182": 264, "15184": 264, "15186": 264, "15188": 264, "15190": 264, "15192": 264, "15194": 264, "15196": 264, "15198": 264, "15200": 264, "15202": 264, "15204": 264, "15206": 264, "15208": 264, "15210": 264, "15212": 264, "15214": 264, "15216": 264, "15218": 264, "15220": 264, "15222": 264, "15224": 264, "15226": 264, "15228": 264, "15230": 264, "15232": 264, "15234": 264, "15236": 264, "15238": 264, "15240": 264, "15242": 264, "15244": [264, 1080], "15246": 264, "15248": 264, "15250": 264, "15252": 264, "15254": 264, "15256": 264, "15258": 264, "15260": 264, "15262": 264, "15264": 264, "15266": 264, "15268": 264, "15270": 264, "15272": 264, "15274": 264, "15276": 264, "15278": 264, "15280": 264, "15282": 264, "15284": 264, "15286": 264, "15288": 264, "15290": 264, "15292": 264, "15294": 264, "15296": 264, "15298": 264, "15300": 264, "15302": 264, "15304": 264, "15306": 264, "15308": 264, "15310": 264, "15312": 264, "15314": 264, "15316": 264, "15318": 264, "15320": 264, "15322": 264, "15324": 264, "15326": 264, "15328": 264, "15330": 264, "15332": 264, "15334": 264, "15336": 264, "15338": 264, "15340": 264, "15342": 264, "15344": 264, "15346": 264, "15348": 264, "15350": 264, "15352": 264, "15354": 264, "15356": 264, "15358": 264, "15360": 264, "15362": 264, "15364": 264, "15366": 264, "15368": 264, "15370": 264, "15372": 264, "15374": 264, "15376": 264, "15378": 264, "15380": 264, "15382": 264, "15384": 264, "15386": 264, "15388": 264, "15390": 264, "15392": 264, "15394": 264, "15396": 264, "15398": 264, "15400": 264, "15402": 264, "15404": 264, "15406": 264, "15408": 264, "15410": 264, "15412": 264, "15414": 264, "15416": 264, "15418": 264, "15420": 264, "15422": 264, "15424": 264, "15426": 264, "15428": 264, "15430": 264, "15432": 264, "15434": 264, "15436": 264, "15438": 264, "15440": 264, "15442": 264, "15444": 264, "15446": 264, "15448": 264, "15450": 264, "15452": 264, "15454": 264, "15456": 264, "15458": 264, "15460": 264, "15462": 264, "15464": 264, "15466": 264, "15468": 264, "15470": 264, "15472": 264, "15474": 264, "15476": 264, "15478": 264, "15480": 264, "15482": 264, "15484": 264, "15486": 264, "15488": 264, "15490": 264, "15492": 264, "15494": 264, "15496": 264, "15498": 264, "15500": 264, "15502": 264, "15504": 264, "15506": 264, "15508": 264, "15510": 264, "15512": 264, "15514": 264, "15516": 264, "15518": 264, "15520": 264, "15522": 264, "15524": 264, "15526": 264, "15528": 264, "15530": 264, "15532": 264, "15534": 264, "15536": 264, "15538": 264, "15540": 264, "15542": 264, "15544": 264, "15546": 264, "15548": 264, "15550": 264, "15552": 264, "15554": 264, "15556": 264, "15558": 264, "15560": 264, "15562": 264, "15564": 264, "15566": 264, "15568": 264, "15570": 264, "15572": 264, "15574": 264, "15576": 264, "15578": 264, "15580": 264, "15582": 264, "15584": 264, "15586": 264, "15588": 264, "15590": 264, "15592": 264, "15594": 264, "15596": 264, "15598": 264, "15600": 264, "15602": 264, "15604": 264, "15606": 264, "15608": 264, "15610": 264, "15612": 264, "15614": 264, "15616": 264, "15618": 264, "15620": 264, "15622": 264, "15624": 264, "15626": 264, "15628": 264, "15630": 264, "15632": 264, "15634": 264, "15636": 264, "15638": 264, "15640": 264, "15642": 264, "15644": 264, "15646": 264, "15648": 264, "15650": 264, "15652": 264, "15654": 264, "15656": 264, "15658": 264, "15660": 264, "15662": 264, "15664": 264, "15666": 264, "15668": 264, "15670": 264, "15672": 264, "15674": 264, "15676": 264, "15678": 264, "15680": 264, "15682": 264, "15684": 264, "15686": 264, "15688": 264, "15690": 264, "15692": 264, "15694": 264, "15696": 264, "15698": 264, "15700": 264, "15702": 264, "15704": 264, "15706": 264, "15708": 264, "15710": 264, "15712": 264, "15714": 264, "15716": 264, "15718": 264, "15720": 264, "15722": 264, "15724": 264, "15726": 264, "15728": 264, "15730": 264, "15732": 264, "15734": 264, "15736": 264, "15738": 264, "15740": 264, "15742": 264, "15744": 264, "15746": 264, "15748": 264, "15750": 264, "15752": 264, "15754": 264, "15756": 264, "15758": 264, "15760": 264, "15762": 264, "15764": 264, "15766": 264, "15768": 264, "15770": 264, "15772": 264, "15774": 264, "15776": 264, "15778": 264, "15780": 264, "15782": 264, "15784": 264, "15786": 264, "15788": 264, "15790": 264, "15792": 264, "15794": 264, "15796": 264, "15798": 264, "15800": 264, "15802": 264, "15804": 264, "15806": 264, "15808": 264, "15810": 264, "15812": 264, "15814": 264, "15816": 264, "15818": 264, "15820": 264, "15822": 264, "15824": 264, "15826": 264, "15828": 264, "15830": 264, "15832": 264, "15834": 264, "15836": 264, "15838": 264, "15840": 264, "15842": 264, "15844": 264, "15846": 264, "15848": 264, "15850": 264, "15852": 264, "15854": 264, "15856": 264, "15858": 264, "15860": 264, "15862": 264, "15864": 264, "15866": 264, "15868": 264, "15870": 264, "15872": 264, "15874": 264, "15876": 264, "15878": 264, "15880": 264, "15882": 264, "15884": 264, "15886": 264, "15888": 264, "15890": 264, "15892": 264, "15894": 264, "15896": 264, "15898": 264, "15900": 264, "15902": 264, "15904": 264, "15906": 264, "15908": 264, "15910": 264, "15912": 264, "15914": 264, "15916": 264, "15918": 264, "15920": 264, "15922": 264, "15924": 264, "15926": 264, "15928": 264, "15930": 264, "15932": 264, "15934": 264, "15936": 264, "15938": 264, "15940": 264, "15942": 264, "15944": 264, "15946": 264, "15948": 264, "15950": 264, "15952": 264, "15954": 264, "15956": 264, "15958": 264, "15960": 264, "15962": 264, "15964": 264, "15966": 264, "15968": 264, "15970": 264, "15972": 264, "15974": 264, "15976": 264, "15978": 264, "15980": 264, "15982": 264, "15984": 264, "15986": 264, "15988": 264, "15990": 264, "15992": 264, "15994": 264, "15996": 264, "15998": 264, "16000": 264, "16002": 264, "16004": 264, "16006": 264, "16008": 264, "16010": 264, "16012": 264, "16014": 264, "16016": 264, "16018": 264, "16020": 264, "16022": 264, "16024": 264, "16026": 264, "16028": 264, "16030": 264, "16032": 264, "16034": 264, "16036": 264, "16038": 264, "16040": 264, "16042": 264, "16044": 264, "16046": 264, "16048": 264, "16050": 264, "16052": 264, "16054": 264, "16056": 264, "16058": 264, "16060": 264, "16062": 264, "16064": 264, "16066": 264, "16068": 264, "16070": 264, "16072": 264, "16074": 264, "16076": 264, "16078": 264, "16080": 264, "16082": 264, "16084": 264, "16086": 264, "16088": 264, "16090": 264, "16092": 264, "16094": 264, "16096": 264, "16098": 264, "16100": 264, "16102": 264, "16104": 264, "16106": 264, "16108": 264, "16110": 264, "16112": 264, "16114": 264, "16116": 264, "16118": 264, "16120": 264, "16122": 264, "16124": 264, "16126": 264, "16128": 264, "16130": 264, "16132": 264, "16134": 264, "16136": 264, "16138": 264, "16140": 264, "16142": 264, "16144": 264, "16146": 264, "16148": 264, "16150": 264, "16152": 264, "16154": 264, "16156": 264, "16158": 264, "16160": 264, "16162": 264, "16164": 264, "16166": 264, "16168": 264, "16170": 264, "16172": 264, "16174": 264, "16176": 264, "16178": 264, "16180": 264, "16182": 264, "16184": 264, "16186": 264, "16188": 264, "16190": 264, "16192": 264, "16194": 264, "16196": 264, "16198": 264, "16200": 264, "16202": 264, "16204": 264, "16206": 264, "16208": 264, "16210": 264, "16212": 264, "16214": 264, "16216": 264, "16218": 264, "16220": 264, "16222": 264, "16224": 264, "16226": 264, "16228": 264, "16230": 264, "16232": 264, "16234": 264, "16236": 264, "16238": 264, "16240": 264, "16242": 264, "16244": 264, "16246": 264, "16248": 264, "16250": 264, "16252": 264, "16254": 264, "16256": 264, "16258": 264, "16260": 264, "16262": 264, "16264": 264, "16266": 264, "16268": 264, "16270": 264, "16272": 264, "16274": 264, "16276": 264, "16278": 264, "16280": 264, "16282": 264, "16284": 264, "16286": 264, "16288": 264, "16290": 264, "16292": 264, "16294": 264, "16296": 264, "16298": 264, "16300": 264, "16302": 264, "16304": 264, "16306": 264, "16308": 264, "16310": 264, "16312": 264, "16314": 264, "16316": 264, "16318": 264, "16320": 264, "16322": 264, "16324": 264, "16326": 264, "16328": 264, "16330": 264, "16332": 264, "16334": 264, "16336": 264, "16338": 264, "16340": 264, "16342": 264, "16344": 264, "16346": 264, "16348": 264, "16350": 264, "16352": 264, "16354": 264, "16356": 264, "16358": 264, "16360": 264, "16362": 264, "16364": 264, "16366": 264, "16368": 264, "16370": 264, "16372": 264, "16374": 264, "16376": 264, "16378": 264, "16380": 264, "16382": 264, "16386": 264, "16388": 264, "16390": 264, "16392": 264, "16394": 264, "16396": 264, "16398": 264, "16400": 264, "16402": 264, "16404": 264, "16406": 264, "16408": 264, "16410": 264, "16412": 264, "16414": 264, "16416": 264, "16418": 264, "16420": 264, "16422": 264, "16424": 264, "16426": 264, "16428": 264, "16430": 264, "16432": 264, "16434": 264, "16436": 264, "16438": 264, "16440": 264, "16442": 264, "16444": 264, "16446": 264, "16448": 264, "16450": 264, "16452": 264, "16454": 264, "16456": 264, "16458": 264, "16460": 264, "16462": 264, "16464": 264, "16466": 264, "16468": 264, "16470": 264, "16472": 264, "16474": 264, "16476": 264, "16478": 264, "16480": 264, "16482": 264, "16484": 264, "16486": 264, "16488": 264, "16490": 264, "16492": 264, "16494": 264, "16496": 264, "16498": 264, "16500": 264, "16502": 264, "16504": 264, "16506": 264, "16508": 264, "16510": 264, "16512": 264, "16514": 264, "16516": 264, "16518": 264, "16520": 264, "16522": 264, "16524": 264, "16526": 264, "16528": 264, "16530": 264, "16532": 264, "16534": 264, "16536": 264, "16538": 264, "16540": 264, "16542": 264, "16544": 264, "16546": 264, "16548": 264, "16550": 264, "16552": 264, "16554": 264, "16556": 264, "16558": 264, "16560": 264, "16562": 264, "16564": 264, "16566": 264, "16568": 264, "16570": 264, "16572": 264, "16574": 264, "16576": 264, "16578": 264, "16580": 264, "16582": 264, "16584": 264, "16586": 264, "16588": 264, "16590": 264, "16592": 264, "16594": 264, "16596": 264, "16598": 264, "16600": 264, "16602": 264, "16604": 264, "16606": 264, "16608": 264, "16610": 264, "16612": 264, "16614": 264, "16616": 264, "16618": 264, "16620": 264, "16622": 264, "16624": 264, "16626": 264, "16628": 264, "16630": 264, "16632": 264, "16634": 264, "16636": 264, "16638": 264, "16640": 264, "16642": 264, "16644": 264, "16646": 264, "16648": 264, "16650": 264, "16652": 264, "16654": 264, "16656": 264, "16658": 264, "16660": 264, "16662": 264, "16664": 264, "16666": 264, "16668": 264, "16670": 264, "16672": 264, "16674": 264, "16676": 264, "16678": 264, "16680": 264, "16682": 264, "16684": 264, "16686": 264, "16688": 264, "16690": 264, "16692": 264, "16694": 264, "16696": 264, "16698": 264, "16700": 264, "16702": 264, "16704": 264, "16706": 264, "16708": 264, "16710": 264, "16712": 264, "16714": 264, "16716": 264, "16718": 264, "16720": 264, "16722": 264, "16724": 264, "16726": 264, "16728": 264, "16730": 264, "16732": 264, "16734": 264, "16736": 264, "16738": 264, "16740": 264, "16742": 264, "16744": 264, "16746": 264, "16748": 264, "16750": 264, "16752": 264, "16754": 264, "16756": 264, "16758": 264, "16760": 264, "16762": 264, "16764": 264, "16766": 264, "16768": 264, "16770": 264, "16772": 264, "16774": 264, "16776": 264, "16778": 264, "16780": 264, "16782": 264, "16784": 264, "16786": 264, "16788": 264, "16790": 264, "16792": 264, "16794": 264, "16796": 264, "16798": 264, "16800": 264, "16802": 264, "16804": 264, "16806": 264, "16808": 264, "16810": 264, "16812": 264, "16814": 264, "16816": 264, "16818": 264, "16820": 264, "16822": 264, "16824": 264, "16826": 264, "16828": 264, "16830": 264, "16832": 264, "16834": 264, "16836": 264, "16838": 264, "16840": 264, "16842": 264, "16844": 264, "16846": 264, "16848": 264, "16850": 264, "16852": 264, "16854": 264, "16856": 264, "16858": 264, "16860": 264, "16862": 264, "16864": 264, "16866": 264, "16868": 264, "16870": 264, "16872": 264, "16874": 264, "16876": 264, "16878": 264, "16880": 264, "16882": 264, "16884": 264, "16886": 264, "16888": 264, "16890": 264, "16892": 264, "16894": 264, "16896": 264, "16898": 264, "16900": 264, "16902": 264, "16904": 264, "16906": 264, "16908": 264, "16910": 264, "16912": 264, "16914": 264, "16916": 264, "16918": 264, "16920": 264, "16922": 264, "16924": 264, "16926": 264, "16928": 264, "16930": 264, "16932": 264, "16934": 264, "16936": 264, "16938": 264, "16940": 264, "16942": 264, "16944": 264, "16946": 264, "16948": 264, "16950": 264, "16952": 264, "16954": 264, "16956": 264, "16958": 264, "16960": 264, "16962": 264, "16964": 264, "16966": 264, "16968": 264, "16970": 264, "16972": 264, "16974": 264, "16976": 264, "16978": 264, "16980": 264, "16982": 264, "16984": 264, "16986": 264, "16988": 264, "16990": 264, "16992": 264, "16994": 264, "16996": 264, "16998": 264, "17000": 264, "17002": 264, "17004": 264, "17006": 264, "17008": 264, "17010": 264, "17012": 264, "17014": 264, "17016": 264, "17018": 264, "17020": 264, "17022": 264, "17024": 264, "17026": 264, "17028": 264, "17030": 264, "17032": 264, "17034": 264, "17036": 264, "17038": 264, "17040": 264, "17042": 264, "17044": 264, "17046": 264, "17048": 264, "17050": 264, "17052": 264, "17054": 264, "17056": 264, "17058": 264, "17060": 264, "17062": 264, "17064": 264, "17066": 264, "17068": 264, "17070": 264, "17072": 264, "17074": 264, "17076": 264, "17078": 264, "17080": 264, "17082": 264, "17084": 264, "17086": 264, "17088": 264, "17090": 264, "17092": 264, "17094": 264, "17096": 264, "17098": 264, "17100": 264, "17102": 264, "17104": 264, "17106": 264, "17108": 264, "17110": 264, "17112": 264, "17114": 264, "17116": 264, "17118": 264, "17120": 264, "17122": 264, "17124": 264, "17126": [264, 313], "17128": 264, "17130": 264, "17132": 264, "17134": 264, "17136": 264, "17138": 264, "17140": 264, "17142": 264, "17144": 264, "17146": 264, "17148": 264, "17150": 264, "17152": 264, "17154": 264, "17156": 264, "17158": 264, "17160": 264, "17162": 264, "17164": 264, "17166": 264, "17168": 264, "17170": 264, "17172": 264, "17174": 264, "17176": 264, "17178": 264, "17180": 264, "17182": 264, "17184": 264, "17186": 264, "17188": 264, "17190": 264, "17192": 264, "17194": 264, "17196": 264, "17198": 264, "17200": 264, "17202": 264, "17204": 264, "17206": 264, "17208": 264, "17210": 264, "17212": 264, "17214": 264, "17216": 264, "17218": 264, "17220": 264, "17222": 264, "17224": 264, "17226": 264, "17228": 264, "17230": 264, "17232": 264, "17234": 264, "17236": 264, "17238": 264, "17240": 264, "17242": 264, "17244": 264, "17246": 264, "17248": 264, "17250": 264, "17252": 264, "17254": 264, "17256": 264, "17258": 264, "17260": 264, "17262": 264, "17264": 264, "17266": 264, "17268": 264, "17270": 264, "17272": 264, "17274": 264, "17276": 264, "17278": 264, "17280": 264, "17282": 264, "17284": 264, "17286": 264, "17288": 264, "17290": 264, "17292": 264, "17294": 264, "17296": 264, "17298": 264, "17300": 264, "17302": 264, "17304": 264, "17306": 264, "17308": 264, "17310": 264, "17312": 264, "17314": 264, "17316": 264, "17318": 264, "17320": 264, "17322": 264, "17324": 264, "17326": 264, "17328": 264, "17330": 264, "17332": 264, "17334": 264, "17336": 264, "17338": 264, "17340": 264, "17342": 264, "17344": 264, "17346": 264, "17348": 264, "17350": 264, "17352": 264, "17354": 264, "17356": 264, "17358": 264, "17360": 264, "17362": 264, "17364": 264, "17366": 264, "17368": 264, "17370": 264, "17372": 264, "17374": 264, "17376": 264, "17378": 264, "17380": 264, "17382": 264, "17384": 264, "17386": 264, "17388": 264, "17390": 264, "17392": 264, "17394": 264, "17396": 264, "17398": 264, "17400": 264, "17402": 264, "17404": 264, "17406": 264, "17408": 264, "17410": 264, "17412": 264, "17414": 264, "17416": 264, "17418": 264, "17420": 264, "17422": 264, "17424": 264, "17426": 264, "17428": 264, "17430": 264, "17432": 264, "17434": 264, "17436": 264, "17438": 264, "17440": 264, "17442": 264, "17444": 264, "17446": 264, "17448": 264, "17450": 264, "17452": 264, "17454": 264, "17456": 264, "17458": 264, "17460": 264, "17462": 264, "17464": 264, "17466": 264, "17468": 264, "17470": 264, "17472": 264, "17474": 264, "17476": 264, "17478": 264, "17480": 264, "17482": 264, "17484": 264, "17486": 264, "17488": 264, "17490": 264, "17492": 264, "17494": 264, "17496": 264, "17498": 264, "17500": 264, "17502": 264, "17504": 264, "17506": 264, "17508": 264, "17510": 264, "17512": 264, "17514": 264, "17516": 264, "17518": 264, "17520": 264, "17522": 264, "17524": 264, "17526": 264, "17528": 264, "17530": 264, "17532": 264, "17534": 264, "17536": 264, "17538": 264, "17540": 264, "17542": 264, "17544": 264, "17546": 264, "17548": 264, "17550": 264, "17552": 264, "17554": 264, "17556": 264, "17558": 264, "17560": 264, "17562": 264, "17564": 264, "17566": 264, "17568": 264, "17570": 264, "17572": 264, "17574": 264, "17576": 264, "17578": 264, "17580": 264, "17582": 264, "17584": 264, "17586": 264, "17588": 264, "17590": 264, "17592": 264, "17594": 264, "17596": 264, "17598": 264, "17600": 264, "17602": 264, "17604": 264, "17606": 264, "17608": 264, "17610": 264, "17612": 264, "17614": 264, "17616": 264, "17618": 264, "17620": 264, "17622": 264, "17624": 264, "17626": 264, "17628": 264, "17630": 264, "17632": 264, "17634": 264, "17636": 264, "17638": 264, "17640": 264, "17642": 264, "17644": 264, "17646": 264, "17648": 264, "17650": 264, "17652": 264, "17654": 264, "17656": 264, "17658": 264, "17660": 264, "17662": 264, "17664": 264, "17666": 264, "17668": 264, "17670": 264, "17672": 264, "17674": 264, "17676": 264, "17678": 264, "17680": 264, "17682": 264, "17684": 264, "17686": 264, "17688": 264, "17690": 264, "17692": 264, "17694": 264, "17696": 264, "17698": 264, "17700": 264, "17702": 264, "17704": 264, "17706": 264, "17708": 264, "17710": 264, "17712": 264, "17714": 264, "17716": 264, "17718": 264, "17720": 264, "17722": 264, "17724": 264, "17726": 264, "17728": 264, "17730": 264, "17732": 264, "17734": 264, "17736": 264, "17738": 264, "17740": 264, "17742": 264, "17744": 264, "17746": 264, "17748": 264, "17750": 264, "17752": 264, "17754": 264, "17756": 264, "17758": 264, "17760": 264, "17762": 264, "17764": 264, "17766": 264, "17768": 264, "17770": 264, "17772": 264, "17774": 264, "17776": 264, "17778": 264, "17780": 264, "17782": 264, "17784": 264, "17786": 264, "17788": 264, "17790": 264, "17792": 264, "17794": 264, "17796": 264, "17798": 264, "17800": 264, "17802": 264, "17804": 264, "17806": 264, "17808": 264, "17810": 264, "17812": 264, "17814": 264, "17816": 264, "17818": 264, "17820": 264, "17822": 264, "17824": 264, "17826": 264, "17828": 264, "17830": 264, "17832": 264, "17834": 264, "17836": 264, "17838": 264, "17840": 264, "17842": 264, "17844": 264, "17846": 264, "17848": 264, "17850": 264, "17852": 264, "17854": 264, "17856": 264, "17858": 264, "17860": 264, "17862": 264, "17864": 264, "17866": 264, "17868": 264, "17870": 264, "17872": 264, "17874": 264, "17876": 264, "17878": 264, "17880": 264, "17882": 264, "17884": 264, "17886": 264, "17888": 264, "17890": 264, "17892": 264, "17894": 264, "17896": 264, "17898": 264, "17900": 264, "17902": 264, "17904": 264, "17906": 264, "17908": 264, "17910": 264, "17912": 264, "17914": 264, "17916": 264, "17918": 264, "17920": 264, "17922": 264, "17924": 264, "17926": 264, "17928": 264, "17930": 264, "17932": 264, "17934": 264, "17936": 264, "17938": 264, "17940": 264, "17942": 264, "17944": 264, "17946": 264, "17948": 264, "17950": 264, "17952": 264, "17954": 264, "17956": 264, "17958": 264, "17960": 264, "17962": 264, "17964": 264, "17966": 264, "17968": 264, "17970": 264, "17972": 264, "17974": 264, "17976": 264, "17978": 264, "17980": 264, "17982": 264, "17984": 264, "17986": 264, "17988": 264, "17990": 264, "17992": 264, "17994": 264, "17996": 264, "17998": 264, "18000": [264, 995], "18002": 264, "18004": 264, "18006": 264, "18008": 264, "18010": 264, "18012": 264, "18014": 264, "18016": 264, "18018": 264, "18020": 264, "18022": 264, "18024": 264, "18026": 264, "18028": 264, "18030": 264, "18032": 264, "18034": 264, "18036": 264, "18038": 264, "18040": 264, "18042": 264, "18044": 264, "18046": 264, "18048": 264, "18050": 264, "18052": 264, "18054": 264, "18056": 264, "18058": 264, "18060": 264, "18062": 264, "18064": 264, "18066": 264, "18068": 264, "18070": 264, "18072": 264, "18074": 264, "18076": 264, "18078": 264, "18080": 264, "18082": 264, "18084": 264, "18086": 264, "18088": 264, "18090": 264, "18092": 264, "18094": 264, "18096": 264, "18098": 264, "18100": 264, "18102": 264, "18104": 264, "18106": 264, "18108": 264, "18110": 264, "18112": 264, "18114": 264, "18116": 264, "18118": 264, "18120": 264, "18122": 264, "18124": 264, "18126": 264, "18128": 264, "18130": 264, "18132": 264, "18134": 264, "18136": 264, "18138": 264, "18140": 264, "18142": 264, "18144": 264, "18146": 264, "18148": 264, "18150": 264, "18152": 264, "18154": 264, "18156": 264, "18158": 264, "18160": 264, "18162": 264, "18164": 264, "18166": 264, "18168": 264, "18170": 264, "18172": 264, "18174": 264, "18176": 264, "18178": 264, "18180": 264, "18182": 264, "18184": 264, "18186": 264, "18188": 264, "18190": 264, "18192": 264, "18194": 264, "18196": 264, "18198": 264, "18200": 264, "18202": 264, "18204": 264, "18206": 264, "18208": 264, "18210": 264, "18212": 264, "18214": 264, "18216": 264, "18218": 264, "18220": 264, "18222": 264, "18224": 264, "18226": 264, "18228": 264, "18230": 264, "18232": 264, "18234": 264, "18236": 264, "18238": 264, "18240": 264, "18242": 264, "18244": 264, "18246": 264, "18248": 264, "18250": 264, "18252": 264, "18254": 264, "18256": 264, "18258": 264, "18260": 264, "18262": 264, "18264": 264, "18266": 264, "18268": 264, "18270": 264, "18272": 264, "18274": 264, "18276": 264, "18278": 264, "18280": 264, "18282": 264, "18284": 264, "18286": 264, "18288": 264, "18290": 264, "18292": 264, "18294": 264, "18296": 264, "18298": 264, "18300": 264, "18302": 264, "18304": 264, "18306": 264, "18308": 264, "18310": 264, "18312": 264, "18314": 264, "18316": 264, "18318": 264, "18320": 264, "18322": 264, "18324": 264, "18326": 264, "18328": 264, "18330": 264, "18332": 264, "18334": 264, "18336": 264, "18338": 264, "18340": 264, "18342": 264, "18344": 264, "18346": 264, "18348": 264, "18350": 264, "18352": 264, "18354": 264, "18356": 264, "18358": 264, "18360": 264, "18362": 264, "18364": 264, "18366": 264, "18368": 264, "18370": 264, "18372": 264, "18374": 264, "18376": 264, "18378": 264, "18380": 264, "18382": 264, "18384": [264, 1065], "18386": 264, "18388": 264, "18390": 264, "18392": 264, "18394": 264, "18396": 264, "18398": 264, "18400": 264, "18402": 264, "18404": 264, "18406": 264, "18408": 264, "18410": 264, "18412": 264, "18414": 264, "18416": 264, "18418": 264, "18420": 264, "18422": 264, "18424": 264, "18426": 264, "18428": 264, "18430": 264, "18432": 264, "18434": 264, "18436": 264, "18438": 264, "18440": 264, "18442": 264, "18444": 264, "18446": 264, "18448": 264, "18450": 264, "18452": 264, "18454": 264, "18456": 264, "18458": 264, "18460": 264, "18462": 264, "18464": 264, "18466": 264, "18468": 264, "18470": 264, "18472": 264, "18474": 264, "18476": 264, "18478": 264, "18480": 264, "18482": 264, "18484": 264, "18486": 264, "18488": 264, "18490": 264, "18492": 264, "18494": 264, "18496": 264, "18498": 264, "18500": 264, "18502": 264, "18504": 264, "18506": 264, "18508": 264, "18510": 264, "18512": 264, "18514": 264, "18516": 264, "18518": 264, "18520": 264, "18522": 264, "18524": 264, "18526": 264, "18528": 264, "18530": 264, "18532": 264, "18534": 264, "18536": 264, "18538": 264, "18540": 264, "18542": 264, "18544": 264, "18546": 264, "18548": 264, "18550": 264, "18552": 264, "18554": 264, "18556": 264, "18558": 264, "18560": 264, "18562": 264, "18564": 264, "18566": 264, "18568": 264, "18570": 264, "18572": 264, "18574": 264, "18576": 264, "18578": 264, "18580": 264, "18582": 264, "18584": 264, "18586": 264, "18588": 264, "18590": 264, "18592": 264, "18594": 264, "18596": 264, "18598": 264, "18600": 264, "18602": 264, "18604": 264, "18606": 264, "18608": 264, "18610": 264, "18612": 264, "18614": 264, "18616": 264, "18618": 264, "18620": 264, "18622": 264, "18624": 264, "18626": 264, "18628": 264, "18630": 264, "18632": 264, "18634": 264, "18636": 264, "18638": 264, "18640": 264, "18642": 264, "18644": 264, "18646": 264, "18648": 264, "18650": 264, "18652": 264, "18654": 264, "18656": 264, "18658": 264, "18660": 264, "18662": 264, "18664": 264, "18666": 264, "18668": 264, "18670": 264, "18672": 264, "18674": 264, "18676": 264, "18678": 264, "18680": 264, "18682": 264, "18684": 264, "18686": 264, "18688": 264, "18690": 264, "18692": 264, "18694": 264, "18696": 264, "18698": 264, "18700": 264, "18702": 264, "18704": 264, "18706": 264, "18708": 264, "18710": 264, "18712": 264, "18714": 264, "18716": 264, "18718": 264, "18720": 264, "18722": 264, "18724": 264, "18726": 264, "18728": 264, "18730": 264, "18732": 264, "18734": 264, "18736": 264, "18738": 264, "18740": 264, "18742": 264, "18744": 264, "18746": 264, "18748": 264, "18750": 264, "18752": 264, "18754": 264, "18756": 264, "18758": 264, "18760": 264, "18762": 264, "18764": 264, "18766": 264, "18768": 264, "18770": 264, "18772": 264, "18774": 264, "18776": 264, "18778": 264, "18780": 264, "18782": 264, "18784": 264, "18786": 264, "18788": 264, "18790": 264, "18792": 264, "18794": 264, "18796": 264, "18798": 264, "18800": 264, "18802": 264, "18804": 264, "18806": 264, "18808": 264, "18810": 264, "18812": 264, "18814": 264, "18816": 264, "18818": 264, "18820": 264, "18822": 264, "18824": 264, "18826": 264, "18828": 264, "18830": 264, "18832": 264, "18834": 264, "18836": 264, "18838": 264, "18840": 264, "18842": 264, "18844": 264, "18846": 264, "18848": 264, "18850": 264, "18852": 264, "18854": 264, "18856": 264, "18858": 264, "18860": 264, "18862": 264, "18864": 264, "18866": 264, "18868": 264, "18870": 264, "18872": 264, "18874": 264, "18876": 264, "18878": 264, "18880": 264, "18882": 264, "18884": 264, "18886": 264, "18888": 264, "18890": 264, "18892": 264, "18894": 264, "18896": 264, "18898": 264, "18900": 264, "18902": 264, "18904": 264, "18906": 264, "18908": 264, "18910": 264, "18912": 264, "18914": 264, "18916": 264, "18918": 264, "18920": 264, "18922": 264, "18924": 264, "18926": 264, "18928": 264, "18930": 264, "18932": 264, "18934": 264, "18936": 264, "18938": 264, "18940": 264, "18942": 264, "18944": 264, "18946": 264, "18948": 264, "18950": 264, "18952": 264, "18954": 264, "18956": 264, "18958": 264, "18960": 264, "18962": 264, "18964": 264, "18966": 264, "18968": 264, "18970": 264, "18972": 264, "18974": 264, "18976": 264, "18978": 264, "18980": 264, "18982": 264, "18984": 264, "18986": 264, "18988": 264, "18990": 264, "18992": 264, "18994": 264, "18996": 264, "18998": 264, "19000": 264, "19002": 264, "19004": 264, "19006": 264, "19008": 264, "19010": 264, "19012": 264, "19014": 264, "19016": 264, "19018": 264, "19020": 264, "19022": 264, "19024": 264, "19026": 264, "19028": 264, "19030": 264, "19032": 264, "19034": 264, "19036": 264, "19038": 264, "19040": 264, "19042": 264, "19044": 264, "19046": 264, "19048": 264, "19050": 264, "19052": 264, "19054": 264, "19056": 264, "19058": 264, "19060": 264, "19062": 264, "19064": 264, "19066": 264, "19068": 264, "19070": 264, "19072": 264, "19074": 264, "19076": 264, "19078": 264, "19080": 264, "19082": 264, "19084": 264, "19086": 264, "19088": 264, "19090": 264, "19092": 264, "19094": 264, "19096": 264, "19098": 264, "19100": 264, "19102": 264, "19104": 264, "19106": 264, "19108": 264, "19110": 264, "19112": 264, "19114": 264, "19116": 264, "19118": 264, "19120": 264, "19122": 264, "19124": 264, "19126": 264, "19128": 264, "19130": 264, "19132": 264, "19134": 264, "19136": 264, "19138": 264, "19140": 264, "19142": 264, "19144": 264, "19146": 264, "19148": 264, "19150": 264, "19152": 264, "19154": 264, "19156": 264, "19158": 264, "19160": 264, "19162": 264, "19164": 264, "19166": 264, "19168": 264, "19170": 264, "19172": 264, "19174": 264, "19176": 264, "19178": 264, "19180": 264, "19182": 264, "19184": 264, "19186": 264, "19188": 264, "19190": 264, "19192": 264, "19194": 264, "19196": 264, "19198": 264, "19200": 264, "19202": 264, "19204": 264, "19206": 264, "19208": 264, "19210": 264, "19212": 264, "19214": 264, "19216": 264, "19218": 264, "19220": 264, "19222": 264, "19224": 264, "19226": 264, "19228": 264, "19230": 264, "19232": 264, "19234": 264, "19236": 264, "19238": 264, "19240": 264, "19242": 264, "19244": 264, "19246": 264, "19248": 264, "19250": 264, "19252": 264, "19254": 264, "19256": 264, "19258": 264, "19260": 264, "19262": 264, "19264": 264, "19266": 264, "19268": 264, "19270": 264, "19272": 264, "19274": 264, "19276": 264, "19278": 264, "19280": 264, "19282": 264, "19284": 264, "19286": 264, "19288": 264, "19290": 264, "19292": 264, "19294": 264, "19296": 264, "19298": 264, "19300": 264, "19302": 264, "19304": 264, "19306": 264, "19308": 264, "19310": 264, "19312": 264, "19314": 264, "19316": 264, "19318": 264, "19320": 264, "19322": 264, "19324": 264, "19326": 264, "19328": 264, "19330": 264, "19332": 264, "19334": 264, "19336": 264, "19338": 264, "19340": 264, "19342": 264, "19344": 264, "19346": 264, "19348": 264, "19350": 264, "19352": 264, "19354": 264, "19356": 264, "19358": 264, "19360": 264, "19362": 264, "19364": 264, "19366": 264, "19368": 264, "19370": 264, "19372": 264, "19374": 264, "19376": 264, "19378": 264, "19380": 264, "19382": 264, "19384": 264, "19386": 264, "19388": 264, "19390": 264, "19392": 264, "19394": 264, "19396": 264, "19398": 264, "19400": 264, "19402": 264, "19404": 264, "19406": 264, "19408": 264, "19410": 264, "19412": 264, "19414": 264, "19416": 264, "19418": 264, "19420": 264, "19422": 264, "19424": 264, "19426": 264, "19428": 264, "19430": 264, "19432": 264, "19434": 264, "19436": 264, "19438": 264, "19440": 264, "19442": 264, "19444": 264, "19446": 264, "19448": 264, "19450": 264, "19452": 264, "19454": 264, "19456": 264, "19458": 264, "19460": 264, "19462": 264, "19464": 264, "19466": 264, "19468": 264, "19470": 264, "19472": 264, "19474": 264, "19476": 264, "19478": 264, "19480": 264, "19482": 264, "19484": 264, "19486": 264, "19488": 264, "19490": 264, "19492": 264, "19494": 264, "19496": 264, "19498": 264, "19500": 264, "19502": 264, "19504": 264, "19506": 264, "19508": 264, "19510": 264, "19512": 264, "19514": 264, "19516": 264, "19518": 264, "19520": 264, "19522": 264, "19524": 264, "19526": 264, "19528": 264, "19530": 264, "19532": 264, "19534": 264, "19536": 264, "19538": 264, "19540": 264, "19542": 264, "19544": 264, "19546": 264, "19548": 264, "19550": 264, "19552": 264, "19554": 264, "19556": 264, "19558": 264, "19560": 264, "19562": 264, "19564": 264, "19566": 264, "19568": 264, "19570": 264, "19572": 264, "19574": 264, "19576": 264, "19578": 264, "19580": 264, "19582": 264, "19584": 264, "19586": 264, "19588": 264, "19590": 264, "19592": 264, "19594": 264, "19596": 264, "19598": 264, "19600": 264, "19602": 264, "19604": 264, "19606": 264, "19608": 264, "19610": 264, "19612": 264, "19614": 264, "19616": 264, "19618": 264, "19620": 264, "19622": 264, "19624": 264, "19626": 264, "19628": 264, "19630": 264, "19632": 264, "19634": 264, "19636": 264, "19638": 264, "19640": 264, "19642": 264, "19644": 264, "19646": 264, "19648": 264, "19650": 264, "19652": 264, "19654": 264, "19656": 264, "19658": 264, "19660": 264, "19662": 264, "19664": 264, "19666": 264, "19668": 264, "19670": 264, "19672": 264, "19674": 264, "19676": 264, "19678": 264, "19680": 264, "19682": 264, "19684": 264, "19686": 264, "19688": 264, "19690": 264, "19692": 264, "19694": 264, "19696": 264, "19698": 264, "19700": 264, "19702": 264, "19704": 264, "19706": 264, "19708": 264, "19710": 264, "19712": 264, "19714": 264, "19716": 264, "19718": 264, "19720": 264, "19722": 264, "19724": 264, "19726": 264, "19728": 264, "19730": 264, "19732": 264, "19734": 264, "19736": 264, "19738": 264, "19740": 264, "19742": 264, "19744": 264, "19746": 264, "19748": 264, "19750": 264, "19752": 264, "19754": 264, "19756": 264, "19758": 264, "19760": 264, "19762": 264, "19764": 264, "19766": 264, "19768": 264, "19770": 264, "19772": 264, "19774": 264, "19776": 264, "19778": 264, "19780": 264, "19782": 264, "19784": 264, "19786": 264, "19788": 264, "19790": 264, "19792": 264, "19794": 264, "19796": 264, "19798": 264, "19800": 264, "19802": 264, "19804": 264, "19806": 264, "19808": 264, "19810": 264, "19812": 264, "19814": 264, "19816": 264, "19818": 264, "19820": 264, "19822": 264, "19824": 264, "19826": 264, "19828": 264, "19830": 264, "19832": 264, "19834": 264, "19836": 264, "19838": 264, "19840": 264, "19842": 264, "19844": 264, "19846": 264, "19848": 264, "19850": 264, "19852": 264, "19854": 264, "19856": 264, "19858": 264, "19860": 264, "19862": 264, "19864": 264, "19866": 264, "19868": 264, "19870": 264, "19872": 264, "19874": 264, "19876": 264, "19878": 264, "19880": 264, "19882": 264, "19884": 264, "19886": 264, "19888": 264, "19890": 264, "19892": 264, "19894": 264, "19896": 264, "19898": 264, "19900": 264, "19902": 264, "19904": 264, "19906": 264, "19908": 264, "19910": 264, "19912": 264, "19914": 264, "19916": 264, "19918": 264, "19920": 264, "19922": 264, "19924": 264, "19926": 264, "19928": 264, "19930": 264, "19932": 264, "19934": 264, "19936": 264, "19938": 264, "19940": 264, "19942": 264, "19944": 264, "19946": 264, "19948": 264, "19950": 264, "19952": 264, "19954": 264, "19956": 264, "19958": 264, "19960": 264, "19962": 264, "19964": 264, "19966": 264, "19968": 264, "19970": 264, "19972": 264, "19974": 264, "19976": 264, "19978": 264, "19980": 264, "19982": 264, "19984": 264, "19986": 264, "19988": 264, "19990": 264, "19992": 264, "19994": 264, "19996": 264, "19998": 264, "l_to_send": 264, "json_to_send": 264, "json_receiv": 264, "l_receiv": 264, "sine": [264, 305, 322], "140106668681968": 264, "wallclock_axi": 264, "1638538131": 264, "1975703": 264, "2978473": 264, "3981225": 264, "498449": 264, "5987027": 264, "698947": 264, "7996597": 264, "899947": 264, "1638538132": 264, "0001943": 264, "1010473": 264, "0b10110": 264, "0x16": [264, 877], "0b1011": [264, 299], "bit_3": 264, "0b00001": 264, "0b1": [264, 281, 351], "0b1000": [264, 281], "0b11110": 264, "bitwis": [264, 449, 482, 1015, 1019, 1109], "num1": [264, 281], "0b110101101": 264, "num2": [264, 281], "0b101110100": 264, "0b100100100": 264, "0b111111101": 264, "0b1010": 264, "0b10100": [264, 281], "1fuzzi2fuzzi3fuzzi4": 264, "0b11011001": 264, "abcdef": [264, 271, 277, 281], "cde": 264, "lexic": [264, 535, 838], "020": [264, 305, 742, 1057, 1058, 1061, 1062], "indexerror": [264, 281, 284, 302, 341, 363, 367, 398, 1089, 1142, 1212], "auer": 264, "aue": 264, "zerodivisionerror": [264, 277, 302, 1089], "lst1": 264, "lst2": 264, "toc": 265, "treeset": 265, "searchabl": [265, 268], "diesel": 265, "vibrat": 265, "lighter": 265, "sensorrandom": 265, "sensorsin": 265, "sensorconst": 265, "wild": [265, 267, 272, 307, 415], "yesterai": 265, "deseri": [265, 277], "decod": [265, 277, 284, 287, 323, 329, 340, 343, 345, 351, 357, 1140, 1187], "swallow": [265, 918, 1089], "walkthrough": [265, 267, 272, 1253], "1h": 265, "exchangeformat": 265, "test_mqtt_format": 265, "parser": [265, 277, 331, 347, 409, 725, 756, 1142, 1256], "subcommand": [265, 1142], "mosquitto_sub": [265, 1207], "writer": [265, 846, 932], "deserializeerror": 265, "dangl": [265, 380, 452, 643, 656], "fahrenheit": [267, 420, 422, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 543, 744, 782, 837, 839, 840], "nonconst": 267, "getchar": [267, 426, 428, 433, 442], "dry": 267, "verif": [267, 1196], "umlaut": [267, 268, 383, 1121, 1204], "\u00f6": [267, 287, 1204], "canari": 267, "asid": [267, 460, 461, 473, 755, 1050], "brainfuck": 267, "nok": [267, 792, 1044], "singli": [267, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "typedef": [267, 476, 479, 483, 492, 496, 501, 502, 742, 744, 782, 790, 806, 837, 839, 840, 907, 1059], "commonplac": [267, 1249], "boundari": [267, 277, 323, 379, 380, 482, 816, 987, 1031], "neighborhood": 267, "signed": [267, 436, 485], "unsigned": 267, "excurs": [267, 546, 1262], "pointerarith": 267, "lower_bound": [267, 314, 353, 681, 686, 705, 709, 739, 840], "for_each": [267, 314, 686, 705, 709, 739, 790, 840], "search_by_lastnam": [267, 735, 736, 737], "const_iter": [267, 637, 680, 683, 684, 685, 687, 702, 742, 757, 790, 791], "calloper": [267, 620], "exc": [267, 620], "ostream": [267, 620, 646, 806, 838, 1231], "paint": [267, 724, 739, 840], "reverse_copi": [267, 314, 620, 686, 705, 709, 739, 840], "cin": [267, 688, 706, 708, 724, 739, 840], "accumul": [267, 620], "raci": [267, 620], "wsl2": [267, 294, 296, 314, 316, 405], "libsqlite3": [267, 516], "libboost": 267, "libgtk": 267, "prosaic": 267, "roman": 267, "mad": [267, 484], "wxwidget": 267, "whole": [268, 280, 281, 283, 286, 289, 298, 301, 340, 383, 506, 755, 764, 806, 862, 865, 887, 933, 1016, 1088, 1160, 1242], "lieb": [268, 329, 345], "gr\u00fc\u00dfe": [268, 329, 345], "utf8": 268, "distil": [268, 328, 358, 366, 384, 1087, 1160], "4j": 269, "unlimitxdeadbeef": [269, 271, 277, 323, 329, 393, 601, 1068], "3735928559": [269, 271, 277, 281, 323, 329, 393], "0b10010011": 269, "ippi": 269, "0b0101": 269, "0101": 269, "teifl": [269, 357], "fun1": 269, "fun2": 269, "nsecond": [269, 1134], "rline": 269, "carriag": [269, 439, 1134], "linet": 269, "neuer": 269, "ordner": 269, "euer": 269, "syntaxwarn": [269, 302, 1089], "ipykernel_258993": 269, "837361033": 269, "regex_str": [269, 287], "calim": 269, "yaaai": 269, "needl": [269, 367, 1128, 1136], "haystack": [269, 367, 1128, 1136], "finit": [269, 318, 454, 978], "haystack_s": 269, "0x7fe78c576ee0": 269, "list_iter": [269, 287, 341, 351, 357, 367], "0x7fe78c577910": 269, "unicode_code_point": 269, "l_new": 269, "ijk": 269, "mengenlehr": 269, "s1": [269, 277, 281, 284, 287, 302, 309, 319, 329, 341, 351, 357, 367, 546, 563, 593, 652, 746, 752, 800, 823, 825, 827, 829, 1139], "s2": [269, 277, 281, 284, 287, 302, 309, 319, 329, 341, 351, 357, 367, 546, 563, 593, 652, 746, 752, 800, 823, 825, 827, 1139], "gunnar": 269, "liam": 269, "maximumum": 269, "variable2": 269, "maximum2": 269, "mrmr": 269, "einser": 269, "square_numb": [269, 1137], "squares_gener": 269, "other_d": [269, 302], "nove": 269, "isspac": [269, 271, 274, 277, 302, 323, 351, 357, 1136], "buchhaltung": [269, 948, 970, 971], "startswith": [269, 277, 306, 307, 309, 323, 363, 506, 1136, 1210], "buch": [269, 1238], "oooo": 269, "isupp": [269, 277, 287, 323, 357, 363, 367, 1136], "zz": 269, "traurig": 269, "substr": [269, 271, 277, 287, 302, 309, 323, 341, 345, 351, 357, 363, 367, 519, 725, 1231], "gid": [269, 277, 345, 363, 725, 838, 914, 915, 923, 925, 933, 1006, 1021, 1169], "descr": [269, 345, 363, 725], "count_byt": 269, "nbyte": 269, "miscellanea": [270, 1009], "brace": [270, 277, 323, 379, 380, 381, 426, 449, 452, 464, 544, 637, 646, 677, 679, 684, 697, 698, 742, 782, 791, 837, 839, 840, 1118, 1121], "hour_of_dai": 270, "ein_str": 271, "ein_anderer_str": 271, "fghjgfgh": 271, "dfghgfgh": 271, "do_someth": [271, 290, 393, 455, 457, 465, 480, 494, 799, 1118], "komplett": [271, 357], "sollten": [271, 309], "returnwert": [271, 1238], "sinnloser": 271, "weis": [271, 1259], "vorgenommen": 271, "obacht": 271, "140672599989840": 271, "140672464974720": 271, "hoechst": [271, 309], "rechnern": 271, "100000": [271, 287, 755, 994, 1196], "": [271, 287], "exponenti": [271, 1121, 1135], "__annotations__": [271, 281, 302, 323, 337, 1090], "__closure__": [271, 281, 302, 323], "__code__": [271, 281, 302, 323], "__delattr__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__dir__": [271, 274, 281, 299, 302, 323, 341, 363], "__format__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__ge__": [271, 274, 277, 281, 299, 302, 323, 341, 363, 1109], "__get__": [271, 281, 302, 323], "__getattribute__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__globals__": [271, 281, 302, 323], "__gt__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__hash__": [271, 274, 277, 281, 299, 302, 323, 341, 351, 363], "__init_subclass__": [271, 274, 281, 299, 302, 323, 341, 363], "__kwdefaults__": [271, 281, 302, 323], "__ne__": [271, 274, 277, 281, 299, 302, 323, 341, 363, 1109], "__new__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__qualname__": [271, 281, 302, 323], "__reduce__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__reduce_ex__": [271, 274, 281, 299, 302, 323, 341, 363], "__setattr__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__sizeof__": [271, 274, 277, 281, 299, 302, 323, 341, 363], "__subclasshook__": [271, 274, 281, 299, 302, 323, 341, 363], "karteikart": 271, "my_formatted_person": 271, "123425041997": 271, "caros_str": 271, "joergs_str": 271, "0x7ff0dc48b490": 271, "next_po": 271, "tim": [271, 281, 389, 390], "ugli": [271, 281, 295, 304, 305, 318, 325, 326, 369, 370, 421, 426, 528, 620, 840, 912, 917, 943, 944, 985, 1087, 1088], "flat": [271, 281, 473, 499, 500, 1058, 1059], "puriti": [271, 281], "silenc": [271, 281, 465, 931], "ambigu": [271, 281, 452, 487, 488, 489, 655, 756, 948], "refus": [271, 281, 290, 510, 860, 913, 986, 1002, 1063], "temptat": [271, 281], "dutch": [271, 281], "honk": [271, 281], "wahr": 271, "falsch": [271, 284], "kriegt": 271, "nachkommastellen": 271, "moeglichkeit": 271, "f_str": 271, "punkt_po": 271, "nachkomma_str": 271, "praezedenz": 271, "wandel": 271, "vorn": 271, "anhaengen": 271, "wuenschen": 271, "wuerd": 271, "appendleft": 271, "extendleft": 271, "relem": 271, "popleft": 271, "sorted_l": 271, "sorted_t": 271, "sorted_": 271, "subtext": 271, "ssissippi": 271, "140672464726576": 271, "copied_text": 271, "140672464784832": 271, "140672464784064": 271, "140672599989872": 271, "140672464751872": 271, "140672464768512": 271, "140672464594880": 271, "jkl": 271, "suesser": [271, 277, 284, 287, 290, 306], "sechser_gewuerfelt": 271, "n_tri": [271, 274, 309, 351, 357, 363, 367, 1125], "versag": [271, 309], "eva": [271, 323, 367, 1128], "xrang": [271, 1129], "0x7ff0dc48bed0": 271, "hann": 271, "gruess": 271, "gott": [271, 302, 416], "fill_in_us": 271, "scho": 271, "my_db": 271, "uniq_dict": 271, "konfigurierbaren": 271, "startwert": 271, "ausgibt": 271, "sqnum": 271, "0x7ff014b01820": 271, "xslx": 271, "yz": 271, "lret": 271, "ochwa": 271, "unbalanc": 272, "geospati": 272, "gdal": 272, "sweigart": [272, 286, 328, 1191], "datenypen": 273, "libarari": 273, "chainmap": 273, "dequ": [273, 814], "suchalgorithmen": 273, "51139385": 274, "77397a312b47": 274, "50924272": [274, 277], "20210728": [274, 277, 1116], "eine_komplizierte_funkt": 274, "endeffekt": 274, "zusammenzuzaehlen": 274, "tarnt": 274, "vergeblich": 274, "komplexitaet": 274, "zahl_als_str": 274, "bledsinn": 274, "try_no": 274, "blahblahblah": 274, "cxyxyyyyxi": 274, "table_str": 274, "table_dict": 274, "139769175732912": 274, "139769175738624": 274, "satan_str": 274, "satan_int": 274, "result_of_print": 274, "result_of_evald_print": 274, "code_str": [274, 284], "compiled_cod": 274, "woswasi": [274, 281], "0x7f1e91eb42f0": 274, "philipp": [274, 281, 284, 302, 309, 323, 341, 351, 544, 619, 690, 702, 735, 737, 1180, 1182, 1186, 1188, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "lastnma": 274, "0x7f1e8c0fe2e0": 274, "__abs__": [274, 281, 299, 363], "__and__": [274, 281, 341, 363, 1109], "__bool__": [274, 281, 299, 363], "__ceil__": [274, 281, 299, 363], "__divmod__": [274, 281, 299, 363], "__float__": [274, 281, 299, 323, 363], "__floor__": [274, 281, 299, 363], "__floordiv__": [274, 281, 299, 363, 1109], "__getnewargs__": [274, 277, 281, 299, 323, 363], "__index__": [274, 281, 363], "__int__": [274, 281, 299, 323, 340, 363], "__invert__": [274, 281, 363], "__lshift__": [274, 281, 363, 1109], "__mod__": [274, 277, 281, 299, 323, 363, 1109], "__mul__": [274, 277, 281, 299, 323, 363, 1109], "__neg__": [274, 281, 299, 363], "__or__": [274, 281, 341, 363, 1109], "__pos__": [274, 281, 299, 363], "__pow__": [274, 281, 299, 363, 1109], "__rand__": [274, 281, 341, 363], "__rdivmod__": [274, 281, 299, 363], "__rfloordiv__": [274, 281, 299, 363], "__rlshift__": [274, 281, 363], "__rmod__": [274, 277, 281, 299, 323, 363], "__rmul__": [274, 277, 281, 299, 323, 363], "__ror__": [274, 281, 341, 363], "__round__": [274, 281, 299, 363], "__rpow__": [274, 281, 299, 363], "__rrshift__": [274, 281, 363, 1109], "__rshift__": [274, 281, 363, 1109], "__rsub__": [274, 281, 299, 341, 345, 363, 1109], "__rtruediv__": [274, 281, 299, 363], "__rxor__": [274, 281, 341, 363], "__sub__": [274, 281, 299, 341, 345, 363, 1109], "__truediv__": [274, 281, 299, 363, 1109], "__trunc__": [274, 281, 299, 363], "__xor__": [274, 281, 341, 363, 1109], "as_integer_ratio": [274, 281, 299, 363], "bit_length": [274, 281, 363], "conjug": [274, 281, 299, 363], "denomin": [274, 281, 363], "from_byt": [274, 281, 363], "to_byt": [274, 281, 363], "0x7f1e8c0b3130": 274, "int_list": 274, "0x7f1e8c0fe340": 274, "0x7f1e8c0fe760": 274, "u1": 274, "u2": 274, "type_of_us": 274, "scrambl": 274, "hansj\u00f6rg": [274, 506], "gr\u00f6jsnah": 274, "class_str": 274, "1997": [274, 284, 1115, 1180, 1182, 1186, 1188], "0x7f1e8c1c2e50": 274, "joleckmi": 274, "cmdline": 275, "excess": [275, 455], "provocantli": [275, 1246], "pybai": [275, 344, 1191], "suchzeit": 276, "everywher": [276, 291, 485, 500, 510, 746, 899, 1041, 1128], "d_as_str": 277, "received_d": 277, "1939": 277, "145415": 277, "bytes_or_buff": [277, 323], "expos": [277, 323, 634, 719, 918, 986, 994, 995, 1029], "strict": [277, 297, 323, 341, 541, 555, 562, 576, 590, 642, 840, 1139, 1220], "__contains__": [277, 323, 341], "format_spec": [277, 302, 323], "getattr": [277, 281, 302, 323, 1103], "__getitem__": [277, 323, 1212, 1213], "__iter__": [277, 323, 341, 1094], "__len__": [277, 323, 341], "casefold": [277, 323], "caseless": [277, 323], "fillchar": [277, 323], "pad": [277, 323, 1135], "occurr": [277, 323, 429], "codec": [277, 284, 287, 323, 329, 345, 351, 357, 1204], "unicodeencodeerror": [277, 284, 287, 302, 323, 329, 345, 1089, 1204], "xmlcharrefreplac": [277, 323], "register_error": [277, 323], "suffix": [277, 323, 524], "expandtab": [277, 302, 323, 351], "tabsiz": [277, 323], "lowest": [277, 323, 449, 455, 1051, 1052, 1140], "format_map": [277, 323], "isalnum": [277, 323, 363, 1136], "alphabet": [277, 323, 429, 484, 506, 932, 1204], "isascii": [277, 323], "007f": [277, 323], "isdecim": [277, 323], "iskeyword": [277, 287, 323], "isnumer": [277, 323], "isprint": [277, 323, 429, 457], "printabl": [277, 323, 429, 1089], "istitl": [277, 323], "uncas": [277, 323], "pq": [277, 323], "ljust": [277, 323], "removeprefix": [277, 323], "removesuffix": [277, 323], "rindex": [277, 323, 1136], "rpartit": [277, 323], "discard": [277, 323, 341, 488, 522, 654, 792, 930, 931], "splitlin": [277, 323], "keepend": [277, 323], "swapcas": [277, 323], "titlecas": [277, 323], "lookuperror": [277, 302, 323, 1089], "untouch": [277, 323, 887], "zfill": [277, 323], "maketran": [277, 323], "numerischen": 277, "ecma": 277, "3rd": [277, 846], "interchang": [277, 723, 806, 1204], "marshal": 277, "pickl": [277, 281], "simplejson": 277, "foo": [277, 309, 319, 323, 341, 345, 351, 357, 363, 367, 524, 614, 755, 788, 806, 819, 1089, 1130], "baz": 277, "u1234": 277, "sort_kei": 277, "getvalu": 277, "compact": [277, 455], "mydict": 277, "obj": [277, 302, 345, 357, 582, 855, 856, 865, 1103, 1111, 1212, 1213], "x08ar": 277, "as_complex": 277, "dct": 277, "__complex__": 277, "object_hook": 277, "2j": 277, "parse_float": 277, "encode_complex": 277, "serializ": 277, "1j": 277, "jsonencod": 277, "iterencod": 277, "scanner": 277, "jsondecodeerror": 277, "jsondecod": 277, "msg": [277, 290, 351, 363, 440, 545, 549, 725, 1055, 1057, 1058, 1062, 1085, 1088, 1089], "unformat": 277, "lineno": [277, 284, 351], "colno": 277, "delattr": [277, 281, 302], "setattr": [277, 281, 302, 1103], "__setstate__": [277, 281], "with_traceback": [277, 281], "tb": [277, 281, 357], "__traceback__": [277, 281], "__cause__": [277, 281], "__context__": [277, 281], "__suppress_context__": [277, 281], "parse_int": 277, "parse_const": 277, "object_pairs_hook": 277, "nan": [277, 309, 1196, 1208], "num_str": 277, "_w": 277, "0x7f99fff1bb70": 277, "raw_decod": 277, "extran": 277, "skipkei": 277, "ensure_ascii": 277, "check_circular": 277, "allow_nan": 277, "recogn": [277, 524, 669, 993, 995, 1242], "sensibl": 277, "circular": 277, "recursionerror": [277, 302, 1089], "compliant": [277, 1102], "item_separ": 277, "key_separ": 277, "_one_shot": 277, "chunk": [277, 398, 485, 881, 1021, 1193, 1204], "bigobject": 277, "mysocket": 277, "fp": 277, "inf": 277, "complianc": 277, "ippolito": 277, "redivi": 277, "140299267714496": 277, "140299267930496": 277, "schweissparameter_aussi": 277, "strom_ma": 277, "200004": 277, "spannung_v": 277, "aufs_kabel": 277, "maschine_112": 277, "kabel": [277, 281], "vom_kabel": 277, "schweissparameter_eini": 277, "strom_a": 277, "hal": 277, "2c445fb3": 277, "6ca4": 277, "b9d9": 277, "7cfbbff55326": 277, "doesnt_exist": 277, "_a666": 277, "140299402960464": 277, "0b10000000000000000000000000000000000000000000000000000000000000000": [277, 281, 302, 319, 357, 363, 367], "140299327492352": 277, "func_fals": 277, "func_tru": 277, "sex_opt": 277, "140298898107648": 277, "t_mit_einem_el": 277, "supi": 277, "squares_map": 277, "squares_set": 277, "numtri": 277, "even_numb": [277, 341], "mississppi": 277, "xxxx": 277, "nbin": [277, 284, 309, 323, 345], "ndaemon": [277, 284, 309, 323, 345], "nadm": [277, 284, 309, 323, 345, 357, 363], "nlp": [277, 284, 309, 323, 345, 357, 363], "nsync": [277, 284, 309, 323, 345, 357, 363], "nshutdown": [277, 284, 309, 323, 345, 357, 363], "nhalt": [277, 284, 309, 323, 345, 357, 363], "nmail": [277, 284, 309, 323, 345, 357, 363], "noper": [277, 284, 309, 323, 345, 357, 363], "ngame": [277, 284, 309, 323, 345, 357, 363], "nftp": [277, 284, 309, 323, 345, 357, 363], "nnobodi": [277, 284, 309, 323, 345, 357, 363], "napach": [277, 284, 309, 323, 345, 357, 363], "nsystemd": [277, 284, 309, 323, 345, 357, 363], "ntss": [277, 284, 309, 323, 345, 357, 363], "ndbu": [277, 284, 309, 323, 345, 357, 363], "npolkitd": [277, 284, 309, 323, 345, 357, 363], "navahi": [277, 284, 309, 323, 345, 357, 363], "nunbound": [277, 284, 309, 323, 345, 357, 363], "ndnsmasq": [277, 284, 309, 323, 345, 357, 363], "nnm": [277, 284, 309, 323, 345, 357, 363], "nusbmuxd": [277, 284, 309, 323, 345, 357, 363], "ngluster": [277, 284, 309, 323, 345, 357, 363], "nrtkit": [277, 284, 309, 323, 345, 357, 363], "npipewir": [277, 284, 309, 323, 345, 357, 363], "ngeoclu": [277, 284, 309, 323, 345, 357, 363], "nchroni": [277, 284, 309, 323, 345, 357, 363], "nsaslauth": [277, 284, 309, 323, 345, 357, 363], "nradvd": [277, 284], "nrpc": [277, 284, 309, 323, 345, 357, 363], "nqemu": [277, 284, 309, 323, 345, 357, 363], "nopenvpn": [277, 284, 309, 323, 345, 357, 363], "ncolord": [277, 284, 309, 323, 345, 357, 363, 1011], "nrpcuser": [277, 284, 309, 323, 345, 357, 363], "nabrt": [277, 284, 309, 323, 345, 357, 363], "nflatpak": [277, 284, 309, 323, 345, 357, 363], "ngdm": [277, 284, 309, 323, 345, 357, 363], "ngnome": [277, 284, 309, 323, 345, 357, 363], "nvboxadd": [277, 284, 309, 323, 345, 357, 363], "nsshd": [277, 284, 309, 323, 345, 357, 363], "ntcpdump": [277, 284, 309, 323, 345, 357, 363], "njfasch": [277, 284, 309, 323, 345, 357, 363], "nmosquitto": [277, 284, 309, 323, 345, 357], "nsomeon": [277, 284], "1001": [277, 284, 287, 698, 699, 700, 701, 933, 945, 977, 1006], "move_to_end": 277, "thermometera": 277, "thermometerb": 277, "get_average_temperatur": 277, "th_list": 277, "ipykernel_9164": 277, "859664274": 277, "2942790015": 277, "0x7fac83797be0": 277, "basisklass": 277, "level2_1": 277, "l21": 277, "level2_2": 277, "level3": 277, "jedi": 277, "blueey": 277, "droid": 277, "r2d2": 277, "derivednoctor": 277, "dnoctor": 277, "derivedctorcallingsup": 277, "derivedctorcallingbasector": 277, "__firstnam": 277, "__lastnam": 277, "_user__firstnam": 277, "_user__lastnam": 277, "lightsab": 277, "padawan": 277, "arithmeticerror": [277, 302, 1089], "waaah": 277, "abgebrannt": 277, "puh": 277, "intakt": 277, "is_even": [277, 281, 351, 357, 759, 760, 761, 762], "0x7fac81f52df0": 277, "0x7fac81cb5700": 277, "progamm": 277, "tumpfback": 277, "och": 277, "umpfback": 277, "rt": [277, 840, 864, 868, 878, 889, 891, 896, 899, 902, 905, 908, 985], "wholefil": 277, "notepad": 278, "betreiben": [278, 1247], "unterschiedlichen": 278, "sinnvol": 278, "umgebungen": 278, "unausweichlich": 278, "installationsverzeichni": 278, "verzeichniss": 278, "ausf\u00fchren": 278, "hernimmt": 278, "erfahrung": 278, "wei\u00df": 278, "rennt": 278, "ordereddict": 279, "__mro__": 279, "udemi": 279, "successor": [280, 449], "repeatedli": [280, 379, 698, 1203], "kantenlaeng": 281, "ipykernel_101004": 281, "2437887948": 281, "0x10": [281, 284, 367, 538], "0b1111111111111111111111111111111111111111111111111111111111111111": [281, 302, 319, 323, 351, 357, 363, 367], "1267650600228229401496703205381": 281, "735611673": 281, "ndigit": [281, 302, 351, 367, 428], "0b101": 281, "0b100": [281, 284], "register_statu": 281, "0b1001000": 281, "0b00001000": 281, "strom": [281, 351], "liegt_strom_an": 281, "0b00111110": 281, "ever": [281, 341, 504, 524, 538, 564, 927, 994, 1120, 1241], "deadbeef": [281, 601, 988], "gross": 281, "doktor": 281, "jawui": 281, "akademik": 281, "ndef": [281, 351], "tdef": [281, 302], "geh": 281, "hochkomplex": [281, 357], "verendet": 281, "euler": 281, "sche": 281, "dokumentiern": 281, "koennt": 281, "varianc": 281, "fmean": 281, "geometric_mean": 281, "harmonic_mean": 281, "harmon": 281, "median": 281, "median_low": 281, "median_high": 281, "median_group": 281, "50th": 281, "percentil": 281, "multimod": 281, "quantil": 281, "centr": 281, "nearest": [281, 567, 1198], "doctest": 281, "ellipsi": [281, 302], "8333333333": 281, "8333": 281, "spread": 281, "pvarianc": 281, "pstdev": 281, "stdev": [281, 1051, 1053], "38961843444": 281, "recalcul": 281, "statisticserror": 281, "normaldist": 281, "x1": 281, "jointli": 281, "rescal": 281, "perhap": [281, 856, 1199], "cdf": 281, "cumul": [281, 498], "inv_cdf": 281, "coeffici": 281, "ovl": 281, "agreement": 281, "densiti": 281, "8035050657330205": 281, "dx": 281, "quartil": 281, "decil": 281, "zscore": 281, "score": 281, "from_sampl": 281, "readonli": 281, "dataset": [281, 1194, 1196, 1209, 1211, 1213, 1215], "subcontrari": 281, "reciproc": 281, "quantiti": [281, 313, 1198], "earn": 281, "5625": 281, "midpoint": 281, "estim": 281, "nomin": 281, "taught": [281, 1249, 1261], "aabbbbbbbbcc": 281, "aabbbbccddddeeffffgg": 281, "986893273527251": 281, "0th": 281, "100th": 281, "xbar": 281, "0810874155219827": 281, "3720238095238095": 281, "01875": 281, "gesamter_gruss": 281, "excelsheet": 281, "hinters": 281, "gabali": 281, "helen": 281, "fischer": 281, "sssklndkfgv": 281, "fosvh": 281, "worl": [281, 284, 1127], "lowr": 281, "dlrow": [281, 1127], "olleh": [281, 1127], "even_numbers_fun": 281, "even_numbers_gen": 281, "evennum": 281, "even_filt": 281, "tausend": 281, "1234250497": [281, 284, 287, 290, 544, 551, 702], "1234250597": 281, "users_json_str": 281, "liest": 281, "kontrah": 281, "verwandelt": 281, "gelesenes_ding_wieder_als_dict": 281, "schatz": 281, "erich": 281, "koxi": 281, "hatkeinenwert": 281, "fn": [281, 489, 506, 838, 1215], "ul": [281, 443], "ln": [281, 489], "einschub": 282, "filterketten": 282, "datensatz": 282, "letzten": 282, "recapitul": 283, "naeherungsverfahren": 284, "addieren": 284, "140606563548752": 284, "wirklich": 284, "0o10": 284, "teilbar": 284, "00001": 284, "abd": [284, 668], "i1": [284, 319], "140606428182128": 284, "140606428182896": 284, "2345010101": 284, "elizabeth": [284, 1180, 1182, 1186, 1188, 1199], "1901": 284, "evi": 284, "maxim": [284, 504, 995], "wuerfeln": [284, 368], "freuen": 284, "sechser": 284, "faellt": 284, "jammern": 284, "versuch_numm": 284, "versuchen": 284, "jammert": 284, "hlo": [284, 1127], "output_list": [284, 1173], "nullt": 284, "34567654567": 284, "gsd": 284, "another_t": 284, "symmetisch": 284, "netzwerkkommunik": 284, "request_to_send": 284, "request_str_to_send": 284, "1651046407": 284, "3633313": 284, "cabl": [284, 918], "request_str_from_c": 284, "request_from_c": 284, "1651046335": 284, "8477345": 284, "139909434561408": 284, "139909544402512": 284, "139909544402544": 284, "139909543772528": 284, "139909433666288": 284, "roo": [284, 323, 980], "xf6": [284, 287, 329, 1121, 1204], "joerg_latin": 284, "xf6rg": [284, 287, 329, 341, 345, 1204], "j\u0456rg": [284, 287, 329, 345, 1204], "cyclic": 286, "140616191009600": 287, "140616191012720": 287, "140116274372176": 287, "0x7f6f5cc2de50": 287, "0x7f6f5cc2df30": 287, "18446744073709551617": 287, "multi_dict": 287, "ipykernel_189565": 287, "1743780635": 287, "140115753096128": 287, "ntri": 287, "bytes_joerg": 287, "bytes_joerg_iso_latin_1": 287, "bytes_joerg_utf_32": 287, "xff": [287, 329, 345], "xfe": [287, 329, 345], "x00": [287, 329, 345, 993], "x00j": [287, 329], "x00r": [287, 329], "x00g": [287, 329], "bytes_joerg_utf_16": 287, "xfej": 287, "bytes_joerg_utf_8": 287, "xc3": [287, 323, 329, 345, 1065, 1121, 1204], "xb6rg": [287, 323, 329, 345, 1204], "iso_latin_1": 287, "russian": 287, "bytes_received_by_russian": 287, "2435": 287, "010d": 287, "0000000666": 287, "ssi": 287, "garbag": [287, 499, 506, 542, 801, 813, 995, 1022, 1087], "ipykernel_4000": 287, "3227798639": 287, "ahja": 287, "24000": 287, "24500": 287, "25000": 287, "25500": 287, "26000": 287, "26500": 287, "__del__": 287, "whe": 287, "13397": 287, "116985": 287, "120725": 287, "118110": 287, "0x7fe3a392aa30": 287, "test_person_bas": 289, "vorgehen": [289, 1247, 1259], "pluggi": [289, 307, 1179, 1224], "rootdir": [289, 307, 887, 1179, 1224], "test_persondb_bas": 289, "test_pytest_demo": 289, "xfail": [289, 1224], "test_persondb": 289, "test_duplicate_svnr": 289, "test_update_sunnycas": 289, "test_update_notexist": 289, "test_update_exact_dupl": 289, "former": [289, 1130], "persondb": 289, "sqlite": [289, 513, 515, 516, 1147, 1200], "ics_demand": 289, "maco": [289, 398, 403], "woe": 289, "homebrew": 289, "brew": 289, "flaviocop": 289, "str_mit_666": 290, "140240419976192": 290, "140240419593568": 290, "aclass": 290, "almostempti": 290, "beenther": 290, "kuckucksei": 290, "chirp": 290, "some_bullshit": 290, "bad_thing_happen": 290, "do_some_bullshit": 290, "boah": [290, 351], "python_cod": 290, "a_global_vari": 290, "globale_vari": 290, "140240513015376": 290, "140240513014256": 290, "140240419270768": 290, "140240419271792": 290, "storesanintegerandmodifiesit": 290, "the_int": 290, "my_int": 290, "saiami": 290, "storesalistandmodifiesit": 290, "the_list": 290, "append_someth": 290, "salami": 290, "compute_squar": 290, "satanicerror": 290, "jess": 290, "invalidsvnr": 290, "rex_lin": 290, "json_str": [290, 1187], "python_l": 290, "0x7f8c0551f490": 290, "behandlung": 292, "kurzer": 292, "reicht": 292, "unwichtig": 292, "weggelassen": 292, "\u00fc": [292, 1204], "jeden": 292, "teilnehmer\u00fcbung": 292, "kernsprach": 292, "rvalu": [292, 314, 354, 379, 380, 381, 645, 750, 782, 792, 798, 801, 802, 803, 804, 807, 815, 837, 839, 840, 1240, 1241, 1243], "constexpr": [292, 293, 294, 314, 316, 354, 379, 782, 792, 816, 838, 839, 840, 1241], "uniform": [292, 293, 294, 296, 353, 372, 379, 381, 504, 544, 646, 677, 697, 698, 742, 782, 791, 837, 839, 840, 1102, 1241], "initialisierung": 292, "infer": 292, "speichermodel": 292, "atomar": [292, 1239], "standardbibliothek": 292, "regu\u00e4r": 292, "trait": 292, "zufallszahlen": 292, "zeitbibliothek": 292, "referenz": 292, "sprachsyntax": 292, "deduct": [292, 757, 759], "erweiterungen": 292, "ge\u00e4ndert": 292, "definitionen": 292, "bibliothek": 292, "zusatzvari": 292, "constinit": 292, "modularisierung": [292, 399, 1238], "versionierung": 292, "routinen": 292, "synchronisierung": 292, "werkzeug": [292, 1238, 1247], "kalend": 292, "zeitzonen": 292, "zus\u00e4tz": 292, "chrono": [292, 293, 294, 296, 305, 353, 372, 373, 381, 549, 742, 803, 814, 815, 820, 839, 840], "initializer_list": [293, 294, 296, 353, 354, 379, 545, 546, 573, 574, 742, 744, 782, 839, 840], "handwrit": [293, 294, 296, 353, 372, 782, 798, 839, 840], "weak_ptr": [293, 294, 296, 353, 354, 372, 373, 379, 381, 798, 837, 839, 840], "boilerpl": [293, 294, 296, 332, 348, 353, 354, 372, 373, 374, 375, 376, 377, 378, 517, 523, 533, 536, 782, 783, 784, 802, 839, 840, 1067, 1244], "condition_vari": [293, 294, 296, 305, 353, 372, 373, 381, 815, 839, 840, 1241], "emplace_back": [293, 294, 677], "cref": [293, 294], "interoper": [294, 296, 314, 316], "wazoo": [294, 296, 314, 316], "anviron": [294, 296], "submodul": [294, 296, 599, 661], "chdir": [294, 296, 357], "dummy_suit": 294, "sticki": [295, 304, 305, 325, 326, 369, 370, 398, 403, 840, 917, 943, 985], "insod": 296, "lvalu": [296, 353, 354, 372, 373, 379, 380, 381, 750, 751, 754, 782, 792, 798, 802, 807, 815, 837, 839, 840], "afterword": [296, 353, 354, 372, 379, 380, 381, 751, 782, 839, 840], "ain": [296, 373, 504, 1117], "singleton": [297, 357, 372, 379, 541, 542, 548, 562, 576, 590, 642, 840, 1242], "inflex": [297, 424, 541, 555, 562, 568, 569, 576, 590, 642, 840], "proxi": [297, 315, 317, 318, 339, 343, 379, 404, 541, 548, 550, 551, 562, 576, 590, 642, 840, 1219, 1242], "serverthread": [297, 566, 580], "my_si": [299, 1097], "function_returns_two_valu": 299, "140134238766608": 299, "sizeof": [299, 428, 438, 449, 470, 477, 478, 482, 485, 625, 637, 649, 676, 743, 805, 819, 989, 1007, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1049, 1055, 1058, 1062, 1129], "__getformat__": 299, "__setformat__": 299, "fromhex": 299, "0b0010": 299, "0b1001": 299, "key_list": 299, "key_tupl": 299, "evil_list": 299, "evil_list_2": 299, "neinem": 299, "nviel": 299, "doze_path": [299, 302], "compiled_regex": 299, "l_json": 299, "l_json_sent": 299, "received_data": 299, "0x7f73869f06c0": 299, "create_avg_item": 299, "ninetynin": 299, "koppel": 301, "netzwerk": [301, 399], "condens": [301, 356, 505], "nprint": 302, "noption": 302, "nfile": 302, "nsep": 302, "nend": 302, "nflush": 302, "forcibli": 302, "didact": [302, 416, 418, 660, 662, 663, 1242], "fullnam": [302, 309, 1106, 1110], "nerst": 302, "nzweit": [302, 357, 393], "andere_list": 302, "neue_list": 302, "140323934455312": 302, "140323934455344": 302, "140323934455376": 302, "140323852147712": 302, "140323933649904": 302, "140323833601584": 302, "frozenset": [302, 319, 340], "__builtins__": [302, 323, 357, 1090], "gr\u00fc\u00df": 302, "nocheinprogramm": 302, "ocheinprogramm": 302, "dfghgfdfghj": 302, "jhghgh": 302, "matchstr": 302, "compiled_match": 302, "tprint": 302, "num_ss": 302, "isi": [302, 367, 603, 619, 1208], "strippeditem": 302, "yet_another_d": 302, "s3": [302, 309, 563], "s4": 302, "isdisjoint": [302, 309, 341, 1139], "nnoteworthi": 302, "nil": 302, "__package__": [302, 391, 1090], "__loader__": [302, 391, 1090], "__spec__": [302, 391, 1090], "modulespec": 302, "loader": [302, 494, 537, 539, 1065, 1083], "__build_class__": 302, "__import__": 302, "dont_inherit": 302, "_feature_vers": 302, "divmod": 302, "raw_input": 302, "ipkernel": 302, "ipythonkernel": 302, "0x7f9fb16abcd0": 302, "class_or_tupl": 302, "aiter": 302, "async_iter": 302, "min": [302, 821, 844, 1196], "anext": 302, "oct": [302, 970, 993, 995, 1089], "pow": [302, 654, 805], "exp": [302, 578], "notimpl": [302, 341, 345, 363, 1109], "memoryview": 302, "__debug__": 302, "stopasynciter": [302, 1089], "generatorexit": [302, 1089], "keyboardinterrupt": [302, 318, 1089], "importerror": [302, 1089], "modulenotfounderror": [302, 307, 1089], "environmenterror": [302, 1219], "ioerror": [302, 1225], "eoferror": [302, 1089], "notimplementederror": [302, 1089], "unboundlocalerror": [302, 1089], "indentationerror": [302, 1089], "taberror": [302, 1089], "unicodeerror": [302, 1089], "unicodedecodeerror": [302, 345, 351, 357, 1089], "unicodetranslateerror": [302, 1089], "floatingpointerror": [302, 1089], "overflowerror": [302, 1089], "systemerror": [302, 1089], "referenceerror": [302, 1089], "memoryerror": [302, 1089], "buffererror": [302, 1089], "userwarn": [302, 1089], "encodingwarn": [302, 1089], "deprecationwarn": [302, 1089], "pendingdeprecationwarn": [302, 1089], "runtimewarn": [302, 1089], "futurewarn": [302, 1089, 1208], "importwarn": [302, 1089], "unicodewarn": [302, 1089], "byteswarn": [302, 1089], "resourcewarn": [302, 1089], "connectionerror": [302, 1089], "blockingioerror": [302, 1089], "brokenpipeerror": [302, 1089], "childprocesserror": [302, 1089], "connectionabortederror": [302, 1089], "connectionrefusederror": [302, 1089], "connectionreseterror": [302, 1089], "fileexistserror": [302, 1089], "isadirectoryerror": [302, 1089], "notadirectoryerror": [302, 1089], "interruptederror": [302, 1089], "processlookuperror": [302, 1089], "timeouterror": [302, 1089], "closefd": 302, "beopen": 302, "1995": [302, 552, 1180, 1182, 1186, 1188], "nation": [302, 993], "1991": [302, 1115], "sticht": 302, "centrum": 302, "amsterdam": [302, 1115], "credit": [302, 858, 1116], "cwi": 302, "cnri": 302, "zope": 302, "cast": [302, 379, 449, 625, 712, 719, 818, 846], "execfil": 302, "_pydev_imp": 302, "_pydev_execfil": 302, "glob": [302, 481, 977, 1036, 1085, 1100, 1231], "runfil": 302, "_pydev_bundl": 302, "pydev_umd": 302, "wdir": 302, "__ipython__": 302, "exclud": [302, 500, 647], "transient": 302, "display_id": 302, "get_ipython": 302, "interactiveshel": 302, "zmqshell": 302, "zmqinteractiveshel": 302, "0x7f9fb1516200": 302, "config_fil": 302, "srcdir": 302, "dstdir": 302, "dst": [302, 444, 494, 603, 644, 662, 671, 672, 678, 1140], "045": [305, 351], "untrust": 305, "lan": 305, "programmat": [305, 570, 986, 994, 1044, 1064, 1216], "stty": 305, "termio": 305, "ioctl_tti": 305, "setseri": 305, "tty": [305, 918, 975, 1049, 1055, 1080], "tty_io": 305, "bidirection": 305, "nake": 305, "tiocgseri": 305, "tiocsseri": 305, "async_low_lat": 305, "cfmakeraw": 305, "ttyusb0": [305, 918], "low_lat": 305, "serial_struct": 305, "bidir": 305, "advantec": 305, "nonetheless": [305, 308, 311, 340, 759, 1231], "mycat": 305, "mimick": [305, 800, 1254], "make_realtim": 305, "interfaceri": 305, "cif": [305, 357], "samba": [305, 357], "automationadmin": 305, "gsc": 305, "pd": [306, 307, 309, 313, 341, 506, 1194, 1196, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "read_csv": [306, 307, 313, 341, 345, 351, 363, 506, 1194, 1196], "txn": 306, "iso8859": 306, "time_book": [306, 307, 506], "time_valuta": [306, 307, 506], "at66666666666666": 306, "bezahlung": [306, 307, 309, 506], "kart": [306, 307, 309, 506], "eur": [306, 307, 506], "95111243": [306, 506], "abbuchung": [306, 506], "onlinebank": [306, 506], "gutschrift": 306, "000000144919": 306, "339099446722187": 306, "card_pay": 306, "filt": 306, "9325008697": 306, "339099446790254": 306, "og": [306, 494], "237811001182": 306, "auszahlung": 306, "200075787001": 306, "tzb": 306, "anl": 306, "347159strom": 306, "200004871820": 306, "200004876265": 306, "200004848862": 306, "200004871863": 306, "dauerauftrag": 306, "qsnng6xau": 306, "00121672661": 306, "120016487112": [306, 506], "bx": 306, "000009219": 306, "entgelt": 306, "nichtdurchf\u00fchrung": 306, "032300005522384": 306, "saldo": 306, "messtechnik": 306, "602674240071": 306, "0004325259000023": 306, "oeamtc": 306, "mitgliedschaft": 306, "re_liv": 306, "billa": [306, 309, 506], "rew": 306, "dankt": [306, 307, 309, 506], "pipe_stag": 307, "max_colwidth": 307, "max_column": 307, "max_row": 307, "homebrain": [307, 319, 526, 970, 971], "039": 307, "consolut": 307, "insuffici": [307, 371, 756], "categor": [307, 505, 1198], "fuction": 307, "filt_uncat": 307, "uncat_row": 307, "unspecif": [307, 409, 865], "useless": [307, 750, 808, 932, 980, 1038, 1111], "food": [307, 313], "luxuri": 307, "categorize_card_pay": 307, "jet": 307, "uncertainti": 307, "categorize_v1": 307, "categorize_v2": 307, "secondari": 307, "test_categori": [307, 506], "test_bas": [307, 1179], "000009258": 307, "k002": [307, 506], "impos": [308, 311], "hurt": [308, 311, 443], "strength": [308, 311, 470, 1261], "overengin": [308, 311, 443, 504, 505, 1242], "140480285361680": 309, "0xffffffffffffffff": [309, 329, 345], "0x10000000000000000": [309, 329, 345], "140479638276224": 309, "140480203220736": 309, "140480210406176": 309, "7940943354778932823": 309, "0x7fc4189e7c90": 309, "28800": 309, "237988": 309, "produce_dai": 309, "374557": 309, "l_mal_2": 309, "140480285361712": 309, "140479638477760": 309, "140479638427520": 309, "l4": 309, "l5": 309, "140480202528192": 309, "140479638428736": 309, "140480203212992": 309, "l6": 309, "140479598069936": 309, "is_old": 309, "ipykernel_370861": 309, "4290492544": 309, "abc123": [309, 363], "0x7fc4189e5030": 309, "yyi": [309, 351, 363], "lichtenberg": [309, 544, 702, 735, 737, 1180, 1182, 1186, 1188, 1208, 1209, 1210, 1212, 1213, 1214, 1215], "persons2": [309, 1208, 1209], "set_index": [309, 1213], "sort_valu": 309, "inplac": [309, 313, 519, 1002, 1209], "flt": [309, 1210], "isin": [309, 1210], "reset_index": 309, "dropna": 309, "value_count": [309, 313], "int64": [309, 313, 1215], "conversiosn": 310, "9am": 311, "woven": [311, 315], "pipelin": [311, 416, 912, 928, 931, 932, 982, 996, 1078], "accountid": 313, "accountdescript": 313, "accountparentid": 313, "storeid": 313, "storedescript": 313, "locationid": 313, "locationdescript": 313, "productid": 313, "productdescript": 313, "sales_managerid": 313, "dateyear": 313, "datequart": 313, "datemonth": 313, "datedai": 313, "categoryvers": 313, "categorycategori": 313, "categorytyp": 313, "valueunit": 313, "original_sales_pric": 313, "sale": 313, "st43": 313, "franchescini": 313, "ct14": 313, "salem": 313, "pd23": 313, "ipa": 313, "sm1": 313, "20144": 313, "201412": 313, "1779": 313, "763910": 313, "usd": 313, "st35": 313, "pd2": 313, "pepsi": 313, "sm4": 313, "201410": 313, "957113": 313, "st98": 313, "walter": 313, "pd24": 313, "amber": 313, "20142": 313, "201406": 313, "449395": 313, "st188": 313, "arrowhead": 313, "ct1": 313, "pd19": 313, "sm8": 313, "20164": 313, "201611": 313, "078689": 313, "st107": 313, "spire": 313, "ct5": 313, "san": 313, "jose": 313, "pd15": 313, "juic": 313, "sm5": 313, "20154": 313, "201512": 313, "303679": 313, "quantity_sold": 313, "sold": 313, "st4": 313, "gstore": 313, "ct13": 313, "portland": 313, "pd26": 313, "wine": 313, "000000": [313, 1196], "1069": 313, "st49": 313, "bai": 313, "depot": 313, "ct4": 313, "sacramento": 313, "pd27": 313, "20151": 313, "201501": 313, "592904": 313, "discount": 313, "st36": 313, "pricelow": 313, "arena": [313, 822, 824], "ct10": 313, "reno": 313, "pd22": 313, "sm3": 313, "20162": 313, "201605": 313, "4351": 313, "045830": 313, "1071": 313, "st7": 313, "street": [313, 954], "pd16": 313, "7905": 313, "590606": 313, "pd12": 313, "lemonad": 313, "20153": 313, "201507": 313, "1073": 313, "modified_model": 313, "sales_managerdescript": 313, "janet": 313, "buri": 313, "nanci": 313, "miller": 313, "setp": 313, "nan_field": 313, "bitfield": 313, "bitfi": 313, "nan_column": 313, "gabriel": [313, 788], "walton": 313, "carl": 313, "jjjjj": 313, "ref_t": 313, "datetime64": 313, "damn": [313, 524], "ref_2015_12_04": 313, "flt_before_2015_12_04": 313, "rows_before_2015_12_04": 313, "st119": 313, "ct2": 313, "francisco": 313, "pd11": 313, "orang": [313, 524, 1132], "pulp": 313, "sm7": 313, "kiran": 313, "raj": 313, "201503": 313, "226847": 313, "13627": 313, "793342": 313, "3427": 313, "896898": 313, "15569": 313, "353983": 313, "float64": [313, 345, 351, 363, 1196], "1957": 313, "740301": 313, "572676": 313, "686587": 313, "289381": 313, "flt_product_pd2": 313, "flt_2015": 313, "flt_only_sold": 313, "flt_combin": 313, "st139": 313, "farlo": 313, "ct15": 313, "eugen": 313, "sm11": 313, "jame": 313, "frank": 313, "201511": 313, "st178": 313, "rai": 313, "ct8": 313, "beverli": 313, "hill": 313, "201508": 313, "facet": [314, 316, 380, 697], "rich": [314, 316, 1209, 1264], "toolset": [314, 316, 715], "conceptu": [314, 316, 495, 858, 865, 1005], "undergon": [314, 316], "revolut": [314, 316], "odr": [314, 788], "explor": [314, 994, 1252], "rodata": [314, 1083], "unspecifi": [314, 449, 556, 628, 1062, 1063], "bookkeep": [315, 505], "fewer": 315, "closer": 315, "augment": [315, 887, 1263], "test_blah": 315, "monkeypatch": [315, 317, 318, 333, 339, 340, 343], "contextlib": 315, "chatgpt": 316, "ludwig": 316, "registri": [316, 609], "memleak": 316, "jason": [317, 318, 339], "brownle": [317, 318, 339], "contriv": [317, 318, 339, 373, 547, 1090, 1125], "subthread": [317, 318], "introductori": [317, 318, 339, 344, 840, 985, 1026, 1197, 1198, 1241, 1252], "mindset": [317, 318, 339, 343, 371, 887], "develp": 317, "10am": 318, "reopen": 318, "drei_millionen_int": 319, "3_000_000": 319, "odd_numb": [319, 1094], "odd_numbers_func": 319, "ret_num": 319, "0x7f32ccc4c610": 319, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [319, 367, 393], "139855258515840": 319, "139856078033344": 319, "139856078226432": 319, "139856160540176": 319, "i3": 319, "i4": 319, "nope": [319, 1044], "0101010101010": 319, "bash_logout": [319, 970], "bash_profil": [319, 970], "thunderbird": [319, 357, 950, 970], "gnupg": [319, 357, 970], "hst": 319, "gitconfig": [319, 970], "pki": [319, 357, 970], "daham": 319, "20230403": 319, "222915": 319, "bash_histori": [319, 970], "python_histori": [319, 970], "lesshst": [319, 970], "139855258795072": 319, "139855260513728": 319, "139856085569920": 319, "doppelt": 319, "gemoppelt": 319, "trag": 319, "exakt": 319, "paarweis": 319, "read_lines_of_fil": 319, "0x7f32c7d8d390": 319, "nohead": [322, 1185, 1186, 1188], "userdb_csv": [322, 1186, 1187, 1188], "interleav": [322, 518], "dosometh": 323, "0x7fe7fbf80df0": 323, "140634424624656": 323, "140634424623536": 323, "0o644": 323, "0b01110101": 323, "setting_blah": 323, "setting_foo": 323, "config_context": 323, "140634341074320": 323, "140634424624688": 323, "140634341076688": 323, "140634341077776": 323, "140634343012864": 323, "140634341099856": 323, "ipykernel_61373": 323, "1125713270": 323, "1234567876543234567654321234565432123456": 323, "140634281233520": 323, "140634341798400": 323, "140634341995008": 323, "140634341576640": 323, "140634341773312": 323, "140634281802304": 323, "global_vari": [323, 526], "bar2": 323, "bar3": 323, "bar4": 323, "bar5": 323, "bar6": 323, "0x7fe7f869b7d0": 323, "0x7fe7f869b920": 323, "0x7fe7f869bbc0": 323, "punctuat": 323, "abcabcabcabcabc": [323, 351], "rex": [323, 357], "cba": [323, 706], "another_d": 323, "rb": [323, 363], "30000": 323, "coreutil": 326, "autopoint": 326, "fcntl": [326, 993, 1011, 1015, 1019, 1020, 1021, 1022, 1027, 1030, 1031, 1055, 1058, 1062], "fluent": [328, 399, 400, 1191, 1249, 1253, 1264], "luciano": [328, 399, 400, 1191], "ramalho": [328, 399, 400, 1191], "140640823526928": 329, "0x7fe97e53c610": 329, "140640823526960": 329, "140640741310912": 329, "140640741034048": 329, "140640741341184": 329, "wasjetzt": 329, "140640722624768": 329, "140640722715136": 329, "l1_copi": [329, 357], "my_funky_gener": 329, "meine_dumme_sequenz": 329, "0x7fe9785083a0": 329, "0x7fe98c21bce0": 329, "greeter": [329, 508, 509, 511, 516, 535, 1082], "0x7fe9796976d0": 329, "140640740502720": 329, "140640722823952": 329, "140640741119552": 329, "l_copi": 329, "140640741312256": 329, "140640722734080": 329, "140640722760768": 329, "140640722739712": 329, "140640741402496": 329, "owher": 329, "0000042": [329, 1135], "bled": 329, "xfc": [329, 345, 1121, 1204], "xdfe": [329, 345, 1204], "gr\u045c\u043fe": [329, 345, 1204], "\u795d\u597d": [329, 345], "big5": [329, 345, 1204], "xaf": [329, 345], "xac": [329, 345], "xa6n": [329, 345], "unterschrift": 329, "illeg": [329, 486, 1204], "multibyt": [329, 432, 1204], "xe7": [329, 345, 1204], "xa5": [329, 345, 1204], "x9d": [329, 345, 1204], "xe5": [329, 345, 1204], "xbd": [329, 345, 1204], "incorpor": [331, 347, 1256], "tradition": [331, 347, 792, 988, 1112, 1256], "lexer": [331, 347, 1256], "aris": [331, 347, 555, 1256], "compili": [331, 347, 1256], "rant": [332, 348, 374, 375, 376, 377, 378, 517, 519, 523, 528, 533, 536, 840, 1214], "blacklist": [332, 348, 357, 374, 377, 510, 516, 517, 523, 524, 531, 533, 840], "acquaint": [333, 336], "data_to_send": 334, "data_receiv": 334, "user_receiv": [334, 1187], "140048588115008": 334, "140048588341376": 334, "d_str": [337, 721], "uebertragen": 337, "d_str_receiv": 337, "d_receiv": 337, "frozendict": [340, 341], "filesensor": 340, "guidelin": [340, 372, 995], "sergei": 340, "test_acquisition_loop": 340, "test_mock_csv_sink": 340, "mymockedth": 340, "nonloc": [340, 1131], "millcelsiu": 340, "acquisition_loop_util": 340, "ont": 340, "10m": [340, 1053], "acquir": [340, 371, 407, 816, 892, 1038, 1043, 1052], "slower": [340, 494, 925], "packet": [340, 566, 881, 989, 1012, 1047], "transmit": 340, "datatim": 340, "read_measur": 340, "fourier": 340, "fft": 340, "011": [340, 351], "ifft": 340, "print_": 341, "0x7f0b165fdf00": 341, "dos_path": [341, 357, 393], "vernuenftigen": 341, "__class_getitem__": 341, "__iand__": 341, "__ior__": 341, "__isub__": 341, "__ixor__": 341, "difference_upd": 341, "intersection_upd": 341, "issubset": 341, "issuperset": 341, "symmetric_differ": 341, "symmetric_difference_upd": 341, "hallohallohallohallohallo": 341, "139685905188368": 341, "139685905188400": 341, "0x7f0b14487be0": 341, "fasschingbau": 341, "139685602274352": 341, "139685561461616": 341, "139685561690240": 341, "139685561316032": 341, "139685595970464": 341, "139685561151488": 341, "30000000": 341, "my_iter": 341, "my_print": [341, 1112], "my_arg": [341, 1087], "even_squar": [341, 351, 363], "squares_fun": 341, "squares_gen": 341, "0x7f0aefb94f20": 341, "0x7f0aefb955b0": 341, "squares_list": 341, "foobar": 341, "expr_str": 341, "expr": [341, 455, 465, 948], "skiprow": 341, "hz2": 341, "hz3_5": 341, "000566": 341, "000729": 341, "132363": 341, "229977": 341, "260597": 341, "444942": 341, "385433": 341, "638212": 341, "502710": 341, "796519": 341, "936250": 341, "972326": 341, "974442": 341, "999992": 341, "995683": 341, "973719": 341, "999245": 341, "895850": 341, "985202": 341, "768778": 341, "arang": 341, "001": [341, 351, 446], "002": 341, "003": 341, "004": 341, "0x7f0ad44b8f70": 341, "0x7f0ad23371f0": 341, "aaarghhh": 342, "expresss": 342, "realist": [343, 1005], "postpon": [343, 907], "noon": [344, 1051, 1140], "coverag": [344, 1096], "hackin": 344, "mocksink": 344, "139680347735568": 345, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 345, "0xabc": 345, "convert_to_int": 345, "konvertieren": 345, "drei_int": 345, "fooabc": 345, "userlin": 345, "tjr": 345, "\u00f6rg": 345, "0xc3": [345, 351, 357], "enc_": 345, "enc_s_recvd": 345, "ipykernel_81650": 345, "1521975281": 345, "lg_joerg": 345, "concat": [345, 506, 1208], "linksunten": 345, "rechtsoben": 345, "meinsinussensor": 345, "sinvalu": 345, "ndarrai": [345, 1197, 1213], "0x7f67142f53c0": 345, "timeit": 350, "0x64": 351, "0b1100100": 351, "0b100101100": 351, "0b0": 351, "type_of_i": 351, "schade": 351, "worldhello": 351, "140572055569936": 351, "500001": 351, "499999999999999999999999": 351, "4999": 351, "my_round": 351, "diff_to_next": 351, "5001": 351, "500000001": 351, "str_i": 351, "int_i": 351, "float_i": 351, "nocheinelist": 351, "140571746172800": 351, "140571753417312": 351, "my_": 351, "2282548071841868421": 351, "oioi": 351, "ueberbleibsel": 351, "my_sum": 351, "doom": 351, "0x7f48e8543060": 351, "doedel": 351, "sdhcbdhcb": 351, "kjsdskbh": 351, "akjsdhvksb": 351, "item2": [351, 835, 836], "line_r": 351, "tyyi": 351, "mp_left": 351, "mp_top": 351, "mp_right": 351, "mp_righ": 351, "brenner": 351, "kupfer": 351, "koax": 351, "oberflaech": 351, "gasdues": 351, "fsc": 351, "zellentemp": 351, "raumtemp": 351, "vdc": 351, "077": 351, "090": [351, 742], "76220": 351, "77849": 351, "086": 351, "81216": 351, "99354": 351, "92051": 351, "040": [351, 742, 1057, 1058, 1061, 1062], "035": [351, 1061, 1062], "82874": 351, "075": 351, "006": 351, "78855": 351, "098": 351, "036": 351, "007": 351, "76466": 351, "091": 351, "010": [351, 742, 947, 1054, 1055, 1057, 1058, 1061, 1062], "64736": 351, "65062": 351, "transform_t": 351, "transformed_timestamp": 351, "646126e": 351, "646130e": 351, "mpleft_1": 351, "mpleft_2": 351, "0x7f48ab74abf0": 351, "0x7f48a96648b0": 351, "noch_eine_vari": 351, "even_pr": 351, "0x7f48a9505b40": 351, "0x7f48a95250e0": 351, "squaredict": 351, "squaresset": 351, "bloat": [353, 354, 379, 380, 482, 819, 823, 833, 839, 840, 1109], "ugh": 353, "urgh": 353, "nodiscard": 353, "fallthrough": [353, 1062], "noexcept": [353, 545, 579, 750, 753, 755, 770, 772, 773, 775, 776, 777, 778, 792, 802, 816], "string_view": [353, 372], "hierachi": 354, "conveni": [354, 429, 538, 725, 913, 995, 1062, 1083, 1196], "powercontrol": 354, "temperaturecontrol": 354, "get_target_temperatur": 354, "copyabl": [354, 645, 831], "_run": 354, "kochtopftemperaturecontrol": 354, "get_current_temperatur": 354, "debt": [354, 568, 569, 570, 582, 583, 584], "erasur": [354, 379, 819, 823, 833, 839, 840], "align": [354, 416, 483, 492, 496, 501, 502, 744, 782, 819, 822, 837, 839, 840, 987, 989, 1058, 1135, 1239, 1243], "98f8b9be": 357, "ad8f": 357, "4023": 357, "81a2": 357, "d1dc67d0282c": 357, "python310": 357, "139783143835152": 357, "0x7f21cca24610": 357, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 357, "1_000_000": 357, "3267": 357, "139782834179584": 357, "139783143835184": 357, "meng": 357, "m1": 357, "m2": 357, "leeres_set": 357, "d_revers": 357, "yaai": 357, "my_deppertes_rang": 357, "mdr": 357, "objeckt": 357, "139782799029888": 357, "139782798781696": 357, "139782798895952": 357, "139782798895792": 357, "139782798980096": 357, "schuld": 357, "300000": [357, 994, 1196], "compiled_pattern": 357, "__builtin__": 357, "139782799135312": 357, "0x7f21b81bbe60": 357, "getcwd": 357, "extlinux": 357, "favicon": 357, "grub2": 357, "opensc": 357, "packagekit": 357, "upow": 357, "authselect": 357, "bash_complet": 357, "binfmt": 357, "brltty": 357, "ceph": [357, 913], "chkconfig": 357, "cupshelp": 357, "dconf": 357, "debuginfod": 357, "depmod": [357, 865, 883], "dracut": 357, "egl": 357, "firewalld": [357, 926], "flexiblasrc": 357, "font": 357, "fwupd": [357, 926], "gcrypt": 357, "gdbinit": 357, "glvnd": 357, "groff": 357, "gss": 357, "gssproxi": 357, "hp": 357, "iproute2": 357, "iscsi": 357, "jvm": 357, "kdump": 357, "krb5": 357, "libblockdev": 357, "libibverb": 357, "libnl": 357, "libpap": 357, "libreport": 357, "libssh": 357, "libvirt": 357, "logrot": 357, "lvm": 357, "mcelog": 357, "mdevctl": 357, "modprob": [357, 865, 887, 888, 988, 993, 994, 995], "motd": 357, "cnf": 357, "ndctl": 357, "nftabl": 357, "openldap": 357, "ostre": 357, "pam": 357, "pkcs11": 357, "pkgconfig": [357, 517], "plymouth": 357, "polkit": 357, "popt": 357, "ppp": 357, "puls": [357, 986, 1247], "rwtab": 357, "sasl2": 357, "selinux": 357, "sgml": 357, "skel": 357, "speech": 357, "sssd": 357, "statetab": 357, "sudoer": [357, 931], "swid": 357, "sysconfig": 357, "sysctl": 357, "terminfo": 357, "thermald": 357, "tmpfile": 357, "tpm2": 357, "udev": 357, "udisks2": 357, "vmware": [357, 927], "vpnc": 357, "vulkan": 357, "wireplumb": 357, "wpa_supplic": 357, "xdg": 357, "dir_color": 357, "lightbgcolor": 357, "grep_color": 357, "adjtim": 357, "bindresvport": 357, "brlapi": 357, "dleyna": 357, "fprintd": 357, "jwhoi": 357, "libaudit": 357, "libus": 357, "mailcap": 357, "man_db": 357, "mime": 357, "mke2f": 357, "nanorc": 357, "netconfig": 357, "papers": 357, "passwdqc": 357, "pinforc": 357, "sestatu": 357, "tcsd": 357, "usb_modeswitch": 357, "vconsol": 357, "wgetrc": 357, "xattr": 357, "crypttab": 357, "localtim": 357, "mtab": 357, "subuid": 357, "subgid": 357, "timid": 357, "vdpau_wrapp": 357, "asound": 357, "idmapd": 357, "mtool": 357, "rsyncd": 357, "anthi": 357, "trolltech": 357, "rygel": 357, "virc": 357, "swtpm": 357, "localca": 357, "swtpm_setup": 357, "uresourc": 357, "ethertyp": 357, "inputrc": 357, "printcap": 357, "csh": [357, 1226], "nfsmount": 357, "nsswitch": 357, "gshadow": 357, "shadow": [357, 923, 944, 1021, 1131, 1169], "rhashrc": 357, "imagemagick": 357, "cshrc": 357, "gimp": 357, "updatedb": 357, "dl": 357, "containerd": [357, 1080], "lftp": 357, "rc0": 357, "rc1": 357, "rc2": 357, "rc3": 357, "rc4": 357, "rc5": 357, "rc6": 357, "cpe": 357, "inittab": 357, "makedumpfil": 357, "sensors3": 357, "posixpath": [357, 367], "kadjckk": 357, "xxddjh": 357, "blahblahblahblah": 357, "schuetzen": 358, "regexen": 358, "afterthought": [362, 1121], "__getstate__": 363, "bit_count": 363, "maximum_numb": 363, "140526007219432": 363, "0x42": 363, "0x7fceb0516c20": 363, "cnt": [363, 1092], "140525696085312": 363, "create_print_funct": [363, 784, 786, 787], "140526007219464": 363, "140525697462832": 363, "140525697462736": 363, "140525697463408": 363, "140525697463280": 363, "match_express": 363, "compiled_express": 363, "joined_l": 363, "hwmon4": 363, "hwmon5": 363, "hwmon7": 363, "hwmon8": 363, "0x7fce70506000": 363, "varibl": 367, "139818180670696": 367, "0x7f29f4fdf4e8": 367, "139817897762928": 367, "0b11111111111111111111111111111111": 367, "0b100000000000000000000000000000000": 367, "139817896921728": 367, "139817466913504": 367, "142334567876545678765456787654": 367, "max_tri": 367, "fuck": [367, 858], "straw": [367, 1128, 1136], "ipaddress": 367, "addr": [367, 858, 871, 883, 989, 994, 1012, 1031, 1058, 1224], "ip_address": 367, "ipv4address": 367, "is_loopback": 367, "gueltig": 367, "a_tupl": [367, 1127], "139818180670728": 367, "139817467481600": 367, "modifyit": 367, "sjdgosi": 367, "gfosvbsisvbsok": 367, "file1": [367, 520, 838, 856, 974], "file2": [367, 520, 838, 856, 974], "csv_file": 367, "subdir1": [367, 838], "subdir2": [367, 838], "subdir": [367, 838, 1087], "mein_dir": 367, "mein_csv_fil": 367, "null_eins_zwei": 367, "0x7f296befbc40": 367, "shuffl": 367, "kvpair": 367, "reduct": 367, "img_arrai": 367, "rerun": [367, 652, 801], "unabl": [367, 996], "nbviewer": 367, "kmeansifittedkmean": 367, "18423981": 367, "51866902": 367, "40779841": 367, "94278979": 367, "7484102": 367, "52017749": 367, "71821931": 367, "48415009": 367, "61361798": 367, "10754686": 367, "97606427": 367, "93141702": 367, "5569347": 367, "5296816": 367, "4875877": 367, "85174112": 367, "87099894": 367, "85349982": 367, "35345614": 367, "73043954": 367, "19387197": 367, "7373525": 367, "19961382": 367, "95700493": 367, "richtigen": 367, "bildern": 367, "austauschen": 367, "einzelenen": 367, "urspruenglich": 367, "veraendert": 367, "reduced_arrai": 367, "datatyo": 368, "einlesen": 368, "00am": 370, "currect": [370, 865, 961], "shortcut": [370, 398, 474, 948, 981, 1121], "sysvinit": 370, "disclos": [371, 395, 1002], "homeopath": 371, "untest": 371, "monolith": [371, 506, 1065], "toi": [371, 585, 742, 1063], "warehous": 371, "testabl": [371, 505, 1225], "stacker": 371, "sunshin": 371, "consider": [371, 491, 948], "hygien": [371, 430], "inject": [371, 372, 379, 877, 890, 895, 1203], "subtl": [371, 444, 464, 487, 526, 599, 1115], "grew": [371, 1244], "vast": 371, "angst": [371, 1259], "realiti": 371, "shoud": [372, 755], "metric": 372, "decai": [373, 673], "upsid": 373, "joinabl": [373, 1254], "detach": [373, 1254], "slow": [373, 464, 495, 499, 694, 995, 1006], "empir": 373, "ping": 373, "pong": 373, "sensor_nam": 373, "yessss": 373, "opencppcoverag": [374, 377], "sonarqub": [374, 377], "backend": [374, 377, 1146], "stub": [374, 377, 840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985, 1079], "mico": [374, 377], "abi": [374, 377, 534, 539, 865, 867, 1009, 1066, 1067], "add_librari": [375, 378, 380, 509, 512, 517, 523, 531, 533, 538, 539, 585, 630, 639, 840, 1066, 1067], "input_dir": 375, "output_fil": 375, "ausbaufaehig": 375, "subgraph": 375, "target_compile_definit": [375, 378, 510, 513, 517, 523, 531, 533, 840], "configure_fil": [375, 378, 511, 512, 513, 517, 523, 533, 840], "libmosquitto": [375, 378, 517, 523, 533, 840], "add_custom_command": [375, 378, 380, 517, 523, 533, 840], "simplist": [376, 566], "filemosquitto": 376, "cmake_module_path": [376, 512, 528], "cmake_current_source_dir": [376, 378, 507], "rebuild": 378, "everytim": [378, 422, 440, 993], "execute_process": [378, 526], "cmake_current_binary_dir": [378, 507, 511, 514], "deepli": 378, "backward": [379, 380, 794, 862, 948, 981, 986, 1115, 1220], "funtion": 379, "ditto": 379, "understood": [379, 494, 504, 601, 806, 887, 1256], "loggingtarget": 379, "crtp": [379, 833], "vermieden": 379, "projektaufbau": 379, "verwendung": [379, 416], "statischen": 379, "onward": [380, 648, 652, 658], "plat": 380, "fstream": [380, 601, 838], "earlier": [380, 646], "anomali": 380, "coutsink": 380, "idatasink": 380, "sensorread": [380, 549], "confgen": 380, "cancoutperiph": 380, "socketcanperiph": 380, "conceiv": [380, 480, 1115], "ican": 380, "parameter": [380, 697, 804, 809, 1074, 1088], "nonvirtu": 380, "lack": [380, 484, 518, 535, 601, 735, 737, 995, 1078], "frustrat": 380, "newer": [380, 1006, 1082, 1242], "visit": [380, 819, 824, 828, 831, 839, 840], "indirect": [380, 719, 806, 925, 1083], "unsur": 380, "unrel": [380, 600, 631, 640, 806, 824, 825, 829, 839, 840, 1049, 1059, 1089, 1106, 1263], "discrimin": [380, 819], "burnt": 380, "datasinkpointeraltern": 380, "disadvantag": 380, "datasinkobjectaltern": 380, "cornerston": [381, 995], "appeal": 381, "typesaf": [381, 819], "overid": 381, "commmandlin": 383, "checker": [384, 389, 398], "horribl": 384, "gpio25": [384, 990], "embarass": 384, "winscp": 384, "cluster_ece19": [384, 385, 386, 387, 388, 389, 398, 840], "ece19": [384, 385, 386, 387, 389, 397, 398, 404, 405, 409, 840], "ece19_blinklicht": [384, 385, 386, 387, 388, 398, 840], "ece19_file_read": [384, 385, 386, 387, 388, 389, 398, 840], "ece19_blinklicht_oo": [385, 386, 387, 388, 398, 840], "ece19_blinklicht_unittest": [387, 388, 398, 840], "ece19_blinklicht_abc": [387, 388, 398, 840], "blinklicht": [388, 398, 403, 840], "1910420003": [389, 390], "corinna": [389, 390], "baumgartn": [389, 390, 407], "1910420002": [389, 390], "anzhelika": [389, 390, 398], "chernykh": [389, 390, 398, 407], "1910420005": [389, 390], "simon": [389, 390], "1910420006": [389, 390], "matthia": [389, 390, 407], "kappel": [389, 390, 407], "1810420009": [389, 390], "kolter": [389, 390], "1920420033": [389, 390], "kornberg": [389, 390, 407, 410], "1910420007": [389, 390], "lui": [389, 390, 407], "kraker": [389, 390, 407, 410], "1810420010": [389, 390], "leonid": [389, 390], "kudriaschov": [389, 390], "1910420008": [389, 390], "michael": [389, 390, 399, 400], "1910420010": [389, 390], "sonja": [389, 390, 407], "luka": [389, 390, 407, 410], "1910420013": [389, 390], "behnaz": [389, 390], "mehrabadi": [389, 390, 407], "1910420014": [389, 390], "moser": [389, 390, 407], "1910420015": [389, 390], "moritz": [389, 390], "nagelschmi": [389, 390, 407], "1910420018": [389, 390], "bianca": [389, 390], "reimer": [389, 390], "1910420020": [389, 390], "schmid": [389, 390, 407], "1910420021": [389, 390], "sch\u00fcttler": [389, 390], "1910420022": [389, 390], "schweiger": [389, 390, 407], "1910420024": [389, 390], "sinabel": [389, 390], "1910420025": [389, 390], "slovik": [389, 390, 407], "1910420026": [389, 390], "s\u00f6l": [389, 390, 407], "1910420027": [389, 390], "stangl": [389, 390, 407], "1910420028": [389, 390], "felix": [389, 390, 407], "themessl": [389, 390, 407], "1920420035": [389, 390], "astrid": [389, 390], "vogel": [389, 390, 407], "1810420029": [389, 390], "florian": [389, 390, 407], "zwittnigg": [389, 390], "matricul": [389, 1090], "studentdb": 389, "greatli": [389, 490, 1241], "matnr": 389, "rid": [389, 488, 549, 889, 906], "zuweisung": 390, "n1910420002": 390, "n1910420005": 390, "n1910420006": 390, "n1810420009": 390, "n1920420033": 390, "n1910420007": 390, "n1810420010": 390, "n1910420008": 390, "n1910420010": 390, "n1910420013": 390, "n1910420014": 390, "n1910420015": 390, "n1910420018": 390, "n1910420020": 390, "n1910420021": 390, "n1910420022": 390, "n1910420024": 390, "n1910420025": 390, "n1910420026": 390, "n1910420027": 390, "n1910420028": 390, "n1920420035": 390, "n1810420029": 390, "n666": 390, "5g": 390, "n19": 390, "10420013": 390, "theme": [390, 1121, 1140], "n181": 390, "0420029": 390, "20210324": 391, "orig_si": 391, "__interactivehook__": 391, "_base_execut": 391, "_clear_type_cach": 391, "_current_fram": 391, "_debugmallocstat": 391, "_framework": 391, "_getfram": 391, "_git": 391, "_home": 391, "_xoption": 391, "flo": 392, "ted": 392, "rainer": 392, "rg": 392, "some_numb": [393, 524, 1118], "auszuspucken": 393, "eine_neue_vari": 393, "klassisch": 393, "140705292246608": 393, "register_cont": 393, "0b11010001110101000": 393, "107432": 393, "erzwungen": 393, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 393, "groesst": 393, "darstellbar": 393, "ein_string_der_aussieht_wie_ein_integ": 393, "ein_integ": 393, "ver\u00e4ndernd": 393, "say_hello": [394, 1107], "333333333333336": 394, "formalit\u00e4ten": 397, "daili": [397, 931], "organiz": 398, "baustein": [398, 403], "navigieren": [398, 403], "sitzen": [398, 403], "nat\u00fcrlich": [398, 403], "verstehen": [398, 403, 1258], "pr\u00fcfung": [398, 403], "trocken": [398, 403], "pfade": [398, 403], "symbolisch": [398, 403, 976], "verschieben": [398, 403], "textfil": [398, 403], "113ff": [398, 403], "ansatzweis": [398, 403], "durchgegangen": [398, 403], "133ff": [398, 403], "durchgemacht": [398, 403], "wirkungsweis": [398, 403], "verstanden": [398, 403, 1238], "verkn\u00fcpfen": [398, 403], "aufw\u00e4rmen": 398, "fremden": 398, "fragerund": 398, "tire": [398, 403], "transact": [398, 403], "wertebereich": 398, "vpn": [398, 996], "sidenot": 398, "swoop": [398, 543], "hashbang": 398, "student1": 398, "student2": 398, "student3": 398, "undescript": 398, "contribut": [398, 1065], "crlf": 398, "bang": [398, 539], "trial": [398, 1068, 1078, 1198], "systemkonzept": [399, 416], "adressr\u00e4um": [399, 416], "ger\u00e4t": 399, "destruktoren": [399, 1240], "containertempl": 399, "ausz\u00fcg": 399, "absolventinnen": 399, "absolventen": 399, "entwicklungsplatform": 399, "zielplattform": [399, 1240], "dortigen": 399, "betriebssystemkonzept": [399, 1247], "verinnerlichen": 399, "eckpfeil": [399, 1240], "ansteuern": 399, "merkmal": 399, "nichttrivial": 399, "kerrisk": [399, 400], "handbook": [399, 400], "corbet": [399, 400], "allessandro": [399, 400], "rubini": [399, 400], "greg": [399, 400], "kroah": [399, 400], "hartman": [399, 400], "richard": [399, 400, 1065], "steven": [399, 400, 494], "stephen": [399, 400], "rago": [399, 400], "cookbook": [399, 400, 1231], "lutz": [399, 400], "integriert": 399, "\u00fcbungsanteil": 399, "einzelpr\u00fcfung": 399, "vorlesung": 399, "graduat": 400, "copver": 400, "warm": 401, "briefli": [402, 986], "filethermomet": 402, "ue": 404, "homedirectori": [404, 977], "vbox": 404, "subnet": 404, "mgmt": 405, "64ff": 405, "readdir": [405, 838], "ow": [405, 568, 569, 570, 582, 583, 584], "readlink": 405, "thermometers_docu": 406, "toctre": 406, "execconfig": 406, "wacom": [406, 467, 468], "schuettler": 407, "zwittnig": 407, "simu": 407, "kudriaschow": 407, "hysteres": 407, "impl": 407, "marku": 407, "stepper": 407, "wasserfal": 407, "influxdb": 407, "grafana": 407, "nachmittag": 407, "multitask": [408, 413, 815, 839, 840, 985, 1026, 1042, 1048, 1050, 1051, 1053, 1247], "latenc": [409, 413, 816, 840, 885, 985, 1026, 1048, 1050], "gotcha": [409, 413, 716, 840, 985, 1006, 1026, 1048, 1050, 1058], "type_from_ini": 409, "ece19error": 409, "configfil": [409, 1090], "prettier": [409, 658], "support_address": 409, "invalidtypeerror": 409, "newcom": [411, 412], "ride": 415, "individualtrain": 415, "baden": 415, "w\u00fcrttemberg": 415, "beginnend": 415, "kursnotizen": 415, "qualivis": 415, "thalheim": 416, "surviv": 416, "delphi": [416, 1259], "young": 416, "physicist": 416, "raaba": 416, "aachen": 416, "herzogenrath": 416, "mixtur": [416, 677], "gr\u00e4felf": 416, "wel": 416, "regensburg": 416, "pr\u00e4sent": 416, "inhous": [416, 1193], "linuxcampu": 416, "sch\u00f6nen": 416, "teilnehmern": [416, 1259], "aktiv": 416, "mitgestaltet": 416, "kursabschluss": 416, "dran": 416, "provok": 416, "kam": 416, "zustand": 416, "freiheiten": 416, "gestanden": 416, "zusatzaufgab": 416, "gef\u00fchrt": 416, "einschr\u00e4nkungen": 416, "eintagesworkshop": 416, "leuten": 416, "kenn": 416, "einhergehend": 416, "l\u00f6sungen": 416, "darauffolgend": 416, "vertiefen": 416, "ausgew\u00e4hlten": 416, "bereichen": 416, "dbapi2": [416, 1203], "objektorientierung": 416, "r\u00e4umen": 416, "zweit\u00e4gig": 416, "gemisch": 416, "kursen": 416, "ziemlich": 416, "eingemacht": 416, "bestellt": 416, "neugier": 416, "leichtfertig": 416, "tief": 416, "hinabgestiegen": 416, "feiner": 416, "internen": 416, "forschungsprojekt": 416, "gebracht": 416, "zusammenschnitt": 416, "workshopcharakt": [416, 1259], "angegraut": 416, "bewusst": 416, "wunderbar": 416, "automatisieren": 416, "zurerst": 416, "shellbenutzung": 416, "angeordnet": 416, "ge\u00fcbt": 416, "herk\u00f6mmlichen": [416, 1240], "auffrischung": 416, "eingerostet": 416, "neuigkeiten": 416, "querbeet": 416, "aufbauend": 416, "zuvor": 416, "grundkur": 416, "wichtigsten": 416, "neuerungen": [416, 1240], "tobak": 416, "lieblingsschulungen": 416, "basiswissen": 416, "hoeri": 416, "zustandegekommen": 416, "bastelwoch": 416, "betrachtung": 416, "realtimef\u00e4higkeit": 416, "xenomai": 416, "fad": 416, "auszugsweis": 416, "richtig": 416, "n\u00e4chten": 416, "schulungstagen": 416, "kurzweil": 416, "beschert": 416, "einf\u00fchrungscharakt": 416, "kernelprogrammierung": 416, "auftrag": 416, "hardwarenah": [416, 1247], "ausgew\u00e4ht": 416, "kernelstruktur": 416, "crosscompil": 416, "heut": [416, 1240], "msys2": 417, "5595": 417, "17619": 417, "pacman": 417, "mingw64": 417, "w64": 417, "x64": 417, "medium": [417, 534, 804, 1063], "swlh": 417, "2b2e66352456": 417, "iec": [418, 643], "9899": 418, "c11": 418, "pdp": [418, 432], "ken": 418, "thompson": 418, "tabul": [419, 427], "brutal": [420, 439, 443, 464, 742, 759, 1051], "wherev": 422, "ascend": [423, 1213], "unread": [424, 442, 499, 805, 1066, 1067, 1088, 1132], "putchar": 426, "caution": [426, 652, 913, 989], "obscur": [426, 434, 599, 719, 904, 1015, 1059, 1244], "alright": [426, 452], "inequ": [426, 659], "word1": [427, 619], "word2": [427, 619], "word3": [427, 619], "word4": 427, "word5": 427, "unixen": [427, 838, 1059, 1226], "nonsens": [428, 446, 465, 520, 645, 649, 652, 742, 801, 951, 1049, 1087, 1197, 1236], "illustr": [428, 1090], "countchar": 428, "nwhite": 428, "nother": 428, "stat": [428, 838, 1011, 1019, 1020, 1021, 1022, 1031, 1049, 1055, 1058, 1062, 1224], "nonprint": [429, 457], "decis": [429, 504, 507, 604, 651, 666, 801, 986, 1051, 1092, 1198, 1242, 1245], "xxxxxxxxxxxxxxxxxxxxxxxxx": 429, "xxxxxxxxxxxxxxxxxx": 429, "subroutin": [430, 498], "outer": [430, 457, 522, 526], "wimplicit": [430, 855], "dear": 430, "assembl": [432, 1065], "contradict": [432, 747], "640k": 432, "a_str": 432, "strncpy": 432, "maxlen": [432, 433], "strcat": 432, "strncat": 432, "strcmp": [432, 753, 754], "strncmp": 432, "another_str": 432, "nonsensi": 433, "read_lin": 433, "longest": 433, "confin": [434, 1090], "cluster_c": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cluster_c_introduct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 782, 798, 807, 815, 824, 837, 839, 840], "c_introduction_funct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_histogram": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_wc": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_character_io": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_variables_and_arithmetic_express": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_hello_world": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_instal": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 751, 782, 798, 807, 815, 824, 837, 839, 840], "c_introduction_for_loop": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_fahrenheit_float": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_string_read_lin": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_character_arrai": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_fahrenheit_cpp": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_cpp_symbolic_const": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_introduct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_external_variables_and_scop": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_power_declar": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_arrai": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_introduction_exercise_fahrenheit_for": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "z0": 437, "abbrevi": [438, 759, 762, 764, 768, 823, 825, 827, 828, 829], "char_bit": 438, "x86": [438, 539, 1065, 1068, 1083], "stdint": [438, 993, 1013, 1058], "int8_t": 438, "uint8_t": [438, 556, 571, 743, 819, 993], "int16_t": 438, "int32_t": 438, "int64_t": 438, "052": 439, "0x2a": 439, "0b010010": 439, "42l": 439, "456f": 439, "456l": 439, "x61": 439, "alert": [439, 482, 488, 802, 1121, 1129, 1138, 1140], "backspac": [439, 948, 1134], "formfe": 439, "ooo": 439, "octal": [439, 1121, 1134, 1135], "xhh": 439, "some_funct": [440, 526], "some_vari": [440, 518, 519, 522, 524, 526], "1415926535897932": 440, "some_nonsensical_numb": 440, "legal": [442, 486, 652, 750, 1019, 1063], "truth": [442, 1016, 1044], "eleg": [442, 805], "blank": 442, "num_lf": 442, "narrow": [443, 1198], "4294967295u": 443, "wsign": [443, 485], "wconvers": 443, "4294967296u": 443, "unscrupul": 443, "0x100000000": 443, "weaker": 443, "stronger": [443, 1102, 1210], "1l": 443, "1u": 443, "losslessli": 443, "1ul": 443, "wtype": [443, 485], "wextra": [443, 485], "pedant": 443, "anti": [443, 892, 1033], "sloppi": 443, "advic": [443, 1121], "immens": [443, 1063], "hazard": 443, "messi": [443, 508], "copy_and_omit": 444, "0x4b": 446, "01001011": 446, "0x0c": 446, "00001100": 446, "0x08": 446, "00001000": 446, "0x4f": 446, "01001111": 446, "0x47": 446, "01000111": 446, "0x03": 446, "00000011": 446, "0x80": 446, "00110000": 446, "0x4c": [446, 877], "01001100": 446, "0xb3": 446, "10110011": 446, "arr": [447, 746], "unari": [449, 1121], "strongest": [449, 1121, 1252], "intuit": [449, 497], "danger": [449, 467, 645, 887, 1041, 1062, 1130, 1241], "decrement": [450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 694, 744, 782, 801, 837, 839, 840, 846], "cluster_c_types_operators_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_introduct": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_arithmetic_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_declar": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_increment_decrement_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_type_convers": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_exercise_string_reduc": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_variable_nam": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_const": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_datatypes_s": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_relational_logical_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_conditional_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_assignment_operators_and_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_bit_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_types_operators_expressions_precedence_and_order_of_evalu": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "doabl": 455, "cond": [455, 1038], "precedenceof": 455, "innermost": [457, 713, 718], "concern": [457, 458, 506, 846, 924, 995, 1089, 1256], "edsger": 458, "dijkstra": 458, "plea": 458, "manifold": 458, "judici": [458, 494, 1256], "do_complicated_stuff": 458, "cleanup_mess": 458, "cluster_c_program_flow": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_if_els": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_statements_and_block": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_switch": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_else_if": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_loops_do_whil": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_loops_while_and_for": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_break_and_continu": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_flow_goto_and_label": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "vice": 460, "versa": 460, "g_lobal": [461, 462, 464], "print_g": [461, 462], "linkag": 462, "percept": [462, 924], "disciplin": [462, 484, 494, 504, 1197], "convent": [462, 506, 903, 948, 970, 1009, 1089, 1104], "ifndef": [462, 464, 465, 508, 534, 628, 646, 652, 753, 754, 800, 1065, 1082, 1084], "g_h": 462, "programx": 463, "cautious": 464, "c99": [464, 1239], "have_c_h": 464, "clash": [464, 487], "include_onc": 464, "newbi": [464, 746], "hurdl": 464, "ifdef": [465, 515, 542, 694], "defined": 465, "unequ": 465, "tempt": 465, "horror": 465, "do_much": 465, "do_thi": [465, 806], "do_that": [465, 806], "do_less": 465, "__pragma": 465, "4127": 465, "warn_if": 465, "statem": 465, "function_help": 465, "function_quit": 465, "function_": 465, "inject_viru": 465, "doomed_process": 465, "win32": [465, 1254], "foreign_mem": 465, "virtualallocex": 465, "mem_commit": 465, "page_execut": 465, "page_readwrit": 465, "infect": 465, "__file__": [465, 1090, 1224], "__line__": 465, "smell": [465, 531], "pest": 465, "cluster_c_functions_and_program_structur": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_external_vari": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_bas": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_static_vari": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_header_fil": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_c_preprocessor_advanc": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_functions_and_program_structure_c_preprocessor": [466, 472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "dereferenc": [467, 755, 790, 794], "35129": 467, "calle": [468, 498, 500, 522, 656, 1085], "tablet": 468, "excang": 469, "pa1": 470, "pa2": 470, "cluster_c_pointers_and_arrai": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_pointers_and_arrays_pointers_and_address": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_pointers_and_arrays_pointers_and_arrai": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_pointers_and_arrays_exercise_swap": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_pointers_and_arrays_pointers_and_function_argu": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_pointers_and_arrays_command_line_argu": [472, 476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "scalar": [473, 488, 1138], "fantasi": [473, 986, 988], "p1": [473, 598, 644, 646, 652, 657, 659, 661, 662, 747], "p2": [473, 598, 644, 646, 652, 657, 659, 662, 747], "laid": 473, "makepoint": 474, "addpoint": [474, 490], "addtopoint": 474, "pid_t": [475, 1034, 1052, 1063], "cluster_c_structur": [476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_structures_structures_and_funct": [476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_structures_bas": [476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_structures_typedef": [476, 479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "dealloc": [477, 635, 787, 848, 875, 881], "do_something_with": [477, 745, 791], "list_init": 478, "list_destroi": 478, "list_insert": 478, "list_remov": 478, "list_count": 478, "list_print": 478, "keylen": 478, "cluster_c_memori": [479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_memory_exercise_linked_list": [479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_memory_malloc": [479, 483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "corollari": [480, 482, 808, 1098], "reorder": [480, 816, 871], "use_count": [480, 481, 801, 803, 835], "use_resourc": [480, 481], "do_something_with_shared_resourc": [480, 481], "completion_flag": 480, "out_word": 480, "in_word": 480, "unforese": 480, "volatil": [481, 483, 492, 496, 501, 502, 744, 782, 810, 837, 839, 840, 897, 1063, 1239, 1243], "instr": [481, 499, 1036, 1100], "pthread_mutex_t": [481, 814, 879, 1036, 1038], "use_count_mutex": 481, "pthread_mutex_initi": [481, 1036], "pthread_mutex_lock": [481, 814, 1036, 1038], "pthread_mutex_unlock": [481, 814, 1036, 1038], "expens": [481, 488, 644, 656, 659, 750, 755, 791, 792, 801, 892, 1033, 1241], "fetch_and_add": [481, 1036], "__sync_fetch_and_add": [481, 811, 1036, 1037], "sheer": [481, 647], "neglig": 482, "penalti": 482, "memcpi": 482, "standalon": [482, 519, 755, 1062, 1231], "freeli": 482, "rearrang": [482, 693], "anim": 482, "textit": 482, "bogu": [482, 494, 753, 754, 780, 995, 1063], "__pad0": 482, "__pad1": 482, "misalign": 482, "intrins": [483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "cluster_c_advanced_language_featur": [483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_advanced_language_features_align": [483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_advanced_language_features_atom": [483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "c_advanced_language_features_volatil": [483, 492, 496, 501, 502, 744, 782, 837, 839, 840], "matur": 484, "odditi": 484, "rectifi": 484, "fortran": 484, "lazy": [484, 785], "meant": [484, 1062], "shortcom": [484, 569, 730, 735, 738], "holidai": 484, "handcraft": [484, 552, 1125], "clariti": [485, 489, 1018], "baud": 486, "idl": 486, "writing_request": 486, "reading_respons": 486, "wait_retri": 486, "protocol_engin": [486, 490], "deduc": [486, 742, 745, 770], "obligatori": 486, "anyhow": 486, "forgot": 486, "unambigu": [486, 742], "protocol_error": 486, "eat": [486, 494], "unintend": 488, "wwrite": 488, "max_bucket": 488, "pj": 488, "pointe": 488, "ppi": 488, "height": [489, 552, 660], "beman": 489, "daw": 489, "obfusc": 490, "ssize_t": [490, 602, 846, 1007, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1025, 1027, 1030, 1055, 1058, 1059, 1062], "send_fram": 490, "eng": 490, "send_sum": 490, "v_int32": 490, "spectacular": 490, "adequ": 490, "propos": [490, 588], "unix_error": 490, "app_error": 490, "unix_error_cr": 490, "unix_error_ok": 490, "uerr": 490, "app_error_cr": 490, "app_os_error": 490, "impact": [490, 494], "beyond": [491, 1015, 1031], "slowdown": 491, "0x400552": 491, "0x51bb072": 491, "0x4c28c6d": 491, "vg_replace_malloc": [491, 652], "0x400545": 491, "loss": [491, 997], "rec": [491, 1181, 1183], "uncov": 491, "readabilti": [492, 496, 501, 502, 744, 782, 837, 839, 840], "explict": [492, 496, 501, 502, 840], "cluster_c_program_san": [492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_sanity_introduct": [492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_sanity_explicit_type_safeti": [492, 496, 501, 502, 840], "c_program_sanity_struct_initi": [492, 496, 501, 502, 840], "c_program_sanity_discrete_valu": [492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_sanity_integral_typ": [492, 496, 501, 502, 744, 782, 837, 839, 840], "c_program_sanity_stat": [492, 496, 501, 502, 840], "c_program_sanity_valgrind": [492, 496, 501, 502, 840], "c_program_sanity_const": [492, 496, 501, 502, 840], "hotspot": [493, 497], "checksum": [493, 997, 1047], "externel": 493, "sha1sum": [493, 1047, 1050, 1053], "8g": 493, "0m38": 493, "0m3": 493, "0m0": 493, "perceiv": 493, "daze": 493, "mp3": 493, "018": 493, "mult": 494, "rumour": 494, "uncondit": 494, "finlin": 494, "o3": [494, 535, 838, 1233], "heurist": 494, "o1": 494, "magnitud": [494, 495], "overus": [494, 556, 1103, 1241], "spill": 494, "fira": 494, "rtfm": [494, 1136, 1231], "compromis": [494, 504, 552], "transit": [494, 530, 531], "fmove": 494, "outweigh": 494, "thrash": [494, 1050, 1239], "misnom": [494, 1140], "improv": [494, 497, 535, 785, 800, 838, 1085, 1143], "o0": [494, 535], "unagress": 494, "chew": [494, 816], "agress": 494, "muchnik": 494, "levin": 494, "nearbi": 495, "4x3": 495, "rectangular": 495, "cluster_c_perform": [496, 501, 502, 840], "c_performance_introduct": [496, 501, 502, 840], "c_performance_memori": [496, 501, 502, 840], "c_performance_computebound": [496, 501, 502, 840], "bust": 497, "haul": 497, "cheater": 497, "fallibl": 497, "supplement": 497, "gprof": [497, 499, 500, 501, 502, 840, 1239], "callgrind": [497, 500, 501, 502, 840, 1239], "oprofil": [497, 501, 502, 840, 1239], "gmon": 498, "spot": 498, "38000000": 498, "find_dupl": [498, 500], "criterion": [498, 684], "37000000": 498, "luck": [498, 524, 993, 1087, 1089], "gprof2dot": 498, "tjpeg": 498, "predict": [499, 500, 1194, 1196, 1197], "sluggishli": 499, "16761": 499, "callgrind_annot": 499, "atstart": 499, "callgrind_control": 499, "nmi": 500, "ophelp": 500, "operf": 500, "oprofile_data": 500, "opreport": 500, "opannot": 500, "oparch": 500, "opgprof": 500, "Their": 500, "2085": 500, "2505": 500, "maskabl": 500, "callgraph": 500, "pxe": 500, "vmlinux": [500, 862], "debuginfo": 500, "userland": [500, 846], "routin": [500, 506, 631, 838, 879, 885, 890, 1013, 1051, 1084, 1185, 1187, 1255], "analyz": 500, "jcf": [500, 887, 913], "jxf": [500, 887, 913], "gdf": 500, "op2calltre": 500, "oprof": 500, "applet": 500, "viewabl": [500, 538], "kcachegrind": 500, "cluster_c_profil": [501, 502, 840], "c_profiling_gprof": [501, 502, 840], "c_profiling_introduct": [501, 502, 840], "c_profiling_callgrind": [501, 502, 840], "c_profiling_oprofil": [501, 502, 840], "worker": [504, 750], "employ": 504, "consensu": [504, 547], "consent": [504, 1110], "male": [504, 1153], "prcess": 504, "obei": [504, 506], "antipattern": [504, 552], "gonna": 504, "indecis": [504, 1242], "road": 504, "manufactur": [504, 995], "pcb": [504, 993], "bom": 504, "requiremenet": 504, "yyyi": 505, "yagni": 505, "fraunhof": 505, "make_categori": 506, "outputfil": 506, "to_datetim": 506, "make_float": 506, "orpheum": 506, "goingout": 506, "hervi": 506, "sport": 506, "to_csv": 506, "read_from_csv": 506, "write_to_csv": 506, "clean_data": 506, "csvname_or_list_thereof": 506, "workaround": [506, 743, 746, 860, 1224], "read_from_dir": 506, "re_yyyy_mm": 506, "inputdir": 506, "libreoffic": 506, "factor": [506, 855, 856, 887], "test_data_clean": 506, "test_make_float": 506, "1999": 506, "test_date_convers": 506, "at666666666666666666": 506, "000009173": 506, "bawaatwwxxx": 506, "at211420020010848041": 506, "ausgleich": 506, "firmenkonto": 506, "test_input": 506, "read_from_csv_singl": 506, "read_from_csv_multipl": 506, "deliber": 506, "test_read_csv_singl": 506, "000009284": 506, "2371": 506, "000009283": 506, "at613400000005077508": 506, "world4you": 506, "writelin": [506, 1140, 1186, 1188], "test_read_csv_multipl": 506, "lines_2023_02": 506, "lines_2023_01": 506, "000009229": 506, "4111": 506, "bp": 506, "tankstel": 506, "000009228": 506, "at081400086210003454": 506, "\u00f6sterreichisch": 506, "gesundheitskass": 506, "_write_csv": 506, "read_from_csv_dir": 506, "test_read_csv_dir": 506, "testutil": 506, "write_csv": 506, "test_category_csv": 506, "000009168": 506, "000009169": 506, "2801": 506, "strassenbahn": 506, "eas": [506, 1203], "finer": 506, "refact": 506, "str_categori": 506, "cardunknown": 506, "flughafen": 506, "wien": 506, "test_more_of_it": 506, "000009153": 506, "parken": 506, "fl": 506, "inputread": 506, "recursivecsvinputread": 506, "singlecsvinputread": 506, "compositeinputread": 506, "input_abc": 506, "abstractmethod": [506, 1102], "multiplecsvinputread": 506, "test_input_abc": 506, "conf_sensor": 507, "conf_sensors_init": 507, "add_sensor": [507, 610, 611, 612, 613, 615, 616], "make_uniqu": [507, 513, 568, 582, 836], "existig": 507, "democonfig": [508, 509, 510, 511, 516], "descend": [508, 509, 510, 540, 585, 949, 1059], "IF": [508, 509, 510, 535], "use_blacklist": [508, 509], "macro_use_blacklist": [508, 510], "demo_use_blacklist": [508, 509], "namegreet": 508, "_blacklist": 508, "implic": [508, 871, 944, 1006], "sayhello": 508, "is_forbidden": 508, "_name": [508, 575, 578, 582, 583, 584], "goodby": [508, 1063], "use_backlist": 508, "condition": [508, 512, 515], "libhello": [509, 511, 516, 535, 537, 540, 1082], "duse_blacklist": [509, 510], "target_compile_opt": [509, 531], "manyfold": 510, "lightli": 510, "demo_version_major": [511, 514], "demo_version_minor": [511, 514], "demo_major": [511, 514], "demo_minor": [511, 514], "include_directori": [511, 514], "overkil": 511, "sqlite3_found": [512, 513, 514, 515, 516], "config_have_sqlite3": [512, 514], "tolevel": 512, "sinkcomposit": 512, "sinktermin": 512, "sinksqlite3": [512, 513], "sinkmqtt": 512, "findmosquitto": 512, "mosquitto_found": 512, "mytarget": 512, "find_path": 512, "mosquitto_include_dir": 512, "find_librari": 512, "mosquitto_librari": 512, "found_var": 512, "required_var": 512, "mark_as_advanc": 512, "glue": [512, 770], "config_have_mosquitto": 512, "have_mosquitto": 512, "voila": [512, 656, 993, 1053, 1066, 1067, 1078, 1109], "cerr": [513, 549, 588, 666, 736, 806, 816, 993, 1027, 1030, 1031], "create_table_stat": 513, "findsqlite3": [513, 515, 516], "sqlite3_include_dir": [513, 516], "sqlite3_librari": [513, 516], "availablil": 513, "sqlite3_vers": [513, 516], "availabl": 513, "temporarili": [513, 539, 1052, 1065], "have_sink_sqlite3": 514, "have_sqlite3": [514, 515], "gluehweinkochen": 514, "inc_sink_sqlite3": 515, "src_sink_sqlite3": 515, "litter": [515, 1022], "typo": [516, 1103, 1104], "olden": 516, "0x00007f76ae011000": 516, "libz": 516, "0x00007f76adef7000": 516, "cluster_cmak": [517, 523, 533, 536, 840], "cluster_cmake_advanc": [517, 523, 533, 840], "cluster_cmake_advanced_languag": [517, 523, 533, 840], "cluster_cmake_intro": [517, 523, 533, 536, 840], "cmake_advanced_external_dependencies_mosquitto": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3_optional_configured_fil": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3_optional_graph": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3": [517, 523, 533, 840], "cmake_advanced_library_function_screenplai": [517, 523, 533, 840], "cmake_advanced_targets_properti": [517, 523, 533, 840], "cmake_advanced_targets_properties_pub_priv_inc_screenplai": [517, 523, 533, 840], "cmake_advanced_code_gener": [517, 523, 533, 840], "cmake_advanced_optional_code_problem": [517, 523, 533, 840], "cmake_advanced_configure_fil": [517, 523, 533, 840], "cmake_intro_librari": [517, 523, 533, 536, 840], "cmake_intro_structur": [517, 523, 533, 536, 840], "cmake_advanced_test": [517, 523, 533, 840], "cmake_advanced_external_depend": [517, 523, 533, 840], "cmake_advanced_optional_code_approach_2": [517, 523, 533, 840], "cmake_advanced_optional_code_approach_1": [517, 523, 533, 840], "cmake_intro_cxx_and_r": [517, 523, 533, 536, 840], "cmake_advanced_language_whil": [517, 523, 533, 840], "cmake_advanced_language_datatyp": [517, 523, 533, 840], "cmake_advanced_language_vari": [517, 523, 533, 840], "cmake_advanced_language_functions_and_macro": [517, 523, 533, 840], "cmake_advanced_language_if_and_condit": [517, 523, 533, 840], "cmake_advanced_language_bas": [517, 523, 533, 840], "cmake_advanced_language_foreach": [517, 523, 533, 840], "cmake_advanced_language_file_etc": [517, 523, 533, 840], "cmake_advanced_language_script": [517, 523, 533, 840], "cmake_intro_instal": [517, 523, 533, 536, 840], "cmake_intro_shared_libraries_preview": [517, 523, 533, 536, 840], "cmake_intro_bas": [517, 523, 533, 536, 840], "gtest_discover_test": 517, "cliutil": 517, "20depend": 517, "20guid": 517, "fetchcont": 517, "externalproject": 517, "conan": 517, "pakag": 517, "counterpart": [518, 587], "insensit": [518, 524, 978, 1215], "sensit": [518, 526, 1120], "helloworld": 518, "arument": 518, "chararct": 518, "clike": 518, "keystrok": [518, 948], "undesir": 518, "undesiredhelloworld": 518, "position_found": 519, "contrari": [519, 1214], "some_str": 519, "varnam": 519, "joined_str": 519, "zeiling": [519, 524], "is_less": 519, "some_list": [519, 875], "loop_var": 519, "endforeach": [519, 520, 528], "some_length": 519, "remove_at": 519, "passwd_cont": 520, "passwd_lin": 520, "passwd_hash": 520, "2cf0baaebfbfbdbaaf1ded5385d50b6c0fb883f7ffc60a33da9381b84bba5407": 520, "cpp_file": 520, "root_nam": 520, "root_directori": 520, "root_path": 520, "relative_part": 520, "parent_path": [520, 838], "full_path": 520, "filename_part": [520, 838], "some_path": 520, "endfunct": [522, 526, 528], "access_par": 522, "outer_vari": [522, 526], "outer_funct": [522, 526], "take_one_paramet": 522, "superflu": 522, "take_two_paramet": 522, "param1": 522, "param2": 522, "argv_etc": 522, "first_param": 522, "second_param": 522, "argv0": 522, "argv1": 522, "argv3000": 522, "reach_out": 522, "caller_vari": 522, "ref_param": 522, "_one": 522, "_anoth": 522, "some_variable_on": 522, "some_variable_anoth": 522, "vararg": 522, "takes_any_number_arg": 522, "takes_fancy_paramet": 522, "myparam": 522, "fancy1": 522, "fancy2": 522, "fancies1": 522, "fancies2": 522, "myparams_verbos": 522, "myparams_cool": 522, "myparams_fancy1": 522, "myparams_fancy2": 522, "myparams_fancies1": 522, "myparams_fancies2": 522, "endmacro": 522, "strequal": [524, 526, 535], "elseif": [524, 528], "lexicograph": [524, 721], "strless": 524, "some_nam": 524, "is_directori": [524, 838], "is_absolut": [524, 838], "cmake_polici": [524, 526], "cmp0139": 524, "alternative_filenam": 524, "path_equ": 524, "recognis": 524, "versionad": 524, "another_vari": [524, 526], "libnam": 524, "mental": 524, "cmp0012": 524, "notfound": [524, 544, 545, 573, 735, 736, 737], "suffer": [524, 805, 994], "pretend": [524, 792], "boolean_vari": 524, "boolshit": 524, "cmp0054": 524, "wno": [524, 526], "par": 524, "biggest": 524, "dname": [525, 531], "dperson": 525, "unset": [526, 569, 1038], "cal_symbol": 526, "cmp0010": 526, "name_of_vari": 526, "affect": [526, 796], "subsequ": [526, 595], "cmakecach": [526, 1066, 1067], "cmake_minimum_requir": [526, 534, 1067, 1233], "local_vari": 526, "beautifulli": 528, "public_head": 528, "private_head": 528, "argn": 528, "my_add_library_shar": 528, "my_add_library_stat": 528, "my_add_library_nam": 528, "my_add_library_private_head": 528, "my_add_library_public_head": 528, "my_add_library_sourc": 528, "my_add_library_debug": 528, "fatal_error": [528, 535], "noi": [530, 531], "asymmetri": 530, "compile_definit": 531, "compile_opt": 531, "widest": 531, "set_target_properti": 531, "asymmetr": [531, 990], "enable_test": [532, 1233], "set_tests_properti": [532, 1230, 1233], "pass_regular_express": 532, "ctest": 532, "cdash": 532, "kitwar": 532, "identif": [534, 993, 1066, 1067], "hello_nam": [534, 538], "hello_name_h": 534, "cmake_cxx_standard": [535, 1233], "dndebug": 535, "cmake_": 535, "_compiler_id": 535, "g3": 535, "cmake_c_compiler_id": 535, "cmake_c_flag": [535, 1233], "cmake_cxx_compiler_id": 535, "cmake_cxx_flag": [535, 1233], "howdi": [535, 653, 725, 784, 786, 787, 818, 928, 932, 1019, 1020, 1022, 1107], "bullshithowdi": 535, "send_error": 535, "attract": [535, 746], "cmake_install_prefix": 537, "set_properti": [537, 539], "dbuild_shared_lib": [537, 539], "readelf": [537, 1065, 1078, 1083], "0x0000000000000001": [537, 1083], "0x000000000000001d": 537, "0x00007f773aefe000": 537, "ldconfig": [537, 1065], "sonam": [537, 539], "0x29": 538, "collect2": [538, 718, 1083], "acycl": [538, 1067, 1082], "dag": 538, "jul": [538, 539], "tpng": [538, 1067], "symlink": [539, 838, 993, 1226], "build_shared_lib": 539, "qf": 539, "libboost_regex": 539, "lrwxrwxrwx": [539, 970, 993, 994, 995, 1029, 1065], "rwxr": [539, 933, 935, 936, 945, 1065, 1078, 1117], "289264": 539, "project_vers": 539, "makefile2": 540, "socialdb": [541, 544, 548, 573, 579], "i2csensor_vendor1": [542, 571], "0x37": 542, "suddenli": [542, 887, 928, 1199], "vener": [542, 563, 645, 659, 788], "pour": [542, 913], "damag": [542, 1213], "slip": 542, "cascad": 542, "i2csensor": [542, 556, 571], "create_i2c_sensor": 542, "i2csensorfactori": 542, "speak": [542, 976, 994, 1094, 1119], "vendor1": [542, 571], "abstract_factory_suit": 542, "instantiate_vendor1": 542, "i2csensorfactory_vendor1": 542, "i2c_factory_vendor1": 542, "i2c_sensor": 542, "assert_tru": [542, 597, 598, 603, 608, 610, 615, 644, 646, 660, 661, 662, 663, 747, 801, 802, 818, 819, 838, 1231], "dynamic_cast": [542, 569, 583], "a_sensor": [542, 752], "vendor2": [542, 571], "instantiate_vendor2": 542, "i2csensorfactory_vendor2": [542, 571], "i2c_factory_vendor2": 542, "i2csensor_vendor2": [542, 571], "pu": 542, "tinto": 542, "fahrenheitsensor": [543, 572], "get_temperature_f": [543, 572], "formula": 543, "adapter_suit": 543, "constantfahrenheitsensor": 543, "assert_float_eq": [543, 546, 547, 549, 566, 567, 593, 594, 595, 596, 598, 601, 602, 613, 644, 646, 662, 749, 752, 818, 819], "fahrenheitsensor_adapt": [543, 572], "adapter__is_a__sensor": 543, "adapter__knows__an_a_sensor": 543, "variablefahrenheitsensor": 543, "initial_valu": 543, "_valu": [543, 578], "change_temperatur": [543, 593, 601, 602], "adapter__definitely_knows__a_sensor__hel": 543, "multitud": 544, "socialdbcommand": [544, 573], "command_suit": 544, "2345110695": [544, 702], "socialdbinsertcommand": [544, 573], "3456060486": [544, 702], "insert_by_bas": 544, "socialdbfindcommand": [544, 573], "socialdbdropcommand": [544, 573], "assert_throw": [544, 551, 818, 838], "notinsert": [544, 545, 573], "bulkinsert": 544, "bulk_insert": 544, "socialdbbulkinsertcommand": [544, 573], "bic": 544, "std_initializer_list": 544, "bulk_insert__std_initializer_list": 544, "_msg": 545, "c_str": [545, 580, 602, 748, 753, 754, 1062], "_db": 545, "hypthet": 546, "composite_suit": 546, "cs1": 546, "cs2": 546, "recompil": [547, 1083], "decorator_suit": 547, "average_with_base_sensor": 547, "decoratedsensor": [547, 575], "propon": 547, "diagnost": [547, 675, 678], "decorated_sensor_const_added_function": 547, "decorated_sensor_random_added_function": 547, "decorated_sensor_const__is_a__sensor": 547, "decorated_sensor_random__is_a__sensor": 547, "assert_g": [547, 596, 613], "assert_l": [547, 596, 613], "average_with_decorated_sensor": 547, "mtqueue": [548, 566], "devis": 548, "cluster_cxx03": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 704, 705, 706, 708, 709, 711, 714, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cluster_cxx03_data_encapsul": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cluster_cxx03_inheritance_oo": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cluster_cxx_design_pattern": [548, 562, 590, 642, 840], "cluster_linux": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 844, 847, 849, 852, 854, 857, 859, 861, 863, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 991, 992, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1028, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "cluster_linux_bas": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "cluster_linux_basics_shel": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "cluster_linux_basics_intro": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "cluster_linux_toolchain": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "cluster_cxx": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 840], "cluster_cxx_exercis": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 840], "cluster_cxx_exercises_design_pattern": [548, 562, 590, 642, 840], "cxx03_introduct": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_data_encapsulation_c": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_data_encapsulation_ctor_default": [548, 562, 590, 600, 642, 650, 714, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_data_encapsulation_ctor_custom": [548, 562, 590, 593, 596, 600, 642, 650, 714, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_data_encapsulation_classes_object": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 664, 667, 670, 686, 692, 696, 705, 708, 709, 714, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_data_encapsulation_ctor_dtor": [548, 562, 590, 600, 642, 650, 714, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 824, 837, 839, 840], "cxx03_inheritance_oo_destructor": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx03_inheritance_oo_bas": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx03_inheritance_oo_polymorph": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx03_inheritance_oo_virtual_method": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx03_inheritance_oo_interfac": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx03_inheritance_oo_virtual_destructor": [548, 562, 590, 600, 642, 714, 739, 824, 839, 840], "cxx_design_patterns_oo_principl": [548, 840], "cxx_design_patterns_uml": [548, 562, 590, 642, 840], "cxx_design_patterns_singleton": [548, 562, 590, 642, 840], "cxx_design_patterns_interpret": [548, 562, 590, 642, 840], "cxx_design_patterns_sensor_hierarchi": [548, 562, 590, 642, 840], "cxx_design_patterns_heating_screenplai": [548, 840], "cxx_design_patterns_adapt": [548, 562, 590, 642, 840], "cxx_design_patterns_command": [548, 562, 590, 642, 840], "cxx_design_patterns_composit": [548, 562, 590, 642, 840], "cxx_design_patterns_decor": [548, 562, 590, 642, 840], "cxx_design_patterns_proxi": [548, 562, 590, 642, 840], "cxx_design_patterns_abstract_factori": [548, 562, 590, 642, 840], "cxx_exercises_design_patterns_proxy_round": [548, 562, 590, 642, 840], "cxx_design_patterns_observ": [548, 562, 590, 642, 840], "linux_basics_shell_file_dir_create_rm": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_basics_shell_cwd": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_basics_shell_path": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_basics_shell_commandlin": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_basics_intro_process": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_basics_intro_overview": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 979, 985, 997, 998, 999, 1000, 1001, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_toolchain_separate_compil": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 985, 1067, 1070, 1071, 1072, 1073, 1074, 1076], "linux_toolchain_bas": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "linux_toolchain_static_librari": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 985, 1067, 1070, 1073, 1074, 1076], "linux_toolchain_cmake_loc": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 985, 1067, 1076], "cxx_exercises_sensor_interfac": [548, 562, 590, 600, 642, 840], "chrono_liter": [549, 742, 814, 816, 817], "demologg": 549, "demovaluestor": 549, "_store": 549, "namedsensor": 549, "_logger": 549, "_value_stor": 549, "sensora": 549, "sensorb": 549, "sensorc": 549, "200000": [549, 994, 1196], "this_thread": [549, 742, 803, 814, 816], "sleep_for": [549, 742, 803, 814, 816], "12597": 549, "valuestor": 549, "2895": 549, "158243": 549, "cassert": [549, 690, 732, 735, 737, 743, 816], "boss": 549, "v3": 549, "abort": [549, 568, 569, 652, 780, 1007], "mocklogg": 549, "lines_log": 549, "mockvaluestor": 549, "sensorreader_suit": 549, "141320": 549, "memcheck": [549, 652, 801], "detector": [549, 652, 801], "myobserv": 551, "socialdb_observ": [551, 579], "newcitizenobserv": [551, 579], "new_citizen": 551, "_new_citizen_svnr": 551, "new_citizen_ad": [551, 579], "observer_suit": 551, "register_on": 551, "register_new_citizen_notif": [551, 579], "register_mani": 551, "observer1": 551, "observer2": 551, "register_dupl": 551, "observeralreadyregist": [551, 579], "unregister_new_citizen_notif": [551, 579], "unregister_not_regist": 551, "observernotregist": [551, 579], "addict": [552, 927, 948, 1217, 1225], "bertrand": 552, "barbara": 552, "polish": 552, "be_sick": 555, "insur": [555, 568, 569, 570, 582, 583, 584], "teardown": [555, 602, 1087, 1225, 1235, 1237], "purest": 556, "lightest": 556, "pidcontrol": 556, "cluster_cxx_exercises_design_patterns_solut": [562, 590, 642, 840], "cxx_exercises_design_patterns_observ": [562, 590, 642, 840], "cxx_exercises_design_patterns_interpreter_and_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_interpreter_bas": [562, 590, 642, 840], "cxx_exercises_design_patterns_command": [562, 590, 642, 840], "cxx_exercises_design_patterns_decor": [562, 590, 642, 840], "cxx_exercises_design_patterns_abstract_factori": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_inflex": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_flexible_strict": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_flex": [562, 590, 642, 840], "cxx_exercises_design_patterns_proxy_remot": [562, 590, 642, 840], "cxx_exercises_design_patterns_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_composit": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_proxy_remot": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_decor": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_interpreter_bas": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_abstract_factori": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_inflex": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_composit": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_observ": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_proxy_round": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_command": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_flex": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [562, 590, 642, 840], "cla": 563, "roundingsensor": [563, 567, 581], "r1": [563, 663, 755], "r2": [563, 663, 755], "r3": 563, "sensorvalueexpress": [563, 577], "e1_e2": 563, "e1_e2_e3": 563, "num_measur": 563, "v_avg": 563, "v_ass": 563, "combinatin": 564, "interpreter_suit": 564, "e_lh": 564, "e_rh": 564, "e_add": 564, "e_sub": 564, "mul": 564, "e_mul": 564, "e_div": 564, "arithemet": 564, "combined_arith": 564, "l7": 564, "a_7_plus_3": 564, "s_3_minus_1": 564, "variable_not_set": 564, "analogi": [564, 588, 995, 1059, 1100], "assignment_valu": 564, "variable_assign": 564, "ass": 564, "variable_used_as_express": 564, "ass_v1": 564, "ass_v2": 564, "reachabl": [566, 801, 993, 995], "remoteadapt": [566, 580], "response_promis": 566, "_adapt": 566, "_queue": [566, 814], "_thread": 566, "fulfil": [566, 601], "proxy_remote_suit": 566, "_c": 566, "remotesensoradapt": [566, 580], "remotesensor": [566, 580], "remote_sensor__is_a__sensor": 566, "somth": 566, "fullfil": 567, "proxy_round_suit": 567, "round_down": 567, "round_up": 567, "rouding_sensor__is_a__sensor": 567, "advis": [568, 1187], "hypothet": [568, 600, 601, 651, 986], "fee": 568, "socialinsur": [568, 569, 570, 584], "oegk": [568, 569], "startup": [568, 569, 570, 582, 919, 1059, 1065, 1082, 1098], "set_inst": [568, 569, 582], "socinsur": [569, 583], "inisur": 569, "reimplement": [569, 738], "compiabl": [569, 583], "iface_inst": [569, 583], "svs_instanc": [569, 583], "oegk_inst": [569, 583], "another_inst": [569, 570, 583, 584], "1485": [569, 570], "sozialversicherung": [570, 584], "unrealist": 570, "adapte": 572, "_adapte": 572, "_svnr": 573, "_firstnam": [573, 702, 1110], "_lastnam": [573, 702, 1110], "_error": 573, "_result": 573, "_command": 573, "get_if": [573, 829], "decoratedconstantsensor": 575, "sstream": [575, 580, 661, 663], "iomanip": 575, "ostringstream": [575, 580, 660, 661, 662, 663], "decoratedrandomsensor": 575, "_variabl": 578, "_lh": 578, "_rh": 578, "_context": 578, "_var": 578, "_exp": 578, "stdexcept": [578, 580, 582, 583, 584, 602, 838], "_new_citizen_observ": 579, "num_eras": 579, "_server": 580, "cstdio": 580, "num_item": 580, "cmath": [581, 646, 654, 662, 749, 765, 766, 767, 768, 805], "_instanc": [582, 583, 584], "_databas": [582, 583, 584], "0l": [582, 583], "cstdlib": [583, 602], "ssocinsur": 583, "millidegre": 585, "parameteriz": [586, 1193], "loop_and_measur": 586, "niter": 586, "stod": [588, 721], "uniform_real_distribut": [588, 596, 800], "default_random_engin": [588, 596, 800], "random_devic": [588, 596, 800], "_distribut": [588, 800], "_engin": [588, 800, 1213], "_y": [588, 646, 647, 649, 651, 653, 654, 655, 657, 659, 669, 684, 749, 764, 766, 767, 768], "spit": [588, 1199], "cluster_cxx_exercises_stl": [590, 607, 609, 642, 840], "cluster_cxx_exercises_stl_sensor_repositori": [590, 607, 609, 642, 840], "cluster_cxx_exercises_fh_sensor_first_tri": [590, 642, 840], "cluster_linux_basics_permiss": [590, 642, 815, 839, 840, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "cluster_linux_sysprog": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1028, 1042, 1045, 1048, 1050], "cluster_linux_sysprog_bas": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "cluster_linux_sysprog_fileio": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "cluster_cxx03_templ": [590, 607, 609, 642, 670, 686, 692, 696, 705, 708, 709, 727, 734, 735, 736, 737, 738, 739, 840], "cluster_cxx03_functions_and_method": [590, 642, 664, 723, 724, 727, 728, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cluster_cxx03_stl": [590, 607, 609, 642, 686, 692, 696, 704, 705, 706, 708, 709, 727, 734, 735, 736, 737, 738, 739, 840], "cluster_cxx03_stl_associative_contain": [590, 607, 609, 642, 696, 705, 709, 739, 840], "cluster_cxx03_stl_algorithm": [590, 607, 642, 686, 705, 708, 709, 739, 840], "cluster_cxx03_except": [590, 607, 609, 642, 667, 670, 686, 692, 696, 705, 708, 709, 724, 725, 727, 734, 735, 736, 737, 738, 739, 840], "cxx_exercises_sensor_const_nopoli": [590, 594, 596, 642, 840], "cxx_exercises_sensor_mock_nopoli": [590, 591, 592, 593, 595, 642, 840], "cxx_exercises_oo_shap": [590, 642, 840], "cxx03_functions_and_methods_method": [590, 642, 664, 727, 728, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cxx03_functions_and_methods_stat": [590, 642, 664, 739, 840], "cxx03_functions_and_methods_oper": [590, 642, 664, 739, 840], "cxx_exercises_sensor_w1_factori": [590, 642, 840], "cxx_exercises_sensor_w1": [590, 642, 840], "cxx_exercises_sensor_random_nopoli": [590, 596, 642, 840], "cxx03_data_encapsulation_initializer_list": [590, 593, 596, 642, 650, 739, 840], "linux_sysprog_fileio_exercise_w1_sensor": [590, 642, 840, 985, 1024, 1026, 1045], "cxx_exercises_hysteresis_nopoli": [590, 592, 642, 840], "cxx_exercises_switch_mock_nopoli": [590, 591, 592, 597, 642, 840], "cxx_exercises_sensor_avg_nopoli": [590, 593, 642, 840], "cxx_exercises_display_led_stripe_nopoli": [590, 591, 642, 840], "cxx_exercises_stl_filter_odd": [590, 607, 642, 840], "cxx_exercises_stl_filter_gener": [590, 607, 642, 840], "cxx_exercises_stl_vector": [590, 607, 642, 840], "cxx03_stl_vector_copy_etc": [590, 607, 642, 705, 709, 739, 840], "cxx_exercises_stl_filter_greater_10": [590, 607, 642, 840], "cxx_exercises_stl_map": [590, 607, 609, 642, 840], "cxx03_stl_associative_containers_map": [590, 607, 609, 642, 696, 705, 709, 739, 840], "cxx_exercises_stl_algo": [590, 607, 642, 840], "cxx03_stl_algorithm_copi": [590, 607, 642, 686, 705, 709, 739, 840], "cxx03_stl_algorithm_find": [590, 607, 642, 686, 705, 709, 739, 840], "cxx_exercises_stl_uniq": [590, 607, 642, 840], "cxx_exercises_stl_sensor_repository_insert_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_remove_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_memory_leak": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_remove_not_found": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_lookup_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_lookup_not_found": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_size_const": [590, 607, 609, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [590, 642, 840], "linux_basics_shell_special_path": [590, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_basics_shell_l": [590, 642, 815, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_basics_permissions_bas": [590, 642, 815, 839, 840, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_sysprog_basics_groupnod": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_sysprog_basics_syscal": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_sysprog_basics_errorhandl": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1008, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "linux_sysprog_fileio_bas": [590, 642, 815, 839, 840, 917, 920, 921, 922, 985, 1014, 1016, 1024, 1026, 1042, 1045, 1048, 1050], "cxx03_templates_class_templ": [590, 607, 609, 642, 670, 686, 692, 696, 705, 708, 709, 727, 734, 735, 736, 737, 738, 739, 840], "cxx03_templates_function_templ": [590, 607, 609, 642, 670, 686, 692, 696, 705, 708, 709, 727, 734, 735, 736, 737, 738, 739, 840], "cxx03_exceptions_try_catch": [590, 607, 609, 642, 667, 670, 686, 692, 696, 705, 708, 709, 724, 725, 727, 734, 735, 736, 737, 738, 739, 840], "cxx03_functions_and_methods_overload": [590, 642, 664, 723, 724, 727, 728, 730, 731, 732, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cxx03_functions_and_methods_refer": [590, 642, 664, 727, 730, 731, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cxx03_functions_and_methods_thi": [590, 642, 664, 727, 730, 731, 734, 735, 736, 737, 738, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cxx03_stl_basic": [590, 607, 609, 642, 686, 692, 696, 705, 708, 709, 727, 734, 735, 736, 737, 738, 739, 840], "cxx03_stl_associative_containers_bas": [590, 607, 609, 642, 696, 705, 709, 739, 840], "cxx03_exceptions_bas": [590, 607, 609, 642, 667, 670, 686, 692, 696, 705, 708, 709, 724, 725, 727, 734, 735, 736, 737, 738, 739, 840], "mockswitch_nopoli": [591, 592, 597], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 591, "nopoli": [591, 592, 593, 594, 595, 596, 597], "display_led_stripe_nopoly_suit": 591, "somewhere_in_the_middl": 591, "sw0": 591, "sw1": 591, "sw2": 591, "sw3": 591, "sw4": 591, "sw5": 591, "sw6": 591, "sw7": 591, "display_led_stripe_nopoly_suite__below_rang": 591, "below_rang": 591, "display_led_stripe_nopoly_suite__above_rang": 591, "above_rang": 591, "display_led_stripe_nopoly_suite__mov": 591, "movement": [591, 986], "display_led_stripe_nopoly_suite__vari": 591, "variation_2_switch": 591, "variation_interval_not_from_0": 591, "sensor_avg_nopoly_suit": 593, "sensor_const_nopoly_suit": 594, "sensor_mock_nopoly_suit": 595, "sensor_random_suit": [596, 600, 601], "uniformli": 596, "rd": 596, "obtain": [596, 813, 1140], "rng": 596, "tailor": 596, "switch_mock_suit": 597, "initial_st": [597, 1236], "set_on_off": 597, "initial_failur": 598, "failit": 598, "point_suit": [598, 661], "ctor_and_gett": 598, "ctor_and_getters_const": 598, "default_ctor": [598, 660, 661, 662, 663, 818, 819], "equal_method": 598, "p3": 598, "p4": [598, 948], "assert_fals": [598, 603, 608, 610, 615, 644, 660, 661, 662, 663, 818, 838], "equal_method_const": 598, "operator_equ": 598, "operator_equals_const": 598, "move_method": 598, "operator_plus_equ": 598, "add_method": 598, "new_p": 598, "add_method_const": 598, "operator_plu": [598, 660, 661, 662], "operator_plus_const": 598, "radiu": 598, "circle_suit": 598, "ctor_and_getters_using_operator_equ": 598, "14159": 598, "53981634": 598, "area_const": 598, "square_suit": 598, "bottom_left": [598, 663], "side_length": 598, "shape_suit": 598, "circle_is_a_shap": 598, "square_is_a_shap": 598, "area_is_shape_functionality__circl": 598, "area_is_shape_functionality__squar": 598, "human": [599, 601, 806, 948, 970, 1065, 1111, 1198], "ineffici": [599, 721, 904, 1025], "epath": 599, "bag_copy_suit": [599, 834], "find_by_int_ok": [599, 834, 835, 836], "find_by_int_nok": [599, 834, 835, 836], "remove_by_int_ok": [599, 834, 835, 836], "bag_unique_suit": [599, 836], "bag_shared_suit": [599, 835], "insert_const_ref": [599, 835], "insert_mov": [599, 835], "tyo": 600, "sensor_const_suit": [600, 601], "is_a_sensor": [600, 601], "5731": 600, "aptli": 601, "23062": 601, "w1sensorfactori": 601, "find_by_address": 601, "sensor_w1_factory_suit": 601, "tmpdir_fixtur": 601, "device_dir": 601, "create_directori": 601, "ofstream": [601, 838], "42459": 601, "temp_milli": [601, 602], "w1_fs_root": 601, "sensor_factori": 601, "0x02131d959eaa": 601, "assert_n": [601, 637, 659, 660, 796, 818, 819, 835, 836], "horizon": 601, "0x012345678901": 601, "w1_sensor_suit": [601, 602], "test_read_sensor": [601, 602], "36700": 601, "basedir": 601, "0x2131d959eaa": 601, "dcmake_toolchain_fil": [602, 1066, 1081], "20687": 602, "write_temperatur": 602, "thaht": 602, "filename_pattern": 602, "xxxxxx": 602, "mkstemp": 602, "unlink": [602, 1057, 1059], "to_str": 602, "off_t": [602, 1015, 1025, 1030, 1058], "lseek": [602, 1025, 1030, 1058], "seek_set": [602, 1015, 1030, 1058], "nwritten": [602, 1019, 1020, 1021, 1022, 1027, 1030, 1058, 1062], "algo": [603, 636, 637, 671, 672], "copy_into_vector": 603, "stl_exercises_suit": [603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619], "required_cont": 603, "find_in_vector": 603, "my_vec": [603, 619], "wladimir": 603, "sort_in_plac": 603, "required_output": [603, 604, 605, 606, 618], "orig_input": [603, 604, 605, 606, 618], "alement": 604, "is_odd": 604, "filter_greater_10": 605, "filter_odd": 606, "map_insert": 608, "my_map": [608, 697, 698, 699, 700, 701], "map_insert_simpl": 608, "insert_check_dupl": 608, "map_insert_check_dupl": 608, "insert_remove_by_kei": 608, "map_insert_remove_by_kei": 608, "map_remove_by_kei": 608, "map_find": 608, "sensorrepositori": [609, 610, 611, 612, 613, 614, 615, 616, 617], "decript": 609, "sensor_repository_insert_dupl": 610, "ofen": [610, 611, 612, 613, 615, 616], "weltraum": [610, 611, 612, 613, 615, 616], "mond": [610, 615], "sucess": 610, "sensor_repository_insert": 611, "sensor_repository_lookup_neg": 612, "get_sensor": [612, 613, 616], "sensor_repository_lookup_posit": 613, "complaint": 614, "ish": 614, "sensor_repository_remove_nonexist": 615, "remove_sensor": [615, 616], "sensor_repository_remov": 616, "sensor_repository_size_const": 617, "vector_append": 619, "vector_join": 619, "joined_cont": 619, "userdb_map": 620, "userdb_vector": 620, "dan": 620, "sak": 620, "cppcon": [620, 747, 749, 750, 763, 770, 788, 799, 821, 824], "transcrib": 620, "mallocfre": 625, "arrayofinteg": 625, "memoryleak": 625, "arrayboundswrit": 625, "newdelet": 625, "singleinteg": 625, "deletemismatch": 625, "thing1": [627, 628], "thing2": [627, 628], "global_str": 628, "__have_thing_h__": 628, "_content": 628, "denstruct": 628, "destruct": [628, 649, 718, 750, 800, 930], "essenc": [628, 1231], "collaps": 631, "thoroughli": [631, 993], "_mem": [634, 780], "determinist": [634, 799, 813, 1087, 1138], "maybeown": 634, "publicli": 634, "pointerarithmet": 637, "bugp": 637, "105ff": 637, "num_el": 637, "another_arrai": 637, "yet_another_arrai": 637, "108ff": 637, "basics_cxx03": 637, "basics_cxx11": 637, "cbegin": [637, 689, 708, 746, 757], "my_copi": 637, "naivecopi": 637, "cend": [637, 689, 708, 746], "algocopi": 637, "backinsert": 637, "back_insert_iter": [637, 677], "nah": [637, 1233], "insertfind": 637, "make_pair": [637, 699, 702, 791], "erasebyposit": 637, "erasebykei": 637, "cxx_templates_vs_interfac": [642, 840], "cxx_global_initi": [642, 840], "cxx_class_templ": [642, 840], "cxx_inheritance_virtu": [642, 840], "cxx_ownership_raii": [642, 840], "cxx_dynamic_memori": [642, 840], "cxx_stl_container_intro": [642, 840], "domin": 643, "1985": 643, "2003": [643, 1241], "point_c_suit": [644, 646], "struct_initi": 644, "point_init_default": 644, "c_default_constructor_init": 644, "point_create_default": 644, "c_default_constructor_cr": 644, "point_creat": [644, 646], "c_constructor": [644, 646], "eq": [644, 659, 661, 663], "point_equ": 644, "point_not_equ": 644, "eq_n": 644, "point_mov": [644, 646, 654, 655], "point_add": 644, "point_sub": 644, "add_sub": 644, "point_dist": 644, "point_ab": [644, 646], "hyp": [644, 646], "unwant": [644, 694, 791, 865, 1089, 1110, 1134], "cpp_copy_suit": 645, "generated_copy_ctor": 645, "copy1": [645, 801], "copy2": [645, 801], "copy3": 645, "manual_copy_suit": 645, "copy_ctor": [645, 800], "assignment_oper": 645, "point_h": 646, "point_cpp_suit": 646, "constructor_coordin": 646, "inaccessibil": 646, "move_op_pluseq": 646, "whenev": [647, 663, 750], "sth": 648, "dirty_stack": 648, "use_uniniti": 648, "nw": 649, "memberwis": 649, "_c_str": [649, 652, 753], "cxx03_data_encapsulation_object_copi": [650, 739, 751, 782, 798, 807, 815, 837, 839, 840], "cxx03_data_encapsulation_copy_bas": [650, 739, 840], "string_h": [652, 753], "cstring": [652, 753, 754, 787], "tcach": [652, 780], "221601": 652, "julian": [652, 801], "seward": [652, 801], "libvex": [652, 801], "realloc": [652, 694], "0x484465b": 652, "1103": 652, "0x401210": 652, "0x401194": 652, "0x4dc8c80": 652, "0x401188": 652, "0x484222f": 652, "0x4011c5": 652, "0x40116f": 652, "freed": [652, 846, 1018, 1087], "destroi": [652, 713, 736, 755, 772, 787, 802, 813, 877], "221807": 652, "twostr": 652, "twotwostr": 652, "s21": 652, "s22": 652, "segfault": [652, 901, 1031, 1063], "paraamet": 653, "__pretty_function__": 653, "0000000000401176": 653, "_z1fi": 653, "00000000004011a0": 653, "_z1fpc": 653, "demangl": 653, "anywher": [654, 1085], "fpermiss": [654, 792], "accessor": 654, "heisenberg": 654, "nameless": 654, "fab": 654, "arrog": 654, "goodi": [654, 987], "pascal": 656, "uninitil": 656, "pass_by_copi": 656, "references_suit": 656, "tediou": [656, 1012, 1067, 1142], "pass_by_point": 656, "pass_by_refer": 656, "pass_by_const_point": 656, "const_point": 656, "pass_by_const_refer": 656, "const_refer": 656, "accident": [656, 789, 871, 914, 915, 955, 1020, 1131], "pass_by_copy_expens": 656, "copy_expens": 656, "pass_by_const_reference_cheap": 656, "const_reference_cheap": 656, "addend": [657, 785, 805], "straightforwardli": [657, 1148], "add_point": 657, "static_suit": 657, "global_funct": 657, "static_method": 657, "bss": 658, "definition1": 658, "definition2": 658, "forbid": 658, "trickeri": 658, "points_equ": 659, "oddli": 659, "operators_suit": 659, "equals_glob": 659, "difficulti": 659, "equals_object": 659, "vector_addition_glob": 659, "vector_addition_object": 659, "point_plus_equ": 659, "combo": [660, 662, 1068], "cuboid_suit": 660, "front_bottom_left": 660, "point_whl_ctor": 660, "operator_eq_n": [660, 661, 662, 663], "operator_pluseq": [660, 661, 662], "operator_minuseq": [660, 662], "operator_minu": [660, 662], "operator_ostream": [660, 661, 662, 663], "buf": [660, 661, 662, 663, 1007, 1015, 1025], "entirei": [660, 662, 663], "starting_point": 661, "implementation_in_cpp_fil": 661, "rectangle_suit": [661, 663], "pluseq": 661, "operator_unary_minu": [661, 662], "minus_p": [661, 662], "point3d_suit": 662, "coordinates_ctor": 662, "071067812": 662, "69041576": 662, "top_right": 663, "top_left": 663, "bottom_right": 663, "rational": [663, 697], "operator_plus_equal_vec": 663, "plus_vec": 663, "cxx03_functions_and_methods_exercise_class_cuboid": [664, 739, 840], "cxx03_functions_and_methods_exercise_class_point3d": [664, 739, 840], "cxx03_functions_and_methods_exercise_class_point": [664, 739, 840], "cxx03_functions_and_methods_static_member_vari": [664, 739, 840], "cxx03_functions_and_methods_exercise_class_rectangl": [664, 739, 840], "dothat": [665, 666], "dothi": [665, 666], "dothos": [665, 666], "dammit": [665, 666, 746], "thisexcept": 666, "thatexcept": 666, "thrown": [666, 725, 1062], "myexcept": 666, "error_detect": 666, "granular": [666, 858, 1049], "typenam": [668, 669, 752, 759, 760, 761, 762, 764, 766, 767, 768, 773, 794, 800, 804, 814, 816], "a_begin": [672, 674], "a_end": [672, 674], "src_begin": [672, 676], "src_end": [672, 676], "dst_begin": [672, 676], "zeroth": 673, "warrai": 675, "unflex": 677, "shrink_to_fit": 677, "prealloc": [677, 678], "wnonnul": 678, "gool": [679, 747], "cplusplu": [681, 682, 683, 684, 685, 687, 688, 689, 690, 693, 702], "int_arrai": [681, 683, 687, 690], "binarili": 681, "is_el": 681, "original_begin": 682, "original_end": 682, "copy_run": 682, "original_run": 682, "int_array_c": 683, "match_666": 684, "match_42": 684, "x_equals_666": 684, "x_equals_4": 684, "x_equal": 684, "_criterion": 684, "yesno": [684, 914, 915], "output_stern": 685, "output_bindestrich": 685, "output_with_prefix": 685, "_prefix": 685, "cxx03_stl_algorithm_binary_search": [686, 705, 709, 739, 840], "cxx03_stl_algorithm_sort": [686, 705, 709, 739, 840], "cxx03_stl_algorithm_find_if": [686, 705, 709, 739, 840], "cxx03_stl_algorithm_reverse_copi": [686, 705, 708, 709, 739, 840], "cxx03_stl_algorithm_revers": [686, 705, 708, 709, 739, 840], "cxx03_stl_algorithm_lower_bound": [686, 705, 709, 739, 840], "cxx03_stl_algorithm_for_each": [686, 705, 709, 739, 840], "reversed_": [689, 708], "less_revers": 690, "greater_than": 690, "cluster_cxx03_stl_sequential_contain": [692, 705, 709, 739, 840], "cxx03_stl_sequential_containers_vector": [692, 705, 709, 739, 840], "cxx03_stl_sequential_containers_bas": [692, 705, 709, 739, 840], "cxx03_stl_sequential_containers_list": [692, 705, 709, 739, 840], "liek": 694, "logarithm": 694, "mein_int_arrai": 694, "insert_po": 694, "new_elems_as_vector": 694, "elems_to_insert": 694, "cxx03_stl_associative_containers_multimap": [696, 705, 709, 739, 840], "realiz": [697, 1138], "keytyp": [697, 742], "valuetyp": [697, 742], "some_map": 697, "key_typ": [697, 698], "mapped_typ": [697, 698], "value_typ": [697, 698], "emplac": 697, "collis": 697, "zweiundvierzig": 697, "out_of_rang": [697, 701], "mymap": [698, 699, 700, 701], "sechshundersechsundsechzig": 698, "kv": 698, "pre11": [698, 699], "einundfuenfzig": [698, 699, 700, 701], "vierundfuenfzig": [698, 699, 700, 701], "dreihundertsechsundvierzig": [698, 699, 700, 701], "tausendein": [698, 699, 700, 701], "tausendzwei": [698, 699, 700, 701], "retval_7": 699, "retval_2": 699, "n_remov": 700, "found_value_1001": 701, "found_value_666": 701, "found_valu": 701, "joerg_svnr": 702, "caro_svnr": 702, "johanna_svnr": 702, "philipp_svnr": 702, "datenzwilling_von_joerg": 702, "faschingzwil": 702, "meine_map": 702, "datenzwil": 702, "equal_rang": 702, "found_rang": 702, "svnr_notexist": 702, "1234567": 702, "memory_resourc": 703, "cluster_cxx03_stl_alloc": [704, 705, 709, 739, 840], "cxx03_stl_allocator_bas": [704, 705, 709, 739, 840], "cluster_cxx03_stl_exercis": [705, 706, 708, 709, 739, 840], "cluster_cxx03_stl_exercises_reverse_str": [705, 706, 708, 709, 739, 840], "cxx03_stl_exercises_reverse_string_solut": [705, 708, 709, 739, 840], "cxx03_stl_exercises_reverse_string_exercis": [705, 706, 708, 709, 739, 840], "auto_ptr": [710, 750, 1241], "cluster_cxx03_dynamic_memori": [711, 739, 840], "cxx03_dynamic_memory_todo": [711, 739, 840], "inher": [712, 713, 716, 718, 719, 1051, 1140], "novirtu": [712, 713, 719], "mantra": [713, 912], "spoiler": [713, 1098, 1251], "cxx03_inheritance_oo_private_protect": [714, 739, 840], "derived1": 716, "derived2": 716, "countless": 716, "derived3": 716, "unimpl": [716, 1102], "polymorp": [718, 823], "strictli": [718, 994, 1098], "cluster_cxx03_standard_library_miscellanea": [720, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 840], "cxx03_standard_library_miscellanea_str": [720, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 840], "string_suit": 721, "another_hello": 721, "greeting1": 721, "greeting2": 721, "aaron": 721, "adam": 721, "stoi": [721, 725, 1027, 1030], "stol": 721, "stoll": 721, "stoul": 721, "stoull": 721, "stof": 721, "stold": 721, "namesapc": 721, "convert_to_signed_integ": 721, "numstr": 721, "convert_to_unsigned_integ": 721, "invalid_argu": 721, "convert_to_number_error": 721, "convert_from_someth": 721, "basic_str": [721, 804, 838], "i_str": 721, "ui_str": 721, "666000": 721, "sprintf": [721, 1027, 1030, 1062, 1063], "print_char": 722, "cluster_cxx03_exercises_misc": [722, 723, 724, 725, 726, 739, 840], "cxx03_exercises_misc_american_flag": [722, 724, 739, 840], "cxx03_exercises_misc_fh_moodle_quiz": [723, 724, 739, 840], "cxx03_exercises_misc_sum_integers_from_stdin": [724, 726, 739, 840], "cxx03_exercises_misc_passwd_pars": [724, 725, 739, 840], "parse_passwd_lin": 725, "homedir": 725, "line_invalid": 725, "passwd_user_suit": 725, "object_construction_and_member_access": 725, "passwd_error_suit": 725, "parse_passwd_line__fak": 725, "fake": [725, 993], "throwing_and_catch": 725, "getpwent": 725, "ctrl": [726, 1063, 1116], "cluster_cxx03_exercises_userdb": [727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_user_access_method": [727, 728, 730, 731, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_user_simple_method": [727, 728, 730, 731, 732, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_userdb_search_find_if": [727, 735, 736, 739, 840], "cxx03_exercises_userdb_userdb_search": [727, 735, 736, 737, 739, 840], "cxx03_exercises_userdb_user_const_memb": [727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_user_ctor": [727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_user_default_ctor": [727, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_user_const": [727, 730, 731, 734, 735, 736, 737, 738, 739, 840], "cxx03_exercises_userdb_userdb_search_notfound_except": [727, 736, 739, 840], "cxx03_exercises_userdb_userdb_insert": [727, 734, 735, 736, 737, 739, 840], "cxx03_exercises_userdb_userdb_vector_bas": [727, 734, 735, 736, 737, 738, 739, 840], "architecton": 729, "celebr": 732, "trittsich": [732, 733], "age_by_n_year": 732, "user_init": 733, "userdb_insert": 734, "doesnotexist": [735, 737], "isvalid": [735, 736, 737], "unnatur": 736, "_user": [736, 889], "thereaft": 736, "wrinkl": 736, "usernotfound": 736, "unreach": [736, 1004], "userdb_search_by_lastnam": 737, "undetect": 737, "userdb_init": 738, "cluster_cxx11": [740, 744, 751, 758, 769, 782, 783, 793, 798, 807, 815, 820, 824, 837, 839, 840], "cluster_cxx11_introduct": [740, 744, 782, 837, 839, 840], "cxx11_introduction_histori": [740, 744, 782, 837, 839, 840], "cxx11_introduction_overview_livehack": [740, 839, 840], "ugliest": 741, "todo_list": 742, "tdl": 742, "desc": 742, "030": [742, 752, 802, 1057, 1058, 1061, 1062], "050": [742, 1061, 1062], "key_value_pair": 742, "070": 742, "080": 742, "up_1_to_10": 742, "down_1000_to_980": 742, "todo_item": 742, "make_shar": [742, 803, 835], "todolist": 742, "nocopi": 742, "add_item": 742, "_list": 742, "evangelist": 742, "surround": [743, 784, 796], "wchar_t": 743, "cluster_cxx11_new_language_featur": [744, 751, 758, 769, 782, 783, 793, 798, 807, 815, 837, 839, 840], "cluster_cxx11_new_language_features_brace_initi": [744, 782, 837, 839, 840], "cxx11_new_language_features_auto": [744, 782, 837, 839, 840], "cxx11_new_language_features_strongly_typed_enum": [744, 782, 837, 839, 840], "cxx11_new_language_features_brace_initialization_implementor_view": [744, 782, 839, 840], "cxx11_new_language_features_brace_initialization_mess": [744, 782, 839, 840], "cxx11_new_language_features_brace_initialization_intro": [744, 782, 837, 839, 840], "pointcloud": [745, 747], "_point": 745, "data_": [746, 748], "memoriz": 746, "brace_initialization_suit": 747, "explicit_ctor_cal": 747, "initlist_ctor_cal": 747, "explicit_ctor": 747, "initlist_ctor": 747, "disabigu": 747, "nightmar": [747, 750, 1083], "size_": 748, "constexpr_suit": 749, "basic_const_is_constexpr": 749, "constexpr_function_request": 749, "constexpr_function_not_request": 749, "constexpr_recursive_funct": 749, "6765": 749, "constexpr_ctor": 749, "schurr": 749, "olsen": [750, 799], "nicolai": [750, 792, 795], "josutti": [750, 792, 795], "smartptr": [751, 782, 800, 801, 839, 840], "cluster_cxx11_new_language_features_move_pf": [751, 782, 798, 807, 815, 837, 839, 840], "cluster_cxx11_smart_point": [751, 782, 798, 807, 815, 837, 839, 840], "cxx11_perfect_forward": [751, 782, 839, 840], "cxx11_new_language_features_move_pf_overview": [751, 782, 798, 807, 815, 837, 839, 840], "cxx11_new_language_features_miscellan": [751, 782, 798, 807, 815, 837, 839, 840], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [751, 782, 839, 840], "cxx11_new_language_features_move_pf_livehack_string_mov": [751, 782, 839, 840], "cxx11_new_language_features_move_pf_afterword": [751, 782, 839, 840], "cxx11_smart_pointers_unique_ptr": [751, 782, 798, 807, 815, 837, 839, 840], "cxx11_smart_pointers_introduct": [751, 782, 798, 807, 815, 837, 839, 840], "_p": [752, 800], "handwritten_suit": [752, 800], "explicit_mov": [752, 800], "assert_double_eq": [752, 800, 801], "create_constant_sensor": [752, 802], "prove": [752, 927], "return_by_copi": 752, "another_sensor": 752, "assigne": 752, "dubiou": 752, "bugfre": 753, "string_move_suit": 753, "make_a_string_from": 753, "ret_": 753, "move_return": 753, "move_assign": 753, "assig": 753, "person_h": 754, "person_suit": 754, "contructor": 754, "outliv": [755, 1085], "rvr": 755, "ado": [757, 1034, 1200], "mytyp": 757, "spellabl": 757, "0x7ffcd604846c": 757, "0x7ffcd6048468": 757, "iref": 757, "0x7ffffefe2b54": 757, "0x7ffffefe2b50": 757, "0x7ffc59ebd7bc": 757, "ciref": 757, "0x7ffc23e46284": 757, "0x7ffe4a148064": 757, "0x7ffc528e013c": 757, "cluster_cxx11_new_language_features_concept": [758, 782, 839, 840], "cxx11_new_language_features_concepts_writing_concept": [758, 782, 839, 840], "cxx11_new_language_features_concepts_intro": [758, 782, 839, 840], "cxx11_new_language_features_concepts_link": [758, 782, 839, 840], "conceptless": 759, "4ul": [759, 760], "4l": [759, 760], "satisfact": 759, "is_integral_v": 759, "_tp": [759, 792, 802], "hendrik": 763, "niemey": 763, "hypotenus": [764, 765, 766, 767, 768], "sumsq": [764, 765, 766, 767, 768], "point2d": [764, 766, 767, 768], "dozen": 764, "ruin": 764, "5l": 764, "same_a": 764, "commone_reference_with": 764, "common_reference_with": [764, 768], "has_siz": [767, 768], "index_returns_doubl": 768, "cluster_cxx11_new_language_features_coroutin": [769, 782, 839, 840], "cxx11_new_language_features_coroutines_intro": [769, 782, 839, 840], "stackless": 770, "asio": 770, "co_return": [770, 774, 775, 776, 777, 778], "hello_inst": [770, 774, 775, 776, 777, 778], "promise_typ": [770, 772, 773, 775, 776, 777, 778], "get_return_object": [770, 772, 773, 775, 776, 777, 778], "suspend_alwai": [770, 772, 773, 775, 776, 777, 778], "initial_suspend": [770, 772, 773, 775, 776, 777, 778], "final_suspend": [770, 772, 773, 775, 776, 777, 778], "return_void": [770, 773, 775, 776, 777, 778], "unhandled_except": [770, 772, 773, 775, 776, 777, 778], "suspend_nev": [770, 772, 773, 777], "coroutine_handl": [770, 772, 773, 776, 777, 778], "from_promis": [770, 772, 773, 776, 777, 778], "_coro": [770, 772], "yield_valu": [770, 772, 773, 776, 777, 778], "sentinel": [770, 773, 777, 778, 792], "_promis": [770, 773, 776, 777, 778], "deciph": 770, "diagrammat": 770, "wei": 770, "co_yield": [771, 772, 773, 774, 776, 777, 778], "_elem": 772, "ed": [773, 776, 777, 778, 978, 1015], "lackingdefaultconstructor": 779, "ldc": 779, "hasdefaultconstructor": 779, "hmpf": 779, "hdc": 779, "ownsmemori": 780, "om_copi": 780, "incontin": 781, "leaf": [781, 967], "method1": 781, "method2": 781, "cluster_cxx11_new_language_features_rang": [782, 793, 839, 840], "cluster_cxx11_new_language_features_lambda": [782, 783, 839, 840], "cxx11_new_language_features_overrid": [782, 839, 840], "cxx11_new_language_features_structured_bind": [782, 839, 840], "cxx11_new_language_features_default": [782, 839, 840], "cxx11_new_language_features_range_based_for_map": [782, 839, 840], "cxx11_new_language_features_range_based_for": [782, 837, 839, 840], "cxx11_new_language_features_fin": [782, 839, 840], "cxx11_new_language_features_modul": [782, 839, 840], "cxx11_new_language_features_delet": [782, 839, 840], "cxx11_new_language_features_constexpr": [782, 839, 840], "cxx11_new_language_features_delegating_ctor": [782, 839, 840], "cxx11_new_language_features_livehack_smartptr_mov": [782, 839, 840], "cxx11_smart_pointers_introduction_livehack": [782, 798, 839, 840], "cxx11_new_language_features_ranges_link": [782, 793, 839, 840], "cxx11_new_language_features_ranges_good_bad": [782, 793, 839, 840], "cxx11_new_language_features_ranges_intro": [782, 793, 839, 840], "cxx11_new_language_features_lambda_lambda_is_functor": [782, 783, 839, 840], "cxx11_new_language_features_lambda_lambda": [782, 783, 839, 840], "cxx11_new_language_features_lambda_lambda_captur": [782, 783, 839, 840], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [782, 783, 839, 840], "elsewher": [784, 887, 1092], "lamda": 784, "print_messag": [784, 786, 787], "constantli": [785, 904, 1050], "mere": 785, "catur": 785, "akin": 785, "lambda_capture_suit": 785, "explicit_by_copi": 785, "lambda_capure_suit": 785, "explicit_by_refer": 785, "dubio": 785, "explicit_mix": 785, "initialized_captur": 785, "all_by_refer": 785, "all_by_copi": 785, "all_by_copy_except": 785, "this_captur": 785, "_i": [785, 805], "add_to_yourself_and_guarantee_programmers_job_secur": 785, "print_message_func": [786, 787], "_messag": [786, 787], "piti": 787, "mpp": 788, "precompil": [788, 887, 1065], "speedup": 788, "rei": 788, "bori": 788, "kolpackov": 788, "abandon": [788, 1031], "inde": 790, "range_based_for_suit": 791, "map_pre_11": 791, "map_bas": 791, "map_basic_const_auto_refer": 791, "ific": [791, 796], "map_unpack_copi": 791, "map_unpack_refer": 791, "map_unpack_const_refer": 791, "min_el": 792, "forward_rang": [792, 794], "drop_view": 792, "filter_view": 792, "ref_view": 792, "ranges_util": 792, "view_interfac": 792, "_deriv": 792, "sized_sentinel_for": 792, "decltyp": 792, "__cust": 792, "declval": 792, "__cust_access": 792, "__begin": 792, "_s_size": 792, "_m_deriv": 792, "forward_iter": 792, "coll": 792, "__cxx11": [792, 804, 838], "_vp": 792, "__simple_view": 792, "random_access_rang": [792, 794], "sized_rang": 792, "comitte": [792, 795], "lazili": 794, "first_two_drop": 794, "first_two_dropped_next_two_taken": 794, "oldstyl": 794, "inspir": 794, "refin": 794, "input_rang": 794, "bidirectional_rang": 794, "contiguous_rang": 794, "tristan": 795, "brindl": 795, "cppnorth": 795, "l0bhzp6hmdm": 795, "nico": 795, "accu": 795, "rust": [795, 1065], "parrai": 796, "decompos": 796, "structured_binding_suit": 796, "struct_copi": 796, "struct_refer": 796, "struct_const_refer": 796, "tuple_copi": 796, "make_tupl": 796, "tuple_refer": 796, "tuple_const_refer": 796, "array_copi": 796, "array_refer": 796, "array_const_refer": 796, "suspici": 796, "designwis": 797, "uptr": 797, "cxx11_smart_pointers_weak_ptr": [798, 837, 839, 840], "cxx11_smart_pointers_shared_ptr": [798, 807, 815, 837, 839, 840], "cxx11_smart_pointers_closing_word": [798, 807, 815, 839, 840], "myclass": [799, 801], "unwind": 799, "yoky6hzlkx": 799, "steal": [800, 1051], "cxx11_unique_ptr_sensors_h": 800, "_temp": 800, "basic_const": 800, "raw_": 800, "raw_s_ref": 800, "copy_ctor_bad": 800, "assignment_operator_bad": 800, "gtest_filt": [800, 801, 1231], "reveal": [800, 1085], "vtabl": 800, "autoptr": 800, "copy_ctor_good_autoptr_styl": 800, "unexpectedli": 800, "assignment_operator_good_autoptr_styl": 800, "destiat": 800, "excus": 801, "shared_ptr_suit": 801, "rs1": [801, 802], "rs2": [801, 802], "rand1": [801, 802, 803], "rand2": [801, 802, 803], "cann": 801, "basic_make_shar": 801, "set_refer": 801, "_ref": 801, "cyclic_refer": 801, "303549": 801, "unique_ptr_suit": 802, "threw": 802, "ownership_error": 802, "cxx11": [802, 838], "unique_ptr_suite_ownership_error_test": 802, "testbodi": 802, "_dp": 802, "default_delet": 802, "verbose_ctor": 802, "make_unique_auto": 802, "tranfer": 802, "create_random_sensor": 802, "implicit_ownership_transf": 802, "holdsasensor": 802, "taking_ownership_in_own_cod": 802, "sompil": 802, "raw1": 802, "tie": 803, "unti": 803, "weak_ptr_suit": 803, "borrowed_sensor": 803, "another_refer": 803, "sensor_ref": 803, "measurement_thread": 803, "rvref": 804, "lo_funct": 804, "adventur": 804, "grimm": 804, "jaud": 804, "factset": 804, "570f242261f8": 804, "distance_origin": 805, "origin_dist": 805, "criteria": [805, 932, 1220], "predic": 805, "void_funct": 805, "bind_suit": 805, "plain_void_funct": 805, "one_parameter_funct": 805, "plain_one_parameter_funct": 805, "minus_hardcod": 805, "_1_minus_2": 805, "minus_swap_paramet": 805, "second_minus_first": 805, "_2": [805, 806], "minus_hardcode_first_paramet": 805, "_42_minus_param": 805, "funcfunc": 805, "tradeoff": [805, 892], "oneimplement": 806, "anotherimplement": 806, "do_much_work": 806, "c_using_on": 806, "c_using_anoth": 806, "explanatori": 806, "trampolin": 806, "rtti": 806, "pod": 806, "metaphys": 806, "ostreamlogg": 806, "databaselogg": 806, "logfunc_t": 806, "funcptrlogg": 806, "somebusinessclasswithneedforlog": 806, "successfulli": [806, 907, 923, 1219, 1226], "do_stupid_log": 806, "ostream_logg": 806, "database_logg": 806, "funcptr_logg": 806, "busy_logging_to_ostream": 806, "busy_logging_to_databas": 806, "busy_logging_to_funcptr": 806, "foo_func": 806, "explos": 806, "cluster_cxx11_functions_funct": [807, 815, 839, 840], "cxx11_functions_functions_funct": [807, 815, 839, 840], "cxx11_functions_functions_bind": [807, 815, 839, 840], "msdn": 808, "devil": 808, "singlethread": 808, "god": 808, "paralleliz": 809, "interlockedincr": 811, "mutual": [812, 1100], "try_lock": 812, "try_lock_for": 812, "try_lock_until": 812, "time_point": [812, 817], "do_something_errorpron": 813, "do_more_of_it": 813, "wake": [814, 869, 879, 1012, 1038, 1047, 1053], "waiter": [814, 879, 904, 1038], "stop_wait": 814, "wait_for": [814, 816], "wait_until": [814, 816], "notify_on": 814, "notify_al": 814, "thunder": 814, "herd": 814, "condvar": 814, "threadsafequeu": 814, "maxelem": 814, "_maxelem": 814, "dur": [814, 816], "scoped_lock": [814, 816], "_lock": [814, 816], "pop_front": 814, "2m": [814, 816, 986], "1m": [814, 912, 986], "consumer1": 814, "consumer2": 814, "pthread_cond_init": [814, 1038], "_not_empti": 814, "_not_ful": 814, "pthread_cond_wait": [814, 1038], "pthread_cond_sign": [814, 1038], "pthread_cond_t": [814, 1038], "unique_lock": 814, "cluster_linux_sysprog_posix_thread": [815, 839, 840, 985, 1026, 1042, 1048], "cluster_linux_sysprog_schedul": [815, 839, 840, 985, 1026, 1042, 1048, 1050], "cluster_linux_sysprog_blocking_io": [815, 839, 840, 917, 920, 921, 922, 985, 1014, 1026, 1042, 1048, 1050], "cluster_cxx11_multithread": [815, 839, 840], "linux_sysprog_posix_threads_exercise_mutex": [815, 839, 840, 985, 1026, 1042], "linux_sysprog_posix_threads_mutex": [815, 839, 840, 985, 1026, 1042, 1048], "linux_sysprog_posix_threads_lifecycl": [815, 839, 840, 985, 1026, 1042, 1048], "linux_sysprog_posix_threads_bas": [815, 839, 840, 985, 1026, 1042, 1048], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [815, 839, 840, 985, 1026, 1042, 1048], "linux_sysprog_posix_threads_condition_vari": [815, 839, 840, 985, 1026, 1042], "linux_sysprog_scheduling_bas": [815, 839, 840, 985, 1026, 1042, 1048, 1050], "linux_sysprog_blocking_io_blocking_io": [815, 839, 840, 917, 920, 921, 922, 985, 1014, 1026, 1042, 1048, 1050], "cxx11_multithreading_mutex": [815, 839, 840], "cxx11_multithreading_race_condit": [815, 839, 840], "cxx11_multithreading_scoped_lock": [815, 839, 840], "cxx11_multithreading_condition_vari": [815, 839, 840], "cxx11_multithreading_promise_futur": [815, 839, 840], "cxx11_multithreading_thread": [815, 839, 840], "cxx11_multithreading_introduct": [815, 839, 840], "cxx11_multithreading_atom": [815, 839, 840], "cxx11_multithreading_chrono": [815, 839, 840], "get_futur": 816, "set_except": 816, "exception_ptr": 816, "shared_futur": 816, "uncoordin": 816, "ten_million_years_": 816, "answer_poll_interval_m": 816, "answer_valid": 816, "chew_answ": 816, "timespec": [816, 1038, 1049, 1059], "reaction": [816, 1004, 1089], "answer_computation_tim": 816, "answer_poll_interv": 816, "ten_million_year": 816, "lockguard": 816, "_answer_valid": 816, "_answer": 816, "_data": [816, 1080], "binary_semaphor": 816, "__cplusplu": 816, "202001l": 816, "_notifi": 816, "answer_promis": 816, "answer_futur": 816, "make_exception_ptr": 816, "epoch": [817, 1058], "time_t": 817, "notion": 817, "system_clock": 817, "monoton": [817, 895, 897], "ntp": 817, "steady_clock": 817, "timepoint": 817, "steadili": 817, "high_resolution_clock": 817, "brand": 817, "spent_milli": 817, "duration_cast": 817, "any_suit": 818, "typeid": 818, "a2": 818, "bad_cast": 818, "bad_any_cast": 818, "pointer_cast": 818, "reference_cast": 818, "charp": [818, 819], "char_ptr_car": 818, "cmp": 818, "variant_suit": 819, "holds_altern": 819, "converting_ctor": 819, "bad_access": 819, "int_seen": 819, "float_seen": 819, "string_charp": 819, "no_default_ctor": 819, "20240913": 819, "cluster_cxx11_miscellan": [820, 824, 839, 840], "cxx11_miscellaneous_vari": [820, 824, 839, 840], "cxx11_miscellaneous_ani": [820, 839, 840], "timur": 821, "doumler": 821, "aligned_alloc": 822, "alignof": 822, "pmr": 822, "heis": [822, 826], "_temperatur": [823, 825, 827, 829], "klau": 824, "iglberg": 824, "steve": 824, "bush": 824, "bielak": 824, "gopel": 824, "cluster_cxx11_embedded_problem": [824, 839, 840], "cxx11_embedded_problems_variant_automatic_visit": [824, 839, 840], "cxx11_embedded_problems_variant_manual_visit": [824, 839, 840], "cxx11_embedded_problems_related_no_virtu": [824, 839, 840], "cxx11_embedded_problems_classic_virtu": [824, 839, 840], "cxx11_embedded_problems_variant_manual_if": [824, 839, 840], "cxx11_embedded_problems_unrel": [824, 839, 840], "cxx11_embedded_problems_virtual_vs_nonvirtu": [824, 839, 840], "static_cast": [825, 838], "derivedtyp": 825, "sensorptr": 827, "get_temperature_visitor": [828, 830], "sourcecopy": 831, "_resourc": 831, "movabl": 831, "sourcemov": 831, "sinkcopy": 831, "sinkmov": 831, "_sourc": 831, "_sink": 831, "concretesourc": 831, "_manyfold": 831, "sourcea": 831, "sourceb": 831, "concretesink": 831, "sink1": 831, "sink2": 831, "bagcopi": 834, "find_by_int": [834, 835, 836], "remove_by_int": [834, 835, 836], "nremov": [834, 835, 836], "bagshar": 835, "weakref": 835, "sharedref": 835, "baguniqu": 836, "constbag": 836, "cluster_cxx11_exercis": [837, 839, 840], "cxx11_exercises_bag_uniqu": [837, 839, 840], "cxx11_exercises_bag_copi": [837, 839, 840], "cxx11_exercises_bag_shar": [837, 839, 840], "withing": 838, "filesystem_suit": 838, "cd_to_tmpdir_fixtur": 838, "path_compose_compar": 838, "path_compose_compare_2": 838, "is_rel": 838, "path_abs_rel": 838, "abspath": 838, "relpath": 838, "remove_filenam": 838, "replace_filenam": 838, "replace_extens": 838, "path_component_access": 838, "dir_part": 838, "path_iter": 838, "current_directori": 838, "cwd_chdir": 838, "current_path": 838, "create_directory_error": 838, "filesystem_error": 838, "char_trait": 838, "char_typ": 838, "_chart": 838, "_trait": 838, "_alloc": 838, "_s_copi": 838, "size_typ": 838, "_m_replac": 838, "tcc": 838, "2171": 838, "canonicalizeforstdlibvers": 838, "__builtin_memcpi": 838, "9223372036854775810": 838, "9223372036854775813": 838, "__s1": 838, "__s2": 838, "create_directory_singl": 838, "is_regular_fil": 838, "create_directory_multipl": 838, "is_block_fil": 838, "is_character_fil": 838, "is_empti": 838, "is_fifo": 838, "is_oth": 838, "is_socket": 838, "is_symlink": 838, "greatest": 838, "2691": [838, 944], "nov": [838, 877, 944, 970, 993, 1080, 1116, 1146], "inod": [838, 846, 853], "919153": 838, "0644": [838, 933, 947, 1065], "system_u": 838, "object_r": 838, "passwd_file_t": 838, "s0": 838, "111282886": 838, "0100": 838, "737858445": 838, "743858359": 838, "file_s": 838, "hard_link_count": 838, "last_write_tim": 838, "ext4": [838, 887], "btrf": 838, "ntf": 838, "directory_iter": 838, "dirit": 838, "recursive_directory_iter": 838, "cxx11_filesystem": [839, 840], "cluster_linux_toolchain_cross": [840, 985, 1069, 1070, 1073, 1075, 1076, 1077], "cluster_linux_toolchain_raspi": [840, 985, 1070, 1073, 1076, 1077], "cluster_linux_toolchain_exercis": [840, 985, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "cluster_linux_sysprog_intro_hw": [840, 985, 1026, 1028], "cluster_linux_sysprog_process": [840, 985, 1026], "cluster_linux_ssh": [840, 985, 997, 998, 999, 1000, 1001, 1076, 1077], "cluster_linux_ssh_exercis": [840, 985, 997, 998, 999, 1000, 1001], "cluster_linux_basics_permissions_exercis": [840, 917, 934, 937, 938, 939, 940, 941, 942, 943, 985], "cluster_linux_basics_shell_exercis": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 985], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 985], "cluster_linux_basics_shell_exercises_l": [840, 917, 962, 963, 964, 965, 966, 968, 985], "cluster_linux_basics_exercis": [840, 914, 915, 916, 917, 985], "cluster_linux_basics_archiving_compress": [840, 910, 917, 985, 1076, 1077], "cluster_linux_basics_io_redir_pip": [840, 917, 929, 985], "cluster_linux_basics_text_tool": [840, 917, 979, 985], "cluster_linux_kernel": [840, 844, 847, 849, 852, 854, 857, 859, 861, 863, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 891, 893, 896, 898, 902, 905, 908, 985], "cluster_linux_hardwar": [840, 985, 991, 992], "cluster_linux_hardware_can": [840, 985, 991, 992], "cluster_unittest": [840, 1229], "linux_toolchain_shared_librari": [840, 985, 1076], "linux_basics_intro_environ": [840, 917, 922, 968, 985, 1026, 1076, 1077], "linux_toolchain_cmake_cross": [840, 985, 1076], "linux_toolchain_cross_bas": [840, 985, 1069, 1070, 1073, 1075, 1076, 1077], "linux_toolchain_raspi_detail": [840, 985, 1076, 1077], "linux_ssh_scp": [840, 985, 997, 998, 999, 1001, 1076, 1077], "linux_ssh_bas": [840, 985, 997, 998, 999, 1000, 1001, 1076, 1077], "linux_basics_archiving_compression_tar": [840, 910, 917, 985, 1076, 1077], "linux_toolchain_raspi_toolchain_setup": [840, 985, 1070, 1073, 1076, 1077], "linux_toolchain_raspi_docker_fedora_wsl": [840, 985, 1076, 1077], "linux_toolchain_raspi_linaro_pi": [840, 985, 1076, 1077], "defunct": [840, 985, 1076, 1077], "linux_toolchain_exercises_fh_moodle_quiz": [840, 985, 1071, 1072, 1073, 1076], "linux_toolchain_exercises_cross_build": [840, 985, 1070, 1073, 1076], "linux_toolchain_exercises_native_build": [840, 985, 1073, 1074, 1076], "linux_toolchain_exercises_raspberry_toolchain": [840, 985, 1073, 1075, 1076], "linux_sysprog_ev": [840, 985, 1026], "linux_sysprog_ipc": [840, 985, 1026], "linux_sysprog_sign": [840, 985, 1026], "linux_sysprog_fileio_example_o_wronli": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_example_o_rdonli": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_dupl": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_example_o_creat": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_basics_exercise_copi": [840, 985, 1016, 1024, 1026, 1045], "linux_sysprog_fileio_basics_exercise_hol": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_misc": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_example_o_excl": [840, 985, 1024, 1026, 1045], "linux_sysprog_fileio_fileio_group": [840, 985, 1024, 1026, 1045], "linux_sysprog_posix_threads_last_warn": [840, 985, 1026, 1042], "linux_sysprog_posix_threads_miscellan": [840, 985, 1026, 1042], "linux_sysprog_posix_threads_exercise_condition_vari": [840, 985, 1026, 1042], "linux_sysprog_posix_threads_mutex_trylock": [840, 985, 1026, 1042], "trylock": [840, 985, 1026, 1036, 1042], "islock": [840, 985, 1026, 1036, 1042], "linux_sysprog_scheduling_exam_quest": [840, 985, 1026, 1048, 1050], "linux_sysprog_scheduling_realtim": [840, 985, 1026, 1048, 1050], "linux_sysprog_scheduling_wakeup_lat": [840, 985, 1026, 1048, 1050], "linux_sysprog_scheduling_processes_and_thread": [840, 985, 1026, 1048, 1050], "linux_sysprog_scheduling_realtime_api": [840, 985, 1026, 1048], "linux_sysprog_blocking_io_blocking_io_fil": [840, 917, 920, 921, 922, 985, 1014, 1026], "linux_sysprog_blocking_io_blocking_io_tim": [840, 985, 1014, 1026], "linux_sysprog_blocking_io_blocking_io_network": [840, 985, 1014, 1026], "linux_sysprog_intro_hw_watch": [840, 985, 1026, 1028], "linux_sysprog_intro_hw_get": [840, 985, 1026, 1028], "linux_sysprog_intro_hw_sysfs_gpio": [840, 985, 1026, 1028], "linux_sysprog_process_commandlin": [840, 985, 1026], "linux_sysprog_process_tre": [840, 985, 1026], "linux_basics_intro_process_tre": [840, 917, 922, 934, 937, 938, 939, 940, 941, 942, 943, 985, 997, 998, 999, 1000, 1001, 1026, 1076, 1077], "linux_ssh_key_pair": [840, 985, 997, 998, 999, 1000, 1001], "linux_basics_intro_login": [840, 917, 922, 934, 937, 938, 939, 940, 941, 942, 943, 985, 997, 998, 999, 1000, 1001, 1076, 1077], "linux_ssh_link": [840, 985, 1001], "linux_ssh_sshf": [840, 985, 1001], "linux_ssh_portforward": [840, 985, 1001], "linux_ssh_exercises_pubkei": [840, 985, 997, 998, 999, 1000, 1001], "linux_ssh_exercises_copy_tre": [840, 985, 998, 999, 1001], "linux_ssh_exercises_copy_fil": [840, 985, 997, 998, 999, 1001], "linux_basics_intro_demo_everything_is_a_fil": [840, 917, 920, 921, 922, 985], "linux_basics_intro_fh_moodle_quiz": [840, 917, 920, 921, 922, 985], "linux_basics_intro_wsl": [840, 917, 922, 985], "linux_basics_permissions_setuid_livedemo": [840, 917, 943, 985], "linux_basics_permissions_setuid": [840, 917, 943, 985], "linux_basics_permissions_fh_moodle_quiz": [840, 917, 935, 943, 985], "linux_basics_permissions_sticki": [840, 917, 943, 985], "linux_basics_permissions_fh_moodle_quiz_nocheat": [840, 917, 936, 943, 985], "linux_basics_permissions_umask": [840, 917, 943, 985], "linux_basics_permissions_exercises_private_directori": [840, 917, 937, 938, 939, 943, 985], "linux_basics_permissions_exercises_credenti": [840, 917, 934, 937, 938, 939, 940, 941, 942, 943, 985], "linux_basics_permissions_exercises_public_directory_quest": [840, 917, 937, 941, 943, 985], "linux_basics_permissions_exercises_public_directori": [840, 917, 937, 940, 941, 943, 985], "linux_basics_permissions_exercises_private_directory_quest": [840, 917, 937, 939, 943, 985], "linux_basics_permissions_exercises_shared_fil": [840, 917, 937, 942, 943, 985], "linux_basics_shell_cp": [840, 914, 915, 916, 917, 952, 953, 955, 956, 959, 960, 962, 968, 985], "linux_basics_shell_fh_moodle_quiz": [840, 917, 961, 968, 985], "linux_basics_shell_mv": [840, 917, 968, 985], "linux_basics_shell_configfil": [840, 917, 968, 985], "linux_basics_shell_link": [840, 917, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [840, 917, 956, 959, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [840, 917, 952, 956, 959, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [840, 917, 952, 956, 959, 960, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 959, 960, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 959, 960, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [840, 917, 952, 955, 956, 959, 960, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [840, 917, 952, 953, 956, 959, 960, 962, 968, 985], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [840, 917, 956, 958, 962, 968, 985], "linux_basics_shell_exercises_ls_etc_passwd_s": [840, 917, 962, 964, 965, 968, 985], "linux_basics_shell_exercises_ls_dev_typ": [840, 917, 962, 963, 965, 968, 985], "linux_basics_shell_exercises_ls_home_permiss": [840, 917, 962, 965, 966, 968, 985], "linux_basics_exercises_fh_ss2022_exam_01_g2": [840, 915, 916, 917, 985], "linux_basics_exercises_fh_ss2022_exam_01_g1": [840, 914, 916, 917, 985], "linux_basics_archiving_compression_overview": [840, 910, 917, 985, 1076, 1077], "linux_basics_archiving_compression_exercis": [840, 910, 917, 985], "linux_basics_archiving_compression_gzip": [840, 910, 917, 985, 1076, 1077], "linux_basics_io_redir_pipes_exercis": [840, 917, 929, 985], "linux_basics_io_redir_pipes_io_redir": [840, 917, 929, 985], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [840, 917, 929, 985], "linux_basics_io_redir_pipes_pip": [840, 917, 929, 985], "linux_basics_text_tools_grep": [840, 917, 979, 985], "linux_basics_text_tools_less": [840, 917, 979, 985], "linux_basics_text_tools_head_tail": [840, 917, 979, 985], "linux_basics_text_tools_cat": [840, 917, 979, 985], "linux_basics_text_tools_overview": [840, 917, 979, 985], "linux_basics_text_tools_find": [840, 917, 979, 985], "linux_basics_text_tools_exercis": [840, 917, 979, 985], "linux_basics_text_tools_cut": [840, 917, 979, 985], "linux_kernel_list": [840, 849, 854, 857, 864, 868, 876, 878, 891, 896, 902, 905, 908, 985], "doubli": [840, 849, 853, 854, 857, 864, 868, 877, 878, 889, 891, 896, 902, 905, 908, 985], "linux_kernel_stub_sysprog_dup": [840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "dup": [840, 846, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 931, 985, 1018, 1059], "linux_kernel_usermem": [840, 864, 902, 905, 985], "linux_kernel_workqueu": [840, 864, 902, 905, 908, 985], "linux_kernel_process_vs_atom": [840, 849, 854, 857, 859, 864, 868, 870, 874, 878, 880, 882, 884, 886, 891, 893, 896, 898, 902, 905, 908, 985], "linux_kernel_timer_cod": [840, 864, 896, 902, 905, 908, 985], "linux_kernel_netdev": [840, 864, 882, 985], "linux_kernel_dma": [840, 859, 864, 882, 884, 985], "linux_kernel_interrupt": [840, 864, 868, 870, 882, 884, 891, 896, 902, 905, 908, 985], "linux_kernel_kmalloc": [840, 849, 854, 857, 859, 864, 868, 878, 882, 884, 891, 896, 902, 905, 908, 985], "linux_kernel_cdev_auto": [840, 844, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_cdev_manu": [840, 844, 847, 849, 852, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_modules_hello_world": [840, 844, 847, 849, 852, 854, 857, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 985], "linux_kernel_waitqueu": [840, 864, 905, 985], "linux_kernel_cdev_file_oper": [840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_spinlock": [840, 864, 891, 893, 896, 902, 905, 908, 985], "linux_kernel_mutex_cod": [840, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_multiple_devic": [840, 854, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_mutex": [840, 864, 868, 878, 880, 891, 896, 902, 905, 908, 985], "linux_kernel_cdev_refactor": [840, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_fedora_module_build": [840, 844, 847, 849, 852, 854, 857, 863, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 985], "linux_kernel_fedora_kernel_build": [840, 844, 847, 849, 852, 854, 857, 861, 863, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 985], "linux_kernel_cdev_first_function": [840, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 985], "linux_kernel_interrupt_cod": [840, 864, 868, 891, 896, 902, 905, 908, 985], "linux_kernel_raspi_kernel_build": [840, 864, 868, 888, 891, 896, 902, 905, 908, 985], "linux_kernel_spinlock_cod": [840, 864, 891, 896, 902, 905, 908, 985], "linux_kernel_tim": [840, 864, 896, 898, 902, 905, 908, 985], "linux_kernel_iomemori": [840, 864, 872, 884, 985], "linux_kernel_pci": [840, 864, 884, 985], "linux_hardware_pwm": [840, 985, 992], "linux_hardware_i2c": [840, 985, 992], "linux_hardware_w1": [840, 985, 992], "linux_hardware_brushless_motor": [840, 985, 992], "brushless": [840, 985, 992], "linux_hardware_can_intro": [840, 985, 991, 992], "linux_hardware_can_interfac": [840, 985, 991, 992], "linux_hardware_can_program": [840, 985, 991, 992], "linux_hardware_can_hardwar": [840, 985, 991, 992], "unittest_gtest_bas": [840, 1229], "unittest_gtest_fixtur": [840, 1229], "unittest_gtest_cmak": [840, 1229], "interconnect": [841, 1252], "device_cr": [842, 843, 846], "cdev_init": [842, 850, 851], "cdev_add": [842, 850, 851], "unhappi": 842, "device_destroi": 842, "my_class": 842, "my_driv": [842, 845, 855, 856, 867, 877, 883, 889, 895, 906], "mknod": [842, 850, 851], "character devic": [843, 846, 851, 1249], "cdev": [843, 844, 846, 850, 851, 856], "devtmpf": [843, 844, 889], "relatim": 843, "register_chrdev_region": [843, 850, 851], "alloc_chrdev_region": [843, 851], "htmldoc": 843, "chrdev": 843, "dev_t": [843, 851], "baseminor": 843, "highlight": 843, "bug_on": 843, "module_licens": [843, 865], "maj": 844, "fop": [844, 851], "openat": [845, 1011, 1065], "at_fdcwd": [845, 1011, 1065], "0x7f3d11330000": 845, "einval": [845, 850, 865, 903, 1065], "enotti": 845, "file_oper": [846, 850, 851, 889], "citizenship": 846, "__user": [846, 901], "loff_t": 846, "unlocked_ioctl": 846, "my_op": 846, "this_modul": 846, "my_open": 846, "my_read": 846, "my_writ": 846, "my_ioctl": [846, 877], "mode_t": [846, 1015, 1019, 1059], "filp": [846, 889, 903], "vf": 846, "swiss": [846, 1015, 1241], "armi": [846, 1015, 1241], "my_ioctl_request": [846, 848], "my_request_such": 846, "my_request_such_and_such": 846, "laden": 846, "endod": 846, "_iow": 846, "_ior": 846, "_ioc": 846, "_ioc_non": 846, "_ioc_read": 846, "_ioc_typecheck": 846, "_ioc_writ": 846, "_iowr": 846, "my_ev": [848, 855, 856, 895, 900], "my_event_typ": 848, "my_event_ioctl": 848, "jiffi": [848, 889, 895], "my_event_list": [848, 855, 856, 877], "list_head": [848, 875, 877, 900], "num_ev": 848, "my_event_list_init": 848, "my_event_list_destroi": 848, "my_event_list_add": [848, 877, 890, 895, 906], "my_ioctl_add_ev": 848, "printk": [848, 865, 867, 906], "unregister_chrdev_region": [850, 851], "caveat": [850, 889, 994], "register_chrdev": 850, "unregister_chrdev": 850, "kern_err": 850, "cdev_del": [850, 851], "my_driver_henkel": 850, "kmem": 851, "opaqu": 851, "majmin": 851, "mkdev": 851, "drivernam": 851, "my_fop": 851, "my_cdev": 851, "devicefil": 851, "ndevic": 853, "module_param": 853, "my_devic": [853, 855, 856, 867, 883, 895], "private_data": [853, 883, 889], "kbuild": [855, 856], "torn": [855, 1236], "ccflag": [855, 856], "container_of": [856, 907], "file3": 856, "distinct": [856, 924, 1009, 1139], "my_device_init": 856, "my_device_destroi": [856, 895], "howto": 858, "everyt": 858, "vmalloc": 858, "ioremap": [858, 871], "iommu": 858, "pysic": 858, "dma_addr_t": 858, "alloc_pag": 858, "gfp_mask": 858, "get_free_pag": 858, "__get_free_pag": 858, "2order": 858, "__get_dma_pag": 858, "zone": 858, "__free_pag": 858, "free_pag": 858, "dma_handl": 858, "cpu_addr": [858, 883], "dma_alloc_coher": 858, "gfp": [858, 873, 899], "dma_free_coher": 858, "pci_dev": [858, 883], "gfp_kernel": [858, 873, 890], "gfp_atom": [858, 873], "dma_bidirect": 858, "dma_to_devic": 858, "dma_from_devic": 858, "dma_map_singl": 858, "dma_mapping_error": 858, "dma_unmap_singl": 858, "dma_map_pag": 858, "dma_unmap_pag": 858, "dma_address": 858, "sglist": 858, "sg_run": 858, "dma_map_sg": 858, "for_each_sg": 858, "hw_address": 858, "sg_dma_address": 858, "hw_len": 858, "sg_dma_len": 858, "dma_unmap_sg": 858, "nent": 858, "unmap": [858, 883], "dma_sync_single_for_cpu": 858, "dma_sync_sg_for_cpu": 858, "mel": [858, 873], "gorman": [858, 873], "incredibli": 858, "transcript": [860, 887, 1262], "building_a_custom_kernel": 860, "fc33": [860, 865], "extravers": [860, 888], "cleanli": 860, "uncommit": 860, "j6": 860, "fedpkg": 860, "pesign": 860, "grubbi": 860, "33rd": 860, "f33": 860, "builddep": 860, "libexec": [860, 1068, 1078], "symver": [862, 865], "modpost": [862, 865], "module_src": 862, "kernel_build": 862, "install_mod_path": [862, 887], "modules_instal": [862, 887, 993], "fedora_kernel_build": 864, "fedora_module_build": 864, "modules_hello_world": 864, "cdev_manu": 864, "process_vs_atom": 864, "stub_sysprog_dup": 864, "cdev_auto": 864, "cdev_file_oper": 864, "cdev_first_function": 864, "cdev_refactor": 864, "multiple_devic": 864, "mutex_cod": 864, "raspi_kernel_build": 864, "interrupt_cod": 864, "spinlock_cod": 864, "timer_cod": 864, "usermem": 864, "iomemori": 864, "waitqueu": [864, 1249], "netdev": 864, "ldd3": [864, 875], "reilli": [864, 978], "probe": [865, 993, 994, 995], "hello_init": 865, "kern_debug": 865, "hello_exit": 865, "module_init": 865, "module_exit": 865, "exot": 865, "lsmod": [865, 993, 994, 995], "insmod": 865, "rmmod": [865, 895], "dep": 865, "softdep": 865, "rebuilt": 865, "cross_compil": [867, 887, 888], "gpio_request": 867, "gpio_fre": 867, "gpio_direction_input": 867, "gpio_direction_output": 867, "gpio_to_irq": 867, "my_device_activate_gpio": 867, "_destroi": 867, "3f200000": 867, "pinctrl": 867, "bcm2835": [867, 990], "request_irq": [867, 869, 883], "free_irq": [867, 869, 883], "priorit": [869, 885, 987, 1047, 1059], "preempt_rt": [869, 879], "mainlin": [869, 887, 1051], "irqreturn_t": [869, 883], "irq_handl": [869, 883], "irq": [869, 883, 885, 889, 1049], "opqu": 869, "irq_non": 869, "irq_wake_thread": 869, "irq_handler_t": 869, "irqf_shar": [869, 883], "irqf_trigger_ris": 869, "irqf_trigger_fal": 869, "irqf_trigger_high": 869, "irqf_trigger_low": 869, "iomem": 871, "ioport": 871, "request_mem_region": 871, "0x20200000": 871, "release_mem_region": 871, "asm": [871, 1081], "iounmap": 871, "ioread8": 871, "ioread16": 871, "ioread32": 871, "iowrite8": 871, "u8": 871, "iowrite16": 871, "u16": 871, "iowrite32": 871, "u32": 871, "kmalloc kfre": 873, "dynamic memori": 873, "slab": 873, "gfp_t": [873, 890, 906], "kzalloc": 873, "kfree": 873, "scarc": 873, "discourag": 873, "stolen": [875, 986], "init_list_head": 875, "some_data": 875, "list_add": 875, "list_add_tail": 875, "new_payload": 875, "existing_payload": 875, "prepend": [875, 887, 919, 1127], "list_for_each": 875, "list_entri": 875, "cursor": [875, 948, 1200], "run_payload": 875, "list_empti": 875, "list_first_entri": 875, "list_del": [875, 877], "a_payload": 875, "opfer": 877, "corrupt": 877, "ffff91285ae68f00": 877, "ffff9128406cec00": 877, "list_debug": 877, "0x70": [877, 994], "0xb0": 877, "0xdd": 877, "ksys_ioctl": 877, "0x82": 877, "0xc0": 877, "__x64_sys_ioctl": 877, "do_syscall_64": 877, "0x4d": 877, "entry_syscall_64_after_hwfram": 877, "0x44": 877, "0xa9": 877, "unprotect": [877, 889, 1110], "nevent": [877, 900], "my_device_list": 877, "preemptibl": [879, 1051], "preemption": [879, 885, 892, 994, 1047, 1050, 1051], "holder": [879, 1108], "mutex_init": 879, "mutex_destroi": 879, "mutex_lock": 879, "mutex_lock_interrupt": 879, "eintr": [879, 1007, 1062, 1063], "mutex_lock_interruptible_nest": 879, "mutex_trylock": 879, "eagain": [879, 889, 903], "mutex_unlock": 879, "trickl": 879, "rtmutex": 879, "rt_mutex": 879, "net_devic": 881, "alloc_netdev": 881, "sizeof_priv": 881, "netdev_priv": 881, "funcion": 881, "ethernet": 881, "etherdevic": 881, "alloc_etherdev": 881, "free_netdev": 881, "register_netdev": 881, "unregister_netdev": 881, "devinc": 881, "hard_start_xmit": 881, "sk_buff": 881, "skb": 881, "transmiss": [881, 1012, 1187], "tx_timeout": 881, "quota": [881, 913], "stead": 881, "do_ioctl": 881, "ifreq": [881, 989], "ifr": [881, 989], "netif_start_queu": 881, "netif_stop_queu": 881, "netif_wake_queu": 881, "udevd": 883, "pci_device_id": 883, "my_id": 883, "pci_devic": 883, "0xdead": 883, "0xbeef": 883, "0xbeee": 883, "module_device_t": 883, "my_prob": 883, "my_remov": 883, "my_suspend": 883, "pm_message_t": 883, "my_resum": 883, "my_shutdown": 883, "pci_driv": 883, "id_tabl": 883, "my_init": 883, "pci_register_driv": 883, "my_exit": [883, 1097], "pci_unregister_driv": 883, "subsystem_vendor": 883, "subsystem_devic": 883, "u64": [883, 897], "dma_mask": 883, "device_count_resourc": 883, "pci_enable_devic": 883, "pdev": 883, "wizardri": 883, "pci_request_region": 883, "pci_set_mast": 883, "pci_clear_mast": 883, "pci_set_dma_mask": 883, "pci_set_drvdata": 883, "ioread": 883, "iowrit": 883, "pci_resource_len": 883, "bar_no": 883, "__iomem": 883, "pci_iomap": 883, "pci_iounmap": 883, "pci_alloc_consist": 883, "os_devic": 883, "_o": 883, "dma_addr": 883, "pci_free_consist": 883, "_size": 883, "_cpu_addr": 883, "t_os_dma_addr__get_n": 883, "_dma_addr": 883, "_os_devic": 883, "dma_bit_mask": 883, "pci_set_consistent_dma_mask": 883, "config_debug_atomic_sleep": [885, 890], "cross compil": 887, "educ": 887, "borrow": 887, "pi2": 887, "1gb": 887, "canon": [887, 1006], "hf": 887, "armv6j": 887, "hardfloat": 887, "gnueabi": 887, "objcopi": 887, "raspberry_pi": 887, "overlai": [887, 993, 994], "local_overlai": 887, "ebuild": 887, "binutil": [887, 888], "repo_nam": 887, "9999": 887, "sourcedir": 887, "builddir": 887, "buildparam": 887, "kconfig": 887, "zconf": 887, "raspbian": 887, "bootdir": 887, "bootf": 887, "kernel7": 887, "Then": [887, 1004, 1207], "assimil": 887, "bcmrpi_defconfig": 887, "bcm2709_defconfig": 887, "config_localvers": 887, "config_ikconfig": 887, "eveytim": 887, "config_can_mcp251x": 887, "config_sensors_lm73": 887, "zimag": [887, 888, 993], "dtb": [887, 888, 993], "j3": 887, "mkknlimg": 887, "te": 887, "superus": 887, "jtf": 887, "bcm2709": 887, "smi": 887, "ft5406": 887, "can1": [887, 988], "v7": [887, 888], "ipv4": [887, 1255], "xfrm4_mode_beet": 887, "inet_lro": 887, "esp4": 887, "xfrm4_mode_transport": 887, "udp_tunnel": 887, "sdb": 887, "57344": 887, "sdb1": 887, "4162560": 887, "sdb2": 887, "enjoi": 887, "ec2aa3d2": 887, "eee7": 887, "454e": 887, "d145df5ddcba": 887, "agnost": 887, "urg": 887, "rasperri": [888, 993, 995, 1247], "patchlevel": 888, "sublevel": 888, "_morph": [889, 899], "my_driver_hello": 889, "my_driver_cdev_manu": 889, "my_driver_cdev_dynamic_major": 889, "my_driver_cdev_file_oper": 889, "my_driver_cdev_first_function": 889, "my_driver_cdev_refactor": 889, "my_driver_multiple_devic": 889, "my_driver_mutex": 889, "my_driver_interrupt": 889, "my_driver_spinlock_atom": 889, "my_driver_time_tim": 889, "my_driver_workqueu": 889, "my_driver_usermem": 889, "copy_": 889, "my_driver_waitqueu": 889, "nonblock": [889, 903, 1059, 1255], "spinlock_t": [890, 892], "isr": [890, 1051, 1249], "spin_unlock": [890, 892], "reenabl": 890, "uniprocessor": 892, "multiprocessor": 892, "spin_lock_init": 892, "spin_lock": 892, "spin_trylock": 892, "irqflag": 892, "spin_lock_irqsav": 892, "spin_unlock_irqrestor": 892, "pend": [895, 925, 1051, 1064], "my_inject_deferred_ev": 895, "my_device_add_deferred_ev": 895, "del_timer_sync": [895, 897], "paranoia": 895, "symmetri": 895, "my_device_add_ev": 895, "my_inject_ev": 895, "tick": 897, "config_hz": 897, "friendli": [897, 1140, 1210, 1214, 1264], "hrtimer": 897, "jiffies_to_msec": 897, "jiffies_to_usec": 897, "jiffies_to_nsec": 897, "msecs_to_jiffi": 897, "usecs_to_jiffi": 897, "timespec64_to_jiffi": 897, "timespec64": 897, "jiffies_to_timespec64": 897, "timer_list": 897, "my_tim": 897, "timerfunc": 897, "timer_setup": 897, "add_tim": 897, "del_tim": 897, "0520": 899, "0521": 899, "0525": 899, "0532": 899, "0710": 899, "preempt": [899, 1047, 1051], "caption": 899, "sidebar": 899, "backlink": 899, "my_event_nod": 900, "my_get_one_ev": [900, 903], "my_device_get_one_ev": 900, "my_event_get_one_ev": 900, "efault": [900, 901], "uaccess": 901, "copy_to_us": 901, "copy_from_us": 901, "enosi": 903, "timerfd": [903, 1013, 1055], "f_flag": 903, "wait_queue_head_t": 904, "wq": [904, 906, 907], "init_waitqueue_head": 904, "sched": 904, "wait_ev": 904, "wait_event_interrupt": 904, "wait_event_timeout": 904, "timeout_jiffi": 904, "wait_event_interruptible_timeout": 904, "wake_up": 904, "wake_up_interrupt": 904, "task_interrupt": 904, "create_workqueu": [906, 907], "destroy_workqueu": [906, 907], "eo": 906, "rtprio": 906, "work_struct": [906, 907], "init_work": [906, 907], "chrt": [906, 1051], "workqueue_struct": 907, "work_func_t": 907, "queue_work": 907, "packen": 909, "gunzip": 911, "zgrep": 911, "zcat": 911, "zless": 911, "intact": [911, 1166, 1170], "viro": 912, "cleaner": 912, "archivformat": 912, "lzma": 912, "430mb": 912, "95mb": 912, "74mb": 912, "5m": [912, 986], "64mb": 912, "togeht": 913, "gfs2": 913, "zcf": 913, "decompress": [913, 1078], "zxf": 913, "ztf": 913, "dirt": 913, "livingroom": 913, "grumbl": 913, "reat": 913, "tract": 913, "ell": [913, 948], "vv": 913, "supplementari": [914, 915, 923, 925], "1021": [914, 915, 923], "somefil": [914, 915, 954], "chgrp": [914, 915, 933, 940, 942], "fellow": [914, 915], "picki": [914, 915, 1102], "ttyusb1": 918, "stick": [918, 923], "2006854": 918, "sdc": 918, "2006823": 918, "deserv": [918, 978, 1041, 1067], "trash": [918, 948], "burn": [918, 995], "1mib": 918, "1mibf": 918, "0m": [918, 970, 1049], "mkf": 918, "entropi": 918, "my_vari": 919, "1034184": 919, "1035812": 919, "ancestor": [919, 926, 1005], "decriptor": [920, 921, 1021], "getti": 923, "kerbero": [923, 925], "agetti": 923, "cleartext": [923, 944], "brute": [923, 1002, 1067], "crack": 923, "attack": [923, 1002, 1083, 1203, 1242], "hierarch": 924, "grand": 924, "ten_integ": 925, "unfair": [925, 1051], "dialout": [925, 1021], "seg": [925, 988], "kbyte": 925, "62715": 925, "819200": 925, "pstree": 926, "modemmanag": 926, "journ": 926, "abrtd": 926, "auditd": 926, "bluetoothd": 926, "cupsd": 926, "lau": 926, "tini": [926, 1065], "enemi": 927, "guidanc": 927, "dicdat": 927, "acknowledg": [927, 986], "fight": 927, "seamless": [927, 1216], "exampk": 927, "altruism": 927, "mkfifo": [928, 932], "stdin_fileno": [930, 1015, 1025, 1063, 1140], "stdout_fileno": [930, 1011, 1012, 1015, 1021, 1031, 1049, 1058, 1062, 1063, 1140], "stderr_fileno": [930, 1015, 1140], "religi": 930, "fed": 930, "filefor": 930, "weekli": 931, "compet": [932, 994], "award": [932, 980], "plumber": 932, "sniff": 932, "fifo": [932, 1015, 1254], "rendezv": 932, "unnam": 932, "chown": [933, 945, 1080], "useradd": [933, 1080], "groupadd": 933, "usermod": 933, "groupmod": 933, "teammember42": 933, "manfromthestreet": 933, "jun": [933, 1067], "triplet": 933, "1003": 933, "110100100": 933, "110000000": 933, "0600": 933, "111101101": 933, "0755": [933, 1065], "bitmask": [933, 944, 1063], "1317": 944, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 944, "0g2rqr9cnydnqq5unt": 944, "wpu8jyzeuxktapl0": 944, "burnout": 944, "retyp": 944, "rwsr": [944, 945], "32712": 944, "rwxrwxrwx": 944, "4755": [944, 945], "uid_t": 945, "getuid": 945, "geteuid": 945, "rwxrwxr": [945, 1011, 1065, 1066, 1067], "24456": 945, "drwxrwxrwt": 946, "0022": 947, "strain": 948, "injuri": 948, "diseas": 948, "outout": 948, "20k": 948, "olevel": 948, "debugopt": 948, "expr1": 948, "expr2": 948, "daystart": 948, "regextyp": 948, "synopsi": 948, "findu": 948, "til": 948, "pression": 948, "print0": 948, "noob": [948, 1261, 1265], "pos1": 948, "misconfigur": 948, "esc": 948, "freak": 948, "gitk": 948, "cvsserver": 948, "gitview": 948, "oesterreich": 948, "clearanc": 948, "e7d76d19": 948, "dd3d": 948, "4d52": 948, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 948, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 948, "gif": [948, 1204], "einkommensteuerbescheid1": 948, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 948, "einkommensteuervorauszahlungsbescheid1": 948, "immobilienbewertung": 948, "etw": 948, "confirm": 948, "ova": 948, "umsatzsteuerbescheid1": [948, 970, 971], "h0020211105124337": 948, "vk9vst311192021_0022021": 948, "img_": 950, "jpg": 950, "bilder": 950, "121751": 951, "garbage1": [952, 953, 955, 959, 960], "garbage2": [952, 953, 955, 959, 960], "diretori": 954, "sweetheart": [954, 960, 967, 1044], "citi": 954, "mqueue": [963, 1058], "leavel": 967, "hintingx": 970, "1048576": 970, "drwx": [970, 973], "36817": 970, "umsatzsteuerbescheid": 971, "finanzamt": 971, "abgab": 971, "neighbor": [972, 1198], "enat": 974, "dereferenzieren": 976, "50k": [976, 977], "rekursiv": 977, "eintr\u00e4g": 977, "gefiltert": 977, "un\u00fcblich": 977, "gebr\u00e4uchlich": 977, "geh\u00f6ren": 977, "mmin": 977, "h\u00f6chsten": 977, "gefundenem": 977, "eintrag": 977, "heissen": 977, "beginnen": 977, "versteht": 977, "vergessen": 977, "j\u00fcnger": 977, "verkn\u00fcpft": 977, "metacharact": [977, 996], "gr\u00f6\u00dfer": 977, "lobal": 978, "egular": 978, "xpression": 978, "rint": 978, "sed": [978, 1245, 1247], "tream": 978, "itor": 978, "verb": 978, "entor": 978, "perlr": 978, "perlretut": 978, "perlrequick": 978, "jeffrei": 978, "friedl": 978, "philosopi": 982, "toether": 982, "hc": 982, "325324": 982, "xarg": 982, "behan": 984, "webster": 984, "drone": 986, "electronic speed control": 986, "vehicl": [986, 1248], "rack": 986, "recognit": [986, 1198], "fritz": [986, 994], "brigh": 986, "heinrich": 986, "polar": 986, "uevent": [986, 993, 994, 995, 1029], "cheapest": 986, "quicrun": 986, "16bl30": 986, "brake": 986, "11v": 986, "conclud": [986, 994], "lipo": 986, "madli": 986, "transmitt": 986, "throttl": 986, "neutral": [986, 1200], "chop": 986, "kindli": [986, 1204], "mechatron": 986, "50hz": 986, "nanosecond": [986, 994, 1013], "20000000": [986, 1100], "oscil": 986, "10bl60": 986, "000n": 986, "1500000": [986, 1053], "2000000": 986, "1550000": 986, "1600000": 986, "1650000": 986, "1700000": 986, "1750000": 986, "1800000": 986, "1850000": 986, "1900000": 986, "1950000": 986, "logist": [986, 1198], "can bu": [987, 988, 989, 990], "sinowatz": [987, 1090], "volkswagen": 987, "traffic": 987, "octet": 987, "arbitr": 987, "can_fram": [987, 989], "canid_t": [987, 989], "can_id": [987, 989], "eff": [987, 989], "rtr": [987, 989], "__u8": [987, 989], "can_dlc": [987, 989], "__attribute__": [987, 989], "can0": [988, 989], "noarp": 988, "qdisc": 988, "qlen": 988, "txqueuelen": 988, "pfifo_fast": 988, "promiscu": 988, "allmulti": 988, "minmtu": 988, "maxmtu": 988, "restart": 988, "tq": 988, "prop": 988, "seg1": 988, "seg2": 988, "sjw": 988, "brp": 988, "gs_usb": 988, "tseg1": 988, "tseg2": 988, "brp_inc": 988, "48000000": 988, "numtxqueu": 988, "numrxqueu": 988, "gso_max_s": 988, "65536": 988, "gso_max_seg": 988, "65535": [988, 993], "tso_max_s": 988, "tso_max_seg": 988, "gro_max_s": 988, "gso_ipv4_max_s": 988, "gro_ipv4_max_s": 988, "parentbu": 988, "parentdev": 988, "relic": 988, "cansend": 988, "candump": 988, "canplay": 988, "cangen": 988, "snif": 988, "loopback": 988, "pf_can": 989, "sockaddr_can": 989, "sock_raw": 989, "can_raw": 989, "ifr_nam": 989, "siocgifindex": 989, "can_famili": 989, "af_can": 989, "can_ifindex": 989, "ifr_ifindex": 989, "sockaddr": [989, 1012], "can_socket": 989, "packt": 989, "frame_layout": 989, "ib3x8": 989, "frame_s": 989, "calcsiz": 989, "recvfrom": 989, "sendto": 989, "lnxpp": 990, "can2udp": 990, "openwrt": 990, "miso": 990, "sclk": 990, "broadcom": 990, "ce0": 990, "3v": [990, 993], "5v": [990, 993], "transceiv": 990, "inter intergrated circuit": 993, "lm-sensor": 993, "handwork": [993, 995], "texa": 993, "maker": 993, "dtparam": [993, 994, 995], "i2c_arm": [993, 994, 995], "gpio2": 993, "gpio3": 993, "i2c_bcm2835": [993, 994, 995], "fe804000": [993, 995, 1029], "i2c_dev": [993, 994], "sot": 993, "7v": 993, "rail": 993, "idc": 993, "gnd": [993, 995], "vdd": 993, "smbdat": 993, "smbclk": 993, "unconnect": 993, "0x49": 993, "0x4a": 993, "jumper": 993, "3v3": [993, 995], "scl": [993, 995], "i2c_slav": 993, "0x0703": 993, "o_rdwr": [993, 1015, 1022, 1058], "msb_lsb": 993, "msb": 993, "lsb": [993, 1066, 1068], "dev_fd": 993, "perror": [993, 1007, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1027, 1030, 1031, 1049, 1055, 1058, 1062], "libncurs": 993, "bcm2711_defconfig": 993, "v7l": 993, "semiconductor": 993, "j4": 993, "kernel7l": 993, "new_devic": [993, 995], "0048": 993, "modalia": 993, "preinstal": 993, "hwmon0": 993, "thermal": 993, "thermal_zone0": 993, "hwmon1": [993, 995], "temp1_max": 993, "temp1_max_alarm": 993, "temp1_min": 993, "temp1_min_alarm": 993, "update_interv": 993, "22000": 993, "randomli": [993, 995], "nomenclatur": 993, "capacitor": 993, "pulse width modul": 994, "resistor": 994, "bright": 994, "potentiomet": 994, "ssop": 994, "0b1000000": 994, "buse": [994, 995], "charactr": 994, "pca": 994, "simultan": [994, 1062], "peculiar": 994, "pca9685a": 994, "nxp": 994, "dtoverlai": [994, 995], "pwm_pca9685": 994, "regmap_i2c": 994, "3f804000": 994, "0040": [994, 1029], "npwm": 994, "unexport": [994, 1029], "butt": [994, 1078], "intercept": [994, 1089], "dim": 994, "fade": 994, "800000": [994, 1196], "600000": [994, 1196], "50000": 994, "apolog": 994, "kenel": 994, "devlop": 994, "pleasur": 994, "unstabl": 995, "parasit": 995, "bitbang": 995, "gpiopin": 995, "profession": 995, "addon": 995, "pinout": 995, "01144fe43baa": 995, "w1_bus_master8": 995, "w1_bus_master1": 995, "amaz": 995, "400000000000": 995, "800000000000": 995, "behalf": [995, 1009, 1065], "ad0": 995, "ad1": 995, "ad2": 995, "vcc": 995, "0x18": 995, "0b0011000": 995, "shortli": [995, 1089], "execstart": 995, "36864": 995, "w1_bus_master2": 995, "w1_bus_master3": 995, "w1_bus_master4": 995, "w1_bus_master5": 995, "w1_bus_master6": 995, "w1_bus_master7": 995, "busno": 995, "abtract": 995, "prepackag": 995, "afford": 995, "alarm": [995, 1061, 1064], "conv_tim": 995, "w1_slave_driv": 995, "eeprom": 995, "ext_pow": 995, "w1_slave": 995, "22750": 995, "crc": 995, "rpi_volt": 995, "isa": 995, "in0": 995, "cpu_therm": 995, "temp1": 995, "w1_slave_temp": 995, "reliabl": 995, "radiou": 995, "disappear": 995, "0c4000000000": 995, "0x28": 995, "dalla": [995, 1023], "02131d9920aa": 995, "5d": 995, "011432f138f9": 995, "misbehavior": 995, "instabl": 995, "pump": 995, "nuclear": 995, "plant": 995, "ssh-keygen": [996, 1002], "password authent": [996, 1002], "key based authent": [996, 1002], "remote login": [996, 1002], "unencrypt": 996, "rlogin": 996, "telnet": 996, "nsa": 996, "primarili": [996, 1092, 1212], "sftp": 996, "portno": 996, "propaget": 996, "sha256sum": 997, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 997, "mitm": 1002, "uncomfort": 1002, "keygen": 1002, "safeguard": 1002, "unrespons": 1003, "port forward": 1004, "portforward": 1004, "secure copi": [1004, 1005], "hmmm": 1004, "whateer": 1004, "mydocu": 1005, "recus": 1005, "mobil": 1005, "bandwidth": 1005, "mediat": 1005, "descriptiotn": 1005, "file system": 1006, "network file system": 1006, "smb": 1006, "crawl": 1006, "debianish": 1006, "mountpoint": 1006, "grant": 1006, "idmap": 1006, "retri": [1007, 1109, 1219], "errnum": 1007, "strerror_r": 1007, "buflen": 1007, "cleanest": 1007, "_r": 1007, "reentrant": 1007, "getaddrinfo": 1009, "ri": 1011, "nbytes_read": [1011, 1012, 1013], "24608": 1011, "1024root": 1011, "nager": 1011, "698nager": 1011, "gatewai": 1012, "peer": [1012, 1015], "netinet": 1012, "af_inet": 1012, "sock_stream": 1012, "sockaddr_in": 1012, "sin_famili": 1012, "sin_port": 1012, "inet_aton": 1012, "sin_addr": 1012, "ipproto_ip": 1012, "sa_famili": 1012, "inet_addr": 1012, "10hallo": 1012, "16thi": 1012, "ong": 1012, "14ong": 1012, "timerfd_settim": 1013, "itimerspec": [1013, 1049], "nasti": [1014, 1049], "ingenu": 1015, "smae": 1015, "o_append": 1015, "o_cloexec": [1015, 1065], "sigpip": [1015, 1063], "whenc": 1015, "seek_cur": 1015, "seek_end": 1015, "occupi": [1015, 1017, 1018], "status": 1016, "srcfile": 1016, "dstfile": 1016, "1073741825": 1017, "0k": 1017, "texttt": 1018, "dup2": 1018, "oldfd": 1018, "newfd": 1018, "o_": 1018, "bytes_to_writ": [1019, 1020, 1022], "wxr": 1019, "o_tmpfil": 1019, "speci": 1019, "pli": 1019, "nread": [1021, 1027, 1030, 1055, 1058, 1062], "certainli": 1021, "thats": [1021, 1022], "misspel": 1022, "24625": 1023, "24562": 1023, "pread": 1025, "pwrite": 1025, "readv": 1025, "writev": 1025, "uio": 1025, "iovec": 1025, "iov": 1025, "iovcnt": 1025, "preadv": 1025, "pwritev": 1025, "ftruncat": [1025, 1058, 1059], "filedescriptor": [1025, 1250, 1252], "gpio26": [1027, 1029, 1030], "subtre": 1029, "fe200000": 1029, "gpiochip488": 1029, "gpiochip504": 1029, "active_low": 1029, "fd_set": [1030, 1055], "exc_fd": 1030, "fd_zero": [1030, 1055], "nreadi": 1030, "fd_isset": [1030, 1055], "eek": 1030, "sysconf": 1031, "mman": [1031, 1058], "fstat": [1031, 1058], "st_size": [1031, 1058, 1065], "prot": 1031, "map_fail": [1031, 1058], "munmap": [1031, 1065], "_sc_page_s": 1031, "0123456789": 1031, "paga": 1031, "workhors": 1032, "intens": 1033, "ppid": 1033, "tid": 1033, "tsd": 1033, "spezif": [1033, 1251], "_reentrant": 1033, "lpthread": [1033, 1049, 1068], "start_routin": 1034, "pthread_exit": 1034, "pthread_cancel": 1034, "pthread_attr_setdetachst": 1034, "detachst": 1034, "pthread_create_detach": 1034, "pthread_detach": 1034, "pthread_self": 1034, "pthread_equ": 1034, "30650": 1034, "13961": 1034, "correl": 1034, "gettid": 1034, "pthread_mutexattr_t": [1036, 1052], "pthread_mutex_destroi": 1036, "pthread_mutex_trylock": 1036, "global_mutex": 1036, "pthread_mutexattr_settyp": 1036, "pthread_mutex_norm": 1036, "pthread_mutex_errorcheck": 1036, "pthread_mutex_recurs": 1036, "pthread_mutex_default": 1036, "pthread_cond_destroi": 1038, "pthread_cond_broadcast": 1038, "parlanc": 1038, "set_autoreset_ev": 1038, "ev": 1038, "is_set": 1038, "wait_autoreset_ev": 1038, "acquiriert": 1038, "autoreset": 1038, "spuriou": 1038, "woken": 1038, "pthread_condattr_t": 1038, "pthread_cond_initi": 1038, "pthread_cond_timedwait": 1038, "abstim": 1038, "use_glob": 1040, "pthread_once_t": 1040, "global_onc": 1040, "pthread_once_init": 1040, "init_glob": 1040, "pthread_onc": 1040, "once_control": 1040, "init_routin": 1040, "pthread_key_cr": 1040, "__thread": 1040, "pthread_atfork": 1041, "legales": 1041, "lock_rac": 1043, "succeed": [1043, 1231], "foreground": [1044, 1098], "huh": 1044, "paradox": 1044, "setenv": 1046, "putenv": 1046, "unsetenv": 1046, "clearenv": 1046, "customvar": 1046, "timesl": 1047, "starv": 1047, "throughput": 1047, "sha1": [1047, 1050, 1066, 1068], "voluntarili": [1047, 1050], "lrt": 1049, "app_statu": 1049, "tick_count": 1049, "update_statu": 1049, "sigact": [1049, 1062, 1063], "sa_handl": [1049, 1062, 1063], "sigrtmin": 1049, "sigev": [1049, 1059], "sev": 1049, "sigev_notifi": 1049, "sigev_sign": 1049, "sigev_signo": 1049, "timer_t": 1049, "tspec": 1049, "nsec": 1049, "timer_settim": 1049, "show_statu": 1049, "freerto": [1049, 1052], "syncron": 1049, "update_status_func": 1049, "initial_t": 1049, "interval_t": 1049, "show_status_func": 1049, "update_task": 1049, "show_task": 1049, "231765": 1049, "225819": 1049, "5635": 1049, "lwp": 1049, "231766": 1049, "231767": 1049, "tracer": 1049, "restart_syscal": 1049, "clock_nanosleep": 1049, "clock_realtim": 1049, "500000000": 1049, "033": 1049, "7m": 1049, "flash_func": 1049, "is_revers": 1049, "flash_task": 1049, "flasher": 1049, "indepen": 1049, "toggl": 1049, "fore": [1049, 1100], "particularli": 1050, "suscept": 1050, "nicer": 1051, "renic": 1051, "din": 1051, "44300": 1051, "echtzeitbetrieb": 1051, "betrieb": 1051, "rechensystem": 1051, "verarbeitung": 1051, "anfallend": 1051, "st\u00e4ndig": 1051, "derart": 1051, "betriebsbereit": 1051, "da\u00df": 1051, "verarbeitungsergebniss": 1051, "vorgegebenen": 1051, "zeitspann": 1051, "000014": 1051, "013914m": 1051, "91410827636698u": 1051, "000002": [1051, 1053], "002382m": 1051, "3820173632900326u": 1051, "intrus": 1051, "controversi": 1051, "sched_oth": 1052, "relinquish": 1052, "sched_param": 1052, "sched_getschedul": 1052, "sched_prior": 1052, "pthread_setschedparam": 1052, "pthread_getschedparam": 1052, "predefini": 1052, "pthread_attr_setschedpolici": 1052, "spoken": 1052, "pthread_mutexattr_setprotocol": 1052, "pthread_prio_inherit": 1052, "pthread_prio_protect": 1052, "risen": 1052, "pthread_mutexattr_setprioceil": 1052, "000105": 1053, "105247m": 1053, "24749755859354u": 1053, "000015": 1053, "014643m": 1053, "64260525619006u": 1053, "105u": 1053, "000067": 1053, "067263m": 1053, "2626495361326u": 1053, "000003": 1053, "002883m": 1053, "8827592917392217u": 1053, "ondemand": 1053, "governor": 1053, "cpufreq": 1053, "scaling_governor": 1053, "cpuinfo_cur_freq": 1053, "067036m": 1053, "03615188598611u": 1053, "000001": 1053, "001257m": 1053, "2571678380193383u": 1053, "000065": 1053, "065188m": 1053, "188407897949u": 1053, "002376m": 1053, "3758434034066656u": 1053, "001042": 1053, "042438m": 1053, "4375534057617u": 1053, "000017": 1053, "017123m": 1053, "123423079175748u": 1053, "000143": 1053, "142646m": 1053, "6458358764593u": 1053, "000005": 1053, "004995m": 1053, "994855006705264u": 1053, "_syse": 1055, "exit_failur": 1055, "consume_fd": 1055, "random_fd": 1055, "tty_fd": 1055, "nfd": 1055, "ttys4": 1055, "in_fd": 1055, "eof_detect": 1055, "shm": [1057, 1058, 1059], "099": 1057, "sem": [1057, 1058, 1059], "shared memori": 1058, "message queu": 1058, "shm_open": [1058, 1059], "tmpf": [1058, 1059], "resiz": 1058, "4095": 1058, "weigh": 1058, "map_shar": 1058, "counter_loc": 1058, "sem_t": [1058, 1059], "sem_open": 1058, "sem_fail": 1058, "sem_wait": 1058, "sem_post": 1058, "mq_attr": [1058, 1059], "mq_maxmsg": [1058, 1059], "mq_msgsize": [1058, 1059], "mqd_t": [1058, 1059], "mq_open": 1058, "mq_send": 1058, "mq_receiv": 1058, "shm_unlink": 1059, "overtak": 1059, "mq_overview": 1059, "oflag": 1059, "mq_flag": 1059, "mqde": 1059, "msg_ptr": 1059, "msg_len": 1059, "msg_prio": 1059, "sevp": 1059, "disturb": [1059, 1062], "elegantli": 1059, "qsize": 1059, "signo": 1059, "notify_pid": 1059, "goiven": 1059, "sem_overview": 1059, "sem_trywait": 1059, "sem_timedwait": 1059, "abs_timeout": 1059, "shm_close": 1059, "shm_overview": 1059, "051": [1061, 1062], "segv": [1062, 1063], "mortem": [1062, 1262], "core_pattern": 1062, "termination_handl": 1062, "sigint": [1062, 1063], "sig_atomic_t": [1062, 1063], "term_act": 1062, "alarm_handl": 1062, "alarm_act": 1062, "sigset_t": [1062, 1064], "termination_sign": 1062, "sigemptyset": [1062, 1063], "sigaddset": [1062, 1063], "sigquit": 1062, "sigprocmask": [1062, 1063], "sig_block": 1062, "impolit": 1062, "sig": [1062, 1063], "consume_pip": 1062, "pipenam": 1062, "puzzl": 1062, "pthread_sigmask": [1062, 1063], "sigtstp": 1063, "sigalrm": [1063, 1064], "sigchld": 1063, "abnorm": 1063, "sigabrt": 1063, "sigsegv": 1063, "sigbu": 1063, "sigil": 1063, "sigfp": 1063, "unblock": 1063, "oldset": 1063, "sigpend": 1063, "sigfillset": 1063, "signum": 1063, "sigdelset": 1063, "sigismemb": 1063, "sigsetop": 1063, "recept": 1063, "sa_mask": 1063, "sa_flag": 1063, "oldact": 1063, "sig_ign": 1063, "sig_dfl": 1063, "sighandler_t": 1063, "_exit": 1063, "barebon": 1064, "louder": 1064, "stallman": 1065, "risc": 1065, "llvm": 1065, "24360": 1065, "hello_h": [1065, 1082, 1084], "24416": 1065, "linkabl": [1065, 1203, 1251], "vdso": [1065, 1083], "0x00007ffc44130000": 1065, "0x00007fdd8ea64000": 1065, "0x00007fdd8ec5c000": 1065, "0x7fffea18b920": 1065, "brk": 1065, "0x67e000": 1065, "arch_prctl": 1065, "0x3001": 1065, "arch_": 1065, "0x7fff6d3dd240": 1065, "r_ok": 1065, "newfstatat": 1065, "st_mode": 1065, "s_ifreg": 1065, "80987": 1065, "at_empty_path": 1065, "0x7f1721afc000": 1065, "177elf": 1065, "pread64": 1065, "2420152": 1065, "0x7f1721afa000": 1065, "1973104": 1065, "map_denywrit": 1065, "0x7f1721918000": 1065, "0x7f172193e000": 1065, "1441792": 1065, "prot_exec": 1065, "map_fix": 1065, "0x26000": 1065, "0x7f1721a9e000": 1065, "319488": 1065, "0x186000": 1065, "0x7f1721aec000": 1065, "24576": 1065, "0x1d3000": 1065, "0x7f1721af2000": 1065, "31600": 1065, "0x7f1721916000": 1065, "arch_set_f": 1065, "0x7f1721afb680": 1065, "set_tid_address": 1065, "0x7f1721afb950": 1065, "471382": 1065, "set_robust_list": 1065, "0x7f1721afb960": 1065, "rseq": 1065, "0x7f1721afbfa0": 1065, "0x53053053": 1065, "0x403000": 1065, "0x7f1721b42000": 1065, "prlimit64": 1065, "rlim_cur": 1065, "rlim_max": 1065, "rlim64_infin": 1065, "s_ifchr": 1065, "0620": 1065, "st_rdev": 1065, "makedev": 1065, "0x88": 1065, "0xb": 1065, "getrandom": 1065, "xcd": 1065, "x7c": 1065, "xc9": 1065, "x3b": 1065, "xd6": 1065, "xf2": 1065, "x44": 1065, "grnd_nonblock": 1065, "0x69f000": 1065, "12hello": 1065, "exit_group": 1065, "0000000000401040": 1065, "_start": 1065, "0000000000401000": 1065, "_init": 1065, "00000000004011b8": 1065, "_fini": 1065, "crt": 1065, "crt1": 1065, "crti": 1065, "crtn": 1065, "0000000000404000": 1065, "_global_offset_table_": 1065, "reloc": 1065, "1762320": 1065, "0000000000401126": 1065, "1224008": 1065, "greetdemo": 1066, "cmake_system_nam": 1066, "toolchain_base_dir": [1066, 1081], "cmake_c_compil": 1066, "cmake_cxx_compil": 1066, "find_xxx": 1066, "cmake_find_root_path_mode_program": 1066, "cmake_find_root_path_mode_librari": 1066, "cmake_find_root_path_mode_includ": 1066, "toolchian": 1066, "cmake_toolchain_fil": 1066, "libgreet": [1066, 1067, 1074, 1083, 1084], "13921": [1066, 1067], "cmake_instal": [1066, 1067], "26192": [1066, 1067], "27920": [1066, 1067], "8503": [1066, 1067], "eabi5": [1066, 1068], "armhf": [1066, 1068], "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1066, "debug_info": [1066, 1068], "armv7l": 1068, "challeng": 1068, "metadistribut": 1068, "rootfilesystem": 1068, "miniumum": 1068, "1697265": 1068, "1078248": 1068, "1260352": 1068, "1256256": 1068, "a5540938c2c36ad2bb371ccfdeaee5e7dbc8d512": 1068, "rasberri": 1070, "clickabout": 1076, "workabl": 1078, "tarbal": 1078, "lastest": 1078, "x86_64_arm": 1078, "precompos": 1078, "uncompress": 1078, "73812": 1078, "1107168": 1078, "1481768": 1078, "1968456": 1078, "1091864": 1078, "1030432": 1078, "1221816": 1078, "lynxbe": 1080, "y3p9kn7mjei": 1080, "cli": 1080, "dockerhub": 1080, "hub": 1080, "sh_18_04": 1080, "78683068": 1080, "1292296": 1080, "70mb": 1081, "73018472": 1081, "auxvec": 1081, "bitsperlong": 1081, "bpf_perf_ev": 1081, "rapidli": 1082, "phoni": [1082, 1083, 1084], "origaniz": 1083, "relink": 1083, "0x2e20": 1083, "0x00007fffe9fa7000": 1083, "0x00007f75ca289000": 1083, "0x00007f75ca46d000": 1083, "r_x86_64_32": 1083, "fpic": 1083, "whom": 1084, "hello_flex": 1084, "hello_flexible_h": 1084, "cq": 1084, "lisp": 1085, "create_f": 1085, "create_print": 1085, "print_blah": 1085, "print_someth": 1085, "sytax": 1086, "shutil": 1087, "tarfil": 1087, "temporarydirectori": 1087, "tmpd": 1087, "tarnam": 1087, "expandvar": 1087, "contrain": 1087, "__enter__": 1087, "__exit__": 1087, "openforread": 1087, "myprint": 1087, "orig_print": 1087, "exc_val": 1087, "exc_tb": 1087, "myarg": 1087, "total_ord": 1088, "a_vari": 1089, "baseexceptiongroup": 1089, "exceptiongroup": 1089, "subtyp": 1089, "maybe_fail": 1089, "lone": 1089, "mysubsystemerror": 1089, "reallybaderror": 1089, "someothererror": 1089, "definitelybad": 1089, "evenwors": 1089, "collapsingtheworld": 1089, "errorcod": 1089, "__cached__": 1090, "_frozen_importlib_extern": 1090, "sourcefileload": 1090, "0x7fb251ff9760": 1090, "blindli": 1090, "ansibl": 1090, "matno": 1090, "conffil": 1090, "confcod": 1090, "confdict": 1090, "2083": 1090, "drawn": 1092, "inputrang": 1092, "disgust": 1092, "gentli": 1092, "smarter": 1092, "nolimit": 1093, "fibo_numb": 1093, "jerki": 1093, "max_numb": 1093, "satisfactori": 1093, "python_1010_generators_yield": 1093, "glossari": 1094, "breadth": 1094, "subnamespac": 1097, "mysupermodul": 1097, "mysuperfunct": 1097, "subpackage1": 1097, "module1": 1097, "module2": 1097, "subpackage2": 1097, "disambigu": 1097, "increment_background": [1098, 1100], "background_integ": 1098, "foreground_integ": 1098, "runn": 1098, "backgroundincrement": 1098, "uncool": 1098, "14784035": 1100, "quack": 1102, "mockup": 1102, "38418489148651": 1102, "285910539365695": 1102, "244516548192095": 1102, "81021870081301": 1102, "22973870196252": 1102, "__next__": 1102, "brokensensor": 1102, "gettemperatur": 1102, "refect": 1103, "emp": 1106, "add_employe": 1106, "mgr": 1106, "isold": [1106, 1107, 1208], "haubentauch": [1106, 1107, 1110, 1208], "parentcl": 1106, "funnili": 1106, "make_child": 1107, "parent1": 1107, "parent2": 1107, "vvv": 1107, "father": 1107, "vvvvvv": 1107, "tabular": 1108, "someclass": 1108, "persons_from_csv": 1108, "person_dict": 1108, "operators object oriented program": 1109, "behaivor": 1109, "number2": 1109, "int2": 1109, "whistl": [1109, 1112], "symmetr": [1109, 1139], "commut": 1109, "summar": 1109, "attrnam": 1110, "meier": 1110, "expicitli": 1111, "0x7f29bf8077a0": 1111, "starstararg": [1112, 1260], "marker": 1115, "eighti": 1115, "monti": 1115, "incompat": [1115, 1121, 1129, 1140], "benevol": 1115, "bdfl": [1115, 1200], "overse": 1115, "januari": 1115, "dropbox": 1115, "awk": 1117, "throughout": [1120, 1248], "0o01234": 1121, "14159265359": [1121, 1135], "3e12": 1121, "\u00e4\u00f6\u00fc": 1121, "xa4": 1121, "xb6": 1121, "xbc": 1121, "xe4": 1121, "compel": 1121, "codebas": 1121, "ancient": 1121, "sequencish": 1125, "sixtim": 1125, "seen_sixey": 1125, "blahblahblahblahblah": 1126, "aah": 1127, "a_list": 1127, "hlow": 1127, "hlowrd": 1127, "heritag": 1129, "140226814923144": 1130, "140226814923176": 1130, "140226814923400": 1130, "140226533196992": 1130, "140226533002112": 1130, "parameterizab": 1132, "program_exit": 1132, "exitstatu": 1132, "spam": [1134, 1198], "dec": 1134, "x58": 1134, "07d": 1135, "0x": 1135, "5x": 1135, "0x2f": 1135, "4x": 1135, "0x002f": 1135, "5o": 1135, "0o31": 1135, "04d": 1135, "0042": 1135, "05d": 1135, "00042": 1135, "thistl": 1136, "thorn": 1136, "annoy": 1136, "sqn": 1137, "defval": 1138, "iterkei": 1138, "keyiter": 1138, "0x7ff2e8753418": 1138, "unord": 1139, "tunabl": 1140, "shoudn": 1140, "0x7fca2c785b70": 1141, "outputfilenam": 1142, "argumentpars": 1142, "add_argu": 1142, "parse_arg": 1142, "ou": 1142, "\u0142ukasz": 1143, "langa": 1143, "pybay2018": 1143, "ylabel": [1145, 1196], "xmin": 1145, "xmax": 1145, "ymin": 1145, "ymax": 1145, "twine": 1146, "lotsa": [1146, 1219], "long_descript": 1146, "long_description_content_typ": 1146, "beta": 1146, "osi": 1146, "approv": 1146, "package_dir": 1146, "python_requir": 1146, "install_requir": 1146, "paho": [1146, 1207], "pyproject": 1146, "toml": 1146, "build_meta": 1146, "yadda": 1146, "sdist": 1146, "bdist_wheel": 1146, "python_course_2022_11_07": 1146, "12549": 1146, "BE": 1146, "mydb": 1147, "hardli": 1148, "femal": 1153, "miracl": [1156, 1173], "previouslin": 1160, "ifi": 1173, "uniqifi": 1174, "sensor_const": 1179, "test_sensor_const": 1179, "ii": [1180, 1182, 1186, 1188, 1199], "user_record": [1181, 1183], "read_csv_head": [1181, 1188], "read_csv_nohead": [1183, 1187, 1188], "csvfilenam": 1185, "test_noheader_person": 1186, "read_noheader_person": 1186, "test_must_not_use_global_variables_as_return_object": 1186, "filename1": 1186, "noheader1": 1186, "filename2": 1186, "noheader2": 1186, "users1": 1186, "users2": 1186, "test_header_person": 1186, "read_header_person": 1186, "test_user_json_person": 1186, "userdb_json": [1186, 1187], "test_person_to_json": 1186, "joerg_sent": 1186, "to_json_person": 1186, "joerg_receiv": 1186, "from_json_person": 1186, "envis": [1187, 1243], "to_json": 1187, "test_user_json": 1187, "test_user_to_json": 1187, "user_s": 1187, "json_user_s": 1187, "from_json": 1187, "test_nohead": 1188, "test_head": 1188, "lectur": [1190, 1253, 1262], "unsupervis": [1193, 1198], "conveyor": 1193, "belt": 1193, "linear_regress": [1194, 1197], "model_select": [1194, 1196], "train_test_split": [1194, 1196], "linear_model": [1194, 1196], "linearregress": [1194, 1196], "history_data": [1194, 1195, 1196, 1197], "inputfeatur": [1194, 1196], "outputfeatur": [1194, 1196], "input_train": [1194, 1196], "input_test": [1194, 1196], "output_train": [1194, 1196], "output_test": [1194, 1196], "test_siz": [1194, 1196], "output_predict": [1194, 1196], "visualcross": 1195, "york": [1195, 1196], "wind": [1195, 1196], "chill": [1195, 1196], "precipit": [1195, 1196], "snow": [1195, 1196], "gust": [1195, 1196], "humid": [1195, 1196], "rain": 1195, "cloudi": 1195, "995833": 1196, "688889": 1196, "287500": 1196, "327273": 1196, "012222": 1196, "690278": 1196, "470769": 1196, "369444": 1196, "513421": 1196, "946106": 1196, "574023": 1196, "313256": 1196, "994536": 1196, "070695": 1196, "025980": 1196, "302423": 1196, "214825": 1196, "665492": 1196, "900000": 1196, "700000": 1196, "090000": 1196, "050000": 1196, "377500": 1196, "750000": 1196, "950000": 1196, "650000": 1196, "330000": 1196, "325000": 1196, "850000": 1196, "425000": 1196, "825000": 1196, "715000": 1196, "470000": 1196, "970000": 1196, "multidimension": 1196, "xlabel": 1196, "coef_": 1196, "80189231": 1196, "intercept_": 1196, "95355086": 1196, "609608": 1196, "571879": 1196, "736988": 1196, "170933": 1196, "798254": 1196, "189739": 1196, "180394": 1196, "449230": 1196, "661530": 1196, "057745": 1196, "850176": 1196, "284120": 1196, "685067": 1196, "weather": [1197, 1198], "splice": [1197, 1198], "cute": 1197, "paper": 1197, "aspir": [1197, 1224], "dilig": 1198, "bite": 1198, "forecast": 1198, "agi": 1198, "asi": 1198, "forest": 1198, "predictor": 1198, "accuraci": 1198, "classif": 1198, "unlabel": 1198, "reinforc": 1198, "reward": 1198, "bay": 1198, "sepp": 1199, "tupleunpack": 1199, "spell": 1199, "redundantli": 1199, "quotechar": 1199, "spreadsheet": 1199, "odbc": 1200, "mysql": 1200, "informix": 1200, "berkeleydb": 1200, "mongodb": 1200, "rollback": 1200, "initd": 1202, "psycopg": 1202, "libpq": 1202, "conninfo": 1202, "psycopg2": 1202, "schwammerldb": 1202, "android": 1203, "schwammerln": 1203, "giftig": 1203, "geniessbar": 1203, "dbm": 1203, "steinpilz": 1203, "roehren": 1203, "speisetaeubl": 1203, "lamellen": 1203, "speitaeubl": 1203, "eierschwammerl": 1203, "teufelsroehrl": 1203, "overcod": 1204, "512119": 1204, "european": 1204, "steroid": 1204, "htmlhelp": 1204, "charset": 1204, "latin1": 1204, "chines": 1204, "enc": 1204, "0xfc": 1204, "0xdf": 1204, "0xf6": 1204, "\u00df": 1204, "cyril": 1204, "received_enc": 1204, "lg_enc": 1204, "bye_enc": 1204, "antp": 1207, "53767": 1207, "tcp6": 1207, "mosquitto_pub": 1207, "easiest": 1207, "message_receiv": 1207, "userdata": 1207, "on_messag": 1207, "loop_forev": 1207, "mosqitto_pub": 1207, "styrian": 1207, "esp": 1207, "666608091972": 1208, "ignore_index": 1208, "new_person": 1208, "saskia": 1208, "456710042003": 1208, "irrevers": 1209, "1153": [1212, 1213], "_locationindex": [1212, 1213], "maybe_cal": [1212, 1213], "apply_if_cal": [1212, 1213], "_getitem_axi": [1212, 1213], "_ilocindex": 1212, "1711": 1212, "1713": 1212, "_validate_integ": 1212, "_ix": 1212, "1647": 1212, "1645": 1212, "len_axi": 1212, "_get_axi": 1212, "rangeindex": 1213, "3791": 1213, "get_loc": 1213, "casted_kei": 1213, "pyx": 1213, "_lib": 1213, "indexengin": 1213, "hashtable_class_help": 1213, "pxi": 1213, "pyobjecthasht": 1213, "get_item": 1213, "1393": 1213, "_locindex": 1213, "1391": 1213, "thru": 1213, "_validate_kei": 1213, "_get_label": 1213, "1343": 1213, "1341": 1213, "axisint": 1213, "5567": 1213, "ndframe": 1213, "drop_level": 1213, "new_index": 1213, "4235": 1213, "4239": 1213, "bool_": 1213, "3793": 1213, "3795": 1213, "3797": 1213, "invalidindexerror": 1213, "3799": 1213, "listlik": 1213, "_check_indexing_error": 1213, "3801": 1213, "3803": 1213, "sort_index": 1213, "multiindex": 1213, "lower_email": 1215, "rentner": 1215, "is_palindrom": 1215, "facto": 1216, "subel": 1216, "attrib": 1216, "getroot": 1216, "witch": 1219, "gnore": 1219, "ackup": 1219, "bort": 1219, "cert": 1219, "pem": 1219, "pythonhost": 1219, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1219, "cp38": 1219, "manylinux2010_x86_64": 1219, "ext": 1219, "argcomplet": 1219, "asn1crypto": 1219, "ensurepip": [1220, 1226], "test_project": 1224, "test_soup": 1224, "test_task": 1224, "stringent": 1224, "discoveri": 1224, "syndrom": [1224, 1225, 1231], "test_person_point": 1224, "deselect": 1224, "tester": [1224, 1248, 1250], "test_": 1224, "test_simpl": 1224, "test_trivi": 1224, "test_trivial_but_fail": 1224, "___________________________": 1224, "____________________________": 1224, "test_stat": 1224, "implementation_point": 1224, "implementor1": 1224, "implementor2": 1224, "documentation_point": 1224, "integration_point": 1224, "implementation_perc": 1224, "documentation_perc": 1224, "integration_perc": 1224, "total_perc": 1224, "total_point": 1224, "gathered_point": 1224, "test_another_task_aspect": 1224, "test_ini_file_pars": 1224, "my_test_fil": 1224, "mytestcas": 1225, "runtest": 1225, "assertequ": 1225, "texttestrunn": 1225, "__db": 1225, "create_databas": 1225, "fill_test_data": 1225, "remove_databas": 1225, "testfeature1": 1225, "testfeature2": 1225, "testsuit": 1225, "addtest": 1225, "testload": 1225, "loadtestsfromtestcas": 1225, "testsometh": 1225, "failif": 1225, "failunless": 1225, "failunlessequ": 1225, "failifequ": 1225, "failunlessalmostequ": 1225, "failunlessrais": 1225, "env_dir": 1226, "my_venv": 1226, "easy_instal": 1226, "pip3": 1226, "powershel": 1226, "joblib": 1226, "threadpoolctl": 1226, "deactiv": 1226, "my_recreated_venv": 1226, "persuad": 1226, "will_fail": [1230, 1233], "initgoogletest": [1231, 1236], "run_all_test": [1231, 1236], "lgtest": [1231, 1233], "onesuit": 1231, "test1": 1231, "test2": 1231, "anothersuit": 1231, "postive_pattern": 1231, "negative_pattern": 1231, "gtest_list_test": 1231, "faildemo": 1231, "failisfat": 1231, "assertdemo": 1231, "assertisfat": 1231, "expect_": 1231, "expectdemo": 1231, "expectisnonfat": 1231, "expect_tru": 1231, "expect_eq": 1231, "0x58": 1231, "0x55": 1231, "assert_": 1232, "repoqueri": 1233, "dpkg": 1233, "listfil": 1233, "joergfaschingbau": 1233, "cmake_compiler_is_gnucc": 1233, "ggdb": 1233, "googlebenchmark": 1233, "predef": [1235, 1236], "predefinedtestenviron": 1236, "paranoidtest": 1236, "untechn": 1236, "thefixtur": 1236, "testthatmodifiesst": 1236, "complexfixtur": 1236, "first_n": 1236, "sometest": 1236, "bibel": 1238, "hinzuf\u00fcgen": 1238, "erfind": 1238, "tickt": 1238, "wozu": 1238, "grenzen": 1238, "vorlag": 1238, "didaktik": 1238, "erg\u00e4nzt": 1238, "kontext": 1238, "heutigen": 1238, "sprachkern": 1238, "unterrichten": 1238, "standardlibrari": 1238, "zugunsten": 1238, "bequemeren": 1238, "verzichten": 1238, "sprachdesign": 1238, "geachtet": 1238, "isoliert": 1238, "abseit": [1238, 1240], "mitbringt": 1238, "h\u00e4lt": 1238, "eignet": 1238, "hervorragend": 1238, "systemprogrammierung": 1238, "weglassen": 1238, "programmiert": [1238, 1240], "dementsprechend": 1238, "sinngem\u00e4ss": 1238, "aufgeteilt": 1238, "manipulieren": 1238, "maschineninstruktionen": 1238, "ausgef\u00fchrt": [1238, 1239], "geschwindigkeitsvorteil": 1238, "interpretierten": 1238, "nachteil": 1238, "verst\u00e4ndni": 1238, "speicherverwaltung": [1238, 1240], "integral": 1238, "zusammengesetzt": 1238, "speicherlayout": 1238, "kontrollkonstrukt": 1238, "wenigst": 1238, "worin": 1238, "programmstrukturierung": 1238, "deklar": 1238, "beliebtest": 1238, "unmeng": 1238, "flexibilit\u00e4t": 1238, "einbringen": 1238, "unbeliebtest": 1238, "fehlerm\u00f6glichkeiten": 1238, "verkettet": 1238, "fehlerszenarien": 1238, "absturz": 1238, "dahinsiechen": 1238, "debugginghilfen": 1238, "typumwandlungen": 1238, "hauptkritikpunkt": 1238, "sorglos": 1238, "integertypen": 1238, "breit": 1238, "nichtsdestotrotz": 1238, "regelwerk": 1238, "historisch": 1238, "aufarbeitung": 1238, "historischem": 1238, "ballast": 1238, "compileroptionen": 1238, "pr\u00e4prozessor": [1238, 1239], "leid": 1238, "grundz\u00fcgen": 1238, "gezeigt": [1238, 1247], "compilierung": 1238, "fortgeschritten": 1238, "heutzutag": 1238, "wegzudenken": 1238, "grund": 1238, "damal": [1238, 1240], "programmen": [1238, 1239], "separat": 1238, "verbinden": 1238, "spielt": 1238, "compilieren": 1238, "archivieren": 1238, "linken": 1238, "programmgesundheit": 1238, "bedeutungen": 1238, "wort": 1238, "optimierungsm\u00f6glichkeiten": 1238, "memoryfehlern": 1238, "verwalten": 1238, "formatiert": 1238, "_und_": 1238, "komfort": 1238, "m\u00e4chtige": 1238, "jedoch": [1238, 1247], "weit": 1238, "fehlerimmunit\u00e4t": 1238, "allein": 1238, "verdienen": 1238, "erw\u00e4hnung": 1238, "stringbearbeitung": 1238, "heutig": 1238, "eigenwillig": 1238, "f\u00fclle": 1238, "erleichtern": 1238, "lauern": 1238, "gefahren": 1238, "sprachumfang": 1239, "angeht": 1239, "compiliert": 1239, "maschinencod": 1239, "pointern": 1239, "sofort": 1239, "beipflichten": 1239, "einmal": [1239, 1259], "beinharten": 1239, "typenkonvertierungen": 1239, "aufgesessen": 1239, "beleuchtet": 1239, "beschrittenen": 1239, "dunklen": 1239, "ecken": 1239, "widmet": 1239, "intensiv": 1239, "fehlersuch": 1239, "versucht": 1239, "erkl\u00e4rungen": 1239, "sprachdefinit": 1239, "greifbar": 1239, "verdacht": 1239, "manch": 1239, "typkonversionen": 1239, "l\u00fccken": 1239, "typensystem": [1239, 1240], "techniken": 1239, "typensicherheit": 1239, "dunkl": 1239, "unn\u00f6tig": 1239, "programmhygien": 1239, "wege": 1239, "sauberen": 1239, "weisen": 1239, "optimierungstechniken": 1239, "anwenden": 1239, "optimierung": 1239, "erschweren": 1239, "lesbarkeit": 1239, "memoryzugriff": 1239, "ur": 1239, "beziehungsweis": 1239, "hardwareunterst\u00fctzung": 1239, "Ins": 1239, "instruktionen": 1239, "kenntniss": [1239, 1240, 1258], "urspr\u00fcnglich": 1240, "erfunden": 1240, "leichter": 1240, "handhabbar": 1240, "neuen": 1240, "erm\u00f6glichen": 1240, "ressourcenverwaltung": 1240, "kontrolliert": 1240, "implementieren": 1240, "mainstream": 1240, "einzug": 1240, "hie\u00df": 1240, "treffend": 1240, "seitdem": 1240, "vereinzelt": 1240, "soviel": 1240, "dampflokomot": 1240, "stellt": 1240, "vielfalt": 1240, "sprachkonstrukt": 1240, "genial": 1240, "gewagt": 1240, "behaupten": 1240, "anbelangt": 1240, "sprachmittel": 1240, "wichtigst": 1240, "n\u00e4mlich": 1240, "reichlich": [1240, 1247], "umstieg": 1240, "erw\u00e4gen": 1240, "embeddedbetriebssystem": 1240, "einsetzen": 1240, "vielerort": 1240, "datenkapselung": 1240, "objekten": 1240, "fallstrick": 1240, "korrektheit": 1240, "100ste": 1240, "strukturiert": 1240, "fehlerbehandlung": 1240, "generisch": 1240, "mechanismen": [1240, 1259], "mehrfachvererbung": 1240, "teilweis": 1240, "kapiteln": 1240, "unterschied": 1240, "erl\u00e4utert": 1240, "c++ 11": 1241, "enjoy": 1241, "overrrid": 1241, "coolest": 1241, "optinion": 1241, "oneshot": 1241, "communict": 1241, "unlearn": 1241, "object ori": [1242, 1260], "graviti": 1242, "vocabulari": 1242, "confront": 1242, "reusab": 1242, "nicknam": 1242, "inventor": 1243, "bourne shel": [1244, 1250], "aesthet": 1244, "attende": [1245, 1249, 1253, 1260, 1261, 1264, 1265], "outlin": 1246, "zielpublikum": [1246, 1257], "kursinhalt": [1246, 1257], "empfohlen": [1246, 1257], "zentrum": 1247, "gleichnamigen": 1247, "leben": 1247, "gerufen": 1247, "produktivem": 1247, "basteln": 1247, "n\u00e4herzubringen": 1247, "spielekonsumenten": 1247, "kinder": 1247, "enden": 1247, "erstem": 1247, "breiteren": 1247, "\u00f6ffentlichkeit": 1247, "drauf": 1247, "vorhandensein": 1247, "basisinfrastruktur": 1247, "vielem": 1247, "hervorragenden": 1247, "gestandenen": 1247, "embeddedprogrammier": 1247, "l\u00e4nger": 1247, "normalen": 1247, "dateisystem": 1247, "versagt": 1247, "teuer": 1247, "erkauft": 1247, "testen": [1247, 1259], "hostsoftwar": 1247, "architekten": 1247, "plattformzusammensetzung": 1247, "entscheiden": [1247, 1259], "rechtfertigen": 1247, "logik": 1247, "steck": 1247, "beantworten": [1247, 1259], "eingeladen": 1247, "l\u00f6tmateri": 1247, "mitzubringen": 1247, "desktopbetriebssystem": 1247, "vorhandenen": [1247, 1259], "verh\u00e4ltniss": 1247, "512mb": 1247, "ausgestattet": [1247, 1259], "m\u00fchsam": 1247, "produktivsystem": 1247, "ohnehin": 1247, "unangebracht": 1247, "anf\u00e4ng": 1247, "filesystemen": 1247, "obwohl": 1247, "sprachunabh\u00e4ngig": 1247, "brauchen": 1247, "reinen": 1247, "computerspielen": 1247, "spielerischen": 1247, "f\u00fchren": 1247, "w\u00e4hlt": 1247, "schalten": 1247, "ausg\u00e4ngen": 1247, "abfragen": 1247, "eing\u00e4ngen": 1247, "dumm": 1247, "intelligent": 1247, "ereignisgesteuert": 1247, "mikrocontrollern": 1247, "sprechen": 1247, "aufgaben": 1247, "temperaturmessung": 1247, "expandierung": 1247, "ausgelagert": 1247, "dediziert": 1247, "angesteuert": 1247, "gegeben": 1247, "stichwort": 1247, "lm": 1247, "netzwerkprotokol": 1247, "netzwerkstack": 1247, "einpasst": 1247, "hardwareerfahrung": 1247, "personnel": [1248, 1250], "arcan": 1248, "shed": 1248, "linux kernel": 1249, "kernel driv": [1249, 1253], "wait queu": 1249, "block devic": 1249, "interrupt handl": 1249, "dose": 1249, "curios": 1249, "userpac": 1249, "massiv": 1249, "vital": 1249, "conscious": 1251, "interprocess": [1251, 1255], "abstrat": 1251, "intim": 1252, "memory manag": 1253, "tcp-ip": 1253, "racecondit": 1254, "batch": 1254, "systemcal": 1255, "datagram": 1255, "connectionless": 1255, "adress": 1255, "ipv6": 1255, "project manag": [1256, 1264], "weren": 1256, "intricaci": 1256, "interdepend": 1256, "rudimentari": 1256, "make gnu": 1258, "gnu mak": 1258, "build manag": 1258, "seiner": [1258, 1259], "m\u00e4chtigen": 1258, "daran": 1258, "wendet": 1258, "interessiert": 1258, "gr\u00f6\u00dfere": 1258, "gebaut": 1258, "komplizierten": 1258, "griff": 1258, "regeln": 1258, "selbstdefiniert": 1258, "gewiss": 1258, "fertigkeit": 1258, "knopfdruck": 1259, "abnimmt": 1259, "zahlreichen": 1259, "abgeklopft": 1259, "kaputtmachen": 1259, "konstruktiv": 1259, "einfachheit": 1259, "klarzumachen": 1259, "umzusetzen": 1259, "anstatt": 1259, "auszustatten": 1259, "gedanken": 1259, "erkannt": 1259, "entscheidung": 1259, "verbockt": 1259, "softwareentwickl": 1259, "jedwed": 1259, "stabilen": 1259, "abliefern": 1259, "entscheidungstr\u00e4g": 1259, "vorgesetzt": 1259, "schl\u00fcssige": 1259, "kan\u00e4l": 1259, "etablieren": 1259, "unittestframework": 1259, "tragen": 1259, "schwerf\u00e4llig": 1259, "halben": 1259, "\u00fcbrige": 1259, "zurechtzufinden": 1259, "vortragend": 1259, "aufgrund": 1259, "herkunft": 1259, "aufwarten": 1259, "beibringen": 1259, "\u00fcppigen": 1259, "verbergen": 1259, "pr\u00e4ferierten": 1259, "vortragenden": 1259, "keyword argu": 1260, "for loop": 1260, "iterator protocol": 1260, "operator overload": 1260, "toolkit": 1261, "indiviu": 1262, "artificial intellig": 1263, "postgr": 1263, "mssql": 1263, "data sci": 1263, "package manag": 1264, "unit test": 1264, "virtual environ": 1264, "bosch": 160, "boschsensortec": 160, "bno055_sensorapi": 160}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"curriculum": [0, 64, 65], "vita": 0, "myself": 1, "contact": 1, "impressum": 1, "further": [1, 27, 177, 213, 249, 250, 272, 389, 398, 494, 750, 804, 1119], "inform": [1, 27, 177, 187, 188, 197, 221, 224, 225, 226, 228, 229, 230, 231, 233, 235, 236, 240, 243, 246, 249, 250, 251, 252, 256, 259, 268, 272, 275, 278, 280, 283, 286, 289, 298, 301, 308, 311, 375, 389, 398, 500, 804, 1119], "projekt": [2, 11], "au": 2, "selbstst\u00e4ndig": 2, "t\u00e4tigkeit": 2, "nichtselbstst\u00e4ndig": 2, "skill": 3, "thi": [4, 20, 25, 116, 120, 121, 123, 126, 128, 132, 172, 192, 197, 198, 200, 201, 210, 219, 655, 669, 785, 906, 987, 1010, 1065, 1083, 1090, 1092], "site": [4, 16, 20, 172, 194, 196, 219], "licens": 4, "gplv3": 4, "github": [4, 113, 133, 151, 194, 196, 225, 226, 238, 246, 398, 585, 599, 1191], "sphinx": [4, 28, 173, 176, 196], "instal": [4, 48, 54, 123, 136, 144, 173, 193, 197, 201, 217, 218, 221, 246, 250, 251, 331, 347, 398, 403, 417, 537, 862, 1006, 1063, 1075, 1080, 1081, 1114, 1145, 1146, 1178, 1191, 1207, 1224, 1226, 1231, 1233, 1256], "instruct": [4, 166, 481, 811, 1036, 1066, 1084], "pip": [4, 322], "venv": [4, 322], "work": [4, 88, 113, 115, 151, 166, 168, 171, 175, 180, 192, 225, 256, 294, 296, 313, 314, 315, 316, 380, 405, 498, 499, 500, 599, 669, 838, 906, 907, 944, 947, 951, 1080], "progress": [4, 171], "more": [4, 192, 209, 222, 261, 264, 269, 277, 281, 284, 286, 298, 299, 301, 302, 305, 307, 308, 311, 317, 318, 321, 322, 327, 328, 329, 336, 339, 343, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 367, 371, 375, 379, 380, 398, 420, 426, 449, 465, 467, 481, 491, 524, 531, 534, 539, 649, 658, 661, 668, 681, 687, 742, 784, 785, 789, 806, 824, 895, 925, 926, 927, 931, 932, 978, 1005, 1049, 1087, 1089, 1091, 1134, 1137, 1138, 1139, 1199, 1224, 1236, 1260], "opentrain": [5, 11], "draft": [6, 833, 983, 1144, 1190], "topic": [6, 9, 64, 65, 89, 90, 92, 93, 94, 95, 133, 221, 225, 228, 249, 250, 251, 262, 267, 286, 289, 305, 308, 311, 314, 315, 339, 343, 353, 354, 374, 375, 377, 378, 379, 381, 388, 402, 406, 407, 416, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 548, 591, 592, 593, 594, 595, 596, 597, 600, 642, 650, 664, 667, 670, 686, 692, 696, 704, 709, 711, 714, 720, 739, 740, 744, 751, 758, 769, 782, 783, 793, 798, 807, 815, 820, 833, 837, 839, 840, 864, 986, 1001, 1019, 1021, 1042, 1048, 1069, 1076, 1077, 1091, 1092, 1097, 1105, 1113, 1144, 1190, 1193, 1197, 1201, 1205, 1207, 1211, 1218, 1223, 1229, 1239, 1263], "miscellan": [7, 170, 205, 209, 229, 258, 269, 271, 277, 287, 293, 294, 298, 302, 305, 314, 317, 318, 323, 328, 329, 339, 340, 343, 350, 351, 353, 357, 367, 372, 524, 620, 642, 720, 724, 756, 820, 1025, 1038, 1040, 1136, 1205, 1257, 1263], "screencast": [8, 186], "written": [9, 115, 149, 645, 648], "new": [9, 124, 133, 251, 267, 293, 294, 296, 353, 354, 371, 372, 379, 380, 381, 416, 513, 530, 588, 625, 741, 742, 782, 819, 839, 867, 900, 1208], "write": [9, 30, 38, 46, 189, 520, 588, 625, 652, 764, 779, 802, 845, 1015, 1022, 1110, 1140, 1147, 1216], "netide": [10, 11], "f\u00f6rderantrag": [10, 11], "1": [11, 25, 64, 69, 88, 98, 105, 108, 109, 112, 115, 150, 151, 152, 192, 195, 206, 214, 216, 221, 225, 226, 228, 229, 230, 232, 233, 235, 240, 241, 243, 246, 250, 251, 252, 256, 259, 262, 265, 268, 272, 280, 305, 308, 311, 314, 315, 316, 317, 318, 322, 326, 328, 333, 339, 340, 343, 344, 354, 366, 370, 371, 373, 375, 378, 380, 397, 399, 400, 407, 414, 416, 418, 419, 420, 422, 426, 430, 439, 441, 442, 443, 444, 448, 449, 452, 455, 461, 462, 463, 464, 465, 468, 470, 474, 478, 480, 482, 485, 486, 487, 488, 490, 491, 493, 494, 500, 508, 544, 547, 549, 585, 647, 649, 655, 666, 669, 676, 678, 760, 765, 806, 811, 817, 834, 835, 846, 851, 858, 869, 879, 948, 988, 989, 993, 995, 1004, 1018, 1033, 1034, 1036, 1038, 1040, 1041, 1052, 1059, 1063, 1066, 1067, 1084, 1092, 1097, 1118, 1120, 1121, 1127, 1130, 1135, 1136, 1138, 1139, 1140, 1141, 1204, 1215, 1216], "daten": [11, 245, 253], "antragsteller_in": 11, "2": [11, 25, 57, 65, 69, 88, 98, 103, 104, 105, 108, 112, 115, 151, 155, 156, 158, 165, 192, 195, 216, 221, 222, 225, 226, 228, 229, 230, 232, 235, 239, 240, 241, 243, 246, 250, 251, 252, 256, 259, 261, 262, 265, 268, 272, 280, 305, 308, 311, 314, 315, 316, 317, 318, 322, 326, 333, 339, 340, 343, 344, 350, 354, 366, 370, 371, 373, 375, 378, 380, 412, 414, 416, 418, 419, 420, 422, 426, 430, 439, 441, 442, 443, 444, 448, 449, 452, 455, 461, 462, 464, 465, 468, 470, 474, 478, 480, 482, 485, 486, 487, 488, 490, 491, 493, 494, 500, 509, 544, 547, 549, 585, 634, 647, 649, 655, 666, 669, 676, 678, 761, 766, 806, 811, 817, 834, 835, 851, 858, 879, 948, 988, 989, 995, 1004, 1018, 1033, 1034, 1036, 1038, 1040, 1041, 1052, 1059, 1063, 1066, 1067, 1080, 1084, 1092, 1097, 1118, 1120, 1121, 1127, 1129, 1130, 1136, 1138, 1139, 1140, 1141, 1200, 1202, 1203, 1204, 1215, 1216], "allgemein": 11, "projektnam": 11, "untertitel": 11, "3": [11, 54, 57, 88, 98, 105, 115, 133, 142, 143, 147, 151, 192, 216, 225, 226, 228, 229, 230, 231, 232, 235, 240, 241, 246, 250, 251, 252, 254, 256, 261, 262, 265, 268, 272, 280, 287, 305, 308, 311, 314, 316, 317, 318, 322, 326, 328, 339, 340, 341, 343, 344, 350, 354, 366, 370, 371, 373, 375, 378, 380, 416, 420, 470, 474, 478, 482, 488, 490, 491, 493, 494, 544, 547, 549, 585, 649, 762, 835, 1018, 1036, 1040, 1041, 1092, 1121, 1129, 1135, 1140], "allgemeinverst\u00e4ndlich": 11, "kurzbeschreibung": 11, "de": [11, 298, 416, 913], "4": [11, 57, 98, 192, 216, 225, 228, 232, 240, 241, 243, 246, 250, 251, 268, 280, 305, 373, 380, 407, 416, 420, 478, 482, 488, 544, 547, 649, 767, 1092], "anschlussf\u00f6rderung": 11, "die": [11, 41, 198, 215, 253], "besonder": [11, 232], "bedeutung": 11, "ihr": 11, "f\u00fcr": [11, 216, 222, 232, 416], "da": [11, 212, 222, 239, 248, 281], "internet": 11, "internetnutzung": 11, "IN": 11, "\u00f6sterreich": 11, "zielgrupp": 11, "und": [11, 206, 222, 232, 233, 237, 239, 243, 245, 248, 252, 268, 271, 277, 280, 284, 290, 357, 367, 399, 416, 440, 449], "projektziel": 11, "5": [11, 57, 192, 209, 216, 221, 222, 224, 232, 250, 251, 253, 305, 380, 407, 416, 478, 488, 544, 547, 768, 914, 915], "l\u00f6sung": [11, 222], "beschreibung": 11, "der": [11, 57, 152, 165, 232, 237, 253, 399, 416], "probleml\u00f6sung": 11, "wesentlich": 11, "element": [11, 232, 269, 287, 289, 603, 605, 606, 610, 697, 699, 700, 1126], "ein": [11, 222, 253], "nachhaltigen": 11, "impact": 11, "nach": [11, 289], "projektend": 11, "6": [11, 133, 136, 137, 138, 139, 140, 144, 145, 146, 153, 154, 232, 233, 253, 254, 287, 416, 478, 488, 544, 547, 1135], "umfeldanalys": 11, "wa": [11, 221, 237, 731], "ist": [11, 222], "stand": 11, "technik": 11, "method": [11, 245, 248, 258, 269, 271, 274, 277, 287, 302, 314, 323, 329, 341, 345, 351, 357, 363, 367, 379, 390, 392, 400, 519, 598, 634, 646, 653, 654, 657, 659, 661, 664, 716, 719, 728, 732, 800, 801, 802, 803, 804, 828, 846, 881, 883, 897, 1107, 1109, 1135, 1136, 1137, 1225], "wissen": 11, "welch": 11, "ander": [11, 208, 399], "l\u00f6sungen": 11, "vorhaben": 11, "zu": [11, 215, 232], "den": [11, 198, 237, 253], "genannten": 11, "problemen": 11, "gibt": [11, 232], "e": [11, 497, 801], "schon": 11, "7": [11, 57, 225, 232, 233, 253, 416, 478, 488], "alleinstellungsmerkm": 11, "8": [11, 232, 233, 252, 253, 416, 478, 488, 995, 1204], "projektergebniss": 11, "list": [11, 208, 209, 222, 232, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 351, 357, 363, 367, 478, 519, 535, 596, 620, 637, 651, 693, 742, 755, 792, 848, 875, 876, 877, 899, 970, 1086, 1089, 1092, 1093, 1102, 1122, 1130, 1137, 1167, 1168, 1219], "erforderlich": 11, "lizenzen": 11, "dritter": 11, "9": [11, 225, 226, 232, 233, 253, 416, 478, 488, 1092], "erfolgreich": 11, "projektabschluss": 11, "sonstigen": 11, "aktivit\u00e4ten": 11, "im": [11, 232, 258, 271, 284, 287, 302, 309, 323, 329, 341, 345, 363, 367, 416, 1130], "projektbereich": 11, "angaben": [11, 152, 165], "zur": [11, 152, 165, 222, 232], "fachlichen": 11, "eignung": 11, "mitarbeiterinnen": 11, "projektkernteam": 11, "erfahrung": 11, "vorgesehenen": 11, "projektleiterin": 11, "link": [11, 27, 168, 172, 173, 193, 210, 221, 224, 226, 228, 230, 233, 235, 240, 241, 243, 252, 256, 259, 262, 268, 275, 286, 289, 322, 328, 403, 405, 478, 480, 749, 763, 770, 788, 795, 799, 864, 875, 876, 927, 948, 969, 988, 995, 1003, 1082, 1083, 1114, 1145, 1146, 1190, 1191, 1207, 1209, 1210, 1212, 1213, 1214, 1215, 1222, 1227], "zum": [11, 208, 253], "maxim": 11, "min\u00fctigen": 11, "video": [11, 12, 19, 240, 298, 328, 344, 750], "risiken": 11, "erfolgskriterien": 11, "am": [11, 222, 281, 416], "angestrebt": 11, "jahr": 11, "10": [11, 33, 90, 91, 133, 153, 154, 178, 206, 209, 214, 225, 228, 232, 267, 268, 295, 296, 297, 298, 299, 313, 336, 337, 339, 340, 342, 379, 380, 398, 402, 403, 404, 408, 416, 478, 605, 914, 915], "umsetzung": 11, "einj\u00e4hrig": 11, "wichtig": 11, "partner_innen": 11, "arbeitsschwerpunkt": 11, "ressourcen": 11, "nutzer_innen": 11, "kommunikationskan\u00e4l": 11, "11": [11, 33, 116, 120, 128, 132, 133, 207, 212, 230, 231, 232, 261, 262, 267, 292, 296, 298, 301, 302, 336, 343, 344, 345, 346, 347, 348, 349, 350, 351, 369, 370, 371, 373, 374, 375, 377, 379, 405, 406, 416, 478, 620, 743, 746, 779, 780, 791, 800, 839], "projekttermin": 11, "termin": [11, 918, 1034, 1098], "projektstart": 11, "12": [11, 33, 54, 116, 117, 120, 128, 133, 212, 231, 232, 236, 243, 251, 264, 265, 267, 298, 349, 350, 351, 354, 355, 356, 357, 358, 398, 403, 407, 409, 416], "kosten": 11, "finanzierung": 11, "projektkosten": 11, "personalkosten": 11, "sonstig": 11, "gesamtkosten": 11, "wir": [11, 237, 253], "beantragen": 11, "folgend": 11, "f\u00f6rderung": 11, "13": [11, 29, 33, 143, 200, 221, 232, 233, 243, 296, 305, 308, 309, 311, 369, 370, 416], "restlichen": 11, "werden": [11, 232], "finanziert": 11, "durch": [11, 222], "sonderprei": 11, "14": [11, 33, 116, 117, 120, 128, 133, 138, 212, 221, 232, 233, 236, 250, 292, 416], "erg\u00e4nzend": 11, "transparenz": 11, "mehrfachantr\u00e4g": 11, "nutzung": 11, "whataventur": 11, "plattform": 11, "eingereicht": 11, "teil": 11, "einer": [11, 212, 221, 232, 416], "schulischen": 11, "verpflichtung": 11, "z": 11, "b": 11, "htl": 11, "diplomarbeit": 11, "wie": [11, 239, 245], "haben": [11, 222], "sie": [11, 222], "von": [11, 208, 212, 215, 222, 232, 239, 252, 253, 268, 280, 367, 393, 416], "erfahren": 11, "mehrfachnennungen": 11, "m\u00f6glich": 11, "16": [11, 251, 275, 289, 301, 302, 416, 1092], "datenschutz": 11, "screenplai": [12, 50, 383, 506, 507, 512, 513, 514, 515, 528, 530, 622, 625, 628, 631, 634, 637, 640, 671, 672, 673, 674, 675, 678, 679, 680, 698, 699, 700, 701, 842, 845, 850, 855, 860, 862, 900, 903, 906, 1055, 1058, 1062, 1131, 1219, 1226, 1231, 1233, 1236], "content": [12, 25, 136, 137, 187, 189, 190, 191, 192, 193, 194, 195, 196, 213, 217, 218, 248, 400, 503, 520, 625, 628, 634, 637, 643, 724, 802, 916, 937, 950, 956, 962, 965, 983, 991, 992, 999, 1008, 1024, 1026, 1028, 1045, 1055, 1058, 1073, 1093, 1149, 1150, 1154, 1163, 1177, 1184, 1231, 1233, 1236, 1241, 1249], "The": [12, 27, 31, 33, 48, 91, 113, 116, 185, 201, 232, 248, 251, 254, 261, 278, 287, 290, 305, 313, 315, 317, 323, 326, 333, 336, 339, 340, 343, 345, 353, 354, 357, 367, 370, 375, 378, 379, 381, 418, 426, 427, 464, 465, 480, 487, 488, 497, 498, 502, 503, 513, 523, 524, 528, 537, 600, 601, 653, 676, 697, 698, 720, 741, 742, 750, 755, 757, 759, 784, 802, 805, 816, 819, 831, 839, 883, 913, 923, 924, 931, 948, 951, 962, 965, 968, 970, 980, 982, 986, 993, 1002, 1004, 1006, 1007, 1009, 1015, 1023, 1027, 1044, 1046, 1053, 1065, 1067, 1078, 1079, 1087, 1088, 1090, 1094, 1098, 1106, 1109, 1113, 1115, 1117, 1124, 1129, 1135, 1178, 1199, 1206, 1215, 1225, 1258, 1261, 1265], "problem": [12, 462, 484, 510, 511, 534, 542, 543, 544, 547, 553, 600, 601, 725, 743, 755, 759, 779, 780, 789, 805, 819, 824, 843, 877, 925, 944, 1004, 1006, 1010, 1067, 1083, 1084, 1088, 1102, 1198, 1220, 1227], "And": [12, 30, 48, 50, 53, 113, 118, 119, 133, 139, 146, 153, 167, 168, 201, 203, 205, 296, 299, 302, 305, 308, 313, 314, 315, 316, 317, 318, 323, 326, 328, 331, 333, 336, 339, 340, 343, 344, 345, 347, 351, 353, 354, 357, 367, 370, 371, 372, 373, 374, 377, 379, 380, 416, 438, 482, 506, 518, 522, 524, 526, 530, 531, 532, 534, 535, 537, 538, 540, 546, 549, 555, 563, 564, 569, 577, 583, 598, 645, 646, 652, 656, 672, 676, 677, 678, 680, 698, 713, 714, 718, 721, 747, 753, 755, 757, 770, 787, 790, 791, 792, 794, 795, 800, 812, 814, 816, 818, 819, 824, 835, 851, 909, 913, 914, 915, 919, 923, 929, 931, 967, 980, 982, 987, 991, 994, 997, 998, 1009, 1022, 1046, 1068, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1085, 1090, 1094, 1095, 1098, 1102, 1103, 1104, 1109, 1110, 1111, 1112, 1177, 1178, 1179, 1187, 1199, 1204, 1209, 1210, 1212, 1213, 1214, 1224, 1248, 1256], "me": [12, 194, 353, 372, 1021], "open": [12, 180, 318, 552, 845, 846, 1012, 1015, 1018, 1020, 1059, 1087, 1140], "sourc": [12, 28, 193, 218, 507, 512, 513, 514, 515, 528, 530, 534, 545, 831, 843, 846, 848, 851, 853, 856, 860, 865, 867, 877, 879, 887, 890, 895, 1016, 1065, 1066, 1067, 1082, 1084, 1146, 1204], "train": [12, 13, 14, 15, 16, 197, 210, 225, 226, 228, 229, 230, 231, 233, 235, 236, 240, 243, 246, 249, 250, 251, 252, 256, 259, 268, 272, 275, 278, 280, 283, 286, 289, 298, 301, 308, 311, 1196, 1262, 1265], "materi": [12, 16, 18, 54, 114, 151, 156, 212, 214, 229, 250, 397, 412, 413, 505, 841, 1189, 1190, 1211], "walk": [12, 305, 367, 398], "through": [12, 305, 398], "us": [13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 173, 191, 195, 197, 201, 210, 211, 217, 219, 229, 248, 250, 251, 264, 267, 373, 380, 423, 425, 428, 443, 458, 480, 490, 498, 499, 511, 516, 519, 529, 544, 547, 564, 585, 684, 708, 730, 738, 750, 754, 755, 791, 805, 816, 828, 829, 830, 981, 993, 994, 995, 1031, 1033, 1049, 1066, 1067, 1078, 1079, 1085, 1087, 1090, 1093, 1103, 1112, 1219, 1225, 1226], "case": [13, 14, 15, 16, 17, 18, 250, 454, 458, 549, 611, 613, 616, 790, 791, 1016, 1020, 1021, 1022, 1031, 1077, 1085, 1112, 1225, 1231], "custom": [13, 180, 183, 194, 388, 646, 647, 660, 666, 690, 745, 1213, 1215, 1231], "subtract": [13, 644], "known": [13, 189], "calcul": [14, 248, 447, 546, 1110], "minimum": [14, 865], "durat": 14, "trainer": [15, 507, 513, 515, 530, 531], "editor": [15, 241], "end": [15, 756], "user": [15, 30, 34, 144, 251, 253, 416, 648, 725, 727, 732, 733, 734, 735, 736, 737, 819, 851, 919, 920, 921, 923, 924, 925, 933, 934, 945, 1006, 1089, 1180, 1182, 1184, 1185, 1187, 1219], "audienc": [15, 1245, 1250, 1256], "from": [16, 17, 19, 26, 28, 30, 31, 33, 45, 91, 113, 133, 144, 178, 184, 201, 210, 218, 219, 227, 267, 277, 305, 308, 313, 322, 340, 379, 416, 433, 455, 461, 503, 506, 507, 668, 671, 712, 725, 726, 752, 753, 792, 855, 860, 901, 906, 1005, 1023, 1049, 1058, 1065, 1108, 1146, 1186, 1191, 1196, 1198, 1262], "other": [16, 26, 40, 248, 317, 329, 400, 750, 865, 887, 933, 1097], "menu": 17, "choos": 17, "slide": [18, 33, 54, 209, 401, 413, 841, 1059, 1063], "show": 18, "plain": [18, 684, 712, 713, 742], "text": [18, 326, 370, 464, 976, 979, 982, 1140, 1216], "file": [18, 19, 30, 36, 138, 140, 210, 212, 248, 258, 261, 277, 284, 286, 287, 301, 305, 309, 319, 321, 322, 323, 326, 327, 328, 345, 349, 350, 351, 356, 357, 361, 362, 363, 365, 366, 370, 389, 390, 405, 462, 506, 508, 511, 514, 520, 524, 530, 549, 628, 658, 845, 846, 847, 855, 887, 914, 915, 918, 937, 942, 943, 949, 950, 953, 954, 955, 963, 967, 970, 971, 976, 979, 981, 997, 1005, 1006, 1010, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1031, 1055, 1059, 1065, 1066, 1081, 1087, 1116, 1140, 1146, 1147, 1148, 1169, 1171, 1180, 1182, 1199, 1231], "send": [19, 1059, 1063], "A": [19, 33, 50, 113, 128, 133, 141, 142, 173, 190, 201, 267, 293, 294, 296, 308, 312, 313, 314, 315, 317, 322, 353, 354, 356, 372, 373, 379, 380, 381, 382, 416, 421, 430, 460, 487, 505, 506, 507, 513, 519, 525, 528, 535, 543, 563, 577, 585, 588, 598, 603, 618, 644, 658, 659, 668, 677, 707, 718, 719, 725, 733, 742, 747, 755, 757, 784, 787, 800, 803, 805, 818, 914, 915, 918, 933, 944, 967, 971, 993, 1005, 1007, 1011, 1012, 1013, 1016, 1019, 1020, 1021, 1022, 1029, 1031, 1044, 1049, 1052, 1065, 1079, 1080, 1083, 1084, 1085, 1088, 1093, 1112, 1115, 1178, 1204, 1209, 1212, 1215, 1216, 1224, 1247, 1250, 1256], "v4l": 19, "camera": 19, "devic": [19, 50, 72, 88, 115, 151, 153, 842, 843, 844, 845, 846, 847, 850, 851, 852, 853, 854, 855, 877, 881, 882, 883, 918, 993, 994, 995, 1055], "output": [19, 38, 112, 121, 210, 222, 389, 522, 532, 722, 930, 1092, 1196, 1231], "over": [19, 261, 269, 271, 519, 838, 995, 1128, 1129], "ssh": [19, 137, 138, 241, 305, 326, 370, 395, 403, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006], "captur": [19, 784, 785, 787], "To": [19, 25, 27, 30, 32, 41, 112, 204, 284, 313, 353, 372, 379, 380, 512, 513, 514, 548, 549, 564, 585, 710, 721, 725, 742, 746, 755, 757, 759, 770, 784, 792, 800, 802, 804, 805, 816, 818, 858, 899, 901, 914, 915, 993, 997, 998, 1005, 1067, 1078, 1080, 1085, 1087, 1088, 1108, 1109, 1187, 1208, 1209, 1215], "plai": [19, 50, 770], "remot": [19, 88, 113, 115, 151, 170, 553, 566, 580, 914, 915, 997, 998, 1002, 1005, 1006], "system": [19, 138, 140, 168, 192, 264, 305, 326, 363, 370, 405, 416, 436, 500, 524, 716, 808, 937, 943, 1006, 1008, 1009, 1010, 1015, 1026, 1046, 1049, 1052, 1119, 1219, 1251, 1252, 1253, 1254, 1255], "emoji": 20, "code": [20, 29, 31, 33, 98, 219, 220, 222, 223, 246, 262, 315, 317, 318, 331, 347, 371, 372, 374, 375, 377, 378, 380, 416, 484, 494, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 528, 530, 541, 545, 621, 624, 627, 630, 633, 636, 639, 668, 754, 802, 824, 848, 849, 853, 854, 855, 856, 857, 867, 868, 877, 878, 889, 890, 891, 895, 896, 1021, 1054, 1057, 1061, 1066, 1082, 1083, 1084, 1186, 1187, 1188, 1191, 1194, 1197, 1204, 1217, 1226, 1230, 1235, 1256], "sphinxemoji": 20, "setup": [20, 50, 69, 100, 137, 141, 188, 193, 197, 218, 225, 226, 228, 229, 230, 251, 301, 307, 308, 311, 314, 316, 318, 321, 322, 326, 327, 328, 349, 350, 355, 356, 361, 365, 366, 370, 532, 598, 600, 986, 1002, 1013, 1080, 1081, 1114, 1178, 1179, 1226, 1236], "most": [20, 26, 50, 757, 1219], "here": [20, 191, 549, 1005], "In": [20, 33, 113, 153, 175, 195, 197, 198, 200, 229, 232, 293, 294, 296, 315, 317, 340, 353, 371, 380, 416, 506, 508, 509, 511, 514, 519, 522, 530, 596, 601, 603, 644, 648, 658, 659, 660, 661, 662, 663, 688, 746, 750, 754, 784, 785, 791, 804, 818, 831, 865, 914, 915, 923, 980, 993, 1030, 1065, 1067, 1082, 1089, 1130, 1241], "all": [20, 26, 41, 50, 106, 245, 248, 267, 313, 343, 354, 416, 519, 715, 742, 750, 785, 805, 831, 906, 925, 1065, 1082, 1100, 1189, 1258], "recip": 21, "isoamsa": 22, "txt": [22, 23, 24, 26, 512, 530, 995], "ad": [22, 23, 24, 194, 513, 1082, 1208, 1215], "mathemat": [22, 23, 24], "symbol": [22, 23, 24, 424, 439, 500, 969, 1065], "arrow": 22, "isoamsr": 23, "relat": [23, 308, 311, 442, 825], "isonum": 24, "binari": [24, 564, 1140], "oper": [24, 209, 222, 232, 245, 261, 264, 267, 274, 277, 281, 284, 298, 313, 333, 345, 393, 426, 441, 442, 443, 446, 447, 449, 450, 455, 467, 519, 598, 620, 645, 646, 652, 659, 699, 721, 800, 808, 814, 845, 846, 847, 930, 1010, 1049, 1109, 1119, 1121, 1123, 1139, 1210], "layout": [25, 277, 473], "test": [25, 30, 31, 32, 33, 38, 62, 116, 120, 121, 123, 124, 126, 128, 132, 141, 142, 201, 221, 251, 275, 286, 289, 298, 307, 308, 311, 312, 313, 317, 318, 331, 333, 336, 339, 340, 343, 347, 366, 371, 372, 373, 374, 375, 377, 378, 380, 406, 412, 416, 506, 532, 549, 569, 585, 599, 601, 602, 661, 725, 848, 867, 900, 1023, 1078, 1081, 1146, 1179, 1186, 1187, 1188, 1196, 1224, 1225, 1229, 1231, 1233, 1236, 1256, 1259], "page": [25, 85, 194, 196, 858, 948, 981, 1009], "admonit": 25, "i": [25, 33, 109, 140, 191, 192, 208, 248, 258, 264, 269, 274, 277, 284, 286, 287, 319, 323, 326, 328, 357, 363, 370, 390, 402, 426, 452, 499, 505, 524, 543, 598, 617, 644, 651, 712, 718, 719, 755, 757, 780, 784, 789, 792, 801, 805, 809, 813, 824, 860, 871, 892, 907, 918, 923, 924, 929, 930, 931, 944, 954, 967, 995, 1005, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1020, 1022, 1024, 1025, 1031, 1044, 1047, 1065, 1083, 1085, 1090, 1140, 1198, 1212, 1236], "an": [25, 194, 264, 317, 332, 339, 343, 348, 371, 376, 379, 380, 394, 398, 416, 510, 646, 755, 770, 848, 967, 994, 1005, 1010, 1049, 1083, 1094, 1103, 1130, 1132, 1226, 1241], "tip": 25, "note": [25, 48, 127, 160, 163, 164, 170, 384, 507, 513, 515, 530, 531, 542, 933], "hint": [25, 566, 596, 725], "import": [25, 201, 208, 248, 258, 267, 398, 651, 1063, 1089, 1097, 1206], "attent": [25, 519, 1132], "caution": [25, 719], "error": [25, 31, 201, 264, 317, 318, 339, 340, 343, 465, 490, 544, 665, 675, 676, 725, 761, 764, 818, 930, 995, 1007, 1016, 1020, 1021, 1022, 1031, 1102, 1159], "danger": [25, 432, 526, 813, 945], "sidebar": 25, "blech": 25, "titl": 25, "blah": 25, "kursdaten": 25, "local": [25, 27, 88, 113, 115, 151, 170, 209, 232, 463, 495, 530, 537, 553, 1002, 1005, 1040, 1067, 1131, 1226], "head": [25, 875, 980, 1199], "bleh": 25, "do": [25, 30, 248, 290, 353, 456, 493, 507, 537, 543, 742, 877, 899, 914, 915, 931, 1065], "mmlalia": 26, "mathml": 26, "alias": 26, "entiti": [26, 1034], "set": [26, 50, 227, 232, 237, 242, 245, 253, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 526, 944, 945, 1063, 1086, 1122, 1139, 1178, 1203, 1213], "restructuredtext": 27, "cheat": [27, 398], "sheet": [27, 398], "document": [27, 141, 151, 196, 245, 261, 341, 373, 393, 507, 512, 513, 514, 515, 519, 520, 521, 522, 524, 526, 527, 528, 530, 681, 682, 683, 684, 685, 687, 688, 689, 690, 693, 694, 697, 702, 721, 725, 819, 851, 867, 869, 873, 875, 897, 901, 904, 914, 915, 918, 923, 930, 931, 932, 933, 948, 949, 950, 951, 967, 970, 971, 993, 1005, 1007, 1009, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1031, 1065, 1066, 1082, 1118, 1142, 1143, 1153, 1216, 1224, 1231], "extern": [27, 331, 347, 374, 375, 377, 378, 384, 461, 512, 513, 516, 658, 862, 863, 994, 1083, 1154, 1256], "section": 27, "refer": [27, 190, 232, 258, 261, 264, 271, 284, 287, 293, 294, 296, 299, 302, 306, 309, 314, 317, 323, 329, 341, 353, 357, 363, 367, 372, 373, 430, 468, 495, 656, 751, 754, 755, 757, 784, 785, 787, 796, 801, 803, 804, 818, 835, 836, 894, 1130], "That": [27, 290, 293, 294, 296, 313, 340, 469, 529, 547, 644, 651, 742, 745, 755, 784, 802, 803, 887, 923, 995, 1005, 1010, 1011, 1014, 1085, 1112, 1233], "we": [27, 30, 33, 41, 353, 504, 506, 507, 515, 877, 906, 1078, 1231], "anoth": [27, 277, 504, 507, 1049, 1082], "contain": [27, 133, 145, 267, 287, 313, 316, 354, 620, 636, 637, 638, 676, 677, 691, 692, 695, 696, 697, 742, 746, 794, 875, 1080], "abov": 27, "footnot": 27, "sphinxish": 28, "jupyt": [28, 173, 233, 234, 238, 239, 240, 243, 244, 246, 247, 256, 257, 259, 260, 262, 263, 266, 268, 270, 273, 276, 279, 282, 285, 287, 288, 291, 300, 303, 306, 310, 319, 320, 324, 330, 335, 338, 341, 342, 345, 346, 352, 368, 393, 1196, 1197], "notebook": [28, 173, 228, 233, 234, 238, 239, 240, 243, 244, 246, 247, 249, 256, 257, 259, 260, 262, 263, 264, 266, 268, 270, 273, 276, 279, 282, 285, 287, 288, 291, 300, 303, 306, 310, 319, 320, 324, 330, 335, 338, 341, 342, 345, 346, 352, 368, 393, 398, 1194, 1196, 1197], "run": [28, 178, 195, 532, 599, 661, 818, 895, 986, 1011, 1012, 1013, 1080, 1081, 1117, 1194, 1197, 1224], "seminar": 29, "clean": [29, 31, 33, 255, 315, 317, 318, 372, 416, 505, 506, 512], "2022": [29, 89, 90, 91, 92, 93, 94, 95, 134, 150, 151, 152, 155, 156, 165, 267, 268, 269, 272, 275, 278, 280, 283, 286, 289, 292, 295, 296, 297, 298, 299, 301, 302, 408, 409, 410, 416], "04": [29, 95, 136, 138, 139, 140, 195, 267, 278, 280, 283, 316, 317, 318, 319, 320, 354, 371, 379, 380, 398, 416, 1080], "agenda": [29, 225, 226, 228, 229, 230, 231, 236, 240, 241, 278, 283, 295, 304, 308, 311, 317, 321, 325, 327, 331, 333, 339, 343, 347, 349, 353, 355, 361, 365, 369, 372, 374, 377, 381, 411, 412, 1256], "timelin": 29, "live": [30, 32, 33, 208, 211, 233, 243, 246, 256, 305, 515, 642, 681, 682, 684, 685, 688, 689, 690, 702, 742, 753, 786, 787, 814, 816, 918, 945, 1010, 1028], "hack": [30, 32, 33, 153, 208, 211, 233, 243, 246, 256, 305, 308, 312, 315, 318, 344, 642, 681, 682, 684, 685, 688, 689, 690, 702, 742, 753, 786, 787, 814, 816, 946, 1028], "befor": [30, 50, 180, 210, 333, 336, 800, 1231], "formal": [30, 426], "unit": [30, 31, 33, 62, 141, 221, 251, 289, 298, 308, 311, 366, 371, 372, 373, 375, 378, 406, 416, 585, 601, 661, 1179, 1229], "initi": [30, 258, 293, 294, 296, 353, 354, 372, 428, 440, 489, 596, 627, 628, 629, 644, 651, 661, 698, 721, 742, 744, 745, 746, 747, 791, 813, 818, 819, 881, 892, 904, 1038, 1040], "structur": [30, 31, 133, 141, 168, 209, 272, 293, 294, 296, 298, 320, 331, 342, 346, 347, 353, 372, 458, 466, 473, 476, 482, 540, 585, 620, 791, 796, 816, 855, 883, 1084, 1097, 1224, 1231, 1256], "snippet": [30, 32, 38], "userdb": [30, 34, 37, 38, 43, 46, 250, 620, 734, 738], "bin": [30, 141, 725, 1068], "binaryfil": 30, "cpp": [30, 141, 507, 508, 585, 588, 725, 760, 761, 762, 765, 766, 767, 768, 771, 772, 774, 775, 776, 777, 778], "extend": [30, 245, 661, 1106], "read": [30, 37, 38, 46, 141, 142, 168, 248, 255, 389, 390, 400, 433, 494, 506, 520, 549, 725, 750, 792, 845, 903, 1011, 1015, 1021, 1023, 1031, 1140, 1147, 1148, 1180, 1181, 1182, 1183, 1196, 1216], "iter": [30, 211, 222, 227, 232, 237, 239, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 286, 287, 298, 299, 301, 302, 308, 311, 315, 319, 321, 322, 323, 327, 328, 340, 341, 345, 349, 350, 351, 355, 356, 357, 361, 362, 365, 366, 367, 390, 519, 676, 677, 700, 742, 770, 777, 790, 791, 792, 838, 875, 1092, 1094, 1095, 1096, 1108, 1128, 1129, 1138], "bug": [30, 35, 41, 443, 628, 792], "faschingbau": [30, 194], "As": [30, 173, 547, 564, 755, 794, 995, 1029, 1065, 1103, 1233], "last": [30, 443, 464, 465, 494, 666, 669, 806, 1041, 1063, 1231], "name": [30, 31, 121, 258, 261, 277, 437, 475, 519, 524, 526, 653, 742, 887, 932, 950, 1059, 1131, 1142], "wrap": [30, 221, 490, 528, 742, 1088], "up": [30, 192, 221, 255, 298, 316, 317, 339, 403, 490, 512, 742, 1103], "what": [30, 33, 37, 41, 197, 200, 264, 274, 373, 379, 452, 493, 504, 507, 514, 515, 524, 648, 716, 736, 742, 754, 755, 784, 805, 856, 877, 887, 903, 907, 923, 931, 949, 989, 1002, 1005, 1006, 1010, 1011, 1014, 1018, 1031, 1052, 1065, 1078, 1082, 1090, 1094, 1098, 1141, 1212, 1215], "have": [30, 33, 504, 877, 1078, 1083], "messag": [31, 190, 191, 503, 535, 1039, 1058, 1059, 1207, 1231], "book": [31, 33, 204, 236, 286, 328, 418, 503, 1191], "survei": [31, 504], "function": [31, 197, 209, 227, 232, 242, 245, 248, 251, 254, 258, 261, 269, 271, 277, 281, 286, 287, 290, 293, 294, 296, 298, 302, 309, 315, 323, 333, 334, 336, 339, 340, 341, 343, 349, 350, 351, 353, 354, 355, 356, 357, 361, 362, 363, 365, 366, 367, 371, 372, 379, 398, 430, 432, 437, 464, 466, 468, 469, 474, 506, 522, 526, 528, 534, 586, 620, 644, 653, 657, 659, 664, 668, 684, 725, 742, 749, 752, 753, 754, 755, 764, 794, 806, 807, 848, 849, 911, 1007, 1009, 1049, 1085, 1087, 1088, 1090, 1092, 1093, 1112, 1129, 1131, 1132, 1133, 1141, 1164, 1166, 1170, 1173, 1181, 1183, 1215], "comment": [31, 245, 269, 284, 309, 393, 518, 1118, 1160], "format": [31, 38, 248, 254, 269, 329, 357, 1135, 1188], "object": [31, 108, 222, 227, 264, 271, 277, 281, 289, 290, 298, 301, 302, 314, 315, 317, 318, 321, 322, 327, 333, 334, 336, 339, 340, 343, 344, 349, 355, 361, 362, 365, 366, 380, 386, 504, 542, 547, 627, 628, 629, 644, 646, 649, 652, 654, 657, 659, 714, 716, 731, 746, 749, 752, 755, 801, 1059, 1083, 1084, 1089, 1097, 1103, 1105, 1107, 1141, 1209, 1213], "data": [31, 120, 121, 122, 123, 209, 211, 237, 246, 272, 286, 289, 298, 322, 339, 340, 341, 343, 363, 365, 373, 438, 482, 485, 506, 530, 650, 654, 676, 796, 923, 1040, 1108, 1177, 1191, 1196, 1198], "handl": [31, 264, 267, 277, 289, 308, 311, 316, 317, 318, 339, 340, 343, 409, 510, 544, 665, 1007, 1089, 1142], "boundari": [31, 1204], "class": [31, 222, 248, 267, 271, 274, 277, 290, 298, 314, 319, 333, 336, 367, 373, 379, 380, 535, 547, 554, 555, 572, 573, 585, 588, 602, 621, 622, 623, 646, 653, 654, 658, 660, 661, 662, 663, 669, 684, 712, 713, 733, 742, 743, 745, 753, 754, 786, 800, 843, 1088, 1102, 1103, 1106, 1107, 1108, 1109], "switch": [32, 126, 131, 132, 133, 454, 486, 597], "googletest": [32, 217, 372, 373, 599, 1229], "git": [32, 68, 113, 133, 170, 193, 201, 246, 250, 251, 305, 398, 403, 416, 860, 1191], "submodul": 32, "establish": [32, 33, 1081], "demo": [32, 124, 307, 308, 315, 516, 531, 549, 786, 801, 918, 945, 1010, 1047, 1051], "straightforward": [32, 222], "main": [32, 113, 471, 582, 583, 584, 823, 825, 827, 829, 1082], "convers": [32, 245, 261, 269, 271, 277, 281, 284, 302, 313, 319, 323, 329, 341, 345, 351, 357, 363, 393, 443, 470, 713, 721, 1121, 1135], "fix": [32, 188, 193, 201, 293, 294, 296, 313, 390, 652, 770, 816, 877, 878, 890, 891], "shortcom": 32, "softwar": [33, 133, 218, 315, 504, 505, 995, 1070, 1074, 1245], "craft": [33, 315, 505], "09": [33, 133, 195, 249, 259, 267, 333, 334, 335, 336, 337, 338, 371, 379, 380, 416], "00": 33, "15": [33, 232, 238, 275, 308, 311, 321, 322, 323, 361, 362, 363, 364, 398, 405, 410, 416, 914, 915], "introductori": [33, 305, 770, 1028], "word": [33, 284, 464, 465, 494, 497, 666, 669, 797, 806, 948, 1158, 1175], "engin": [33, 167, 168, 286, 995], "disciplin": 33, "coffe": 33, "break": [33, 232, 269, 457, 1125, 1128], "project": [33, 100, 113, 125, 133, 151, 153, 154, 161, 188, 194, 209, 250, 251, 265, 289, 294, 296, 298, 314, 316, 317, 318, 331, 333, 336, 339, 340, 343, 344, 347, 362, 366, 372, 380, 404, 405, 406, 410, 412, 504, 506, 514, 525, 585, 590, 599, 600, 661, 1178, 1218, 1224, 1249, 1256, 1264], "enter": [33, 50, 261, 676, 719, 755, 781, 790, 804, 890, 981, 1051, 1082, 1090, 1102, 1103, 1199, 1204, 1209], "framework": 33, "lunch": 33, "cornerston": 33, "45": 33, "keep": [33, 195, 950], "small": 33, "23": [33, 154, 158, 230, 256, 272, 278, 296, 304, 314, 325, 326, 416], "59": 33, "extrem": 33, "program": [33, 38, 50, 84, 112, 124, 140, 141, 203, 221, 227, 248, 251, 267, 277, 289, 290, 298, 301, 305, 315, 317, 318, 321, 322, 323, 327, 333, 336, 339, 340, 343, 344, 349, 355, 357, 361, 362, 365, 366, 373, 405, 416, 419, 420, 422, 458, 459, 460, 466, 492, 497, 502, 504, 535, 549, 582, 583, 584, 588, 644, 725, 805, 823, 825, 827, 829, 848, 900, 933, 944, 945, 987, 989, 1008, 1023, 1026, 1027, 1030, 1044, 1054, 1062, 1065, 1098, 1105, 1114, 1115, 1117, 1119, 1167, 1179, 1190, 1217, 1243, 1246, 1248, 1251, 1252, 1253, 1254, 1255, 1262], "session": [33, 144], "find": [34, 177, 193, 210, 512, 544, 603, 683, 701, 721, 834, 977, 1233], "crash": [34, 193], "If": [34, 37, 515, 648, 742, 757, 903, 993, 1019, 1020, 1089, 1215], "Not": [34, 50, 112, 116, 120, 121, 123, 126, 128, 132, 175, 201, 281, 290, 515, 524, 610, 612, 615, 683, 719, 736, 742, 764, 779, 780, 792, 801, 877, 903, 944, 1016, 1019, 1020, 1021, 1022, 1031, 1044, 1065, 1083, 1093, 1209, 1231], "found": [34, 612, 615, 683, 736, 1233], "state": [34, 191, 250, 770, 890, 892], "exist": [36, 124, 371, 610, 1016, 1019, 1020, 1022, 1106, 1215], "ar": [36, 190, 191, 269, 271, 284, 334, 490, 506, 519, 524, 648, 742, 770, 818, 819, 1049, 1059, 1088, 1097, 1109, 1214, 1233], "overwritten": 36, "done": [37, 113, 116, 120, 129, 130, 131, 354, 548, 710, 805], "twice": 37, "altern": [38, 379, 380, 514, 517, 751, 831], "csv": [38, 121, 133, 261, 278, 286, 289, 298, 301, 321, 322, 323, 327, 328, 343, 349, 350, 356, 361, 362, 365, 366, 506, 1147, 1148, 1149, 1180, 1181, 1182, 1183, 1188, 1199], "frontend": 38, "featur": [39, 41, 50, 301, 317, 318, 319, 321, 322, 327, 339, 343, 354, 379, 483, 506, 782, 1091, 1106, 1125, 1196, 1198, 1260], "search": [40, 146, 681, 683, 684, 687, 697, 701, 721, 735, 736, 737, 978, 1083, 1136, 1219], "By": [40, 141, 142, 217, 281, 313, 430, 519, 656, 700, 732, 735, 737, 759, 770, 781, 784, 785, 787, 792, 796, 804, 834, 835, 836, 1089, 1122, 1212, 1213, 1214, 1224], "index": [40, 232, 250, 269, 281, 329, 495, 768, 989, 1127, 1213, 1219, 1220, 1221], "backlog": 41, "need": [41, 390, 549, 764, 766, 1049, 1199], "chang": [41, 113, 381, 933, 944, 951], "Or": [41, 112, 506, 508, 509, 549, 753, 792, 1009, 1103, 1209], "Will": 41, "refactor": [41, 44, 185, 371, 416, 506, 602, 855, 856, 857, 895, 1181, 1183, 1188], "after": [41, 225, 256, 456, 906, 923, 1106], "backingstor": [42, 43, 45], "ha": [42, 43, 111, 379, 767], "too": [42, 43, 500, 509, 742, 786, 809], "mani": [42, 43, 277, 494, 510, 792, 823, 825, 827, 829, 970, 1053], "respons": [42, 43, 253, 552], "interfac": [42, 60, 77, 124, 129, 131, 161, 229, 277, 316, 354, 379, 385, 509, 531, 549, 552, 556, 564, 575, 582, 583, 598, 600, 630, 631, 632, 639, 640, 641, 715, 846, 918, 988, 989, 992, 994, 1102, 1200], "load": [45, 210, 481, 539, 865, 866, 993, 1037, 1065, 1100], "constructor": [45, 227, 277, 293, 294, 296, 302, 353, 372, 598, 628, 634, 645, 646, 647, 648, 649, 651, 652, 660, 661, 662, 663, 731, 746, 747, 748, 753, 755, 779, 799, 800, 1104], "bool": 46, "realli": [46, 742, 804], "glt": [47, 51, 52], "2023": [47, 51, 98, 99, 100, 101, 102, 116, 117, 120, 128, 132, 133, 296, 304, 305, 308, 309, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 363, 416], "pointless": [47, 49, 50, 51, 52, 53, 54, 55, 56, 1109], "blink": [47, 49, 50, 51, 52, 53, 54, 55, 56, 398], "With": [47, 49, 50, 51, 88, 110, 115, 151, 219, 250, 297, 313, 315, 317, 339, 343, 372, 380, 416, 499, 534, 548, 563, 577, 599, 669, 752, 805, 819, 831, 913, 914, 915, 978, 981, 986, 991, 1017, 1068, 1083, 1131, 1212, 1214, 1225, 1226, 1229], "python": [47, 49, 50, 51, 52, 53, 54, 55, 81, 86, 127, 188, 205, 209, 212, 221, 222, 224, 225, 226, 228, 230, 232, 235, 237, 240, 246, 247, 249, 252, 254, 256, 259, 260, 261, 262, 263, 265, 266, 268, 271, 272, 275, 278, 280, 283, 285, 286, 287, 288, 289, 291, 293, 294, 296, 298, 299, 300, 301, 302, 303, 308, 310, 311, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 379, 398, 401, 403, 416, 742, 770, 784, 791, 989, 991, 1091, 1094, 1098, 1113, 1114, 1115, 1117, 1119, 1121, 1129, 1140, 1144, 1189, 1190, 1191, 1204, 1205, 1207, 1217, 1218, 1219, 1220, 1221, 1260, 1261, 1262, 1263, 1264, 1265], "asyncio": [47, 49, 50, 51, 52, 53, 54, 55, 1143], "libgpiod": [47, 48, 49, 50, 51, 52, 53, 54, 55, 126], "raspberri": [47, 49, 50, 51, 188, 201, 229, 384, 416, 867, 888, 986, 990, 993, 1070, 1075, 1077, 1079, 1247], "pi": [47, 48, 49, 50, 51, 201, 229, 416, 867, 887, 888, 986, 993, 1078, 1079, 1247], "cours": [47, 49, 50, 51, 69, 136, 137, 187, 203, 205, 241, 250, 294, 296, 304, 333, 336, 400, 416, 505, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1260, 1261, 1262, 1264, 1265], "fedora": [48, 193, 200, 860, 861, 862, 863, 1080], "prepar": [48, 166, 193, 210, 225, 226, 228, 229, 230, 231, 241, 250, 265, 294, 296, 304, 380, 585, 661, 887], "tarbal": [48, 201], "On": [48, 50, 113, 250, 284, 286, 308, 312, 313, 317, 339, 343, 417, 515, 599, 601, 646, 676, 677, 681, 687, 791, 816, 931, 1011, 1012, 1013, 1018, 1023, 1027, 1052, 1080, 1146], "build": [48, 59, 139, 140, 188, 191, 193, 201, 217, 218, 251, 269, 375, 378, 528, 534, 535, 539, 585, 599, 660, 661, 662, 663, 855, 860, 861, 862, 863, 865, 887, 888, 993, 1011, 1012, 1013, 1023, 1066, 1067, 1068, 1070, 1074, 1078, 1079, 1080, 1082, 1083, 1084, 1138, 1233, 1256, 1258], "submiss": [49, 51, 55, 100, 141, 166, 1016], "biographi": [49, 51, 55], "abstract": [49, 51, 55, 298, 333, 336, 542, 557, 571, 924, 1011, 1012, 1013, 1102], "descript": [49, 51, 55, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 555, 642, 650, 664, 667, 670, 706, 711, 720, 722, 726, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 740, 782, 783, 807, 815, 820, 833, 837, 839, 983, 991, 992, 1048], "present": 50, "start": [50, 267, 293, 294, 296, 416, 549, 752, 764, 1083, 1207, 1231], "point": [50, 281, 284, 598, 644, 646, 654, 659, 661, 662, 663, 669, 752, 764, 816, 914, 915, 1078, 1121], "greet": [50, 340, 1153], "multipl": [50, 113, 227, 465, 506, 534, 853, 854, 855, 950, 1005, 1065, 1087, 1089, 1126, 1209, 1212, 1225], "background": [50, 195, 197, 643, 741], "thread": [50, 190, 192, 201, 317, 318, 373, 407, 620, 742, 808, 809, 814, 1033, 1034, 1035, 1040, 1042, 1049, 1052, 1098], "charact": [50, 419, 426, 429, 432, 439, 842, 843, 844, 845, 846, 847, 850, 851, 852, 1175], "base": [50, 201, 269, 277, 293, 294, 296, 298, 333, 336, 353, 372, 530, 547, 712, 713, 742, 755, 770, 790, 791, 1084, 1089, 1102], "gpio": [50, 77, 132, 133, 207, 229, 384, 385, 386, 387, 398, 867, 868, 995, 1027, 1028, 1029], "basic": [50, 61, 81, 117, 139, 140, 168, 188, 189, 201, 209, 221, 226, 228, 229, 230, 231, 235, 236, 240, 241, 250, 259, 262, 265, 272, 278, 283, 286, 289, 295, 301, 304, 308, 311, 318, 321, 322, 323, 325, 326, 327, 328, 329, 330, 333, 336, 339, 340, 341, 343, 344, 345, 349, 350, 351, 352, 355, 356, 357, 358, 361, 362, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 380, 393, 416, 460, 464, 467, 473, 500, 518, 534, 543, 544, 598, 601, 665, 670, 673, 676, 677, 679, 683, 686, 697, 703, 712, 749, 757, 791, 796, 800, 801, 802, 803, 838, 850, 851, 852, 913, 916, 917, 920, 921, 931, 970, 982, 987, 996, 1008, 1015, 1023, 1031, 1033, 1065, 1088, 1089, 1142, 1145, 1179, 1198, 1209, 1210, 1230, 1231, 1232, 1250], "valu": [50, 227, 242, 313, 314, 357, 393, 430, 486, 522, 662, 1027, 1051, 1123], "entir": [50, 313, 520, 860, 862, 948, 1005], "matrix": 50, "off": [50, 250], "bring": [50, 170, 373, 375, 403, 513, 715], "togeth": [50, 537, 715, 950], "modular": [50, 267, 460], "bit": [50, 322, 356, 446, 933, 944, 946, 1115, 1117], "row": [50, 313, 1208, 1212, 1213, 1214], "coroutin": [50, 296, 769, 770], "enough": [50, 644, 719], "sequenc": [50, 258, 261, 269, 301, 308, 311, 321, 322, 327, 328, 349, 350, 355, 356, 361, 362, 365, 366, 367, 439, 618, 681, 687, 1093, 1126, 1134], "loop": [50, 188, 209, 211, 222, 232, 237, 269, 271, 281, 284, 287, 293, 294, 296, 315, 317, 339, 343, 351, 353, 367, 372, 422, 455, 456, 494, 519, 521, 527, 586, 790, 831, 1030, 1094, 1125, 1128], "forev": 50, "strip": [50, 254, 271, 277, 390], "down": [50, 509], "factori": [50, 542, 557, 571, 601], "turn": [50, 1093], "Into": [50, 113, 311, 333, 336, 339, 375, 433, 513, 549, 586, 603, 678, 733, 742, 786, 831, 1181, 1183, 1188], "anti": [50, 814, 816], "clumsi": [50, 816], "decor": [50, 248, 298, 308, 311, 315, 317, 318, 333, 339, 340, 343, 547, 561, 575, 1088], "wrapper": [50, 123], "final": [50, 277, 293, 294, 296, 353, 372, 528, 530, 531, 654, 781, 923, 927, 1089], "playground": [50, 175], "cycl": [50, 116, 120, 121, 123, 126, 128, 132, 1034], "fast": [50, 227], "forward": [50, 296, 372, 379, 431, 495, 804, 1004], "ani": [50, 313, 522, 543, 598, 818, 1044], "cancel": 50, "goodby": 50, "2024": [52, 103, 104, 105, 106, 107, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 167, 168, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 416, 507], "talk": [53, 246, 322, 987, 994, 1191], "script": [53, 241, 326, 416, 525, 996, 1027, 1097, 1116, 1244], "gpiod": [53, 54, 77], "intro": [53, 136, 137, 139, 143, 144, 271, 305, 398, 636, 637, 638, 1029, 1086], "interrupt": [53, 190, 867, 868, 869, 870, 883, 892, 1030, 1049], "textual": [53, 54], "sdbu": [53, 54], "taskgroup": 54, "kajak": 57, "auf": [57, 198, 238], "donau": 57, "passau": 57, "kraftwerk": 57, "jochenstein": 57, "engelhartszel": 57, "gleich": 57, "nachher": 57, "schl\u00f6gen": 57, "aschach": 57, "ottensheim": 57, "linz": 57, "hauptplatz": 57, "traunm\u00fcndung": 57, "abwinden": 57, "asten": 57, "ennsm\u00fcndung": 57, "wallse": 57, "mitterkirchen": 57, "grein": 57, "ybb": 57, "persenbeug": 57, "melk": 57, "wachau": 57, "donauinsel": 57, "altenw\u00f6rth": 57, "tulln": 57, "greifenstein": 57, "c": [58, 59, 60, 61, 62, 88, 98, 99, 101, 102, 115, 141, 144, 151, 168, 201, 205, 215, 216, 232, 242, 250, 251, 267, 292, 293, 294, 296, 297, 305, 314, 316, 353, 354, 359, 372, 373, 375, 379, 380, 381, 382, 401, 407, 416, 424, 464, 465, 502, 508, 535, 541, 548, 590, 596, 607, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 652, 653, 656, 657, 658, 670, 676, 678, 715, 723, 739, 741, 742, 743, 746, 747, 779, 780, 784, 791, 792, 800, 809, 814, 819, 839, 989, 1009, 1027, 1030, 1135, 1238, 1239, 1240, 1241, 1242, 1243], "cmake": [59, 139, 140, 217, 218, 250, 305, 331, 332, 347, 348, 373, 374, 375, 376, 377, 378, 380, 416, 509, 517, 524, 533, 534, 535, 536, 585, 599, 1023, 1066, 1067, 1081, 1233, 1234, 1256], "oo": [61, 99, 133, 222, 248, 251, 267, 274, 277, 286, 289, 293, 294, 296, 298, 308, 311, 314, 316, 333, 336, 340, 344, 353, 354, 356, 372, 379, 407, 552, 589, 598, 620, 831, 1098], "graph": [63, 64, 65, 498, 500, 513, 724, 840, 888, 1149, 1150, 1154, 1163, 1177, 1184], "embed": [64, 65, 69, 87, 88, 98, 99, 103, 104, 114, 115, 134, 150, 151, 152, 155, 156, 165, 169, 207, 216, 305, 314, 316, 354, 359, 379, 380, 397, 399, 400, 412, 414, 416, 507, 824, 1245, 1246], "comput": [64, 65, 69, 87, 98, 99, 103, 104, 114, 134, 150, 151, 152, 155, 156, 165, 169, 395, 397, 399, 400, 412, 414, 493, 494, 598, 914, 915, 924], "current": [64, 65, 547, 819, 838, 951], "depend": [64, 65, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 218, 331, 333, 347, 374, 375, 377, 378, 384, 385, 386, 387, 389, 508, 512, 513, 515, 516, 517, 523, 530, 533, 536, 538, 540, 548, 552, 562, 585, 590, 607, 609, 620, 628, 686, 692, 696, 704, 706, 709, 714, 722, 723, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 744, 751, 758, 769, 793, 798, 824, 864, 865, 914, 915, 916, 920, 921, 935, 936, 937, 956, 961, 962, 965, 999, 1001, 1008, 1014, 1016, 1024, 1026, 1028, 1042, 1045, 1067, 1069, 1071, 1072, 1073, 1076, 1077, 1083, 1091, 1098, 1100, 1113, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1193, 1197, 1201, 1204, 1205, 1207, 1211, 1218, 1223, 1229, 1256], "ex": [66, 67, 73, 74, 75, 76, 82, 83], "race": [66, 67, 79, 373, 810, 877, 878, 885, 1035, 1036, 1100], "condit": [66, 67, 79, 373, 448, 456, 465, 524, 810, 814, 877, 878, 885, 1035, 1036, 1038, 1039, 1100], "avoid": [67, 79, 818], "goal": [67, 73, 74, 75, 76, 78, 79, 80, 82, 161, 177, 179, 180, 182, 210, 314, 316, 371, 1241, 1242], "outcom": [67, 73, 74, 75, 76, 228, 336, 400], "introduct": [68, 71, 136, 209, 293, 294, 296, 308, 311, 315, 316, 326, 331, 332, 347, 348, 353, 354, 370, 372, 373, 376, 401, 416, 418, 435, 493, 497, 536, 548, 556, 643, 740, 746, 790, 799, 808, 867, 887, 922, 1089, 1224, 1238, 1240, 1241, 1250, 1252, 1256], "stece": [69, 87, 114, 134, 150, 151, 152, 155, 156, 165], "2019": [69, 209, 212, 416], "overview": [69, 133, 153, 205, 305, 317, 318, 341, 353, 372, 373, 379, 380, 381, 382, 413, 416, 752, 759, 770, 794, 800, 814, 816, 823, 825, 827, 828, 829, 830, 838, 858, 912, 924, 950, 982, 993, 994, 995, 996, 1033, 1065, 1088, 1193, 1197], "knowledg": [69, 1256], "transfer": [69, 802], "detail": [69, 241, 245, 277, 284, 316, 363, 367, 393, 415, 490, 588, 677, 1120], "linux": [70, 71, 72, 88, 101, 102, 115, 148, 151, 153, 154, 168, 190, 195, 203, 205, 207, 214, 229, 231, 236, 241, 295, 304, 305, 325, 326, 369, 370, 401, 403, 416, 417, 864, 916, 917, 920, 921, 927, 985, 987, 991, 992, 993, 995, 1008, 1026, 1051, 1068, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255], "unix": [71, 101, 102, 213, 403, 418, 480, 490, 546, 1117], "hardwar": [72, 75, 76, 133, 153, 161, 180, 183, 305, 480, 990, 992, 993, 995, 1028, 1245], "manag": [72, 192, 239, 269, 289, 298, 308, 311, 314, 315, 317, 333, 336, 339, 340, 343, 366, 367, 379, 380, 381, 405, 406, 410, 504, 652, 711, 800, 818, 897, 898, 1067, 1087, 1106, 1218, 1245, 1264], "averag": [73, 74, 82, 546, 574, 823, 825, 827, 829], "sensor": [73, 74, 76, 82, 83, 85, 111, 129, 130, 141, 142, 163, 316, 340, 353, 373, 542, 543, 547, 549, 554, 572, 574, 575, 581, 585, 587, 588, 589, 600, 601, 602, 609, 800, 823, 825, 827, 829, 993, 995, 1023, 1177, 1179], "parallel": 74, "led": [75, 128, 398], "temperatur": [75, 76, 83, 128, 585, 588, 993, 995, 1023], "displai": [75, 82, 110, 118, 119, 124, 128, 158, 159], "sysf": [77, 132, 133, 229, 384, 398, 994, 1028, 1029], "multithread": [78, 207, 267, 293, 294, 296, 305, 339, 340, 343, 353, 372, 373, 381, 406, 413, 814, 815, 1062, 1098, 1099, 1101, 1254], "semaphor": [79, 190, 816, 1058, 1059], "mutex": [79, 190, 481, 812, 816, 877, 878, 879, 880, 892, 893, 1036, 1037, 1052, 1100], "commun": [80, 286, 373, 566, 814, 1038, 1059], "wait": [80, 141, 183, 814, 816, 903, 904, 905, 1031, 1038, 1058], "someth": [80, 222, 372, 644, 742, 816, 903, 904, 905, 1128], "simpl": [84, 227, 532, 644, 668, 719, 732, 890, 892, 918, 933, 1065, 1083, 1088, 1108, 1138, 1216, 1224], "web": [84, 85], "2020": [87, 195, 214, 216, 221, 222, 224, 225, 226, 228, 230, 231, 236, 416], "ss2022": [88, 96, 914, 915], "block": [88, 115, 151, 451, 666, 1010, 1011, 1012, 1013, 1014, 1063], "cross": [88, 99, 115, 143, 144, 151, 153, 201, 305, 374, 377, 378, 867, 887, 1066, 1068, 1069, 1070, 1071, 1072, 1076, 1078, 1079, 1081], "develop": [88, 99, 115, 116, 120, 121, 123, 126, 128, 132, 133, 142, 143, 144, 151, 153, 221, 236, 250, 253, 275, 286, 289, 305, 308, 310, 311, 314, 315, 316, 317, 318, 339, 340, 343, 359, 371, 373, 374, 377, 378, 401, 416, 864, 1068, 1069, 1076, 1242, 1245, 1249, 1259], "03": [89, 90, 91, 92, 93, 94, 133, 136, 137, 238, 241, 246, 265, 267, 275, 278, 295, 308, 309, 311, 314, 315, 331, 369, 370, 372, 373, 398, 416, 742, 743], "08": [89, 133, 153, 256, 259, 267, 280, 416], "homework": [89, 90, 91, 92, 95, 136, 138, 140, 142, 143], "until": [91, 140, 524], "21": [91, 92, 137, 278, 391, 398, 416], "exercis": [91, 100, 138, 141, 142, 144, 147, 168, 209, 210, 222, 225, 226, 230, 238, 239, 241, 250, 251, 261, 267, 284, 289, 293, 294, 296, 298, 301, 305, 309, 314, 316, 317, 321, 322, 327, 328, 329, 333, 336, 339, 340, 343, 349, 350, 356, 361, 362, 365, 366, 370, 373, 375, 378, 379, 380, 388, 390, 398, 404, 421, 423, 425, 427, 429, 431, 433, 445, 469, 478, 542, 543, 544, 546, 547, 548, 550, 551, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 618, 619, 620, 650, 660, 661, 662, 663, 664, 705, 706, 707, 714, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 804, 834, 835, 836, 837, 909, 916, 928, 934, 937, 938, 940, 942, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 976, 997, 998, 999, 1000, 1016, 1017, 1023, 1059, 1063, 1070, 1073, 1074, 1075, 1076, 1105, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188], "creat": [91, 113, 170, 186, 189, 193, 196, 217, 218, 599, 742, 809, 907, 913, 914, 915, 933, 938, 940, 942, 950, 954, 956, 967, 1000, 1017, 1019, 1020, 1022, 1058, 1059, 1078, 1080, 1085, 1178, 1196, 1198], "copi": [91, 222, 271, 306, 353, 380, 445, 603, 637, 645, 652, 656, 671, 677, 678, 682, 689, 742, 753, 755, 780, 785, 787, 791, 796, 800, 801, 818, 834, 901, 950, 952, 953, 956, 997, 998, 1005, 1016, 1130, 1209], "move": [91, 293, 294, 296, 314, 353, 354, 372, 373, 379, 380, 530, 598, 644, 654, 659, 751, 752, 753, 754, 755, 800, 802, 835, 867, 948, 955, 956, 971], "remov": [91, 287, 509, 526, 615, 616, 697, 700, 834, 956, 959, 967, 1059], "l": [91, 965, 970], "command": [91, 168, 518, 544, 559, 573, 865, 933, 944, 948, 965, 970, 986, 1080], "22": [93, 140, 228, 235, 240, 327, 328, 329, 343, 344, 345, 346, 416], "24": [93, 125, 133, 235, 267, 297, 317, 318, 319, 320, 339, 340, 342, 343, 344, 345, 346, 416], "ku": 93, "28": [94, 148, 149, 209, 226, 267, 315, 404, 416], "01": [95, 100, 103, 133, 259, 265, 267, 268, 269, 298, 304, 349, 350, 351, 361, 362, 363, 364, 365, 366, 367, 368, 378, 398, 408, 409, 416, 914, 915], "log": [96, 172, 191, 225, 226, 229, 230, 238, 240, 241, 243, 246, 250, 252, 256, 259, 268, 280, 289, 398, 411, 412, 416, 914, 915, 923], "ws2022": [97, 98, 99], "plan": [97, 133, 161, 278, 401], "evolut": 97, "fh": [98, 99, 113, 169, 585, 586, 587, 588, 589, 660, 661, 662, 663, 723, 935, 936, 961], "joanneum": [98, 99, 169], "question": [98, 99, 105, 106, 107, 108, 109, 180, 248, 413, 506, 532, 585, 723, 935, 936, 939, 941, 961, 1050, 1101], "about": [98, 264, 269, 281, 299, 302, 308, 312, 329, 336, 351, 356, 357, 363, 366, 367, 375, 380, 539, 747, 784, 978, 1082, 1134, 1137, 1138, 1139], "inherit": [98, 208, 248, 277, 298, 333, 336, 379, 380, 556, 630, 631, 632, 712, 713, 714, 717, 742, 1018, 1098, 1106], "memori": [98, 148, 192, 213, 239, 367, 379, 381, 470, 473, 477, 479, 481, 488, 495, 614, 624, 625, 626, 652, 710, 711, 819, 858, 871, 872, 873, 874, 900, 901, 902, 920, 921, 925, 1058, 1059, 1245, 1251], "leak": [98, 614, 625, 652, 802], "std": [98, 133, 145, 242, 251, 267, 293, 294, 296, 353, 354, 372, 373, 380, 544, 603, 608, 609, 619, 637, 659, 660, 661, 662, 663, 671, 677, 678, 679, 680, 690, 697, 698, 708, 721, 725, 735, 738, 742, 745, 747, 754, 790, 791, 792, 796, 798, 801, 802, 803, 805, 806, 811, 812, 813, 814, 816, 817, 818, 819, 822, 824, 828, 829, 830, 831, 835, 838], "vector": [98, 145, 242, 603, 619, 637, 644, 654, 659, 677, 678, 679, 680, 694, 738, 747, 792, 822, 1044], "ye": [99, 1204], "No": [99, 191, 229, 519, 524, 564, 742, 759, 805, 1089, 1215, 1231], "lab": [100, 147], "exam": [100, 101, 102, 103, 104, 105, 106, 114, 115, 133, 148, 149, 166, 249, 262, 264, 398, 413, 598, 914, 915, 916, 1050, 1101], "17": [100, 133, 139, 145, 261, 262, 264, 268, 269, 275, 292, 299, 305, 321, 322, 323, 361, 362, 363, 364, 416, 658], "ss2023": [101, 102, 115], "06": [101, 102, 140, 142, 145, 146, 147, 148, 149, 249, 250, 267, 296, 327, 328, 329, 354, 372, 373, 374, 375, 376, 377, 398, 416, 507], "30": [101, 102, 207, 216, 226, 231, 278, 379, 380, 416], "handout": [101, 148], "concept": [101, 102, 137, 148, 296, 326, 353, 370, 758, 759, 762, 763, 764, 767, 768, 794, 922, 1198], "toolchain": [101, 102, 139, 144, 148, 201, 251, 331, 347, 887, 1065, 1066, 1068, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1256], "solv": [102, 1037, 1198, 1220, 1227], "26": [103, 267, 297, 304, 317, 318, 319, 320, 339, 340, 342, 398, 416], "02": [104, 105, 133, 141, 267, 272, 286, 305, 410, 416, 927], "ws2023": [105, 106, 125, 133], "sampl": [105, 133, 264, 805, 889, 945, 1148, 1169, 1224, 1249, 1262, 1265], "why": [105, 109, 192, 193, 201, 269, 504, 529, 552, 644, 647, 651, 652, 799, 805, 832, 860, 906, 932, 987, 994, 1002, 1006, 1033, 1087, 1132], "const": [108, 488, 617, 634, 654, 656, 729, 730, 742, 757, 791, 796, 818, 819], "paramet": [109, 222, 269, 271, 315, 357, 394, 432, 468, 471, 474, 488, 506, 516, 522, 525, 755, 759, 794, 805, 887, 1019, 1066, 1132, 1203], "pass": [109, 398, 522, 525, 656], "which": [109, 552, 1022, 1065], "One": [109, 248, 287, 313, 381, 382, 390, 416, 446, 465, 504, 506, 507, 658, 792, 805, 900, 987, 1005, 1040, 1065, 1082], "better": [109, 190, 421, 506, 818, 897, 1112, 1204], "question2": 109, "solid": [110, 111, 191, 504], "hysteresi": [110, 166], "id": [111, 290, 318, 345, 925, 945, 1006, 1034, 1046], "Be": [112, 251, 543, 547, 548, 652, 656, 710, 803, 808], "virtual": [112, 148, 213, 286, 307, 380, 630, 631, 632, 716, 718, 719, 823, 824, 825, 827, 828, 829, 830, 831, 832, 858, 920, 921, 925, 988, 1058, 1178, 1226, 1227, 1228, 1251], "version": [112, 201, 506, 528, 535, 537, 742, 770, 1019, 1065], "our": [113, 217, 995], "ece21": 113, "fork": [113, 133, 894], "pull": [113, 133, 549], "request": [113, 133, 506, 846, 848, 867, 869, 1029], "upstream": [113, 133, 170], "sync": [113, 858], "onli": [113, 287, 313, 470, 757, 805, 860, 1031, 1160], "onc": [113, 398], "updat": [113, 133, 195], "It": [113, 193, 221, 313, 375, 378, 402, 470, 514, 528, 715, 944, 1006, 1019, 1020, 1065], "Its": [113, 1103], "fetch": 113, "your": [113, 213, 306, 307, 485, 764, 934], "clone": [113, 201, 217, 599], "merg": 113, "push": [113, 509], "2021": [114, 233, 235, 238, 240, 241, 243, 246, 249, 250, 251, 252, 256, 259, 261, 262, 264, 265, 267, 390, 391, 398, 401, 402, 403, 404, 405, 406, 407, 416], "two": [114, 284, 469, 582, 583, 644, 662, 747, 1059, 1155, 1156, 1165, 1166], "semest": 114, "support": [114, 229, 241, 745, 883], "finish": [115, 179, 251, 906], "boil": [116, 117, 118, 119, 125, 133, 530], "pot": [116, 117, 118, 119, 125, 133, 530], "begin": [116, 359, 379, 418, 524, 792], "standup": [116, 117, 118, 119, 120, 124, 128, 132], "record": [116, 117, 118, 119, 120, 124, 128, 132, 232, 1185, 1187], "20": [116, 120, 128, 132, 133, 147, 278, 292, 296, 314, 316, 327, 328, 329, 353, 355, 356, 357, 358, 390, 398, 416, 507, 1080], "requir": [116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 132, 141, 166, 255, 286, 333, 336, 380, 400, 513, 516, 542, 563, 566, 585, 586, 587, 591, 592, 593, 594, 595, 596, 597, 725, 764, 1016, 1023, 1147, 1148, 1169, 1178, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188], "implement": [116, 120, 121, 123, 124, 126, 128, 132, 133, 141, 160, 163, 166, 277, 340, 353, 384, 390, 549, 556, 566, 571, 581, 582, 583, 584, 588, 596, 601, 602, 646, 647, 652, 654, 657, 659, 717, 742, 753, 845, 848, 867, 903, 993, 1087, 1093, 1109, 1169], "futur": [116, 120, 121, 123, 126, 128, 132, 407, 816], "part": [116, 120, 121, 123, 126, 128, 132, 278, 1233], "Of": [116, 120, 121, 123, 126, 128, 132, 313, 322, 333, 336, 356, 371, 375, 379, 416, 514, 519, 520, 522, 524, 534, 598, 644, 675, 676, 716, 755, 787, 792, 802, 804, 814, 834, 835, 836, 914, 915, 923, 1016, 1027, 1053, 1067, 1089, 1092, 1112, 1209, 1215], "integr": [117, 119, 122, 512, 746, 762], "statu": [118, 996, 1034, 1044], "report": 118, "full": [119, 253, 379], "iot": 119, "logger": [120, 121, 122, 123, 373, 530, 549], "sink": [121, 123, 133, 340, 831], "column": [121, 313, 1209, 1210, 1212, 1213, 1214, 1215], "configur": [121, 194, 196, 201, 511, 514, 949, 988, 993, 995, 1030], "mqtt": [123, 127, 133, 277, 340, 343, 512, 1185, 1207], "mosquitto": 123, "infrastructur": 124, "percentagedisplai": 124, "composit": [124, 546, 556, 560, 574, 838], "breadboard": 124, "acrobat": 124, "group": [125, 153, 250, 251, 265, 298, 305, 317, 318, 333, 336, 339, 340, 343, 344, 362, 373, 404, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 642, 650, 664, 667, 670, 711, 720, 740, 782, 783, 807, 815, 820, 833, 837, 839, 925, 933, 942, 983, 991, 992, 1048], "task": [125, 133, 404, 1049], "datalogg": [125, 133, 512, 513], "peripher": [125, 133, 153], "client": [125, 253, 580, 993, 1207], "subscrib": [127, 1207], "via": [128, 133, 198, 199, 395, 995], "pwm": [128, 153, 154, 994], "control": [128, 162, 164, 286, 301, 308, 311, 321, 322, 327, 328, 349, 350, 355, 356, 361, 362, 365, 366, 549, 770, 986, 994], "onewir": [130, 585, 601, 602, 995, 1023], "05": [133, 140, 142, 143, 144, 246, 249, 280, 286, 289, 292, 295, 321, 322, 323, 325, 326, 390, 391, 398, 416], "vo": 133, "recap": [133, 139, 142, 143, 153, 237, 250, 251, 265, 298, 318, 333, 336, 340, 341, 637, 799, 1065, 1092], "polymorph": [133, 251, 354, 379, 380, 591, 592, 593, 594, 595, 596, 597, 600, 716, 806, 826], "collabor": 133, "necessarili": 133, "first": [133, 222, 251, 371, 419, 512, 589, 805, 848, 849, 883, 1226], "round": [133, 567, 581], "organiz": 133, "design": [133, 167, 168, 297, 315, 317, 318, 333, 336, 354, 372, 379, 416, 432, 489, 504, 548, 552, 562, 714, 831, 1242], "At": 133, "larg": 133, "templat": [133, 145, 250, 267, 316, 379, 380, 607, 620, 621, 622, 623, 639, 640, 641, 668, 669, 670, 676, 709, 756, 759, 764, 766, 794, 828], "map": [133, 145, 237, 242, 245, 248, 251, 267, 277, 341, 393, 608, 609, 637, 697, 698, 790, 791, 858, 1006, 1031], "07": [133, 251, 267, 298, 331, 332, 378, 398, 402, 416], "renam": [133, 971], "relev": 133, "gl\u00fchwein": 135, "trinken": 135, "quiz": [136, 370, 723, 920, 921, 935, 936, 961, 1071, 1072], "wsl": [136, 305, 314, 316, 927, 1080], "o": [137, 140, 148, 191, 203, 248, 258, 264, 271, 272, 277, 284, 286, 287, 319, 323, 326, 328, 357, 363, 366, 367, 370, 390, 426, 871, 929, 930, 931, 954, 967, 1010, 1011, 1012, 1013, 1014, 1015, 1024, 1025, 1031, 1047, 1140], "shell": [137, 138, 241, 305, 326, 370, 395, 416, 919, 931, 933, 949, 961, 962, 968, 1001, 1018, 1027, 1044, 1244], "cont": [137, 316], "d": [137, 316, 549], "usag": [137, 313, 318, 353, 473, 477, 500, 510, 532, 585, 600, 646, 682, 683, 689, 716, 725, 745, 749, 757, 801, 802, 803, 819, 846, 890, 931, 970, 988, 995, 1019, 1065, 1145], "permiss": [138, 305, 326, 370, 933, 935, 936, 937, 943, 947, 966, 998], "incl": 138, "secur": [138, 200, 229, 305, 326, 395, 1001, 1005], "makefil": [139, 218, 599, 855, 865, 1066, 1067, 1082], "outlook": [139, 311, 353], "nativ": [139, 140, 1068, 1071, 1072, 1074], "io": [140, 261, 277, 305, 309, 345, 351, 366, 493, 871, 872, 928, 1029], "next": [140, 188, 289, 493, 778, 1231], "time": [140, 196, 208, 313, 373, 516, 531, 817, 818, 895, 896, 925, 1040, 1153], "driven": [141, 142, 221, 250, 275, 286, 289, 317, 318, 339, 340, 343, 371, 373, 416, 1054, 1259], "suit": [141, 725, 1231], "definit": [141, 371, 428, 430, 432, 440, 458, 460, 461, 464, 510, 658, 742, 823, 825, 827, 829, 846, 1051, 1129], "lib": [141, 725], "see": [141, 380, 471, 512, 513, 514, 515, 518, 519, 522, 524, 526, 528, 531, 648, 649, 652, 653, 654, 721, 725, 819, 918, 924, 925, 930, 931, 987, 994, 1011, 1012, 1013, 1015, 1031, 1044, 1047, 1051, 1053, 1066, 1068, 1133, 1198], "also": [141, 189, 380, 471, 512, 513, 514, 515, 518, 519, 522, 524, 526, 528, 531, 648, 649, 652, 653, 654, 721, 725, 819, 918, 924, 925, 930, 931, 987, 994, 1011, 1012, 1013, 1015, 1031, 1044, 1047, 1051, 1053, 1066, 1068, 1133, 1198], "But": [141, 372, 381, 801, 825, 1020, 1256], "27": [144, 249, 267, 283, 333, 334, 335, 338, 347, 348, 416], "livecod": 144, "": [144, 190, 229, 446, 470, 504, 507, 513, 515, 524, 530, 531, 644, 721, 736, 742, 745, 805, 851, 856, 875, 887, 903, 933, 949, 1002, 1031, 1052, 1065, 1094, 1098, 1141], "view": [144, 296, 745, 792, 794, 795, 851, 913], "pars": [144, 254, 522, 725, 1119, 1142, 1169], "line": [144, 390, 433, 465, 518, 520, 647, 725, 931, 948, 1118, 1160, 1171, 1175], "etc": [144, 179, 237, 245, 248, 277, 287, 290, 323, 725, 964, 993, 1021, 1118, 1169], "passwd": [144, 725, 944, 964, 1021, 1169], "auto": [145, 293, 294, 296, 353, 742, 757, 790, 791, 1038, 1225], "19": [146, 222, 224, 228, 262, 278, 397, 398, 412, 414, 416], "sort": [146, 232, 284, 603, 681, 686, 687, 690, 1213], "ss2024": 148, "process": [148, 190, 192, 210, 305, 326, 885, 886, 919, 920, 921, 925, 926, 1044, 1045, 1046, 1049, 1053], "schedul": [148, 191, 326, 408, 409, 413, 920, 921, 925, 1034, 1047, 1048, 1050, 1051, 1052], "summer": [150, 333, 336, 401], "syllabu": [152, 165, 249, 262], "lehrveranstaltungsbeschreibung": [152, 165], "umfang": [152, 165], "lehrveranstaltung": [152, 165], "inhalt": [152, 165, 209, 212, 1062, 1238], "inhaltlich": [152, 165], "voraussetzungen": [152, 165, 399], "ziel": [152, 165], "pr\u00fcfung": [152, 165], "beurteilungsschema": [152, 165], "bewertung": [152, 165], "leistungen": [152, 165], "bewertungsschl\u00fcssel": [152, 165], "hilfsmittel": [152, 165], "bei": [152, 165, 221, 232, 416], "schriftlichen": [152, 165], "pr\u00fcfungen": [152, 165], "wiederholungsm\u00f6glichkeiten": [152, 165], "anwesenheitsvorgab": [152, 165], "zusatzinformationen": [152, 165], "empfohlen": [152, 165, 399, 1239, 1240, 1247, 1258, 1259], "fachliteratur": [152, 165, 399], "einzelnen": [152, 165], "lehreinheiten": [152, 165], "kickoff": [153, 298, 317, 318, 333, 336, 340, 343], "i2c": [153, 154, 542, 993, 995], "spi": [153, 154, 990], "winter": 155, "adc": 157, "ssd1305": 158, "ol": [158, 644, 791], "waveshar": 159, "lcd": 159, "st7789": 159, "fact": [159, 160, 162, 163, 164, 315, 869, 932, 1103, 1106], "gyroscop": 160, "bno055": 160, "yai": 161, "algorithm": [161, 267, 284, 308, 316, 353, 354, 470, 603, 620, 637, 671, 672, 676, 677, 686, 690, 1196, 1198], "motor": [162, 164, 986], "btn9960lv": 162, "proxim": 163, "vl53l1x": 163, "out": [284, 317, 318, 549, 647, 675, 676, 1053, 1067, 1085, 1127], "There": [190, 269, 504, 519, 524, 652, 808, 903, 995, 1005, 1010, 1021, 1022], "servo": 164, "tool": [167, 168, 250, 323, 326, 341, 370, 400, 912, 979, 982, 993, 1256, 1258], "laboratori": [167, 168], "environ": [168, 221, 286, 294, 296, 305, 307, 314, 315, 316, 405, 526, 919, 1046, 1114, 1178, 1226, 1227, 1228, 1236], "type": [168, 211, 237, 261, 264, 274, 277, 284, 293, 294, 296, 298, 299, 313, 315, 333, 336, 337, 341, 353, 363, 372, 394, 436, 438, 439, 443, 450, 475, 485, 490, 531, 535, 648, 676, 697, 698, 742, 743, 746, 757, 759, 796, 818, 819, 824, 826, 827, 858, 867, 963, 970, 1036, 1087, 1089, 1102, 1109, 1132, 1198], "pointer": [168, 250, 251, 267, 293, 294, 296, 314, 316, 354, 372, 373, 380, 467, 468, 470, 472, 488, 620, 637, 652, 655, 656, 672, 673, 674, 676, 677, 680, 700, 742, 757, 797, 798, 799, 800, 802], "arrai": [168, 210, 232, 242, 419, 428, 432, 470, 472, 482, 495, 625, 676, 678, 686, 731, 746, 757, 796], "recommend": [168, 195, 225, 400, 1225, 1256], "filesystem": [168, 520, 546, 838, 1059], "graz": [169, 212, 214, 221, 259, 416], "branch": [170, 452], "track": [170, 1082], "submit": [170, 906, 907], "appli": [170, 193, 1215], "patch": [170, 193], "packag": [172, 179, 195, 201, 217, 298, 315, 333, 339, 391, 887, 1070, 1074, 1097, 1146, 1218, 1219, 1220, 1221, 1222, 1226, 1264], "pypi": [172, 246, 286, 1146, 1191, 1220, 1222], "gaphor": 173, "decad": 173, "manual": [173, 507, 645, 648, 652, 805, 829, 830, 948, 1009, 1027, 1030, 1094], "model": [173, 267, 1196, 1198], "librari": [173, 250, 262, 267, 286, 314, 316, 322, 432, 534, 537, 538, 539, 607, 666, 676, 709, 720, 725, 750, 1009, 1083, 1084, 1191, 1251], "hochk\u00f6nig": 174, "k\u00f6nigsjodl": 174, "klettersteig": 174, "tour": [174, 298, 742], "werfen": 174, "ostpreussenh\u00fctt": 174, "matrashau": 174, "yet": [175, 277, 381, 382, 416], "pending_xref": 176, "audio": [177, 181], "chip": [177, 994], "bringup": [177, 180, 995], "get": [178, 189, 218, 269, 354, 520, 816, 875, 900, 1027], "debian": [178, 179], "kernel": [178, 179, 180, 184, 191, 193, 236, 416, 500, 851, 860, 861, 862, 863, 864, 865, 879, 881, 887, 888, 920, 921, 924, 990, 993, 994, 1249], "config": [178, 514, 887, 995], "within": 178, "qemu": [178, 188], "extract": [178, 184, 248, 586, 1181, 1183, 1188, 1196], "boot": [178, 189, 200, 416, 924, 995], "yocto": [180, 184, 188, 984], "everyth": [180, 264, 537, 918, 930, 1010], "like": [180, 353, 644, 1044], "i2": 181, "kontron": 181, "smarc": 181, "modul": [181, 222, 246, 248, 286, 287, 299, 315, 322, 339, 340, 391, 398, 500, 509, 512, 599, 788, 855, 860, 862, 863, 865, 866, 881, 887, 994, 1097, 1188, 1191, 1199, 1225, 1233], "dirti": [182, 1256], "upgrad": 182, "path": [182, 201, 248, 258, 264, 271, 357, 366, 367, 520, 540, 838, 919, 972, 973, 1078, 1083, 1178, 1233], "step": [182, 188, 544, 547, 549, 585, 676, 770, 834, 835, 1066, 1067, 1082, 1102, 1127], "intel": 184, "bsp": 184, "homepag": 185, "openshot": 186, "seo": 187, "sitemap": 187, "meta": 187, "todo": [188, 215, 218, 229, 235, 385, 386, 387, 404, 505, 517, 620, 621, 624, 627, 630, 633, 636, 639, 844, 848, 856, 888, 1054, 1057, 1061, 1143, 1206, 1230, 1235], "beagleboard": 189, "how": [189, 192, 200, 204, 221, 251, 269, 434, 473, 498, 499, 500, 515, 528, 725, 792, 802, 931, 944, 947, 1094, 1198], "repair": 189, "nand": 189, "40w": 189, "x": [189, 251, 634], "loader": 189, "u": [189, 507, 1006], "bootabl": 189, "mmc": 189, "sd": [189, 229], "card": [189, 229, 307, 915], "port": [190, 1004], "alwai": [190, 269, 289, 780, 1020], "wai": [190, 248, 269, 277, 494, 1053, 1098, 1117], "signal": [190, 213, 480, 814, 1038, 1061, 1062, 1063, 1064], "aren": 190, "t": [190, 246, 525, 792, 1191], "queue": [190, 232, 814, 904, 1039, 1058, 1059], "timer": [190, 895, 897, 898, 1013, 1049], "poll": [190, 814, 816], "event": [190, 848, 867, 877, 895, 896, 900, 1030, 1038, 1054, 1056], "dispatch": [190, 828, 829, 830], "realtim": [190, 192, 409, 413, 416, 879, 1051, 1052, 1245], "save": [191, 802], "disk": [191, 229, 918], "life": [191, 803, 831, 1034], "gentoo": [191, 887], "rant": [191, 210, 535, 1067], "swap": [191, 284, 469, 805, 931, 1156], "tmpf": 191, "instanc": [191, 248, 274, 277], "syslog": 191, "var": 191, "mountpoint": 191, "logrot": 191, "ram": 191, "thing": [191, 251, 272, 293, 294, 296], "left": [191, 446, 656], "p": [192, 654], "suck": [192, 867], "count": [192, 801, 894, 931, 1175], "consumpt": 192, "stack": [192, 232, 253, 477, 755], "conclus": [192, 892, 986, 994], "pthread": 192, "experi": 192, "100": 192, "default": [192, 222, 269, 271, 293, 294, 296, 353, 372, 394, 598, 646, 648, 649, 660, 661, 662, 663, 731, 779, 800, 818, 819, 947, 1063, 1132, 1213], "eat": 192, "limit": [192, 1093], "than": [192, 605, 1109], "my": [192, 195, 290, 419, 420, 506, 855, 927, 944], "could": [192, 507, 803], "take": [192, 471, 802, 1112], "doe": [192, 524, 669, 931, 944, 947, 1016, 1019, 1020], "differ": [192, 222, 372, 470, 674, 676, 818, 819, 950, 1005], "rpm": [193, 195, 219, 860], "prerequisit": [193, 201, 218, 317, 339, 343, 400, 862, 1146, 1244, 1245, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1260, 1261, 1264, 1265], "rpmbuild": 193, "directori": [193, 217, 218, 367, 405, 506, 520, 526, 530, 534, 599, 838, 914, 915, 933, 938, 939, 940, 941, 950, 951, 952, 959, 966, 967, 970, 971, 977, 1005, 1016, 1066, 1067, 1087, 1224], "download": [193, 238, 240, 398, 403, 602, 1065, 1078, 1081, 1082, 1084], "For": [193, 195, 201, 278, 281, 305, 308, 310, 311, 314, 316, 359, 416, 427, 507, 519, 528, 529, 572, 646, 656, 742, 770, 791, 816, 923, 1010, 1078, 1079, 1080, 1090, 1108, 1178, 1242], "domain": [194, 213, 311, 817], "subdomain": 194, "www": 194, "apex": 194, "microsoft": 195, "team": 195, "screen": [195, 981], "share": [195, 537, 539, 797, 801, 804, 835, 914, 915, 942, 1058, 1059, 1082, 1083, 1251], "x11": 195, "reviv": 195, "meh": 195, "annoy": 195, "re": [195, 1089], "regist": [195, 494], "itself": 195, "autostart": 195, "browser": [195, 253], "deploi": 196, "gener": [196, 200, 209, 218, 222, 227, 254, 261, 264, 269, 271, 277, 296, 298, 302, 308, 311, 315, 317, 318, 322, 329, 331, 339, 340, 341, 343, 347, 351, 357, 374, 375, 377, 378, 380, 455, 507, 604, 645, 648, 652, 770, 771, 773, 774, 779, 840, 995, 1002, 1029, 1066, 1067, 1092, 1093, 1094, 1095, 1096, 1121, 1161, 1174, 1256], "public": [196, 248, 530, 531, 646, 914, 915, 940, 941, 1002], "repo": [196, 217], "jfasch": [196, 945], "home": [196, 919, 950, 966, 1006], "deploy": [196, 331, 347, 537, 887, 1256], "bigbluebutton": 197, "onlin": 197, "articl": [197, 198, 200, 201], "tl": 197, "dr": 197, "host": [197, 241, 520, 887, 1080], "check": [197, 524, 526, 532, 564, 933, 994, 995, 1038, 1075, 1136, 1157], "els": [197, 264, 271, 277, 287, 317, 339, 343, 357, 367, 428, 452, 453, 454, 514, 651, 665, 971, 989, 1002, 1089, 1125, 1128], "traunstein": 198, "zierlersteig": 198, "kaltenbachwildni": 198, "anstieg": 198, "zierlerberg": 198, "rinn": 198, "abstieg": 198, "grintovec": 199, "plan\u0161arsko": 199, "jezero": 199, "\u010de\u0161ka": 199, "ko\u010da": 199, "anreis": 199, "hinauf": 199, "runter": 199, "zusammenfassung": 199, "brick": 200, "1399": 200, "dell": 200, "xp": 200, "happen": [200, 1031], "virtualbox": 200, "enrol": 200, "machin": [200, 229, 250, 308, 395, 997, 998, 1023, 1192, 1198], "owner": [200, 933], "kei": [200, 242, 290, 357, 393, 700, 701, 948, 1000, 1002], "mok": 200, "pair": [200, 742, 1000, 1002], "stage": 200, "reboot": 200, "diagnost": [200, 993], "crosstool": [201, 1068, 1079, 1080], "ng": [201, 1068, 1079, 1080], "prebuilt": [201, 1215], "repositori": [201, 412, 599, 609], "releas": [201, 535, 869, 879, 1100], "glibc": 201, "gcc": [201, 481, 494, 1065], "simplest": [201, 522, 770, 775, 813, 1086, 1109, 1225, 1231], "stdio": 201, "h": [201, 514, 773, 981], "iostream": 201, "distribut": [201, 1146], "afterword": [201, 371, 750], "post": [202, 210, 1058], "qualivis": [206, 416], "z\u00fcrich": [206, 416], "2013": [206, 416], "fragen": [206, 239], "antworten": 206, "kursnotizen": 207, "2015": [207, 416], "userspac": [207, 846, 848, 900, 901, 902, 993, 994, 1030], "can": [207, 228, 251, 286, 471, 543, 547, 598, 656, 742, 802, 987, 988, 989, 991], "bu": [207, 228, 549, 988, 991, 995], "driver": [207, 236, 307, 416, 864, 865, 883, 993, 994, 1249], "beispiel": [207, 222, 281, 977], "heizungssteuerung": 207, "string": [208, 209, 215, 222, 232, 239, 242, 245, 248, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 286, 287, 290, 299, 302, 306, 309, 323, 329, 341, 345, 351, 357, 363, 367, 372, 390, 392, 393, 419, 432, 433, 439, 445, 518, 519, 520, 524, 535, 706, 707, 708, 721, 725, 753, 754, 818, 819, 1121, 1134, 1135, 1136, 1172, 1215], "k\u00f6nnen": [208, 232, 245], "viel": 208, "split": [208, 271, 277, 351, 390, 1136, 1196], "mutabl": [208, 211, 222, 232, 239, 245, 258, 261, 269, 271, 274, 277, 284, 287, 290, 302, 309, 319, 323, 329, 341, 345, 351, 363, 367, 1130, 1132], "immut": [208, 211, 222, 239, 245, 258, 269, 274, 277, 284, 290, 299, 306, 309, 323, 351, 357, 1130], "kann": [208, 253], "man": [208, 253, 948], "nicht": [208, 222, 232], "oft": 208, "genug": 208, "wiederholen": 208, "dictionari": [208, 222, 232, 237, 239, 242, 245, 253, 254, 258, 261, 264, 269, 271, 274, 277, 281, 284, 287, 290, 299, 302, 309, 319, 323, 329, 341, 345, 351, 357, 363, 367, 393, 1086, 1090, 1103, 1122, 1138, 1159, 1186], "hart": 208, "indizieren": 208, "weich": 208, "nettfragen": 208, "shortcut": [208, 1108, 1138], "objektorientiert": 208, "programmierung": [208, 233, 234, 243, 244, 252, 268, 270, 280, 282, 416], "date": [208, 254, 313, 381, 382, 403, 416], "delta": 208, "datetim": [208, 227, 248, 254, 309], "bissl": 208, "potschert": [208, 232], "schreiben": [208, 232], "scho": 208, "formen": 208, "represent": [208, 1111], "__str__": [208, 1106, 1111], "subprocess": [208, 287], "enumer": [208, 232, 237, 239, 245, 248, 269, 277, 284, 302, 319, 341, 351, 363], "zip": [208, 248, 351], "comprehens": [208, 232, 254, 261, 264, 269, 271, 277, 281, 302, 308, 309, 311, 341, 351, 357, 363, 1086, 1092, 1137], "exec": [208, 274, 290, 298, 302, 329, 351, 1090], "eval": [208, 209, 245, 274, 284, 302, 329, 341], "umgebend": 208, "context": [208, 269, 308, 311, 315, 885, 886, 906, 1087, 1090], "eigen": 208, "json": [208, 230, 237, 253, 254, 264, 281, 284, 290, 298, 299, 334, 337, 1187], "individualtrain": [209, 224, 416], "tage": [209, 416], "beginnend": [209, 416], "51": 209, "58": 209, "while": [209, 222, 232, 242, 261, 269, 271, 274, 277, 284, 287, 309, 351, 357, 363, 367, 455, 456, 527, 885, 890, 891, 1125, 1152, 1176], "94": [209, 222], "121": 209, "famou": [209, 497], "convert": [209, 313, 1108, 1187], "overload": [209, 267, 277, 298, 333, 345, 620, 646, 653, 654, 659, 800, 1109, 1111], "getter": [209, 598, 654], "setter": 209, "listcomprehens": 209, "express": [209, 222, 237, 254, 261, 287, 290, 302, 351, 357, 448, 450, 546, 564, 578, 749, 978, 1092, 1151, 1210], "global": [209, 222, 232, 290, 340, 434, 440, 461, 463, 477, 508, 627, 628, 629, 657, 658, 659, 1007, 1085, 1131], "scope": [209, 232, 340, 522, 526, 813, 816, 1085, 1131], "variabl": [209, 232, 245, 248, 258, 261, 269, 277, 284, 287, 299, 319, 323, 345, 351, 357, 363, 367, 393, 420, 434, 437, 440, 461, 463, 469, 488, 519, 522, 524, 526, 564, 628, 658, 785, 814, 919, 1007, 1038, 1039, 1046, 1120, 1131, 1156], "closur": [209, 232, 298, 315, 317, 318, 333, 339, 343, 784, 1085, 1087], "between": [209, 662, 1196], "walkthrough": 210, "reduc": [210, 445], "imag": [210, 229, 1080], "eight": 210, "color": 210, "pil": 210, "numpi": [210, 212, 239, 246, 286, 289, 308, 311, 322, 328, 340, 345, 361, 366, 367, 416, 1191, 1196], "cluster": 210, "excurs": [210, 286, 784], "matplotlib": [210, 239, 258, 290, 328, 345, 351, 1145, 1196], "now": [210, 222], "come": [210, 246, 537, 726, 1065, 1191], "let": 210, "kmean": 210, "result": [210, 498, 1203], "properti": [210, 248, 277, 378, 531, 540, 1110], "center": 210, "restor": 210, "alpha": 210, "back": [210, 379, 694, 1187], "rgba": 210, "random": [211, 248, 281, 286, 575, 588, 596, 1211], "except": [211, 248, 264, 267, 274, 277, 289, 290, 298, 308, 311, 315, 316, 333, 336, 349, 355, 361, 365, 409, 620, 666, 667, 736, 785, 792, 816, 818, 1089], "demonstr": 211, "dict": [211, 261, 269, 271, 277, 284, 357, 363, 1108], "access": [211, 250, 428, 481, 482, 520, 646, 654, 661, 728, 818, 819, 823, 825, 827, 828, 829, 830, 838, 871, 900, 901, 902, 1103, 1110, 1137, 1138], "indic": [211, 239], "slice": [211, 222, 237, 248, 271, 277, 281, 302, 323, 329, 925, 1127, 1212, 1214], "protocol": [211, 222, 237, 258, 261, 264, 269, 271, 274, 277, 287, 302, 315, 319, 323, 341, 345, 351, 357, 770, 986, 1052, 1094, 1096], "standardthemen": 212, "hauptthema": 212, "numerik": 212, "lesen": [212, 232], "mat": 212, "l\u00f6sen": 212, "uni": 212, "\u00fcbung": [212, 215, 232], "propos": 213, "posix": [213, 814, 1033, 1042, 1055, 1057, 1058, 1059, 1060], "ipc": [213, 214, 416, 1055, 1057, 1058, 1059, 1060, 1251], "socket": [213, 989, 1012], "applic": [213, 507, 1049], "compani": 213, "thought": 213, "handgestrickt": 215, "um": 215, "fallen": 215, "lustvol": 215, "erleiden": 215, "programmier": 216, "baden": [216, 416], "w\u00fcrttemberg": [216, 416], "kursinform": 216, "kursaufbau": 216, "kursverlauf": [216, 224], "tag": [216, 235, 239, 243, 246, 252, 268, 280, 281], "hand": 217, "privat": [217, 248, 277, 530, 531, 646, 717, 780, 914, 915, 938, 939], "argh": 219, "visual": [219, 246, 262, 498, 538, 1191, 1217, 1226], "studio": [219, 246, 262, 1191, 1217, 1226], "flatpak": 219, "issu": [219, 1085], "m": 219, "grundlagen": [221, 232, 233, 234, 243, 244, 246, 247, 252, 256, 260, 263, 266, 268, 270, 280, 282, 285, 288, 291, 300, 303, 324, 416], "firma": [221, 416], "dai": [221, 225, 226, 228, 229, 230, 240, 241, 250, 251, 256, 259, 261, 262, 265, 272, 305, 308, 311, 314, 315, 316, 317, 318, 322, 326, 328, 333, 339, 340, 343, 344, 350, 354, 366, 370, 371, 373, 375, 378, 380, 381, 382, 416, 791, 1153, 1241], "languag": [221, 251, 267, 293, 294, 296, 301, 321, 322, 327, 353, 354, 372, 375, 378, 416, 483, 502, 518, 523, 782, 1044, 1091, 1113, 1115, 1260, 1261, 1265], "advanc": [221, 225, 228, 237, 240, 249, 265, 275, 278, 289, 298, 301, 311, 317, 318, 319, 320, 321, 322, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 361, 362, 363, 364, 374, 375, 377, 378, 416, 483, 517, 524, 1191, 1239, 1262], "schulung": 222, "18": [222, 224, 250, 269, 289, 301, 302, 316, 332, 355, 356, 357, 358, 376, 398, 416, 1080], "sy": [222, 248, 918, 1119], "multilin": [222, 254, 258, 351, 393, 518, 1134], "docstr": [222, 269, 281, 284, 287, 309, 341, 363, 393], "datentypen": [222, 232, 239, 252, 268, 280], "ausflug": [222, 271], "variablen": [222, 232, 239, 252, 268, 271, 280, 290], "deren": 222, "unterbau": 222, "zuweisung": 222, "mit": [222, 232, 237, 250, 416, 977], "hilf": 222, "tupl": [222, 227, 232, 237, 239, 245, 248, 258, 261, 264, 269, 271, 277, 281, 284, 287, 293, 294, 296, 299, 302, 309, 319, 323, 345, 351, 353, 357, 363, 372, 392, 393, 742, 791, 796, 1122, 1130, 1199], "unpack": [222, 227, 232, 237, 239, 248, 264, 269, 281, 287, 293, 294, 296, 299, 309, 345, 351, 353, 363, 372, 392, 393, 742, 791, 796, 1078, 1199], "integ": [222, 232, 237, 242, 245, 269, 271, 281, 284, 290, 302, 309, 329, 341, 345, 351, 357, 367, 393, 438, 485, 490, 726, 1100, 1121, 1130], "unendlich": 222, "breit": 222, "divis": [222, 232], "floor": [222, 232], "konvertierung": 222, "konstruktoren": [222, 239], "welchen": 222, "typ": [222, 232], "typen": 222, "besser": 222, "laufzeitverhalten": [222, 232], "geeigneter": 222, "datenstrukturen": [222, 232, 233, 253, 271], "boolean": [222, 232, 258, 261, 269, 271, 277, 281, 284, 351, 357, 442, 524, 546, 1123, 1151, 1210], "short": [222, 261, 277, 442, 556, 867, 1065], "circuit": [222, 261, 277, 442], "evalu": [222, 261, 277, 518, 524], "warum": [222, 232], "sind": [222, 232], "mehr": [222, 237], "\u00fcber": [222, 232, 237, 245, 253], "rang": [222, 227, 232, 239, 248, 254, 258, 261, 269, 271, 274, 281, 284, 287, 293, 294, 296, 299, 309, 323, 329, 340, 353, 357, 363, 367, 372, 675, 676, 742, 770, 790, 791, 792, 793, 794, 795, 1092, 1129, 1145], "foli": 222, "161": 222, "shallow": [222, 271, 1130], "deep": [222, 271, 1130], "dem": 222, "deepcopi": 222, "funktionen": [222, 232, 233, 237], "gotcha": [222, 865, 895, 1053], "90": 222, "ff": 222, "lokal": [222, 232, 290], "92": 222, "uniq": [222, 1173, 1174], "punkt": [222, 232], "zusammengefasst": 222, "hier": 222, "sch\u00f6nere": 222, "al": [222, 232, 281], "comprens": 222, "125": 222, "lesbarkeit": 222, "perform": [222, 245, 496, 792], "review": [222, 251], "pprint": 222, "praktisch": 222, "debug": [222, 535, 885, 1088], "datentransform": 222, "127ff": 222, "complet": [222, 372, 507, 512, 513, 514, 515, 528, 530, 620, 948], "collect": [222, 271, 274, 299, 1065, 1108, 1209, 1222], "namedtupl": [222, 1108], "parameter\u00fcbergab": [222, 232], "variabel": 222, "lang": 222, "argumentlisten": 222, "erst": 222, "klass": 222, "weiterf\u00fchrend": [224, 246], "workspac": [225, 226, 228, 230], "core": [225, 262, 305, 1066], "special": [225, 344, 973], "tutori": [225, 228, 240, 246, 256, 286, 289, 322, 1191], "parti": [225, 256], "v": [227, 232, 239, 245, 248, 269, 274, 277, 281, 284, 290, 306, 309, 319, 323, 334, 379, 380, 392, 393, 430, 439, 451, 454, 458, 460, 535, 537, 639, 640, 641, 654, 801, 809, 826, 865, 885, 886, 892, 893, 1009, 1047, 1118, 1121, 1129, 1140, 1219], "return": [227, 290, 357, 474, 522, 752, 753, 755, 770], "orient": [227, 277, 290, 298, 301, 302, 315, 317, 318, 321, 322, 327, 333, 336, 339, 340, 343, 344, 349, 355, 361, 362, 365, 366, 386, 504, 644, 714, 1105], "addit": [228, 644, 654, 659, 721, 1106], "brought": 228, "thoma": 228, "cloud": [229, 354, 395], "particip": 229, "desk": 229, "interlud": [229, 867], "bloodi": 229, "wild": [229, 278, 333, 336, 339, 379, 380, 416], "watchdog": 229, "25": [230, 240, 249, 256, 267, 272, 283, 325, 326, 333, 334, 335, 338, 416], "grundlegend": [232, 233], "sprachelement": [232, 233], "syntax": [232, 239, 245, 277, 287, 309, 323, 351, 363, 393, 524, 785, 794, 1118], "semantik": 232, "einr\u00fcckung": 232, "ihren": 232, "\u00e4ndern": 232, "kommentar": 232, "sprach": 232, "standarddatentypen": 232, "elementar": [232, 233], "beliebig": 232, "gro\u00df": 232, "vergleichsoperatoren": 232, "pr\u00e4zedenz": 232, "vor": 232, "strichrechnung": 232, "modulo": 232, "un\u00e4rer": 232, "negat": [232, 1210], "erzwingen": 232, "auch": 232, "zeichenketten": 232, "raw": [232, 239, 254, 258, 271, 277, 299, 329, 1103, 1134, 1186], "f": [232, 254, 269, 287, 329, 351, 1135], "konvertierungen": 232, "pr\u00e4zendenzregeln": 232, "literal": 232, "primit": [232, 373, 808, 1092], "konstanten": 232, "operatoren": 232, "ausdr\u00fcck": 232, "operatorrangfolgen": 232, "\u00fcbungen": 232, "zwei": 232, "vertauschen": 232, "kontrollstrukturen": [232, 233, 252, 268, 269, 280], "anweisungen": 232, "folgen": 232, "bedingungen": 232, "verzweigungen": 232, "bedingt": 232, "anweisung": 232, "verzweigung": [232, 233], "geschachtelt": 232, "mehrfach": 232, "fallauswahl": 232, "schleifen": [232, 233], "z\u00e4hlergesteuert": 232, "kopfgesteuert": 232, "schleif": [232, 237], "fu\u00dfgesteuert": 232, "jf": 232, "continu": [232, 267, 269, 308, 316, 318, 340, 350, 370, 375, 457, 1125, 1128], "sequenti": [232, 237, 269, 281, 351, 367, 683, 684, 691, 692, 1092, 1126], "datatyp": [232, 237, 239, 242, 245, 254, 258, 261, 264, 269, 271, 277, 281, 284, 286, 287, 299, 301, 302, 308, 309, 311, 319, 321, 322, 323, 327, 328, 329, 339, 341, 343, 345, 349, 350, 351, 355, 356, 357, 361, 362, 363, 365, 366, 367, 393, 420, 470, 473, 519, 1092, 1121, 1122, 1126], "schnell\u00fcbersicht": 232, "sprunganweisungen": 232, "endlosschleifen": 232, "ben\u00f6tigt": 232, "compound": [232, 242, 254, 258, 261, 264, 269, 271, 277, 281, 284, 287, 299, 319, 323, 329, 341, 345, 357, 363, 367, 473, 1122], "Suche": 232, "eindimensional": 232, "tupel": 232, "listen": [232, 237, 271, 393], "revers": [232, 688, 689, 706, 707, 708, 1109], "mengen": [232, 242], "anhand": [232, 252, 268, 280, 416], "stapel": 232, "schlangen": 232, "versuch": 232, "zur\u00fcck": 232, "hybrid": 232, "supergscheit": 232, "methoden": [232, 233], "prozeduren": [232, 233], "funktionspoint": 232, "so": [232, 245, 248, 258, 290, 314, 504, 514, 644, 742, 755, 757, 784, 1212], "heisst": [232, 237], "funktionsobjekt": 232, "primzahlenbeispiel": 232, "funktion": 232, "laufzeitfehl": 232, "existiert": 232, "zuweisen": 232, "fehlerfal": 232, "peter": 232, "unterprogramm": 232, "wert": 232, "referenzen": 232, "r\u00fcckgabewert": 232, "oder": [232, 399], "inner": [232, 1085], "standardbibliotheken": 232, "built": [232, 315, 648, 746, 865, 1068, 1089], "funktionalit\u00e4ten": 232, "\u00fcberblick": [233, 243, 252, 268, 280], "struktur": 233, "herdt": 233, "kapitel": 233, "ganz": [237, 269], "kurz": 237, "mehreren": 237, "returnwerten": 237, "bzw": [237, 399], "containerdatentypen": 237, "untypisiert": 237, "l\u00f6schen": 237, "begriff": 237, "zufal": 237, "regular": [237, 250, 251, 287, 290, 302, 351, 357, 978], "hallo": 239, "speicher": 239, "sch\u00fctze": 239, "ich": 239, "mich": 239, "davor": 239, "aber": 239, "gemischten": 239, "wiederholung": [239, 274], "objektidentit\u00e4t": 239, "statement": [239, 248, 451, 465, 1085, 1087, 1100, 1118, 1124, 1203, 1206], "operationen": 239, "verloren": 239, "interpol": 239, "mittel": [239, 245], "scipi": 239, "29": [241, 315, 349, 350, 351, 365, 366, 367, 368, 398, 406, 416], "window": [241, 258, 314, 316, 417, 927], "einleitung": 242, "number": [242, 245, 248, 269, 281, 284, 393, 522, 721, 770, 843, 850, 851, 1016, 1093, 1109, 1112, 1121, 1129, 1130, 1152, 1155, 1165, 1166, 1208, 1212, 1213, 1236], "javascript": [242, 281], "java": 242, "mathematisch": 242, "assign": [245, 271, 277, 284, 345, 363, 367, 393, 447, 564, 645, 651, 652, 752, 753, 755, 800, 818, 1085, 1120, 1127, 1131, 1208], "fun": [245, 284, 298, 1120], "arithmet": [245, 250, 269, 281, 393, 420, 441, 470, 564, 578, 637, 659, 672, 673, 677, 680, 1109, 1121], "complex": [245, 284, 393, 1236], "nur": 245, "sum": [245, 726], "weiter": 245, "dynamisch": 245, "evaluierung": 245, "beginn": [246, 258, 281, 286, 298, 322, 1191, 1262], "scienc": [246, 272, 286, 289, 322, 339, 340, 341, 343, 363, 365, 1191], "don": [246, 792, 1191], "batteri": [246, 393, 1136, 1191], "confer": [246, 322, 1191], "zipfil": 248, "member": [248, 277, 646, 651, 652, 658, 728, 729, 746, 819], "attribut": [248, 274, 290, 353, 925, 1029, 1103, 1110, 1216], "protect": [248, 717, 792, 877], "posit": [248, 644, 1083, 1112, 1142], "keyword": [248, 269, 293, 294, 296, 353, 372, 394, 487, 488, 1085, 1112, 1132], "argument": [248, 269, 277, 298, 333, 394, 471, 518, 524, 1016, 1044, 1088, 1112, 1119, 1132, 1142], "mix": [248, 261, 329, 785, 1167, 1168], "yield": [248, 264, 269, 287, 315, 329, 1092, 1095], "filter": [248, 277, 306, 307, 313, 341, 351, 604, 605, 606, 792, 1210], "rest": [248, 343, 354, 1015], "nonetyp": [248, 261], "none": [248, 269], "recurs": [248, 473, 652, 749, 838, 950], "fibonacci": [248, 770, 772, 1093, 1161], "sever": 248, "same": [248, 628, 653, 658, 784, 1131, 1225], "oserror": 248, "errno": [248, 1007], "platform": 248, "assert": [248, 290, 341], "assertionerror": 248, "predefin": [249, 465, 524, 1236], "stream": [249, 858, 930, 1140], "pcap": [249, 262, 264], "programmieren": [250, 416], "massacr": 250, "kick": 250, "encapsul": [250, 490, 650, 816], "flow": [250, 280, 286, 301, 308, 311, 321, 322, 327, 328, 349, 350, 355, 356, 361, 362, 365, 366, 459], "standard": [250, 262, 267, 271, 286, 314, 316, 322, 438, 485, 535, 607, 666, 676, 709, 720, 722, 750, 930, 1015, 1140, 1191, 1233], "stl": [250, 620, 636, 637, 638, 668, 676, 677, 705], "kid": 251, "recapitul": 251, "some": [251, 269, 274, 313, 316, 326, 524, 785, 816], "jump": [251, 470], "complic": [251, 569, 1082], "toolbox": 251, "databas": [251, 343, 727, 865, 1147, 1149, 1184, 1200, 1201, 1203], "gtest": [251, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237], "workflow": 251, "smart": [251, 267, 293, 294, 296, 316, 354, 372, 373, 380, 620, 797, 798, 799, 800], "datenbank": 253, "showcas": 253, "kommt": 253, "db": 253, "aufgab": 253, "formulieren": 253, "damit": 253, "dies": 253, "http": [253, 341], "verbindung": 253, "schicken": 253, "jetzt": 253, "schickman": 253, "weg": 253, "vom": [253, 416], "server": [253, 1207], "php": 253, "j": 253, "empfangen": 253, "nun": 253, "muessen": 253, "verwandlen": 253, "liter": [254, 393, 564, 816, 817], "quot": [254, 258, 284, 518, 519, 1199], "friend": [254, 812], "sinc": [254, 287, 293, 294, 296, 381, 658, 1135], "sap": [255, 308, 310, 311, 312, 313, 360, 416], "export": 255, "solut": [255, 462, 484, 510, 534, 542, 543, 544, 547, 548, 553, 562, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 652, 678, 708, 746, 748, 755, 779, 780, 789, 824, 921, 925, 944, 1004, 1006, 1010, 1072, 1082, 1084, 1100, 1227], "terminologi": [258, 326, 370, 922, 1063, 1198], "31": [259, 267, 275, 365, 366, 367, 368, 416], "numer": [259, 361], "ai": 259, "mountain": 259, "common": [261, 494, 506, 691, 1093, 1102], "wtf": [261, 1013, 1063], "creativ": [264, 913, 1106], "shift": [264, 446, 659], "hmmm": 265, "undefin": [267, 519, 526, 1131], "behavior": [267, 794], "again": [267, 315, 326, 370, 654, 741, 968, 1109, 1244], "repeat": [267, 960], "quickli": 267, "functor": [267, 620, 684, 784, 786, 787, 805], "unifi": 267, "uml": [267, 556], "todai": [267, 1085], "associ": [267, 449, 556, 695, 696], "dynam": [267, 298, 317, 318, 319, 339, 343, 477, 624, 625, 626, 677, 710, 711, 826, 843, 873, 874, 1083, 1103, 1112], "alloc": [267, 353, 494, 634, 678, 703, 704, 711, 822, 824, 858, 881, 1025, 1092], "week": [267, 1247], "zahl": 269, "miscellanea": 269, "brace": [269, 293, 294, 296, 353, 354, 372, 744, 745, 746, 747, 1210], "singl": [269, 518, 534, 552, 1005, 1065, 1231], "hour_of_dai": 269, "membership": [269, 1126], "best": 269, "doc": [271, 341], "ident": [271, 334], "datenypen": 271, "libarari": 271, "exampl": [271, 277, 281, 394, 426, 430, 465, 467, 487, 490, 519, 522, 546, 585, 669, 694, 746, 747, 765, 766, 767, 768, 794, 803, 911, 930, 932, 933, 982, 1006, 1010, 1015, 1018, 1038, 1063, 1068, 1087, 1102, 1122, 1132, 1135, 1136, 1137, 1138, 1160, 1202, 1210, 1215, 1224, 1225], "chainmap": 271, "dequ": 271, "suchalgorithmen": 271, "pitfal": [271, 314, 317, 394, 519, 524, 648, 716, 742, 770, 787], "fromkei": [271, 284], "join": [271, 277, 351, 366, 367, 1136, 1164], "lstrip": [271, 390], "rstrip": [271, 390], "sequentiel": 274, "konstant": 274, "suchzeit": 274, "metaprogram": 274, "everywher": [274, 290, 652, 1090], "defaultdict": [274, 299], "hello": [277, 287, 419, 774, 865, 866, 1116], "world": [277, 419, 426, 865, 866, 1116], "blahblah": [277, 281, 284, 287, 351, 676, 1115], "commandlin": [277, 305, 343, 384, 389, 471, 499, 506, 525, 948, 1004, 1027, 1063, 1119, 1142], "lifetim": [277, 434, 463, 787, 801, 809, 1200], "preview": [277, 539], "explicit": [277, 428, 644, 655, 747, 785, 787, 800, 813, 1100], "max": 277, "iteratoren": 277, "generatoren": 277, "ordereddict": 277, "duck": [277, 293, 294, 296, 333, 336, 353, 757, 827, 1102], "resolut": 277, "order": [277, 628, 1089, 1109], "mro": 277, "super": 277, "__bases__": 277, "__mro__": 277, "self": [277, 652, 1104], "call": [277, 464, 468, 494, 498, 500, 620, 890, 1009, 1015, 1046, 1052, 1112], "mangl": [277, 653], "udemi": 277, "claus": [277, 317, 339, 343, 1089], "lambda": [277, 293, 294, 296, 323, 353, 354, 372, 381, 742, 783, 784, 785, 786, 805], "oppos": 277, "discuss": [280, 317, 318, 404, 428, 430, 814, 890, 895, 903], "chart": 280, "interact": [281, 329, 520, 1116, 1168], "1st": 281, "explan": [281, 341], "preced": [281, 284, 449, 1121], "float": [281, 284, 341, 1121], "einschub": 281, "vergleich": 281, "filterketten": 281, "zen": 281, "datensatz": 281, "notat": 281, "letzt": 281, "letzten": 281, "infinit": [284, 1093], "long": [284, 742], "comparison": [284, 524, 644, 690, 721, 838, 912, 1109, 1121], "digit": [284, 398, 1158], "english": [284, 400, 1158], "determin": [284, 934, 1155, 1165, 1166], "maximum": [284, 1155, 1165, 1166], "duplic": [284, 534, 668, 1018], "encod": [284, 286, 287, 298, 308, 328, 329, 345, 398, 1204], "nest": [287, 460, 473, 522], "itertool": 287, "chain": [287, 890], "destructor": [287, 628, 634, 649, 713, 718, 799], "prient": 289, "standesregist": 289, "sqlite3": [289, 513, 514, 515, 516, 1147, 1203], "xml": [289, 1216], "tree": [289, 860, 887, 926, 952, 959, 998, 1005, 1046], "projektabschlusstag": 289, "person": [290, 555, 754], "anyth": 290, "defin": [290, 510, 648, 785, 819, 1089], "own": [290, 506, 754, 764, 925], "lookup": [290, 526, 612, 613], "vorbesprechung": 292, "legend": 292, "neuerungen": 292, "seit": 292, "2011": [292, 293, 294, 296, 381, 416], "ausblick": 292, "metadata": [293, 294, 296, 970], "thank": [293, 294, 296], "you": [293, 294, 296, 757], "readablil": [293, 294, 296], "writabl": [293, 294, 296, 1016], "err": [293, 294, 296, 353, 372, 379, 380, 700, 757, 791, 796], "bind": [293, 294, 296, 353, 372, 791, 796, 804, 805, 1203], "without": [293, 294, 296, 353, 515, 657, 678, 753, 757, 1025], "simpli": [293, 294, 296, 354, 1006], "deserv": [293, 294, 296], "ag": [293, 294, 296, 732], "overrid": [293, 294, 296, 353, 372, 789], "delet": [293, 294, 296, 353, 372, 625, 693, 780, 948], "strongli": [293, 294, 296, 353, 372, 743], "enum": [293, 294, 296, 353, 372, 486, 743, 855], "deleg": [293, 294, 296, 353, 372, 748], "nullptr": [293, 294, 296, 353, 372, 756], "rvalu": [293, 294, 296, 353, 372, 373, 751, 754, 755], "skeleton": [294, 296, 314, 316, 661, 914, 915], "perfect": [296, 372, 379, 444, 486, 804], "architectur": [297, 374, 377, 416, 504, 742, 781, 887], "pattern": [297, 315, 317, 318, 372, 379, 416, 548, 562, 1093, 1242], "mondai": 297, "tuesdai": 297, "wednesdai": 297, "forc": [298, 443], "front": [298, 317, 339, 1103], "seri": [298, 301, 321, 322, 327, 328, 349, 350, 356, 361, 362, 365, 366, 620, 1177, 1184, 1209, 1253], "miss": [298, 370, 746, 1019], "piec": [298, 370], "go": [298, 379, 1018, 1199], "livehack": [298, 307, 506, 549, 751, 850, 1131, 1219, 1226], "Such": [299, 721], "noob": 301, "quick": 305, "uart": [305, 918], "susi": 305, "untold": [305, 308, 314, 315, 318, 354], "whet": [306, 307], "appetit": [306, 307], "panda": [306, 308, 309, 311, 313, 315, 328, 340, 345, 351, 361, 365, 366, 1196, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215], "regex": 306, "pipelin": 307, "add": [307, 510, 512, 513, 532, 598, 848, 895, 906, 1062, 1106, 1208], "categori": 307, "payment": 307, "select": [307, 313, 315, 986, 993, 1055, 1209, 1210, 1212, 1214, 1231], "uncategor": 307, "dataset": [308, 312, 313, 1195, 1197], "origin": [308, 311, 668, 786, 787, 897, 1199], "automat": [308, 311, 331, 347, 440, 463, 779, 828, 1256], "cleanup": [308, 311, 895, 906], "learn": [308, 366, 367, 400, 1192, 1198], "conversiosn": 309, "specif": [311, 1040, 1179], "usecas": 313, "drop": [313, 544, 792], "nan": 313, "datafram": [313, 1196, 1209, 1213], "isna": 313, "to_datetim": 313, "dated": 313, "workabl": 313, "modifi": [313, 481, 488, 519, 585, 654, 818, 1037, 1100, 1130, 1215], "increas": 313, "price": 313, "particular": 313, "store": [313, 481, 549, 1037, 1100], "readabl": [313, 484, 816, 1021], "combin": [313, 447, 563, 564, 577], "prefer": [314, 316], "ubuntu": [314, 316, 1080], "under": [314, 316, 950, 1011, 1087], "unsupport": 314, "heavi": [314, 316, 924], "weight": [314, 316], "resourc": [314, 380, 400, 652, 711, 800, 813, 818, 883], "r": [314, 967, 1005], "littl": [314, 372, 373, 455, 506, 1115], "concurr": 314, "far": [314, 809, 1198], "fixtur": [315, 601, 838, 1224, 1225, 1235, 1236, 1237], "omin": [315, 1088], "warm": 316, "resolv": 316, "insid": [317, 318, 658, 754, 755], "construct": [317, 339, 343, 1108, 1125], "emphasi": [317, 339, 343], "recoveri": [317, 318, 339, 340, 343], "broader": 317, "sens": 317, "morn": [318, 322, 326, 328, 340, 350, 354, 366, 370, 373, 375, 378, 380], "pytest": [318, 366, 1223, 1224], "awaken": [322, 350, 366, 373, 375, 378], "bash": [326, 370, 416, 968, 1244], "bourn": [326, 370, 968, 1244], "inspect": [326, 370, 976, 979], "wakeup": [326, 328, 354, 370, 380, 1051, 1053], "redirect": [326, 370, 928, 929, 930, 931, 954, 967, 1018], "pipe": [326, 370, 794, 913, 928, 929, 931, 932, 980, 982], "archiv": [326, 370, 909, 910, 912, 913, 1080, 1081, 1084], "compress": [326, 370, 909, 910, 912, 913], "network": [326, 566, 881, 882, 987, 1012, 1255], "least": [326, 1231], "day2": 328, "interpret": [329, 498, 524, 550, 563, 564, 577, 578, 1168], "len": 329, "abl": 329, "callabl": [329, 805], "sandbox": [333, 336], "equal": [334, 598, 644, 659, 660, 661, 662, 663, 683, 1109], "spoiler": 336, "annot": 337, "multiprocess": 339, "idea": 339, "veri": [340, 789, 822, 1216], "leftov": 340, "yesterdai": 340, "ifi": 340, "toolcas": [340, 353, 372, 530, 760, 761, 762], "arg": [340, 1088], "kwarg": [340, 1088], "includ": [340, 464, 530, 540, 1136], "receiv": [340, 1059], "udp": 340, "datagram": [340, 987], "compositesink": 340, "timestamp": [340, 895], "org": [341, 398], "aaarghhh": 341, "expresss": 341, "constexpr": [353, 372, 749], "constinit": [353, 372], "constev": [353, 372], "want": [353, 507, 528, 716, 742, 753, 757, 780, 855, 860, 1020, 1106], "erasur": [353, 824, 826], "stuff": [354, 398, 490, 924, 958], "classic": [354, 806, 823, 831], "semant": [354, 373, 379, 751, 752, 753, 754, 755, 1059], "kochtopf": 354, "roundup": 354, "still": [354, 547, 742, 1087, 1092], "weird": 357, "exchang": [357, 987], "schuetzen": 357, "pathlib": [357, 367], "regexen": 357, "distil": 357, "py": 357, "infin": [363, 1093], "listdir": [366, 367], "option": [366, 374, 377, 379, 381, 452, 499, 508, 509, 510, 514, 515, 913, 948, 950, 970, 978, 993, 1005, 1199], "scikit": [366, 367], "struct": [367, 473, 474, 489, 644, 733, 796], "cell": 367, "wuerfeln": 367, "prime": [367, 1162, 1170, 1176], "misc": 367, "crap": 367, "datatyo": 367, "einlesen": 367, "sep": 367, "putti": 370, "toward": 371, "exact": 371, "thorough": [372, 373, 416], "initializer_list": [372, 544, 745, 747], "shared_ptr": [372, 373, 380, 798, 801, 835], "unique_ptr": [372, 373, 380, 798, 801, 802], "similar": [372, 950], "saniti": [372, 484, 492, 506], "sensorconfig": 373, "thereof": 373, "lock": [373, 813, 816, 879, 892], "make": [373, 416, 514, 515, 528, 537, 599, 741, 780, 871, 914, 915, 993, 1066, 1067, 1258], "safe": [373, 814, 1063], "sketch": 373, "latch": 373, "mylatch": 373, "coverag": [374, 377, 1092], "analysi": [374, 377, 499], "multiplatform": [374, 377], "consider": [374, 377, 742, 1049], "much": [375, 500, 509, 786, 1087], "variou": 375, "kind": 375, "ride": [379, 380, 416], "old": [379, 380, 489, 658, 676, 742, 755, 764, 765, 794], "syntact": [379, 759, 1088], "goodi": [379, 1067], "everybodi": 379, "know": [379, 485, 515], "overengin": [379, 506, 658], "2nd": 380, "filesensor": 380, "elimin": [380, 494, 802, 1160], "candatasink": 380, "variant": [380, 438, 547, 553, 742, 819, 828, 829, 830, 831, 1059], "approach": [380, 486, 508, 509, 510], "unknown": [381, 382, 416], "fundament": [381, 1113, 1261, 1265], "low": 381, "hang": 381, "fruit": 381, "cool": [381, 418, 1135], "checker": 383, "blinklicht": [384, 385, 386, 387], "electron": [384, 986], "aspect": 384, "circuitri": 384, "header": [384, 462, 508, 511, 658, 993, 1180], "pinout": [384, 993], "unittest": [387, 1225, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1259], "ece19": 388, "g2": [390, 915], "big": [390, 416, 875], "swoop": 390, "size": [390, 438, 617, 767, 964], "chunk": 390, "str": [390, 1111], "byte": 392, "btw": 393, "wertebereich": 393, "sidenot": [394, 1132], "pure": [394, 716, 718, 1132], "beauti": [394, 500, 918, 995, 1132], "login": [395, 923, 996], "formalit\u00e4ten": 396, "ec": [397, 412, 414, 914, 915], "daili": 398, "fail": [398, 1020, 1224, 1231, 1233], "reiter": 398, "argpars": [398, 1119, 1142], "deutsch": [399, 416], "lehrinhalt": 399, "lernergebniss": 399, "lv": 399, "verpflichtend": 399, "lernressourcen": 399, "instrument": 399, "art": 399, "vermittlung": 399, "begleitbedingungen": 399, "pr\u00fcfungsmethod": 399, "beurteilungskriterien": 399, "mode": [400, 535, 933, 986, 1019, 1116, 1140], "deliveri": [400, 1062, 1063], "co": 400, "requisit": 400, "assess": 400, "criteria": [400, 1047], "whose": 402, "fault": 402, "newcom": 403, "jjjj": 406, "sidewai": [407, 658, 805, 816, 1088, 1093], "past": [416, 465], "entwickl": 416, "fortgeschritten": 416, "wiener": 416, "neustadt": 416, "einf\u00fchrung": 416, "ober\u00f6sterreich": 416, "pictur": [416, 875], "obersteiermark": 416, "korn": 416, "salzburg": 416, "ausgew\u00e4hlt": 416, "themen": 416, "2018": 416, "raum": 416, "n\u00fcrnberg": 416, "oberb\u00fcren": 416, "schweiz": 416, "2017": 416, "m\u00fcnchen": 416, "lowlevel": 416, "refresh": 416, "programmiererstandpunkt": 416, "2016": 416, "wien": 416, "workshop": 416, "bodenseo": 416, "hemmenhofen": 416, "bodense": 416, "systemnah": 416, "2014": 416, "mathia": 416, "kettner": 416, "siemen": 416, "braunschweig": 416, "intermedi": [416, 575, 1085, 1102], "scratch": 416, "lpd": 416, "hannov": 416, "unter": 416, "k\u00f6ln": 416, "lka": 416, "niedersachsen": 416, "konfigur": 416, "gnu": [416, 498, 1065, 1258], "2012": 416, "hamburg": 416, "fehlerdiagnos": 416, "polizei": 416, "stia": 416, "admont": 416, "bi": 416, "2010": 416, "softwareentwicklung": 416, "darmstadt": 416, "ulm": 416, "bundeswehr": 416, "wildflecken": 416, "gui": 418, "Their": [418, 438], "hobbi": 418, "histori": [418, 643, 741, 851, 1059, 1085, 1115, 1195], "second": [420, 422], "fahrenheit": [421, 423, 425, 572], "tabl": [421, 423, 425, 598, 1109], "simplif": 422, "revisit": [422, 490, 753], "constant": [424, 439, 464, 494, 575], "preprocessor": [424, 464, 465], "macro": [425, 464, 465, 508, 522, 846, 867], "outsid": 426, "cat": [426, 974], "poor": [426, 427], "wc": 427, "memset": 428, "histogram": 429, "nonsens": 430, "signatur": 430, "declar": [430, 431, 460, 461, 462, 658], "mistak": 432, "stdin": [433, 982, 996], "qualifi": 438, "width": [438, 470, 663, 676, 994, 1127], "escap": [439, 1134], "logic": 442, "implicit": [443, 802], "sign": 443, "truncat": [443, 1025], "propag": 443, "unsign": 443, "compil": [443, 460, 465, 481, 482, 511, 530, 534, 535, 645, 648, 652, 781, 802, 867, 887, 1065, 1068, 1078, 1082], "warn": [443, 449, 465, 1041, 1063], "cast": 443, "increment": [444, 676, 770, 1100], "decrement": [444, 676], "confus": [444, 1121, 1210], "manipul": [446, 520, 802, 1025, 1063], "bitwis": [446, 1210], "AND": 446, "OR": 446, "xor": 446, "right": [446, 1172], "invert": [446, 1209], "complement": 446, "summari": [449, 644, 805, 887, 913, 1083, 1103, 1212, 1214], "true": [452, 547, 656, 1213], "fals": 452, "truth": 452, "style": [453, 504, 644, 746, 800, 819, 1135], "matter": [453, 528], "distinct": 454, "purpos": [455, 1029], "closer": 455, "comma": 455, "infam": 455, "idiom": 455, "bodi": 456, "goto": 458, "label": [458, 1214], "monolith": [460, 534, 549, 602], "separ": [460, 461, 534, 549, 814, 972, 1082], "static": [463, 487, 598, 657, 658, 826, 1082, 1083, 1084, 1107], "visibl": [463, 487, 993], "replac": [464, 587, 831, 832], "inlin": [464, 494, 647, 654, 658], "guard": 464, "rule": [465, 504, 645, 648, 658, 747, 755, 792, 926], "span": 465, "stringif": [465, 1111], "token": 465, "address": [467, 858, 901, 925, 993, 1049, 1210], "arbitrari": [470, 676, 1088, 1112], "typedef": 475, "alia": 475, "singli": 478, "volatil": [480, 949], "lie": 480, "valid": 480, "handler": [480, 1062, 1063], "intrins": 481, "atom": [481, 811, 816, 885, 886, 890, 891, 906, 1036], "builtin": 481, "align": 482, "unalign": 482, "pad": 482, "readabilti": 484, "shoot": 484, "offens": 484, "unobvi": 484, "ambigu": [484, 490, 747], "smell": 484, "size_t": 485, "discret": 486, "tradit": [486, 504, 1112], "wishlist": 486, "close": [486, 552, 797, 1059], "somewhat": 487, "contriv": 487, "hoorai": 487, "correct": [488, 654, 789], "non": [488, 519, 591, 592, 593, 594, 595, 596, 597, 634, 654, 819, 825, 831, 1231], "good": [489, 508, 509, 644, 658, 676, 746, 755, 764, 765, 792, 794], "c99": 489, "explict": 490, "safeti": [490, 506], "scheme": 490, "artifici": [490, 1192], "valgrind": [491, 625], "action": [491, 1063], "optim": [493, 494, 495], "bound": [493, 494, 625, 1047], "unnecessari": 494, "peephol": 494, "subexpress": 494, "strength": 494, "reduct": 494, "fold": 494, "invari": 494, "unrol": 494, "tail": [494, 980], "cpu": [494, 925, 1047, 1053], "level": 494, "cach": [495, 510, 526, 792], "multidimension": 495, "thrash": 495, "profil": [497, 498, 500, 501], "donald": 497, "knuth": 497, "toni": 497, "hoar": 497, "larri": 497, "wall": 497, "practic": [497, 513], "brian": 497, "w": 497, "kernighan": 497, "rob": 497, "pike": 497, "gprof": 498, "flat": 498, "callgrind": 499, "per": [499, 855, 895, 1236], "kcachegrind": 499, "oprofil": 500, "wide": 500, "offlin": 500, "graphic": 500, "accomplish": 504, "disclaim": [504, 927], "principl": [504, 552], "yagni": 504, "uncl": 505, "bob": 505, "typic": [506, 926, 1033, 1049], "bookkeep": 506, "effort": 506, "spaghetti": [506, 528], "concaten": [506, 1208], "input": [506, 930, 1092, 1196], "yyyi": 506, "mm": 506, "where": [506, 524, 537, 924, 1065], "testabl": 506, "explicitli": [506, 785, 802], "categor": 506, "net": 506, "place": [506, 519, 603, 648, 688, 818, 914, 915, 1130], "add_custom_command": 507, "handwritten": [507, 512, 786, 787], "prototyp": [507, 770], "deepli": 507, "conf": 507, "et": 507, "voila": 507, "blacklist": [508, 509], "flag": [508, 722, 873, 1015, 1135], "libhello": 508, "bad": [508, 509, 792, 824, 856], "target_compile_definit": [509, 514, 515], "backlist": 509, "availablil": 509, "target": [509, 531, 537, 538, 540, 601, 1023, 1066, 1245, 1250, 1256], "use_blacklist": 510, "libmosquitto": 512, "toplevel": 512, "cmakelist": [512, 530], "capabl": [512, 513], "find_packag": [513, 516], "node": [513, 530, 875, 1018], "theori": [513, 755], "configure_fil": 514, "instead": 514, "put": 514, "someon": 515, "who": 515, "jjj": [517, 888], "bracket": 518, "execut": [518, 534, 538, 933, 1083, 1089, 1097, 1117, 1167, 1231, 1233], "unquot": [518, 519, 524], "basta": 519, "inconsist": [519, 746], "modif": [519, 694, 1082], "foreach": [519, 521], "pathnam": 520, "hash": [520, 1117], "checksum": 520, "append": [520, 1208], "glob": 520, "cmake_path": 520, "decompos": 520, "compos": 520, "argc": [522, 1044], "argv": [522, 1044, 1119], "argvn": 522, "argn": 522, "parent_scop": 522, "fanci": 522, "cmake_parse_argu": [522, 528], "care": [524, 784], "polici": [524, 1052], "rather": 524, "mess": [524, 747, 1204], "dereferenc": 524, "weirdli": 524, "ain": 525, "empti": [526, 875, 967, 1103, 1160], "empty": 526, "defined": 526, "indirect": 526, "add_librari": 528, "streamlin": 528, "my_add_librari": 528, "architect": 528, "noi": 529, "include_directori": [529, 530, 531], "motiv": [530, 544, 547, 563, 564, 659, 743, 746, 748, 757, 759, 784, 790, 907, 1094, 1104, 1110], "around": [530, 742, 770], "adjust": [530, 998, 1078], "boilerpl": [534, 786, 883], "consist": [534, 858], "paus": 535, "diagram": 535, "cmake_build_typ": 535, "k": [535, 1193], "printf": [535, 646], "popular": [535, 919], "prefix": [537, 1088], "runpath": 537, "abi": 537, "normal": 539, "subdirectori": 540, "reorgan": 540, "subhierarchi": 542, "instanti": [542, 549, 697, 759, 819, 853], "adapt": [543, 549, 558, 563, 565, 572, 577, 805], "must": [543, 1022], "adapte": 543, "asensor": 543, "real": [543, 651, 742, 803, 831, 945], "measur": [543, 586, 817, 1051, 1053], "insert": [544, 610, 611, 693, 694, 697, 698, 699, 734, 804, 834, 835, 875], "bulk": 544, "6a": 544, "socialdb": 545, "thermomet": [546, 566, 567, 580, 581, 600], "aggreg": [547, 556, 746], "conret": 547, "realiz": 547, "situat": [547, 1006], "constantsensor": 547, "decoratedconstantsensor": 547, "randomsensor": [547, 588], "decoratedrandomsensor": 547, "verifi": [547, 960, 995, 997, 1196], "hold": [547, 1108], "studi": [549, 790, 791, 1077], "heat": 549, "dbuslogg": 549, "dbusvaluestor": 549, "either": 549, "dbu": 549, "stop": [549, 800], "help": [549, 948, 981, 1219, 1226], "observ": [551, 579, 1094], "liskov": 552, "substitut": [552, 656], "segreg": 552, "invers": [552, 1052], "proxi": [553, 563, 566, 567, 577, 580, 581], "foundat": 554, "hierarchi": [554, 666, 831, 926, 1089], "hypothet": [554, 1109], "singleton": [555, 568, 569, 570, 582, 583, 584], "connector": 556, "uniniti": [564, 656], "flexibl": [568, 569, 582, 583], "strict": [569, 583], "inflex": [570, 584], "i2csensorfactori": 571, "concret": [571, 582, 583], "i2csensorfactory_vendor1": 571, "stub": [580, 894], "socialinsur": [582, 583], "oegk": [582, 583], "sv": [582, 583], "introduc": [585, 646, 792], "relationship": [585, 718, 719, 1196], "firstnam": 585, "lastnam": [585, 735, 737], "w1sensor": [585, 602], "answer": [585, 784], "try": [589, 666, 800, 1089], "ledstripedisplay_nopoli": 591, "cover": [591, 592, 593, 594, 595, 596, 597, 600], "hysteresis_nopoli": 592, "averagingsensor_nopoli": 593, "constantsensor_nopoli": 594, "mocksensor_nopoli": 595, "randomsensor_nopoli": 596, "mock": 597, "shape": [598, 948], "procedur": 598, "circl": 598, "area": [598, 663], "squar": 598, "massag": 599, "sub": 599, "notfound": 601, "find_is_const": 601, "isol": [601, 1200, 1236], "realiti": 601, "pc": 601, "greater": 605, "odd": 606, "overwrit": 610, "sunni": [611, 613, 616, 1016, 1020, 1021, 1022], "uniquifi": 618, "transcript": 620, "malloc": 625, "free": 625, "mismatch": [625, 1006], "across": [628, 823, 825, 827, 829], "ownership": [633, 634, 635, 802, 933], "raii": [633, 634, 635, 813], "dealloc": 634, "naiv": [637, 657, 708, 903, 1062, 1093, 1209], "look": [644, 1011, 1012, 1013], "distanc": [644, 654, 662], "length": 644, "specifi": [646, 1016], "otherwis": 646, "lifecycl": 649, "dragon": [652, 808], "memberwis": 652, "straighforward": 652, "correctli": 652, "underli": [653, 743], "mechan": 653, "just": 653, "wrong": [654, 736, 816, 1016], "pollut": 654, "hidden": [655, 970], "cannot": 656, "easili": 656, "odr": 658, "litt": 658, "defnit": 658, "ostream": [659, 660, 661, 662, 663], "cout": 659, "cuboid": 660, "upon": [660, 662, 663], "point3d": [660, 662], "surfac": 660, "volum": [660, 1080], "unari": [661, 662], "rectangl": [662, 663], "coordin": [662, 663], "absolut": [662, 838, 972, 1262], "height": 663, "catch": [666, 1089], "throw": [666, 819], "spirit": [676, 801, 802, 803], "pre": [678, 746], "destin": [678, 1016], "back_insert_iter": 678, "binary_search": 681, "intellig": [681, 687, 1096, 1192], "find_if": [684, 735], "customiz": 684, "for_each": 685, "lower_bound": 687, "reverse_copi": [689, 708], "characterist": [691, 694], "fill": [697, 1203], "definin": 698, "subscript": 699, "eras": 700, "multimap": 702, "deriv": [712, 713], "larger": [716, 1084, 1092], "conveni": 721, "sto": 721, "to_str": 721, "substr": [721, 1136], "paint": 722, "american": 722, "onto": 722, "moodl": [723, 935, 936, 961], "proce": 725, "passwderror": 725, "cin": 726, "n": 732, "year": 732, "transform": [733, 805, 835, 1092], "great": [741, 1049], "school": 742, "item": [742, 804, 834, 835, 836, 1087, 1093], "inevit": 742, "union": [742, 819], "uniform": 744, "implementor": 745, "direct": [745, 858], "heap": 746, "refus": 746, "narrow": 746, "realist": [747, 1090, 1224], "int": [747, 1044], "nicolai": 747, "josutti": 747, "complain": 747, "said": 750, "guidelin": 750, "well": 750, "smartptr": 752, "lvalu": [755, 804], "wish": [755, 1102], "Ones": 755, "sai": [757, 950], "decai": 757, "chosen": 759, "rescu": [759, 784, 806, 1067, 1088, 1109, 1215], "variat": [759, 791, 796, 887], "conceptless": [760, 761], "fulfil": 764, "has_siz": 764, "index_returns_doubl": 764, "func": 765, "ret": 768, "doubl": 768, "foreword": 770, "examp": 770, "explain": 770, "drive": [770, 986], "anatomi": [770, 865], "resum": 770, "suspens": 770, "caller": 770, "co_yield": 770, "mimick": 770, "fibo": 771, "suspend": [776, 777, 778], "decis": [781, 1047], "cleanli": 781, "proggi": 786, "morph": 786, "possibl": 787, "temporari": [787, 1087, 1224], "made": 787, "hard": [789, 969], "aris": 789, "gool": 791, "prevent": [791, 802], "accident": [791, 835], "dangl": 792, "easi": [792, 809], "constraint": 792, "dogmat": 792, "sigh": 792, "storag": [794, 1040], "abbrevi": 794, "avail": [794, 846, 993], "compat": 796, "handwrit": 800, "ctor": 800, "auto_ptr": 800, "mayb": 800, "uniqu": [801, 836], "juggl": 801, "make_shar": 801, "cyclic": 801, "chanc": 802, "leakag": 802, "keystrok": 802, "make_uniqu": 802, "acknowledg": 802, "prove": 802, "weak_ptr": [803, 835], "borrow": 803, "invalid": 803, "univers": 804, "dual": 804, "bag": [804, 834, 835, 836], "null": [805, 818], "pointlessli": 805, "hardcod": [805, 851], "placehold": 805, "upsid": 806, "technic": 806, "downsid": 806, "joinabl": 809, "detach": [809, 1034], "cornercas": 809, "recursive_mutex": 812, "timed_mutex": 812, "recursive_timed_mutex": 812, "unlock": [813, 892], "consid": 813, "acquisit": [813, 1177], "lock_guard": 813, "condition_vari": 814, "predic": [814, 1038], "concern": 814, "promis": 816, "chrono": [816, 817], "utterli": 816, "becom": [816, 1084], "readi": 816, "minim": 816, "pro": 816, "clock": 817, "sleep": [817, 885, 890, 891], "void": 818, "has_valu": 818, "any_cast": 818, "char": [818, 819, 1044], "bad_variant_access": 819, "visitor": 819, "accessor": 819, "get_if": 819, "crtp": [821, 824, 826], "incomplet": [822, 1206], "bloat": 824, "string_view": 824, "unrel": 827, "visit": 830, "middl": 831, "omit": 831, "cram": 831, "rel": [838, 972, 1097], "compon": 838, "creation": [838, 919, 1034, 1035], "create_directori": 838, "entri": 838, "classif": 838, "is_xxx": 838, "directory_entri": 838, "modern": [842, 843, 844, 1241], "slideshow": [843, 846, 848, 851, 853, 856, 858, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 890, 892, 895, 897, 901, 904, 907, 1059, 1063, 1132, 1220, 1227], "hook": 845, "necessari": 845, "ioctl": [845, 846, 848, 867, 900, 1015], "vtabl": 846, "kernelspac": 846, "_io": [846, 867], "major": [850, 851], "minor": [850, 851], "space": [851, 901, 920, 921, 924, 925, 1049], "hair": 855, "pretti": 855, "wswitch": 855, "dma": [858, 859, 883], "physic": 858, "scatterlist": 858, "when": 860, "explod": 860, "loadabl": 865, "init": [865, 883, 926], "exit": [865, 996, 1034, 1044], "unload": 865, "raspi": [867, 868, 1006], "legaci": [867, 1163], "api": [867, 897, 1033, 1052], "my_activate_gpio": 867, "servic": [869, 926, 1207], "routin": [869, 883], "reserv": 871, "kmalloc": [873, 874, 890], "doubli": [875, 876], "consequ": 877, "rt": [879, 880], "mutual": [879, 892], "exclus": [879, 892], "registr": 881, "layer": 881, "util": [881, 988], "pci": [883, 884], "foremost": 883, "probe": 883, "bar": 883, "rasperri": 887, "crossdev": 887, "artifact": [887, 1193], "bootload": [887, 995], "mainten": 889, "spinlock": [890, 892, 893], "spin_lock": 890, "irq": 890, "spin_lock_irqsav": 890, "spin_unlock_irqrestor": 890, "ah": [890, 1204], "bulletproof": 892, "dup": 894, "defer": [895, 906], "jiffi": 897, "wheel": [897, 1146], "get_one_ev": 900, "copy_to_us": 900, "noth": 903, "o_nonblock": 903, "wake": 904, "workqueu": [906, 907, 908], "did": 906, "destroi": [907, 1226], "gzip": 911, "tar": 913, "etiquett": 913, "Being": 913, "g1": 914, "lot": [914, 915], "precondit": [914, 915], "credenti": [914, 934], "backup": [914, 915, 950], "busi": 915, "ok": [918, 1044], "serial": 918, "pseudo": 918, "partit": 918, "proc": [918, 1031], "authent": [923, 1002], "prompt": 923, "verif": [923, 1179], "success": 923, "imperson": 923, "uid": [925, 944, 945], "parent": [926, 1046], "child": 926, "subsystem": 927, "0": [927, 1044, 1200], "stdout": [931, 982, 996, 1018], "stderr": 931, "trick": [931, 1134], "teacher": 933, "constel": 933, "root": [933, 945], "octal": 933, "tune": [933, 1051, 1199], "setuid": [944, 945], "sudo": 944, "password": [944, 1157], "chmod": [944, 1117], "toi": 944, "effect": [945, 1063, 1103], "ugli": 946, "sticki": 946, "umask": 947, "navig": 948, "edit": 948, "tabul": 948, "filenam": 948, "bashrc": [949, 950], "cp": 950, "its": [950, 1199], "pwd": 951, "cd": 951, "mkdir": [957, 967], "funni": 958, "dev": [963, 993], "touch": 967, "rm": 967, "rmdir": 967, "mv": 971, "somewher": 971, "cut": [975, 1127], "durchsuchen": 977, "optionen": 977, "verkn\u00fcpfungen": 977, "grep": 978, "less": [981, 1085, 1109], "brushless": 986, "speed": 986, "esc": 986, "fwd": 986, "rev": 986, "calibr": 986, "packet": 987, "vcan": 988, "frame": [989, 1208], "mcp2515": 990, "schemat": 990, "solder": 990, "lm73": 993, "slave": [993, 995], "master": [993, 995], "enabl": [993, 995], "bcm2835": 993, "40": 993, "pin": [993, 995, 1029], "connect": [993, 1012, 1203], "datasheet": 993, "wire": [993, 994, 995], "i2cdetect": [993, 995], "detect": 993, "monitor": [993, 995], "hwmon": [993, 995], "pca9685": 994, "puls": 994, "presenc": 994, "ds18b20": 995, "alter": 995, "w1": 995, "attach": 995, "ds2482": 995, "800": 995, "channel": 995, "announc": 995, "hotplug": 995, "lm": 995, "caveat": [995, 1200], "topologi": 995, "symptom": 995, "wear": 1002, "admin": 1002, "hat": 1002, "scp": 1005, "sshf": 1006, "mount": 1006, "logdata": 1006, "unmount": 1006, "fusermount": 1006, "umount": 1006, "helper": [1007, 1210], "simplic": [1011, 1012, 1013], "watch": 1011, "strace": 1011, "supervis": 1011, "descriptor": [1015, 1018, 1025], "filedescriptor": 1015, "offset": [1015, 1025], "lseek": 1015, "hole": 1017, "o_creat": 1019, "bogu": 1019, "o_excl": 1020, "alreadi": 1020, "o_rdonli": 1021, "even": [1021, 1022, 1152], "o_wronli": 1022, "writeabl": 1022, "implicitli": 1022, "scatter": 1025, "gather": 1025, "retriev": 1027, "wise": 1028, "mmap": [1031, 1032, 1058], "pid": [1031, 1046], "legal": 1033, "pthread_join": 1034, "synchron": [1036, 1062], "conflict": [1037, 1100], "win32": 1038, "reset": 1038, "trylock": 1043, "islock": 1043, "procf": 1046, "ppid": 1046, "getpid": 1046, "getppid": 1046, "multitask": 1047, "fair": [1047, 1051], "runnabl": [1047, 1053], "bare": 1049, "metal": 1049, "hm": 1049, "awai": [1049, 1186], "stabil": 1049, "latenc": [1051, 1053], "nice": 1051, "inexact": 1051, "immedi": 1051, "preempt_rt": 1051, "prioriti": 1052, "runn": 1052, "frequenc": 1053, "scale": 1053, "mysteri": 1053, "remain": 1053, "sysprog": [1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064], "segment": 1058, "produc": [1058, 1093], "consum": 1058, "mq_open": 1059, "mq_send": 1059, "mq_receiv": 1059, "mq_close": 1059, "mq_unlink": 1059, "notif": 1059, "mq_notifi": 1059, "mqueue": 1059, "sem_open": 1059, "sem_wait": 1059, "sem_post": 1059, "sem_clos": 1059, "sem_unlink": 1059, "barebon": 1062, "alarm": 1062, "louder": 1062, "innoc": 1062, "sigalrm": 1062, "programmat": 1063, "mask": 1063, "pend": 1063, "sigset_t": 1063, "async": 1063, "seem": 1065, "nm": 1065, "agnost": 1066, "sysroot": [1068, 1078], "armv8": 1068, "rpi4": 1068, "gnueabihf": 1068, "linaro": 1078, "defunct": 1078, "patienc": 1078, "against": [1078, 1083, 1109], "docker": 1080, "autoconf": 1080, "71": 1080, "zoom": 1082, "rememb": 1082, "reloc": 1083, "independ": 1083, "pic": 1083, "runtim": 1083, "versu": 1083, "def": 1085, "reach": 1085, "theoret": 1085, "nonloc": 1085, "hood": 1087, "monkeypatch": 1087, "print": [1087, 1112], "contextlib": 1087, "contextmanag": 1087, "involv": 1087, "prefixprint": 1087, "mind": 1088, "sugar": 1088, "functool": [1088, 1109], "rais": 1089, "regardless": 1089, "form": 1097, "daemon": 1098, "mother": [1100, 1258], "acquir": 1100, "abc": 1102, "late": 1102, "abtract": 1102, "interrelationship": 1105, "salari": 1106, "introspect": 1106, "isinst": 1106, "issubclass": 1106, "classmethod": 1107, "staticmethod": 1107, "_make": 1108, "_asdict": 1108, "dunder": 1109, "compar": 1109, "incompat": 1109, "lotsa": 1109, "magic": 1109, "__gt__": 1109, "term": 1109, "__lt__": 1109, "total_ord": 1109, "them": 1109, "readonli": 1110, "repr": 1111, "__repr__": 1111, "suppli": 1112, "ultim": 1112, "guido": 1115, "van": 1115, "rossum": 1115, "bang": 1117, "she": 1117, "doze": 1117, "registri": 1117, "indent": 1118, "cosmet": 1119, "rudimentari": 1119, "python2": 1121, "unicod": 1121, "esoter": 1125, "delimit": 1134, "interv": 1142, "axi": 1145, "setuptool": 1146, "manifest": 1146, "publish": [1146, 1185, 1207], "usernam": 1157, "strategi": 1169, "revert": 1171, "justifi": 1172, "activ": 1178, "dictread": [1180, 1181, 1199], "cp1252": [1180, 1182], "reader": [1182, 1183, 1199], "nohead": 1182, "both": 1188, "interrel": 1189, "david": 1191, "beazlei": 1191, "raymond": 1191, "hetting": 1191, "mean": 1193, "linear": [1194, 1196, 1197], "regress": [1194, 1196, 1197], "weather": 1195, "ndarrai": 1196, "plot": 1196, "splice": 1196, "mankind": 1198, "god": 1198, "insan": 1199, "scsv": 1199, "dbapi": [1200, 1202, 1203], "transact": 1200, "postgresql": 1202, "postgr": 1202, "cursor": 1203, "queri": 1203, "ascii": 1204, "iso": 1204, "latin": 1204, "8859": 1204, "lieb": 1204, "gr\u00fc\u00dfe": 1204, "j\u00f6rg": 1204, "\u795d\u597d": 1204, "utf": 1204, "decod": 1204, "broker": 1207, "payload": 1207, "deprec": 1208, "bitmap": 1210, "neat": 1210, "iloc": [1212, 1213], "Then": 1212, "inplac": 1213, "loc": [1213, 1214], "hiccup": 1214, "inclus": 1214, "lowercas": 1215, "email": 1215, "normalized_email": 1215, "ing": 1215, "elementtre": 1216, "etre": 1216, "sax": 1216, "dom": 1216, "invoc": 1219, "subcommand": 1219, "upload": 1222, "pythonpath": 1224, "mark": 1224, "expect": [1224, 1233], "recogn": 1225, "meat": 1225, "freez": 1226, "recreat": 1226, "fatal": 1231, "failur": 1231, "assert_": 1231, "teardown": 1236, "zielpublikum": [1239, 1240, 1247, 1259], "kursinhalt": [1239, 1240, 1247, 1258, 1259], "vorkenntniss": [1239, 1240, 1247, 1258, 1259], "three": 1241, "outlin": [1242, 1244, 1245, 1250, 1251, 1252, 1254, 1255, 1260, 1261, 1264, 1265], "gentl": 1250, "power": 1256, "prior": 1256, "product": 1262, "arduino": [160, 163]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Curriculum Vitae": [[0, "curriculum-vitae"]], "Myself: Contact, Impressum, \u2026": [[1, "myself-contact-impressum"]], "Contact": [[1, "contact"]], "Further Information": [[1, "further-information"], [27, "further-information"], [177, "further-information"], [249, "further-information"], [250, "further-information"], [272, "further-information"], [389, "further-information"], [398, "further-information"], [804, "further-information"]], "Projekte": [[2, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[2, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[2, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[3, "skills"]], "This Site": [[4, "this-site"]], "License: GPLv3": [[4, "license-gplv3"]], "Github": [[4, "github"], [398, "github"]], "Sphinx": [[4, "sphinx"], [173, "sphinx"], [176, "sphinx"]], "Installation Instructions": [[4, "installation-instructions"]], "pip and venv": [[4, null]], "Work in Progress": [[4, "work-in-progress"], [171, "work-in-progress"]], "More": [[4, "more"], [824, "more"]], "OpenTraining": [[5, "opentraining"]], "Draft Topics": [[6, "draft-topics"]], "Miscellaneous": [[7, "miscellaneous"], [170, "miscellaneous"], [209, "miscellaneous"], [229, "miscellaneous"], [293, "miscellaneous"], [294, "miscellaneous"], [314, "miscellaneous"], [328, "miscellaneous"], [339, "miscellaneous"], [340, "miscellaneous"], [343, "miscellaneous"], [350, "miscellaneous"], [353, "miscellaneous"], [372, "miscellaneous"], [620, "miscellaneous"], [620, "id1"], [756, "miscellaneous"], [820, "miscellaneous"], [1025, "miscellaneous"], [1040, "miscellaneous"], [1257, "miscellaneous"]], "Screencasts": [[8, "screencasts"]], "Topics to be Written": [[9, "topics-to-be-written"]], "New Topics to Write": [[9, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[10, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[11, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[11, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[11, "allgemeines"]], "2.1 Projektname": [[11, "projektname"]], "2.2 Projekt-Untertitel": [[11, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[11, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[11, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[11, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[11, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[11, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[11, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[11, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[11, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[11, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[11, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[11, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[11, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[11, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[11, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[11, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[11, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[11, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[11, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[11, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[11, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[11, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[11, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[11, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[11, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[11, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[11, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[11, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[11, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[11, "termine-projektstart-projektende"]], "Projektstart": [[11, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[11, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[11, "projektkosten"]], "Personalkosten": [[11, "personalkosten"]], "Sonstige Kosten": [[11, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[11, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[11, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[11, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[11, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[11, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[11, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[11, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[11, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[11, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[11, "datenschutz"]], "Video Screenplay": [[12, "video-screenplay"]], "Contents": [[12, null], [187, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [213, null], [217, "contents"], [218, null], [503, "contents"], [625, null], [628, null], [634, null], [637, null], [724, "id1"], [916, "id1"], [937, "id1"], [956, "id1"], [962, "id1"], [965, "id1"], [983, "id1"], [991, "id1"], [992, "id1"], [999, "id1"], [1008, "id1"], [1024, "id1"], [1026, "id1"], [1028, "id1"], [1045, "id1"], [1055, null], [1058, null], [1073, "id1"], [1093, null], [1149, "id1"], [1150, "id1"], [1154, "id1"], [1163, "id1"], [1177, "id1"], [1184, "id1"], [1231, null], [1233, null], [1236, null], [1241, "id2"]], "The Problem And Me": [[12, "the-problem-and-me"]], "Open Source Training Material": [[12, "open-source-training-material"]], "Walk-Through": [[12, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[13, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[14, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[15, "use-cases"]], "Trainer": [[15, "trainer"]], "Editor": [[15, "editor"]], "End User (Training Audience)": [[15, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[16, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[17, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[18, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[19, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[19, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[19, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[20, "emoji-codes-sphinxemoji"]], "Setup": [[20, "setup"], [141, "setup"], [301, "setup"], [308, "setup"], [311, "setup"], [321, "setup"], [322, "setup"], [326, "setup"], [327, "setup"], [328, "setup"], [349, "setup"], [350, "setup"], [355, "setup"], [356, "setup"], [361, "setup"], [365, "setup"], [366, "setup"], [986, "setup"], [1114, "setup"], [1226, "setup"]], "Most Used Here In This Site": [[20, "most-used-here-in-this-site"]], "All Codes": [[20, "all-codes"]], "Recipes": [[21, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[22, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[23, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[24, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[25, "layout-test-page"]], "Admonitions": [[25, "admonitions"]], "Admonition": [[25, "admonition"]], "This is an .. admonition::": [[25, null]], "Tip": [[25, "tip"]], "Note": [[25, "note"]], "Hint": [[25, "hint"]], "Important": [[25, "important"]], "Attention": [[25, "attention"]], "Caution": [[25, "caution"]], "Error": [[25, "error"]], "Danger": [[25, "danger"]], "Sidebar": [[25, "sidebar"]], "Blech Sidebar Title Blah": [[25, null]], "Sidebar \u201cKursdaten\u201d": [[25, "sidebar-kursdaten"]], "Kursdaten": [[25, null]], "Local Content": [[25, "local-content"]], "Local Heading 1": [[25, "local-heading-1"], [25, "id3"]], "Local Heading 1.1": [[25, "local-heading-1-1"], [25, "id4"]], "Local Heading 1.2": [[25, "local-heading-1-2"], [25, "id5"]], "Local Heading 2": [[25, "local-heading-2"], [25, "id6"]], "Sidebar with Local Content": [[25, "sidebar-with-local-content"]], "Bleh Content Blah": [[25, null]], "To Do": [[25, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[26, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[26, "id1"]], "All": [[26, "id2"]], "reStructuredText Cheat Sheet": [[27, "restructuredtext-cheat-sheet"]], "Links": [[27, "links"], [172, "links"], [173, "links"], [210, "Links"], [221, "links"], [226, "links"], [228, "links"], [230, "links"], [233, "links"], [240, "links"], [241, "links"], [243, "links"], [252, "links"], [256, "links"], [259, "links"], [262, "links"], [268, "links"], [275, "links"], [286, "links"], [289, "links"], [322, "links"], [328, "links"], [403, "links"], [480, "links"], [749, "links"], [770, "links"], [788, "links"], [799, "links"], [864, "links"], [927, "links"], [948, "links"], [988, null], [995, "links"], [1114, null], [1145, null], [1146, "links"], [1190, "links"], [1207, "links"], [1209, "links"], [1210, "links"], [1212, "links"], [1213, "links"], [1214, "links"], [1215, "links"], [1227, "links"]], "Local Documents": [[27, "local-documents"]], "External Links": [[27, "external-links"]], "Section References": [[27, "section-references"]], "Section That We Refer To": [[27, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[27, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[27, "footnotes"]], "Sphinxish": [[28, "sphinxish"]], "Jupyter Notebooks": [[28, "jupyter-notebooks"]], "Running Sphinx From Source": [[28, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[29, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[29, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[30, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[30, "initial-structure"]], "Snippets": [[30, null], [30, null], [30, null], [30, null], [30, null], [30, null], [32, null], [32, null], [38, null], [38, null]], "User": [[30, "user"]], "UserDB": [[30, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[30, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[30, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[30, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[30, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[30, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[31, "clean-code-messages-from-the-book"]], "Survey": [[31, null], [504, null]], "Names": [[31, "names"]], "Functions": [[31, "functions"], [242, "Functions"], [245, "Functions"], [258, "Functions"], [269, "Functions"], [271, "Functions"], [277, "Functions"], [281, "Functions"], [286, "functions"], [302, "Functions"], [309, "Functions"], [323, "Functions"], [339, "functions"], [343, "functions"], [349, "functions"], [350, "functions"], [351, "Functions"], [355, "functions"], [356, "functions"], [357, "Functions"], [361, "functions"], [362, "functions"], [363, "Functions"], [365, "functions"], [366, "functions"], [367, "Functions"], [430, "functions"], [430, "id1"], [1133, "functions"]], "Comments": [[31, "comments"]], "Formatting": [[31, "formatting"], [357, "Formatting"]], "Objects and Data Structures": [[31, "objects-and-data-structures"]], "Error Handling": [[31, "error-handling"], [1007, "error-handling"]], "Boundaries": [[31, "boundaries"]], "Unit Tests": [[31, "unit-tests"], [375, "unit-tests"], [378, "unit-tests"], [601, "unit-tests"]], "Classes": [[31, "classes"], [248, "Classes"], [333, "classes"]], "Live Hacking: Switch To googletest": [[32, "live-hacking-switch-to-googletest"]], "Git Submodule": [[32, "git-submodule"]], "Establish Tests: Demo": [[32, "establish-tests-demo"]], "Straightforward main() Conversion": [[32, "straightforward-main-conversion"]], "Fix Shortcomings": [[32, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[33, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[33, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[33, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[33, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[33, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[33, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[33, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[33, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[33, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[33, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[33, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[34, "userdb-find-crashes-if-user-not-found"]], "State": [[34, "state"]], "Bugs": [[35, "bugs"], [41, "bugs"]], "Existing Files Are Overwritten": [[36, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[37, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[38, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[38, "write-csv-test"]], "Write CSV: Frontend Program": [[38, "write-csv-frontend-program"], [38, "id1"]], "Read CSV: Test": [[38, "read-csv-test"]], "Features": [[39, "features"]], "Search By Other Indexes": [[40, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[41, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[41, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[42, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[43, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[43, "backingstore"]], "Refactoring": [[44, "refactoring"], [602, "refactoring"], [895, "refactoring"]], "Load From BackingStore in Constructor": [[45, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[46, "userdb-read-write-bool-really"]], "GLT 2023: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[47, "glt-2023-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[48, "installation-notes"]], "libgpiod": [[48, "libgpiod"]], "Fedora: Prepare Tarballs": [[48, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[48, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[49, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[49, "biography"], [51, "biography"], [55, "biography"]], "Abstract": [[49, "abstract"], [51, "abstract"], [55, "abstract"]], "Description": [[49, "description"], [51, "description"], [55, "description"], [555, "description"], [706, "description"], [722, "description"], [726, "description"], [728, "description"], [729, "description"], [730, "description"], [731, "description"], [732, "description"], [733, "description"], [734, "description"], [735, "description"], [737, "description"], [738, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[50, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[50, "setup-before-presentation"]], "Starting Point": [[50, "starting-point"], [752, "starting-point"]], "Greeting": [[50, "greeting"]], "Multiple Background Threads": [[50, "multiple-background-threads"]], "Enter asyncio": [[50, "enter-asyncio"]], "Character Device Based GPIO": [[50, "character-device-based-gpio"]], "GPIO Device": [[50, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[50, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[50, "entire-matrix-on-off"]], "Bringing All Together": [[50, "bringing-all-together"]], "Modularize": [[50, "modularize"]], "Play A Bit: Blink Entire Rows": [[50, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[50, "coroutines"]], "Not Enough: sequence()": [[50, "not-enough-sequence"]], "Looping: forever()": [[50, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[50, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[50, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[50, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[50, "program-finally"]], "Playground: cycle()": [[50, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[50, "fast-forward-any-and-cancellation"]], "Playground: on()": [[50, "playground-on"]], "Goodbye": [[50, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[51, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking": [[52, "glt-2024-python-asyncio-libgpiod-and-pointless-blinking"]], "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking": [[53, "talk-script-python-asyncio-libgpiod-and-pointless-blinking"]], "gpiod Intro": [[53, "gpiod-intro"]], "asyncio Intro": [[53, "asyncio-intro"]], "And blink?": [[53, "and-blink"], [53, "id1"]], "gpiod, And Interrupts": [[53, "gpiod-and-interrupts"]], "gpiod, Interrupts, and asyncio": [[53, "gpiod-interrupts-and-asyncio"]], "textual": [[53, "textual"]], "python-sdbus": [[53, "python-sdbus"]], "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking": [[54, "slide-material-python-asyncio-libgpiod-and-pointless-blinking"]], "blink": [[54, "blink"]], "gpiod": [[54, "gpiod"]], "asyncio": [[54, "asyncio"], [1143, "asyncio"]], "Textual": [[54, "textual"]], "Python SDbus": [[54, "python-sdbus"]], "Python 3.12 Installation (for TaskGroup)": [[54, "python-3-12-installation-for-taskgroup"]], "Submission: Python, asyncio, libgpiod, and Pointless Blinking": [[55, "submission-python-asyncio-libgpiod-and-pointless-blinking"]], "Pointless Blinking": [[56, "pointless-blinking"]], "Kajak Auf Der Donau": [[57, "kajak-auf-der-donau"]], "Passau - Kraftwerk Jochenstein (5)": [[57, "passau-kraftwerk-jochenstein-5"]], "Kraftwerk Jochenstein - Engelhartszell (gleich nachher)": [[57, "kraftwerk-jochenstein-engelhartszell-gleich-nachher"]], "Engelhartszell - Schl\u00f6gen (4,5)": [[57, "engelhartszell-schlogen-4-5"]], "Schl\u00f6gen - Kraftwerk Aschach (4)": [[57, "schlogen-kraftwerk-aschach-4"]], "Kraftwerk Aschach - Kraftwerk Ottensheim (3)": [[57, "kraftwerk-aschach-kraftwerk-ottensheim-3"]], "Kraftwerk Ottensheim - Linz Hauptplatz (2)": [[57, "kraftwerk-ottensheim-linz-hauptplatz-2"]], "Linz Hauptplatz - Traunm\u00fcndung - Kraftwerk Abwinden Asten (3.2)": [[57, "linz-hauptplatz-traunmundung-kraftwerk-abwinden-asten-3-2"]], "Kraftwerk Abwinden Asten  - Ennsm\u00fcndung - Kraftwerk Wallsee Mitterkirchen (5.5)": [[57, "kraftwerk-abwinden-asten-ennsmundung-kraftwerk-wallsee-mitterkirchen-5-5"]], "Kraftwerk Wallsee Mitterkirchen - Grein (3,5)": [[57, "kraftwerk-wallsee-mitterkirchen-grein-3-5"]], "Grein - Kraftwerk Ybbs Persenbeug (4.5)": [[57, "grein-kraftwerk-ybbs-persenbeug-4-5"]], "Kraftwerk Ybbs Persenbeug - Kraftwerk  Melk (4.5)": [[57, "kraftwerk-ybbs-persenbeug-kraftwerk-melk-4-5"]], "Kraftwerk  Melk - Wachau Donauinsel (7)": [[57, "kraftwerk-melk-wachau-donauinsel-7"]], "Wachau Donauinsel - Kraftwerk  Altenw\u00f6rth (7)": [[57, "wachau-donauinsel-kraftwerk-altenworth-7"]], "Kraftwerk  Altenw\u00f6rth - Tulln (4.5)": [[57, "kraftwerk-altenworth-tulln-4-5"]], "Tulln - Kraftwerk Greifenstein (3.5)": [[57, "tulln-kraftwerk-greifenstein-3-5"]], "C++": [[58, "c"], [101, "c"], [102, "c"], [739, "c"]], "C++: Building with CMake": [[59, "c-building-with-cmake"]], "C++: Interfaces": [[60, "c-interfaces"]], "C++: OO Basics": [[61, "c-oo-basics"]], "C++: Unit Testing": [[62, "c-unit-testing"]], "Graph": [[63, "graph"], [724, "graph"], [888, "graph"], [1149, "graph"], [1150, "graph"], [1154, "graph"], [1163, "graph"], [1177, "graph"], [1184, "graph"]], "Embedded Computing 1": [[64, "embedded-computing-1"], [69, "embedded-computing-1"]], "Current Curriculum": [[64, "current-curriculum"], [65, "current-curriculum"]], "Topics": [[64, "topics"], [65, "topics"], [89, "topics"], [90, "topics"], [92, "topics"], [93, "topics"], [94, "topics"], [95, "topics"], [221, "topics"], [221, "id2"], [249, "topics"], [286, "topics"], [289, null], [402, "topics"], [406, "topics"], [435, "topics"], [450, "topics"], [459, "topics"], [466, "topics"], [472, "topics"], [476, "topics"], [479, "topics"], [483, "topics"], [492, "topics"], [496, "topics"], [501, "topics"], [502, "topics"], [517, "topics"], [642, "topics"], [650, "topics"], [664, "topics"], [667, "topics"], [670, "topics"], [686, "topics"], [692, "topics"], [696, "topics"], [704, "topics"], [709, "topics"], [711, "topics"], [714, "topics"], [720, "topics"], [739, "topics"], [740, "topics"], [744, "topics"], [751, "topics"], [758, "topics"], [769, "topics"], [782, "topics"], [783, "topics"], [793, "topics"], [798, "topics"], [807, "topics"], [815, "topics"], [820, "topics"], [833, "topics"], [837, "topics"], [839, "topics"], [1001, "topics"], [1019, null], [1021, null], [1021, null], [1042, "topics"], [1048, "topics"], [1069, "topics"], [1076, "topics"], [1077, "topics"], [1091, "topics"], [1097, null], [1105, "topics"], [1113, "topics"], [1190, "topics"], [1201, "topics"], [1205, "topics"], [1211, "topics"], [1218, "topics"], [1223, "topics"], [1229, "topics"]], "Dependency Graph": [[64, "dependency-graph"], [65, "dependency-graph"]], "Embedded Computing 2": [[65, "embedded-computing-2"], [69, "embedded-computing-2"]], "EX: Race Conditions": [[66, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[67, "ex-avoiding-race-condition"]], "Goals": [[67, "goals"], [73, "goals"], [74, "goals"], [75, "goals"], [76, "goals"], [78, "goals"], [79, "goals"], [80, "goals"], [82, "goals"]], "Outcome": [[67, "outcome"], [73, "outcome"], [74, "outcome"], [75, "outcome"], [76, "outcome"], [228, "outcome"]], "Git Introduction": [[68, "git-introduction"]], "Embedded Computing (STECE-2019)": [[69, "embedded-computing-stece-2019"]], "Overview": [[69, "overview"], [752, "overview"], [800, "overview"], [814, "overview"], [816, "overview"], [823, "overview"], [825, "overview"], [827, "overview"], [828, "overview"], [829, "overview"], [830, "overview"], [838, "overview"], [912, "overview"], [924, "overview"], [982, "overview"], [993, "overview"], [994, "overview"], [995, "overview"], [995, "id1"], [996, "overview"], [1033, "overview"]], "Knowledge Transferred": [[69, "knowledge-transferred"]], "Course Setup": [[69, "course-setup"]], "Details": [[69, "details"], [415, "details"]], "Linux": [[70, "linux"], [985, "linux"]], "Introduction to Linux and Unix": [[71, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[72, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[73, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[74, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[75, "ex-led-temperature-display"]], "Hardware": [[75, "hardware"], [76, "hardware"]], "EX: Temperature Sensors": [[76, "ex-temperature-sensors"], [83, "ex-temperature-sensors"]], "GPIO": [[77, "gpio"]], "sysfs Interface": [[77, "sysfs-interface"]], "gpiod Interface": [[77, "gpiod-interface"]], "Multithreading": [[78, "multithreading"], [207, "multithreading"], [267, "multithreading"], [293, "multithreading"], [294, "multithreading"], [296, "multithreading"], [339, "multithreading"], [340, "multithreading"], [343, "multithreading"], [353, "multithreading"], [372, "multithreading"], [381, "multithreading"], [406, "multithreading"], [413, "multithreading"], [815, "multithreading"], [1062, "multithreading"], [1099, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[79, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[80, "communication-waiting-for-something"]], "Python Basics": [[81, "python-basics"]], "EX: Averaging Sensor, Display": [[82, "ex-averaging-sensor-display"]], "Simple Web Programming": [[84, "simple-web-programming"]], "Sensors Web Pages": [[85, "sensors-web-pages"]], "Python": [[86, "python"], [188, "python"], [398, "python"], [403, "python"]], "Embedded Computing STECE-2020)": [[87, "embedded-computing-stece-2020"]], "SS2022": [[88, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[88, "block-1-linux-and-working-with-remote-embedded-devices"], [115, "block-1-linux-and-working-with-remote-embedded-devices"], [151, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[88, "block-2-c-on-linux-local-and-cross-development"], [115, "block-2-c-on-linux-local-and-cross-development"], [151, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[88, "block-3-c"], [115, "block-3-c"], [151, "block-3-c"]], "2022-03-08": [[89, "id1"]], "Homework": [[89, "homework"], [90, "homework"], [92, "homework"], [95, "homework"], [138, "homework"]], "2022-03-10": [[90, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[91, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[91, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[91, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[92, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[93, "ku"]], "2022-03-28": [[94, "id1"]], "2022-04-01": [[95, "id1"]], "SS2022: Logs": [[96, "ss2022-logs"]], "WS2022": [[97, "ws2022"]], "Plan: Evolution": [[97, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[98, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[98, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[98, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[98, "question-3-memory-leak"]], "Question 4: std::vector": [[98, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[99, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[99, "cross-development"], [143, "cross-development"], [144, "cross-development"], [305, "cross-development"], [378, "cross-development"], [1068, "cross-development"], [1069, "cross-development"]], "C++, OO": [[99, "c-oo"]], "Lab Exam 2023-01-17": [[100, "lab-exam-2023-01-17"]], "Project Setup": [[100, "project-setup"], [188, "project-setup"], [600, "project-setup"], [1178, "project-setup"]], "Exercises": [[100, "exercises"], [168, "exercises"], [209, "exercises"], [241, "exercises"], [251, "exercises"], [251, "id1"], [251, "id3"], [309, "Exercises"], [314, "exercises"], [333, "exercises"], [333, "id1"], [336, "exercises"], [340, "exercises"], [370, "exercises"], [370, "id1"], [379, "exercises"], [379, "id1"], [379, "id2"], [553, "exercises"], [555, "exercises"], [562, "exercises"], [590, "exercises"], [607, "exercises"], [609, "exercises"], [650, "exercises"], [664, "exercises"], [714, "exercises"], [739, "exercises"], [837, "exercises"], [1076, "exercises"], [1105, "exercises"], [1150, "exercises"]], "Exam Submission": [[100, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[101, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[101, "unix-linux-concepts"], [102, "unix-linux-concepts"]], "Toolchain": [[101, "toolchain"], [102, "toolchain"], [148, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[102, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[103, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[104, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[105, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[105, "question-1"], [108, "question-1"]], "Question 1.1": [[105, "question-1-1"]], "Question 1.2": [[105, "question-1-2"]], "Question 2": [[105, "question-2"], [108, "question-2"]], "Question 2.1": [[105, "question-2-1"]], "Question 2.2 (Why?)": [[105, "question-2-2-why"]], "Question 3": [[105, "question-3"]], "Exam WS2023/2024": [[106, "exam-ws2023-2024"]], "All Questions": [[106, "all-questions"]], "All questions": [[106, null]], "Exams": [[106, "exams"], [114, "exams"]], "Questions 2024": [[107, "questions-2024"]], "const Objects": [[108, "const-objects"]], "Parameter Passing": [[109, "parameter-passing"]], "Question 1: Which One Is Better?": [[109, "question-1-which-one-is-better"]], "Question2: Why?": [[109, "question2-why"]], "SOLID: Hysteresis With Display": [[110, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[111, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[112, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[112, "program-output-version-1"]], "Program Output, Version 2": [[112, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[113, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[113, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[113, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[113, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[113, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[113, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[113, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[113, "push-into-fork-on-github"]], "Embedded Computing (STECE-2021)": [[114, "embedded-computing-stece-2021"]], "Two Semesters": [[114, "two-semesters"]], "Supporting Material": [[114, "supporting-material"]], "SS2023": [[115, "ss2023"]], "Finish: Written Exam": [[115, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[116, "done-boiling-pot-the-beginning"]], "Standup Records": [[116, "standup-records"], [117, "standup-records"], [118, "standup-records"], [119, "standup-records"], [120, "standup-records"], [124, "standup-records"], [128, "standup-records"], [132, "standup-records"]], "2023-11-20": [[116, "id1"], [120, "id1"], [128, "id1"], [132, "id1"]], "2023-12-14": [[116, "id2"], [117, "id1"], [120, "id2"], [128, "id2"]], "Requirements": [[116, "requirements"], [117, "requirements"], [118, "requirements"], [119, "requirements"], [120, "requirements"], [121, "requirements"], [122, "requirements"], [123, "requirements"], [124, "requirements"], [126, "requirements"], [128, "requirements"], [132, "requirements"], [542, "requirements"], [566, "requirements"], [597, "requirements"], [725, "requirements"]], "Implementation": [[116, "implementation"], [120, "implementation"], [121, "implementation"], [123, "implementation"], [126, "implementation"], [128, "implementation"], [132, "implementation"], [166, "implementation"], [601, "implementation"]], "Testing": [[116, "testing"], [120, "testing"], [121, "testing"], [123, "testing"], [126, "testing"], [128, "testing"], [132, "testing"], [307, "testing"]], "Future (Not Part Of This Development Cycle)": [[116, "future-not-part-of-this-development-cycle"], [120, "future-not-part-of-this-development-cycle"], [121, "future-not-part-of-this-development-cycle"], [123, "future-not-part-of-this-development-cycle"], [126, "future-not-part-of-this-development-cycle"], [128, "future-not-part-of-this-development-cycle"], [132, "future-not-part-of-this-development-cycle"]], "Dependencies": [[116, "dependencies"], [117, "dependencies"], [118, "dependencies"], [119, "dependencies"], [120, "dependencies"], [121, "dependencies"], [122, "dependencies"], [123, "dependencies"], [124, "dependencies"], [125, "dependencies"], [126, "dependencies"], [127, "dependencies"], [128, "dependencies"], [132, "dependencies"], [384, "dependencies"], [385, "dependencies"], [386, "dependencies"], [387, "dependencies"], [389, "dependencies"], [517, "dependencies"], [523, "dependencies"], [533, "dependencies"], [536, "dependencies"], [548, "dependencies"], [562, "dependencies"], [590, "dependencies"], [607, "dependencies"], [609, "dependencies"], [620, "dependencies"], [686, "dependencies"], [692, "dependencies"], [696, "dependencies"], [704, "dependencies"], [706, "dependencies"], [709, "dependencies"], [714, "dependencies"], [722, "dependencies"], [723, "dependencies"], [725, "dependencies"], [726, "dependencies"], [728, "dependencies"], [729, "dependencies"], [730, "dependencies"], [731, "dependencies"], [732, "dependencies"], [733, "dependencies"], [734, "dependencies"], [735, "dependencies"], [736, "dependencies"], [737, "dependencies"], [738, "dependencies"], [744, "dependencies"], [751, "dependencies"], [758, "dependencies"], [769, "dependencies"], [793, "dependencies"], [798, "dependencies"], [824, "dependencies"], [914, "dependencies"], [915, "dependencies"], [916, "dependencies"], [920, "dependencies"], [921, "dependencies"], [935, "dependencies"], [936, "dependencies"], [937, "dependencies"], [956, "dependencies"], [961, "dependencies"], [962, "dependencies"], [965, "dependencies"], [999, "dependencies"], [1001, "dependencies"], [1008, "dependencies"], [1014, "dependencies"], [1016, "dependencies"], [1024, "dependencies"], [1026, "dependencies"], [1028, "dependencies"], [1042, "dependencies"], [1045, "dependencies"], [1069, "dependencies"], [1071, "dependencies"], [1072, "dependencies"], [1073, "dependencies"], [1076, "dependencies"], [1077, "dependencies"], [1091, "dependencies"], [1098, "dependencies"], [1100, "dependencies"], [1113, "dependencies"], [1147, "dependencies"], [1148, "dependencies"], [1151, "dependencies"], [1152, "dependencies"], [1153, "dependencies"], [1155, "dependencies"], [1156, "dependencies"], [1157, "dependencies"], [1158, "dependencies"], [1159, "dependencies"], [1160, "dependencies"], [1164, "dependencies"], [1165, "dependencies"], [1166, "dependencies"], [1167, "dependencies"], [1168, "dependencies"], [1170, "dependencies"], [1171, "dependencies"], [1172, "dependencies"], [1173, "dependencies"], [1174, "dependencies"], [1175, "dependencies"], [1176, "dependencies"], [1178, "dependencies"], [1179, "dependencies"], [1180, "dependencies"], [1181, "dependencies"], [1182, "dependencies"], [1183, "dependencies"], [1185, "dependencies"], [1186, "dependencies"], [1187, "dependencies"], [1188, "dependencies"], [1201, "dependencies"], [1204, "dependencies"], [1205, "dependencies"], [1207, "dependencies"], [1211, "dependencies"], [1218, "dependencies"], [1223, "dependencies"], [1229, "dependencies"]], "Boiling Pot: Basic Integration": [[117, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[118, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[119, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[120, "done-data-logger"]], "Data Logger: CSV Sink": [[121, "data-logger-csv-sink"]], "Column name configuration": [[121, "column-name-configuration"]], "output()": [[121, "output"]], "Data Logger: Integration": [[122, "data-logger-integration"]], "Data Logger: MQTT Sink": [[123, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[123, "mqtt-implementation-mosquitto"]], "Installation": [[123, "installation"], [173, "installation"], [417, "installation"], [1006, "installation"], [1145, "installation"], [1207, "installation"], [1231, "installation"]], "Wrapper": [[123, "wrapper"]], "Display Interface/Infrastructure": [[124, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[124, "new-interface-percentagedisplay"]], "Existing Implementations": [[124, "existing-implementations"]], "Composite Display": [[124, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[124, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[125, "ws2023-24-group-project-tasks"]], "Tasks": [[125, "tasks"], [133, "tasks"], [1049, "tasks"]], "Datalogger": [[125, "datalogger"], [133, "datalogger"]], "Boiling Pot": [[125, "boiling-pot"], [133, "boiling-pot"]], "Peripherals": [[125, "peripherals"], [133, "peripherals"]], "Client": [[125, "client"], [1207, "client"]], "libgpiod Switch": [[126, "libgpiod-switch"]], "Python MQTT Subscriber": [[127, "python-mqtt-subscriber"]], "Notes": [[127, "notes"], [164, "notes"], [542, "notes"], [160, "notes"], [163, "notes"]], "Temperature Display: LED Via A PWM Controller": [[128, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[129, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[130, "done-onewire-sensor"]], "(DONE) Switch Interface": [[131, "done-switch-interface"]], "SysFS GPIO Switch": [[132, "sysfs-gpio-switch"], [133, "sysfs-gpio-switch"]], "WS2023/24": [[133, "ws2023-24"]], "2023-10-05 (6 VO)": [[133, "vo"]], "OO: Recap": [[133, "oo-recap"]], "Plan \ud83d\udcaa": [[133, "plan-muscle"]], "OO: Polymorphism": [[133, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[133, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[133, "tasks-first-round"]], "2023-11-03 (6 VO)": [[133, "id1"]], "Organizational": [[133, "organizational"]], "OO: Design?": [[133, "oo-design"]], "Project": [[133, "project"], [133, "id3"], [133, "id5"], [133, "id7"], [133, "id9"], [133, "id11"], [133, "id13"], [133, "id15"], [133, "id17"], [209, "project"]], "Hardware Overview": [[133, "hardware-overview"]], "2023-11-09 (3 VO)": [[133, "id2"]], "2023-11-10 (3 VO)": [[133, "id4"]], "2023-11-17 (3 VO)": [[133, "id6"]], "OO, And Software Development At Large": [[133, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[133, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[133, "id8"]], "Container Templates (std::map)": [[133, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[133, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[133, "datalogger-pull-request"]], "Boiling Pot, Switches": [[133, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[133, "id10"]], "Structure": [[133, "structure"], [585, "structure"]], "Renames": [[133, "renames"]], "2023-12-14 (6 VO)": [[133, "id12"]], "2024-01-08 (6 VO)": [[133, "id14"]], "2024-01-11 (6 VO)": [[133, "id16"]], "2024-02-02 (Exam)": [[133, "exam"]], "Relevant Topics": [[133, "relevant-topics"]], "A Sample Exam": [[133, "a-sample-exam"]], "Embedded Computing (STECE-2022)": [[134, "embedded-computing-stece-2022"]], "Gl\u00fchwein Trinken?": [[135, "gluhwein-trinken"]], "2024-03-04(6): Introduction": [[136, "introduction"]], "Quiz": [[136, "quiz"]], "Intro: Course Contents": [[136, "intro-course-contents"]], "Homework: WSL Installation": [[136, "homework-wsl-installation"]], "2024-03-21(6): OS Concepts, Shell, SSH": [[137, "os-concepts-shell-ssh"]], "Intro: Course Contents (cont\u2019d)": [[137, "intro-course-contents-cont-d"]], "OS Concepts": [[137, "os-concepts"]], "Shell Usage": [[137, "shell-usage"]], "SSH Setup": [[137, "ssh-setup"]], "2024-04-14(6): SSH, Permissions (Incl. Exercise)": [[138, "ssh-permissions-incl-exercise"]], "SSH: Secure Shell": [[138, "ssh-secure-shell"], [326, "ssh-secure-shell"], [1001, "ssh-secure-shell"]], "File System Permissions": [[138, "file-system-permissions"], [326, "file-system-permissions"], [326, "id2"], [370, "file-system-permissions"], [943, "file-system-permissions"]], "2024-04-17(6): Toolchain, Makefiles, CMake": [[139, "toolchain-makefiles-cmake"]], "Recap, Outlook": [[139, "recap-outlook"]], "Toolchain Intro, And Basic Makefiles": [[139, "toolchain-intro-and-basic-makefiles"]], "CMake, Native Build": [[139, "cmake-native-build"], [140, "cmake-native-build"]], "2024-04-22(6): CMake, Systems Programming/File-IO, Homework": [[140, "cmake-systems-programming-file-io-homework"]], "Systems Programming Basics: File I/O": [[140, "systems-programming-basics-file-i-o"]], "Homework (until next time - 2024-05-06)": [[140, "homework-until-next-time-2024-05-06"]], "Exercise: Reading A Sensor (Driven By Tests)": [[141, "exercise-reading-a-sensor-driven-by-tests"], [142, "exercise-reading-a-sensor-driven-by-tests"]], "exercises/02-sensor: Exercise Structure": [[141, "exercises-02-sensor-exercise-structure"]], "tests/suite-sensor.cpp: Unit Tests (Requirements Definition)": [[141, "tests-suite-sensor-cpp-unit-tests-requirements-definition"]], "lib/sensor.c: Sensor Implementation": [[141, "lib-sensor-c-sensor-implementation"]], "See also": [[141, null], [380, null], [380, null], [380, null], [380, null], [380, null], [380, null], [380, null], [471, null], [512, null], [513, null], [513, null], [514, null], [515, null], [518, null], [518, null], [519, null], [519, null], [522, null], [522, null], [522, null], [524, null], [526, null], [526, null], [526, null], [526, null], [526, null], [528, null], [531, null], [648, null], [649, null], [652, null], [652, null], [653, null], [654, null], [721, null], [725, null], [725, null], [819, null], [819, null], [918, null], [924, null], [924, null], [925, null], [925, null], [925, null], [930, null], [931, null], [987, null], [994, null], [1015, null], [1044, null], [1047, null], [1051, null], [1053, null], [1066, null], [1068, null], [1133, null], [1031, null]], "Documentation": [[141, null], [151, null], [373, null], [373, null], [507, null], [507, null], [512, null], [512, null], [513, null], [513, null], [513, null], [514, null], [514, null], [515, null], [515, null], [519, null], [519, null], [519, null], [519, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [521, null], [522, null], [522, null], [522, null], [524, null], [524, null], [524, null], [524, null], [524, null], [524, null], [526, null], [526, null], [526, null], [526, null], [526, null], [527, null], [528, null], [530, null], [681, null], [682, null], [683, null], [684, null], [685, null], [687, null], [688, null], [689, null], [690, null], [693, null], [694, null], [697, null], [702, null], [721, null], [721, null], [721, null], [721, null], [721, null], [721, null], [721, null], [725, null], [725, null], [819, null], [851, null], [851, null], [867, null], [869, "documentation"], [869, null], [873, "documentation"], [875, null], [875, null], [875, null], [901, "documentation"], [904, "documentation"], [914, null], [915, null], [918, null], [923, null], [923, null], [930, null], [931, null], [932, null], [932, null], [932, null], [933, null], [948, null], [948, null], [948, null], [949, null], [950, null], [951, null], [967, null], [967, null], [967, null], [970, null], [971, null], [993, null], [1005, null], [1007, null], [1009, null], [1011, null], [1012, null], [1013, null], [1015, null], [1015, null], [1015, null], [1015, null], [1015, null], [1015, null], [1018, null], [1019, null], [1020, null], [1021, null], [1021, null], [1022, null], [1025, null], [1025, null], [1025, null], [1025, null], [1065, null], [1065, null], [1065, null], [1066, null], [1082, null], [1142, null], [1143, null], [1153, null], [1231, "documentation"], [1031, null]], "bin/read-sensor.c: Sensor Reading Program (But Wait!)": [[141, "bin-read-sensor-c-sensor-reading-program-but-wait"]], "Submission": [[141, "submission"], [166, "submission"], [1016, "submission"]], "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development": [[142, "homework-recap-exercise-reading-sensor-test-driven-development"]], "Homework, Recap": [[142, "homework-recap"]], "2024-05-13(3): Homework Recap, Cross Development Intro": [[143, "homework-recap-cross-development-intro"]], "Homework Recap": [[143, "homework-recap"]], "2024-05-27(6): Cross Development, Toolchain Installation": [[144, "cross-development-toolchain-installation"]], "Exercise: Install Cross Toolchain": [[144, "exercise-install-cross-toolchain"]], "C++ Intro: Livecoding Session": [[144, "c-intro-livecoding-session"]], "User\u2019s View": [[144, "user-s-view"]], "Exercise: Parse Lines From /etc/passwd": [[144, "exercise-parse-lines-from-etc-passwd"]], "2024-06-17(6): Container Templates": [[145, "container-templates"]], "std::vector<>, std::map<>": [[145, "std-vector-std-map"]], "auto": [[145, "auto"]], "2024-06-19(6): Sorting And Searching": [[146, "sorting-and-searching"]], "Sorting And Searching": [[146, "id1"]], "2024-06-20(3): Lab Exercise": [[147, "lab-exercise"]], "SS2024: Exam 2024-06-28 (Handout)": [[148, "ss2024-exam-2024-06-28-handout"]], "Linux: OS Concepts": [[148, "linux-os-concepts"]], "Processes, Scheduling, and Virtual Memory": [[148, "processes-scheduling-and-virtual-memory"], [920, "processes-scheduling-and-virtual-memory"], [921, "processes-scheduling-and-virtual-memory"]], "2024-06-28: Written Exam": [[149, "written-exam"]], "Embedded Computing 1 (STECE-2022): Summer": [[150, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Material": [[151, "embedded-computing-1-stece-2022-material"]], "Github Project": [[151, null], [585, "github-project"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[152, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[152, "lehrveranstaltungsbeschreibung"], [165, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[152, "umfang-der-lehrveranstaltung"], [165, "umfang-der-lehrveranstaltung"]], "Inhalte": [[152, "inhalte"], [165, "inhalte"]], "Inhaltliche Voraussetzungen": [[152, "inhaltliche-voraussetzungen"], [165, "inhaltliche-voraussetzungen"]], "Ziel": [[152, "ziel"], [165, "ziel"]], "Angaben zur Pr\u00fcfung": [[152, "angaben-zur-prufung"], [165, "angaben-zur-prufung"]], "Beurteilungsschema": [[152, "beurteilungsschema"], [165, "beurteilungsschema"]], "Bewertung der Leistungen": [[152, "bewertung-der-leistungen"], [165, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[152, "bewertungsschlussel"], [165, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[152, "hilfsmittel-bei-schriftlichen-prufungen"], [165, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[152, "wiederholungsmoglichkeiten"], [165, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[152, "anwesenheitsvorgabe"], [165, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[152, "zusatzinformationen"], [165, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[152, "empfohlene-fachliteratur"], [165, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[152, "inhalte-der-einzelnen-lehreinheiten"], [165, "inhalte-der-einzelnen-lehreinheiten"]], "2024-10-08(6): Project/Peripherals/Cross": [[153, "project-peripherals-cross"]], "Cross Development Recap": [[153, "cross-development-recap"]], "Project Kickoff: Hack Hardware In Groups": [[153, "project-kickoff-hack-hardware-in-groups"]], "Devices Overview": [[153, "devices-overview"]], "Linux And I2C": [[153, "linux-and-i2c"]], "Linux And PWM": [[153, "linux-and-pwm"]], "Linux And SPI": [[153, "linux-and-spi"]], "2024-10-23(6): Project: Linux I2C/PWM/SPI": [[154, "project-linux-i2c-pwm-spi"]], "I2C": [[154, "i2c"]], "PWM": [[154, "pwm"]], "SPI?": [[154, "spi"]], "Embedded Computing 2 (STECE-2022): Winter": [[155, "embedded-computing-2-stece-2022-winter"]], "Embedded Computing 2 (STECE-2022): Material": [[156, "embedded-computing-2-stece-2022-material"]], "ADC": [[157, "adc"]], "Display: SSD1305 OLED 2,23": [[158, "display-ssd1305-oled-2-23"]], "WAVESHARE LCD Display (ST7789)": [[159, "waveshare-lcd-display-st7789"]], "Facts": [[159, "facts"], [162, "facts"], [164, "facts"], [160, "facts"], [163, "facts"]], "Project Plan (Yay)": [[161, "project-plan-yay"]], "Goal": [[161, "goal"], [177, "goal"], [179, "goal"], [180, "goal"], [182, "goal"], [314, "goal"], [316, "goal"], [371, "goal"], [1241, "goal"], [1242, "goal"]], "Hardware-Interfaces": [[161, "hardware-interfaces"]], "Algorithms": [[161, "algorithms"], [267, "algorithms"], [686, "algorithms"]], "Motor Control: BTN9960LV": [[162, "motor-control-btn9960lv"]], "Motor Control: Servo Motor": [[164, "motor-control-servo-motor"]], "Embedded Computing 2 (STECE-2022): Syllabus": [[165, "embedded-computing-2-stece-2022-syllabus"]], "Exam: Hysteresis": [[166, "exam-hysteresis"]], "Requirement": [[166, "requirement"], [255, "requirement"], [563, "requirement"], [585, "requirement"], [586, "requirement"], [587, "requirement"], [591, "requirement"], [592, "requirement"], [593, "requirement"], [594, "requirement"], [595, "requirement"], [596, "requirement"], [1016, "requirement"], [1023, "requirement"], [1147, "requirement"], [1148, "requirement"], [1169, "requirement"], [1180, "requirement"], [1181, "requirement"], [1182, "requirement"], [1183, "requirement"], [1185, "requirement"], [1186, "requirement"], [1187, "requirement"], [1188, "requirement"]], "Work Instructions": [[166, "work-instructions"]], "Preparation": [[166, "preparation"], [225, "preparation"], [226, "preparation"], [228, "preparation"], [229, "preparation"], [230, "preparation"], [231, "preparation"], [661, "preparation"]], "Design Tools And Laboratory Engineering (2024)": [[167, "design-tools-and-laboratory-engineering-2024"], [168, "design-tools-and-laboratory-engineering-2024"]], "Work Environment": [[168, null], [294, "work-environment"], [296, "work-environment"], [314, "work-environment"], [315, "work-environment"], [316, "work-environment"], [405, "work-environment"]], "C": [[168, "c"]], "Type System, Structures, Pointers And Arrays": [[168, "type-system-structures-pointers-and-arrays"]], "Recommended Readings, Links": [[168, "recommended-readings-links"], [168, "id1"]], "Linux Basics": [[168, "linux-basics"], [917, "linux-basics"]], "Filesystem Commands": [[168, "filesystem-commands"]], "Embedded Computing (FH Joanneum Graz)": [[169, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[170, "git-notes"]], "Bring Local Branch Upstream": [[170, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[170, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[170, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[172, "packaging-this-site-on-pypi"]], "Log": [[172, "log"], [225, "log"], [226, "log"], [229, "log"], [230, "log"], [238, "log"], [240, "log"], [241, "log"], [243, "log"], [246, "log"], [250, "log"], [252, "log"], [256, "log"], [259, "log"], [268, "log"], [280, "log"], [289, "log"]], "Gaphor": [[173, "gaphor"]], "Decadent": [[173, "decadent"]], "Manual": [[173, "manual"]], "Modeling": [[173, "modeling"]], "Using Gaphor As A Library": [[173, "using-gaphor-as-a-library"]], "Install": [[173, "install"]], "Jupyter Notebook": [[173, "jupyter-notebook"], [238, "jupyter-notebook"], [240, "jupyter-notebook"], [257, "jupyter-notebook"], [259, "jupyter-notebook"], [262, "jupyter-notebook"], [268, "jupyter-notebook"], [273, "jupyter-notebook"], [276, "jupyter-notebook"], [279, "jupyter-notebook"], [393, "Jupyter-Notebook"], [1197, "jupyter-notebook"]], "Hochk\u00f6nig": [[174, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[174, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[174, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Playground": [[175, "playground"]], "In the Works": [[175, "in-the-works"]], "Not Yet in the Works": [[175, "not-yet-in-the-works"]], "pending_xref": [[176, "pending-xref"]], "Audio Chip Bringup": [[177, "audio-chip-bringup"]], "Findings": [[177, "findings"]], "Get Debian 10 Kernel Config": [[178, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[178, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[178, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[179, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[180, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[180, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[181, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[182, "dirty-upgrade-path"]], "Steps": [[182, "steps"]], "Wait for Customer Hardware": [[183, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[184, "extract-kernel-from-intel-yocto-bsp"]], "Refactoring The Homepage": [[185, "refactoring-the-homepage"]], "Creating Screencasts": [[186, "creating-screencasts"]], "OpenShot": [[186, "openshot"]], "SEO": [[187, "seo"]], "Sitemap": [[187, "sitemap"]], "Meta Information": [[187, "meta-information"]], "Courses": [[187, "courses"], [1243, "courses"], [1248, "courses"], [1253, "courses"], [1262, "courses"]], "Yocto": [[188, "yocto"], [188, "id1"], [984, "yocto"]], "Basic Information": [[188, "basic-information"]], "Raspberry Build": [[188, "raspberry-build"]], "Build/Fix Loop": [[188, "build-fix-loop"]], "Todo": [[188, "todo"], [215, "id1"], [218, "id2"], [218, "id3"], [505, "todo"], [621, "id1"], [624, "id1"], [627, "id1"], [630, "id1"], [633, "id1"], [636, "id1"], [639, "id1"], [844, "id1"], [848, "id1"], [856, "id2"], [1054, "id1"], [1057, "id1"], [1061, "id1"], [1230, "id1"], [1235, "id1"]], "Next Steps": [[188, "next-steps"]], "QEMU": [[188, "qemu"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[189, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[189, "basics"], [259, "basics"], [286, "basics"], [301, "basics"], [321, "basics"], [322, "basics"], [322, "id1"], [327, "basics"], [328, "basics"], [328, "id1"], [349, "basics"], [355, "basics"], [361, "basics"], [362, "basics"], [365, "basics"], [366, "basics"], [374, "basics"], [375, "basics"], [377, "basics"], [378, "basics"], [393, "Basics"], [460, "basics"], [665, "basics"], [677, "basics"], [697, "basics"], [796, "basics"], [913, "basics"], [1033, "basics"], [1142, "basics"]], "Getting X-Loader and U-Boot": [[189, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[189, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[189, "repairing-the-nand"]], "Writing X-Loader to NAND": [[189, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[189, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[190, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[190, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[190, "signals-aren-t-messages"]], "References": [[190, null], [190, null], [190, null], [261, "References"], [264, "References"], [656, "references"]], "Message Queues aren\u2019t Message Queues": [[190, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[190, "semaphores-and-mutexes"]], "Timers": [[190, "timers"]], "Polling": [[190, "polling"]], "Event Dispatching": [[190, "event-dispatching"]], "Interrupts": [[190, "interrupts"], [870, "interrupts"]], "Realtime": [[190, "realtime"], [1051, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[191, "saving-solid-state-disk-life-gentoo"]], "Rant": [[191, "rant"], [210, "Rant"], [1067, null]], "No Swap": [[191, "no-swap"]], "tmpfs instances here and there": [[191, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[191, "syslog-var-log-messages"]], "Mountpoint for messages": [[191, "mountpoint-for-messages"]], "Logrotate": [[191, "logrotate"]], "Kernel I/O Scheduler": [[191, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[191, "use-ram-for-the-kernel-build"]], "Things that are left": [[191, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[192, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[192, "process-stack-management"]], "Conclusion": [[192, "conclusion"], [192, "id1"], [986, "conclusion"], [994, "conclusion"]], "Thread (pthread) Stack Management": [[192, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[192, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[192, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[192, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[192, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[192, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[192, "how-does-this-work"]], "Realtime is different": [[192, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[193, "patching-and-building-the-fedora-kernel"]], "Why?": [[193, "why"], [1002, "why"], [1087, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[193, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[193, null], [193, null]], "Prepare the RPM Build": [[193, "prepare-the-rpm-build"]], "Install Prerequisites": [[193, "install-prerequisites"]], "Setup rpmbuild Directory": [[193, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[193, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[193, "apply-the-patch"]], "Build the Kernel RPMs": [[193, "build-the-kernel-rpms"]], "Install Kernel": [[193, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[194, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[194, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[194, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[195, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[195, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[195, "rpm-package-meh"]], "Updated on 2020-04-09": [[195, null]], "Annoyance #1: Keeps Running in Background": [[195, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[195, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[195, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[196, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[196, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[196, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[196, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[197, "using-bigbluebutton-for-online-training"]], "In this Article": [[197, null], [198, null], [200, null]], "TL;DR": [[197, "tl-dr"]], "Background Information": [[197, "background-information"]], "Hosting Setup": [[197, "hosting-setup"]], "BigBlueButton Installation": [[197, "bigbluebutton-installation"]], "Functionality Check": [[197, "functionality-check"]], "What Else?": [[197, "what-else"], [989, "what-else"], [1002, "what-else"]], "Traunstein via Zierlersteig": [[198, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[198, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[198, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[198, "die-rinne"]], "Abstieg": [[198, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[199, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[199, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[199, "ceska-koca"]], "Hinauf": [[199, "hinauf"]], "Runter": [[199, "runter"]], "Zusammenfassung": [[199, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[200, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[200, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[200, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[200, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[200, "generate-key-pair"]], "Stage Key for Enrollment": [[200, "stage-key-for-enrollment"]], "Reboot, Brick": [[200, "reboot-brick"]], "Diagnostics": [[200, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[201, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1079, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[201, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[201, "installing-crosstool-ng"]], "Prerequisites": [[201, "prerequisites"], [1146, "prerequisites"], [1244, "prerequisites"], [1245, "prerequisites"], [1249, "prerequisites"], [1250, "prerequisites"], [1251, "prerequisites"], [1252, "prerequisites"], [1253, "prerequisites"], [1254, "prerequisites"], [1255, "prerequisites"], [1260, "prerequisites"], [1261, "prerequisites"], [1264, "prerequisites"], [1265, "prerequisites"]], "Installing From Cloned Git Repository": [[201, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[201, "installing-from-release-tarball"]], "PATH, And Basic Test": [[201, "path-and-basic-test"]], "Configure Toolchain Build": [[201, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[201, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[201, "important-glibc-version"]], "The Error": [[201, "the-error"], [201, "id4"]], "The Fix": [[201, "the-fix"], [201, "id5"]], "Important: GCC Version": [[201, "important-gcc-version"]], "Toolchain Build/Install": [[201, "toolchain-build-install"]], "Test": [[201, "test"], [867, "test"]], "Simplest: C, <stdio.h>": [[201, "simplest-c-stdio-h"]], "C++, <iostream>": [[201, "c-iostream"]], "C++, <thread>": [[201, "c-thread"]], "Packaging/Distributing The Toolchain": [[201, "packaging-distributing-the-toolchain"]], "Afterword": [[201, "afterword"], [371, "afterword"]], "Posts": [[202, "posts"]], "Linux Courses: OS And Programming": [[203, "linux-courses-os-and-programming"]], "How To Book": [[204, "how-to-book"]], "Courses Overview": [[205, "courses-overview"]], "Linux Courses": [[205, "linux-courses"]], "Python Courses": [[205, "python-courses"]], "C And C++ Courses": [[205, "c-and-c-courses"]], "Miscellaneous Courses": [[205, "miscellaneous-courses"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[206, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[206, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[207, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[207, "gpios-in-userspace"]], "CAN Bus": [[207, "can-bus"], [228, "can-bus"]], "Driver Beispiele": [[207, "driver-beispiele"]], "Heizungssteuerung": [[207, "heizungssteuerung"]], "Live Hacking": [[208, "Live-Hacking"], [681, "live-hacking"], [682, "live-hacking"], [684, "live-hacking"], [685, "live-hacking"], [688, "live-hacking"], [689, "live-hacking"], [690, "live-hacking"], [702, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[208, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[208, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[208, "Dictionaries"], [237, "Dictionaries"], [309, "Dictionaries"], [323, "Dictionaries"], [393, "Dictionaries"], [1138, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[208, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[208, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[208, "Shortcuts"]], "Objektorientierte Programmierung": [[208, "Objektorientierte-Programmierung"]], "Inheritance": [[208, "Inheritance"], [248, "Inheritance"], [1106, "inheritance"]], "Date and Time and Time Deltas - datetime": [[208, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[208, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[208, "String-Representations:-__str__()"]], "subprocess": [[208, "subprocess"], [287, "subprocess"]], "enumerate(), zip()": [[208, "enumerate(),-zip()"]], "List Comprehension": [[208, "List-Comprehension"], [232, "List-Comprehension"], [271, "List-Comprehension"], [341, "List-Comprehension"], [351, "List-Comprehension"], [357, "List-Comprehension"], [1092, "list-comprehension"], [1137, "list-comprehension"]], "exec(), eval()": [[208, "exec(),-eval()"]], "Umgebender Context": [[208, "Umgebender-Context"]], "Eigener Context": [[208, "Eigener-Context"]], "json": [[208, "json"], [284, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[209, "python-individualtraining-5-tage-beginnend-28-10-2019"], [416, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[209, null], [212, null], [1062, null], [1238, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[209, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[209, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[209, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[209, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[209, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[209, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[209, "operator-overloading"], [267, "operator-overloading"], [277, "Operator-Overloading"], [298, "operator-overloading"], [333, "operator-overloading"], [620, "operator-overloading"], [646, "operator-overloading"], [659, "operator-overloading"], [1109, "operator-overloading"]], "Getters and Setters": [[209, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[209, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[209, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[209, "closures-between-local-and-global"]], "Goals of this Training": [[210, "Goals-of-this-Training"]], "Exercise": [[210, "Exercise"], [251, "exercise"], [293, "exercise"], [293, "id1"], [294, "exercise"], [296, "exercise"], [305, "exercise"], [314, "exercise"], [336, "exercise"], [370, "exercise"], [379, "exercise"], [379, "id3"], [380, "exercise"], [380, "id2"], [398, "exercise"], [404, "exercise"], [542, "exercise"], [543, "exercise"], [544, "exercise"], [546, "exercise"], [547, "exercise"], [550, "exercise"], [551, "exercise"], [736, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[210, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[210, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[210, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[210, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[210, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[210, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[210, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[210, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[210, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[210, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[211, "Random-Live-Hacking"]], "Data Types": [[211, "Data-Types"], [341, "Data-Types"]], "Mutable, Immutable": [[211, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[211, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[211, "Indices-and-Slicing"]], "for loops": [[211, "for-loops"]], "Iterator protocol": [[211, "Iterator-protocol"], [274, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[212, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[212, null], [214, null], [397, null]], "Standardthemen": [[212, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[212, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[212, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[212, "losen-einer-uni-ubung"]], "Proposal": [[213, "proposal"]], "Signals": [[213, "signals"]], "Posix IPC (and Virtual Memory)": [[213, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[213, "unix-domain-sockets"]], "Application in your Company": [[213, "application-in-your-company"]], "Further Thoughts": [[213, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[214, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[215, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[216, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[216, null]], "Kursaufbau": [[216, "kursaufbau"]], "Kursverlauf": [[216, "kursverlauf"], [224, "kursverlauf"]], "Tag 1": [[216, "tag-1"], [235, "tag-1"], [243, "tag-1"], [246, "tag-1"], [252, "tag-1"], [268, "tag-1"], [280, "tag-1"]], "Tag 2": [[216, "tag-2"], [235, "tag-2"], [243, "tag-2"], [246, "tag-2"], [252, "tag-2"], [268, "tag-2"], [280, "tag-2"]], "Tag 3": [[216, "tag-3"], [235, "tag-3"], [246, "tag-3"], [268, "tag-3"], [280, "tag-3"]], "Tag 4": [[216, "tag-4"], [246, "tag-4"], [268, "tag-4"], [280, "tag-4"]], "Tag 5": [[216, "tag-5"]], "Installing googletest By Hand": [[217, "installing-googletest-by-hand"]], "Clone googletest Repo": [[217, "clone-googletest-repo"]], "Create Build Directory": [[217, "create-build-directory"], [218, "create-build-directory"], [599, "create-build-directory"]], "CMake, Build and Install": [[217, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[217, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[218, "software-setup-build"]], "Getting the Source": [[218, "getting-the-source"]], "Install Prerequisites and Dependencies": [[218, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[218, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[219, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[219, "flatpak"]], "Issues": [[219, "issues"]], "RPM From M$": [[219, "rpm-from-m"]], "Code": [[220, "code"], [223, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[221, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[221, null], [224, null]], "Environment": [[221, "environment"], [919, "environment"]], "Unit Testing and Test Driven Development": [[221, "unit-testing-and-test-driven-development"]], "Python Installation": [[221, "python-installation"], [1114, "python-installation"]], "Programming Environment": [[221, "programming-environment"], [305, "programming-environment"], [1114, "programming-environment"]], "Day 1: Language Basics": [[221, "day-1-language-basics"]], "Day 2: Advanced Topics": [[221, "day-2-advanced-topics"]], "Wrap-Up": [[221, "wrap-up"]], "How Was It?": [[221, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[222, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[222, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[222, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[222, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[222, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[222, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[222, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[222, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[222, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[222, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[222, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[222, "list-und-Mutability"]], "Tuple und Immutability": [[222, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[222, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[222, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[222, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[222, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[222, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[222, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[222, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[222, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[222, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[222, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[222, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[222, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[222, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[222, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[222, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[222, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[222, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[222, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[222, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[222, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[222, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[222, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[222, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[224, "python-individualtraining-18-5-2020-19-5-2020"], [416, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[224, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[225, "python-advanced-7-9-2020-10-9-2020"], [416, "python-advanced-7-9-2020-10-9-2020"]], "Training Information": [[225, null], [226, null], [228, null], [229, null], [230, null], [231, null], [233, null], [235, null], [236, null], [240, null], [243, null], [246, null], [249, null], [250, null], [251, null], [252, null], [256, null], [259, null], [268, null], [272, null], [275, null], [278, null], [280, null], [283, null], [286, null], [289, null], [298, null], [301, null], [308, null], [311, null]], "Workspace Setup": [[225, "workspace-setup"], [226, "workspace-setup"], [228, "workspace-setup"], [230, "workspace-setup"]], "Github for Exercises": [[225, "github-for-exercises"], [226, "github-for-exercises"]], "Agenda": [[225, "agenda"], [226, "agenda"], [228, "agenda"], [229, "agenda"], [230, "agenda"], [231, "agenda"], [236, "agenda"], [240, "agenda"], [241, "agenda"], [278, "agenda"], [283, "agenda"], [295, "agenda"], [304, "agenda"], [325, "agenda"], [333, "agenda"], [369, "agenda"], [1256, "agenda"]], "Advanced Core Python Topics": [[225, "advanced-core-python-topics"]], "Special Topics": [[225, "special-topics"]], "Day 1": [[225, "day-1"], [226, "day-1"], [228, "day-1"], [229, "day-1"], [230, "day-1"], [240, "day-1"], [241, "day-1"], [250, "day-1"], [251, "day-1"], [256, "day-1"], [259, "day-1"], [262, "day-1"], [265, "day-1"], [272, "day-1"], [314, "day-1"], [315, "day-1"], [316, "day-1"], [322, "day-1"], [326, "day-1"], [328, "day-1"], [333, "day-1"], [340, "day-1"], [366, "day-1"], [370, "day-1"], [373, "day-1"], [375, "day-1"], [378, "day-1"], [380, "day-1"]], "Day 2": [[225, "day-2"], [226, "day-2"], [228, "day-2"], [229, "day-2"], [230, "day-2"], [240, "day-2"], [241, "day-2"], [250, "day-2"], [251, "day-2"], [256, "day-2"], [259, "day-2"], [261, "Day-2"], [262, "day-2"], [265, "day-2"], [272, "day-2"], [305, "day-2"], [314, "day-2"], [316, "day-2"], [322, "day-2"], [326, "day-2"], [333, "day-2"], [340, "day-2"], [366, "day-2"], [370, "day-2"], [373, "day-2"], [375, "day-2"], [378, "day-2"], [380, "day-2"]], "Day 3": [[225, "day-3"], [226, "day-3"], [228, "day-3"], [229, "day-3"], [230, "day-3"], [240, "day-3"], [241, "day-3"], [250, "day-3"], [251, "day-3"], [256, "day-3"], [261, "Day-3"], [262, "day-3"], [265, "day-3"], [272, "day-3"], [305, "day-3"], [308, "day-3"], [314, "day-3"], [316, "day-3"], [322, "day-3"], [326, "day-3"], [328, "day-3"], [340, "day-3"], [366, "day-3"], [370, "day-3"], [373, "day-3"], [375, "day-3"], [378, "day-3"], [380, "day-3"]], "Day 4": [[225, "day-4"], [228, "day-4"], [240, "day-4"], [241, "day-4"], [250, "day-4"], [251, "day-4"], [305, "day-4"], [373, "day-4"], [380, "day-4"]], "Recommended Tutorials": [[225, "recommended-tutorials"]], "After Work Party": [[225, "after-work-party"], [256, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[226, "python-basics-28-9-2020-30-9-2020"], [416, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[227, "Iterables"]], "set constructor": [[227, "set-constructor"]], "Fast vs. Simple": [[227, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[227, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[227, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[227, "Object-Oriented-Programming"], [277, "Object-Oriented-Programming"], [290, "Object-Oriented-Programming"], [301, "object-oriented-programming"], [315, "object-oriented-programming"], [317, "object-oriented-programming"], [318, "object-oriented-programming"], [321, "object-oriented-programming"], [322, "object-oriented-programming"], [327, "object-oriented-programming"], [333, "object-oriented-programming"], [336, "object-oriented-programming"], [339, "object-oriented-programming"], [340, "object-oriented-programming"], [343, "object-oriented-programming"], [349, "object-oriented-programming"], [355, "object-oriented-programming"], [361, "object-oriented-programming"], [362, "object-oriented-programming"], [365, "object-oriented-programming"], [366, "object-oriented-programming"], [504, "object-oriented-programming"], [1105, "object-oriented-programming"]], "datetime": [[227, "datetime"], [254, "datetime"], [309, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[228, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[228, "additional-topics-brought-in-by-thomas"]], "Notebook": [[228, "notebook"], [249, "notebook"], [264, "Notebook"], [398, "notebook"]], "Tutorials": [[228, "tutorials"], [256, "tutorials"]], "Linux on Raspberry Pi": [[229, "linux-on-raspberry-pi"]], "Cloud Machine": [[229, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[229, "raspberry-on-participant-s-desks"]], "Basic security": [[229, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[229, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[229, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[229, "in-the-wild-watchdog"]], "TODO": [[229, "todo"], [385, "todo"], [386, "todo"], [387, "todo"], [1143, "todo"], [1206, "todo"]], "Support Material": [[229, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[230, "python-basics-23-11-2020-25-11-2020"], [416, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[230, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[231, "linux-basics-30-11-2020-3-12-2020"], [416, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[232, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[232, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[232, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[232, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[232, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[232, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[232, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[232, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[232, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[232, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[232, "Floor-Division"]], "Modulo Operator: %": [[232, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[232, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[232, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[232, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[232, "Raw-Strings"], [254, "Raw-Strings"], [271, "Raw-Strings"], [277, "Raw-Strings"], [299, "Raw-Strings"], [329, "Raw-Strings"], [1134, "raw-strings"]], "f-Strings": [[232, "f-Strings"], [351, "f-Strings"]], "Konvertierungen": [[232, "Konvertierungen"]], "Boolean": [[232, "Boolean"], [258, "Boolean"], [261, "Boolean"], [269, "Boolean"], [271, "Boolean"], [281, "Boolean"], [284, "Boolean"], [357, "Boolean"], [1123, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[232, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[232, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[232, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[232, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[232, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[232, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[232, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[232, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[232, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[232, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[232, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[232, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[232, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[232, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[232, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[232, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[232, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[232, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[232, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[232, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[232, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[232, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[232, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[232, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[232, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[232, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[232, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[232, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[232, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[232, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[232, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[232, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[232, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[232, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[232, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[232, "Liste"]], "Set": [[232, "Set"], [253, "Set"], [254, "Set"], [258, "Set"], [258, "id1"], [261, "Set"], [264, "Set"], [264, "id1"], [271, "Set"], [284, "Set"], [287, "Set"], [299, "Set"], [302, "Set"], [302, "id5"], [309, "Set"], [319, "Set"], [323, "Set"], [341, "Set"], [345, "Set"], [357, "Set"], [367, "Set"]], "8.2 Arrays": [[232, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[232, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[232, "8.4-Records"]], "8.5 Zeichenketten": [[232, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[232, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[232, "sorted,-reversed"]], "8.7 Dictionaries": [[232, "8.7-Dictionaries"]], "(jf) Records in Python": [[232, "(jf)-Records-in-Python"]], "8.8 Mengen": [[232, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[232, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[232, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[232, "\u00dcbung-1"]], "Versuch 1: in und index()": [[232, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[232, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[232, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[232, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[232, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[232, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[232, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[232, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[232, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[232, "Lokale-Variable"]], "Globale Variable (lesen)": [[232, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[232, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[232, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[232, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[232, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[232, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[232, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[232, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[232, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[232, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[232, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[233, "programmierung-grundlagen-13-und-14-1-2021"]], "\u00dcberblick": [[233, "uberblick"], [243, "uberblick"], [252, "uberblick"], [268, "uberblick"], [280, "uberblick"]], "Live-Hacking (Jupyter Notebook)": [[233, "live-hacking-jupyter-notebook"], [243, "live-hacking-jupyter-notebook"], [246, "live-hacking-jupyter-notebook"], [256, "live-hacking-jupyter-notebook"]], "Struktur": [[233, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[233, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[233, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[233, "verzweigung"]], "Schleifen": [[233, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[233, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[233, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Programmierung Grundlagen (Jupyter Notebook)": [[234, "programmierung-grundlagen-jupyter-notebook"], [244, "programmierung-grundlagen-jupyter-notebook"], [270, "programmierung-grundlagen-jupyter-notebook"], [282, "programmierung-grundlagen-jupyter-notebook"]], "Python Basics (22.2.2021 - 24.2.2021)": [[235, "python-basics-22-2-2021-24-2-2021"], [416, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[235, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[236, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[236, "books"], [286, "books"], [328, "books"], [1191, "books"]], "Python Advanced": [[237, "Python-Advanced"]], "Data Types Recap": [[237, "Data-Types-Recap"]], "Sequential Datatypes": [[237, "Sequential-Datatypes"], [269, "Sequential-Datatypes"], [281, "Sequential-Datatypes"], [351, "Sequential-Datatypes"], [1126, "sequential-datatypes"], [1126, "id1"]], "Slicing etc.": [[237, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[237, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[237, "Sets"], [237, "id1"], [245, "Sets"], [363, "Sets"], [1139, "sets"]], "for Schleife, ganz kurz": [[237, "for-Schleife,-ganz-kurz"]], "Tuple": [[237, "Tuple"], [261, "Tuple"], [264, "Tuple"], [271, "Tuple"], [284, "Tuple"], [287, "Tuple"], [299, "Tuple"], [357, "Tuple"], [363, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[237, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[237, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[237, "Listen"], [271, "Listen"], [393, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[237, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[237, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[237, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[237, "Iterable:-Der-Begriff"]], "Zufall": [[237, "Zufall"]], "Regular Expressions": [[237, "Regular-Expressions"], [290, "Regular-Expressions"], [302, "Regular-Expressions"], [351, "Regular-Expressions"], [357, "Regular-Expressions"], [978, "regular-expressions"]], "enumerate()": [[237, "enumerate()"], [245, "enumerate()"], [248, "enumerate()"], [284, "enumerate()"], [302, "enumerate()"], [319, "enumerate()"], [341, "enumerate()"], [363, "enumerate()"]], "JSON": [[237, "JSON"], [254, "JSON"], [264, "JSON"], [290, "JSON"], [299, "JSON"], [334, "JSON"], [337, "JSON"]], "2021-03-15": [[238, "id1"]], "Exercises (auf Github)": [[238, "exercises-auf-github"]], "Download": [[238, null], [240, null]], "Hallo Jupyter Notebook": [[239, "Hallo-Jupyter-Notebook"]], "Syntax": [[239, "Syntax"], [309, "Syntax"], [351, "Syntax"], [363, "Syntax"], [393, "Syntax"], [393, "id1"]], "Strings": [[239, "Strings"], [242, "Strings"], [245, "Strings"], [254, "Strings"], [258, "Strings"], [258, "id3"], [261, "Strings"], [269, "Strings"], [281, "Strings"], [299, "Strings"], [302, "Strings"], [302, "id1"], [302, "id3"], [309, "Strings"], [345, "Strings"], [372, "strings"], [393, "Strings"], [519, "strings"]], "Raw strings": [[239, "Raw-strings"]], "Variablen": [[239, "Variablen"], [271, "Variablen"]], "Tuple Unpacking": [[239, "Tuple-Unpacking"], [281, "Tuple-Unpacking"], [299, "Tuple-Unpacking"], [309, "Tuple-Unpacking"], [345, "Tuple-Unpacking"], [351, "Tuple-Unpacking"], [363, "Tuple-Unpacking"], [392, "Tuple-Unpacking"], [393, "Tuple-Unpacking"], [393, "id2"]], "Speicher, Memory Management": [[239, "Speicher,-Memory-Management"]], "Datatypes": [[239, "Datatypes"], [242, "Datatypes"], [245, "Datatypes"], [258, "Datatypes"], [261, "Datatypes"], [269, "Datatypes"], [271, "Datatypes"], [277, "Datatypes"], [281, "Datatypes"], [284, "Datatypes"], [287, "Datatypes"], [301, "datatypes"], [308, "datatypes"], [311, "datatypes"], [319, "Datatypes"], [321, "datatypes"], [322, "datatypes"], [323, "Datatypes"], [327, "datatypes"], [328, "datatypes"], [345, "Datatypes"], [349, "datatypes"], [350, "datatypes"], [355, "datatypes"], [356, "datatypes"], [357, "Datatypes"], [361, "datatypes"], [362, "datatypes"], [365, "datatypes"], [366, "datatypes"], [367, "Datatypes"], [393, "Datatypes"], [519, "datatypes"], [1121, "datatypes"]], "Mutable vs. Immutable": [[239, "Mutable-vs.-Immutable"], [290, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[239, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[239, "Aber!!!!"]], "Dictionary": [[239, "Dictionary"], [245, "Dictionary"], [253, "Dictionary"], [254, "Dictionary"], [258, "Dictionary"], [258, "id2"], [261, "Dictionary"], [264, "Dictionary"], [264, "id2"], [271, "Dictionary"], [284, "Dictionary"], [287, "Dictionary"], [299, "Dictionary"], [302, "Dictionary"], [302, "id4"], [309, "Dictionary"], [319, "Dictionary"], [323, "Dictionary"], [329, "Dictionary"], [341, "Dictionary"], [345, "Dictionary"], [357, "Dictionary"], [363, "Dictionary"], [367, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[239, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[239, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[239, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[239, "for-und-range()"]], "Objektidentit\u00e4t": [[239, "Objektidentit\u00e4t"]], "Das with Statement": [[239, "Das-with-Statement"], [248, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[239, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[239, "String-Operationen"]], "enumerate(), und verlorene Indices": [[239, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[239, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[239, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[240, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[240, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[241, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[241, null]], "Course Preparation": [[241, "course-preparation"], [294, "course-preparation"], [296, "course-preparation"], [304, "course-preparation"]], "SSH": [[241, "ssh"], [403, "ssh"]], "Linux and/or Shell on Windows Host": [[241, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[241, "editor-support-for-shell-scripting"]], "Einleitung": [[242, "Einleitung"]], "Numbers": [[242, "Numbers"], [245, "Numbers"], [269, "Numbers"], [393, "Numbers"], [1121, "numbers"]], "Integer Numbers": [[242, "Integer-Numbers"], [1121, "integer-numbers"]], "Compound Datatypes": [[242, "Compound-Datatypes"], [254, "Compound-Datatypes"], [258, "Compound-Datatypes"], [261, "Compound-Datatypes"], [264, "Compound-Datatypes"], [269, "Compound-Datatypes"], [271, "Compound-Datatypes"], [277, "Compound-Datatypes"], [281, "Compound-Datatypes"], [284, "Compound-Datatypes"], [287, "Compound-Datatypes"], [299, "Compound-Datatypes"], [323, "Compound-Datatypes"], [329, "Compound-Datatypes"], [341, "Compound-Datatypes"], [345, "Compound-Datatypes"], [357, "Compound-Datatypes"], [363, "Compound-Datatypes"], [367, "Compound-Datatypes"], [1122, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[242, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[242, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[242, "Set:-mathematische-Mengen"]], "while": [[242, "while"], [261, "while"], [277, "while"], [309, "while"], [363, "while"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[243, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[245, "Syntax-etc."], [277, "Syntax-etc."], [323, "Syntax-etc."], [1118, "syntax-etc"]], "Comments vs. Documentation": [[245, "Comments-vs.-Documentation"], [1118, "comments-vs-documentation"]], "Variables": [[245, "Variables"], [258, "Variables"], [261, "Variables"], [277, "Variables"], [287, "Variables"], [319, "Variables"], [323, "Variables"], [345, "Variables"], [351, "Variables"], [357, "Variables"], [363, "Variables"], [367, "Variables"], [393, "Variables"], [526, "variables"], [1120, "variables"]], "Assignment Fun": [[245, "Assignment-Fun"], [284, "Assignment-Fun"], [1120, "assignment-fun"]], "Assignment Details": [[245, "Assignment-Details"], [277, "Assignment-Details"], [284, "Assignment-Details"], [363, "Assignment-Details"], [367, "Assignment-Details"], [393, "Assignment-Details"], [1120, "assignment-details"]], "Operators": [[245, "Operators"], [281, "Operators"]], "Integer Arithmetic": [[245, "Integer-Arithmetic"]], "String Methods": [[245, "String-Methods"], [363, "String-Methods"], [392, "String-Methods"]], "Datatype Conversions": [[245, "Datatype-Conversions"], [269, "Datatype-Conversions"], [271, "Datatype-Conversions"], [277, "Datatype-Conversions"], [281, "Datatype-Conversions"], [284, "Datatype-Conversions"], [302, "Datatype-Conversions"], [319, "Datatype-Conversions"], [323, "Datatype-Conversions"], [329, "Datatype-Conversions"], [341, "Datatype-Conversions"], [345, "Datatype-Conversions"], [351, "Datatype-Conversions"], [363, "Datatype-Conversions"], [393, "Datatype-Conversions"], [1121, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[245, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[245, "Complex-Datatypes"], [393, "Complex-Datatypes"]], "List (mutable)": [[245, "List-(mutable)"], [258, "List-(mutable)"], [351, "List-(mutable)"]], "extend()? Iterable?": [[245, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[245, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[245, "in-Operator"], [284, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[245, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[245, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[245, "sum()"]], "map()": [[245, "map()"], [248, "map()"]], "list() function": [[245, "list()-function"]], "Performance: in Operator, und list und set": [[245, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[245, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[246, "python-grundlagen-2021-05-03-2021-05-05"], [416, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[246, "weiterfuhrende-information"]], "Visual Studio Code": [[246, "visual-studio-code"], [262, "visual-studio-code"], [1191, "visual-studio-code"]], "Python Beginner Tutorials": [[246, "python-beginner-tutorials"], [286, "python-beginner-tutorials"], [1191, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[246, "numpy-and-data-science-tutorials"], [286, "numpy-and-data-science-tutorials"], [289, "numpy-and-data-science-tutorials"], [322, "numpy-and-data-science-tutorials"], [1191, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[246, "pypi-installing-modules-that-don-t-come-as-batteries"], [1191, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[246, "git-and-github"], [1191, "git-and-github"]], "Conference Talks": [[246, "conference-talks"], [322, "conference-talks"], [1191, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[247, "python-grundlagen-jupyter-notebook"], [260, "python-grundlagen-jupyter-notebook"], [263, "python-grundlagen-jupyter-notebook"], [266, "python-grundlagen-jupyter-notebook"], [285, "python-grundlagen-jupyter-notebook"], [288, "python-grundlagen-jupyter-notebook"], [291, "python-grundlagen-jupyter-notebook"], [300, "python-grundlagen-jupyter-notebook"], [303, "python-grundlagen-jupyter-notebook"], [324, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[248, "import-zipfile"]], "Read Contents \u2026": [[248, "Read-Contents-..."]], "Extract One Member": [[248, "Extract-One-Member"]], "All in One, Using with": [[248, "All-in-One,-Using-with"]], "Functionality: Methods": [[248, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[248, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[248, "Instance-Attributes"]], "Class Attributes": [[248, "Class-Attributes"]], "Public, Protected, Private": [[248, "Public,-Protected,-Private"]], "Properties": [[248, "Properties"], [277, "Properties"], [531, "properties"], [1110, "properties"]], "Functions, Positional and Keyword Arguments": [[248, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[248, "Positional-Arguments"]], "Keyword Arguments": [[248, "Keyword-Arguments"], [269, "Keyword-Arguments"], [394, "Keyword-Arguments"], [1132, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[248, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[248, "The-range()-Function"], [254, "The-range()-Function"], [261, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[248, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[248, "Iterable"], [264, "Iterable"]], "list(), and iterable?": [[248, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[248, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[248, "Decorators,-etc."]], "NoneType and None": [[248, "NoneType-and-None"]], "File I/O": [[248, "File-I/O"], [277, "File-I/O"], [284, "File-I/O"], [287, "File-I/O"], [319, "File-I/O"], [323, "File-I/O"], [357, "File-I/O"], [363, "File-I/O"], [390, "File-I/O"], [1024, "file-i-o"], [1140, "file-i-o"]], "Iteration, yield, Recursion": [[248, "Iteration,-yield,-Recursion"]], "Recursion": [[248, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[248, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[248, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[248, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[248, "zip()"]], "filter(), and several other methods to do the same": [[248, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[248, "OSError,-errno"]], "The platform Module, sys.path": [[248, "The-platform-Module,-sys.path"]], "os.path": [[248, "os.path"], [264, "os.path"], [271, "os.path"]], "Exceptions und so (assert())": [[248, "Exceptions-und-so-(assert())"]], "AssertionError": [[248, "AssertionError"]], "Random Questions": [[248, "Random-Questions"]], "Slicing": [[248, "Slicing"], [271, "Slicing"], [277, "Slicing"], [302, "Slicing"], [323, "Slicing"], [1212, "slicing"]], "OO": [[248, "OO"], [316, "oo"], [407, "oo"], [620, "oo"]], "String Formatting": [[248, "String-Formatting"], [254, "String-Formatting"], [1135, "string-formatting"]], "import datetime": [[248, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[249, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[249, "predefined-streams"]], "PCAP Exam Syllabus": [[249, "pcap-exam-syllabus"], [262, "pcap-exam-syllabus"]], "2021-06-09": [[249, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[250, "programmieren-mit-c-2021-06-14-2021-06-18"], [416, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[250, "preparation-tools"]], "State machine": [[250, "state-machine"]], "Regular Course Topics": [[250, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[250, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[250, "regular-course-material"], [250, "id1"]], "Group Project Kick-Off :-)": [[250, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[250, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[250, "group-project-use-case-driven-course-flow"]], "Day 5": [[250, "day-5"], [251, "day-5"], [305, "day-5"], [380, "day-5"]], "Pointer Recap": [[250, "pointer-recap"]], "On With Group Project": [[250, "on-with-group-project"]], "C++ Basics": [[250, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[250, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[251, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[251, "setup-for-the-new-kids"]], "Recapitulate some C": [[251, "recapitulate-some-c"]], "Group project review": [[251, "group-project-review"]], "Jump into C++": [[251, "jump-into-c"]], "Regular Topics": [[251, "regular-topics"], [251, "id2"], [251, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[251, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[251, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[251, "finish-first-user-database-functionality"]], "Unit Testing": [[251, "unit-testing"], [308, "unit-testing"], [311, "unit-testing"], [406, "unit-testing"]], "GTest Installation": [[251, "gtest-installation"]], "Git Workflows": [[251, "git-workflows"]], "Day X": [[251, "day-x"]], "Smart Pointers, Recap": [[251, "smart-pointers-recap"]], "std::map": [[251, "std-map"], [697, "std-map"]], "OO, and Polymorphism": [[251, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[252, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [416, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[252, "variablen-und-datentypen"], [268, "variablen-und-datentypen"], [280, "variablen-und-datentypen"]], "Kontrollstrukturen": [[252, "kontrollstrukturen"], [268, "kontrollstrukturen"], [269, "Kontrollstrukturen"], [280, "kontrollstrukturen"]], "Datenstrukturen": [[253, "Datenstrukturen"]], "List": [[253, "List"], [254, "List"], [261, "List"], [264, "List"], [284, "List"], [287, "List"], [299, "List"], [302, "List"], [329, "List"], [341, "List"], [357, "List"], [367, "List"], [1219, "list"]], "Iteration": [[253, "Iteration"], [253, "id1"], [254, "Iteration"], [254, "id1"], [264, "Iteration"], [287, "Iteration"], [299, "Iteration"], [341, "Iteration"], [367, "Iteration"], [367, "id1"]], "User Datenbank: Showcase Full Stack Development": [[253, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[253, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[253, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[253, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[253, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[253, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[254, "Iterable?"]], "List Comprehension, Generator Expression": [[254, "List-Comprehension,-Generator-Expression"]], "Literals": [[254, "Literals"], [564, "literals"]], "Quoting?": [[254, "Quoting?"], [258, "Quoting?"]], "Multiline Strings": [[254, "Multiline-Strings"], [258, "Multiline-Strings"], [351, "Multiline-Strings"], [1134, "multiline-strings"]], "Functionality": [[254, "Functionality"], [911, "functionality"]], "strip() and friends": [[254, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[254, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[254, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[255, "read-a-cleaned-up-sap-export"]], "Solution": [[255, "solution"], [542, "solution"], [544, "solution"], [547, "solution"], [1227, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[256, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[258, "Initial-Terminology"]], "Sequence": [[258, "Sequence"]], "Tuple (immutable)": [[258, "Tuple-(immutable)"], [351, "Tuple-(immutable)"]], "References, (Im)mutability": [[258, "References,-(Im)mutability"], [271, "References,-(Im)mutability"], [284, "References,-(Im)mutability"], [287, "References,-(Im)mutability"], [302, "References,-(Im)mutability"], [309, "References,-(Im)mutability"], [323, "References,-(Im)mutability"], [329, "References,-(Im)mutability"], [329, "id1"], [341, "References,-(Im)mutability"], [363, "References,-(Im)mutability"], [1130, "references-im-mutability"]], "Iteration, for, and range()": [[258, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[258, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[258, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[258, "List-and-Tuple"]], "matplotlib": [[258, "matplotlib"], [290, "matplotlib"]], "File I/O, and Strings": [[258, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[258, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[258, "Miscellaneous-String-Methods"], [269, "Miscellaneous-String-Methods"], [271, "Miscellaneous-String-Methods"], [277, "Miscellaneous-String-Methods"], [287, "Miscellaneous-String-Methods"], [302, "Miscellaneous-String-Methods"], [323, "Miscellaneous-String-Methods"], [329, "Miscellaneous-String-Methods"], [351, "Miscellaneous-String-Methods"], [357, "Miscellaneous-String-Methods"], [367, "Miscellaneous-String-Methods"], [1136, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[259, "python-basics-2021-08-31-2021-09-01"], [416, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[259, "numerics-and-ai"]], "Mountains near Graz": [[259, "mountains-near-graz"]], "2021-11-17": [[261, "2021-11-17"]], "Enter Tuples": [[261, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[261, "Datatype-Conversions,-Type-Names"]], "NoneType": [[261, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[261, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[261, "Exercise:-Mixed-List"]], "Python Documentation": [[261, "Python-Documentation"]], "for": [[261, "for"], [323, "for"], [367, "for"], [393, "for"]], "Iteration over Compound Datatypes": [[261, "Iteration-over-Compound-Datatypes"], [271, "Iteration-over-Compound-Datatypes"]], "File IO": [[261, "File-IO"], [277, "File-IO"], [305, "file-io"], [309, "File-IO"], [345, "File-IO"], [351, "File-IO"]], "Generators, Iterator Protocol, for": [[261, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[261, "Common-Sequence-Operation"]], "Comprehensions": [[261, "Comprehensions"], [264, "Comprehensions"], [277, "Comprehensions"], [309, "Comprehensions"], [341, "Comprehensions"]], "List, Iterable? WTF?": [[261, "List,-Iterable?-WTF?"]], "Dict and iterable": [[261, "Dict-and-iterable"]], "More on Lists": [[261, "More-on-Lists"], [269, "More-on-Lists"], [284, "More-on-Lists"]], "More on Dictionaries": [[261, "More-on-Dictionaries"], [269, "More-on-Dictionaries"]], "References, Mutability": [[261, "References,-Mutability"]], "CSV": [[261, "CSV"], [278, "csv"], [286, "csv"], [323, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[262, "python-basics-2021-11-17-2021-11-19"], [416, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[262, "python-core-topics"]], "Python Standard Library": [[262, "python-standard-library"]], "More About Strings": [[264, "More-About-Strings"], [281, "More-About-Strings"], [329, "More-About-Strings"], [351, "More-About-Strings"], [357, "More-About-Strings"], [363, "More-About-Strings"], [1134, "more-about-strings"]], "List, Tuple": [[264, "List,-Tuple"], [319, "List,-Tuple"], [323, "List,-Tuple"]], "Tuple Unpacking: What Else": [[264, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[264, "Iterator-Protocol"], [271, "Iterator-Protocol"], [302, "Iterator-Protocol"], [319, "Iterator-Protocol"], [323, "Iterator-Protocol"], [351, "Iterator-Protocol"]], "yield": [[264, "yield"], [287, "yield"]], "Everything is an Object of a Type": [[264, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[264, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[264, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[264, "2021-12-17"]], "Shift Operators": [[264, "Shift-Operators"]], "PCAP Sample Exam": [[264, "PCAP-Sample-Exam"]], "System Errors": [[264, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[265, "python-advanced-2021-12-01-2021-12-03"], [416, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[265, "basics-recap"], [318, "basics-recap"]], "Group Project Preparation": [[265, "group-project-preparation"]], "Hmmm?": [[265, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[267, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [416, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[267, "id1"]], "2021-12-07": [[267, "id2"]], "2021-12-08": [[267, "id3"]], "2021-12-09": [[267, "id4"]], "2022-01-24": [[267, "id5"]], "Undefined Behavior": [[267, "undefined-behavior"]], "Modularization": [[267, "modularization"], [460, "modularization"]], "2022-01-25": [[267, "id6"]], "C++ and OO (Classes)": [[267, "c-and-oo-classes"]], "Modularization (again)": [[267, "modularization-again"]], "2022-01-26": [[267, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[267, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[267, "classes-continued"]], "2022-01-27": [[267, "id8"]], "2022-01-28": [[267, "id9"]], "Standard Template Library: Container Templates": [[267, "standard-template-library-container-templates"]], "2022-01-31": [[267, "id10"]], "2022-02-01": [[267, "id11"]], "Functors": [[267, "functors"]], "Unified Modeling Language (UML)": [[267, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[267, "exercise-using-all-from-today"]], "2022-02-02": [[267, "id12"]], "Associative Container: std::map": [[267, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[267, "exceptions-and-exception-handling"]], "2022-02-03": [[267, "id13"]], "2022-02-04": [[267, "id14"]], "C++11: A New Language": [[267, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[267, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[267, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[268, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [416, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[269, "2022-01-17"]], "Variables and Datatypes": [[269, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[269, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[269, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[269, "Integer-Numbers:-Arithmetic"], [281, "Integer-Numbers:-Arithmetic"], [1121, "integer-numbers-arithmetic"]], "Some Methods": [[269, "Some-Methods"]], "String Formatting: f-Strings": [[269, "String-Formatting:-f-Strings"]], "More about Strings": [[269, "More-about-Strings"]], "if": [[269, "if"], [309, "if"]], "2022-01-18": [[269, "2022-01-18"]], "Miscellanea": [[269, "Miscellanea"]], "Braces: Single Element Tuples?": [[269, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[269, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[269, "while-Loops"], [271, "while-Loops"], [284, "while-Loops"], [351, "while-Loops"], [367, "while-Loops"], [527, "while-loops"], [1125, "while-loops"], [1125, "id1"]], "break and continue": [[269, "break-and-continue"], [457, "break-and-continue"], [457, "id1"], [1125, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[269, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[269, "Sequence-Membership"], [1126, "sequence-membership"]], "list (mutable)": [[269, "list-(mutable)"]], "tuple (immutable)": [[269, "tuple-(immutable)"]], "dict (mutable)": [[269, "dict-(mutable)"]], "set (mutable)": [[269, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[269, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[269, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[269, "Default-Parameters"], [271, "Default-Parameters"], [394, "Default-Parameters"], [1132, "default-parameters"]], "List Comprehensions": [[269, "List-Comprehensions"], [281, "List-Comprehensions"]], "Iteration over Dictionaries": [[269, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[269, "Building-Dictionaries"], [1138, "building-dictionaries"]], "More on Sets": [[269, "More-on-Sets"]], "with: Context Managers": [[269, "with:-Context-Managers"]], "Strings Intro": [[271, "Strings-Intro"]], "Doc Strings": [[271, "Doc-Strings"]], "Object Identity": [[271, "Object-Identity"]], "Integers": [[271, "Integers"], [281, "Integers"], [284, "Integers"], [302, "Integers"], [309, "Integers"], [329, "Integers"], [345, "Integers"], [351, "Integers"], [357, "Integers"], [367, "Integers"]], "Variablen? Datenypen?": [[271, "Variablen?-Datenypen?"]], "Objects, Classes": [[271, "Objects,-Classes"]], "Python Standard Libarary Examples": [[271, "Python-Standard-Libarary-Examples"]], "collections": [[271, "collections"]], "ChainMap": [[271, "ChainMap"]], "deque": [[271, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[271, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[271, "Slice-Assignment"], [1127, "slice-assignment"]], "Lists are mutable": [[271, "Lists-are-mutable"]], "Shallow copy and deep copy": [[271, "Shallow-copy-and-deep-copy"]], "else": [[271, "else"], [277, "else"], [367, "else"]], "for Loops, range()": [[271, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[271, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[271, "dict.fromkeys()"], [284, "dict.fromkeys()"]], "Generators": [[271, "Generators"], [277, "Generators"], [317, "generators"], [318, "generators"], [322, "generators"], [339, "generators"], [343, "generators"]], "join, split": [[271, "join,-split"]], "strip, lstrip, rstrip": [[271, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[272, "python-basics-2022-02-23-2022-02-25"], [416, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[272, "data-structures"]], "OS Things": [[272, "os-things"]], "Data Science": [[272, "data-science"], [340, "data-science"], [341, "Data-Science"], [363, "Data-Science"]], "Wiederholung": [[274, "Wiederholung"]], "Mutable/Immutable": [[274, "Mutable/Immutable"]], "Attribute": [[274, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[274, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[274, "Exceptions"], [290, "Exceptions"], [315, "exceptions"], [349, "exceptions"], [355, "exceptions"], [361, "exceptions"], [365, "exceptions"], [620, "exceptions"], [666, "exceptions"], [667, "exceptions"]], "for vs. while, range()": [[274, "for-vs.-while,-range()"]], "String Methods (some)": [[274, "String-Methods-(some)"]], "eval()": [[274, "eval()"], [284, "eval()"], [341, "eval()"]], "exec()": [[274, "exec()"], [290, "exec()"], [351, "exec()"]], "Dictionary Iteration": [[274, "Dictionary-Iteration"], [367, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[274, "Classes,-Attributes,-OO"]], "Types and Instances": [[274, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[274, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[274, "OO-Everywhere"]], "Dictionary Operations": [[274, "Dictionary-Operations"]], "collections.defaultdict": [[274, "collections.defaultdict"], [299, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[275, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[275, "id1"]], "2022-03-16": [[275, "id2"]], "Test Driven Development": [[275, "test-driven-development"], [317, "test-driven-development"], [339, "test-driven-development"], [340, "test-driven-development"]], "2022-03-17": [[275, "id3"]], "2022-03-31": [[275, "id4"]], "Hello World": [[277, "Hello-World"], [419, "hello-world"], [1116, "hello-world"]], "Blahblah": [[277, "Blahblah"], [676, "blahblah"], [1115, "blahblah"]], "Object Oriented?": [[277, "Object-Oriented?"]], "MQTT": [[277, "MQTT"], [343, "mqtt"], [1207, "mqtt"]], "Commandline Arguments": [[277, "Commandline-Arguments"], [471, "commandline-arguments"], [471, "id1"]], "Object Lifetime": [[277, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[277, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[277, "More-String-Methods"], [277, "id1"]], "Dictionary Preview": [[277, "Dictionary-Preview"]], "list: Mutable": [[277, "list:-Mutable"]], "list(): explicit constructor": [[277, "list():-explicit-constructor"]], "tuple: Immutable": [[277, "tuple:-Immutable"]], "dict: Mutable": [[277, "dict:-Mutable"]], "set: Mutable": [[277, "set:-Mutable"]], "List comprehension": [[277, "List-comprehension"]], "DIctionary Comprehension": [[277, "DIctionary-Comprehension"]], "Set Comprehension": [[277, "Set-Comprehension"], [341, "Set-Comprehension"], [351, "Set-Comprehension"], [1086, "set-comprehension"]], "max": [[277, "max"]], "for, enumerate()": [[277, "for,-enumerate()"]], "Iteratoren, Generatoren": [[277, "Iteratoren,-Generatoren"]], "Generatoren": [[277, "Generatoren"]], "split und join": [[277, "split-und-join"]], "strip()": [[277, "strip()"]], "dict vs. OrderedDict": [[277, "dict-vs.-OrderedDict"]], "Duck Typing": [[277, "Duck-Typing"], [1102, "duck-typing"]], "Interfaces": [[277, "Interfaces"], [715, "interfaces"]], "Implementation Inheritance": [[277, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[277, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[277, "__bases__"]], "__mro__": [[277, "__mro__"]], "Object Layout (self)": [[277, "Object-Layout-(self)"]], "More from OO": [[277, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[277, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[277, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[277, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[277, "Exception-Handling"], [308, "exception-handling"], [311, "exception-handling"], [316, "exception-handling"], [409, "exception-handling"], [1089, "exception-handling"]], "Order of except Clauses": [[277, "Order-of-except-Clauses"]], "finally": [[277, "finally"]], "lambda": [[277, "lambda"]], "map(), filter()": [[277, "map(),-filter()"], [341, "map(),-filter()"]], "Generators, Iteration Protocol": [[277, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[277, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[278, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [416, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[278, "basics"]], "2022-03-30: Basics": [[278, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[278, "advanced"]], "Plan For The Wild Part": [[278, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[280, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [416, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[280, "discussion-flow-charts"]], "BlahBlah": [[281, "BlahBlah"], [284, "BlahBlah"], [287, "BlahBlah"], [351, "BlahBlah"]], "Interactive": [[281, "Interactive"]], "For Beginners": [[281, "For-Beginners"]], "Not For Beginners?": [[281, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[281, "Strings,-1st-Explanation"]], "Operator Precedence": [[281, "Operator-Precedence"], [284, "Operator-Precedence"], [1121, "operator-precedence"]], "Floating Point Numbers": [[281, "Floating-Point-Numbers"], [1121, "floating-point-numbers"]], "Docstrings": [[281, "Docstrings"], [287, "Docstrings"], [393, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[281, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[281, "Random-Numbers"]], "Indexing and Slicing": [[281, "Indexing-and-Slicing"], [329, "Indexing-and-Slicing"], [1127, "indexing-and-slicing"]], "for Loops": [[281, "for-Loops"], [351, "for-Loops"], [422, "for-loops"], [1128, "for-loops"]], "range()": [[281, "range()"], [309, "range()"], [357, "range()"], [363, "range()"], [367, "range()"]], "Filterketten": [[281, "Filterketten"]], "Zen": [[281, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[281, "Compound-Datatypes-By-Example:-List,-Tuple"], [1122, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[281, "Compound-Datatypes-By-Example:-Dictionary"], [1122, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[281, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[281, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[281, "Compound-Datatypes-By-Example:-Set"], [1122, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[281, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[283, "python-basics-2022-04-25-2022-04-27"], [416, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[284, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[284, "Comments-vs.-Docstrings"]], "Variables and Types": [[284, "Variables-and-Types"]], "Swap": [[284, "Swap"]], "Integers are Infinitely long": [[284, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[284, "Floating-Point-Comparison"]], "Mutability/Immutability": [[284, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[284, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[284, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1155, "exercise-determine-maximum-of-two-numbers"], [1165, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[284, "Ranges"], [793, "ranges"]], "Exercise: Sort out Duplicates": [[284, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[284, "Algorithmic-Complexity"]], "More On Dictionaries": [[284, "More-On-Dictionaries"]], "More On Sets": [[284, "More-On-Sets"]], "eval(), json": [[284, "eval(),-json"]], "Encoding": [[284, "Encoding"], [308, "encoding"], [329, "Encoding"], [345, "Encoding"], [345, "id1"], [398, "encoding"], [1204, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[286, "python-2022-05-02-2022-05-05"], [416, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[286, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[286, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[286, "excursion-can-communication-oo-modules"]], "Modules": [[286, "modules"], [299, "Modules"], [340, "modules"], [398, "modules"], [788, "modules"], [1097, "modules"]], "CSV, Functions": [[286, "csv-functions"]], "PyPI, Virtual Environments": [[286, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[286, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[286, "more-on-datatypes"]], "Random Topics": [[286, "random-topics"]], "Standard Library": [[286, "standard-library"]], "Hello Jupyter Notebook": [[287, "Hello-Jupyter-Notebook"]], "Syntax etc": [[287, "Syntax-etc"]], "Mutability": [[287, "Mutability"], [319, "Mutability"]], "Removing Elements": [[287, "Removing-Elements"], [697, "removing-elements"]], "Nested Lists?": [[287, "Nested-Lists?"]], "while loops, and else": [[287, "while-loops,-and-else"]], "for loops (and else)": [[287, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[287, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[287, "Encoding,-and-String"]], "Regular Expression": [[287, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[287, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[287, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[287, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[287, "itertools.chain()"]], "Destructor?": [[287, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[287, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[289, "python-advanced-2022-05-16-2022-05-18"], [416, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[289, "project-management"], [340, "project-management"], [405, "project-management"], [406, "project-management"], [410, "project-management"]], "Unit Testing, Test Driven Development": [[289, "unit-testing-test-driven-development"]], "Object Priented Programming": [[289, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[289, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[289, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[289, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[289, "xml-element-tree"]], "Projektabschlusstag": [[289, "projektabschlusstag"]], "Basic Python": [[289, "basic-python"]], "Assert": [[290, "Assert"]], "The id() function": [[290, "The-id()-function"]], "class Person": [[290, "class-Person"]], "Functions That Do Not Return Anything": [[290, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[290, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[290, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[290, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[290, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[290, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[292, "vorbesprechung-2022-05-11"]], "Legende": [[292, "legende"]], "Neuerungen in C++ seit 2011": [[292, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[292, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[292, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[292, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[293, "c-a-new-language-starting-in-2011"], [294, "c-a-new-language-starting-in-2011"]], "Metadata": [[293, "metadata"], [294, "metadata"], [296, "metadata"], [970, "metadata"]], "Introduction": [[293, "introduction"], [294, "introduction"], [296, "introduction"], [315, "introduction"], [316, "introduction"], [418, "introduction"], [435, "introduction"], [497, "introduction"], [548, "introduction"], [643, "introduction"], [740, "introduction"], [799, "introduction"], [887, "introduction"], [1089, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[293, "pythonicity-thank-you-readablility-and-writability"], [294, "pythonicity-thank-you-readablility-and-writability"], [296, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[293, "range-based-for-loops"], [294, "range-based-for-loops"], [296, "range-based-for-loops"], [353, "range-based-for-loops"], [372, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[293, "tuple-unpacking-err-structured-binding"], [294, "tuple-unpacking-err-structured-binding"], [296, "tuple-unpacking-err-structured-binding"], [353, "tuple-unpacking-err-structured-binding"], [372, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[293, "duck-typing-err-auto-without-a-duck"], [294, "duck-typing-err-auto-without-a-duck"], [296, "duck-typing-err-auto-without-a-duck"], [353, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[293, "things-that-simply-deserved-fixing-since-ages"], [294, "things-that-simply-deserved-fixing-since-ages"], [296, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[293, "brace-initialization"], [294, "brace-initialization"], [296, "brace-initialization"], [353, "brace-initialization"], [354, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[293, "new-oo-keywords-override-final-default-delete"], [294, "new-oo-keywords-override-final-default-delete"], [296, "new-oo-keywords-override-final-default-delete"], [353, "new-oo-keywords-override-final-default-delete"], [372, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[293, "strongly-typed-enum"], [294, "strongly-typed-enum"], [296, "strongly-typed-enum"], [353, "strongly-typed-enum"], [372, "strongly-typed-enum"], [743, "strongly-typed-enum"]], "Delegating Constructor": [[293, "delegating-constructor"], [294, "delegating-constructor"], [296, "delegating-constructor"], [353, "delegating-constructor"], [372, "delegating-constructor"], [748, "delegating-constructor"]], "nullptr": [[293, "nullptr"], [294, "nullptr"], [296, "nullptr"], [353, "nullptr"], [372, "nullptr"], [756, "nullptr"]], "Smart Pointers": [[293, "smart-pointers"], [294, "smart-pointers"], [296, "smart-pointers"], [316, "smart-pointers"], [354, "smart-pointers"], [620, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[293, "moving-rvalue-references"], [294, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[293, "functions-std-bind-std-function-lambdas"], [294, "functions-std-bind-std-function-lambdas"], [296, "functions-std-bind-std-function-lambdas"]], "Skeleton Project": [[294, "skeleton-project"], [296, "skeleton-project"], [661, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[295, "linux-basics-2022-10-03-2022-10-05"], [416, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[296, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [416, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[296, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[296, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[296, "coroutines-and-c-23-generators"]], "Ranges And Views": [[296, "ranges-and-views"]], "Concepts": [[296, "concepts"], [353, "concepts"], [758, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[297, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [416, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[297, "monday"]], "Tuesday": [[297, "tuesday"]], "Wednesday": [[297, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[298, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[298, "up-front-project-management"], [317, "up-front-project-management"], [339, "up-front-project-management"]], "Object Oriented Programming: Classes": [[298, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[298, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[298, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[298, "exercise-series-csv-json"]], "Iteration, Generators": [[298, "iteration-generators"]], "Going Dynamic: type(), exec()": [[298, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[298, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[298, "group-project-kickoff"], [318, "group-project-kickoff"], [340, "group-project-kickoff"], [343, "group-project-kickoff"]], "Data Structures Recap": [[298, "data-structures-recap"]], "Miscellaneous Livehacking": [[298, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[298, "function-arguments-closures-decorators"], [333, "function-arguments-closures-decorators"]], "Exceptions, with": [[298, "exceptions-with"], [333, "exceptions-with"], [336, "exceptions-with"]], "Package Management": [[298, "package-management"]], "Videos": [[298, "videos"], [344, "videos"]], "Beginner": [[298, "beginner"], [322, "beginner"]], "Advanced": [[298, "advanced"], [322, "advanced"]], "Fun": [[298, "fun"]], "Python (2022-10-17)": [[299, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[299, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[299, "Variables,-Types"]], "Immutable? References?": [[299, "Immutable?-References?"]], "And range()?": [[299, "And-range()?"]], "More About Dictionaries": [[299, "More-About-Dictionaries"], [299, "id1"], [302, "More-About-Dictionaries"], [329, "More-About-Dictionaries"], [351, "More-About-Dictionaries"], [357, "More-About-Dictionaries"], [363, "More-About-Dictionaries"], [367, "More-About-Dictionaries"], [1138, "more-about-dictionaries"]], "More About Lists": [[299, "More-About-Lists"], [302, "More-About-Lists"], [329, "More-About-Lists"], [351, "More-About-Lists"], [357, "More-About-Lists"], [363, "More-About-Lists"], [367, "More-About-Lists"], [1137, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[301, "python-2022-11-16-2022-11-18"], [302, "Python-(2022-11-16---2022-11-18)"], [416, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[301, "control-flow-sequences-iteration"], [308, "control-flow-sequences-iteration"], [311, "control-flow-sequences-iteration"], [321, "control-flow-sequences-iteration"], [322, "control-flow-sequences-iteration"], [327, "control-flow-sequences-iteration"], [328, "control-flow-sequences-iteration"], [328, "id2"], [349, "control-flow-sequences-iteration"], [350, "control-flow-sequences-iteration"], [355, "control-flow-sequences-iteration"], [356, "control-flow-sequences-iteration"], [361, "control-flow-sequences-iteration"], [362, "control-flow-sequences-iteration"], [365, "control-flow-sequences-iteration"], [366, "control-flow-sequences-iteration"]], "More Datatypes": [[301, "more-datatypes"], [308, "more-datatypes"], [311, "more-datatypes"], [321, "more-datatypes"], [322, "more-datatypes"], [322, "id2"], [327, "more-datatypes"], [328, "more-datatypes"], [349, "more-datatypes"], [350, "more-datatypes"], [355, "more-datatypes"], [361, "more-datatypes"], [362, "more-datatypes"], [365, "more-datatypes"], [420, "more-datatypes"]], "Exercise Series: CSV Files": [[301, "exercise-series-csv-files"], [321, "exercise-series-csv-files"], [322, "exercise-series-csv-files"], [327, "exercise-series-csv-files"], [328, "exercise-series-csv-files"], [349, "exercise-series-csv-files"], [350, "exercise-series-csv-files"], [356, "exercise-series-csv-files"], [361, "exercise-series-csv-files"], [362, "exercise-series-csv-files"], [365, "exercise-series-csv-files"]], "Advanced Language Features": [[301, "advanced-language-features"], [321, "advanced-language-features"], [322, "advanced-language-features"], [327, "advanced-language-features"], [483, "advanced-language-features"]], "Noob Exercises": [[301, "noob-exercises"]], "Object Oriented": [[302, "Object-Oriented"]], "Lists and Tuples": [[302, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[302, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[302, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[302, "And-Lists?-Mutable!"]], "Tuples?": [[302, "Tuples?"]], "set": [[302, "set"]], "More About Sets": [[302, "More-About-Sets"], [329, "More-About-Sets"], [357, "More-About-Sets"], [363, "More-About-Sets"], [367, "More-About-Sets"], [1139, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[302, "Comprehensions-(List,-Dictionary,-Set)"], [351, "Comprehensions-(List,-Dictionary,-Set)"], [363, "Comprehensions-(List,-Dictionary,-Set)"], [1086, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[302, "Generator-Expressions"]], "eval and exec": [[302, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[304, "linux-basics-2023-01-23-2023-01-26"], [416, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[305, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [416, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[305, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[305, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[305, "day-1-overview"]], "Introductory Live Hacking": [[305, "introductory-live-hacking"]], "The Shell": [[305, "the-shell"]], "Processes Quick Walk-Through": [[305, "processes-quick-walk-through"]], "Permissions": [[305, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[305, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[305, "uart"]], "SUSI": [[305, "susi"]], "Secure Shell (SSH)": [[305, "secure-shell-ssh"]], "Miscellaneous Hardware": [[305, "miscellaneous-hardware"]], "Group Exercise": [[305, "group-exercise"]], "Untold": [[305, "untold"], [315, "untold"], [318, "untold"]], "More From The Commandline": [[305, "more-from-the-commandline"]], "Multithreading (And C++)": [[305, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[306, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[306, "Filter-in-Pandas"]], "Copy vs Reference": [[306, "Copy-vs-Reference"]], "Immutable": [[306, "Immutable"]], "String": [[306, "String"]], "Regex": [[306, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[307, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[307, "pipeline-driver"]], "Virtual Environment Setup": [[307, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[307, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[307, "filter-select-uncategorized"]], "More Categories": [[307, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[308, "python-for-sap-developers-2023-03-13-2023-03-15"], [416, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[308, "day-1-basics"]], "Demo": [[308, "demo"]], "Day 2 (Basics, Continued)": [[308, "day-2-basics-continued"]], "Pandas": [[308, "pandas"], [309, "Pandas"], [311, "pandas"], [315, "pandas"], [340, "pandas"], [1211, "pandas"]], "Hacking About On A SAP Test Dataset": [[308, "hacking-about-on-a-sap-test-dataset"], [312, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[308, "untold-from-original-agenda"]], "OO Introduction": [[308, "oo-introduction"], [311, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[308, "context-managers-automatic-cleanup"], [311, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[308, "iteration-generators-comprehensions"], [311, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[308, "decorators-and-related-topics"], [311, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[308, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[309, "2023-03-13"]], "Comment vs Docstring": [[309, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[309, "Mutable?-Immutable?"]], "Lists": [[309, "Lists"], [309, "id2"], [323, "Lists"], [363, "Lists"], [519, "lists"]], "Tuples": [[309, "Tuples"]], "DataType Conversiosn": [[309, "DataType-Conversiosn"]], "String, File IO Exercise": [[309, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[310, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[311, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[311, "day-1-basics"], [344, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[311, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[311, "day-3-domain-specifics"]], "NumPy": [[311, "numpy"], [340, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[313, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[313, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[313, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[313, "DataFrame.all()-(and-any())"]], "Column Selection": [[313, "Column-Selection"]], "Dropping Columns": [[313, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[313, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[313, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[313, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[313, "Conversion"]], "Usage: A Filter": [[313, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[313, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[313, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[314, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[314, "preferred-ubuntu-under-windows-wsl"], [316, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[314, "unsupported-environments"]], "Skeleton Project Setup": [[314, "skeleton-project-setup"], [316, "skeleton-project-setup"]], "Classes, Objects, Methods": [[314, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[314, "heavy-weight-oo-muscle"], [316, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[314, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[314, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[314, "a-little-concurrency"]], "Untold So Far": [[314, "untold-so-far"]], "C++ Standard Library": [[314, "c-standard-library"]], "Miscellaneous Topics": [[314, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[315, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[315, "clean-code"], [317, "clean-code"], [318, "clean-code"]], "Demo Hacking": [[315, "demo-hacking"]], "Python Development: Select Topics": [[315, "python-development-select-topics"]], "Built-In Types: Facts": [[315, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[315, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[315, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[315, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[315, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[315, "decorators-the-ominous"]], "Modules And Packages": [[315, "modules-and-packages"], [339, "modules-and-packages"]], "Design Patterns": [[315, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[316, "c-for-embedded-developers-2023-04-18-2023-04-20"], [416, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[316, "some-details"]], "Standard Template Library": [[316, "standard-template-library"], [709, "standard-template-library"]], "Warm-Up": [[316, "warm-up"]], "Sensor Exercise, Resolved": [[316, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[316, "oo-cont-d"]], "Smart Pointers (Continued)": [[316, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[316, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[316, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[317, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[317, "day-1-python-inside-out"], [318, "day-1-python-inside-out"]], "Exercise Prerequisites": [[317, "exercise-prerequisites"], [339, "exercise-prerequisites"]], "References And Other Pitfalls": [[317, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[317, "looping-constructs-with-an-emphasis-on-the-else-clause"], [339, "looping-constructs-with-an-emphasis-on-the-else-clause"], [343, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[317, "closures-decorators-and-more"], [318, "closures-decorators-and-more"], [339, "closures-decorators-and-more"], [343, "closures-decorators-and-more"]], "Dynamic Features": [[317, "dynamic-features"], [318, "dynamic-features"], [319, "Dynamic-Features"], [339, "dynamic-features"], [343, "dynamic-features"]], "Error Handling And Recovery": [[317, "error-handling-and-recovery"], [318, "error-handling-and-recovery"], [339, "error-handling-and-recovery"], [340, "error-handling-and-recovery"], [343, "error-handling-and-recovery"]], "Miscellaneous Threading": [[317, "miscellaneous-threading"], [318, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[317, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[317, "group-project-discussion"]], "Design Patterns Overview": [[317, "design-patterns-overview"], [318, "design-patterns-overview"]], "Day 3: Group Project": [[317, "day-3-group-project"], [318, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[318, "python-advanced-2023-04-24-2023-04-26"], [416, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[318, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[318, "morning-opening"]], "Object Oriented Programming (Continued)": [[318, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[318, "project-setup-ide-usage"]], "Continue Hacking": [[318, "continue-hacking"]], "Test Driven Development, pytest": [[318, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[319, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[319, "is-vs.-=="]], "Compound DataTypes": [[319, "Compound-DataTypes"]], "class": [[319, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[320, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[321, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[322, "python-basics-2023-05-15-2023-05-17"], [323, "Python-Basics-(2023-05-15---2023-05-17)"], [416, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[322, "morning-awakening"], [366, "morning-awakening"], [373, "morning-awakening"], [375, "morning-awakening"], [375, "id1"], [378, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[322, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[322, "modules-from-standard-library"], [1191, "modules-from-standard-library"]], "Immutable vs. Mutable": [[323, "Immutable-vs.-Mutable"]], "The range Function": [[323, "The-range-Function"], [1129, "the-range-function"]], "Lambda, And Functional Programming Tools": [[323, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[325, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[326, "linux-basics-2023-05-23-2023-05-25"], [416, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[326, "introduction-concepts-and-terminology"], [370, "introduction-concepts-and-terminology"], [922, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[326, "the-shell-bash-bourne-again-shell"], [326, "id1"], [370, "the-shell-bash-bourne-again-shell"], [968, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[326, "tools-inspecting-text-files"], [370, "tools-inspecting-text-files"], [979, "tools-inspecting-text-files"]], "Morning Wakeup": [[326, "morning-wakeup"], [328, "morning-wakeup"], [354, "morning-wakeup"], [370, "morning-wakeup"], [370, "id2"], [380, "morning-wakeup"], [380, "id1"], [380, "id3"], [380, "id4"]], "I/O Redirection And Pipes": [[326, "i-o-redirection-and-pipes"], [370, "i-o-redirection-and-pipes"], [929, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[326, "archiving-and-compression"], [370, "archiving-and-compression"], [910, "archiving-and-compression"], [912, "archiving-and-compression"]], "Networking": [[326, "networking"]], "Processes And Scheduling": [[326, "processes-and-scheduling"]], "Shell Scripting (at least some of it)": [[326, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[327, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[328, "python-basics-2023-06-20-2023-06-22"], [329, "Python-Basics-(2023-06-20---2023-06-22)"], [416, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[328, "day2"]], "File I/O, And Encoding": [[328, "file-i-o-and-encoding"]], "Python Videos": [[328, "python-videos"]], "NumPy, Pandas, Matplotlib": [[328, "numpy-pandas-matplotlib"]], "DataTypes": [[329, "DataTypes"], [351, "DataTypes"]], "(Im)mutable?": [[329, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[329, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[329, "len(),-range(),-for"]], "Generators, yield": [[329, "Generators,-yield"]], "Other -ables: Callable": [[329, "Other--ables:-Callable"]], "exec() (and eval())": [[329, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[329, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[330, "python-basics-jupyter-notebook"], [352, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[331, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[331, "toolchain-introduction"], [347, "toolchain-introduction"], [1256, "toolchain-introduction"]], "Project Structure, Dependencies": [[331, "project-structure-dependencies"], [347, "project-structure-dependencies"], [1256, "project-structure-dependencies"]], "External Dependencies": [[331, "external-dependencies"], [347, "external-dependencies"], [375, "external-dependencies"], [378, "external-dependencies"], [516, "external-dependencies"], [1256, "external-dependencies"]], "Code Generators": [[331, "code-generators"], [347, "code-generators"], [374, "code-generators"], [375, "code-generators"], [377, "code-generators"], [378, "code-generators"], [1256, "code-generators"]], "Automatic Testing": [[331, "automatic-testing"], [347, "automatic-testing"], [1256, "automatic-testing"]], "Installation And Deployment": [[331, "installation-and-deployment"], [347, "installation-and-deployment"], [1256, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[332, "cmake-an-introduction-2023-07-18"], [416, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[333, "python-advanced-2023-09-25-2023-09-27"], [334, "Python-Advanced-(2023-09-25---2023-09-27)"], [416, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[333, "recap-of-python-basics-course-before-summer"], [336, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[333, "project-management-requirements-sandboxing-testing"], [336, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[333, "into-the-wild-group-project-kickoff"], [336, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[333, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [336, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[333, "package-and-dependency-management"]], "Equality vs. Identity": [[334, "Equality-vs.-Identity"]], "Functions Are Objects": [[334, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[335, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [338, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[336, "python-advanced-2023-10-09-2023-10-11"], [416, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[336, "classes-basics"]], "Classes: More": [[336, "classes-more"]], "Spoiler: Group Project Outcome": [[336, "spoiler-group-project-outcome"]], "More About Functions": [[336, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[337, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[337, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[339, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[339, "day-1-basic-python"], [343, "day-1-basic-python"]], "Datatypes, Datatypes": [[339, "datatypes-datatypes"], [343, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[339, "day-2-advanced-python-features"]], "Multiprocessing": [[339, "multiprocessing"]], "Day 3: Into The Wild": [[339, "day-3-into-the-wild"]], "Data Science Topics": [[339, "data-science-topics"], [343, "data-science-topics"]], "Group Project: An Idea": [[339, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[340, "python-advanced-2023-10-24-2023-10-26"], [416, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[340, "python-basics-recap"], [341, "Python-Basics-Recap"]], "The Very Basics": [[340, "the-very-basics"]], "range(), And Iteration In General": [[340, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[340, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[340, "object-oriented-programming-continued"], [340, "id1"]], "Group Project, OO-ified": [[340, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[340, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[340, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[340, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[340, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[340, "compositesink"]], "MQTT Sink Implementation": [[340, "mqtt-sink-implementation"]], "Timestamps?": [[340, "timestamps"]], "Jupyter Notebook: Python Advanced": [[341, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[341, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[341, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[341, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[341, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[341, "assert"]], "Iteration, Generators, Iterator Protocol": [[341, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[341, "AAARGHHH"]], "Generator Expresssions": [[341, "Generator-Expresssions"]], "Dictionary Comprehension": [[341, "Dictionary-Comprehension"], [351, "Dictionary-Comprehension"], [1086, "dictionary-comprehension"]], "Functional Tools": [[341, "Functional-Tools"]], "filter()": [[341, "filter()"], [351, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[342, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[343, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[343, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[343, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[343, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[343, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[343, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[344, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[344, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[344, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[345, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[345, "Assignment,-And-IDs"]], "(Im)Mutability": [[345, "(Im)Mutability"]], "Operator Overloading (Basics)": [[345, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[345, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[345, "Methods"], [654, "methods"], [801, "methods"], [802, "methods"], [803, "methods"], [1107, "methods"]], "numpy, pandas, matplotlib": [[345, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[346, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[347, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[348, "cmake-an-introduction-2023-11-27"], [416, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[349, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[350, "python-basics-2023-11-29-2023-12-01"], [351, "Python-Basics-(2023-11-29---2023-12-01)"], [416, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[350, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[350, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[350, "day-3-morning-awakening"]], "Dictionary (mutable)": [[351, "Dictionary-(mutable)"]], "Set (mutable)": [[351, "Set-(mutable)"]], "Boolean (immutable)": [[351, "Boolean-(immutable)"]], "split() and join()": [[351, "split()-and-join()"]], "Pythonicity (enumerate())": [[351, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[351, "pandas,-matplotlib"]], "Generator Expression": [[351, "Generator-Expression"]], "zip(), And Dictionaries": [[351, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[353, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[353, "introduction-a-new-language-to-me"], [372, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[353, "constexpr-constinit-consteval"], [372, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[353, "functions-std-function-lambdas"], [354, "functions-std-function-lambdas"], [372, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[353, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[353, "moving-usage"]], "Moving: Implementation": [[353, "moving-implementation"]], "Type Erasure": [[353, "type-erasure"]], "Allocators": [[353, "allocators"], [704, "allocators"], [824, "allocators"]], "C++ Pythonic Toolcase": [[353, "c-pythonic-toolcase"], [372, "c-pythonic-toolcase"]], "Outlook In >=20": [[353, "outlook-in-20"]], "Attributes And The Like": [[353, "attributes-and-the-like"]], "<algorithm> Overview": [[353, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[353, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[354, "c-advanced-topics-2023-12-04-2023-12-06"], [416, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[354, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[354, "pythonicity"]], "New OO Features": [[354, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[354, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[354, "classic-polymorphism-interfaces"]], "Move Semantics": [[354, "move-semantics"]], "Day 3: All The Rest": [[354, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[354, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[354, "moving-roundup"]], "Containers And Algorithms": [[354, "containers-and-algorithms"]], "And Embedded?": [[354, "and-embedded"]], "Still Untold": [[354, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[355, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[356, "python-basics-2023-12-18-2023-12-20"], [357, "Python-Basics-(2023-12-18---2023-12-20)"], [358, "python-basics-2023-12-18-2023-12-20"], [416, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[356, "more-about-datatypes"], [357, "More-About-Datatypes"], [366, "more-about-datatypes"]], "A Bit Of OO": [[356, "a-bit-of-oo"]], "Datatype Conversion": [[357, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[357, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[357, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[357, "Functional-Programming"]], "set(), list(), dict()": [[357, "set(),-list(),-dict()"]], "while (and else)": [[357, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[357, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[357, "Return-Value?-Parameters?"]], "References, Immutability": [[357, "References,-Immutability"]], "Und Schuetzen?": [[357, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[357, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[357, "pathlib,-os.path"]], "Regexen": [[357, "Regexen"]], "distill.py": [[357, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[359, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[360, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[361, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[361, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[362, "python-advanced-2024-01-15-2024-01-17"], [364, "python-advanced-2024-01-15-2024-01-17"], [416, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[362, "group-project"], [404, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[363, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[363, "DocStrings"]], "Type System": [[363, "Type-System"], [436, "type-system"]], "Infinity?": [[363, "Infinity?"]], "dict, and enumerate()": [[363, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[365, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[365, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[366, "python-basics-2024-01-29-2024-01-31"], [367, "Python-Basics-(2024-01-29---2024-01-31)"], [416, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[366, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[366, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[366, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[366, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[366, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[367, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[367, "Wuerfeln"]], "Primeness, while": [[367, "Primeness,-while"]], "The range function": [[367, "The-range-function"]], "Sequences": [[367, "Sequences"]], "Misc Crap": [[367, "Misc-Crap"]], "Sequential Datatyoes": [[367, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[367, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[367, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[367, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[367, "os.walk()"]], "pathlib": [[367, "pathlib"]], "numpy, scikit-learn": [[367, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[368, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Agenda: Linux Basics (2024-03-11 - 2024-03-13)": [[369, "agenda-linux-basics-2024-03-11-2024-03-13"]], "Linux Basics (2024-03-11 - 2024-03-13)": [[370, "linux-basics-2024-03-11-2024-03-13"], [416, "linux-basics-2024-03-11-2024-03-13"]], "SSH/Putty Setup": [[370, "ssh-putty-setup"]], "Quiz \ud83e\udd77": [[370, "quiz-ninja"]], "The Shell (Bash - \u201cBourne Again Shell\u201d) (Continued)": [[370, "the-shell-bash-bourne-again-shell-continued"]], "Missing Pieces": [[370, "missing-pieces"]], "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)": [[371, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"], [416, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"]], "Day 1: Refactoring Of Existing Code, And Basic Unit Testing": [[371, "day-1-refactoring-of-existing-code-and-basic-unit-testing"]], "Day 2: More Tests (Towards An Exact Definition Of Existing Code)": [[371, "day-2-more-tests-towards-an-exact-definition-of-existing-code"]], "Day 3: New Functionality - Test-First Development": [[371, "day-3-new-functionality-test-first-development"]], "Agenda: C++: A Thorough Overview (2024-06-03)": [[372, "agenda-c-a-thorough-overview-2024-06-03"]], "Brace Initialization (std::initializer_list<>)": [[372, "brace-initialization-std-initializer-list"]], "Smart Pointers: std::shared_ptr<>, std::unique_ptr<> (And A Little std::move)": [[372, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"], [373, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"]], "Moving, And RValue References (And Perfect Forwarding \ud83d\udc4f)": [[372, "moving-and-rvalue-references-and-perfect-forwarding-clap"]], "Moving": [[372, "moving"]], "Something Similar But Completely Different: Perfect Forwarding": [[372, "something-similar-but-completely-different-perfect-forwarding"]], "Unit Testing With googletest": [[372, "unit-testing-with-googletest"], [1229, "unit-testing-with-googletest"]], "Code (And Project) Sanity": [[372, "code-and-project-sanity"]], "Clean Code, Design Patterns": [[372, "clean-code-design-patterns"]], "C++: A Thorough Overview (2024-06-03)": [[373, "c-a-thorough-overview-2024-06-03"], [416, "c-a-thorough-overview-2024-06-03"]], "Introduction: What C++ >= 11 Brings": [[373, "introduction-what-c-11-brings"]], "Unit Testing, Test Driven Development, And googletest": [[373, "unit-testing-test-driven-development-and-googletest"]], "A Little CMake": [[373, "a-little-cmake"]], "Exercise: class Sensor, And A SensorConfig Thereof": [[373, "exercise-class-sensor-and-a-sensorconfig-thereof"]], "Multithreading: Threads, Race Conditions, Locking Primitives": [[373, "multithreading-threads-race-conditions-locking-primitives"]], "Exercise: Make SensorConfig Thread Safe": [[373, "exercise-make-sensorconfig-thread-safe"]], "Multithreading: Communication": [[373, "multithreading-communication"]], "Exercise Time": [[373, "exercise-time"]], "Group 1: Data Logger (Sketch)": [[373, "group-1-data-logger-sketch"]], "Group 2: Use std::latch": [[373, "group-2-use-std-latch"]], "Group 3: Program a MyLatch Class": [[373, "group-3-program-a-mylatch-class"]], "RValue References, Move Semantics": [[373, "rvalue-references-move-semantics"]], "Agenda: CMake: Advanced Topics (2024-06-11)": [[374, "agenda-cmake-advanced-topics-2024-06-11"], [377, "agenda-cmake-advanced-topics-2024-06-11"]], "Optional Code And External Dependencies": [[374, "optional-code-and-external-dependencies"], [377, "optional-code-and-external-dependencies"]], "Testing, Code Coverage, Code Analysis": [[374, "testing-code-coverage-code-analysis"], [377, "testing-code-coverage-code-analysis"]], "Multiplatform (And Cross) Development": [[374, "multiplatform-and-cross-development"], [377, "multiplatform-and-cross-development"]], "Architectural Considerations": [[374, "architectural-considerations"], [377, "architectural-considerations"]], "CMake: Advanced Topics (2024-06-11)": [[375, "cmake-advanced-topics-2024-06-11"], [416, "cmake-advanced-topics-2024-06-11"]], "Exercise: Build It!": [[375, "exercise-build-it"], [378, "exercise-build-it"]], "Bringing CMake Information Into C/C++": [[375, "bringing-cmake-information-into-c-c"]], "More About Dependencies": [[375, "more-about-dependencies"]], "Much More \u2026 (Various Kinds Of Dependencies)": [[375, "much-more-various-kinds-of-dependencies"]], "The CMake Language": [[375, "the-cmake-language"], [378, "the-cmake-language"]], "The CMake Language, Continued": [[375, "the-cmake-language-continued"]], "CMake: An Introduction (2024-06-18)": [[376, "cmake-an-introduction-2024-06-18"]], "CMake: Advanced Topics (2024-07-01)": [[378, "cmake-advanced-topics-2024-07-01"], [416, "cmake-advanced-topics-2024-07-01"]], "Dependencies, Dependencies, Properties, \u2026": [[378, "dependencies-dependencies-properties"]], "C++: A Wild Ride (2024-09-30 - 2024-10-04)": [[379, "c-a-wild-ride-2024-09-30-2024-10-04"]], "\u201cNew\u201d vs. \u201cOld\u201d C++: An Overview": [[379, "new-vs-old-c-an-overview"], [380, "new-vs-old-c-an-overview"]], "\u201cNew\u201d C++: Syntactic Goodies (Pythonicity)": [[379, "new-c-syntactic-goodies-pythonicity"]], "Back To The Beginnings Of C++: What Everybody Has To Know": [[379, "back-to-the-beginnings-of-c-what-everybody-has-to-know"]], "From C To C++": [[379, "from-c-to-c"]], "Classes And Methods (And Functions)": [[379, "classes-and-methods-and-functions"]], "Templates": [[379, "templates"]], "Inheritance, And Interfaces": [[379, "inheritance-and-interfaces"]], "Overengineering (Err, OO Design)": [[379, "overengineering-err-oo-design"]], "More Design Patterns": [[379, "more-design-patterns"]], "More C++ >= 11": [[379, "more-c-11"]], "OO Features": [[379, "oo-features"]], "Memory Management": [[379, "memory-management"], [381, "memory-management"]], "Move Semantics, And Perfect Forwarding": [[379, "move-semantics-and-perfect-forwarding"]], "Functional: An Alternative To Full Polymorphism": [[379, "functional-an-alternative-to-full-polymorphism"]], "Going Embedded": [[379, "going-embedded"]], "Optional Topics": [[379, "optional-topics"]], "C++: An Embedded Wild Ride (2024-09-30 - 2024-10-04)": [[380, "c-an-embedded-wild-ride-2024-09-30-2024-10-04"], [416, "c-an-embedded-wild-ride-2024-09-30-2024-10-04"]], "Basic C++: Classes": [[380, "basic-c-classes"]], "More About Classes": [[380, "more-about-classes"]], "Preparing for 2nd exercise (class FileSensor)": [[380, "preparing-for-2nd-exercise-class-filesensor"]], "Exercise: class FileSensor": [[380, "exercise-class-filesensor"]], "Inheritance, And Polymorphism": [[380, "inheritance-and-polymorphism"]], "Code Generation With CMake": [[380, "code-generation-with-cmake"]], "Project Work (Tests err Requirements)": [[380, "project-work-tests-err-requirements"]], "Resource Management: Copy": [[380, "resource-management-copy"]], "Smart Pointers: std::shared_ptr<>": [[380, "smart-pointers-std-shared-ptr"]], "Smart Pointers: std::unique_ptr<>": [[380, "smart-pointers-std-unique-ptr"]], "Resource Management: Move": [[380, "resource-management-move"]], "Eliminating virtual: Template CanDataSink<>": [[380, "eliminating-virtual-template-candatasink"]], "Eliminating virtual: using std::variant": [[380, "eliminating-virtual-using-std-variant"]], "Approach 1: Pointers To Alternatives In A std::variant": [[380, "approach-1-pointers-to-alternatives-in-a-std-variant"]], "Approach 2: Alternative Objects In A std::variant": [[380, "approach-2-alternative-objects-in-a-std-variant"]], "Agenda: C++: A One-Day Overview (Date Yet Unknown)": [[381, "agenda-c-a-one-day-overview-date-yet-unknown"]], "The \u201cNew C++\u201d: Fundamental Changes Since 2011": [[381, "the-new-c-fundamental-changes-since-2011"]], "Low Hanging Fruit": [[381, "low-hanging-fruit"]], "Lambdas": [[381, "lambdas"]], "Optional (But Cool) Topics": [[381, "optional-but-cool-topics"]], "C++: A One-Day Overview (Date Yet Unknown)": [[382, "c-a-one-day-overview-date-yet-unknown"], [416, "c-a-one-day-overview-date-yet-unknown"]], "Screenplay Checker": [[383, "screenplay-checker"]], "GPIO: Blinklicht": [[384, "gpio-blinklicht"]], "Commandline": [[384, "commandline"], [389, "commandline"], [948, "commandline"]], "sysfs GPIO": [[384, "sysfs-gpio"]], "Electronic Aspect": [[384, "electronic-aspect"]], "External Circuitry": [[384, "external-circuitry"]], "Raspberry Header Pinout": [[384, "raspberry-header-pinout"]], "Implementation Notes": [[384, "implementation-notes"]], "GPIO: Blinklicht Interface": [[385, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[386, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[387, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[388, "ece19-exercises-and-custom-topics"]], "Reading a File": [[389, "reading-a-file"], [1011, "reading-a-file"]], "Output": [[389, "output"]], "2021-05-20 (G2)": [[390, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[390, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[390, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[390, "Reading-File-Line-by-Line"]], "Iterating a File": [[390, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[390, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[390, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[390, "str.split()"]], "2021-05-21": [[391, "2021-05-21"], [398, "id11"]], "Modules and Packages": [[391, "Modules-and-Packages"], [1097, "modules-and-packages"]], "Strings vs. Bytes": [[392, "Strings-vs.-Bytes"]], "Batteries": [[393, "Batteries"]], "Key Value Map": [[393, "Key-Value-Map"]], "Comments vs Documentation": [[393, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[393, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[393, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[393, "Arithmetic-Operators"], [441, "arithmetic-operators"], [1109, "arithmetic-operators"]], "Wertebereich von Integers": [[393, "Wertebereich-von-Integers"]], "An Example": [[394, "An-Example"], [1132, "an-example"]], "Sidenote: Pure Beauty": [[394, "Sidenote:-Pure-Beauty"], [1132, "sidenote-pure-beauty"]], "Parameters and Types": [[394, "Parameters-and-Types"], [1132, "parameters-and-types"]], "Pitfalls": [[394, "Pitfalls"]], "Cloud Computer, SSH Login": [[395, "cloud-computer-ssh-login"]], "Machine, Logins": [[395, "machine-logins"]], "Login via Secure Shell (SSH)": [[395, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[396, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[397, "embedded-computing-1-ece-19"]], "Daily Log": [[398, "daily-log"]], "2021-03-04": [[398, "id1"]], "2021-03-05": [[398, "id2"]], "Cheat Sheets": [[398, null]], "2021-03-18": [[398, "id3"]], "2021-03-26": [[398, "id4"]], "2021-04-15": [[398, "id5"]], "2021-04-21": [[398, "id6"]], "Git Intro": [[398, "git-intro"]], "Download and Installation": [[398, null], [403, null]], "2021-04-29": [[398, "id7"]], "2021-05-10": [[398, "id8"]], "Org Stuff": [[398, "org-stuff"]], "Python: Functions": [[398, "python-functions"]], "2021-05-12": [[398, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[398, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[398, "id10"]], "Reiterating on Exercise": [[398, "reiterating-on-exercise"]], "import argparse": [[398, "import-argparse"]], "Exercise digit (Once More)": [[398, "exercise-digit-once-more"]], "2021-06-01": [[398, "id12"]], "sysfs GPIO: Blinking an LED": [[398, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[398, "id13"]], "Embedded Computing 1 (Deutsch)": [[399, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[399, "lehrinhalte"]], "Lernergebnisse der LV": [[399, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[399, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[399, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[399, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[399, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[400, "embedded-computing-1-english"]], "Course Content": [[400, "course-content"]], "Learning Outcome": [[400, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[400, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[400, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[400, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[400, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[401, "plan-for-summer-2021"]], "Linux Introduction": [[401, "linux-introduction"]], "Slides": [[401, null], [401, null], [401, null]], "C/C++ Development": [[401, "c-c-development"]], "Python Development": [[401, "python-development"]], "2021-10-07": [[402, "id1"]], "Whose Fault It Is": [[402, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[403, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[403, "linux-unix"]], "Git": [[403, "git"]], "2021-10-28": [[404, "id1"]], "Discussion of Tasks": [[404, "discussion-of-tasks"]], "TODOs": [[404, "todos"]], "2021-11-15": [[405, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[405, "systems-programming-files-directories-links"]], "2021-11-29": [[406, "id1"]], "jjjj": [[406, "jjjj"]], "2021-12-1{4,5}": [[407, "id1"]], "Future Topics": [[407, "future-topics"]], "Threading": [[407, "threading"]], "C++ Sideways": [[407, "c-sideways"]], "2022-01-10": [[408, "id1"]], "Scheduling": [[408, "scheduling"], [1047, "scheduling"], [1048, "scheduling"]], "2022-01-12": [[409, "id1"]], "Scheduling and Realtime": [[409, "scheduling-and-realtime"], [413, "scheduling-and-realtime"]], "2022-02-15": [[410, "id1"]], "Agenda/Log": [[411, "agenda-log"], [412, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[412, "embedded-computing-2-ece-19"]], "Project Repository": [[412, "project-repository"]], "Test Material": [[412, "test-material"]], "Exam Material Overview": [[413, "exam-material-overview"]], "Questions": [[413, "questions"], [413, "id1"], [723, "questions"], [935, "questions"], [936, "questions"], [961, "questions"]], "Slide Material": [[413, "slide-material"], [413, "id2"], [841, "slide-material"]], "Embedded Computing 1+2, ECE 19": [[414, "embedded-computing-1-2-ece-19"]], "Log Of Past Courses": [[416, "log-of-past-courses"]], "CMake: Basics (2024-06-18)": [[416, "cmake-basics-2024-06-18"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[416, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[416, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[416, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[416, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[416, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[416, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[416, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[416, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[416, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[416, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[416, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[416, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[416, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[416, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[416, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[416, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[416, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[416, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[416, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[416, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[416, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[416, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[416, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[416, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[416, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[416, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[416, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[416, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[416, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[416, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[416, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[416, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[416, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[416, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[416, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[416, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[416, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[416, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[416, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[416, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[416, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[416, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[416, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[416, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[416, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[416, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[416, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[416, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[416, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[416, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[416, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[416, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[416, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[416, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[416, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[416, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[416, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[416, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[416, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[416, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[416, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[416, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[416, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[416, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[416, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[416, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[416, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[416, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[416, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[416, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[416, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[416, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[416, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[416, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[416, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[416, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[416, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[416, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[416, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[416, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[416, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[416, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "On Windows": [[417, "on-windows"]], "On Linux": [[417, "on-linux"]], "The Book (1)": [[418, "the-book-1"]], "The Book (2)": [[418, "the-book-2"]], "The Beginning": [[418, "the-beginning"]], "Cool Guys and Their Hobby": [[418, "cool-guys-and-their-hobby"]], "History of UNIX": [[418, "history-of-unix"]], "My First Program (1)": [[419, "my-first-program-1"]], "My First Program (2)": [[419, "my-first-program-2"]], "Character Arrays - Strings": [[419, "character-arrays-strings"]], "Variables and Arithmetic": [[420, "variables-and-arithmetic"]], "My Second Program (1)": [[420, "my-second-program-1"]], "My Second Program (2)": [[420, "my-second-program-2"]], "My Second Program (3)": [[420, "my-second-program-3"]], "My Second Program (4)": [[420, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[421, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[422, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[422, "for-loop-simplification-2"]], "Second Program, revisited": [[422, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[423, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[424, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[424, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[425, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[426, "character-i-o"]], "The Outside World": [[426, "the-outside-world"]], "cat for the Poor (1)": [[426, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[426, "cat-for-the-poor-2"]], "More Examples \u2026": [[426, "more-examples"]], "More Examples - if": [[426, "more-examples-if"]], "if, Formally": [[426, "if-formally"]], "Operators, Formally": [[426, "operators-formally"]], "Exercise: wc For The Poor": [[427, "exercise-wc-for-the-poor"]], "Arrays": [[428, "arrays"]], "Array Definition, Explicit Initialization": [[428, "array-definition-explicit-initialization"]], "Array Access": [[428, "array-access"]], "Discussion: Initialization": [[428, "discussion-initialization"]], "Discussion: if, else": [[428, "discussion-if-else"]], "Array Initializer": [[428, "array-initializer"]], "Discussion: Initializer": [[428, "discussion-initializer"]], "Initialization using memset()": [[428, "initialization-using-memset"]], "Discussion: memset()": [[428, "discussion-memset"]], "Exercise: Character Histogram": [[429, "exercise-character-histogram"]], "A Nonsensical Example": [[430, "a-nonsensical-example"]], "Function Signature": [[430, "function-signature"]], "Discussion": [[430, "discussion"]], "Definition vs. Declaration (1)": [[430, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[430, "definition-vs-declaration-2"]], "By Value / By Reference": [[430, "by-value-by-reference"]], "Exercise: Forward Declaration": [[431, "exercise-forward-declaration"]], "Character Arrays": [[432, "character-arrays"]], "Strings: Mistake by Design?": [[432, "strings-mistake-by-design"]], "Strings: Definition": [[432, "strings-definition"]], "Strings: Library Functions": [[432, "strings-library-functions"]], "Strings as Parameters": [[432, "strings-as-parameters"]], "Strings: Dangers": [[432, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[433, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[434, "lifetime-of-variables"]], "Lifetime": [[434, "lifetime"]], "Global Variables": [[434, "global-variables"], [628, "global-variables"]], "Global Variables: How?": [[434, "global-variables-how"]], "Group Description": [[435, "group-description"], [450, "group-description"], [459, "group-description"], [466, "group-description"], [472, "group-description"], [476, "group-description"], [479, "group-description"], [483, "group-description"], [492, "group-description"], [496, "group-description"], [501, "group-description"], [502, "group-description"], [642, "group-description"], [650, "group-description"], [664, "group-description"], [667, "group-description"], [670, "group-description"], [711, "group-description"], [720, "group-description"], [740, "group-description"], [782, "group-description"], [783, "group-description"], [807, "group-description"], [815, "group-description"], [820, "group-description"], [833, "group-description"], [837, "group-description"], [839, "group-description"], [983, "group-description"], [991, "group-description"], [992, "group-description"], [1048, "group-description"]], "Variable Names": [[437, "variable-names"]], "Variable- and Function Names": [[437, "variable-and-function-names"]], "Data Types, Sizes": [[438, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[438, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[438, "integer-variants-qualifiers"]], "Widths": [[438, "widths"]], "Constants": [[439, "constants"]], "Constants and Types": [[439, "constants-and-types"]], "Character Constants: Escape Sequences": [[439, "character-constants-escape-sequences"]], "String Constants": [[439, "string-constants"]], "Character vs. String Constants": [[439, "character-vs-string-constants"]], "Symbolic Constants (1)": [[439, "symbolic-constants-1"]], "Symbolic Constants (2)": [[439, "symbolic-constants-2"]], "Variable Definitions": [[440, "variable-definitions"]], "Definitions und Initialization": [[440, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[440, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[440, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[441, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[441, "arithmetic-operators-2"]], "Relational and Logical Operators": [[442, "relational-and-logical-operators"]], "Relational Operators (1)": [[442, "relational-operators-1"]], "Relational Operators (2)": [[442, "relational-operators-2"]], "Logical (Boolean) Operators": [[442, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[442, "boolean-operators-short-circuit"]], "Type Conversions": [[443, "type-conversions"]], "Implicit Type Conversions": [[443, "implicit-type-conversions"]], "Sign Bugs": [[443, "sign-bugs"]], "Truncation": [[443, "truncation"]], "Sign Propagation": [[443, "sign-propagation"]], "Conversion Using Operators": [[443, "conversion-using-operators"]], "Conversion and unsigned (1)": [[443, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[443, "conversion-and-unsigned-2"]], "Compiler Warnings": [[443, "compiler-warnings"]], "Last Warning": [[443, "last-warning"], [1041, "last-warning"]], "Forced Conversion - Cast": [[443, "forced-conversion-cast"]], "Increment, Decrement": [[444, "increment-decrement"]], "Confusion: ++, --": [[444, "confusion"]], "Confused to perfection (1)": [[444, "confused-to-perfection-1"]], "Confused to perfection (2)": [[444, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[445, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[446, "bit-operators"]], "Bit Manipulation": [[446, "bit-manipulation"]], "Bitwise AND and OR": [[446, "bitwise-and-and-or"]], "Bitwise XOR": [[446, "bitwise-xor"]], "Shift Left": [[446, "shift-left"]], "Shift Right": [[446, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[446, "inverting-one-s-complement"]], "Assignment with Calculation": [[447, "assignment-with-calculation"]], "Combined Operators": [[447, "combined-operators"]], "?: - Conditional Expression": [[448, "conditional-expression"]], "?: - Conditional Expression (1)": [[448, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[448, "conditional-expression-2"]], "Precedence, Associativity": [[449, "precedence-associativity"]], "Summary: Operators": [[449, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[449, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[449, "operators-precedence-und-associativity-2"]], "More Warnings": [[449, "more-warnings"]], "Types, Operators, Expressions": [[450, "types-operators-expressions"]], "Statements and Blocks": [[451, "statements-and-blocks"]], "Statement vs. Block": [[451, "statement-vs-block"]], "if - else": [[452, "if-else"]], "Branches": [[452, "branches"]], "True or False? What is Truth?": [[452, "true-or-false-what-is-truth"]], "else is optional (1)": [[452, "else-is-optional-1"]], "else is optional (2)": [[452, "else-is-optional-2"]], "else - if": [[453, "else-if"]], "Style Matters": [[453, "style-matters"]], "switch": [[454, "switch"], [454, "id1"]], "Case Distinctions": [[454, "case-distinctions"]], "if - else if vs. switch": [[454, "if-else-if-vs-switch"]], "Loops: while and for": [[455, "loops-while-and-for"]], "while: general purpose loop": [[455, "while-general-purpose-loop"]], "From while to for (1)": [[455, "from-while-to-for-1"]], "From while to for (2)": [[455, "from-while-to-for-2"]], "for, a Little Closer": [[455, "for-a-little-closer"]], "Comma Operator": [[455, "comma-operator"]], "for: Infamous Idioms": [[455, "for-infamous-idioms"]], "Loops: do - while": [[456, "loops-do-while"]], "do - while: Condition After Body": [[456, "do-while-condition-after-body"]], "goto and Labels": [[458, "goto-and-labels"]], "Structured Programming vs. goto": [[458, "structured-programming-vs-goto"]], "goto: Definition": [[458, "goto-definition"]], "goto: Use Cases": [[458, "goto-use-cases"]], "Program Flow": [[459, "program-flow"]], "Nesting": [[460, "nesting"]], "Declaration vs. Definition": [[460, "declaration-vs-definition"]], "A Monolithic Program": [[460, "a-monolithic-program"]], "Separate Compilation": [[460, "separate-compilation"]], "Extern/Global Variables": [[461, "extern-global-variables"]], "Variables: Declaration and Definition": [[461, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[461, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[461, "variables-separating-declaration-from-definition-2"]], "Header Files": [[462, "header-files"]], "Declarations: Problems (1)": [[462, "declarations-problems-1"]], "Declarations: Problems (2)": [[462, "declarations-problems-2"]], "Declarations: Solutions": [[462, "declarations-solutions"]], "Static Variables": [[463, "static-variables"]], "Lifetime and Visibility (1)": [[463, "lifetime-and-visibility-1"]], "Automatic Variables": [[463, "automatic-variables"]], "Local static Variable": [[463, "local-static-variable"]], "Global static Variable": [[463, "global-static-variable"]], "Global Variable": [[463, "global-variable"], [1131, "global-variable"]], "C Preprocessor: Basics": [[464, "c-preprocessor-basics"]], "#include": [[464, "include"]], "Macros: Text Replacement": [[464, "macros-text-replacement"]], "Macros: Constant Definition": [[464, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[464, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[464, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[464, "include-guards-1"]], "Include Guards (2)": [[464, "include-guards-2"]], "The C Preprocessor: Last Words": [[464, "the-c-preprocessor-last-words"], [465, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[465, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[465, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[465, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[465, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[465, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[465, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[465, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[465, "stringification-1"]], "Stringification (2)": [[465, "stringification-2"]], "Token Pasting (1)": [[465, "token-pasting-1"]], "Token Pasting (2)": [[465, "token-pasting-2"]], "Warnings and Errors": [[465, "warnings-and-errors"]], "Predefined Macros (1)": [[465, "predefined-macros-1"]], "Functions and Program Structure": [[466, "functions-and-program-structure"]], "Pointers and Addresses": [[467, "pointers-and-addresses"]], "Pointers: Basics": [[467, "pointers-basics"]], "Pointer: Operators": [[467, "pointer-operators"]], "More Examples": [[467, "more-examples"]], "Pointers as Function Parameters": [[468, "pointers-as-function-parameters"]], "Call by Reference (1)": [[468, "call-by-reference-1"]], "Call by Reference (2)": [[468, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[469, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[470, "pointers-and-arrays"], [472, "pointers-and-arrays"]], "It\u2019s Only Memory": [[470, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[470, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[470, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[470, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[470, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[470, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[470, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[470, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[470, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[470, "pointer-arithmetic-arbitrary-datatypes"]], "main() Can Take Parameters": [[471, "main-can-take-parameters"]], "struct: Basics": [[473, "struct-basics"]], "struct: Compound Datatypes": [[473, "struct-compound-datatypes"]], "struct: How?": [[473, "struct-how"]], "Usage": [[473, "usage"], [682, "usage"], [689, "usage"]], "Nested Structures": [[473, "nested-structures"]], "Memory Layout": [[473, "memory-layout"]], "Recursive Structures?": [[473, "recursive-structures"]], "struct: Functions": [[474, "struct-functions"]], "Parameters and Return (1)": [[474, "parameters-and-return-1"]], "Parameters and Return (2)": [[474, "parameters-and-return-2"]], "Parameters and Return (3)": [[474, "parameters-and-return-3"]], "typedef: Type Alias": [[475, "typedef-type-alias"]], "Alias for Type Names": [[475, "alias-for-type-names"]], "Structures": [[476, "structures"]], "Dynamic Memory": [[477, "dynamic-memory"], [477, "id1"]], "Stack and Global Memory": [[477, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[477, "dynamic-memory-usage"]], "Singly Linked List": [[478, "singly-linked-list"]], "Exercises (1)": [[478, "exercises-1"]], "Exercises (2)": [[478, "exercises-2"]], "Exercises (3)": [[478, "exercises-3"]], "Exercises (4)": [[478, "exercises-4"]], "Exercises (5)": [[478, "exercises-5"]], "Exercises (6)": [[478, "exercises-6"]], "Exercises (7)": [[478, "exercises-7"]], "Exercises (8)": [[478, "exercises-8"]], "Exercises (9)": [[478, "exercises-9"]], "Exercises (10)": [[478, "exercises-10"]], "Exercises (11)": [[478, "exercises-11"]], "Memory": [[479, "memory"]], "Volatile": [[480, "volatile"]], "volatile: The Lie (1)": [[480, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[480, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[480, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[480, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[481, "compiler-intrinsics"]], "Atomic Memory Access": [[481, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[481, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[481, "load-modify-store-mutex"]], "Atomic Instructions": [[481, "atomic-instructions"], [1036, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[481, "more-gcc-builtins"]], "Alignment": [[482, "alignment"]], "Data Alignment": [[482, "data-alignment"]], "Data Alignment, Compilers": [[482, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[482, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[482, "unaligned-data-access-2"]], "Padding (1)": [[482, "padding-1"]], "Padding (2)": [[482, "padding-2"]], "Padding (3)": [[482, "padding-3"]], "Padding (4)": [[482, "padding-4"]], "Structure Alignment (1)": [[482, "structure-alignment-1"]], "Structure Alignment (2)": [[482, "structure-alignment-2"]], "And Arrays? (1)": [[482, "and-arrays-1"]], "And Arrays? (2)": [[482, "and-arrays-2"]], "And Arrays? (3)": [[482, "and-arrays-3"]], "Sanity and Readabilty": [[484, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[484, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[484, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[484, "shooting-offenses"]], "Ambiguity": [[484, "ambiguity"]], "Readability": [[484, "readability"]], "Code Smells": [[484, "code-smells"]], "Know Your Integers": [[485, "know-your-integers"]], "Standard Data Types: size_t (1)": [[485, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[485, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[486, "discrete-values-enum"], [486, "id1"]], "Discrete Values": [[486, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[486, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[486, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[486, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[486, "discrete-values-enum-and-switch"], [486, "id2"]], "Discrete Values - Close to Perfection": [[486, "discrete-values-close-to-perfection"]], "Visibility - static": [[487, "visibility-static"]], "Visibility": [[487, "visibility"]], "A Somewhat Contrived Example (1)": [[487, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[487, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[487, "the-static-keyword-hooray"]], "Correctness - const": [[488, "correctness-const"]], "Non-Modifiable Memory (1)": [[488, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[488, "non-modifiable-memory-2"]], "The const Keyword (1)": [[488, "the-const-keyword-1"]], "The const Keyword (2)": [[488, "the-const-keyword-2"]], "const Variables": [[488, "const-variables"]], "const Parameters (1)": [[488, "const-parameters-1"]], "const Parameters (2)": [[488, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[488, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[488, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[488, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[488, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[488, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[488, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[488, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[488, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[488, "pointers-pointers-pointers-9"]], "Struct Initialization": [[489, "struct-initialization"]], "Good Old Struct Initialization": [[489, "good-old-struct-initialization"]], "C99 Designated Initializer": [[489, "c99-designated-initializer"]], "Explict Type Safety": [[490, "explict-type-safety"]], "Integer Types Are Ambiguous": [[490, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[490, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[490, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[490, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[490, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[490, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[490, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[490, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[490, "wrap-up-artificial-type-safety"]], "valgrind": [[491, "valgrind"]], "Valgrind": [[491, "id1"]], "Valgrind in Action (1)": [[491, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[491, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[491, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[491, "valgrind-more"]], "Program Sanity": [[492, "program-sanity"]], "Optimization": [[493, "optimization"]], "Optimization - Introduction": [[493, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[493, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[493, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[493, "compute-bound-or-io-bound-3"]], "What to do Next?": [[493, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[494, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[494, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[494, "unnecessary-optimizations"]], "Inlining (1)": [[494, "inlining-1"]], "Inlining (2)": [[494, "inlining-2"]], "Inlining (3)": [[494, "inlining-3"]], "Register Allocation (1)": [[494, "register-allocation-1"]], "Register Allocation (2)": [[494, "register-allocation-2"]], "Peephole Optimization": [[494, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[494, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[494, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[494, "peephole-optimization-constant-folding"]], "Loop Invariants": [[494, "loop-invariants"]], "Loop Unrolling": [[494, "loop-unrolling"]], "Tail Call Optimization": [[494, "tail-call-optimization"]], "CPU Optimization, Last Words": [[494, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[494, "gcc-optimization-levels"]], "Further Reading": [[494, "further-reading"]], "Optimizations: Memory Optimizations": [[495, "optimizations-memory-optimizations"]], "Memory: Caches": [[495, "memory-caches"]], "Locality of reference": [[495, "locality-of-reference"]], "Multidimensional Arrays": [[495, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[495, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[495, "multidimensional-arrays-forward-indexing"]], "Performance": [[496, "performance"]], "Profiling - Famous Words": [[497, "profiling-famous-words"]], "Donald E. Knuth": [[497, null]], "Tony Hoare": [[497, null]], "Larry Wall": [[497, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[497, null]], "Profiling - Introduction": [[497, "profiling-introduction"]], "GNU Profiler - gprof": [[498, "gnu-profiler-gprof"]], "gprof - How it Works": [[498, "gprof-how-it-works"]], "Using gprof": [[498, "using-gprof"]], "gprof: Flat Profile": [[498, "gprof-flat-profile"]], "gprof: Call Graph": [[498, "gprof-call-graph"]], "gprof: Interpreting The Results": [[498, "gprof-interpreting-the-results"]], "gprof: Visualization": [[498, "gprof-visualization"]], "callgrind": [[499, "callgrind"]], "callgrind - How it Works": [[499, "callgrind-how-it-works"]], "callgrind - How it is Used": [[499, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[499, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[499, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[499, "callgrind-useful-options"]], "oprofile": [[500, "oprofile"]], "oprofile - How it Works": [[500, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[500, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[500, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[500, "oprofile-too-much-information"]], "oprofile - Call Graph": [[500, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[500, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[500, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[500, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[500, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[500, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[500, "oprofile-graphical-beauty"]], "Profiling": [[501, "profiling"]], "The C Programming Language": [[502, "the-c-programming-language"]], "Messages From The Book": [[503, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[504, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[504, "rules-why-rules"]], "Coding Style": [[504, "coding-style"]], "Disclaimer": [[504, null]], "Design Principles: SOLID": [[504, "design-principles-solid"]], "Another One: YAGNI": [[504, "another-one-yagni"]], "Architecture": [[504, "architecture"]], "Project Management: Traditional": [[504, "project-management-traditional"]], "Project Management: Software": [[504, "project-management-software"]], "So What?": [[504, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[505, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Course Material": [[505, "course-material"]], "Uncle Bob": [[505, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[506, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[506, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[506, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[506, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[506, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[506, "where-are-we-questions"]], "Testability: Input Cleaning": [[506, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[506, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[506, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[506, "testability-reading-input-from-directory"]], "Testability: Categorization": [[506, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[506, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[506, "refactoring-input-reading-longrightarrow-overengineering"]], "Screenplay: Generated Code (add_custom_command())": [[507, "screenplay-generated-code-add-custom-command"]], "Complete source code": [[507, null], [512, null], [513, null], [514, null], [515, null], [528, null], [530, null]], "Trainer\u2019s note": [[507, null], [513, null], [515, null], [530, null], [531, null]], "What We Want": [[507, "what-we-want"]], "Handwritten Prototype: What A Code Generator Could Do For Us": [[507, "handwritten-prototype-what-a-code-generator-could-do-for-us"]], "One Deeply Embedded Application (2024-06-20-manual.cpp)": [[507, "one-deeply-embedded-application-2024-06-20-manual-cpp"]], "Another Deeply Embedded Application (Generated From 2024-06-20.conf)": [[507, "another-deeply-embedded-application-generated-from-2024-06-20-conf"]], "Et Voila!": [[507, "et-voila"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[508, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[508, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[508, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[508, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[508, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[508, "good-or-bad"], [509, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[509, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[509, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[509, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[509, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[510, "optional-code-problem-definition-option"]], "Problem": [[510, "problem"], [511, "problem"], [542, "problem"], [543, "problem"], [544, "problem"], [547, "problem"], [553, "problem"], [601, "problem"], [725, "problem"], [877, "problem"], [1010, "problem"]], "Solution: Add An Option": [[510, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[510, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[510, "option-handling-many-approaches"]], "\u201cConfigured\u201d Header Files": [[511, "configured-header-files"]], "Configured Files": [[511, "configured-files"]], "Use In Compiled Code": [[511, "use-in-compiled-code"]], "Screenplay: Integrating libmosquitto (MQTT - Handwritten Find-Module)": [[512, "screenplay-integrating-libmosquitto-mqtt-handwritten-find-module"]], "First: Clean Up Toplevel CMakeLists.txt": [[512, "first-clean-up-toplevel-cmakelists-txt"]], "Add MQTT Capability To Datalogger": [[512, "add-mqtt-capability-to-datalogger"]], "External libmosquitto Dependency": [[512, "external-libmosquitto-dependency"]], "Screenplay: Adding SQLite3 External Dependency": [[513, "screenplay-adding-sqlite3-external-dependency"]], "Add SQLite3 Capability To Datalogger": [[513, "add-sqlite3-capability-to-datalogger"]], "FIND_PACKAGE()": [[513, "find-package"], [516, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[513, "find-package-required"], [516, "find-package-required"]], "Bringing A New Node Into The Graph: Theory": [[513, "bringing-a-new-node-into-the-graph-theory"]], "Bringing A New Node Into The Graph: Practice": [[513, "bringing-a-new-node-into-the-graph-practice"]], "Screenplay: Making SQLite3 Optional (configure_file())": [[514, "screenplay-making-sqlite3-optional-configure-file"]], "Alternative: configure_file() Instead Of target_compile_definitions()": [[514, "alternative-configure-file-instead-of-target-compile-definitions"]], "Make It So": [[514, "make-it-so"]], "\u201cConfigured Files\u201d: configure_file()": [[514, "configured-files-configure-file"]], "What Else To Put In project-config.h.in": [[514, "what-else-to-put-in-project-config-h-in"]], "Screenplay: Making SQLite3 Optional (target_compile_definitions())": [[515, "screenplay-making-sqlite3-optional-target-compile-definitions"]], "What If We Know How to Live Without SQLite3?": [[515, "what-if-we-know-how-to-live-without-sqlite3"]], "Optionally Not Depending On SQLite3": [[515, "optionally-not-depending-on-sqlite3"]], "Optionally Not Depending On Someone Who Depends On SQLite3": [[515, "optionally-not-depending-on-someone-who-depends-on-sqlite3"]], "SQLite3 Parameters": [[516, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[516, "using-sqlite3-parameters"]], "Demo Time": [[516, "demo-time"], [531, "demo-time"]], "CMake: Advanced Topics": [[517, "cmake-advanced-topics"]], "Alternative Topics": [[517, "alternative-topics"]], "Todo jjj \ud83e\udd18": [[517, "todo-jjj-metal"]], "Language Basics": [[518, "language-basics"]], "Single Line Comments": [[518, "single-line-comments"]], "Multiline Comments (\u201cBracketed Comments\u201d)": [[518, "multiline-comments-bracketed-comments"]], "Command Execution": [[518, "command-execution"]], "Commands: String Evaluation, And Quoting": [[518, "commands-string-evaluation-and-quoting"]], "Commands: Bracketed Arguments": [[518, "commands-bracketed-arguments"]], "Commands: Quoted Arguments": [[518, "commands-quoted-arguments"]], "Commands: Unquoted Arguments": [[518, "commands-unquoted-arguments"]], "There Are No Datatypes, Basta": [[519, "there-are-no-datatypes-basta"]], "Attention: Inconsistencies All Over": [[519, "attention-inconsistencies-all-over"]], "Strings: In-Place Modification Of A Variable (Use Unquoted Names)": [[519, "strings-in-place-modification-of-a-variable-use-unquoted-names"]], "Pitfall: In-Place Modification Of Undefined Variable": [[519, "pitfall-in-place-modification-of-undefined-variable"]], "Pitfall: Quoted Variable Names For In-Place Modification": [[519, "pitfall-quoted-variable-names-for-in-place-modification"]], "Strings: Non-Modifying Operations (Use Quoted Names)": [[519, "strings-non-modifying-operations-use-quoted-names"]], "Pitfall: Unquoted Variable Names For Non-Modifying Operations": [[519, "pitfall-unquoted-variable-names-for-non-modifying-operations"]], "Strings: Methods, By Example": [[519, "strings-methods-by-example"]], "Lists: Iteration (foreach Loop)": [[519, "lists-iteration-foreach-loop"]], "Lists: Methods, By Example": [[519, "lists-methods-by-example"]], "Filesystem Interaction, Pathname Manipulation": [[520, "filesystem-interaction-pathname-manipulation"]], "file: Host Filesystem Access": [[520, "file-host-filesystem-access"]], "file(READ ...): Read Entire File": [[520, "file-read-read-entire-file"]], "file(STRINGS ...): Read Lines Of File": [[520, "file-strings-read-lines-of-file"]], "file(<HASH> ...): Checksumming": [[520, "file-hash-checksumming"]], "file(WRITE ...), file(APPEND ...): Writing Files": [[520, "file-write-file-append-writing-files"]], "file(GLOB ...): Read Directory Contents": [[520, "file-glob-read-directory-contents"]], "cmake_path(GET ...): Decompose Paths": [[520, "cmake-path-get-decompose-paths"]], "cmake_path(APPEND ...): Compose Paths": [[520, "cmake-path-append-compose-paths"]], "foreach Loops": [[521, "foreach-loops"]], "Functions And Macros": [[522, "functions-and-macros"]], "Simplest Of Functions": [[522, "simplest-of-functions"]], "Function Scope": [[522, "function-scope"]], "Function Scope: And Nested Function?": [[522, "function-scope-and-nested-function"]], "Passing Parameters In": [[522, "passing-parameters-in"]], "Parameters: ARGC, ARGV, ARGVn, ARGN": [[522, "parameters-argc-argv-argvn-argn"]], "And Output Variables? Return Values?": [[522, "and-output-variables-return-values"]], "PARENT_SCOPE Examples": [[522, "parent-scope-examples"]], "Passing Any Number Of Parameters": [[522, "passing-any-number-of-parameters"]], "Fancy Parameter Parsing: cmake_parse_arguments()": [[522, "fancy-parameter-parsing-cmake-parse-arguments"]], "And Macros?": [[522, "and-macros"]], "The Language": [[523, "the-language"]], "if, And Conditions": [[524, "if-and-conditions"]], "if Syntax": [[524, "if-syntax"]], "Predefined Conditions: String Comparison": [[524, "predefined-conditions-string-comparison"]], "Pitfalls: Variables Are Strings, And CMake Does Not Care": [[524, "pitfalls-variables-are-strings-and-cmake-does-not-care"]], "Predefined Conditions: File System": [[524, "predefined-conditions-file-system"]], "Policies?": [[524, "policies"]], "Miscellaneous Checks (Some Rather Advanced)": [[524, "miscellaneous-checks-some-rather-advanced"]], "Condition Evaluation (Where The Mess Begins): What\u2019s Boolean?": [[524, "condition-evaluation-where-the-mess-begins-what-s-boolean"]], "Dereferencing Unquoted Variable Names": [[524, "dereferencing-unquoted-variable-names"]], "\u201cBoolean\u201d Variables: Weirdly Interpreted Strings": [[524, "boolean-variables-weirdly-interpreted-strings"]], "Pitfall: Evaluation Until There Is No More": [[524, "pitfall-evaluation-until-there-is-no-more"]], "Pitfall: Evaluation Of Unquoted Arguments": [[524, "pitfall-evaluation-of-unquoted-arguments"]], "Scripts": [[525, "scripts"]], "A Script Ain\u2019t A Project": [[525, "a-script-ain-t-a-project"]], "Passing Commandline Parameters": [[525, "passing-commandline-parameters"]], "Setting, And Variable Names": [[526, "setting-and-variable-names"]], "Empty/Undefined Variables": [[526, "empty-undefined-variables"]], "Removing Variables": [[526, "removing-variables"]], "Checking Emptyness And Definedness": [[526, "checking-emptyness-and-definedness"]], "Indirect Variables": [[526, "indirect-variables"]], "Danger: Lookup Scope": [[526, "danger-lookup-scope"]], "Environment Variables": [[526, "environment-variables"], [1046, "environment-variables"]], "Cache Variables": [[526, "cache-variables"]], "Scopes: Function Scope": [[526, "scopes-function-scope"]], "Scopes: Directory Scope": [[526, "scopes-directory-scope"]], "Screenplay: Function Wrapping add_library()": [[528, "screenplay-function-wrapping-add-library"]], "Streamline Build-Spaghetti: How Want It?": [[528, "streamline-build-spaghetti-how-want-it"]], "Function my_add_library(): cmake_parse_arguments()": [[528, "function-my-add-library-cmake-parse-arguments"]], "Function my_add_library(): Final Version": [[528, "function-my-add-library-final-version"]], "Make my_add_library() A Matter For The Architect": [[528, "make-my-add-library-a-matter-for-the-architect"]], "Why Noy Use include_directories() For That": [[529, "why-noy-use-include-directories-for-that"]], "Screenplay: Public And Private Include Directories": [[530, "screenplay-public-and-private-include-directories"]], "Motivation": [[530, "motivation"], [544, "motivation"], [547, "motivation"], [563, "motivation"], [564, "motivation"], [659, "motivation"], [757, "motivation"], [759, "motivation"], [784, "motivation"], [790, "motivation"], [1104, "motivation"], [1110, "motivation"]], "New files": [[530, null]], "Move Code Around: toolcase/base/": [[530, "move-code-around-toolcase-base"]], "Adjust CMakeLists.txt": [[530, "adjust-cmakelists-txt"]], "Local Compilation In toolcase/base/": [[530, "local-compilation-in-toolcase-base"]], "Dependent Nodes: toolcase/boiling-pot/ And toolcase/data-logger/": [[530, "dependent-nodes-toolcase-boiling-pot-and-toolcase-data-logger"]], "Final Note: And PUBLIC?": [[530, "final-note-and-public"]], "Final Final Note: include_directories()": [[530, "final-final-note-include-directories"]], "Targets, Properties, And More": [[531, "targets-properties-and-more"]], "Target Types": [[531, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[531, "properties-private-public-interface"]], "Final Note: include_directories()": [[531, "final-note-include-directories"]], "Running Tests": [[532, "running-tests"], [1224, "running-tests"]], "Setup And Usage": [[532, "setup-and-usage"]], "Add Simple Test": [[532, "add-simple-test"]], "Checking Test Output": [[532, "checking-test-output"]], "Questionability": [[532, "questionability"]], "CMake": [[533, "cmake"]], "Basics: Boilerplate, And Executables": [[534, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[534, "single-monolithic-executable"]], "Building With CMake": [[534, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[534, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[534, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[534, "problem-duplicate-compilation"]], "Problem: More Functionality": [[534, "problem-more-functionality"]], "Solution: Libraries": [[534, "solution-libraries"], [1084, "solution-libraries"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[535, "c-debug-release-cmake-programming-rants"]], "Pause": [[535, "pause"]], "Class Diagram": [[535, "class-diagram"]], "C++ Standard Version": [[535, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[535, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[535, "compiler-type"]], "Strings And Lists": [[535, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[535, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[535, "message-popular-modes"]], "CMake: Introduction": [[536, "cmake-introduction"]], "Installation (\u201cDeployment\u201d)": [[537, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[537, "prefix-where-everything-comes-together"]], "Installing Targets": [[537, "installing-targets"]], "Doing The Installation (make install)": [[537, "doing-the-installation-make-install"]], "And Shared Libraries?": [[537, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[537, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[537, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[538, "libraries-and-dependencies"]], "Libraries And Executables": [[538, "libraries-and-executables"]], "Targets And Dependencies": [[538, "targets-and-dependencies"]], "Visualizing Dependencies": [[538, "visualizing-dependencies"]], "Shared Libraries (Preview)": [[539, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[539, "normal-libraries"]], "Building Shared Libraries": [[539, "building-shared-libraries"]], "More About Loading": [[539, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[540, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[540, "reorganization"]], "Dependencies, And Target Properties": [[540, "dependencies-and-target-properties"]], "C++ Code": [[541, "c-code"]], "Abstract Factory": [[542, "abstract-factory"]], "I2C Sensor Subhierarchy": [[542, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[542, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[542, "solution-factory-objects"]], "Adapter": [[543, "adapter"]], "Solution: Adaptation": [[543, "solution-adaptation"]], "Basic Adaptation": [[543, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[543, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[543, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[543, "adapter-is-doing-real-measurements"]], "Command": [[544, "command"]], "Step 1: Basic insert()": [[544, "step-1-basic-insert"]], "Step 2: Basic find()": [[544, "step-2-basic-find"]], "Step 3: drop()": [[544, "step-3-drop"]], "Step 4: Handle find() Errors": [[544, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[544, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[544, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[544, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[545, "socialdb-source-code"]], "Composite": [[546, "composite"]], "Examples": [[546, "examples"], [746, "examples"], [794, "examples"], [911, "examples"], [1015, null]], "Unix Filesystem": [[546, "unix-filesystem"]], "Boolean Expressions": [[546, "boolean-expressions"]], "Thermometers, And Average Calculation": [[546, "thermometers-and-average-calculation"]], "Decorator": [[547, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[547, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[547, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[547, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[547, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[547, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[547, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[547, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[547, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[548, "design-patterns-with-c"]], "Topics/Exercises": [[548, "topics-exercises"]], "Solutions": [[548, "solutions"], [562, "solutions"], [576, "solutions"]], "To Be Done": [[548, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[549, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[549, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[549, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[549, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[549, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[549, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[549, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[549, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[549, "stop-here-need-help"]], "Tests": [[549, "tests"], [569, "tests"]], "Interpreter": [[550, "interpreter"]], "Observer": [[551, "observer"]], "OO Design Principles": [[552, "oo-design-principles"]], "Principles: Why? Which?": [[552, "principles-why-which"]], "Single Responsibility": [[552, "single-responsibility"]], "Open/Closed": [[552, "open-closed"]], "Liskov Substitution": [[552, "liskov-substitution"]], "Interface Segregation": [[552, "interface-segregation"]], "Dependency Inversion": [[552, "dependency-inversion"]], "Proxy": [[553, "proxy"]], "Solution: Proxy": [[553, "solution-proxy"]], "Local Variant": [[553, "local-variant"]], "Remote Variant": [[553, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[554, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[554, "hypothetical"]], "Class Hierarchy": [[554, "class-hierarchy"]], "Singleton": [[555, "singleton"]], "And class Person?": [[555, "and-class-person"]], "UML Short Introduction": [[556, "uml-short-introduction"]], "Interface": [[556, "interface"]], "Interface Implementation, Inheritance": [[556, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[556, "connectors-association-aggregation-composition"]], "Association": [[556, "association"]], "Aggregation": [[556, "aggregation"]], "Composition": [[556, "composition"]], "Exercise: Abstract Factory": [[557, "exercise-abstract-factory"]], "Exercise: Adapter": [[558, "exercise-adapter"], [565, "exercise-adapter"]], "Exercise: Command": [[559, "exercise-command"]], "Exercise: Composite": [[560, "exercise-composite"]], "Exercise: Decorator": [[561, "exercise-decorator"]], "Exercises: Design Patterns": [[562, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[563, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[564, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[564, "expression-interface"]], "Arithmetic (Binary) Expressions": [[564, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[564, "check-combined-arithmetic-expressions"]], "And Variables?": [[564, "and-variables"]], "No Uninitialized Variables!!": [[564, "no-uninitialized-variables"]], "Assigning To Variables": [[564, "assigning-to-variables"]], "Using Variables As Expressions": [[564, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[566, "exercise-proxy-remote-thermometer"]], "Network Communication": [[566, "network-communication"]], "Implementation Hints": [[566, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[567, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[568, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[569, "exercise-singleton-flexible-and-strict"]], "Complications": [[569, "complications"]], "Exercise: Singleton (Inflexible)": [[570, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[571, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[571, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[571, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[571, "i2csensorfactory-vendor1"], [571, "id1"]], "Solution: Adapter": [[572, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[572, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[573, "solution-command"]], "Command Classes": [[573, "command-classes"]], "Solution: Composite": [[574, "solution-composite"]], "Averaging (Composite) Sensor": [[574, "averaging-composite-sensor"]], "Solution: Decorator": [[575, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[575, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[575, "decorated-constant-sensor"]], "Decorated Random Sensor": [[575, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[577, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[578, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[579, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[580, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[580, "client-proxy-thermometer"]], "Remote Stub": [[580, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[581, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[581, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[582, "solution-singleton-flexible"]], "Main Program": [[582, "main-program"], [583, "main-program"], [584, "main-program"], [823, "main-program"], [825, "main-program"], [827, "main-program"], [829, "main-program"]], "SocialInsurance Interface": [[582, "socialinsurance-interface"], [583, "socialinsurance-interface"]], "Two Concrete Implementations": [[582, "two-concrete-implementations"], [583, "two-concrete-implementations"]], "OEGK": [[582, "oegk"], [583, "oegk"]], "SVS": [[582, "svs"], [583, "svs"]], "Solution: Singleton (Flexible And Strict)": [[583, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[584, "solution-singleton-inflexible"]], "Singleton Implementation": [[584, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[585, "exercise-fh-introducing-a-sensor-class"]], "CMake Build": [[585, "cmake-build"], [1023, "cmake-build"]], "Dependencies/Usage Relationships": [[585, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[585, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[585, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[585, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[585, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[586, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[587, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[588, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[588, "new-sensor-class-randomsensor"]], "Implementation Details": [[588, "implementation-details"]], "New Program: random-temperature.cpp": [[588, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[589, "fh-sensor-oo-first-try"]], "C++ Exercises": [[590, "c-exercises"]], "Exercise Projects": [[590, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[591, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[591, "topics-covered"], [592, "topics-covered"], [593, "topics-covered"], [594, "topics-covered"], [595, "topics-covered"], [596, "topics-covered"], [597, "topics-covered"], [600, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[592, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[593, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[594, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[595, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[596, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[596, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[596, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[597, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[598, "oo-basics-interfaces-shapes"]], "Exercise Table": [[598, "exercise-table"]], "Setup, Exam Procedure": [[598, "setup-exam-procedure"]], "Point": [[598, "point"]], "Point: Constructor and Getter Methods": [[598, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[598, "point-default-constructor"]], "Point: Static Method: equal()": [[598, "point-static-method-equal"]], "Point: operator==()": [[598, "point-operator"]], "Point: Method: move()": [[598, "point-method-move"]], "Point: operator+=()": [[598, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[598, "point-static-method-add"]], "Point: operator+()": [[598, "point-suite-operator-plus"]], "Circle": [[598, "circle"]], "Circle: Constructor": [[598, "circle-constructor"]], "Circle: operator==()": [[598, "circle-operator"]], "Circle: Method: area()": [[598, "circle-method-area"]], "Square": [[598, "square"]], "Square: Constructor": [[598, "square-constructor"]], "Square: operator==()": [[598, "square-operator"]], "Square: Method: area()": [[598, "square-method-area"]], "Interface: Shape": [[598, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[598, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[598, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[599, "working-on-exercise-projects"]], "Clone Github Repository": [[599, "clone-github-repository"]], "Massage googletest Sub-Module": [[599, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[599, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[599, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[599, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[600, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[600, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[600, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[601, "exercise-onewire-sensor-factory"]], "Fixture": [[601, "fixture"], [838, "fixture"]], "basic": [[601, "basic"]], "notfound": [[601, "notfound"]], "find_is_const": [[601, "find-is-const"]], "Testing In Isolation": [[601, "testing-in-isolation"]], "Testing In Reality": [[601, "testing-in-reality"]], "On The PC": [[601, "on-the-pc"]], "On The Target": [[601, "on-the-target"]], "Exercise: OneWire Sensor Class": [[602, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[602, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[602, "test-monolithic-implementation"]], "class W1Sensor": [[602, "class-w1sensor"]], "Exercise: Algorithms": [[603, "exercise-algorithms"]], "Copy Into std::vector": [[603, "copy-into-std-vector"]], "Find Element In std::vector": [[603, "find-element-in-std-vector"]], "Sort In-Place": [[603, "sort-in-place"]], "Sort Into A Copy": [[603, "sort-into-a-copy"]], "Exercise: Generic Filter": [[604, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[605, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[606, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[607, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[608, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[609, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[610, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[611, "insert-sunny-case"]], "Lookup - Not Found": [[612, "lookup-not-found"]], "Lookup - Sunny Case": [[613, "lookup-sunny-case"]], "Memory Leaks?": [[614, "memory-leaks"]], "Remove - Not Found": [[615, "remove-not-found"]], "Remove - Sunny Case": [[616, "remove-sunny-case"]], ".size() Is const": [[617, "size-is-const"]], "Exercise: Uniquify A Sequence": [[618, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[619, "exercise-std-vector"]], "C++: TODO List": [[620, "c-todo-list"]], "Structural": [[620, "structural"]], "STL, Containers and Algorithms": [[620, "stl-containers-and-algorithms"]], "Templates/Overloading": [[620, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[620, "functors-overloading-the-function-call-operator"]], "Threads": [[620, "threads"]], "C++ >= 11": [[620, "c-11"]], "UserDB Exercise": [[620, "userdb-exercise"]], "Complete Transcription of C++11": [[620, "complete-transcription-of-c-11"]], "Exercise series": [[620, "exercise-series"]], "Code: C++: Class Templates": [[621, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[622, "screenplay-c-class-templates"]], "C++: Class Templates": [[623, "c-class-templates"]], "Code: C++: Dynamic Memory": [[624, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[625, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[625, "c-malloc-free"]], "valgrind: Memory Leak": [[625, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[625, "valgrind-array-bounds-write"]], "C++: new, delete": [[625, "c-new-delete"]], "C++: new, delete on Arrays": [[625, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[625, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[626, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[627, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[628, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[628, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[628, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[628, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[629, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[630, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[631, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[632, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[633, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[634, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[634, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[634, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[634, "ownership-2-x-non-const"]], "Ownership: const Method": [[634, "ownership-const-method"]], "Ownership: 2 x const": [[634, "ownership-2-x-const"]], "C++: Ownership/RAII": [[635, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[636, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[637, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[637, "pointer-arithmetics-recap"]], "Container: std::vector": [[637, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[637, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[637, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[637, "container-std-list"]], "Container: std::map": [[637, "container-std-map"]], "C++: STL Containers (Intro)": [[638, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[639, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[640, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[641, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[642, "c-miscellaneous-live-hacking"]], "Background": [[643, "background"]], "History": [[643, "history"], [1085, "history"]], "Content": [[643, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[644, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[644, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[644, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[644, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[644, "comparison-functions-in-equality"]], "Moving Points": [[644, "moving-points"]], "Vector Addition and Subtraction": [[644, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[644, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[644, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[644, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[645, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[645, "compiler-generated-copy-constructor"]], "Rule": [[645, null], [648, null], [747, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[645, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[646, "classes-and-objects"]], "Introducing C++: class point": [[646, "introducing-c-class-point"]], "Access Specifiers: public And private": [[646, "access-specifiers-public-and-private"]], "Default Constructor": [[646, "default-constructor"], [648, "default-constructor"], [660, "default-constructor"], [661, "default-constructor"], [662, "default-constructor"], [663, "default-constructor"]], "Custom Constructor: Usage": [[646, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[646, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[646, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[646, "methods-operations-on-an-object"]], "And printf()?!": [[646, "and-printf"]], "Custom Constructor": [[647, "custom-constructor"], [660, "custom-constructor"]], "Constructors: why? (1)": [[647, "constructors-why-1"]], "Constructors: why? (2)": [[647, "constructors-why-2"]], "Constructors: Implementation - Inline": [[647, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[647, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[648, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[648, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[648, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[648, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[649, "more-constructors-destructors"]], "Default Constructor (1)": [[649, "default-constructor-1"]], "Default Constructor (2)": [[649, "default-constructor-2"]], "Object Lifecycle - Destructor": [[649, "object-lifecycle-destructor"]], "Destructors (1)": [[649, "destructors-1"]], "Destructors (2)": [[649, "destructors-2"]], "Destructors (3)": [[649, "destructors-3"]], "Destructors (4)": [[649, "destructors-4"]], "Data Encapsulation": [[650, "data-encapsulation"]], "Constructors: Member Initialization": [[651, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[651, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[651, "real-initialization-initializer-list"]], "Why Is That Important?": [[651, "why-is-that-important"]], "Why Else Is That Important?": [[651, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[652, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[652, "copy-in-c"]], "Copy Constructor": [[652, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[652, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[652, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[652, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[652, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[652, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[652, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[652, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[652, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[652, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[653, "overloading"]], "Functions in C": [[653, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[653, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[653, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[653, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[654, "objects-data-and-methods"]], "class point Again": [[654, "class-point-again"]], "Access Methods (\u201cGetters\u201d) WRONG": [[654, "access-methods-getters-wrong"]], "Access Methods (\u201cGetters\u201d): const Objects": [[654, "access-methods-getters-const-objects"]], "Access Methods (\u201cGetters\u201d): const Methods": [[654, "access-methods-getters-const-methods"]], "Modifying Method (p.move(...))": [[654, "modifying-method-p-move"]], "Non-Inline Implementation": [[654, "non-inline-implementation"]], "Overloading move() \u27f6 Vector Addition": [[654, "overloading-move-longrightarrow-vector-addition"]], "Moving const point Objects?": [[654, "moving-const-point-objects"]], "Finally: point::distance()": [[654, "finally-point-distance"]], "const Correctness vs. Pollution": [[654, "const-correctness-vs-pollution"]], "this": [[655, "this"]], "Hidden Pointer: this (1)": [[655, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[655, "hidden-pointer-this-2"]], "Explicit this Pointer": [[655, "explicit-this-pointer"]], "Pass By Copy/Reference": [[656, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[656, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[656, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[656, "copy-reference-c-pointers"]], "C++: True References": [[656, "c-true-references"]], "And const? Pointers?": [[656, "and-const-pointers"]], "const References": [[656, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[656, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[657, "static-methods"]], "Methods without Object": [[657, "methods-without-object"]], "Naive Implementation: Global Function": [[657, "naive-implementation-global-function"]], "C++: static Method": [[657, "c-static-method"]], "static Member Variables": [[658, "static-member-variables"]], "Good Old C: extern Global Variables": [[658, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[658, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[658, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[658, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[658, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[658, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[659, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[659, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[659, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[659, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[659, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[659, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[659, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[659, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[660, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[660, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[660, "in-equality"], [661, "in-equality"], [662, "in-equality"], [663, "in-equality"]], "+=": [[660, "id2"], [661, "id1"], [662, "id2"], [663, "id2"]], "-=": [[660, "id4"], [662, "id4"]], "+": [[660, "id6"], [661, "id2"], [662, "id6"], [663, "id3"]], "-": [[660, "id8"], [662, "id8"]], "<< (std::ostream)": [[660, "std-ostream"], [661, "std-ostream"], [662, "std-ostream"], [663, "std-ostream"]], "Surface": [[660, "surface"]], "Volume": [[660, "volume"]], "Exercise (FH): class point": [[661, "exercise-fh-class-point"]], "Initial Build": [[661, "initial-build"]], "Initial Test Run": [[661, "initial-test-run"]], "Extending class point: More Unit Tests": [[661, "extending-class-point-more-unit-tests"]], "Access Methods": [[661, "access-methods"]], "Unary -": [[661, "unary"], [662, "unary"]], "Exercise (FH): class point3d": [[662, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[662, "building-class-rectangle-upon-class-point"], [663, "building-class-rectangle-upon-class-point"]], "Coordinates": [[662, "coordinates"], [663, "coordinates"]], "Absolute Value": [[662, "absolute-value"]], "Distance Between Two Points": [[662, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[663, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[663, "width-height-area"]], "Functions and Methods": [[664, "functions-and-methods"]], "Error Handling: if - else if - else": [[665, "error-handling-if-else-if-else"]], "try - catch": [[666, "try-catch"]], "try - Block": [[666, "try-block"]], "catch - Block": [[666, "catch-block"]], "Standard Library: Exception-Hierarchy": [[666, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[666, "custom-exceptions-1"]], "Custom Exceptions (2)": [[666, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[666, "throwing-exceptions-throw"]], "Last Words": [[666, "last-words"], [669, "last-words"]], "Function Templates": [[668, "function-templates"]], "Origin: Duplicated Code": [[668, "origin-duplicated-code"]], "A simple Function-Template": [[668, "a-simple-function-template"]], "More Templates from the STL": [[668, "more-templates-from-the-stl"]], "Class Templates": [[669, "class-templates"]], "Does This Work With Classes?": [[669, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[669, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[669, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[670, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[671, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[672, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[673, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[674, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[675, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[676, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[676, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[676, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[676, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[676, "pointer-difference"]], "Step Width? (1)": [[676, "step-width-1"]], "Step Width? (2)": [[676, "step-width-2"]], "And Arbitrary Data Types?": [[676, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[676, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[676, "stl-algorithms"]], "STL Containers": [[676, "stl-containers"]], "std::vector (And std::copy())": [[677, "std-vector-and-std-copy"]], "Dynamicity Details": [[677, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[677, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[677, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[678, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[678, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[678, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[678, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[678, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[679, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[680, "screenplay-std-vector-and-pointer-arithmetics"]], "binary_search<>: On Sorted Sequence": [[681, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[681, "more-intelligent-search"], [687, "more-intelligent-search"]], "copy<>": [[682, "copy"]], "find<>: Sequential Search, by Equality": [[683, "find-sequential-search-by-equality"]], "Basic Usage": [[683, "basic-usage"], [803, "basic-usage"], [970, "basic-usage"], [1145, "basic-usage"]], "Not Found?": [[683, "not-found"]], "find_if<>: Sequential Search, Customizable": [[684, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[684, "if-using-a-plain-function"]], "if, Using a Functor Class": [[684, "if-using-a-functor-class"]], "for_each<>": [[685, "for-each"]], "Basic Algorithms": [[686, "basic-algorithms"]], "Sorted Arrays": [[686, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[687, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[688, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[689, "reverse-copy-copying-and-reversing"]], "sort<>": [[690, "sort"]], "Algorithm: std::sort": [[690, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[690, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[691, "sequential-containers"], [692, "sequential-containers"]], "Common Characteristics": [[691, "common-characteristics"]], "list<>": [[693, "list"]], "Insertion and Deletion": [[693, "insertion-and-deletion"]], "vector<>": [[694, "vector"]], "Characteristics": [[694, "characteristics"]], "Modification at the Back": [[694, "modification-at-the-back"]], "Insertion": [[694, "insertion"]], "Example": [[694, "example"], [1160, "example"]], "Associative Containers": [[695, "associative-containers"], [696, "associative-containers"]], "Type Instantiation": [[697, "type-instantiation"]], "Filling The Container": [[697, "filling-the-container"]], "Inserting Elements": [[697, "inserting-elements"]], "Searching": [[697, "searching"]], "Screenplay: std::map Initialization And Inserting": [[698, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[698, "definining-the-type"]], "Initialization": [[698, "initialization"], [721, "initialization"]], "Screenplay: Inserting Elements": [[699, "screenplay-inserting-elements"]], "Subscript Operator": [[699, "subscript-operator"]], "insert()": [[699, "insert"]], "Screenplay: Removing (Erasing) Elements": [[700, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[700, "by-pointer-err-iterator"]], "By Key": [[700, "by-key"]], "Screenplay: Searching": [[701, "screenplay-searching"]], "find(key)": [[701, "find-key"]], "[key]": [[701, "key"]], "at(key)": [[701, "at-key"]], "multimap<>": [[702, "multimap"]], "Allocator Basics": [[703, "allocator-basics"]], "STL: Exercises": [[705, "stl-exercises"]], "Exercise: Reverse a String": [[706, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[707, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[708, "solution-reverse-a-string"]], "Naive": [[708, "naive"]], "Using std::reverse<>": [[708, "using-std-reverse"]], "Using std::reverse_copy<>": [[708, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[710, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[711, "dynamic-memory-allocation-resource-management"]], "Inheritance Basics": [[712, "inheritance-basics"]], "Plain (Base) Class": [[712, "plain-base-class"], [713, "plain-base-class"]], "Inheriting (Deriving) From Base": [[712, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[712, "derived-is-a-base"]], "Destructors And Inheritance": [[713, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[713, "derived-class-and-destructor"]], "And Base Class Conversion?": [[713, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[714, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[715, "c-interfaces"]], "Bringing It All Together": [[715, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[716, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[716, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[716, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[716, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[717, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[718, "virtual-destructors"]], "Is-A Relationships And Destructors": [[718, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[718, "pure-virtual-destructor"]], "Virtual Methods": [[719, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[719, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[719, "enter-virtual"]], "Caution: virtual": [[719, "caution-virtual"]], "The Standard Library: Miscellaneous Topics": [[720, "the-standard-library-miscellaneous-topics"]], "std::string": [[721, "std-string"]], "Convenient Operators: Addition, Comparison, And Such": [[721, "convenient-operators-addition-comparison-and-such"]], "Conversion To Numbers: std::sto*()": [[721, "conversion-to-numbers-std-sto"]], "Conversion To String: std::to_string()": [[721, "conversion-to-string-std-to-string"]], "Searching: s.find()": [[721, "searching-s-find"]], "Substrings: s.substr()": [[721, "substrings-s-substr"]], "Exercise: Paint the American Flag Onto Standard Output": [[722, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[723, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[724, "exercises-miscellaneous"]], "Exercise: Parse A Line From /etc/passwd": [[725, "exercise-parse-a-line-from-etc-passwd"]], "Library Function (lib/parse-passwd.cpp)": [[725, "library-function-lib-parse-passwd-cpp"]], "Tests (tests/suite-passwd-line.cpp)": [[725, "tests-tests-suite-passwd-line-cpp"]], "Program (bin/read-passwd.cpp)": [[725, "program-bin-read-passwd-cpp"]], "Hints": [[725, "hints"]], "How To Proceed": [[725, "how-to-proceed"]], "User Usage (tests/suite-passwd-user.cpp)": [[725, "user-usage-tests-suite-passwd-user-cpp"]], "PasswdError Usage (tests/suite-passwd-error.cpp)": [[725, "passwderror-usage-tests-suite-passwd-error-cpp"]], "std::string Usage": [[725, "std-string-usage"]], "Exercise: Sum of Integers Coming From cin": [[726, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[727, "exercises-user-database"]], "Exercise: Access Methods for Members": [[728, "exercise-access-methods-for-members"]], "Exercise: const Members": [[729, "exercise-const-members"]], "Exercise: Use const": [[730, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[731, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[732, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[733, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[734, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[735, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[736, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[736, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[737, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[738, "exercise-use-std-vector-in-userdb"]], "History, Background": [[741, "history-background"]], "Make C++ Great Again": [[741, "make-c-great-again"]], "The \u201cNew\u201d C++": [[741, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[742, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[742, "c-03-to-do-list-version"]], "Real Container Initialization": [[742, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[742, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[742, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[742, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[742, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[742, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[742, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[742, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[742, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[742, "inevitable-threads"]], "Unions? std::variant!": [[742, "unions-std-variant"]], "Wrapping All That Into A Class": [[742, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[742, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[742, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[743, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[743, "c-03-enum-types-problems"]], "C++11 enum class": [[743, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[743, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[744, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[745, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[745, "std-initializer-list"]], "Direct Usage": [[745, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[745, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[746, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[746, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[746, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[746, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[746, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[746, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[746, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[746, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[746, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[746, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[747, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[747, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[747, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[747, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[747, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[747, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[748, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[748, "delegating-constructor-solution"]], "constexpr": [[749, "constexpr"]], "Basic Usage: Expressions": [[749, "basic-usage-expressions"]], "constexpr Functions": [[749, "constexpr-functions"]], "Recursive constexpr": [[749, "recursive-constexpr"]], "constexpr Objects": [[749, "constexpr-objects"]], "Afterword, Further Reading": [[750, "afterword-further-reading"]], "Uses In The Standard Library": [[750, "uses-in-the-standard-library"]], "Other Uses": [[750, "other-uses"]], "All Said \u27f6 Guidelines": [[750, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[750, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[751, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[751, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[752, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[752, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[752, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[753, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[753, "copy-semantics-revisited"]], "class String, Without Copy": [[753, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[753, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[753, "move-constructor-move"]], "Implementing Move Constructor": [[753, "implementing-move-constructor"]], "And Move Assignment?": [[753, "and-move-assignment"]], "Implementing Move Assignment": [[753, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[754, "using-move-semantics-in-own-code"]], "Using String: class Person": [[754, "using-string-class-person"]], "What?": [[754, "what"], [931, "what"]], "Using Rvalue References Inside Function: std::move": [[754, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[755, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[755, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[755, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[755, "move-semantics-wish-list"]], "Theory: Lvalues": [[755, "theory-lvalues"]], "Theory: Rvalues": [[755, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[755, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[755, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[755, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[755, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[755, "enter-move-constructor-and-move-assignment"]], "Rules": [[755, null]], "Templates end with \u201c>>\u201d": [[756, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[757, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[757, "most-basic-usage"]], "auto Is Only The Basic Type": [[757, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[757, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[757, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[757, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[757, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[759, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[759, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[759, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[759, "concepts-to-the-rescue"]], "Syntactic Variations": [[759, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[760, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[761, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[762, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[763, "concepts-links"]], "Writing Your Own Concepts": [[764, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[764, "starting-point-good-old-function"]], "Need Template": [[764, "need-template"]], "Error: Requirement Not Fulfilled": [[764, "error-requirement-not-fulfilled"]], "Concept: has_size": [[764, "concept-has-size"]], "Concept: index_returns_double": [[764, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[765, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[766, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[767, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[768, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[769, "coroutines"]], "Coroutines: An Overview": [[770, "coroutines-an-overview"]], "Foreword": [[770, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[770, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[770, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[770, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[770, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[770, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[770, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[770, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[770, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[770, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[770, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[770, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[771, "fibo-generator-cpp"]], "fibonacci.cpp": [[772, "fibonacci-cpp"]], "generator.h": [[773, "generator-h"]], "generator-hello.cpp": [[774, "generator-hello-cpp"]], "simplest.cpp": [[775, "simplest-cpp"]], "suspend.cpp": [[776, "suspend-cpp"]], "suspend-iter.cpp": [[777, "suspend-iter-cpp"]], "suspend-next.cpp": [[778, "suspend-next-cpp"]], "= default": [[779, "default"]], "Problem: Default Constructor Not Automatically Generated": [[779, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[779, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[779, "c-11-solution-default"]], "= delete": [[780, "delete"]], "Problem: Copy Is Not Always Wanted": [[780, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[780, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[780, "c-11-solution-delete-copy"]], "final": [[781, "final"]], "Architectural Decisions": [[781, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[781, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[782, "new-language-features"]], "Lambda": [[783, "lambda"], [784, "lambda"]], "Lambda To The Rescue": [[784, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[784, "excursion-python-closures"]], "Same In C++: Capturing": [[784, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[784, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[784, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[784, "more-about-capturing"]], "Lambda: More Capturing": [[785, "lambda-more-capturing"]], "More Capture Syntax": [[785, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[785, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[785, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[785, "mixed-explicit-capture"]], "Define Variables In Capture": [[785, "define-variables-in-capture"]], "Capturing All By Reference": [[785, "capturing-all-by-reference"]], "Capturing All By Copy": [[785, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[785, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[785, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[786, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[786, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[786, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[787, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[787, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[787, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[787, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[787, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[789, "override"]], "Correct Overriding \u2026": [[789, "correct-overriding"]], "\u2026 Is Very Hard": [[789, "is-very-hard"]], "More Problems Arise": [[789, "more-problems-arise"]], "Solution: override": [[789, "solution-override"]], "Range Based for Loops: Introduction": [[790, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[790, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[790, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[790, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[791, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[791, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[791, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[791, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[791, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[791, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[792, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[792, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[792, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[792, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[792, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[792, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[792, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[792, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[792, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[794, "ranges-overview"]], "Ranges?": [[794, "ranges"]], "Containers And Views (Storage Behavior)": [[794, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[794, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[794, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[794, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[794, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[794, "available-ranges-concepts"]], "Ranges And Views: Links": [[795, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[796, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[796, "variations-compatible-data-types"]], "struct: By Copy": [[796, "struct-by-copy"]], "struct: Reference": [[796, "struct-reference"]], "struct: By const Reference": [[796, "struct-by-const-reference"]], "std::tuple: By Copy": [[796, "std-tuple-by-copy"]], "std::tuple: By Reference": [[796, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[796, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[796, "arrays-by-copy"]], "Arrays: By Reference": [[796, "arrays-by-reference"]], "Arrays: By const Reference": [[796, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[797, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[797, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[798, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[799, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[799, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[800, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[800, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[800, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[800, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[800, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[800, "explicit-move-method-maybe"]], "Stop!!!": [[800, "stop"]], "std::shared_ptr": [[801, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[801, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[801, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[801, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[801, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[801, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[801, "demo-basic-usage"]], "Demo: std::make_shared": [[801, "demo-std-make-shared"]], "Demo: Cyclic References": [[801, "demo-cyclic-references"]], "std::unique_ptr": [[802, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[802, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[802, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[802, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[802, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[802, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[802, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[802, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[802, "manipulating-pointer-content"]], "std::weak_ptr": [[803, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[803, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[803, "a-real-life-example"]], "Perfect Forwarding": [[804, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[804, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[804, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[804, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[804, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[805, "std-bind"]], "Why? What\u2019s The Problem?": [[805, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[805, "sample-program-all-done-manually"]], "Sideway: std::transform": [[805, "sideway-std-transform"]], "Sample Program: Using std::transform": [[805, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[805, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[805, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[805, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[805, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[805, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[805, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[805, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[805, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[805, "summary"], [887, "summary"], [887, "id1"], [1212, "summary"], [1214, "summary"]], "std::function": [[806, "std-function"]], "Classic Polymorphism": [[806, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[806, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[806, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[806, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[806, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[806, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[806, "std-function-last-words"]], "Functions, Functions": [[807, "functions-functions"]], "Threads Introduction": [[808, "threads-introduction"]], "Operating System Primitives": [[808, "operating-system-primitives"]], "There Be Dragons": [[808, "there-be-dragons"]], "Threads in C++": [[809, "threads-in-c"]], "Creating Threads is Far Too Easy": [[809, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[809, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[809, "cornercases-in-thread-lifetime"]], "Race Conditions": [[810, "race-conditions"], [885, "race-conditions"]], "std::atomic": [[811, "std-atomic"]], "Atomic Instructions (1)": [[811, "atomic-instructions-1"]], "Atomic Instructions (2)": [[811, "atomic-instructions-2"]], "std::mutex And Friends": [[812, "std-mutex-and-friends"]], "std::mutex": [[812, "std-mutex"]], "std::recursive_mutex": [[812, "std-recursive-mutex"]], "std::timed_mutex": [[812, "std-timed-mutex"]], "std::recursive_timed_mutex": [[812, "std-recursive-timed-mutex"]], "Scoped Locking": [[813, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[813, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[813, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[813, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[814, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[814, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[814, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[814, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[814, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[814, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[816, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[816, "overview-std-promise"]], "Overview: std::future": [[816, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[816, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[816, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[816, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[816, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[816, "pro-readability-encapsulate"]], "Atomics On Structures?": [[816, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[816, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[816, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[816, "and-exceptions"]], "std::chrono": [[817, "std-chrono"], [817, "id1"]], "Clock Domains": [[817, "clock-domains"]], "Measuring Time (1)": [[817, "measuring-time-1"]], "Measuring Time (2)": [[817, "measuring-time-2"]], "Sleeping, and Literals": [[817, "sleeping-and-literals"]], "A Better void*: std::any": [[818, "a-better-void-std-any"]], "Default Initialization": [[818, "default-initialization"]], "Initialization, Assignment, Access": [[818, "initialization-assignment-access"]], "Copy, And Resource Management": [[818, "copy-and-resource-management"]], "Run-Time Type Errors": [[818, "run-time-type-errors"]], "has_value(): Null?": [[818, "has-value-null"]], "Avoiding Exceptions": [[818, "avoiding-exceptions"]], "Modifying In-Place: std::any_cast<> To Reference": [[818, "modifying-in-place-std-any-cast-to-reference"]], "std::string And const char* Are Different": [[818, "std-string-and-const-char-are-different"], [819, "std-string-and-const-char-are-different"]], "New-Style Union: std::variant": [[819, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[819, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[819, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[819, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[819, "accessing-non-current-member-std-bad-variant-access"]], "The Visitor": [[819, "the-visitor"]], "Non-Throwing Accessor: std::get_if<>": [[819, "non-throwing-accessor-std-get-if"]], "And User Defined Types?": [[819, "and-user-defined-types"]], "And Memory Usage?": [[819, "and-memory-usage"]], "CRTP": [[821, "crtp"], [826, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[822, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[823, "classic-virtual"]], "Sensor Definitions": [[823, "sensor-definitions"], [825, "sensor-definitions"], [827, "sensor-definitions"], [829, "sensor-definitions"]], "Virtual Access": [[823, "virtual-access"], [825, "virtual-access"], [827, "virtual-access"], [828, "virtual-access"], [829, "virtual-access"], [830, "virtual-access"]], "Average Across Many": [[823, "average-across-many"], [825, "average-across-many"], [827, "average-across-many"], [829, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[824, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[824, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[824, "and-crtp"]], "std::string_view": [[824, "std-string-view"]], "Non-Virtual, But Related": [[825, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[826, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[827, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[828, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[829, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[830, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Replacing virtual With std::variant<> (In Real Life)": [[831, "replacing-virtual-with-std-variant-in-real-life"]], "Classic OO Design": [[831, "classic-oo-design"]], "Source Hierarchy": [[831, "source-hierarchy"]], "Sink Hierarchy": [[831, "sink-hierarchy"]], "Loop In The Middle": [[831, "loop-in-the-middle"], [831, "id1"]], "Omitting virtual: Cram All Alternatives Into std::variant<>": [[831, "omitting-virtual-cram-all-alternatives-into-std-variant"]], "Source Non-Hierarchy": [[831, "source-non-hierarchy"]], "Sink Non-Hierarchy": [[831, "sink-non-hierarchy"]], "Why Replace virtual?": [[832, "why-replace-virtual"]], "Drafts": [[833, "drafts"], [983, "drafts"]], "Exercise: Bag Of Items, By Copy": [[834, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[834, "step-1-insert-find"]], "Step 2: Remove": [[834, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[835, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[835, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[835, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[835, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[836, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[838, "std-filesystem"]], "Paths: Composition, Comparison": [[838, "paths-composition-comparison"]], "Absolute and Relative Paths": [[838, "absolute-and-relative-paths"], [972, "absolute-and-relative-paths"]], "Path Component Access": [[838, "path-component-access"]], "Iterating Over Path Components": [[838, "iterating-over-path-components"]], "Current Working Directory": [[838, "current-working-directory"], [951, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[838, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[838, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[838, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[838, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[838, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[838, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[838, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[839, "the-new-c-11"]], "Generated Topic Graph": [[840, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[842, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[843, "modern-character-devices-slideshow"]], "Source": [[843, null], [846, null], [848, null], [851, null], [853, null], [856, null], [865, null], [867, null], [877, null], [879, null], [890, null], [895, null]], "Character Devices: Problems": [[843, "character-devices-problems"]], "Dynamic Device Numbers": [[843, "dynamic-device-numbers"]], "Device Classes": [[843, "device-classes"]], "Devices": [[843, "devices"]], "Modern Character Devices": [[844, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[845, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[845, "hooks-necessary"]], "Implement open(), read(), write()": [[845, "implement-open-read-write"]], "ioctl()": [[845, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[846, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[846, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[846, "available-methods"]], "open(): Userspace": [[846, "open-userspace"]], "open(): Kernelspace": [[846, "open-kernelspace"]], "ioctl(): Userspace": [[846, "ioctl-userspace"]], "ioctl(): Kernelspace": [[846, "ioctl-kernelspace"]], "ioctl(): Requests": [[846, "ioctl-requests"]], "_IO*() Macros": [[846, "io-macros"]], "_IO*() Macros: Usage": [[846, "io-macros-usage"]], "File Operations on Character Devices": [[847, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[848, "coding-first-functionality-slideshow"]], "Implement Event List": [[848, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[848, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[848, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[849, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[850, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[850, "major-and-minor-numbers"]], "Character Device": [[850, "character-device"]], "Character Device Basics (Slideshow)": [[851, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[851, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[851, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[851, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[851, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[851, "character-device-1"]], "Character Device (2)": [[851, "character-device-2"]], "And User Space?": [[851, "and-user-space"]], "Character Device Basics": [[852, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[853, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[853, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[854, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[855, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[855, "build-module-from-multiple-files"]], "Per-Device Structure": [[855, "per-device-structure"]], "Want My Hair Pretty": [[855, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[855, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[856, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[856, "what-s-bad"]], "Coding: Refactoring": [[857, "coding-refactoring"]], "DMA (Slideshow)": [[858, "dma-slideshow"]], "Address Types": [[858, "address-types"]], "Physical Memory Allocation": [[858, "physical-memory-allocation"]], "DMA Mappings: Overview": [[858, "dma-mappings-overview"]], "Consistent DMA Mappings": [[858, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[858, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[858, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[858, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[858, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[858, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[858, "streaming-mappings-syncing"]], "DMA": [[859, "dma"]], "Building a Fedora Kernel (Screenplay)": [[860, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[860, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[860, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[860, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[861, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[862, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[862, "prerequisite-build-entire-kernel"]], "Build Modules": [[862, "build-modules"]], "Install Modules": [[862, "install-modules"]], "Fedora: Building External Kernel Modules": [[863, "fedora-building-external-kernel-modules"]], "Linux Kernel Driver Development": [[864, "linux-kernel-driver-development"], [1249, "linux-kernel-driver-development"]], "Topics and Dependencies": [[864, "topics-and-dependencies"]], "Module Loading, Hello World (Slideshow)": [[865, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[865, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[865, "built-in-vs-loadable-module"]], "Minimum Module Source": [[865, "minimum-module-source"]], "Gotchas: init() and exit()": [[865, "gotchas-init-and-exit"]], "Module Build": [[865, "module-build"]], "Minimum Makefile, Building": [[865, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[865, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[865, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[866, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[867, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[867, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[867, "cross-compilation"]], "Cross Compilation Sucks": [[867, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[867, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[867, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[867, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[867, "interlude-io-macros"]], "Request GPIO": [[867, "request-gpio"]], "Request Interrupt": [[867, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[868, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[869, "interrupts-slideshow"]], "Interrupt Facts": [[869, "interrupt-facts"]], "Interrupt Service Routine": [[869, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[869, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[871, "io-memory-slideshow"]], "I/O Memory": [[871, "i-o-memory"]], "I/O Memory: Reservation": [[871, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[871, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[871, "accessing-i-o-memory"]], "IO Memory": [[872, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[873, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[873, "dynamic-memory-kmalloc"], [874, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[873, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[875, "doubly-linked-lists-slideshow"]], "Big Picture": [[875, "big-picture"]], "List Head": [[875, "list-head"]], "Insert a Node": [[875, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[875, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[875, "emptying-a-list"]], "Doubly Linked Lists": [[876, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[877, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[877, "what-do-we-have"]], "Consequences of Not Protecting": [[877, "consequences-of-not-protecting"]], "Protect Event List": [[877, "protect-event-list"]], "Protect Device List": [[877, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[878, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[879, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[879, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[879, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[879, "mutex-locking-1"]], "Mutex: Locking (2)": [[879, "mutex-locking-2"]], "Mutex: Releasing": [[879, "mutex-releasing"]], "Realtime Mutex": [[879, "realtime-mutex"]], "Mutex (and RT Mutex)": [[880, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[881, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[881, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[881, "module-initialization-device-registration"]], "Device Methods": [[881, "device-methods"]], "Kernel Networking Layer Utilities": [[881, "kernel-networking-layer-utilities"]], "Network Devices": [[882, "network-devices"]], "PCI (Slideshow)": [[883, "pci-slideshow"]], "First and Foremost": [[883, "first-and-foremost"]], "PCI Driver Methods": [[883, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[883, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[883, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[883, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[883, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[883, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[883, "dma-support-routines"]], "PCI": [[884, "pci"]], "Process vs.Atomic Context (Slideshow)": [[885, "process-vs-atomic-context-slideshow"]], "Process Context": [[885, "process-context"]], "Atomic Context": [[885, "atomic-context"]], "Atomic vs. Process Context": [[885, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[885, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[886, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[887, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[887, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[887, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[887, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[887, "other-toolchains"]], "Kernel Source": [[887, "kernel-source"]], "Kernel Compilation": [[887, "kernel-compilation"]], "Parameters for the Build": [[887, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[887, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[887, "building-the-kernel-artifacts"]], "Packaging": [[887, "packaging"], [1146, "packaging"]], "Bootloader Artifacts": [[887, "bootloader-artifacts"]], "Module Tree": [[887, "module-tree"]], "Deployment": [[887, "deployment"]], "Variation": [[887, "variation"]], "Raspberry Pi: Building the Kernel": [[888, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[888, "todo-jjj"]], "Sample Code Maintenance": [[889, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[890, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[890, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[890, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[890, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[890, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[891, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[892, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[892, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[892, "spinlock-initialization"]], "Simple Lock/Unlock": [[892, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[892, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[892, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[893, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[894, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[895, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[895, "per-event-timestamp"]], "Discussion: Deferred Events": [[895, "discussion-deferred-events"]], "Add Timer": [[895, "add-timer"]], "Gotcha: Cleanup Running Timer": [[895, "gotcha-cleanup-running-timer"]], "More Gotchas": [[895, "more-gotchas"]], "Coding: Timed Event": [[896, "coding-timed-event"]], "Timer Management (Slideshow)": [[897, "timer-management-slideshow"]], "Original Timer API": [[897, "original-timer-api"]], "jiffies": [[897, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[897, "timer-wheel-methods"]], "Better Documentation": [[897, "better-documentation"]], "Timer Management": [[898, "timer-management"]], "To Do List": [[899, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[900, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[900, "new-ioctl-get-one-event"]], "Getting One Event": [[900, "getting-one-event"]], "copy_to_user()": [[900, "copy-to-user"]], "Userspace Test Program": [[900, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[901, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[901, "address-spaces"]], "Copying To and From Userspace": [[901, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[902, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[903, "waiting-for-something-screenplay"]], "read() Not Implemented": [[903, "read-not-implemented"]], "Implementing read() Naively": [[903, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[903, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[903, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[904, "waiting-for-something-slideshow"]], "Waiting for Something": [[904, "waiting-for-something"], [905, "waiting-for-something"]], "Wait Queues: Initializing": [[904, "wait-queues-initializing"]], "Wait Queue: Waiting": [[904, "wait-queue-waiting"]], "Wait Queue: Waking": [[904, "wait-queue-waking"]], "Workqueue (Screenplay)": [[906, "workqueue-screenplay"]], "Add Workqueue": [[906, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[906, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[906, "cleanup-why-we-did-this-after-all"]], "Finish": [[906, "finish"]], "Workqueue (Slideshow)": [[907, "workqueue-slideshow"]], "Workqueue: Motivation": [[907, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[907, "creating-destroying-a-workqueue"]], "What is Work?": [[907, "what-is-work"]], "Submitting Work": [[907, "submitting-work"]], "Workqueue": [[908, "workqueue"]], "Exercises: Archiving And Compression": [[909, "exercises-archiving-and-compression"]], "gzip": [[911, "gzip"]], "Compression Tools: Comparison": [[912, "compression-tools-comparison"]], "tar": [[913, "tar"]], "Creating And Viewing Archives": [[913, "creating-and-viewing-archives"]], "(De)Compression": [[913, "de-compression"]], "Etiquette": [[913, "etiquette"]], "Option Summary": [[913, "option-summary"]], "Being Creative With The Pipe": [[913, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[914, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[914, "precondition-logged-in-to-remote-exam-computer"], [915, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[914, "create-exam-skeleton-5-points"], [915, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[914, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[914, "public-place-10-points"], [915, "public-place-10-points"]], "Private Place (10 Points)": [[914, "private-place-10-points"], [915, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[914, "shared-file-in-public-place-10-points"], [915, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[914, "make-a-backup-of-exam-01-15-points"], [915, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[915, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[915, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[916, "exercises-exams-linux-basics"]], "Everything Is A File (Live Demo)": [[918, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[918, "simple-is-beautiful"]], "Ok: a File is a File": [[918, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[918, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[918, "pseudo-terminals"]], "Disks and Partitions": [[918, "disks-and-partitions"]], "/proc and /sys": [[918, "proc-and-sys"]], "Pseudo Devices": [[918, "pseudo-devices"]], "Environment (Variables)": [[919, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[919, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[919, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[919, "popular-environment-variables-path"]], "Quiz: Linux Basics": [[920, "quiz-linux-basics"]], "User Space, Kernel Space": [[920, "user-space-kernel-space"], [921, "user-space-kernel-space"]], "Quiz: Linux Basics (Solution)": [[921, "quiz-linux-basics-solution"]], "Login? What Is That?": [[923, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[923, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[923, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[923, "and-after-successful-authentication"]], "Impersonation": [[923, "impersonation"]], "Logged In, Finally": [[923, "logged-in-finally"]], "User Space, Kernel Space?": [[924, "user-space-kernel-space"]], "User Space: Abstractions": [[924, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[924, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[924, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[925, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[925, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[925, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[925, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[925, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[925, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[925, "process-attributes-groups"]], "Processes: More Attributes": [[925, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[926, "process-hierarchy-parent-child-process"]], "More Process Rules": [[926, "more-process-rules"]], "Typical Process Tree": [[926, "typical-process-tree"]], "Services, init": [[926, "services-init"]], "Windows Subsystem for Linux (WSL)": [[927, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[927, null]], "More Links": [[927, "more-links"]], "My $0.02": [[927, "my-0-02"]], "WSL, Finally": [[927, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[928, "exercises-io-redirection-pipes"]], "I/O Redirection": [[930, "i-o-redirection"]], "Standard I/O Streams": [[930, "standard-i-o-streams"]], "I/O Redirection Operators": [[930, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[930, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[930, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[930, "example-standard-error-redirection"]], "Example: Everything Redirection": [[930, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[931, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[931, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[931, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[931, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[931, "more-tricks"]], "Pipes": [[932, "pipes"]], "Why Pipes?": [[932, "why-pipes"]], "Pipe Facts": [[932, "pipe-facts"]], "Pipe Examples": [[932, "pipe-examples"]], "More Pipe Examples": [[932, "more-pipe-examples"]], "Named Pipes": [[932, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[933, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[933, "owner-and-permissions"]], "A Simple Example": [[933, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[933, null]], "Permission Check: User": [[933, "permission-check-user"]], "Permission Check: Group": [[933, "permission-check-group"]], "Permission Check: Others": [[933, "permission-check-others"]], "Programs: Execute Permissions": [[933, "programs-execute-permissions"]], "Directory Permissions": [[933, "directory-permissions"]], "Permission Bits, octal": [[933, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[933, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[933, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[934, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[935, "fh-moodle-quiz-permissions"], [936, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[937, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[938, "exercise-create-private-directory"]], "Question: Private Directory": [[939, "question-private-directory"]], "Exercise: Create Public Directory": [[940, "exercise-create-public-directory"]], "Question: Public Directory": [[941, "question-public-directory"]], "Exercise: Create Group-Shared File": [[942, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[944, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[944, "problem-change-my-password"]], "Solution: Set-UID Bit": [[944, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[944, "set-uid-how-does-it-work"]], "Command: chmod": [[944, "command-chmod"]], "Set-UID Is Not A Toy!": [[944, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[945, "setuid-live-demo"]], "Real and Effective User ID": [[945, "real-and-effective-user-id"]], "Sample Program": [[945, "sample-program"]], "Set-UID jfasch?": [[945, "set-uid-jfasch"]], "Set-UID root? Danger!": [[945, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[946, "ugly-hack-sticky-bit"]], "Sticky Bit": [[946, "sticky-bit"]], "Default Permissions: umask": [[947, "default-permissions-umask"]], "Default Permissions - umask": [[947, "id1"]], "umask: How Does it Work?": [[947, "umask-how-does-it-work"]], "Shape (1)": [[948, "shape-1"]], "Shape (2)": [[948, "shape-2"]], "Options": [[948, "options"], [978, "options"]], "Help and Manual": [[948, "help-and-manual"]], "Man Pages: Navigation": [[948, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[948, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[948, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[948, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[948, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[948, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[949, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[949, "what-s-volatile"]], "Copying: cp": [[950, "copying-cp"]], "Option Overview": [[950, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[950, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[950, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[950, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[950, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[950, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[951, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[951, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[952, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[953, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[954, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[955, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[956, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[957, "exercise-mkdir"]], "Exercise: Funny Stuff": [[958, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[959, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[960, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[961, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[962, "the-shell-exercises"]], "Exercise: File Types in /dev": [[963, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[964, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[965, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[966, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[967, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[967, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[967, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[967, "creating-an-empty-file-touch"]], "Removing A File: rm": [[967, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[967, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[969, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[970, "directory-listings-the-ls-command"]], "Many Options": [[970, "many-options"]], "Hidden Files": [[970, "hidden-files"]], "File Types": [[970, "file-types"]], "Moving and Renaming: mv": [[971, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[971, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[971, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[971, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[972, "path-separator"]], "Relative Paths": [[972, "relative-paths"]], "Absolute Paths": [[972, "absolute-paths"]], "Special Paths": [[973, "special-paths"]], "cat": [[974, "cat"], [974, "id1"]], "cut": [[975, "cut"], [975, "id1"]], "Exercises: Inspecting Text Files": [[976, "exercises-inspecting-text-files"]], "find": [[977, "find"]], "Directories durchsuchen mit find": [[977, "directories-durchsuchen-mit-find"]], "find: Optionen": [[977, "find-optionen"]], "find: Beispiele": [[977, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[977, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[977, "find-verknupfungen-beispiele"]], "grep": [[978, "grep"]], "Searching With grep": [[978, "searching-with-grep"]], "More About Regular Expressions": [[978, "more-about-regular-expressions"]], "head And tail": [[980, "head-and-tail"]], "head": [[980, "head"]], "tail": [[980, "tail"]], "head And tail In The Pipe": [[980, "head-and-tail-in-the-pipe"]], "less": [[981, "less"]], "Paging Files Using less": [[981, "paging-files-using-less"]], "Help Screen (Enter With h)": [[981, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[982, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[982, "stdin-stdout-examples"]], "Pipe: Examples": [[982, "pipe-examples"]], "Basics Text Tools": [[982, "basics-text-tools"]], "Controlling a Brushless Motor With Raspberry Pi": [[986, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[986, null]], "Electronic Speed Controller (ESC)": [[986, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[986, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[986, "the-command-protocol-and-calibration"]], "Driving the Motor": [[986, "driving-the-motor"]], "CAN/Linux Basics": [[987, "can-linux-basics"]], "Why This Talk?": [[987, "why-this-talk"]], "Network Programming: Datagram Exchange": [[987, "network-programming-datagram-exchange"]], "And CAN?": [[987, "and-can"]], "One CAN Network Packet \u2026": [[987, "one-can-network-packet"]], "CAN Interfaces": [[988, "can-interfaces"]], "CAN-Interface: Configuration": [[988, "can-interface-configuration"]], "CAN Utils": [[988, "can-utils"]], "CAN Utils: Usage (1)": [[988, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[988, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[988, "vcan-virtual-can-bus"]], "Programming": [[989, "programming"]], "CAN Programming": [[989, "can-programming"]], "CAN in C - Socket, Interface Index": [[989, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[989, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[989, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[989, "can-in-c-frames-2"]], "CAN in Python - Frames": [[989, "can-in-python-frames"]], "Hardware, Kernel": [[990, "hardware-kernel"]], "MCP2515: Schematic": [[990, "mcp2515-schematic"]], "MCP2515: Soldering": [[990, "mcp2515-soldering"]], "MCP2515: SPI": [[990, "mcp2515-spi"]], "MCP2515: Raspberry": [[990, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[991, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[992, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[993, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[993, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 I2C Master Driver": [[993, "enable-i2c-load-bcm2835-i2c-master-driver"]], "Raspberry Pi 40-pin header pinout": [[993, null]], "Make I2C Master Visible In Userspace (/dev/i2c-1)": [[993, "make-i2c-master-visible-in-userspace-dev-i2c-1"]], "Connect A Slave Device (LM73 Temperature Sensor)": [[993, "connect-a-slave-device-lm73-temperature-sensor"]], "LM73 Hardware": [[993, "lm73-hardware"]], "Datasheet etc.": [[993, null]], "Optional: Address Selection": [[993, "optional-address-selection"]], "Wiring LM73 To The Raspberry Pi": [[993, "wiring-lm73-to-the-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[993, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Implementing A LM73 Client In Userspace": [[993, "implementing-a-lm73-client-in-userspace"]], "Using The LM73 Kernel Driver (If Available)": [[993, "using-the-lm73-kernel-driver-if-available"]], "Building the Kernel, Enabling LM73": [[993, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[993, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[993, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[994, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[994, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[994, "why-an-external-pwm-controller"]], "Wiring, And Checking Device Presence": [[994, "wiring-and-checking-device-presence"]], "PCA9685 Kernel Driver": [[994, "pca9685-kernel-driver"]], "Talk to Chip Using the sysfs Interface": [[994, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[995, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[995, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[995, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[995, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[995, null]], "Wiring: Attach DS2482-800 via I2C": [[995, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[995, "configure-software"]], "Enable I2C, and Check (Bootloader config, /boot/config.txt)": [[995, "enable-i2c-and-check-bootloader-config-boot-config-txt"]], "Verify That Our Device Is There (i2cdetect)": [[995, "verify-that-our-device-is-there-i2cdetect"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[995, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[995, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[995, "over-engineering-beauty"]], "Hardware Bringup": [[995, "hardware-bringup"]], "Device Usage": [[995, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[995, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[995, "using-the-device"]], "As a Generic OneWire Device": [[995, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[995, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[995, "lm-sensors"]], "OneWire Caveats": [[995, "onewire-caveats"]], "Bus Topology": [[995, "bus-topology"]], "Error Symptoms": [[995, "error-symptoms"]], "SSH: Basics": [[996, "ssh-basics"]], "Login": [[996, "login"]], "Exit Status, stdin, stdout: Scripting": [[996, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[997, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[998, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[999, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[1000, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[1002, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[1002, "local-setup-key-generation"]], "Key Pair?": [[1002, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[1002, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[1003, "ssh-links"]], "SSH: Port Forwarding": [[1004, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[1004, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[1004, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[1004, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[1004, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[1004, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[1005, "ssh-secure-copy-scp"]], "What Is That?": [[1005, "what-is-that"]], "Copy Single File From Local To Remote": [[1005, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[1005, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[1005, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[1005, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[1005, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[1005, "more-options"]], "SSH File System (sshfs)": [[1006, "ssh-file-system-sshfs"]], "What Is It?": [[1006, "what-is-it"]], "Why Is It?": [[1006, "why-is-it"]], "Example Situation: The Raspi": [[1006, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[1006, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[1006, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[1006, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[1006, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[1007, "the-errno-variable"]], "errno Is A Global Variable": [[1007, "errno-is-a-global-variable"]], "Helper Functions": [[1007, "helper-functions"]], "Linux Systems Programming: Basics": [[1008, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[1009, "system-calls-vs-library-functions"]], "System Calls": [[1009, "system-calls"]], "System Calls And The C-Library": [[1009, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[1009, "library-function-or-system-call"]], "Manual Pages": [[1009, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[1010, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[1010, null]], "Solution: This Is What An Operating System Is There For": [[1010, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[1011, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[1011, null], [1012, null], [1013, null], [1198, "see-also"]], "Abstractions": [[1011, "abstractions"], [1012, "abstractions"], [1013, "abstractions"]], "Simplicity": [[1011, "simplicity"], [1012, "simplicity"], [1013, "simplicity"]], "Build, Run, Look": [[1011, "build-run-look"], [1012, "build-run-look"], [1013, "build-run-look"]], "Watch: Run Under strace Supervision": [[1011, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[1012, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[1012, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[1013, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[1013, "setup-a-timer"]], "Blocking I/O: What Is That?": [[1014, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[1015, "file-i-o-basics"]], "File Descriptors": [[1015, "file-descriptors"]], "Standard Filedescriptors": [[1015, "standard-filedescriptors"]], "File I/O: System Calls": [[1015, "file-i-o-system-calls"]], "open()": [[1015, "open"]], "open() Flags": [[1015, "open-flags"]], "read()": [[1015, "read"]], "write()": [[1015, "write"]], "File Offset: lseek()": [[1015, "file-offset-lseek"]], "The Rest: ioctl()": [[1015, "the-rest-ioctl"]], "Exercise: Copy A File": [[1016, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[1016, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[1016, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[1016, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[1016, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[1016, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[1017, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[1018, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[1018, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[1018, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[1018, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[1018, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[1018, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[1018, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[1019, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[1019, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[1019, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[1019, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[1020, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[1020, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[1020, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[1020, "error-file-exists"]], "O_RDONLY: Reading a File": [[1021, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[1021, "me-and-etc-passwd"]], "Code: Reading A File": [[1021, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[1021, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[1021, "error-file-not-readable"]], "Error: File Not Even There": [[1021, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[1022, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[1022, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[1022, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[1022, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[1022, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[1023, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[1023, "onewire-basics"]], "Program": [[1023, "program"], [1179, "program"]], "Test On The Target Machine": [[1023, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[1025, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[1025, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[1025, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[1025, "truncating-files"]], "File Descriptors - Allocation": [[1025, "file-descriptors-allocation"]], "Linux Systems Programming": [[1026, "linux-systems-programming"]], "Get Value Of GPIO": [[1027, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[1027, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[1027, "shell-script"]], "C Program": [[1027, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[1028, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[1029, "intro-sysfs-gpio"]], "sysfs?": [[1029, "sysfs"]], "General Purpose IO (GPIO)": [[1029, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[1029, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[1029, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[1030, "interrupts-in-userspace"]], "Manual Configuration": [[1030, "manual-configuration"]], "C Program: Configuration, Event Loop": [[1030, "c-program-configuration-event-loop"]], "mmap": [[1032, "mmap"]], "Why Threads?": [[1033, "why-threads"]], "Typical Uses": [[1033, "typical-uses"]], "Legal (1)": [[1033, "legal-1"]], "Legal (2)": [[1033, "legal-2"]], "POSIX Thread API": [[1033, "posix-thread-api"]], "Thread Life Cycle": [[1034, "thread-life-cycle"], [1034, "id1"]], "Thread Creation": [[1034, "thread-creation"]], "Thread Termination (1)": [[1034, "thread-termination-1"]], "Thread Termination (2)": [[1034, "thread-termination-2"]], "Exit Status, pthread_join()": [[1034, "exit-status-pthread-join"]], "Detached Threads": [[1034, "detached-threads"]], "Thread ID": [[1034, "thread-id"]], "Scheduled Entities (1)": [[1034, "scheduled-entities-1"]], "Scheduled Entities (2)": [[1034, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[1035, "thread-creation-race-condition"]], "Synchronization": [[1036, "synchronization"]], "Race Conditions (1)": [[1036, "race-conditions-1"]], "Race Conditions (2)": [[1036, "race-conditions-2"]], "Mutex (1)": [[1036, "mutex-1"]], "Mutex (2)": [[1036, "mutex-2"]], "Mutex (3)": [[1036, "mutex-3"]], "Mutex Types": [[1036, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[1037, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[1038, "communication-condition-variable"]], "Condition Variable (1)": [[1038, "condition-variable-1"]], "Condition Variable (2)": [[1038, "condition-variable-2"]], "Condition Variable: wait()": [[1038, "condition-variable-wait"]], "Condition Variable: signal()": [[1038, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[1038, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[1038, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[1038, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[1038, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[1038, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[1039, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[1040, "one-time-initialization-1"]], "One-Time Initialization (2)": [[1040, "one-time-initialization-2"]], "One-Time Initialization (3)": [[1040, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[1040, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[1041, "last-warning-1"]], "Last Warning (2)": [[1041, "last-warning-2"]], "Last Warning (3)": [[1041, "last-warning-3"]], "POSIX Threads": [[1042, "posix-threads"]], "Trylock/islocked": [[1043, "trylock-islocked"]], "Process: Arguments, Exit Status": [[1044, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[1044, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[1044, "the-shell-a-programming-language"]], "Exit Status": [[1044, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[1044, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[1044, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[1044, "argument-vector-int-argc-char-argv"]], "Processes": [[1045, "processes"]], "The Process Tree (And Environment, And procfs)": [[1046, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[1046, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[1046, "system-calls-getpid-getppid"]], "Scheduling (and Multitasking)": [[1047, "scheduling-and-multitasking"]], "Fairness Criteria": [[1047, "fairness-criteria"]], "CPU bound vs. I/O bound": [[1047, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[1047, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[1047, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[1049, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[1049, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[1049, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[1049, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[1049, "id1"]], "Threads Are Great: More Functionality": [[1049, "threads-are-great-more-functionality"]], "Are Threads Great?": [[1049, "are-threads-great"]], "Stability Considerations": [[1049, "stability-considerations"]], "Processes, Address Spaces": [[1049, "processes-address-spaces"]], "Stabilizing": [[1049, "stabilizing"]], "Scheduling: Exam Questions": [[1050, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[1051, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[1051, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[1051, "enter-realtime-definition"]], "Realtime on Linux": [[1051, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[1051, "demo-measuring-wakeup-latency"]], "Immediately?": [[1051, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[1051, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[1052, "realtime-api"]], "Scheduling Policies": [[1052, "scheduling-policies"]], "Scheduling Priorities": [[1052, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[1052, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[1052, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[1052, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[1052, "scheduling-threads-2"]], "Priority Inversion": [[1052, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[1052, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[1053, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[1053, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[1053, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[1053, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[1053, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[1054, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[1055, "screenplay-sysprog-posix-ipc"], [1058, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[1055, "select-on-device-files"]], "Sysprog: Events": [[1056, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[1057, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1058, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1058, "posix-shared-memory"]], "Create Shared Memory Segment": [[1058, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1058, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1058, "consume-from-shared-memory"]], "POSIX Semaphores": [[1058, "posix-semaphores"]], "Create Semaphore": [[1058, "create-semaphore"]], "Wait": [[1058, "wait"]], "Post": [[1058, "post"]], "POSIX Message Queues": [[1058, "posix-message-queues"]], "Create": [[1058, "create"]], "Produce": [[1058, "produce"]], "Consume": [[1058, "consume"]], "Slides: Sysprog: POSIX IPC": [[1059, "slides-sysprog-posix-ipc"]], "Slideshow": [[1059, null], [1063, null]], "History: Two IPC Variants": [[1059, "history-two-ipc-variants"]], "Object Names": [[1059, "object-names"]], "File Semantics": [[1059, "file-semantics"]], "Message Queues": [[1059, "message-queues"]], "Open/Create: mq_open()": [[1059, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[1059, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[1059, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[1059, "notification-mq-notify"]], "Message Queues are Files": [[1059, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[1059, "message-queue-filesystem-mqueue"]], "Semaphores": [[1059, "semaphores"]], "Open/Create: sem_open()": [[1059, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1059, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1059, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1059, "semaphores-are-files"]], "Shared Memory (1)": [[1059, "shared-memory-1"]], "Shared Memory (2)": [[1059, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1059, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1060, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1061, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1062, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1062, "barebones-naive-program"]], "Signal Handler": [[1062, "signal-handler"]], "Alarm": [[1062, "alarm"]], "Alarm (Louder)": [[1062, "alarm-louder"]], "Synchronous Delivery": [[1062, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1062, "innocent-multithreaded-program"]], "Add SIGALRM": [[1062, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1063, "slides-sysprog-signals"]], "Example Signals": [[1063, "example-signals"]], "Terminology": [[1063, "terminology"]], "Default Actions": [[1063, "default-actions"]], "Important Signals": [[1063, "important-signals"]], "Sending, Commandline": [[1063, "sending-commandline"]], "Sending Signals, Programmatically": [[1063, "sending-signals-programmatically"]], "Warning!": [[1063, "warning"]], "Blocking Signals: Signal Mask": [[1063, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1063, "signal-mask-manipulation"]], "Pending Signals": [[1063, "pending-signals"]], "Signal Set: sigset_t": [[1063, "signal-set-sigset-t"]], "Signal Handlers": [[1063, "signal-handlers"]], "Installing a Signal Handler (1)": [[1063, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1063, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1063, "effects-of-signal-delivery"]], "Last Warning!": [[1063, "last-warning"]], "WTF Async Signal Safe?": [[1063, "wtf-async-signal-safe"]], "Exercise: Signals": [[1063, "exercise-signals"]], "Sysprog: Signals": [[1064, "sysprog-signals"]], "Toolchain: Basics": [[1065, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1065, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1065, "all-in-one-usage-single-file"]], "Download source": [[1065, null], [1065, null], [1082, null], [1082, null], [1082, null], [1084, null]], "All-In-One Usage: Multiple Files": [[1065, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1065, "this-is-not-as-simple-as-it-seems"]], "Program Loading (Short Version)": [[1065, "program-loading-short-version"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1065, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1065, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1065, "recap-toolchain"]], "CMake: Cross Build": [[1066, "cmake-cross-build"]], "Source Code": [[1066, null]], "Cross Build: Parameters": [[1066, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1066, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1066, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1066, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1066, "step-2-build-using-make"], [1067, "step-2-build-using-make"]], "CMake: Local Build": [[1067, "cmake-local-build"]], "make: Problems": [[1067, "make-problems"]], "CMake To The Rescue": [[1067, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1067, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1067, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1067, "goodie-dependency-management"]], "Native Compilation": [[1068, "native-compilation"]], "Cross?": [[1068, "cross"]], "Example: Cross Toolchain And sysroot Built With crosstool-ng": [[1068, "example-cross-toolchain-and-sysroot-built-with-crosstool-ng"]], "Toolchain in bin/": [[1068, "toolchain-in-bin"]], "sysroot in armv8-rpi4-linux-gnueabihf/sysroot/": [[1068, "sysroot-in-armv8-rpi4-linux-gnueabihf-sysroot"]], "Cross Build": [[1068, "cross-build"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1070, "exercise-build-software-package-cross-raspberry"]], "Quiz: Toolchain": [[1071, "quiz-toolchain"]], "Native": [[1071, "native"], [1072, "native"]], "Cross": [[1071, "cross"], [1072, "cross"]], "Quiz: Toolchain (Solutions)": [[1072, "quiz-toolchain-solutions"]], "Exercises: Toolchain": [[1073, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1074, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1075, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1076, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1077, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1078, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1078, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1078, "create-a-sysroot"]], "Patience!": [[1078, null]], "Test Cross Build": [[1078, "test-cross-build"]], "What We Have": [[1078, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1078, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1078, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1080, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1080, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1080, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1080, "create-docker-volume"]], "Container Work": [[1080, "container-work"]], "Command To Run Container On Volumes": [[1080, "command-to-run-container-on-volumes"]], "Setup container": [[1080, "setup-container"]], "Install autoconf 2.71": [[1080, "install-autoconf-2-71"]], "Install crosstool-ng": [[1080, "install-crosstool-ng"]], "Build Toolchain": [[1080, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1080, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1080, "create-toolchain-archive"]], "Install Toolchain On Host": [[1080, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1081, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1081, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1081, "establish-cmake-toolchain-file"]], "Test Run": [[1081, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1082, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1082, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1082, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1082, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1082, "complication-modification-tracking"]], "Enter Makefiles": [[1082, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1083, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1083, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1083, "and-dynamic-libraries"]], "Relocations": [[1083, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1083, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1083, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1083, "and-build-dependencies"]], "And Runtime Dependencies?": [[1083, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1083, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1083, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1083, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1084, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1084, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1084, "code-bases-become-larger-2"]], "Problem: Structure": [[1084, "problem-structure"]], "Build Instructions: Building A Library": [[1084, "build-instructions-building-a-library"]], "Closures": [[1085, "closures"]], "Today": [[1085, "today"]], "def is a Statement": [[1085, "def-is-a-statement"]], "Functions That Create Functions": [[1085, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1085, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1085, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1085, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1085, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1085, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1086, "intro"]], "Simplest: List Comprehension": [[1086, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1087, "context-managers-the-with-statement"]], "Example: Open File": [[1087, "example-open-file"]], "Example: Temporary Directory": [[1087, "example-temporary-directory"]], "Example: Multiple with Items": [[1087, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1087, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1087, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1087, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1087, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1088, "decorators"]], "The Ominous \u201c@\u201d": [[1088, "the-ominous"]], "Decorators Overview": [[1088, "decorators-overview"]], "A Simple Minded Function": [[1088, "a-simple-minded-function"]], "Decorator Basics": [[1088, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1088, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1088, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1088, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1088, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1088, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1089, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1089, "catching-exceptions-by-type"]], "Exception Objects": [[1089, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1089, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1089, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1089, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1089, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1089, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1089, "raising-exceptions"]], "Re-Raising Exceptions": [[1089, "re-raising-exceptions"]], "User-Defined Exceptions": [[1089, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1089, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1089, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1089, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1090, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1090, "dictionaries-everywhere-context"]], "Enter exec()": [[1090, "enter-exec"]], "exec(), and Context": [[1090, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1090, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1091, "python-more-language-features"], [1260, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1092, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1092, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1092, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1092, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1092, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1092, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1092, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1092, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1093, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1093, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1093, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1093, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1093, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1093, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1094, "the-iterator-protocol"], [1094, "id1"]], "Iteration in Python": [[1094, "iteration-in-python"]], "What\u2019s an Iterator?": [[1094, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1094, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1094, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1094, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1094, "generators-motivation"]], "Generators: How?": [[1094, "generators-how"]], "Observations": [[1094, "observations"]], "Iteration, Generators, And yield": [[1095, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1096, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1097, "modules-are-objects"]], "Other Forms (1)": [[1097, "other-forms-1"]], "Other Forms (2)": [[1097, "other-forms-2"]], "Packages": [[1097, "packages"]], "Executing Modules as Scripts": [[1097, "executing-modules-as-scripts"]], "Package Structure": [[1097, "package-structure"]], "Relative Imports (1)": [[1097, "relative-imports-1"]], "Relative Imports (2)": [[1097, "relative-imports-2"]], "Multithreading (Python)": [[1098, "multithreading-python"]], "What\u2019s a Thread?": [[1098, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1098, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1098, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1098, "and-program-termination"]], "Daemon Threads": [[1098, "daemon-threads"]], "Race Conditions, and Mutexes": [[1100, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1100, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1100, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1100, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1100, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1101, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1102, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1102, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1102, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1102, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1102, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1102, "abtract-base-class"]], "Classes And Dictionaries": [[1103, "classes-and-dictionaries"]], "Facts Up-Front": [[1103, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1103, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1103, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1103, "attributes"], [1216, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1103, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1103, "dynamic-attribute-access"]], "Constructor": [[1104, "constructor"]], "And self?": [[1104, "and-self"]], "Interrelationships": [[1105, "interrelationships"]], "Extending Existing Classes": [[1106, "extending-existing-classes"]], "Additional Feature: Salary": [[1106, "additional-feature-salary"]], "Want Manager": [[1106, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1106, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1106, "isinstance"]], "issubclass()": [[1106, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1106, "add-str-creatively-after-the-fact"]], "Object Methods": [[1107, "object-methods"]], "Class Methods (@classmethod)": [[1107, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1107, "static-methods-staticmethod"]], "collections.namedtuple": [[1108, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1108, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1108, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1108, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1109, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1109, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1109, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1109, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1109, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1109, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1109, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1109, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1109, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1109, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1110, "readonly-attributes"]], "And Write Access?": [[1110, "and-write-access"]], "Calculated Attributes": [[1110, "calculated-attributes"]], "str() And repr()": [[1111, "str-and-repr"]], "Stringification And Representation": [[1111, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1111, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1112, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1112, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1112, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1112, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1112, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1112, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1112, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1112, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[1113, "python-the-language-fundamentals"], [1261, "python-the-language-fundamentals"], [1265, "python-the-language-fundamentals"]], "The Python Programming Language": [[1115, "the-python-programming-language"]], "A Little Bit of History": [[1115, "a-little-bit-of-history"]], "Guido Van Rossum": [[1115, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1116, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1116, "hello-world-script-files"]], "Running Python Programs": [[1117, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1117, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1117, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1117, "the-unix-way-running"]], "The Doze Way: Registry": [[1117, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1118, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1118, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1118, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1119, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1119, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1119, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1119, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1119, null]], "Variables (1)": [[1120, "variables-1"]], "Variables (2)": [[1120, "variables-2"]], "Integer Numbers: Comparison": [[1121, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1121, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1121, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1121, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1121, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1121, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1121, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1121, "strings-python-3"]], "Python 3, Generally": [[1121, "python-3-generally"]], "Boolean Values": [[1123, "boolean-values"]], "Boolean Operators": [[1123, "boolean-operators"]], "The if Statement": [[1124, "the-if-statement"], [1124, "id1"]], "Looping Constructs": [[1125, "looping-constructs"]], "Esoteric Feature: while/else": [[1125, "esoteric-feature-while-else"]], "Sequence Elements": [[1126, "sequence-elements"]], "Sequence Multiplication": [[1126, "sequence-multiplication"]], "Indexing (1)": [[1127, "indexing-1"]], "Indexing (2)": [[1127, "indexing-2"]], "Slicing: Cutting Out": [[1127, "slicing-cutting-out"]], "Slicing: Step Width": [[1127, "slicing-step-width"]], "Iteration over \u2026 Something": [[1128, "iteration-over-something"]], "break, continue, else": [[1128, "break-continue-else"]], "Iteration over Numbers: range()": [[1129, "iteration-over-numbers-range"]], "range(): Definition": [[1129, "range-definition"]], "range(): Python 2 vs. Python 3": [[1129, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1130, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1130, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1130, "immutability-tuples"]], "Mutability: Lists (1)": [[1130, "mutability-lists-1"]], "Mutability: Lists (2)": [[1130, "mutability-lists-2"]], "Shallow Copy": [[1130, "shallow-copy"]], "Deep Copy": [[1130, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1131, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1131, "undefined-variable"]], "Local Variable": [[1131, "local-variable"]], "Local and Global Variable With Same Name": [[1131, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1131, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1132, "functions-slideshow"]], "Why Functions?": [[1132, "why-functions"]], "Mutable Default Parameters: Attention!": [[1132, "mutable-default-parameters-attention"]], "String Delimiters": [[1134, "string-delimiters"]], "Escape Sequences": [[1134, "escape-sequences"]], "More String Tricks": [[1134, "more-string-tricks"]], "C-Style Formatting (1)": [[1135, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1135, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1135, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1135, "c-style-formatting-examples"]], "The format Method": [[1135, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1135, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1136, "batteries-included-checks"]], "Batteries Included: Search": [[1136, "batteries-included-search"]], "Substring Search: Examples": [[1136, "substring-search-examples"]], "Split and Join (1)": [[1136, "split-and-join-1"]], "Split and Join (2)": [[1136, "split-and-join-2"]], "List Access": [[1137, "list-access"]], "List Methods: Examples": [[1137, "list-methods-examples"]], "Dictionary Access": [[1138, "dictionary-access"]], "Examples: Simple Access": [[1138, "examples-simple-access"]], "Examples: Shortcuts": [[1138, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1138, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1138, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1139, "operations-on-sets-1"]], "Operations on Sets (2)": [[1139, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1140, "python-2-vs-python-3"]], "Opening Files": [[1140, "opening-files"]], "Reading Files": [[1140, "reading-files"]], "Reading Files: Pythonic": [[1140, "reading-files-pythonic"]], "Writing Files (1)": [[1140, "writing-files-1"]], "Writing Files (2)": [[1140, "writing-files-2"]], "File Modes": [[1140, "file-modes"]], "Text vs. Binary Mode": [[1140, "text-vs-binary-mode"]], "Standard Streams": [[1140, "standard-streams"]], "Function Objects": [[1141, "function-objects"]], "What\u2019s a Function?": [[1141, "what-s-a-function"]], "Function Objects?": [[1141, "id1"]], "Function Objects! (1)": [[1141, "function-objects-1"]], "Function Objects! (2)": [[1141, "function-objects-2"]], "Commandline Parsing with argparse": [[1142, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1142, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1142, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1144, "python-draft-topics"]], "Matplotlib": [[1145, "matplotlib"]], "Axis Ranges": [[1145, "axis-ranges"]], "Package Installation (setuptools)": [[1146, "package-installation-setuptools"]], "Files": [[1146, "files"]], "Test \u201cInstallation\u201d": [[1146, "test-installation"]], "Source Distribution": [[1146, "source-distribution"]], "Manifest": [[1146, "manifest"]], "Installing From Wheel File": [[1146, "installing-from-wheel-file"]], "Publishing On PyPI": [[1146, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1147, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1148, "exercise-read-csv-file"]], "Sample CSV File": [[1148, "sample-csv-file"]], "CSV and Databases": [[1149, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1151, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1152, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1153, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1154, "exercises-external"]], "Exercise: Swap Two Variables": [[1156, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1157, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1158, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1159, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1160, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1161, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1162, "exercise-primeness-for"]], "Exercises (Legacy)": [[1163, "exercises-legacy"]], "Exercise: Functions: join()": [[1164, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1166, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1167, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1168, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1169, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1169, null]], "Implementation Strategy": [[1169, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1170, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1171, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1172, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1173, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1174, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1175, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1176, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1177, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1178, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1178, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1178, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1179, "exercise-basic-sensor"]], "Specification, And Setup": [[1179, "specification-and-setup"]], "Verification": [[1179, "verification"]], "Unit Test": [[1179, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1180, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1180, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1181, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1182, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1182, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1183, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1184, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1185, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1186, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1186, "test-code"], [1187, "test-code"], [1188, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1187, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1188, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1189, "python-all-material-interrelated"]], "Python Programming": [[1190, "python-programming"]], "Draft Material": [[1190, "draft-material"]], "Python Links": [[1191, "python-links"]], "Advanced Python": [[1191, "advanced-python"]], "David Beazley": [[1191, "david-beazley"]], "Raymond Hettinger": [[1191, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1192, "machine-learning-artificial-intelligence"]], "K-Means": [[1193, "k-means"]], "Topic Overview": [[1193, "topic-overview"], [1197, "topic-overview"]], "Artifacts": [[1193, "artifacts"]], "Topic Dependencies": [[1193, "topic-dependencies"], [1197, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1194, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1195, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1196, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1196, "pandas.DataFrame"]], "Reading Data": [[1196, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1196, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1196, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1196, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1196, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1196, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1196, "Verify-the-Model"]], "Linear Regression": [[1197, "linear-regression"]], "Running Code": [[1197, "running-code"]], "Dataset": [[1197, "dataset"]], "Machine Learning: Concepts and Terminology": [[1198, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1198, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1198, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1198, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1198, "types-of-machine-learning"]], "Problems Solved": [[1198, "problems-solved"], [1220, "problems-solved"], [1227, "problems-solved"]], "CSV Files": [[1199, "csv-files"]], "CSV in its Origins": [[1199, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1199, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1199, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1199, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1199, "more-tuning-needed-quoting"]], "Tuning Options": [[1199, "tuning-options"]], "And Headings?": [[1199, "and-headings"]], "Enter csv.DictReader": [[1199, "enter-csv-dictreader"]], "DBAPI 2": [[1200, "dbapi-2"]], "Database Interfaces": [[1200, "database-interfaces"]], "DBAPI 2.0": [[1200, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1200, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1200, "caveat-isolation"]], "Databases": [[1201, "databases"]], "DBAPI 2: PostgreSQL": [[1202, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1202, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1203, "dbapi-2-sqlite3"]], "SQLite3": [[1203, "sqlite3"]], "SQLite3 Connection": [[1203, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1203, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1203, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1203, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1203, "sqlite3-bind-parameters"]], "ASCII": [[1204, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1204, "iso-latin-1-iso-8859-1"]], "And Python?": [[1204, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1204, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1204, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1204, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1204, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1204, "and-jorg-2"]], "Enter UTF-8": [[1204, "enter-utf-8"]], "Boundary Code": [[1204, "boundary-code"]], "Ah Yes: decode()": [[1204, "ah-yes-decode"]], "And Source Encoding?": [[1204, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1205, "python-miscellaneous-topics"], [1263, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1206, "the-import-statement-incomplete"]], "Server/Broker": [[1207, "server-broker"]], "Starting the Service": [[1207, "starting-the-service"]], "Publishing a Message in Python": [[1207, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1207, "subscribing-a-topic-in-python"]], "Message Payload?": [[1207, "message-payload"]], "Pandas: Adding Rows": [[1208, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1208, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1208, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1208, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1209, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1209, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1209, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1209, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1209, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1209, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1209, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1210, "pandas-filters"]], "Basic Filter Example": [[1210, "basic-filter-example"]], "Filter? Bitmap!": [[1210, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1210, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1210, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1210, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1210, "negation"]], "Neat Helpers": [[1210, "neat-helpers"]], "Random Material": [[1211, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1212, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1212, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1212, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1212, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1212, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1213, "pandas-indexes"]], "Default Index: Row Number": [[1213, "default-index-row-number"]], "Setting Custom Index": [[1213, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1213, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1213, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1213, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1213, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1214, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1214, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1214, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1214, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1214, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1215, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1215, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1215, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1215, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1215, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1215, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1216, "xml-elementtree-etree"]], "SAX and DOM": [[1216, "sax-and-dom"]], "ElementTree": [[1216, "elementtree"]], "A Very Simple Document": [[1216, "a-very-simple-document"]], "Text (1)": [[1216, "text-1"]], "Text (2)": [[1216, "text-2"]], "Writing XML Documents": [[1216, "writing-xml-documents"]], "Reading XML Documents": [[1216, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1217, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1218, "python-project-package-management"], [1264, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1219, "python-package-index-livehacking-screenplay"]], "Invocation": [[1219, "invocation"]], "Help": [[1219, "help"]], "Most Used Subcommands": [[1219, "most-used-subcommands"]], "Subcommand Help": [[1219, "subcommand-help"]], "System vs. User": [[1219, "system-vs-user"]], "Search": [[1219, "search"]], "Python Package Index (Slideshow)": [[1220, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1220, "python-package-index-pypi"]], "Python Package Index": [[1221, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1222, "packaging-pypi-upload-link-collection"]], "PyTest": [[1223, "pytest"]], "pytest Introduction, By Example": [[1224, "pytest-introduction-by-example"]], "Sample Project Structure": [[1224, "sample-project-structure"]], "pytest: Installation, Documentation": [[1224, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1224, "and-pythonpath"]], "A Simple Test": [[1224, "a-simple-test"]], "Failing Tests": [[1224, "failing-tests"]], "A More Realistic Example": [[1224, "a-more-realistic-example"]], "Fixtures": [[1224, "fixtures"]], "Temporary Test Directory": [[1224, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1224, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1225, "the-unittest-module"]], "Simplest Example": [[1225, "simplest-example"]], "Using a Fixture": [[1225, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1225, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1225, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1225, "the-meat-of-a-test"]], "Recommendations": [[1225, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1226, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1226, "first-help"]], "Local Package Installation": [[1226, "local-package-installation"]], "Freezing an Environment": [[1226, "freezing-an-environment"]], "Destroying an Environment": [[1226, "destroying-an-environment"]], "Recreating an Environment": [[1226, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1226, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1227, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1227, "virtual-environments-links"]], "Virtual Environments": [[1228, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1230, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1231, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1231, "before-we-start"]], "Simplest Test: No Test": [[1231, "simplest-test-no-test"]], "Next Simplest: Single File": [[1231, "next-simplest-single-file"]], "Executing Tests Selectively": [[1231, "executing-tests-selectively"]], "Fatal Failure": [[1231, "fatal-failure"]], "FAIL()": [[1231, "fail"]], "ASSERT_*()": [[1231, "assert"]], "Non-Fatal Failure": [[1231, "non-fatal-failure"]], "Custom Message Output": [[1231, "custom-message-output"]], "Last Not Least: Structure": [[1231, "last-not-least-structure"]], "Test Cases and Suites": [[1231, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1232, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1233, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1233, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1233, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1233, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1233, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1234, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1235, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1236, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1236, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1236, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1236, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1237, "unittest-gtest-fixtures"]], "C: Introduction": [[1238, "c-introduction"]], "C: Advanced Topics": [[1239, "c-advanced-topics"]], "Zielpublikum": [[1239, "zielpublikum"], [1240, "zielpublikum"], [1247, "zielpublikum"], [1259, "zielpublikum"]], "Kursinhalt": [[1239, "kursinhalt"], [1240, "kursinhalt"], [1247, "kursinhalt"], [1258, "kursinhalt"], [1259, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1239, "empfohlene-vorkenntnisse"], [1240, "empfohlene-vorkenntnisse"], [1247, "empfohlene-vorkenntnisse"], [1258, "empfohlene-vorkenntnisse"], [1259, "empfohlene-vorkenntnisse"]], "C++: Introduction": [[1240, "c-introduction"]], "An Introduction to Modern C++, In Three Days": [[1241, "an-introduction-to-modern-c-in-three-days"]], "Design Patterns For C++ Developers": [[1242, "design-patterns-for-c-developers"]], "Course Outline": [[1242, "course-outline"], [1244, "course-outline"], [1245, "course-outline"], [1250, "course-outline"], [1251, "course-outline"], [1252, "course-outline"], [1254, "course-outline"], [1255, "course-outline"], [1260, "course-outline"], [1261, "course-outline"], [1264, "course-outline"], [1265, "course-outline"]], "C and C++ Programming": [[1243, "c-and-c-programming"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1244, "shell-scripting-bourne-again-shell-bash"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1245, "embedded-software-development-hardware-realtime-and-memory-management"]], "Target Audience": [[1245, "target-audience"], [1250, "target-audience"], [1256, "target-audience"]], "Embedded Linux Programming": [[1246, "embedded-linux-programming"]], "A Week with the Raspberry Pi": [[1247, "a-week-with-the-raspberry-pi"]], "Linux, And Programming": [[1248, "linux-and-programming"]], "Course Contents": [[1249, "course-contents"]], "Sample Project": [[1249, "sample-project"]], "Linux Basics: A Gentle Introduction": [[1250, "linux-basics-a-gentle-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1251, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Introduction": [[1252, "linux-systems-programming-introduction"]], "Linux Systems Programming (Course Series)": [[1253, "linux-systems-programming-course-series"]], "Linux Systems Programming: Multithreading": [[1254, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1255, "linux-systems-programming-network-programming"]], "CMake: A Dirty But Powerful Build Tool": [[1256, "cmake-a-dirty-but-powerful-build-tool"]], "Recommended Prior Knowledge": [[1256, "recommended-prior-knowledge"]], "GNU Make: The Mother of All Build Tools": [[1258, "gnu-make-the-mother-of-all-build-tools"]], "Unittesting and Test Driven Development": [[1259, "unittesting-and-test-driven-development"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1262, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1262, "sample-trainings"], [1265, "sample-trainings"]], "Gyroscope (BNO055)": [[160, "gyroscope-bno055"]], "Arduino Implementation": [[160, "arduino-implementation"], [163, "arduino-implementation"]], "Proximity Sensor: VL53L1X": [[163, "proximity-sensor-vl53l1x"]], "mmap: File Mappings, Basics": [[1031, "mmap-file-mappings-basics"]], "Reading A File, Not Using File I/O": [[1031, "reading-a-file-not-using-file-i-o"]], "What\u2019s Happening?": [[1031, "what-s-happening"]], "Read-Only, Basic": [[1031, "read-only-basic"]], "Wait, /proc/PID/maps": [[1031, "wait-proc-pid-maps"]], "Error Cases": [[1031, "error-cases"]]}, "indexentries": {}})