Search.setIndex({"docnames": ["about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/script", "about/site/work-in-progress/blink/glt2024/slides", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/donau", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/index", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus", "about/site/work-in-progress/fh-joanneum/2023/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-07/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-10/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-28/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-06/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-07/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-12/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-19/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-20,22,23/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-06-02/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/index", "about/site/work-in-progress/fh-joanneum/2023/ss2025/material", "about/site/work-in-progress/fh-joanneum/2023/ss2025/syllabus", "about/site/work-in-progress/fh-joanneum/dtle/hysteresis", "about/site/work-in-progress/fh-joanneum/dtle/index", "about/site/work-in-progress/fh-joanneum/dtle/material", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/glt2025/index", "about/site/work-in-progress/glt2025/submission", "about/site/work-in-progress/glt2025/talk/index", "about/site/work-in-progress/glt2025/talk/slides", "about/site/work-in-progress/index", "about/site/work-in-progress/it-visions", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/playground/hochkoenig/index", "about/site/work-in-progress/playground/index", "about/site/work-in-progress/playground/prankergasse-kastl-1", "about/site/work-in-progress/playground/sphinx", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/screencast", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/booking", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2024-03-11--Linux-Basics/agenda", "trainings/log/detail/2024-03-11--Linux-Basics/index", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index", "trainings/log/detail/2024-06-03--C++/agenda", "trainings/log/detail/2024-06-03--C++/index", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda", "trainings/log/detail/2024-06-11--CMake-Advanced/index", "trainings/log/detail/2024-06-18--CMake-Basics/index", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda", "trainings/log/detail/2024-07-01--CMake-Advanced/index", "trainings/log/detail/2024-09-30--C++/agenda", "trainings/log/detail/2024-09-30--C++/index", "trainings/log/detail/2024-11-19--C++-One-Day/agenda", "trainings/log/detail/2024-11-19--C++-One-Day/index", "trainings/log/detail/2025-05-14--C++-2-Days/agenda", "trainings/log/detail/2025-05-14--C++-2-Days/index", "trainings/log/detail/2025-XX-XX--C++-2-Days/agenda", "trainings/log/detail/2025-XX-XX--C++-2-Days/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/index", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/index", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/index", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/index", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/index", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/index", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/index", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/index", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/index", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/index", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/index", "trainings/material/soup/c/index", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/index", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/advanced/code-generators/screenplay", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic", "trainings/material/soup/cmake/advanced/configure-file/topic", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph", "trainings/material/soup/cmake/advanced/external-dependencies/topic", "trainings/material/soup/cmake/advanced/index", "trainings/material/soup/cmake/advanced/language/basics/topic", "trainings/material/soup/cmake/advanced/language/datatypes/topic", "trainings/material/soup/cmake/advanced/language/file-etc/topic", "trainings/material/soup/cmake/advanced/language/foreach/topic", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic", "trainings/material/soup/cmake/advanced/language/index", "trainings/material/soup/cmake/advanced/language/scripts/topic", "trainings/material/soup/cmake/advanced/language/variables/topic", "trainings/material/soup/cmake/advanced/language/while/topic", "trainings/material/soup/cmake/advanced/library-function/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir", "trainings/material/soup/cmake/advanced/targets-properties/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/topic", "trainings/material/soup/cmake/advanced/testing/topic", "trainings/material/soup/cmake/index", "trainings/material/soup/cmake/intro/basics", "trainings/material/soup/cmake/intro/cxx-and-rants", "trainings/material/soup/cmake/intro/index", "trainings/material/soup/cmake/intro/installation", "trainings/material/soup/cmake/intro/libraries", "trainings/material/soup/cmake/intro/shared-libraries", "trainings/material/soup/cmake/intro/structure", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/index", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/index", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/index", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/index", "trainings/material/soup/cxx-exercises/index", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/index", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/index", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/index", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/index", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/index", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/index", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/index", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/index", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/index", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/index", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-index-operator-bad", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/index", "trainings/material/soup/cxx03/060-stl/exercises/index", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/index", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/index", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/index", "trainings/material/soup/cxx03/900-standard-library-miscellanea/index", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/index", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/index", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/index", "trainings/material/soup/cxx03/inheritance-oo-design/basics", "trainings/material/soup/cxx03/inheritance-oo-design/destructor", "trainings/material/soup/cxx03/inheritance-oo-design/index", "trainings/material/soup/cxx03/inheritance-oo-design/interface", "trainings/material/soup/cxx03/inheritance-oo-design/pure-virtual", "trainings/material/soup/cxx03/inheritance-oo-design/virtual-method", "trainings/material/soup/cxx11/any-variant-optional/any", "trainings/material/soup/cxx11/any-variant-optional/index", "trainings/material/soup/cxx11/any-variant-optional/variant", "trainings/material/soup/cxx11/attributes/topic", "trainings/material/soup/cxx11/auto/topic", "trainings/material/soup/cxx11/bind-function/010-bind/topic", "trainings/material/soup/cxx11/bind-function/020-function/topic", "trainings/material/soup/cxx11/bind-function/index", "trainings/material/soup/cxx11/brace-initialization/implementor-view", "trainings/material/soup/cxx11/brace-initialization/index", "trainings/material/soup/cxx11/brace-initialization/intro", "trainings/material/soup/cxx11/brace-initialization/mess", "trainings/material/soup/cxx11/chrono/topic", "trainings/material/soup/cxx11/concepts/index", "trainings/material/soup/cxx11/concepts/intro/topic", "trainings/material/soup/cxx11/concepts/links", "trainings/material/soup/cxx11/concepts/writing-concepts/topic", "trainings/material/soup/cxx11/constexpr-constinit-consteval/const", "trainings/material/soup/cxx11/constexpr-constinit-consteval/consteval", "trainings/material/soup/cxx11/constexpr-constinit-consteval/constexpr", "trainings/material/soup/cxx11/constexpr-constinit-consteval/constinit", "trainings/material/soup/cxx11/constexpr-constinit-consteval/if", "trainings/material/soup/cxx11/constexpr-constinit-consteval/index", "trainings/material/soup/cxx11/control-flow-locals/topic", "trainings/material/soup/cxx11/coroutines/index", "trainings/material/soup/cxx11/coroutines/intro", "trainings/material/soup/cxx11/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/coroutines/intro/generator-h", "trainings/material/soup/cxx11/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/coroutines/intro/simplest", "trainings/material/soup/cxx11/coroutines/intro/suspend", "trainings/material/soup/cxx11/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/delegating-ctor/topic", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/index", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/virtual-vs-nonvirtual", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/index", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/index", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/index", "trainings/material/soup/cxx11/introduction/index", "trainings/material/soup/cxx11/introduction/overview-livehacking", "trainings/material/soup/cxx11/introduction/overview-livehacking-oo", "trainings/material/soup/cxx11/lambda/index", "trainings/material/soup/cxx11/lambda/lambda", "trainings/material/soup/cxx11/lambda/lambda-capture", "trainings/material/soup/cxx11/lambda/lambda-is-functor", "trainings/material/soup/cxx11/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/lambda/lambda-templates", "trainings/material/soup/cxx11/miscellaneous2/topic", "trainings/material/soup/cxx11/modules/topic", "trainings/material/soup/cxx11/move/afterword", "trainings/material/soup/cxx11/move/index", "trainings/material/soup/cxx11/move/livehack-smartptr-move", "trainings/material/soup/cxx11/move/livehack-string-move", "trainings/material/soup/cxx11/move/livehack-using-string-move", "trainings/material/soup/cxx11/move/overview", "trainings/material/soup/cxx11/multithreading/010-introduction/topic", "trainings/material/soup/cxx11/multithreading/020-thread/topic", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/multithreading/atomic-shared-ptr/topic", "trainings/material/soup/cxx11/multithreading/condition-variable", "trainings/material/soup/cxx11/multithreading/index", "trainings/material/soup/cxx11/multithreading/memory-model/topic", "trainings/material/soup/cxx11/multithreading/promise-future", "trainings/material/soup/cxx11/oo/default", "trainings/material/soup/cxx11/oo/delete", "trainings/material/soup/cxx11/oo/final", "trainings/material/soup/cxx11/oo/index", "trainings/material/soup/cxx11/oo/override", "trainings/material/soup/cxx11/perfect-forwarding/topic", "trainings/material/soup/cxx11/range-for/index", "trainings/material/soup/cxx11/range-for/range-based-for", "trainings/material/soup/cxx11/range-for/range-based-for-map", "trainings/material/soup/cxx11/ranges/good-bad", "trainings/material/soup/cxx11/ranges/index", "trainings/material/soup/cxx11/ranges/intro", "trainings/material/soup/cxx11/ranges/links", "trainings/material/soup/cxx11/scenarios/concrete-to-polymorphic/topic", "trainings/material/soup/cxx11/scenarios/polymorphism-in-c/topic", "trainings/material/soup/cxx11/smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/smart-pointers/index", "trainings/material/soup/cxx11/smart-pointers/introduction", "trainings/material/soup/cxx11/smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/smart-pointers/sharedptr", "trainings/material/soup/cxx11/smart-pointers/uniqueptr", "trainings/material/soup/cxx11/smart-pointers/weakptr", "trainings/material/soup/cxx11/spaceship/topic", "trainings/material/soup/cxx11/strongly-typed-enums/topic", "trainings/material/soup/cxx11/structured-binding/topic", "trainings/material/soup/index", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/index", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/index", "trainings/material/soup/linux/basics/index", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions", "trainings/material/soup/linux/basics/intro/index", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/index", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/index", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/index", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/index", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/index", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/exercises/ls/index", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/index", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/shell/special-paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/index", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/index", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/index", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/index", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/index", "trainings/material/soup/linux/kernel/cdev-auto/screenplay", "trainings/material/soup/linux/kernel/cdev-auto/slides", "trainings/material/soup/linux/kernel/cdev-auto/topic", "trainings/material/soup/linux/kernel/cdev-file-operations/screenplay", "trainings/material/soup/linux/kernel/cdev-file-operations/slides", "trainings/material/soup/linux/kernel/cdev-file-operations/topic", "trainings/material/soup/linux/kernel/cdev-first-functionality/slides", "trainings/material/soup/linux/kernel/cdev-first-functionality/topic", "trainings/material/soup/linux/kernel/cdev-manual/screenplay", "trainings/material/soup/linux/kernel/cdev-manual/slides", "trainings/material/soup/linux/kernel/cdev-manual/topic", "trainings/material/soup/linux/kernel/cdev-multiple-devices/slides", "trainings/material/soup/linux/kernel/cdev-multiple-devices/topic", "trainings/material/soup/linux/kernel/cdev-refactoring/screenplay", "trainings/material/soup/linux/kernel/cdev-refactoring/slides", "trainings/material/soup/linux/kernel/cdev-refactoring/topic", "trainings/material/soup/linux/kernel/dma/slides", "trainings/material/soup/linux/kernel/dma/topic", "trainings/material/soup/linux/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/linux/kernel/fedora-kernel-build/topic", "trainings/material/soup/linux/kernel/fedora-module-build/screenplay", "trainings/material/soup/linux/kernel/fedora-module-build/topic", "trainings/material/soup/linux/kernel/hello-world/slides", "trainings/material/soup/linux/kernel/hello-world/topic", "trainings/material/soup/linux/kernel/index", "trainings/material/soup/linux/kernel/interrupt-coding/slides", "trainings/material/soup/linux/kernel/interrupt-coding/topic", "trainings/material/soup/linux/kernel/interrupt/slides", "trainings/material/soup/linux/kernel/interrupt/topic", "trainings/material/soup/linux/kernel/iomemory/slides", "trainings/material/soup/linux/kernel/iomemory/topic", "trainings/material/soup/linux/kernel/kmalloc/slides", "trainings/material/soup/linux/kernel/kmalloc/topic", "trainings/material/soup/linux/kernel/list/slides", "trainings/material/soup/linux/kernel/list/topic", "trainings/material/soup/linux/kernel/mutex-coding/slides", "trainings/material/soup/linux/kernel/mutex-coding/topic", "trainings/material/soup/linux/kernel/mutex/slides", "trainings/material/soup/linux/kernel/mutex/topic", "trainings/material/soup/linux/kernel/netdev/slides", "trainings/material/soup/linux/kernel/netdev/topic", "trainings/material/soup/linux/kernel/pci/slides", "trainings/material/soup/linux/kernel/pci/topic", "trainings/material/soup/linux/kernel/process-vs-atomic/slides", "trainings/material/soup/linux/kernel/process-vs-atomic/topic", "trainings/material/soup/linux/kernel/raspi-kernel-build/story", "trainings/material/soup/linux/kernel/raspi-kernel-build/topic", "trainings/material/soup/linux/kernel/sample-project", "trainings/material/soup/linux/kernel/spinlock-coding/slides", "trainings/material/soup/linux/kernel/spinlock-coding/topic", "trainings/material/soup/linux/kernel/spinlock/slides", "trainings/material/soup/linux/kernel/spinlock/topic", "trainings/material/soup/linux/kernel/stub-sysprog-dup/topic", "trainings/material/soup/linux/kernel/time_timer-coding/slides", "trainings/material/soup/linux/kernel/time_timer-coding/topic", "trainings/material/soup/linux/kernel/time_timer/slides", "trainings/material/soup/linux/kernel/time_timer/topic", "trainings/material/soup/linux/kernel/todo", "trainings/material/soup/linux/kernel/usermem/screenplay", "trainings/material/soup/linux/kernel/usermem/slides", "trainings/material/soup/linux/kernel/usermem/topic", "trainings/material/soup/linux/kernel/waitqueue/screenplay", "trainings/material/soup/linux/kernel/waitqueue/slides", "trainings/material/soup/linux/kernel/waitqueue/topic", "trainings/material/soup/linux/kernel/workqueue/screenplay", "trainings/material/soup/linux/kernel/workqueue/slides", "trainings/material/soup/linux/kernel/workqueue/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/index", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/index", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/index", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/index", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/index", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/index", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/index", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/ipc-mqueue/topic", "trainings/material/soup/linux/sysprog/mmap/file-mappings", "trainings/material/soup/linux/sysprog/mmap/file-mappings-client-server", "trainings/material/soup/linux/sysprog/mmap/fork", "trainings/material/soup/linux/sysprog/mmap/index", "trainings/material/soup/linux/sysprog/mmap/lazy-alloc", "trainings/material/soup/linux/sysprog/mmap/mmap-intro-anon", "trainings/material/soup/linux/sysprog/mmap/realtime", "trainings/material/soup/linux/sysprog/mmap/virtual-memory", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/index", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/index", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/index", "trainings/material/soup/linux/sysprog/scheduling/mars-pathfinder", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/index", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-questions", "trainings/material/soup/linux/toolchain/exercises/fh-solutions", "trainings/material/soup/linux/toolchain/exercises/index", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/index", "trainings/material/soup/linux/toolchain/raspberry-pi/index", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/index", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/index", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/index", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/index", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/asyncio/topic", "trainings/material/soup/python/drafts/index", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/index", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/index", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/index", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/index", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/index", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/index", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/index", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/index", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/index", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/index", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/index", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/index", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/index", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/index", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/design-patterns/design-patterns", "trainings/repertoire/c-like/index", "trainings/repertoire/linux-prog/bash", "trainings/repertoire/linux-prog/embedded/embedded", "trainings/repertoire/linux-prog/embedded/index", "trainings/repertoire/linux-prog/embedded/raspi-hands-on", "trainings/repertoire/linux-prog/index", "trainings/repertoire/linux-prog/kernel-programming-basics", "trainings/repertoire/linux-prog/linux-basics", "trainings/repertoire/linux-prog/sysprog/advanced", "trainings/repertoire/linux-prog/sysprog/basics", "trainings/repertoire/linux-prog/sysprog/index", "trainings/repertoire/linux-prog/sysprog/multithreading", "trainings/repertoire/linux-prog/sysprog/network", "trainings/repertoire/misc/cmake", "trainings/repertoire/misc/index", "trainings/repertoire/misc/make", "trainings/repertoire/misc/unittests", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/index", "trainings/repertoire/python/misc", "trainings/repertoire/python/swdev", "trainings/template"], "filenames": ["about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/script.rst", "about/site/work-in-progress/blink/glt2024/slides.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/donau.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/index.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus.rst", "about/site/work-in-progress/fh-joanneum/2023/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-07/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-10/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-04-28/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-06/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-07/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-12/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-19/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-05-20,22,23/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/2025-06-02/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/index.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/material.rst", "about/site/work-in-progress/fh-joanneum/2023/ss2025/syllabus.rst", "about/site/work-in-progress/fh-joanneum/dtle/hysteresis.rst", "about/site/work-in-progress/fh-joanneum/dtle/index.rst", "about/site/work-in-progress/fh-joanneum/dtle/material.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/glt2025/index.rst", "about/site/work-in-progress/glt2025/submission.rst", "about/site/work-in-progress/glt2025/talk/index.rst", "about/site/work-in-progress/glt2025/talk/slides.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/it-visions.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/playground/hochkoenig/index.rst", "about/site/work-in-progress/playground/index.rst", "about/site/work-in-progress/playground/prankergasse-kastl-1.rst", "about/site/work-in-progress/playground/sphinx.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/screencast.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/booking.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2024-03-11--Linux-Basics/agenda.rst", "trainings/log/detail/2024-03-11--Linux-Basics/index.rst", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index.rst", "trainings/log/detail/2024-06-03--C++/agenda.rst", "trainings/log/detail/2024-06-03--C++/index.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/index.rst", "trainings/log/detail/2024-06-18--CMake-Basics/index.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/index.rst", "trainings/log/detail/2024-09-30--C++/agenda.rst", "trainings/log/detail/2024-09-30--C++/index.rst", "trainings/log/detail/2024-11-19--C++-One-Day/agenda.rst", "trainings/log/detail/2024-11-19--C++-One-Day/index.rst", "trainings/log/detail/2025-05-14--C++-2-Days/agenda.rst", "trainings/log/detail/2025-05-14--C++-2-Days/index.rst", "trainings/log/detail/2025-XX-XX--C++-2-Days/agenda.rst", "trainings/log/detail/2025-XX-XX--C++-2-Days/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/index.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/index.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/index.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/index.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/index.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/index.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/index.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/index.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/index.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/index.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/index.rst", "trainings/material/soup/c/index.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/index.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/advanced/code-generators/screenplay.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic.rst", "trainings/material/soup/cmake/advanced/configure-file/topic.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph.rst", "trainings/material/soup/cmake/advanced/external-dependencies/topic.rst", "trainings/material/soup/cmake/advanced/index.rst", "trainings/material/soup/cmake/advanced/language/basics/topic.rst", "trainings/material/soup/cmake/advanced/language/datatypes/topic.rst", "trainings/material/soup/cmake/advanced/language/file-etc/topic.rst", "trainings/material/soup/cmake/advanced/language/foreach/topic.rst", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic.rst", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic.rst", "trainings/material/soup/cmake/advanced/language/index.rst", "trainings/material/soup/cmake/advanced/language/scripts/topic.rst", "trainings/material/soup/cmake/advanced/language/variables/topic.rst", "trainings/material/soup/cmake/advanced/language/while/topic.rst", "trainings/material/soup/cmake/advanced/library-function/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir.rst", "trainings/material/soup/cmake/advanced/targets-properties/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/topic.rst", "trainings/material/soup/cmake/advanced/testing/topic.rst", "trainings/material/soup/cmake/index.rst", "trainings/material/soup/cmake/intro/basics.rst", "trainings/material/soup/cmake/intro/cxx-and-rants.rst", "trainings/material/soup/cmake/intro/index.rst", "trainings/material/soup/cmake/intro/installation.rst", "trainings/material/soup/cmake/intro/libraries.rst", "trainings/material/soup/cmake/intro/shared-libraries.rst", "trainings/material/soup/cmake/intro/structure.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/index.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/index.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/index.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/index.rst", "trainings/material/soup/cxx-exercises/index.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/index.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/index.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/index.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/index.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/index.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/index.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/index.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/index.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/index.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/index.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-index-operator-bad.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/index.rst", "trainings/material/soup/cxx03/060-stl/exercises/index.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/index.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/index.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/index.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/index.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/index.rst", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/index.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/index.rst", "trainings/material/soup/cxx03/inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/inheritance-oo-design/index.rst", "trainings/material/soup/cxx03/inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/inheritance-oo-design/pure-virtual.rst", "trainings/material/soup/cxx03/inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx11/any-variant-optional/any.rst", "trainings/material/soup/cxx11/any-variant-optional/index.rst", "trainings/material/soup/cxx11/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/attributes/topic.rst", "trainings/material/soup/cxx11/auto/topic.rst", "trainings/material/soup/cxx11/bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/bind-function/index.rst", "trainings/material/soup/cxx11/brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/brace-initialization/index.rst", "trainings/material/soup/cxx11/brace-initialization/intro.rst", "trainings/material/soup/cxx11/brace-initialization/mess.rst", "trainings/material/soup/cxx11/chrono/topic.rst", "trainings/material/soup/cxx11/concepts/index.rst", "trainings/material/soup/cxx11/concepts/intro/topic.rst", "trainings/material/soup/cxx11/concepts/links.rst", "trainings/material/soup/cxx11/concepts/writing-concepts/topic.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/const.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/consteval.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/constexpr.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/constinit.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/if.rst", "trainings/material/soup/cxx11/constexpr-constinit-consteval/index.rst", "trainings/material/soup/cxx11/control-flow-locals/topic.rst", "trainings/material/soup/cxx11/coroutines/index.rst", "trainings/material/soup/cxx11/coroutines/intro.rst", "trainings/material/soup/cxx11/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/delegating-ctor/topic.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/index.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/virtual-vs-nonvirtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/index.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/index.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/index.rst", "trainings/material/soup/cxx11/introduction/index.rst", "trainings/material/soup/cxx11/introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/introduction/overview-livehacking-oo.rst", "trainings/material/soup/cxx11/lambda/index.rst", "trainings/material/soup/cxx11/lambda/lambda.rst", "trainings/material/soup/cxx11/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/lambda/lambda-templates.rst", "trainings/material/soup/cxx11/miscellaneous2/topic.rst", "trainings/material/soup/cxx11/modules/topic.rst", "trainings/material/soup/cxx11/move/afterword.rst", "trainings/material/soup/cxx11/move/index.rst", "trainings/material/soup/cxx11/move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/move/livehack-string-move.rst", "trainings/material/soup/cxx11/move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/move/overview.rst", "trainings/material/soup/cxx11/multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/multithreading/atomic-shared-ptr/topic.rst", "trainings/material/soup/cxx11/multithreading/condition-variable.rst", "trainings/material/soup/cxx11/multithreading/index.rst", "trainings/material/soup/cxx11/multithreading/memory-model/topic.rst", "trainings/material/soup/cxx11/multithreading/promise-future.rst", "trainings/material/soup/cxx11/oo/default.rst", "trainings/material/soup/cxx11/oo/delete.rst", "trainings/material/soup/cxx11/oo/final.rst", "trainings/material/soup/cxx11/oo/index.rst", "trainings/material/soup/cxx11/oo/override.rst", "trainings/material/soup/cxx11/perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/range-for/index.rst", "trainings/material/soup/cxx11/range-for/range-based-for.rst", "trainings/material/soup/cxx11/range-for/range-based-for-map.rst", "trainings/material/soup/cxx11/ranges/good-bad.rst", "trainings/material/soup/cxx11/ranges/index.rst", "trainings/material/soup/cxx11/ranges/intro.rst", "trainings/material/soup/cxx11/ranges/links.rst", "trainings/material/soup/cxx11/scenarios/concrete-to-polymorphic/topic.rst", "trainings/material/soup/cxx11/scenarios/polymorphism-in-c/topic.rst", "trainings/material/soup/cxx11/smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/smart-pointers/index.rst", "trainings/material/soup/cxx11/smart-pointers/introduction.rst", "trainings/material/soup/cxx11/smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/spaceship/topic.rst", "trainings/material/soup/cxx11/strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/structured-binding/topic.rst", "trainings/material/soup/index.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/index.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/index.rst", "trainings/material/soup/linux/basics/index.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions.rst", "trainings/material/soup/linux/basics/intro/index.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/index.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/index.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/index.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/index.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/index.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/index.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/index.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/shell/special-paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/index.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/index.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/index.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/index.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/index.rst", "trainings/material/soup/linux/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/linux/kernel/cdev-auto/slides.rst", "trainings/material/soup/linux/kernel/cdev-auto/topic.rst", "trainings/material/soup/linux/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/linux/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/linux/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/linux/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/linux/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/linux/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/linux/kernel/cdev-manual/slides.rst", "trainings/material/soup/linux/kernel/cdev-manual/topic.rst", "trainings/material/soup/linux/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/linux/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/linux/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/linux/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/linux/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/linux/kernel/dma/slides.rst", "trainings/material/soup/linux/kernel/dma/topic.rst", "trainings/material/soup/linux/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/linux/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/linux/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/linux/kernel/fedora-module-build/topic.rst", "trainings/material/soup/linux/kernel/hello-world/slides.rst", "trainings/material/soup/linux/kernel/hello-world/topic.rst", "trainings/material/soup/linux/kernel/index.rst", "trainings/material/soup/linux/kernel/interrupt-coding/slides.rst", "trainings/material/soup/linux/kernel/interrupt-coding/topic.rst", "trainings/material/soup/linux/kernel/interrupt/slides.rst", "trainings/material/soup/linux/kernel/interrupt/topic.rst", "trainings/material/soup/linux/kernel/iomemory/slides.rst", "trainings/material/soup/linux/kernel/iomemory/topic.rst", "trainings/material/soup/linux/kernel/kmalloc/slides.rst", "trainings/material/soup/linux/kernel/kmalloc/topic.rst", "trainings/material/soup/linux/kernel/list/slides.rst", "trainings/material/soup/linux/kernel/list/topic.rst", "trainings/material/soup/linux/kernel/mutex-coding/slides.rst", "trainings/material/soup/linux/kernel/mutex-coding/topic.rst", "trainings/material/soup/linux/kernel/mutex/slides.rst", "trainings/material/soup/linux/kernel/mutex/topic.rst", "trainings/material/soup/linux/kernel/netdev/slides.rst", "trainings/material/soup/linux/kernel/netdev/topic.rst", "trainings/material/soup/linux/kernel/pci/slides.rst", "trainings/material/soup/linux/kernel/pci/topic.rst", "trainings/material/soup/linux/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/linux/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/linux/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/linux/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/linux/kernel/sample-project.rst", "trainings/material/soup/linux/kernel/spinlock-coding/slides.rst", "trainings/material/soup/linux/kernel/spinlock-coding/topic.rst", "trainings/material/soup/linux/kernel/spinlock/slides.rst", "trainings/material/soup/linux/kernel/spinlock/topic.rst", "trainings/material/soup/linux/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/linux/kernel/time_timer-coding/slides.rst", "trainings/material/soup/linux/kernel/time_timer-coding/topic.rst", "trainings/material/soup/linux/kernel/time_timer/slides.rst", "trainings/material/soup/linux/kernel/time_timer/topic.rst", "trainings/material/soup/linux/kernel/todo.rst", "trainings/material/soup/linux/kernel/usermem/screenplay.rst", "trainings/material/soup/linux/kernel/usermem/slides.rst", "trainings/material/soup/linux/kernel/usermem/topic.rst", "trainings/material/soup/linux/kernel/waitqueue/screenplay.rst", "trainings/material/soup/linux/kernel/waitqueue/slides.rst", "trainings/material/soup/linux/kernel/waitqueue/topic.rst", "trainings/material/soup/linux/kernel/workqueue/screenplay.rst", "trainings/material/soup/linux/kernel/workqueue/slides.rst", "trainings/material/soup/linux/kernel/workqueue/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/index.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/index.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/index.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/index.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/index.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/index.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/index.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/ipc-mqueue/topic.rst", "trainings/material/soup/linux/sysprog/mmap/file-mappings.rst", "trainings/material/soup/linux/sysprog/mmap/file-mappings-client-server.rst", "trainings/material/soup/linux/sysprog/mmap/fork.rst", "trainings/material/soup/linux/sysprog/mmap/index.rst", "trainings/material/soup/linux/sysprog/mmap/lazy-alloc.rst", "trainings/material/soup/linux/sysprog/mmap/mmap-intro-anon.rst", "trainings/material/soup/linux/sysprog/mmap/realtime.rst", "trainings/material/soup/linux/sysprog/mmap/virtual-memory.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/index.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/index.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/index.rst", "trainings/material/soup/linux/sysprog/scheduling/mars-pathfinder.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/index.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-questions.rst", "trainings/material/soup/linux/toolchain/exercises/fh-solutions.rst", "trainings/material/soup/linux/toolchain/exercises/index.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/index.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/index.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/index.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/index.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/index.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/index.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/asyncio/topic.rst", "trainings/material/soup/python/drafts/index.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/index.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/index.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/index.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/index.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/index.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/index.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/index.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/index.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/index.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/index.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/index.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/index.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/index.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/design-patterns/design-patterns.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/linux-prog/bash.rst", "trainings/repertoire/linux-prog/embedded/embedded.rst", "trainings/repertoire/linux-prog/embedded/index.rst", "trainings/repertoire/linux-prog/embedded/raspi-hands-on.rst", "trainings/repertoire/linux-prog/index.rst", "trainings/repertoire/linux-prog/kernel-programming-basics.rst", "trainings/repertoire/linux-prog/linux-basics.rst", "trainings/repertoire/linux-prog/sysprog/advanced.rst", "trainings/repertoire/linux-prog/sysprog/basics.rst", "trainings/repertoire/linux-prog/sysprog/index.rst", "trainings/repertoire/linux-prog/sysprog/multithreading.rst", "trainings/repertoire/linux-prog/sysprog/network.rst", "trainings/repertoire/misc/cmake.rst", "trainings/repertoire/misc/index.rst", "trainings/repertoire/misc/make.rst", "trainings/repertoire/misc/unittests.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/index.rst", "trainings/repertoire/python/misc.rst", "trainings/repertoire/python/swdev.rst", "trainings/template.rst"], "titles": ["Curriculum Vitae", "Myself: Contact, Impressum, \u2026", "Projekte", "Skills", "This Site", "OpenTraining", "Miscellaneous", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking", "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking", "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking", "Submission: Python, asyncio, libgpiod, and Pointless Blinking", "Pointless Blinking", "Kajak Auf Der Donau", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Gl\u00fchwein Trinken?", "2024-03-04(6): Introduction", "2024-03-21(6): OS Concepts, Shell, SSH", "2024-04-14(6): SSH, Permissions (Incl. Exercise)", "2024-04-17(6): Toolchain, Makefiles, CMake", "2024-04-22(6): CMake, Systems Programming/File-IO, Homework", "Exercise: Reading A Sensor (Driven By Tests)", "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development", "2024-05-13(3): Homework Recap, Cross Development Intro", "2024-05-27(6): Cross Development, Toolchain Installation", "2024-06-17(6): Container Templates", "2024-06-19(6): Sorting And Searching", "2024-06-20(3): Lab Exercise", "SS2024: Exam 2024-06-28 (Handout)", "2024-06-28: Written Exam", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "Embedded Computing 2 (STECE-2022): Winter", "Embedded Computing 2 (STECE-2022): Syllabus", "Embedded Computing (STECE-2023)", "2025-04-07 (3 VO): Introduction", "2025-04-10 (3 UE): Linux Host System Setup", "2025-04-28 (3 UE): The Shell, And The OS", "2025-05-06 (3 UE): Shell/Permissions (Exercises)", "2025-05-07 (3 VO): Commandline/Shell Recap, C++", "2025-05-12 (3 VO): C++ \u201cDoor\u201d Exercise Recap, Some Git", "2025-05-19 (3 VO): Close C++ \u201cDoor\u201d Exercise, More Git", "2025-05-{20,22,23} (6+6 UE): Polymorphic Door Parts, And Some Git", "2025-06-02 (3 VO): CMake, And More C++", "Embedded Computing 1 (STECE-2023): Summer", "Embedded Computing 1 (STECE-2023): Material", "Embedded Computing 1 (STECE-2023): Syllabus", "Exam: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis</span></code>", "Design Tools And Laboratory Engineering (2024)", "Design Tools And Laboratory Engineering (2024)", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "GLT 2025: systemd\u2019s D-Bus Implementation, And Its Python <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> Binding", "GLT 2025 Submission: systemd\u2019s D-Bus Implementation, And Its Python <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> Binding", "Talk Preparation: systemd\u2019s D-Bus Implementation, And Its Python <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> Binding", "Slides: systemd\u2019s D-Bus Implementation, And Its Python <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> Binding", "Work in Progress", "IT-Visions TODO", "Packaging this Site on PyPI", "Hochk\u00f6nig", "Playground", "Prankergasse Kastl", "Sphinx", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Creating Screencasts", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux Courses: OS And Programming", "How To Book", "Courses Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Agenda: Linux Basics (2024-03-11 - 2024-03-13)", "Linux Basics (2024-03-11 - 2024-03-13)", "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)", "Agenda: C++: A Thorough Overview (2024-06-03)", "C++: A Thorough Overview (2024-06-03)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-06-11)", "CMake: An Introduction (2024-06-18)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-07-01)", "C++: A Wild Ride (2024-09-30 - 2024-10-04)", "C++: An Embedded Wild Ride (2024-09-30 - 2024-10-04)", "Agenda: C++: A One-Day Overview (2024-11-19 - 2024-11-21)", "C++: A One-Day Overview (2024-11-19 - 2024-11-21)", "Agenda: C++: News Until C++20 (2025-05-14 - 2025-05-15)", "C++: News Until C++20 (2025-05-14 - 2050-05-15)", "Agenda: C++: News Until C++20 (2 Days, Yet Unspecified)", "C++: News Until C++20 (2 Days, Yet Unspecified)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Log Of Past Courses", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Screenplay: Generated Code (<code class=\"docutils literal notranslate\"><span class=\"pre\">add_custom_command()</span></code>)", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "\u201cConfigured\u201d Header Files", "Screenplay: Integrating <code class=\"docutils literal notranslate\"><span class=\"pre\">libmosquitto</span></code> (MQTT - Handwritten Find-Module)", "Screenplay: Adding <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> External Dependency", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">configure_file()</span></code>)", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">target_compile_definitions()</span></code>)", "External Dependencies", "CMake: Advanced Topics", "Language Basics", "Datatypes", "Filesystem Interaction, Pathname Manipulation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">foreach</span></code> Loops", "Functions And Macros", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>, And Conditions", "The Language", "Scripts", "Variables", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Screenplay: Function Wrapping <code class=\"docutils literal notranslate\"><span class=\"pre\">add_library()</span></code>", "Why Noy Use <code class=\"docutils literal notranslate\"><span class=\"pre\">include_directories()</span></code> For That", "Screenplay: Public And Private Include Directories", "Targets, Properties, And More", "Running Tests", "CMake", "Basics: Boilerplate, And Executables", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "CMake: Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Design Patterns With C++", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: Why Not To Use <code class=\"docutils literal notranslate\"><span class=\"pre\">operator[]</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Parse A Line From <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Inheritance Basics", "Destructors And Interfaces", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "Pure Virtual Methods, And <em>Interfaces</em>", "Dynamic Dispatch: Virtual Methods", "A Better <code class=\"docutils literal notranslate\"><span class=\"pre\">void*</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::any</span></code>", "std::any, std::variant, std::optional", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Attributes", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization (Uniform Initialization)", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "Concepts", "Concepts: Overview", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">consteval</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constinit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span> <span class=\"pre\">constexpr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">constinit</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">consteval</span></code>", "Local Variables In Control Flow Statements", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "Delegating Constructor", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Replacing <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code> With <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant&lt;&gt;</span></code> (In Real Life)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Introduction", "A Live-Hacked Tour Around The New C++", "A One-Day Overview Of C++", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Lambda And Templates", "Miscellaneous", "Modules", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Threads Introduction", "Threads in C++", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "Atomic Shared Pointer (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic&lt;std::shared_ptr&lt;&gt;</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading, C++ Memory Model", "The C++ Memory Model", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New OO Features: <code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Perfect Forwarding", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "From Concrete To Polymorphic (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">Sensor</span></code>)", "Polymorphic \u201cClasses\u201d In Good Ol\u2019 C", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "The Spaceship Operator <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;=&gt;</span></code> (And Comparison In General)", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Tuple Unpacking (Err, Structured Binding)", "Slide Material", "Exercises: Archiving And Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "Quiz: Linux Basics", "Quiz: Linux Basics (Solution)", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Permissions of Home Directory", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "Special Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "Linux Hardware Interfaces", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "Linux", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Linux Kernel Driver Development", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "POSIX Message Queues", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmap</span></code>: File Mappings, Basics", "A Simple Client/Server Scenario", "TODO: <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmap</span></code>", "Lazy Allocation, Demand Paging, And Overcommit", "Introduction To <code class=\"docutils literal notranslate\"><span class=\"pre\">mmap()</span></code>: Anonymous Memory", "TODO: And Realtime?", "Virtual Memory: Big Picture", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Legendary: The Mars Pathfinder Incident", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "Quiz: Toolchain", "Quiz: Toolchain (Solutions)", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercises", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python Programming", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "Python: Miscellaneous Topics", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "C: Introduction", "C: Advanced Topics", "C++: Introduction", "An Introduction to Modern C++, In Three Days", "Design Patterns For C++ Developers", "C and C++ Programming", "Shell Scripting/Bourne Again Shell (Bash)", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Embedded Linux Programming", "A Week with the Raspberry Pi", "Linux, And Programming", "Linux Kernel Driver Development", "Linux Basics: A Gentle Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming: Introduction", "Linux Systems Programming (Course Series)", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "CMake: A Dirty But Powerful Build Tool", "Miscellaneous", "GNU Make: The Mother of All Build Tools", "Unittesting and Test Driven Development", "Python: More Language Features", "Python: The Language Fundamentals", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python: Miscellaneous Topics", "Python: Project/Package Management", "Python: The Language Fundamentals"], "terms": {"geboren": [0, 10], "am": [0, 2, 19, 24, 48, 50, 53, 96, 170, 180, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 223, 235, 244, 280, 284, 311, 353, 365, 660, 765, 835, 870, 920, 925, 937, 984, 1014, 1016, 1031, 1066, 1152, 1255], "19": [0, 10, 52, 113, 149, 164, 202, 204, 212, 213, 214, 223, 229, 232, 234, 239, 241, 243, 244, 247, 250, 255, 256, 260, 263, 266, 267, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 397, 398, 399, 401, 409, 412, 421, 488, 512, 544, 797, 846, 891, 913, 937, 1096, 1128, 1134, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1212, 1213, 1217, 1225, 1236, 1241, 1243, 1279], "6": [0, 19, 47, 49, 98, 111, 149, 164, 193, 195, 203, 208, 211, 212, 213, 214, 224, 229, 231, 236, 239, 241, 242, 244, 247, 250, 251, 252, 254, 257, 259, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 290, 292, 301, 304, 308, 311, 315, 321, 325, 331, 339, 343, 347, 353, 359, 365, 369, 375, 396, 397, 399, 400, 404, 427, 428, 450, 487, 493, 504, 569, 570, 609, 610, 611, 612, 624, 643, 650, 652, 655, 658, 659, 661, 663, 666, 667, 668, 669, 687, 688, 689, 690, 696, 720, 721, 745, 750, 759, 762, 766, 797, 848, 887, 910, 913, 918, 922, 928, 930, 934, 936, 937, 1019, 1027, 1040, 1066, 1083, 1086, 1096, 1098, 1101, 1106, 1107, 1110, 1116, 1120, 1139, 1140, 1143, 1145, 1147, 1154, 1164, 1169, 1187, 1194, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1212, 1213, 1217, 1221, 1236, 1241, 1242, 1243, 1248], "1966": [0, 10, 232, 266, 276, 286, 289, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1217], "graz": [0, 1, 2, 10, 48, 50, 54, 175, 232, 250, 309, 342, 345, 421, 512, 857, 858, 897, 903, 1279], "diplom": [0, 10], "au": [0, 10, 19, 56, 150, 152, 165, 200, 201, 208, 209, 210, 214, 224, 235, 247, 254, 273, 279, 280, 294, 331, 347, 399, 404, 405, 422, 1255, 1256, 1257], "technisch": [0, 10, 422], "mathematik": [0, 10], "an": [0, 2, 4, 8, 10, 15, 18, 25, 27, 30, 32, 33, 35, 41, 42, 44, 45, 48, 50, 54, 56, 59, 67, 71, 72, 74, 81, 96, 97, 99, 100, 103, 107, 110, 113, 118, 121, 126, 129, 130, 131, 139, 146, 154, 159, 172, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 221, 223, 224, 227, 229, 230, 231, 234, 242, 243, 247, 248, 250, 251, 252, 253, 255, 258, 260, 263, 264, 267, 268, 269, 271, 274, 276, 277, 279, 283, 289, 291, 292, 296, 298, 300, 307, 310, 313, 315, 316, 317, 318, 320, 324, 325, 335, 338, 342, 346, 353, 355, 364, 369, 374, 375, 376, 379, 384, 385, 386, 390, 391, 415, 421, 426, 428, 432, 435, 436, 449, 458, 466, 470, 473, 476, 477, 488, 491, 492, 493, 494, 496, 499, 506, 510, 512, 519, 522, 525, 526, 529, 532, 537, 544, 548, 549, 550, 553, 555, 558, 559, 560, 569, 570, 572, 573, 574, 575, 591, 593, 597, 602, 604, 606, 607, 610, 611, 612, 624, 626, 650, 651, 653, 655, 658, 659, 663, 665, 666, 667, 668, 669, 682, 687, 700, 703, 704, 707, 708, 713, 720, 722, 724, 728, 732, 734, 735, 736, 737, 739, 742, 743, 744, 750, 751, 755, 760, 769, 782, 783, 797, 800, 801, 803, 810, 814, 819, 824, 831, 835, 837, 845, 846, 849, 856, 857, 858, 862, 863, 864, 868, 876, 885, 890, 891, 894, 897, 917, 919, 928, 934, 937, 943, 948, 950, 953, 955, 961, 984, 992, 997, 1007, 1008, 1013, 1016, 1021, 1022, 1023, 1024, 1026, 1030, 1031, 1032, 1033, 1037, 1039, 1040, 1055, 1061, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1077, 1081, 1083, 1084, 1089, 1090, 1094, 1099, 1100, 1103, 1104, 1107, 1113, 1114, 1115, 1119, 1120, 1124, 1125, 1127, 1129, 1130, 1135, 1136, 1137, 1139, 1143, 1149, 1158, 1159, 1160, 1164, 1166, 1179, 1185, 1186, 1187, 1203, 1208, 1210, 1212, 1213, 1214, 1215, 1220, 1221, 1224, 1228, 1230, 1234, 1236, 1241, 1242, 1244, 1253, 1255, 1256, 1257, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1272, 1275, 1276, 1277, 1278], "der": [0, 2, 162, 175, 176, 178, 200, 201, 202, 208, 209, 210, 211, 214, 216, 218, 224, 226, 235, 236, 237, 240, 241, 244, 245, 247, 250, 254, 270, 271, 273, 279, 282, 283, 286, 294, 343, 369, 396, 404, 409, 1255, 1256, 1257, 1264, 1275, 1276], "tu": [0, 10], "iicm": [0, 10], "1993": [0, 10], "universit\u00e4tsassist": [0, 10], "ebendort": [0, 10], "bi": [0, 2, 10, 19, 56, 180, 200, 201, 224, 234, 331, 359], "1998": [0, 2, 10, 203, 210, 266, 649], "vorlesungen": 0, "programmieren": [0, 150, 152, 165, 210, 214, 405, 421, 1257, 1264, 1275, 1276], "basi": [0, 2, 11, 67, 215, 223, 244, 253, 267, 279, 313, 373, 399, 473, 1066, 1259, 1270], "c": [0, 2, 3, 8, 10, 25, 29, 30, 49, 53, 67, 74, 95, 98, 112, 121, 131, 136, 137, 143, 146, 150, 152, 154, 165, 166, 176, 182, 191, 192, 193, 194, 195, 198, 205, 209, 211, 219, 220, 224, 229, 230, 236, 239, 241, 246, 247, 250, 251, 260, 263, 264, 266, 270, 271, 273, 276, 279, 283, 286, 291, 292, 301, 304, 311, 317, 321, 325, 331, 334, 342, 343, 347, 350, 353, 359, 365, 369, 376, 378, 379, 380, 390, 399, 403, 405, 406, 411, 417, 418, 421, 423, 424, 425, 426, 428, 432, 434, 436, 437, 438, 444, 446, 448, 449, 450, 452, 460, 461, 464, 466, 467, 468, 472, 474, 476, 477, 483, 486, 488, 490, 492, 493, 494, 496, 497, 500, 501, 504, 505, 506, 516, 518, 519, 522, 523, 524, 525, 528, 529, 532, 540, 542, 543, 544, 545, 546, 549, 550, 552, 553, 558, 562, 570, 573, 579, 591, 594, 600, 604, 606, 607, 609, 649, 651, 653, 654, 655, 656, 660, 661, 665, 666, 668, 678, 683, 685, 686, 690, 696, 700, 703, 705, 706, 709, 713, 721, 723, 724, 730, 732, 733, 734, 736, 737, 739, 741, 743, 744, 748, 749, 750, 751, 759, 760, 761, 762, 764, 765, 770, 780, 781, 782, 783, 786, 797, 799, 804, 805, 806, 808, 809, 810, 815, 816, 818, 821, 825, 828, 830, 831, 833, 837, 838, 842, 843, 845, 846, 850, 851, 853, 856, 862, 868, 870, 873, 888, 891, 913, 920, 922, 928, 929, 934, 936, 937, 940, 943, 947, 948, 952, 953, 957, 959, 961, 964, 974, 984, 986, 987, 992, 1000, 1003, 1017, 1021, 1022, 1023, 1026, 1028, 1029, 1030, 1031, 1032, 1042, 1050, 1053, 1058, 1066, 1067, 1070, 1072, 1073, 1076, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1094, 1096, 1100, 1101, 1102, 1103, 1105, 1106, 1130, 1138, 1139, 1147, 1148, 1152, 1158, 1166, 1219, 1220, 1224, 1242, 1243, 1250, 1253, 1262, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276], "und": [0, 2, 3, 24, 56, 150, 152, 162, 165, 176, 180, 200, 201, 209, 210, 214, 216, 218, 226, 230, 236, 240, 242, 244, 249, 251, 255, 260, 271, 275, 276, 281, 283, 287, 293, 294, 311, 321, 331, 347, 360, 370, 399, 400, 404, 409, 421, 458, 466, 871, 919, 920, 1006, 1255, 1256, 1257, 1264, 1275, 1276], "\u00fcbertragungsprotokol": 0, "forschungst\u00e4tigkeit": 0, "volltextsuch": 0, "hyperwav": [0, 2, 10], "2001": [0, 2, 10, 260, 266, 276, 279, 304], "leitung": 0, "serverprogrammierung": 0, "oo": [0, 30, 67, 95, 113, 142, 162, 227, 240, 242, 251, 270, 278, 281, 307, 311, 317, 319, 320, 324, 383, 408, 417, 418, 512, 555, 596, 649, 656, 739, 740, 743, 744, 751, 798, 800, 801, 976, 986, 1123, 1258, 1259, 1277], "design": [0, 2, 7, 10, 40, 44, 63, 67, 69, 71, 74, 95, 162, 169, 176, 192, 205, 207, 227, 253, 254, 270, 316, 318, 373, 375, 382, 412, 421, 449, 479, 499, 500, 503, 511, 514, 547, 548, 549, 550, 552, 553, 554, 557, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 596, 604, 649, 655, 657, 672, 738, 750, 751, 783, 797, 801, 809, 816, 839, 845, 851, 936, 1066, 1083, 1204, 1242, 1257, 1258, 1260, 1273, 1276], "analys": [0, 2, 1255], "ration": [0, 2, 25, 198], "rose": [0, 2, 19], "f\u00fcr": [0, 2, 150, 152, 165, 178, 180, 200, 201, 209, 211, 214, 235, 236, 247, 294, 308, 404, 409, 421, 893, 1255, 1264], "java": [0, 176, 234, 235, 246, 258, 267, 359, 709, 742, 743, 751, 820, 845, 1120, 1133, 1139, 1148, 1276], "releasemanag": [0, 2, 10], "cv": [0, 2, 10, 19, 261], "subvers": [0, 2, 176, 913], "systemnah": [0, 2, 10, 1073, 1076, 1080], "programmierung": [0, 2, 3, 10, 176, 205, 258, 285, 294, 421, 1255, 1257, 1264], "unter": [0, 2, 10, 150, 152, 165, 178, 201, 208, 209, 226, 234, 405, 920, 1257, 1264, 1275], "unix": [0, 67, 86, 112, 150, 152, 165, 192, 220, 243, 307, 390, 404, 405, 406, 417, 418, 422, 438, 492, 558, 724, 725, 757, 797, 855, 856, 857, 873, 875, 887, 915, 919, 925, 928, 931, 936, 941, 943, 976, 1016, 1050, 1067, 1077, 1134, 1158, 1187, 1256, 1261, 1262, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1275], "window": [0, 2, 19, 86, 87, 92, 93, 113, 134, 136, 154, 185, 192, 197, 199, 208, 210, 223, 231, 248, 262, 264, 266, 277, 280, 291, 296, 298, 300, 306, 307, 319, 335, 341, 372, 377, 380, 390, 401, 404, 407, 409, 422, 433, 500, 816, 818, 865, 891, 1025, 1050, 1055, 1132, 1134, 1135, 1158, 1208, 1243], "nt": 0, "salomon": [0, 2, 10], "friesach": [0, 2, 10], "bei": [0, 2, 10, 56, 180, 200, 201, 209, 214, 218, 224, 226, 235, 236, 239, 241, 279, 294, 396, 421, 1069], "2006": [0, 2, 10, 266], "magicdraw": 0, "datenbankdesign": [0, 2], "einer": [0, 2, 150, 152, 165, 200, 201, 210, 218, 224, 226, 235, 236, 241, 248, 399, 421, 920, 1069, 1257, 1264], "objektrelationalen": [0, 2], "datenbankschnittstel": [0, 2], "sp\u00e4ter": [0, 200, 209, 280, 1255], "softwarearchitekt": 0, "leiter": [0, 10], "abteilung": [0, 235], "forschung": 0, "entwicklung": [0, 2, 3, 150, 152, 165, 176, 405], "atron": [0, 2, 10], "unterpremst\u00e4tten": [0, 2, 10], "2010": [0, 2, 10, 204, 266, 1133], "enterpris": 0, "architect": [0, 514, 1262], "softwarearchitektur": [0, 2, 10], "versionsmanag": 0, "ibm": 0, "clearcas": [0, 198], "massgeblich": 0, "portierung": [0, 2, 3], "spielautomatensoftwar": 0, "von": [0, 2, 3, 56, 150, 152, 165, 170, 178, 180, 200, 201, 208, 209, 218, 226, 230, 235, 236, 239, 242, 244, 245, 247, 256, 273, 280, 285, 292, 301, 308, 343, 359, 365, 370, 381, 404, 405, 409, 421, 855, 919, 920, 1255, 1256, 1257, 1264], "enea": [0, 2, 192], "os": [0, 2, 192], "nach": [0, 2, 3, 56, 150, 152, 165, 180, 200, 201, 210, 214, 218, 234, 235, 241, 279, 280, 286, 365, 422, 852], "linux": [0, 2, 3, 11, 24, 26, 30, 47, 48, 49, 50, 54, 67, 73, 74, 75, 76, 87, 92, 93, 95, 112, 115, 131, 134, 138, 150, 152, 162, 165, 172, 176, 182, 189, 191, 193, 194, 195, 199, 202, 203, 204, 208, 215, 218, 223, 230, 252, 253, 260, 266, 269, 276, 279, 280, 283, 288, 291, 296, 298, 300, 309, 316, 318, 319, 335, 341, 355, 359, 376, 377, 379, 380, 382, 390, 401, 403, 404, 405, 406, 410, 411, 417, 418, 421, 464, 486, 494, 503, 506, 513, 532, 545, 607, 608, 634, 797, 817, 851, 855, 856, 865, 867, 869, 875, 891, 920, 925, 928, 930, 931, 932, 936, 940, 943, 948, 953, 955, 957, 961, 964, 966, 968, 970, 972, 976, 978, 980, 984, 985, 989, 994, 998, 1001, 1004, 1006, 1012, 1014, 1015, 1016, 1019, 1021, 1022, 1023, 1025, 1031, 1033, 1037, 1039, 1040, 1041, 1043, 1045, 1051, 1073, 1076, 1077, 1080, 1083, 1084, 1085, 1096, 1098, 1099, 1100, 1101, 1102, 1132, 1134, 1197, 1221, 1241, 1244, 1255, 1256, 1257, 1261, 1262, 1264, 1273, 1275, 1281], "beteiligt": [0, 10], "seit": [0, 10, 218, 224, 234, 239], "april": [0, 2, 10], "selbstst\u00e4ndig": [0, 10], "fh": [0, 10, 86, 95, 98, 99, 100, 112, 113, 130, 131, 134, 135, 139, 142, 149, 151, 154, 155, 157, 158, 159, 161, 163, 164, 168, 175, 197, 243, 372, 401, 403, 404, 409, 410, 412, 596, 607, 628, 656, 670, 723, 880, 905, 1250], "joanneum": [0, 168, 175, 197, 1250], "kapfenberg": 0, "2011": [0, 2, 204, 316, 318, 381, 382, 421, 424, 649, 800], "2015": [0, 10, 251, 277, 315, 346, 421, 767, 1208], "lehrveranstaltung": [0, 405], "im": [0, 2, 19, 25, 150, 152, 162, 165, 200, 201, 209, 210, 214, 218, 223, 224, 226, 227, 230, 232, 235, 236, 239, 241, 245, 247, 255, 258, 261, 262, 264, 267, 274, 275, 276, 283, 285, 287, 288, 290, 303, 305, 310, 312, 313, 317, 319, 320, 323, 324, 326, 329, 330, 332, 341, 342, 344, 345, 346, 348, 351, 357, 358, 363, 364, 366, 367, 368, 370, 404, 409, 1131, 1213, 1243, 1256, 1264, 1276], "lehrgang": 0, "softwar": [0, 4, 10, 11, 28, 53, 58, 62, 63, 67, 74, 86, 93, 113, 124, 130, 137, 138, 150, 152, 165, 173, 174, 191, 199, 202, 203, 207, 218, 224, 230, 234, 243, 260, 266, 267, 276, 277, 279, 304, 316, 318, 319, 320, 333, 349, 374, 381, 382, 401, 422, 488, 514, 548, 549, 558, 560, 747, 751, 851, 861, 875, 928, 934, 936, 968, 1019, 1081, 1091, 1094, 1164, 1210, 1259, 1263, 1264, 1265, 1266, 1270, 1273, 1276], "avl": [0, 10], "2018": [0, 10, 195, 266, 756], "2019": [0, 27, 169, 229, 251, 300, 324, 342, 345, 346, 421, 626, 756, 809, 848, 913, 1208, 1210, 1279], "linuxexpert": [0, 10], "architekt": [0, 10], "build": [0, 3, 15, 27, 29, 31, 37, 53, 67, 73, 86, 93, 97, 113, 136, 139, 142, 146, 149, 150, 154, 164, 165, 166, 177, 187, 192, 197, 198, 204, 205, 207, 218, 221, 231, 252, 269, 272, 296, 298, 300, 307, 316, 318, 321, 328, 333, 334, 349, 350, 355, 376, 378, 379, 382, 386, 407, 410, 411, 422, 425, 466, 479, 494, 506, 513, 514, 516, 519, 520, 525, 531, 532, 543, 544, 546, 574, 595, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 626, 631, 634, 724, 732, 770, 821, 822, 824, 833, 844, 888, 936, 937, 953, 964, 980, 986, 1026, 1029, 1030, 1031, 1032, 1047, 1055, 1075, 1079, 1083, 1089, 1090, 1091, 1094, 1095, 1099, 1146, 1157, 1164, 1236, 1241, 1247, 1251, 1258, 1260, 1262, 1269, 1274], "manag": [0, 5, 10, 49, 58, 62, 67, 83, 86, 97, 150, 165, 172, 191, 193, 202, 205, 207, 215, 218, 220, 223, 227, 230, 231, 237, 238, 242, 247, 248, 251, 253, 263, 269, 272, 277, 279, 280, 286, 289, 304, 311, 318, 320, 321, 324, 325, 328, 346, 347, 353, 355, 356, 359, 365, 370, 372, 375, 376, 379, 384, 407, 408, 410, 417, 418, 422, 483, 500, 511, 523, 549, 562, 620, 626, 651, 656, 738, 806, 810, 813, 843, 845, 846, 847, 861, 866, 867, 922, 936, 955, 968, 970, 1012, 1024, 1045, 1049, 1066, 1067, 1068, 1081, 1098, 1109, 1118, 1137, 1166, 1207, 1208, 1236, 1241, 1250, 1258, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1273, 1277, 1278, 1279, 1280, 1282], "schittstel": 0, "zum": [0, 2, 56, 150, 152, 165, 200, 201, 209, 214, 218, 224, 234, 247, 254, 271, 331, 422, 1255, 1256, 1257, 1264], "weiser": 0, "alter": [0, 226, 227, 277, 300, 422, 652, 660, 919, 1066, 1208], "mann": 0, "2020": [0, 10, 113, 131, 134, 157, 169, 195, 199, 200, 204, 210, 229, 231, 266, 421, 607, 608, 760, 810, 824, 857, 858, 1006, 1015, 1033, 1133, 1212, 1250, 1279], "embed": [0, 2, 3, 10, 93, 104, 134, 175, 176, 192, 194, 205, 207, 231, 233, 256, 355, 380, 402, 407, 409, 421, 747, 765, 792, 816, 869, 891, 937, 972, 984, 1016, 1066, 1067, 1083, 1111, 1152, 1255, 1256, 1259, 1261, 1264, 1265, 1267, 1268, 1270, 1273, 1275], "comput": [0, 10, 15, 16, 19, 73, 90, 104, 126, 157, 168, 175, 195, 233, 283, 292, 316, 318, 342, 343, 381, 389, 402, 404, 407, 409, 421, 429, 502, 553, 650, 660, 662, 668, 701, 750, 757, 824, 835, 852, 859, 928, 936, 1006, 1007, 1014, 1050, 1064, 1066, 1068, 1133, 1221, 1236, 1262, 1266, 1278, 1282], "electron": [0, 197, 422, 936, 1262], "engin": [0, 150, 152, 165, 169, 195, 267, 269, 335, 338, 422, 492, 496, 500, 510, 561, 594, 602, 936, 1066, 1262, 1267, 1276], "di": [1, 10, 208, 276, 512, 1198, 1200, 1204, 1206], "j\u00f6rg": [1, 10, 150, 152, 165, 209, 243, 251, 255, 270, 273, 276, 286, 289, 304, 325, 331, 343, 346, 347, 353, 359, 365, 369, 395, 396, 398, 400, 464, 558, 724, 1105, 1108, 1146, 1170, 1198, 1199, 1200, 1201, 1204, 1205, 1206], "faschingbau": [1, 10, 24, 37, 48, 50, 54, 150, 152, 157, 161, 165, 170, 173, 174, 191, 198, 199, 206, 224, 227, 228, 230, 231, 232, 233, 243, 250, 255, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 304, 311, 321, 325, 331, 336, 343, 346, 347, 353, 359, 365, 395, 396, 398, 401, 404, 409, 464, 495, 512, 523, 525, 529, 531, 542, 550, 557, 558, 591, 607, 662, 709, 724, 731, 732, 733, 734, 735, 736, 814, 857, 858, 866, 868, 873, 887, 903, 917, 922, 1015, 1061, 1105, 1108, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1137, 1159, 1164, 1187, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1216, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "offic": [1, 19, 197, 212, 1066], "co": [1, 19, 24, 170, 199, 206, 227, 228, 230, 231, 232, 233, 294, 311, 315, 404, 409, 510, 523, 542, 810, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1253], "43": [1, 195, 202, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 487, 500, 512, 690, 750, 794, 815, 824, 848, 913, 922, 934, 937, 1053, 1118], "0": [1, 8, 10, 19, 47, 49, 96, 99, 100, 103, 108, 109, 110, 111, 118, 122, 126, 130, 150, 152, 154, 155, 161, 165, 166, 177, 183, 191, 193, 194, 195, 197, 203, 210, 211, 212, 213, 214, 224, 227, 229, 231, 234, 239, 241, 242, 243, 244, 247, 250, 251, 252, 255, 256, 260, 263, 264, 266, 269, 271, 273, 276, 279, 282, 283, 286, 289, 291, 292, 294, 296, 301, 304, 307, 308, 309, 311, 315, 319, 320, 321, 325, 331, 341, 343, 347, 353, 359, 365, 369, 375, 390, 396, 397, 398, 399, 400, 401, 404, 425, 426, 428, 430, 432, 434, 435, 436, 438, 445, 446, 448, 449, 450, 458, 461, 463, 464, 470, 471, 473, 476, 491, 492, 493, 494, 496, 497, 500, 501, 504, 506, 510, 512, 514, 515, 518, 519, 520, 522, 525, 526, 529, 538, 540, 545, 549, 550, 554, 557, 560, 562, 569, 570, 572, 574, 575, 576, 577, 579, 580, 581, 584, 585, 588, 589, 590, 594, 597, 598, 602, 604, 605, 606, 607, 608, 616, 622, 623, 631, 634, 640, 643, 650, 651, 652, 654, 655, 658, 659, 660, 662, 664, 665, 666, 667, 668, 669, 672, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 713, 715, 720, 722, 725, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 747, 748, 749, 750, 751, 755, 756, 759, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 788, 790, 793, 797, 800, 801, 803, 805, 806, 807, 810, 813, 814, 815, 818, 821, 822, 824, 825, 826, 827, 830, 831, 834, 835, 837, 839, 844, 845, 847, 848, 850, 861, 866, 868, 873, 876, 887, 888, 891, 913, 916, 917, 918, 922, 928, 930, 931, 934, 936, 937, 939, 942, 943, 947, 950, 961, 964, 974, 997, 998, 1000, 1014, 1016, 1019, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1047, 1055, 1063, 1064, 1067, 1069, 1070, 1071, 1073, 1076, 1080, 1081, 1083, 1084, 1086, 1096, 1099, 1100, 1102, 1104, 1106, 1107, 1110, 1112, 1116, 1118, 1120, 1133, 1136, 1137, 1138, 1139, 1143, 1145, 1147, 1150, 1152, 1153, 1154, 1158, 1160, 1163, 1164, 1166, 1168, 1169, 1170, 1176, 1178, 1187, 1197, 1204, 1206, 1211, 1212, 1213, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1236, 1241, 1243, 1248, 1253], "664": [1, 266, 876], "5783814": 1, "gpg": [1, 159], "kei": [1, 19, 29, 86, 90, 91, 97, 113, 135, 136, 156, 159, 191, 203, 210, 219, 224, 229, 231, 232, 234, 239, 241, 243, 246, 247, 248, 250, 255, 256, 258, 260, 261, 263, 264, 266, 271, 273, 274, 276, 279, 283, 286, 288, 289, 293, 297, 300, 301, 304, 306, 307, 311, 321, 324, 325, 327, 328, 330, 331, 343, 347, 353, 358, 360, 365, 369, 371, 372, 398, 401, 404, 409, 436, 484, 703, 704, 706, 709, 743, 744, 762, 800, 834, 848, 857, 858, 866, 924, 1009, 1011, 1016, 1108, 1112, 1121, 1139, 1140, 1156, 1166, 1176, 1177, 1199, 1201, 1208, 1216, 1228, 1230, 1236, 1258, 1267, 1268], "kiesgass": 1, "5": [1, 19, 47, 49, 53, 101, 102, 103, 109, 119, 121, 126, 150, 152, 154, 155, 165, 168, 189, 195, 197, 203, 212, 213, 214, 219, 222, 225, 229, 235, 236, 239, 241, 242, 244, 247, 248, 250, 251, 254, 256, 257, 258, 260, 261, 263, 264, 266, 271, 273, 274, 276, 279, 283, 286, 288, 289, 291, 292, 296, 300, 301, 304, 308, 311, 315, 321, 324, 325, 330, 331, 336, 339, 343, 347, 353, 358, 359, 365, 369, 375, 387, 390, 396, 398, 399, 404, 409, 417, 418, 421, 426, 428, 433, 450, 452, 461, 488, 493, 497, 506, 511, 519, 525, 528, 541, 543, 549, 552, 554, 570, 578, 594, 597, 599, 604, 605, 607, 608, 609, 610, 611, 612, 624, 625, 630, 643, 650, 651, 652, 658, 661, 662, 665, 666, 668, 669, 690, 700, 720, 724, 739, 745, 747, 750, 755, 759, 762, 788, 797, 800, 801, 810, 812, 813, 826, 827, 835, 837, 839, 845, 846, 847, 859, 861, 913, 918, 922, 928, 934, 936, 937, 957, 961, 985, 1021, 1023, 1031, 1040, 1047, 1067, 1083, 1096, 1104, 1106, 1107, 1110, 1112, 1116, 1120, 1127, 1128, 1133, 1138, 1139, 1140, 1144, 1145, 1147, 1153, 1155, 1159, 1160, 1164, 1187, 1191, 1198, 1200, 1204, 1206, 1208, 1212, 1213, 1216, 1221, 1232, 1236, 1241, 1243, 1248, 1252, 1255, 1257, 1262, 1264, 1266], "8041": 1, "uid": [1, 155, 157, 271, 276, 279, 347, 365, 404, 409, 724, 797, 857, 858, 866, 876, 1016, 1031, 1098, 1187], "vat": [1, 235], "atu63522469": 1, "write": [1, 4, 6, 14, 24, 30, 35, 40, 41, 42, 43, 44, 48, 49, 50, 54, 60, 67, 86, 103, 107, 110, 114, 118, 119, 121, 122, 124, 126, 130, 131, 134, 138, 159, 181, 192, 193, 194, 203, 207, 211, 224, 227, 228, 230, 231, 232, 243, 248, 250, 251, 252, 253, 258, 260, 261, 264, 267, 269, 271, 277, 279, 288, 291, 298, 300, 307, 317, 324, 330, 342, 355, 373, 375, 377, 381, 385, 386, 390, 393, 395, 404, 406, 408, 410, 415, 430, 433, 434, 439, 451, 453, 475, 486, 490, 496, 497, 500, 510, 512, 518, 554, 558, 570, 572, 575, 586, 595, 607, 608, 610, 615, 626, 632, 637, 643, 650, 651, 654, 663, 665, 713, 721, 724, 725, 727, 751, 756, 758, 770, 780, 786, 793, 797, 800, 801, 834, 841, 848, 857, 858, 861, 868, 873, 874, 876, 877, 878, 879, 885, 887, 889, 892, 910, 922, 925, 931, 934, 936, 937, 943, 945, 955, 957, 964, 968, 984, 1000, 1012, 1019, 1021, 1022, 1023, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1037, 1039, 1040, 1041, 1043, 1047, 1052, 1056, 1066, 1067, 1076, 1080, 1081, 1083, 1085, 1088, 1092, 1110, 1121, 1126, 1127, 1154, 1155, 1160, 1166, 1167, 1169, 1172, 1173, 1174, 1176, 1178, 1179, 1182, 1183, 1185, 1187, 1189, 1190, 1191, 1193, 1194, 1198, 1200, 1203, 1208, 1221, 1232, 1241, 1242, 1243, 1258, 1260, 1265, 1269, 1271, 1278], "review": [1, 159, 193, 215, 226, 320, 381, 427], "http": [1, 2, 3, 4, 7, 10, 19, 24, 26, 31, 47, 48, 50, 52, 53, 54, 56, 74, 95, 111, 113, 125, 134, 135, 139, 142, 149, 151, 155, 158, 161, 163, 164, 173, 174, 177, 180, 183, 196, 197, 198, 199, 203, 208, 210, 218, 219, 220, 221, 227, 228, 231, 232, 240, 245, 251, 253, 254, 260, 266, 267, 269, 276, 279, 283, 291, 296, 298, 307, 310, 316, 317, 318, 320, 324, 330, 334, 335, 338, 342, 344, 346, 350, 352, 356, 358, 364, 368, 373, 375, 376, 377, 378, 379, 380, 382, 384, 403, 404, 409, 423, 513, 518, 519, 520, 521, 523, 534, 536, 591, 605, 626, 667, 720, 762, 781, 785, 821, 824, 831, 838, 843, 930, 932, 934, 940, 955, 957, 963, 984, 985, 1039, 1043, 1066, 1096, 1098, 1153, 1164, 1219, 1221, 1236, 1237], "g": [1, 19, 35, 49, 86, 113, 126, 131, 154, 155, 161, 174, 195, 199, 203, 211, 212, 214, 224, 239, 243, 252, 256, 260, 263, 266, 271, 273, 276, 279, 283, 301, 307, 315, 331, 356, 365, 372, 373, 377, 382, 425, 445, 449, 452, 455, 460, 466, 467, 468, 470, 473, 488, 492, 500, 504, 505, 512, 528, 529, 536, 537, 540, 541, 543, 546, 558, 562, 570, 591, 604, 607, 650, 654, 655, 683, 703, 724, 740, 743, 744, 750, 755, 757, 761, 762, 764, 765, 782, 797, 803, 810, 813, 815, 820, 824, 848, 869, 876, 891, 913, 921, 924, 930, 943, 961, 984, 1003, 1016, 1025, 1035, 1064, 1067, 1069, 1080, 1081, 1083, 1084, 1085, 1086, 1098, 1103, 1105, 1107, 1115, 1127, 1129, 1130, 1148, 1153, 1154, 1217, 1221, 1232, 1243, 1248, 1259, 1265, 1267, 1268, 1271, 1278], "page": [1, 20, 26, 47, 67, 95, 113, 131, 139, 173, 174, 191, 192, 194, 195, 199, 204, 228, 231, 252, 277, 307, 333, 349, 369, 411, 422, 434, 435, 438, 483, 494, 555, 591, 853, 857, 858, 875, 925, 928, 937, 943, 961, 968, 970, 982, 1016, 1026, 1029, 1042, 1043, 1045, 1047, 1049, 1067, 1215], "r": [1, 4, 18, 19, 25, 30, 47, 155, 195, 197, 198, 202, 203, 210, 212, 213, 214, 223, 224, 227, 229, 230, 234, 239, 241, 244, 247, 250, 252, 256, 257, 260, 263, 266, 269, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 308, 309, 311, 321, 325, 331, 343, 347, 353, 356, 359, 365, 369, 396, 399, 404, 413, 424, 445, 470, 500, 512, 544, 553, 572, 573, 602, 606, 669, 696, 762, 763, 764, 797, 837, 846, 861, 868, 873, 876, 887, 890, 891, 893, 913, 921, 928, 934, 936, 937, 948, 957, 961, 980, 984, 985, 1007, 1008, 1016, 1027, 1030, 1031, 1039, 1041, 1066, 1083, 1084, 1085, 1086, 1096, 1098, 1099, 1106, 1127, 1132, 1135, 1141, 1152, 1158, 1164, 1196, 1221, 1243, 1276], "ctb02zug3crheb0": 1, "curriculum": 1, "vita": 1, "skill": [1, 74, 1067, 1267], "projekt": [1, 209, 381, 1264, 1275], "stand": [2, 202, 250, 407, 937, 984, 1066, 1100, 1216], "j\u00e4nner": [2, 10], "2014": [2, 209, 230, 266, 300, 315, 324, 346, 933, 1208], "devicedriv": 2, "die": [2, 24, 32, 48, 50, 54, 56, 150, 152, 162, 165, 178, 180, 201, 208, 209, 210, 211, 214, 218, 224, 226, 234, 235, 237, 239, 241, 244, 245, 247, 250, 254, 263, 270, 273, 276, 279, 282, 283, 286, 311, 339, 365, 399, 404, 405, 409, 422, 576, 590, 919, 920, 1069, 1208, 1255, 1256, 1257, 1264, 1275, 1276], "pci": [2, 155, 238, 870, 934, 961, 1039, 1266], "hardwar": [2, 54, 59, 67, 69, 126, 130, 139, 155, 161, 173, 182, 191, 192, 195, 205, 207, 266, 267, 279, 316, 319, 320, 341, 345, 382, 390, 405, 406, 407, 422, 438, 449, 452, 488, 506, 510, 600, 601, 602, 603, 607, 757, 861, 867, 868, 928, 929, 930, 933, 936, 938, 964, 984, 1020, 1022, 1023, 1036, 1039, 1081, 1259, 1263, 1264, 1265, 1266, 1267, 1270], "ein": [2, 24, 56, 150, 152, 165, 200, 201, 208, 209, 210, 211, 214, 216, 218, 226, 230, 234, 235, 237, 239, 241, 242, 244, 245, 247, 248, 250, 254, 256, 260, 263, 264, 271, 273, 276, 279, 280, 283, 286, 294, 301, 304, 311, 321, 325, 331, 339, 343, 347, 353, 359, 369, 396, 399, 404, 409, 422, 466, 614, 761, 856, 919, 920, 1069, 1138, 1255, 1256, 1257, 1264, 1275, 1276], "messger\u00e4teherstel": 2, "de": [2, 19, 24, 150, 152, 165, 200, 202, 208, 209, 214, 218, 224, 226, 234, 235, 244, 245, 254, 270, 279, 282, 286, 384, 404, 421, 497, 781, 785, 831, 852, 853, 920, 932, 1233, 1255, 1257, 1264, 1276, 1279], "untenstehenden": 2, "zeit": [2, 201, 235, 353, 1255], "dato": 2, "ort": 2, "raum": [2, 214], "anbindung": 2, "verschieden": [2, 10, 224, 422, 1255, 1256, 1264], "hardwareinterfac": 2, "i2c": [2, 3, 67, 70, 74, 155, 182, 185, 192, 193, 218, 231, 307, 407, 410, 415, 422, 547, 577, 636, 637, 645, 935, 936, 984, 1039, 1262, 1264], "spi": [2, 3, 67, 155, 192, 209, 218, 422, 636, 637, 645, 929, 930, 931, 936, 1039, 1262, 1264], "can": [2, 16, 44, 45, 54, 58, 64, 69, 72, 97, 99, 100, 113, 114, 121, 125, 139, 146, 157, 166, 174, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 206, 207, 208, 211, 213, 215, 219, 220, 221, 223, 227, 228, 229, 243, 250, 252, 260, 263, 266, 267, 269, 276, 279, 283, 286, 289, 307, 310, 313, 315, 316, 318, 321, 325, 331, 333, 346, 347, 349, 353, 359, 373, 375, 377, 382, 385, 390, 396, 398, 401, 404, 409, 415, 422, 426, 428, 432, 436, 440, 446, 449, 460, 464, 470, 471, 474, 481, 486, 488, 492, 493, 494, 495, 496, 499, 500, 504, 505, 506, 510, 512, 513, 515, 520, 524, 525, 526, 528, 529, 532, 540, 541, 545, 546, 550, 554, 558, 559, 562, 569, 570, 574, 575, 576, 588, 592, 601, 608, 634, 640, 650, 652, 657, 659, 660, 664, 665, 672, 683, 687, 703, 705, 710, 722, 728, 733, 735, 736, 737, 739, 747, 748, 750, 751, 756, 759, 761, 762, 795, 797, 801, 809, 812, 813, 814, 815, 817, 819, 822, 831, 834, 835, 837, 844, 845, 848, 856, 857, 858, 861, 862, 863, 864, 866, 868, 869, 870, 871, 873, 874, 876, 881, 883, 885, 887, 889, 891, 892, 928, 934, 935, 936, 937, 943, 955, 970, 974, 978, 982, 984, 989, 992, 998, 1008, 1010, 1012, 1014, 1015, 1016, 1023, 1025, 1029, 1033, 1051, 1053, 1064, 1066, 1068, 1069, 1077, 1081, 1085, 1096, 1101, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1115, 1118, 1119, 1120, 1127, 1128, 1130, 1136, 1139, 1140, 1143, 1148, 1150, 1156, 1158, 1160, 1164, 1166, 1172, 1183, 1194, 1204, 1205, 1206, 1213, 1215, 1220, 1221, 1227, 1228, 1234, 1236, 1241, 1258, 1262, 1264, 1265, 1270, 1271, 1272, 1273, 1278, 1279, 1281], "custom": [2, 14, 16, 19, 26, 86, 182, 192, 195, 197, 198, 204, 206, 207, 220, 228, 230, 232, 260, 266, 269, 276, 279, 280, 307, 309, 316, 318, 343, 381, 382, 387, 403, 422, 510, 537, 541, 604, 626, 650, 656, 735, 770, 772, 806, 957, 984, 1015, 1055, 1066, 1081, 1249, 1279], "firmwar": [2, 115, 117, 131, 185, 192, 193, 195, 202, 210, 380, 382, 513, 518, 519, 520, 521, 928, 934, 1039], "kunden": [2, 10, 309], "dezemb": [2, 10], "2012": [2, 10, 204, 266], "backport": 2, "integr": [2, 10, 25, 30, 111, 123, 131, 139, 154, 174, 197, 199, 218, 223, 243, 333, 342, 349, 377, 380, 406, 411, 412, 413, 500, 523, 525, 538, 549, 553, 759, 765, 870, 891, 928, 930, 936, 937, 957, 966, 1233, 1241, 1244, 1264, 1273], "touchcontrol": 2, "driver": [2, 67, 74, 182, 185, 192, 195, 197, 205, 207, 208, 307, 405, 406, 421, 506, 861, 867, 870, 937, 938, 940, 943, 945, 947, 948, 953, 955, 959, 964, 968, 978, 984, 1025, 1039, 1262, 1263, 1264, 1265, 1270], "systemintegrationsfirma": 2, "stuttgart": 2, "mai": [2, 30, 97, 99, 100, 114, 130, 146, 166, 172, 185, 192, 196, 198, 203, 250, 260, 266, 273, 276, 279, 283, 289, 316, 325, 353, 369, 436, 443, 445, 449, 458, 523, 529, 541, 544, 572, 657, 704, 710, 748, 797, 819, 821, 825, 846, 848, 863, 864, 873, 878, 879, 891, 936, 937, 966, 968, 976, 984, 1027, 1029, 1030, 1031, 1033, 1046, 1099, 1100, 1107, 1108, 1150, 1233, 1243], "2013": [2, 10, 421], "python": [2, 3, 4, 8, 10, 11, 15, 27, 47, 55, 67, 74, 80, 81, 123, 135, 175, 176, 177, 205, 210, 212, 220, 235, 236, 240, 243, 244, 245, 247, 250, 252, 259, 260, 266, 275, 276, 279, 283, 286, 307, 309, 318, 382, 383, 385, 386, 390, 399, 400, 403, 405, 406, 411, 412, 413, 417, 418, 419, 421, 434, 606, 759, 778, 801, 820, 833, 851, 891, 913, 929, 934, 935, 1053, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1120, 1127, 1128, 1134, 1138, 1143, 1149, 1153, 1154, 1156, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1172, 1173, 1176, 1178, 1183, 1185, 1187, 1191, 1194, 1196, 1197, 1198, 1200, 1210, 1211, 1216, 1217, 1219, 1220, 1222, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1239, 1241, 1243, 1244, 1258, 1262, 1264, 1269, 1276], "programm": [2, 48, 50, 172, 209, 210, 214, 223, 234, 239, 243, 247, 279, 304, 316, 317, 318, 345, 359, 385, 387, 399, 405, 422, 470, 483, 490, 496, 500, 650, 652, 653, 742, 801, 803, 806, 810, 867, 873, 925, 936, 1025, 1046, 1069, 1132, 1136, 1158, 1215, 1255, 1258, 1265, 1266, 1267, 1268, 1276], "zur": [2, 200, 214, 218, 226, 236, 247, 399, 404, 409, 422, 1069, 1255, 1256, 1257, 1264, 1276], "IT": [2, 175, 307, 309, 380, 422, 654, 1161], "wie": [2, 150, 152, 162, 165, 180, 200, 201, 208, 209, 210, 214, 218, 224, 226, 234, 239, 242, 249, 273, 369, 399, 422, 1255, 1256, 1257, 1264, 1275], "beispiel": [2, 10, 150, 152, 165, 210, 234, 235, 257, 263, 284, 422, 1255, 1256, 1257, 1264, 1276], "e": [2, 19, 24, 25, 29, 35, 49, 86, 113, 125, 126, 131, 155, 161, 166, 168, 174, 195, 197, 198, 199, 200, 201, 203, 208, 209, 210, 212, 213, 214, 218, 224, 226, 234, 235, 239, 241, 243, 244, 247, 250, 251, 252, 255, 256, 260, 263, 264, 266, 269, 271, 273, 276, 279, 280, 283, 286, 289, 292, 301, 304, 307, 308, 311, 313, 315, 321, 325, 331, 343, 347, 353, 356, 359, 365, 369, 372, 373, 377, 382, 397, 398, 399, 400, 404, 409, 422, 425, 442, 445, 449, 452, 455, 460, 470, 473, 488, 492, 496, 499, 500, 512, 528, 529, 536, 537, 540, 541, 543, 546, 549, 558, 562, 570, 575, 579, 591, 604, 607, 608, 643, 650, 654, 655, 664, 672, 683, 703, 724, 730, 735, 740, 743, 744, 748, 750, 755, 757, 761, 770, 782, 797, 803, 810, 813, 822, 824, 825, 848, 849, 856, 857, 858, 868, 869, 873, 874, 875, 876, 891, 913, 921, 934, 936, 937, 943, 961, 1003, 1016, 1025, 1035, 1037, 1064, 1066, 1068, 1069, 1080, 1081, 1083, 1085, 1086, 1098, 1103, 1107, 1115, 1127, 1129, 1130, 1148, 1153, 1154, 1178, 1217, 1221, 1226, 1228, 1232, 1241, 1243, 1255, 1257, 1259, 1264, 1265, 1267, 1268, 1271, 1276, 1278, 1281], "bill": [2, 311], "email": [2, 19, 29, 170, 193, 199, 203, 206, 207, 231, 247, 311, 415, 1012, 1066, 1221, 1225, 1226, 1227, 1228, 1230, 1231], "kommunik": [2, 10, 1264, 1276], "extrakt": 2, "attach": [2, 212, 260, 266, 276, 279, 553, 763, 801, 936, 966, 1066, 1067, 1215], "signaturverifik": 2, "informationssystem": 2, "februar": 2, "juni": 2, "vollautomatisch": 2, "instal": [2, 19, 32, 46, 55, 86, 87, 93, 113, 130, 136, 149, 164, 177, 192, 193, 197, 218, 221, 227, 228, 230, 232, 243, 258, 260, 261, 264, 266, 269, 274, 276, 279, 280, 288, 291, 300, 303, 310, 313, 316, 317, 318, 323, 324, 328, 329, 330, 334, 335, 345, 350, 351, 352, 357, 358, 363, 367, 368, 376, 377, 378, 379, 380, 441, 513, 519, 522, 534, 536, 542, 545, 620, 870, 930, 934, 937, 957, 964, 980, 984, 985, 1080, 1082, 1085, 1086, 1088, 1091, 1115, 1131, 1135, 1162, 1219, 1226, 1236, 1237, 1244, 1249, 1251, 1274, 1278, 1281], "serveranlagen": 2, "herstel": 2, "radar\u00fcberwachungssystemen": 2, "septemb": 2, "unterschleissheim": 2, "m\u00fcnchen": 2, "instandhaltungsarbeiten": 2, "hauseigenen": 2, "system": [2, 5, 10, 24, 32, 62, 67, 69, 86, 90, 91, 97, 99, 100, 113, 126, 134, 135, 146, 149, 150, 152, 154, 156, 157, 164, 165, 172, 173, 174, 192, 193, 198, 199, 203, 205, 207, 208, 209, 215, 218, 220, 221, 231, 243, 248, 251, 258, 260, 263, 264, 268, 269, 274, 276, 277, 279, 286, 289, 295, 296, 297, 304, 306, 311, 316, 321, 324, 325, 327, 347, 353, 359, 366, 371, 382, 401, 404, 405, 406, 407, 408, 409, 415, 417, 418, 421, 456, 476, 496, 497, 503, 510, 514, 532, 541, 543, 553, 555, 561, 574, 607, 682, 724, 757, 797, 824, 825, 860, 861, 862, 863, 864, 866, 867, 869, 870, 871, 874, 875, 888, 891, 918, 919, 922, 931, 936, 937, 938, 940, 943, 955, 957, 976, 982, 984, 1006, 1011, 1017, 1021, 1022, 1023, 1024, 1026, 1029, 1031, 1035, 1037, 1039, 1040, 1042, 1046, 1066, 1068, 1069, 1071, 1077, 1080, 1081, 1083, 1084, 1085, 1107, 1108, 1119, 1135, 1164, 1208, 1243, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267], "auf": [2, 10, 150, 152, 165, 175, 178, 180, 193, 201, 208, 209, 210, 214, 218, 224, 226, 234, 235, 239, 247, 255, 273, 280, 294, 369, 399, 404, 405, 409, 422, 920, 1255, 1256, 1257, 1275, 1276], "gentoo": [2, 191, 204, 506], "updat": [2, 31, 125, 130, 164, 191, 193, 210, 238, 263, 271, 286, 296, 298, 304, 311, 316, 318, 325, 331, 343, 359, 365, 369, 404, 411, 605, 607, 667, 824, 994, 1046, 1067, 1098, 1099, 1100, 1101, 1102, 1156, 1158, 1232, 1244, 1250], "betriebssystem": [2, 1264], "usb": [2, 3, 49, 191, 192, 193, 195, 422, 499, 861, 930, 961], "touchscreen": 2, "cheat": [2, 20, 231, 243, 372, 503, 770, 891], "detect": [2, 19, 95, 162, 211, 223, 468, 471, 505, 540, 631, 658, 815, 827, 845, 936, 937, 978, 1031, 1040, 1066, 1073, 1084, 1085, 1188], "m\u00fcnzeinwurf": 2, "via": [2, 49, 74, 122, 123, 150, 152, 165, 173, 174, 192, 195, 199, 204, 212, 227, 228, 250, 256, 277, 279, 307, 310, 313, 316, 325, 342, 403, 410, 422, 519, 520, 534, 550, 554, 575, 683, 801, 830, 840, 847, 861, 867, 873, 888, 925, 934, 964, 984, 987, 1014, 1015, 1022, 1029, 1039, 1066, 1070, 1077, 1096, 1163, 1258, 1262, 1272], "gpio": [2, 3, 48, 50, 52, 53, 54, 67, 73, 113, 114, 115, 122, 123, 124, 134, 154, 162, 307, 316, 346, 407, 409, 413, 932, 934, 936, 986, 1036, 1040, 1262, 1264], "interrupt": [2, 49, 54, 55, 75, 99, 100, 146, 209, 238, 307, 506, 861, 863, 864, 867, 870, 932, 955, 976, 978, 982, 986, 987, 992, 996, 1003, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1038, 1039, 1064, 1066, 1068, 1069, 1071, 1080, 1081, 1264, 1266], "m\u00e4rz": 2, "firma": [2, 214, 309, 421, 1264], "spielo": 2, "intern": [2, 44, 73, 114, 118, 119, 124, 130, 224, 229, 252, 260, 263, 264, 266, 276, 279, 310, 313, 342, 397, 411, 439, 469, 484, 499, 541, 546, 549, 662, 703, 753, 793, 797, 809, 934, 936, 937, 961, 970, 996, 1055, 1108, 1112, 1156, 1166, 1221, 1226], "datenkonvertierung": 2, "einem": [2, 10, 56, 150, 152, 165, 200, 209, 210, 214, 218, 224, 226, 234, 235, 239, 241, 247, 273, 279, 286, 301, 404, 405, 409, 422, 1255, 1257, 1276], "konvertierung": [2, 10, 1255], "asterix": 2, "format": [2, 10, 17, 18, 29, 38, 40, 41, 42, 118, 119, 121, 139, 170, 195, 210, 211, 213, 214, 221, 228, 230, 232, 235, 239, 248, 251, 258, 259, 261, 267, 272, 273, 277, 279, 280, 285, 288, 289, 300, 303, 304, 309, 323, 324, 325, 329, 330, 332, 338, 341, 342, 345, 346, 351, 352, 353, 358, 360, 363, 364, 367, 368, 385, 426, 427, 432, 468, 512, 513, 524, 801, 861, 868, 891, 984, 1019, 1083, 1123, 1131, 1202, 1203, 1204, 1205, 1208, 1213, 1224, 1236, 1268], "zweck": [2, 224, 1264], "extern": [2, 4, 8, 10, 49, 74, 162, 191, 195, 199, 220, 223, 230, 252, 253, 258, 269, 274, 279, 288, 309, 324, 334, 342, 350, 378, 404, 409, 436, 440, 466, 468, 470, 472, 493, 513, 520, 521, 523, 534, 543, 634, 765, 809, 848, 937, 957, 961, 984, 994, 1064, 1132, 1175, 1208, 1248, 1250, 1255, 1264, 1274], "datenquellen": 2, "export": [2, 27, 47, 126, 130, 173, 192, 203, 227, 252, 253, 256, 258, 359, 390, 809, 862, 892, 928, 936, 940, 1037, 1039, 1040, 1096, 1098, 1101, 1200, 1216], "daten": [2, 224, 226, 239, 249, 254, 339, 1069], "soap": [2, 19], "ip": [2, 170, 196, 199, 208, 215, 243, 369, 401, 404, 410, 415, 631, 643, 930, 1016, 1022, 1068, 1236, 1262, 1264, 1270, 1272], "kamera": 2, "einen": [2, 10, 200, 201, 210, 214, 218, 224, 226, 234, 247, 283, 422, 709, 919, 1255, 1257, 1276], "videomautsystemen": 2, "implement": [2, 10, 11, 15, 29, 37, 40, 41, 42, 48, 49, 50, 54, 59, 71, 73, 74, 86, 99, 100, 103, 109, 111, 113, 129, 146, 158, 159, 161, 162, 175, 182, 192, 194, 197, 211, 219, 227, 229, 247, 252, 253, 260, 266, 270, 273, 274, 276, 281, 283, 298, 304, 313, 316, 317, 318, 319, 320, 325, 341, 345, 356, 373, 374, 375, 381, 382, 383, 384, 386, 391, 392, 397, 404, 415, 437, 439, 471, 481, 483, 484, 500, 510, 516, 537, 538, 541, 548, 549, 550, 552, 553, 555, 557, 558, 560, 569, 570, 574, 575, 576, 591, 595, 597, 598, 599, 600, 601, 603, 604, 605, 609, 610, 611, 612, 614, 616, 621, 624, 625, 649, 651, 655, 659, 666, 667, 668, 669, 674, 703, 710, 722, 724, 731, 732, 733, 734, 735, 736, 737, 740, 742, 743, 744, 751, 753, 761, 789, 790, 793, 794, 797, 809, 810, 811, 812, 814, 816, 822, 826, 827, 828, 830, 831, 834, 840, 844, 861, 863, 864, 868, 870, 928, 937, 943, 950, 953, 970, 998, 1016, 1019, 1025, 1050, 1055, 1066, 1077, 1102, 1106, 1107, 1112, 1113, 1114, 1120, 1124, 1148, 1184, 1188, 1197, 1204, 1208, 1217, 1220, 1224, 1258, 1262, 1265, 1266], "gige": 2, "vision": [2, 175, 309, 422], "clientlibrari": 2, "softwarebasiert": 2, "kamerasimul": 2, "t\u00e4tigkeiten": 2, "hardwareteil": 2, "rs232": [2, 3, 231], "lagesensor": 2, "anpassung": 2, "cryptsetup": 2, "filesystemverschl\u00fcsselung": 2, "anforderungen": 2, "applik": [2, 208], "august": [2, 10], "logistik": 2, "autom": [2, 230, 243, 274, 288, 330, 373, 422, 928, 1007, 1014, 1098, 1100, 1108, 1208], "beteiligten": 2, "protokol": [2, 3, 1264], "server": [2, 52, 170, 171, 196, 199, 210, 231, 243, 254, 263, 279, 286, 289, 300, 304, 311, 321, 325, 347, 353, 359, 365, 506, 572, 586, 856, 931, 1012, 1014, 1022, 1045, 1077, 1220, 1236, 1253, 1264], "zu": [2, 150, 152, 162, 165, 200, 201, 208, 209, 214, 218, 224, 235, 236, 239, 241, 255, 271, 280, 286, 294, 301, 404, 409, 422, 852, 1255, 1256, 1257, 1264, 1275, 1276], "sp": [2, 812], "tcp": [2, 192, 199, 215, 231, 336, 929, 1022, 1224, 1262, 1264, 1270, 1272], "autonomen": 2, "fahrzeugen": 2, "kundenapplikationen": 2, "autonom": [2, 233, 928, 1215], "fahrzeug": 2, "mikrocontrol": 2, "seriel": [2, 3], "beratend": 2, "versionskontrol": [2, 10], "architektur": [2, 10, 176, 422], "2008": [2, 203, 266, 1133], "ylog": [2, 10], "gmbh": [2, 10, 512], "dobl": [2, 10], "heizsystem": 2, "parametrisierung": 2, "anlag": [2, 239], "mit": [2, 3, 10, 56, 162, 176, 180, 200, 201, 208, 209, 210, 214, 216, 218, 226, 230, 235, 236, 237, 240, 241, 244, 247, 254, 255, 256, 257, 279, 280, 283, 286, 294, 325, 369, 400, 404, 405, 409, 421, 919, 1164, 1255, 1256, 1257, 1264, 1276], "iar": 2, "arm": [2, 191, 203, 243, 444, 934, 964, 984, 985, 1016, 1080, 1083, 1084, 1086, 1096], "workbench": 2, "segger": [2, 192], "embo": [2, 192], "vba": 2, "excel": [2, 67, 193, 230, 256, 529, 1200, 1213], "verteilung": 2, "microsoft": [2, 198, 199, 202, 204, 206, 207, 218, 226, 296, 298, 307, 316, 318, 422, 423, 471, 487, 870, 1066, 1200], "net": [2, 10, 26, 30, 53, 113, 131, 134, 157, 174, 176, 183, 208, 209, 234, 286, 292, 359, 373, 511, 607, 608, 857, 858, 920, 978, 984, 1022, 1066, 1221], "versionskontrollinfrastruktur": 2, "assoziiert": [2, 210], "script": [2, 25, 47, 51, 55, 187, 191, 193, 198, 199, 205, 207, 222, 230, 231, 233, 258, 260, 266, 276, 279, 306, 307, 327, 371, 377, 380, 395, 404, 421, 504, 512, 525, 530, 534, 545, 809, 873, 876, 891, 984, 1026, 1098, 1135, 1136, 1160, 1164, 1243, 1265, 1267], "shell": [2, 3, 19, 86, 88, 90, 93, 113, 149, 150, 154, 165, 168, 205, 207, 211, 230, 231, 233, 271, 279, 297, 306, 327, 347, 359, 371, 389, 390, 403, 404, 405, 406, 409, 421, 424, 506, 512, 525, 724, 797, 860, 866, 868, 869, 873, 875, 891, 894, 920, 921, 925, 928, 938, 984, 1006, 1007, 1025, 1039, 1040, 1066, 1083, 1094, 1098, 1134, 1135, 1137, 1158, 1160, 1187, 1248, 1262, 1264, 1265, 1267, 1269, 1270, 1273, 1275], "oststeiermark": 2, "erweiterung": [2, 422], "buildumgebung": 2, "cmake": [2, 3, 31, 67, 86, 95, 113, 136, 142, 149, 154, 164, 166, 176, 198, 203, 205, 207, 218, 221, 253, 269, 296, 298, 316, 318, 374, 381, 407, 421, 423, 513, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 528, 531, 532, 534, 536, 537, 538, 543, 544, 545, 546, 595, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 667, 851, 1026, 1094, 1246, 1260, 1274, 1275], "www": [2, 7, 10, 48, 50, 53, 54, 74, 173, 174, 180, 198, 208, 228, 231, 232, 304, 376, 379, 423, 831, 940, 955, 963, 985, 1039, 1066, 1219, 1221], "org": [2, 3, 10, 47, 52, 53, 173, 174, 183, 189, 191, 195, 199, 203, 208, 210, 221, 231, 234, 251, 260, 266, 267, 276, 279, 283, 304, 317, 344, 369, 376, 379, 408, 423, 520, 523, 824, 940, 955, 957, 963, 984, 985, 1039, 1043, 1096, 1098, 1132, 1153, 1164, 1203, 1219, 1236, 1237], "confix": 2, "2009": [2, 1208], "schulungen": [2, 10], "dem": [2, 10, 150, 152, 165, 180, 200, 201, 208, 209, 210, 214, 218, 235, 254, 257, 271, 280, 294, 325, 365, 404, 409, 422, 1069, 1256, 1257, 1264], "umkrei": 2, "softwareentwicklung": [2, 3], "nicht": [2, 10, 24, 150, 152, 165, 180, 200, 201, 208, 214, 218, 235, 236, 239, 244, 247, 266, 271, 273, 279, 286, 292, 311, 321, 399, 404, 422, 920, 1255, 1256, 1257, 1264, 1275, 1276], "from": [2, 4, 8, 14, 20, 21, 22, 23, 26, 31, 40, 41, 43, 47, 49, 54, 58, 62, 63, 67, 70, 71, 73, 75, 86, 87, 88, 90, 91, 92, 95, 98, 99, 100, 103, 113, 114, 115, 116, 117, 119, 120, 125, 130, 135, 136, 137, 138, 143, 144, 146, 149, 154, 156, 157, 159, 160, 162, 164, 166, 168, 170, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 206, 208, 210, 211, 213, 214, 219, 223, 224, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 250, 251, 252, 253, 255, 257, 258, 260, 264, 266, 267, 273, 276, 277, 280, 281, 283, 286, 288, 291, 295, 296, 298, 300, 301, 303, 306, 309, 313, 316, 317, 318, 319, 320, 323, 325, 327, 328, 329, 330, 335, 338, 341, 343, 345, 346, 351, 353, 355, 356, 357, 358, 363, 367, 368, 369, 371, 372, 374, 375, 377, 380, 382, 383, 389, 391, 395, 397, 401, 404, 406, 407, 408, 409, 411, 412, 424, 425, 431, 433, 434, 438, 441, 444, 447, 448, 449, 452, 463, 466, 471, 479, 486, 488, 490, 492, 494, 499, 500, 506, 510, 511, 515, 516, 517, 518, 519, 520, 524, 526, 532, 534, 536, 538, 540, 543, 545, 546, 548, 549, 550, 554, 559, 569, 573, 575, 591, 592, 593, 594, 599, 602, 604, 605, 606, 607, 608, 626, 634, 637, 643, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 664, 665, 667, 668, 678, 682, 683, 700, 713, 723, 727, 734, 740, 741, 743, 744, 747, 748, 751, 755, 759, 761, 767, 770, 776, 780, 788, 794, 795, 797, 798, 800, 801, 810, 815, 816, 818, 822, 824, 825, 828, 837, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 861, 862, 866, 867, 868, 870, 873, 874, 875, 881, 883, 888, 890, 891, 892, 893, 894, 896, 897, 910, 915, 924, 925, 928, 930, 931, 932, 933, 934, 936, 937, 939, 940, 943, 953, 955, 959, 964, 966, 972, 976, 984, 985, 986, 987, 992, 994, 996, 1004, 1008, 1012, 1016, 1019, 1020, 1021, 1022, 1023, 1026, 1029, 1031, 1032, 1034, 1039, 1042, 1046, 1049, 1051, 1056, 1061, 1068, 1069, 1071, 1080, 1081, 1086, 1096, 1098, 1100, 1102, 1107, 1108, 1112, 1115, 1116, 1119, 1120, 1123, 1127, 1130, 1132, 1135, 1136, 1139, 1154, 1155, 1157, 1158, 1165, 1166, 1169, 1172, 1178, 1180, 1181, 1183, 1184, 1187, 1188, 1189, 1193, 1194, 1197, 1198, 1202, 1203, 1205, 1206, 1210, 1211, 1212, 1214, 1216, 1220, 1221, 1222, 1224, 1228, 1230, 1233, 1236, 1241, 1243, 1248, 1250, 1253, 1259, 1262, 1263, 1265, 1277, 1278, 1280, 1282], "scratch": [2, 29, 223, 934, 1215], "mathia": 2, "kettner": 2, "novemb": [2, 10], "bodenseo": 2, "singen": 2, "bodense": 2, "spielesoftwar": 2, "entwurf": [2, 10], "systemschnittstellen": 2, "driverentwicklung": 2, "powerpc": 2, "vanilla": [2, 195], "kernel": [2, 3, 30, 47, 53, 67, 99, 100, 146, 155, 170, 182, 187, 191, 192, 194, 202, 203, 204, 205, 207, 209, 224, 231, 263, 276, 279, 286, 289, 304, 307, 311, 321, 325, 347, 353, 359, 365, 390, 410, 421, 464, 486, 499, 855, 861, 866, 868, 869, 870, 875, 920, 925, 929, 931, 933, 937, 938, 939, 940, 943, 945, 947, 953, 955, 964, 970, 972, 974, 980, 982, 996, 997, 998, 1004, 1016, 1019, 1022, 1023, 1025, 1028, 1039, 1042, 1047, 1049, 1050, 1051, 1064, 1066, 1067, 1068, 1071, 1076, 1080, 1081, 1083, 1262, 1263, 1264, 1265, 1270], "abteilungsleitung": 2, "ag": [2, 19, 172, 197, 199, 210, 224, 266, 269, 311, 398, 495, 726, 727, 728, 732, 734, 736, 768, 855, 1083, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233], "realtim": [3, 67, 69, 150, 165, 176, 207, 208, 307, 382, 385, 405, 406, 417, 418, 822, 825, 931, 936, 937, 982, 986, 989, 992, 1003, 1041, 1045, 1064, 1065, 1068, 1263, 1264, 1265, 1268, 1270, 1271], "hardwareintegr": 3, "netzwerkprogrammierung": 3, "multithread": [3, 48, 50, 54, 64, 67, 176, 192, 194, 223, 227, 258, 267, 277, 294, 316, 318, 346, 381, 387, 413, 417, 418, 422, 487, 497, 770, 798, 800, 816, 1053, 1058, 1068, 1081, 1082, 1109, 1208, 1258, 1262, 1268, 1270, 1272, 1277], "kerneldriv": 3, "rs485": 3, "In": [3, 10, 29, 31, 37, 49, 52, 54, 86, 92, 93, 95, 99, 100, 112, 113, 130, 131, 136, 137, 139, 146, 150, 152, 155, 158, 159, 161, 165, 166, 171, 173, 185, 191, 192, 193, 194, 196, 198, 201, 203, 205, 207, 215, 219, 224, 229, 236, 239, 243, 244, 252, 260, 266, 269, 273, 276, 277, 279, 280, 283, 291, 307, 316, 318, 325, 334, 350, 356, 369, 374, 375, 376, 379, 381, 383, 385, 386, 387, 389, 399, 404, 421, 444, 458, 511, 513, 519, 521, 522, 523, 529, 532, 534, 540, 545, 548, 553, 554, 569, 570, 572, 574, 575, 591, 594, 604, 605, 606, 608, 652, 655, 656, 659, 662, 663, 692, 715, 720, 722, 724, 727, 732, 733, 734, 735, 737, 743, 744, 759, 783, 797, 798, 800, 811, 815, 817, 830, 835, 846, 849, 859, 862, 863, 864, 873, 875, 877, 881, 883, 885, 887, 902, 903, 929, 937, 945, 950, 957, 982, 984, 996, 1008, 1012, 1015, 1022, 1030, 1033, 1038, 1055, 1061, 1066, 1067, 1069, 1077, 1084, 1094, 1105, 1106, 1108, 1112, 1115, 1116, 1120, 1121, 1127, 1128, 1132, 1135, 1149, 1150, 1153, 1154, 1155, 1166, 1167, 1177, 1186, 1192, 1197, 1205, 1208, 1217, 1220, 1224, 1228, 1230, 1232, 1233, 1243, 1244, 1255, 1257, 1259, 1260, 1264, 1271], "userspac": [3, 70, 74, 75, 126, 131, 134, 182, 192, 193, 263, 279, 286, 289, 304, 307, 311, 321, 325, 347, 353, 359, 365, 422, 499, 506, 867, 869, 930, 935, 937, 942, 953, 961, 970, 976, 982, 986, 992, 996, 1000, 1016, 1038, 1039, 1049, 1067, 1071, 1077, 1262, 1266], "host": [3, 97, 154, 164, 191, 198, 203, 359, 401, 415, 929, 934, 964, 985, 1084, 1086, 1096, 1219, 1224, 1236], "devic": [3, 20, 59, 62, 67, 73, 78, 108, 114, 131, 139, 150, 155, 165, 182, 191, 192, 197, 209, 230, 238, 320, 375, 405, 406, 407, 591, 607, 608, 797, 819, 822, 825, 863, 864, 867, 870, 873, 913, 953, 955, 961, 966, 968, 984, 986, 1000, 1003, 1016, 1019, 1025, 1033, 1039, 1066, 1068, 1071, 1072, 1074, 1077, 1094, 1119, 1264, 1266, 1267], "libusb": [3, 192], "gadgetf": [3, 192], "modbu": [3, 208], "verschiedenen": [3, 10, 218, 235, 1255, 1256], "rto": [3, 192], "yocto": [3, 182, 187, 203, 523, 926, 984, 1086], "programmiersprachen": [3, 235, 1257], "incl": [3, 10, 149, 840], "buildsystem": 3, "autoconf": [3, 47, 203], "automak": [3, 198, 203, 1098, 1275], "meson": [3, 198, 203, 1075, 1079, 1098], "ninja": [3, 19, 203, 540, 1085, 1098], "make": [3, 4, 30, 31, 32, 47, 49, 52, 53, 58, 60, 67, 69, 98, 115, 116, 118, 126, 131, 136, 154, 159, 166, 182, 187, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 207, 211, 212, 215, 219, 220, 223, 227, 228, 229, 233, 242, 243, 250, 252, 253, 264, 267, 279, 283, 296, 298, 320, 325, 328, 333, 342, 349, 377, 380, 381, 404, 407, 455, 467, 471, 479, 486, 488, 490, 500, 506, 510, 515, 516, 517, 519, 523, 538, 540, 541, 544, 546, 548, 549, 550, 553, 569, 570, 575, 576, 593, 606, 608, 620, 626, 631, 637, 655, 665, 667, 669, 672, 684, 728, 739, 742, 747, 751, 759, 764, 765, 783, 793, 794, 800, 810, 815, 825, 845, 846, 850, 859, 870, 874, 876, 897, 910, 929, 930, 936, 937, 945, 952, 953, 957, 959, 961, 964, 984, 985, 1001, 1026, 1029, 1031, 1043, 1061, 1064, 1066, 1067, 1069, 1071, 1076, 1080, 1083, 1096, 1098, 1099, 1100, 1101, 1105, 1112, 1115, 1127, 1158, 1166, 1179, 1187, 1213, 1226, 1259, 1260, 1262, 1265, 1269, 1273, 1274, 1277], "perl": [3, 203, 803, 921, 1135], "leider": [3, 200, 266, 279, 286, 301, 385, 1255], "objektorientiert": [3, 176, 422, 1257], "ooa": 3, "ood": 3, "unit": [3, 67, 71, 73, 86, 95, 113, 114, 121, 150, 162, 165, 176, 194, 211, 226, 227, 230, 231, 242, 251, 269, 283, 308, 309, 316, 320, 333, 349, 381, 382, 413, 417, 418, 421, 493, 512, 538, 540, 572, 595, 601, 605, 634, 664, 757, 764, 765, 809, 825, 851, 937, 1049, 1067, 1150, 1158, 1208, 1220, 1242, 1259, 1273, 1276, 1281], "test": [3, 20, 27, 67, 71, 73, 86, 113, 116, 129, 131, 141, 142, 149, 150, 159, 161, 162, 165, 166, 176, 192, 194, 195, 197, 198, 199, 205, 207, 210, 211, 217, 218, 219, 222, 226, 227, 230, 242, 248, 251, 264, 266, 267, 269, 279, 296, 298, 318, 325, 334, 346, 350, 356, 381, 413, 415, 417, 421, 423, 435, 497, 510, 511, 515, 523, 525, 529, 548, 549, 550, 551, 552, 553, 555, 557, 558, 560, 561, 570, 572, 573, 595, 597, 598, 599, 600, 601, 602, 603, 604, 606, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 631, 643, 645, 650, 651, 652, 662, 663, 665, 666, 668, 669, 720, 732, 733, 734, 735, 736, 737, 745, 747, 750, 756, 793, 794, 795, 797, 804, 812, 813, 814, 834, 839, 844, 845, 846, 847, 850, 851, 891, 929, 930, 934, 942, 974, 984, 987, 989, 992, 1000, 1026, 1066, 1092, 1100, 1140, 1150, 1154, 1157, 1178, 1203, 1208, 1214, 1215, 1220, 1229, 1247, 1249, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1274, 1281], "driven": [3, 32, 54, 61, 67, 71, 141, 142, 149, 176, 192, 205, 207, 218, 227, 242, 269, 307, 309, 335, 338, 421, 510, 557, 666, 668, 669, 1067, 1073, 1074, 1233, 1241, 1255, 1256, 1257, 1258, 1259, 1260, 1268, 1272, 1274], "develop": [3, 8, 32, 61, 62, 67, 69, 71, 92, 93, 111, 137, 138, 150, 164, 165, 172, 176, 193, 195, 197, 198, 199, 203, 205, 207, 215, 218, 226, 227, 230, 235, 242, 248, 253, 254, 261, 263, 264, 269, 274, 299, 304, 309, 334, 335, 338, 350, 377, 378, 382, 385, 387, 403, 405, 406, 415, 421, 488, 500, 506, 510, 529, 532, 534, 541, 545, 607, 608, 666, 668, 669, 801, 867, 870, 929, 930, 938, 947, 957, 984, 1066, 1084, 1101, 1133, 1164, 1166, 1208, 1241, 1242, 1255, 1256, 1257, 1258, 1260, 1263, 1264, 1265, 1270, 1273, 1274], "gui": [3, 114, 130, 191, 197, 203, 269, 411, 412, 870, 1050], "gtk": 3, "qt": 3, "The": [4, 16, 17, 27, 36, 40, 44, 48, 49, 50, 67, 73, 88, 95, 96, 97, 98, 99, 100, 108, 113, 116, 118, 119, 121, 123, 124, 130, 131, 135, 139, 143, 146, 150, 152, 164, 165, 168, 173, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 243, 245, 248, 251, 254, 258, 259, 260, 261, 264, 265, 266, 269, 270, 273, 274, 276, 277, 279, 282, 283, 285, 288, 290, 293, 295, 296, 297, 298, 300, 303, 306, 309, 310, 313, 316, 318, 320, 323, 324, 326, 327, 329, 330, 346, 348, 351, 352, 353, 357, 358, 360, 363, 364, 367, 368, 370, 371, 373, 374, 375, 382, 384, 387, 390, 395, 401, 404, 405, 406, 407, 409, 410, 421, 422, 425, 427, 435, 441, 449, 451, 453, 454, 455, 461, 469, 488, 492, 500, 511, 523, 525, 540, 541, 548, 549, 550, 553, 559, 569, 570, 572, 574, 576, 591, 594, 597, 602, 604, 605, 608, 610, 649, 651, 655, 658, 666, 667, 668, 669, 684, 721, 722, 724, 725, 732, 733, 734, 736, 737, 738, 739, 741, 756, 760, 783, 793, 797, 799, 813, 822, 823, 835, 837, 849, 851, 855, 857, 858, 860, 863, 864, 868, 869, 876, 878, 879, 888, 890, 893, 898, 903, 931, 936, 937, 945, 947, 957, 959, 961, 978, 984, 986, 989, 1020, 1026, 1029, 1030, 1031, 1032, 1039, 1041, 1046, 1052, 1053, 1055, 1056, 1062, 1067, 1068, 1070, 1077, 1080, 1081, 1084, 1086, 1087, 1089, 1090, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1109, 1110, 1113, 1114, 1121, 1122, 1130, 1132, 1134, 1136, 1137, 1144, 1148, 1155, 1156, 1158, 1159, 1160, 1166, 1178, 1180, 1183, 1184, 1187, 1188, 1191, 1194, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1214, 1215, 1217, 1223, 1224, 1230, 1235, 1241, 1243, 1248, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1267, 1269, 1272, 1273, 1274, 1277, 1279, 1280, 1281], "sourc": [4, 10, 15, 17, 47, 53, 58, 62, 75, 99, 100, 113, 131, 139, 146, 166, 173, 174, 191, 192, 193, 194, 197, 198, 199, 203, 208, 209, 211, 212, 219, 232, 237, 242, 260, 266, 274, 276, 279, 283, 288, 296, 298, 300, 303, 304, 307, 328, 335, 377, 380, 466, 467, 470, 505, 514, 515, 517, 522, 537, 541, 543, 544, 545, 546, 555, 605, 608, 609, 747, 770, 810, 813, 844, 875, 891, 892, 925, 952, 982, 985, 996, 1033, 1066, 1086, 1087, 1089, 1090, 1094, 1096, 1098, 1099, 1101, 1139, 1196, 1205, 1243, 1250], "i": [4, 5, 8, 14, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 44, 47, 48, 49, 50, 53, 54, 56, 58, 59, 67, 69, 71, 73, 74, 76, 78, 79, 80, 86, 87, 88, 89, 93, 95, 96, 97, 98, 99, 100, 103, 104, 108, 109, 111, 112, 113, 114, 118, 121, 122, 124, 125, 126, 130, 131, 134, 135, 139, 142, 146, 149, 154, 156, 157, 159, 164, 166, 168, 172, 173, 180, 181, 182, 184, 185, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 206, 207, 208, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 239, 241, 242, 243, 244, 247, 248, 251, 252, 253, 255, 256, 258, 261, 262, 263, 264, 267, 268, 269, 270, 272, 273, 274, 277, 278, 280, 281, 282, 283, 285, 287, 290, 291, 292, 296, 297, 298, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 329, 331, 333, 335, 336, 338, 339, 341, 342, 343, 345, 346, 347, 349, 351, 352, 353, 355, 357, 358, 360, 363, 364, 366, 367, 368, 369, 371, 373, 374, 375, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 395, 399, 400, 401, 404, 407, 409, 410, 412, 415, 417, 418, 422, 424, 425, 426, 427, 428, 434, 435, 436, 438, 440, 441, 442, 444, 445, 448, 449, 450, 452, 453, 455, 457, 460, 461, 462, 463, 464, 467, 469, 470, 471, 473, 474, 476, 477, 479, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 506, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 528, 531, 532, 534, 536, 537, 538, 540, 541, 542, 543, 544, 548, 550, 552, 553, 554, 555, 558, 561, 562, 569, 570, 572, 573, 574, 575, 576, 589, 591, 592, 594, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 615, 620, 624, 626, 631, 634, 637, 640, 643, 648, 649, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 674, 677, 678, 682, 683, 684, 685, 686, 687, 688, 690, 691, 696, 700, 703, 705, 706, 708, 710, 713, 715, 720, 721, 722, 724, 725, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 745, 747, 748, 751, 755, 756, 757, 759, 762, 763, 764, 765, 766, 768, 770, 782, 784, 786, 793, 797, 800, 804, 805, 807, 808, 810, 812, 813, 814, 816, 819, 821, 822, 825, 828, 831, 833, 834, 837, 838, 839, 840, 844, 846, 847, 848, 849, 850, 851, 855, 856, 857, 858, 860, 862, 863, 864, 865, 868, 869, 870, 871, 875, 876, 877, 878, 879, 882, 883, 888, 890, 891, 892, 893, 894, 899, 903, 906, 907, 913, 915, 919, 921, 924, 925, 928, 929, 930, 931, 933, 934, 935, 936, 939, 940, 943, 945, 948, 950, 952, 953, 955, 959, 961, 966, 970, 972, 974, 976, 978, 980, 982, 984, 985, 986, 991, 992, 994, 996, 997, 998, 1000, 1001, 1006, 1012, 1014, 1019, 1026, 1029, 1031, 1033, 1036, 1037, 1039, 1040, 1041, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1164, 1166, 1167, 1168, 1170, 1178, 1181, 1184, 1187, 1188, 1191, 1194, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1220, 1221, 1222, 1224, 1226, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1241, 1242, 1243, 1244, 1248, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "under": [4, 8, 22, 42, 122, 126, 130, 191, 192, 194, 199, 219, 230, 232, 342, 554, 570, 607, 867, 868, 934, 936, 937, 1006, 1007, 1008, 1015, 1016, 1066, 1068, 1083, 1108, 1115, 1122, 1156, 1241], "why": [4, 11, 15, 32, 37, 53, 59, 104, 108, 109, 112, 113, 131, 181, 192, 193, 198, 204, 223, 227, 228, 230, 232, 243, 252, 272, 310, 313, 319, 320, 341, 355, 374, 381, 382, 386, 404, 407, 408, 411, 424, 436, 442, 449, 452, 470, 481, 486, 487, 492, 496, 499, 506, 511, 536, 537, 569, 592, 651, 660, 665, 683, 696, 735, 743, 744, 751, 759, 783, 795, 800, 801, 817, 833, 848, 849, 861, 868, 871, 928, 952, 964, 980, 984, 1042, 1058, 1061, 1080, 1096, 1098, 1106, 1107, 1110, 1156, 1158, 1208, 1213, 1222, 1231, 1268, 1271], "appli": [4, 65, 72, 194, 232, 250, 309, 315, 342, 353, 382, 453, 488, 494, 512, 662, 749, 783, 835, 848, 871, 874, 891, 934, 936, 957, 984, 1029, 1066, 1101, 1227], "websit": [4, 10, 193, 1237, 1250], "contain": [4, 16, 22, 25, 47, 95, 96, 97, 99, 100, 111, 113, 139, 145, 146, 149, 166, 172, 174, 195, 198, 203, 211, 213, 218, 219, 221, 223, 224, 227, 230, 232, 250, 252, 253, 260, 266, 276, 277, 279, 283, 290, 291, 294, 295, 296, 309, 316, 325, 342, 359, 372, 383, 384, 387, 389, 390, 399, 406, 407, 413, 415, 451, 470, 484, 504, 506, 512, 517, 520, 521, 524, 525, 532, 541, 544, 553, 569, 591, 594, 605, 606, 607, 614, 648, 649, 651, 659, 660, 667, 684, 687, 700, 704, 716, 720, 722, 724, 732, 737, 750, 753, 783, 793, 794, 795, 797, 810, 833, 840, 846, 857, 858, 861, 871, 873, 896, 897, 898, 903, 910, 934, 936, 937, 940, 945, 953, 955, 957, 978, 980, 984, 1004, 1012, 1026, 1033, 1041, 1046, 1047, 1050, 1051, 1066, 1067, 1077, 1083, 1086, 1089, 1090, 1092, 1096, 1101, 1108, 1110, 1115, 1132, 1154, 1157, 1164, 1166, 1178, 1187, 1191, 1206, 1208, 1210, 1214, 1216, 1219, 1221, 1226, 1236, 1237, 1241, 1247, 1248, 1257, 1258], "materi": [4, 5, 10, 14, 51, 55, 86, 95, 148, 163, 166, 192, 206, 207, 223, 226, 227, 228, 230, 232, 233, 235, 237, 238, 242, 245, 248, 251, 253, 254, 257, 258, 261, 264, 267, 269, 270, 282, 285, 288, 291, 295, 296, 298, 300, 303, 310, 313, 319, 320, 324, 330, 334, 335, 338, 341, 342, 345, 346, 350, 352, 358, 364, 368, 372, 373, 374, 378, 382, 384, 385, 387, 404, 412, 422, 515, 516, 522, 523, 526, 532, 538, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 557, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 604, 606, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 648, 797, 846, 933, 1012, 1037, 1040, 1108, 1111, 1132, 1160, 1210, 1222, 1250, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "train": [4, 5, 10, 16, 17, 19, 24, 95, 193, 197, 204, 205, 206, 207, 214, 215, 218, 219, 220, 223, 226, 250, 260, 266, 276, 279, 309, 316, 318, 321, 333, 349, 359, 372, 374, 412, 422, 515, 516, 522, 523, 526, 532, 538, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 557, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 604, 606, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 648, 797, 846, 940, 943, 948, 953, 959, 961, 970, 1006, 1012, 1014, 1015, 1016, 1037, 1040, 1073, 1076, 1080, 1108, 1111, 1132, 1160, 1164, 1167, 1207, 1210, 1211, 1214, 1215, 1250, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1273, 1275, 1276, 1277, 1278, 1280, 1281], "give": [4, 14, 27, 40, 48, 50, 54, 99, 100, 118, 146, 159, 172, 174, 191, 192, 194, 199, 202, 206, 212, 215, 219, 220, 227, 232, 243, 251, 283, 288, 300, 316, 318, 346, 436, 437, 452, 468, 471, 479, 504, 510, 512, 541, 550, 602, 604, 620, 637, 672, 687, 724, 727, 735, 801, 809, 856, 863, 864, 882, 884, 936, 937, 984, 1024, 1025, 1037, 1040, 1066, 1069, 1071, 1076, 1077, 1083, 1086, 1096, 1105, 1108, 1148, 1160, 1208, 1212, 1213, 1236, 1241, 1243, 1258, 1259, 1261, 1266, 1268, 1269, 1271, 1278], "structur": [4, 16, 78, 97, 118, 162, 173, 192, 206, 228, 242, 269, 270, 277, 279, 280, 282, 285, 288, 291, 294, 303, 310, 313, 320, 324, 330, 334, 335, 338, 342, 346, 350, 352, 356, 358, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 404, 408, 410, 412, 426, 436, 444, 449, 480, 484, 501, 508, 512, 532, 534, 537, 540, 542, 552, 570, 595, 605, 624, 672, 706, 732, 798, 800, 887, 919, 972, 974, 978, 982, 984, 1004, 1022, 1028, 1053, 1058, 1066, 1077, 1086, 1148, 1150, 1191, 1197, 1233, 1242, 1249, 1258, 1274, 1278, 1281], "much": [4, 14, 22, 25, 49, 54, 69, 118, 122, 124, 129, 134, 154, 174, 191, 192, 193, 194, 199, 202, 215, 221, 223, 227, 228, 229, 231, 253, 264, 266, 267, 269, 271, 277, 291, 292, 295, 296, 298, 310, 313, 319, 320, 341, 342, 345, 355, 356, 373, 374, 382, 383, 384, 385, 386, 387, 407, 438, 449, 460, 496, 500, 510, 520, 524, 529, 536, 537, 570, 649, 659, 664, 683, 705, 749, 751, 764, 770, 786, 787, 789, 800, 801, 802, 803, 809, 812, 813, 833, 835, 846, 848, 849, 870, 871, 921, 928, 931, 935, 936, 940, 955, 961, 970, 972, 978, 980, 984, 1016, 1041, 1047, 1066, 1068, 1077, 1080, 1081, 1083, 1085, 1096, 1103, 1106, 1107, 1120, 1121, 1126, 1127, 1130, 1139, 1156, 1208, 1214, 1215, 1241, 1243, 1258, 1277], "like": [4, 8, 14, 15, 17, 26, 30, 32, 42, 48, 49, 50, 54, 66, 67, 103, 109, 113, 114, 118, 119, 121, 124, 126, 129, 131, 134, 137, 138, 139, 154, 172, 191, 192, 193, 194, 196, 197, 199, 202, 203, 211, 214, 215, 219, 220, 221, 223, 227, 229, 232, 242, 243, 250, 252, 253, 260, 266, 267, 269, 270, 276, 279, 292, 294, 296, 298, 304, 307, 309, 310, 313, 316, 318, 342, 345, 369, 373, 382, 384, 385, 387, 390, 395, 407, 415, 422, 435, 438, 442, 464, 466, 471, 476, 488, 492, 500, 503, 510, 514, 516, 520, 522, 524, 528, 529, 531, 537, 548, 549, 550, 570, 594, 604, 605, 606, 607, 608, 620, 626, 634, 637, 643, 652, 655, 658, 661, 662, 663, 665, 686, 703, 713, 721, 724, 731, 732, 742, 743, 750, 751, 753, 755, 770, 787, 789, 795, 797, 800, 801, 809, 812, 813, 819, 833, 834, 845, 846, 848, 858, 861, 862, 867, 868, 870, 873, 891, 893, 896, 898, 903, 921, 928, 929, 931, 934, 936, 937, 940, 942, 945, 953, 955, 957, 961, 968, 974, 976, 978, 980, 984, 989, 997, 1000, 1004, 1006, 1015, 1016, 1020, 1024, 1026, 1029, 1033, 1039, 1041, 1050, 1051, 1066, 1070, 1077, 1081, 1083, 1085, 1086, 1100, 1103, 1105, 1107, 1110, 1112, 1120, 1125, 1130, 1132, 1134, 1136, 1138, 1140, 1144, 1148, 1150, 1153, 1154, 1157, 1160, 1163, 1166, 1173, 1177, 1187, 1188, 1191, 1197, 1198, 1199, 1200, 1201, 1203, 1210, 1213, 1215, 1216, 1224, 1226, 1227, 1232, 1241, 1242, 1243, 1248, 1250, 1258, 1262, 1265, 1266, 1268, 1279], "topic": [4, 6, 14, 15, 16, 48, 50, 59, 67, 86, 95, 101, 102, 113, 194, 198, 199, 205, 206, 207, 211, 215, 228, 231, 232, 233, 235, 243, 248, 258, 261, 267, 277, 279, 280, 295, 296, 300, 318, 320, 324, 346, 384, 403, 404, 409, 410, 415, 417, 418, 421, 539, 626, 666, 668, 797, 862, 877, 881, 883, 885, 928, 935, 936, 984, 986, 996, 1007, 1008, 1010, 1026, 1096, 1097, 1101, 1114, 1132, 1136, 1164, 1181, 1203, 1205, 1208, 1211, 1215, 1241, 1255, 1259, 1260, 1262, 1268, 1273, 1277, 1278, 1279, 1281, 1282], "depend": [4, 15, 16, 49, 67, 103, 108, 109, 113, 114, 124, 130, 131, 162, 192, 193, 199, 203, 221, 223, 235, 245, 248, 253, 254, 260, 261, 266, 267, 270, 276, 279, 280, 282, 285, 288, 303, 320, 328, 334, 350, 374, 375, 378, 381, 382, 419, 426, 442, 444, 452, 455, 471, 488, 500, 506, 510, 513, 515, 517, 520, 523, 524, 537, 542, 543, 548, 554, 561, 595, 607, 633, 635, 643, 765, 783, 797, 801, 822, 834, 849, 875, 928, 936, 943, 996, 1022, 1083, 1084, 1086, 1096, 1100, 1102, 1132, 1134, 1171, 1181, 1236, 1266, 1274, 1275, 1281], "other": [4, 14, 16, 20, 26, 27, 38, 40, 48, 49, 50, 52, 67, 69, 71, 99, 100, 111, 130, 146, 157, 159, 170, 185, 192, 193, 194, 195, 196, 199, 203, 215, 219, 223, 227, 228, 230, 231, 232, 243, 251, 260, 266, 267, 276, 279, 283, 304, 325, 332, 333, 342, 345, 349, 369, 381, 382, 390, 407, 411, 415, 434, 440, 449, 458, 476, 479, 490, 506, 510, 513, 515, 516, 520, 525, 529, 534, 537, 538, 540, 541, 547, 553, 634, 649, 651, 652, 658, 660, 663, 664, 665, 675, 703, 724, 743, 744, 747, 748, 751, 757, 783, 797, 801, 803, 809, 812, 813, 831, 844, 846, 848, 849, 856, 863, 864, 867, 868, 884, 889, 891, 893, 913, 930, 934, 936, 937, 955, 974, 976, 1008, 1012, 1015, 1024, 1025, 1031, 1032, 1042, 1053, 1058, 1061, 1066, 1068, 1077, 1081, 1083, 1085, 1096, 1103, 1105, 1107, 1116, 1119, 1120, 1121, 1124, 1127, 1130, 1134, 1136, 1137, 1138, 1139, 1145, 1146, 1150, 1152, 1154, 1156, 1157, 1170, 1187, 1213, 1217, 1220, 1224, 1241, 1253, 1258, 1259, 1261, 1262, 1266, 1270, 1272, 1273, 1278, 1280, 1282], "see": [4, 10, 14, 16, 18, 29, 30, 32, 33, 37, 40, 42, 44, 49, 66, 67, 74, 78, 88, 95, 111, 113, 114, 116, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 134, 142, 145, 147, 159, 166, 173, 182, 183, 185, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 208, 211, 212, 213, 221, 223, 227, 237, 242, 243, 247, 250, 252, 253, 258, 260, 263, 264, 266, 267, 269, 270, 276, 279, 283, 288, 291, 300, 304, 307, 309, 313, 315, 316, 317, 318, 320, 324, 325, 333, 334, 342, 346, 349, 350, 361, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 395, 404, 407, 408, 410, 415, 418, 425, 434, 435, 436, 438, 444, 461, 474, 480, 483, 493, 499, 512, 516, 540, 543, 545, 546, 549, 550, 553, 554, 555, 563, 564, 565, 566, 567, 571, 574, 575, 591, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 614, 615, 624, 625, 626, 634, 640, 643, 648, 650, 651, 652, 653, 665, 666, 668, 683, 687, 700, 715, 728, 732, 734, 735, 737, 748, 749, 750, 753, 770, 782, 783, 784, 786, 787, 788, 789, 790, 794, 797, 800, 803, 804, 806, 810, 812, 813, 814, 815, 822, 831, 833, 834, 835, 837, 844, 845, 846, 847, 856, 857, 858, 862, 866, 869, 870, 887, 891, 892, 894, 895, 897, 900, 902, 919, 928, 934, 937, 940, 943, 945, 947, 948, 950, 952, 953, 955, 957, 959, 961, 964, 970, 972, 974, 976, 978, 980, 984, 987, 991, 992, 998, 1000, 1026, 1029, 1031, 1032, 1033, 1037, 1040, 1041, 1049, 1051, 1053, 1056, 1063, 1066, 1076, 1080, 1083, 1085, 1092, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1108, 1112, 1120, 1121, 1124, 1125, 1127, 1130, 1132, 1134, 1137, 1145, 1148, 1149, 1150, 1160, 1164, 1167, 1176, 1180, 1183, 1194, 1205, 1206, 1211, 1213, 1216, 1221, 1224, 1226, 1228, 1230, 1231, 1238, 1241, 1248, 1253, 1259, 1261, 1266, 1273, 1277, 1278, 1279, 1280], "exampl": [4, 11, 26, 27, 53, 67, 76, 111, 113, 114, 131, 154, 157, 159, 161, 173, 190, 191, 192, 193, 194, 199, 202, 203, 210, 211, 212, 215, 219, 223, 227, 229, 231, 242, 250, 252, 256, 260, 263, 266, 267, 269, 275, 276, 277, 280, 281, 282, 284, 288, 291, 300, 307, 309, 310, 313, 317, 319, 320, 324, 325, 333, 335, 338, 341, 342, 345, 349, 355, 368, 373, 376, 377, 379, 382, 392, 395, 404, 412, 415, 427, 433, 434, 435, 443, 449, 501, 524, 526, 529, 537, 538, 540, 546, 553, 557, 559, 569, 570, 572, 574, 594, 595, 607, 626, 661, 663, 665, 674, 683, 690, 721, 724, 731, 751, 759, 763, 764, 797, 801, 803, 804, 810, 824, 826, 827, 830, 835, 846, 850, 857, 858, 862, 868, 888, 891, 901, 913, 921, 928, 934, 936, 937, 943, 955, 961, 984, 1006, 1015, 1019, 1026, 1029, 1030, 1031, 1032, 1033, 1050, 1057, 1077, 1080, 1082, 1083, 1084, 1085, 1087, 1094, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1112, 1119, 1126, 1129, 1132, 1133, 1135, 1143, 1148, 1157, 1164, 1166, 1182, 1187, 1205, 1206, 1214, 1215, 1221, 1222, 1228, 1230, 1240, 1248, 1250, 1259, 1269, 1273], "here": [4, 5, 49, 58, 62, 63, 66, 67, 69, 70, 74, 95, 103, 109, 111, 118, 134, 151, 154, 183, 185, 191, 192, 194, 195, 197, 198, 199, 202, 203, 206, 211, 213, 219, 220, 221, 223, 227, 229, 232, 242, 243, 247, 250, 251, 252, 253, 258, 261, 269, 270, 274, 277, 279, 283, 296, 298, 300, 304, 307, 309, 313, 316, 318, 325, 328, 343, 358, 361, 372, 373, 378, 386, 387, 390, 395, 401, 404, 407, 408, 410, 422, 425, 490, 492, 499, 506, 515, 516, 524, 548, 550, 570, 575, 586, 589, 592, 594, 605, 607, 609, 624, 626, 634, 648, 651, 652, 655, 666, 668, 672, 684, 713, 732, 734, 735, 748, 750, 759, 761, 763, 764, 770, 788, 800, 801, 803, 813, 822, 824, 827, 830, 835, 837, 844, 846, 848, 856, 891, 928, 930, 934, 936, 937, 952, 957, 959, 961, 974, 980, 984, 1012, 1016, 1023, 1029, 1033, 1039, 1041, 1053, 1066, 1067, 1076, 1080, 1081, 1093, 1096, 1100, 1102, 1105, 1106, 1107, 1108, 1120, 1123, 1127, 1132, 1135, 1136, 1143, 1149, 1159, 1160, 1167, 1188, 1191, 1207, 1213, 1214, 1215, 1216, 1221, 1241, 1243, 1250, 1259, 1266, 1277, 1278, 1279, 1281, 1282], "also": [4, 10, 14, 18, 44, 49, 111, 114, 116, 119, 121, 122, 124, 126, 129, 130, 166, 193, 194, 196, 197, 199, 200, 202, 203, 204, 210, 212, 213, 214, 215, 218, 220, 221, 223, 224, 227, 233, 235, 253, 260, 266, 276, 277, 279, 283, 289, 295, 296, 298, 307, 309, 316, 317, 318, 324, 325, 334, 342, 346, 350, 378, 390, 422, 512, 540, 543, 545, 550, 559, 569, 572, 574, 575, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 614, 615, 625, 650, 651, 652, 653, 665, 683, 700, 703, 748, 749, 750, 751, 770, 782, 787, 788, 789, 790, 797, 800, 803, 806, 810, 813, 814, 815, 822, 828, 833, 834, 835, 837, 844, 846, 856, 869, 875, 876, 891, 895, 897, 900, 902, 922, 928, 974, 984, 989, 1006, 1015, 1016, 1029, 1033, 1037, 1053, 1063, 1066, 1085, 1094, 1099, 1101, 1103, 1105, 1106, 1107, 1112, 1120, 1124, 1130, 1132, 1136, 1139, 1149, 1150, 1153, 1164, 1176, 1180, 1183, 1194, 1213, 1214, 1226, 1228, 1230, 1231, 1238, 1241, 1261, 1262, 1264, 1265, 1271, 1273, 1281], "discuss": [4, 29, 37, 52, 113, 223, 227, 228, 230, 232, 267, 277, 313, 317, 318, 341, 356, 374, 375, 377, 381, 382, 385, 386, 387, 404, 408, 411, 412, 415, 417, 418, 422, 513, 535, 536, 537, 545, 631, 634, 637, 640, 643, 646, 801, 825, 891, 964, 997, 1076, 1080, 1110, 1248, 1250, 1253, 1259], "over": [4, 20, 21, 22, 25, 29, 47, 52, 78, 86, 118, 119, 131, 164, 172, 191, 192, 194, 196, 197, 202, 211, 215, 223, 227, 229, 230, 231, 242, 247, 250, 252, 253, 260, 265, 266, 267, 269, 272, 275, 303, 307, 310, 313, 319, 320, 336, 341, 345, 356, 375, 385, 386, 389, 404, 407, 422, 449, 460, 461, 476, 490, 510, 514, 548, 558, 572, 649, 655, 682, 700, 713, 734, 761, 793, 800, 817, 833, 834, 928, 932, 936, 984, 1006, 1012, 1033, 1049, 1056, 1064, 1066, 1068, 1083, 1096, 1098, 1103, 1106, 1143, 1156, 1160], "lwn": [4, 26, 174, 208, 748, 964, 976, 994], "attribut": [4, 109, 192, 194, 208, 227, 241, 247, 251, 260, 263, 266, 271, 273, 278, 279, 283, 286, 289, 293, 294, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 397, 399, 408, 415, 488, 504, 506, 543, 553, 797, 798, 822, 862, 869, 890, 894, 1029, 1050, 1051, 1069, 1070, 1081, 1106, 1107, 1120, 1122, 1133, 1159, 1213, 1271], "sharealik": 4, "cc": [4, 10, 19, 166, 170, 209, 217, 218, 219, 296, 540, 554, 604, 606, 607, 627, 630, 633, 634, 636, 637, 639, 640, 642, 643, 645, 667, 751, 844, 845, 961, 1075, 1076, 1079, 1080, 1085, 1247, 1248, 1250, 1252, 1253], "BY": [4, 10, 22, 770], "sa": [4, 10, 19, 1067], "don": [4, 11, 45, 47, 67, 73, 113, 118, 126, 159, 161, 172, 185, 191, 192, 193, 194, 197, 198, 199, 221, 223, 227, 231, 242, 243, 253, 260, 264, 266, 267, 269, 276, 279, 331, 343, 372, 412, 435, 476, 488, 491, 492, 494, 500, 506, 510, 512, 536, 537, 549, 606, 634, 640, 649, 650, 664, 665, 672, 682, 724, 743, 748, 751, 764, 770, 803, 804, 810, 813, 815, 818, 821, 825, 839, 841, 866, 891, 893, 898, 904, 915, 928, 931, 934, 936, 952, 957, 976, 984, 989, 1008, 1016, 1020, 1021, 1022, 1023, 1042, 1046, 1047, 1051, 1052, 1053, 1058, 1066, 1080, 1081, 1086, 1108, 1116, 1118, 1132, 1135, 1139, 1164, 1217, 1222, 1230, 1236, 1247, 1253], "t": [4, 11, 30, 37, 45, 47, 49, 54, 67, 73, 113, 118, 126, 130, 159, 161, 172, 185, 191, 193, 194, 197, 198, 199, 202, 203, 208, 210, 221, 223, 224, 227, 230, 231, 234, 239, 241, 242, 243, 247, 253, 256, 260, 263, 264, 266, 267, 269, 271, 273, 276, 277, 279, 283, 286, 289, 292, 298, 301, 304, 309, 310, 311, 313, 315, 321, 325, 331, 343, 346, 347, 353, 359, 365, 369, 372, 390, 396, 398, 399, 401, 412, 423, 425, 426, 428, 434, 435, 445, 460, 466, 468, 471, 476, 486, 488, 490, 491, 492, 494, 500, 506, 510, 512, 528, 532, 536, 537, 541, 549, 602, 604, 606, 626, 634, 640, 649, 650, 652, 659, 664, 665, 672, 674, 675, 682, 686, 724, 743, 744, 748, 751, 753, 759, 764, 770, 773, 800, 803, 804, 807, 810, 812, 813, 815, 817, 818, 821, 822, 824, 825, 831, 833, 839, 841, 844, 845, 846, 848, 849, 850, 856, 857, 858, 866, 868, 891, 892, 893, 897, 898, 904, 910, 913, 915, 928, 931, 934, 936, 937, 943, 952, 957, 964, 976, 978, 984, 989, 1001, 1004, 1008, 1012, 1016, 1020, 1021, 1022, 1023, 1030, 1041, 1042, 1046, 1047, 1051, 1052, 1053, 1058, 1069, 1080, 1081, 1083, 1084, 1086, 1096, 1099, 1102, 1108, 1116, 1118, 1120, 1132, 1135, 1138, 1139, 1140, 1146, 1152, 1156, 1158, 1159, 1160, 1164, 1166, 1212, 1217, 1221, 1222, 1230, 1236, 1247, 1248, 1253, 1273, 1277], "want": [4, 14, 16, 17, 32, 37, 47, 49, 67, 73, 114, 119, 124, 126, 130, 154, 159, 170, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 206, 211, 214, 219, 223, 227, 230, 231, 242, 243, 250, 253, 260, 267, 271, 273, 307, 309, 310, 313, 335, 373, 385, 390, 401, 415, 436, 448, 464, 492, 504, 506, 510, 517, 524, 525, 529, 541, 550, 553, 574, 593, 602, 607, 626, 637, 650, 655, 658, 660, 665, 690, 724, 735, 739, 744, 748, 750, 751, 764, 765, 770, 784, 797, 801, 810, 815, 821, 831, 834, 839, 846, 850, 866, 868, 870, 873, 888, 891, 892, 910, 928, 931, 934, 936, 937, 940, 959, 984, 989, 1016, 1020, 1021, 1022, 1023, 1028, 1046, 1047, 1051, 1066, 1067, 1069, 1070, 1071, 1080, 1083, 1085, 1096, 1098, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1111, 1115, 1122, 1127, 1138, 1147, 1150, 1160, 1165, 1167, 1203, 1217, 1221, 1224, 1226, 1230, 1241, 1243, 1244, 1248, 1258, 1265, 1266, 1279], "anybodi": [4, 192, 197, 223, 242, 243, 493, 1031, 1051, 1253, 1267], "monei": [4, 193, 196, 199, 266, 870, 1166], "my": [4, 11, 15, 19, 26, 48, 49, 50, 52, 54, 86, 111, 134, 139, 154, 155, 166, 170, 172, 185, 191, 192, 193, 195, 196, 198, 199, 202, 203, 219, 223, 227, 230, 243, 250, 277, 291, 293, 307, 317, 359, 375, 401, 404, 409, 422, 500, 511, 525, 526, 532, 540, 553, 607, 643, 660, 671, 783, 797, 801, 846, 858, 866, 881, 883, 888, 894, 915, 928, 934, 937, 968, 980, 984, 986, 1007, 1008, 1015, 1016, 1021, 1022, 1023, 1032, 1041, 1066, 1077, 1086, 1108, 1111, 1120, 1139, 1163, 1203, 1224, 1228, 1230, 1241, 1258], "cours": [4, 26, 27, 55, 93, 131, 149, 164, 168, 170, 191, 192, 194, 206, 209, 219, 220, 230, 238, 242, 248, 253, 258, 269, 280, 297, 299, 307, 316, 318, 319, 333, 334, 342, 345, 346, 349, 350, 373, 378, 386, 404, 411, 424, 473, 474, 490, 523, 542, 548, 555, 560, 605, 797, 801, 857, 858, 921, 929, 959, 984, 996, 1026, 1033, 1049, 1085, 1108, 1164, 1196, 1205, 1207, 1208, 1221, 1258, 1263, 1264, 1273, 1276, 1280], "without": [4, 108, 143, 162, 191, 192, 193, 194, 202, 203, 227, 271, 335, 356, 374, 375, 381, 383, 436, 460, 467, 493, 496, 500, 505, 510, 515, 526, 528, 531, 553, 558, 570, 637, 643, 649, 655, 765, 770, 798, 800, 801, 809, 816, 817, 825, 833, 834, 846, 849, 850, 870, 871, 913, 937, 955, 968, 984, 1007, 1016, 1051, 1066, 1071, 1076, 1077, 1081, 1105, 1106, 1110, 1112, 1119, 1120, 1121, 1123, 1125, 1127, 1134, 1139, 1156, 1241, 1243, 1258, 1261, 1266, 1277], "modif": [4, 42, 95, 131, 269, 436, 438, 444, 449, 480, 510, 532, 536, 553, 558, 605, 662, 757, 797, 876, 892, 913, 957, 984, 1119, 1139, 1156, 1217, 1253], "back": [4, 19, 49, 52, 111, 174, 181, 193, 194, 197, 203, 227, 229, 231, 256, 264, 269, 280, 282, 300, 315, 335, 338, 373, 384, 385, 387, 486, 501, 572, 597, 626, 646, 665, 679, 684, 724, 747, 751, 764, 767, 810, 824, 843, 861, 894, 928, 934, 952, 957, 966, 984, 986, 1016, 1046, 1047, 1066, 1067, 1077, 1083, 1103, 1110, 1123, 1127, 1139, 1202, 1204, 1232], "m": [4, 10, 19, 25, 47, 159, 166, 168, 177, 183, 193, 194, 195, 197, 199, 202, 219, 224, 229, 234, 243, 247, 256, 257, 258, 260, 264, 279, 283, 289, 291, 296, 308, 343, 353, 369, 400, 404, 405, 406, 411, 424, 512, 554, 601, 604, 605, 606, 607, 643, 667, 739, 740, 743, 744, 770, 835, 845, 868, 870, 891, 930, 934, 952, 953, 959, 961, 994, 1016, 1071, 1125, 1163, 1164, 1170, 1196, 1197, 1213, 1222, 1236, 1241, 1243, 1248], "lawyer": 4, "understand": [4, 113, 161, 191, 192, 194, 198, 199, 202, 203, 215, 223, 227, 252, 279, 310, 313, 316, 318, 319, 320, 335, 338, 341, 345, 375, 381, 382, 387, 406, 415, 442, 490, 499, 506, 529, 558, 594, 728, 759, 801, 810, 824, 827, 834, 870, 876, 928, 984, 1045, 1066, 1127, 1166, 1208, 1213, 1214, 1231, 1258, 1265, 1267, 1268, 1269, 1271, 1272, 1273, 1277], "permit": [4, 194, 199, 243, 307, 382, 401, 631, 652, 659, 801, 848, 934, 1014, 1068, 1133, 1233], "exactli": [4, 67, 192, 194, 215, 221, 250, 320, 395, 428, 468, 594, 605, 682, 761, 813, 833, 937, 984, 1030, 1031, 1042, 1066, 1081, 1100, 1216, 1265, 1281], "gnu": [4, 203, 205, 207, 243, 252, 401, 407, 507, 540, 541, 658, 824, 845, 891, 964, 985, 1084, 1085, 1086, 1096, 1098, 1100, 1256, 1260, 1269, 1273, 1274], "free": [4, 19, 198, 203, 218, 243, 384, 401, 483, 497, 554, 632, 652, 658, 660, 732, 733, 735, 736, 740, 747, 781, 813, 824, 827, 843, 844, 845, 848, 948, 955, 986, 1021, 1022, 1023, 1035, 1068, 1081, 1083, 1214, 1224, 1233, 1255], "document": [4, 11, 27, 29, 53, 67, 75, 113, 118, 151, 192, 194, 196, 203, 204, 209, 212, 219, 231, 243, 249, 250, 258, 260, 265, 266, 267, 269, 276, 279, 283, 296, 298, 300, 309, 316, 318, 321, 342, 344, 362, 369, 384, 390, 395, 404, 411, 412, 486, 487, 490, 497, 515, 516, 517, 522, 537, 538, 540, 541, 543, 545, 546, 558, 605, 624, 664, 668, 682, 683, 732, 734, 745, 749, 750, 753, 759, 793, 797, 806, 810, 819, 820, 822, 825, 827, 828, 830, 835, 837, 845, 846, 847, 856, 862, 870, 877, 881, 883, 885, 915, 917, 918, 920, 921, 922, 924, 931, 936, 937, 955, 957, 980, 984, 985, 992, 996, 1039, 1055, 1063, 1066, 1098, 1101, 1105, 1107, 1108, 1112, 1116, 1118, 1120, 1126, 1143, 1153, 1154, 1205, 1216, 1219, 1226, 1227, 1230, 1232, 1239, 1242, 1249, 1250], "A": [4, 7, 10, 14, 15, 16, 20, 25, 26, 27, 28, 47, 59, 67, 71, 73, 74, 86, 87, 97, 98, 99, 100, 103, 107, 113, 114, 118, 119, 120, 121, 122, 123, 130, 135, 138, 141, 142, 143, 146, 149, 156, 162, 168, 171, 173, 184, 191, 194, 195, 196, 197, 199, 204, 205, 207, 208, 211, 212, 213, 227, 229, 230, 231, 233, 239, 243, 250, 252, 254, 260, 263, 266, 270, 276, 277, 279, 283, 291, 297, 299, 303, 306, 307, 318, 320, 325, 327, 328, 331, 333, 334, 338, 341, 342, 345, 349, 350, 359, 371, 372, 373, 377, 378, 386, 390, 396, 401, 405, 406, 421, 425, 428, 429, 441, 442, 443, 461, 471, 474, 477, 486, 487, 488, 492, 494, 495, 496, 500, 510, 522, 524, 529, 532, 538, 545, 547, 548, 552, 553, 556, 558, 568, 570, 582, 595, 605, 607, 613, 653, 654, 659, 661, 662, 712, 722, 723, 726, 739, 741, 743, 746, 747, 754, 755, 757, 759, 770, 783, 790, 795, 797, 798, 799, 804, 816, 821, 825, 827, 831, 833, 834, 835, 842, 846, 850, 851, 859, 863, 864, 865, 870, 873, 874, 878, 879, 884, 888, 894, 925, 935, 937, 945, 959, 963, 978, 1001, 1020, 1024, 1025, 1028, 1034, 1045, 1050, 1051, 1052, 1053, 1066, 1068, 1069, 1080, 1081, 1084, 1086, 1092, 1095, 1096, 1099, 1100, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1138, 1139, 1146, 1148, 1153, 1159, 1164, 1165, 1166, 1170, 1194, 1197, 1200, 1210, 1214, 1216, 1217, 1220, 1224, 1227, 1229, 1234, 1236, 1242, 1243, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1281], "while": [4, 40, 41, 49, 103, 109, 146, 154, 173, 174, 196, 198, 199, 212, 223, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 241, 242, 243, 246, 247, 248, 250, 251, 254, 255, 256, 258, 260, 261, 264, 265, 266, 269, 270, 272, 274, 275, 277, 278, 280, 281, 282, 283, 285, 287, 288, 290, 300, 303, 304, 310, 312, 313, 317, 319, 323, 324, 325, 329, 330, 331, 341, 342, 343, 345, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 370, 373, 382, 384, 386, 390, 396, 407, 409, 426, 428, 432, 434, 436, 443, 448, 450, 464, 465, 471, 476, 486, 491, 493, 500, 529, 530, 534, 543, 550, 554, 569, 576, 594, 643, 678, 682, 683, 686, 688, 690, 693, 709, 725, 731, 765, 770, 771, 772, 778, 790, 793, 800, 815, 821, 822, 824, 825, 839, 847, 863, 864, 868, 875, 928, 934, 936, 964, 972, 974, 984, 986, 992, 1016, 1021, 1022, 1023, 1024, 1031, 1040, 1043, 1046, 1055, 1060, 1061, 1064, 1066, 1067, 1073, 1076, 1080, 1096, 1101, 1110, 1111, 1112, 1116, 1119, 1131, 1132, 1136, 1141, 1146, 1158, 1171, 1180, 1181, 1208, 1214, 1215, 1255, 1259, 1260, 1266, 1278, 1281], "ago": [4, 194, 198, 253, 855, 1066], "wa": [4, 24, 40, 67, 111, 119, 126, 131, 162, 180, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 208, 210, 211, 212, 214, 218, 219, 224, 226, 227, 230, 234, 240, 241, 247, 250, 253, 256, 257, 267, 269, 271, 273, 280, 283, 292, 304, 311, 317, 320, 325, 343, 355, 359, 373, 374, 382, 384, 386, 404, 409, 422, 424, 471, 496, 522, 528, 529, 534, 640, 648, 649, 658, 659, 703, 726, 735, 748, 755, 797, 810, 813, 816, 866, 888, 919, 921, 928, 937, 959, 966, 974, 980, 1032, 1061, 1081, 1107, 1139, 1213, 1227, 1230, 1236, 1241, 1243, 1255, 1256, 1257, 1258, 1276], "debian": [4, 67, 154, 168, 185, 187, 199, 203, 208, 220, 231, 243, 328, 401, 422, 620, 930, 984, 1085, 1098, 1243, 1248], "resolut": [4, 281, 283, 493, 757, 815, 937, 961, 994], "us": [4, 5, 8, 11, 26, 27, 32, 35, 41, 47, 48, 49, 50, 52, 54, 58, 60, 61, 63, 66, 67, 70, 71, 73, 74, 75, 77, 78, 86, 95, 96, 113, 114, 115, 117, 118, 119, 120, 121, 124, 126, 129, 130, 131, 134, 137, 138, 139, 145, 149, 154, 161, 164, 166, 171, 172, 173, 189, 191, 192, 194, 195, 198, 202, 204, 208, 211, 215, 217, 218, 220, 223, 227, 229, 230, 242, 243, 248, 251, 258, 260, 261, 263, 264, 267, 268, 270, 274, 276, 277, 279, 283, 286, 288, 289, 291, 296, 298, 300, 304, 307, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 330, 333, 338, 341, 342, 345, 346, 347, 349, 353, 355, 356, 359, 365, 374, 376, 377, 379, 380, 381, 383, 384, 386, 387, 389, 390, 395, 401, 404, 407, 409, 410, 413, 422, 432, 435, 436, 439, 440, 441, 444, 446, 455, 458, 460, 461, 466, 467, 470, 471, 474, 479, 493, 494, 500, 501, 506, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 528, 529, 532, 534, 536, 537, 538, 540, 541, 545, 548, 549, 551, 552, 554, 558, 559, 560, 562, 569, 572, 573, 574, 592, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 620, 624, 625, 626, 627, 630, 633, 636, 639, 642, 645, 650, 652, 653, 657, 658, 660, 662, 664, 665, 666, 668, 669, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 691, 694, 695, 696, 700, 703, 705, 706, 707, 708, 709, 713, 721, 722, 724, 726, 728, 731, 732, 733, 734, 735, 736, 739, 740, 742, 744, 749, 751, 753, 755, 756, 757, 759, 761, 762, 763, 765, 766, 770, 772, 782, 783, 793, 797, 800, 803, 804, 806, 811, 813, 816, 819, 821, 822, 824, 826, 827, 830, 831, 835, 840, 841, 845, 846, 847, 848, 856, 857, 858, 861, 866, 867, 870, 871, 873, 875, 877, 883, 888, 891, 893, 896, 897, 898, 900, 910, 917, 919, 922, 928, 931, 932, 935, 942, 943, 945, 947, 950, 952, 953, 955, 957, 959, 961, 964, 968, 970, 972, 976, 978, 980, 984, 985, 987, 989, 997, 998, 1000, 1003, 1004, 1006, 1007, 1008, 1015, 1016, 1019, 1025, 1026, 1029, 1030, 1031, 1033, 1037, 1039, 1040, 1049, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1064, 1066, 1068, 1069, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1083, 1086, 1095, 1098, 1099, 1100, 1101, 1102, 1106, 1110, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1125, 1127, 1129, 1132, 1133, 1135, 1139, 1141, 1143, 1147, 1148, 1149, 1150, 1153, 1156, 1158, 1160, 1164, 1166, 1168, 1169, 1170, 1173, 1174, 1176, 1180, 1182, 1185, 1186, 1187, 1188, 1192, 1194, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1224, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1241, 1244, 1247, 1248, 1250, 1252, 1253, 1258, 1259, 1261, 1262, 1265, 1266, 1267, 1268, 1269, 1273, 1277, 1278, 1281], "gfdl": 4, "becaus": [4, 25, 47, 69, 111, 181, 190, 191, 192, 194, 203, 215, 223, 227, 229, 243, 253, 260, 266, 276, 279, 386, 428, 449, 488, 497, 500, 503, 510, 512, 513, 515, 518, 521, 528, 532, 550, 553, 570, 604, 607, 650, 651, 658, 660, 700, 720, 735, 761, 762, 765, 766, 815, 824, 835, 844, 847, 870, 910, 928, 934, 936, 937, 953, 964, 982, 984, 1014, 1025, 1026, 1029, 1032, 1041, 1055, 1061, 1066, 1080, 1081, 1105, 1108, 1134, 1165, 1221, 1236, 1243, 1248, 1258], "too": [4, 14, 40, 43, 49, 69, 126, 192, 194, 199, 206, 207, 220, 223, 239, 250, 252, 269, 279, 283, 286, 295, 296, 298, 309, 311, 319, 320, 325, 341, 343, 355, 356, 374, 384, 385, 386, 445, 490, 500, 510, 524, 534, 546, 550, 649, 662, 740, 744, 748, 770, 786, 797, 801, 802, 803, 815, 824, 833, 846, 848, 850, 862, 928, 937, 982, 984, 989, 1006, 1012, 1029, 1041, 1043, 1046, 1051, 1066, 1069, 1085, 1105, 1106, 1107, 1110, 1156, 1160, 1237, 1258, 1262], "restrict": [4, 193, 221, 231, 488, 493, 516, 550, 557, 592, 672, 762, 797, 857, 858, 982, 1015, 1221], "articl": [4, 174, 208, 934, 937, 964, 976, 994, 1066, 1096], "describ": [4, 96, 113, 115, 117, 146, 191, 192, 193, 194, 197, 199, 202, 203, 206, 217, 243, 279, 283, 291, 317, 325, 328, 372, 401, 553, 562, 608, 627, 630, 633, 636, 639, 642, 645, 751, 835, 848, 863, 864, 891, 937, 984, 994, 1010, 1072, 1075, 1079, 1084, 1093, 1099, 1100, 1129, 1213, 1247, 1250, 1252, 1262], "pretti": [4, 173, 193, 194, 215, 229, 233, 252, 269, 279, 500, 541, 682, 733, 817, 1103, 1233, 1268], "same": [4, 11, 15, 18, 26, 27, 30, 31, 118, 131, 174, 192, 193, 194, 196, 198, 199, 202, 203, 211, 212, 213, 215, 223, 224, 229, 232, 243, 251, 255, 260, 266, 269, 276, 277, 279, 282, 283, 301, 310, 313, 319, 320, 325, 341, 342, 343, 353, 369, 381, 382, 384, 391, 392, 401, 408, 432, 436, 447, 448, 449, 466, 467, 471, 476, 479, 488, 490, 494, 496, 500, 501, 504, 505, 513, 524, 528, 529, 534, 536, 541, 553, 557, 560, 561, 572, 591, 592, 600, 604, 624, 626, 633, 635, 649, 652, 658, 663, 682, 685, 691, 700, 703, 705, 706, 722, 734, 749, 750, 751, 759, 763, 779, 807, 809, 815, 819, 824, 830, 831, 835, 848, 849, 862, 869, 875, 891, 892, 894, 919, 928, 930, 934, 936, 937, 952, 953, 957, 961, 964, 966, 974, 976, 982, 984, 1000, 1006, 1015, 1016, 1022, 1028, 1051, 1052, 1053, 1066, 1067, 1071, 1077, 1081, 1083, 1100, 1106, 1107, 1110, 1115, 1116, 1119, 1121, 1125, 1127, 1143, 1145, 1148, 1153, 1155, 1156, 1157, 1191, 1199, 1201, 1214, 1216, 1217, 1220, 1221, 1224, 1226, 1228, 1230, 1231, 1241, 1243, 1248, 1272], "issu": [4, 192, 195, 202, 203, 253, 318, 319, 320, 341, 356, 359, 423, 436, 494, 1035, 1066, 1071, 1080, 1098, 1116], "how": [4, 10, 11, 24, 29, 32, 37, 52, 54, 60, 61, 64, 66, 67, 70, 71, 73, 74, 75, 76, 77, 80, 93, 111, 113, 118, 125, 126, 134, 146, 154, 172, 174, 183, 185, 192, 195, 197, 198, 199, 203, 204, 207, 211, 213, 215, 219, 220, 226, 227, 228, 229, 230, 231, 232, 243, 248, 250, 251, 252, 258, 260, 261, 263, 264, 266, 267, 269, 272, 274, 277, 288, 291, 295, 296, 300, 307, 310, 313, 315, 316, 317, 318, 319, 320, 324, 330, 333, 335, 341, 342, 345, 346, 349, 373, 375, 377, 381, 382, 384, 386, 387, 390, 406, 407, 411, 422, 436, 442, 467, 474, 476, 477, 488, 490, 492, 494, 499, 503, 510, 512, 515, 517, 523, 525, 526, 529, 554, 561, 591, 594, 602, 605, 626, 643, 650, 658, 659, 661, 672, 682, 725, 735, 742, 744, 748, 750, 751, 761, 764, 766, 780, 793, 794, 800, 801, 807, 824, 825, 831, 845, 857, 858, 863, 864, 871, 891, 910, 919, 925, 928, 934, 936, 937, 945, 947, 948, 961, 974, 984, 989, 1000, 1013, 1021, 1022, 1023, 1026, 1029, 1032, 1033, 1039, 1042, 1047, 1061, 1064, 1068, 1069, 1071, 1076, 1080, 1081, 1094, 1096, 1098, 1100, 1113, 1114, 1132, 1135, 1149, 1152, 1161, 1167, 1205, 1206, 1208, 1213, 1214, 1227, 1228, 1230, 1233, 1241, 1244, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "do": [4, 14, 19, 27, 30, 32, 37, 45, 48, 49, 50, 54, 67, 72, 74, 78, 80, 86, 113, 114, 121, 126, 130, 131, 146, 154, 161, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 210, 211, 212, 215, 219, 220, 223, 227, 228, 231, 241, 242, 243, 251, 253, 260, 263, 267, 269, 271, 273, 274, 277, 279, 282, 283, 289, 291, 293, 296, 298, 307, 310, 313, 342, 343, 373, 377, 380, 390, 392, 399, 401, 404, 406, 439, 458, 460, 461, 463, 464, 465, 470, 471, 479, 488, 496, 510, 512, 517, 523, 526, 550, 554, 558, 561, 569, 570, 591, 593, 605, 626, 634, 640, 643, 649, 651, 662, 666, 668, 669, 672, 710, 724, 733, 734, 735, 743, 744, 750, 751, 759, 795, 809, 810, 815, 818, 824, 828, 831, 835, 837, 839, 844, 845, 846, 848, 855, 859, 863, 864, 868, 871, 875, 876, 885, 887, 892, 896, 898, 928, 931, 934, 936, 937, 957, 963, 972, 976, 980, 982, 984, 1007, 1008, 1014, 1016, 1020, 1021, 1022, 1023, 1024, 1025, 1031, 1051, 1052, 1054, 1058, 1064, 1066, 1067, 1068, 1071, 1073, 1076, 1081, 1100, 1101, 1103, 1105, 1107, 1108, 1112, 1121, 1132, 1133, 1136, 1139, 1143, 1149, 1150, 1164, 1166, 1185, 1208, 1214, 1215, 1222, 1230, 1233, 1241, 1248, 1250, 1261, 1266, 1277, 1278, 1280], "choos": [4, 14, 166, 191, 192, 203, 215, 223, 643, 928, 934, 937, 984, 1042, 1047, 1099, 1132, 1139, 1152, 1214, 1221, 1243], "altogeth": [4, 202, 250, 319, 320, 341, 382, 813, 992, 1110], "have": [4, 14, 15, 17, 24, 30, 37, 59, 69, 71, 73, 91, 99, 100, 113, 114, 118, 122, 126, 129, 131, 136, 139, 146, 154, 159, 161, 170, 172, 173, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 211, 212, 213, 215, 219, 220, 221, 223, 227, 230, 231, 242, 243, 248, 250, 251, 252, 253, 260, 263, 264, 266, 267, 274, 279, 283, 286, 296, 298, 300, 307, 309, 310, 313, 316, 317, 319, 320, 324, 325, 345, 346, 373, 384, 390, 395, 404, 407, 409, 435, 436, 440, 449, 468, 470, 490, 492, 495, 496, 500, 504, 506, 511, 513, 514, 515, 521, 522, 525, 529, 536, 537, 540, 548, 549, 550, 555, 557, 558, 570, 591, 594, 604, 607, 616, 643, 649, 653, 657, 659, 665, 666, 668, 669, 700, 707, 722, 724, 728, 734, 735, 736, 748, 749, 750, 751, 755, 764, 765, 770, 794, 800, 801, 803, 809, 814, 824, 826, 830, 834, 837, 841, 845, 846, 855, 863, 864, 868, 870, 873, 874, 876, 883, 898, 919, 928, 934, 936, 937, 948, 952, 953, 955, 957, 961, 964, 976, 984, 987, 992, 1000, 1006, 1008, 1012, 1014, 1016, 1020, 1021, 1023, 1028, 1033, 1035, 1042, 1046, 1050, 1058, 1066, 1076, 1080, 1081, 1084, 1085, 1094, 1098, 1099, 1102, 1103, 1105, 1108, 1116, 1120, 1121, 1125, 1135, 1138, 1139, 1143, 1150, 1157, 1168, 1172, 1183, 1188, 1204, 1208, 1213, 1215, 1216, 1217, 1221, 1224, 1226, 1230, 1233, 1236, 1241, 1243, 1248, 1250, 1259, 1262, 1268, 1273, 1277, 1278, 1282], "idea": [4, 5, 125, 191, 192, 251, 264, 273, 283, 316, 318, 319, 320, 335, 338, 345, 381, 382, 494, 731, 780, 814, 835, 844, 928, 984, 1031, 1050, 1071, 1096, 1107, 1139, 1266, 1278], "choosealicens": 4, "com": [4, 7, 10, 24, 29, 31, 37, 53, 74, 95, 111, 113, 125, 134, 135, 139, 142, 149, 151, 155, 158, 159, 161, 163, 164, 170, 173, 174, 177, 197, 198, 199, 203, 218, 219, 220, 221, 227, 228, 231, 232, 240, 245, 247, 253, 267, 269, 279, 291, 296, 298, 304, 307, 310, 311, 316, 317, 318, 320, 324, 330, 334, 335, 338, 342, 346, 350, 352, 356, 358, 364, 368, 373, 375, 376, 377, 378, 379, 380, 382, 384, 403, 404, 409, 415, 423, 513, 518, 519, 520, 521, 534, 536, 591, 605, 626, 667, 687, 688, 689, 690, 691, 693, 694, 695, 696, 699, 709, 720, 762, 821, 831, 891, 930, 934, 984, 985, 1006, 1014, 1015, 1066, 1086, 1098, 1164, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "appear": [4, 111, 192, 193, 194, 195, 196, 197, 198, 199, 202, 211, 215, 219, 221, 223, 224, 243, 252, 279, 319, 320, 341, 387, 425, 468, 471, 522, 528, 541, 553, 624, 664, 783, 846, 853, 934, 936, 937, 980, 984, 992, 1016, 1066, 1084, 1107, 1180, 1181, 1191, 1200, 1225, 1230], "help": [4, 16, 115, 191, 192, 194, 195, 203, 224, 243, 247, 252, 260, 266, 271, 273, 276, 279, 283, 286, 289, 291, 304, 311, 316, 320, 325, 343, 347, 353, 359, 365, 369, 372, 395, 399, 404, 422, 471, 492, 494, 496, 497, 506, 520, 523, 529, 532, 541, 652, 655, 660, 748, 800, 801, 815, 824, 833, 844, 846, 870, 930, 955, 1066, 1099, 1134, 1160, 1164, 1233, 1241, 1248, 1265, 1267, 1268, 1269, 1271, 1272, 1273, 1278, 1281], "happen": [4, 14, 99, 100, 111, 114, 130, 146, 154, 191, 192, 194, 223, 227, 231, 250, 269, 333, 349, 409, 422, 476, 488, 492, 496, 510, 529, 541, 655, 671, 737, 770, 803, 806, 817, 824, 862, 863, 864, 868, 937, 947, 980, 984, 1001, 1029, 1031, 1050, 1055, 1080, 1119, 1120, 1159, 1173, 1177, 1191, 1213, 1241, 1250, 1273, 1279], "git": [4, 10, 47, 53, 67, 112, 113, 114, 130, 154, 175, 184, 189, 196, 198, 218, 219, 220, 223, 240, 242, 243, 245, 267, 269, 280, 291, 296, 298, 316, 317, 318, 410, 411, 417, 418, 536, 540, 594, 605, 667, 891, 930, 934, 959, 984, 985, 1098, 1099, 1164, 1250], "clone": [4, 47, 53, 66, 98, 113, 139, 159, 170, 189, 194, 195, 198, 218, 220, 223, 240, 252, 253, 269, 296, 298, 328, 335, 338, 404, 409, 591, 594, 667, 934, 957, 984, 985, 1098, 1099], "jfasch": [4, 27, 30, 47, 53, 95, 111, 113, 131, 134, 135, 139, 142, 149, 151, 155, 157, 158, 159, 161, 163, 164, 170, 173, 174, 195, 196, 197, 202, 203, 210, 219, 220, 221, 224, 227, 240, 250, 260, 263, 266, 267, 269, 271, 276, 279, 286, 289, 291, 296, 298, 304, 307, 309, 310, 311, 316, 317, 318, 320, 321, 324, 325, 330, 334, 335, 338, 342, 346, 347, 350, 352, 353, 356, 358, 359, 364, 365, 368, 373, 375, 376, 377, 378, 379, 380, 382, 384, 403, 404, 409, 412, 513, 515, 516, 518, 519, 520, 521, 522, 526, 532, 534, 536, 538, 540, 541, 543, 544, 546, 554, 591, 605, 606, 607, 608, 626, 667, 724, 797, 801, 844, 845, 846, 856, 857, 858, 861, 862, 866, 868, 873, 876, 887, 892, 893, 894, 910, 913, 915, 916, 917, 921, 922, 925, 934, 957, 959, 984, 1006, 1014, 1015, 1016, 1021, 1027, 1029, 1030, 1031, 1041, 1061, 1067, 1083, 1084, 1085, 1086, 1096, 1098, 1099, 1100, 1101, 1102, 1105, 1107, 1108, 1111, 1135, 1154, 1160, 1164, 1187, 1228, 1230, 1241, 1243], "home": [4, 19, 27, 29, 30, 37, 47, 53, 89, 111, 139, 154, 164, 170, 193, 195, 196, 197, 199, 203, 219, 220, 221, 224, 243, 250, 260, 263, 264, 266, 271, 276, 279, 286, 289, 291, 296, 298, 304, 307, 309, 311, 321, 325, 347, 353, 359, 365, 372, 412, 506, 515, 516, 522, 526, 532, 538, 540, 541, 543, 544, 546, 554, 605, 606, 607, 608, 667, 724, 797, 801, 815, 844, 845, 846, 856, 857, 858, 866, 868, 870, 871, 873, 876, 881, 883, 885, 887, 888, 891, 892, 894, 895, 896, 897, 898, 902, 909, 913, 915, 916, 917, 922, 959, 984, 1006, 1007, 1012, 1014, 1015, 1061, 1063, 1066, 1080, 1084, 1085, 1086, 1096, 1098, 1099, 1100, 1101, 1102, 1105, 1108, 1111, 1160, 1187, 1196, 1228, 1230, 1241, 1243], "built": [4, 15, 113, 120, 191, 192, 194, 195, 198, 203, 219, 224, 226, 227, 235, 236, 248, 251, 260, 266, 271, 274, 276, 277, 279, 283, 291, 300, 304, 307, 309, 324, 333, 342, 346, 349, 353, 359, 369, 381, 382, 438, 442, 466, 487, 515, 529, 531, 537, 540, 546, 569, 591, 703, 724, 815, 818, 825, 934, 937, 953, 957, 959, 984, 1016, 1066, 1084, 1085, 1092, 1100, 1105, 1108, 1112, 1128, 1143, 1159, 1208, 1214, 1215, 1232, 1241, 1243, 1244, 1256, 1273], "wonder": [4, 174, 801, 952, 970, 997, 1110, 1268], "gener": [4, 10, 11, 26, 52, 54, 58, 59, 67, 69, 70, 98, 99, 100, 146, 192, 196, 199, 204, 210, 213, 223, 227, 228, 230, 231, 232, 233, 242, 250, 258, 259, 260, 264, 265, 267, 268, 269, 270, 272, 274, 275, 276, 280, 281, 282, 283, 288, 289, 303, 305, 309, 318, 323, 325, 329, 330, 332, 344, 346, 351, 352, 354, 356, 357, 358, 360, 363, 364, 365, 367, 368, 369, 383, 384, 385, 386, 407, 410, 426, 436, 438, 444, 449, 460, 470, 488, 494, 497, 499, 500, 503, 517, 520, 523, 540, 541, 544, 594, 602, 605, 613, 655, 659, 660, 674, 682, 683, 686, 731, 751, 764, 798, 801, 810, 813, 822, 827, 837, 844, 863, 864, 875, 891, 928, 930, 934, 964, 966, 968, 987, 1016, 1046, 1049, 1050, 1080, 1081, 1083, 1086, 1098, 1099, 1105, 1106, 1107, 1109, 1127, 1133, 1135, 1136, 1137, 1143, 1147, 1181, 1208, 1215, 1217, 1220, 1221, 1230, 1236, 1241, 1259, 1262, 1264, 1274, 1277], "homepag": [4, 53, 196, 198, 208, 209, 223, 250, 258, 260, 295, 296, 298, 497, 1096, 1241], "content": [4, 14, 26, 36, 37, 44, 49, 111, 149, 164, 223, 230, 231, 232, 243, 251, 269, 271, 279, 301, 307, 347, 396, 470, 473, 475, 524, 525, 608, 651, 700, 709, 724, 745, 801, 834, 856, 857, 858, 873, 876, 878, 879, 913, 917, 925, 936, 986, 989, 1008, 1031, 1041, 1042, 1047, 1083, 1139, 1158, 1165, 1178, 1207, 1227, 1243, 1269, 1270, 1279], "which": [4, 5, 15, 44, 58, 67, 69, 72, 78, 99, 100, 103, 104, 108, 109, 112, 114, 130, 138, 139, 146, 161, 166, 172, 174, 182, 189, 191, 192, 193, 194, 195, 197, 198, 199, 203, 211, 213, 219, 220, 221, 223, 227, 229, 231, 243, 250, 252, 260, 264, 266, 267, 279, 282, 283, 291, 292, 309, 310, 313, 315, 320, 325, 338, 342, 355, 374, 381, 382, 384, 422, 439, 444, 445, 451, 455, 476, 488, 500, 510, 511, 512, 514, 515, 529, 540, 541, 543, 548, 550, 561, 591, 592, 593, 594, 597, 599, 600, 601, 602, 603, 605, 620, 631, 637, 650, 657, 659, 662, 664, 672, 722, 724, 727, 728, 734, 735, 737, 744, 747, 750, 751, 756, 761, 768, 786, 795, 797, 801, 813, 814, 824, 835, 841, 848, 850, 856, 863, 864, 868, 870, 873, 874, 875, 876, 882, 884, 887, 891, 904, 915, 919, 928, 931, 934, 936, 937, 953, 961, 984, 986, 1004, 1016, 1025, 1026, 1029, 1031, 1033, 1034, 1050, 1055, 1064, 1066, 1067, 1068, 1076, 1081, 1084, 1086, 1089, 1090, 1098, 1102, 1105, 1107, 1119, 1120, 1124, 1132, 1136, 1139, 1148, 1180, 1199, 1201, 1204, 1206, 1221, 1222, 1224, 1226, 1228, 1243, 1248, 1258, 1261, 1277], "differ": [4, 22, 25, 48, 50, 59, 65, 70, 74, 77, 184, 191, 192, 197, 199, 203, 212, 219, 223, 227, 239, 263, 264, 307, 309, 315, 316, 318, 325, 343, 355, 381, 384, 390, 424, 436, 444, 449, 450, 466, 467, 470, 488, 494, 496, 500, 510, 512, 520, 524, 532, 549, 550, 594, 605, 607, 626, 633, 634, 643, 652, 653, 657, 662, 664, 665, 674, 678, 683, 722, 744, 755, 757, 759, 764, 782, 797, 801, 825, 830, 831, 848, 855, 861, 866, 867, 869, 888, 913, 928, 931, 934, 937, 957, 961, 976, 982, 984, 1004, 1012, 1023, 1031, 1033, 1055, 1064, 1066, 1067, 1068, 1088, 1094, 1099, 1101, 1102, 1107, 1120, 1127, 1135, 1148, 1152, 1157, 1158, 1159, 1217, 1226, 1243, 1244, 1259, 1263, 1265, 1266, 1271, 1278, 1282], "so": [4, 10, 19, 24, 26, 36, 42, 111, 114, 119, 131, 134, 146, 161, 162, 181, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 219, 220, 221, 223, 224, 235, 236, 241, 249, 251, 252, 253, 262, 263, 264, 293, 307, 315, 317, 321, 333, 345, 349, 359, 365, 369, 373, 385, 386, 387, 390, 399, 404, 407, 422, 435, 439, 440, 448, 450, 466, 476, 477, 479, 488, 492, 494, 496, 497, 501, 511, 522, 524, 529, 540, 543, 545, 546, 548, 570, 572, 591, 607, 620, 659, 665, 669, 682, 706, 713, 721, 731, 742, 744, 757, 762, 763, 828, 834, 843, 844, 846, 848, 850, 855, 870, 871, 873, 875, 881, 883, 885, 891, 895, 902, 928, 934, 936, 937, 943, 945, 948, 953, 957, 959, 961, 984, 997, 1008, 1010, 1012, 1020, 1023, 1026, 1031, 1033, 1050, 1066, 1069, 1071, 1080, 1083, 1084, 1085, 1086, 1089, 1090, 1098, 1100, 1101, 1110, 1111, 1115, 1127, 1132, 1134, 1139, 1156, 1158, 1160, 1163, 1172, 1177, 1183, 1187, 1213, 1216, 1224, 1231, 1234, 1241, 1243, 1247, 1248, 1250, 1255, 1256, 1257, 1258, 1268, 1273, 1276, 1281], "ye": [4, 19, 37, 47, 103, 106, 139, 194, 195, 198, 203, 243, 401, 529, 706, 720, 817, 857, 858, 876, 878, 879, 937, 1016, 1066, 1083, 1152, 1186, 1271], "realli": [4, 8, 30, 37, 40, 43, 131, 173, 193, 194, 195, 197, 199, 212, 223, 227, 230, 382, 384, 422, 549, 747, 751, 818, 848, 850, 936, 937, 976, 1016, 1039, 1083, 1208, 1215, 1221], "great": [4, 67, 197, 199, 253, 273, 283, 510, 649, 663, 822, 936, 984, 1041, 1258, 1266], "static": [4, 10, 86, 92, 93, 99, 100, 113, 137, 146, 192, 194, 196, 198, 199, 208, 218, 252, 253, 260, 266, 269, 276, 279, 283, 307, 316, 318, 325, 374, 377, 381, 382, 404, 410, 472, 487, 496, 498, 500, 534, 537, 540, 543, 544, 545, 576, 588, 589, 590, 591, 592, 634, 643, 652, 655, 665, 670, 696, 724, 750, 782, 783, 784, 786, 787, 788, 789, 797, 803, 805, 806, 813, 818, 825, 834, 840, 846, 943, 961, 980, 984, 986, 1050, 1053, 1055, 1057, 1067, 1073, 1080, 1084, 1085, 1086, 1089, 1090, 1094, 1219, 1253, 1255, 1256, 1257, 1269], "It": [4, 8, 26, 30, 32, 42, 48, 50, 67, 119, 126, 130, 138, 166, 174, 185, 191, 192, 193, 194, 197, 198, 199, 202, 203, 211, 213, 215, 219, 220, 224, 229, 230, 243, 252, 253, 260, 266, 269, 276, 279, 283, 291, 296, 298, 307, 310, 313, 316, 342, 355, 381, 382, 384, 387, 417, 418, 422, 433, 444, 448, 466, 471, 494, 496, 510, 515, 521, 524, 529, 532, 548, 553, 558, 561, 570, 572, 594, 597, 598, 605, 606, 652, 725, 737, 739, 747, 762, 764, 783, 808, 815, 835, 846, 857, 858, 870, 873, 888, 928, 936, 937, 948, 984, 1026, 1031, 1033, 1034, 1043, 1058, 1066, 1068, 1084, 1085, 1096, 1101, 1106, 1108, 1119, 1127, 1132, 1166, 1182, 1187, 1191, 1194, 1200, 1214, 1220, 1232, 1241, 1242, 1258, 1259, 1261, 1266, 1273, 1278], "let": [4, 29, 48, 49, 50, 114, 118, 139, 159, 192, 193, 194, 197, 198, 199, 202, 206, 213, 214, 215, 220, 221, 253, 267, 271, 273, 279, 283, 310, 313, 315, 317, 320, 335, 338, 346, 383, 492, 500, 510, 512, 513, 515, 517, 520, 532, 546, 548, 550, 552, 557, 570, 576, 593, 604, 605, 607, 610, 626, 640, 650, 651, 662, 666, 668, 669, 704, 724, 725, 731, 740, 744, 759, 800, 801, 806, 834, 844, 850, 866, 875, 888, 893, 928, 934, 936, 953, 957, 976, 984, 992, 1016, 1029, 1031, 1032, 1042, 1047, 1055, 1064, 1067, 1083, 1085, 1096, 1099, 1100, 1106, 1108, 1112, 1149, 1156, 1158, 1166, 1173, 1196, 1204, 1208, 1215, 1216, 1221, 1224, 1241, 1258], "me": [4, 10, 19, 24, 48, 50, 54, 113, 159, 173, 174, 190, 191, 192, 193, 194, 197, 198, 199, 202, 203, 206, 219, 220, 221, 223, 227, 250, 252, 253, 277, 328, 346, 372, 404, 422, 492, 494, 495, 510, 525, 540, 637, 660, 815, 846, 848, 850, 866, 893, 928, 936, 937, 957, 1016, 1020, 1047, 1066, 1083, 1086, 1096, 1112, 1115, 1156, 1208, 1212, 1242], "focu": [4, 195, 199, 202, 215, 223, 227, 310, 313, 373, 499, 503, 554, 770, 928, 936, 1006, 1066, 1132, 1215, 1259, 1278, 1281, 1282], "myself": [4, 199, 206, 219, 227, 242, 258, 518, 866, 888, 893, 910, 957], "ey": [4, 19, 24, 276, 279, 289, 311, 353, 359, 365, 369, 1143], "toward": [4, 172, 174, 223, 410, 492, 572, 700, 741, 1277], "link": [4, 14, 19, 31, 56, 92, 93, 113, 119, 124, 135, 137, 146, 156, 164, 180, 191, 192, 198, 199, 200, 201, 202, 203, 208, 210, 218, 224, 231, 244, 267, 269, 297, 298, 306, 307, 315, 320, 327, 328, 333, 349, 359, 371, 372, 380, 382, 385, 386, 404, 417, 418, 422, 466, 479, 485, 493, 513, 522, 540, 543, 544, 546, 555, 591, 626, 633, 634, 662, 758, 765, 797, 810, 835, 836, 911, 913, 919, 936, 945, 950, 961, 974, 984, 986, 1011, 1050, 1053, 1055, 1066, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1094, 1096, 1102, 1235, 1245, 1248, 1267, 1273, 1276, 1279, 1282], "consist": [4, 14, 172, 223, 238, 279, 345, 385, 386, 387, 395, 412, 425, 428, 466, 468, 506, 525, 597, 605, 650, 815, 891, 1033, 1077, 1132, 1133, 1136, 1178, 1187, 1210, 1231], "won": [4, 130, 202, 203, 279, 309, 390, 423, 490, 536, 541, 604, 606, 652, 846, 850, 936, 952, 964, 1016, 1023, 1086, 1158, 1277], "break": [4, 23, 25, 214, 223, 224, 229, 236, 242, 243, 251, 263, 266, 272, 273, 276, 279, 282, 283, 286, 289, 304, 311, 325, 353, 359, 365, 369, 373, 396, 460, 464, 465, 492, 496, 500, 510, 690, 725, 727, 734, 742, 748, 770, 778, 783, 824, 825, 847, 974, 1021, 1022, 1031, 1067, 1073, 1080, 1112, 1120, 1158, 1221], "move": [4, 41, 49, 88, 103, 107, 113, 126, 135, 151, 156, 157, 168, 177, 185, 193, 203, 220, 228, 231, 242, 253, 269, 294, 297, 306, 307, 318, 327, 328, 362, 371, 372, 383, 385, 387, 389, 404, 407, 510, 511, 534, 537, 546, 588, 597, 626, 651, 652, 659, 661, 663, 710, 770, 795, 798, 810, 821, 822, 825, 831, 835, 837, 845, 847, 853, 894, 903, 905, 911, 928, 953, 986, 1020, 1021, 1066, 1068, 1102, 1139, 1237, 1257, 1258, 1260], "around": [4, 11, 24, 48, 50, 52, 54, 87, 113, 118, 121, 134, 192, 193, 194, 199, 203, 212, 223, 227, 251, 277, 288, 295, 296, 298, 318, 346, 355, 356, 374, 375, 381, 382, 383, 384, 422, 449, 546, 558, 560, 569, 594, 650, 753, 799, 801, 838, 841, 849, 984, 989, 1031, 1055, 1077, 1080, 1102, 1108, 1124, 1128, 1130, 1152, 1205, 1208, 1210, 1214, 1215, 1226, 1227, 1230], "last": [4, 48, 50, 54, 111, 113, 142, 154, 172, 192, 193, 194, 208, 213, 223, 224, 230, 242, 243, 250, 258, 260, 263, 266, 267, 276, 279, 289, 304, 309, 311, 325, 347, 395, 401, 408, 410, 476, 494, 528, 677, 679, 680, 681, 682, 686, 689, 773, 776, 777, 778, 797, 891, 894, 897, 913, 922, 925, 984, 1023, 1028, 1054, 1059, 1061, 1066, 1067, 1082, 1094, 1105, 1106, 1107, 1108, 1112, 1116, 1120, 1121, 1127, 1128, 1133, 1141, 1149, 1150, 1154, 1156, 1159, 1160, 1170, 1198, 1204, 1206, 1216, 1221, 1228, 1230, 1242, 1249, 1276], "least": [4, 11, 24, 48, 50, 70, 194, 202, 215, 219, 221, 223, 230, 231, 250, 252, 253, 267, 269, 279, 283, 309, 313, 315, 325, 327, 371, 384, 424, 442, 448, 449, 462, 488, 491, 492, 500, 522, 548, 620, 705, 747, 751, 762, 800, 817, 835, 837, 845, 862, 928, 930, 947, 980, 982, 1006, 1053, 1077, 1081, 1103, 1112, 1116, 1132, 1133, 1143, 1167, 1214, 1249], "ha": [4, 8, 11, 14, 15, 30, 32, 40, 43, 49, 67, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 114, 121, 124, 126, 130, 139, 146, 151, 159, 172, 184, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 211, 213, 215, 219, 220, 223, 227, 229, 230, 231, 241, 243, 247, 248, 250, 251, 253, 260, 263, 266, 269, 271, 273, 274, 276, 279, 283, 286, 289, 292, 300, 301, 304, 307, 308, 309, 310, 311, 313, 315, 316, 318, 321, 324, 325, 331, 333, 342, 343, 346, 347, 349, 353, 356, 359, 362, 365, 369, 382, 383, 386, 390, 397, 399, 401, 410, 423, 432, 435, 445, 448, 449, 458, 461, 469, 470, 477, 483, 484, 487, 491, 493, 494, 500, 506, 510, 512, 515, 519, 521, 528, 529, 532, 534, 537, 538, 541, 545, 546, 548, 549, 550, 553, 558, 559, 562, 570, 575, 589, 591, 601, 624, 634, 649, 651, 652, 653, 654, 657, 658, 659, 661, 662, 665, 672, 682, 703, 705, 724, 728, 729, 734, 735, 737, 742, 743, 744, 745, 747, 748, 750, 751, 756, 761, 762, 763, 764, 765, 768, 770, 797, 801, 803, 812, 815, 816, 822, 824, 826, 827, 828, 835, 839, 844, 846, 857, 861, 862, 863, 864, 866, 868, 869, 870, 876, 887, 889, 894, 921, 928, 934, 935, 936, 937, 948, 953, 978, 980, 982, 984, 994, 997, 998, 1000, 1004, 1014, 1016, 1019, 1025, 1031, 1046, 1049, 1050, 1052, 1053, 1055, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1077, 1081, 1083, 1098, 1100, 1101, 1103, 1105, 1106, 1107, 1110, 1112, 1115, 1120, 1121, 1122, 1128, 1130, 1132, 1135, 1138, 1139, 1143, 1148, 1149, 1153, 1170, 1191, 1206, 1208, 1214, 1215, 1216, 1217, 1221, 1228, 1230, 1232, 1234, 1241, 1243, 1248, 1250, 1258, 1259, 1262, 1265, 1266, 1273, 1278, 1279, 1282], "extens": [4, 5, 10, 15, 19, 24, 27, 202, 223, 250, 252, 260, 266, 276, 279, 359, 390, 470, 510, 526, 534, 558, 649, 797, 801, 828, 855, 868, 1046, 1049, 1066, 1083, 1115, 1132, 1135, 1236, 1241], "interfac": [4, 40, 43, 53, 67, 69, 71, 74, 95, 103, 108, 109, 114, 116, 117, 118, 119, 121, 123, 124, 126, 130, 131, 134, 162, 164, 171, 172, 173, 192, 208, 210, 211, 218, 227, 253, 267, 269, 281, 299, 300, 307, 316, 334, 346, 350, 376, 377, 379, 382, 384, 405, 406, 410, 413, 422, 510, 516, 518, 519, 520, 521, 522, 523, 529, 536, 547, 548, 549, 550, 553, 555, 560, 572, 574, 575, 596, 600, 602, 626, 648, 672, 741, 750, 751, 782, 790, 809, 828, 830, 840, 928, 933, 937, 938, 1039, 1066, 1083, 1106, 1220, 1257, 1262, 1264, 1266, 1269, 1272, 1277], "lot": [4, 59, 81, 86, 191, 192, 194, 199, 203, 220, 223, 227, 243, 320, 386, 407, 422, 442, 491, 496, 500, 506, 514, 643, 859, 870, 891, 936, 968, 978, 984, 1021, 1083, 1099, 1127, 1132, 1154, 1210, 1260], "littl": [4, 14, 31, 194, 196, 199, 202, 203, 211, 223, 251, 260, 266, 267, 269, 276, 279, 301, 307, 318, 373, 383, 422, 471, 499, 500, 511, 662, 665, 720, 750, 801, 846, 928, 930, 936, 940, 1041, 1061, 1084, 1155, 1224, 1265, 1278, 1282], "maintain": [4, 15, 17, 41, 60, 69, 191, 192, 199, 220, 229, 250, 252, 260, 264, 266, 276, 279, 288, 404, 418, 422, 496, 510, 697, 800, 813, 961, 984, 992, 994, 996, 1051, 1083, 1084, 1085, 1087, 1094, 1099, 1100, 1101, 1102, 1150, 1213, 1273], "packag": [4, 8, 10, 19, 47, 86, 93, 113, 136, 137, 138, 150, 154, 165, 175, 187, 193, 205, 207, 221, 223, 224, 227, 228, 230, 237, 242, 248, 250, 251, 252, 258, 260, 264, 266, 267, 270, 274, 276, 277, 279, 280, 282, 285, 288, 291, 309, 319, 320, 324, 328, 333, 338, 342, 345, 346, 349, 352, 359, 364, 368, 376, 379, 404, 405, 406, 407, 411, 422, 540, 541, 543, 544, 934, 936, 957, 1026, 1085, 1091, 1109, 1132, 1139, 1162, 1163, 1207, 1208, 1222, 1224, 1228, 1230, 1241, 1242, 1244, 1250, 1273, 1277, 1278, 1279, 1280, 1282], "index": [4, 10, 26, 38, 40, 99, 100, 198, 210, 212, 217, 222, 224, 225, 227, 228, 230, 232, 236, 237, 239, 242, 244, 247, 248, 250, 251, 253, 256, 258, 261, 263, 264, 266, 267, 269, 270, 272, 273, 274, 277, 279, 280, 282, 284, 285, 286, 288, 289, 291, 300, 301, 303, 304, 309, 310, 311, 313, 315, 317, 319, 320, 323, 324, 325, 329, 330, 332, 335, 338, 341, 342, 343, 345, 346, 347, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 369, 374, 404, 411, 434, 450, 476, 504, 512, 523, 627, 630, 633, 636, 639, 642, 643, 645, 682, 683, 685, 690, 704, 722, 747, 831, 835, 980, 1072, 1075, 1079, 1131, 1132, 1144, 1147, 1154, 1160, 1163, 1164, 1166, 1187, 1208, 1212, 1213, 1226, 1228, 1229, 1231, 1235, 1247, 1252, 1281], "virtual": [4, 59, 69, 95, 96, 101, 102, 103, 104, 105, 108, 109, 112, 122, 126, 131, 161, 194, 197, 199, 218, 223, 227, 238, 242, 258, 274, 277, 280, 291, 296, 298, 300, 307, 316, 317, 318, 319, 320, 324, 335, 338, 341, 342, 345, 346, 352, 356, 364, 368, 381, 384, 411, 422, 537, 549, 551, 554, 560, 562, 572, 577, 579, 580, 581, 584, 585, 586, 587, 588, 589, 646, 648, 672, 741, 742, 751, 764, 828, 830, 839, 840, 844, 846, 861, 867, 870, 929, 934, 937, 943, 1014, 1023, 1039, 1045, 1047, 1067, 1132, 1135, 1163, 1164, 1208, 1235, 1238, 1241, 1257, 1262, 1267, 1270, 1271, 1272, 1281], "environ": [4, 8, 64, 67, 86, 93, 113, 164, 166, 172, 185, 192, 203, 227, 233, 242, 243, 248, 258, 261, 264, 274, 277, 280, 291, 297, 300, 306, 319, 320, 324, 327, 328, 335, 338, 341, 342, 345, 346, 352, 359, 364, 368, 369, 371, 372, 405, 406, 417, 418, 554, 575, 589, 604, 605, 606, 607, 667, 783, 844, 845, 865, 869, 870, 891, 892, 928, 1062, 1068, 1084, 1096, 1101, 1103, 1115, 1135, 1137, 1163, 1164, 1208, 1214, 1215, 1228, 1230, 1235, 1236, 1238, 1241, 1242, 1248, 1252, 1254, 1261, 1267, 1281], "repo": [4, 111, 159, 170, 203, 218, 221, 232, 359, 390, 395, 404, 408, 409, 616, 617, 618, 619, 621, 622, 623, 957, 984, 986, 1098, 1250], "creat": [4, 8, 11, 26, 29, 31, 41, 47, 48, 49, 50, 52, 66, 88, 90, 91, 98, 103, 107, 113, 117, 118, 135, 136, 138, 156, 157, 159, 162, 164, 166, 168, 171, 172, 173, 175, 183, 192, 193, 194, 196, 199, 202, 203, 208, 210, 211, 212, 227, 228, 229, 230, 231, 232, 243, 248, 256, 261, 266, 267, 269, 274, 276, 279, 283, 288, 291, 296, 297, 298, 306, 307, 315, 318, 319, 320, 324, 325, 327, 328, 330, 335, 338, 342, 345, 346, 371, 372, 377, 384, 386, 387, 404, 409, 427, 504, 506, 512, 519, 525, 528, 532, 538, 540, 548, 550, 553, 554, 569, 570, 574, 576, 577, 591, 594, 602, 604, 606, 607, 608, 650, 653, 663, 703, 704, 706, 724, 730, 733, 735, 742, 753, 756, 770, 783, 794, 795, 797, 803, 806, 825, 846, 847, 848, 850, 859, 861, 862, 871, 873, 874, 878, 879, 880, 882, 884, 889, 896, 898, 900, 901, 902, 903, 905, 911, 934, 936, 937, 940, 943, 947, 948, 953, 955, 957, 959, 961, 968, 980, 984, 1008, 1009, 1012, 1014, 1016, 1025, 1026, 1033, 1034, 1035, 1041, 1042, 1043, 1050, 1051, 1052, 1058, 1066, 1067, 1075, 1084, 1085, 1086, 1099, 1100, 1105, 1106, 1108, 1110, 1112, 1116, 1120, 1121, 1122, 1124, 1138, 1139, 1148, 1149, 1150, 1159, 1163, 1164, 1165, 1177, 1185, 1186, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1217, 1220, 1224, 1233, 1241, 1243, 1244, 1273], "popul": [4, 194, 198, 283, 316, 940, 1042], "yourself": [4, 192, 199, 203, 213, 269, 455, 523, 651, 660, 667, 672, 824, 893, 989, 1041, 1053, 1266, 1278], "root": [4, 25, 49, 69, 113, 137, 139, 155, 170, 191, 197, 199, 202, 203, 213, 218, 219, 220, 227, 231, 241, 263, 269, 279, 283, 286, 289, 304, 307, 311, 321, 325, 347, 353, 359, 365, 372, 389, 390, 395, 423, 490, 499, 503, 506, 526, 541, 545, 549, 607, 668, 797, 861, 866, 868, 887, 891, 903, 904, 910, 913, 915, 916, 917, 918, 920, 921, 922, 928, 934, 936, 937, 948, 984, 985, 986, 1007, 1008, 1012, 1021, 1026, 1031, 1039, 1069, 1083, 1086, 1096, 1098, 1107, 1187, 1196, 1197, 1233, 1241, 1265], "bin": [4, 10, 37, 49, 111, 113, 114, 118, 121, 124, 126, 130, 142, 174, 191, 193, 203, 211, 214, 224, 241, 251, 260, 263, 266, 271, 276, 279, 283, 286, 289, 301, 304, 309, 311, 321, 325, 347, 353, 359, 365, 369, 404, 412, 513, 514, 515, 517, 522, 526, 532, 538, 540, 541, 543, 544, 546, 591, 606, 607, 862, 866, 868, 873, 876, 887, 891, 892, 917, 918, 922, 934, 937, 961, 984, 1021, 1028, 1031, 1037, 1060, 1061, 1071, 1083, 1084, 1085, 1096, 1098, 1101, 1105, 1111, 1135, 1163, 1164, 1187, 1196, 1197, 1211, 1224, 1236, 1241, 1243], "activ": [4, 134, 197, 208, 231, 291, 800, 824, 866, 868, 924, 964, 966, 970, 978, 1066, 1163, 1241, 1243], "requir": [4, 14, 24, 26, 29, 47, 78, 97, 111, 113, 154, 159, 164, 189, 192, 193, 194, 197, 199, 203, 211, 219, 221, 223, 227, 231, 239, 250, 253, 264, 267, 269, 271, 276, 277, 291, 307, 316, 318, 319, 342, 373, 375, 384, 415, 425, 458, 488, 490, 516, 521, 525, 536, 537, 540, 553, 573, 575, 595, 604, 607, 626, 674, 687, 703, 734, 755, 759, 766, 788, 789, 801, 812, 813, 824, 835, 843, 928, 934, 936, 937, 1016, 1021, 1041, 1046, 1066, 1067, 1069, 1076, 1096, 1101, 1122, 1132, 1150, 1159, 1160, 1164, 1216, 1236, 1241, 1243, 1244, 1250, 1259, 1261, 1266, 1267, 1268, 1269, 1271, 1272, 1276], "txt": [4, 20, 29, 31, 111, 113, 118, 131, 161, 194, 209, 210, 214, 217, 218, 219, 220, 221, 250, 252, 257, 260, 269, 270, 279, 291, 301, 335, 338, 369, 375, 377, 378, 380, 382, 395, 396, 435, 514, 515, 516, 517, 519, 520, 522, 529, 532, 534, 538, 540, 541, 543, 544, 545, 546, 591, 604, 605, 606, 607, 608, 627, 630, 633, 634, 636, 639, 642, 645, 732, 797, 856, 857, 858, 871, 875, 885, 895, 896, 897, 898, 902, 903, 910, 931, 934, 936, 955, 1039, 1072, 1075, 1079, 1084, 1085, 1096, 1107, 1154, 1178, 1196, 1243, 1244, 1247, 1250, 1252], "fedorish": [4, 957, 1016, 1224], "your": [4, 30, 53, 91, 98, 113, 130, 136, 157, 164, 168, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 206, 207, 220, 223, 226, 227, 231, 243, 251, 252, 269, 277, 283, 296, 298, 300, 307, 310, 313, 355, 372, 375, 385, 386, 390, 401, 410, 412, 455, 490, 498, 500, 510, 521, 524, 525, 529, 532, 544, 549, 553, 574, 591, 594, 605, 607, 608, 664, 732, 733, 735, 736, 758, 767, 783, 801, 810, 824, 856, 857, 858, 868, 870, 871, 880, 881, 882, 883, 884, 885, 892, 895, 896, 897, 898, 900, 908, 928, 934, 937, 959, 976, 984, 989, 1007, 1008, 1012, 1016, 1031, 1033, 1066, 1096, 1099, 1110, 1121, 1127, 1132, 1136, 1178, 1192, 1196, 1197, 1208, 1213, 1224, 1234, 1236, 1241, 1242, 1243, 1250, 1266, 1269], "mileag": [4, 296, 298, 1224, 1241], "might": [4, 14, 47, 48, 50, 111, 119, 124, 130, 161, 174, 191, 192, 193, 195, 197, 199, 202, 203, 219, 221, 223, 231, 252, 260, 266, 271, 276, 279, 310, 313, 316, 342, 373, 382, 387, 390, 415, 486, 500, 510, 537, 541, 546, 550, 553, 574, 607, 657, 665, 724, 748, 797, 824, 826, 830, 831, 846, 847, 873, 928, 934, 936, 937, 959, 970, 974, 980, 984, 1016, 1021, 1030, 1046, 1061, 1066, 1069, 1080, 1096, 1099, 1107, 1116, 1119, 1132, 1210, 1224, 1241, 1244, 1248, 1261], "vari": [4, 260, 266, 276, 279, 283, 296, 298, 319, 320, 341, 345, 426, 500, 524, 703, 757, 764, 937, 984, 1101, 1220, 1224, 1241, 1258], "dnf": [4, 47, 121, 195, 203, 220, 359, 423, 519, 521, 522, 545, 620, 930, 957, 985, 1016, 1085, 1098, 1224, 1248, 1250], "pandoc": 4, "graphviz": [4, 544, 1085], "dia": [4, 263, 321, 913, 1166], "gtest": [4, 31, 113, 166, 176, 218, 219, 220, 221, 374, 375, 382, 423, 523, 548, 549, 550, 552, 553, 554, 557, 570, 572, 573, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 643, 650, 651, 652, 662, 663, 665, 666, 667, 668, 669, 720, 724, 745, 747, 750, 756, 793, 794, 795, 797, 804, 812, 813, 814, 834, 844, 845, 846, 847, 850, 1246], "devel": [4, 121, 203, 220, 519, 521, 522, 543, 545, 957, 1248, 1250], "markdown": [4, 10, 399, 1164], "handl": [4, 8, 33, 63, 118, 139, 142, 171, 190, 192, 211, 223, 227, 228, 230, 232, 238, 251, 253, 258, 260, 264, 267, 268, 276, 281, 288, 300, 307, 317, 324, 325, 335, 338, 346, 351, 357, 363, 367, 387, 404, 409, 411, 417, 418, 424, 464, 471, 476, 492, 496, 519, 522, 626, 662, 672, 706, 710, 724, 725, 734, 735, 736, 748, 770, 772, 822, 843, 846, 934, 943, 947, 966, 978, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1031, 1033, 1053, 1066, 1071, 1077, 1080, 1109, 1127, 1132, 1133, 1148, 1158, 1161, 1208, 1257, 1266, 1267, 1268, 1269], "jupyt": [4, 211, 212, 214, 223, 224, 226, 234, 274, 276, 277, 279, 280, 309, 310, 313, 314, 320, 324, 330, 335, 338, 342, 346, 352, 359, 369, 404, 409, 913, 1132, 1210, 1211, 1215], "notebook": [4, 19, 210, 211, 212, 214, 223, 226, 234, 267, 274, 277, 279, 280, 282, 285, 288, 291, 300, 303, 309, 310, 313, 314, 320, 324, 330, 335, 338, 342, 346, 352, 353, 358, 364, 368, 369, 389, 409, 1132, 1210, 1215], "those": [4, 11, 67, 111, 122, 131, 161, 172, 174, 192, 193, 199, 202, 221, 223, 227, 232, 250, 252, 253, 260, 264, 269, 270, 271, 273, 279, 283, 315, 316, 317, 318, 320, 335, 373, 375, 377, 389, 401, 404, 410, 415, 435, 490, 500, 510, 512, 517, 520, 522, 532, 541, 549, 550, 553, 555, 620, 662, 684, 721, 729, 744, 751, 753, 764, 797, 801, 827, 831, 850, 857, 858, 875, 876, 928, 934, 936, 937, 950, 953, 984, 1066, 1080, 1100, 1101, 1102, 1103, 1107, 1108, 1115, 1120, 1172, 1183, 1204, 1213, 1221, 1227, 1228, 1241, 1259, 1262, 1266, 1273], "funki": [4, 194], "graph": [4, 16, 131, 261, 274, 288, 291, 324, 330, 377, 411, 505, 521, 537, 544, 1085, 1100, 1101, 1208, 1214], "histor": [4, 11, 67, 194, 215, 436, 449, 494, 764, 869, 943, 1016, 1041, 1081, 1200, 1253], "baggag": [4, 436, 449, 1041, 1081, 1200], "convert": [4, 29, 212, 242, 250, 256, 260, 263, 266, 269, 273, 276, 279, 280, 283, 300, 325, 335, 338, 353, 381, 389, 449, 471, 496, 506, 517, 544, 549, 604, 720, 724, 739, 801, 814, 815, 848, 934, 1033, 1083, 1123, 1166, 1172, 1180, 1183, 1202, 1204, 1221], "vector": [4, 95, 97, 99, 100, 113, 118, 119, 122, 149, 218, 246, 252, 269, 295, 296, 309, 315, 316, 318, 356, 369, 382, 384, 553, 554, 579, 580, 597, 604, 610, 611, 612, 613, 624, 642, 644, 652, 654, 659, 663, 687, 689, 690, 691, 693, 696, 698, 716, 722, 725, 726, 733, 745, 749, 753, 755, 770, 783, 793, 795, 808, 810, 815, 833, 834, 837, 1080, 1137, 1215, 1232, 1253], "draw": [4, 173, 231, 342, 381, 382, 412, 446, 602, 824, 837, 941, 945, 953, 974, 997, 1046, 1049], "svg": 4, "ani": [4, 26, 32, 36, 52, 108, 131, 139, 161, 177, 191, 192, 193, 194, 197, 199, 203, 211, 215, 226, 229, 231, 243, 250, 252, 260, 266, 276, 279, 283, 294, 295, 296, 304, 320, 325, 342, 355, 374, 384, 387, 390, 411, 412, 444, 488, 496, 510, 513, 520, 524, 525, 526, 529, 537, 553, 558, 600, 601, 602, 603, 607, 608, 620, 637, 655, 658, 683, 720, 722, 728, 742, 750, 751, 753, 756, 761, 765, 770, 797, 798, 800, 809, 822, 824, 830, 835, 845, 846, 847, 857, 858, 868, 871, 878, 879, 882, 883, 884, 885, 891, 903, 913, 928, 934, 936, 937, 942, 943, 955, 957, 976, 984, 994, 1001, 1008, 1031, 1051, 1055, 1066, 1076, 1103, 1105, 1106, 1107, 1108, 1112, 1119, 1120, 1127, 1130, 1139, 1144, 1146, 1157, 1158, 1164, 1188, 1190, 1205, 1215, 1230, 1231, 1236, 1248, 1258, 1266, 1272, 1281], "That": [4, 73, 87, 88, 111, 113, 114, 118, 122, 139, 146, 168, 191, 192, 193, 194, 197, 202, 203, 215, 223, 227, 230, 269, 293, 297, 299, 313, 316, 318, 415, 478, 479, 522, 536, 537, 549, 550, 560, 572, 574, 576, 592, 594, 607, 654, 658, 733, 748, 816, 822, 857, 858, 861, 865, 867, 868, 877, 891, 928, 936, 1014, 1032, 1036, 1089, 1090, 1106, 1132, 1139, 1199, 1201, 1206, 1234, 1241, 1251, 1258], "sloppili": [4, 1029], "track": [4, 111, 139, 195, 199, 230, 250, 260, 266, 276, 279, 801, 845, 868, 957, 984, 985, 989, 1049, 1066, 1119], "opentrain": [4, 9, 15, 177, 228, 235, 253, 412, 1241], "recip": [4, 26, 189, 192, 193, 405, 406, 490, 674], "set": [5, 8, 20, 48, 50, 67, 74, 97, 113, 114, 154, 159, 166, 170, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 208, 211, 212, 223, 224, 227, 228, 230, 231, 232, 235, 236, 240, 241, 242, 246, 248, 249, 252, 254, 258, 259, 261, 262, 264, 265, 267, 268, 270, 272, 274, 275, 276, 281, 282, 284, 285, 287, 288, 290, 296, 298, 300, 302, 303, 305, 307, 309, 310, 312, 313, 316, 317, 318, 320, 322, 323, 324, 326, 329, 330, 332, 335, 338, 341, 342, 344, 345, 346, 348, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 370, 373, 376, 379, 382, 404, 409, 411, 422, 423, 438, 444, 461, 466, 467, 476, 479, 491, 492, 500, 506, 514, 516, 517, 518, 520, 521, 522, 524, 525, 526, 528, 529, 534, 537, 541, 543, 545, 550, 553, 554, 570, 575, 584, 585, 589, 598, 599, 604, 605, 606, 607, 624, 652, 653, 666, 667, 668, 669, 682, 755, 770, 797, 815, 824, 825, 844, 845, 848, 862, 870, 876, 892, 928, 930, 934, 937, 955, 968, 970, 980, 984, 989, 994, 1012, 1017, 1019, 1025, 1033, 1037, 1049, 1050, 1055, 1063, 1064, 1068, 1069, 1080, 1082, 1083, 1084, 1096, 1099, 1105, 1108, 1109, 1112, 1121, 1122, 1131, 1132, 1135, 1139, 1144, 1164, 1186, 1197, 1204, 1205, 1208, 1210, 1213, 1214, 1215, 1217, 1221, 1236, 1248, 1250, 1253, 1259, 1265, 1268, 1281], "sphinx": [5, 10, 26, 179, 204, 410, 1241], "togeth": [5, 11, 30, 37, 93, 95, 99, 100, 118, 122, 146, 187, 199, 202, 203, 211, 221, 223, 227, 231, 243, 252, 269, 296, 298, 315, 316, 318, 333, 342, 345, 349, 412, 422, 467, 500, 501, 518, 520, 597, 607, 626, 648, 665, 666, 668, 669, 744, 748, 801, 822, 825, 857, 858, 918, 919, 936, 937, 948, 963, 984, 1035, 1058, 1083, 1089, 1090, 1094, 1096, 1099, 1103, 1182, 1214, 1234, 1236, 1244, 1248, 1258, 1261, 1262, 1272, 1273], "form": [5, 16, 194, 199, 211, 215, 239, 260, 266, 267, 276, 279, 316, 318, 386, 487, 503, 562, 570, 572, 611, 612, 624, 724, 743, 862, 913, 937, 984, 989, 992, 1143, 1163, 1166, 1199, 1201, 1204, 1205, 1210, 1216, 1236, 1241, 1258], "": [5, 7, 10, 18, 22, 24, 25, 27, 30, 31, 32, 35, 42, 47, 48, 49, 50, 53, 54, 67, 78, 93, 97, 98, 111, 113, 118, 126, 130, 131, 139, 149, 154, 161, 162, 175, 180, 181, 183, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 208, 211, 212, 213, 215, 217, 218, 220, 221, 223, 224, 227, 229, 230, 234, 235, 239, 241, 242, 243, 244, 245, 247, 250, 252, 253, 256, 257, 260, 263, 264, 266, 267, 269, 270, 271, 273, 276, 277, 279, 283, 286, 289, 292, 295, 296, 298, 301, 304, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 325, 328, 331, 333, 335, 338, 341, 342, 343, 345, 347, 349, 353, 355, 356, 358, 359, 365, 369, 373, 374, 381, 382, 383, 386, 389, 390, 398, 399, 401, 404, 407, 408, 423, 436, 438, 444, 449, 470, 471, 474, 483, 488, 490, 492, 493, 494, 495, 496, 500, 511, 512, 514, 515, 522, 524, 525, 528, 532, 540, 541, 543, 546, 548, 549, 550, 552, 553, 554, 555, 558, 559, 570, 572, 573, 575, 576, 580, 591, 593, 604, 605, 606, 607, 610, 616, 618, 619, 627, 630, 633, 634, 636, 639, 642, 645, 652, 654, 655, 658, 659, 661, 662, 664, 665, 674, 684, 694, 695, 706, 713, 715, 724, 725, 728, 732, 739, 740, 742, 744, 745, 747, 751, 754, 755, 757, 759, 760, 764, 765, 770, 779, 782, 784, 786, 787, 788, 789, 790, 795, 797, 803, 806, 808, 810, 813, 814, 815, 822, 825, 826, 831, 834, 835, 837, 839, 844, 845, 846, 849, 855, 856, 857, 858, 861, 862, 866, 868, 869, 873, 874, 875, 877, 879, 881, 883, 885, 887, 888, 889, 891, 893, 894, 910, 913, 914, 917, 918, 920, 921, 922, 924, 925, 928, 931, 934, 936, 937, 943, 952, 955, 957, 961, 968, 970, 980, 989, 992, 1004, 1006, 1007, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1061, 1063, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1075, 1077, 1079, 1080, 1081, 1086, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1110, 1111, 1113, 1114, 1115, 1119, 1120, 1127, 1132, 1133, 1136, 1140, 1141, 1147, 1150, 1153, 1154, 1157, 1158, 1161, 1166, 1170, 1178, 1189, 1196, 1197, 1198, 1200, 1214, 1216, 1217, 1220, 1221, 1224, 1231, 1232, 1233, 1234, 1236, 1241, 1242, 1247, 1250, 1252, 1253, 1258, 1262, 1266, 1269, 1273, 1278, 1279, 1281], "short": [5, 19, 22, 30, 95, 131, 192, 199, 219, 223, 227, 230, 231, 232, 242, 243, 260, 264, 265, 266, 271, 274, 276, 277, 281, 299, 315, 316, 317, 318, 319, 320, 382, 384, 426, 442, 444, 449, 453, 454, 479, 488, 532, 555, 608, 653, 657, 824, 870, 891, 917, 934, 937, 980, 986, 989, 1016, 1023, 1033, 1064, 1066, 1070, 1104, 1118, 1141, 1144, 1160, 1232, 1241, 1243, 1258], "video": [5, 9, 190, 195, 197, 199, 209, 223, 226, 227, 230, 235, 248, 251, 252, 274, 318, 321, 324, 511, 835, 928, 936, 1208, 1215, 1224], "german": [5, 207, 523, 542, 1221, 1224, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "explain": [5, 49, 52, 86, 118, 172, 174, 190, 191, 197, 203, 215, 223, 227, 229, 253, 264, 269, 271, 273, 274, 282, 283, 320, 374, 389, 419, 422, 490, 500, 640, 801, 871, 891, 894, 928, 937, 1066, 1071, 1155, 1208, 1241, 1266], "case": [5, 11, 30, 86, 93, 95, 98, 111, 116, 119, 131, 139, 171, 172, 173, 191, 192, 193, 196, 199, 202, 203, 212, 215, 227, 229, 231, 233, 253, 266, 267, 273, 279, 283, 286, 295, 296, 298, 299, 307, 310, 313, 325, 342, 345, 355, 373, 374, 382, 384, 412, 433, 440, 459, 461, 492, 494, 512, 520, 524, 529, 532, 541, 543, 547, 555, 558, 561, 604, 605, 607, 615, 634, 655, 664, 703, 710, 722, 735, 748, 759, 770, 784, 786, 797, 800, 801, 822, 824, 830, 832, 835, 844, 858, 862, 866, 873, 887, 903, 921, 928, 937, 957, 984, 997, 1000, 1015, 1016, 1022, 1033, 1061, 1066, 1067, 1081, 1094, 1096, 1098, 1100, 1107, 1108, 1138, 1139, 1150, 1154, 1178, 1216, 1232, 1241, 1249, 1259], "netide": 5, "f\u00f6rderantrag": 5, "miscellan": [5, 205, 235, 251, 258, 261, 262, 264, 270, 272, 274, 275, 280, 281, 282, 285, 288, 290, 298, 303, 305, 309, 310, 313, 323, 324, 326, 329, 332, 346, 351, 354, 356, 357, 358, 360, 363, 364, 367, 368, 370, 404, 412, 724, 738, 798, 851, 1025, 1026, 1031, 1034, 1059, 1131, 1207, 1257, 1258, 1260, 1261, 1271, 1277, 1278, 1279, 1281, 1282], "screencast": [6, 10, 175, 1208], "written": [6, 29, 30, 67, 95, 114, 121, 166, 191, 192, 197, 229, 279, 373, 406, 467, 470, 486, 494, 496, 500, 540, 570, 732, 744, 813, 870, 1025, 1032, 1041, 1077, 1084, 1085, 1094, 1126, 1133, 1164, 1265, 1273], "new": [6, 19, 29, 31, 36, 37, 42, 49, 53, 67, 96, 111, 118, 119, 143, 159, 162, 173, 174, 192, 194, 195, 196, 197, 198, 199, 202, 218, 223, 243, 260, 264, 266, 276, 279, 283, 291, 301, 318, 324, 325, 342, 375, 390, 415, 421, 449, 479, 483, 484, 492, 496, 510, 529, 540, 553, 554, 573, 577, 589, 591, 595, 604, 606, 607, 616, 617, 618, 619, 621, 622, 626, 632, 640, 649, 650, 655, 658, 703, 706, 717, 735, 739, 740, 745, 746, 755, 756, 757, 764, 767, 787, 788, 789, 790, 799, 801, 806, 812, 813, 815, 816, 824, 827, 830, 834, 837, 843, 844, 845, 846, 847, 851, 862, 887, 910, 928, 931, 934, 937, 941, 978, 984, 992, 1028, 1029, 1030, 1039, 1046, 1050, 1051, 1057, 1066, 1070, 1102, 1121, 1136, 1139, 1148, 1188, 1212, 1213, 1230, 1236, 1241, 1257, 1258, 1259, 1260], "youtub": [7, 199, 212, 223, 226, 228, 230, 232, 235, 237, 245, 252, 319, 320, 341, 345, 359, 390], "watch": [7, 19, 173, 193, 194, 195, 212, 219, 223, 227, 228, 232, 318, 320, 324, 511, 759, 835, 928, 936, 1040, 1111, 1132, 1234], "v": [7, 10, 18, 19, 52, 77, 111, 121, 154, 161, 170, 192, 199, 212, 215, 218, 224, 228, 230, 232, 236, 238, 239, 242, 243, 244, 249, 251, 252, 253, 260, 263, 264, 266, 267, 269, 272, 278, 281, 284, 287, 289, 293, 300, 301, 304, 307, 312, 320, 322, 326, 330, 331, 337, 343, 347, 353, 356, 359, 365, 369, 375, 387, 390, 404, 500, 535, 546, 549, 570, 630, 648, 705, 747, 749, 755, 761, 773, 776, 777, 778, 781, 783, 795, 800, 801, 803, 807, 808, 810, 815, 833, 834, 835, 839, 848, 856, 868, 891, 893, 921, 976, 984, 986, 992, 1018, 1076, 1077, 1083, 1127, 1150, 1243, 1244, 1255, 1268, 1271], "w5g8k7a2gbg": 7, "bore": [7, 252, 274, 288, 304, 330, 759, 891, 1077, 1081, 1139, 1208], "good": [7, 14, 16, 30, 86, 113, 134, 154, 158, 173, 191, 192, 193, 194, 199, 215, 223, 227, 230, 248, 251, 252, 260, 264, 269, 270, 271, 273, 274, 277, 283, 298, 300, 310, 313, 316, 318, 324, 325, 346, 355, 375, 381, 382, 385, 386, 445, 449, 490, 494, 496, 504, 505, 510, 525, 529, 553, 631, 652, 656, 657, 706, 757, 786, 798, 813, 820, 824, 831, 836, 848, 855, 870, 874, 925, 928, 936, 937, 941, 943, 976, 984, 989, 1029, 1031, 1057, 1067, 1070, 1071, 1077, 1080, 1107, 1120, 1138, 1139, 1150, 1153, 1155, 1158, 1170, 1181, 1208, 1215, 1234, 1262, 1268, 1269, 1273, 1279], "j2hzby8e4yq": 7, "pov": 7, "classmethod": [8, 304], "staticmethod": [8, 304], "class": [8, 29, 31, 42, 45, 49, 59, 60, 62, 63, 74, 81, 86, 95, 96, 97, 99, 100, 103, 106, 107, 108, 109, 110, 113, 114, 118, 119, 121, 122, 124, 126, 130, 131, 150, 154, 158, 159, 160, 161, 165, 166, 174, 199, 209, 210, 211, 213, 218, 227, 228, 229, 230, 232, 234, 235, 247, 251, 253, 260, 263, 264, 266, 267, 271, 275, 277, 278, 281, 283, 286, 289, 291, 293, 295, 296, 298, 303, 304, 308, 310, 311, 313, 317, 318, 319, 320, 322, 323, 324, 325, 329, 331, 341, 342, 343, 345, 346, 347, 351, 353, 355, 356, 357, 358, 359, 363, 364, 365, 367, 368, 370, 373, 374, 383, 390, 392, 398, 399, 406, 407, 408, 415, 440, 486, 510, 512, 514, 548, 549, 550, 551, 552, 554, 557, 558, 562, 569, 570, 572, 573, 575, 576, 577, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 615, 620, 626, 634, 637, 640, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 661, 663, 665, 670, 672, 676, 682, 691, 709, 722, 724, 726, 727, 728, 729, 730, 731, 733, 735, 736, 737, 742, 744, 748, 750, 751, 755, 756, 761, 765, 770, 772, 773, 776, 777, 778, 779, 782, 784, 786, 788, 790, 793, 794, 795, 798, 803, 804, 806, 810, 811, 812, 815, 822, 824, 825, 826, 827, 828, 830, 842, 845, 846, 850, 928, 934, 936, 937, 939, 1037, 1039, 1040, 1066, 1105, 1107, 1115, 1116, 1122, 1123, 1128, 1129, 1130, 1133, 1136, 1138, 1139, 1147, 1197, 1204, 1221, 1241, 1242, 1253, 1258, 1277, 1278], "member": [8, 22, 25, 30, 44, 49, 99, 100, 113, 157, 159, 174, 212, 213, 214, 224, 229, 251, 269, 281, 294, 309, 316, 325, 356, 374, 381, 382, 408, 479, 488, 495, 552, 594, 599, 602, 626, 640, 650, 651, 653, 654, 655, 656, 660, 661, 665, 666, 668, 670, 703, 705, 709, 722, 724, 726, 730, 761, 770, 783, 795, 797, 800, 801, 810, 814, 815, 827, 846, 850, 856, 857, 858, 874, 875, 876, 877, 878, 879, 885, 921, 925, 934, 945, 950, 952, 972, 980, 984, 997, 1003, 1031, 1096, 1157, 1233, 1253], "more": [8, 14, 30, 32, 48, 50, 54, 59, 67, 71, 86, 90, 95, 103, 109, 113, 114, 117, 118, 121, 131, 154, 161, 164, 171, 172, 173, 192, 193, 196, 197, 199, 202, 203, 205, 207, 212, 213, 215, 220, 223, 227, 228, 229, 230, 231, 232, 233, 235, 237, 242, 243, 250, 251, 252, 253, 254, 258, 261, 264, 265, 267, 268, 269, 270, 272, 273, 274, 277, 280, 281, 282, 284, 285, 287, 291, 295, 296, 297, 298, 302, 305, 306, 316, 317, 318, 325, 327, 328, 332, 334, 342, 346, 350, 354, 355, 356, 360, 366, 370, 371, 374, 375, 376, 378, 379, 380, 383, 384, 385, 386, 387, 392, 407, 409, 415, 422, 433, 438, 442, 445, 449, 459, 460, 461, 470, 472, 479, 490, 495, 496, 500, 504, 505, 506, 512, 513, 515, 519, 523, 541, 543, 561, 570, 574, 575, 586, 591, 604, 606, 626, 643, 652, 656, 705, 728, 740, 748, 750, 760, 770, 797, 801, 802, 812, 824, 825, 826, 834, 835, 837, 843, 845, 846, 850, 856, 861, 867, 891, 894, 925, 928, 930, 934, 935, 936, 937, 940, 943, 955, 957, 961, 968, 970, 972, 976, 978, 980, 984, 1016, 1022, 1025, 1028, 1031, 1047, 1051, 1053, 1064, 1066, 1069, 1071, 1077, 1081, 1083, 1084, 1085, 1094, 1096, 1100, 1101, 1102, 1108, 1110, 1112, 1116, 1119, 1126, 1127, 1131, 1132, 1134, 1138, 1139, 1150, 1180, 1187, 1207, 1208, 1213, 1215, 1217, 1224, 1227, 1231, 1236, 1242, 1243, 1250, 1254, 1258, 1259, 1261, 1262, 1265, 1273, 1278, 1279, 1280, 1281, 1282], "except": [8, 30, 33, 47, 49, 63, 99, 100, 142, 146, 154, 162, 171, 173, 193, 197, 203, 210, 211, 218, 223, 224, 227, 228, 230, 232, 234, 239, 241, 244, 247, 251, 252, 253, 256, 258, 260, 263, 264, 267, 268, 271, 273, 277, 278, 281, 283, 286, 288, 289, 293, 301, 304, 308, 311, 319, 320, 321, 324, 325, 331, 341, 342, 343, 345, 346, 347, 353, 359, 365, 369, 389, 391, 397, 398, 399, 400, 404, 409, 417, 418, 436, 488, 491, 537, 550, 551, 558, 585, 724, 726, 734, 736, 738, 747, 755, 770, 778, 820, 843, 845, 846, 849, 863, 864, 869, 934, 952, 984, 1066, 1067, 1081, 1105, 1109, 1112, 1115, 1118, 1121, 1133, 1136, 1154, 1156, 1161, 1208, 1225, 1230, 1243, 1253, 1257, 1277, 1278], "final": [8, 25, 29, 47, 53, 67, 95, 139, 173, 213, 223, 227, 230, 250, 252, 260, 266, 267, 276, 281, 294, 300, 324, 346, 356, 381, 382, 383, 384, 512, 605, 607, 671, 672, 724, 742, 783, 798, 800, 801, 813, 857, 858, 925, 930, 936, 937, 947, 978, 984, 1046, 1066, 1083, 1101, 1105, 1118, 1170, 1187, 1208, 1258], "els": [8, 30, 37, 49, 99, 100, 108, 114, 130, 146, 166, 171, 174, 192, 194, 195, 198, 211, 214, 224, 227, 230, 234, 242, 244, 247, 250, 251, 252, 256, 260, 263, 264, 267, 268, 269, 271, 275, 276, 281, 283, 286, 290, 292, 301, 303, 304, 309, 311, 321, 325, 331, 343, 353, 360, 365, 370, 389, 400, 411, 432, 438, 449, 454, 465, 471, 490, 512, 514, 515, 518, 521, 528, 529, 554, 579, 586, 589, 643, 665, 689, 690, 700, 708, 720, 735, 742, 748, 750, 764, 766, 768, 819, 825, 847, 848, 857, 858, 863, 864, 883, 885, 888, 894, 916, 936, 966, 976, 1000, 1017, 1020, 1025, 1060, 1061, 1063, 1067, 1069, 1108, 1115, 1127, 1128, 1142, 1150, 1156, 1230, 1257, 1278], "exec": [8, 199, 223, 232, 263, 277, 278, 286, 293, 305, 309, 311, 319, 320, 321, 325, 332, 341, 345, 352, 354, 920, 925, 1025, 1028, 1058, 1083, 1109, 1269, 1277], "dict": [8, 210, 223, 224, 228, 239, 241, 242, 247, 250, 264, 265, 266, 267, 270, 272, 275, 276, 277, 281, 287, 301, 304, 311, 321, 325, 331, 336, 343, 347, 353, 358, 360, 366, 369, 396, 399, 404, 800, 1105, 1108, 1120, 1121, 1130, 1156, 1278], "modul": [8, 10, 53, 175, 187, 195, 197, 202, 213, 219, 221, 223, 226, 227, 228, 229, 230, 237, 238, 244, 247, 251, 253, 258, 260, 261, 264, 266, 267, 270, 271, 273, 274, 276, 277, 279, 280, 282, 283, 285, 286, 290, 291, 294, 300, 302, 303, 304, 309, 311, 319, 320, 323, 325, 329, 330, 333, 334, 335, 338, 343, 345, 347, 349, 350, 351, 352, 353, 358, 359, 363, 364, 365, 367, 368, 369, 376, 377, 378, 379, 380, 389, 390, 399, 405, 406, 407, 409, 415, 422, 466, 510, 512, 519, 522, 523, 529, 534, 537, 538, 545, 558, 798, 928, 934, 937, 940, 943, 948, 950, 953, 964, 980, 985, 986, 996, 1108, 1109, 1123, 1132, 1133, 1136, 1137, 1148, 1150, 1156, 1159, 1160, 1166, 1202, 1203, 1204, 1205, 1217, 1220, 1221, 1222, 1235, 1236, 1241, 1244, 1251, 1264, 1266, 1270, 1273, 1278, 1282], "There": [8, 32, 42, 44, 58, 70, 86, 122, 191, 193, 194, 195, 196, 199, 203, 204, 219, 220, 224, 226, 227, 230, 234, 235, 248, 253, 269, 272, 273, 274, 277, 283, 310, 313, 316, 317, 318, 319, 320, 341, 342, 356, 375, 381, 382, 386, 390, 424, 434, 440, 449, 464, 467, 488, 490, 497, 500, 511, 512, 522, 528, 532, 537, 550, 575, 576, 626, 634, 651, 656, 700, 737, 747, 748, 751, 759, 761, 806, 813, 846, 861, 891, 928, 934, 936, 957, 984, 989, 1058, 1066, 1069, 1080, 1081, 1133, 1139, 1150, 1208, 1217, 1242, 1248], "one": [8, 14, 19, 27, 31, 32, 37, 48, 49, 50, 52, 69, 73, 74, 95, 99, 100, 111, 113, 114, 117, 118, 122, 126, 130, 131, 146, 161, 170, 172, 174, 181, 185, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 211, 212, 213, 215, 220, 223, 224, 227, 229, 231, 234, 239, 241, 242, 243, 244, 247, 250, 252, 253, 260, 263, 266, 271, 273, 274, 276, 277, 279, 282, 283, 286, 289, 291, 301, 304, 307, 310, 311, 313, 315, 317, 321, 325, 330, 331, 333, 342, 347, 349, 353, 359, 365, 369, 373, 381, 382, 384, 385, 386, 387, 389, 390, 395, 396, 401, 404, 410, 422, 426, 433, 444, 449, 451, 459, 464, 466, 467, 471, 474, 476, 481, 484, 492, 493, 494, 496, 500, 504, 506, 512, 514, 518, 522, 526, 528, 529, 536, 537, 540, 541, 543, 546, 548, 549, 550, 554, 557, 558, 560, 561, 569, 574, 576, 594, 597, 599, 600, 604, 605, 607, 626, 637, 643, 654, 655, 662, 663, 665, 666, 667, 668, 669, 680, 681, 689, 700, 703, 704, 708, 722, 724, 740, 743, 748, 750, 751, 753, 755, 756, 759, 764, 770, 783, 797, 800, 801, 810, 819, 821, 822, 825, 830, 831, 834, 835, 839, 844, 846, 847, 848, 855, 856, 857, 863, 864, 873, 875, 876, 891, 910, 925, 928, 930, 931, 932, 934, 936, 937, 945, 952, 959, 961, 972, 978, 984, 992, 1000, 1004, 1006, 1008, 1012, 1015, 1016, 1022, 1023, 1025, 1026, 1029, 1032, 1033, 1035, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1055, 1058, 1061, 1064, 1066, 1067, 1068, 1069, 1076, 1080, 1083, 1086, 1089, 1090, 1096, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1110, 1116, 1118, 1119, 1121, 1132, 1133, 1136, 1137, 1138, 1140, 1144, 1145, 1147, 1149, 1150, 1154, 1156, 1158, 1159, 1167, 1177, 1180, 1187, 1188, 1212, 1213, 1214, 1215, 1217, 1221, 1224, 1226, 1232, 1233, 1234, 1237, 1241, 1243, 1248, 1250, 1261, 1265, 1266, 1273, 1277, 1280], "half": [8, 23, 192, 193, 194, 253, 386, 496, 541, 870, 936, 982, 1067, 1105], "heart": [8, 19, 25, 53, 187, 541, 870, 1214], "split": [8, 211, 214, 247, 251, 256, 257, 260, 263, 264, 266, 271, 275, 281, 289, 292, 304, 309, 311, 325, 331, 347, 354, 359, 365, 369, 382, 395, 404, 488, 512, 555, 626, 1105, 1214], "pimp": 8, "elabor": [8, 203, 267, 277, 490, 540, 936], "namespac": [8, 223, 260, 266, 273, 276, 279, 283, 294, 304, 513, 554, 557, 572, 608, 609, 610, 611, 612, 614, 624, 625, 643, 664, 672, 677, 678, 679, 680, 681, 687, 688, 690, 691, 694, 695, 696, 700, 715, 720, 731, 732, 749, 757, 765, 800, 822, 825, 826, 830, 835, 839, 934, 1037, 1040, 1042, 1061, 1063, 1115], "__init__": [8, 49, 210, 211, 222, 224, 227, 229, 247, 250, 251, 263, 264, 266, 273, 276, 279, 283, 289, 292, 301, 304, 311, 321, 325, 343, 347, 365, 369, 512, 1105, 1106, 1107, 1115, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1241], "py": [8, 19, 27, 49, 52, 53, 173, 174, 177, 210, 211, 214, 222, 223, 224, 227, 228, 230, 232, 242, 245, 251, 257, 260, 264, 266, 267, 270, 271, 274, 276, 277, 279, 280, 282, 283, 289, 291, 303, 309, 310, 311, 319, 320, 324, 325, 330, 341, 342, 347, 360, 368, 369, 380, 382, 386, 389, 404, 512, 513, 803, 934, 1069, 1071, 1105, 1108, 1110, 1111, 1115, 1116, 1118, 1134, 1135, 1137, 1143, 1160, 1163, 1164, 1165, 1166, 1169, 1170, 1172, 1173, 1176, 1178, 1183, 1187, 1189, 1191, 1193, 1194, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1210, 1211, 1216, 1224, 1228, 1230, 1241, 1242], "__all__": [8, 279, 283], "etc": [8, 10, 49, 89, 113, 149, 155, 180, 193, 197, 208, 209, 213, 220, 227, 230, 234, 235, 237, 240, 241, 249, 251, 252, 254, 258, 261, 263, 264, 266, 270, 271, 274, 280, 281, 282, 283, 285, 286, 288, 290, 293, 303, 304, 307, 310, 311, 313, 321, 323, 324, 326, 329, 330, 346, 347, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 372, 404, 409, 412, 422, 444, 449, 505, 526, 529, 541, 545, 557, 640, 723, 757, 797, 803, 833, 852, 862, 866, 868, 871, 873, 874, 875, 876, 887, 891, 894, 909, 910, 913, 915, 916, 917, 918, 919, 920, 921, 922, 925, 937, 943, 957, 984, 996, 1006, 1007, 1015, 1016, 1019, 1020, 1021, 1026, 1032, 1050, 1061, 1076, 1077, 1081, 1083, 1086, 1105, 1107, 1131, 1154, 1158, 1181, 1233, 1264, 1267], "user": [8, 10, 18, 34, 40, 49, 52, 73, 90, 91, 99, 100, 113, 119, 136, 146, 149, 156, 157, 162, 164, 173, 174, 177, 183, 191, 192, 193, 194, 196, 197, 199, 213, 219, 222, 223, 224, 227, 231, 238, 247, 250, 252, 254, 263, 269, 271, 276, 277, 279, 280, 282, 283, 286, 289, 291, 300, 301, 304, 307, 310, 311, 313, 321, 325, 328, 335, 336, 338, 342, 347, 353, 355, 359, 365, 371, 372, 377, 380, 389, 401, 404, 413, 468, 499, 510, 512, 514, 520, 521, 526, 540, 541, 548, 558, 575, 576, 610, 626, 651, 652, 658, 664, 709, 713, 725, 727, 728, 729, 730, 737, 738, 759, 764, 801, 815, 834, 846, 848, 857, 858, 869, 870, 871, 875, 878, 879, 880, 882, 884, 886, 887, 891, 916, 920, 922, 928, 929, 943, 945, 955, 957, 982, 984, 997, 998, 1006, 1012, 1019, 1025, 1026, 1029, 1031, 1050, 1063, 1068, 1069, 1080, 1083, 1098, 1100, 1101, 1102, 1105, 1122, 1123, 1160, 1169, 1170, 1174, 1175, 1187, 1188, 1194, 1199, 1201, 1204, 1206, 1219, 1224, 1227, 1231, 1234, 1243, 1250, 1258, 1269], "import": [8, 49, 174, 185, 194, 199, 202, 211, 212, 213, 214, 223, 224, 227, 229, 230, 235, 239, 241, 242, 243, 251, 255, 256, 257, 262, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 295, 296, 301, 304, 308, 309, 310, 311, 313, 315, 321, 325, 331, 336, 339, 343, 347, 353, 358, 359, 365, 369, 385, 386, 387, 397, 399, 426, 442, 512, 518, 519, 522, 541, 672, 689, 750, 783, 801, 809, 810, 846, 873, 891, 928, 931, 934, 966, 984, 1012, 1024, 1060, 1071, 1082, 1104, 1105, 1106, 1108, 1116, 1118, 1120, 1126, 1127, 1130, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1148, 1152, 1160, 1163, 1164, 1197, 1204, 1205, 1206, 1208, 1211, 1213, 1216, 1219, 1220, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1236, 1241, 1242, 1248, 1266, 1268, 1278], "pythonpath": [8, 27, 47, 223, 309, 1115, 1164], "goto": [8, 465, 1080], "orgi": [8, 514, 755], "perspect": [8, 25, 199, 220], "alwai": [8, 30, 69, 111, 159, 161, 173, 194, 204, 220, 227, 250, 272, 283, 309, 310, 313, 355, 374, 381, 382, 385, 396, 404, 409, 426, 444, 470, 471, 483, 495, 496, 500, 501, 503, 504, 514, 515, 524, 532, 560, 570, 600, 649, 655, 660, 664, 683, 686, 736, 749, 751, 755, 763, 768, 800, 828, 833, 837, 841, 845, 848, 856, 891, 892, 934, 936, 937, 943, 961, 980, 984, 989, 1019, 1025, 1031, 1066, 1069, 1080, 1085, 1096, 1101, 1107, 1135, 1139, 1153, 1208, 1213, 1214, 1215, 1241, 1242, 1258, 1262, 1268], "valgrind": [8, 86, 139, 218, 252, 374, 422, 498, 503, 505, 554, 620, 630, 632, 640, 643, 658, 801, 806, 844, 845, 1255, 1256], "supervis": [8, 1215], "hack": [8, 40, 48, 50, 86, 131, 174, 190, 214, 218, 223, 227, 228, 252, 253, 267, 269, 277, 288, 295, 296, 297, 298, 306, 318, 319, 327, 328, 335, 338, 342, 355, 356, 371, 372, 374, 375, 381, 382, 383, 384, 385, 386, 404, 408, 412, 413, 415, 422, 470, 540, 554, 594, 626, 667, 682, 683, 703, 783, 799, 801, 802, 803, 809, 811, 821, 823, 844, 851, 886, 887, 1036, 1094, 1132, 1229, 1234, 1241, 1257, 1258, 1260, 1262, 1268, 1269, 1271, 1272], "someth": [8, 30, 42, 67, 72, 73, 118, 126, 142, 159, 181, 191, 192, 194, 195, 197, 199, 203, 212, 219, 223, 231, 239, 241, 242, 243, 253, 263, 267, 274, 289, 292, 316, 318, 335, 338, 355, 373, 383, 384, 399, 461, 462, 476, 529, 550, 572, 605, 607, 643, 654, 658, 662, 665, 672, 696, 734, 735, 736, 744, 750, 756, 763, 793, 794, 795, 801, 810, 824, 831, 837, 846, 848, 903, 928, 931, 934, 936, 937, 945, 957, 972, 980, 984, 986, 989, 1004, 1020, 1021, 1029, 1031, 1032, 1042, 1053, 1064, 1066, 1067, 1068, 1080, 1096, 1103, 1105, 1106, 1108, 1112, 1129, 1136, 1138, 1143, 1153, 1159, 1191, 1215, 1266], "malloc": [8, 218, 483, 484, 497, 632, 970, 1019, 1081, 1083, 1255], "function": [8, 25, 37, 48, 49, 50, 67, 69, 71, 86, 99, 100, 113, 114, 131, 134, 139, 142, 161, 168, 174, 192, 194, 203, 210, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 242, 243, 246, 248, 249, 251, 252, 254, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 272, 274, 275, 276, 277, 280, 281, 282, 284, 285, 286, 290, 293, 294, 301, 303, 305, 307, 309, 310, 312, 313, 316, 318, 319, 320, 321, 323, 324, 326, 329, 330, 331, 337, 344, 346, 347, 354, 360, 366, 370, 375, 377, 380, 382, 383, 387, 389, 399, 400, 406, 407, 409, 422, 425, 426, 432, 435, 439, 440, 441, 446, 451, 455, 464, 466, 467, 469, 471, 476, 478, 479, 482, 483, 484, 487, 490, 491, 493, 500, 504, 508, 511, 523, 524, 530, 537, 544, 553, 558, 570, 591, 595, 607, 610, 611, 612, 624, 637, 643, 652, 655, 658, 660, 661, 662, 668, 676, 678, 720, 721, 722, 732, 737, 738, 740, 744, 748, 750, 755, 756, 759, 763, 770, 782, 783, 784, 786, 787, 788, 797, 798, 801, 803, 805, 806, 807, 810, 821, 826, 827, 828, 831, 835, 846, 934, 948, 955, 968, 972, 978, 984, 986, 1000, 1003, 1004, 1016, 1018, 1025, 1033, 1050, 1051, 1052, 1058, 1061, 1066, 1081, 1083, 1092, 1102, 1109, 1112, 1113, 1114, 1115, 1123, 1131, 1133, 1136, 1137, 1141, 1143, 1166, 1170, 1173, 1174, 1179, 1180, 1181, 1186, 1192, 1194, 1202, 1204, 1206, 1208, 1213, 1224, 1237, 1241, 1253, 1258, 1260, 1261, 1273, 1278, 1282], "seomth": 8, "error": [8, 14, 33, 77, 86, 114, 118, 119, 130, 139, 161, 171, 173, 191, 192, 193, 194, 197, 198, 210, 213, 221, 224, 227, 230, 237, 248, 252, 258, 260, 263, 267, 268, 269, 273, 276, 279, 283, 286, 288, 291, 300, 301, 304, 307, 310, 313, 324, 325, 338, 343, 373, 382, 387, 389, 404, 409, 411, 415, 433, 436, 438, 445, 449, 463, 464, 470, 476, 477, 479, 492, 493, 494, 497, 514, 515, 517, 519, 520, 522, 528, 529, 532, 534, 536, 541, 543, 544, 546, 551, 554, 574, 575, 576, 588, 607, 626, 643, 650, 652, 653, 657, 658, 659, 660, 662, 664, 672, 675, 680, 704, 728, 735, 747, 748, 755, 759, 761, 763, 764, 797, 801, 810, 812, 813, 814, 815, 825, 826, 827, 828, 830, 831, 835, 837, 845, 846, 848, 849, 850, 871, 874, 928, 936, 940, 947, 961, 972, 976, 980, 984, 1000, 1006, 1018, 1020, 1021, 1022, 1023, 1025, 1033, 1041, 1042, 1043, 1046, 1047, 1053, 1061, 1066, 1067, 1076, 1080, 1081, 1085, 1086, 1096, 1101, 1107, 1137, 1138, 1149, 1150, 1154, 1158, 1160, 1161, 1181, 1208, 1215, 1236, 1241, 1243, 1248, 1258, 1272], "path": [8, 86, 88, 113, 119, 135, 154, 156, 162, 166, 168, 173, 185, 197, 219, 223, 231, 234, 251, 262, 263, 264, 268, 271, 275, 276, 279, 297, 306, 307, 327, 328, 331, 333, 334, 349, 350, 353, 360, 365, 370, 371, 372, 375, 376, 377, 378, 379, 380, 387, 389, 390, 395, 397, 404, 409, 470, 506, 512, 514, 517, 519, 520, 525, 529, 532, 542, 543, 607, 608, 672, 843, 856, 876, 891, 892, 900, 904, 911, 948, 961, 974, 984, 1015, 1025, 1035, 1061, 1063, 1084, 1086, 1098, 1105, 1115, 1132, 1135, 1197, 1236, 1241, 1243, 1251, 1267, 1273], "cleanup": [8, 192, 210, 415, 649, 801, 815, 843, 1081, 1105, 1242], "obviou": [8, 44, 108, 199, 212, 273, 283, 310, 313, 373, 384, 401, 471, 490, 512, 607, 649, 739, 745, 751, 759, 783, 801, 810, 844, 1025, 1066, 1103, 1139, 1150, 1259], "lead": [8, 99, 100, 103, 107, 118, 192, 194, 198, 199, 215, 252, 279, 283, 307, 325, 345, 430, 438, 448, 514, 529, 722, 735, 763, 856, 870, 936, 984, 1066, 1067, 1076, 1077, 1096, 1123, 1149, 1160, 1170, 1221], "sever": [8, 76, 113, 192, 251, 252, 468, 557, 562, 720, 729, 887, 928, 982, 1066, 1107, 1133, 1144, 1261, 1269], "code": [8, 10, 15, 20, 27, 29, 40, 42, 49, 53, 54, 60, 62, 69, 74, 92, 93, 97, 103, 106, 113, 130, 136, 137, 139, 142, 154, 164, 166, 172, 175, 176, 182, 191, 192, 193, 194, 195, 198, 199, 209, 211, 214, 215, 216, 218, 219, 220, 223, 226, 227, 228, 230, 232, 237, 242, 243, 247, 251, 252, 253, 258, 260, 261, 263, 266, 269, 274, 276, 277, 279, 280, 288, 298, 300, 303, 307, 309, 310, 313, 316, 318, 321, 323, 324, 325, 329, 330, 331, 334, 335, 338, 341, 342, 346, 350, 351, 352, 353, 355, 356, 357, 358, 363, 367, 368, 375, 381, 383, 384, 385, 386, 387, 389, 390, 399, 404, 409, 421, 423, 430, 432, 436, 440, 446, 460, 466, 471, 487, 488, 492, 494, 496, 502, 503, 505, 506, 509, 522, 523, 524, 525, 526, 529, 532, 537, 538, 540, 541, 544, 546, 548, 549, 550, 552, 553, 554, 557, 558, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 604, 606, 607, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 629, 631, 632, 634, 635, 637, 638, 640, 641, 643, 644, 646, 647, 649, 650, 651, 652, 654, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 675, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 713, 720, 724, 727, 730, 734, 735, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 756, 759, 761, 763, 764, 765, 766, 768, 770, 780, 782, 784, 786, 787, 788, 789, 792, 793, 794, 795, 797, 800, 801, 803, 804, 805, 806, 807, 811, 812, 813, 815, 821, 822, 824, 825, 826, 827, 828, 830, 831, 834, 839, 844, 845, 847, 848, 849, 850, 851, 870, 897, 928, 936, 937, 943, 948, 961, 976, 982, 984, 989, 996, 1000, 1020, 1021, 1026, 1037, 1040, 1042, 1043, 1046, 1047, 1053, 1057, 1066, 1067, 1071, 1073, 1074, 1076, 1078, 1080, 1082, 1083, 1085, 1086, 1087, 1094, 1096, 1107, 1108, 1110, 1111, 1112, 1116, 1118, 1127, 1129, 1132, 1133, 1135, 1136, 1142, 1143, 1144, 1150, 1154, 1155, 1156, 1164, 1184, 1188, 1210, 1223, 1224, 1233, 1241, 1242, 1244, 1248, 1249, 1250, 1253, 1254, 1258, 1271, 1274, 1276, 1281], "duplic": [8, 29, 36, 86, 114, 118, 130, 174, 211, 224, 269, 277, 287, 309, 373, 389, 430, 432, 493, 494, 557, 616, 624, 637, 658, 664, 675, 750, 779, 874, 991, 1031, 1034, 1066, 1191, 1241, 1243], "when": [8, 15, 17, 30, 49, 64, 69, 99, 100, 121, 126, 131, 146, 174, 184, 185, 191, 192, 193, 194, 197, 199, 208, 220, 223, 229, 252, 253, 260, 264, 266, 267, 269, 276, 277, 279, 282, 283, 296, 298, 307, 315, 316, 318, 325, 333, 349, 356, 382, 384, 387, 390, 395, 404, 415, 422, 428, 436, 438, 444, 449, 460, 467, 471, 486, 491, 492, 493, 494, 495, 500, 510, 512, 516, 524, 529, 532, 534, 537, 538, 541, 543, 549, 550, 555, 574, 576, 607, 608, 652, 654, 655, 658, 665, 687, 703, 722, 725, 730, 734, 736, 739, 750, 753, 756, 764, 765, 766, 770, 797, 800, 801, 803, 810, 813, 817, 819, 822, 824, 825, 830, 835, 841, 845, 846, 848, 863, 864, 866, 870, 873, 875, 887, 891, 913, 925, 934, 936, 937, 952, 955, 961, 966, 978, 980, 982, 984, 998, 1012, 1016, 1020, 1021, 1025, 1028, 1029, 1041, 1046, 1056, 1058, 1064, 1066, 1068, 1069, 1071, 1080, 1081, 1083, 1085, 1101, 1105, 1106, 1107, 1112, 1116, 1119, 1125, 1127, 1132, 1135, 1138, 1139, 1141, 1143, 1148, 1149, 1150, 1160, 1200, 1216, 1221, 1226, 1236, 1241, 1243, 1250, 1258, 1259, 1273], "you": [8, 30, 45, 48, 50, 98, 111, 113, 114, 118, 119, 121, 124, 126, 130, 136, 139, 154, 159, 161, 166, 172, 173, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 206, 207, 211, 212, 213, 215, 219, 220, 223, 227, 229, 230, 231, 243, 248, 250, 251, 252, 253, 260, 263, 266, 267, 269, 273, 274, 276, 277, 279, 283, 291, 300, 307, 310, 313, 316, 318, 320, 324, 346, 355, 374, 385, 390, 395, 401, 404, 407, 409, 412, 434, 435, 448, 464, 490, 494, 510, 523, 524, 525, 529, 532, 572, 591, 592, 593, 594, 598, 601, 604, 605, 607, 640, 651, 652, 658, 662, 665, 666, 668, 669, 683, 705, 713, 724, 727, 728, 732, 744, 750, 794, 795, 797, 801, 803, 808, 810, 815, 824, 837, 856, 857, 858, 861, 862, 866, 870, 871, 877, 881, 883, 885, 891, 892, 893, 895, 896, 897, 898, 902, 903, 928, 931, 934, 936, 937, 957, 959, 976, 984, 989, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1020, 1022, 1026, 1031, 1033, 1050, 1051, 1052, 1053, 1054, 1058, 1066, 1083, 1084, 1085, 1086, 1088, 1092, 1096, 1099, 1100, 1103, 1108, 1118, 1120, 1132, 1136, 1139, 1152, 1158, 1166, 1174, 1177, 1192, 1196, 1197, 1206, 1208, 1214, 1221, 1224, 1230, 1241, 1242, 1243, 1250, 1253, 1258, 1263, 1265, 1266, 1269, 1271, 1277, 1278], "void": [8, 29, 31, 42, 45, 96, 108, 110, 118, 122, 124, 126, 130, 194, 195, 203, 234, 252, 264, 374, 404, 425, 426, 428, 432, 434, 436, 440, 446, 450, 464, 466, 467, 468, 469, 471, 474, 476, 477, 480, 483, 484, 486, 487, 493, 494, 497, 514, 540, 549, 550, 551, 554, 557, 561, 570, 579, 580, 584, 585, 588, 589, 590, 592, 604, 606, 607, 608, 631, 643, 650, 652, 653, 654, 655, 658, 659, 660, 661, 662, 664, 665, 672, 678, 682, 691, 705, 720, 721, 731, 733, 742, 746, 747, 748, 751, 768, 770, 772, 773, 775, 776, 777, 778, 779, 790, 797, 800, 801, 803, 804, 805, 806, 808, 809, 812, 815, 817, 818, 821, 822, 824, 825, 827, 828, 830, 831, 834, 835, 837, 839, 843, 844, 845, 846, 849, 868, 888, 945, 948, 955, 961, 964, 966, 968, 970, 978, 980, 989, 994, 998, 1004, 1017, 1021, 1022, 1023, 1025, 1035, 1042, 1047, 1051, 1053, 1055, 1057, 1061, 1067, 1073, 1076, 1077, 1080, 1081, 1083, 1086, 1096, 1100, 1102, 1253], "f": [8, 18, 25, 30, 49, 52, 98, 113, 125, 139, 166, 174, 183, 193, 194, 195, 203, 214, 224, 229, 230, 235, 236, 239, 241, 247, 248, 250, 251, 257, 259, 260, 263, 264, 266, 270, 272, 273, 276, 279, 283, 286, 288, 290, 292, 300, 301, 304, 308, 311, 321, 325, 330, 332, 339, 343, 347, 354, 359, 365, 369, 396, 398, 400, 415, 440, 445, 455, 457, 466, 469, 474, 493, 494, 496, 500, 504, 512, 525, 534, 549, 655, 659, 674, 751, 763, 768, 804, 808, 815, 817, 839, 848, 849, 856, 868, 875, 891, 910, 918, 920, 921, 934, 936, 937, 943, 948, 1006, 1026, 1028, 1069, 1071, 1092, 1096, 1099, 1103, 1105, 1106, 1107, 1108, 1120, 1122, 1124, 1125, 1128, 1129, 1130, 1149, 1150, 1158, 1166, 1170, 1204, 1206, 1208, 1216, 1241], "int": [8, 33, 96, 99, 100, 103, 106, 109, 110, 126, 194, 203, 211, 213, 224, 230, 234, 239, 241, 242, 244, 247, 251, 252, 257, 260, 263, 264, 266, 269, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 310, 311, 313, 321, 325, 331, 339, 343, 347, 353, 358, 359, 365, 369, 382, 397, 399, 400, 425, 426, 428, 430, 432, 434, 435, 436, 438, 439, 440, 444, 445, 446, 448, 449, 450, 454, 464, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 479, 480, 481, 484, 486, 487, 491, 492, 493, 494, 495, 496, 500, 501, 554, 562, 569, 570, 574, 575, 576, 577, 580, 583, 584, 586, 588, 589, 590, 592, 594, 602, 604, 606, 608, 609, 610, 611, 612, 614, 624, 626, 631, 634, 640, 643, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 700, 703, 704, 705, 706, 707, 708, 709, 713, 715, 720, 721, 722, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 759, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 788, 797, 800, 801, 803, 804, 805, 806, 807, 808, 815, 817, 818, 821, 822, 824, 825, 826, 827, 830, 831, 833, 834, 835, 837, 839, 847, 848, 849, 850, 868, 888, 931, 934, 940, 943, 948, 950, 955, 961, 964, 966, 968, 972, 976, 978, 980, 989, 994, 1001, 1017, 1019, 1021, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1042, 1043, 1047, 1051, 1053, 1055, 1057, 1063, 1067, 1070, 1071, 1073, 1076, 1077, 1080, 1081, 1083, 1086, 1096, 1100, 1102, 1127, 1138, 1139, 1147, 1148, 1150, 1153, 1159, 1160, 1176, 1199, 1201, 1204, 1205, 1248, 1253], "b": [8, 18, 19, 25, 49, 96, 103, 107, 110, 170, 176, 195, 210, 211, 212, 214, 224, 229, 234, 239, 241, 244, 247, 250, 257, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 377, 396, 398, 399, 400, 435, 443, 445, 454, 470, 484, 487, 500, 525, 532, 650, 652, 666, 667, 668, 669, 674, 751, 762, 763, 764, 790, 797, 815, 824, 830, 848, 850, 861, 874, 891, 913, 919, 920, 934, 936, 937, 984, 1042, 1053, 1066, 1070, 1100, 1106, 1115, 1118, 1130, 1138, 1139, 1145, 1148, 1150, 1152, 1153, 1158, 1221, 1224, 1236, 1264], "return": [8, 14, 49, 96, 103, 106, 109, 110, 191, 193, 194, 195, 199, 203, 210, 211, 214, 224, 228, 230, 232, 234, 239, 241, 242, 244, 247, 250, 251, 252, 256, 257, 260, 263, 264, 266, 269, 271, 273, 276, 279, 283, 286, 289, 293, 294, 301, 304, 309, 311, 315, 321, 325, 336, 339, 342, 343, 347, 353, 360, 365, 369, 384, 399, 400, 425, 426, 428, 432, 434, 436, 445, 454, 464, 470, 476, 477, 479, 486, 487, 490, 491, 493, 494, 496, 500, 512, 519, 525, 544, 548, 549, 550, 551, 554, 557, 560, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 594, 601, 602, 606, 607, 610, 626, 634, 640, 643, 650, 651, 652, 654, 655, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 672, 674, 675, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 703, 704, 705, 706, 707, 708, 709, 715, 724, 725, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 747, 748, 749, 750, 751, 756, 759, 761, 762, 763, 764, 765, 766, 768, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 786, 787, 788, 789, 790, 793, 794, 795, 797, 800, 801, 803, 804, 805, 806, 807, 809, 810, 819, 821, 822, 824, 825, 826, 827, 830, 831, 835, 837, 839, 843, 844, 846, 847, 848, 868, 888, 934, 940, 947, 955, 961, 966, 974, 976, 998, 1000, 1004, 1017, 1019, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1037, 1040, 1041, 1042, 1043, 1047, 1050, 1051, 1061, 1063, 1067, 1073, 1076, 1077, 1080, 1081, 1083, 1086, 1096, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1120, 1124, 1125, 1127, 1128, 1129, 1150, 1152, 1154, 1155, 1156, 1159, 1166, 1182, 1184, 1188, 1191, 1192, 1199, 1201, 1204, 1227, 1228, 1230, 1232, 1241, 1248, 1253], "alloc": [8, 121, 194, 195, 211, 213, 252, 260, 263, 266, 276, 279, 301, 438, 467, 483, 488, 491, 494, 497, 554, 639, 641, 655, 657, 658, 664, 683, 688, 695, 700, 716, 738, 740, 751, 761, 764, 797, 801, 806, 810, 813, 824, 835, 845, 846, 868, 874, 940, 943, 945, 970, 972, 986, 989, 1021, 1022, 1023, 1045, 1049, 1052, 1114, 1166], "variabl": [8, 76, 78, 86, 93, 99, 100, 168, 193, 194, 203, 210, 212, 213, 219, 223, 224, 227, 228, 229, 230, 232, 235, 236, 237, 242, 243, 249, 251, 252, 254, 258, 261, 262, 264, 265, 266, 269, 270, 272, 274, 280, 281, 282, 283, 285, 287, 288, 290, 294, 297, 302, 303, 304, 306, 307, 310, 313, 316, 320, 322, 323, 324, 326, 327, 328, 329, 330, 336, 341, 342, 343, 345, 346, 348, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 370, 371, 372, 377, 380, 381, 404, 406, 407, 425, 427, 428, 436, 441, 449, 456, 460, 461, 464, 466, 470, 472, 473, 476, 478, 483, 486, 488, 490, 496, 497, 500, 514, 516, 517, 520, 522, 524, 526, 530, 531, 534, 536, 561, 569, 575, 584, 589, 594, 635, 640, 655, 662, 663, 670, 682, 722, 748, 764, 766, 795, 797, 798, 801, 803, 810, 813, 815, 850, 861, 865, 868, 892, 953, 972, 984, 1046, 1050, 1053, 1057, 1058, 1059, 1064, 1066, 1083, 1096, 1101, 1103, 1105, 1108, 1115, 1131, 1135, 1137, 1146, 1148, 1150, 1154, 1159, 1168, 1170, 1171, 1215, 1221, 1230, 1236, 1259, 1261, 1267, 1271, 1278, 1282], "filenam": [8, 29, 37, 42, 45, 191, 210, 214, 239, 257, 260, 263, 264, 266, 271, 276, 279, 289, 304, 307, 320, 321, 325, 353, 359, 369, 377, 396, 512, 526, 529, 591, 594, 608, 797, 839, 856, 857, 921, 984, 1026, 1029, 1030, 1031, 1032, 1033, 1037, 1040, 1042, 1043, 1076, 1105, 1115, 1160, 1166, 1178, 1187, 1189, 1193, 1199, 1201], "getenv": [8, 589, 1063], "fopen": 8, "read": [8, 30, 34, 40, 42, 43, 44, 53, 72, 74, 113, 134, 138, 141, 142, 149, 155, 173, 174, 191, 192, 193, 194, 195, 197, 199, 202, 203, 206, 219, 223, 227, 228, 230, 232, 238, 248, 251, 258, 261, 264, 266, 267, 269, 271, 277, 279, 280, 285, 286, 288, 291, 298, 299, 300, 303, 307, 309, 311, 317, 321, 323, 324, 325, 328, 329, 330, 347, 351, 352, 353, 355, 356, 358, 359, 363, 364, 365, 367, 368, 374, 375, 377, 381, 382, 383, 384, 389, 390, 404, 408, 410, 415, 433, 434, 441, 449, 486, 488, 490, 492, 494, 497, 506, 511, 513, 519, 523, 525, 547, 555, 575, 591, 607, 608, 631, 637, 651, 652, 654, 657, 660, 662, 709, 713, 725, 728, 759, 764, 793, 797, 811, 824, 831, 850, 856, 857, 858, 861, 868, 873, 874, 875, 876, 878, 879, 882, 891, 892, 925, 931, 934, 936, 937, 943, 957, 968, 984, 986, 1012, 1017, 1019, 1020, 1022, 1023, 1026, 1029, 1032, 1034, 1035, 1037, 1039, 1040, 1041, 1047, 1056, 1058, 1066, 1067, 1073, 1076, 1077, 1080, 1081, 1083, 1101, 1107, 1108, 1123, 1126, 1128, 1136, 1144, 1167, 1178, 1187, 1197, 1202, 1203, 1206, 1208, 1214, 1216, 1224, 1231, 1269], "onli": [8, 29, 30, 78, 97, 99, 100, 113, 114, 118, 121, 131, 137, 138, 139, 161, 166, 174, 187, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 211, 212, 219, 223, 227, 229, 230, 250, 253, 260, 263, 266, 269, 270, 271, 273, 276, 277, 279, 280, 282, 283, 288, 290, 291, 292, 303, 304, 307, 309, 310, 316, 320, 323, 325, 329, 330, 333, 342, 349, 351, 357, 358, 363, 364, 367, 368, 373, 374, 375, 376, 377, 379, 382, 385, 386, 387, 395, 398, 412, 419, 422, 428, 434, 436, 437, 438, 440, 445, 446, 448, 453, 460, 461, 464, 466, 468, 469, 470, 471, 487, 488, 492, 493, 494, 495, 496, 505, 510, 512, 515, 521, 522, 524, 525, 528, 529, 532, 536, 537, 540, 541, 544, 546, 549, 550, 551, 553, 561, 569, 570, 572, 574, 575, 576, 588, 589, 604, 605, 608, 611, 612, 626, 637, 650, 651, 652, 653, 655, 657, 659, 660, 662, 664, 665, 671, 685, 687, 703, 705, 709, 722, 724, 727, 728, 735, 737, 740, 742, 759, 764, 766, 770, 782, 786, 788, 789, 800, 801, 803, 806, 813, 815, 816, 819, 821, 822, 825, 827, 834, 835, 839, 840, 841, 845, 846, 848, 850, 855, 856, 857, 858, 866, 869, 873, 875, 876, 881, 887, 891, 892, 913, 921, 928, 929, 930, 934, 936, 937, 940, 942, 945, 948, 953, 964, 970, 980, 984, 989, 992, 997, 1001, 1006, 1016, 1021, 1022, 1025, 1027, 1028, 1029, 1033, 1035, 1039, 1041, 1042, 1043, 1046, 1047, 1049, 1050, 1053, 1058, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1076, 1077, 1080, 1081, 1083, 1084, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1116, 1120, 1122, 1125, 1127, 1128, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1148, 1153, 1154, 1158, 1160, 1164, 1172, 1181, 1183, 1184, 1187, 1188, 1194, 1208, 1213, 1214, 1215, 1217, 1220, 1228, 1233, 1234, 1241, 1247, 1248, 1250, 1253, 1258, 1261, 1262, 1265, 1266, 1267, 1271, 1273, 1277], "some": [8, 95, 164, 173, 174, 184, 191, 192, 193, 194, 196, 199, 202, 203, 212, 215, 220, 223, 227, 230, 232, 243, 244, 250, 252, 260, 266, 267, 272, 278, 279, 283, 295, 296, 298, 304, 307, 310, 311, 313, 317, 319, 320, 327, 345, 346, 352, 353, 355, 371, 374, 375, 383, 385, 386, 422, 445, 479, 490, 506, 524, 532, 549, 554, 626, 651, 653, 672, 690, 703, 707, 724, 761, 764, 815, 819, 821, 823, 835, 844, 846, 868, 873, 928, 936, 937, 943, 948, 957, 972, 980, 984, 1001, 1003, 1026, 1029, 1064, 1066, 1067, 1069, 1077, 1107, 1136, 1152, 1158, 1205, 1241, 1259, 1261, 1272, 1273, 1277, 1278, 1280], "bullshit": [8, 235, 247, 283, 541, 835], "everyon": [8, 161, 192, 197, 227, 510, 728, 827, 878, 879, 889, 1066, 1069, 1265], "get": [8, 42, 49, 54, 86, 99, 100, 146, 164, 185, 192, 194, 195, 202, 203, 206, 210, 223, 224, 227, 229, 234, 241, 242, 243, 250, 252, 253, 260, 263, 266, 267, 269, 272, 273, 276, 279, 286, 292, 296, 298, 301, 304, 307, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 386, 399, 404, 407, 409, 422, 423, 449, 494, 503, 525, 532, 538, 550, 554, 570, 579, 584, 660, 667, 733, 747, 750, 770, 776, 788, 790, 797, 800, 801, 812, 821, 841, 844, 845, 846, 847, 850, 863, 864, 866, 870, 871, 891, 937, 945, 950, 957, 984, 986, 1000, 1003, 1012, 1015, 1021, 1022, 1023, 1038, 1047, 1052, 1066, 1070, 1077, 1081, 1099, 1105, 1118, 1121, 1127, 1139, 1156, 1226, 1233, 1243, 1248, 1253, 1262, 1265, 1266, 1269, 1278], "point": [8, 21, 23, 25, 27, 47, 54, 78, 86, 95, 98, 101, 102, 103, 106, 111, 113, 131, 139, 158, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 211, 212, 213, 214, 218, 223, 227, 228, 229, 230, 232, 250, 252, 253, 260, 263, 266, 269, 276, 279, 284, 287, 309, 318, 325, 342, 343, 345, 369, 382, 384, 390, 410, 411, 412, 415, 425, 426, 427, 432, 438, 440, 442, 444, 448, 470, 473, 476, 479, 480, 483, 484, 494, 496, 537, 550, 553, 560, 561, 569, 592, 594, 606, 626, 627, 628, 651, 653, 655, 657, 658, 659, 661, 663, 666, 670, 681, 682, 690, 706, 707, 744, 750, 753, 756, 757, 759, 762, 764, 765, 770, 797, 800, 813, 835, 845, 848, 850, 859, 868, 870, 874, 875, 891, 928, 929, 930, 937, 980, 984, 1015, 1019, 1022, 1025, 1066, 1068, 1081, 1084, 1098, 1102, 1103, 1104, 1106, 1110, 1118, 1144, 1148, 1150, 1153, 1215, 1217, 1219, 1221, 1241, 1243, 1250, 1253, 1255, 1260], "unobvi": [8, 984], "best": [8, 17, 26, 35, 44, 118, 192, 193, 194, 203, 215, 272, 373, 374, 376, 379, 436, 468, 490, 497, 500, 501, 510, 525, 609, 653, 658, 742, 748, 822, 828, 837, 868, 891, 913, 929, 936, 937, 972, 974, 976, 980, 982, 1050, 1064, 1066, 1069, 1098, 1112, 1118, 1155, 1160, 1163, 1219, 1228], "resourc": [8, 69, 86, 99, 100, 146, 192, 194, 197, 208, 218, 253, 269, 310, 313, 318, 355, 356, 375, 381, 407, 415, 562, 626, 640, 651, 655, 656, 738, 740, 790, 806, 810, 813, 822, 843, 845, 846, 863, 864, 868, 869, 936, 968, 970, 978, 1021, 1022, 1023, 1050, 1064, 1066, 1068, 1105, 1158, 1265, 1268], "leaki": 8, "erron": [8, 497, 1170], "worst": [8, 192, 468, 534, 937, 1067, 1080, 1258, 1259], "extract": [8, 42, 86, 251, 277, 280, 285, 288, 300, 303, 323, 324, 329, 330, 351, 352, 358, 363, 364, 367, 368, 452, 471, 595, 626, 637, 764, 797, 856, 984, 997, 1098, 1123, 1145, 1202, 1203, 1204, 1205, 1214], "common": [8, 11, 189, 192, 248, 264, 265, 277, 283, 288, 359, 376, 379, 385, 387, 471, 480, 511, 606, 683, 744, 750, 782, 786, 797, 801, 855, 928, 929, 937, 1029, 1066, 1107, 1112, 1113, 1114, 1130, 1139, 1140, 1144, 1150, 1154, 1157, 1208, 1216, 1217, 1241, 1259, 1272], "hm": [8, 19, 49, 52, 231, 241, 260, 263, 266, 273, 396, 974, 1000, 1001, 1023, 1127, 1212, 1243, 1248, 1250], "end": [8, 10, 19, 24, 29, 95, 173, 190, 191, 194, 195, 197, 199, 202, 223, 224, 229, 230, 235, 239, 243, 263, 264, 266, 267, 269, 279, 283, 286, 289, 303, 304, 325, 331, 338, 343, 359, 365, 369, 395, 396, 432, 435, 439, 460, 476, 488, 492, 493, 494, 496, 499, 500, 503, 529, 553, 575, 576, 584, 585, 588, 589, 590, 640, 643, 655, 678, 680, 682, 683, 684, 686, 687, 689, 690, 691, 693, 694, 696, 700, 703, 708, 709, 715, 724, 725, 764, 768, 770, 773, 777, 800, 801, 803, 820, 822, 833, 834, 835, 837, 843, 844, 874, 875, 876, 891, 920, 924, 925, 934, 937, 976, 982, 984, 1000, 1021, 1022, 1023, 1025, 1031, 1056, 1066, 1076, 1110, 1130, 1134, 1136, 1143, 1146, 1150, 1154, 1158, 1228, 1231, 1233, 1236], "up": [8, 14, 19, 21, 22, 25, 30, 32, 40, 67, 111, 122, 126, 130, 154, 159, 166, 187, 191, 192, 193, 195, 197, 199, 202, 210, 211, 242, 248, 253, 258, 260, 264, 266, 276, 279, 291, 296, 298, 307, 316, 342, 355, 375, 384, 389, 407, 411, 417, 418, 484, 491, 500, 501, 506, 510, 517, 541, 554, 604, 605, 606, 607, 620, 643, 666, 667, 668, 669, 672, 740, 797, 803, 806, 822, 844, 845, 870, 891, 892, 910, 924, 928, 930, 934, 936, 937, 943, 947, 952, 953, 955, 966, 968, 976, 980, 984, 985, 1012, 1022, 1046, 1049, 1064, 1066, 1071, 1076, 1081, 1083, 1096, 1105, 1108, 1119, 1123, 1129, 1152, 1166, 1169, 1187, 1192, 1204, 1208, 1213, 1216, 1224, 1236, 1242, 1248, 1253, 1259, 1261], "sketch": [8, 118, 131, 159, 173, 195, 223, 230, 231, 243, 252, 253, 320, 342, 382, 408, 412, 473, 474, 484, 496, 800, 824, 941, 953, 1076], "clearest": 8, "ach": 8, "bad": [8, 30, 119, 191, 194, 201, 215, 223, 248, 254, 270, 271, 273, 282, 283, 298, 319, 320, 341, 355, 381, 385, 386, 449, 492, 496, 510, 525, 532, 671, 731, 739, 745, 747, 801, 836, 844, 848, 952, 964, 989, 992, 1016, 1017, 1046, 1051, 1053, 1057, 1058, 1080, 1100, 1105, 1107, 1120, 1121, 1132, 1139, 1150, 1181, 1208, 1258], "earliest": 8, "noth": [8, 30, 49, 118, 154, 174, 187, 191, 192, 194, 197, 202, 220, 231, 250, 263, 289, 342, 424, 463, 470, 494, 512, 529, 531, 544, 643, 724, 742, 749, 770, 801, 803, 806, 810, 821, 839, 862, 913, 928, 936, 937, 952, 961, 980, 982, 1020, 1022, 1046, 1053, 1076, 1081, 1108, 1115, 1127, 1148, 1150, 1156, 1241, 1248, 1250], "jump": [8, 32, 93, 159, 191, 460, 464, 643, 803, 806, 837, 870, 924, 1080, 1216], "outest": 8, "level": [8, 67, 136, 192, 193, 203, 260, 266, 276, 279, 300, 333, 349, 415, 438, 464, 470, 510, 516, 522, 532, 540, 541, 550, 558, 760, 797, 801, 824, 867, 928, 934, 966, 968, 980, 987, 996, 1012, 1016, 1085, 1094, 1107, 1115, 1127, 1148, 1158, 1184, 1188, 1217, 1220, 1230, 1236, 1268, 1269, 1271, 1272, 1273], "cleanup_stage1": 8, "42": [8, 29, 47, 119, 121, 208, 210, 211, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 445, 471, 473, 474, 476, 479, 487, 492, 494, 500, 517, 519, 520, 546, 549, 553, 570, 572, 601, 602, 606, 607, 608, 609, 610, 611, 612, 624, 631, 643, 650, 658, 659, 662, 664, 690, 693, 696, 703, 720, 725, 745, 747, 748, 749, 750, 751, 755, 756, 759, 762, 764, 765, 768, 782, 784, 786, 788, 793, 794, 795, 804, 815, 821, 824, 825, 835, 839, 848, 876, 913, 922, 930, 947, 1053, 1061, 1083, 1084, 1085, 1086, 1106, 1107, 1108, 1115, 1118, 1136, 1138, 1139, 1148, 1149, 1150, 1153, 1172, 1253], "screenplai": [9, 46, 194, 214, 218, 270, 282, 291, 309, 317, 319, 330, 338, 341, 342, 345, 346, 351, 352, 357, 358, 363, 364, 367, 368, 377, 380, 382, 384, 385, 387, 404, 511, 523, 537, 547, 554, 626, 629, 632, 635, 638, 641, 644, 647, 682, 683, 703, 801, 941, 944, 949, 954, 958, 960, 996, 999, 1002, 1005, 1074, 1078, 1082, 1151, 1238, 1245, 1249, 1251, 1254], "sieh": [10, 150, 152, 165, 208, 209, 210, 214, 218, 224, 235, 237, 240, 422], "dies": [10, 150, 152, 165, 200, 201, 208, 209, 210, 218, 224, 234, 235, 239, 247, 254, 271, 273, 279, 280, 283, 404, 409, 422, 1255, 1256, 1257, 1264, 1276], "einreichungsunterlagen": 10, "diesem": [10, 201, 234, 1255], "formular": 10, "projekten": [10, 1264], "mehrer": [10, 150, 152, 165], "projektpartn": 10, "muss": [10, 214, 224, 234, 239, 280, 404, 409, 1255, 1264], "partner": [10, 226, 422], "federf\u00fchrend": 10, "auftreten": 10, "projektleitung": 10, "projektabwicklung": 10, "seiten": 10, "f\u00f6rdergeb": 10, "erfolgtausschlie\u00dflich": 10, "federf\u00fchrenden": 10, "antragstel": 10, "s\u00e4mtlich": 10, "weiterenprojektpartn": 10, "innen": [10, 180], "sind": [10, 150, 152, 162, 165, 200, 201, 209, 210, 214, 218, 226, 235, 236, 241, 244, 247, 263, 280, 359, 404, 409, 422, 919, 920, 1069, 1255, 1256, 1257, 1264, 1275, 1276], "zus\u00e4tzlich": [10, 150, 152, 165, 200], "anzugeben": 10, "wenn": [10, 56, 180, 200, 201, 210, 218, 224, 226, 234, 235, 241, 244, 280, 286, 321, 919, 1255, 1275, 1276], "aufteilung": 10, "f\u00f6rdersumm": 10, "erfolgen": [10, 235], "soll": [10, 201, 226, 255, 294], "punkt": [10, 150, 152, 165, 201, 210, 226, 236, 280], "erfolgreichemf\u00f6rderantrag": 10, "wird": [10, 150, 152, 165, 200, 201, 208, 209, 210, 218, 224, 234, 235, 241, 244, 273, 359, 365, 369, 404, 409, 422, 1256, 1257, 1264, 1275, 1276], "anschluss": 10, "individuel": [10, 226], "f\u00f6rdervertrag": 10, "erstellt": 10, "derzuerkannten": 10, "direkt": [10, 218, 1255], "\u00fcberweisungen": 10, "f\u00f6rderraten": 10, "anteil": 10, "dieprojektpartn": 10, "fall": [10, 52, 150, 152, 165, 166, 201, 209, 223, 226, 234, 239, 283, 294, 385, 387, 452, 460, 598, 748, 770, 966, 1039, 1040, 1067, 1210, 1230], "allenprojektpartn": 10, "unterschreiben": 10, "verbindlich": 10, "vereinbart": 10, "privatperson": 10, "organis": [10, 252], "uni": 10, "contemporari": 10, "open": [10, 21, 22, 25, 29, 35, 36, 41, 49, 58, 103, 108, 109, 113, 131, 139, 191, 192, 195, 199, 208, 212, 214, 228, 230, 232, 241, 250, 251, 253, 257, 260, 263, 264, 266, 271, 274, 279, 286, 289, 291, 304, 307, 309, 311, 316, 318, 321, 325, 347, 353, 359, 365, 369, 396, 411, 449, 510, 512, 524, 543, 824, 839, 848, 857, 858, 867, 868, 870, 873, 875, 917, 934, 950, 978, 986, 1012, 1020, 1021, 1026, 1029, 1031, 1032, 1035, 1037, 1040, 1042, 1043, 1050, 1073, 1076, 1080, 1083, 1086, 1101, 1107, 1108, 1178, 1204, 1206, 1216, 1241, 1262, 1269], "wer": [10, 200], "unser": [10, 227, 235], "motiv": [10, 15, 86, 422, 870, 889, 1064, 1113, 1114], "300": [10, 210, 212, 224, 260, 263, 266, 271, 273, 279, 283, 286, 304, 325, 331, 347, 353, 359, 365, 369, 396, 426, 428, 430, 446, 470, 677, 678, 679, 680, 681, 683, 684, 685, 686, 700, 957], "zeichen": [10, 273], "ich": [10, 56, 178, 200, 201, 208, 209, 210, 214, 224, 234, 242, 273, 325, 404, 422, 1219, 1264, 1276], "einzelunternehm": 10, "lebe": 10, "einerseit": 10, "kleineren": [10, 150, 165], "gr\u00f6\u00dferen": 10, "andererseit": 10, "haupts\u00e4chlich": [10, 235], "unternehmen": 10, "halt": [10, 99, 100, 146, 162, 234, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 863, 864, 922, 937], "bringen": [10, 180], "schulungsunterlagen": 10, "deren": [10, 208, 230, 1257], "wartbarkeit": 10, "nichtverf\u00fcgbarkeit": 10, "problem": [10, 32, 44, 69, 96, 108, 113, 118, 164, 172, 185, 192, 199, 207, 210, 212, 214, 215, 221, 223, 224, 227, 228, 230, 232, 243, 247, 252, 269, 271, 277, 291, 296, 298, 309, 313, 316, 317, 319, 320, 328, 333, 334, 342, 345, 349, 350, 355, 356, 375, 376, 379, 381, 382, 384, 385, 387, 390, 411, 422, 449, 460, 470, 471, 474, 488, 494, 496, 512, 523, 529, 561, 576, 620, 626, 674, 687, 780, 792, 821, 822, 824, 870, 930, 984, 1069, 1094, 1096, 1100, 1105, 1110, 1112, 1115, 1116, 1127, 1139, 1153, 1204, 1208, 1210, 1214, 1233, 1241, 1242, 1259, 1262, 1265, 1273], "darstellt": 10, "wen": 10, "nutzen": 10, "400": [10, 194, 210, 224, 234, 263, 266, 308, 325, 343, 359, 369, 512, 700, 1066, 1166, 1168], "trainer": [10, 11, 48, 50, 54, 199, 207, 217, 218, 223, 235, 245, 296, 298, 316, 385, 387, 523, 541, 542, 605, 652, 837, 936, 1116, 1132, 1234, 1241, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "stellen": 10, "kursverlauf": 10, "vorhandenem": 10, "zusammen": [10, 150, 152, 165], "bereiten": [10, 234], "kursergebniss": 10, "editoren": 10, "kreieren": 10, "warten": 10, "kursmateri": 10, "endbenutz": 10, "konsumieren": 10, "kur": [10, 209, 211, 214, 226, 422, 1255, 1256, 1257, 1275], "auch": [10, 150, 152, 165, 200, 201, 210, 214, 224, 236, 239, 241, 247, 250, 255, 276, 280, 286, 311, 365, 399, 400, 422, 1255, 1256, 1264, 1275, 1276], "about": [10, 17, 29, 30, 31, 32, 33, 36, 49, 52, 53, 58, 64, 69, 72, 73, 86, 111, 113, 131, 154, 173, 174, 185, 190, 192, 193, 194, 196, 199, 206, 215, 219, 220, 223, 227, 228, 229, 230, 231, 232, 235, 242, 243, 248, 251, 252, 253, 254, 258, 260, 261, 264, 267, 268, 269, 270, 272, 274, 276, 277, 279, 280, 282, 284, 285, 288, 297, 300, 302, 303, 305, 306, 307, 313, 317, 318, 323, 324, 327, 329, 330, 332, 341, 342, 345, 346, 351, 352, 354, 356, 357, 360, 363, 364, 366, 367, 370, 371, 378, 380, 381, 384, 386, 406, 409, 415, 444, 449, 458, 460, 488, 491, 492, 494, 500, 504, 506, 510, 529, 534, 546, 550, 643, 652, 653, 675, 682, 748, 749, 750, 751, 761, 764, 797, 801, 806, 808, 812, 834, 839, 849, 850, 857, 858, 877, 894, 928, 934, 936, 937, 953, 955, 984, 994, 1003, 1016, 1020, 1026, 1047, 1050, 1066, 1068, 1103, 1110, 1112, 1119, 1120, 1127, 1131, 1139, 1150, 1158, 1207, 1208, 1215, 1222, 1224, 1229, 1236, 1241, 1250, 1259, 1270, 1273, 1279], "site": [10, 14, 26, 47, 175, 192, 204, 218, 219, 220, 224, 250, 260, 266, 276, 279, 342, 359, 387, 660, 664, 750, 870, 1066, 1212, 1228, 1230, 1236, 1243, 1250, 1276], "usecas": [10, 748, 825, 1016, 1130], "html": [10, 26, 27, 53, 173, 174, 198, 210, 218, 235, 245, 248, 251, 255, 258, 261, 264, 267, 283, 314, 369, 399, 520, 523, 824, 891, 913, 940, 955, 963, 1043, 1066, 1081, 1153, 1219], "gel\u00f6st": [10, 224], "500": [10, 234, 241, 260, 263, 266, 308, 353, 359, 369, 700, 928, 1023, 1166, 1168], "hierarchisch": 10, "gruppierung": 10, "einzelthemen": 10, "zuwenig": 10, "themen": [10, 216, 218], "bauen": [10, 1255, 1275], "aufeinand": [10, 919], "explizit": [10, 208, 218, 224, 234, 294, 321, 1255, 1256], "abh\u00e4ngigkeitsbeziehungen": [10, 1275], "fehlen": 10, "extrem": [10, 192, 250, 271, 279, 286, 289, 311, 404, 409, 471, 510, 682, 755, 837, 857, 858, 984, 1066, 1220, 1275], "verringert": 10, "zusammenarbeit": 10, "trainern": 10, "fehlend": [10, 210], "aggregierbarkeit": 10, "bzw": [10, 162, 180, 200, 208, 214, 218, 240, 422, 1264], "referenzierbarkeit": 10, "fremdunterlagen": 10, "analog": [10, 224, 1076, 1226], "librari": [10, 49, 54, 61, 63, 67, 74, 86, 92, 93, 95, 97, 99, 100, 113, 131, 137, 139, 143, 146, 150, 155, 162, 165, 192, 194, 203, 210, 212, 214, 219, 220, 221, 228, 230, 232, 251, 253, 260, 266, 276, 279, 283, 295, 296, 307, 309, 333, 334, 349, 350, 356, 375, 376, 377, 378, 379, 380, 381, 382, 405, 406, 407, 422, 425, 426, 435, 443, 466, 483, 493, 500, 506, 515, 516, 521, 522, 529, 534, 537, 542, 546, 555, 591, 594, 596, 608, 634, 649, 738, 757, 759, 761, 797, 833, 961, 1016, 1017, 1018, 1023, 1033, 1047, 1050, 1053, 1080, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1094, 1096, 1100, 1133, 1148, 1150, 1153, 1220, 1237, 1250, 1255, 1257, 1260, 1269, 1270, 1271, 1272, 1273, 1278], "anfangen": 10, "geben": [10, 1256, 1257], "trainingsunterlagen": 10, "ging": [10, 200, 422], "ja": [10, 180, 201, 224, 241, 244, 247, 260, 263, 292, 359], "funktioniert": [10, 224, 273], "projektergebni": 10, "basiert": [10, 294, 1256, 1275], "popul\u00e4ren": 10, "dokumentationstool": 10, "al": [10, 19, 86, 150, 152, 162, 165, 180, 200, 201, 208, 209, 210, 214, 216, 218, 226, 235, 236, 243, 245, 247, 255, 273, 274, 276, 284, 288, 330, 405, 422, 658, 845, 855, 892, 913, 919, 920, 1019, 1208, 1255, 1257, 1264], "verwendet": [10, 214, 218, 224, 244, 286, 365, 1255, 1264, 1275, 1276], "gestaltet": [10, 218], "eigentlich": [10, 210, 224, 1256], "kern": 10, "begleitet": [10, 226], "meinem": [10, 201, 209, 235, 920], "eigenen": [10, 1264], "schulungsmateri": 10, "damit": [10, 162, 200, 224, 254, 280, 404, 409, 422], "geht": [10, 178, 200, 201, 208, 210, 218, 224, 234, 235, 239, 244, 255, 276, 292, 365, 399, 422, 920], "quasi": [10, 150, 152, 165, 214, 218], "spin": [10, 822, 824, 868, 987], "off": [10, 52, 114, 121, 166, 191, 193, 194, 197, 202, 212, 223, 243, 286, 449, 452, 491, 499, 500, 515, 516, 529, 541, 597, 598, 603, 643, 750, 762, 764, 770, 801, 861, 887, 915, 928, 934, 937, 978, 989, 1031, 1040, 1058, 1066, 1069, 1076, 1136, 1154, 1189, 1213, 1266], "anwendbar": 10, "klarer": 10, "bezug": [10, 280], "f\u00f6rdervoraussetzung": 10, "bitt": [10, 200, 218, 224, 234, 235, 369], "gehen": 10, "folgenden": [10, 150, 152, 165, 218, 422, 920], "aber": [10, 24, 180, 201, 208, 210, 214, 224, 234, 235, 239, 242, 244, 273, 276, 279, 331, 422, 920, 1255, 1257, 1276], "ausschlie\u00dflich": 10, "jene": 10, "aspekt": [10, 1264], "denen": [10, 200], "sehr": [10, 24, 150, 152, 165, 200, 201, 214, 218, 224, 226, 234, 235, 239, 245, 276, 422, 1255, 1264, 1275, 1276], "klaren": 10, "mehrwert": 10, "hat": [10, 24, 150, 152, 165, 195, 200, 201, 208, 209, 210, 211, 214, 218, 224, 226, 234, 235, 239, 241, 245, 256, 276, 331, 343, 397, 404, 422, 747, 801, 1134, 1255, 1257, 1264, 1276], "technologi": [10, 263, 1067, 1083, 1166], "infrastruktur": [10, 1264], "sozial": 10, "gesellschaft": 10, "umwelt": 10, "wirtschaftlich": [10, 226], "oder": [10, 56, 150, 152, 165, 176, 180, 208, 214, 218, 224, 235, 236, 241, 255, 264, 273, 280, 891, 920, 1233, 1255, 1256, 1264, 1275, 1276], "wissenschaftlich": 10, "kooperationen": 10, "regionalpolitik": 10, "web": [10, 67, 199, 227, 230, 251, 300, 324, 346, 1066, 1208, 1215, 1221, 1224], "framework": [10, 54, 67, 208, 218, 227, 253, 269, 538, 605, 934, 937, 1234, 1241, 1242, 1276], "jeglich": 10, "art": [10, 19, 32, 1096, 1259], "konsistenzgecheckt": 10, "crossreferenc": 10, "\u00fcber": [10, 150, 152, 165, 180, 200, 201, 209, 210, 214, 218, 226, 235, 236, 240, 249, 254, 280, 405, 422, 1264], "webseiten": 10, "hinweg": [10, 235], "erm\u00f6glicht": [10, 226, 422], "gesellschaftlich": 10, "\u00f6ffentlich": 10, "verf\u00fcgbarkeit": 10, "erleichterung": 10, "machen": [10, 180, 200, 210, 214, 224, 273, 399, 422, 1256, 1257, 1276], "commun": [10, 49, 67, 70, 72, 76, 111, 146, 172, 182, 185, 192, 215, 223, 238, 307, 342, 382, 383, 401, 410, 411, 486, 529, 550, 821, 825, 863, 864, 928, 934, 936, 937, 943, 984, 996, 1020, 1025, 1049, 1050, 1059, 1066, 1067, 1070, 1081, 1116, 1205, 1224, 1258, 1259, 1261, 1262, 1266, 1268, 1270, 1271, 1272, 1279], "trainerinnen": 10, "kann": [10, 24, 162, 200, 201, 208, 214, 218, 224, 234, 247, 254, 294, 347, 404, 409, 422, 1255, 1257, 1264, 1276], "mehr": [10, 200, 208, 210, 234, 240, 260, 369, 422, 1255, 1257, 1264, 1276], "wert": [10, 235, 236, 241, 244, 276, 279, 283, 286, 292, 321, 325, 331, 1276], "sch\u00f6pfen": 10, "trainerinnenn": 10, "gegeneinand": 10, "arbeiten": [10, 224, 235], "genau": [10, 208, 210, 224, 399, 920, 1255], "die_der": 10, "adressat_in": 10, "je": [10, 19, 201, 234], "konkret": 10, "eingrenzen": 10, "desto": 10, "besser": [10, 56, 200, 210, 234, 235, 245, 255], "k\u00f6nnen": [10, 150, 152, 165, 208, 218, 224, 236, 249, 404, 405, 409, 422, 920, 1255, 1275, 1276], "bed\u00fcrfniss": [10, 226], "dieser": [10, 24, 200, 218, 234, 286, 399, 422, 1275], "adressat_innen": 10, "ber\u00fccksichtigen": 10, "wahrscheinlich": [10, 180, 214, 1264], "deshalb": 10, "nachhaltig": 10, "wirkung": 10, "weil": [10, 162, 210, 224, 226, 247, 286, 343, 422, 1255, 1257], "speziellen": 10, "konzepten": 10, "unterschiedlich": [10, 235, 280], "zielgruppen": 10, "beziehung": [10, 218], "zueinand": 10, "stehen": [10, 224], "anbieter_innen": 10, "nachfrager_innen": 10, "drei": [10, 150, 152, 165, 200, 210, 218, 224, 234, 239, 241, 260, 263, 271, 273, 276, 279, 286, 289, 304, 311, 321, 325, 331, 343, 347, 365, 369, 399], "angeben": 10, "sollt": [10, 200, 201, 208, 247, 1255], "m\u00f6glichst": 10, "erheblich": 10, "ihrer": [10, 271, 404, 409, 1264], "jeweiligen": 10, "sein": [10, 201, 208, 209, 226, 234, 235, 247, 273, 311, 1255, 1264, 1276], "dann": [10, 56, 201, 210, 218, 224, 235, 273, 279, 280, 286, 321, 422, 1275, 1276], "einzelnen": 10, "aussieht": 10, "erst": [10, 162, 218, 234, 247, 273, 280, 286, 304, 343, 359, 399, 1255], "bestandteil": 10, "hier": [10, 178, 200, 201, 208, 209, 211, 214, 218, 226, 230, 234, 235, 241, 245, 251, 254, 255, 264, 270, 273, 282, 283, 325, 343, 422, 1255, 1264], "um": [10, 19, 150, 152, 165, 200, 201, 208, 210, 214, 218, 224, 234, 235, 273, 286, 301, 365, 422, 1255, 1256, 1257], "n": [10, 22, 25, 27, 37, 49, 100, 110, 194, 203, 210, 211, 212, 218, 224, 234, 239, 241, 242, 250, 252, 255, 256, 257, 260, 263, 264, 266, 269, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 315, 321, 325, 343, 347, 353, 359, 365, 369, 375, 395, 396, 397, 399, 404, 425, 426, 428, 432, 434, 436, 438, 440, 445, 448, 458, 460, 466, 467, 471, 476, 484, 488, 493, 512, 514, 524, 526, 529, 540, 607, 640, 659, 660, 664, 682, 704, 721, 722, 726, 727, 748, 756, 761, 762, 763, 764, 765, 766, 768, 801, 807, 824, 864, 868, 878, 888, 891, 904, 921, 922, 924, 937, 961, 998, 1017, 1019, 1020, 1021, 1022, 1023, 1029, 1030, 1032, 1041, 1042, 1043, 1047, 1067, 1073, 1077, 1080, 1083, 1086, 1090, 1096, 1100, 1102, 1127, 1128, 1130, 1145, 1147, 1152, 1153, 1158, 1159, 1204, 1206, 1241, 1253], "ihrem": 10, "l\u00f6sen": 10, "wollen": [10, 24, 239, 422, 1257, 1264, 1275], "hilfestellung": 10, "abgrenzung": 10, "organisationen": 10, "privatpersonen": 10, "bestimmt": 10, "branch": [10, 37, 41, 47, 111, 161, 189, 195, 198, 310, 313, 464, 505, 506, 748, 788, 934, 937, 957, 984, 986, 996, 1046, 1143, 1276], "firmen": 10, "gruppen": 10, "staatlich": 10, "verwaltung": 10, "privat": [10, 44, 91, 96, 103, 108, 109, 113, 136, 157, 194, 218, 220, 227, 228, 231, 251, 264, 269, 281, 300, 338, 372, 373, 377, 380, 403, 404, 409, 513, 514, 519, 523, 534, 546, 549, 551, 554, 557, 562, 572, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 594, 634, 640, 649, 653, 655, 657, 658, 660, 661, 663, 665, 675, 690, 691, 709, 727, 739, 740, 743, 744, 750, 751, 753, 755, 761, 764, 765, 770, 772, 773, 776, 777, 778, 779, 782, 784, 786, 788, 790, 800, 801, 804, 805, 806, 812, 813, 822, 824, 825, 826, 839, 844, 845, 846, 859, 866, 880, 978, 1012, 1042, 1044, 1128, 1236, 1253, 1268], "verein": 10, "npo": [10, 724], "wissenschaft": 10, "universit\u00e4t": 10, "fachhochschulen": 10, "richtungen": 10, "regionen": 10, "stadt": [10, 56, 256], "land": [10, 543, 783, 1066], "bezirk": 10, "gemeinden": 10, "interessensgruppen": 10, "selbstvermarkter_innen": 10, "landwirtschaft": 10, "handwerk": 10, "u": [10, 19, 21, 22, 23, 25, 29, 40, 48, 50, 113, 170, 194, 197, 202, 211, 221, 224, 227, 229, 235, 252, 263, 267, 271, 273, 276, 279, 301, 308, 325, 345, 448, 479, 504, 525, 724, 846, 868, 876, 887, 888, 890, 891, 916, 928, 934, 937, 953, 959, 994, 1024, 1041, 1066, 1071, 1080, 1083, 1094, 1102, 1139, 1141, 1166, 1216, 1220, 1224, 1236, 1241, 1248, 1259], "altersgrupp": 10, "genderspezifisch": 10, "frauen": 10, "region": [10, 192, 940, 968], "grupp": [10, 239, 413, 920], "sch\u00fcler_innen": 10, "lehrer_innen": 10, "thematisch": 10, "muttersprach": 10, "deutsch": [10, 255, 402, 403], "fl\u00fcchtling": 10, "posit": [10, 49, 111, 199, 224, 227, 228, 230, 232, 234, 239, 247, 251, 260, 267, 271, 276, 277, 279, 286, 289, 300, 303, 310, 313, 315, 317, 319, 320, 323, 325, 329, 331, 335, 338, 341, 342, 345, 346, 347, 353, 359, 377, 390, 434, 471, 484, 525, 528, 643, 683, 690, 699, 700, 724, 747, 891, 928, 936, 1020, 1021, 1025, 1076, 1105, 1106, 1109, 1150, 1151, 1153, 1154, 1155, 1221, 1228, 1243, 1248, 1277], "zielgruppentyp": 10, "350": [10, 263, 266, 311, 325, 353, 359, 365, 369, 1166], "bereitet": 10, "schulung": [10, 200, 201, 205, 214, 223, 226, 422, 940, 943, 948, 953, 961, 970, 1073, 1076, 1080, 1111, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1273, 1275, 1277, 1278, 1279, 1280, 1281], "vor": [10, 56, 200, 201, 214, 224, 236, 271, 369, 1275], "agenda": [10, 14, 215, 320, 324, 328, 330, 334, 342, 346, 350, 352, 353, 356, 358, 364, 368, 372, 375, 377, 380, 382, 384, 386, 388, 422, 1274], "lt": [10, 19, 22, 23, 180, 194, 199, 210, 213, 218, 219, 224, 229, 234, 239, 241, 247, 250, 255, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 400], "zielvorgaben": 10, "basierend": [10, 210, 1257], "existierendem": 10, "f\u00fchrt": [10, 201], "jederzeit": [10, 214, 422], "\u00fcberblick": [10, 214, 218, 280, 294, 422, 1264], "behaltend": 10, "behandelten": 10, "fragen": [10, 226, 242, 404, 409, 422, 1264], "antworten": [10, 226], "weiterf\u00fchrend": 10, "info": [10, 174, 202, 308, 309, 359, 500, 504, 505, 506, 512, 540, 541, 658, 845, 936, 959, 1053, 1066, 1084, 1085, 1241], "bed\u00fcrfni": [10, 200], "schulungsagenden": 10, "erstellen": [10, 422, 1257], "zeitaufw\u00e4ndig": 10, "fehlertr\u00e4chtig": 10, "vom": [10, 178, 200, 208, 209, 210, 224, 234, 235, 254, 279, 283, 1264, 1276], "erwartet": [10, 201, 224], "w\u00e4hrend": [10, 150, 152, 165], "einzugehen": [10, 226], "geplanten": 10, "verlassen": [10, 852], "birgt": 10, "chao": [10, 889, 1139], "teilnehmerinnen": 10, "\u00fcbersichtlich": 10, "nachbearbeitung": 10, "hinterlassen": [10, 200], "absch\u00e4tzung": 10, "zielgruppengr\u00f6\u00df": 10, "affinem": 10, "background": [10, 173, 203, 770, 817, 869, 936, 959, 1051, 1060, 1067, 1116], "inklus": [10, 211, 224, 234, 247, 359, 1257], "betroffen": 10, "1000": [10, 155, 224, 234, 244, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 607, 608, 626, 700, 724, 800, 801, 824, 825, 866, 868, 873, 887, 888, 916, 917, 921, 922, 930, 994, 1016, 1023, 1031, 1061, 1067, 1071, 1098, 1105, 1154, 1187], "eu": [10, 19], "20000": [10, 191, 266], "erkennung": 10, "etwa": [10, 180, 200, 201, 209, 214, 224, 226, 235, 247, 422, 1255, 1264, 1276], "abstand": 10, "erfordert": 10, "vgl": [10, 224], "frosch": 10, "wassergla": 10, "selbst": [10, 24, 214, 224, 234, 852, 1275, 1276], "umstellung": 10, "zus\u00e4tzlichen": 10, "aufwand": 10, "bedeutet": [10, 355], "besten": [10, 214, 280, 1255], "einsatz": 10, "erw\u00e4gung": 10, "ziehen": 10, "angegebenen": [10, 150, 152, 165], "erheblichen": [10, 1255], "wesentlichen": [10, 226], "bed\u00fcrfnissen": 10, "kenntni": 10, "erlangt": 10, "mitgli": 10, "editor": [10, 17, 49, 159, 223, 390, 917, 1132, 1136, 1215, 1234], "verfasst": 10, "oft": [10, 200, 224, 226, 1256], "identisch": 10, "obig": 10, "behebt": 10, "inkonsistenzen": 10, "baut": 10, "neue": [10, 224, 234, 266, 294, 343, 359, 399, 422], "verliert": [10, 1276], "aufbaubeziehungen": 10, "thema": [10, 209, 226, 280, 294, 404, 409], "verlangt": 10, "grundlag": 10, "folienmateri": 10, "meist": 10, "powerpoint": [10, 17], "anderen": [10, 224, 234, 239, 241, 422, 1255, 1257, 1276], "bin\u00e4r": [10, 244, 247], "propriet\u00e4r": 10, "formaten": 10, "praktisch": [10, 150, 152, 165, 210], "unm\u00f6glich": 10, "macht": [10, 180, 208, 210, 214, 218, 224, 230, 234, 276, 280, 399, 1255, 1264, 1276], "artefakttypen": 10, "livehack": [10, 11, 46, 53, 113, 158, 210, 216, 218, 227, 228, 235, 254, 267, 269, 270, 282, 291, 296, 298, 299, 307, 310, 317, 319, 324, 330, 335, 338, 341, 342, 345, 346, 351, 352, 357, 358, 363, 364, 367, 368, 382, 404, 422, 511, 547, 555, 626, 783, 797, 949, 986, 1151, 1238, 1245], "st\u00fcckwerk": 10, "gew\u00f6hnlich": 10, "trainerin": 10, "oben": [10, 56, 119, 150, 152, 165, 180, 200, 224, 235, 241], "zielt": 10, "darauf": [10, 200, 210, 1255], "ab": [10, 19, 200, 202, 224, 234, 235, 244, 279, 283, 286, 301, 304, 325, 353, 525, 650, 652, 668, 750, 764, 1213], "transpar": [10, 16, 24, 867, 968, 970, 1221], "wiederzuverwenden": 10, "sodass": [10, 24, 218, 1276], "aufgebrochen": 10, "schwer": [10, 162, 214, 224, 422, 1264], "abzusch\u00e4tzen": 10, "abzielt": 10, "grundlagen": [10, 150, 152, 165, 176, 285, 324, 421, 1255, 1257, 1264, 1275], "weg": [10, 200, 201, 210, 214, 226, 239, 254, 294, 422, 1255, 1256, 1257, 1264], "dorthin": 10, "m\u00fcssen": [10, 150, 152, 165, 224, 404, 409, 1264], "unterst\u00fctzt": [10, 1276], "kursf\u00fchrung": [10, 422], "fragt": [10, 201], "unklarheiten": 10, "weist": [10, 200], "etwaig": 10, "verwandt": [10, 1255], "hin": [10, 162, 422], "plausibl": [10, 194], "realistisch": 10, "bzgl": 10, "kursdauer": 10, "strukturierten": [10, 235], "langweiligen": 10, "tatsachen": 10, "entsprechend": 10, "hunderttausend": 10, "allerd": [10, 224, 226, 1256, 1257, 1276], "keinen": [10, 200, 343, 1255], "einfluss": 10, "wahl": [10, 1276], "gespr\u00e4ch": 10, "betroffenen": 10, "assoziieren": 10, "metadaten": 10, "setzt": [10, 150, 152, 165, 208], "vorau": 10, "beziehungen": 10, "x": [10, 19, 29, 47, 49, 103, 106, 107, 110, 155, 166, 180, 197, 203, 210, 211, 212, 214, 224, 234, 239, 241, 243, 244, 247, 250, 260, 263, 266, 267, 271, 273, 279, 283, 286, 289, 291, 292, 301, 304, 308, 311, 320, 321, 325, 347, 353, 359, 365, 369, 400, 404, 445, 448, 449, 455, 470, 471, 473, 476, 479, 480, 484, 486, 494, 496, 500, 526, 532, 545, 594, 604, 641, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 663, 665, 667, 668, 675, 682, 690, 724, 750, 753, 755, 756, 761, 764, 765, 804, 848, 850, 856, 857, 858, 861, 866, 868, 873, 876, 878, 879, 887, 888, 913, 917, 921, 922, 928, 934, 936, 937, 1021, 1031, 1037, 1039, 1040, 1041, 1057, 1061, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1104, 1105, 1133, 1135, 1141, 1149, 1150, 1152, 1153, 1154, 1157, 1158, 1163, 1187, 1213, 1230, 1241, 1242, 1248], "passt": [10, 180, 234, 235], "ganz": [10, 162, 200, 201, 209, 210, 214, 224, 226, 240, 241, 255, 272, 273, 369, 422, 1256, 1257], "gut": [10, 150, 152, 165, 200, 201, 224, 235, 422, 813], "y": [10, 100, 170, 203, 211, 212, 214, 241, 250, 256, 257, 263, 264, 266, 267, 279, 289, 292, 301, 304, 311, 321, 325, 331, 347, 353, 365, 369, 449, 455, 473, 476, 479, 480, 484, 496, 500, 512, 529, 594, 604, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 663, 665, 667, 668, 675, 682, 690, 722, 750, 753, 755, 756, 761, 764, 765, 804, 848, 850, 864, 878, 891, 893, 904, 910, 934, 936, 937, 952, 953, 984, 985, 1041, 1090, 1098, 1104, 1163, 1166, 1213], "algorithmen": [10, 294, 1257], "automatisch": [10, 1276], "berechnen": 10, "semiautomatisch": 10, "kursnavig": 10, "nachbereitung": 10, "plaintext": 10, "meisten": [10, 218, 224, 422], "artefakt": [10, 1257], "slideshow": [10, 270, 282, 309, 319, 330, 338, 341, 345, 351, 352, 357, 358, 363, 364, 367, 368, 941, 944, 946, 949, 951, 954, 956, 962, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 988, 990, 993, 995, 999, 1002, 1005, 1151, 1238, 1245], "text": [10, 14, 26, 27, 46, 202, 212, 223, 226, 231, 232, 239, 251, 252, 257, 264, 271, 273, 291, 294, 297, 304, 306, 325, 327, 369, 371, 445, 524, 544, 860, 924, 1022, 1083, 1132, 1139, 1145, 1154, 1164, 1187, 1220, 1227, 1232, 1234, 1267, 1275], "restrukturierung": 10, "o": [10, 19, 25, 26, 49, 53, 67, 74, 86, 87, 89, 96, 99, 100, 113, 126, 130, 149, 157, 164, 168, 170, 174, 176, 192, 194, 195, 202, 203, 210, 214, 218, 228, 230, 231, 232, 234, 239, 241, 242, 248, 251, 252, 256, 258, 261, 262, 263, 264, 267, 268, 269, 270, 275, 276, 280, 281, 282, 283, 285, 287, 290, 292, 294, 297, 301, 303, 306, 307, 308, 310, 311, 313, 316, 317, 320, 322, 323, 324, 326, 327, 329, 331, 341, 343, 345, 346, 351, 352, 353, 357, 358, 360, 363, 364, 366, 367, 370, 371, 385, 389, 404, 409, 411, 422, 423, 425, 441, 471, 476, 488, 500, 504, 505, 512, 532, 540, 544, 546, 558, 585, 607, 665, 765, 797, 816, 822, 825, 856, 860, 861, 867, 868, 876, 888, 891, 899, 903, 920, 921, 925, 928, 934, 936, 952, 953, 961, 963, 984, 991, 1016, 1026, 1029, 1030, 1031, 1032, 1033, 1036, 1046, 1049, 1050, 1051, 1066, 1067, 1068, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1096, 1100, 1101, 1102, 1105, 1107, 1110, 1111, 1115, 1131, 1134, 1137, 1139, 1145, 1153, 1160, 1161, 1208, 1213, 1221, 1236, 1241, 1248, 1255, 1262, 1263, 1267, 1269, 1271, 1278], "konsistent": 10, "referenzierung": 10, "fremdmateri": 10, "speisekart": 10, "unterst\u00fctzung": 10, "themenauswahl": 10, "korrekt": [10, 1255], "vorbereitet": [10, 422], "vielen": [10, 209, 234, 422], "f\u00e4llen": [10, 150, 152, 165, 235], "ma\u00dfnahmen": 10, "sicherstellung": 10, "geplant": 10, "beispielsweis": 10, "rahmen": 10, "webplattform": 10, "entsteht": 10, "erh\u00f6hung": 10, "sichtbarkeit": [10, 1255], "aktuel": 10, "inhalt": [10, 224, 226, 256, 405, 852, 1276], "wartung": 10, "performanceverbesserungen": 10, "plane": [10, 212, 214, 1210], "kein": [10, 150, 152, 165, 209, 210, 214, 224, 234, 241, 256, 292, 311, 369, 399, 422], "impactmein": 10, "sicherzustellen": 10, "erkl\u00e4rung": [10, 248], "erkl\u00e4ren": [10, 1255], "gew\u00fcnscht": [10, 224], "ohn": [10, 208, 210, 218, 244, 247, 359, 852, 920, 1276], "erreicht": [10, 200, 201, 1264], "hatt": [10, 200, 201, 214, 224, 226], "button": [10, 52, 54, 113, 159, 161, 174, 191, 199, 277, 928], "gew\u00e4hlt": [10, 200, 201], "dzugeh\u00f6rig": 10, "textfeld": 10, "l\u00e4sst": 10, "sich": [10, 24, 150, 152, 165, 180, 200, 201, 208, 209, 210, 214, 224, 226, 234, 255, 273, 276, 286, 405, 1255, 1256, 1257, 1264, 1275, 1276], "bearbeiten": 10, "daher": [10, 1276], "mein": [10, 200, 201, 209, 210, 224, 234, 235, 359, 365, 422, 930, 1076], "konvertiert": 10, "gemacht": [10, 200, 235, 1276], "unten": [10, 56, 119, 180, 201, 214, 224], "beschriebenen": 10, "kan\u00e4len": 10, "promot": [10, 196], "angab": 10, "quellen": 10, "literatur": [10, 252, 662], "lightweight": [10, 154, 187, 223, 227, 243, 277, 279, 291, 751, 753, 847, 1208, 1220, 1258], "daringfirebal": 10, "project": [10, 11, 17, 25, 29, 40, 48, 50, 52, 53, 54, 58, 95, 112, 113, 124, 126, 130, 134, 139, 142, 151, 154, 155, 159, 161, 166, 170, 187, 192, 193, 195, 197, 198, 199, 204, 205, 207, 210, 212, 214, 220, 223, 227, 230, 237, 242, 251, 270, 274, 277, 280, 307, 310, 317, 324, 356, 375, 377, 378, 380, 408, 409, 415, 417, 422, 492, 499, 503, 511, 515, 517, 518, 525, 526, 529, 532, 538, 540, 541, 543, 544, 545, 547, 548, 555, 594, 595, 604, 607, 666, 668, 669, 724, 816, 870, 927, 928, 930, 934, 936, 984, 1015, 1033, 1083, 1084, 1085, 1099, 1100, 1108, 1111, 1195, 1197, 1207, 1244, 1250, 1274, 1277, 1278, 1279, 1280, 1282], "default": [10, 45, 47, 86, 99, 100, 108, 111, 113, 121, 122, 136, 159, 161, 192, 193, 198, 199, 203, 208, 219, 228, 230, 232, 239, 241, 252, 260, 263, 266, 269, 272, 275, 276, 279, 283, 286, 289, 294, 297, 304, 306, 307, 311, 315, 316, 318, 321, 325, 327, 328, 347, 353, 356, 359, 365, 371, 372, 381, 382, 384, 387, 397, 404, 449, 460, 492, 500, 506, 512, 516, 529, 537, 540, 541, 543, 551, 570, 579, 580, 650, 651, 656, 657, 660, 684, 703, 704, 705, 720, 722, 724, 726, 737, 740, 742, 744, 748, 762, 765, 782, 788, 790, 798, 800, 801, 810, 819, 822, 825, 827, 839, 849, 853, 857, 858, 873, 886, 891, 910, 922, 924, 928, 930, 934, 936, 980, 1006, 1012, 1015, 1029, 1033, 1039, 1051, 1053, 1055, 1066, 1068, 1080, 1082, 1084, 1086, 1098, 1099, 1127, 1129, 1135, 1154, 1156, 1158, 1164, 1200, 1216, 1226, 1228, 1231, 1236, 1241, 1243, 1258], "github": [10, 29, 31, 53, 86, 95, 98, 113, 134, 135, 139, 142, 151, 155, 158, 161, 163, 164, 168, 170, 173, 174, 177, 199, 203, 204, 209, 211, 218, 219, 220, 230, 232, 237, 238, 242, 243, 245, 252, 253, 254, 258, 260, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 288, 291, 295, 296, 298, 299, 300, 303, 307, 310, 316, 317, 318, 320, 324, 328, 330, 334, 335, 338, 342, 346, 350, 352, 356, 358, 364, 368, 369, 373, 375, 376, 377, 378, 379, 380, 382, 384, 403, 408, 409, 410, 411, 418, 423, 513, 518, 519, 520, 521, 534, 536, 595, 626, 667, 930, 934, 937, 940, 943, 945, 948, 950, 953, 961, 964, 974, 976, 984, 985, 986, 987, 992, 996, 1083, 1084, 1085, 1087, 1094, 1098, 1100, 1101, 1102], "restructuredtext": [10, 19, 20, 21, 22, 23, 25], "docutil": [10, 19, 21, 22, 23, 25], "sourceforg": 10, "io": [10, 19, 42, 49, 53, 80, 126, 130, 146, 149, 151, 162, 173, 174, 192, 196, 198, 212, 214, 228, 230, 231, 232, 233, 240, 242, 243, 251, 252, 265, 281, 297, 304, 306, 312, 327, 328, 342, 348, 354, 371, 372, 392, 404, 407, 409, 411, 425, 523, 649, 797, 863, 864, 872, 936, 937, 980, 996, 1041, 1046, 1068, 1076, 1098, 1105, 1158, 1261, 1262, 1264, 1265, 1267, 1269, 1272], "rst": [10, 19, 21, 22, 23, 25, 113, 155, 177, 210, 217, 222, 225, 231, 279, 289, 353, 412, 627, 630, 633, 636, 639, 642, 645, 1072, 1075, 1079, 1247, 1252], "generatoren": [10, 214, 281, 422], "staticgen": 10, "learn": [10, 58, 60, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 192, 194, 211, 212, 214, 223, 227, 231, 252, 261, 341, 345, 370, 390, 405, 407, 510, 809, 873, 928, 936, 1068, 1132, 1210, 1223, 1243, 1262, 1265, 1267, 1269, 1278, 1281, 1282], "moodl": [10, 95, 98, 99, 100, 113, 134, 142, 145, 150, 152, 154, 157, 165, 166, 199, 372, 408, 410, 411, 723, 880, 905], "schoologi": 10, "eduongo": 10, "produkt": 10, "dienstleistungen": 10, "gem\u00e4\u00df": [10, 201], "recherch": [10, 214], "hinblick": 10, "ihnen": [10, 201, 919, 1264], "nennen": 10, "beschreiben": 10, "st\u00e4rken": [10, 1255], "schw\u00e4chen": [10, 1257], "konkurrierenden": 10, "konzept": [10, 422], "relevant": [10, 214, 422], "anbiet": 10, "ziel": [10, 1264], "allumfassend": 10, "eh": [10, 19, 56, 180, 224, 234, 239, 247, 273, 279, 283, 286, 331, 353], "all": [10, 11, 16, 22, 27, 29, 32, 44, 47, 48, 50, 52, 60, 69, 77, 99, 100, 112, 114, 118, 130, 131, 139, 146, 154, 157, 159, 166, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 211, 212, 213, 218, 220, 223, 224, 226, 227, 229, 234, 239, 243, 249, 251, 252, 260, 263, 266, 267, 271, 276, 277, 279, 296, 298, 301, 304, 307, 309, 316, 318, 325, 342, 346, 373, 377, 381, 385, 386, 389, 391, 392, 399, 415, 426, 430, 440, 444, 445, 448, 449, 450, 461, 469, 470, 476, 486, 488, 490, 492, 493, 496, 499, 500, 503, 505, 510, 512, 514, 517, 518, 519, 521, 522, 526, 528, 529, 531, 534, 536, 537, 540, 541, 544, 546, 548, 549, 553, 554, 558, 560, 561, 569, 570, 575, 576, 597, 599, 607, 608, 626, 654, 655, 658, 664, 682, 683, 700, 706, 724, 727, 735, 737, 739, 740, 743, 749, 751, 764, 770, 789, 801, 803, 813, 815, 817, 818, 822, 824, 827, 830, 833, 835, 846, 847, 856, 857, 858, 862, 863, 864, 866, 867, 869, 871, 873, 874, 875, 876, 891, 892, 903, 910, 913, 916, 918, 919, 920, 921, 922, 928, 929, 930, 931, 934, 936, 937, 943, 945, 952, 955, 957, 961, 970, 974, 976, 980, 982, 984, 992, 998, 1001, 1015, 1016, 1020, 1022, 1025, 1026, 1031, 1033, 1041, 1046, 1051, 1058, 1064, 1066, 1068, 1069, 1070, 1081, 1085, 1092, 1096, 1101, 1102, 1106, 1107, 1108, 1119, 1127, 1132, 1133, 1137, 1139, 1152, 1153, 1156, 1157, 1158, 1164, 1169, 1170, 1187, 1188, 1204, 1208, 1217, 1221, 1230, 1236, 1241, 1243, 1248, 1255, 1257, 1259, 1260, 1262, 1264, 1265, 1270, 1271, 1273, 1274, 1276, 1277], "vielmehr": 10, "bietet": [10, 208], "beim": [10, 56, 200, 201, 210, 214, 224, 1255], "verfassen": 10, "kernthema": 10, "bleibt": 10, "zwischen": [10, 208, 224, 234, 241, 247, 422, 1255, 1256, 1257, 1264, 1276], "benutz": 10, "vorgaben": 10, "existiert": [10, 224, 236], "wald": [10, 56], "dass": [10, 200, 201, 208, 210, 214, 218, 224, 235, 239, 241, 255, 404, 409, 422, 1255, 1256, 1257, 1264, 1276], "beisteuert": 10, "eben": [10, 208, 234], "\u00fcbergreifend": 10, "definiert": [10, 162, 210, 224, 1255], "ansatz": 10, "mir": [10, 200, 201, 214, 224, 235, 239, 271, 404, 409, 422, 1255], "bekannt": [10, 224, 1257], "verfolgt": [10, 1264], "essentiel": 10, "gesundheit": 10, "unterlagen": [10, 422], "licht": 10, "lesen": [10, 208, 209, 210, 224, 236, 404, 409], "einig": [10, 201, 211, 226, 422, 1255], "plugin": [10, 194, 558, 830, 1098], "helfen": 10, "lieblo": 10, "halbherzig": 10, "add": [10, 29, 31, 36, 111, 118, 120, 131, 134, 161, 164, 170, 173, 177, 192, 193, 194, 198, 199, 203, 211, 220, 223, 224, 227, 230, 239, 241, 242, 244, 247, 250, 252, 256, 260, 263, 264, 266, 271, 276, 279, 283, 286, 289, 295, 296, 301, 304, 307, 311, 315, 321, 325, 331, 336, 338, 343, 347, 353, 356, 359, 365, 369, 375, 377, 378, 380, 404, 410, 451, 452, 491, 492, 500, 514, 517, 520, 526, 534, 540, 545, 550, 552, 553, 569, 570, 574, 579, 580, 591, 599, 606, 608, 626, 640, 650, 662, 663, 665, 667, 730, 731, 732, 761, 763, 764, 770, 800, 801, 807, 810, 822, 825, 828, 835, 844, 848, 856, 930, 934, 936, 937, 950, 952, 953, 957, 964, 972, 974, 984, 997, 1000, 1033, 1067, 1069, 1071, 1077, 1082, 1096, 1098, 1105, 1106, 1128, 1132, 1140, 1158, 1164, 1230, 1241, 1242, 1248], "On": [10, 52, 86, 90, 95, 98, 99, 100, 113, 134, 136, 146, 154, 157, 159, 170, 192, 194, 227, 243, 253, 269, 285, 287, 295, 296, 298, 301, 307, 313, 316, 355, 369, 374, 386, 404, 488, 494, 503, 506, 525, 558, 596, 604, 692, 724, 800, 817, 832, 833, 863, 864, 929, 934, 937, 961, 985, 989, 1012, 1016, 1017, 1020, 1024, 1031, 1034, 1046, 1047, 1071, 1081, 1086, 1095, 1099, 1137, 1224, 1229, 1243, 1258], "statt": [10, 150, 152, 165, 226, 422, 1264, 1276], "zentral": 10, "ergebni": [10, 276], "niemand": 10, "s5": [10, 1081, 1268], "doc": [10, 24, 26, 53, 114, 126, 130, 173, 174, 196, 198, 210, 211, 213, 243, 251, 258, 260, 266, 275, 276, 279, 283, 286, 301, 344, 374, 389, 401, 404, 409, 412, 413, 423, 523, 643, 891, 913, 940, 955, 963, 964, 1039, 1153, 1219], "slide": [10, 11, 14, 24, 51, 55, 171, 172, 173, 192, 206, 207, 209, 216, 218, 223, 227, 231, 232, 233, 242, 243, 252, 253, 269, 295, 296, 307, 373, 415, 418, 643, 801, 996, 1078, 1082, 1181, 1221, 1261, 1268, 1269, 1271, 1272], "show": [10, 11, 14, 16, 30, 45, 49, 52, 54, 108, 113, 122, 126, 131, 171, 172, 191, 192, 194, 195, 199, 219, 227, 230, 231, 243, 252, 260, 266, 269, 276, 277, 279, 307, 319, 320, 333, 341, 349, 355, 356, 369, 375, 377, 382, 383, 384, 386, 387, 389, 390, 408, 410, 411, 412, 415, 473, 540, 541, 546, 575, 591, 597, 643, 725, 761, 783, 839, 857, 858, 891, 913, 917, 919, 921, 928, 930, 934, 936, 937, 947, 966, 968, 1000, 1024, 1047, 1064, 1067, 1071, 1076, 1080, 1094, 1096, 1104, 1143, 1160, 1163, 1213, 1214, 1236, 1243, 1250, 1263, 1273], "revealj": 10, "option": [10, 18, 67, 154, 190, 192, 193, 194, 198, 202, 210, 215, 231, 243, 267, 279, 283, 291, 294, 295, 296, 304, 309, 313, 325, 333, 334, 342, 345, 349, 350, 355, 359, 374, 377, 380, 384, 404, 423, 432, 433, 449, 460, 461, 500, 519, 522, 523, 526, 528, 529, 537, 538, 540, 552, 579, 607, 748, 783, 798, 824, 853, 857, 858, 867, 920, 937, 953, 1004, 1006, 1008, 1016, 1029, 1033, 1066, 1077, 1085, 1142, 1160, 1164, 1236, 1243, 1250, 1255, 1270, 1273], "webslid": 10, "tv": [10, 19, 199], "sicht": [10, 209, 280, 1255], "entscheidend": 10, "usp": 10, "wodurch": 10, "vorteilhaft": 10, "unterscheidet": [10, 1255], "600": [10, 260, 266, 519, 700], "kernfeatur": 10, "inbeziehungsetzen": 10, "dessen": [10, 209, 224, 321, 422, 1257], "versagen": 10, "implementierung": 10, "solcher": [10, 208, 224], "featur": [10, 29, 33, 67, 69, 111, 113, 197, 199, 205, 207, 208, 219, 224, 227, 228, 230, 232, 237, 242, 251, 260, 266, 276, 277, 279, 280, 282, 283, 322, 355, 374, 382, 383, 406, 422, 508, 510, 511, 540, 742, 795, 798, 801, 837, 846, 850, 928, 936, 937, 976, 984, 1025, 1041, 1066, 1067, 1077, 1084, 1085, 1102, 1126, 1133, 1145, 1146, 1207, 1211, 1214, 1226, 1241, 1255, 1256, 1258, 1264, 1278, 1279, 1280, 1281, 1282], "indem": [10, 234, 405], "foku": [10, 422], "schulbetrieb": 10, "legen": [10, 919], "ferner": 10, "schwere": 10, "abh\u00e4ngigkeiten": [10, 1275], "fett": [10, 224, 241], "datenbanken": [10, 247, 422], "webserv": [10, 936], "hintergrund": [10, 234], "redaktionel": 10, "arbeit": [10, 214], "offlin": 10, "laptop": [10, 154, 193, 195, 202, 1015], "zug": 10, "erledigen": 10, "einschr\u00e4nkung": 10, "output": [10, 20, 27, 38, 40, 47, 49, 74, 75, 96, 104, 112, 124, 130, 131, 139, 146, 174, 194, 196, 197, 198, 210, 213, 219, 231, 232, 243, 252, 260, 266, 269, 270, 276, 279, 307, 382, 389, 404, 409, 426, 427, 432, 433, 434, 435, 439, 471, 505, 506, 512, 513, 517, 524, 525, 540, 574, 576, 591, 606, 609, 610, 611, 612, 624, 626, 634, 637, 662, 713, 723, 724, 725, 801, 806, 835, 839, 844, 853, 861, 871, 874, 875, 876, 887, 891, 913, 918, 919, 924, 925, 928, 942, 997, 1006, 1017, 1025, 1028, 1031, 1039, 1047, 1051, 1052, 1056, 1077, 1080, 1081, 1083, 1086, 1089, 1090, 1114, 1153, 1158, 1159, 1169, 1170, 1172, 1173, 1174, 1176, 1178, 1183, 1189, 1191, 1193, 1198, 1199, 1200, 1201, 1211, 1214, 1215, 1220, 1224, 1233, 1236, 1249, 1264], "mittel": [10, 214, 224, 226, 242, 244, 249, 422, 1255], "geserv": 10, "erarbeitet": 10, "sinn": [10, 218, 1255], "prinzip": [10, 1276], "kostenlo": 10, "genutzt": [10, 208], "weiterentwickelt": [10, 1257], "f\u00f6rderbedingungen": 10, "projektseit": 10, "ver\u00f6ffentlichen": 10, "nachvollziehbar": 10, "strukturieren": 10, "f\u00f6rderzusag": 10, "hinwei": 10, "verpflichtend": 10, "gesondert": 10, "erw\u00e4hnen": 10, "projektzwischenbericht": 10, "projektzusammenfassung": 10, "projektendbericht": 10, "entwicklerdokument": 10, "anwenderdokument": 10, "dienstleistungsbeschreibung": 10, "abh\u00e4ngig": 10, "dokument": [10, 150, 152, 165, 209, 224, 235, 256, 271, 283, 343, 399], "externkommunik": 10, "erreichung": 10, "nachhaltigkeit": 10, "repositori": [10, 66, 86, 98, 111, 170, 184, 195, 198, 209, 218, 220, 227, 228, 238, 243, 245, 248, 252, 253, 254, 258, 261, 264, 269, 270, 274, 277, 280, 282, 285, 291, 299, 307, 317, 318, 320, 324, 330, 334, 335, 338, 342, 346, 350, 352, 356, 358, 364, 368, 373, 375, 377, 378, 380, 382, 384, 389, 403, 404, 409, 613, 984, 1250], "projektergebnistyp": 10, "haupteigenschaften": 10, "funktionalit\u00e4t": [10, 224], "sourcecod": [10, 208], "bestehend": 10, "unabh\u00e4ngigem": 10, "unitgetestetem": 10, "core": [10, 48, 50, 191, 192, 194, 195, 223, 226, 230, 235, 248, 263, 274, 277, 279, 286, 289, 304, 308, 311, 321, 325, 347, 353, 359, 365, 374, 426, 438, 483, 547, 548, 554, 560, 574, 575, 606, 658, 662, 810, 827, 844, 868, 906, 922, 955, 959, 984, 1064, 1068, 1069, 1080, 1081, 1098, 1166, 1208, 1213, 1226, 1227, 1228, 1230, 1241, 1270], "reih": [10, 218, 226], "direct": [10, 24, 26, 49, 113, 130, 192, 252, 310, 313, 390, 460, 471, 506, 532, 544, 665, 751, 801, 867, 925, 943, 1019, 1021, 1037, 1039, 1040, 1085, 1100, 1127, 1213, 1221, 1230, 1266, 1273], "generierten": 10, "kursagenda": 10, "graphen": 10, "lizenz": 10, "gpl": [10, 658, 845, 940], "pypi": [10, 52, 53, 174, 175, 223, 227, 242, 258, 274, 300, 1235, 1236, 1241, 1281], "installierbar": 10, "paket": [10, 208], "generiert": [10, 224], "readthedoc": [10, 19, 26, 53, 151, 173, 174], "gehostet": 10, "latex": [10, 11, 626], "beamer": [10, 11], "verf\u00fcgbar": [10, 1069, 1275], "obigen": 10, "bisherigen": [10, 1257], "aktuellen": [10, 234], "bereich": [10, 214, 422], "umfeld": 10, "projektantrag": 10, "bisher": 10, "softwarebasi": 10, "grundlegend": [10, 236, 1257, 1264], "semiprofessionel": 10, "visualisierung": 10, "plan": [10, 29, 47, 164, 180, 191, 214, 223, 258, 267, 277, 342, 382, 403, 404, 408, 412, 418, 510, 646, 801, 810, 816, 984, 1066, 1241, 1248], "kurz": [10, 200, 201, 224, 226, 235, 240, 255, 280], "lebensl\u00e4uf": 10, "projektbeteiligten": 10, "sowi": [10, 1275], "ver\u00f6ffentlichungen": 10, "b\u00fccher": 10, "fachartikel": 10, "patent": 10, "vortr\u00e4g": 10, "gebiet": [10, 201], "projektinhalt": 10, "verdeutlichen": 10, "teamleitung": 10, "softwareprojekt": 10, "stefan": [10, 209], "walkner": 10, "28": [10, 86, 94, 114, 139, 164, 195, 202, 203, 212, 213, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 400, 417, 418, 421, 512, 546, 591, 607, 608, 631, 640, 660, 873, 913, 937, 974, 1033, 1066, 1084, 1085, 1098, 1107, 1166, 1212, 1253], "1983": [10, 649], "hallein": 10, "master": [10, 47, 170, 173, 195, 198, 405, 406, 921, 932, 980, 984], "scienc": [10, 15, 67, 168, 199, 212, 223, 227, 232, 261, 330, 344, 366, 406, 649, 701, 1066, 1133, 1212, 1213, 1214, 1215], "salzburg": 10, "consult": [10, 48, 50, 54, 192, 205, 242, 260, 266, 276, 279, 283, 410, 554], "isamberth": 10, "adnet": 10, "2000": [10, 247, 250, 266, 271, 283, 304, 512, 558, 1069], "2002": [10, 266, 658, 845], "divers": [10, 215], "2005": [10, 649], "2007": 10, "entwicklungsleit": 10, "nextsens": 10, "2016": [10, 226, 227, 248, 251, 266, 274, 300, 307, 315, 324, 346, 824, 1208], "30": [10, 49, 86, 95, 98, 112, 113, 166, 174, 194, 202, 204, 213, 223, 224, 229, 234, 239, 241, 243, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 315, 321, 325, 328, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 401, 421, 433, 447, 512, 594, 598, 633, 634, 639, 640, 642, 643, 783, 785, 813, 814, 845, 846, 847, 887, 913, 920, 934, 936, 937, 1071, 1098, 1110, 1111, 1164, 1212, 1216, 1224, 1241, 1250], "programmiererfahrung": [10, 1264, 1276], "bash": [10, 88, 113, 135, 156, 168, 199, 205, 207, 231, 241, 243, 263, 271, 279, 286, 289, 297, 304, 306, 307, 311, 318, 321, 325, 327, 347, 353, 359, 365, 371, 404, 405, 406, 409, 411, 526, 724, 797, 835, 838, 860, 862, 866, 868, 869, 873, 887, 891, 892, 917, 922, 1021, 1028, 1031, 1037, 1061, 1083, 1098, 1105, 1187, 1265, 1267], "20": [10, 49, 101, 102, 149, 155, 164, 166, 174, 195, 197, 202, 210, 211, 212, 213, 224, 229, 234, 235, 239, 241, 244, 245, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 308, 311, 315, 317, 321, 325, 332, 335, 336, 338, 343, 347, 353, 365, 369, 399, 400, 403, 421, 426, 428, 430, 446, 470, 510, 526, 532, 570, 598, 599, 604, 633, 634, 639, 640, 642, 643, 658, 748, 759, 760, 761, 762, 764, 770, 785, 812, 813, 814, 821, 835, 837, 838, 844, 845, 846, 847, 855, 876, 891, 913, 928, 934, 936, 937, 1003, 1069, 1096, 1110, 1111, 1135, 1154, 1163, 1164, 1190, 1212, 1213, 1241, 1243, 1250], "davon": [10, 200, 210, 1255], "teamleit": 10, "m\u00f6chten": [10, 1276], "ggf": 10, "kennenlernen": 10, "knackig": 10, "darstellung": 10, "handelnden": 10, "personen": 10, "sendung": 10, "minuten": [10, 920], "millionen": 10, "ihren": [10, 224, 236], "antrag": 10, "nochmal": 10, "vorgelesen": 10, "bekommen": [10, 218, 1275], "un": [10, 218, 226, 422, 916, 961, 1127], "hintergrundmusik": 10, "windger\u00e4usch": 10, "warum": [10, 235, 236, 244, 286, 381, 1264, 1276], "gerad": [10, 201, 234, 235, 422, 1255], "f\u00f6rdern": 10, "sollen": [10, 180, 381], "animiert": 10, "produktvideo": 10, "interessieren": 10, "sicher": [10, 210, 214], "mindesten": [10, 210], "vier": [10, 180, 210, 224, 234, 239, 241, 256, 260, 263, 271, 273, 276, 283, 289, 301, 304, 308, 311, 321, 331, 343, 347, 359, 369, 399], "monat": 10, "einreichschluss": 10, "uneingeschr\u00e4nkt": 10, "aufrufbar": 10, "youtu": [10, 838, 843], "hobyb1zukdi": 10, "projektrisiken": 10, "sehen": [10, 201], "wenig": [10, 209, 224, 294, 422], "viel": [10, 209, 214, 218, 224, 235, 245, 254, 260, 270, 271, 282, 301, 1255, 1256], "pflegen": 10, "frontalen": 10, "vortragsstil": 10, "starker": 10, "paradigmenwechsel": 10, "wechsel": 10, "jahrelang": 10, "gewohnten": 10, "verfahrensweisen": 10, "abrupt": 10, "gro\u00dfer": 10, "monolithisch": 10, "zerhacken": 10, "welchen": 10, "bewerten": 10, "messen": [10, 180], "zielerreichung": 10, "kriterium": 10, "arbeitserleichterung": 10, "minimal": [10, 224], "erfolg": [10, 1255], "mindestkriterien": 10, "positiven": 10, "projekterfolg": 10, "jedenfal": 10, "abgedeckt": 10, "ausgezeichnet": 10, "kriterien": [10, 218, 920], "angestrebten": 10, "ausgezeichneten": 10, "anerkennen": 10, "gesteigerten": 10, "kurs": [10, 226, 237, 245, 254, 270, 282, 1264, 1276], "effekt": [10, 224, 235, 1276], "weiter": [10, 24, 56, 200, 201, 224, 226, 235, 249, 273, 291, 321, 369, 920, 1264, 1276], "bekundet": 10, "interess": [10, 280], "meinen": [10, 226, 422], "medien": 10, "berichtet": 10, "migrat": [10, 218], "zehn": [10, 234], "migrieren": 10, "verwenden": [10, 218, 224, 230, 234, 239], "untereinand": 10, "zutun": 10, "zusammenzuarbeiten": 10, "kooperationspartner_innen": 10, "dienstleister_innen": 10, "mitwirkend": 10, "zielgruppenvertreter_innen": 10, "werbeagentur": 10, "schaar": 10, "logo": 10, "webdesign": 10, "wof\u00fcr": 10, "arbeitsstunden": 10, "geld": 10, "allem": [10, 200, 214, 224, 422], "eingesetzt": 10, "basisarbeit": 10, "workflow": [10, 111, 218, 252, 267, 373, 957, 1077], "datenstrukturen": [10, 236, 254, 275, 1257], "zeitgem\u00e4\u00df": 10, "interakt": [10, 1158], "know": [10, 29, 48, 50, 59, 69, 73, 131, 157, 172, 174, 191, 192, 193, 194, 197, 198, 199, 211, 212, 215, 219, 220, 223, 227, 231, 242, 243, 250, 253, 310, 313, 317, 342, 372, 373, 378, 387, 406, 436, 438, 444, 449, 466, 476, 488, 490, 492, 494, 498, 499, 500, 506, 510, 529, 537, 544, 549, 550, 562, 599, 607, 634, 650, 652, 658, 663, 682, 748, 749, 751, 800, 813, 815, 825, 827, 834, 844, 846, 848, 870, 891, 928, 931, 934, 937, 939, 955, 961, 984, 1016, 1021, 1023, 1032, 1042, 1046, 1051, 1066, 1080, 1102, 1110, 1115, 1116, 1127, 1132, 1135, 1138, 1139, 1158, 1166, 1204, 1241, 1262, 1265, 1266, 1279], "person": [10, 103, 107, 199, 228, 247, 250, 289, 291, 293, 300, 304, 311, 342, 343, 411, 495, 531, 550, 551, 555, 579, 662, 742, 783, 1012, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1204, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1241, 1242], "welchem": [10, 210], "umfang": 10, "sachressourcen": 10, "ben\u00f6tigt": [10, 150, 152, 165, 235, 236], "zugekauft": 10, "backendprogrammierung": 10, "programmiersprach": [10, 176, 1257, 1264], "ca": [10, 19, 200, 202, 785, 1236], "200": [10, 210, 212, 224, 241, 243, 250, 257, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 308, 315, 325, 331, 343, 347, 353, 359, 365, 369, 396, 401, 677, 678, 679, 680, 681, 683, 684, 685, 686, 700, 961, 1067, 1183], "stunden": 10, "webprogrammierung": 10, "javascript": [10, 176, 224, 234, 246, 255, 279, 284, 1103, 1149], "css": 10, "150": [10, 210, 224, 234, 241, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 800], "kreativarbeit": 10, "erreichen": [10, 1264], "pers\u00f6nlich": [10, 422], "kontakt": 10, "freund": 10, "ebenfal": [10, 150, 152, 165], "t\u00e4tig": 10, "mich": [10, 162, 200, 214, 234, 242, 422], "ermutigt": 10, "\u00fcberhaupt": [10, 56, 1264, 1276], "starten": 10, "onlin": [10, 150, 152, 165, 197, 204, 206, 207, 218, 223, 226, 422], "repr\u00e4sent": 10, "post": [10, 82, 174, 181, 192, 194, 196, 197, 198, 199, 202, 252, 267, 316, 436, 450, 555, 650, 759, 928, 1066, 1075, 1077, 1080, 1279], "meiner": [10, 280, 422], "facebookseit": 10, "relevanten": 10, "foren": 10, "linkedin": 10, "typisch": [10, 235, 1255], "projektbeginn": 10, "liegt": [10, 200, 210, 214, 283, 1256], "abschluss": [10, 201, 404], "oktob": 10, "projektdau": 10, "\u00fcberschreiten": 10, "2021": [10, 169, 202, 204, 239, 241, 250, 256, 257, 260, 265, 268, 291, 401, 403, 417, 418, 421, 626, 760, 767, 783, 809, 887, 891, 913, 914, 1069, 1083, 1098, 1134, 1250], "funktion": [10, 214, 218, 224, 235, 236, 237, 241, 244, 247, 250, 271, 273, 276, 279, 311, 343, 399], "mitarbeiter_innen": 10, "stundenanzahl": 10, "jeweilig": 10, "stundens\u00e4tz": 10, "senior": 10, "junior": 10, "programmierer_in": 10, "designer_in": 10, "contentmanager_in": 10, "projektmanager_in": 10, "assistenz": 10, "administr": [10, 155, 199, 529, 868, 934, 1012, 1019, 1068], "sachbearbeiter_in": 10, "social": [10, 32, 550, 557, 561, 574, 575, 576, 579, 585, 588, 589, 590], "media": [10, 67, 208, 936, 984, 1268], "spzialist_in": 10, "firmeneigent\u00fcmer_innen": 10, "gesellschafter_innen": 10, "vereinsfunktion\u00e4r_innen": 10, "betr\u00e4gt": 10, "f\u00f6rderbar": 10, "stundensatz": 10, "40": [10, 95, 150, 152, 165, 174, 195, 202, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 434, 512, 553, 554, 569, 639, 640, 763, 764, 797, 845, 846, 847, 913, 932, 936, 937, 1096, 1110, 1111, 1135], "brutto": 10, "nachweislich": 10, "angestellt": 10, "projektmitarbeiter_innen": 10, "errechnet": 10, "vollzeitvertrag": 10, "38": [10, 195, 202, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 553, 569, 594, 797, 845, 913, 1096, 1120, 1212, 1213], "jahresstundenteil": 10, "1720": [10, 266], "teilzeitbesch\u00e4ftigten": 10, "aliquot": [10, 150, 152, 165], "reduziert": [10, 214, 369], "dienstgeberanteil": 10, "faktor": 10, "ber\u00fccksichtigt": 10, "kalkul": 10, "jahresbruttogehalt": 10, "hohe": 10, "risiko": 10, "h\u00f6herer": 10, "eigenmittelanteil": 10, "bedingung": 10, "festgelegt": 10, "erh\u00f6hen": 10, "gemeinkosten": 10, "gef\u00f6rdert": 10, "antr\u00e4gen": 10, "diplomarbeiten": 10, "mitarbeit": [10, 165], "name": [10, 26, 27, 44, 99, 100, 101, 102, 103, 111, 113, 118, 131, 146, 161, 166, 170, 173, 174, 189, 191, 192, 194, 195, 196, 199, 211, 213, 215, 220, 223, 224, 227, 230, 232, 234, 239, 244, 247, 250, 251, 262, 264, 265, 266, 269, 271, 273, 276, 281, 283, 286, 301, 304, 308, 309, 311, 315, 325, 347, 353, 359, 365, 369, 377, 381, 389, 395, 398, 399, 400, 415, 436, 450, 456, 464, 471, 490, 493, 495, 504, 506, 510, 512, 514, 515, 516, 517, 518, 522, 524, 528, 534, 537, 538, 540, 541, 543, 544, 545, 546, 553, 554, 570, 574, 575, 576, 581, 584, 588, 589, 590, 605, 607, 610, 615, 620, 627, 642, 652, 661, 663, 665, 722, 724, 736, 761, 765, 797, 803, 809, 814, 815, 837, 846, 849, 856, 857, 858, 861, 870, 871, 873, 876, 877, 891, 897, 913, 920, 925, 931, 934, 936, 937, 940, 948, 952, 961, 966, 978, 980, 1004, 1007, 1008, 1015, 1016, 1019, 1021, 1025, 1033, 1043, 1080, 1083, 1084, 1085, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1115, 1120, 1122, 1125, 1129, 1130, 1132, 1133, 1137, 1138, 1146, 1148, 1150, 1152, 1153, 1154, 1159, 1164, 1166, 1170, 1187, 1188, 1198, 1204, 1206, 1213, 1216, 1219, 1220, 1221, 1226, 1227, 1228, 1230, 1231, 1232, 1241, 1248, 1250, 1252, 1257, 1259, 1266, 1267], "betrag": 10, "8000": [10, 266], "frontendprogrammierung": 10, "4500": [10, 266], "sachkosten": 10, "projektbedingt": 10, "reisekosten": 10, "betriebskosten": 10, "unmittelbar": 10, "projektt\u00e4tigkeit": 10, "entstehen": [10, 396], "leistungen": 10, "reisen": 10, "gliedern": 10, "rechnung": [10, 201, 308], "enthalten": 10, "umsatzsteu": 10, "darf": [10, 404], "kostenabrechnung": 10, "nur": [10, 56, 150, 152, 165, 200, 209, 210, 214, 224, 226, 234, 235, 239, 241, 249, 271, 369, 399, 422, 1255, 1264, 1275, 1276], "f\u00f6rdernehmer_in": 10, "vorsteuerabzugsberechtigt": 10, "13500": [10, 266], "beantragt": 10, "differenz": [10, 286], "aufgliedern": 10, "eigenmittel": 10, "f\u00f6rderungseinrichtungen": 10, "fremdmittel": 10, "kredit": 10, "leas": 10, "pro": [10, 227, 782, 920, 1101], "bono": 10, "beitrag": 10, "restfinanzierung": 10, "gesamtbetrag": 10, "ber\u00fccksichtigten": 10, "einzelkosten": 10, "achtung": [10, 180], "gesamtprojektkosten": 10, "h\u00f6her": 10, "auszuf\u00fcllen": 10, "leer": [10, 241, 247, 255, 311], "bleiben": [10, 201, 224, 234, 1264], "reich": [10, 224], "nein": [10, 235, 241, 247, 292, 301, 359, 385], "neben": [10, 214], "antr\u00e4g": 10, "oderstipendium": 10, "laufenden": 10, "call": [10, 19, 29, 37, 49, 52, 99, 100, 103, 107, 108, 119, 130, 146, 174, 181, 191, 192, 193, 194, 195, 197, 202, 206, 208, 211, 213, 221, 227, 229, 250, 258, 260, 266, 271, 274, 276, 281, 283, 288, 289, 292, 307, 309, 311, 324, 325, 333, 342, 347, 349, 382, 404, 409, 411, 422, 425, 432, 436, 437, 440, 451, 467, 469, 473, 479, 480, 483, 493, 496, 497, 505, 519, 522, 528, 532, 534, 540, 548, 554, 559, 574, 575, 576, 592, 601, 604, 605, 607, 608, 620, 634, 652, 655, 658, 660, 663, 672, 722, 724, 725, 730, 737, 739, 744, 747, 750, 751, 755, 756, 761, 763, 764, 770, 773, 776, 777, 778, 782, 801, 815, 822, 825, 826, 830, 835, 839, 840, 844, 856, 863, 864, 866, 867, 869, 871, 874, 875, 888, 891, 931, 952, 961, 964, 966, 970, 972, 974, 976, 978, 980, 982, 984, 989, 992, 998, 1003, 1004, 1007, 1017, 1018, 1021, 1022, 1023, 1026, 1028, 1035, 1050, 1051, 1058, 1061, 1066, 1067, 1077, 1080, 1081, 1083, 1085, 1103, 1105, 1106, 1107, 1112, 1118, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1149, 1150, 1154, 1156, 1159, 1160, 1166, 1184, 1188, 1208, 1213, 1221, 1224, 1228, 1230, 1242, 1243, 1244, 1267, 1268, 1269, 1270, 1273], "weiteren": 10, "stipendium": 10, "imlaufenden": 10, "habe": [10, 200, 201, 209, 214, 230, 359, 422], "zuge": [10, 150, 152, 165], "projektantragsstellung": 10, "rundschreiben": 10, "expert": [10, 15, 196, 197, 202, 607, 870, 891, 937, 1212], "group": [10, 16, 90, 91, 112, 113, 114, 130, 131, 136, 155, 156, 157, 211, 223, 228, 230, 239, 242, 243, 250, 256, 263, 271, 280, 283, 289, 292, 304, 318, 325, 328, 331, 353, 359, 365, 371, 372, 384, 404, 417, 418, 422, 432, 457, 500, 501, 626, 857, 858, 866, 877, 878, 879, 880, 886, 887, 913, 918, 919, 920, 921, 925, 930, 934, 984, 1015, 1016, 1025, 1026, 1031, 1066, 1081, 1105, 1161, 1187, 1241], "wirtschaftkamm": 10, "blah": [10, 26, 48, 52, 170, 173, 174, 192, 195, 213, 224, 231, 234, 239, 247, 250, 256, 260, 266, 267, 269, 271, 276, 279, 286, 289, 301, 308, 311, 321, 325, 343, 353, 359, 384, 396, 397, 404, 412, 415, 494, 529, 747, 761, 797, 801, 815, 940, 948, 1022, 1023, 1103, 1138, 1144, 1164, 1224, 1282], "nehmen": [10, 201], "\u212c": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2145": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u212d": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2102": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2146": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03dd": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2130": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2147": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2131": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u02c7": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u210f": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u210b": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2111": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2148": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2110": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2124": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2112": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2133": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2115": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2134": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u210c": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2119": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u210d": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u211a": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u211c": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u211b": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u211d": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03f5": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03d5": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03c5": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03b5": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03f0": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03c6": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03d6": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03f1": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03c2": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u03d1": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "\u2128": [11, 12, 13, 25, 28, 29, 30, 31, 32, 37, 41, 42, 49, 52, 53, 62, 63, 86, 95, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 173, 174, 227, 228, 230, 231, 232, 233, 235, 237, 238, 245, 248, 251, 252, 253, 254, 258, 261, 264, 267, 269, 270, 274, 277, 280, 282, 285, 291, 295, 296, 297, 298, 299, 306, 307, 309, 316, 317, 318, 319, 320, 327, 328, 333, 334, 335, 338, 341, 342, 345, 346, 349, 350, 355, 356, 361, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 404, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 569, 570, 577, 578, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 682, 683, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 720, 721, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 779, 782, 784, 786, 787, 788, 789, 790, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 861, 862, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 887, 888, 889, 890, 891, 892, 893, 894, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934, 939, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 961, 963, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 986, 987, 989, 991, 992, 994, 997, 998, 1000, 1001, 1003, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1237, 1241, 1242, 1243, 1244], "larg": [11, 17, 25, 67, 194, 197, 199, 223, 242, 243, 252, 263, 269, 310, 313, 387, 479, 488, 490, 494, 500, 501, 560, 660, 797, 809, 826, 978, 984, 1066, 1083, 1108, 1110, 1112, 1132, 1139, 1166, 1187, 1226, 1230, 1248, 1280], "amount": [11, 95, 99, 100, 146, 192, 193, 194, 197, 203, 206, 223, 230, 258, 308, 309, 373, 500, 512, 662, 826, 827, 861, 863, 864, 1016, 1033, 1066, 1132], "pdf": [11, 24, 216, 218, 223, 227, 230, 231, 233, 283, 297, 306, 307, 327, 328, 350, 371, 372, 373, 375, 403, 404, 407, 409, 412, 891, 913, 914, 937, 1037, 1085, 1181, 1261, 1268, 1269, 1270, 1271, 1272, 1275, 1276], "Not": [11, 30, 34, 40, 69, 98, 101, 102, 104, 105, 112, 134, 164, 174, 194, 195, 196, 199, 202, 223, 226, 227, 267, 269, 270, 271, 284, 293, 320, 324, 375, 384, 386, 440, 449, 471, 483, 486, 488, 494, 510, 519, 525, 540, 615, 655, 657, 659, 663, 664, 726, 739, 747, 751, 757, 759, 763, 770, 774, 776, 777, 778, 797, 819, 847, 850, 929, 947, 955, 961, 966, 968, 1035, 1046, 1064, 1067, 1069, 1071, 1081, 1105, 1107, 1112, 1113, 1114, 1115, 1125, 1127, 1139, 1148, 1153, 1208, 1212, 1217, 1231, 1233, 1249, 1258, 1262], "entir": [11, 17, 69, 99, 100, 139, 146, 174, 192, 193, 194, 197, 203, 215, 220, 227, 230, 248, 251, 252, 260, 274, 277, 280, 283, 295, 296, 298, 300, 310, 317, 320, 324, 330, 335, 338, 342, 346, 352, 358, 364, 373, 382, 384, 422, 440, 469, 473, 480, 483, 488, 496, 504, 512, 520, 550, 801, 810, 828, 845, 848, 857, 858, 863, 864, 888, 893, 902, 910, 928, 934, 937, 984, 1008, 1014, 1031, 1042, 1051, 1066, 1085, 1115, 1119, 1133, 1138, 1139, 1156, 1158, 1178, 1208, 1241, 1244, 1247, 1259], "satisfi": [11, 19, 227, 549, 664, 756, 759, 761, 835], "sai": [11, 95, 122, 131, 154, 159, 181, 185, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 211, 212, 223, 227, 264, 269, 291, 310, 313, 317, 319, 320, 341, 342, 375, 384, 390, 404, 494, 500, 506, 513, 522, 529, 532, 538, 550, 559, 570, 576, 591, 593, 605, 634, 643, 652, 660, 661, 710, 724, 728, 737, 740, 748, 764, 770, 774, 776, 777, 778, 800, 801, 804, 815, 827, 835, 838, 845, 850, 870, 873, 875, 910, 928, 934, 937, 943, 957, 984, 1016, 1020, 1031, 1033, 1042, 1047, 1052, 1064, 1066, 1080, 1086, 1096, 1099, 1100, 1106, 1110, 1132, 1148, 1160, 1166, 1196, 1216, 1250, 1259, 1281], "colleagu": [11, 15, 203, 243, 490, 529, 742, 1110, 1127, 1139], "aren": [11, 273, 283, 528, 532, 748, 815, 892, 1058, 1069], "either": [11, 26, 29, 30, 159, 192, 194, 202, 203, 307, 310, 313, 488, 525, 531, 575, 800, 801, 810, 813, 822, 848, 857, 858, 888, 891, 924, 937, 1107, 1174, 1224, 1258, 1281], "nobodi": [11, 30, 192, 194, 212, 223, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 491, 493, 650, 690, 749, 857, 858, 868, 883, 885, 891, 892, 939, 1012, 1020, 1041, 1160, 1214, 1244, 1250], "doe": [11, 25, 32, 35, 36, 47, 59, 67, 72, 73, 99, 100, 103, 107, 111, 113, 131, 159, 174, 191, 192, 193, 196, 197, 198, 199, 202, 203, 211, 219, 223, 227, 229, 241, 250, 253, 266, 283, 286, 292, 310, 311, 313, 316, 318, 320, 342, 355, 359, 372, 375, 382, 385, 387, 404, 415, 430, 436, 444, 448, 449, 450, 451, 458, 467, 468, 477, 480, 483, 484, 486, 488, 490, 492, 494, 499, 500, 501, 504, 505, 506, 510, 512, 517, 520, 521, 525, 537, 540, 543, 546, 548, 550, 553, 558, 562, 570, 572, 574, 600, 601, 602, 603, 604, 607, 608, 631, 640, 643, 650, 651, 652, 655, 658, 662, 665, 688, 695, 703, 710, 720, 721, 722, 724, 730, 742, 743, 745, 747, 748, 749, 750, 751, 756, 759, 761, 762, 764, 779, 795, 797, 800, 801, 810, 816, 819, 820, 824, 826, 828, 830, 833, 835, 839, 840, 844, 845, 846, 848, 850, 856, 866, 870, 871, 873, 876, 925, 928, 934, 936, 937, 947, 948, 952, 953, 955, 961, 976, 984, 989, 1000, 1016, 1021, 1022, 1024, 1028, 1031, 1051, 1055, 1058, 1064, 1067, 1068, 1077, 1081, 1083, 1084, 1085, 1086, 1092, 1096, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1110, 1112, 1121, 1125, 1127, 1128, 1132, 1135, 1138, 1156, 1157, 1158, 1178, 1186, 1188, 1214, 1216, 1217, 1219, 1226, 1227, 1230, 1231, 1232, 1234, 1236, 1241, 1258, 1263, 1273], "even": [11, 16, 48, 50, 54, 67, 111, 185, 192, 193, 194, 199, 203, 212, 213, 223, 227, 230, 231, 235, 237, 242, 248, 250, 251, 253, 254, 263, 267, 270, 271, 274, 277, 280, 282, 283, 285, 288, 289, 300, 310, 313, 324, 325, 343, 346, 353, 359, 365, 375, 384, 467, 476, 490, 496, 500, 525, 548, 553, 649, 657, 706, 724, 747, 748, 756, 759, 764, 765, 766, 768, 797, 816, 821, 830, 835, 843, 868, 887, 928, 936, 976, 984, 1021, 1022, 1046, 1064, 1066, 1067, 1068, 1084, 1104, 1116, 1127, 1153, 1156, 1170, 1171, 1208, 1228, 1236, 1243, 1273], "tech": [11, 32, 191], "work": [11, 14, 27, 29, 30, 31, 44, 47, 52, 54, 61, 67, 69, 87, 88, 93, 95, 98, 112, 114, 116, 130, 131, 134, 135, 150, 154, 156, 159, 164, 165, 170, 182, 183, 191, 192, 193, 195, 197, 198, 199, 202, 203, 215, 219, 220, 221, 230, 231, 233, 243, 248, 250, 252, 260, 261, 264, 266, 267, 269, 274, 276, 279, 283, 288, 297, 300, 306, 307, 309, 310, 313, 320, 321, 324, 325, 327, 328, 330, 358, 359, 371, 372, 373, 375, 380, 381, 390, 404, 409, 410, 412, 417, 418, 423, 467, 468, 488, 490, 500, 510, 512, 515, 516, 522, 523, 525, 526, 531, 538, 540, 541, 543, 544, 546, 549, 550, 553, 554, 594, 596, 598, 604, 606, 607, 643, 667, 696, 703, 730, 732, 734, 739, 751, 753, 756, 795, 816, 833, 844, 845, 846, 849, 850, 852, 856, 866, 868, 870, 875, 891, 897, 900, 904, 911, 913, 915, 916, 925, 928, 936, 947, 952, 961, 964, 968, 982, 984, 989, 992, 1008, 1012, 1016, 1023, 1029, 1032, 1041, 1042, 1050, 1064, 1066, 1081, 1084, 1085, 1086, 1096, 1099, 1101, 1107, 1130, 1133, 1134, 1135, 1154, 1160, 1163, 1164, 1186, 1196, 1197, 1208, 1215, 1224, 1226, 1227, 1228, 1230, 1232, 1241, 1250, 1258, 1262, 1266, 1267], "although": [11, 16, 67, 126, 130, 192, 194, 198, 203, 213, 229, 253, 273, 283, 386, 422, 525, 532, 604, 739, 751, 800, 801, 803, 849, 870, 873, 1012, 1041, 1066, 1103, 1108, 1166, 1214], "gain": [11, 199, 310, 313, 500, 870, 984], "incred": 11, "momentum": 11, "expect": [11, 25, 37, 166, 173, 191, 194, 239, 260, 266, 267, 276, 279, 286, 311, 325, 343, 345, 347, 382, 477, 532, 541, 550, 593, 658, 720, 770, 801, 807, 824, 826, 835, 848, 928, 936, 937, 957, 968, 1053, 1066, 1071, 1080, 1127, 1137, 1150, 1181, 1191, 1213, 1247, 1248, 1251, 1266], "context": [11, 48, 50, 99, 100, 146, 155, 174, 192, 212, 215, 227, 230, 232, 234, 241, 272, 276, 277, 279, 283, 286, 292, 300, 304, 309, 319, 320, 321, 324, 331, 335, 338, 341, 342, 345, 346, 353, 422, 487, 569, 570, 584, 652, 658, 763, 764, 766, 797, 824, 827, 845, 863, 864, 868, 928, 964, 966, 970, 976, 980, 989, 992, 994, 998, 1004, 1019, 1066, 1069, 1080, 1081, 1109, 1118, 1217, 1277], "thi": [11, 15, 16, 17, 18, 26, 27, 30, 31, 32, 37, 40, 41, 44, 47, 48, 49, 50, 54, 59, 66, 67, 73, 74, 78, 79, 86, 93, 95, 98, 99, 100, 103, 109, 111, 113, 122, 124, 131, 139, 142, 154, 157, 159, 161, 172, 173, 174, 175, 187, 190, 191, 192, 193, 195, 196, 197, 198, 206, 208, 210, 211, 213, 215, 217, 218, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 243, 250, 252, 253, 260, 263, 264, 266, 269, 271, 273, 274, 276, 279, 282, 283, 289, 292, 296, 298, 300, 307, 315, 316, 318, 320, 325, 335, 338, 342, 343, 345, 353, 356, 362, 369, 373, 380, 381, 382, 384, 385, 386, 387, 390, 395, 404, 407, 410, 422, 424, 428, 435, 436, 449, 458, 459, 483, 487, 488, 490, 491, 492, 494, 499, 500, 510, 513, 514, 515, 516, 517, 520, 523, 524, 525, 528, 529, 532, 538, 541, 552, 560, 561, 572, 574, 576, 594, 605, 606, 609, 610, 611, 612, 614, 616, 620, 621, 624, 625, 626, 627, 630, 633, 634, 636, 637, 639, 640, 642, 643, 645, 648, 650, 651, 652, 654, 655, 658, 660, 662, 665, 670, 678, 680, 681, 684, 696, 704, 705, 710, 713, 722, 724, 725, 727, 728, 731, 733, 735, 736, 737, 739, 744, 745, 747, 748, 750, 751, 757, 759, 761, 765, 766, 770, 772, 773, 776, 777, 778, 782, 783, 797, 800, 801, 806, 812, 813, 815, 822, 824, 825, 826, 827, 828, 831, 833, 835, 837, 838, 844, 846, 848, 857, 858, 861, 862, 870, 873, 875, 876, 885, 887, 888, 891, 896, 898, 928, 933, 934, 935, 936, 937, 943, 948, 953, 957, 959, 966, 980, 984, 989, 996, 1004, 1008, 1015, 1016, 1022, 1029, 1030, 1031, 1032, 1033, 1037, 1040, 1042, 1047, 1049, 1058, 1061, 1071, 1072, 1075, 1076, 1079, 1081, 1084, 1085, 1087, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1112, 1114, 1116, 1118, 1120, 1127, 1130, 1132, 1134, 1136, 1143, 1146, 1148, 1149, 1150, 1153, 1154, 1156, 1158, 1159, 1160, 1165, 1181, 1196, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1221, 1222, 1224, 1225, 1226, 1230, 1233, 1236, 1241, 1243, 1247, 1248, 1250, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1277, 1278, 1280, 1281, 1282], "defin": [11, 40, 114, 118, 121, 122, 126, 129, 131, 139, 171, 173, 195, 211, 213, 228, 230, 232, 234, 239, 247, 250, 251, 253, 260, 264, 266, 269, 273, 276, 279, 283, 291, 293, 304, 315, 325, 342, 343, 355, 359, 365, 373, 381, 385, 399, 410, 430, 435, 440, 445, 446, 449, 466, 467, 468, 469, 470, 471, 484, 492, 493, 494, 496, 500, 513, 514, 515, 517, 519, 520, 528, 529, 532, 534, 540, 544, 558, 562, 570, 591, 592, 604, 626, 634, 651, 652, 653, 655, 657, 658, 660, 663, 664, 665, 672, 675, 696, 700, 721, 742, 750, 751, 759, 789, 800, 803, 808, 809, 812, 813, 814, 815, 826, 841, 844, 848, 849, 868, 888, 928, 929, 937, 943, 945, 957, 1016, 1023, 1050, 1073, 1083, 1085, 1100, 1102, 1106, 1108, 1110, 1122, 1127, 1139, 1149, 1205, 1217, 1221, 1253, 1258, 1266, 1272, 1273], "solv": [11, 32, 69, 78, 112, 113, 172, 192, 193, 221, 223, 227, 228, 230, 232, 243, 248, 261, 269, 274, 277, 288, 291, 313, 317, 324, 328, 330, 333, 345, 349, 382, 385, 387, 390, 470, 512, 515, 780, 783, 870, 984, 1059, 1066, 1094, 1096, 1098, 1127, 1204, 1208, 1214, 1259, 1273], "number": [11, 14, 23, 40, 44, 48, 49, 50, 58, 67, 69, 71, 73, 74, 99, 100, 111, 114, 118, 120, 130, 146, 154, 187, 191, 193, 194, 197, 199, 202, 203, 209, 211, 214, 220, 223, 227, 230, 233, 234, 235, 237, 242, 243, 246, 248, 249, 251, 254, 258, 260, 261, 263, 264, 266, 267, 270, 272, 273, 274, 276, 279, 280, 282, 284, 285, 287, 288, 289, 291, 296, 298, 300, 303, 304, 310, 311, 316, 317, 318, 319, 320, 321, 323, 324, 325, 329, 330, 333, 341, 342, 345, 346, 347, 349, 351, 352, 353, 357, 358, 359, 363, 364, 367, 368, 369, 373, 381, 382, 390, 395, 404, 411, 422, 426, 428, 430, 432, 434, 435, 436, 442, 446, 448, 449, 460, 471, 487, 491, 496, 500, 504, 510, 512, 516, 520, 524, 525, 529, 560, 561, 569, 594, 602, 604, 607, 609, 620, 626, 653, 672, 680, 683, 690, 707, 724, 725, 734, 737, 748, 756, 759, 764, 768, 797, 801, 804, 835, 837, 855, 863, 864, 871, 897, 917, 919, 921, 922, 925, 936, 943, 945, 952, 955, 964, 966, 978, 980, 986, 994, 998, 1015, 1016, 1019, 1023, 1024, 1025, 1030, 1031, 1032, 1033, 1041, 1061, 1066, 1067, 1068, 1081, 1083, 1107, 1108, 1110, 1112, 1113, 1114, 1124, 1136, 1137, 1138, 1143, 1144, 1154, 1155, 1156, 1158, 1159, 1170, 1171, 1179, 1181, 1188, 1190, 1192, 1194, 1203, 1208, 1211, 1216, 1234, 1236, 1241, 1254, 1266, 1273, 1279], "provid": [11, 14, 24, 45, 58, 168, 192, 194, 195, 196, 198, 199, 202, 203, 219, 260, 266, 267, 276, 279, 283, 317, 333, 349, 373, 486, 514, 515, 525, 532, 541, 550, 561, 569, 751, 826, 848, 867, 870, 879, 910, 936, 937, 984, 1012, 1026, 1066, 1068, 1110, 1119, 1137, 1150, 1213, 1243, 1261, 1265, 1273, 1281], "depth": [11, 223, 227, 248, 260, 266, 276, 277, 279, 490, 831, 1112, 1208, 1212, 1213], "repres": [11, 139, 192, 194, 215, 260, 266, 276, 279, 283, 304, 315, 390, 499, 553, 570, 572, 659, 724, 740, 797, 863, 864, 867, 934, 937, 955, 980, 1033, 1139, 1166, 1204, 1226, 1233, 1266, 1279], "own": [11, 15, 27, 30, 52, 53, 99, 100, 134, 146, 154, 159, 164, 172, 192, 193, 195, 196, 202, 219, 223, 269, 293, 298, 307, 317, 342, 355, 356, 374, 375, 381, 382, 383, 384, 385, 386, 490, 496, 511, 528, 537, 553, 570, 575, 639, 640, 649, 732, 733, 735, 736, 757, 758, 764, 770, 797, 811, 815, 827, 837, 846, 863, 864, 866, 867, 876, 878, 879, 887, 888, 910, 921, 934, 936, 984, 1016, 1023, 1050, 1055, 1066, 1067, 1068, 1080, 1100, 1107, 1124, 1129, 1130, 1132, 1215, 1248, 1259, 1262, 1266, 1273], "iter": [11, 49, 52, 54, 118, 119, 211, 214, 218, 223, 227, 228, 230, 232, 235, 236, 240, 242, 244, 248, 249, 251, 252, 254, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 274, 275, 278, 281, 283, 285, 286, 290, 302, 305, 311, 319, 320, 322, 326, 331, 341, 344, 345, 346, 348, 354, 360, 365, 370, 383, 389, 404, 410, 461, 463, 476, 512, 557, 607, 626, 643, 684, 685, 686, 690, 693, 700, 703, 706, 708, 713, 749, 773, 793, 801, 837, 850, 1022, 1105, 1109, 1111, 1120, 1133, 1143, 1157, 1158, 1166, 1204, 1208, 1220, 1230, 1233, 1277], "yield": [11, 210, 211, 224, 227, 228, 230, 239, 251, 258, 264, 268, 270, 272, 273, 279, 283, 288, 290, 300, 303, 304, 311, 319, 320, 321, 324, 325, 330, 332, 343, 346, 347, 353, 359, 363, 364, 365, 368, 369, 386, 471, 560, 569, 770, 773, 776, 777, 778, 1105, 1111, 1112, 1114, 1133, 1143, 1192, 1277], "multipl": [11, 22, 23, 48, 50, 65, 95, 99, 100, 146, 192, 193, 195, 208, 223, 227, 230, 250, 251, 252, 264, 266, 283, 318, 342, 426, 428, 432, 433, 436, 445, 447, 450, 459, 466, 470, 488, 493, 506, 511, 528, 532, 543, 570, 584, 597, 652, 664, 722, 736, 757, 761, 770, 797, 817, 819, 825, 835, 837, 845, 848, 863, 864, 867, 868, 871, 873, 878, 879, 925, 936, 953, 955, 966, 974, 976, 984, 986, 989, 992, 1025, 1050, 1055, 1066, 1076, 1089, 1090, 1127, 1138, 1139, 1152, 1153, 1158, 1208, 1233, 1265], "artifact": [11, 198, 202, 215, 220, 333, 349, 506, 945, 1083, 1084, 1085, 1096, 1250, 1273], "complet": [11, 29, 49, 113, 114, 130, 159, 161, 168, 174, 191, 192, 212, 223, 231, 239, 248, 261, 264, 267, 274, 288, 289, 291, 318, 324, 330, 335, 342, 355, 382, 389, 390, 470, 487, 500, 537, 540, 597, 606, 651, 652, 744, 764, 797, 801, 830, 831, 857, 858, 869, 931, 937, 978, 984, 1020, 1066, 1067, 1105, 1132, 1208, 1213, 1214, 1216, 1224, 1236, 1253, 1258, 1262, 1265, 1267, 1269, 1277, 1278, 1279, 1280, 1281, 1282], "prepar": [14, 111, 113, 129, 171, 172, 191, 223, 280, 376, 379, 404, 422, 555, 595, 626, 687, 1076, 1101, 1205, 1213, 1242], "base": [14, 17, 29, 32, 40, 52, 67, 69, 86, 96, 110, 113, 126, 131, 172, 189, 192, 194, 195, 213, 218, 223, 224, 227, 230, 231, 234, 238, 241, 243, 253, 267, 269, 272, 276, 277, 281, 286, 288, 294, 301, 304, 309, 311, 315, 316, 317, 318, 319, 320, 325, 330, 341, 342, 343, 345, 346, 347, 353, 356, 359, 364, 365, 369, 375, 378, 380, 381, 382, 383, 384, 387, 400, 404, 408, 415, 436, 444, 471, 488, 506, 511, 512, 513, 520, 526, 534, 535, 550, 555, 559, 560, 562, 569, 594, 606, 610, 626, 637, 678, 680, 681, 682, 683, 685, 686, 690, 720, 744, 750, 757, 782, 784, 786, 788, 793, 798, 828, 830, 837, 840, 845, 850, 882, 884, 925, 928, 957, 964, 968, 980, 984, 986, 1064, 1066, 1077, 1081, 1083, 1084, 1098, 1099, 1101, 1116, 1118, 1123, 1124, 1165, 1170, 1187, 1215, 1216, 1230, 1257, 1258, 1259, 1268], "upon": [14, 59, 86, 142, 194, 195, 223, 227, 231, 238, 277, 309, 316, 335, 338, 355, 375, 382, 386, 492, 510, 524, 558, 610, 626, 664, 682, 757, 821, 844, 937, 957, 1081, 1170, 1234, 1241, 1258, 1262, 1268], "exist": [14, 25, 33, 34, 40, 42, 98, 99, 100, 138, 139, 146, 154, 172, 198, 203, 231, 243, 250, 316, 320, 377, 380, 382, 389, 401, 404, 407, 488, 510, 512, 526, 529, 534, 548, 553, 573, 576, 607, 615, 658, 704, 706, 720, 724, 734, 736, 755, 797, 844, 848, 857, 858, 863, 864, 866, 873, 882, 884, 893, 897, 898, 910, 937, 984, 1016, 1021, 1025, 1031, 1034, 1043, 1070, 1077, 1096, 1100, 1101, 1106, 1107, 1116, 1121, 1156, 1158, 1177, 1217, 1225, 1226, 1236, 1241, 1243], "navig": [14, 1233], "through": [14, 21, 25, 47, 62, 67, 93, 159, 161, 164, 166, 191, 192, 194, 199, 203, 219, 223, 227, 229, 232, 243, 251, 252, 253, 258, 264, 317, 319, 320, 335, 338, 341, 346, 372, 375, 376, 379, 385, 387, 411, 415, 422, 440, 460, 479, 499, 503, 522, 537, 576, 598, 601, 660, 666, 668, 669, 744, 748, 749, 751, 759, 800, 801, 803, 824, 835, 846, 850, 861, 870, 919, 928, 936, 937, 955, 982, 1014, 1041, 1066, 1077, 1080, 1081, 1107, 1112, 1115, 1130, 1132, 1135, 1170, 1215, 1230, 1258, 1260, 1266, 1269, 1277], "try": [14, 113, 118, 126, 139, 142, 171, 172, 173, 191, 192, 194, 199, 210, 213, 223, 224, 227, 231, 234, 239, 241, 244, 247, 250, 253, 256, 258, 260, 263, 266, 269, 271, 273, 276, 279, 283, 286, 288, 289, 291, 292, 295, 296, 298, 300, 301, 304, 307, 308, 311, 318, 319, 320, 321, 324, 325, 331, 342, 343, 347, 353, 355, 359, 365, 369, 374, 390, 397, 398, 399, 400, 404, 408, 409, 419, 496, 500, 519, 524, 529, 538, 550, 557, 574, 579, 588, 596, 604, 656, 673, 708, 720, 724, 728, 730, 735, 747, 770, 778, 793, 795, 797, 801, 825, 835, 842, 846, 848, 936, 989, 992, 1025, 1066, 1080, 1105, 1112, 1166, 1208, 1214, 1225, 1226, 1230, 1243], "deviat": [14, 199, 211, 219, 228, 252, 283, 384, 422, 984], "after": [14, 30, 166, 192, 193, 194, 199, 202, 211, 220, 223, 230, 243, 250, 260, 266, 276, 279, 282, 283, 289, 304, 309, 316, 318, 325, 353, 369, 373, 390, 428, 436, 437, 470, 490, 497, 522, 528, 531, 543, 574, 575, 598, 605, 657, 672, 708, 724, 757, 762, 765, 770, 797, 801, 810, 812, 813, 815, 871, 874, 891, 892, 925, 934, 961, 966, 972, 982, 1047, 1052, 1066, 1071, 1076, 1077, 1080, 1083, 1103, 1105, 1107, 1132, 1133, 1137, 1173, 1187, 1205, 1212, 1221, 1233, 1242, 1243, 1248], "writeup": [14, 203, 385, 387, 1066, 1096], "what": [14, 15, 30, 31, 34, 35, 42, 44, 45, 48, 50, 54, 59, 67, 72, 75, 76, 86, 87, 88, 93, 96, 110, 113, 118, 119, 126, 131, 139, 154, 159, 166, 171, 172, 174, 191, 192, 193, 194, 195, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 242, 250, 252, 253, 267, 268, 269, 278, 283, 291, 297, 307, 310, 313, 317, 319, 320, 333, 338, 341, 349, 353, 355, 356, 372, 373, 374, 383, 384, 386, 387, 389, 390, 396, 404, 407, 409, 411, 412, 415, 425, 433, 438, 448, 449, 451, 464, 473, 476, 483, 486, 488, 490, 491, 494, 495, 496, 500, 504, 506, 511, 512, 514, 516, 524, 525, 532, 541, 549, 551, 553, 574, 575, 585, 591, 593, 602, 605, 626, 627, 630, 633, 636, 639, 642, 643, 645, 655, 658, 660, 661, 662, 663, 665, 672, 675, 682, 720, 728, 739, 740, 743, 747, 751, 756, 759, 770, 782, 795, 797, 810, 813, 817, 818, 820, 825, 827, 834, 835, 839, 844, 845, 846, 856, 857, 858, 861, 865, 867, 868, 870, 871, 873, 875, 876, 877, 891, 906, 907, 908, 928, 934, 936, 937, 945, 948, 952, 955, 957, 961, 980, 987, 992, 997, 1022, 1023, 1029, 1030, 1031, 1032, 1034, 1036, 1041, 1049, 1050, 1051, 1052, 1053, 1054, 1068, 1069, 1071, 1072, 1075, 1076, 1079, 1081, 1084, 1099, 1101, 1102, 1103, 1105, 1107, 1110, 1113, 1114, 1118, 1119, 1127, 1132, 1150, 1156, 1160, 1161, 1166, 1168, 1177, 1204, 1215, 1217, 1224, 1233, 1241, 1243, 1247, 1248, 1250, 1252, 1262, 1263, 1266, 1273, 1277, 1278, 1279], "collect": [14, 191, 193, 235, 242, 251, 257, 258, 275, 277, 278, 279, 291, 300, 302, 309, 317, 319, 320, 324, 335, 338, 341, 342, 345, 346, 358, 364, 368, 369, 389, 499, 506, 637, 682, 820, 835, 845, 861, 935, 984, 1066, 1094, 1105, 1115, 1123, 1157, 1164, 1197, 1204, 1207, 1235, 1236, 1241, 1243, 1280], "question": [14, 19, 22, 23, 25, 52, 91, 112, 113, 125, 136, 157, 194, 199, 211, 223, 227, 229, 251, 252, 253, 263, 264, 266, 267, 269, 289, 372, 404, 411, 418, 445, 474, 480, 492, 511, 516, 517, 543, 595, 659, 739, 743, 744, 801, 816, 819, 848, 857, 858, 880, 910, 934, 937, 961, 976, 992, 1016, 1020, 1064, 1065, 1066, 1100, 1108, 1112, 1117, 1208], "ask": [14, 192, 197, 199, 223, 226, 227, 292, 324, 384, 404, 411, 510, 549, 550, 572, 591, 643, 655, 665, 801, 828, 839, 847, 887, 1010, 1012, 1066, 1127, 1208], "answer": [14, 32, 103, 146, 196, 199, 211, 223, 227, 229, 230, 253, 264, 271, 343, 353, 381, 411, 517, 543, 595, 720, 743, 744, 762, 763, 764, 825, 835, 841, 857, 858, 863, 864, 876, 878, 879, 882, 884, 934, 937, 948, 992, 1012, 1016, 1064, 1068, 1100, 1107, 1108, 1112, 1119, 1136, 1139, 1208], "list": [14, 24, 49, 52, 88, 113, 135, 156, 166, 168, 173, 174, 177, 192, 199, 203, 206, 213, 218, 220, 223, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 242, 243, 246, 248, 249, 251, 254, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 274, 275, 276, 281, 282, 284, 285, 287, 288, 290, 292, 296, 297, 300, 302, 303, 305, 306, 307, 310, 312, 313, 316, 317, 318, 322, 323, 324, 326, 327, 328, 329, 330, 332, 341, 342, 344, 345, 346, 347, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 370, 371, 372, 374, 378, 384, 387, 389, 396, 399, 401, 404, 408, 409, 410, 422, 479, 485, 490, 504, 506, 512, 519, 522, 524, 526, 528, 534, 537, 540, 552, 554, 555, 594, 604, 607, 640, 642, 644, 652, 653, 658, 682, 698, 728, 756, 797, 822, 833, 845, 850, 851, 856, 871, 875, 876, 898, 911, 920, 936, 950, 961, 963, 986, 992, 1028, 1053, 1055, 1066, 1068, 1083, 1085, 1101, 1105, 1108, 1109, 1112, 1113, 1114, 1127, 1129, 1131, 1132, 1138, 1139, 1144, 1145, 1146, 1147, 1150, 1156, 1158, 1159, 1160, 1166, 1181, 1182, 1191, 1192, 1199, 1201, 1204, 1206, 1208, 1213, 1216, 1226, 1228, 1233, 1243, 1248, 1255, 1264, 1278, 1279], "cover": [14, 67, 70, 114, 199, 215, 223, 227, 231, 233, 251, 252, 264, 277, 316, 318, 346, 384, 510, 549, 789, 934, 937, 1066, 1098, 1107, 1132, 1181, 1204, 1208, 1212, 1213, 1241, 1259, 1262, 1265, 1266, 1272, 1277, 1281], "itself": [14, 118, 121, 131, 192, 194, 219, 223, 229, 260, 266, 276, 279, 325, 353, 376, 379, 382, 393, 438, 470, 506, 515, 521, 541, 569, 570, 592, 607, 653, 660, 750, 757, 821, 822, 824, 833, 856, 857, 858, 873, 891, 921, 959, 961, 984, 1004, 1041, 1046, 1049, 1066, 1068, 1081, 1096, 1124, 1127, 1132, 1153, 1194, 1234, 1250, 1272], "been": [14, 48, 50, 54, 111, 151, 159, 172, 191, 192, 193, 194, 196, 197, 198, 203, 211, 212, 223, 231, 260, 266, 276, 279, 310, 313, 315, 325, 342, 383, 401, 410, 469, 483, 484, 529, 540, 546, 553, 570, 626, 745, 824, 826, 855, 866, 870, 874, 894, 928, 934, 937, 980, 998, 1004, 1016, 1025, 1035, 1049, 1055, 1066, 1081, 1084, 1085, 1103, 1110, 1148, 1243, 1258, 1259, 1268, 1273], "further": [14, 191, 198, 202, 217, 266, 298, 313, 342, 355, 356, 374, 381, 382, 383, 384, 412, 476, 487, 537, 607, 627, 630, 633, 636, 639, 642, 645, 788, 811, 913, 955, 978, 984, 1006, 1051, 1072, 1075, 1079, 1115, 1247, 1252, 1266], "inform": [14, 15, 16, 95, 191, 194, 195, 197, 202, 206, 210, 211, 212, 214, 219, 239, 260, 266, 276, 279, 304, 319, 320, 341, 345, 346, 487, 497, 504, 505, 513, 519, 520, 521, 541, 546, 744, 751, 797, 801, 866, 891, 925, 928, 934, 937, 943, 955, 1007, 1039, 1047, 1066, 1106, 1134, 1208, 1216, 1221, 1236, 1243, 1277, 1278], "internet": [14, 67, 191, 193, 196, 197, 199, 219, 231, 239, 267, 280, 319, 320, 335, 341, 345, 401, 512, 928, 929, 931, 1067, 1108, 1259, 1272], "subtract": [14, 103, 260, 283, 315, 447, 570, 584, 835, 890, 1068, 1119, 1127, 1139], "known": [14, 193, 204, 243, 260, 266, 276, 279, 296, 298, 316, 333, 349, 386, 401, 446, 448, 460, 467, 494, 500, 529, 684, 763, 891, 955, 1066, 1099, 1215, 1259, 1273], "calcul": [14, 71, 74, 194, 227, 251, 260, 283, 381, 446, 448, 456, 569, 599, 604, 606, 764, 817, 1050, 1068, 1110, 1112, 1184, 1215, 1220, 1241], "minimum": [14, 49, 283, 783, 984, 1105, 1211, 1212, 1213, 1214], "durat": [14, 197, 483, 523, 542, 607, 757, 819, 825, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1281, 1282], "come": [14, 30, 67, 99, 100, 111, 119, 126, 130, 146, 191, 192, 193, 194, 197, 198, 199, 202, 203, 213, 219, 220, 223, 243, 269, 296, 298, 309, 316, 317, 342, 355, 395, 401, 424, 426, 427, 443, 470, 506, 518, 540, 570, 604, 685, 723, 744, 751, 801, 825, 834, 837, 848, 850, 861, 863, 864, 868, 874, 887, 891, 928, 934, 936, 937, 952, 984, 1031, 1067, 1096, 1107, 1108, 1112, 1130, 1132, 1133, 1139, 1150, 1158, 1160, 1166, 1170, 1189, 1200, 1216, 1219, 1224, 1237, 1259, 1278], "she": [14, 250, 810, 866, 868, 1152, 1160], "who": [14, 16, 32, 118, 172, 192, 196, 199, 203, 221, 223, 269, 279, 304, 335, 381, 382, 385, 387, 422, 496, 500, 510, 541, 558, 575, 607, 720, 801, 835, 846, 857, 858, 866, 870, 876, 887, 928, 936, 937, 957, 984, 992, 1020, 1031, 1066, 1083, 1101, 1103, 1234, 1241, 1258, 1259, 1262, 1265, 1266, 1267, 1279], "repetit": [14, 304, 891, 1258], "prone": [14, 445, 653, 662, 682, 810, 837, 848, 972, 1085, 1154, 1248, 1258], "possibl": [14, 47, 48, 50, 95, 110, 111, 113, 131, 170, 174, 184, 187, 191, 192, 199, 202, 213, 223, 227, 243, 253, 260, 266, 269, 271, 276, 277, 279, 296, 298, 307, 316, 319, 320, 325, 342, 346, 356, 373, 376, 379, 435, 446, 449, 466, 479, 486, 492, 496, 500, 501, 504, 510, 522, 524, 525, 534, 537, 548, 550, 553, 558, 562, 570, 572, 607, 640, 650, 652, 653, 658, 664, 665, 683, 700, 735, 751, 764, 800, 810, 828, 835, 844, 845, 846, 849, 866, 875, 900, 929, 930, 934, 936, 961, 989, 1014, 1017, 1046, 1055, 1066, 1105, 1106, 1107, 1115, 1120, 1128, 1130, 1139, 1148, 1153, 1155, 1156, 1158, 1208, 1217, 1228, 1265, 1279], "abl": [14, 15, 17, 30, 161, 191, 192, 194, 195, 197, 199, 223, 243, 250, 332, 490, 496, 516, 549, 553, 607, 759, 857, 858, 876, 882, 884, 885, 928, 936, 937, 1031, 1066, 1077, 1220, 1261, 1266, 1277], "fix": [14, 33, 49, 65, 96, 130, 139, 161, 166, 171, 173, 192, 227, 248, 253, 263, 264, 269, 288, 291, 318, 319, 320, 341, 375, 382, 404, 428, 451, 494, 510, 512, 536, 543, 575, 608, 620, 631, 643, 649, 667, 683, 724, 727, 734, 748, 764, 808, 875, 931, 952, 957, 964, 985, 986, 992, 1019, 1029, 1066, 1070, 1080, 1101, 1103, 1106, 1133, 1166, 1208], "inconsist": [14, 650, 1231], "easi": [14, 58, 118, 154, 161, 185, 192, 194, 195, 196, 197, 198, 199, 203, 211, 212, 215, 227, 273, 283, 356, 381, 382, 449, 464, 490, 506, 759, 782, 800, 845, 870, 934, 936, 937, 964, 966, 970, 982, 989, 1032, 1058, 1066, 1077, 1101, 1127, 1139, 1148, 1150, 1214, 1241, 1242, 1266, 1278, 1282], "plain": [14, 121, 194, 253, 415, 529, 626, 661, 664, 737, 751, 801, 834, 936, 987, 1106, 1119], "file": [14, 21, 22, 23, 25, 27, 31, 34, 37, 40, 41, 42, 58, 67, 69, 74, 80, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 111, 113, 114, 118, 119, 126, 130, 135, 139, 140, 142, 146, 149, 150, 154, 156, 159, 161, 164, 165, 166, 168, 174, 177, 184, 189, 191, 192, 193, 194, 197, 198, 203, 210, 213, 215, 217, 218, 219, 220, 222, 223, 225, 227, 228, 230, 231, 232, 233, 238, 240, 241, 242, 243, 248, 251, 252, 253, 256, 257, 258, 261, 262, 264, 265, 266, 267, 269, 270, 273, 274, 276, 277, 280, 281, 282, 283, 285, 287, 290, 291, 295, 296, 297, 300, 304, 306, 309, 310, 312, 313, 319, 320, 322, 326, 327, 331, 333, 334, 341, 342, 345, 346, 348, 349, 350, 354, 357, 360, 366, 369, 371, 375, 376, 377, 378, 379, 380, 382, 389, 390, 392, 401, 404, 405, 406, 407, 408, 409, 415, 417, 418, 422, 432, 435, 436, 466, 467, 469, 470, 471, 472, 493, 504, 506, 511, 513, 519, 523, 534, 537, 540, 541, 543, 544, 546, 548, 555, 591, 592, 594, 604, 605, 606, 607, 608, 627, 630, 633, 635, 636, 639, 642, 645, 653, 655, 660, 666, 667, 668, 669, 675, 724, 725, 732, 735, 797, 809, 835, 839, 840, 846, 853, 855, 856, 859, 860, 862, 863, 864, 865, 867, 868, 870, 871, 873, 874, 875, 876, 878, 879, 881, 882, 883, 884, 887, 889, 890, 891, 899, 900, 901, 902, 903, 909, 911, 917, 920, 925, 928, 931, 934, 936, 937, 940, 945, 950, 953, 961, 980, 986, 991, 1000, 1006, 1008, 1009, 1011, 1012, 1019, 1022, 1023, 1024, 1033, 1036, 1037, 1040, 1043, 1045, 1047, 1050, 1056, 1066, 1072, 1074, 1075, 1076, 1079, 1085, 1086, 1089, 1090, 1092, 1096, 1098, 1100, 1101, 1102, 1107, 1108, 1112, 1115, 1120, 1123, 1126, 1131, 1135, 1137, 1139, 1150, 1156, 1159, 1160, 1167, 1178, 1181, 1196, 1199, 1201, 1202, 1203, 1206, 1208, 1213, 1221, 1223, 1228, 1230, 1233, 1236, 1241, 1242, 1243, 1244, 1247, 1249, 1252, 1255, 1262, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1278, 1282], "happi": [14, 197, 223, 494, 658, 1213], "clear": [14, 30, 192, 194, 199, 210, 243, 253, 282, 343, 405, 406, 471, 496, 500, 532, 537, 541, 551, 557, 663, 739, 755, 801, 824, 845, 867, 870, 891, 984, 992, 1019, 1066, 1104, 1119, 1139, 1141, 1212, 1213, 1243], "front": [14, 67, 199, 223, 279, 325, 500, 700, 822, 1046, 1259], "later": [14, 69, 114, 130, 191, 192, 195, 202, 212, 223, 345, 426, 430, 436, 438, 440, 496, 500, 506, 519, 525, 540, 652, 653, 655, 666, 668, 669, 703, 801, 803, 806, 813, 873, 934, 943, 945, 947, 952, 968, 970, 980, 987, 1025, 1042, 1047, 1050, 1051, 1053, 1064, 1066, 1069, 1120, 1128, 1138, 1141, 1143, 1221, 1227], "dure": [14, 32, 33, 93, 95, 187, 191, 192, 193, 194, 198, 199, 203, 211, 223, 227, 279, 373, 407, 469, 473, 474, 488, 500, 505, 532, 569, 576, 602, 605, 685, 703, 724, 815, 837, 862, 869, 934, 937, 980, 984, 989, 1014, 1066, 1085, 1100, 1101, 1120, 1133, 1135, 1150, 1234, 1241], "menu": [14, 52, 231, 984], "mine": [15, 191, 192, 195, 203, 219, 223, 227, 422, 640, 984], "basic": [15, 18, 52, 66, 67, 72, 86, 90, 92, 95, 99, 100, 113, 117, 118, 119, 120, 123, 126, 130, 131, 135, 136, 143, 146, 149, 154, 155, 156, 176, 192, 194, 199, 202, 205, 207, 212, 215, 218, 227, 240, 253, 258, 269, 277, 279, 282, 283, 307, 309, 316, 317, 318, 326, 334, 344, 348, 350, 356, 374, 375, 378, 381, 387, 403, 404, 405, 406, 407, 409, 411, 415, 421, 472, 482, 500, 504, 505, 529, 530, 537, 541, 542, 543, 552, 554, 596, 599, 600, 601, 602, 603, 606, 626, 642, 643, 673, 681, 686, 711, 716, 738, 740, 741, 742, 744, 745, 756, 767, 779, 794, 801, 810, 813, 815, 818, 843, 865, 867, 933, 938, 984, 986, 1004, 1011, 1021, 1022, 1023, 1026, 1031, 1034, 1036, 1043, 1045, 1049, 1053, 1059, 1076, 1079, 1080, 1084, 1085, 1094, 1096, 1100, 1101, 1139, 1195, 1216, 1228, 1229, 1231, 1246, 1250, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1272, 1273, 1277, 1279, 1281], "hi": [15, 32, 211, 223, 227, 230, 248, 274, 277, 493, 602, 1066, 1120, 1208], "repertoir": [15, 235, 245, 555], "data": [15, 36, 60, 62, 67, 78, 97, 99, 100, 123, 131, 135, 192, 193, 194, 195, 199, 202, 210, 212, 214, 223, 227, 228, 232, 240, 242, 247, 257, 260, 261, 266, 267, 269, 276, 279, 283, 289, 304, 308, 309, 310, 311, 313, 316, 318, 319, 320, 325, 330, 333, 335, 338, 344, 347, 349, 353, 359, 366, 369, 380, 381, 382, 387, 406, 407, 422, 435, 449, 456, 479, 484, 494, 499, 501, 511, 513, 518, 519, 520, 521, 534, 535, 543, 607, 624, 649, 651, 655, 658, 675, 687, 722, 724, 728, 738, 751, 762, 779, 797, 825, 837, 861, 868, 873, 875, 883, 929, 931, 934, 936, 937, 939, 942, 943, 974, 978, 982, 989, 997, 1006, 1016, 1020, 1022, 1030, 1035, 1050, 1053, 1056, 1058, 1066, 1071, 1096, 1105, 1107, 1112, 1116, 1119, 1132, 1133, 1144, 1146, 1147, 1148, 1156, 1175, 1210, 1211, 1212, 1214, 1216, 1217, 1221, 1226, 1227, 1230, 1232, 1233, 1236, 1241, 1260, 1271, 1273], "convinc": [15, 449], "him": [15, 223, 227, 230, 248, 251, 274, 300, 324, 346, 834, 1055, 1208], "wai": [15, 30, 37, 48, 49, 50, 69, 70, 187, 191, 194, 199, 203, 204, 212, 215, 219, 224, 226, 227, 229, 230, 231, 234, 235, 243, 248, 251, 263, 264, 269, 272, 273, 274, 276, 277, 281, 283, 291, 295, 296, 309, 310, 313, 317, 319, 320, 341, 342, 380, 386, 392, 396, 445, 449, 453, 454, 464, 470, 486, 487, 488, 496, 512, 514, 529, 540, 550, 552, 553, 557, 573, 575, 594, 604, 608, 620, 626, 634, 650, 651, 658, 662, 665, 703, 706, 725, 731, 751, 759, 780, 801, 824, 827, 833, 846, 848, 849, 857, 858, 867, 873, 875, 878, 879, 885, 928, 934, 936, 937, 940, 953, 961, 976, 978, 984, 1016, 1023, 1031, 1066, 1067, 1070, 1080, 1081, 1085, 1092, 1096, 1107, 1119, 1124, 1130, 1133, 1134, 1137, 1148, 1152, 1153, 1155, 1158, 1160, 1166, 1194, 1208, 1226, 1234, 1241, 1248, 1266, 1268], "go": [15, 27, 29, 47, 48, 49, 50, 69, 86, 124, 130, 139, 154, 159, 173, 176, 192, 195, 196, 198, 199, 220, 223, 230, 234, 243, 252, 253, 269, 310, 313, 315, 345, 373, 407, 510, 512, 529, 550, 591, 755, 764, 801, 803, 822, 846, 850, 861, 874, 891, 893, 928, 934, 936, 945, 948, 952, 984, 986, 1031, 1034, 1046, 1050, 1058, 1066, 1083, 1086, 1101, 1132, 1167], "relev": [15, 139, 194, 266, 291, 375, 386, 436, 519, 529, 537, 607, 751, 801, 934, 936, 984, 997, 1049, 1107, 1222, 1236, 1279], "part": [15, 30, 69, 81, 95, 113, 162, 164, 192, 193, 194, 195, 197, 199, 202, 212, 215, 223, 230, 231, 232, 253, 279, 291, 310, 313, 325, 375, 377, 386, 406, 413, 426, 449, 483, 510, 553, 558, 572, 593, 607, 650, 797, 800, 801, 822, 857, 858, 891, 927, 928, 934, 936, 937, 955, 961, 984, 1004, 1006, 1021, 1066, 1083, 1132, 1145, 1150, 1152, 1199, 1201, 1214, 1215, 1226, 1227, 1228, 1230, 1231, 1232, 1251, 1261, 1281], "natur": [15, 25, 64, 192, 194, 199, 223, 277, 283, 325, 422, 426, 444, 488, 549, 550, 701, 703, 800, 801, 846, 848, 936, 1143], "straighforward": 15, "approach": [15, 22, 25, 191, 192, 230, 334, 350, 373, 376, 379, 384, 386, 428, 512, 522, 523, 529, 537, 788, 801, 844, 870, 936, 1066, 1067, 1069, 1225], "would": [15, 44, 93, 96, 103, 106, 107, 131, 161, 191, 193, 194, 196, 197, 203, 211, 213, 220, 223, 227, 229, 242, 253, 266, 279, 283, 318, 320, 356, 460, 479, 486, 488, 499, 500, 517, 521, 529, 532, 537, 541, 543, 548, 606, 620, 624, 658, 661, 663, 665, 713, 721, 756, 764, 795, 797, 813, 822, 835, 846, 857, 858, 882, 884, 887, 913, 936, 937, 984, 987, 1015, 1016, 1032, 1041, 1046, 1050, 1058, 1066, 1080, 1100, 1101, 1105, 1107, 1108, 1128, 1139, 1143, 1147, 1150, 1156, 1160, 1166, 1187, 1213, 1216, 1226, 1233], "copi": [15, 23, 29, 37, 60, 86, 88, 90, 91, 103, 107, 113, 117, 121, 126, 130, 135, 136, 138, 140, 143, 156, 157, 168, 187, 189, 192, 193, 194, 195, 198, 203, 212, 218, 221, 231, 238, 241, 253, 263, 269, 275, 279, 283, 286, 289, 295, 296, 297, 298, 301, 306, 307, 311, 315, 316, 318, 325, 327, 328, 331, 343, 356, 365, 371, 372, 375, 381, 384, 407, 436, 438, 450, 456, 470, 474, 479, 525, 528, 545, 575, 576, 589, 590, 591, 625, 626, 628, 637, 642, 644, 646, 649, 650, 656, 665, 666, 668, 669, 678, 682, 692, 700, 710, 715, 716, 720, 722, 729, 732, 735, 747, 753, 755, 770, 795, 796, 797, 801, 803, 810, 812, 821, 824, 837, 846, 847, 848, 856, 857, 858, 861, 871, 891, 898, 902, 903, 905, 911, 959, 964, 984, 985, 1000, 1006, 1009, 1011, 1016, 1028, 1033, 1034, 1035, 1047, 1052, 1053, 1058, 1066, 1076, 1086, 1096, 1098, 1100, 1101, 1105, 1106, 1140, 1155, 1158, 1221, 1225, 1230, 1243, 1248, 1250, 1258], "dumb": [15, 32, 211, 242, 389, 955, 1053, 1055], "reason": [15, 47, 131, 159, 184, 194, 212, 223, 252, 271, 382, 401, 483, 490, 492, 494, 500, 503, 522, 548, 666, 668, 669, 703, 761, 763, 800, 804, 831, 882, 884, 952, 968, 980, 984, 1058, 1066, 1067, 1068, 1081, 1096, 1101, 1139, 1148, 1150, 1213], "ar": [15, 19, 30, 32, 34, 40, 42, 44, 45, 47, 48, 49, 50, 54, 58, 67, 69, 70, 78, 95, 97, 98, 99, 100, 103, 108, 109, 111, 118, 126, 131, 139, 146, 154, 157, 161, 166, 172, 173, 174, 177, 184, 190, 191, 194, 195, 196, 198, 199, 202, 203, 206, 207, 208, 211, 212, 213, 215, 219, 221, 223, 227, 228, 229, 230, 231, 232, 243, 250, 251, 252, 253, 260, 263, 264, 266, 267, 269, 270, 272, 274, 275, 276, 277, 279, 283, 287, 291, 296, 298, 300, 307, 309, 310, 313, 315, 316, 317, 318, 320, 325, 328, 333, 337, 342, 343, 346, 347, 349, 356, 372, 373, 381, 382, 384, 387, 389, 390, 391, 395, 401, 404, 406, 407, 409, 410, 422, 425, 427, 428, 430, 433, 435, 436, 438, 440, 443, 444, 447, 448, 449, 455, 458, 461, 466, 467, 470, 474, 476, 477, 479, 480, 481, 486, 487, 488, 490, 491, 494, 497, 500, 503, 510, 511, 513, 524, 528, 532, 534, 536, 537, 540, 541, 543, 544, 546, 548, 549, 550, 560, 570, 572, 575, 594, 597, 604, 605, 606, 607, 608, 611, 615, 620, 624, 634, 640, 643, 650, 651, 652, 653, 655, 658, 659, 660, 661, 662, 663, 665, 672, 675, 682, 683, 684, 687, 697, 703, 704, 705, 710, 713, 722, 724, 729, 730, 731, 732, 736, 742, 743, 744, 748, 750, 751, 753, 755, 756, 757, 759, 761, 765, 766, 797, 801, 803, 804, 810, 813, 814, 815, 816, 818, 820, 824, 828, 833, 834, 835, 837, 844, 845, 846, 847, 848, 849, 850, 856, 857, 858, 861, 863, 864, 866, 867, 869, 870, 871, 873, 874, 876, 877, 882, 884, 891, 892, 894, 904, 908, 913, 916, 919, 928, 929, 934, 936, 937, 939, 940, 943, 953, 955, 957, 961, 968, 970, 972, 976, 978, 980, 982, 984, 989, 1003, 1006, 1012, 1014, 1016, 1019, 1021, 1022, 1025, 1026, 1033, 1039, 1041, 1046, 1050, 1051, 1053, 1055, 1056, 1058, 1061, 1066, 1068, 1069, 1070, 1071, 1076, 1080, 1081, 1083, 1084, 1085, 1086, 1089, 1090, 1092, 1096, 1098, 1099, 1101, 1102, 1103, 1105, 1107, 1108, 1110, 1112, 1116, 1119, 1120, 1121, 1122, 1126, 1128, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1144, 1148, 1156, 1158, 1159, 1160, 1163, 1170, 1176, 1204, 1208, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1224, 1226, 1227, 1230, 1232, 1233, 1241, 1243, 1244, 1247, 1248, 1251, 1259, 1262, 1266, 1267, 1268, 1272, 1273, 1278, 1279, 1280, 1281], "need": [15, 30, 32, 47, 49, 93, 114, 116, 118, 121, 131, 154, 161, 162, 172, 174, 192, 193, 194, 197, 199, 203, 206, 207, 212, 223, 230, 231, 233, 243, 253, 267, 269, 291, 335, 378, 382, 392, 404, 433, 435, 438, 458, 466, 467, 486, 492, 493, 499, 503, 505, 506, 510, 514, 521, 537, 540, 541, 543, 545, 549, 550, 572, 602, 604, 605, 606, 607, 637, 643, 649, 650, 664, 684, 705, 722, 724, 739, 740, 744, 747, 750, 759, 784, 801, 809, 813, 818, 821, 825, 840, 846, 870, 874, 887, 892, 928, 929, 930, 931, 934, 936, 937, 943, 957, 959, 972, 976, 980, 984, 1012, 1016, 1022, 1023, 1026, 1029, 1040, 1042, 1043, 1046, 1053, 1064, 1066, 1086, 1096, 1100, 1101, 1102, 1106, 1111, 1124, 1132, 1133, 1135, 1138, 1147, 1152, 1164, 1165, 1213, 1214, 1221, 1243, 1259, 1262, 1267, 1271, 1281], "mechan": [15, 19, 78, 172, 184, 192, 193, 215, 223, 227, 238, 253, 307, 548, 744, 801, 1055, 1066, 1077, 1116, 1208, 1236, 1258, 1266, 1268, 1270, 1271, 1272], "where": [15, 40, 78, 98, 111, 113, 131, 159, 182, 183, 191, 192, 193, 194, 195, 197, 199, 202, 211, 212, 219, 220, 223, 224, 227, 250, 251, 252, 253, 260, 263, 266, 267, 269, 276, 279, 283, 291, 300, 307, 325, 333, 342, 346, 349, 382, 385, 387, 404, 409, 410, 444, 448, 458, 466, 467, 469, 470, 471, 484, 488, 499, 501, 511, 515, 525, 555, 561, 592, 594, 605, 620, 626, 643, 661, 722, 748, 750, 762, 783, 800, 844, 845, 873, 874, 888, 891, 894, 916, 921, 928, 934, 936, 937, 978, 982, 984, 996, 1012, 1017, 1023, 1025, 1028, 1031, 1032, 1057, 1066, 1068, 1069, 1076, 1080, 1081, 1084, 1096, 1100, 1101, 1108, 1110, 1112, 1115, 1137, 1139, 1149, 1191, 1208, 1215, 1220, 1241, 1266, 1273], "could": [15, 37, 44, 99, 100, 113, 118, 126, 130, 161, 192, 193, 197, 199, 203, 212, 221, 223, 229, 243, 252, 253, 263, 273, 279, 307, 317, 319, 320, 338, 341, 353, 373, 382, 422, 449, 493, 517, 519, 522, 549, 550, 574, 607, 658, 665, 722, 735, 748, 762, 800, 807, 808, 815, 826, 830, 831, 870, 888, 936, 937, 955, 984, 997, 1012, 1023, 1029, 1046, 1066, 1076, 1086, 1139, 1191, 1205, 1220, 1230, 1236, 1248, 1258], "exchang": [15, 67, 220, 263, 353, 358, 360, 510, 558, 574, 604, 812, 813, 875, 955, 1071, 1166, 1173, 1261], "meta": [15, 26, 154, 189, 199, 891, 984, 996], "retriev": [15, 203, 770, 984, 1066, 1112, 1160], "metadata": [15, 26, 304, 862, 866, 936, 1007, 1033, 1041, 1106, 1266], "process": [15, 47, 49, 62, 67, 69, 86, 88, 99, 100, 113, 135, 150, 156, 165, 197, 202, 208, 215, 221, 223, 230, 231, 233, 267, 297, 306, 319, 320, 327, 341, 371, 372, 373, 406, 407, 414, 419, 471, 477, 506, 532, 541, 797, 817, 861, 865, 866, 867, 887, 888, 890, 892, 894, 904, 936, 970, 974, 976, 984, 989, 998, 1001, 1004, 1007, 1014, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1031, 1033, 1036, 1043, 1047, 1049, 1050, 1051, 1052, 1064, 1065, 1066, 1068, 1069, 1070, 1077, 1080, 1081, 1083, 1101, 1102, 1111, 1119, 1132, 1133, 1137, 1188, 1253, 1262, 1265, 1266, 1267, 1269, 1270, 1272], "check": [15, 25, 77, 86, 93, 108, 111, 118, 139, 157, 161, 162, 166, 182, 191, 192, 194, 195, 196, 197, 198, 203, 211, 223, 227, 231, 235, 260, 266, 269, 276, 279, 283, 307, 320, 375, 382, 389, 412, 415, 436, 451, 460, 462, 463, 468, 476, 483, 487, 495, 497, 519, 534, 540, 597, 598, 620, 631, 643, 650, 658, 664, 665, 682, 703, 735, 744, 797, 812, 813, 845, 928, 934, 957, 959, 964, 984, 1000, 1001, 1003, 1026, 1031, 1037, 1040, 1053, 1066, 1084, 1085, 1091, 1096, 1103, 1132, 1137, 1150, 1160, 1164, 1171, 1188, 1194, 1236, 1241, 1250, 1258], "everyth": [15, 29, 30, 87, 113, 126, 135, 154, 156, 192, 198, 199, 215, 227, 231, 242, 250, 268, 269, 297, 306, 307, 310, 313, 327, 328, 342, 345, 371, 372, 415, 422, 438, 458, 461, 486, 500, 506, 510, 525, 591, 649, 650, 652, 659, 662, 667, 672, 759, 797, 809, 816, 835, 840, 865, 867, 868, 892, 913, 928, 929, 934, 936, 937, 953, 961, 982, 986, 989, 1022, 1024, 1025, 1058, 1066, 1071, 1081, 1104, 1110, 1115, 1119, 1215, 1230, 1269, 1270], "clearli": [15, 30, 116, 223, 488, 519, 525, 770, 841, 984, 1003, 1032, 1066, 1108, 1139, 1160, 1273, 1281], "top": [15, 19, 21, 22, 25, 26, 37, 191, 192, 194, 195, 212, 214, 215, 231, 233, 260, 266, 269, 276, 279, 381, 382, 532, 535, 540, 724, 928, 987, 996, 1016, 1064, 1067, 1086, 1107, 1115, 1137, 1184, 1188, 1258, 1262, 1264, 1267], "intersphinx": 15, "spinx": 15, "possibli": [16, 66, 74, 120, 192, 223, 512, 520, 665, 735, 743, 759, 810, 820, 822, 826, 834, 845, 876, 913, 936, 1061, 1098, 1224], "arrang": [16, 73, 99, 100, 146, 161, 196, 338, 607, 751, 863, 864, 925], "subgroup": [16, 22, 25, 626], "refer": [16, 86, 99, 100, 113, 119, 131, 173, 174, 181, 191, 197, 198, 211, 213, 218, 227, 230, 232, 235, 236, 247, 250, 252, 253, 258, 261, 262, 264, 265, 267, 268, 269, 274, 275, 276, 279, 283, 285, 287, 288, 290, 294, 302, 303, 305, 310, 312, 313, 317, 318, 320, 323, 324, 326, 329, 330, 332, 333, 341, 342, 344, 345, 346, 349, 351, 356, 357, 358, 360, 363, 364, 366, 367, 368, 370, 372, 381, 382, 383, 384, 385, 386, 387, 467, 473, 480, 523, 525, 528, 529, 532, 544, 604, 626, 649, 650, 651, 665, 666, 668, 669, 670, 704, 717, 722, 729, 770, 796, 797, 798, 801, 802, 810, 834, 837, 846, 874, 904, 913, 928, 934, 936, 943, 948, 984, 996, 1028, 1042, 1066, 1077, 1083, 1100, 1103, 1108, 1131, 1158, 1159, 1221, 1241, 1243, 1258, 1260, 1273], "veri": [16, 22, 24, 25, 173, 191, 192, 194, 212, 223, 227, 230, 232, 243, 248, 251, 274, 277, 300, 324, 346, 415, 422, 442, 449, 459, 460, 480, 496, 497, 499, 505, 512, 525, 541, 550, 637, 648, 660, 675, 693, 740, 742, 753, 755, 783, 803, 806, 831, 833, 845, 848, 850, 869, 870, 929, 935, 936, 937, 984, 989, 994, 1022, 1023, 1039, 1041, 1053, 1066, 1069, 1083, 1112, 1120, 1136, 1139, 1143, 1144, 1150, 1154, 1158, 1164, 1208, 1215, 1216, 1237, 1253, 1258, 1265], "unawar": [16, 223, 230, 1066], "simpli": [16, 47, 52, 118, 190, 192, 195, 197, 199, 203, 206, 215, 279, 280, 319, 320, 341, 342, 449, 491, 553, 591, 658, 666, 668, 669, 721, 733, 770, 825, 834, 835, 841, 846, 848, 862, 876, 934, 961, 1025, 1029, 1083, 1100, 1108], "interest": [16, 111, 172, 193, 194, 212, 223, 231, 404, 541, 550, 1066, 1107, 1227, 1265, 1267, 1277], "old": [16, 119, 171, 192, 194, 197, 221, 231, 263, 264, 279, 311, 321, 325, 350, 375, 384, 445, 484, 505, 510, 529, 553, 626, 678, 685, 690, 706, 731, 737, 751, 755, 756, 757, 764, 801, 809, 848, 928, 936, 941, 947, 957, 976, 1070, 1147, 1153, 1166, 1187, 1232, 1260, 1268], "catalog": [16, 1259], "book": [16, 19, 192, 197, 207, 218, 227, 252, 274, 310, 319, 320, 422, 511, 523, 542, 801, 891, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "chapter": [16, 29, 131, 243, 252, 260, 266, 276, 279, 280, 368, 384, 626, 891], "subchapt": 16, "As": [17, 33, 58, 69, 113, 161, 192, 194, 199, 203, 208, 220, 223, 227, 258, 271, 333, 349, 382, 385, 387, 407, 423, 461, 492, 495, 591, 593, 607, 658, 660, 662, 664, 665, 736, 762, 780, 856, 866, 934, 936, 957, 984, 1012, 1014, 1031, 1047, 1069, 1077, 1100, 1106, 1127, 1132, 1136, 1194, 1198, 1210, 1251, 1265, 1273], "follow": [17, 26, 30, 67, 95, 96, 98, 103, 106, 107, 108, 109, 110, 116, 119, 136, 139, 146, 154, 159, 166, 187, 191, 192, 194, 195, 196, 197, 199, 211, 215, 219, 220, 223, 227, 231, 232, 243, 260, 266, 276, 277, 279, 283, 292, 296, 298, 315, 316, 318, 324, 325, 382, 383, 384, 387, 401, 424, 427, 444, 445, 458, 461, 488, 490, 492, 494, 499, 500, 503, 511, 525, 529, 540, 543, 548, 549, 552, 553, 569, 570, 572, 573, 574, 575, 576, 594, 597, 598, 601, 602, 604, 605, 606, 607, 608, 620, 626, 652, 666, 667, 668, 669, 722, 724, 725, 730, 732, 733, 736, 737, 759, 793, 794, 797, 824, 835, 848, 856, 857, 858, 863, 864, 866, 868, 870, 882, 884, 885, 891, 895, 903, 904, 928, 934, 936, 937, 945, 947, 953, 984, 1026, 1029, 1030, 1031, 1032, 1050, 1068, 1077, 1081, 1083, 1089, 1090, 1092, 1094, 1096, 1098, 1099, 1100, 1103, 1107, 1108, 1112, 1119, 1138, 1152, 1160, 1166, 1168, 1173, 1178, 1180, 1184, 1187, 1188, 1191, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1230, 1234, 1243, 1259], "version": [17, 47, 104, 112, 154, 191, 195, 197, 198, 199, 202, 219, 220, 221, 223, 230, 239, 241, 250, 251, 260, 264, 266, 270, 276, 279, 286, 291, 294, 303, 309, 315, 316, 317, 318, 325, 358, 375, 376, 379, 381, 397, 412, 471, 510, 511, 517, 519, 520, 522, 529, 532, 538, 540, 545, 643, 733, 735, 736, 747, 763, 783, 794, 801, 803, 809, 844, 891, 934, 936, 957, 959, 976, 984, 985, 1000, 1066, 1084, 1085, 1086, 1096, 1098, 1099, 1101, 1132, 1133, 1139, 1164, 1236, 1243, 1244, 1250], "control": [17, 32, 48, 49, 50, 75, 114, 122, 123, 130, 131, 166, 191, 198, 209, 220, 223, 228, 230, 231, 232, 233, 242, 243, 258, 261, 274, 279, 285, 299, 356, 376, 379, 385, 386, 405, 406, 407, 409, 412, 449, 463, 464, 510, 540, 547, 555, 597, 598, 601, 607, 649, 748, 798, 891, 929, 930, 934, 935, 937, 957, 982, 984, 989, 1021, 1066, 1080, 1085, 1105, 1108, 1116, 1128, 1141, 1143, 1227, 1242, 1244, 1260, 1261, 1264, 1265, 1267, 1272, 1278, 1282], "done": [17, 29, 33, 34, 37, 40, 42, 44, 49, 64, 73, 76, 80, 91, 99, 100, 116, 119, 120, 121, 123, 124, 126, 130, 131, 142, 146, 154, 161, 173, 184, 189, 191, 193, 194, 196, 197, 198, 199, 202, 211, 212, 215, 219, 223, 230, 252, 267, 271, 277, 279, 295, 296, 298, 310, 313, 320, 325, 343, 373, 381, 382, 390, 396, 407, 413, 427, 428, 476, 483, 484, 486, 488, 499, 510, 512, 517, 520, 540, 543, 572, 591, 605, 608, 650, 661, 662, 690, 705, 713, 718, 735, 736, 751, 770, 773, 777, 778, 800, 809, 822, 824, 825, 837, 846, 857, 858, 862, 863, 864, 866, 867, 875, 887, 910, 928, 929, 931, 936, 937, 943, 953, 955, 974, 976, 984, 986, 1021, 1022, 1023, 1033, 1042, 1046, 1047, 1056, 1064, 1066, 1071, 1080, 1084, 1085, 1094, 1098, 1100, 1107, 1110, 1111, 1112, 1130, 1139, 1150, 1158, 1159, 1160, 1164, 1167, 1188, 1220, 1241, 1265, 1266], "program": [17, 26, 29, 48, 50, 54, 62, 65, 67, 73, 74, 79, 86, 90, 99, 100, 103, 104, 109, 112, 113, 114, 118, 121, 124, 126, 130, 131, 134, 136, 146, 149, 150, 152, 155, 158, 164, 165, 168, 174, 191, 192, 193, 194, 197, 199, 202, 203, 207, 209, 211, 212, 214, 215, 219, 226, 227, 228, 230, 231, 232, 237, 242, 243, 248, 251, 252, 258, 260, 261, 264, 267, 270, 274, 277, 280, 281, 282, 288, 293, 297, 306, 309, 310, 313, 316, 318, 326, 327, 328, 330, 334, 350, 352, 358, 360, 371, 372, 376, 377, 378, 379, 380, 381, 382, 389, 390, 395, 401, 403, 404, 405, 406, 407, 408, 409, 410, 415, 417, 418, 421, 427, 429, 430, 433, 435, 436, 438, 439, 440, 444, 446, 449, 451, 469, 483, 487, 488, 490, 497, 499, 504, 505, 506, 511, 512, 513, 516, 538, 540, 542, 543, 545, 548, 558, 569, 570, 574, 575, 576, 591, 593, 595, 602, 606, 608, 637, 643, 649, 655, 656, 713, 721, 722, 725, 732, 733, 734, 735, 736, 737, 765, 783, 801, 803, 806, 817, 824, 835, 839, 841, 846, 848, 851, 862, 863, 864, 866, 867, 868, 871, 873, 874, 875, 886, 891, 894, 921, 925, 928, 930, 933, 934, 936, 938, 942, 953, 955, 964, 984, 998, 1000, 1001, 1012, 1016, 1019, 1021, 1022, 1023, 1025, 1026, 1029, 1030, 1031, 1032, 1039, 1046, 1047, 1052, 1056, 1066, 1067, 1069, 1073, 1074, 1076, 1081, 1082, 1084, 1092, 1096, 1098, 1100, 1101, 1102, 1103, 1108, 1109, 1111, 1119, 1120, 1131, 1134, 1138, 1139, 1143, 1146, 1150, 1153, 1160, 1164, 1165, 1166, 1169, 1170, 1172, 1173, 1174, 1176, 1178, 1180, 1181, 1183, 1184, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1201, 1203, 1206, 1210, 1211, 1213, 1214, 1215, 1217, 1220, 1221, 1223, 1224, 1236, 1241, 1248, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1264, 1266, 1267, 1273, 1275, 1277, 1278, 1280, 1281, 1282], "No": [17, 30, 49, 69, 103, 106, 161, 173, 174, 187, 192, 194, 198, 199, 233, 250, 266, 267, 283, 309, 382, 384, 415, 434, 436, 450, 466, 470, 477, 488, 493, 505, 510, 514, 517, 518, 519, 520, 524, 528, 531, 536, 537, 538, 541, 543, 545, 546, 558, 604, 643, 653, 654, 665, 672, 682, 697, 700, 730, 749, 755, 762, 765, 810, 813, 817, 825, 845, 846, 849, 867, 873, 875, 878, 879, 894, 902, 910, 913, 929, 931, 937, 961, 964, 966, 968, 982, 984, 989, 1001, 1019, 1026, 1031, 1032, 1046, 1050, 1051, 1053, 1055, 1064, 1066, 1069, 1077, 1080, 1083, 1086, 1101, 1103, 1120, 1127, 1133, 1136, 1139, 1140, 1148, 1152, 1156, 1158, 1215, 1216, 1220, 1221, 1230, 1233, 1241, 1243, 1249], "proprietari": 17, "accept": [17, 19, 46, 130, 159, 194, 219, 315, 381, 510, 512, 831, 835, 846, 931, 952, 1025, 1066, 1106, 1130, 1270, 1272], "proven": [17, 499, 503, 666, 668, 669, 813, 1262], "difficult": [17, 58, 250, 455, 473, 643, 970, 982, 1069], "ffmpeg": 18, "video4linux2": 18, "640x480": [18, 1104], "dev": [18, 49, 53, 89, 121, 155, 192, 193, 203, 208, 209, 219, 220, 263, 269, 279, 286, 289, 304, 307, 311, 316, 318, 321, 325, 347, 353, 359, 372, 410, 499, 529, 532, 543, 602, 861, 871, 873, 874, 891, 909, 913, 930, 936, 937, 939, 940, 942, 948, 955, 964, 978, 980, 984, 997, 1028, 1035, 1041, 1064, 1068, 1071, 1073, 1076, 1077, 1098, 1248, 1250, 1266], "video0": 18, "10": [18, 49, 86, 91, 94, 95, 98, 113, 164, 174, 180, 194, 195, 200, 202, 203, 212, 213, 224, 229, 231, 235, 236, 239, 241, 244, 247, 248, 250, 255, 256, 257, 258, 260, 261, 263, 264, 266, 271, 273, 276, 279, 283, 286, 288, 289, 291, 292, 302, 304, 309, 311, 318, 319, 320, 321, 324, 325, 330, 331, 336, 340, 343, 347, 353, 359, 365, 369, 390, 397, 398, 399, 400, 403, 417, 418, 421, 432, 434, 436, 438, 446, 464, 471, 488, 490, 504, 517, 519, 520, 536, 546, 574, 594, 597, 599, 602, 605, 610, 613, 633, 634, 639, 640, 642, 643, 658, 662, 669, 730, 731, 737, 761, 768, 800, 801, 813, 814, 822, 827, 831, 835, 845, 846, 847, 859, 861, 868, 887, 891, 893, 913, 916, 920, 922, 930, 934, 936, 937, 974, 984, 992, 1022, 1031, 1039, 1041, 1066, 1079, 1083, 1084, 1085, 1098, 1099, 1105, 1110, 1111, 1121, 1139, 1140, 1147, 1169, 1170, 1191, 1197, 1208, 1212, 1213, 1236, 1241, 1253, 1279], "500k": 18, "matroska": 18, "out": [18, 31, 32, 37, 42, 49, 64, 74, 95, 103, 109, 111, 113, 115, 118, 126, 130, 172, 183, 189, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 211, 212, 219, 220, 223, 227, 230, 231, 239, 244, 247, 252, 260, 266, 267, 269, 276, 279, 283, 287, 316, 342, 343, 365, 369, 373, 375, 390, 404, 410, 415, 425, 446, 464, 470, 471, 479, 490, 497, 504, 505, 506, 510, 512, 524, 528, 538, 540, 543, 545, 548, 550, 575, 576, 591, 594, 604, 620, 626, 643, 650, 652, 665, 680, 724, 743, 750, 759, 762, 764, 765, 770, 795, 801, 815, 824, 825, 830, 835, 848, 857, 858, 861, 866, 870, 873, 877, 887, 919, 925, 928, 934, 936, 937, 952, 953, 961, 984, 992, 997, 1022, 1023, 1039, 1041, 1046, 1066, 1067, 1070, 1080, 1081, 1083, 1096, 1101, 1108, 1112, 1152, 1153, 1160, 1187, 1190, 1216, 1221, 1222, 1228, 1231, 1232, 1236, 1242, 1258], "mk": [18, 19], "descript": [18, 26, 55, 95, 111, 171, 177, 194, 195, 206, 207, 223, 227, 228, 230, 231, 232, 233, 238, 253, 258, 260, 264, 266, 269, 276, 279, 283, 295, 296, 299, 333, 334, 349, 350, 378, 537, 541, 553, 563, 564, 565, 566, 567, 571, 581, 605, 797, 819, 822, 825, 837, 845, 846, 847, 853, 856, 866, 891, 893, 913, 921, 924, 925, 937, 984, 996, 1017, 1025, 1066, 1085, 1098, 1149, 1164, 1187, 1243, 1259, 1279], "disabl": [18, 192, 195, 197, 203, 260, 266, 276, 279, 471, 748, 976, 982, 987, 989, 1069, 1236], "audio": [18, 175, 185, 194, 199], "forc": [18, 22, 191, 193, 197, 219, 279, 421, 422, 495, 510, 558, 654, 801, 866, 1012, 1050, 1085, 1258, 1279], "appar": [18, 44, 47, 49, 181, 194, 196, 197, 199, 203, 252, 263, 315, 541, 549, 704, 764, 770, 846, 934, 952, 1071, 1221], "next": [18, 26, 29, 49, 87, 113, 134, 139, 149, 154, 159, 161, 166, 174, 193, 194, 199, 211, 213, 224, 229, 231, 239, 243, 250, 256, 260, 263, 264, 266, 269, 271, 273, 276, 279, 283, 289, 295, 296, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 389, 396, 410, 443, 461, 463, 484, 512, 570, 574, 588, 598, 607, 643, 679, 760, 770, 772, 801, 810, 837, 875, 891, 924, 934, 937, 974, 984, 1003, 1025, 1035, 1064, 1066, 1084, 1111, 1112, 1115, 1143, 1146, 1161, 1213, 1249], "mention": [18, 131, 192, 193, 219, 223, 227, 253, 277, 319, 320, 341, 342, 346, 593, 607, 804, 936, 996, 1103, 1208, 1224, 1272], "commandlin": [18, 29, 69, 88, 113, 135, 138, 156, 159, 164, 168, 173, 174, 209, 211, 231, 233, 243, 245, 252, 258, 269, 270, 274, 280, 281, 282, 285, 288, 303, 310, 313, 319, 323, 324, 329, 330, 341, 351, 352, 357, 358, 363, 364, 367, 368, 376, 379, 405, 406, 407, 408, 422, 478, 511, 520, 540, 545, 594, 871, 873, 892, 911, 928, 936, 953, 984, 1026, 1061, 1082, 1083, 1102, 1131, 1162, 1172, 1176, 1178, 1180, 1183, 1187, 1188, 1189, 1193, 1194, 1261, 1262, 1264, 1265, 1267, 1275, 1281], "frame": [18, 190, 197, 208, 230, 260, 266, 276, 279, 309, 315, 347, 483, 496, 500, 570, 815, 929, 930, 1226], "size": [18, 89, 98, 118, 191, 193, 194, 210, 212, 218, 260, 261, 266, 269, 274, 276, 279, 283, 288, 291, 307, 324, 325, 330, 372, 382, 404, 434, 451, 456, 476, 483, 488, 491, 496, 497, 500, 526, 550, 551, 557, 608, 609, 614, 615, 616, 617, 621, 622, 625, 631, 643, 650, 654, 658, 660, 662, 666, 668, 669, 682, 683, 684, 685, 690, 695, 696, 700, 705, 707, 708, 713, 715, 735, 737, 750, 751, 756, 761, 762, 764, 768, 779, 782, 797, 801, 813, 822, 824, 835, 845, 855, 861, 868, 875, 909, 913, 920, 924, 931, 936, 943, 955, 970, 980, 1000, 1025, 1027, 1041, 1042, 1046, 1047, 1049, 1076, 1077, 1083, 1101, 1104, 1208, 1221], "input": [18, 27, 58, 75, 121, 155, 211, 212, 213, 214, 224, 227, 230, 232, 254, 260, 266, 269, 276, 279, 282, 283, 304, 307, 377, 404, 409, 432, 433, 439, 463, 471, 494, 499, 511, 609, 610, 611, 612, 624, 662, 713, 725, 797, 856, 875, 906, 925, 928, 955, 1006, 1022, 1025, 1037, 1039, 1040, 1056, 1114, 1129, 1158, 1170, 1174, 1176, 1188, 1191, 1194, 1200, 1203, 1210, 1211, 1214, 1215, 1264], "rate": [18, 202, 223, 283, 342, 492, 1003, 1066, 1067], "hz": [18, 994, 1066], "bitrat": [18, 930], "If": [18, 30, 32, 34, 40, 42, 44, 78, 111, 113, 131, 138, 154, 166, 172, 191, 192, 193, 194, 197, 198, 199, 207, 215, 223, 260, 266, 273, 276, 279, 283, 291, 296, 298, 307, 313, 325, 342, 382, 385, 404, 409, 449, 458, 488, 500, 514, 516, 520, 529, 548, 598, 604, 605, 620, 650, 655, 704, 720, 735, 736, 739, 744, 750, 751, 764, 810, 815, 822, 825, 845, 856, 866, 870, 873, 891, 892, 900, 903, 928, 936, 937, 957, 961, 976, 984, 989, 1001, 1006, 1012, 1026, 1034, 1043, 1053, 1058, 1066, 1076, 1099, 1100, 1112, 1120, 1122, 1132, 1139, 1147, 1149, 1160, 1186, 1213, 1216, 1230, 1242, 1258], "instead": [18, 45, 49, 118, 125, 131, 139, 191, 192, 193, 194, 211, 212, 220, 252, 269, 271, 279, 309, 325, 382, 389, 410, 415, 451, 500, 548, 591, 594, 608, 669, 685, 735, 737, 783, 807, 815, 825, 845, 846, 861, 891, 913, 936, 952, 953, 961, 1055, 1066, 1076, 1083, 1085, 1096, 1102, 1133, 1180, 1192, 1204, 1227, 1248], "stdout": [18, 131, 210, 243, 247, 251, 260, 266, 276, 279, 289, 297, 304, 306, 307, 327, 328, 342, 371, 375, 389, 397, 399, 404, 408, 410, 853, 856, 872, 873, 917, 920, 922, 1025, 1066, 1080, 1108, 1158, 1160, 1166, 1170, 1174, 1178, 1193, 1224, 1233, 1267], "hold": [18, 118, 191, 193, 211, 227, 229, 230, 250, 277, 382, 386, 426, 438, 458, 529, 550, 679, 728, 735, 747, 751, 783, 806, 822, 835, 928, 934, 948, 982, 986, 987, 1043, 1066, 1069, 1108, 1121, 1143, 1192, 1213], "mplayer": [18, 321, 359], "stdin": [18, 29, 243, 251, 260, 266, 269, 276, 279, 397, 404, 435, 441, 856, 873, 874, 906, 1025, 1156, 1158, 1159, 1170, 1221, 1233, 1267], "unicod": [19, 21, 22, 23, 25, 251, 260, 264, 266, 276, 279, 301, 325, 359, 438, 1138, 1144, 1158, 1221], "sphinxemojicod": 19, "pip": [19, 47, 177, 223, 227, 248, 277, 291, 1025, 1132, 1163, 1164, 1196, 1208, 1224, 1236, 1237, 1241, 1243, 1244, 1281], "conf": [19, 174, 193, 195, 197, 359, 380, 545, 937, 984, 1108], "grimac": 19, "astonish": 19, "rolling_ey": 19, "face_with_raised_eyebrow": 19, "flush": [19, 304, 607, 943, 955], "innoc": [19, 198, 493, 816, 824, 870, 1082, 1127], "kiss": 19, "kissing_heart": 19, "middle_fing": 19, "metal": [19, 67, 69, 76, 78, 192, 422, 928, 936, 937], "muscl": 19, "nerd": [19, 891], "ok_hand": 19, "penguin": 19, "pig": [19, 488], "point_up": 19, "sleep": [19, 49, 52, 103, 109, 154, 174, 192, 266, 295, 296, 319, 320, 341, 386, 390, 461, 470, 822, 839, 928, 936, 964, 966, 976, 986, 989, 1001, 1033, 1037, 1040, 1043, 1064, 1067, 1068, 1071, 1076, 1116], "sunglass": 19, "think": [19, 29, 30, 59, 192, 193, 229, 253, 355, 374, 471, 492, 493, 496, 602, 606, 653, 672, 764, 800, 810, 812, 824, 845, 857, 858, 861, 1020, 1066, 1139], "thumbsdown": 19, "thumbsup": 19, "wink": 19, "1": [19, 26, 29, 37, 47, 49, 53, 95, 98, 99, 100, 104, 109, 111, 112, 130, 132, 146, 152, 153, 154, 155, 166, 170, 174, 189, 193, 195, 198, 199, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 219, 220, 221, 224, 226, 229, 236, 239, 240, 241, 244, 247, 250, 251, 255, 256, 257, 260, 263, 266, 269, 271, 273, 276, 279, 283, 286, 289, 291, 292, 296, 301, 304, 308, 309, 311, 315, 321, 325, 331, 334, 336, 339, 343, 347, 350, 353, 358, 359, 365, 369, 376, 379, 384, 387, 389, 390, 396, 397, 398, 399, 400, 401, 402, 404, 407, 409, 417, 418, 421, 434, 435, 457, 464, 473, 477, 479, 487, 504, 511, 512, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 536, 538, 540, 541, 543, 544, 545, 546, 548, 549, 569, 570, 576, 586, 594, 595, 598, 602, 604, 606, 607, 608, 610, 614, 616, 617, 618, 619, 620, 621, 622, 627, 630, 633, 636, 639, 642, 643, 645, 650, 651, 652, 658, 660, 663, 665, 666, 667, 668, 669, 674, 679, 681, 687, 688, 689, 690, 691, 696, 700, 704, 713, 715, 720, 724, 725, 735, 745, 747, 748, 749, 750, 753, 755, 756, 759, 762, 764, 765, 768, 770, 771, 772, 782, 784, 785, 786, 788, 790, 795, 797, 800, 804, 806, 807, 812, 813, 815, 822, 825, 826, 831, 833, 834, 835, 837, 839, 841, 844, 845, 847, 848, 849, 850, 856, 857, 858, 861, 862, 863, 864, 866, 867, 868, 869, 870, 873, 874, 875, 876, 877, 881, 883, 885, 887, 888, 892, 893, 894, 910, 913, 914, 916, 917, 918, 920, 921, 922, 924, 925, 927, 928, 936, 942, 947, 953, 957, 961, 984, 1001, 1006, 1007, 1015, 1016, 1017, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1037, 1039, 1040, 1041, 1042, 1043, 1047, 1061, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1076, 1079, 1080, 1082, 1083, 1086, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1111, 1112, 1114, 1116, 1118, 1120, 1121, 1127, 1128, 1130, 1132, 1133, 1134, 1135, 1137, 1140, 1141, 1142, 1143, 1144, 1147, 1149, 1150, 1155, 1160, 1163, 1164, 1166, 1170, 1173, 1177, 1187, 1191, 1194, 1197, 1198, 1200, 1204, 1205, 1206, 1211, 1212, 1213, 1214, 1220, 1225, 1226, 1227, 1228, 1230, 1231, 1236, 1241, 1242, 1243, 1248, 1252, 1258, 1259, 1273, 1275, 1281], "1_tone1": 19, "1_tone2": 19, "1_tone3": 19, "1_tone4": 19, "1_tone5": 19, "100": [19, 111, 150, 152, 165, 191, 192, 197, 210, 211, 224, 234, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 282, 283, 286, 289, 291, 292, 301, 304, 307, 308, 309, 311, 315, 321, 325, 331, 342, 343, 347, 353, 359, 365, 369, 399, 400, 404, 409, 461, 467, 468, 510, 529, 538, 540, 554, 588, 589, 597, 616, 677, 678, 679, 680, 681, 683, 684, 685, 686, 700, 759, 768, 800, 827, 887, 890, 913, 930, 955, 994, 1037, 1069, 1071, 1075, 1076, 1084, 1085, 1111, 1143, 1147, 1166, 1197, 1241], "1234": [19, 244, 247, 257, 266, 271, 273, 325, 353, 365, 399, 1014, 1022, 1081, 1139], "1st_place_med": 19, "2nd_place_med": 19, "3rd_place_med": 19, "8ball": 19, "abacu": 19, "abc": [19, 210, 224, 227, 229, 234, 239, 241, 247, 250, 252, 256, 260, 263, 266, 267, 271, 273, 276, 279, 283, 286, 289, 292, 300, 301, 304, 311, 317, 319, 320, 321, 325, 331, 335, 338, 341, 342, 343, 345, 346, 347, 353, 359, 364, 365, 369, 391, 399, 512, 606, 674, 695, 713, 715, 786, 1123, 1139, 1230], "abcd": [19, 241, 247, 263, 283, 325], "ac": [19, 202, 239, 1047], "accordion": 19, "ad": [19, 20, 26, 74, 114, 118, 131, 198, 202, 203, 204, 211, 231, 243, 253, 309, 310, 313, 317, 342, 363, 367, 368, 377, 380, 401, 451, 470, 492, 521, 523, 544, 549, 553, 558, 666, 668, 669, 705, 788, 789, 801, 813, 830, 934, 937, 953, 1064, 1069, 1070, 1106, 1124, 1139, 1158, 1228, 1229, 1233, 1242], "adhesive_bandag": 19, "admission_ticket": 19, "adult": [19, 1128], "adult_dark_skin_ton": 19, "adult_light_skin_ton": 19, "adult_medium_dark_skin_ton": 19, "adult_medium_light_skin_ton": 19, "adult_medium_skin_ton": 19, "adult_tone1": 19, "adult_tone2": 19, "adult_tone3": 19, "adult_tone4": 19, "adult_tone5": 19, "ae": [19, 202], "aerial_tramwai": 19, "af": [19, 202], "afghanistan": 19, "ai": [19, 227, 1215, 1280], "airplan": [19, 928], "airplane_arriv": 19, "airplane_departur": 19, "airplane_smal": 19, "aland_island": 19, "alarm_clock": 19, "albania": 19, "alemb": 19, "algeria": 19, "alien": 19, "ambul": 19, "american_samoa": 19, "amphora": 19, "anatomical_heart": 19, "anchor": 19, "andorra": 19, "angel": [19, 315], "angel_tone1": 19, "angel_tone2": 19, "angel_tone3": 19, "angel_tone4": 19, "angel_tone5": 19, "anger": 19, "anger_right": 19, "angola": 19, "angri": 19, "anguilla": 19, "anguish": 19, "ant": 19, "antarctica": 19, "antigua_barbuda": 19, "ao": 19, "appl": [19, 529, 1083, 1150], "aq": 19, "aquariu": 19, "archeri": 19, "argentina": 19, "ari": [19, 22, 25], "armenia": 19, "arrow_backward": 19, "arrow_double_down": 19, "arrow_double_up": 19, "arrow_down": 19, "arrow_down_smal": 19, "arrow_forward": 19, "arrow_heading_down": 19, "arrow_heading_up": 19, "arrow_left": 19, "arrow_lower_left": 19, "arrow_lower_right": 19, "arrow_right": 19, "arrow_right_hook": 19, "arrow_up": 19, "arrow_up_down": 19, "arrow_up_smal": 19, "arrow_upper_left": 19, "arrow_upper_right": 19, "arrows_clockwis": 19, "arrows_counterclockwis": 19, "articulated_lorri": 19, "artificial_satellit": 19, "artist": 19, "artist_dark_skin_ton": 19, "artist_light_skin_ton": 19, "artist_medium_dark_skin_ton": 19, "artist_medium_light_skin_ton": 19, "artist_medium_skin_ton": 19, "artist_tone1": 19, "artist_tone2": 19, "artist_tone3": 19, "artist_tone4": 19, "artist_tone5": 19, "aruba": 19, "ascens": 19, "astronaut": 19, "astronaut_dark_skin_ton": 19, "astronaut_light_skin_ton": 19, "astronaut_medium_dark_skin_ton": 19, "astronaut_medium_light_skin_ton": 19, "astronaut_medium_skin_ton": 19, "astronaut_tone1": 19, "astronaut_tone2": 19, "astronaut_tone3": 19, "astronaut_tone4": 19, "astronaut_tone5": 19, "athletic_sho": 19, "atm": 19, "atom": [19, 65, 77, 214, 269, 294, 295, 296, 298, 307, 318, 355, 356, 374, 375, 383, 385, 386, 626, 812, 822, 823, 824, 845, 964, 970, 976, 986, 989, 994, 1004, 1035, 1054, 1055, 1119, 1258, 1271], "atom_symbol": 19, "australia": 19, "austria": [19, 192, 422], "auto_rickshaw": 19, "avocado": 19, "aw": 19, "ax": [19, 212, 1104], "az": 19, "azerbaijan": 19, "ba": [19, 202], "babi": [19, 174], "baby_bottl": 19, "baby_chick": 19, "baby_symbol": 19, "baby_tone1": 19, "baby_tone2": 19, "baby_tone3": 19, "baby_tone4": 19, "baby_tone5": 19, "back_of_hand": 19, "back_of_hand_tone1": 19, "back_of_hand_tone2": 19, "back_of_hand_tone3": 19, "back_of_hand_tone4": 19, "back_of_hand_tone5": 19, "bacon": 19, "badger": 19, "badminton": 19, "bagel": 19, "baggage_claim": 19, "baguette_bread": 19, "bahama": 19, "bahrain": 19, "balance_scal": 19, "bald": 19, "ballet_sho": 19, "balloon": 19, "ballot_box": 19, "ballot_box_with_ballot": 19, "ballot_box_with_check": 19, "bamboo": 19, "banana": 19, "bangbang": 19, "bangladesh": 19, "banjo": 19, "bank": [19, 512], "bar_chart": 19, "barbado": 19, "barber": 19, "basebal": 19, "basket": 19, "basketbal": 19, "basketball_man": 19, "basketball_play": 19, "basketball_player_tone1": 19, "basketball_player_tone2": 19, "basketball_player_tone3": 19, "basketball_player_tone4": 19, "basketball_player_tone5": 19, "basketball_woman": 19, "bat": [19, 1243], "bath": 19, "bath_tone1": 19, "bath_tone2": 19, "bath_tone3": 19, "bath_tone4": 19, "bath_tone5": 19, "bathtub": 19, "batteri": [19, 78, 223, 404, 928, 1132, 1133, 1159, 1237, 1278], "bb": [19, 189, 195, 934], "bd": [19, 202], "beach": 19, "beach_umbrella": 19, "beach_with_umbrella": 19, "bear": [19, 1053, 1231], "bearded_person": 19, "bearded_person_dark_skin_ton": 19, "bearded_person_light_skin_ton": 19, "bearded_person_medium_dark_skin_ton": 19, "bearded_person_medium_light_skin_ton": 19, "bearded_person_medium_skin_ton": 19, "bearded_person_tone1": 19, "bearded_person_tone2": 19, "bearded_person_tone3": 19, "bearded_person_tone4": 19, "bearded_person_tone5": 19, "beaver": 19, "bed": 19, "bee": 19, "beer": [19, 490], "beetl": 19, "beginn": [19, 67, 168, 200, 218, 224, 243, 258, 261, 262, 264, 274, 280, 284, 330, 358, 448, 724, 770, 1133, 1139, 1167], "belaru": 19, "belgium": 19, "beliz": 19, "bell": [19, 1127, 1130], "bell_pepp": 19, "bellhop": 19, "bellhop_bel": 19, "benin": 19, "bento": 19, "bermuda": 19, "beverage_box": 19, "bf": [19, 202], "bg": [19, 512], "bh": 19, "bhutan": 19, "bicyclist": 19, "bicyclist_tone1": 19, "bicyclist_tone2": 19, "bicyclist_tone3": 19, "bicyclist_tone4": 19, "bicyclist_tone5": 19, "bike": 19, "biking_man": 19, "biking_woman": 19, "bikini": 19, "billed_cap": 19, "biohazard": 19, "biohazard_sign": 19, "bird": 19, "birthdai": [19, 232, 731], "bison": [19, 203, 934, 964, 1098], "bj": 19, "bl": 19, "black_cat": 19, "black_circl": 19, "black_flag": 19, "black_heart": 19, "black_jok": 19, "black_large_squar": 19, "black_medium_small_squar": 19, "black_medium_squar": 19, "black_nib": 19, "black_small_squar": 19, "black_square_button": 19, "blond": 19, "haired_man": 19, "haired_man_dark_skin_ton": 19, "haired_man_light_skin_ton": 19, "haired_man_medium_dark_skin_ton": 19, "haired_man_medium_light_skin_ton": 19, "haired_man_medium_skin_ton": 19, "haired_man_tone1": 19, "haired_man_tone2": 19, "haired_man_tone3": 19, "haired_man_tone4": 19, "haired_man_tone5": 19, "haired_woman": 19, "haired_woman_dark_skin_ton": 19, "haired_woman_light_skin_ton": 19, "haired_woman_medium_dark_skin_ton": 19, "haired_woman_medium_light_skin_ton": 19, "haired_woman_medium_skin_ton": 19, "haired_woman_tone1": 19, "haired_woman_tone2": 19, "haired_woman_tone3": 19, "haired_woman_tone4": 19, "haired_woman_tone5": 19, "blond_haired_person": 19, "blond_haired_person_tone1": 19, "blond_haired_person_tone2": 19, "blond_haired_person_tone3": 19, "blond_haired_person_tone4": 19, "blond_haired_person_tone5": 19, "blonde_man": 19, "blonde_woman": 19, "blossom": 19, "blowfish": 19, "blue_book": 19, "blue_car": 19, "blue_circl": 19, "blue_heart": 19, "blue_squar": 19, "blueberri": 19, "blush": 19, "bm": 19, "bn": 19, "bo": [19, 1121], "boar": 19, "boat": 19, "bolivia": 19, "bomb": 19, "bone": 19, "bookmark": [19, 1220], "bookmark_tab": 19, "boom": [19, 770, 806], "boomerang": 19, "boot": [19, 155, 187, 193, 195, 199, 210, 311, 506, 757, 869, 934, 936, 957, 961, 980, 984, 994], "bosnia_herzegovina": 19, "botswana": 19, "bottle_with_popping_cork": 19, "bouquet": 19, "bouvet_island": 19, "bow": 19, "bow_and_arrow": 19, "bow_tone1": 19, "bow_tone2": 19, "bow_tone3": 19, "bow_tone4": 19, "bow_tone5": 19, "bowing_man": 19, "bowing_woman": 19, "bowl_with_spoon": 19, "bowl": 19, "boxing_glov": 19, "boi": 19, "boy_tone1": 19, "boy_tone2": 19, "boy_tone3": 19, "boy_tone4": 19, "boy_tone5": 19, "bq": 19, "br": [19, 289, 347], "brain": [19, 48, 50], "brazil": 19, "bread": 19, "breast_feed": 19, "breast_feeding_dark_skin_ton": 19, "breast_feeding_light_skin_ton": 19, "breast_feeding_medium_dark_skin_ton": 19, "breast_feeding_medium_light_skin_ton": 19, "breast_feeding_medium_skin_ton": 19, "breast_feeding_tone1": 19, "breast_feeding_tone2": 19, "breast_feeding_tone3": 19, "breast_feeding_tone4": 19, "breast_feeding_tone5": 19, "brick": [19, 191, 204], "bride_with_veil": 19, "bride_with_veil_tone1": 19, "bride_with_veil_tone2": 19, "bride_with_veil_tone3": 19, "bride_with_veil_tone4": 19, "bride_with_veil_tone5": 19, "bridge_at_night": 19, "briefcas": 19, "brief": [19, 504, 891], "british_indian_ocean_territori": 19, "british_virgin_island": 19, "broccoli": 19, "broken_heart": 19, "broom": 19, "brown_circl": 19, "brown_heart": 19, "brown_squar": 19, "brunei": 19, "bt": 19, "bubble_tea": 19, "bucket": [19, 955], "bug": [19, 96, 193, 194, 195, 234, 253, 269, 280, 413, 468, 470, 471, 486, 491, 493, 497, 510, 514, 541, 631, 633, 635, 643, 649, 650, 653, 658, 748, 770, 825, 827, 843, 974, 1017, 1057, 1066, 1067, 1068, 1101, 1121, 1122, 1136, 1139, 1271], "building_construct": 19, "bulb": 19, "bulgaria": 19, "bullettrain_front": 19, "bullettrain_sid": 19, "burkina_faso": 19, "burrito": 19, "burundi": 19, "bu": [19, 53, 54, 70, 114, 139, 155, 175, 238, 263, 279, 286, 288, 289, 304, 307, 311, 321, 325, 347, 353, 359, 365, 382, 548, 562, 577, 591, 607, 608, 891, 929, 934, 935, 936, 955, 980, 1033, 1039, 1066, 1106, 1264, 1270, 1272, 1279], "business_suit_levit": 19, "busstop": 19, "bust_in_silhouett": 19, "busts_in_silhouett": 19, "butter": 19, "butterfli": 19, "bv": 19, "bw": 19, "bz": 19, "cactu": 19, "cake": 19, "calendar": 19, "calendar_spir": 19, "call_m": 19, "call_me_hand": 19, "call_me_hand_tone1": 19, "call_me_hand_tone2": 19, "call_me_hand_tone3": 19, "call_me_hand_tone4": 19, "call_me_hand_tone5": 19, "call_me_tone1": 19, "call_me_tone2": 19, "call_me_tone3": 19, "call_me_tone4": 19, "call_me_tone5": 19, "cambodia": 19, "camel": 19, "camera": [19, 20, 131, 134, 197, 199, 936, 1066], "camera_flash": 19, "camera_with_flash": 19, "cameroon": 19, "camp": 19, "canada": 19, "canary_island": 19, "cancer": 19, "candl": 19, "candi": 19, "canned_food": 19, "cano": 19, "cape_verd": 19, "capital_abcd": 19, "capricorn": 19, "car": [19, 154, 309, 512, 928], "card_box": 19, "card_file_box": 19, "card_index": 19, "card_index_divid": 19, "caribbean_netherland": 19, "carousel_hors": 19, "carpentry_saw": 19, "carrot": 19, "cartwheel": 19, "cartwheel_tone1": 19, "cartwheel_tone2": 19, "cartwheel_tone3": 19, "cartwheel_tone4": 19, "cartwheel_tone5": 19, "cat2": 19, "cat": [19, 135, 139, 194, 198, 231, 243, 297, 306, 307, 309, 327, 328, 371, 372, 389, 390, 488, 512, 513, 607, 857, 858, 861, 871, 873, 875, 903, 910, 919, 920, 922, 923, 925, 928, 934, 936, 937, 942, 947, 964, 984, 1000, 1006, 1030, 1032, 1033, 1037, 1041, 1042, 1047, 1071, 1080, 1267], "cayman_island": 19, "cd": [19, 47, 53, 155, 166, 183, 195, 196, 198, 199, 202, 203, 219, 220, 253, 263, 283, 291, 296, 298, 390, 404, 409, 540, 605, 608, 667, 853, 856, 857, 858, 861, 868, 876, 881, 883, 891, 915, 916, 928, 934, 936, 957, 959, 984, 985, 1012, 1025, 1084, 1085, 1098, 1099, 1164], "central_african_republ": 19, "ceuta_melilla": 19, "cf": [19, 353, 824, 856, 1051], "cg": 19, "ch": 19, "chad": 19, "chain": [19, 191, 202, 211, 273, 290, 490, 532, 740, 989, 1061], "chair": [19, 223, 1066], "champagn": 19, "champagne_glass": 19, "chart": [19, 237, 252, 261, 274, 288, 291, 324, 330, 1208, 1215], "chart_with_downwards_trend": 19, "chart_with_upwards_trend": 19, "checkered_flag": 19, "chees": 19, "cheese_wedg": 19, "cherri": 19, "cherry_blossom": 19, "chess_pawn": 19, "chestnut": 19, "chicken": 19, "child": [19, 88, 135, 156, 208, 297, 306, 307, 327, 328, 371, 372, 526, 532, 797, 862, 865, 866, 895, 896, 897, 900, 902, 903, 1047, 1051, 1058, 1063, 1081, 1125, 1233], "child_dark_skin_ton": 19, "child_light_skin_ton": 19, "child_medium_dark_skin_ton": 19, "child_medium_light_skin_ton": 19, "child_medium_skin_ton": 19, "child_tone1": 19, "child_tone2": 19, "child_tone3": 19, "child_tone4": 19, "child_tone5": 19, "children_cross": 19, "chile": 19, "china": 19, "chipmunk": 19, "chocolate_bar": 19, "chopstick": 19, "christmas_island": 19, "christmas_tre": 19, "church": 19, "ci": [19, 1241], "cinema": 19, "circus_t": 19, "city_dusk": 19, "city_sunris": 19, "city_sunset": 19, "cityscap": 19, "ck": 19, "cl": [19, 279, 304, 1124, 1125], "clamp": 19, "clap": 19, "clap_tone1": 19, "clap_tone2": 19, "clap_tone3": 19, "clap_tone4": 19, "clap_tone5": 19, "clapper": 19, "classical_build": 19, "clinking_glass": 19, "clipboard": 19, "clipperton_island": 19, "clock1030": 19, "clock10": 19, "clock1130": 19, "clock11": 19, "clock1230": 19, "clock12": 19, "clock130": 19, "clock1": 19, "clock230": 19, "clock2": 19, "clock330": 19, "clock3": 19, "clock430": 19, "clock4": 19, "clock530": 19, "clock5": 19, "clock630": 19, "clock6": 19, "clock730": 19, "clock7": 19, "clock830": 19, "clock8": 19, "clock930": 19, "clock9": 19, "clock": [19, 125, 266, 267, 499, 839, 930, 934], "closed_book": 19, "closed_lock_with_kei": 19, "closed_umbrella": 19, "cloud": [19, 90, 199, 243, 267, 403, 404, 407, 753, 756, 1012, 1212, 1213, 1236], "cloud_lightn": 19, "cloud_rain": 19, "cloud_snow": 19, "cloud_tornado": 19, "cloud_with_lightn": 19, "cloud_with_lightning_and_rain": 19, "cloud_with_rain": 19, "cloud_with_snow": 19, "cloud_with_tornado": 19, "clown": 19, "clown_fac": 19, "club": [19, 25], "cm": 19, "cn": [19, 202], "coat": 19, "cockroach": 19, "cocktail": 19, "coconut": [19, 315], "cocos_island": 19, "coffe": [19, 195, 934], "coffin": 19, "coin": 19, "cold_fac": 19, "cold_sweat": 19, "colombia": 19, "comet": 19, "comoro": 19, "compass": 19, "compress": [19, 111, 166, 193, 297, 306, 307, 327, 371, 853, 860, 1066, 1096, 1099], "computer_mous": 19, "confetti_bal": 19, "confound": 19, "confus": [19, 173, 174, 192, 196, 223, 252, 445, 453, 499, 524, 529, 532, 665, 675, 749, 755, 1086, 1150, 1234], "congo": 19, "congo_brazzavil": 19, "congo_kinshasa": 19, "congratul": 19, "construct": [19, 223, 229, 310, 313, 375, 381, 382, 384, 448, 461, 471, 500, 510, 634, 684, 703, 704, 705, 815, 847, 1122, 1129, 1146, 1157, 1261], "construction_sit": 19, "construction_work": 19, "construction_worker_man": 19, "construction_worker_tone1": 19, "construction_worker_tone2": 19, "construction_worker_tone3": 19, "construction_worker_tone4": 19, "construction_worker_tone5": 19, "construction_worker_woman": 19, "control_knob": 19, "convenience_stor": 19, "cook": [19, 307], "cook_dark_skin_ton": 19, "cook_island": 19, "cook_light_skin_ton": 19, "cook_medium_dark_skin_ton": 19, "cook_medium_light_skin_ton": 19, "cook_medium_skin_ton": 19, "cook_tone1": 19, "cook_tone2": 19, "cook_tone3": 19, "cook_tone4": 19, "cook_tone5": 19, "cooki": [19, 966, 980], "cool": [19, 180, 183, 193, 194, 197, 199, 211, 212, 223, 224, 227, 242, 307, 320, 373, 422, 506, 512, 525, 528, 560, 569, 706, 759, 800, 801, 807, 825, 828, 834, 837, 839, 848, 849, 887, 937, 984, 1101, 1105, 1108, 1125, 1144, 1158, 1208, 1215, 1220, 1258], "cop": 19, "cop_tone1": 19, "cop_tone2": 19, "cop_tone3": 19, "cop_tone4": 19, "cop_tone5": 19, "copyright": [19, 23, 203, 243, 260, 266, 276, 279, 304, 397, 401, 658, 747, 845, 1134], "corn": 19, "costa_rica": 19, "cote_divoir": 19, "couch": 19, "couch_and_lamp": 19, "coupl": [19, 30, 131, 172, 191, 192, 193, 194, 199, 211, 223, 227, 424, 461, 495, 500, 833, 925, 1027, 1042, 1055, 1262], "couple_mm": 19, "couple_with_heart": 19, "couple_with_heart_dark_skin_ton": 19, "couple_with_heart_light_skin_ton": 19, "couple_with_heart_man_man": 19, "couple_with_heart_man_man_dark_skin_ton": 19, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_man_man_light_skin_ton": 19, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_man_man_medium_dark_skin_ton": 19, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 19, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_man_man_medium_light_skin_ton": 19, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 19, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_man_man_medium_skin_ton": 19, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 19, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 19, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_man_man_tone1": 19, "couple_with_heart_man_man_tone1_tone2": 19, "couple_with_heart_man_man_tone1_tone3": 19, "couple_with_heart_man_man_tone1_tone4": 19, "couple_with_heart_man_man_tone1_tone5": 19, "couple_with_heart_man_man_tone2": 19, "couple_with_heart_man_man_tone2_tone1": 19, "couple_with_heart_man_man_tone2_tone3": 19, "couple_with_heart_man_man_tone2_tone4": 19, "couple_with_heart_man_man_tone2_tone5": 19, "couple_with_heart_man_man_tone3": 19, "couple_with_heart_man_man_tone3_tone1": 19, "couple_with_heart_man_man_tone3_tone2": 19, "couple_with_heart_man_man_tone3_tone4": 19, "couple_with_heart_man_man_tone3_tone5": 19, "couple_with_heart_man_man_tone4": 19, "couple_with_heart_man_man_tone4_tone1": 19, "couple_with_heart_man_man_tone4_tone2": 19, "couple_with_heart_man_man_tone4_tone3": 19, "couple_with_heart_man_man_tone4_tone5": 19, "couple_with_heart_man_man_tone5": 19, "couple_with_heart_man_man_tone5_tone1": 19, "couple_with_heart_man_man_tone5_tone2": 19, "couple_with_heart_man_man_tone5_tone3": 19, "couple_with_heart_man_man_tone5_tone4": 19, "couple_with_heart_medium_dark_skin_ton": 19, "couple_with_heart_medium_light_skin_ton": 19, "couple_with_heart_medium_skin_ton": 19, "couple_with_heart_mm": 19, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 19, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 19, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 19, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 19, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_person_person_tone1_tone2": 19, "couple_with_heart_person_person_tone1_tone3": 19, "couple_with_heart_person_person_tone1_tone4": 19, "couple_with_heart_person_person_tone1_tone5": 19, "couple_with_heart_person_person_tone2_tone1": 19, "couple_with_heart_person_person_tone2_tone3": 19, "couple_with_heart_person_person_tone2_tone4": 19, "couple_with_heart_person_person_tone2_tone5": 19, "couple_with_heart_person_person_tone3_tone1": 19, "couple_with_heart_person_person_tone3_tone2": 19, "couple_with_heart_person_person_tone3_tone4": 19, "couple_with_heart_person_person_tone3_tone5": 19, "couple_with_heart_person_person_tone4_tone1": 19, "couple_with_heart_person_person_tone4_tone2": 19, "couple_with_heart_person_person_tone4_tone3": 19, "couple_with_heart_person_person_tone4_tone5": 19, "couple_with_heart_person_person_tone5_tone1": 19, "couple_with_heart_person_person_tone5_tone2": 19, "couple_with_heart_person_person_tone5_tone3": 19, "couple_with_heart_person_person_tone5_tone4": 19, "couple_with_heart_tone1": 19, "couple_with_heart_tone2": 19, "couple_with_heart_tone3": 19, "couple_with_heart_tone4": 19, "couple_with_heart_tone5": 19, "couple_with_heart_woman_man": 19, "couple_with_heart_woman_man_dark_skin_ton": 19, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_man_light_skin_ton": 19, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_man_medium_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_man_medium_light_skin_ton": 19, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_man_medium_skin_ton": 19, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_man_tone1": 19, "couple_with_heart_woman_man_tone1_tone2": 19, "couple_with_heart_woman_man_tone1_tone3": 19, "couple_with_heart_woman_man_tone1_tone4": 19, "couple_with_heart_woman_man_tone1_tone5": 19, "couple_with_heart_woman_man_tone2": 19, "couple_with_heart_woman_man_tone2_tone1": 19, "couple_with_heart_woman_man_tone2_tone3": 19, "couple_with_heart_woman_man_tone2_tone4": 19, "couple_with_heart_woman_man_tone2_tone5": 19, "couple_with_heart_woman_man_tone3": 19, "couple_with_heart_woman_man_tone3_tone1": 19, "couple_with_heart_woman_man_tone3_tone2": 19, "couple_with_heart_woman_man_tone3_tone4": 19, "couple_with_heart_woman_man_tone3_tone5": 19, "couple_with_heart_woman_man_tone4": 19, "couple_with_heart_woman_man_tone4_tone1": 19, "couple_with_heart_woman_man_tone4_tone2": 19, "couple_with_heart_woman_man_tone4_tone3": 19, "couple_with_heart_woman_man_tone4_tone5": 19, "couple_with_heart_woman_man_tone5": 19, "couple_with_heart_woman_man_tone5_tone1": 19, "couple_with_heart_woman_man_tone5_tone2": 19, "couple_with_heart_woman_man_tone5_tone3": 19, "couple_with_heart_woman_man_tone5_tone4": 19, "couple_with_heart_woman_woman": 19, "couple_with_heart_woman_woman_dark_skin_ton": 19, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_woman_light_skin_ton": 19, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_woman_medium_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_woman_medium_light_skin_ton": 19, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 19, "couple_with_heart_woman_woman_medium_skin_ton": 19, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 19, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 19, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 19, "couple_with_heart_woman_woman_tone1": 19, "couple_with_heart_woman_woman_tone1_tone2": 19, "couple_with_heart_woman_woman_tone1_tone3": 19, "couple_with_heart_woman_woman_tone1_tone4": 19, "couple_with_heart_woman_woman_tone1_tone5": 19, "couple_with_heart_woman_woman_tone2": 19, "couple_with_heart_woman_woman_tone2_tone1": 19, "couple_with_heart_woman_woman_tone2_tone3": 19, "couple_with_heart_woman_woman_tone2_tone4": 19, "couple_with_heart_woman_woman_tone2_tone5": 19, "couple_with_heart_woman_woman_tone3": 19, "couple_with_heart_woman_woman_tone3_tone1": 19, "couple_with_heart_woman_woman_tone3_tone2": 19, "couple_with_heart_woman_woman_tone3_tone4": 19, "couple_with_heart_woman_woman_tone3_tone5": 19, "couple_with_heart_woman_woman_tone4": 19, "couple_with_heart_woman_woman_tone4_tone1": 19, "couple_with_heart_woman_woman_tone4_tone2": 19, "couple_with_heart_woman_woman_tone4_tone3": 19, "couple_with_heart_woman_woman_tone4_tone5": 19, "couple_with_heart_woman_woman_tone5": 19, "couple_with_heart_woman_woman_tone5_tone1": 19, "couple_with_heart_woman_woman_tone5_tone2": 19, "couple_with_heart_woman_woman_tone5_tone3": 19, "couple_with_heart_woman_woman_tone5_tone4": 19, "couple_with_heart_ww": 19, "couple_ww": 19, "couplekiss": 19, "couplekiss_man_man": 19, "couplekiss_man_woman": 19, "couplekiss_mm": 19, "couplekiss_woman_woman": 19, "couplekiss_ww": 19, "cow2": 19, "cow": [19, 1044, 1047], "cowboi": 19, "cowboy_hat_fac": 19, "cp": [19, 88, 113, 135, 156, 168, 193, 195, 198, 231, 233, 297, 306, 307, 327, 328, 371, 372, 404, 409, 848, 861, 891, 895, 896, 911, 934, 984, 1015, 1026, 1098, 1267], "cr": [19, 1158], "crab": 19, "crayon": 19, "credit_card": 19, "crescent_moon": 19, "cricket": 19, "cricket_bat_bal": 19, "cricket_gam": 19, "croatia": 19, "crocodil": 19, "croissant": 19, "cross": [19, 25, 92, 93, 95, 121, 135, 137, 138, 146, 150, 165, 191, 204, 227, 321, 333, 334, 349, 350, 378, 405, 406, 407, 523, 532, 607, 608, 764, 765, 938, 1033, 1091, 1095, 1098, 1273], "crossed_fing": 19, "crossed_flag": 19, "crossed_sword": 19, "crown": 19, "cruise_ship": 19, "cry": [19, 192], "crying_cat_fac": 19, "crystal_bal": 19, "cu": 19, "cuba": 19, "cucumb": 19, "cup_with_straw": 19, "cupcak": 19, "cupid": 19, "curacao": 19, "curling_ston": 19, "curly_hair": 19, "curly_loop": 19, "currency_exchang": 19, "curri": [19, 252], "custard": 19, "cut_of_meat": 19, "cw": 19, "cx": 19, "cy": 19, "cyclon": 19, "cypru": 19, "cz": 19, "czech_republ": 19, "dagger": [19, 25], "dagger_knif": 19, "dancer": 19, "dancer_tone1": 19, "dancer_tone2": 19, "dancer_tone3": 19, "dancer_tone4": 19, "dancer_tone5": 19, "dancing_men": 19, "dancing_women": 19, "dango": 19, "dark_sunglass": 19, "dart": 19, "dash": [19, 21, 22, 25, 691], "date": [19, 111, 195, 203, 223, 229, 259, 291, 307, 309, 352, 417, 418, 512, 757, 985, 1103, 1198, 1200, 1204, 1206, 1212, 1217], "deaf_man": 19, "deaf_man_dark_skin_ton": 19, "deaf_man_light_skin_ton": 19, "deaf_man_medium_dark_skin_ton": 19, "deaf_man_medium_light_skin_ton": 19, "deaf_man_medium_skin_ton": 19, "deaf_man_tone1": 19, "deaf_man_tone2": 19, "deaf_man_tone3": 19, "deaf_man_tone4": 19, "deaf_man_tone5": 19, "deaf_person": 19, "deaf_person_dark_skin_ton": 19, "deaf_person_light_skin_ton": 19, "deaf_person_medium_dark_skin_ton": 19, "deaf_person_medium_light_skin_ton": 19, "deaf_person_medium_skin_ton": 19, "deaf_person_tone1": 19, "deaf_person_tone2": 19, "deaf_person_tone3": 19, "deaf_person_tone4": 19, "deaf_person_tone5": 19, "deaf_woman": 19, "deaf_woman_dark_skin_ton": 19, "deaf_woman_light_skin_ton": 19, "deaf_woman_medium_dark_skin_ton": 19, "deaf_woman_medium_light_skin_ton": 19, "deaf_woman_medium_skin_ton": 19, "deaf_woman_tone1": 19, "deaf_woman_tone2": 19, "deaf_woman_tone3": 19, "deaf_woman_tone4": 19, "deaf_woman_tone5": 19, "deciduous_tre": 19, "deer": 19, "denmark": 19, "department_stor": 19, "derelict_hous": 19, "derelict_house_build": 19, "desert": 19, "desert_island": 19, "desktop": [19, 172, 185, 192, 197, 252, 321, 913, 1068, 1264], "desktop_comput": 19, "detective_tone1": 19, "detective_tone2": 19, "detective_tone3": 19, "detective_tone4": 19, "detective_tone5": 19, "dg": 19, "diamond_shape_with_a_dot_insid": 19, "diamond": [19, 21, 25, 251, 264], "diego_garcia": 19, "8": [19, 49, 98, 155, 194, 195, 199, 203, 210, 211, 212, 213, 214, 218, 223, 224, 227, 229, 236, 239, 241, 242, 244, 247, 248, 250, 251, 256, 257, 258, 260, 261, 263, 264, 266, 270, 271, 273, 276, 279, 283, 286, 288, 289, 292, 300, 301, 304, 307, 308, 311, 315, 321, 325, 328, 330, 331, 336, 339, 342, 343, 347, 353, 359, 365, 369, 372, 387, 396, 397, 398, 399, 404, 421, 444, 488, 500, 506, 512, 515, 522, 529, 543, 569, 601, 636, 643, 650, 655, 658, 660, 662, 666, 668, 669, 762, 797, 813, 845, 861, 868, 876, 913, 916, 922, 928, 929, 930, 931, 934, 936, 957, 980, 984, 1041, 1066, 1083, 1101, 1107, 1110, 1116, 1139, 1140, 1145, 1153, 1158, 1163, 1164, 1169, 1206, 1208, 1212, 1213, 1219, 1236, 1243], "digit_eight": 19, "digit_f": 19, "4": [19, 47, 49, 95, 98, 101, 102, 111, 150, 152, 155, 165, 166, 189, 191, 195, 197, 203, 210, 211, 212, 213, 214, 217, 224, 229, 231, 235, 236, 239, 241, 244, 247, 250, 251, 255, 256, 257, 258, 260, 261, 263, 264, 266, 271, 273, 274, 276, 279, 283, 286, 288, 289, 292, 300, 301, 304, 308, 309, 311, 315, 321, 324, 325, 330, 331, 336, 343, 347, 353, 358, 359, 365, 369, 397, 398, 399, 401, 404, 417, 418, 421, 434, 450, 470, 473, 476, 493, 497, 500, 501, 511, 512, 517, 520, 526, 529, 552, 554, 594, 598, 599, 600, 601, 602, 604, 606, 607, 609, 625, 627, 643, 650, 652, 660, 663, 665, 666, 667, 668, 669, 681, 682, 690, 700, 739, 745, 750, 753, 756, 761, 762, 764, 768, 770, 797, 804, 826, 828, 835, 837, 848, 869, 918, 921, 922, 930, 934, 936, 937, 984, 985, 1026, 1027, 1040, 1043, 1047, 1066, 1067, 1071, 1083, 1086, 1104, 1105, 1107, 1114, 1116, 1120, 1127, 1128, 1130, 1139, 1140, 1145, 1148, 1149, 1150, 1154, 1155, 1159, 1160, 1163, 1164, 1166, 1169, 1183, 1187, 1198, 1200, 1204, 1206, 1208, 1212, 1213, 1215, 1221, 1225, 1226, 1227, 1228, 1230, 1232, 1236, 1241], "digit_four": 19, "9": [19, 47, 49, 111, 155, 180, 193, 197, 200, 210, 211, 212, 213, 214, 222, 224, 226, 229, 230, 231, 232, 233, 236, 237, 239, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 254, 256, 257, 258, 260, 263, 264, 266, 271, 273, 276, 279, 280, 283, 286, 289, 291, 292, 301, 304, 307, 308, 311, 315, 316, 318, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 378, 396, 397, 399, 400, 404, 409, 421, 426, 428, 434, 443, 446, 504, 512, 519, 549, 569, 578, 597, 643, 645, 669, 761, 801, 814, 835, 887, 910, 913, 934, 936, 937, 961, 1021, 1067, 1104, 1114, 1120, 1133, 1134, 1140, 1145, 1147, 1155, 1159, 1164, 1170, 1176, 1212, 1213, 1221, 1230, 1236, 1241], "digit_nin": 19, "digit_on": 19, "7": [19, 29, 49, 155, 174, 192, 195, 197, 202, 208, 211, 212, 213, 214, 224, 229, 236, 239, 241, 242, 244, 247, 248, 250, 254, 256, 257, 258, 260, 261, 263, 266, 271, 273, 276, 279, 283, 286, 288, 289, 291, 292, 300, 301, 304, 308, 309, 311, 315, 321, 325, 330, 331, 336, 339, 343, 347, 353, 359, 365, 369, 375, 389, 398, 399, 404, 409, 410, 421, 434, 438, 452, 479, 488, 512, 515, 519, 522, 526, 529, 532, 540, 549, 569, 570, 594, 597, 602, 606, 607, 609, 610, 611, 612, 624, 631, 639, 643, 650, 658, 659, 662, 664, 665, 666, 668, 689, 693, 696, 704, 706, 725, 755, 762, 768, 793, 794, 795, 804, 814, 815, 826, 827, 828, 835, 861, 862, 874, 875, 891, 913, 922, 930, 934, 936, 937, 1022, 1030, 1041, 1063, 1067, 1076, 1077, 1080, 1081, 1084, 1085, 1107, 1110, 1116, 1120, 1128, 1133, 1138, 1139, 1140, 1143, 1145, 1147, 1148, 1164, 1176, 1194, 1197, 1208, 1212, 1213, 1216, 1221, 1232, 1241], "digit_seven": 19, "digit_six": 19, "3": [19, 47, 49, 52, 55, 95, 98, 99, 100, 101, 102, 104, 112, 118, 139, 150, 152, 164, 165, 170, 180, 197, 202, 203, 208, 210, 211, 212, 213, 214, 221, 223, 224, 229, 235, 236, 239, 240, 241, 244, 247, 250, 251, 255, 257, 259, 260, 265, 266, 269, 271, 273, 276, 279, 283, 286, 288, 290, 291, 292, 294, 301, 304, 308, 309, 311, 315, 321, 325, 331, 336, 338, 339, 344, 347, 353, 359, 365, 369, 387, 397, 398, 399, 400, 404, 405, 406, 409, 421, 434, 446, 447, 448, 461, 470, 471, 492, 493, 501, 504, 506, 511, 512, 515, 519, 522, 526, 528, 529, 532, 536, 540, 552, 569, 570, 594, 595, 599, 602, 604, 605, 606, 607, 609, 610, 611, 612, 616, 617, 618, 619, 621, 622, 624, 626, 643, 650, 652, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 674, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 696, 713, 720, 722, 724, 739, 740, 743, 744, 745, 747, 748, 749, 750, 753, 755, 756, 759, 761, 762, 764, 768, 770, 781, 797, 801, 804, 824, 831, 833, 835, 837, 845, 846, 848, 850, 869, 874, 888, 891, 913, 916, 918, 922, 925, 930, 932, 934, 936, 937, 942, 948, 984, 1007, 1016, 1017, 1019, 1021, 1022, 1023, 1026, 1030, 1031, 1032, 1040, 1041, 1042, 1043, 1050, 1051, 1055, 1061, 1063, 1066, 1067, 1070, 1071, 1072, 1077, 1080, 1081, 1083, 1084, 1085, 1086, 1104, 1106, 1107, 1112, 1114, 1116, 1120, 1127, 1130, 1132, 1133, 1134, 1137, 1138, 1140, 1142, 1144, 1145, 1148, 1150, 1155, 1156, 1157, 1159, 1163, 1164, 1166, 1183, 1187, 1191, 1197, 1198, 1200, 1204, 1206, 1208, 1211, 1212, 1213, 1216, 1219, 1225, 1226, 1227, 1228, 1230, 1232, 1236, 1241, 1242, 1243, 1250, 1256, 1258, 1259, 1261, 1267, 1270, 1277, 1278, 1282], "digit_thre": 19, "2": [19, 29, 37, 47, 49, 53, 93, 95, 104, 111, 112, 114, 132, 150, 155, 165, 166, 193, 195, 201, 202, 203, 208, 210, 211, 212, 213, 214, 225, 229, 235, 236, 239, 240, 244, 247, 250, 251, 255, 256, 257, 260, 265, 266, 271, 273, 276, 277, 279, 283, 286, 289, 291, 292, 301, 304, 308, 309, 311, 315, 321, 325, 331, 334, 336, 339, 343, 347, 350, 353, 359, 365, 369, 376, 379, 390, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 413, 421, 433, 434, 446, 452, 453, 473, 477, 504, 510, 511, 512, 516, 519, 522, 523, 524, 525, 526, 528, 529, 532, 537, 538, 540, 543, 545, 546, 548, 570, 594, 595, 598, 604, 606, 607, 610, 614, 616, 617, 618, 619, 621, 622, 626, 641, 643, 650, 651, 652, 658, 660, 663, 665, 666, 667, 668, 669, 674, 679, 683, 687, 688, 689, 690, 691, 696, 700, 704, 705, 706, 707, 708, 713, 720, 745, 747, 748, 749, 750, 753, 755, 756, 759, 761, 762, 763, 764, 765, 766, 768, 770, 785, 790, 797, 800, 803, 804, 807, 812, 815, 822, 825, 827, 828, 831, 833, 834, 835, 837, 841, 844, 845, 846, 847, 848, 850, 857, 858, 866, 869, 870, 873, 874, 875, 887, 910, 913, 917, 918, 922, 925, 927, 928, 932, 934, 936, 943, 984, 1016, 1019, 1021, 1022, 1023, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1047, 1061, 1063, 1066, 1067, 1069, 1071, 1075, 1082, 1083, 1086, 1099, 1101, 1103, 1104, 1106, 1107, 1112, 1114, 1116, 1120, 1124, 1127, 1128, 1130, 1132, 1133, 1134, 1135, 1137, 1140, 1141, 1142, 1144, 1149, 1150, 1155, 1160, 1163, 1166, 1169, 1173, 1177, 1187, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1208, 1211, 1212, 1213, 1218, 1225, 1226, 1227, 1228, 1230, 1231, 1236, 1241, 1242, 1243, 1247, 1248, 1259, 1268, 1269, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1281, 1282], "digit_two": 19, "digit_zero": 19, "disappoint": 19, "disappointed_reliev": 19, "disguised_fac": 19, "divid": [19, 22, 23, 25, 283, 1215], "diving_mask": 19, "diya_lamp": 19, "dizzi": 19, "dizzy_fac": 19, "dj": 19, "djibouti": 19, "dk": 19, "dm": 19, "dna": 19, "do_not_litt": 19, "dodo": 19, "dog2": 19, "dog": [19, 488], "dollar": [19, 23], "doll": 19, "dolphin": 19, "dominica": 19, "dominican_republ": 19, "door": [19, 162, 164, 269, 626, 974, 1118], "double_vertical_bar": 19, "doughnut": 19, "dove": 19, "dove_of_peac": 19, "dragon": [19, 86, 253, 269, 316, 318, 356, 375, 381, 382, 626, 650, 651, 656, 806, 813, 846, 1080], "dragon_fac": 19, "dress": 19, "dromedary_camel": 19, "drool": 19, "drooling_fac": 19, "drop_of_blood": 19, "droplet": 19, "drum": 19, "drum_with_drumstick": 19, "duck": [19, 143, 162, 226, 227, 281, 300, 317, 319, 320, 324, 341, 342, 345, 346, 356, 364, 374, 375, 381, 383, 547, 606, 783, 788, 798, 800, 801, 833, 834, 846, 850, 1116, 1123, 1208, 1213, 1258, 1277], "dumpl": 19, "dvd": 19, "dz": 19, "mail": [19, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922, 1221], "ea": [19, 202], "eagl": [19, 263, 1166], "ear": 19, "ear_of_ric": 19, "ear_tone1": 19, "ear_tone2": 19, "ear_tone3": 19, "ear_tone4": 19, "ear_tone5": 19, "ear_with_hearing_aid": 19, "ear_with_hearing_aid_dark_skin_ton": 19, "ear_with_hearing_aid_light_skin_ton": 19, "ear_with_hearing_aid_medium_dark_skin_ton": 19, "ear_with_hearing_aid_medium_light_skin_ton": 19, "ear_with_hearing_aid_medium_skin_ton": 19, "ear_with_hearing_aid_tone1": 19, "ear_with_hearing_aid_tone2": 19, "ear_with_hearing_aid_tone3": 19, "ear_with_hearing_aid_tone4": 19, "ear_with_hearing_aid_tone5": 19, "earth_africa": 19, "earth_america": 19, "earth_asia": 19, "ec": [19, 86, 202, 243, 401, 404, 409, 412, 421, 859, 891], "ecuador": 19, "ee": [19, 202], "eg": [19, 22, 118, 155], "egg": [19, 47, 1152], "eggplant": 19, "egypt": 19, "eight": [19, 122, 194, 211, 224, 234, 242, 271, 273, 359, 404, 937, 1041, 1221], "eight_pointed_black_star": 19, "eight_spoked_asterisk": 19, "eject": 19, "eject_symbol": 19, "el_salvador": 19, "electric_plug": 19, "eleph": 19, "elev": 19, "elf": [19, 200, 203, 234, 250, 260, 543, 634, 1051, 1083, 1084, 1086, 1101, 1135, 1268], "elf_dark_skin_ton": 19, "elf_light_skin_ton": 19, "elf_medium_dark_skin_ton": 19, "elf_medium_light_skin_ton": 19, "elf_medium_skin_ton": 19, "elf_tone1": 19, "elf_tone2": 19, "elf_tone3": 19, "elf_tone4": 19, "elf_tone5": 19, "england": 19, "envelop": [19, 984], "envelope_with_arrow": 19, "equatorial_guinea": 19, "er": [19, 201, 209, 224, 226, 234, 271, 1255], "eritrea": 19, "estonia": 19, "et": [19, 86, 518, 658, 845, 1019, 1047, 1084, 1085, 1127], "ethiopia": 19, "euro": [19, 574, 575, 576, 588, 589, 590], "european_castl": 19, "european_post_offic": 19, "european_union": 19, "evergreen_tre": 19, "exclam": [19, 23], "expecting_woman": 19, "expecting_woman_tone1": 19, "expecting_woman_tone2": 19, "expecting_woman_tone3": 19, "expecting_woman_tone4": 19, "expecting_woman_tone5": 19, "exploding_head": 19, "expressionless": 19, "eye_in_speech_bubbl": 19, "eye_speech_bubbl": 19, "eyeglass": 19, "face_exh": 19, "face_in_cloud": 19, "face_palm": 19, "face_palm_tone1": 19, "face_palm_tone2": 19, "face_palm_tone3": 19, "face_palm_tone4": 19, "face_palm_tone5": 19, "face_vomit": 19, "face_with_cowboy_hat": 19, "face_with_hand_over_mouth": 19, "face_with_head_bandag": 19, "face_with_monocl": 19, "face_with_rolling_ey": 19, "face_with_spiral_ey": 19, "face_with_symbols_over_mouth": 19, "face_with_thermomet": 19, "facepalm": 19, "facepalm_tone1": 19, "facepalm_tone2": 19, "facepalm_tone3": 19, "facepalm_tone4": 19, "facepalm_tone5": 19, "factori": [19, 95, 251, 264, 299, 318, 374, 413, 547, 555, 568, 582, 596, 1025, 1259], "factory_work": 19, "factory_worker_dark_skin_ton": 19, "factory_worker_light_skin_ton": 19, "factory_worker_medium_dark_skin_ton": 19, "factory_worker_medium_light_skin_ton": 19, "factory_worker_medium_skin_ton": 19, "factory_worker_tone1": 19, "factory_worker_tone2": 19, "factory_worker_tone3": 19, "factory_worker_tone4": 19, "factory_worker_tone5": 19, "fairi": 19, "fairy_dark_skin_ton": 19, "fairy_light_skin_ton": 19, "fairy_medium_dark_skin_ton": 19, "fairy_medium_light_skin_ton": 19, "fairy_medium_skin_ton": 19, "fairy_tone1": 19, "fairy_tone2": 19, "fairy_tone3": 19, "fairy_tone4": 19, "fairy_tone5": 19, "falafel": 19, "falkland_island": 19, "fallen_leaf": 19, "famili": [19, 215, 931, 937, 1262, 1272], "family_man_boi": 19, "family_man_boy_boi": 19, "family_man_girl": 19, "family_man_girl_boi": 19, "family_man_girl_girl": 19, "family_man_man_boi": 19, "family_man_man_boy_boi": 19, "family_man_man_girl": 19, "family_man_man_girl_boi": 19, "family_man_man_girl_girl": 19, "family_man_woman_boi": 19, "family_man_woman_boy_boi": 19, "family_man_woman_girl": 19, "family_man_woman_girl_boi": 19, "family_man_woman_girl_girl": 19, "family_mmb": 19, "family_mmbb": 19, "family_mmg": 19, "family_mmgb": 19, "family_mmgg": 19, "family_mwbb": 19, "family_mwg": 19, "family_mwgb": 19, "family_mwgg": 19, "family_woman_boi": 19, "family_woman_boy_boi": 19, "family_woman_girl": 19, "family_woman_girl_boi": 19, "family_woman_girl_girl": 19, "family_woman_woman_boi": 19, "family_woman_woman_boy_boi": 19, "family_woman_woman_girl": 19, "family_woman_woman_girl_boi": 19, "family_woman_woman_girl_girl": 19, "family_wwb": 19, "family_wwbb": 19, "family_wwg": 19, "family_wwgb": 19, "family_wwgg": 19, "farmer": 19, "farmer_dark_skin_ton": 19, "farmer_light_skin_ton": 19, "farmer_medium_dark_skin_ton": 19, "farmer_medium_light_skin_ton": 19, "farmer_medium_skin_ton": 19, "farmer_tone1": 19, "farmer_tone2": 19, "farmer_tone3": 19, "farmer_tone4": 19, "farmer_tone5": 19, "faroe_island": 19, "fast_forward": 19, "fax": 19, "fear": [19, 309, 1033], "feather": 19, "feet": [19, 174], "female_detect": 19, "female_sign": 19, "fencer": 19, "fenc": 19, "ferris_wheel": 19, "ferri": 19, "fi": [19, 1029, 1037, 1061], "field_hockei": 19, "fiji": 19, "file_cabinet": 19, "file_fold": 19, "film_fram": 19, "film_projector": 19, "film_strip": 19, "fingers_cross": 19, "fingers_crossed_tone1": 19, "fingers_crossed_tone2": 19, "fingers_crossed_tone3": 19, "fingers_crossed_tone4": 19, "fingers_crossed_tone5": 19, "finland": 19, "fire": [19, 30, 49, 490], "fire_engin": 19, "fire_extinguish": 19, "firecrack": 19, "firefight": 19, "firefighter_dark_skin_ton": 19, "firefighter_light_skin_ton": 19, "firefighter_medium_dark_skin_ton": 19, "firefighter_medium_light_skin_ton": 19, "firefighter_medium_skin_ton": 19, "firefighter_tone1": 19, "firefighter_tone2": 19, "firefighter_tone3": 19, "firefighter_tone4": 19, "firefighter_tone5": 19, "firework": 19, "first_plac": 19, "first_place_med": 19, "first_quarter_moon": 19, "first_quarter_moon_with_fac": 19, "fish": [19, 21, 1243], "fish_cak": 19, "fishing_pole_and_fish": 19, "fist": 19, "fist_left": 19, "fist_oncom": 19, "fist_rais": 19, "fist_right": 19, "fist_tone1": 19, "fist_tone2": 19, "fist_tone3": 19, "fist_tone4": 19, "fist_tone5": 19, "five": [19, 23, 49, 103, 108, 109, 192, 211, 224, 234, 242, 263, 273, 279, 289, 304, 325, 343, 347, 355, 359, 365, 369, 374, 404, 422, 848, 1166, 1279], "fj": 19, "fk": 19, "flag_ac": 19, "flag_ad": 19, "flag_a": 19, "flag_af": 19, "flag_ag": 19, "flag_ai": 19, "flag_al": 19, "flag_am": 19, "flag_ao": 19, "flag_aq": 19, "flag_ar": 19, "flag_at": 19, "flag_au": 19, "flag_aw": 19, "flag_ax": 19, "flag_az": 19, "flag_ba": 19, "flag_bb": 19, "flag_bd": 19, "flag_b": 19, "flag_bf": 19, "flag_bg": 19, "flag_bh": 19, "flag_bi": 19, "flag_bj": 19, "flag_bl": 19, "flag_black": 19, "flag_bm": 19, "flag_bn": 19, "flag_bo": 19, "flag_bq": 19, "flag_br": 19, "flag_bt": 19, "flag_bv": 19, "flag_bw": 19, "flag_bz": 19, "flag_ca": 19, "flag_cc": 19, "flag_cd": 19, "flag_cf": 19, "flag_cg": 19, "flag_ch": 19, "flag_ci": 19, "flag_ck": 19, "flag_cl": 19, "flag_cm": 19, "flag_cn": 19, "flag_co": 19, "flag_cp": 19, "flag_cr": 19, "flag_cu": 19, "flag_cv": 19, "flag_cw": 19, "flag_cx": 19, "flag_cz": 19, "flag_d": 19, "flag_dg": 19, "flag_dj": 19, "flag_dk": 19, "flag_dm": 19, "flag_do": 19, "flag_dz": 19, "flag_ea": 19, "flag_ec": 19, "flag_e": 19, "flag_eg": 19, "flag_eh": 19, "flag_er": 19, "flag_": 19, "flag_et": 19, "flag_eu": 19, "flag_fi": 19, "flag_fj": 19, "flag_fk": 19, "flag_fm": 19, "flag_fo": 19, "flag_fr": 19, "flag_ga": 19, "flag_gb": 19, "flag_gd": 19, "flag_g": 19, "flag_gf": 19, "flag_gg": 19, "flag_gh": 19, "flag_gi": 19, "flag_gl": 19, "flag_gm": 19, "flag_gn": 19, "flag_gp": 19, "flag_gq": 19, "flag_gr": 19, "flag_gt": 19, "flag_gu": 19, "flag_gw": 19, "flag_hk": 19, "flag_hm": 19, "flag_hn": 19, "flag_hr": 19, "flag_ht": 19, "flag_hu": 19, "flag_ic": 19, "flag_id": 19, "flag_i": 19, "flag_il": 19, "flag_im": 19, "flag_in": 19, "flag_io": 19, "flag_iq": 19, "flag_ir": 19, "flag_it": 19, "flag_j": 19, "flag_jm": 19, "flag_jo": 19, "flag_jp": 19, "flag_k": 19, "flag_kg": 19, "flag_kh": 19, "flag_ki": 19, "flag_km": 19, "flag_kn": 19, "flag_kp": 19, "flag_kr": 19, "flag_kw": 19, "flag_kz": 19, "flag_la": 19, "flag_lb": 19, "flag_lc": 19, "flag_li": 19, "flag_lk": 19, "flag_lr": 19, "flag_l": 19, "flag_lt": 19, "flag_lu": 19, "flag_lv": 19, "flag_ma": 19, "flag_mc": 19, "flag_md": 19, "flag_m": 19, "flag_mf": 19, "flag_mg": 19, "flag_mh": 19, "flag_mk": 19, "flag_ml": 19, "flag_mm": 19, "flag_mn": 19, "flag_mo": 19, "flag_mp": 19, "flag_mq": 19, "flag_mr": 19, "flag_mt": 19, "flag_mu": 19, "flag_mv": 19, "flag_mw": 19, "flag_mx": 19, "flag_mi": 19, "flag_mz": 19, "flag_na": 19, "flag_nc": 19, "flag_n": 19, "flag_nf": 19, "flag_ng": 19, "flag_ni": 19, "flag_nl": 19, "flag_no": 19, "flag_np": 19, "flag_nr": 19, "flag_nu": 19, "flag_nz": 19, "flag_om": 19, "flag_pa": 19, "flag_p": 19, "flag_pf": 19, "flag_pg": 19, "flag_ph": 19, "flag_pk": 19, "flag_pl": 19, "flag_pm": 19, "flag_pn": 19, "flag_pr": 19, "flag_pt": 19, "flag_pw": 19, "flag_pi": 19, "flag_qa": 19, "flag_r": 19, "flag_ro": 19, "flag_ru": 19, "flag_rw": 19, "flag_sa": 19, "flag_sb": 19, "flag_sc": 19, "flag_sd": 19, "flag_s": 19, "flag_sg": 19, "flag_sh": 19, "flag_si": 19, "flag_sj": 19, "flag_sk": 19, "flag_sl": 19, "flag_sm": 19, "flag_sn": 19, "flag_so": 19, "flag_sr": 19, "flag_ss": 19, "flag_st": 19, "flag_sv": 19, "flag_sx": 19, "flag_sz": 19, "flag_ta": 19, "flag_tc": 19, "flag_td": 19, "flag_tf": 19, "flag_tg": 19, "flag_th": 19, "flag_tj": 19, "flag_tk": 19, "flag_tl": 19, "flag_tm": 19, "flag_tn": 19, "flag_to": 19, "flag_tr": 19, "flag_tt": 19, "flag_tv": 19, "flag_tw": 19, "flag_tz": 19, "flag_ua": 19, "flag_ug": 19, "flag_um": 19, "flag_u": 19, "flag_ui": 19, "flag_uz": 19, "flag_va": 19, "flag_vc": 19, "flag_v": 19, "flag_vg": 19, "flag_vi": 19, "flag_vn": 19, "flag_vu": 19, "flag_wf": 19, "flag_whit": 19, "flag_w": 19, "flag_xk": 19, "flag_y": 19, "flag_yt": 19, "flag_za": 19, "flag_zm": 19, "flag_zw": 19, "flag": [19, 35, 192, 194, 208, 219, 230, 260, 266, 269, 273, 276, 279, 304, 307, 318, 320, 334, 350, 376, 379, 397, 516, 522, 523, 528, 529, 537, 541, 723, 824, 825, 929, 931, 943, 952, 966, 989, 992, 994, 1028, 1029, 1030, 1032, 1041, 1042, 1043, 1047, 1055, 1066, 1077, 1081, 1143], "flame": [19, 195], "flamingo": 19, "flan": 19, "flashlight": 19, "flatbread": 19, "fleur": 19, "li": [19, 283, 683], "fleur_de_li": 19, "flight_arriv": 19, "flight_departur": 19, "floppy_disk": 19, "flower_playing_card": 19, "fly": [19, 856, 928, 1066], "flying_disc": 19, "flying_sauc": 19, "fm": 19, "fo": 19, "fog": 19, "foggi": 19, "fondu": 19, "foot": [19, 59, 464, 893], "foot_dark_skin_ton": 19, "foot_light_skin_ton": 19, "foot_medium_dark_skin_ton": 19, "foot_medium_light_skin_ton": 19, "foot_medium_skin_ton": 19, "foot_tone1": 19, "foot_tone2": 19, "foot_tone3": 19, "foot_tone4": 19, "foot_tone5": 19, "footbal": 19, "footprint": [19, 223, 1132], "fork_and_knif": 19, "fork_and_knife_with_pl": 19, "fork_knife_pl": 19, "fortune_cooki": 19, "fountain": 19, "fountain_pen": 19, "four": [19, 22, 191, 196, 211, 223, 224, 227, 234, 241, 242, 250, 266, 271, 273, 283, 286, 289, 300, 304, 307, 321, 324, 325, 331, 346, 347, 353, 359, 365, 369, 404, 422, 528, 897, 984, 1146, 1154, 1208, 1216, 1241, 1259, 1279], "four_leaf_clov": 19, "fox": [19, 488], "fox_fac": 19, "fr": [19, 203], "frame_photo": 19, "frame_with_pictur": 19, "framed_pictur": 19, "franc": 19, "french_bread": 19, "french_guiana": 19, "french_polynesia": 19, "french_southern_territori": 19, "fried_egg": 19, "fried_shrimp": 19, "fri": 19, "frog": 19, "frowning2": 19, "frown": [19, 22, 59, 1258], "frowning_fac": 19, "frowning_man": 19, "frowning_woman": 19, "fuelpump": 19, "full_moon": 19, "full_moon_with_fac": 19, "funeral_urn": 19, "ga": [19, 359], "gabon": 19, "gambia": 19, "game_di": 19, "garlic": 19, "gay_pride_flag": 19, "gb": [19, 1027], "gd": 19, "ge": [19, 22], "gear": 19, "gem": 19, "gemini": 19, "geni": 19, "georgia": 19, "germani": [19, 192, 193, 422], "gf": 19, "gg": [19, 22, 25], "gh": [19, 159, 1230], "ghana": 19, "ghost": 19, "gi": [19, 274], "gibraltar": 19, "gift": [19, 227, 258], "gift_heart": 19, "giraff": 19, "girl": 19, "girl_tone1": 19, "girl_tone2": 19, "girl_tone3": 19, "girl_tone4": 19, "girl_tone5": 19, "gl": [19, 22, 56], "glass_of_milk": 19, "globe_with_meridian": 19, "glove": 19, "gm": 19, "gn": 19, "goal": [19, 29, 58, 139, 192, 310, 313, 389, 512, 516, 750, 784, 857, 858, 1100, 1277], "goal_net": 19, "goat": 19, "goggl": 19, "golf": 19, "golfer": 19, "golfing_man": 19, "golfing_woman": 19, "gorilla": 19, "gp": 19, "gq": 19, "gr": [19, 331, 347, 1221], "grandma": 19, "grandma_tone1": 19, "grandma_tone2": 19, "grandma_tone3": 19, "grandma_tone4": 19, "grandma_tone5": 19, "grape": 19, "great_britain": 19, "greec": 19, "green_appl": 19, "green_book": 19, "green_circl": 19, "green_heart": 19, "green_salad": 19, "green_squar": 19, "greenland": 19, "grenada": 19, "grey_exclam": 19, "grey_quest": 19, "grin": 19, "gt": [19, 22, 23, 210, 213, 224, 229, 234, 241, 247, 250, 255, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399], "gu": 19, "guadeloup": 19, "guam": 19, "guard": [19, 253, 269, 514, 820, 822, 825], "guard_tone1": 19, "guard_tone2": 19, "guard_tone3": 19, "guard_tone4": 19, "guard_tone5": 19, "guardsman": 19, "guardsman_tone1": 19, "guardsman_tone2": 19, "guardsman_tone3": 19, "guardsman_tone4": 19, "guardsman_tone5": 19, "guardswoman": 19, "guatemala": 19, "guernsei": 19, "guide_dog": 19, "guinea": 19, "guinea_bissau": 19, "guitar": 19, "gun": 19, "guyana": 19, "gw": 19, "gy": 19, "haircut": 19, "haircut_man": 19, "haircut_tone1": 19, "haircut_tone2": 19, "haircut_tone3": 19, "haircut_tone4": 19, "haircut_tone5": 19, "haircut_woman": 19, "haiti": 19, "hamburg": 19, "hammer": [19, 192, 267, 307, 964, 974], "hammer_and_pick": 19, "hammer_and_wrench": 19, "hammer_pick": 19, "hamster": 19, "hand": [19, 200, 211, 218, 227, 242, 253, 269, 288, 315, 373, 412, 438, 449, 468, 470, 553, 572, 640, 651, 666, 668, 669, 833, 840, 875, 891, 936, 937, 1021, 1058, 1094, 1112, 1127, 1134, 1258, 1276], "hand_splai": 19, "hand_splayed_tone1": 19, "hand_splayed_tone2": 19, "hand_splayed_tone3": 19, "hand_splayed_tone4": 19, "hand_splayed_tone5": 19, "hand_with_index_and_middle_finger_cross": 19, "hand_with_index_and_middle_fingers_crossed_tone1": 19, "hand_with_index_and_middle_fingers_crossed_tone2": 19, "hand_with_index_and_middle_fingers_crossed_tone3": 19, "hand_with_index_and_middle_fingers_crossed_tone4": 19, "hand_with_index_and_middle_fingers_crossed_tone5": 19, "handbag": 19, "handbal": 19, "handball_tone1": 19, "handball_tone2": 19, "handball_tone3": 19, "handball_tone4": 19, "handball_tone5": 19, "handshak": [19, 822], "handshake_tone1": 19, "handshake_tone2": 19, "handshake_tone3": 19, "handshake_tone4": 19, "handshake_tone5": 19, "hankei": 19, "hash": [19, 223, 229, 230, 241, 247, 260, 266, 267, 270, 274, 276, 279, 283, 304, 311, 325, 365, 387, 404, 524, 545, 984, 1156, 1236], "hatched_chick": 19, "hatching_chick": 19, "head_bandag": 19, "headphon": 19, "headston": 19, "health_work": 19, "health_worker_dark_skin_ton": 19, "health_worker_light_skin_ton": 19, "health_worker_medium_dark_skin_ton": 19, "health_worker_medium_light_skin_ton": 19, "health_worker_medium_skin_ton": 19, "health_worker_tone1": 19, "health_worker_tone2": 19, "health_worker_tone3": 19, "health_worker_tone4": 19, "health_worker_tone5": 19, "hear_no_evil": 19, "heart_decor": 19, "heart_exclam": 19, "heart_ey": 19, "heart_eyes_cat": 19, "heart_on_fir": 19, "heartbeat": 19, "heartpuls": 19, "heavy_check_mark": 19, "heavy_division_sign": 19, "heavy_dollar_sign": 19, "heavy_heart_exclam": 19, "heavy_heart_exclamation_mark_orna": 19, "heavy_minus_sign": 19, "heavy_multiplication_x": 19, "heavy_plus_sign": 19, "hedgehog": 19, "helicopt": 19, "helmet_with_cross": 19, "helmet_with_white_cross": 19, "herb": 19, "hibiscu": 19, "high_bright": 19, "high_heel": 19, "hiking_boot": 19, "hindu_templ": 19, "hippopotamu": 19, "hk": 19, "hn": 19, "hocho": 19, "hockei": 19, "hole": [19, 269, 1025, 1034, 1035, 1076], "hondura": 19, "honey_pot": 19, "hong_kong": 19, "hook": [19, 21, 25, 242, 260, 266, 276, 279, 309, 342, 504, 559, 817, 943], "hors": 19, "horse_rac": 19, "horse_racing_tone1": 19, "horse_racing_tone2": 19, "horse_racing_tone3": 19, "horse_racing_tone4": 19, "horse_racing_tone5": 19, "hospit": 19, "hot_dog": 19, "hot_fac": 19, "hot_pepp": 19, "hotdog": 19, "hotel": [19, 197, 422], "hotspr": 19, "hourglass": 19, "hourglass_flowing_sand": 19, "hous": [19, 192], "house_abandon": 19, "house_build": 19, "house_with_garden": 19, "hr": 19, "ht": 19, "hu": [19, 395, 396, 413], "hug": 19, "hugging_fac": 19, "hungari": 19, "hush": 19, "hut": 19, "ic": [19, 449, 550, 579, 1257], "ice_cream": 19, "ice_cub": 19, "ice_hockei": 19, "ice_sk": 19, "icecream": 19, "iceland": 19, "id": [19, 29, 33, 96, 99, 100, 101, 102, 103, 104, 105, 112, 146, 155, 157, 194, 197, 210, 213, 223, 224, 234, 241, 247, 260, 263, 266, 273, 276, 277, 279, 286, 289, 293, 301, 304, 311, 317, 321, 325, 331, 336, 343, 348, 353, 359, 365, 369, 399, 544, 574, 575, 576, 588, 589, 590, 607, 848, 857, 858, 863, 864, 866, 875, 876, 877, 887, 894, 916, 918, 919, 929, 934, 937, 948, 980, 982, 1004, 1012, 1031, 1050, 1094, 1121, 1132, 1148, 1187, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1214, 1216, 1234], "ideograph_advantag": 19, "ie": 19, "il": [19, 202], "imp": 19, "inbox_trai": 19, "incoming_envelop": 19, "india": [19, 251, 300, 324, 346, 1208], "indonesia": 19, "infin": [19, 118, 230, 279, 352, 366, 1113, 1114], "information_desk_person": 19, "information_desk_person_tone1": 19, "information_desk_person_tone2": 19, "information_desk_person_tone3": 19, "information_desk_person_tone4": 19, "information_desk_person_tone5": 19, "\u2139": 19, "information_sourc": 19, "interrobang": 19, "iphon": 19, "iq": 19, "ir": [19, 891], "iran": 19, "iraq": 19, "ireland": 19, "island": 19, "isle_of_man": 19, "israel": [19, 251, 300, 1208], "itali": 19, "izakaya_lantern": 19, "jack_o_lantern": 19, "jamaica": 19, "japan": 19, "japanese_castl": 19, "japanese_goblin": 19, "japanese_ogr": 19, "jean": 19, "jersei": 19, "jigsaw": 19, "jm": 19, "jo": [19, 234, 247, 260, 263, 273, 276, 279, 283, 286, 325, 331, 359], "jordan": 19, "joi": 19, "joy_cat": 19, "joystick": 19, "jp": 19, "judg": 19, "judge_dark_skin_ton": 19, "judge_light_skin_ton": 19, "judge_medium_dark_skin_ton": 19, "judge_medium_light_skin_ton": 19, "judge_medium_skin_ton": 19, "judge_tone1": 19, "judge_tone2": 19, "judge_tone3": 19, "judge_tone4": 19, "judge_tone5": 19, "juggler": 19, "juggler_tone1": 19, "juggler_tone2": 19, "juggler_tone3": 19, "juggler_tone4": 19, "juggler_tone5": 19, "juggl": 19, "juggling_tone1": 19, "juggling_tone2": 19, "juggling_tone3": 19, "juggling_tone4": 19, "juggling_tone5": 19, "kaaba": 19, "kangaroo": 19, "karate_uniform": 19, "kayak": 19, "kazakhstan": 19, "ke": 19, "kenya": 19, "key2": 19, "keyboard": [19, 372, 404, 873, 924], "keycap_ten": 19, "kg": 19, "kh": 19, "ki": 19, "kick_scoot": 19, "kimono": 19, "kiribati": 19, "kiss_dark_skin_ton": 19, "kiss_light_skin_ton": 19, "kiss_man_man_dark_skin_ton": 19, "kiss_man_man_dark_skin_tone_light_skin_ton": 19, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 19, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 19, "kiss_man_man_dark_skin_tone_medium_skin_ton": 19, "kiss_man_man_light_skin_ton": 19, "kiss_man_man_light_skin_tone_dark_skin_ton": 19, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 19, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 19, "kiss_man_man_light_skin_tone_medium_skin_ton": 19, "kiss_man_man_medium_dark_skin_ton": 19, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 19, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 19, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 19, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 19, "kiss_man_man_medium_light_skin_ton": 19, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 19, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 19, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 19, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 19, "kiss_man_man_medium_skin_ton": 19, "kiss_man_man_medium_skin_tone_dark_skin_ton": 19, "kiss_man_man_medium_skin_tone_light_skin_ton": 19, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 19, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 19, "kiss_man_man_tone1": 19, "kiss_man_man_tone1_tone2": 19, "kiss_man_man_tone1_tone3": 19, "kiss_man_man_tone1_tone4": 19, "kiss_man_man_tone1_tone5": 19, "kiss_man_man_tone2": 19, "kiss_man_man_tone2_tone1": 19, "kiss_man_man_tone2_tone3": 19, "kiss_man_man_tone2_tone4": 19, "kiss_man_man_tone2_tone5": 19, "kiss_man_man_tone3": 19, "kiss_man_man_tone3_tone1": 19, "kiss_man_man_tone3_tone2": 19, "kiss_man_man_tone3_tone4": 19, "kiss_man_man_tone3_tone5": 19, "kiss_man_man_tone4": 19, "kiss_man_man_tone4_tone1": 19, "kiss_man_man_tone4_tone2": 19, "kiss_man_man_tone4_tone3": 19, "kiss_man_man_tone4_tone5": 19, "kiss_man_man_tone5": 19, "kiss_man_man_tone5_tone1": 19, "kiss_man_man_tone5_tone2": 19, "kiss_man_man_tone5_tone3": 19, "kiss_man_man_tone5_tone4": 19, "kiss_medium_dark_skin_ton": 19, "kiss_medium_light_skin_ton": 19, "kiss_medium_skin_ton": 19, "kiss_mm": 19, "kiss_person_person_dark_skin_tone_light_skin_ton": 19, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 19, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 19, "kiss_person_person_dark_skin_tone_medium_skin_ton": 19, "kiss_person_person_light_skin_tone_dark_skin_ton": 19, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 19, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 19, "kiss_person_person_light_skin_tone_medium_skin_ton": 19, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 19, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 19, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 19, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 19, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 19, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 19, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 19, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 19, "kiss_person_person_medium_skin_tone_dark_skin_ton": 19, "kiss_person_person_medium_skin_tone_light_skin_ton": 19, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 19, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 19, "kiss_person_person_tone1_tone2": 19, "kiss_person_person_tone1_tone3": 19, "kiss_person_person_tone1_tone4": 19, "kiss_person_person_tone1_tone5": 19, "kiss_person_person_tone2_tone1": 19, "kiss_person_person_tone2_tone3": 19, "kiss_person_person_tone2_tone4": 19, "kiss_person_person_tone2_tone5": 19, "kiss_person_person_tone3_tone1": 19, "kiss_person_person_tone3_tone2": 19, "kiss_person_person_tone3_tone4": 19, "kiss_person_person_tone3_tone5": 19, "kiss_person_person_tone4_tone1": 19, "kiss_person_person_tone4_tone2": 19, "kiss_person_person_tone4_tone3": 19, "kiss_person_person_tone4_tone5": 19, "kiss_person_person_tone5_tone1": 19, "kiss_person_person_tone5_tone2": 19, "kiss_person_person_tone5_tone3": 19, "kiss_person_person_tone5_tone4": 19, "kiss_tone1": 19, "kiss_tone2": 19, "kiss_tone3": 19, "kiss_tone4": 19, "kiss_tone5": 19, "kiss_woman_man": 19, "kiss_woman_man_dark_skin_ton": 19, "kiss_woman_man_dark_skin_tone_light_skin_ton": 19, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 19, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 19, "kiss_woman_man_light_skin_ton": 19, "kiss_woman_man_light_skin_tone_dark_skin_ton": 19, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 19, "kiss_woman_man_light_skin_tone_medium_skin_ton": 19, "kiss_woman_man_medium_dark_skin_ton": 19, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 19, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 19, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 19, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 19, "kiss_woman_man_medium_light_skin_ton": 19, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 19, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 19, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 19, "kiss_woman_man_medium_skin_ton": 19, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 19, "kiss_woman_man_medium_skin_tone_light_skin_ton": 19, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 19, "kiss_woman_man_tone1": 19, "kiss_woman_man_tone1_tone2": 19, "kiss_woman_man_tone1_tone3": 19, "kiss_woman_man_tone1_tone4": 19, "kiss_woman_man_tone1_tone5": 19, "kiss_woman_man_tone2": 19, "kiss_woman_man_tone2_tone1": 19, "kiss_woman_man_tone2_tone3": 19, "kiss_woman_man_tone2_tone4": 19, "kiss_woman_man_tone2_tone5": 19, "kiss_woman_man_tone3": 19, "kiss_woman_man_tone3_tone1": 19, "kiss_woman_man_tone3_tone2": 19, "kiss_woman_man_tone3_tone4": 19, "kiss_woman_man_tone3_tone5": 19, "kiss_woman_man_tone4": 19, "kiss_woman_man_tone4_tone1": 19, "kiss_woman_man_tone4_tone2": 19, "kiss_woman_man_tone4_tone3": 19, "kiss_woman_man_tone4_tone5": 19, "kiss_woman_man_tone5": 19, "kiss_woman_man_tone5_tone1": 19, "kiss_woman_man_tone5_tone2": 19, "kiss_woman_man_tone5_tone3": 19, "kiss_woman_man_tone5_tone4": 19, "kiss_woman_woman_dark_skin_ton": 19, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 19, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 19, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 19, "kiss_woman_woman_light_skin_ton": 19, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 19, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 19, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 19, "kiss_woman_woman_medium_dark_skin_ton": 19, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 19, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 19, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 19, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 19, "kiss_woman_woman_medium_light_skin_ton": 19, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 19, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 19, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 19, "kiss_woman_woman_medium_skin_ton": 19, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 19, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 19, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 19, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 19, "kiss_woman_woman_tone1": 19, "kiss_woman_woman_tone1_tone2": 19, "kiss_woman_woman_tone1_tone3": 19, "kiss_woman_woman_tone1_tone4": 19, "kiss_woman_woman_tone1_tone5": 19, "kiss_woman_woman_tone2": 19, "kiss_woman_woman_tone2_tone1": 19, "kiss_woman_woman_tone2_tone3": 19, "kiss_woman_woman_tone2_tone4": 19, "kiss_woman_woman_tone2_tone5": 19, "kiss_woman_woman_tone3": 19, "kiss_woman_woman_tone3_tone1": 19, "kiss_woman_woman_tone3_tone2": 19, "kiss_woman_woman_tone3_tone4": 19, "kiss_woman_woman_tone3_tone5": 19, "kiss_woman_woman_tone4": 19, "kiss_woman_woman_tone4_tone1": 19, "kiss_woman_woman_tone4_tone2": 19, "kiss_woman_woman_tone4_tone3": 19, "kiss_woman_woman_tone4_tone5": 19, "kiss_woman_woman_tone5": 19, "kiss_woman_woman_tone5_tone1": 19, "kiss_woman_woman_tone5_tone2": 19, "kiss_woman_woman_tone5_tone3": 19, "kiss_woman_woman_tone5_tone4": 19, "kiss_ww": 19, "kissing_cat": 19, "kissing_closed_ey": 19, "kissing_smiling_ey": 19, "kite": 19, "kiwi": 19, "kiwi_fruit": 19, "kiwifruit": 19, "km": [19, 212, 214, 369], "kn": 19, "knife": [19, 943, 1025, 1258], "knot": 19, "koala": 19, "koko": 19, "korea": 19, "kosovo": 19, "kp": 19, "kr": 19, "kuwait": 19, "kw": [19, 260, 266, 276, 279], "ky": 19, "kyrgyzstan": 19, "kz": 19, "la": 19, "lab_coat": 19, "label": [19, 26, 27, 45, 212, 214, 261, 274, 288, 291, 324, 330, 369, 460, 465, 492, 849, 964, 1208, 1215, 1227, 1230], "lacross": 19, "ladder": 19, "lady_beetl": 19, "lao": 19, "large_blue_circl": 19, "large_blue_diamond": 19, "large_orange_diamond": 19, "last_quarter_moon": 19, "last_quarter_moon_with_fac": 19, "latin_cross": 19, "latvia": 19, "laugh": [19, 374], "lb": 19, "lc": [19, 228], "leafy_green": 19, "leav": [19, 36, 108, 192, 193, 199, 202, 231, 260, 283, 320, 373, 415, 518, 652, 654, 660, 662, 663, 678, 680, 681, 794, 797, 934, 936, 947, 952, 961, 984, 1029, 1058, 1066, 1148, 1221], "lebanon": 19, "ledger": 19, "left_facing_fist": 19, "left_facing_fist_tone1": 19, "left_facing_fist_tone2": 19, "left_facing_fist_tone3": 19, "left_facing_fist_tone4": 19, "left_facing_fist_tone5": 19, "left_fist": 19, "left_fist_tone1": 19, "left_fist_tone2": 19, "left_fist_tone3": 19, "left_fist_tone4": 19, "left_fist_tone5": 19, "left_luggag": 19, "left_right_arrow": 19, "left_speech_bubbl": 19, "leftwards_arrow_with_hook": 19, "leg": [19, 22], "leg_dark_skin_ton": 19, "leg_light_skin_ton": 19, "leg_medium_dark_skin_ton": 19, "leg_medium_light_skin_ton": 19, "leg_medium_skin_ton": 19, "leg_tone1": 19, "leg_tone2": 19, "leg_tone3": 19, "leg_tone4": 19, "leg_tone5": 19, "lemon": 19, "leo": [19, 395, 396, 413], "leopard": 19, "lesotho": 19, "level_slid": 19, "levit": 19, "levitate_tone1": 19, "levitate_tone2": 19, "levitate_tone3": 19, "levitate_tone4": 19, "levitate_tone5": 19, "liar": 19, "liberia": 19, "libra": 19, "libya": 19, "liechtenstein": 19, "lifter": 19, "lifter_tone1": 19, "lifter_tone2": 19, "lifter_tone3": 19, "lifter_tone4": 19, "lifter_tone5": 19, "light_rail": 19, "linked_paperclip": 19, "lion": 19, "lion_fac": 19, "lip": 19, "lipstick": 19, "lithuania": 19, "lizard": 19, "lk": 19, "llama": 19, "lobster": 19, "lock": [19, 192, 194, 223, 227, 260, 266, 269, 276, 279, 295, 296, 298, 307, 328, 341, 342, 355, 359, 374, 383, 385, 386, 413, 486, 538, 626, 765, 794, 817, 819, 822, 823, 824, 847, 868, 974, 982, 987, 992, 1012, 1043, 1047, 1053, 1058, 1060, 1066, 1069, 1076, 1118, 1208, 1258, 1270], "lock_with_ink_pen": 19, "lollipop": 19, "long_drum": 19, "loop": [19, 21, 25, 29, 48, 50, 52, 78, 86, 99, 100, 113, 118, 122, 131, 146, 174, 185, 192, 215, 227, 230, 232, 235, 236, 237, 240, 248, 250, 251, 252, 254, 258, 261, 264, 269, 270, 272, 274, 275, 280, 282, 284, 285, 287, 288, 290, 300, 303, 310, 313, 320, 323, 324, 329, 330, 338, 342, 346, 351, 352, 354, 356, 357, 358, 363, 364, 367, 368, 370, 373, 375, 381, 382, 383, 396, 409, 426, 429, 432, 441, 444, 463, 464, 465, 486, 490, 529, 530, 595, 637, 678, 683, 734, 750, 768, 770, 798, 800, 801, 825, 861, 863, 864, 868, 875, 931, 972, 982, 987, 1001, 1021, 1022, 1023, 1031, 1041, 1043, 1067, 1071, 1077, 1080, 1081, 1110, 1113, 1114, 1119, 1131, 1169, 1180, 1194, 1208, 1224, 1257, 1258, 1261, 1272, 1278], "loud_sound": 19, "loudspeak": 19, "love_hotel": 19, "love_lett": 19, "love_you_gestur": 19, "love_you_gesture_dark_skin_ton": 19, "love_you_gesture_light_skin_ton": 19, "love_you_gesture_medium_dark_skin_ton": 19, "love_you_gesture_medium_light_skin_ton": 19, "love_you_gesture_medium_skin_ton": 19, "love_you_gesture_tone1": 19, "love_you_gesture_tone2": 19, "love_you_gesture_tone3": 19, "love_you_gesture_tone4": 19, "love_you_gesture_tone5": 19, "low_bright": 19, "lower_left_ballpoint_pen": 19, "lower_left_crayon": 19, "lower_left_fountain_pen": 19, "lower_left_paintbrush": 19, "lr": 19, "l": [19, 25, 47, 49, 53, 88, 113, 135, 155, 156, 168, 195, 199, 203, 210, 211, 213, 214, 219, 224, 229, 234, 239, 241, 242, 243, 244, 247, 250, 255, 256, 260, 263, 266, 269, 271, 273, 276, 279, 283, 286, 289, 292, 297, 301, 304, 306, 307, 311, 321, 325, 327, 328, 331, 343, 347, 353, 356, 359, 365, 369, 371, 372, 396, 398, 399, 404, 409, 476, 477, 484, 488, 500, 505, 506, 512, 516, 544, 545, 558, 570, 643, 666, 696, 763, 764, 797, 800, 857, 858, 861, 868, 870, 873, 874, 876, 887, 888, 889, 890, 891, 892, 898, 902, 905, 910, 911, 916, 921, 925, 928, 930, 934, 936, 937, 948, 961, 984, 985, 1006, 1007, 1014, 1016, 1021, 1022, 1027, 1029, 1030, 1031, 1039, 1041, 1051, 1066, 1067, 1077, 1081, 1083, 1084, 1085, 1086, 1096, 1098, 1099, 1104, 1106, 1127, 1135, 1137, 1140, 1141, 1145, 1147, 1155, 1164, 1191, 1250, 1267], "lu": 19, "luggag": 19, "lung": 19, "luxembourg": 19, "lv": 19, "ly": 19, "lying_fac": 19, "ma": 19, "macau": 19, "macedonia": 19, "madagascar": 19, "mag": 19, "mag_right": 19, "mage": 19, "mage_dark_skin_ton": 19, "mage_light_skin_ton": 19, "mage_medium_dark_skin_ton": 19, "mage_medium_light_skin_ton": 19, "mage_medium_skin_ton": 19, "mage_tone1": 19, "mage_tone2": 19, "mage_tone3": 19, "mage_tone4": 19, "mage_tone5": 19, "magic_wand": 19, "magnet": 19, "mahjong": 19, "mailbox": 19, "mailbox_clos": 19, "mailbox_with_mail": 19, "mailbox_with_no_mail": 19, "malawi": 19, "malaysia": 19, "maldiv": 19, "male_danc": 19, "male_dancer_tone1": 19, "male_dancer_tone2": 19, "male_dancer_tone3": 19, "male_dancer_tone4": 19, "male_dancer_tone5": 19, "male_detect": 19, "male_sign": 19, "mali": 19, "malta": 19, "mammoth": 19, "man": [19, 24, 113, 139, 162, 171, 173, 174, 180, 192, 194, 200, 201, 208, 214, 218, 224, 226, 234, 235, 241, 244, 247, 252, 254, 256, 267, 273, 280, 283, 307, 328, 347, 404, 409, 411, 422, 532, 543, 631, 640, 652, 724, 797, 816, 839, 856, 857, 858, 861, 862, 866, 873, 874, 875, 876, 877, 881, 883, 885, 888, 892, 893, 894, 910, 913, 914, 917, 918, 920, 921, 922, 924, 937, 943, 961, 1012, 1015, 1016, 1017, 1019, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1035, 1041, 1042, 1043, 1047, 1050, 1051, 1053, 1055, 1057, 1058, 1061, 1063, 1070, 1077, 1080, 1081, 1083, 1100, 1101, 1255, 1257, 1275, 1276], "man_artist": 19, "man_artist_dark_skin_ton": 19, "man_artist_light_skin_ton": 19, "man_artist_medium_dark_skin_ton": 19, "man_artist_medium_light_skin_ton": 19, "man_artist_medium_skin_ton": 19, "man_artist_tone1": 19, "man_artist_tone2": 19, "man_artist_tone3": 19, "man_artist_tone4": 19, "man_artist_tone5": 19, "man_astronaut": 19, "man_astronaut_dark_skin_ton": 19, "man_astronaut_light_skin_ton": 19, "man_astronaut_medium_dark_skin_ton": 19, "man_astronaut_medium_light_skin_ton": 19, "man_astronaut_medium_skin_ton": 19, "man_astronaut_tone1": 19, "man_astronaut_tone2": 19, "man_astronaut_tone3": 19, "man_astronaut_tone4": 19, "man_astronaut_tone5": 19, "man_bald": 19, "man_bald_dark_skin_ton": 19, "man_bald_light_skin_ton": 19, "man_bald_medium_dark_skin_ton": 19, "man_bald_medium_light_skin_ton": 19, "man_bald_medium_skin_ton": 19, "man_bald_tone1": 19, "man_bald_tone2": 19, "man_bald_tone3": 19, "man_bald_tone4": 19, "man_bald_tone5": 19, "man_beard": 19, "man_bik": 19, "man_biking_dark_skin_ton": 19, "man_biking_light_skin_ton": 19, "man_biking_medium_dark_skin_ton": 19, "man_biking_medium_light_skin_ton": 19, "man_biking_medium_skin_ton": 19, "man_biking_tone1": 19, "man_biking_tone2": 19, "man_biking_tone3": 19, "man_biking_tone4": 19, "man_biking_tone5": 19, "man_bouncing_bal": 19, "man_bouncing_ball_dark_skin_ton": 19, "man_bouncing_ball_light_skin_ton": 19, "man_bouncing_ball_medium_dark_skin_ton": 19, "man_bouncing_ball_medium_light_skin_ton": 19, "man_bouncing_ball_medium_skin_ton": 19, "man_bouncing_ball_tone1": 19, "man_bouncing_ball_tone2": 19, "man_bouncing_ball_tone3": 19, "man_bouncing_ball_tone4": 19, "man_bouncing_ball_tone5": 19, "man_bow": 19, "man_bowing_dark_skin_ton": 19, "man_bowing_light_skin_ton": 19, "man_bowing_medium_dark_skin_ton": 19, "man_bowing_medium_light_skin_ton": 19, "man_bowing_medium_skin_ton": 19, "man_bowing_tone1": 19, "man_bowing_tone2": 19, "man_bowing_tone3": 19, "man_bowing_tone4": 19, "man_bowing_tone5": 19, "man_cartwheel": 19, "man_cartwheeling_dark_skin_ton": 19, "man_cartwheeling_light_skin_ton": 19, "man_cartwheeling_medium_dark_skin_ton": 19, "man_cartwheeling_medium_light_skin_ton": 19, "man_cartwheeling_medium_skin_ton": 19, "man_cartwheeling_tone1": 19, "man_cartwheeling_tone2": 19, "man_cartwheeling_tone3": 19, "man_cartwheeling_tone4": 19, "man_cartwheeling_tone5": 19, "man_climb": 19, "man_climbing_dark_skin_ton": 19, "man_climbing_light_skin_ton": 19, "man_climbing_medium_dark_skin_ton": 19, "man_climbing_medium_light_skin_ton": 19, "man_climbing_medium_skin_ton": 19, "man_climbing_tone1": 19, "man_climbing_tone2": 19, "man_climbing_tone3": 19, "man_climbing_tone4": 19, "man_climbing_tone5": 19, "man_construction_work": 19, "man_construction_worker_dark_skin_ton": 19, "man_construction_worker_light_skin_ton": 19, "man_construction_worker_medium_dark_skin_ton": 19, "man_construction_worker_medium_light_skin_ton": 19, "man_construction_worker_medium_skin_ton": 19, "man_construction_worker_tone1": 19, "man_construction_worker_tone2": 19, "man_construction_worker_tone3": 19, "man_construction_worker_tone4": 19, "man_construction_worker_tone5": 19, "man_cook": 19, "man_cook_dark_skin_ton": 19, "man_cook_light_skin_ton": 19, "man_cook_medium_dark_skin_ton": 19, "man_cook_medium_light_skin_ton": 19, "man_cook_medium_skin_ton": 19, "man_cook_tone1": 19, "man_cook_tone2": 19, "man_cook_tone3": 19, "man_cook_tone4": 19, "man_cook_tone5": 19, "man_curly_hair": 19, "man_curly_haired_dark_skin_ton": 19, "man_curly_haired_light_skin_ton": 19, "man_curly_haired_medium_dark_skin_ton": 19, "man_curly_haired_medium_light_skin_ton": 19, "man_curly_haired_medium_skin_ton": 19, "man_curly_haired_tone1": 19, "man_curly_haired_tone2": 19, "man_curly_haired_tone3": 19, "man_curly_haired_tone4": 19, "man_curly_haired_tone5": 19, "man_danc": 19, "man_dancing_tone1": 19, "man_dancing_tone2": 19, "man_dancing_tone3": 19, "man_dancing_tone4": 19, "man_dancing_tone5": 19, "man_dark_skin_tone_beard": 19, "man_detect": 19, "man_detective_dark_skin_ton": 19, "man_detective_light_skin_ton": 19, "man_detective_medium_dark_skin_ton": 19, "man_detective_medium_light_skin_ton": 19, "man_detective_medium_skin_ton": 19, "man_detective_tone1": 19, "man_detective_tone2": 19, "man_detective_tone3": 19, "man_detective_tone4": 19, "man_detective_tone5": 19, "man_elf": 19, "man_elf_dark_skin_ton": 19, "man_elf_light_skin_ton": 19, "man_elf_medium_dark_skin_ton": 19, "man_elf_medium_light_skin_ton": 19, "man_elf_medium_skin_ton": 19, "man_elf_tone1": 19, "man_elf_tone2": 19, "man_elf_tone3": 19, "man_elf_tone4": 19, "man_elf_tone5": 19, "man_facepalm": 19, "man_facepalming_dark_skin_ton": 19, "man_facepalming_light_skin_ton": 19, "man_facepalming_medium_dark_skin_ton": 19, "man_facepalming_medium_light_skin_ton": 19, "man_facepalming_medium_skin_ton": 19, "man_facepalming_tone1": 19, "man_facepalming_tone2": 19, "man_facepalming_tone3": 19, "man_facepalming_tone4": 19, "man_facepalming_tone5": 19, "man_factory_work": 19, "man_factory_worker_dark_skin_ton": 19, "man_factory_worker_light_skin_ton": 19, "man_factory_worker_medium_dark_skin_ton": 19, "man_factory_worker_medium_light_skin_ton": 19, "man_factory_worker_medium_skin_ton": 19, "man_factory_worker_tone1": 19, "man_factory_worker_tone2": 19, "man_factory_worker_tone3": 19, "man_factory_worker_tone4": 19, "man_factory_worker_tone5": 19, "man_fairi": 19, "man_fairy_dark_skin_ton": 19, "man_fairy_light_skin_ton": 19, "man_fairy_medium_dark_skin_ton": 19, "man_fairy_medium_light_skin_ton": 19, "man_fairy_medium_skin_ton": 19, "man_fairy_tone1": 19, "man_fairy_tone2": 19, "man_fairy_tone3": 19, "man_fairy_tone4": 19, "man_fairy_tone5": 19, "man_farm": 19, "man_farmer_dark_skin_ton": 19, "man_farmer_light_skin_ton": 19, "man_farmer_medium_dark_skin_ton": 19, "man_farmer_medium_light_skin_ton": 19, "man_farmer_medium_skin_ton": 19, "man_farmer_tone1": 19, "man_farmer_tone2": 19, "man_farmer_tone3": 19, "man_farmer_tone4": 19, "man_farmer_tone5": 19, "man_feeding_babi": 19, "man_feeding_baby_dark_skin_ton": 19, "man_feeding_baby_light_skin_ton": 19, "man_feeding_baby_medium_dark_skin_ton": 19, "man_feeding_baby_medium_light_skin_ton": 19, "man_feeding_baby_medium_skin_ton": 19, "man_feeding_baby_tone1": 19, "man_feeding_baby_tone2": 19, "man_feeding_baby_tone3": 19, "man_feeding_baby_tone4": 19, "man_feeding_baby_tone5": 19, "man_firefight": 19, "man_firefighter_dark_skin_ton": 19, "man_firefighter_light_skin_ton": 19, "man_firefighter_medium_dark_skin_ton": 19, "man_firefighter_medium_light_skin_ton": 19, "man_firefighter_medium_skin_ton": 19, "man_firefighter_tone1": 19, "man_firefighter_tone2": 19, "man_firefighter_tone3": 19, "man_firefighter_tone4": 19, "man_firefighter_tone5": 19, "man_frown": 19, "man_frowning_dark_skin_ton": 19, "man_frowning_light_skin_ton": 19, "man_frowning_medium_dark_skin_ton": 19, "man_frowning_medium_light_skin_ton": 19, "man_frowning_medium_skin_ton": 19, "man_frowning_tone1": 19, "man_frowning_tone2": 19, "man_frowning_tone3": 19, "man_frowning_tone4": 19, "man_frowning_tone5": 19, "man_geni": 19, "man_gesturing_no": 19, "man_gesturing_no_dark_skin_ton": 19, "man_gesturing_no_light_skin_ton": 19, "man_gesturing_no_medium_dark_skin_ton": 19, "man_gesturing_no_medium_light_skin_ton": 19, "man_gesturing_no_medium_skin_ton": 19, "man_gesturing_no_tone1": 19, "man_gesturing_no_tone2": 19, "man_gesturing_no_tone3": 19, "man_gesturing_no_tone4": 19, "man_gesturing_no_tone5": 19, "man_gesturing_ok": 19, "man_gesturing_ok_dark_skin_ton": 19, "man_gesturing_ok_light_skin_ton": 19, "man_gesturing_ok_medium_dark_skin_ton": 19, "man_gesturing_ok_medium_light_skin_ton": 19, "man_gesturing_ok_medium_skin_ton": 19, "man_gesturing_ok_tone1": 19, "man_gesturing_ok_tone2": 19, "man_gesturing_ok_tone3": 19, "man_gesturing_ok_tone4": 19, "man_gesturing_ok_tone5": 19, "man_getting_face_massag": 19, "man_getting_face_massage_dark_skin_ton": 19, "man_getting_face_massage_light_skin_ton": 19, "man_getting_face_massage_medium_dark_skin_ton": 19, "man_getting_face_massage_medium_light_skin_ton": 19, "man_getting_face_massage_medium_skin_ton": 19, "man_getting_face_massage_tone1": 19, "man_getting_face_massage_tone2": 19, "man_getting_face_massage_tone3": 19, "man_getting_face_massage_tone4": 19, "man_getting_face_massage_tone5": 19, "man_getting_haircut": 19, "man_getting_haircut_dark_skin_ton": 19, "man_getting_haircut_light_skin_ton": 19, "man_getting_haircut_medium_dark_skin_ton": 19, "man_getting_haircut_medium_light_skin_ton": 19, "man_getting_haircut_medium_skin_ton": 19, "man_getting_haircut_tone1": 19, "man_getting_haircut_tone2": 19, "man_getting_haircut_tone3": 19, "man_getting_haircut_tone4": 19, "man_getting_haircut_tone5": 19, "man_golf": 19, "man_golfing_dark_skin_ton": 19, "man_golfing_light_skin_ton": 19, "man_golfing_medium_dark_skin_ton": 19, "man_golfing_medium_light_skin_ton": 19, "man_golfing_medium_skin_ton": 19, "man_golfing_tone1": 19, "man_golfing_tone2": 19, "man_golfing_tone3": 19, "man_golfing_tone4": 19, "man_golfing_tone5": 19, "man_guard": 19, "man_guard_dark_skin_ton": 19, "man_guard_light_skin_ton": 19, "man_guard_medium_dark_skin_ton": 19, "man_guard_medium_light_skin_ton": 19, "man_guard_medium_skin_ton": 19, "man_guard_tone1": 19, "man_guard_tone2": 19, "man_guard_tone3": 19, "man_guard_tone4": 19, "man_guard_tone5": 19, "man_health_work": 19, "man_health_worker_dark_skin_ton": 19, "man_health_worker_light_skin_ton": 19, "man_health_worker_medium_dark_skin_ton": 19, "man_health_worker_medium_light_skin_ton": 19, "man_health_worker_medium_skin_ton": 19, "man_health_worker_tone1": 19, "man_health_worker_tone2": 19, "man_health_worker_tone3": 19, "man_health_worker_tone4": 19, "man_health_worker_tone5": 19, "man_in_business_suit_levit": 19, "man_in_business_suit_levitating_dark_skin_ton": 19, "man_in_business_suit_levitating_light_skin_ton": 19, "man_in_business_suit_levitating_medium_dark_skin_ton": 19, "man_in_business_suit_levitating_medium_light_skin_ton": 19, "man_in_business_suit_levitating_medium_skin_ton": 19, "man_in_business_suit_levitating_tone1": 19, "man_in_business_suit_levitating_tone2": 19, "man_in_business_suit_levitating_tone3": 19, "man_in_business_suit_levitating_tone4": 19, "man_in_business_suit_levitating_tone5": 19, "man_in_lotus_posit": 19, "man_in_lotus_position_dark_skin_ton": 19, "man_in_lotus_position_light_skin_ton": 19, "man_in_lotus_position_medium_dark_skin_ton": 19, "man_in_lotus_position_medium_light_skin_ton": 19, "man_in_lotus_position_medium_skin_ton": 19, "man_in_lotus_position_tone1": 19, "man_in_lotus_position_tone2": 19, "man_in_lotus_position_tone3": 19, "man_in_lotus_position_tone4": 19, "man_in_lotus_position_tone5": 19, "man_in_manual_wheelchair": 19, "man_in_manual_wheelchair_dark_skin_ton": 19, "man_in_manual_wheelchair_light_skin_ton": 19, "man_in_manual_wheelchair_medium_dark_skin_ton": 19, "man_in_manual_wheelchair_medium_light_skin_ton": 19, "man_in_manual_wheelchair_medium_skin_ton": 19, "man_in_manual_wheelchair_tone1": 19, "man_in_manual_wheelchair_tone2": 19, "man_in_manual_wheelchair_tone3": 19, "man_in_manual_wheelchair_tone4": 19, "man_in_manual_wheelchair_tone5": 19, "man_in_motorized_wheelchair": 19, "man_in_motorized_wheelchair_dark_skin_ton": 19, "man_in_motorized_wheelchair_light_skin_ton": 19, "man_in_motorized_wheelchair_medium_dark_skin_ton": 19, "man_in_motorized_wheelchair_medium_light_skin_ton": 19, "man_in_motorized_wheelchair_medium_skin_ton": 19, "man_in_motorized_wheelchair_tone1": 19, "man_in_motorized_wheelchair_tone2": 19, "man_in_motorized_wheelchair_tone3": 19, "man_in_motorized_wheelchair_tone4": 19, "man_in_motorized_wheelchair_tone5": 19, "man_in_steamy_room": 19, "man_in_steamy_room_dark_skin_ton": 19, "man_in_steamy_room_light_skin_ton": 19, "man_in_steamy_room_medium_dark_skin_ton": 19, "man_in_steamy_room_medium_light_skin_ton": 19, "man_in_steamy_room_medium_skin_ton": 19, "man_in_steamy_room_tone1": 19, "man_in_steamy_room_tone2": 19, "man_in_steamy_room_tone3": 19, "man_in_steamy_room_tone4": 19, "man_in_steamy_room_tone5": 19, "man_in_tuxedo": 19, "man_in_tuxedo_dark_skin_ton": 19, "man_in_tuxedo_light_skin_ton": 19, "man_in_tuxedo_medium_dark_skin_ton": 19, "man_in_tuxedo_medium_light_skin_ton": 19, "man_in_tuxedo_medium_skin_ton": 19, "man_in_tuxedo_tone1": 19, "man_in_tuxedo_tone2": 19, "man_in_tuxedo_tone3": 19, "man_in_tuxedo_tone4": 19, "man_in_tuxedo_tone5": 19, "man_judg": 19, "man_judge_dark_skin_ton": 19, "man_judge_light_skin_ton": 19, "man_judge_medium_dark_skin_ton": 19, "man_judge_medium_light_skin_ton": 19, "man_judge_medium_skin_ton": 19, "man_judge_tone1": 19, "man_judge_tone2": 19, "man_judge_tone3": 19, "man_judge_tone4": 19, "man_judge_tone5": 19, "man_juggl": 19, "man_juggling_dark_skin_ton": 19, "man_juggling_light_skin_ton": 19, "man_juggling_medium_dark_skin_ton": 19, "man_juggling_medium_light_skin_ton": 19, "man_juggling_medium_skin_ton": 19, "man_juggling_tone1": 19, "man_juggling_tone2": 19, "man_juggling_tone3": 19, "man_juggling_tone4": 19, "man_juggling_tone5": 19, "man_kneel": 19, "man_kneeling_dark_skin_ton": 19, "man_kneeling_light_skin_ton": 19, "man_kneeling_medium_dark_skin_ton": 19, "man_kneeling_medium_light_skin_ton": 19, "man_kneeling_medium_skin_ton": 19, "man_kneeling_tone1": 19, "man_kneeling_tone2": 19, "man_kneeling_tone3": 19, "man_kneeling_tone4": 19, "man_kneeling_tone5": 19, "man_lifting_weight": 19, "man_lifting_weights_dark_skin_ton": 19, "man_lifting_weights_light_skin_ton": 19, "man_lifting_weights_medium_dark_skin_ton": 19, "man_lifting_weights_medium_light_skin_ton": 19, "man_lifting_weights_medium_skin_ton": 19, "man_lifting_weights_tone1": 19, "man_lifting_weights_tone2": 19, "man_lifting_weights_tone3": 19, "man_lifting_weights_tone4": 19, "man_lifting_weights_tone5": 19, "man_light_skin_tone_beard": 19, "man_mag": 19, "man_mage_dark_skin_ton": 19, "man_mage_light_skin_ton": 19, "man_mage_medium_dark_skin_ton": 19, "man_mage_medium_light_skin_ton": 19, "man_mage_medium_skin_ton": 19, "man_mage_tone1": 19, "man_mage_tone2": 19, "man_mage_tone3": 19, "man_mage_tone4": 19, "man_mage_tone5": 19, "man_mechan": 19, "man_mechanic_dark_skin_ton": 19, "man_mechanic_light_skin_ton": 19, "man_mechanic_medium_dark_skin_ton": 19, "man_mechanic_medium_light_skin_ton": 19, "man_mechanic_medium_skin_ton": 19, "man_mechanic_tone1": 19, "man_mechanic_tone2": 19, "man_mechanic_tone3": 19, "man_mechanic_tone4": 19, "man_mechanic_tone5": 19, "man_medium_dark_skin_tone_beard": 19, "man_medium_light_skin_tone_beard": 19, "man_medium_skin_tone_beard": 19, "man_mountain_bik": 19, "man_mountain_biking_dark_skin_ton": 19, "man_mountain_biking_light_skin_ton": 19, "man_mountain_biking_medium_dark_skin_ton": 19, "man_mountain_biking_medium_light_skin_ton": 19, "man_mountain_biking_medium_skin_ton": 19, "man_mountain_biking_tone1": 19, "man_mountain_biking_tone2": 19, "man_mountain_biking_tone3": 19, "man_mountain_biking_tone4": 19, "man_mountain_biking_tone5": 19, "man_office_work": 19, "man_office_worker_dark_skin_ton": 19, "man_office_worker_light_skin_ton": 19, "man_office_worker_medium_dark_skin_ton": 19, "man_office_worker_medium_light_skin_ton": 19, "man_office_worker_medium_skin_ton": 19, "man_office_worker_tone1": 19, "man_office_worker_tone2": 19, "man_office_worker_tone3": 19, "man_office_worker_tone4": 19, "man_office_worker_tone5": 19, "man_pilot": 19, "man_pilot_dark_skin_ton": 19, "man_pilot_light_skin_ton": 19, "man_pilot_medium_dark_skin_ton": 19, "man_pilot_medium_light_skin_ton": 19, "man_pilot_medium_skin_ton": 19, "man_pilot_tone1": 19, "man_pilot_tone2": 19, "man_pilot_tone3": 19, "man_pilot_tone4": 19, "man_pilot_tone5": 19, "man_playing_handbal": 19, "man_playing_handball_dark_skin_ton": 19, "man_playing_handball_light_skin_ton": 19, "man_playing_handball_medium_dark_skin_ton": 19, "man_playing_handball_medium_light_skin_ton": 19, "man_playing_handball_medium_skin_ton": 19, "man_playing_handball_tone1": 19, "man_playing_handball_tone2": 19, "man_playing_handball_tone3": 19, "man_playing_handball_tone4": 19, "man_playing_handball_tone5": 19, "man_playing_water_polo": 19, "man_playing_water_polo_dark_skin_ton": 19, "man_playing_water_polo_light_skin_ton": 19, "man_playing_water_polo_medium_dark_skin_ton": 19, "man_playing_water_polo_medium_light_skin_ton": 19, "man_playing_water_polo_medium_skin_ton": 19, "man_playing_water_polo_tone1": 19, "man_playing_water_polo_tone2": 19, "man_playing_water_polo_tone3": 19, "man_playing_water_polo_tone4": 19, "man_playing_water_polo_tone5": 19, "man_police_offic": 19, "man_police_officer_dark_skin_ton": 19, "man_police_officer_light_skin_ton": 19, "man_police_officer_medium_dark_skin_ton": 19, "man_police_officer_medium_light_skin_ton": 19, "man_police_officer_medium_skin_ton": 19, "man_police_officer_tone1": 19, "man_police_officer_tone2": 19, "man_police_officer_tone3": 19, "man_police_officer_tone4": 19, "man_police_officer_tone5": 19, "man_pout": 19, "man_pouting_dark_skin_ton": 19, "man_pouting_light_skin_ton": 19, "man_pouting_medium_dark_skin_ton": 19, "man_pouting_medium_light_skin_ton": 19, "man_pouting_medium_skin_ton": 19, "man_pouting_tone1": 19, "man_pouting_tone2": 19, "man_pouting_tone3": 19, "man_pouting_tone4": 19, "man_pouting_tone5": 19, "man_raising_hand": 19, "man_raising_hand_dark_skin_ton": 19, "man_raising_hand_light_skin_ton": 19, "man_raising_hand_medium_dark_skin_ton": 19, "man_raising_hand_medium_light_skin_ton": 19, "man_raising_hand_medium_skin_ton": 19, "man_raising_hand_tone1": 19, "man_raising_hand_tone2": 19, "man_raising_hand_tone3": 19, "man_raising_hand_tone4": 19, "man_raising_hand_tone5": 19, "man_red_hair": 19, "man_red_haired_dark_skin_ton": 19, "man_red_haired_light_skin_ton": 19, "man_red_haired_medium_dark_skin_ton": 19, "man_red_haired_medium_light_skin_ton": 19, "man_red_haired_medium_skin_ton": 19, "man_red_haired_tone1": 19, "man_red_haired_tone2": 19, "man_red_haired_tone3": 19, "man_red_haired_tone4": 19, "man_red_haired_tone5": 19, "man_rowing_boat": 19, "man_rowing_boat_dark_skin_ton": 19, "man_rowing_boat_light_skin_ton": 19, "man_rowing_boat_medium_dark_skin_ton": 19, "man_rowing_boat_medium_light_skin_ton": 19, "man_rowing_boat_medium_skin_ton": 19, "man_rowing_boat_tone1": 19, "man_rowing_boat_tone2": 19, "man_rowing_boat_tone3": 19, "man_rowing_boat_tone4": 19, "man_rowing_boat_tone5": 19, "man_run": 19, "man_running_dark_skin_ton": 19, "man_running_light_skin_ton": 19, "man_running_medium_dark_skin_ton": 19, "man_running_medium_light_skin_ton": 19, "man_running_medium_skin_ton": 19, "man_running_tone1": 19, "man_running_tone2": 19, "man_running_tone3": 19, "man_running_tone4": 19, "man_running_tone5": 19, "man_scientist": 19, "man_scientist_dark_skin_ton": 19, "man_scientist_light_skin_ton": 19, "man_scientist_medium_dark_skin_ton": 19, "man_scientist_medium_light_skin_ton": 19, "man_scientist_medium_skin_ton": 19, "man_scientist_tone1": 19, "man_scientist_tone2": 19, "man_scientist_tone3": 19, "man_scientist_tone4": 19, "man_scientist_tone5": 19, "man_shrug": 19, "man_shrugging_dark_skin_ton": 19, "man_shrugging_light_skin_ton": 19, "man_shrugging_medium_dark_skin_ton": 19, "man_shrugging_medium_light_skin_ton": 19, "man_shrugging_medium_skin_ton": 19, "man_shrugging_tone1": 19, "man_shrugging_tone2": 19, "man_shrugging_tone3": 19, "man_shrugging_tone4": 19, "man_shrugging_tone5": 19, "man_sing": 19, "man_singer_dark_skin_ton": 19, "man_singer_light_skin_ton": 19, "man_singer_medium_dark_skin_ton": 19, "man_singer_medium_light_skin_ton": 19, "man_singer_medium_skin_ton": 19, "man_singer_tone1": 19, "man_singer_tone2": 19, "man_singer_tone3": 19, "man_singer_tone4": 19, "man_singer_tone5": 19, "man_stand": 19, "man_standing_dark_skin_ton": 19, "man_standing_light_skin_ton": 19, "man_standing_medium_dark_skin_ton": 19, "man_standing_medium_light_skin_ton": 19, "man_standing_medium_skin_ton": 19, "man_standing_tone1": 19, "man_standing_tone2": 19, "man_standing_tone3": 19, "man_standing_tone4": 19, "man_standing_tone5": 19, "man_stud": 19, "man_student_dark_skin_ton": 19, "man_student_light_skin_ton": 19, "man_student_medium_dark_skin_ton": 19, "man_student_medium_light_skin_ton": 19, "man_student_medium_skin_ton": 19, "man_student_tone1": 19, "man_student_tone2": 19, "man_student_tone3": 19, "man_student_tone4": 19, "man_student_tone5": 19, "man_superhero": 19, "man_superhero_dark_skin_ton": 19, "man_superhero_light_skin_ton": 19, "man_superhero_medium_dark_skin_ton": 19, "man_superhero_medium_light_skin_ton": 19, "man_superhero_medium_skin_ton": 19, "man_superhero_tone1": 19, "man_superhero_tone2": 19, "man_superhero_tone3": 19, "man_superhero_tone4": 19, "man_superhero_tone5": 19, "man_supervillain": 19, "man_supervillain_dark_skin_ton": 19, "man_supervillain_light_skin_ton": 19, "man_supervillain_medium_dark_skin_ton": 19, "man_supervillain_medium_light_skin_ton": 19, "man_supervillain_medium_skin_ton": 19, "man_supervillain_tone1": 19, "man_supervillain_tone2": 19, "man_supervillain_tone3": 19, "man_supervillain_tone4": 19, "man_supervillain_tone5": 19, "man_surf": 19, "man_surfing_dark_skin_ton": 19, "man_surfing_light_skin_ton": 19, "man_surfing_medium_dark_skin_ton": 19, "man_surfing_medium_light_skin_ton": 19, "man_surfing_medium_skin_ton": 19, "man_surfing_tone1": 19, "man_surfing_tone2": 19, "man_surfing_tone3": 19, "man_surfing_tone4": 19, "man_surfing_tone5": 19, "man_swim": 19, "man_swimming_dark_skin_ton": 19, "man_swimming_light_skin_ton": 19, "man_swimming_medium_dark_skin_ton": 19, "man_swimming_medium_light_skin_ton": 19, "man_swimming_medium_skin_ton": 19, "man_swimming_tone1": 19, "man_swimming_tone2": 19, "man_swimming_tone3": 19, "man_swimming_tone4": 19, "man_swimming_tone5": 19, "man_teach": 19, "man_teacher_dark_skin_ton": 19, "man_teacher_light_skin_ton": 19, "man_teacher_medium_dark_skin_ton": 19, "man_teacher_medium_light_skin_ton": 19, "man_teacher_medium_skin_ton": 19, "man_teacher_tone1": 19, "man_teacher_tone2": 19, "man_teacher_tone3": 19, "man_teacher_tone4": 19, "man_teacher_tone5": 19, "man_technologist": 19, "man_technologist_dark_skin_ton": 19, "man_technologist_light_skin_ton": 19, "man_technologist_medium_dark_skin_ton": 19, "man_technologist_medium_light_skin_ton": 19, "man_technologist_medium_skin_ton": 19, "man_technologist_tone1": 19, "man_technologist_tone2": 19, "man_technologist_tone3": 19, "man_technologist_tone4": 19, "man_technologist_tone5": 19, "man_tipping_hand": 19, "man_tipping_hand_dark_skin_ton": 19, "man_tipping_hand_light_skin_ton": 19, "man_tipping_hand_medium_dark_skin_ton": 19, "man_tipping_hand_medium_light_skin_ton": 19, "man_tipping_hand_medium_skin_ton": 19, "man_tipping_hand_tone1": 19, "man_tipping_hand_tone2": 19, "man_tipping_hand_tone3": 19, "man_tipping_hand_tone4": 19, "man_tipping_hand_tone5": 19, "man_tone1": 19, "man_tone1_beard": 19, "man_tone2": 19, "man_tone2_beard": 19, "man_tone3": 19, "man_tone3_beard": 19, "man_tone4": 19, "man_tone4_beard": 19, "man_tone5": 19, "man_tone5_beard": 19, "man_vampir": 19, "man_vampire_dark_skin_ton": 19, "man_vampire_light_skin_ton": 19, "man_vampire_medium_dark_skin_ton": 19, "man_vampire_medium_light_skin_ton": 19, "man_vampire_medium_skin_ton": 19, "man_vampire_tone1": 19, "man_vampire_tone2": 19, "man_vampire_tone3": 19, "man_vampire_tone4": 19, "man_vampire_tone5": 19, "man_walk": 19, "man_walking_dark_skin_ton": 19, "man_walking_light_skin_ton": 19, "man_walking_medium_dark_skin_ton": 19, "man_walking_medium_light_skin_ton": 19, "man_walking_medium_skin_ton": 19, "man_walking_tone1": 19, "man_walking_tone2": 19, "man_walking_tone3": 19, "man_walking_tone4": 19, "man_walking_tone5": 19, "man_wearing_turban": 19, "man_wearing_turban_dark_skin_ton": 19, "man_wearing_turban_light_skin_ton": 19, "man_wearing_turban_medium_dark_skin_ton": 19, "man_wearing_turban_medium_light_skin_ton": 19, "man_wearing_turban_medium_skin_ton": 19, "man_wearing_turban_tone1": 19, "man_wearing_turban_tone2": 19, "man_wearing_turban_tone3": 19, "man_wearing_turban_tone4": 19, "man_wearing_turban_tone5": 19, "man_white_hair": 19, "man_white_haired_dark_skin_ton": 19, "man_white_haired_light_skin_ton": 19, "man_white_haired_medium_dark_skin_ton": 19, "man_white_haired_medium_light_skin_ton": 19, "man_white_haired_medium_skin_ton": 19, "man_white_haired_tone1": 19, "man_white_haired_tone2": 19, "man_white_haired_tone3": 19, "man_white_haired_tone4": 19, "man_white_haired_tone5": 19, "man_with_chinese_cap": 19, "man_with_chinese_cap_tone1": 19, "man_with_chinese_cap_tone2": 19, "man_with_chinese_cap_tone3": 19, "man_with_chinese_cap_tone4": 19, "man_with_chinese_cap_tone5": 19, "man_with_gua_pi_mao": 19, "man_with_gua_pi_mao_tone1": 19, "man_with_gua_pi_mao_tone2": 19, "man_with_gua_pi_mao_tone3": 19, "man_with_gua_pi_mao_tone4": 19, "man_with_gua_pi_mao_tone5": 19, "man_with_probing_can": 19, "man_with_probing_cane_dark_skin_ton": 19, "man_with_probing_cane_light_skin_ton": 19, "man_with_probing_cane_medium_dark_skin_ton": 19, "man_with_probing_cane_medium_light_skin_ton": 19, "man_with_probing_cane_medium_skin_ton": 19, "man_with_probing_cane_tone1": 19, "man_with_probing_cane_tone2": 19, "man_with_probing_cane_tone3": 19, "man_with_probing_cane_tone4": 19, "man_with_probing_cane_tone5": 19, "man_with_turban": 19, "man_with_turban_tone1": 19, "man_with_turban_tone2": 19, "man_with_turban_tone3": 19, "man_with_turban_tone4": 19, "man_with_turban_tone5": 19, "man_with_veil": 19, "man_with_veil_dark_skin_ton": 19, "man_with_veil_light_skin_ton": 19, "man_with_veil_medium_dark_skin_ton": 19, "man_with_veil_medium_light_skin_ton": 19, "man_with_veil_medium_skin_ton": 19, "man_with_veil_tone1": 19, "man_with_veil_tone2": 19, "man_with_veil_tone3": 19, "man_with_veil_tone4": 19, "man_with_veil_tone5": 19, "man_zombi": 19, "mango": 19, "mans_sho": 19, "mantelpiece_clock": 19, "mantlepiece_clock": 19, "manual_wheelchair": 19, "map": [19, 21, 29, 48, 50, 56, 95, 97, 98, 118, 119, 149, 194, 201, 218, 224, 238, 240, 242, 246, 248, 249, 251, 252, 255, 263, 264, 266, 281, 295, 296, 298, 304, 316, 318, 325, 344, 355, 358, 359, 374, 375, 381, 382, 404, 506, 551, 554, 584, 588, 589, 590, 607, 613, 642, 644, 702, 704, 706, 707, 708, 709, 750, 755, 800, 808, 810, 832, 845, 846, 847, 968, 980, 1043, 1045, 1067, 1076, 1077, 1126, 1130, 1139, 1140, 1159, 1215, 1262, 1268], "maple_leaf": 19, "marshall_island": 19, "martial_arts_uniform": 19, "martiniqu": 19, "mask": [19, 212, 283, 452, 878, 879, 890, 980, 1050, 1080, 1082], "massag": [19, 187, 203, 220, 296, 298, 934, 1085], "massage_man": 19, "massage_tone1": 19, "massage_tone2": 19, "massage_tone3": 19, "massage_tone4": 19, "massage_tone5": 19, "massage_woman": 19, "mate": [19, 277, 883], "mauritania": 19, "mauritiu": 19, "mayott": 19, "mc": [19, 195, 309, 512], "md": [19, 177, 423, 985], "meat_on_bon": 19, "mechanic_dark_skin_ton": 19, "mechanic_light_skin_ton": 19, "mechanic_medium_dark_skin_ton": 19, "mechanic_medium_light_skin_ton": 19, "mechanic_medium_skin_ton": 19, "mechanic_tone1": 19, "mechanic_tone2": 19, "mechanic_tone3": 19, "mechanic_tone4": 19, "mechanic_tone5": 19, "mechanical_arm": 19, "mechanical_leg": 19, "medal": 19, "medal_militari": 19, "medal_sport": 19, "medical_symbol": 19, "mega": [19, 1105], "melon": 19, "memo": 19, "men_holding_hands_dark_skin_ton": 19, "men_holding_hands_dark_skin_tone_light_skin_ton": 19, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 19, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 19, "men_holding_hands_dark_skin_tone_medium_skin_ton": 19, "men_holding_hands_light_skin_ton": 19, "men_holding_hands_light_skin_tone_dark_skin_ton": 19, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 19, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 19, "men_holding_hands_light_skin_tone_medium_skin_ton": 19, "men_holding_hands_medium_dark_skin_ton": 19, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 19, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 19, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 19, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 19, "men_holding_hands_medium_light_skin_ton": 19, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 19, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 19, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 19, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 19, "men_holding_hands_medium_skin_ton": 19, "men_holding_hands_medium_skin_tone_dark_skin_ton": 19, "men_holding_hands_medium_skin_tone_light_skin_ton": 19, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 19, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 19, "men_holding_hands_tone1": 19, "men_holding_hands_tone1_tone2": 19, "men_holding_hands_tone1_tone3": 19, "men_holding_hands_tone1_tone4": 19, "men_holding_hands_tone1_tone5": 19, "men_holding_hands_tone2": 19, "men_holding_hands_tone2_tone1": 19, "men_holding_hands_tone2_tone3": 19, "men_holding_hands_tone2_tone4": 19, "men_holding_hands_tone2_tone5": 19, "men_holding_hands_tone3": 19, "men_holding_hands_tone3_tone1": 19, "men_holding_hands_tone3_tone2": 19, "men_holding_hands_tone3_tone4": 19, "men_holding_hands_tone3_tone5": 19, "men_holding_hands_tone4": 19, "men_holding_hands_tone4_tone1": 19, "men_holding_hands_tone4_tone2": 19, "men_holding_hands_tone4_tone3": 19, "men_holding_hands_tone4_tone5": 19, "men_holding_hands_tone5": 19, "men_holding_hands_tone5_tone1": 19, "men_holding_hands_tone5_tone2": 19, "men_holding_hands_tone5_tone3": 19, "men_holding_hands_tone5_tone4": 19, "men_with_bunny_ears_parti": 19, "men_wrestl": 19, "mending_heart": 19, "menorah": 19, "men": [19, 450, 506, 649], "mermaid": 19, "mermaid_dark_skin_ton": 19, "mermaid_light_skin_ton": 19, "mermaid_medium_dark_skin_ton": 19, "mermaid_medium_light_skin_ton": 19, "mermaid_medium_skin_ton": 19, "mermaid_tone1": 19, "mermaid_tone2": 19, "mermaid_tone3": 19, "mermaid_tone4": 19, "mermaid_tone5": 19, "merman": 19, "merman_dark_skin_ton": 19, "merman_light_skin_ton": 19, "merman_medium_dark_skin_ton": 19, "merman_medium_light_skin_ton": 19, "merman_medium_skin_ton": 19, "merman_tone1": 19, "merman_tone2": 19, "merman_tone3": 19, "merman_tone4": 19, "merman_tone5": 19, "merperson": 19, "merperson_dark_skin_ton": 19, "merperson_light_skin_ton": 19, "merperson_medium_dark_skin_ton": 19, "merperson_medium_light_skin_ton": 19, "merperson_medium_skin_ton": 19, "merperson_tone1": 19, "merperson_tone2": 19, "merperson_tone3": 19, "merperson_tone4": 19, "merperson_tone5": 19, "metal_tone1": 19, "metal_tone2": 19, "metal_tone3": 19, "metal_tone4": 19, "metal_tone5": 19, "metro": 19, "mexico": 19, "mf": [19, 263, 1166], "mg": 19, "mh": 19, "microb": 19, "micronesia": 19, "microphone2": 19, "microphon": [19, 197, 199], "microscop": 19, "middle_finger_tone1": 19, "middle_finger_tone2": 19, "middle_finger_tone3": 19, "middle_finger_tone4": 19, "middle_finger_tone5": 19, "military_helmet": 19, "military_med": 19, "milk": 19, "milk_glass": 19, "milky_wai": 19, "minibu": 19, "minidisc": 19, "mirror": [19, 513], "ml": 19, "mm": [19, 180, 511], "mn": 19, "mo": [19, 640], "mobile_phon": 19, "mobile_phone_off": 19, "moldova": 19, "monaco": 19, "money_mouth": 19, "money_mouth_fac": 19, "money_with_w": 19, "moneybag": 19, "mongolia": 19, "monkei": 19, "monkey_fac": 19, "monorail": 19, "montenegro": 19, "montserrat": 19, "moon": 19, "moon_cak": 19, "morocco": 19, "mortar_board": 19, "mosqu": 19, "mosquito": 19, "mother_christma": 19, "mother_christmas_tone1": 19, "mother_christmas_tone2": 19, "mother_christmas_tone3": 19, "mother_christmas_tone4": 19, "mother_christmas_tone5": 19, "motor_boat": 19, "motor_scoot": 19, "motorbik": 19, "motorboat": 19, "motorcycl": 19, "motorized_wheelchair": 19, "motorwai": 19, "mount_fuji": 19, "mountain": 19, "mountain_bicyclist": 19, "mountain_bicyclist_tone1": 19, "mountain_bicyclist_tone2": 19, "mountain_bicyclist_tone3": 19, "mountain_bicyclist_tone4": 19, "mountain_bicyclist_tone5": 19, "mountain_biking_man": 19, "mountain_biking_woman": 19, "mountain_cablewai": 19, "mountain_railwai": 19, "mountain_snow": 19, "mouse2": 19, "mous": [19, 192, 197, 369, 891, 1146, 1154], "mouse_three_button": 19, "mouse_trap": 19, "movie_camera": 19, "moyai": 19, "mozambiqu": 19, "mp": [19, 25], "mq": 19, "mr": [19, 113, 260, 271, 279, 283, 1047, 1170], "mrs_clau": 19, "mrs_claus_tone1": 19, "mrs_claus_tone2": 19, "mrs_claus_tone3": 19, "mrs_claus_tone4": 19, "mrs_claus_tone5": 19, "mt": [19, 375, 413, 824, 1079, 1080], "mu": [19, 283], "muscle_tone1": 19, "muscle_tone2": 19, "muscle_tone3": 19, "muscle_tone4": 19, "muscle_tone5": 19, "mushroom": 19, "musical_keyboard": 19, "musical_not": 19, "musical_scor": 19, "mute": 19, "mv": [19, 88, 113, 135, 156, 168, 231, 233, 297, 306, 307, 327, 328, 371, 372, 404, 409, 536, 898, 911, 957, 1267], "mw": [19, 1047], "mx": 19, "mx_clau": 19, "mx_claus_dark_skin_ton": 19, "mx_claus_light_skin_ton": 19, "mx_claus_medium_dark_skin_ton": 19, "mx_claus_medium_light_skin_ton": 19, "mx_claus_medium_skin_ton": 19, "mx_claus_tone1": 19, "mx_claus_tone2": 19, "mx_claus_tone3": 19, "mx_claus_tone4": 19, "mx_claus_tone5": 19, "myanmar": 19, "mz": 19, "na": [19, 260, 263, 266, 279, 286, 304, 359], "nail_car": 19, "nail_care_tone1": 19, "nail_care_tone2": 19, "nail_care_tone3": 19, "nail_care_tone4": 19, "nail_care_tone5": 19, "name_badg": 19, "namibia": 19, "national_park": 19, "nauru": 19, "nauseated_fac": 19, "nazar_amulet": 19, "nc": [19, 231, 233, 306, 327, 328, 371, 432, 1022], "ne": [19, 650, 667, 669, 1037], "neckti": 19, "negative_squared_cross_mark": 19, "nepal": 19, "nerd_fac": 19, "nesting_dol": 19, "netherland": [19, 193, 1133], "neutral_fac": 19, "new_caledonia": 19, "new_moon": 19, "new_moon_with_fac": 19, "new_zealand": 19, "newspaper2": 19, "newspap": [19, 30], "newspaper_rol": 19, "next_track": 19, "next_track_button": 19, "nf": [19, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1016], "ng": [19, 193, 204, 307, 1084, 1095, 1096, 1099], "ni": 19, "nicaragua": 19, "niger": 19, "nigeria": 19, "night_with_star": 19, "nine": [19, 211, 224, 234, 242, 260, 271, 359, 404], "ninja_dark_skin_ton": 19, "ninja_light_skin_ton": 19, "ninja_medium_dark_skin_ton": 19, "ninja_medium_light_skin_ton": 19, "ninja_medium_skin_ton": 19, "ninja_tone1": 19, "ninja_tone2": 19, "ninja_tone3": 19, "ninja_tone4": 19, "ninja_tone5": 19, "niue": 19, "nl": [19, 432], "no_bel": 19, "no_bicycl": 19, "no_entri": 19, "no_entry_sign": 19, "no_good": 19, "no_good_man": 19, "no_good_tone1": 19, "no_good_tone2": 19, "no_good_tone3": 19, "no_good_tone4": 19, "no_good_tone5": 19, "no_good_woman": 19, "no_mobile_phon": 19, "no_mouth": 19, "no_pedestrian": 19, "no_smok": 19, "non": [19, 67, 113, 114, 129, 131, 159, 170, 174, 194, 195, 202, 218, 231, 253, 271, 279, 283, 288, 307, 316, 318, 325, 347, 375, 386, 387, 466, 488, 506, 516, 519, 537, 596, 639, 641, 650, 653, 664, 665, 704, 705, 762, 783, 801, 815, 824, 825, 844, 845, 850, 868, 871, 873, 913, 970, 976, 989, 1000, 1006, 1007, 1015, 1033, 1057, 1061, 1069, 1077, 1103, 1107, 1119, 1120, 1143, 1156, 1177, 1194, 1228, 1230, 1249, 1259, 1281], "potable_wat": 19, "norfolk_island": 19, "north_korea": 19, "northern_mariana_island": 19, "norwai": 19, "nose": 19, "nose_tone1": 19, "nose_tone2": 19, "nose_tone3": 19, "nose_tone4": 19, "nose_tone5": 19, "notebook_with_decorative_cov": 19, "notepad_spir": 19, "note": [19, 23, 27, 31, 46, 49, 111, 113, 126, 130, 150, 152, 159, 161, 165, 171, 175, 182, 191, 192, 194, 199, 211, 212, 242, 250, 252, 263, 264, 266, 291, 320, 325, 342, 345, 346, 375, 382, 395, 396, 512, 516, 522, 525, 529, 543, 572, 620, 643, 652, 653, 659, 660, 663, 744, 759, 761, 826, 827, 828, 831, 835, 837, 839, 840, 844, 845, 846, 857, 858, 919, 936, 943, 984, 1001, 1022, 1033, 1042, 1066, 1096, 1149, 1152, 1154, 1158, 1213, 1224, 1226, 1228, 1248], "np": [19, 214, 241, 309, 343, 512, 1211, 1230], "nr": [19, 239, 283, 943], "nu": 19, "nut_and_bolt": 19, "nz": 19, "o2": [19, 500], "ocean": 19, "octagonal_sign": 19, "octopu": 19, "oden": 19, "office_work": 19, "office_worker_dark_skin_ton": 19, "office_worker_light_skin_ton": 19, "office_worker_medium_dark_skin_ton": 19, "office_worker_medium_light_skin_ton": 19, "office_worker_medium_skin_ton": 19, "office_worker_tone1": 19, "office_worker_tone2": 19, "office_worker_tone3": 19, "office_worker_tone4": 19, "office_worker_tone5": 19, "oil": 19, "oil_drum": 19, "ok": [19, 40, 119, 166, 191, 193, 194, 198, 223, 239, 269, 309, 373, 400, 440, 476, 494, 496, 529, 538, 554, 605, 606, 607, 652, 660, 662, 667, 672, 682, 728, 735, 747, 748, 756, 759, 761, 763, 770, 815, 830, 835, 845, 846, 848, 936, 998, 1031, 1058, 1086, 1098, 1116, 1119, 1132, 1248], "ok_hand_tone1": 19, "ok_hand_tone2": 19, "ok_hand_tone3": 19, "ok_hand_tone4": 19, "ok_hand_tone5": 19, "ok_man": 19, "ok_woman": 19, "ok_woman_tone1": 19, "ok_woman_tone2": 19, "ok_woman_tone3": 19, "ok_woman_tone4": 19, "ok_woman_tone5": 19, "old_kei": 19, "older_adult": 19, "older_adult_dark_skin_ton": 19, "older_adult_light_skin_ton": 19, "older_adult_medium_dark_skin_ton": 19, "older_adult_medium_light_skin_ton": 19, "older_adult_medium_skin_ton": 19, "older_adult_tone1": 19, "older_adult_tone2": 19, "older_adult_tone3": 19, "older_adult_tone4": 19, "older_adult_tone5": 19, "older_man": 19, "older_man_tone1": 19, "older_man_tone2": 19, "older_man_tone3": 19, "older_man_tone4": 19, "older_man_tone5": 19, "older_woman": 19, "older_woman_tone1": 19, "older_woman_tone2": 19, "older_woman_tone3": 19, "older_woman_tone4": 19, "older_woman_tone5": 19, "oliv": [19, 255], "om": [19, 827], "om_symbol": 19, "oman": 19, "oncoming_automobil": 19, "oncoming_bu": 19, "oncoming_police_car": 19, "oncoming_taxi": 19, "one_piece_swimsuit": 19, "onion": 19, "open_file_fold": 19, "open_hand": 19, "open_hands_tone1": 19, "open_hands_tone2": 19, "open_hands_tone3": 19, "open_hands_tone4": 19, "open_hands_tone5": 19, "open_mouth": 19, "open_umbrella": 19, "ophiuchu": 19, "orange_book": 19, "orange_circl": 19, "orange_heart": 19, "orange_squar": 19, "orangutan": 19, "orthodox_cross": 19, "otter": 19, "outbox_trai": 19, "owl": 19, "ox": 19, "oyster": 19, "pa": [19, 260, 266, 276, 279, 476, 679, 681, 682], "paella": 19, "page_facing_up": 19, "page_with_curl": 19, "pager": [19, 924], "paintbrush": 19, "pakistan": 19, "palau": 19, "palestinian_territori": 19, "palm_tre": 19, "palms_up_togeth": 19, "palms_up_together_dark_skin_ton": 19, "palms_up_together_light_skin_ton": 19, "palms_up_together_medium_dark_skin_ton": 19, "palms_up_together_medium_light_skin_ton": 19, "palms_up_together_medium_skin_ton": 19, "palms_up_together_tone1": 19, "palms_up_together_tone2": 19, "palms_up_together_tone3": 19, "palms_up_together_tone4": 19, "palms_up_together_tone5": 19, "panama": 19, "pancak": 19, "panda_fac": 19, "paperclip": 19, "papua_new_guinea": 19, "parachut": 19, "paraguai": 19, "parasol_on_ground": 19, "park": 19, "parrot": 19, "part_alternation_mark": 19, "partly_sunni": 19, "partying_fac": 19, "passenger_ship": 19, "passport_control": 19, "pause_button": 19, "paw_print": 19, "pe": 19, "peac": 19, "peace_symbol": 19, "peach": 19, "peacock": 19, "peanut": 19, "pear": 19, "pen": 19, "pen_ballpoint": 19, "pen_fountain": 19, "pencil2": 19, "pencil": 19, "pensiv": 19, "people_holding_hand": 19, "people_holding_hands_dark_skin_ton": 19, "people_holding_hands_dark_skin_tone_light_skin_ton": 19, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 19, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 19, "people_holding_hands_dark_skin_tone_medium_skin_ton": 19, "people_holding_hands_light_skin_ton": 19, "people_holding_hands_light_skin_tone_dark_skin_ton": 19, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 19, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 19, "people_holding_hands_light_skin_tone_medium_skin_ton": 19, "people_holding_hands_medium_dark_skin_ton": 19, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 19, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 19, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 19, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 19, "people_holding_hands_medium_light_skin_ton": 19, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 19, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 19, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 19, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 19, "people_holding_hands_medium_skin_ton": 19, "people_holding_hands_medium_skin_tone_dark_skin_ton": 19, "people_holding_hands_medium_skin_tone_light_skin_ton": 19, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 19, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 19, "people_holding_hands_tone1": 19, "people_holding_hands_tone1_tone2": 19, "people_holding_hands_tone1_tone3": 19, "people_holding_hands_tone1_tone4": 19, "people_holding_hands_tone1_tone5": 19, "people_holding_hands_tone2": 19, "people_holding_hands_tone2_tone1": 19, "people_holding_hands_tone2_tone3": 19, "people_holding_hands_tone2_tone4": 19, "people_holding_hands_tone2_tone5": 19, "people_holding_hands_tone3": 19, "people_holding_hands_tone3_tone1": 19, "people_holding_hands_tone3_tone2": 19, "people_holding_hands_tone3_tone4": 19, "people_holding_hands_tone3_tone5": 19, "people_holding_hands_tone4": 19, "people_holding_hands_tone4_tone1": 19, "people_holding_hands_tone4_tone2": 19, "people_holding_hands_tone4_tone3": 19, "people_holding_hands_tone4_tone5": 19, "people_holding_hands_tone5": 19, "people_holding_hands_tone5_tone1": 19, "people_holding_hands_tone5_tone2": 19, "people_holding_hands_tone5_tone3": 19, "people_holding_hands_tone5_tone4": 19, "people_hug": 19, "people_with_bunny_ears_parti": 19, "people_wrestl": 19, "performing_art": 19, "persever": 19, "person_bald": 19, "person_bik": 19, "person_biking_tone1": 19, "person_biking_tone2": 19, "person_biking_tone3": 19, "person_biking_tone4": 19, "person_biking_tone5": 19, "person_bouncing_bal": 19, "person_bouncing_ball_tone1": 19, "person_bouncing_ball_tone2": 19, "person_bouncing_ball_tone3": 19, "person_bouncing_ball_tone4": 19, "person_bouncing_ball_tone5": 19, "person_bow": 19, "person_bowing_tone1": 19, "person_bowing_tone2": 19, "person_bowing_tone3": 19, "person_bowing_tone4": 19, "person_bowing_tone5": 19, "person_climb": 19, "person_climbing_dark_skin_ton": 19, "person_climbing_light_skin_ton": 19, "person_climbing_medium_dark_skin_ton": 19, "person_climbing_medium_light_skin_ton": 19, "person_climbing_medium_skin_ton": 19, "person_climbing_tone1": 19, "person_climbing_tone2": 19, "person_climbing_tone3": 19, "person_climbing_tone4": 19, "person_climbing_tone5": 19, "person_curly_hair": 19, "person_dark_skin_tone_bald": 19, "person_dark_skin_tone_curly_hair": 19, "person_dark_skin_tone_red_hair": 19, "person_dark_skin_tone_white_hair": 19, "person_doing_cartwheel": 19, "person_doing_cartwheel_tone1": 19, "person_doing_cartwheel_tone2": 19, "person_doing_cartwheel_tone3": 19, "person_doing_cartwheel_tone4": 19, "person_doing_cartwheel_tone5": 19, "person_facepalm": 19, "person_facepalming_tone1": 19, "person_facepalming_tone2": 19, "person_facepalming_tone3": 19, "person_facepalming_tone4": 19, "person_facepalming_tone5": 19, "person_feeding_babi": 19, "person_feeding_baby_dark_skin_ton": 19, "person_feeding_baby_light_skin_ton": 19, "person_feeding_baby_medium_dark_skin_ton": 19, "person_feeding_baby_medium_light_skin_ton": 19, "person_feeding_baby_medium_skin_ton": 19, "person_feeding_baby_tone1": 19, "person_feeding_baby_tone2": 19, "person_feeding_baby_tone3": 19, "person_feeding_baby_tone4": 19, "person_feeding_baby_tone5": 19, "person_fenc": 19, "person_frown": 19, "person_frowning_tone1": 19, "person_frowning_tone2": 19, "person_frowning_tone3": 19, "person_frowning_tone4": 19, "person_frowning_tone5": 19, "person_gesturing_no": 19, "person_gesturing_no_tone1": 19, "person_gesturing_no_tone2": 19, "person_gesturing_no_tone3": 19, "person_gesturing_no_tone4": 19, "person_gesturing_no_tone5": 19, "person_gesturing_ok": 19, "person_gesturing_ok_tone1": 19, "person_gesturing_ok_tone2": 19, "person_gesturing_ok_tone3": 19, "person_gesturing_ok_tone4": 19, "person_gesturing_ok_tone5": 19, "person_getting_haircut": 19, "person_getting_haircut_tone1": 19, "person_getting_haircut_tone2": 19, "person_getting_haircut_tone3": 19, "person_getting_haircut_tone4": 19, "person_getting_haircut_tone5": 19, "person_getting_massag": 19, "person_getting_massage_tone1": 19, "person_getting_massage_tone2": 19, "person_getting_massage_tone3": 19, "person_getting_massage_tone4": 19, "person_getting_massage_tone5": 19, "person_golf": 19, "person_golfing_dark_skin_ton": 19, "person_golfing_light_skin_ton": 19, "person_golfing_medium_dark_skin_ton": 19, "person_golfing_medium_light_skin_ton": 19, "person_golfing_medium_skin_ton": 19, "person_golfing_tone1": 19, "person_golfing_tone2": 19, "person_golfing_tone3": 19, "person_golfing_tone4": 19, "person_golfing_tone5": 19, "person_in_bed_dark_skin_ton": 19, "person_in_bed_light_skin_ton": 19, "person_in_bed_medium_dark_skin_ton": 19, "person_in_bed_medium_light_skin_ton": 19, "person_in_bed_medium_skin_ton": 19, "person_in_bed_tone1": 19, "person_in_bed_tone2": 19, "person_in_bed_tone3": 19, "person_in_bed_tone4": 19, "person_in_bed_tone5": 19, "person_in_lotus_posit": 19, "person_in_lotus_position_dark_skin_ton": 19, "person_in_lotus_position_light_skin_ton": 19, "person_in_lotus_position_medium_dark_skin_ton": 19, "person_in_lotus_position_medium_light_skin_ton": 19, "person_in_lotus_position_medium_skin_ton": 19, "person_in_lotus_position_tone1": 19, "person_in_lotus_position_tone2": 19, "person_in_lotus_position_tone3": 19, "person_in_lotus_position_tone4": 19, "person_in_lotus_position_tone5": 19, "person_in_manual_wheelchair": 19, "person_in_manual_wheelchair_dark_skin_ton": 19, "person_in_manual_wheelchair_light_skin_ton": 19, "person_in_manual_wheelchair_medium_dark_skin_ton": 19, "person_in_manual_wheelchair_medium_light_skin_ton": 19, "person_in_manual_wheelchair_medium_skin_ton": 19, "person_in_manual_wheelchair_tone1": 19, "person_in_manual_wheelchair_tone2": 19, "person_in_manual_wheelchair_tone3": 19, "person_in_manual_wheelchair_tone4": 19, "person_in_manual_wheelchair_tone5": 19, "person_in_motorized_wheelchair": 19, "person_in_motorized_wheelchair_dark_skin_ton": 19, "person_in_motorized_wheelchair_light_skin_ton": 19, "person_in_motorized_wheelchair_medium_dark_skin_ton": 19, "person_in_motorized_wheelchair_medium_light_skin_ton": 19, "person_in_motorized_wheelchair_medium_skin_ton": 19, "person_in_motorized_wheelchair_tone1": 19, "person_in_motorized_wheelchair_tone2": 19, "person_in_motorized_wheelchair_tone3": 19, "person_in_motorized_wheelchair_tone4": 19, "person_in_motorized_wheelchair_tone5": 19, "person_in_steamy_room": 19, "person_in_steamy_room_dark_skin_ton": 19, "person_in_steamy_room_light_skin_ton": 19, "person_in_steamy_room_medium_dark_skin_ton": 19, "person_in_steamy_room_medium_light_skin_ton": 19, "person_in_steamy_room_medium_skin_ton": 19, "person_in_steamy_room_tone1": 19, "person_in_steamy_room_tone2": 19, "person_in_steamy_room_tone3": 19, "person_in_steamy_room_tone4": 19, "person_in_steamy_room_tone5": 19, "person_in_tuxedo": 19, "person_in_tuxedo_tone1": 19, "person_in_tuxedo_tone2": 19, "person_in_tuxedo_tone3": 19, "person_in_tuxedo_tone4": 19, "person_in_tuxedo_tone5": 19, "person_juggl": 19, "person_juggling_tone1": 19, "person_juggling_tone2": 19, "person_juggling_tone3": 19, "person_juggling_tone4": 19, "person_juggling_tone5": 19, "person_kneel": 19, "person_kneeling_dark_skin_ton": 19, "person_kneeling_light_skin_ton": 19, "person_kneeling_medium_dark_skin_ton": 19, "person_kneeling_medium_light_skin_ton": 19, "person_kneeling_medium_skin_ton": 19, "person_kneeling_tone1": 19, "person_kneeling_tone2": 19, "person_kneeling_tone3": 19, "person_kneeling_tone4": 19, "person_kneeling_tone5": 19, "person_lifting_weight": 19, "person_lifting_weights_tone1": 19, "person_lifting_weights_tone2": 19, "person_lifting_weights_tone3": 19, "person_lifting_weights_tone4": 19, "person_lifting_weights_tone5": 19, "person_light_skin_tone_bald": 19, "person_light_skin_tone_curly_hair": 19, "person_light_skin_tone_red_hair": 19, "person_light_skin_tone_white_hair": 19, "person_medium_dark_skin_tone_bald": 19, "person_medium_dark_skin_tone_curly_hair": 19, "person_medium_dark_skin_tone_red_hair": 19, "person_medium_dark_skin_tone_white_hair": 19, "person_medium_light_skin_tone_bald": 19, "person_medium_light_skin_tone_curly_hair": 19, "person_medium_light_skin_tone_red_hair": 19, "person_medium_light_skin_tone_white_hair": 19, "person_medium_skin_tone_bald": 19, "person_medium_skin_tone_curly_hair": 19, "person_medium_skin_tone_red_hair": 19, "person_medium_skin_tone_white_hair": 19, "person_mountain_bik": 19, "person_mountain_biking_tone1": 19, "person_mountain_biking_tone2": 19, "person_mountain_biking_tone3": 19, "person_mountain_biking_tone4": 19, "person_mountain_biking_tone5": 19, "person_playing_handbal": 19, "person_playing_handball_tone1": 19, "person_playing_handball_tone2": 19, "person_playing_handball_tone3": 19, "person_playing_handball_tone4": 19, "person_playing_handball_tone5": 19, "person_playing_water_polo": 19, "person_playing_water_polo_tone1": 19, "person_playing_water_polo_tone2": 19, "person_playing_water_polo_tone3": 19, "person_playing_water_polo_tone4": 19, "person_playing_water_polo_tone5": 19, "person_pout": 19, "person_pouting_tone1": 19, "person_pouting_tone2": 19, "person_pouting_tone3": 19, "person_pouting_tone4": 19, "person_pouting_tone5": 19, "person_raising_hand": 19, "person_raising_hand_tone1": 19, "person_raising_hand_tone2": 19, "person_raising_hand_tone3": 19, "person_raising_hand_tone4": 19, "person_raising_hand_tone5": 19, "person_red_hair": 19, "person_rowing_boat": 19, "person_rowing_boat_tone1": 19, "person_rowing_boat_tone2": 19, "person_rowing_boat_tone3": 19, "person_rowing_boat_tone4": 19, "person_rowing_boat_tone5": 19, "person_run": 19, "person_running_tone1": 19, "person_running_tone2": 19, "person_running_tone3": 19, "person_running_tone4": 19, "person_running_tone5": 19, "person_shrug": 19, "person_shrugging_tone1": 19, "person_shrugging_tone2": 19, "person_shrugging_tone3": 19, "person_shrugging_tone4": 19, "person_shrugging_tone5": 19, "person_stand": 19, "person_standing_dark_skin_ton": 19, "person_standing_light_skin_ton": 19, "person_standing_medium_dark_skin_ton": 19, "person_standing_medium_light_skin_ton": 19, "person_standing_medium_skin_ton": 19, "person_standing_tone1": 19, "person_standing_tone2": 19, "person_standing_tone3": 19, "person_standing_tone4": 19, "person_standing_tone5": 19, "person_surf": 19, "person_surfing_tone1": 19, "person_surfing_tone2": 19, "person_surfing_tone3": 19, "person_surfing_tone4": 19, "person_surfing_tone5": 19, "person_swim": 19, "person_swimming_tone1": 19, "person_swimming_tone2": 19, "person_swimming_tone3": 19, "person_swimming_tone4": 19, "person_swimming_tone5": 19, "person_tipping_hand": 19, "person_tipping_hand_tone1": 19, "person_tipping_hand_tone2": 19, "person_tipping_hand_tone3": 19, "person_tipping_hand_tone4": 19, "person_tipping_hand_tone5": 19, "person_tone1_bald": 19, "person_tone1_curly_hair": 19, "person_tone1_red_hair": 19, "person_tone1_white_hair": 19, "person_tone2_bald": 19, "person_tone2_curly_hair": 19, "person_tone2_red_hair": 19, "person_tone2_white_hair": 19, "person_tone3_bald": 19, "person_tone3_curly_hair": 19, "person_tone3_red_hair": 19, "person_tone3_white_hair": 19, "person_tone4_bald": 19, "person_tone4_curly_hair": 19, "person_tone4_red_hair": 19, "person_tone4_white_hair": 19, "person_tone5_bald": 19, "person_tone5_curly_hair": 19, "person_tone5_red_hair": 19, "person_tone5_white_hair": 19, "person_walk": 19, "person_walking_tone1": 19, "person_walking_tone2": 19, "person_walking_tone3": 19, "person_walking_tone4": 19, "person_walking_tone5": 19, "person_wearing_turban": 19, "person_wearing_turban_tone1": 19, "person_wearing_turban_tone2": 19, "person_wearing_turban_tone3": 19, "person_wearing_turban_tone4": 19, "person_wearing_turban_tone5": 19, "person_white_hair": 19, "person_with_bal": 19, "person_with_ball_tone1": 19, "person_with_ball_tone2": 19, "person_with_ball_tone3": 19, "person_with_ball_tone4": 19, "person_with_ball_tone5": 19, "person_with_blond_hair": 19, "person_with_blond_hair_tone1": 19, "person_with_blond_hair_tone2": 19, "person_with_blond_hair_tone3": 19, "person_with_blond_hair_tone4": 19, "person_with_blond_hair_tone5": 19, "person_with_pouting_fac": 19, "person_with_pouting_face_tone1": 19, "person_with_pouting_face_tone2": 19, "person_with_pouting_face_tone3": 19, "person_with_pouting_face_tone4": 19, "person_with_pouting_face_tone5": 19, "person_with_probing_can": 19, "person_with_probing_cane_dark_skin_ton": 19, "person_with_probing_cane_light_skin_ton": 19, "person_with_probing_cane_medium_dark_skin_ton": 19, "person_with_probing_cane_medium_light_skin_ton": 19, "person_with_probing_cane_medium_skin_ton": 19, "person_with_probing_cane_tone1": 19, "person_with_probing_cane_tone2": 19, "person_with_probing_cane_tone3": 19, "person_with_probing_cane_tone4": 19, "person_with_probing_cane_tone5": 19, "person_with_veil": 19, "person_with_veil_tone1": 19, "person_with_veil_tone2": 19, "person_with_veil_tone3": 19, "person_with_veil_tone4": 19, "person_with_veil_tone5": 19, "peru": 19, "petri_dish": 19, "pf": [19, 195, 747], "pg": [19, 504], "ph": 19, "philippin": 19, "phone": 19, "pick": [19, 67, 195, 202, 252, 373, 517, 607, 1064, 1096, 1101], "pickup_truck": 19, "pie": 19, "pig2": 19, "pig_nos": 19, "pill": 19, "pilot": 19, "pilot_dark_skin_ton": 19, "pilot_light_skin_ton": 19, "pilot_medium_dark_skin_ton": 19, "pilot_medium_light_skin_ton": 19, "pilot_medium_skin_ton": 19, "pilot_tone1": 19, "pilot_tone2": 19, "pilot_tone3": 19, "pilot_tone4": 19, "pilot_tone5": 19, "pinched_fing": 19, "pinched_fingers_dark_skin_ton": 19, "pinched_fingers_light_skin_ton": 19, "pinched_fingers_medium_dark_skin_ton": 19, "pinched_fingers_medium_light_skin_ton": 19, "pinched_fingers_medium_skin_ton": 19, "pinched_fingers_tone1": 19, "pinched_fingers_tone2": 19, "pinched_fingers_tone3": 19, "pinched_fingers_tone4": 19, "pinched_fingers_tone5": 19, "pinching_hand": 19, "pinching_hand_dark_skin_ton": 19, "pinching_hand_light_skin_ton": 19, "pinching_hand_medium_dark_skin_ton": 19, "pinching_hand_medium_light_skin_ton": 19, "pinching_hand_medium_skin_ton": 19, "pinching_hand_tone1": 19, "pinching_hand_tone2": 19, "pinching_hand_tone3": 19, "pinching_hand_tone4": 19, "pinching_hand_tone5": 19, "pineappl": [19, 315], "ping_pong": 19, "pirate_flag": 19, "pisc": 19, "pitcairn_island": 19, "pizza": 19, "pi\u00f1ata": 19, "pk": 19, "pl": 19, "placard": 19, "place_of_worship": 19, "plate_with_cutleri": 19, "play_or_pause_button": 19, "play_paus": 19, "pleading_fac": 19, "plunger": 19, "pm": [19, 25, 359, 1066], "pn": 19, "point_down": 19, "point_down_tone1": 19, "point_down_tone2": 19, "point_down_tone3": 19, "point_down_tone4": 19, "point_down_tone5": 19, "point_left": 19, "point_left_tone1": 19, "point_left_tone2": 19, "point_left_tone3": 19, "point_left_tone4": 19, "point_left_tone5": 19, "point_right": 19, "point_right_tone1": 19, "point_right_tone2": 19, "point_right_tone3": 19, "point_right_tone4": 19, "point_right_tone5": 19, "point_up_2": 19, "point_up_2_tone1": 19, "point_up_2_tone2": 19, "point_up_2_tone3": 19, "point_up_2_tone4": 19, "point_up_2_tone5": 19, "point_up_tone1": 19, "point_up_tone2": 19, "point_up_tone3": 19, "point_up_tone4": 19, "point_up_tone5": 19, "poland": 19, "polar_bear": 19, "police_car": 19, "police_offic": 19, "police_officer_tone1": 19, "police_officer_tone2": 19, "police_officer_tone3": 19, "police_officer_tone4": 19, "police_officer_tone5": 19, "policeman": 19, "policewoman": 19, "poo": 19, "poodl": 19, "poop": 19, "popcorn": 19, "portug": 19, "post_offic": 19, "postal_horn": 19, "postbox": 19, "potato": 19, "potted_pl": 19, "pouch": 19, "poultry_leg": 19, "pound": [19, 23], "pound_symbol": 19, "pouting_cat": 19, "pouting_man": 19, "pouting_woman": 19, "pr": [19, 22, 279, 294], "prai": 19, "pray_tone1": 19, "pray_tone2": 19, "pray_tone3": 19, "pray_tone4": 19, "pray_tone5": 19, "prayer_bead": 19, "pregnant_woman": 19, "pregnant_woman_tone1": 19, "pregnant_woman_tone2": 19, "pregnant_woman_tone3": 19, "pregnant_woman_tone4": 19, "pregnant_woman_tone5": 19, "pretzel": 19, "previous_track": 19, "previous_track_button": 19, "princ": 19, "prince_tone1": 19, "prince_tone2": 19, "prince_tone3": 19, "prince_tone4": 19, "prince_tone5": 19, "princess": 19, "princess_tone1": 19, "princess_tone2": 19, "princess_tone3": 19, "princess_tone4": 19, "princess_tone5": 19, "printer": 19, "probing_can": 19, "projector": 19, "p": [19, 25, 49, 103, 106, 113, 131, 134, 157, 180, 192, 193, 197, 198, 204, 219, 231, 233, 234, 250, 263, 279, 283, 309, 311, 369, 436, 470, 476, 479, 480, 483, 484, 488, 524, 525, 526, 528, 529, 531, 532, 536, 579, 604, 605, 607, 608, 650, 652, 655, 661, 662, 663, 665, 667, 668, 682, 690, 739, 743, 744, 749, 750, 753, 761, 764, 765, 770, 772, 773, 776, 777, 778, 779, 794, 797, 803, 805, 806, 812, 814, 821, 825, 844, 848, 850, 857, 858, 868, 891, 893, 910, 913, 921, 930, 948, 984, 1003, 1006, 1015, 1022, 1033, 1047, 1051, 1066, 1067, 1080, 1096, 1103, 1105, 1166, 1243, 1267], "pt": [19, 831, 861, 1067], "pud": 19, "puerto_rico": 19, "punch": 19, "punch_tone1": 19, "punch_tone2": 19, "punch_tone3": 19, "punch_tone4": 19, "punch_tone5": 19, "purple_circl": 19, "purple_heart": 19, "purple_squar": 19, "purs": 19, "pushpin": 19, "put_litter_in_its_plac": 19, "pw": 19, "qa": 19, "qatar": 19, "rabbit2": 19, "rabbit": 19, "raccoon": 19, "race_car": 19, "racehors": 19, "racing_car": 19, "racing_motorcycl": 19, "radio": [19, 1066], "radio_button": 19, "radioact": 19, "radioactive_sign": 19, "rage": 19, "railroad_track": 19, "railway_car": 19, "railway_track": 19, "rainbow": 19, "rainbow_flag": 19, "raised_back_of_hand": 19, "raised_back_of_hand_tone1": 19, "raised_back_of_hand_tone2": 19, "raised_back_of_hand_tone3": 19, "raised_back_of_hand_tone4": 19, "raised_back_of_hand_tone5": 19, "raised_hand": 19, "raised_hand_tone1": 19, "raised_hand_tone2": 19, "raised_hand_tone3": 19, "raised_hand_tone4": 19, "raised_hand_tone5": 19, "raised_hand_with_fingers_splai": 19, "raised_hand_with_fingers_splayed_tone1": 19, "raised_hand_with_fingers_splayed_tone2": 19, "raised_hand_with_fingers_splayed_tone3": 19, "raised_hand_with_fingers_splayed_tone4": 19, "raised_hand_with_fingers_splayed_tone5": 19, "raised_hand_with_part_between_middle_and_ring_fing": 19, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 19, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 19, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 19, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 19, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 19, "raised_hands_tone1": 19, "raised_hands_tone2": 19, "raised_hands_tone3": 19, "raised_hands_tone4": 19, "raised_hands_tone5": 19, "raising_hand": 19, "raising_hand_man": 19, "raising_hand_tone1": 19, "raising_hand_tone2": 19, "raising_hand_tone3": 19, "raising_hand_tone4": 19, "raising_hand_tone5": 19, "raising_hand_woman": 19, "ram": [19, 194, 195, 199, 316, 867, 869, 984, 1021, 1049, 1066], "ramen": 19, "rat": 19, "razor": 19, "re": [19, 25, 49, 111, 118, 120, 194, 199, 230, 239, 242, 243, 253, 256, 263, 264, 266, 271, 273, 279, 283, 289, 291, 292, 301, 304, 308, 324, 325, 331, 353, 359, 365, 404, 409, 466, 512, 516, 540, 550, 575, 605, 652, 658, 744, 764, 770, 801, 807, 835, 892, 953, 989, 998, 1003, 1058, 1080, 1096, 1100, 1105, 1110, 1129, 1152, 1204, 1208, 1230], "receipt": 19, "record_button": 19, "recycl": 19, "red_car": 19, "red_circl": 19, "red_envelop": 19, "red_hair": 19, "red_squar": 19, "regional_indicator_a": 19, "regional_indicator_b": 19, "regional_indicator_c": 19, "regional_indicator_d": 19, "regional_indicator_": 19, "regional_indicator_f": 19, "regional_indicator_g": 19, "regional_indicator_h": 19, "regional_indicator_i": 19, "regional_indicator_j": 19, "regional_indicator_k": 19, "regional_indicator_l": 19, "regional_indicator_m": 19, "regional_indicator_n": 19, "regional_indicator_o": 19, "regional_indicator_p": 19, "regional_indicator_q": 19, "regional_indicator_r": 19, "regional_indicator_t": 19, "regional_indicator_u": 19, "regional_indicator_v": 19, "regional_indicator_w": 19, "regional_indicator_x": 19, "regional_indicator_z": 19, "regist": [19, 23, 25, 173, 192, 202, 209, 234, 238, 266, 279, 325, 382, 390, 452, 486, 557, 585, 606, 608, 615, 824, 919, 934, 940, 947, 955, 961, 968, 980, 1019, 1023, 1135, 1224], "relax": [19, 824], "reliev": [19, 44], "reminder_ribbon": 19, "repeat": [19, 30, 89, 113, 131, 135, 157, 161, 166, 168, 187, 198, 252, 307, 372, 383, 411, 500, 512, 667, 891, 899, 910, 984, 1008, 1035, 1066, 1143], "repeat_on": 19, "rescue_worker_helmet": 19, "restroom": 19, "reunion": 19, "reversed_hand_with_middle_finger_extend": 19, "reversed_hand_with_middle_finger_extended_tone1": 19, "reversed_hand_with_middle_finger_extended_tone2": 19, "reversed_hand_with_middle_finger_extended_tone3": 19, "reversed_hand_with_middle_finger_extended_tone4": 19, "reversed_hand_with_middle_finger_extended_tone5": 19, "revolving_heart": 19, "rewind": [19, 396, 835], "rhino": 19, "rhinocero": 19, "ribbon": 19, "rice": 19, "rice_bal": 19, "rice_crack": 19, "rice_scen": 19, "right_anger_bubbl": 19, "right_facing_fist": 19, "right_facing_fist_tone1": 19, "right_facing_fist_tone2": 19, "right_facing_fist_tone3": 19, "right_facing_fist_tone4": 19, "right_facing_fist_tone5": 19, "right_fist": 19, "right_fist_tone1": 19, "right_fist_tone2": 19, "right_fist_tone3": 19, "right_fist_tone4": 19, "right_fist_tone5": 19, "ring": [19, 22, 25, 891, 1066], "ringed_planet": 19, "ro": [19, 1042], "robot": [19, 279], "robot_fac": 19, "rock": [19, 320, 510, 1100, 1102, 1237], "rocket": [19, 199], "rofl": 19, "roll_ey": 19, "roll_of_pap": 19, "rolled_up_newspap": 19, "roller_coast": 19, "roller_sk": 19, "rolling_on_the_floor_laugh": 19, "romania": 19, "rooster": 19, "rosett": 19, "rotating_light": 19, "round_pushpin": 19, "rowboat": 19, "rowboat_tone1": 19, "rowboat_tone2": 19, "rowboat_tone3": 19, "rowboat_tone4": 19, "rowboat_tone5": 19, "rowing_man": 19, "rowing_woman": 19, "ru": 19, "rugby_footbal": 19, "runner": [19, 31, 1248, 1276], "runner_tone1": 19, "runner_tone2": 19, "runner_tone3": 19, "runner_tone4": 19, "runner_tone5": 19, "running_man": 19, "running_shirt_with_sash": 19, "running_woman": 19, "russia": [19, 1221], "rw": [19, 47, 49, 155, 193, 194, 203, 210, 279, 289, 544, 797, 861, 873, 876, 887, 890, 910, 913, 928, 934, 936, 937, 940, 948, 1007, 1016, 1027, 1030, 1031, 1039, 1041, 1047, 1077, 1083, 1084, 1085, 1096, 1098, 1099, 1135, 1164], "rwanda": 19, "safety_pin": 19, "safety_vest": 19, "sagittariu": 19, "sailboat": 19, "saint_martin": 19, "sake": 19, "salad": 19, "salt": [19, 887], "samoa": 19, "san_marino": 19, "sandal": 19, "sandwich": 19, "santa": 19, "santa_tone1": 19, "santa_tone2": 19, "santa_tone3": 19, "santa_tone4": 19, "santa_tone5": 19, "sao_tome_princip": 19, "sari": 19, "satellit": 19, "satellite_orbit": 19, "saudi": 19, "saudi_arabia": 19, "saudiarabia": 19, "sauropod": 19, "saxophon": 19, "sb": [19, 308], "sc": [19, 22], "scale": [19, 67, 223, 269, 283, 500, 934, 1066, 1100], "scarf": 19, "school": [19, 283, 384, 591, 626, 761, 1230, 1260], "school_satchel": 19, "scientist": [19, 223, 422, 1132, 1213, 1214, 1215], "scientist_dark_skin_ton": 19, "scientist_light_skin_ton": 19, "scientist_medium_dark_skin_ton": 19, "scientist_medium_light_skin_ton": 19, "scientist_medium_skin_ton": 19, "scientist_tone1": 19, "scientist_tone2": 19, "scientist_tone3": 19, "scientist_tone4": 19, "scientist_tone5": 19, "scissor": 19, "scooter": 19, "scorpion": 19, "scorpiu": 19, "scotland": 19, "scream": [19, 252, 891], "scream_cat": 19, "screwdriv": 19, "scroll": [19, 198, 591], "sd": [19, 53, 171, 172, 173, 174, 263, 279, 283, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 984, 1047], "se": [19, 655], "seal": 19, "seat": 19, "second_plac": 19, "second_place_med": 19, "secret": [19, 728, 810, 1012, 1107, 1219], "see_no_evil": 19, "seedl": 19, "selfi": 19, "selfie_tone1": 19, "selfie_tone2": 19, "selfie_tone3": 19, "selfie_tone4": 19, "selfie_tone5": 19, "seneg": 19, "serbia": 19, "service_dog": 19, "seven": [19, 23, 73, 211, 224, 234, 242, 271, 359, 365, 404, 768, 1176, 1187], "sewing_needl": 19, "seychel": 19, "sg": 19, "sh": [19, 47, 199, 203, 291, 532, 857, 858, 876, 937, 957, 1027, 1037, 1196], "shaking_hand": 19, "shaking_hands_tone1": 19, "shaking_hands_tone2": 19, "shaking_hands_tone3": 19, "shaking_hands_tone4": 19, "shaking_hands_tone5": 19, "shallow_pan_of_food": 19, "shamrock": 19, "shark": 19, "shaved_ic": 19, "sheep": 19, "shelled_peanut": 19, "shield": [19, 192], "shinto_shrin": 19, "ship": [19, 197], "shirt": [19, 30], "shit": [19, 250], "shop": [19, 315], "shopping_bag": 19, "shopping_cart": 19, "shopping_trollei": 19, "shower": 19, "shrimp": 19, "shrug": 19, "shrug_tone1": 19, "shrug_tone2": 19, "shrug_tone3": 19, "shrug_tone4": 19, "shrug_tone5": 19, "shushing_fac": 19, "si": 19, "sick": [19, 555], "sierra_leon": 19, "sign_of_the_horn": 19, "sign_of_the_horns_tone1": 19, "sign_of_the_horns_tone2": 19, "sign_of_the_horns_tone3": 19, "sign_of_the_horns_tone4": 19, "sign_of_the_horns_tone5": 19, "signal_strength": 19, "singapor": 19, "singer": 19, "singer_dark_skin_ton": 19, "singer_light_skin_ton": 19, "singer_medium_dark_skin_ton": 19, "singer_medium_light_skin_ton": 19, "singer_medium_skin_ton": 19, "singer_tone1": 19, "singer_tone2": 19, "singer_tone3": 19, "singer_tone4": 19, "singer_tone5": 19, "sint_maarten": 19, "six": [19, 211, 224, 234, 242, 260, 359, 365, 404, 1143], "six_pointed_star": 19, "sj": 19, "sk": 19, "skateboard": 19, "skeleton": [19, 195, 540, 724, 859], "ski": 19, "skier": 19, "skull": 19, "skull_and_crossbon": 19, "skull_crossbon": 19, "skunk": 19, "sl": [19, 396, 1067], "sled": 19, "sleeping_accommod": 19, "sleeping_b": 19, "sleepi": 19, "sleuth_or_spi": 19, "sleuth_or_spy_tone1": 19, "sleuth_or_spy_tone2": 19, "sleuth_or_spy_tone3": 19, "sleuth_or_spy_tone4": 19, "sleuth_or_spy_tone5": 19, "slight_frown": 19, "slight_smil": 19, "slightly_frowning_fac": 19, "slightly_smiling_fac": 19, "slot_machin": 19, "sloth": 19, "slovakia": 19, "slovenia": [19, 258], "sm": [19, 171], "small_airplan": 19, "small_blue_diamond": 19, "small_orange_diamond": 19, "small_red_triangl": 19, "small_red_triangle_down": 19, "smile": [19, 22], "smile_cat": 19, "smilei": [19, 49], "smiley_cat": 19, "smiling_face_with_3_heart": 19, "smiling_face_with_tear": 19, "smiling_imp": 19, "smirk": 19, "smirk_cat": 19, "smoke": 19, "sn": 19, "snail": 19, "snake": 19, "sneez": 19, "sneezing_fac": 19, "snow_capped_mountain": 19, "snowboard": 19, "snowboarder_dark_skin_ton": 19, "snowboarder_light_skin_ton": 19, "snowboarder_medium_dark_skin_ton": 19, "snowboarder_medium_light_skin_ton": 19, "snowboarder_medium_skin_ton": 19, "snowboarder_tone1": 19, "snowboarder_tone2": 19, "snowboarder_tone3": 19, "snowboarder_tone4": 19, "snowboarder_tone5": 19, "snowflak": 19, "snowman2": 19, "snowman": 19, "snowman_with_snow": 19, "sob": 19, "soccer": 19, "sock": 19, "softbal": 19, "solomon_island": 19, "somalia": 19, "soon": [19, 193, 194, 199, 655, 735, 937, 984, 1047, 1067, 1081, 1224], "sound": [19, 48, 50, 191, 195, 198, 199, 267, 373, 751, 873, 928, 936, 937, 1242], "south_africa": 19, "south_georgia_south_sandwich_island": 19, "south_sudan": 19, "space_invad": 19, "spade": [19, 25], "spaghetti": [19, 118, 500, 511], "spain": 19, "sparkl": 19, "sparkler": 19, "sparkling_heart": 19, "speak_no_evil": 19, "speaker": [19, 783], "speaking_head": 19, "speaking_head_in_silhouett": 19, "speech_balloon": 19, "speech_left": 19, "speedboat": 19, "spider": 19, "spider_web": 19, "spiral_calendar": 19, "spiral_calendar_pad": 19, "spiral_note_pad": 19, "spiral_notepad": 19, "spong": 19, "spoon": 19, "sports_med": 19, "spy": 19, "spy_tone1": 19, "spy_tone2": 19, "spy_tone3": 19, "spy_tone4": 19, "spy_tone5": 19, "squeeze_bottl": 19, "squid": 19, "sr": [19, 263, 1166], "sri_lanka": 19, "ss": [19, 244, 247, 256, 260, 263, 271, 273, 279, 283, 289, 292, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369, 525, 720, 1262, 1267], "st": [19, 257, 512, 1077, 1079, 1080], "st_barthelemi": 19, "st_helena": 19, "st_kitts_nevi": 19, "st_lucia": 19, "st_pierre_miquelon": 19, "st_vincent_grenadin": 19, "stadium": 19, "star2": 19, "star": [19, 25, 691, 937, 1066, 1098], "star_and_cresc": 19, "star_of_david": 19, "star_struck": 19, "station": 19, "statue_of_liberti": 19, "steam_locomot": 19, "stethoscop": 19, "stew": 19, "stop_button": 19, "stop_sign": 19, "stopwatch": 19, "straight_rul": 19, "strawberri": 19, "stuck_out_tongu": 19, "stuck_out_tongue_closed_ey": 19, "stuck_out_tongue_winking_ey": 19, "student": [19, 90, 95, 113, 131, 199, 291, 389, 390, 395, 396, 404, 1108, 1243], "student_dark_skin_ton": 19, "student_light_skin_ton": 19, "student_medium_dark_skin_ton": 19, "student_medium_light_skin_ton": 19, "student_medium_skin_ton": 19, "student_tone1": 19, "student_tone2": 19, "student_tone3": 19, "student_tone4": 19, "student_tone5": 19, "studio_microphon": 19, "stuffed_flatbread": 19, "stuffed_pita": 19, "sudan": 19, "sun_behind_large_cloud": 19, "sun_behind_rain_cloud": 19, "sun_behind_small_cloud": 19, "sun_with_fac": 19, "sunflow": 19, "sunni": [19, 98, 310, 313, 373, 607, 615, 1061, 1107], "sunris": 19, "sunrise_over_mountain": 19, "superhero": 19, "superhero_dark_skin_ton": 19, "superhero_light_skin_ton": 19, "superhero_medium_dark_skin_ton": 19, "superhero_medium_light_skin_ton": 19, "superhero_medium_skin_ton": 19, "superhero_tone1": 19, "superhero_tone2": 19, "superhero_tone3": 19, "superhero_tone4": 19, "superhero_tone5": 19, "supervillain": 19, "supervillain_dark_skin_ton": 19, "supervillain_light_skin_ton": 19, "supervillain_medium_dark_skin_ton": 19, "supervillain_medium_light_skin_ton": 19, "supervillain_medium_skin_ton": 19, "supervillain_tone1": 19, "supervillain_tone2": 19, "supervillain_tone3": 19, "supervillain_tone4": 19, "supervillain_tone5": 19, "surfer": 19, "surfer_tone1": 19, "surfer_tone2": 19, "surfer_tone3": 19, "surfer_tone4": 19, "surfer_tone5": 19, "surfing_man": 19, "surfing_woman": 19, "surinam": 19, "sushi": 19, "suspension_railwai": 19, "sv": [19, 574, 575], "swan": 19, "swaziland": 19, "sweat": 19, "sweat_drop": 19, "sweat_smil": 19, "sweden": 19, "sweet_potato": 19, "swimmer": 19, "swimmer_tone1": 19, "swimmer_tone2": 19, "swimmer_tone3": 19, "swimmer_tone4": 19, "swimmer_tone5": 19, "swimming_man": 19, "swimming_woman": 19, "switzerland": 19, "sx": 19, "sy": [19, 114, 126, 130, 139, 154, 155, 193, 209, 211, 213, 214, 239, 241, 242, 251, 257, 260, 264, 266, 271, 274, 276, 279, 280, 282, 283, 285, 286, 288, 301, 303, 304, 309, 310, 313, 319, 323, 324, 325, 329, 330, 341, 345, 347, 351, 352, 357, 358, 359, 363, 364, 367, 368, 369, 389, 390, 397, 499, 512, 591, 607, 608, 888, 918, 928, 934, 936, 937, 939, 943, 964, 1021, 1022, 1023, 1025, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1039, 1040, 1042, 1043, 1047, 1063, 1071, 1073, 1076, 1080, 1098, 1108, 1115, 1130, 1131, 1150, 1158, 1160, 1170, 1176, 1180, 1183, 1188, 1194, 1233, 1241], "symbol": [19, 20, 25, 113, 135, 156, 203, 231, 252, 260, 266, 269, 276, 279, 297, 306, 307, 327, 328, 371, 372, 441, 492, 493, 797, 809, 876, 891, 911, 913, 936, 940, 959, 961, 984, 1066, 1115, 1267], "synagogu": 19, "syria": 19, "syring": 19, "sz": [19, 194, 197], "t_rex": 19, "ta": 19, "table_tenni": 19, "taco": 19, "tada": 19, "taiwan": 19, "tajikistan": 19, "takeout_box": 19, "tamal": 19, "tanabata_tre": 19, "tangerin": 19, "tanzania": 19, "tauru": 19, "taxi": 19, "tc": 19, "td": [19, 255], "tea": 19, "teacher": [19, 95, 197, 522, 543, 857, 858, 1096], "teacher_dark_skin_ton": 19, "teacher_light_skin_ton": 19, "teacher_medium_dark_skin_ton": 19, "teacher_medium_light_skin_ton": 19, "teacher_medium_skin_ton": 19, "teacher_tone1": 19, "teacher_tone2": 19, "teacher_tone3": 19, "teacher_tone4": 19, "teacher_tone5": 19, "teapot": 19, "technologist": 19, "technologist_dark_skin_ton": 19, "technologist_light_skin_ton": 19, "technologist_medium_dark_skin_ton": 19, "technologist_medium_light_skin_ton": 19, "technologist_medium_skin_ton": 19, "technologist_tone1": 19, "technologist_tone2": 19, "technologist_tone3": 19, "technologist_tone4": 19, "technologist_tone5": 19, "teddy_bear": 19, "telephon": 19, "telephone_receiv": 19, "telescop": 19, "ten": [19, 194, 214, 234, 273, 279, 365, 922], "tenni": 19, "tent": 19, "test_tub": 19, "tf": [19, 286, 856, 1105], "tg": [19, 174, 386], "th": [19, 227, 255, 434, 476, 605, 682, 1145, 1154], "thailand": 19, "thermomet": [19, 59, 71, 73, 74, 218, 227, 279, 299, 382, 408, 410, 411, 413, 547, 557, 559, 568, 569, 582, 636, 637, 645, 937], "thermometer_fac": 19, "thinking_fac": 19, "third_plac": 19, "third_place_med": 19, "thong_sand": 19, "thought_balloon": 19, "thread": [19, 48, 50, 52, 72, 78, 80, 173, 197, 208, 209, 218, 223, 227, 238, 260, 266, 267, 269, 276, 279, 294, 295, 296, 298, 307, 316, 318, 342, 355, 356, 374, 382, 383, 384, 385, 386, 414, 417, 418, 419, 506, 554, 572, 586, 649, 765, 801, 803, 819, 823, 824, 825, 835, 839, 845, 847, 966, 976, 982, 996, 1004, 1017, 1036, 1053, 1055, 1056, 1058, 1060, 1064, 1065, 1066, 1068, 1079, 1080, 1081, 1118, 1119, 1208, 1250, 1257, 1258, 1259, 1260, 1268, 1270, 1271], "three": [19, 23, 25, 30, 49, 99, 100, 118, 146, 154, 161, 193, 205, 207, 211, 212, 223, 224, 227, 228, 234, 239, 241, 242, 244, 250, 258, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 309, 310, 311, 313, 319, 320, 321, 325, 330, 331, 343, 347, 353, 359, 365, 369, 373, 384, 404, 422, 490, 528, 684, 722, 848, 863, 864, 873, 876, 891, 928, 934, 937, 1025, 1066, 1067, 1076, 1112, 1122, 1140, 1144, 1154, 1156, 1158, 1170, 1177, 1207, 1208, 1257, 1259, 1260, 1270, 1279], "three_button_mous": 19, "thumbdown": 19, "thumbdown_tone1": 19, "thumbdown_tone2": 19, "thumbdown_tone3": 19, "thumbdown_tone4": 19, "thumbdown_tone5": 19, "thumbsdown_tone1": 19, "thumbsdown_tone2": 19, "thumbsdown_tone3": 19, "thumbsdown_tone4": 19, "thumbsdown_tone5": 19, "thumbsup_tone1": 19, "thumbsup_tone2": 19, "thumbsup_tone3": 19, "thumbsup_tone4": 19, "thumbsup_tone5": 19, "thumbup": 19, "thumbup_tone1": 19, "thumbup_tone2": 19, "thumbup_tone3": 19, "thumbup_tone4": 19, "thumbup_tone5": 19, "thunder_cloud_and_rain": 19, "thunder_cloud_rain": 19, "ticket": 19, "tiger2": 19, "tiger": 19, "timer": [19, 48, 50, 52, 113, 125, 215, 316, 491, 757, 863, 864, 867, 936, 986, 1003, 1020, 1024, 1064, 1066, 1071, 1073, 1081, 1268, 1272], "timer_clock": 19, "timor_lest": 19, "tipping_hand_man": 19, "tipping_hand_woman": 19, "tired_fac": 19, "tj": 19, "tk": 19, "tl": [19, 171, 173, 197], "tm": 19, "tn": [19, 231], "togo": 19, "toilet": [19, 269, 626, 974, 1118], "tokelau": 19, "tokyo_tow": 19, "tomato": [19, 174], "tone1": 19, "tone2": 19, "tone3": 19, "tone4": 19, "tone5": 19, "tonga": 19, "tongu": [19, 1258], "toolbox": [19, 212], "tool": [19, 47, 58, 113, 136, 139, 169, 173, 199, 203, 205, 207, 223, 231, 233, 243, 253, 279, 297, 306, 321, 326, 327, 333, 334, 344, 349, 350, 359, 371, 376, 378, 379, 382, 404, 407, 409, 422, 423, 468, 503, 505, 506, 510, 532, 724, 742, 770, 809, 853, 860, 861, 875, 937, 1016, 1019, 1066, 1084, 1085, 1086, 1094, 1098, 1099, 1132, 1133, 1136, 1164, 1227, 1256, 1258, 1260, 1262, 1264, 1267, 1274, 1281], "tooth": 19, "toothbrush": 19, "tophat": 19, "tornado": 19, "tr": [19, 255], "track_next": 19, "track_previ": 19, "trackbal": 19, "tractor": 19, "traffic_light": 19, "train2": 19, "tram": 19, "transgender_flag": 19, "transgender_symbol": 19, "triangular_flag_on_post": 19, "triangular_rul": 19, "trident": 19, "trinidad_tobago": 19, "tristan_da_cunha": 19, "triumph": 19, "trolleybu": 19, "trophi": 19, "tropical_drink": 19, "tropical_fish": 19, "truck": 19, "trumpet": 19, "tt": 19, "tulip": 19, "tumbler_glass": 19, "tunisia": 19, "turkei": 19, "turkmenistan": 19, "turks_caicos_island": 19, "turtl": 19, "tuvalu": 19, "tuxedo_tone1": 19, "tuxedo_tone2": 19, "tuxedo_tone3": 19, "tuxedo_tone4": 19, "tuxedo_tone5": 19, "tw": 19, "twisted_rightwards_arrow": 19, "two": [19, 21, 22, 23, 25, 29, 31, 41, 52, 59, 74, 95, 122, 154, 159, 166, 168, 185, 187, 190, 191, 192, 193, 194, 211, 212, 213, 219, 223, 224, 229, 234, 235, 237, 239, 241, 242, 244, 247, 250, 252, 253, 254, 258, 260, 261, 264, 266, 269, 270, 271, 273, 274, 279, 280, 282, 283, 285, 287, 288, 289, 301, 303, 304, 307, 309, 310, 311, 319, 321, 323, 324, 325, 329, 330, 331, 335, 338, 347, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 369, 373, 382, 387, 390, 396, 404, 410, 413, 422, 433, 440, 470, 476, 478, 479, 484, 488, 491, 493, 496, 510, 511, 512, 516, 523, 524, 528, 537, 540, 558, 560, 570, 574, 575, 594, 604, 606, 626, 634, 637, 643, 659, 663, 665, 682, 704, 706, 751, 753, 755, 764, 768, 800, 809, 824, 831, 834, 835, 837, 845, 848, 849, 896, 898, 919, 928, 930, 934, 936, 937, 982, 984, 987, 1022, 1025, 1026, 1033, 1052, 1053, 1061, 1066, 1067, 1076, 1081, 1092, 1102, 1110, 1116, 1119, 1122, 1127, 1130, 1137, 1140, 1143, 1154, 1156, 1158, 1165, 1171, 1177, 1178, 1181, 1194, 1204, 1207, 1213, 1215, 1221, 1228, 1242, 1248, 1258, 1270, 1278, 1279], "two_heart": 19, "two_men_holding_hand": 19, "two_women_holding_hand": 19, "tz": 19, "u5272": 19, "u5408": 19, "u55b6": 19, "u6307": 19, "u6708": 19, "u6709": 19, "u6e80": 19, "u7121": 19, "u7533": 19, "u7981": 19, "u7a7a": 19, "ua": [19, 258, 267, 342], "ug": 19, "uganda": 19, "ukrain": 19, "umbrella2": 19, "umbrella": 19, "umbrella_on_ground": 19, "unamus": 19, "underag": 19, "unicorn": 19, "unicorn_fac": 19, "united_arab_emir": 19, "united_n": 19, "united_st": 19, "unlock": [19, 765, 819, 822, 824, 825, 976, 982, 1053], "upside_down": 19, "upside_down_fac": 19, "urn": 19, "uruguai": 19, "us_virgin_island": 19, "ui": [19, 54, 199, 449, 720], "uz": 19, "uzbekistan": 19, "v_tone1": 19, "v_tone2": 19, "v_tone3": 19, "v_tone4": 19, "v_tone5": 19, "va": [19, 310, 313], "vampir": 19, "vampire_dark_skin_ton": 19, "vampire_light_skin_ton": 19, "vampire_medium_dark_skin_ton": 19, "vampire_medium_light_skin_ton": 19, "vampire_medium_skin_ton": 19, "vampire_tone1": 19, "vampire_tone2": 19, "vampire_tone3": 19, "vampire_tone4": 19, "vampire_tone5": 19, "vanuatu": 19, "vatican_c": 19, "vc": [19, 170, 198], "ve": [19, 192, 194, 873, 1242], "venezuela": 19, "vertical_traffic_light": 19, "vg": 19, "vh": 19, "vi": [19, 747], "vibration_mod": 19, "video_camera": 19, "video_gam": 19, "vietnam": 19, "violin": 19, "virgo": 19, "vn": 19, "volcano": 19, "volleybal": 19, "vu": 19, "vulcan": 19, "vulcan_salut": 19, "vulcan_tone1": 19, "vulcan_tone2": 19, "vulcan_tone3": 19, "vulcan_tone4": 19, "vulcan_tone5": 19, "waffl": 19, "wale": 19, "walk": [19, 191, 210, 223, 319, 320, 341, 368, 370, 372, 375, 411, 422, 759, 800, 875, 937, 1120], "walking_man": 19, "walking_tone1": 19, "walking_tone2": 19, "walking_tone3": 19, "walking_tone4": 19, "walking_tone5": 19, "walking_woman": 19, "wallis_futuna": 19, "waning_crescent_moon": 19, "waning_gibbous_moon": 19, "warn": [19, 27, 131, 203, 243, 253, 304, 316, 385, 401, 412, 436, 460, 491, 492, 494, 529, 532, 541, 549, 604, 606, 650, 654, 705, 748, 801, 815, 849, 868, 953, 959, 961, 1025, 1059, 1082, 1107, 1158, 1236], "wastebasket": 19, "water_buffalo": 19, "water_polo": 19, "water_polo_tone1": 19, "water_polo_tone2": 19, "water_polo_tone3": 19, "water_polo_tone4": 19, "water_polo_tone5": 19, "watermelon": [19, 315], "wave": [19, 21, 25, 307, 324], "wave_tone1": 19, "wave_tone2": 19, "wave_tone3": 19, "wave_tone4": 19, "wave_tone5": 19, "waving_black_flag": 19, "waving_white_flag": 19, "wavy_dash": 19, "waxing_crescent_moon": 19, "waxing_gibbous_moon": 19, "wc": [19, 251, 252, 269, 289, 441, 512, 871, 874, 925, 1006, 1193], "weari": 19, "wed": [19, 250], "weight_lift": 19, "weight_lifter_tone1": 19, "weight_lifter_tone2": 19, "weight_lifter_tone3": 19, "weight_lifter_tone4": 19, "weight_lifter_tone5": 19, "weight_lifting_man": 19, "weight_lifting_woman": 19, "western_sahara": 19, "wf": 19, "whale2": 19, "whale": 19, "wheel_of_dharma": 19, "wheelchair": 19, "whiski": 19, "white_check_mark": 19, "white_circl": 19, "white_flag": 19, "white_flow": 19, "white_frowning_fac": 19, "white_hair": 19, "white_heart": 19, "white_large_squar": 19, "white_medium_small_squar": 19, "white_medium_squar": 19, "white_small_squar": 19, "white_square_button": 19, "white_sun_behind_cloud": 19, "white_sun_behind_cloud_with_rain": 19, "white_sun_cloud": 19, "white_sun_rain_cloud": 19, "white_sun_small_cloud": 19, "white_sun_with_small_cloud": 19, "wilted_flow": 19, "wilted_ros": 19, "wind_blowing_fac": 19, "wind_chim": 19, "wind_fac": 19, "wine_glass": 19, "wolf": 19, "woman": 19, "woman_and_man_holding_hands_dark_skin_ton": 19, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 19, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 19, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 19, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 19, "woman_and_man_holding_hands_light_skin_ton": 19, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 19, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 19, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 19, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 19, "woman_and_man_holding_hands_medium_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 19, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 19, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 19, "woman_and_man_holding_hands_medium_light_skin_ton": 19, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 19, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 19, "woman_and_man_holding_hands_medium_skin_ton": 19, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 19, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 19, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 19, "woman_and_man_holding_hands_tone1": 19, "woman_and_man_holding_hands_tone1_tone2": 19, "woman_and_man_holding_hands_tone1_tone3": 19, "woman_and_man_holding_hands_tone1_tone4": 19, "woman_and_man_holding_hands_tone1_tone5": 19, "woman_and_man_holding_hands_tone2": 19, "woman_and_man_holding_hands_tone2_tone1": 19, "woman_and_man_holding_hands_tone2_tone3": 19, "woman_and_man_holding_hands_tone2_tone4": 19, "woman_and_man_holding_hands_tone2_tone5": 19, "woman_and_man_holding_hands_tone3": 19, "woman_and_man_holding_hands_tone3_tone1": 19, "woman_and_man_holding_hands_tone3_tone2": 19, "woman_and_man_holding_hands_tone3_tone4": 19, "woman_and_man_holding_hands_tone3_tone5": 19, "woman_and_man_holding_hands_tone4": 19, "woman_and_man_holding_hands_tone4_tone1": 19, "woman_and_man_holding_hands_tone4_tone2": 19, "woman_and_man_holding_hands_tone4_tone3": 19, "woman_and_man_holding_hands_tone4_tone5": 19, "woman_and_man_holding_hands_tone5": 19, "woman_and_man_holding_hands_tone5_tone1": 19, "woman_and_man_holding_hands_tone5_tone2": 19, "woman_and_man_holding_hands_tone5_tone3": 19, "woman_and_man_holding_hands_tone5_tone4": 19, "woman_artist": 19, "woman_artist_dark_skin_ton": 19, "woman_artist_light_skin_ton": 19, "woman_artist_medium_dark_skin_ton": 19, "woman_artist_medium_light_skin_ton": 19, "woman_artist_medium_skin_ton": 19, "woman_artist_tone1": 19, "woman_artist_tone2": 19, "woman_artist_tone3": 19, "woman_artist_tone4": 19, "woman_artist_tone5": 19, "woman_astronaut": 19, "woman_astronaut_dark_skin_ton": 19, "woman_astronaut_light_skin_ton": 19, "woman_astronaut_medium_dark_skin_ton": 19, "woman_astronaut_medium_light_skin_ton": 19, "woman_astronaut_medium_skin_ton": 19, "woman_astronaut_tone1": 19, "woman_astronaut_tone2": 19, "woman_astronaut_tone3": 19, "woman_astronaut_tone4": 19, "woman_astronaut_tone5": 19, "woman_bald": 19, "woman_bald_dark_skin_ton": 19, "woman_bald_light_skin_ton": 19, "woman_bald_medium_dark_skin_ton": 19, "woman_bald_medium_light_skin_ton": 19, "woman_bald_medium_skin_ton": 19, "woman_bald_tone1": 19, "woman_bald_tone2": 19, "woman_bald_tone3": 19, "woman_bald_tone4": 19, "woman_bald_tone5": 19, "woman_beard": 19, "woman_bik": 19, "woman_biking_dark_skin_ton": 19, "woman_biking_light_skin_ton": 19, "woman_biking_medium_dark_skin_ton": 19, "woman_biking_medium_light_skin_ton": 19, "woman_biking_medium_skin_ton": 19, "woman_biking_tone1": 19, "woman_biking_tone2": 19, "woman_biking_tone3": 19, "woman_biking_tone4": 19, "woman_biking_tone5": 19, "woman_bouncing_bal": 19, "woman_bouncing_ball_dark_skin_ton": 19, "woman_bouncing_ball_light_skin_ton": 19, "woman_bouncing_ball_medium_dark_skin_ton": 19, "woman_bouncing_ball_medium_light_skin_ton": 19, "woman_bouncing_ball_medium_skin_ton": 19, "woman_bouncing_ball_tone1": 19, "woman_bouncing_ball_tone2": 19, "woman_bouncing_ball_tone3": 19, "woman_bouncing_ball_tone4": 19, "woman_bouncing_ball_tone5": 19, "woman_bow": 19, "woman_bowing_dark_skin_ton": 19, "woman_bowing_light_skin_ton": 19, "woman_bowing_medium_dark_skin_ton": 19, "woman_bowing_medium_light_skin_ton": 19, "woman_bowing_medium_skin_ton": 19, "woman_bowing_tone1": 19, "woman_bowing_tone2": 19, "woman_bowing_tone3": 19, "woman_bowing_tone4": 19, "woman_bowing_tone5": 19, "woman_cartwheel": 19, "woman_cartwheeling_dark_skin_ton": 19, "woman_cartwheeling_light_skin_ton": 19, "woman_cartwheeling_medium_dark_skin_ton": 19, "woman_cartwheeling_medium_light_skin_ton": 19, "woman_cartwheeling_medium_skin_ton": 19, "woman_cartwheeling_tone1": 19, "woman_cartwheeling_tone2": 19, "woman_cartwheeling_tone3": 19, "woman_cartwheeling_tone4": 19, "woman_cartwheeling_tone5": 19, "woman_climb": 19, "woman_climbing_dark_skin_ton": 19, "woman_climbing_light_skin_ton": 19, "woman_climbing_medium_dark_skin_ton": 19, "woman_climbing_medium_light_skin_ton": 19, "woman_climbing_medium_skin_ton": 19, "woman_climbing_tone1": 19, "woman_climbing_tone2": 19, "woman_climbing_tone3": 19, "woman_climbing_tone4": 19, "woman_climbing_tone5": 19, "woman_construction_work": 19, "woman_construction_worker_dark_skin_ton": 19, "woman_construction_worker_light_skin_ton": 19, "woman_construction_worker_medium_dark_skin_ton": 19, "woman_construction_worker_medium_light_skin_ton": 19, "woman_construction_worker_medium_skin_ton": 19, "woman_construction_worker_tone1": 19, "woman_construction_worker_tone2": 19, "woman_construction_worker_tone3": 19, "woman_construction_worker_tone4": 19, "woman_construction_worker_tone5": 19, "woman_cook": 19, "woman_cook_dark_skin_ton": 19, "woman_cook_light_skin_ton": 19, "woman_cook_medium_dark_skin_ton": 19, "woman_cook_medium_light_skin_ton": 19, "woman_cook_medium_skin_ton": 19, "woman_cook_tone1": 19, "woman_cook_tone2": 19, "woman_cook_tone3": 19, "woman_cook_tone4": 19, "woman_cook_tone5": 19, "woman_curly_hair": 19, "woman_curly_haired_dark_skin_ton": 19, "woman_curly_haired_light_skin_ton": 19, "woman_curly_haired_medium_dark_skin_ton": 19, "woman_curly_haired_medium_light_skin_ton": 19, "woman_curly_haired_medium_skin_ton": 19, "woman_curly_haired_tone1": 19, "woman_curly_haired_tone2": 19, "woman_curly_haired_tone3": 19, "woman_curly_haired_tone4": 19, "woman_curly_haired_tone5": 19, "woman_dark_skin_tone_beard": 19, "woman_detect": 19, "woman_detective_dark_skin_ton": 19, "woman_detective_light_skin_ton": 19, "woman_detective_medium_dark_skin_ton": 19, "woman_detective_medium_light_skin_ton": 19, "woman_detective_medium_skin_ton": 19, "woman_detective_tone1": 19, "woman_detective_tone2": 19, "woman_detective_tone3": 19, "woman_detective_tone4": 19, "woman_detective_tone5": 19, "woman_elf": 19, "woman_elf_dark_skin_ton": 19, "woman_elf_light_skin_ton": 19, "woman_elf_medium_dark_skin_ton": 19, "woman_elf_medium_light_skin_ton": 19, "woman_elf_medium_skin_ton": 19, "woman_elf_tone1": 19, "woman_elf_tone2": 19, "woman_elf_tone3": 19, "woman_elf_tone4": 19, "woman_elf_tone5": 19, "woman_facepalm": 19, "woman_facepalming_dark_skin_ton": 19, "woman_facepalming_light_skin_ton": 19, "woman_facepalming_medium_dark_skin_ton": 19, "woman_facepalming_medium_light_skin_ton": 19, "woman_facepalming_medium_skin_ton": 19, "woman_facepalming_tone1": 19, "woman_facepalming_tone2": 19, "woman_facepalming_tone3": 19, "woman_facepalming_tone4": 19, "woman_facepalming_tone5": 19, "woman_factory_work": 19, "woman_factory_worker_dark_skin_ton": 19, "woman_factory_worker_light_skin_ton": 19, "woman_factory_worker_medium_dark_skin_ton": 19, "woman_factory_worker_medium_light_skin_ton": 19, "woman_factory_worker_medium_skin_ton": 19, "woman_factory_worker_tone1": 19, "woman_factory_worker_tone2": 19, "woman_factory_worker_tone3": 19, "woman_factory_worker_tone4": 19, "woman_factory_worker_tone5": 19, "woman_fairi": 19, "woman_fairy_dark_skin_ton": 19, "woman_fairy_light_skin_ton": 19, "woman_fairy_medium_dark_skin_ton": 19, "woman_fairy_medium_light_skin_ton": 19, "woman_fairy_medium_skin_ton": 19, "woman_fairy_tone1": 19, "woman_fairy_tone2": 19, "woman_fairy_tone3": 19, "woman_fairy_tone4": 19, "woman_fairy_tone5": 19, "woman_farm": 19, "woman_farmer_dark_skin_ton": 19, "woman_farmer_light_skin_ton": 19, "woman_farmer_medium_dark_skin_ton": 19, "woman_farmer_medium_light_skin_ton": 19, "woman_farmer_medium_skin_ton": 19, "woman_farmer_tone1": 19, "woman_farmer_tone2": 19, "woman_farmer_tone3": 19, "woman_farmer_tone4": 19, "woman_farmer_tone5": 19, "woman_feeding_babi": 19, "woman_feeding_baby_dark_skin_ton": 19, "woman_feeding_baby_light_skin_ton": 19, "woman_feeding_baby_medium_dark_skin_ton": 19, "woman_feeding_baby_medium_light_skin_ton": 19, "woman_feeding_baby_medium_skin_ton": 19, "woman_feeding_baby_tone1": 19, "woman_feeding_baby_tone2": 19, "woman_feeding_baby_tone3": 19, "woman_feeding_baby_tone4": 19, "woman_feeding_baby_tone5": 19, "woman_firefight": 19, "woman_firefighter_dark_skin_ton": 19, "woman_firefighter_light_skin_ton": 19, "woman_firefighter_medium_dark_skin_ton": 19, "woman_firefighter_medium_light_skin_ton": 19, "woman_firefighter_medium_skin_ton": 19, "woman_firefighter_tone1": 19, "woman_firefighter_tone2": 19, "woman_firefighter_tone3": 19, "woman_firefighter_tone4": 19, "woman_firefighter_tone5": 19, "woman_frown": 19, "woman_frowning_dark_skin_ton": 19, "woman_frowning_light_skin_ton": 19, "woman_frowning_medium_dark_skin_ton": 19, "woman_frowning_medium_light_skin_ton": 19, "woman_frowning_medium_skin_ton": 19, "woman_frowning_tone1": 19, "woman_frowning_tone2": 19, "woman_frowning_tone3": 19, "woman_frowning_tone4": 19, "woman_frowning_tone5": 19, "woman_geni": 19, "woman_gesturing_no": 19, "woman_gesturing_no_dark_skin_ton": 19, "woman_gesturing_no_light_skin_ton": 19, "woman_gesturing_no_medium_dark_skin_ton": 19, "woman_gesturing_no_medium_light_skin_ton": 19, "woman_gesturing_no_medium_skin_ton": 19, "woman_gesturing_no_tone1": 19, "woman_gesturing_no_tone2": 19, "woman_gesturing_no_tone3": 19, "woman_gesturing_no_tone4": 19, "woman_gesturing_no_tone5": 19, "woman_gesturing_ok": 19, "woman_gesturing_ok_dark_skin_ton": 19, "woman_gesturing_ok_light_skin_ton": 19, "woman_gesturing_ok_medium_dark_skin_ton": 19, "woman_gesturing_ok_medium_light_skin_ton": 19, "woman_gesturing_ok_medium_skin_ton": 19, "woman_gesturing_ok_tone1": 19, "woman_gesturing_ok_tone2": 19, "woman_gesturing_ok_tone3": 19, "woman_gesturing_ok_tone4": 19, "woman_gesturing_ok_tone5": 19, "woman_getting_face_massag": 19, "woman_getting_face_massage_dark_skin_ton": 19, "woman_getting_face_massage_light_skin_ton": 19, "woman_getting_face_massage_medium_dark_skin_ton": 19, "woman_getting_face_massage_medium_light_skin_ton": 19, "woman_getting_face_massage_medium_skin_ton": 19, "woman_getting_face_massage_tone1": 19, "woman_getting_face_massage_tone2": 19, "woman_getting_face_massage_tone3": 19, "woman_getting_face_massage_tone4": 19, "woman_getting_face_massage_tone5": 19, "woman_getting_haircut": 19, "woman_getting_haircut_dark_skin_ton": 19, "woman_getting_haircut_light_skin_ton": 19, "woman_getting_haircut_medium_dark_skin_ton": 19, "woman_getting_haircut_medium_light_skin_ton": 19, "woman_getting_haircut_medium_skin_ton": 19, "woman_getting_haircut_tone1": 19, "woman_getting_haircut_tone2": 19, "woman_getting_haircut_tone3": 19, "woman_getting_haircut_tone4": 19, "woman_getting_haircut_tone5": 19, "woman_golf": 19, "woman_golfing_dark_skin_ton": 19, "woman_golfing_light_skin_ton": 19, "woman_golfing_medium_dark_skin_ton": 19, "woman_golfing_medium_light_skin_ton": 19, "woman_golfing_medium_skin_ton": 19, "woman_golfing_tone1": 19, "woman_golfing_tone2": 19, "woman_golfing_tone3": 19, "woman_golfing_tone4": 19, "woman_golfing_tone5": 19, "woman_guard": 19, "woman_guard_dark_skin_ton": 19, "woman_guard_light_skin_ton": 19, "woman_guard_medium_dark_skin_ton": 19, "woman_guard_medium_light_skin_ton": 19, "woman_guard_medium_skin_ton": 19, "woman_guard_tone1": 19, "woman_guard_tone2": 19, "woman_guard_tone3": 19, "woman_guard_tone4": 19, "woman_guard_tone5": 19, "woman_health_work": 19, "woman_health_worker_dark_skin_ton": 19, "woman_health_worker_light_skin_ton": 19, "woman_health_worker_medium_dark_skin_ton": 19, "woman_health_worker_medium_light_skin_ton": 19, "woman_health_worker_medium_skin_ton": 19, "woman_health_worker_tone1": 19, "woman_health_worker_tone2": 19, "woman_health_worker_tone3": 19, "woman_health_worker_tone4": 19, "woman_health_worker_tone5": 19, "woman_in_lotus_posit": 19, "woman_in_lotus_position_dark_skin_ton": 19, "woman_in_lotus_position_light_skin_ton": 19, "woman_in_lotus_position_medium_dark_skin_ton": 19, "woman_in_lotus_position_medium_light_skin_ton": 19, "woman_in_lotus_position_medium_skin_ton": 19, "woman_in_lotus_position_tone1": 19, "woman_in_lotus_position_tone2": 19, "woman_in_lotus_position_tone3": 19, "woman_in_lotus_position_tone4": 19, "woman_in_lotus_position_tone5": 19, "woman_in_manual_wheelchair": 19, "woman_in_manual_wheelchair_dark_skin_ton": 19, "woman_in_manual_wheelchair_light_skin_ton": 19, "woman_in_manual_wheelchair_medium_dark_skin_ton": 19, "woman_in_manual_wheelchair_medium_light_skin_ton": 19, "woman_in_manual_wheelchair_medium_skin_ton": 19, "woman_in_manual_wheelchair_tone1": 19, "woman_in_manual_wheelchair_tone2": 19, "woman_in_manual_wheelchair_tone3": 19, "woman_in_manual_wheelchair_tone4": 19, "woman_in_manual_wheelchair_tone5": 19, "woman_in_motorized_wheelchair": 19, "woman_in_motorized_wheelchair_dark_skin_ton": 19, "woman_in_motorized_wheelchair_light_skin_ton": 19, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 19, "woman_in_motorized_wheelchair_medium_light_skin_ton": 19, "woman_in_motorized_wheelchair_medium_skin_ton": 19, "woman_in_motorized_wheelchair_tone1": 19, "woman_in_motorized_wheelchair_tone2": 19, "woman_in_motorized_wheelchair_tone3": 19, "woman_in_motorized_wheelchair_tone4": 19, "woman_in_motorized_wheelchair_tone5": 19, "woman_in_steamy_room": 19, "woman_in_steamy_room_dark_skin_ton": 19, "woman_in_steamy_room_light_skin_ton": 19, "woman_in_steamy_room_medium_dark_skin_ton": 19, "woman_in_steamy_room_medium_light_skin_ton": 19, "woman_in_steamy_room_medium_skin_ton": 19, "woman_in_steamy_room_tone1": 19, "woman_in_steamy_room_tone2": 19, "woman_in_steamy_room_tone3": 19, "woman_in_steamy_room_tone4": 19, "woman_in_steamy_room_tone5": 19, "woman_in_tuxedo": 19, "woman_in_tuxedo_dark_skin_ton": 19, "woman_in_tuxedo_light_skin_ton": 19, "woman_in_tuxedo_medium_dark_skin_ton": 19, "woman_in_tuxedo_medium_light_skin_ton": 19, "woman_in_tuxedo_medium_skin_ton": 19, "woman_in_tuxedo_tone1": 19, "woman_in_tuxedo_tone2": 19, "woman_in_tuxedo_tone3": 19, "woman_in_tuxedo_tone4": 19, "woman_in_tuxedo_tone5": 19, "woman_judg": 19, "woman_judge_dark_skin_ton": 19, "woman_judge_light_skin_ton": 19, "woman_judge_medium_dark_skin_ton": 19, "woman_judge_medium_light_skin_ton": 19, "woman_judge_medium_skin_ton": 19, "woman_judge_tone1": 19, "woman_judge_tone2": 19, "woman_judge_tone3": 19, "woman_judge_tone4": 19, "woman_judge_tone5": 19, "woman_juggl": 19, "woman_juggling_dark_skin_ton": 19, "woman_juggling_light_skin_ton": 19, "woman_juggling_medium_dark_skin_ton": 19, "woman_juggling_medium_light_skin_ton": 19, "woman_juggling_medium_skin_ton": 19, "woman_juggling_tone1": 19, "woman_juggling_tone2": 19, "woman_juggling_tone3": 19, "woman_juggling_tone4": 19, "woman_juggling_tone5": 19, "woman_kneel": 19, "woman_kneeling_dark_skin_ton": 19, "woman_kneeling_light_skin_ton": 19, "woman_kneeling_medium_dark_skin_ton": 19, "woman_kneeling_medium_light_skin_ton": 19, "woman_kneeling_medium_skin_ton": 19, "woman_kneeling_tone1": 19, "woman_kneeling_tone2": 19, "woman_kneeling_tone3": 19, "woman_kneeling_tone4": 19, "woman_kneeling_tone5": 19, "woman_lifting_weight": 19, "woman_lifting_weights_dark_skin_ton": 19, "woman_lifting_weights_light_skin_ton": 19, "woman_lifting_weights_medium_dark_skin_ton": 19, "woman_lifting_weights_medium_light_skin_ton": 19, "woman_lifting_weights_medium_skin_ton": 19, "woman_lifting_weights_tone1": 19, "woman_lifting_weights_tone2": 19, "woman_lifting_weights_tone3": 19, "woman_lifting_weights_tone4": 19, "woman_lifting_weights_tone5": 19, "woman_light_skin_tone_beard": 19, "woman_mag": 19, "woman_mage_dark_skin_ton": 19, "woman_mage_light_skin_ton": 19, "woman_mage_medium_dark_skin_ton": 19, "woman_mage_medium_light_skin_ton": 19, "woman_mage_medium_skin_ton": 19, "woman_mage_tone1": 19, "woman_mage_tone2": 19, "woman_mage_tone3": 19, "woman_mage_tone4": 19, "woman_mage_tone5": 19, "woman_mechan": 19, "woman_mechanic_dark_skin_ton": 19, "woman_mechanic_light_skin_ton": 19, "woman_mechanic_medium_dark_skin_ton": 19, "woman_mechanic_medium_light_skin_ton": 19, "woman_mechanic_medium_skin_ton": 19, "woman_mechanic_tone1": 19, "woman_mechanic_tone2": 19, "woman_mechanic_tone3": 19, "woman_mechanic_tone4": 19, "woman_mechanic_tone5": 19, "woman_medium_dark_skin_tone_beard": 19, "woman_medium_light_skin_tone_beard": 19, "woman_medium_skin_tone_beard": 19, "woman_mountain_bik": 19, "woman_mountain_biking_dark_skin_ton": 19, "woman_mountain_biking_light_skin_ton": 19, "woman_mountain_biking_medium_dark_skin_ton": 19, "woman_mountain_biking_medium_light_skin_ton": 19, "woman_mountain_biking_medium_skin_ton": 19, "woman_mountain_biking_tone1": 19, "woman_mountain_biking_tone2": 19, "woman_mountain_biking_tone3": 19, "woman_mountain_biking_tone4": 19, "woman_mountain_biking_tone5": 19, "woman_office_work": 19, "woman_office_worker_dark_skin_ton": 19, "woman_office_worker_light_skin_ton": 19, "woman_office_worker_medium_dark_skin_ton": 19, "woman_office_worker_medium_light_skin_ton": 19, "woman_office_worker_medium_skin_ton": 19, "woman_office_worker_tone1": 19, "woman_office_worker_tone2": 19, "woman_office_worker_tone3": 19, "woman_office_worker_tone4": 19, "woman_office_worker_tone5": 19, "woman_pilot": 19, "woman_pilot_dark_skin_ton": 19, "woman_pilot_light_skin_ton": 19, "woman_pilot_medium_dark_skin_ton": 19, "woman_pilot_medium_light_skin_ton": 19, "woman_pilot_medium_skin_ton": 19, "woman_pilot_tone1": 19, "woman_pilot_tone2": 19, "woman_pilot_tone3": 19, "woman_pilot_tone4": 19, "woman_pilot_tone5": 19, "woman_playing_handbal": 19, "woman_playing_handball_dark_skin_ton": 19, "woman_playing_handball_light_skin_ton": 19, "woman_playing_handball_medium_dark_skin_ton": 19, "woman_playing_handball_medium_light_skin_ton": 19, "woman_playing_handball_medium_skin_ton": 19, "woman_playing_handball_tone1": 19, "woman_playing_handball_tone2": 19, "woman_playing_handball_tone3": 19, "woman_playing_handball_tone4": 19, "woman_playing_handball_tone5": 19, "woman_playing_water_polo": 19, "woman_playing_water_polo_dark_skin_ton": 19, "woman_playing_water_polo_light_skin_ton": 19, "woman_playing_water_polo_medium_dark_skin_ton": 19, "woman_playing_water_polo_medium_light_skin_ton": 19, "woman_playing_water_polo_medium_skin_ton": 19, "woman_playing_water_polo_tone1": 19, "woman_playing_water_polo_tone2": 19, "woman_playing_water_polo_tone3": 19, "woman_playing_water_polo_tone4": 19, "woman_playing_water_polo_tone5": 19, "woman_police_offic": 19, "woman_police_officer_dark_skin_ton": 19, "woman_police_officer_light_skin_ton": 19, "woman_police_officer_medium_dark_skin_ton": 19, "woman_police_officer_medium_light_skin_ton": 19, "woman_police_officer_medium_skin_ton": 19, "woman_police_officer_tone1": 19, "woman_police_officer_tone2": 19, "woman_police_officer_tone3": 19, "woman_police_officer_tone4": 19, "woman_police_officer_tone5": 19, "woman_pout": 19, "woman_pouting_dark_skin_ton": 19, "woman_pouting_light_skin_ton": 19, "woman_pouting_medium_dark_skin_ton": 19, "woman_pouting_medium_light_skin_ton": 19, "woman_pouting_medium_skin_ton": 19, "woman_pouting_tone1": 19, "woman_pouting_tone2": 19, "woman_pouting_tone3": 19, "woman_pouting_tone4": 19, "woman_pouting_tone5": 19, "woman_raising_hand": 19, "woman_raising_hand_dark_skin_ton": 19, "woman_raising_hand_light_skin_ton": 19, "woman_raising_hand_medium_dark_skin_ton": 19, "woman_raising_hand_medium_light_skin_ton": 19, "woman_raising_hand_medium_skin_ton": 19, "woman_raising_hand_tone1": 19, "woman_raising_hand_tone2": 19, "woman_raising_hand_tone3": 19, "woman_raising_hand_tone4": 19, "woman_raising_hand_tone5": 19, "woman_red_hair": 19, "woman_red_haired_dark_skin_ton": 19, "woman_red_haired_light_skin_ton": 19, "woman_red_haired_medium_dark_skin_ton": 19, "woman_red_haired_medium_light_skin_ton": 19, "woman_red_haired_medium_skin_ton": 19, "woman_red_haired_tone1": 19, "woman_red_haired_tone2": 19, "woman_red_haired_tone3": 19, "woman_red_haired_tone4": 19, "woman_red_haired_tone5": 19, "woman_rowing_boat": 19, "woman_rowing_boat_dark_skin_ton": 19, "woman_rowing_boat_light_skin_ton": 19, "woman_rowing_boat_medium_dark_skin_ton": 19, "woman_rowing_boat_medium_light_skin_ton": 19, "woman_rowing_boat_medium_skin_ton": 19, "woman_rowing_boat_tone1": 19, "woman_rowing_boat_tone2": 19, "woman_rowing_boat_tone3": 19, "woman_rowing_boat_tone4": 19, "woman_rowing_boat_tone5": 19, "woman_run": 19, "woman_running_dark_skin_ton": 19, "woman_running_light_skin_ton": 19, "woman_running_medium_dark_skin_ton": 19, "woman_running_medium_light_skin_ton": 19, "woman_running_medium_skin_ton": 19, "woman_running_tone1": 19, "woman_running_tone2": 19, "woman_running_tone3": 19, "woman_running_tone4": 19, "woman_running_tone5": 19, "woman_scientist": 19, "woman_scientist_dark_skin_ton": 19, "woman_scientist_light_skin_ton": 19, "woman_scientist_medium_dark_skin_ton": 19, "woman_scientist_medium_light_skin_ton": 19, "woman_scientist_medium_skin_ton": 19, "woman_scientist_tone1": 19, "woman_scientist_tone2": 19, "woman_scientist_tone3": 19, "woman_scientist_tone4": 19, "woman_scientist_tone5": 19, "woman_shrug": 19, "woman_shrugging_dark_skin_ton": 19, "woman_shrugging_light_skin_ton": 19, "woman_shrugging_medium_dark_skin_ton": 19, "woman_shrugging_medium_light_skin_ton": 19, "woman_shrugging_medium_skin_ton": 19, "woman_shrugging_tone1": 19, "woman_shrugging_tone2": 19, "woman_shrugging_tone3": 19, "woman_shrugging_tone4": 19, "woman_shrugging_tone5": 19, "woman_sing": 19, "woman_singer_dark_skin_ton": 19, "woman_singer_light_skin_ton": 19, "woman_singer_medium_dark_skin_ton": 19, "woman_singer_medium_light_skin_ton": 19, "woman_singer_medium_skin_ton": 19, "woman_singer_tone1": 19, "woman_singer_tone2": 19, "woman_singer_tone3": 19, "woman_singer_tone4": 19, "woman_singer_tone5": 19, "woman_stand": 19, "woman_standing_dark_skin_ton": 19, "woman_standing_light_skin_ton": 19, "woman_standing_medium_dark_skin_ton": 19, "woman_standing_medium_light_skin_ton": 19, "woman_standing_medium_skin_ton": 19, "woman_standing_tone1": 19, "woman_standing_tone2": 19, "woman_standing_tone3": 19, "woman_standing_tone4": 19, "woman_standing_tone5": 19, "woman_stud": 19, "woman_student_dark_skin_ton": 19, "woman_student_light_skin_ton": 19, "woman_student_medium_dark_skin_ton": 19, "woman_student_medium_light_skin_ton": 19, "woman_student_medium_skin_ton": 19, "woman_student_tone1": 19, "woman_student_tone2": 19, "woman_student_tone3": 19, "woman_student_tone4": 19, "woman_student_tone5": 19, "woman_superhero": 19, "woman_superhero_dark_skin_ton": 19, "woman_superhero_light_skin_ton": 19, "woman_superhero_medium_dark_skin_ton": 19, "woman_superhero_medium_light_skin_ton": 19, "woman_superhero_medium_skin_ton": 19, "woman_superhero_tone1": 19, "woman_superhero_tone2": 19, "woman_superhero_tone3": 19, "woman_superhero_tone4": 19, "woman_superhero_tone5": 19, "woman_supervillain": 19, "woman_supervillain_dark_skin_ton": 19, "woman_supervillain_light_skin_ton": 19, "woman_supervillain_medium_dark_skin_ton": 19, "woman_supervillain_medium_light_skin_ton": 19, "woman_supervillain_medium_skin_ton": 19, "woman_supervillain_tone1": 19, "woman_supervillain_tone2": 19, "woman_supervillain_tone3": 19, "woman_supervillain_tone4": 19, "woman_supervillain_tone5": 19, "woman_surf": 19, "woman_surfing_dark_skin_ton": 19, "woman_surfing_light_skin_ton": 19, "woman_surfing_medium_dark_skin_ton": 19, "woman_surfing_medium_light_skin_ton": 19, "woman_surfing_medium_skin_ton": 19, "woman_surfing_tone1": 19, "woman_surfing_tone2": 19, "woman_surfing_tone3": 19, "woman_surfing_tone4": 19, "woman_surfing_tone5": 19, "woman_swim": 19, "woman_swimming_dark_skin_ton": 19, "woman_swimming_light_skin_ton": 19, "woman_swimming_medium_dark_skin_ton": 19, "woman_swimming_medium_light_skin_ton": 19, "woman_swimming_medium_skin_ton": 19, "woman_swimming_tone1": 19, "woman_swimming_tone2": 19, "woman_swimming_tone3": 19, "woman_swimming_tone4": 19, "woman_swimming_tone5": 19, "woman_teach": 19, "woman_teacher_dark_skin_ton": 19, "woman_teacher_light_skin_ton": 19, "woman_teacher_medium_dark_skin_ton": 19, "woman_teacher_medium_light_skin_ton": 19, "woman_teacher_medium_skin_ton": 19, "woman_teacher_tone1": 19, "woman_teacher_tone2": 19, "woman_teacher_tone3": 19, "woman_teacher_tone4": 19, "woman_teacher_tone5": 19, "woman_technologist": 19, "woman_technologist_dark_skin_ton": 19, "woman_technologist_light_skin_ton": 19, "woman_technologist_medium_dark_skin_ton": 19, "woman_technologist_medium_light_skin_ton": 19, "woman_technologist_medium_skin_ton": 19, "woman_technologist_tone1": 19, "woman_technologist_tone2": 19, "woman_technologist_tone3": 19, "woman_technologist_tone4": 19, "woman_technologist_tone5": 19, "woman_tipping_hand": 19, "woman_tipping_hand_dark_skin_ton": 19, "woman_tipping_hand_light_skin_ton": 19, "woman_tipping_hand_medium_dark_skin_ton": 19, "woman_tipping_hand_medium_light_skin_ton": 19, "woman_tipping_hand_medium_skin_ton": 19, "woman_tipping_hand_tone1": 19, "woman_tipping_hand_tone2": 19, "woman_tipping_hand_tone3": 19, "woman_tipping_hand_tone4": 19, "woman_tipping_hand_tone5": 19, "woman_tone1": 19, "woman_tone1_beard": 19, "woman_tone2": 19, "woman_tone2_beard": 19, "woman_tone3": 19, "woman_tone3_beard": 19, "woman_tone4": 19, "woman_tone4_beard": 19, "woman_tone5": 19, "woman_tone5_beard": 19, "woman_vampir": 19, "woman_vampire_dark_skin_ton": 19, "woman_vampire_light_skin_ton": 19, "woman_vampire_medium_dark_skin_ton": 19, "woman_vampire_medium_light_skin_ton": 19, "woman_vampire_medium_skin_ton": 19, "woman_vampire_tone1": 19, "woman_vampire_tone2": 19, "woman_vampire_tone3": 19, "woman_vampire_tone4": 19, "woman_vampire_tone5": 19, "woman_walk": 19, "woman_walking_dark_skin_ton": 19, "woman_walking_light_skin_ton": 19, "woman_walking_medium_dark_skin_ton": 19, "woman_walking_medium_light_skin_ton": 19, "woman_walking_medium_skin_ton": 19, "woman_walking_tone1": 19, "woman_walking_tone2": 19, "woman_walking_tone3": 19, "woman_walking_tone4": 19, "woman_walking_tone5": 19, "woman_wearing_turban": 19, "woman_wearing_turban_dark_skin_ton": 19, "woman_wearing_turban_light_skin_ton": 19, "woman_wearing_turban_medium_dark_skin_ton": 19, "woman_wearing_turban_medium_light_skin_ton": 19, "woman_wearing_turban_medium_skin_ton": 19, "woman_wearing_turban_tone1": 19, "woman_wearing_turban_tone2": 19, "woman_wearing_turban_tone3": 19, "woman_wearing_turban_tone4": 19, "woman_wearing_turban_tone5": 19, "woman_white_hair": 19, "woman_white_haired_dark_skin_ton": 19, "woman_white_haired_light_skin_ton": 19, "woman_white_haired_medium_dark_skin_ton": 19, "woman_white_haired_medium_light_skin_ton": 19, "woman_white_haired_medium_skin_ton": 19, "woman_white_haired_tone1": 19, "woman_white_haired_tone2": 19, "woman_white_haired_tone3": 19, "woman_white_haired_tone4": 19, "woman_white_haired_tone5": 19, "woman_with_headscarf": 19, "woman_with_headscarf_dark_skin_ton": 19, "woman_with_headscarf_light_skin_ton": 19, "woman_with_headscarf_medium_dark_skin_ton": 19, "woman_with_headscarf_medium_light_skin_ton": 19, "woman_with_headscarf_medium_skin_ton": 19, "woman_with_headscarf_tone1": 19, "woman_with_headscarf_tone2": 19, "woman_with_headscarf_tone3": 19, "woman_with_headscarf_tone4": 19, "woman_with_headscarf_tone5": 19, "woman_with_probing_can": 19, "woman_with_probing_cane_dark_skin_ton": 19, "woman_with_probing_cane_light_skin_ton": 19, "woman_with_probing_cane_medium_dark_skin_ton": 19, "woman_with_probing_cane_medium_light_skin_ton": 19, "woman_with_probing_cane_medium_skin_ton": 19, "woman_with_probing_cane_tone1": 19, "woman_with_probing_cane_tone2": 19, "woman_with_probing_cane_tone3": 19, "woman_with_probing_cane_tone4": 19, "woman_with_probing_cane_tone5": 19, "woman_with_turban": 19, "woman_with_veil": 19, "woman_with_veil_dark_skin_ton": 19, "woman_with_veil_light_skin_ton": 19, "woman_with_veil_medium_dark_skin_ton": 19, "woman_with_veil_medium_light_skin_ton": 19, "woman_with_veil_medium_skin_ton": 19, "woman_with_veil_tone1": 19, "woman_with_veil_tone2": 19, "woman_with_veil_tone3": 19, "woman_with_veil_tone4": 19, "woman_with_veil_tone5": 19, "woman_zombi": 19, "womans_cloth": 19, "womans_flat_sho": 19, "womans_hat": 19, "women_holding_hands_dark_skin_ton": 19, "women_holding_hands_dark_skin_tone_light_skin_ton": 19, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 19, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 19, "women_holding_hands_dark_skin_tone_medium_skin_ton": 19, "women_holding_hands_light_skin_ton": 19, "women_holding_hands_light_skin_tone_dark_skin_ton": 19, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 19, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 19, "women_holding_hands_light_skin_tone_medium_skin_ton": 19, "women_holding_hands_medium_dark_skin_ton": 19, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 19, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 19, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 19, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 19, "women_holding_hands_medium_light_skin_ton": 19, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 19, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 19, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 19, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 19, "women_holding_hands_medium_skin_ton": 19, "women_holding_hands_medium_skin_tone_dark_skin_ton": 19, "women_holding_hands_medium_skin_tone_light_skin_ton": 19, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 19, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 19, "women_holding_hands_tone1": 19, "women_holding_hands_tone1_tone2": 19, "women_holding_hands_tone1_tone3": 19, "women_holding_hands_tone1_tone4": 19, "women_holding_hands_tone1_tone5": 19, "women_holding_hands_tone2": 19, "women_holding_hands_tone2_tone1": 19, "women_holding_hands_tone2_tone3": 19, "women_holding_hands_tone2_tone4": 19, "women_holding_hands_tone2_tone5": 19, "women_holding_hands_tone3": 19, "women_holding_hands_tone3_tone1": 19, "women_holding_hands_tone3_tone2": 19, "women_holding_hands_tone3_tone4": 19, "women_holding_hands_tone3_tone5": 19, "women_holding_hands_tone4": 19, "women_holding_hands_tone4_tone1": 19, "women_holding_hands_tone4_tone2": 19, "women_holding_hands_tone4_tone3": 19, "women_holding_hands_tone4_tone5": 19, "women_holding_hands_tone5": 19, "women_holding_hands_tone5_tone1": 19, "women_holding_hands_tone5_tone2": 19, "women_holding_hands_tone5_tone3": 19, "women_holding_hands_tone5_tone4": 19, "women_with_bunny_ears_parti": 19, "women_wrestl": 19, "women": 19, "wood": 19, "woozy_fac": 19, "world_map": 19, "worm": [19, 545], "worri": [19, 491], "worship_symbol": 19, "wrench": 19, "wrestler": 19, "wrestlers_tone1": 19, "wrestlers_tone2": 19, "wrestlers_tone3": 19, "wrestlers_tone4": 19, "wrestlers_tone5": 19, "wrestl": 19, "wrestling_tone1": 19, "wrestling_tone2": 19, "wrestling_tone3": 19, "wrestling_tone4": 19, "wrestling_tone5": 19, "writing_hand": 19, "writing_hand_tone1": 19, "writing_hand_tone2": 19, "writing_hand_tone3": 19, "writing_hand_tone4": 19, "writing_hand_tone5": 19, "w": [19, 27, 168, 227, 231, 234, 256, 260, 266, 276, 279, 286, 307, 321, 405, 406, 424, 512, 666, 720, 762, 821, 824, 876, 890, 936, 937, 1039, 1105, 1145, 1158, 1204, 1206, 1233, 1236, 1241], "xk": 19, "yarn": 19, "yawning_fac": 19, "yellow_circl": 19, "yellow_heart": 19, "yellow_squar": 19, "yemen": 19, "yen": [19, 23], "yin_yang": 19, "yo_yo": 19, "yt": 19, "yum": [19, 359], "za": [19, 331, 359, 443], "zambia": 19, "zany_fac": 19, "zap": 19, "zebra": 19, "zero": [19, 25, 155, 194, 209, 211, 212, 214, 224, 234, 242, 244, 247, 260, 266, 271, 273, 276, 279, 283, 286, 301, 325, 359, 365, 404, 425, 434, 452, 750, 834, 845, 861, 891, 906, 913, 937, 943, 955, 970, 1025, 1055, 1061, 1064, 1068, 1071, 1076, 1077, 1144], "zimbabw": 19, "zipper_mouth": 19, "zipper_mouth_fac": 19, "zm": 19, "zombi": 19, "zw": 19, "zzz": [19, 365], "sheet": [20, 193, 231, 243, 372, 408, 410, 411, 770, 891, 934, 936], "layout": [20, 208, 281, 373, 488, 501, 1241], "emoji": 20, "sphinxemoji": 20, "mmlalia": 20, "mathml": 20, "alias": [20, 359, 444, 892], "entiti": [20, 192, 452, 466, 493, 510, 550, 558, 664, 953, 1067, 1221], "isoamsa": 20, "mathemat": [20, 283, 1157], "arrow": [20, 22, 23, 25, 891, 1100], "isoamsr": 20, "relat": [20, 59, 185, 212, 223, 227, 248, 252, 307, 320, 376, 379, 384, 387, 456, 476, 520, 541, 650, 783, 797, 801, 843, 855, 935, 952, 963, 1067, 1077, 1208, 1241, 1242, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1277, 1278, 1280, 1281, 1282], "isonum": 20, "binari": [20, 29, 37, 41, 42, 45, 65, 76, 77, 192, 198, 251, 252, 260, 264, 266, 267, 269, 274, 276, 279, 289, 412, 455, 488, 500, 660, 687, 759, 764, 782, 876, 961, 976, 984, 1083, 1086, 1100, 1112, 1139, 1144, 1221], "oper": [20, 21, 22, 25, 62, 67, 69, 86, 97, 126, 130, 154, 159, 162, 173, 191, 192, 194, 198, 209, 210, 212, 215, 218, 223, 227, 228, 229, 230, 232, 236, 241, 244, 249, 250, 251, 252, 253, 258, 260, 264, 265, 268, 271, 273, 274, 278, 281, 284, 287, 289, 292, 294, 304, 311, 316, 317, 318, 319, 320, 321, 324, 325, 341, 345, 346, 348, 353, 359, 364, 365, 373, 381, 382, 384, 387, 390, 404, 409, 426, 434, 444, 450, 470, 471, 476, 479, 487, 491, 494, 500, 508, 529, 532, 550, 551, 570, 590, 608, 643, 649, 650, 655, 656, 660, 662, 666, 667, 668, 669, 670, 674, 682, 690, 691, 703, 707, 747, 750, 759, 761, 765, 770, 773, 777, 787, 788, 789, 790, 797, 798, 800, 803, 804, 805, 806, 810, 812, 813, 815, 819, 824, 825, 827, 835, 837, 845, 846, 857, 858, 861, 891, 897, 922, 924, 934, 936, 937, 955, 984, 986, 1000, 1016, 1021, 1022, 1023, 1024, 1025, 1026, 1037, 1040, 1053, 1055, 1066, 1076, 1080, 1084, 1098, 1101, 1112, 1119, 1120, 1123, 1140, 1144, 1148, 1153, 1154, 1159, 1173, 1208, 1217, 1226, 1248, 1253, 1257, 1265, 1266, 1267, 1268, 1271, 1277], "sphinxish": 20, "send": [20, 90, 113, 131, 159, 161, 170, 174, 192, 203, 206, 227, 228, 230, 231, 232, 233, 266, 267, 286, 288, 289, 307, 328, 372, 404, 409, 572, 824, 853, 871, 887, 930, 931, 934, 1012, 1022, 1066, 1077, 1080, 1082, 1205, 1221], "v4l": [20, 131], "ssh": [20, 86, 90, 91, 113, 131, 134, 149, 150, 154, 157, 164, 165, 170, 199, 203, 231, 263, 279, 286, 289, 297, 304, 306, 311, 321, 325, 327, 347, 353, 359, 365, 371, 377, 380, 390, 403, 404, 410, 411, 417, 418, 422, 607, 608, 856, 857, 858, 866, 913, 922, 928, 938, 1007, 1008, 1033, 1086, 1094, 1096, 1262, 1264, 1267], "taken": [21, 22, 23, 25, 27, 62, 63, 117, 191, 195, 196, 203, 251, 372, 373, 490, 516, 529, 607, 616, 662, 819, 855, 866, 891, 987, 1046, 1083, 1135, 1221, 1262], "standard": [21, 22, 23, 25, 95, 113, 143, 150, 165, 189, 199, 219, 223, 228, 230, 232, 253, 260, 266, 275, 276, 279, 283, 294, 307, 309, 333, 349, 356, 381, 387, 395, 404, 405, 406, 407, 409, 424, 425, 426, 432, 433, 438, 439, 443, 488, 596, 634, 649, 710, 713, 723, 725, 738, 747, 759, 797, 833, 835, 837, 838, 848, 871, 874, 875, 891, 925, 1006, 1022, 1028, 1031, 1053, 1056, 1081, 1112, 1132, 1148, 1221, 1233, 1237, 1251, 1255, 1257, 1258, 1260, 1267, 1273, 1278], "definit": [21, 22, 23, 25, 96, 103, 106, 107, 108, 121, 131, 142, 171, 173, 192, 194, 195, 197, 199, 211, 220, 223, 224, 229, 243, 250, 252, 316, 318, 334, 350, 376, 379, 382, 386, 404, 424, 425, 426, 456, 468, 471, 495, 496, 497, 500, 501, 513, 515, 520, 523, 529, 541, 549, 550, 572, 594, 634, 652, 653, 654, 659, 665, 666, 668, 677, 680, 681, 703, 722, 724, 732, 739, 744, 750, 770, 803, 814, 841, 845, 848, 892, 936, 937, 961, 984, 1083, 1103, 1110, 1116, 1121, 1132, 1136, 1149, 1150, 1153, 1217, 1231, 1248, 1255, 1258], "includ": [21, 22, 23, 25, 31, 96, 103, 109, 110, 161, 162, 166, 189, 194, 199, 203, 206, 208, 219, 223, 230, 242, 243, 252, 253, 260, 264, 266, 267, 269, 276, 279, 283, 304, 318, 325, 334, 346, 350, 374, 375, 376, 377, 378, 379, 380, 382, 401, 412, 425, 426, 428, 432, 434, 436, 467, 468, 483, 488, 491, 493, 497, 504, 513, 514, 517, 518, 519, 520, 521, 522, 523, 534, 537, 540, 542, 543, 548, 549, 550, 551, 552, 553, 554, 557, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 594, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 634, 640, 643, 650, 651, 652, 654, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 674, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 715, 720, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 747, 748, 749, 750, 751, 753, 756, 757, 759, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 786, 788, 790, 793, 794, 795, 797, 800, 801, 803, 804, 805, 806, 807, 812, 813, 814, 815, 817, 818, 821, 822, 824, 825, 826, 830, 831, 834, 835, 837, 839, 844, 845, 846, 847, 848, 849, 850, 868, 888, 891, 897, 925, 929, 931, 934, 943, 948, 953, 955, 961, 964, 966, 968, 970, 972, 976, 978, 980, 989, 994, 998, 1001, 1004, 1019, 1021, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1042, 1043, 1047, 1057, 1061, 1063, 1066, 1067, 1073, 1076, 1080, 1083, 1086, 1096, 1099, 1100, 1102, 1104, 1132, 1133, 1158, 1159, 1231, 1237, 1243, 1248, 1250, 1253, 1267, 1273], "substitut": [21, 22, 23, 25, 95, 103, 108, 109, 131, 243, 279, 325, 401, 494, 510, 517, 518, 520, 521, 759, 761, 1016, 1220], "comment": [21, 22, 23, 25, 31, 108, 109, 194, 228, 249, 251, 264, 270, 272, 276, 277, 280, 282, 287, 288, 303, 310, 312, 323, 329, 330, 351, 357, 358, 363, 364, 367, 368, 375, 404, 426, 471, 490, 543, 575, 576, 604, 724, 801, 848, 936, 1066, 1153, 1181, 1221], "angzarr": 21, "0237c": 21, "right": [21, 22, 23, 25, 29, 49, 69, 73, 118, 191, 192, 194, 197, 211, 231, 242, 243, 253, 258, 271, 273, 279, 283, 291, 304, 317, 325, 368, 375, 386, 390, 396, 427, 447, 448, 449, 455, 466, 496, 513, 520, 538, 597, 605, 652, 666, 668, 669, 747, 751, 770, 800, 801, 814, 845, 850, 873, 874, 876, 891, 945, 964, 968, 984, 1003, 1014, 1053, 1066, 1105, 1127, 1138, 1144, 1181], "angl": [21, 23, 25, 1259, 1263], "WITH": [21, 22, 25, 1022], "downward": [21, 22, 23, 25, 516], "zigzag": 21, "cirmid": 21, "02aef": 21, "vertic": [21, 22, 23, 25, 445], "line": [21, 22, 23, 25, 49, 52, 111, 119, 149, 154, 168, 192, 194, 197, 210, 213, 214, 227, 231, 241, 243, 247, 248, 250, 251, 256, 257, 260, 261, 263, 264, 266, 267, 269, 270, 271, 274, 276, 277, 279, 280, 282, 283, 286, 288, 289, 291, 292, 303, 304, 309, 310, 311, 313, 317, 321, 323, 324, 325, 329, 330, 331, 343, 347, 351, 353, 357, 358, 359, 363, 364, 365, 367, 368, 369, 395, 404, 426, 432, 433, 441, 445, 448, 450, 467, 494, 501, 504, 512, 537, 541, 543, 575, 576, 721, 723, 725, 857, 858, 861, 871, 873, 875, 897, 919, 921, 922, 924, 925, 928, 932, 934, 936, 937, 953, 957, 964, 966, 984, 1056, 1067, 1099, 1105, 1106, 1107, 1110, 1111, 1112, 1120, 1121, 1127, 1128, 1135, 1149, 1150, 1152, 1154, 1156, 1158, 1159, 1160, 1166, 1181, 1187, 1206, 1208, 1211, 1216, 1221, 1228, 1230, 1242, 1277], "circl": [21, 22, 25, 253, 626, 871, 1066], "abov": [21, 22, 25, 67, 113, 118, 137, 138, 154, 166, 192, 194, 195, 196, 197, 199, 203, 210, 229, 232, 243, 252, 260, 266, 276, 279, 283, 342, 374, 415, 461, 484, 494, 504, 529, 550, 570, 572, 594, 597, 598, 607, 608, 633, 643, 660, 664, 665, 684, 721, 804, 857, 858, 875, 903, 934, 936, 937, 945, 978, 984, 994, 1029, 1033, 1047, 1069, 1076, 1100, 1108, 1139, 1153, 1224, 1230, 1241, 1248], "cudarrl": 21, "02938": 21, "side": [21, 161, 171, 211, 233, 307, 316, 440, 449, 490, 528, 532, 572, 604, 643, 666, 668, 669, 764, 822, 824, 870, 891, 964, 968, 1007, 1066, 1108, 1141, 1188, 1213, 1215, 1224], "arc": 21, "clockwis": [21, 25], "cudarrr": 21, "02935": 21, "rightward": [21, 22, 23, 25], "THEN": 21, "curv": [21, 22], "cularr": 21, "021b6": [21, 25], "anticlockwis": [21, 25], "semicircl": [21, 25], "cularrp": 21, "0293d": 21, "plu": [21, 22, 23, 25, 193, 199, 260, 266, 276, 279, 292, 461, 608, 634, 665, 667, 669, 984, 1025], "curarr": 21, "021b7": [21, 25], "curarrm": 21, "0293c": 21, "minu": [21, 22, 23, 25, 271, 667, 750], "darr": [21, 23], "021a1": 21, "head": [21, 25, 27, 47, 111, 161, 193, 195, 198, 231, 233, 243, 297, 306, 315, 327, 328, 371, 372, 822, 918, 919, 923, 925, 1020, 1021, 1099, 1166], "021d3": [21, 25], "doubl": [21, 22, 23, 25, 103, 108, 109, 119, 122, 253, 269, 273, 279, 412, 426, 444, 445, 446, 449, 468, 488, 497, 524, 532, 549, 554, 560, 562, 569, 578, 580, 581, 586, 587, 588, 589, 590, 591, 594, 602, 604, 606, 607, 608, 619, 650, 652, 658, 660, 664, 668, 700, 720, 739, 740, 743, 744, 745, 750, 755, 759, 764, 782, 784, 786, 787, 788, 789, 812, 815, 822, 827, 839, 843, 844, 846, 848, 891, 934, 984, 1066, 1108, 1128, 1152, 1228], "darr2": 21, "021ca": [21, 25], "pair": [21, 25, 90, 91, 118, 119, 174, 248, 258, 261, 264, 269, 273, 274, 279, 286, 288, 300, 301, 324, 330, 358, 365, 551, 554, 558, 608, 626, 703, 705, 706, 709, 753, 761, 834, 835, 850, 948, 953, 1009, 1102, 1112, 1156, 1208, 1219, 1236], "ddarr": 21, "ddotrahd": 21, "02911": 21, "dot": [21, 22, 23, 25, 196, 382, 504, 544, 546, 913, 1085], "stem": [21, 526, 528, 953], "dfisht": 21, "0297f": 21, "down": [21, 22, 25, 166, 191, 192, 195, 219, 296, 334, 350, 375, 376, 379, 410, 430, 471, 522, 523, 529, 548, 554, 597, 604, 605, 606, 607, 626, 667, 700, 724, 744, 759, 761, 783, 800, 801, 803, 845, 877, 924, 930, 937, 952, 953, 984, 1066, 1083, 1086, 1248, 1253], "tail": [21, 25, 193, 231, 233, 243, 297, 306, 327, 328, 371, 372, 822, 919, 923, 925, 972, 1233], "dhar": 21, "02965": 21, "harpoon": [21, 25], "barb": [21, 25], "left": [21, 22, 23, 25, 49, 73, 99, 100, 118, 191, 192, 194, 211, 242, 253, 279, 325, 385, 387, 422, 447, 448, 455, 461, 529, 553, 597, 604, 650, 653, 657, 664, 665, 722, 810, 873, 874, 891, 934, 1012, 1031, 1042, 1066, 1083, 1112, 1116, 1127, 1128, 1139, 1153, 1213, 1231, 1279], "besid": [21, 22, 25], "dharl": 21, "021c3": [21, 25], "leftward": [21, 22, 23, 25], "dharr": 21, "021c2": [21, 25], "dlarr": 21, "02199": [21, 25], "south": [21, 25], "west": [21, 25, 201], "drarr": 21, "02198": [21, 25], "east": [21, 25], "duarr": 21, "021f5": [21, 25], "OF": [21, 22, 25, 195, 835], "upward": [21, 23, 25, 801], "duhar": 21, "0296f": [21, 25], "dzigrarr": 21, "027ff": 21, "long": [21, 22, 25, 40, 126, 191, 192, 193, 194, 195, 199, 202, 219, 223, 231, 243, 260, 264, 266, 269, 276, 279, 287, 315, 404, 422, 432, 442, 444, 445, 449, 453, 454, 481, 488, 490, 499, 503, 505, 506, 529, 537, 550, 607, 652, 653, 658, 662, 720, 761, 782, 784, 786, 788, 797, 818, 824, 835, 845, 870, 891, 913, 937, 943, 955, 964, 966, 982, 984, 989, 994, 998, 1016, 1022, 1025, 1043, 1047, 1064, 1066, 1073, 1103, 1110, 1150, 1160, 1208, 1215, 1226, 1233, 1258], "squiggl": 21, "erarr": 21, "02971": 21, "equal": [21, 22, 23, 25, 54, 144, 166, 194, 215, 227, 243, 250, 253, 279, 283, 315, 316, 325, 337, 353, 426, 432, 448, 455, 460, 471, 496, 499, 524, 529, 602, 609, 692, 736, 750, 866, 870, 925, 1016, 1064, 1069, 1070, 1139, 1194, 1248], "sign": [21, 22, 23, 25, 195, 202, 269, 442, 444, 452, 496, 510, 524, 555, 804, 957, 1139, 1153, 1213, 1255, 1256], "harr": 21, "021d4": [21, 25], "02194": [21, 25], "harrcir": 21, "02948": 21, "small": [21, 25, 30, 95, 174, 191, 193, 194, 223, 243, 247, 303, 342, 352, 373, 424, 496, 500, 553, 605, 650, 808, 845, 928, 929, 934, 1035, 1077, 1154, 1220, 1248, 1269, 1278], "harrw": 21, "021ad": [21, 25], "hoarr": 21, "021ff": 21, "imof": 21, "022b7": 21, "imag": [21, 22, 25, 154, 155, 168, 190, 191, 192, 193, 194, 202, 214, 276, 279, 283, 301, 365, 369, 376, 379, 404, 410, 506, 512, 544, 658, 928, 961, 984, 1066, 1210, 1215], "laarr": 21, "021da": [21, 25], "tripl": [21, 22, 25, 48, 50], "larr": [21, 23], "0219e": [21, 25], "larr2": 21, "021c7": [21, 25], "larrbf": 21, "0291f": 21, "bar": [21, 22, 23, 25, 198, 218, 238, 261, 274, 279, 288, 291, 321, 324, 325, 330, 343, 347, 353, 359, 365, 369, 413, 512, 529, 597, 751, 1106, 1148, 1208], "TO": [21, 22, 25, 380, 1164], "black": [21, 25, 197, 247, 255, 267, 270, 703, 1066, 1096], "larrf": 21, "0291d": 21, "larrhk": 21, "021a9": [21, 25], "larrlp": 21, "021ab": [21, 25], "larrpl": 21, "02939": 21, "larrsim": 21, "02973": 21, "tild": [21, 22, 25], "larrtl": 21, "021a2": [21, 25], "latail": 21, "0291b": 21, "02919": 21, "lbarr": 21, "0290e": 21, "0290c": 21, "ldca": 21, "02936": 21, "ldrdhar": 21, "02967": 21, "ldrushar": 21, "0294b": 21, "ldsh": 21, "021b2": 21, "tip": [21, 25, 248, 258, 261, 264, 288, 300, 324, 330, 1208], "lfisht": 21, "0297c": 21, "lhar": 21, "02962": 21, "lhard": 21, "021bd": [21, 25], "lharu": 21, "021bc": [21, 25], "lharul": 21, "0296a": 21, "llarr": 21, "llhard": 21, "0296b": 21, "below": [21, 22, 25, 121, 129, 139, 154, 166, 174, 192, 193, 194, 197, 199, 203, 211, 223, 232, 250, 283, 296, 342, 384, 435, 437, 504, 511, 516, 521, 575, 589, 597, 598, 604, 607, 724, 735, 737, 750, 794, 795, 797, 801, 803, 804, 812, 822, 825, 845, 866, 870, 874, 891, 928, 934, 937, 957, 978, 1026, 1066, 1080, 1083, 1248], "loarr": 21, "021fd": 21, "lrarr": 21, "021c6": [21, 25], "lrarr2": 21, "lrhar": 21, "021cb": [21, 25], "lrhar2": 21, "lrhard": 21, "0296d": 21, "lsh": [21, 25], "021b0": [21, 25], "lurdshar": 21, "0294a": 21, "luruhar": 21, "02966": 21, "02905": 21, "021a6": [21, 25], "midcir": 21, "02af0": 21, "mumap": 21, "022b8": [21, 25], "multimap": [21, 25, 316, 626, 702], "nearhk": 21, "02924": 21, "north": [21, 25], "nearr": 21, "021d7": 21, "02197": [21, 25], "nesear": 21, "02928": [21, 25], "AND": [21, 22, 25, 432, 448, 471, 534, 654, 920, 1127], "nharr": 21, "021ce": [21, 25], "stroke": [21, 25], "021ae": [21, 25], "nlarr": 21, "021cd": [21, 25], "0219a": [21, 25], "nrarr": 21, "021cf": [21, 25], "0219b": [21, 25], "nrarrc": 21, "02933": 21, "00338": [21, 25], "directli": [21, 27, 118, 174, 292, 317, 390, 548, 664, 727, 739, 937, 955, 968, 980, 987, 998, 1015, 1019, 1083, 1107, 1127, 1135, 1199, 1201, 1227], "slash": [21, 25, 915, 1077], "nrarrw": 21, "0219d": [21, 25], "nvharr": 21, "02904": 21, "nvlarr": 21, "02902": 21, "nvrarr": 21, "02903": 21, "nwarhk": 21, "02923": 21, "nwarr": 21, "021d6": 21, "02196": [21, 25], "nwnear": 21, "02927": 21, "olarr": 21, "021ba": [21, 25], "orarr": 21, "021bb": [21, 25], "origof": 21, "022b6": 21, "origin": [21, 22, 25, 47, 49, 52, 111, 164, 170, 174, 195, 197, 202, 212, 224, 256, 260, 266, 269, 271, 276, 279, 304, 315, 320, 324, 325, 327, 328, 330, 334, 342, 346, 350, 352, 356, 358, 364, 368, 372, 375, 377, 380, 381, 382, 384, 470, 486, 550, 553, 604, 651, 659, 660, 688, 733, 734, 736, 737, 750, 825, 844, 847, 850, 853, 857, 858, 874, 888, 957, 984, 985, 1066, 1105, 1210, 1221, 1243], "raarr": 21, "021db": [21, 25], "rarr": [21, 23], "021a0": [21, 25], "rarr2": 21, "021c9": [21, 25], "rarrap": 21, "02975": 21, "almost": [21, 22, 25, 48, 50, 194, 215, 252, 449, 497, 499, 514, 655, 751, 800, 833, 1077, 1262], "rarrbf": 21, "02920": 21, "rarrc": 21, "rarrf": 21, "0291e": 21, "rarrhk": 21, "021aa": [21, 25], "rarrlp": 21, "021ac": [21, 25], "rarrpl": 21, "02945": 21, "rarrsim": 21, "02974": 21, "rarrtl": 21, "02916": 21, "021a3": [21, 25], "rarrw": 21, "ratail": 21, "0291c": 21, "0291a": 21, "rbarr": 21, "02910": [21, 25], "0290f": [21, 25], "0290d": [21, 25], "rdca": 21, "02937": 21, "rdldhar": 21, "02969": 21, "rdsh": 21, "021b3": 21, "rfisht": 21, "0297d": 21, "rhar": 21, "02964": 21, "rhard": 21, "021c1": [21, 25], "rharu": 21, "021c0": [21, 25], "rharul": 21, "0296c": 21, "rlarr": 21, "021c4": [21, 25], "rlarr2": 21, "rlhar": 21, "021cc": [21, 25], "rlhar2": 21, "roarr": 21, "021fe": 21, "rrarr": 21, "rsh": [21, 25, 665, 1006], "021b1": [21, 25], "ruluhar": 21, "02968": 21, "searhk": 21, "02925": [21, 25], "searr": 21, "021d8": 21, "seswar": 21, "02929": [21, 25], "simrarr": 21, "02972": 21, "slarr": 21, "02190": [21, 23, 25], "srarr": 21, "02192": [21, 23, 25], "swarhk": 21, "02926": [21, 25], "swarr": 21, "021d9": 21, "swnwar": 21, "0292a": 21, "uarr": [21, 23], "0219f": 21, "021d1": [21, 25], "uarr2": 21, "021c8": [21, 25], "uarrocir": 21, "02949": 21, "udarr": 21, "021c5": [21, 25], "udhar": 21, "0296e": [21, 25], "ufisht": 21, "0297e": 21, "uhar": 21, "02963": 21, "uharl": 21, "021bf": [21, 25], "uharr": 21, "021be": [21, 25], "uuarr": 21, "varr": 21, "021d5": [21, 25], "02195": [21, 25], "xharr": 21, "027fa": [21, 25], "027f7": [21, 25], "xlarr": 21, "027f8": [21, 25], "027f5": [21, 25], "xmap": 21, "027fc": [21, 25], "xrarr": 21, "027f9": [21, 25], "027f6": [21, 25], "zigrarr": 21, "021dd": 21, "ap": [22, 1029], "02a70": 22, "approxim": [22, 25, 194, 289, 524], "OR": [22, 25, 266, 432, 448, 471, 488, 920, 1127], "0224a": [22, 25], "apid": 22, "0224b": 22, "asymp": 22, "02248": [22, 25], "barv": 22, "02ae7": 22, "tack": [22, 25], "overbar": 22, "bcong": 22, "0224c": [22, 25], "bepsi": 22, "003f6": [22, 25], "greek": [22, 25], "revers": [22, 23, 25, 146, 236, 263, 269, 286, 304, 311, 316, 325, 331, 353, 359, 369, 429, 525, 626, 633, 634, 692, 696, 712, 803, 848, 863, 864, 928, 939, 978, 1067, 1155, 1189], "lunat": [22, 25], "epsilon": [22, 25], "bowti": 22, "022c8": 22, "bsim": 22, "0223d": [22, 25], "bsime": 22, "022cd": [22, 25], "bsolhsub": 22, "0005c": [22, 23], "02282": [22, 25], "solidu": [22, 23], "subset": [22, 25, 279, 1086, 1100, 1157], "bump": 22, "0224e": [22, 25], "geometr": [22, 25, 283], "equival": [22, 25, 67, 81, 95, 98, 279, 457, 461, 476, 481, 532, 661, 732, 853, 856, 892, 925, 1025, 1116, 1138, 1148, 1158], "02aae": 22, "bumpi": 22, "0224f": [22, 25], "between": [22, 25, 59, 78, 92, 126, 154, 159, 192, 193, 194, 196, 202, 203, 212, 227, 239, 252, 260, 263, 266, 271, 273, 276, 279, 283, 286, 301, 304, 311, 325, 330, 343, 353, 356, 359, 365, 381, 382, 384, 390, 400, 433, 436, 449, 471, 476, 483, 496, 501, 510, 515, 562, 572, 594, 602, 665, 682, 735, 751, 757, 835, 846, 861, 862, 868, 928, 934, 939, 943, 989, 1033, 1049, 1052, 1066, 1067, 1068, 1069, 1070, 1077, 1081, 1116, 1127, 1137, 1139, 1150, 1214, 1266, 1269], "cire": 22, "02257": [22, 25], "colon": [22, 23, 25, 1187], "02237": [22, 25], "proport": [22, 25, 193], "02a74": 22, "02254": [22, 25], "congdot": 22, "02a6d": 22, "congruent": [22, 25], "csub": 22, "02acf": 22, "close": [22, 41, 103, 108, 109, 131, 139, 164, 197, 203, 211, 223, 241, 250, 251, 264, 271, 295, 296, 298, 321, 325, 353, 355, 356, 374, 375, 381, 384, 476, 510, 524, 541, 608, 626, 770, 801, 824, 842, 874, 934, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1042, 1076, 1080, 1083, 1105, 1217, 1269], "csube": 22, "02ad1": 22, "csup": 22, "02ad0": 22, "superset": [22, 25, 1157, 1257], "csupe": 22, "02ad2": 22, "cuepr": 22, "022de": [22, 25], "preced": [22, 25, 244, 266, 271, 279, 284, 287, 426, 432, 447, 448, 456, 461, 470, 476, 480, 678, 682, 891, 1008], "cuesc": 22, "022df": [22, 25], "succe": [22, 25, 724, 747, 910, 961, 1007, 1066, 1107], "cupr": 22, "0227c": [22, 25], "dashv": 22, "02ae4": [22, 25], "turnstil": [22, 25], "022a3": [22, 25], "easter": [22, 243], "02a6e": 22, "asterisk": [22, 23, 25], "ecir": 22, "02256": [22, 25], "IN": [22, 25, 196], "ecolon": 22, "02255": [22, 25], "eddot": 22, "02a77": [22, 25], "edot": 22, "02251": [22, 25], "efdot": 22, "02252": [22, 25], "THE": [22, 25, 380, 513, 1022], "02a9a": 22, "greater": [22, 23, 25, 95, 113, 318, 448, 529, 602, 610, 613, 803, 848, 970, 1066, 1139], "than": [22, 23, 25, 30, 58, 95, 111, 113, 121, 130, 131, 136, 154, 192, 193, 197, 199, 202, 203, 223, 227, 230, 234, 243, 250, 253, 260, 266, 271, 273, 276, 279, 283, 310, 313, 318, 342, 345, 373, 382, 385, 387, 390, 448, 449, 468, 470, 499, 500, 501, 512, 515, 540, 541, 548, 604, 610, 613, 652, 663, 666, 668, 669, 720, 728, 764, 800, 801, 813, 825, 826, 835, 891, 917, 921, 928, 936, 940, 955, 970, 976, 980, 984, 1014, 1015, 1022, 1025, 1051, 1066, 1080, 1084, 1100, 1101, 1116, 1121, 1138, 1139, 1184, 1188, 1217, 1224, 1227, 1243, 1258, 1278, 1282], "02a96": [22, 25], "slant": [22, 25], "egsdot": 22, "02a98": 22, "insid": [22, 26, 29, 37, 113, 118, 131, 154, 159, 173, 191, 192, 219, 221, 243, 260, 266, 276, 279, 296, 316, 318, 333, 342, 349, 389, 404, 432, 436, 446, 464, 467, 469, 470, 488, 493, 512, 528, 594, 605, 610, 658, 663, 665, 764, 797, 825, 870, 900, 910, 934, 937, 945, 955, 1028, 1051, 1071, 1098, 1103, 1106, 1115, 1152, 1158, 1226, 1228, 1233, 1244, 1266, 1273], "el": [22, 239, 250, 286], "02a99": 22, "less": [22, 23, 25, 48, 50, 67, 155, 172, 192, 193, 194, 199, 203, 252, 266, 283, 297, 306, 307, 313, 327, 328, 371, 372, 386, 426, 448, 449, 453, 496, 499, 520, 525, 529, 532, 550, 602, 706, 720, 748, 755, 824, 825, 835, 837, 848, 875, 891, 919, 922, 923, 925, 955, 957, 984, 1025, 1047, 1066, 1121, 1139, 1158, 1236, 1237, 1250, 1258, 1267], "02a95": [22, 25], "elsdot": 22, "02a97": 22, "equest": 22, "0225f": [22, 25], "equivdd": 22, "02a78": 22, "erdot": 22, "02253": [22, 25], "esdot": 22, "02250": [22, 25], "limit": [22, 25, 49, 52, 192, 193, 208, 230, 260, 266, 276, 279, 325, 376, 379, 449, 491, 524, 526, 703, 800, 824, 868, 984, 1046, 1050, 1066, 1070, 1113, 1114, 1139, 1212, 1234], "esim": 22, "02a73": 22, "02242": [22, 25], "fork": [22, 30, 130, 164, 194, 208, 212, 943, 1028, 1045, 1047, 1050, 1058, 1077, 1269], "022d4": [22, 25], "pitchfork": [22, 25], "forkv": 22, "02ad9": 22, "element": [22, 25, 95, 98, 99, 100, 113, 211, 213, 214, 224, 229, 230, 235, 236, 239, 241, 242, 244, 245, 247, 250, 254, 255, 256, 260, 263, 264, 266, 270, 272, 273, 279, 282, 283, 286, 290, 311, 315, 318, 321, 330, 343, 384, 398, 399, 434, 461, 476, 484, 488, 491, 525, 610, 613, 615, 624, 643, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 693, 697, 700, 705, 708, 722, 753, 756, 778, 800, 801, 824, 835, 837, 945, 1077, 1110, 1112, 1129, 1140, 1145, 1146, 1155, 1157, 1191, 1216, 1233, 1241, 1259], "02322": 22, "gap": 22, "02a86": [22, 25], "02267": [22, 25], "gel": 22, "02a8c": [22, 25], "022db": [22, 25], "02a7e": [22, 25], "gescc": 22, "02aa9": 22, "gesdot": 22, "02a80": 22, "gesdoto": 22, "02a82": 22, "gesdotol": 22, "02a84": 22, "gesl": 22, "0fe00": [22, 25], "02a94": 22, "022d9": [22, 25], "02277": [22, 25], "gla": 22, "02aa5": 22, "gle": 22, "02a92": 22, "glj": 22, "02aa4": 22, "overlap": [22, 279, 283, 325, 797, 968, 1119], "gsdot": 22, "022d7": [22, 25], "gsim": 22, "02273": [22, 25], "gsime": 22, "02a8e": 22, "similar": [22, 48, 50, 119, 192, 194, 223, 227, 231, 233, 264, 277, 291, 451, 458, 534, 549, 576, 605, 606, 637, 649, 658, 724, 748, 750, 751, 770, 794, 795, 824, 848, 875, 955, 970, 984, 1041, 1066, 1100, 1102, 1208], "gsiml": 22, "02a90": 22, "0226b": [22, 25], "gtcc": 22, "02aa7": 22, "gtcir": 22, "02a7a": 22, "gtdot": 22, "gtquest": 22, "02a7c": 22, "mark": [22, 23, 25, 250, 291, 405, 406, 445, 467, 801, 828, 830, 1000, 1116, 1118, 1236], "gtrarr": 22, "02978": 22, "homtht": 22, "0223b": 22, "homothet": 22, "lap": 22, "02a85": [22, 25], "lat": 22, "02aab": 22, "larger": [22, 58, 67, 223, 230, 253, 270, 283, 333, 349, 497, 500, 512, 570, 650, 660, 666, 668, 873, 934, 937, 955, 1004, 1080, 1101, 1114, 1273], "late": [22, 192, 194, 316, 318, 744, 750, 751, 937, 1071, 1116, 1133, 1150, 1259], "02aad": 22, "ldot": 22, "022d6": [22, 25], "le": [22, 570], "02266": [22, 25], "02a8b": [22, 25], "022da": [22, 25], "02a7d": [22, 25], "lescc": 22, "02aa8": 22, "lesdot": 22, "02a7f": 22, "lesdoto": 22, "02a81": 22, "lesdotor": 22, "02a83": 22, "lesg": 22, "02a93": 22, "lg": [22, 331, 347, 1221], "02276": [22, 25], "lge": 22, "02a91": 22, "ll": [22, 25, 48, 50, 113, 161, 166, 172, 191, 192, 193, 195, 197, 199, 202, 206, 207, 219, 221, 231, 233, 247, 276, 279, 307, 310, 313, 591, 605, 666, 668, 669, 856, 928, 937, 984, 1016, 1031, 1088, 1092, 1098, 1224, 1262, 1267, 1278], "022d8": 22, "lsim": 22, "02272": [22, 25], "lsime": 22, "02a8d": 22, "lsimg": 22, "02a8f": 22, "0226a": [22, 25], "ltcc": 22, "02aa6": 22, "ltcir": 22, "02a79": 22, "ltdot": 22, "ltlarr": 22, "02976": 22, "ltquest": 22, "02a7b": 22, "ltrie": 22, "022b4": [22, 25], "normal": [22, 25, 77, 185, 192, 194, 199, 209, 214, 223, 283, 386, 488, 514, 532, 537, 541, 663, 665, 862, 868, 1000, 1067, 1081, 1135, 1214, 1227, 1241, 1253, 1271], "mcomma": 22, "02a29": 22, "comma": [22, 23, 229, 242, 263, 343, 1216], "mddot": 22, "0223a": 22, "mid": 22, "02223": [22, 25], "mlcp": 22, "02adb": 22, "transvers": 22, "intersect": [22, 25, 247, 271, 343, 1157], "model": [22, 111, 294, 295, 296, 298, 307, 309, 315, 316, 318, 355, 374, 375, 381, 383, 385, 386, 487, 767, 798, 800, 1139, 1211, 1214, 1233], "022a7": 22, "mstpo": 22, "0223e": 22, "invert": [22, 23, 49, 142, 223, 373, 1039], "lazi": [22, 260, 266, 276, 279, 440, 845, 1045], "02abb": 22, "0227a": [22, 25], "prap": 22, "02ab7": [22, 25], "prcue": 22, "pre": [22, 194, 223, 252, 386, 387, 450, 524, 652, 654, 658, 703, 705, 706, 744, 801, 810, 834, 835, 848, 891, 1066, 1132, 1147, 1220], "02ab3": 22, "02aaf": [22, 25], "singl": [22, 23, 25, 31, 48, 49, 50, 73, 95, 99, 100, 103, 108, 109, 113, 118, 121, 131, 146, 154, 170, 192, 194, 211, 250, 251, 260, 264, 266, 272, 273, 276, 279, 283, 307, 426, 432, 444, 445, 457, 503, 506, 510, 512, 528, 541, 561, 574, 659, 713, 801, 820, 828, 835, 844, 846, 863, 864, 866, 867, 868, 891, 896, 897, 898, 900, 917, 928, 936, 943, 953, 955, 1008, 1041, 1053, 1064, 1066, 1067, 1068, 1080, 1084, 1086, 1089, 1090, 1096, 1100, 1101, 1102, 1115, 1152, 1153, 1160, 1176, 1182, 1214, 1221, 1228, 1232, 1236, 1241, 1242, 1249, 1265, 1268], "prsim": 22, "0227e": [22, 25], "prurel": 22, "022b0": 22, "ratio": [22, 283], "02236": 22, "rtrie": 22, "022b5": [22, 25], "AS": [22, 25, 1022], "rtriltri": 22, "029ce": 22, "triangl": [22, 25, 626], "samalg": 22, "02210": [22, 25], "coproduct": [22, 25], "02abc": 22, "0227b": [22, 25], "scap": 22, "02ab8": [22, 25], "sccue": 22, "0227d": [22, 25], "sce": 22, "02ab4": 22, "02ab0": [22, 25], "scsim": 22, "0227f": [22, 25], "sdote": 22, "02a66": 22, "sfrown": 22, "simg": 22, "02a9e": 22, "02aa0": 22, "siml": 22, "02a9d": 22, "02a9f": 22, "smid": 22, "02323": 22, "smt": 22, "02aaa": 22, "smaller": [22, 269, 283, 426, 488, 497, 512, 1102], "smte": 22, "02aac": 22, "spar": [22, 309, 512], "02225": [22, 25], "parallel": [22, 25, 48, 50, 67, 80, 171, 173, 198, 220, 223, 227, 229, 264, 319, 320, 341, 386, 387, 514, 822, 867, 875, 974, 976, 984, 987, 1053, 1064, 1068, 1116, 1118, 1119, 1204, 1208, 1266, 1271], "sqsub": 22, "0228f": [22, 25], "squar": [22, 23, 25, 49, 211, 224, 234, 250, 256, 263, 266, 271, 273, 279, 283, 292, 304, 318, 325, 343, 347, 353, 359, 365, 524, 558, 668, 1110, 1159, 1163, 1228], "sqsube": 22, "02291": [22, 25], "sqsup": 22, "02290": [22, 25], "sqsupe": 22, "02292": [22, 25], "ssmile": 22, "sub": [22, 279, 325, 553, 570, 650, 783, 1106, 1145, 1154, 1250], "022d0": [22, 25], "sube": 22, "02ac5": [22, 25], "subedot": 22, "02ac3": 22, "submult": 22, "02ac1": 22, "subplu": 22, "02abf": 22, "subrarr": 22, "02979": 22, "subsim": 22, "02ac7": 22, "subsub": 22, "02ad5": 22, "subsup": 22, "02ad3": 22, "sup": [22, 1029], "022d1": [22, 25], "supdsub": 22, "02ad8": 22, "join": [22, 49, 203, 230, 250, 251, 256, 258, 260, 263, 264, 266, 271, 275, 281, 289, 304, 311, 321, 325, 331, 347, 354, 359, 365, 370, 375, 389, 398, 512, 525, 625, 765, 800, 817, 821, 822, 824, 825, 847, 1051, 1056, 1080, 1181, 1241], "supe": 22, "02ac6": [22, 25], "supedot": 22, "02ac4": 22, "suphsol": 22, "02283": [22, 25], "0002f": [22, 23], "suphsub": 22, "02ad7": 22, "suplarr": 22, "0297b": 22, "supmult": 22, "02ac2": 22, "supplu": 22, "02ac0": 22, "supsim": 22, "02ac8": 22, "supsub": 22, "02ad4": 22, "supsup": 22, "02ad6": 22, "thkap": 22, "thksim": 22, "0223c": [22, 25], "topfork": 22, "02ada": 22, "tee": [22, 875], "trie": 22, "0225c": [22, 25], "delta": [22, 25, 111, 256], "twixt": 22, "0226c": [22, 25], "vbar": 22, "02aeb": 22, "02ae8": 22, "underbar": 22, "vbarv": 22, "02ae9": 22, "vdash": 22, "022ab": 22, "022a9": 22, "022a8": [22, 25], "true": [22, 25, 37, 45, 49, 99, 100, 103, 107, 108, 109, 110, 146, 154, 174, 193, 195, 197, 202, 210, 211, 212, 213, 223, 224, 229, 234, 239, 241, 242, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 271, 273, 276, 277, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 386, 390, 396, 399, 432, 448, 449, 461, 473, 476, 522, 525, 529, 594, 658, 665, 690, 722, 725, 739, 747, 748, 756, 765, 770, 771, 772, 773, 775, 776, 777, 778, 797, 819, 821, 822, 824, 825, 839, 847, 863, 864, 891, 904, 972, 974, 1004, 1040, 1055, 1060, 1061, 1064, 1066, 1067, 1068, 1076, 1077, 1080, 1089, 1090, 1105, 1111, 1112, 1116, 1118, 1119, 1120, 1121, 1124, 1127, 1140, 1141, 1143, 1144, 1145, 1148, 1154, 1157, 1158, 1221, 1225, 1227, 1232, 1247, 1248, 1250], "022a2": [22, 25], "vdashl": 22, "02ae6": 22, "veebar": 22, "022bb": 22, "xor": [22, 1127], "vltri": 22, "022b2": [22, 25], "vprop": 22, "0221d": [22, 25], "vrtri": 22, "022b3": [22, 25], "vvdash": 22, "022aa": 22, "\u00bd": 23, "\u00bc": 23, "\u215b": 23, "\u00be": 23, "\u215c": 23, "\u215d": 23, "\u215e": 23, "_": [23, 26, 49, 211, 212, 247, 260, 263, 264, 266, 273, 276, 279, 286, 289, 301, 325, 347, 369, 396, 443, 512, 661, 768, 826, 848, 891, 974, 1071, 1098, 1116, 1118], "\u00b5": 23, "\u03c9": 23, "\u00aa": 23, "\u00ba": 23, "\u00b9": 23, "\u00b2": 23, "\u00b3": 23, "amp": [23, 263], "00026": 23, "ampersand": [23, 815], "apo": 23, "00027": 23, "apostroph": 23, "ast": [23, 570], "0002a": 23, "brvbar": 23, "000a6": 23, "broken": [23, 486, 487, 770, 976, 989, 1066, 1120, 1187, 1216], "bsol": 23, "cent": 23, "000a2": 23, "0003a": 23, "0002c": 23, "commat": 23, "00040": 23, "commerci": [23, 199, 870, 961], "AT": 23, "000a9": 23, "curren": 23, "000a4": 23, "currenc": [23, 309, 512], "02193": [23, 25], "deg": 23, "000b0": 23, "degre": [23, 139, 549, 560, 591, 701, 764, 937, 1133], "000f7": [23, 25], "divis": [23, 25, 236, 244, 247, 263, 266, 271, 273, 279, 399, 426, 447, 569, 570, 584, 1127, 1139, 1194], "00024": 23, "0003d": 23, "excl": 23, "00021": 23, "frac12": 23, "000bd": 23, "vulgar": 23, "fraction": [23, 283, 390], "ONE": [23, 849], "frac14": 23, "000bc": 23, "quarter": 23, "frac18": 23, "0215b": 23, "eighth": 23, "frac34": 23, "000be": 23, "frac38": 23, "0215c": 23, "frac58": 23, "0215d": 23, "frac78": 23, "0215e": 23, "0003e": 23, "horbar": 23, "02015": 23, "horizont": [23, 445], "hyphen": 23, "02010": 23, "iexcl": 23, "000a1": 23, "iquest": 23, "000bf": 23, "laquo": 23, "000ab": 23, "quotat": [23, 25], "lcub": 23, "0007b": [23, 25], "curli": [23, 25], "bracket": [23, 25, 1136], "ldquo": 23, "0201c": [23, 25], "lowbar": 23, "0005f": 23, "low": [23, 108, 114, 166, 174, 234, 263, 283, 300, 438, 470, 506, 510, 541, 558, 581, 594, 597, 598, 602, 844, 846, 867, 934, 966, 980, 1046, 1066, 1069, 1085, 1166, 1268, 1269, 1271, 1272, 1273], "lpar": 23, "00028": 23, "parenthesi": 23, "lsqb": 23, "0005b": [23, 25], "lsquo": 23, "02018": [23, 25], "0003c": 23, "micro": [23, 260, 266, 276, 279], "000b5": 23, "middot": 23, "000b7": [23, 25], "middl": [23, 25, 26, 49, 202, 212, 267, 283, 335, 338, 368, 369, 422, 490, 510, 597, 626, 928, 961, 1006, 1012, 1083, 1118], "nbsp": [23, 369], "000a0": [23, 25], "NO": [23, 25, 131, 203, 243, 384, 401, 529, 721, 747, 937, 1080], "space": [23, 25, 49, 67, 88, 99, 100, 113, 135, 146, 156, 162, 192, 193, 194, 199, 211, 214, 238, 252, 279, 297, 304, 306, 307, 325, 327, 328, 371, 372, 395, 406, 407, 415, 433, 452, 454, 473, 525, 559, 572, 657, 665, 700, 801, 865, 894, 936, 945, 982, 997, 1022, 1023, 1025, 1042, 1047, 1050, 1058, 1061, 1068, 1076, 1083, 1101, 1116, 1119, 1153, 1262], "000ac": 23, "NOT": [23, 25, 221, 380, 432, 471, 519, 522, 528, 529, 532, 575, 576, 589, 590, 821, 848, 920, 955, 1227], "num": [23, 197, 210, 211, 224, 234, 250, 264, 266, 271, 273, 279, 283, 301, 304, 343, 347, 365, 369, 386, 476, 680, 682, 748, 759, 764, 765, 766, 771, 782, 784, 786, 788, 834, 920, 925, 1111, 1216], "00023": 23, "ohm": 23, "02126": 23, "ordf": 23, "000aa": 23, "feminin": 23, "ordin": [23, 279, 286, 289, 325, 331, 347, 353, 359, 1221], "indic": [23, 242, 260, 266, 271, 276, 279, 315, 703, 945, 1066], "ordm": 23, "000ba": 23, "masculin": 23, "para": 23, "000b6": 23, "pilcrow": 23, "percnt": 23, "00025": 23, "percent": [23, 283], "period": [23, 73, 122, 126, 208, 231, 504, 657, 757, 928, 936, 994, 1023, 1033, 1064, 1066, 1067, 1080, 1236], "0002e": 23, "full": [23, 123, 131, 154, 168, 209, 254, 258, 304, 384, 449, 464, 492, 497, 525, 620, 631, 665, 822, 839, 845, 848, 870, 875, 936, 1055, 1061, 1066, 1108, 1127, 1160, 1216, 1224, 1261], "stop": [23, 190, 197, 252, 279, 316, 318, 320, 325, 343, 353, 385, 389, 541, 575, 589, 928, 930, 978, 1066, 1081, 1107, 1230, 1248], "0002b": 23, "plusmn": 23, "000b1": [23, 25], "000a3": 23, "quest": 23, "0003f": 23, "quot": [23, 211, 259, 262, 266, 273, 279, 287, 445, 528, 529, 855, 920, 921, 1006, 1152], "00022": 23, "raquo": 23, "000bb": 23, "rcub": 23, "0007d": [23, 25], "rdquo": 23, "0201d": [23, 25], "reg": 23, "000ae": [23, 25], "rpar": 23, "00029": 23, "rsqb": 23, "0005d": [23, 25], "rsquo": 23, "02019": [23, 25], "sect": 23, "000a7": 23, "section": [23, 25, 77, 192, 196, 197, 198, 215, 228, 252, 310, 313, 316, 383, 422, 634, 652, 724, 727, 801, 820, 824, 891, 934, 935, 974, 976, 1019, 1083, 1084, 1085, 1087, 1094, 1100, 1101, 1102, 1241], "semi": [23, 311, 345, 562, 844, 1050, 1103], "0003b": 23, "semicolon": [23, 525, 541, 1216], "shy": 23, "000ad": 23, "soft": [23, 411, 982], "sol": 23, "sung": 23, "0266a": 23, "sup1": 23, "000b9": 23, "superscript": 23, "sup2": 23, "000b2": 23, "sup3": 23, "000b3": 23, "time": [23, 25, 30, 40, 49, 62, 65, 74, 78, 87, 99, 100, 111, 113, 114, 118, 126, 131, 134, 146, 149, 159, 162, 172, 187, 191, 192, 193, 194, 196, 197, 199, 211, 212, 215, 223, 227, 229, 230, 231, 235, 241, 243, 245, 248, 250, 252, 253, 254, 260, 261, 263, 266, 267, 270, 271, 279, 280, 282, 285, 286, 288, 289, 303, 304, 307, 310, 311, 313, 316, 317, 319, 320, 321, 325, 328, 338, 341, 342, 345, 347, 352, 353, 358, 359, 365, 373, 378, 380, 382, 384, 386, 390, 411, 422, 438, 446, 460, 466, 469, 492, 494, 499, 500, 503, 504, 505, 506, 510, 513, 529, 532, 538, 541, 548, 549, 552, 558, 607, 637, 650, 657, 659, 699, 700, 744, 748, 750, 762, 764, 765, 770, 797, 801, 803, 808, 819, 824, 825, 835, 837, 855, 861, 862, 863, 864, 870, 871, 875, 891, 922, 928, 934, 936, 937, 955, 957, 961, 964, 976, 982, 984, 986, 1015, 1025, 1031, 1032, 1033, 1037, 1040, 1046, 1049, 1050, 1052, 1055, 1058, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1099, 1100, 1106, 1110, 1116, 1119, 1120, 1132, 1133, 1136, 1143, 1146, 1149, 1150, 1171, 1212, 1221, 1226, 1236, 1266, 1271, 1278], "000d7": 23, "trade": 23, "02122": 23, "02191": [23, 25], "verbar": 23, "0007c": [23, 25], "000a5": 23, "lorem": 24, "ipsum": 24, "h\u00f6dlmoser": 24, "anywai": [24, 30, 40, 47, 174, 191, 193, 194, 203, 221, 223, 243, 252, 253, 279, 452, 500, 506, 510, 522, 652, 658, 666, 668, 669, 749, 765, 800, 810, 813, 834, 835, 846, 870, 891, 976, 984, 1042, 1047, 1058, 1116, 1227, 1241], "hmm": [24, 198, 210, 221, 534, 637, 1080], "annoi": [24, 30, 390, 512, 800, 1241], "thing": [24, 27, 29, 30, 36, 89, 126, 191, 192, 194, 195, 196, 197, 198, 199, 203, 211, 215, 219, 222, 223, 227, 231, 243, 260, 266, 267, 269, 276, 279, 289, 342, 352, 381, 382, 386, 393, 450, 466, 470, 494, 500, 503, 510, 520, 555, 558, 626, 633, 634, 650, 652, 659, 663, 665, 687, 750, 797, 800, 801, 822, 828, 855, 870, 875, 925, 928, 929, 943, 948, 980, 984, 1024, 1029, 1061, 1066, 1067, 1083, 1096, 1100, 1101, 1107, 1121, 1135, 1158, 1248, 1262, 1266, 1268], "thin": [24, 25], "border": 24, "anfrag": 24, "dauer": 24, "tage": [24, 180, 216, 218, 226, 421], "sysprog": [24, 307, 991, 996, 1036, 1037, 1040, 1268, 1269, 1271, 1272], "should": [24, 30, 32, 42, 44, 66, 69, 111, 114, 115, 118, 130, 131, 139, 154, 161, 174, 193, 194, 197, 199, 203, 213, 219, 223, 227, 252, 253, 267, 273, 279, 283, 307, 342, 345, 347, 390, 395, 410, 411, 424, 449, 471, 486, 496, 500, 510, 516, 523, 541, 548, 553, 558, 559, 561, 562, 570, 607, 651, 658, 724, 748, 759, 765, 770, 801, 810, 813, 815, 822, 848, 855, 875, 891, 898, 903, 934, 936, 937, 943, 961, 974, 976, 980, 984, 1012, 1031, 1056, 1066, 1068, 1107, 1116, 1120, 1128, 1139, 1173, 1178, 1187, 1214, 1224, 1236, 1241, 1242, 1270, 1277, 1278, 1281, 1282], "catcher": 24, "somehow": [24, 29, 119, 126, 130, 142, 173, 177, 193, 345, 373, 386, 529, 663, 764, 824, 992, 1236, 1237], "einf\u00fchrungskur": 24, "richtet": [24, 1256], "programmier": [24, 421, 422, 1256, 1257, 1275], "kennen": [24, 150, 152, 165, 405], "lernen": 24, "zusammenh\u00e4ng": 24, "grundpfeil": 24, "werden": [24, 150, 152, 162, 165, 180, 200, 201, 208, 209, 210, 218, 224, 226, 235, 236, 239, 245, 254, 255, 270, 282, 294, 381, 920, 1255, 1256, 1257, 1264, 1275, 1276], "erkl\u00e4rt": [24, 211, 214, 218, 1255, 1276], "gro\u00dfe": [24, 180, 224], "bild": [24, 214], "orientieren": 24, "zurechtfinden": [24, 150, 152, 165, 405], "somedai": 24, "better": [24, 44, 47, 103, 104, 112, 130, 174, 190, 193, 197, 203, 204, 213, 223, 224, 226, 227, 229, 230, 231, 234, 235, 248, 252, 258, 260, 261, 263, 264, 269, 270, 271, 273, 274, 277, 280, 283, 288, 292, 300, 307, 320, 324, 330, 368, 373, 374, 384, 386, 429, 441, 449, 470, 471, 490, 500, 511, 514, 515, 519, 523, 529, 538, 541, 548, 626, 653, 660, 674, 687, 705, 720, 733, 736, 746, 750, 764, 766, 800, 801, 821, 837, 910, 936, 937, 984, 1025, 1050, 1053, 1066, 1080, 1081, 1110, 1121, 1139, 1153, 1166, 1205, 1206, 1208, 1213, 1215, 1220, 1226, 1241, 1250], "yet": [24, 67, 187, 192, 199, 202, 211, 213, 280, 281, 291, 304, 342, 421, 467, 500, 513, 548, 557, 570, 572, 607, 608, 620, 626, 739, 821, 825, 848, 857, 858, 936, 984, 1001, 1012, 1016, 1080, 1108, 1138, 1166, 1232, 1241, 1250, 1262], "redefin": 24, "wrap": [24, 49, 52, 250, 288, 342, 377, 380, 384, 523, 569, 816, 846, 984, 1100, 1233], "look": [24, 29, 30, 32, 48, 50, 54, 71, 78, 91, 113, 118, 126, 131, 190, 191, 192, 193, 194, 195, 197, 199, 202, 211, 219, 223, 227, 230, 242, 248, 252, 277, 307, 310, 313, 316, 317, 335, 338, 342, 356, 385, 386, 389, 422, 484, 492, 500, 506, 510, 512, 522, 541, 545, 591, 606, 607, 620, 637, 662, 674, 686, 732, 755, 761, 770, 816, 817, 846, 857, 858, 862, 867, 870, 881, 883, 888, 895, 903, 919, 929, 934, 936, 943, 953, 980, 984, 1012, 1029, 1039, 1042, 1066, 1077, 1101, 1105, 1115, 1132, 1135, 1173, 1178, 1187, 1208, 1215, 1216, 1227, 1243, 1258, 1259, 1268], "mdbootstrap": 24, "jqueri": 24, "icon": 24, "longrightarrow": 25, "rightarrow": 25, "doubleleftrightarrow": 25, "02220": 25, "applyfunct": 25, "02061": 25, "applic": [25, 49, 67, 83, 126, 182, 192, 197, 208, 221, 243, 338, 342, 345, 373, 382, 385, 386, 387, 401, 422, 496, 499, 506, 607, 683, 686, 767, 833, 869, 929, 936, 1016, 1050, 1215, 1265, 1272], "approx": [25, 1197, 1241], "approxeq": 25, "assign": [25, 86, 211, 212, 213, 218, 224, 234, 241, 249, 260, 263, 266, 269, 271, 275, 276, 281, 283, 287, 311, 315, 316, 318, 343, 348, 359, 366, 370, 381, 382, 404, 410, 411, 432, 449, 455, 456, 479, 494, 496, 562, 569, 575, 576, 584, 589, 590, 652, 653, 656, 662, 720, 728, 749, 755, 764, 766, 795, 806, 810, 827, 846, 848, 849, 850, 934, 937, 1053, 1064, 1066, 1068, 1070, 1148, 1159, 1230, 1232], "backcong": 25, "backepsilon": 25, "backprim": 25, "02035": 25, "prime": [25, 210, 211, 230, 234, 235, 237, 242, 254, 258, 270, 274, 277, 282, 288, 303, 310, 323, 324, 329, 330, 351, 352, 357, 358, 363, 364, 367, 368, 370, 488, 1181], "backsim": 25, "backsimeq": 25, "backslash": [25, 445, 915, 1152], "02216": 25, "barwedg": 25, "02305": 25, "02235": 25, "bernoulli": 25, "0212c": 25, "capit": [25, 244, 247, 256, 263, 273, 279, 304, 325, 398, 891, 1166], "bigcap": 25, "022c2": 25, "bigcirc": 25, "025ef": 25, "bigcup": 25, "022c3": 25, "union": [25, 247, 255, 271, 343, 374, 382, 383, 385, 488, 746, 786, 787, 788, 789, 790, 1157, 1260], "bigodot": 25, "02a00": 25, "bigoplu": 25, "02a01": 25, "bigotim": 25, "02a02": 25, "bigsqcup": 25, "02a06": 25, "bigstar": 25, "02605": 25, "bigtriangledown": 25, "025bd": 25, "white": [25, 315, 434], "bigtriangleup": 25, "025b3": 25, "biguplu": 25, "02a04": 25, "bigve": 25, "022c1": 25, "logic": [25, 54, 114, 134, 142, 194, 373, 378, 393, 440, 456, 470, 494, 554, 572, 1066, 1227, 1268], "bigwedg": 25, "022c0": 25, "bkarow": 25, "blacklozeng": 25, "029eb": 25, "lozeng": 25, "blacksquar": 25, "025aa": 25, "blacktriangl": 25, "025b4": 25, "blacktriangledown": 25, "025be": 25, "blacktriangleleft": 25, "025c2": 25, "blacktriangleright": 25, "025b8": 25, "bot": [25, 1241], "022a5": 25, "boxminu": 25, "0229f": 25, "boxplu": 25, "0229e": 25, "boxtim": 25, "022a0": 25, "breve": 25, "002d8": 25, "bullet": [25, 194, 1215], "02022": 25, "bumpeq": 25, "capitaldifferentiald": 25, "02145": 25, "struck": 25, "ital": 25, "d": [25, 54, 74, 86, 96, 110, 113, 149, 175, 192, 193, 194, 195, 210, 213, 221, 224, 229, 234, 239, 241, 247, 250, 253, 256, 257, 261, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 307, 311, 320, 321, 324, 325, 331, 339, 343, 347, 353, 359, 365, 369, 377, 396, 398, 399, 404, 426, 433, 434, 436, 440, 467, 471, 500, 510, 512, 525, 538, 553, 558, 652, 658, 664, 720, 725, 745, 812, 822, 825, 830, 845, 846, 853, 857, 858, 868, 870, 874, 875, 888, 891, 892, 913, 918, 920, 925, 930, 934, 936, 937, 957, 978, 992, 1017, 1022, 1041, 1042, 1066, 1080, 1083, 1106, 1108, 1134, 1140, 1145, 1147, 1148, 1152, 1153, 1156, 1177], "caylei": 25, "0212d": 25, "letter": [25, 443, 1138], "cedilla": 25, "000b8": 25, "centerdot": 25, "checkmark": 25, "02713": 25, "circeq": 25, "circlearrowleft": 25, "circlearrowright": 25, "circledast": 25, "0229b": 25, "circledcirc": 25, "0229a": 25, "circleddash": 25, "0229d": 25, "circledot": 25, "02299": 25, "circledr": 25, "024c8": 25, "latin": [25, 270, 331, 347], "circleminu": 25, "02296": 25, "circleplu": 25, "02295": 25, "circletim": 25, "02297": 25, "clockwisecontourintegr": 25, "02232": 25, "contour": 25, "closecurlydoublequot": 25, "closecurlyquot": 25, "clubsuit": 25, "02663": 25, "suit": [25, 31, 86, 118, 142, 161, 166, 227, 296, 300, 375, 412, 488, 497, 548, 549, 550, 552, 553, 554, 557, 570, 572, 573, 591, 604, 605, 606, 607, 608, 666, 667, 668, 669, 793, 794, 795, 797, 813, 814, 834, 844, 845, 1242, 1249, 1259, 1276], "coloneq": 25, "complement": [25, 95, 449, 526], "02201": 25, "complex": [25, 59, 192, 203, 223, 229, 249, 266, 271, 273, 279, 283, 287, 289, 304, 311, 325, 353, 404, 424, 467, 479, 494, 529, 757, 764, 934, 936, 1028, 1053, 1077, 1139, 1148, 1254, 1259], "02102": 25, "02261": 25, "ident": [25, 157, 275, 325, 337, 643, 1127, 1129, 1148], "contourintegr": 25, "0222e": 25, "counterclockwisecontourintegr": 25, "02233": 25, "cupcap": 25, "0224d": 25, "curlyeqprec": 25, "curlyeqsucc": 25, "curlyve": 25, "022ce": 25, "curlywedg": 25, "022cf": 25, "curvearrowleft": 25, "curvearrowright": 25, "dbkarow": 25, "ddagger": 25, "02021": 25, "ddotseq": 25, "del": [25, 210, 213, 214, 224, 239, 241, 244, 247, 255, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 397, 399, 1115, 1140, 1156], "02207": 25, "nabla": 25, "diacriticalacut": 25, "000b4": 25, "acut": 25, "accent": 25, "diacriticaldot": 25, "002d9": 25, "diacriticaldoubleacut": 25, "002dd": 25, "diacriticalgrav": 25, "00060": 25, "grave": 25, "diacriticaltild": 25, "002dc": 25, "022c4": 25, "diamondsuit": 25, "02666": 25, "differentiald": 25, "02146": 25, "digamma": 25, "003dd": 25, "div": [25, 500, 570], "divideontim": 25, "022c7": 25, "doteq": 25, "doteqdot": 25, "dotequ": 25, "dotminu": 25, "02238": 25, "dotplu": 25, "02214": 25, "dotsquar": 25, "022a1": 25, "doublebarwedg": 25, "02306": 25, "doublecontourintegr": 25, "0222f": 25, "surfac": [25, 223, 422, 867, 934, 936, 1066, 1213, 1215], "doubledot": 25, "000a8": 25, "diaeresi": 25, "doubledownarrow": 25, "doubleleftarrow": 25, "021d0": 25, "doubleleftte": 25, "doublelongleftarrow": 25, "doublelongleftrightarrow": 25, "doublelongrightarrow": 25, "doublerightarrow": 25, "021d2": 25, "doublerightte": 25, "doubleuparrow": 25, "doubleupdownarrow": 25, "doubleverticalbar": 25, "downarrow": 25, "downarrowuparrow": 25, "downdownarrow": 25, "downharpoonleft": 25, "downharpoonright": 25, "downleftvector": 25, "downrightvector": 25, "downte": 25, "022a4": 25, "downteearrow": 25, "021a7": 25, "drbkarow": 25, "02208": 25, "emptyset": 25, "02205": 25, "empti": [25, 29, 35, 37, 192, 195, 202, 209, 229, 231, 260, 263, 270, 271, 277, 279, 280, 282, 283, 286, 288, 289, 292, 303, 304, 309, 310, 311, 321, 323, 325, 329, 330, 347, 351, 353, 357, 358, 359, 363, 364, 365, 367, 368, 399, 432, 484, 528, 529, 643, 652, 653, 657, 666, 668, 684, 685, 703, 735, 742, 797, 800, 801, 822, 834, 845, 846, 857, 858, 871, 875, 885, 922, 931, 947, 984, 1012, 1041, 1055, 1115, 1156, 1181, 1182, 1186], "eqcirc": 25, "eqcolon": 25, "eqsim": 25, "eqslantgtr": 25, "eqslantless": 25, "equaltild": 25, "equilibrium": 25, "02203": 25, "THERE": [25, 654], "02130": 25, "exponential": 25, "02147": 25, "fallingdotseq": 25, "foral": [25, 1159], "02200": 25, "FOR": [25, 203, 224, 231, 747], "fouriertrf": 25, "02131": 25, "geq": 25, "02265": 25, "geqq": 25, "geqslant": 25, "ggg": 25, "gnapprox": 25, "02a8a": 25, "gneq": 25, "02a88": 25, "gneqq": 25, "02269": 25, "BUT": 25, "greaterequ": 25, "greaterequalless": 25, "greaterfullequ": 25, "greaterless": 25, "greaterslantequ": 25, "greatertild": 25, "gtrapprox": 25, "gtrdot": 25, "gtreqless": 25, "gtreqqless": 25, "gtrless": 25, "gtrsim": 25, "gvertneqq": 25, "hacek": 25, "002c7": 25, "caron": 25, "hbar": 25, "0210f": 25, "planck": 25, "constant": [25, 252, 260, 266, 269, 270, 271, 276, 279, 283, 321, 342, 432, 440, 441, 446, 456, 460, 529, 593, 699, 762, 763, 764, 766, 815, 835, 837], "pi": [25, 55, 67, 95, 113, 131, 134, 204, 207, 233, 263, 266, 307, 346, 410, 421, 446, 473, 476, 494, 604, 607, 608, 662, 682, 747, 749, 935, 936, 937, 1016, 1071, 1084, 1086, 1095, 1098, 1139, 1262, 1263, 1270], "heartsuit": 25, "02665": 25, "hilbertspac": 25, "0210b": 25, "h": [25, 29, 31, 86, 103, 109, 113, 122, 126, 127, 128, 129, 131, 159, 161, 166, 194, 199, 214, 217, 219, 224, 230, 234, 239, 252, 253, 260, 263, 264, 271, 273, 283, 296, 307, 318, 353, 356, 365, 369, 375, 377, 382, 425, 426, 428, 432, 434, 436, 444, 467, 468, 470, 476, 483, 491, 493, 497, 513, 514, 515, 516, 517, 518, 519, 521, 522, 534, 536, 537, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 557, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 627, 633, 634, 636, 637, 640, 643, 645, 650, 651, 652, 653, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 720, 724, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 747, 748, 750, 756, 765, 770, 771, 774, 782, 784, 786, 787, 788, 789, 790, 793, 794, 795, 797, 804, 809, 812, 813, 814, 822, 825, 834, 835, 839, 844, 845, 846, 847, 850, 856, 868, 875, 888, 891, 913, 920, 929, 931, 934, 943, 948, 952, 953, 955, 961, 964, 966, 968, 970, 972, 976, 978, 980, 989, 994, 997, 998, 1001, 1003, 1004, 1019, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1042, 1043, 1047, 1063, 1067, 1071, 1073, 1076, 1080, 1081, 1083, 1084, 1085, 1086, 1092, 1096, 1099, 1100, 1102, 1145, 1160, 1236, 1243, 1248, 1250, 1253], "hksearow": 25, "hkswarow": 25, "hookleftarrow": 25, "hookrightarrow": 25, "hslash": 25, "humpdownhump": 25, "humpequ": 25, "iiiint": 25, "02a0c": 25, "quadrupl": 25, "iiint": 25, "0222d": 25, "02111": 25, "imaginaryi": 25, "02148": 25, "imaglin": 25, "02110": 25, "imagpart": 25, "impli": [25, 744, 751, 764, 848, 1236], "integ": [25, 64, 65, 77, 139, 209, 211, 213, 228, 229, 230, 232, 236, 240, 246, 249, 253, 260, 263, 264, 266, 269, 272, 275, 276, 277, 279, 284, 287, 293, 305, 312, 325, 332, 344, 348, 354, 360, 370, 404, 426, 427, 432, 442, 445, 447, 448, 449, 460, 471, 473, 475, 476, 487, 488, 492, 498, 569, 570, 573, 591, 626, 654, 679, 682, 723, 755, 804, 818, 824, 849, 943, 1033, 1052, 1053, 1054, 1061, 1103, 1116, 1119, 1147, 1153, 1159, 1186, 1228, 1231, 1255, 1260], "02124": 25, "z": [25, 98, 166, 176, 210, 211, 214, 224, 234, 266, 267, 279, 282, 304, 331, 359, 369, 433, 443, 454, 455, 522, 668, 725, 850, 856, 919, 1081, 1134, 1264], "0222b": 25, "interc": 25, "022ba": 25, "intercal": 25, "intprod": 25, "02a3c": 25, "interior": 25, "product": [25, 30, 67, 74, 142, 194, 315, 506, 510, 538, 783, 928, 937, 1086, 1101, 1164], "invisiblecomma": 25, "02063": 25, "invis": [25, 576, 1268], "separ": [25, 67, 92, 93, 113, 137, 192, 218, 220, 230, 250, 263, 269, 279, 283, 286, 289, 304, 307, 310, 311, 313, 321, 325, 333, 347, 349, 353, 359, 365, 373, 382, 433, 471, 492, 512, 516, 524, 525, 541, 558, 626, 643, 672, 797, 809, 825, 867, 871, 876, 922, 925, 937, 952, 953, 986, 1050, 1067, 1083, 1085, 1094, 1102, 1107, 1165, 1182, 1187, 1216, 1248, 1255, 1270, 1273], "invisibletim": 25, "02062": 25, "langl": 25, "02329": 25, "laplacetrf": 25, "02112": 25, "lbrace": 25, "lbrack": 25, "leftanglebracket": 25, "leftarrow": 25, "leftarrowbar": 25, "021e4": 25, "leftarrowrightarrow": 25, "leftarrowtail": 25, "leftceil": 25, "02308": 25, "ceil": [25, 251, 264, 283, 353], "leftdoublebracket": 25, "0301a": 25, "leftdownvector": 25, "leftfloor": 25, "0230a": 25, "floor": [25, 236, 244, 247, 251, 263, 264, 266, 271, 273, 279, 283, 353, 399, 1127, 1139], "leftharpoondown": 25, "leftharpoonup": 25, "leftleftarrow": 25, "leftrightarrow": 25, "leftrightharpoon": 25, "leftrightsquigarrow": 25, "leftte": 25, "leftteearrow": 25, "021a4": 25, "leftthreetim": 25, "022cb": 25, "semidirect": 25, "lefttriangl": 25, "lefttriangleequ": 25, "leftupvector": 25, "leftvector": 25, "leq": 25, "02264": 25, "leqq": 25, "leqslant": 25, "lessapprox": 25, "lessdot": 25, "lesseqgtr": 25, "lesseqqgtr": 25, "lessequalgreat": 25, "lessfullequ": 25, "lessgreat": 25, "lessgtr": 25, "lesssim": 25, "lessslantequ": 25, "lesstild": 25, "llcorner": 25, "0231e": 25, "bottom": [25, 238, 342, 513, 591, 604, 891, 910, 928, 982, 1107], "corner": [25, 252, 315, 422, 433, 537, 540, 604, 822, 1265], "lleftarrow": 25, "lmoustach": 25, "023b0": 25, "upper": [25, 224, 247, 271, 273, 279, 289, 304, 311, 325, 347, 359, 389, 398, 422, 426, 430, 446, 470, 1068, 1169], "lower": [25, 194, 247, 260, 266, 271, 276, 279, 283, 289, 304, 325, 389, 398, 426, 430, 446, 470, 550, 693, 1041, 1066, 1069, 1127, 1232], "lnapprox": 25, "02a89": 25, "lneq": 25, "02a87": 25, "lneqq": 25, "02268": 25, "longleftarrow": 25, "longleftrightarrow": 25, "longmapsto": 25, "looparrowleft": 25, "looparrowright": 25, "lowerleftarrow": 25, "lowerrightarrow": 25, "025ca": 25, "lrcorner": 25, "0231f": 25, "lvertneqq": 25, "maltes": 25, "02720": 25, "mapsto": 25, "measuredangl": 25, "02221": 25, "measur": [25, 86, 118, 121, 131, 166, 194, 283, 316, 320, 342, 352, 375, 381, 496, 503, 569, 573, 595, 597, 598, 599, 600, 601, 602, 606, 607, 660, 782, 856, 866, 943, 1025, 1101, 1213, 1215], "mellintrf": 25, "02133": 25, "minusplu": 25, "02213": 25, "napprox": 25, "02249": 25, "0266e": 25, "music": [25, 194, 321], "02115": 25, "nearrow": 25, "negativemediumspac": 25, "0200b": 25, "width": [25, 260, 266, 269, 270, 276, 279, 301, 309, 325, 426, 449, 558, 643, 666, 928, 1153, 1216, 1264], "negativethickspac": 25, "negativethinspac": 25, "negativeverythinspac": 25, "nestedgreatergreat": 25, "nestedlessless": 25, "nexist": 25, "02204": 25, "ngeq": 25, "02271": 25, "neither": [25, 211, 386, 548, 575, 589, 813, 876, 878, 879, 1029, 1149], "nor": [25, 211, 267, 386, 575, 589, 659, 813, 876, 878, 879, 928, 1016, 1029, 1066, 1149], "ngeqq": 25, "ngeqslant": 25, "ngtr": 25, "0226f": 25, "nleftarrow": 25, "nleftrightarrow": 25, "nleq": 25, "02270": 25, "nleqq": 25, "nleqslant": 25, "nless": 25, "0226e": 25, "nonbreakingspac": 25, "notcongru": 25, "02262": 25, "notdoubleverticalbar": 25, "02226": 25, "notel": 25, "02209": 25, "notequ": 25, "02260": 25, "notequaltild": 25, "notexist": [25, 704], "notgreat": 25, "notgreaterequ": 25, "notgreaterfullequ": 25, "notgreatergreat": 25, "notgreaterless": 25, "02279": 25, "notgreaterslantequ": 25, "notgreatertild": 25, "02275": 25, "nothumpdownhump": 25, "notlefttriangl": 25, "022ea": 25, "notlefttriangleequ": 25, "022ec": 25, "notless": 25, "notlessequ": 25, "notlessgreat": 25, "02278": 25, "notlessless": 25, "notlessslantequ": 25, "notlesstild": 25, "02274": 25, "notpreced": 25, "02280": 25, "notprecedesequ": 25, "notprecedesslantequ": 25, "022e0": 25, "notreverseel": 25, "0220c": 25, "notrighttriangl": 25, "022eb": 25, "notrighttriangleequ": 25, "022ed": 25, "notsquaresubsetequ": 25, "022e2": 25, "notsquaresupersetequ": 25, "022e3": 25, "notsubset": 25, "020d2": 25, "notsubsetequ": 25, "02288": 25, "notsucce": 25, "02281": 25, "notsucceedsequ": 25, "notsucceedsslantequ": 25, "022e1": 25, "notsuperset": 25, "notsupersetequ": 25, "02289": 25, "nottild": 25, "02241": 25, "nottildeequ": 25, "02244": 25, "asymptot": 25, "nottildefullequ": 25, "02247": 25, "actual": [25, 29, 30, 35, 47, 194, 197, 202, 223, 250, 260, 266, 269, 276, 279, 283, 310, 313, 315, 345, 407, 550, 560, 744, 800, 801, 844, 928, 934, 936, 943, 1028, 1041, 1066, 1081, 1105, 1121, 1130, 1164, 1211, 1213, 1215, 1234, 1248], "nottildetild": 25, "notverticalbar": 25, "02224": 25, "nparallel": 25, "nprec": 25, "npreceq": 25, "nrightarrow": 25, "nshortmid": 25, "nshortparallel": 25, "nsimeq": 25, "nsubset": 25, "nsubseteq": 25, "nsubseteqq": 25, "nsucc": 25, "nsucceq": 25, "nsupset": 25, "nsupseteq": 25, "nsupseteqq": 25, "ntriangleleft": 25, "ntrianglelefteq": 25, "ntriangleright": 25, "ntrianglerighteq": 25, "nwarrow": 25, "oint": 25, "opencurlydoublequot": 25, "opencurlyquot": 25, "orderof": 25, "02134": 25, "partiald": 25, "02202": 25, "partial": [25, 103, 107, 317, 346, 961, 1212], "differenti": [25, 59, 735, 743, 831, 876, 934, 984, 1041, 1139, 1221], "plusminu": 25, "poincareplan": 25, "0210c": 25, "prec": 25, "precapprox": 25, "preccurlyeq": 25, "precedesequ": 25, "precedesslantequ": 25, "precedestild": 25, "preceq": 25, "precnapprox": 25, "02ab9": 25, "precneqq": 25, "02ab5": 25, "precnsim": 25, "022e8": 25, "precsim": 25, "02119": 25, "propto": 25, "quaternion": 25, "0210d": 25, "questeq": 25, "rangl": 25, "0232a": 25, "0211a": 25, "q": [25, 113, 231, 283, 470, 476, 650, 667, 668, 682, 750, 868, 891, 924, 1041, 1236], "rbrace": 25, "rbrack": 25, "0211c": 25, "realin": 25, "0211b": 25, "realpart": 25, "real": [25, 62, 114, 120, 124, 126, 129, 130, 131, 161, 188, 199, 202, 209, 211, 227, 248, 261, 266, 267, 274, 276, 279, 283, 288, 291, 301, 309, 315, 324, 330, 342, 365, 373, 383, 384, 390, 450, 499, 506, 514, 538, 552, 569, 591, 599, 600, 601, 602, 603, 607, 649, 650, 655, 761, 783, 824, 826, 841, 844, 868, 869, 891, 928, 936, 945, 984, 1016, 1049, 1066, 1067, 1154, 1208, 1211, 1213, 1242, 1258, 1259], "0211d": 25, "reverseel": 25, "0220b": 25, "reverseequilibrium": 25, "reverseupequilibrium": 25, "rightanglebracket": 25, "rightarrowbar": 25, "021e5": 25, "rightarrowleftarrow": 25, "rightarrowtail": 25, "rightceil": 25, "02309": 25, "rightdoublebracket": 25, "0301b": 25, "rightdownvector": 25, "rightfloor": 25, "0230b": 25, "rightharpoondown": 25, "rightharpoonup": 25, "rightleftarrow": 25, "rightleftharpoon": 25, "rightrightarrow": 25, "rightsquigarrow": 25, "rightte": 25, "rightteearrow": 25, "rightthreetim": 25, "022cc": 25, "righttriangl": 25, "righttriangleequ": 25, "rightupvector": 25, "rightvector": 25, "risingdotseq": 25, "rmoustach": 25, "023b1": 25, "rrightarrow": 25, "searrow": 25, "setminu": 25, "shortdownarrow": 25, "shortleftarrow": 25, "shortmid": 25, "shortparallel": 25, "shortrightarrow": 25, "shortuparrow": 25, "simeq": 25, "02243": 25, "smallcircl": 25, "02218": 25, "smallsetminu": 25, "spadesuit": 25, "02660": 25, "sqrt": [25, 251, 264, 353, 650, 652, 660, 668, 750, 761, 764], "0221a": 25, "sqsubset": 25, "sqsubseteq": 25, "sqsupset": 25, "sqsupseteq": 25, "025a1": 25, "squareintersect": 25, "02293": 25, "cap": [25, 263, 1166], "squaresubset": 25, "squaresubsetequ": 25, "squaresuperset": 25, "squaresupersetequ": 25, "squareunion": 25, "02294": 25, "cup": [25, 321, 359], "022c6": 25, "straightepsilon": 25, "003f5": 25, "straightphi": 25, "003d5": 25, "phi": 25, "subseteq": 25, "02286": 25, "subseteqq": 25, "subsetequ": 25, "subsetneq": 25, "0228a": 25, "subsetneqq": 25, "02acb": 25, "succ": 25, "succapprox": 25, "succcurlyeq": 25, "succeedsequ": 25, "succeedsslantequ": 25, "succeedstild": 25, "succeq": 25, "succnapprox": 25, "02aba": 25, "succneqq": 25, "02ab6": 25, "succnsim": 25, "022e9": 25, "succsim": 25, "suchthat": 25, "sum": [25, 49, 224, 244, 248, 249, 263, 264, 266, 269, 271, 279, 282, 283, 286, 289, 304, 311, 353, 359, 365, 369, 461, 476, 491, 493, 494, 496, 580, 606, 626, 650, 663, 665, 678, 682, 723, 764, 782, 784, 786, 788, 1068, 1127, 1143, 1226], "02211": 25, "summat": 25, "supersetequ": 25, "02287": 25, "supset": 25, "supseteq": 25, "supseteqq": 25, "supsetneq": 25, "0228b": 25, "supsetneqq": 25, "02acc": 25, "swarrow": 25, "therefor": [25, 187, 192], "02234": 25, "thickapprox": 25, "thicksim": 25, "thinspac": 25, "02009": 25, "tildeequ": 25, "tildefullequ": 25, "02245": 25, "tildetild": 25, "toea": 25, "tosa": 25, "025b5": 25, "triangledown": 25, "025bf": 25, "triangleleft": 25, "025c3": 25, "trianglelefteq": 25, "triangleq": 25, "triangleright": 25, "025b9": 25, "trianglerighteq": 25, "tripledot": 25, "020db": 25, "combin": [25, 54, 74, 97, 99, 100, 134, 146, 195, 212, 243, 299, 455, 466, 471, 488, 496, 547, 556, 568, 582, 682, 742, 761, 801, 837, 871, 873, 875, 891, 913, 925, 966, 1029, 1030, 1032, 1066, 1089, 1090, 1143, 1158, 1174, 1227, 1258, 1267], "twoheadleftarrow": 25, "twoheadrightarrow": 25, "ulcorn": 25, "0231c": 25, "unionplu": 25, "0228e": 25, "multiset": 25, "uparrow": 25, "uparrowdownarrow": 25, "updownarrow": 25, "upequilibrium": 25, "upharpoonleft": 25, "upharpoonright": 25, "upperleftarrow": 25, "upperrightarrow": 25, "upsilon": 25, "003c5": 25, "upte": 25, "upteearrow": 25, "021a5": 25, "upuparrow": 25, "urcorn": 25, "0231d": 25, "varepsilon": 25, "003b5": 25, "varkappa": 25, "003f0": 25, "kappa": 25, "varnoth": 25, "varphi": 25, "003c6": 25, "varpi": 25, "003d6": 25, "varpropto": 25, "varrho": 25, "003f1": 25, "rho": 25, "varsigma": 25, "003c2": 25, "sigma": [25, 283], "varsubsetneq": 25, "variant": [25, 103, 107, 235, 251, 264, 294, 295, 296, 355, 374, 383, 385, 387, 426, 442, 513, 579, 643, 783, 786, 798, 833, 837, 850, 961, 1275], "varsubsetneqq": 25, "varsupsetneq": 25, "varsupsetneqq": 25, "vartheta": 25, "003d1": 25, "theta": 25, "vartriangleleft": 25, "vartriangleright": 25, "vee": 25, "02228": 25, "vert": 25, "02016": 25, "verticalbar": 25, "verticaltild": 25, "02240": 25, "wreath": 25, "verythinspac": 25, "0200a": 25, "hair": 25, "wedg": 25, "02227": 25, "wp": 25, "02118": 25, "wr": [25, 1042, 1047, 1066], "zeetrf": 25, "02128": 25, "restructured text": 26, "cheat sheet": 26, "tabl": [26, 49, 131, 191, 223, 229, 230, 247, 255, 260, 266, 267, 269, 270, 273, 274, 276, 279, 286, 291, 325, 387, 426, 441, 455, 460, 461, 720, 834, 870, 1046, 1049, 1066, 1156, 1166, 1198, 1200, 1220, 1221], "given": [26, 48, 50, 59, 70, 91, 95, 96, 99, 100, 103, 106, 107, 182, 192, 194, 197, 199, 203, 212, 260, 266, 276, 279, 283, 307, 315, 316, 318, 325, 353, 369, 375, 384, 390, 436, 451, 494, 532, 573, 602, 605, 607, 626, 650, 722, 724, 739, 797, 868, 873, 882, 884, 891, 913, 934, 945, 955, 966, 984, 1066, 1094, 1106, 1194, 1203, 1208, 1210, 1216, 1227, 1230, 1259, 1270], "restructur": [26, 534], "markup": 26, "keyword": [26, 49, 177, 224, 227, 228, 229, 230, 232, 251, 253, 267, 272, 277, 279, 300, 303, 304, 310, 313, 317, 319, 320, 323, 325, 329, 335, 338, 341, 342, 345, 346, 382, 386, 404, 470, 500, 529, 662, 663, 665, 683, 728, 830, 1057, 1105, 1106, 1107, 1109, 1133, 1149, 1151, 1164, 1219, 1255, 1257], "guid": [26, 139, 161, 177, 197, 227, 252, 382, 423, 503, 523, 601, 756, 824, 870, 955, 970], "author": [26, 195, 202, 279, 665, 934, 957, 1066, 1164, 1217], "And": [26, 55, 86, 88, 91, 92, 93, 95, 113, 123, 135, 138, 143, 145, 149, 164, 169, 175, 192, 193, 194, 196, 199, 221, 227, 230, 250, 253, 258, 260, 269, 271, 280, 288, 295, 296, 297, 299, 300, 302, 303, 305, 306, 309, 313, 323, 324, 326, 327, 329, 334, 343, 348, 350, 351, 354, 357, 358, 360, 363, 364, 367, 368, 370, 371, 377, 378, 380, 383, 421, 511, 519, 523, 525, 530, 534, 542, 545, 547, 556, 568, 582, 606, 609, 625, 626, 656, 677, 685, 690, 700, 703, 716, 738, 742, 750, 786, 790, 797, 798, 801, 802, 803, 811, 821, 823, 836, 854, 859, 860, 869, 873, 881, 883, 885, 896, 897, 898, 900, 902, 911, 923, 935, 938, 1009, 1031, 1040, 1045, 1062, 1071, 1083, 1091, 1107, 1114, 1123, 1124, 1148, 1175, 1202, 1204, 1229, 1258, 1274, 1276], "overridden": [26, 449, 744, 828, 1241], "titl": [26, 27, 198, 261, 274, 279, 288, 291, 324, 325, 330, 1124, 1208, 1213], "favorit": [26, 159, 223, 227, 230, 248, 252, 274, 277, 390, 937, 984, 1067, 1132, 1208, 1262], "__": [26, 208, 210, 218, 325, 838, 843, 1128], "ref": [26, 113, 295, 296, 749, 794, 800, 845], "role": [26, 195, 199, 506, 607, 928], "must": [26, 30, 31, 99, 100, 113, 119, 138, 161, 166, 173, 195, 199, 213, 219, 223, 224, 226, 227, 230, 234, 235, 248, 250, 252, 260, 266, 267, 274, 276, 277, 279, 300, 325, 342, 426, 443, 446, 460, 468, 486, 488, 503, 510, 512, 516, 522, 553, 558, 559, 572, 575, 576, 589, 590, 604, 607, 610, 611, 612, 624, 634, 660, 662, 664, 674, 675, 710, 722, 724, 730, 737, 755, 756, 761, 763, 770, 801, 810, 816, 819, 824, 837, 850, 857, 858, 875, 885, 893, 961, 968, 976, 982, 989, 1006, 1012, 1015, 1025, 1026, 1029, 1034, 1042, 1046, 1053, 1064, 1067, 1077, 1083, 1086, 1102, 1107, 1108, 1125, 1130, 1136, 1149, 1150, 1152, 1153, 1155, 1158, 1188, 1208, 1242, 1253], "uniqu": [26, 253, 295, 296, 298, 375, 384, 607, 626, 794, 796, 801, 822, 846, 937, 1019, 1033, 1103, 1156, 1160, 1230], "across": [26, 30, 192, 199, 208, 260, 266, 276, 279, 309, 318, 342, 382, 422, 449, 469, 493, 519, 521, 525, 532, 548, 553, 572, 635, 750, 797, 824, 825, 857, 858, 870, 888, 934, 937, 1025, 1033, 1077, 1139, 1150, 1217], "tree": [26, 29, 53, 89, 91, 113, 135, 139, 142, 155, 157, 158, 159, 168, 174, 187, 189, 193, 195, 198, 203, 219, 220, 227, 251, 264, 267, 270, 274, 307, 335, 338, 350, 372, 375, 376, 377, 378, 379, 380, 479, 501, 506, 513, 520, 536, 543, 570, 605, 607, 703, 707, 855, 857, 858, 875, 891, 892, 899, 903, 921, 936, 959, 961, 976, 986, 1009, 1016, 1053, 1062, 1086, 1092, 1112, 1124, 1215, 1233, 1241, 1243], "_dummi": 26, "dummi": [26, 198, 410, 411, 801, 964, 1003, 1248], "One": [26, 30, 48, 49, 50, 65, 69, 71, 86, 95, 104, 112, 146, 192, 194, 203, 219, 230, 251, 269, 290, 291, 316, 369, 373, 375, 377, 390, 404, 415, 421, 430, 470, 483, 492, 495, 504, 506, 511, 516, 542, 548, 607, 626, 634, 649, 667, 672, 682, 687, 739, 741, 744, 751, 756, 764, 799, 807, 825, 828, 861, 863, 864, 867, 875, 891, 934, 936, 937, 984, 989, 1029, 1050, 1055, 1066, 1067, 1068, 1076, 1081, 1119, 1143, 1216, 1217, 1221, 1226, 1271, 1273], "a_footnot": 26, "footer": 26, "block": [26, 52, 87, 99, 100, 146, 150, 152, 155, 165, 171, 173, 191, 192, 193, 194, 231, 233, 251, 258, 260, 264, 266, 276, 279, 288, 291, 300, 321, 324, 342, 389, 404, 409, 413, 426, 428, 446, 465, 471, 497, 500, 524, 554, 655, 658, 724, 770, 797, 801, 819, 820, 822, 824, 825, 845, 861, 863, 864, 867, 868, 913, 936, 970, 986, 996, 1000, 1028, 1035, 1036, 1050, 1055, 1060, 1066, 1076, 1077, 1080, 1082, 1105, 1107, 1133, 1136, 1143, 1146, 1208], "rubric": 26, "nbsphinx": 27, "capabl": [27, 67, 192, 193, 199, 386, 818, 856, 921, 928, 936, 984, 1067, 1234, 1259, 1262], "render": [27, 197, 359, 369], "nice": [27, 52, 192, 208, 231, 253, 318, 505, 506, 521, 538, 594, 660, 800, 856, 930, 936, 1003, 1064, 1066, 1129, 1166, 1213, 1215, 1224, 1230, 1244], "few": [27, 114, 192, 193, 194, 195, 198, 199, 223, 227, 260, 424, 494, 524, 759, 869, 984, 1066, 1083, 1107, 1111, 1242, 1266], "keep": [27, 30, 99, 100, 171, 173, 193, 194, 215, 227, 230, 234, 250, 283, 356, 390, 415, 438, 494, 500, 501, 520, 529, 722, 853, 870, 873, 929, 976, 984, 989, 1042, 1045, 1049, 1058, 1096, 1099, 1119, 1136, 1213, 1214, 1258], "mind": [27, 119, 171, 173, 192, 193, 427, 816, 1136], "though": [27, 30, 32, 40, 58, 191, 192, 197, 199, 202, 203, 206, 207, 212, 219, 223, 227, 229, 230, 248, 251, 253, 264, 266, 267, 269, 274, 277, 291, 300, 309, 310, 313, 324, 345, 346, 375, 382, 387, 390, 430, 440, 449, 461, 466, 488, 519, 525, 532, 548, 549, 550, 553, 562, 570, 572, 605, 606, 607, 626, 650, 652, 653, 657, 660, 662, 665, 666, 668, 669, 682, 683, 739, 748, 750, 762, 764, 770, 784, 786, 800, 801, 806, 810, 812, 815, 819, 834, 845, 846, 848, 850, 861, 869, 870, 873, 876, 910, 925, 928, 934, 936, 937, 939, 943, 961, 976, 1015, 1023, 1025, 1047, 1061, 1066, 1067, 1069, 1071, 1077, 1105, 1107, 1108, 1111, 1116, 1118, 1125, 1127, 1135, 1139, 1152, 1178, 1208, 1215, 1216, 1228, 1236, 1237, 1241, 1243, 1258, 1259, 1265], "toplevel": [27, 31, 98, 113, 131, 162, 171, 219, 252, 301, 378, 514, 515, 516, 517, 519, 520, 521, 522, 529, 534, 538, 546, 591, 856, 957, 985, 1105, 1250], "rest": [27, 180, 199, 201, 210, 234, 244, 247, 251, 253, 271, 279, 311, 325, 343, 346, 399, 424, 434, 459, 540, 680, 681, 736, 837, 870, 931, 972, 1029, 1066, 1067, 1127, 1130, 1154, 1184, 1188, 1216, 1231, 1273, 1276], "begin": [27, 29, 30, 111, 116, 121, 123, 124, 130, 131, 170, 191, 192, 202, 229, 250, 251, 263, 266, 279, 283, 295, 296, 300, 317, 325, 346, 386, 421, 426, 434, 446, 449, 470, 476, 493, 494, 496, 538, 553, 643, 653, 665, 678, 680, 682, 683, 684, 686, 687, 689, 690, 691, 693, 694, 695, 696, 700, 703, 715, 749, 764, 770, 773, 777, 800, 801, 803, 816, 833, 834, 837, 856, 891, 915, 916, 924, 1017, 1025, 1042, 1112, 1136, 1158, 1208, 1242, 1262], "deeper": [27, 172, 193, 223, 310, 313, 541, 1061], "trail": [27, 196, 279, 321, 325, 343, 395, 396], "underscor": [27, 443, 1108, 1115, 1128, 1138], "For": [27, 111, 113, 157, 159, 162, 164, 172, 174, 191, 192, 196, 199, 202, 204, 205, 207, 212, 215, 220, 221, 223, 227, 243, 248, 251, 258, 261, 264, 269, 279, 282, 284, 288, 296, 298, 299, 300, 324, 330, 335, 346, 384, 415, 421, 434, 435, 441, 487, 526, 536, 537, 570, 626, 651, 658, 661, 674, 683, 703, 751, 821, 824, 830, 835, 845, 850, 857, 858, 868, 891, 928, 936, 937, 955, 970, 984, 1006, 1015, 1019, 1055, 1066, 1077, 1084, 1085, 1086, 1095, 1099, 1132, 1133, 1143, 1150, 1158, 1182, 1187, 1208, 1211, 1213, 1215, 1257, 1258, 1260], "ipynb": [27, 210, 230, 240, 242, 279, 289, 310, 314, 320, 324, 330, 335, 338, 342, 346, 352, 353, 358, 364, 368, 1210, 1214], "labels_": [27, 212, 214, 369], "result": [27, 67, 114, 119, 130, 194, 203, 208, 210, 230, 234, 250, 260, 266, 269, 276, 279, 283, 292, 301, 321, 325, 433, 449, 484, 491, 493, 494, 500, 529, 550, 575, 579, 665, 693, 747, 761, 763, 815, 835, 955, 1015, 1066, 1071, 1100, 1112, 1127, 1141, 1147, 1159, 1216], "properti": [27, 173, 174, 211, 227, 251, 264, 281, 283, 300, 304, 317, 319, 320, 324, 334, 335, 338, 341, 342, 345, 346, 350, 358, 364, 368, 376, 377, 378, 379, 408, 513, 519, 522, 523, 529, 538, 543, 545, 1123, 1247, 1250, 1271], "cluster": [27, 214, 369, 1210, 1215], "membership": [27, 212, 229, 230, 272, 562, 1140, 1157], "each": [27, 49, 65, 95, 99, 100, 119, 122, 146, 192, 193, 194, 212, 230, 231, 243, 260, 263, 266, 276, 279, 283, 316, 318, 325, 381, 382, 385, 387, 389, 395, 401, 404, 409, 476, 501, 504, 506, 550, 558, 591, 605, 606, 661, 743, 757, 783, 797, 800, 801, 840, 848, 857, 863, 864, 885, 889, 891, 934, 936, 937, 972, 980, 984, 1042, 1052, 1056, 1064, 1066, 1100, 1112, 1115, 1120, 1126, 1187, 1207, 1213, 1215, 1216, 1217, 1232, 1236, 1266, 1270, 1279], "sequenc": [27, 95, 98, 103, 107, 211, 212, 214, 224, 230, 251, 253, 262, 264, 265, 266, 269, 272, 276, 279, 283, 301, 316, 318, 325, 331, 370, 425, 479, 550, 611, 612, 613, 692, 725, 756, 765, 837, 1066, 1068, 1112, 1113, 1114, 1130, 1139, 1140, 1145, 1147, 1150, 1154, 1155, 1179, 1191, 1221, 1259], "bring": [27, 32, 111, 119, 131, 173, 192, 194, 202, 203, 223, 227, 230, 233, 269, 307, 310, 313, 316, 318, 342, 345, 386, 412, 417, 418, 422, 626, 664, 703, 720, 732, 840, 934, 936, 937, 980, 984, 996, 1066, 1084, 1132, 1181, 1204, 1221, 1258, 1259, 1262, 1265, 1269], "record": [27, 40, 131, 196, 198, 199, 224, 235, 236, 242, 252, 257, 264, 280, 300, 315, 335, 338, 395, 407, 505, 506, 930, 1103, 1108, 1123, 1166, 1187, 1198, 1199, 1200, 1201, 1202, 1204, 1216], "11": [27, 49, 95, 113, 143, 204, 212, 213, 218, 219, 223, 224, 229, 230, 231, 235, 236, 239, 241, 244, 247, 250, 253, 255, 256, 257, 260, 265, 266, 267, 271, 273, 276, 279, 283, 286, 289, 292, 295, 296, 301, 305, 308, 311, 315, 321, 325, 331, 339, 342, 343, 354, 355, 359, 365, 369, 374, 380, 382, 396, 397, 398, 399, 400, 407, 410, 417, 418, 421, 424, 438, 504, 506, 514, 552, 605, 633, 642, 643, 649, 651, 652, 654, 658, 660, 666, 668, 678, 683, 685, 690, 703, 705, 706, 709, 742, 744, 747, 748, 749, 750, 756, 781, 797, 801, 803, 804, 805, 806, 808, 810, 822, 824, 825, 828, 830, 831, 835, 837, 842, 845, 846, 850, 851, 855, 869, 913, 922, 1041, 1053, 1058, 1075, 1083, 1084, 1085, 1134, 1140, 1145, 1164, 1198, 1200, 1204, 1206, 1210, 1212, 1213, 1224, 1241, 1253, 1257, 1258, 1260, 1279], "12": [27, 49, 55, 95, 111, 113, 164, 170, 197, 202, 203, 204, 212, 213, 217, 224, 229, 235, 236, 239, 241, 244, 247, 250, 251, 255, 256, 257, 260, 263, 264, 268, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 307, 308, 309, 311, 315, 321, 325, 331, 336, 339, 342, 343, 345, 347, 354, 365, 369, 398, 399, 403, 417, 418, 421, 488, 512, 515, 540, 626, 797, 813, 835, 848, 861, 873, 876, 891, 913, 916, 922, 930, 934, 937, 1007, 1031, 1039, 1067, 1083, 1096, 1098, 1099, 1105, 1107, 1108, 1111, 1120, 1139, 1150, 1210, 1212, 1213, 1228, 1230, 1236, 1247, 1279], "bigplan": [27, 214, 1210], "686": [27, 212, 266, 369, 1098], "unknown": [27, 309, 512, 783, 936, 940, 1121], "target": [27, 49, 97, 146, 193, 195, 203, 243, 252, 334, 350, 376, 377, 378, 379, 380, 381, 406, 494, 497, 513, 519, 522, 523, 529, 531, 534, 538, 540, 545, 559, 662, 764, 821, 893, 934, 957, 959, 964, 984, 1026, 1060, 1085, 1086, 1089, 1090, 1096, 1098, 1105, 1116, 1118, 1215, 1243, 1263, 1266, 1274], "cmd": [27, 198, 978, 1003, 1243], "color": [27, 197, 214, 369, 913, 1210, 1236], "tmp": [27, 139, 170, 193, 195, 198, 234, 247, 250, 266, 271, 279, 283, 286, 289, 291, 296, 298, 301, 304, 311, 321, 325, 331, 347, 353, 359, 365, 369, 435, 477, 500, 513, 526, 532, 538, 543, 544, 607, 608, 843, 852, 856, 861, 871, 875, 876, 889, 890, 891, 893, 895, 896, 898, 900, 903, 910, 913, 914, 920, 961, 984, 1008, 1015, 1026, 1027, 1029, 1030, 1032, 1042, 1067, 1073, 1086, 1107, 1158, 1165, 1220, 1242, 1243], "craft": [28, 40, 277, 319, 320, 374, 510, 575, 751, 851], "tar": [29, 47, 53, 98, 113, 139, 166, 184, 203, 231, 233, 297, 306, 307, 327, 328, 371, 372, 506, 852, 854, 855, 984, 1026, 1092, 1096, 1098, 1099, 1105, 1164, 1243, 1267], "xz": [29, 47, 53, 139, 174, 195, 203, 307, 499, 1026, 1092, 1096, 1098, 1099], "push": [29, 66, 161, 164, 170, 196, 198, 209, 252, 267, 277, 334, 350, 376, 379, 384, 410, 471, 522, 523, 529, 548, 572, 681, 684, 822, 984, 1050, 1066, 1069, 1184, 1188, 1241], "cmakelist": [29, 31, 111, 113, 118, 131, 161, 217, 218, 219, 220, 221, 252, 269, 375, 377, 378, 380, 382, 514, 515, 516, 517, 519, 520, 522, 529, 532, 534, 538, 540, 541, 543, 544, 545, 546, 591, 604, 605, 606, 607, 608, 627, 630, 633, 634, 636, 639, 642, 645, 732, 1072, 1075, 1079, 1084, 1085, 1247, 1250, 1252], "src": [29, 166, 173, 192, 193, 195, 252, 266, 296, 298, 304, 410, 438, 450, 500, 519, 534, 536, 537, 546, 554, 591, 594, 604, 605, 606, 607, 609, 667, 684, 844, 845, 856, 875, 920, 1158, 1164, 1241], "talk": [29, 32, 37, 51, 53, 54, 55, 73, 113, 114, 130, 154, 171, 192, 196, 211, 215, 223, 227, 230, 235, 267, 269, 270, 346, 384, 387, 406, 510, 511, 801, 806, 839, 850, 928, 933, 934, 937, 984, 1003, 1012, 1047, 1066, 1253], "memori": [29, 30, 36, 42, 62, 67, 69, 86, 98, 99, 100, 150, 165, 191, 192, 193, 195, 197, 204, 207, 211, 212, 213, 216, 218, 223, 229, 230, 238, 242, 243, 247, 260, 266, 269, 276, 279, 294, 295, 296, 298, 307, 316, 318, 320, 325, 342, 345, 355, 370, 374, 375, 382, 384, 385, 386, 422, 424, 438, 444, 466, 467, 473, 486, 488, 491, 497, 500, 502, 506, 508, 554, 570, 572, 574, 575, 576, 578, 580, 581, 588, 589, 615, 616, 640, 648, 649, 654, 655, 664, 682, 683, 684, 700, 722, 738, 783, 797, 798, 800, 806, 813, 821, 827, 837, 843, 845, 846, 847, 861, 867, 869, 875, 980, 984, 986, 989, 996, 1012, 1021, 1041, 1042, 1043, 1045, 1050, 1052, 1053, 1066, 1067, 1068, 1101, 1105, 1118, 1119, 1132, 1139, 1220, 1255, 1256, 1260, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1272], "load": [29, 30, 40, 43, 49, 64, 77, 191, 202, 203, 209, 210, 214, 230, 238, 239, 255, 256, 260, 266, 276, 279, 283, 286, 292, 301, 318, 319, 320, 336, 339, 341, 342, 359, 369, 386, 486, 506, 543, 867, 936, 937, 940, 943, 952, 959, 964, 978, 980, 984, 986, 996, 1046, 1047, 1053, 1059, 1066, 1100, 1101, 1208, 1226, 1266, 1268, 1271], "store": [29, 44, 49, 64, 77, 95, 118, 122, 191, 193, 209, 211, 219, 220, 250, 253, 260, 318, 319, 320, 341, 342, 386, 434, 486, 525, 532, 550, 725, 770, 782, 784, 788, 801, 803, 806, 837, 870, 883, 950, 984, 1012, 1053, 1059, 1066, 1084, 1103, 1107, 1108, 1112, 1156, 1187, 1220, 1236, 1271], "search": [29, 38, 40, 95, 149, 174, 192, 212, 215, 221, 223, 229, 230, 239, 250, 251, 253, 256, 260, 263, 264, 266, 269, 270, 271, 274, 276, 279, 292, 301, 304, 308, 311, 316, 321, 325, 331, 333, 349, 353, 359, 365, 470, 497, 500, 512, 607, 609, 692, 697, 724, 726, 873, 891, 924, 961, 1047, 1061, 1084, 1098, 1115, 1144, 1214, 1241, 1273], "databas": [29, 30, 42, 67, 155, 210, 211, 230, 252, 258, 263, 264, 267, 269, 270, 273, 277, 291, 319, 320, 341, 373, 395, 550, 551, 733, 735, 737, 738, 848, 887, 919, 1007, 1126, 1175, 1187, 1206, 1223, 1226, 1237, 1253, 1280], "payload": [29, 929, 931, 945, 972], "primari": [29, 192, 203, 223, 309, 310, 313, 504, 848, 857, 858, 866, 868, 982, 1187], "insert": [29, 49, 52, 98, 111, 190, 191, 210, 227, 229, 234, 264, 266, 269, 271, 273, 279, 283, 286, 304, 325, 331, 343, 359, 369, 384, 467, 484, 488, 504, 551, 557, 579, 585, 614, 615, 626, 643, 660, 683, 684, 697, 708, 709, 726, 734, 736, 740, 755, 770, 795, 797, 801, 813, 815, 834, 891, 934, 961, 968, 978, 980, 984, 1016, 1056, 1067, 1140, 1155, 1156, 1165, 1220, 1241], "const": [29, 45, 60, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 112, 113, 118, 218, 253, 269, 355, 374, 375, 382, 384, 385, 386, 438, 446, 450, 468, 470, 476, 484, 496, 498, 500, 513, 534, 536, 540, 549, 550, 551, 552, 553, 554, 557, 572, 573, 579, 580, 581, 584, 585, 586, 588, 589, 590, 600, 604, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 624, 625, 626, 634, 639, 641, 643, 650, 651, 652, 653, 655, 657, 658, 663, 664, 665, 666, 667, 668, 669, 672, 675, 682, 686, 688, 689, 690, 691, 704, 705, 708, 709, 720, 722, 724, 726, 727, 733, 735, 736, 739, 740, 742, 743, 744, 748, 755, 761, 763, 764, 765, 768, 770, 772, 773, 776, 777, 778, 779, 784, 788, 790, 793, 794, 795, 797, 798, 801, 803, 804, 805, 806, 810, 812, 813, 814, 815, 824, 825, 826, 827, 830, 831, 833, 835, 837, 839, 840, 844, 845, 846, 847, 848, 940, 943, 948, 964, 966, 970, 978, 980, 994, 998, 1004, 1017, 1025, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1042, 1043, 1051, 1053, 1055, 1063, 1070, 1073, 1077, 1081, 1102, 1120, 1197, 1219, 1253, 1256, 1257], "care": [29, 33, 35, 69, 131, 154, 191, 192, 194, 197, 199, 223, 231, 263, 395, 426, 449, 458, 460, 476, 500, 501, 546, 575, 576, 651, 664, 682, 724, 745, 750, 788, 789, 793, 834, 835, 850, 856, 857, 858, 936, 961, 974, 976, 984, 989, 1012, 1016, 1028, 1050, 1058, 1085, 1108, 1132, 1136, 1148, 1155, 1158, 1159, 1166, 1189, 1212, 1220, 1233, 1243], "dump": [29, 192, 210, 239, 255, 256, 266, 279, 283, 286, 292, 301, 336, 339, 342, 554, 574, 575, 658, 662, 827, 844, 869, 1066, 1080, 1081], "db": [29, 37, 202, 227, 252, 253, 254, 258, 264, 277, 292, 519, 522, 550, 551, 557, 579, 585, 733, 734, 735, 736, 737, 751, 1165], "start": [29, 52, 99, 100, 118, 119, 136, 139, 146, 159, 161, 190, 191, 192, 193, 194, 197, 202, 203, 210, 215, 220, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 242, 243, 245, 248, 252, 253, 258, 264, 273, 279, 280, 289, 291, 304, 307, 309, 311, 313, 316, 318, 320, 325, 328, 343, 345, 346, 353, 356, 359, 365, 369, 372, 373, 383, 390, 407, 421, 423, 430, 433, 434, 443, 446, 460, 483, 504, 505, 524, 538, 543, 550, 553, 560, 626, 637, 643, 709, 720, 724, 757, 797, 800, 801, 821, 824, 837, 857, 858, 862, 863, 864, 867, 869, 870, 891, 892, 904, 913, 915, 928, 945, 984, 997, 1022, 1023, 1032, 1035, 1042, 1046, 1051, 1052, 1056, 1060, 1061, 1064, 1066, 1067, 1070, 1080, 1083, 1098, 1103, 1110, 1115, 1116, 1118, 1119, 1127, 1137, 1138, 1144, 1154, 1170, 1178, 1179, 1197, 1215, 1217, 1225, 1226, 1230, 1233, 1241, 1249, 1258, 1259, 1269, 1271], "pull": [29, 31, 37, 49, 52, 66, 113, 114, 130, 154, 161, 164, 196, 243, 252, 253, 267, 373, 375, 389, 412, 512, 519, 520, 522, 548, 664, 800, 957, 984, 1112, 1115, 1232], "paramet": [29, 45, 49, 99, 100, 101, 102, 103, 104, 105, 108, 112, 118, 126, 159, 168, 173, 191, 194, 199, 208, 211, 218, 219, 223, 228, 229, 230, 232, 234, 242, 243, 247, 250, 251, 252, 253, 260, 264, 266, 269, 270, 272, 275, 276, 279, 286, 289, 310, 311, 313, 315, 360, 377, 382, 384, 390, 395, 404, 425, 434, 436, 440, 451, 455, 470, 471, 476, 478, 479, 490, 496, 511, 519, 540, 543, 594, 604, 610, 626, 640, 650, 652, 655, 659, 661, 662, 665, 669, 674, 675, 722, 724, 729, 756, 763, 764, 770, 783, 803, 814, 822, 830, 846, 848, 871, 873, 936, 942, 943, 950, 964, 987, 992, 997, 1000, 1003, 1004, 1019, 1041, 1051, 1061, 1066, 1077, 1085, 1099, 1103, 1108, 1122, 1125, 1130, 1137, 1153, 1160, 1166, 1176, 1182, 1184, 1188, 1194, 1203, 1213, 1216, 1219, 1226, 1228, 1230, 1232, 1255, 1261], "argv": [29, 37, 194, 210, 211, 214, 224, 242, 251, 252, 257, 260, 264, 266, 269, 270, 274, 276, 279, 280, 282, 285, 288, 303, 309, 310, 313, 319, 323, 324, 329, 330, 341, 345, 351, 352, 357, 358, 359, 363, 364, 367, 368, 389, 397, 477, 512, 519, 534, 540, 554, 594, 748, 934, 1029, 1030, 1031, 1032, 1033, 1037, 1040, 1042, 1043, 1063, 1071, 1080, 1102, 1108, 1115, 1131, 1160, 1176, 1180, 1183, 1194, 1248, 1253], "string": [29, 37, 45, 86, 95, 103, 107, 118, 119, 139, 142, 194, 218, 228, 229, 230, 232, 235, 236, 239, 242, 246, 248, 249, 251, 252, 254, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 274, 275, 278, 280, 281, 282, 284, 285, 287, 290, 293, 295, 296, 298, 300, 302, 303, 305, 309, 310, 312, 313, 315, 323, 324, 326, 329, 330, 332, 341, 342, 344, 345, 346, 348, 351, 352, 354, 355, 356, 357, 358, 360, 363, 364, 366, 367, 368, 370, 375, 381, 382, 383, 384, 389, 400, 404, 409, 415, 427, 430, 434, 441, 450, 456, 471, 494, 512, 514, 532, 551, 554, 557, 572, 574, 575, 576, 579, 581, 584, 585, 586, 588, 589, 590, 591, 607, 608, 609, 614, 625, 626, 634, 640, 643, 649, 651, 654, 655, 658, 672, 674, 691, 694, 695, 696, 700, 703, 704, 705, 706, 707, 708, 709, 712, 719, 721, 732, 735, 736, 748, 751, 753, 755, 761, 770, 774, 776, 777, 778, 779, 783, 790, 797, 800, 801, 803, 805, 806, 810, 811, 815, 826, 831, 834, 839, 845, 846, 847, 862, 1022, 1033, 1037, 1040, 1041, 1043, 1053, 1061, 1067, 1080, 1108, 1112, 1120, 1129, 1131, 1136, 1144, 1158, 1172, 1181, 1182, 1183, 1186, 1208, 1219, 1220, 1221, 1224, 1227, 1255, 1261, 1278], "method": [29, 30, 41, 42, 44, 49, 59, 60, 62, 86, 95, 96, 99, 100, 110, 113, 118, 124, 126, 130, 131, 161, 173, 174, 197, 227, 228, 229, 230, 232, 235, 249, 251, 253, 258, 261, 262, 264, 269, 270, 272, 274, 275, 278, 280, 281, 282, 283, 285, 288, 290, 300, 303, 305, 309, 310, 313, 315, 317, 318, 319, 320, 323, 324, 326, 329, 330, 332, 335, 338, 341, 342, 344, 345, 346, 348, 351, 352, 354, 356, 357, 358, 360, 363, 364, 366, 367, 368, 370, 382, 384, 404, 408, 409, 484, 510, 526, 550, 552, 558, 575, 576, 594, 601, 607, 608, 620, 626, 639, 641, 649, 650, 653, 661, 675, 709, 722, 726, 729, 733, 735, 736, 737, 738, 739, 741, 742, 751, 761, 782, 783, 789, 793, 794, 797, 800, 804, 825, 828, 830, 839, 840, 848, 945, 947, 952, 953, 961, 964, 974, 986, 997, 1053, 1105, 1106, 1112, 1116, 1120, 1121, 1122, 1123, 1124, 1128, 1131, 1136, 1145, 1148, 1208, 1213, 1217, 1227, 1230, 1232, 1259, 1278], "std": [29, 37, 45, 95, 97, 98, 99, 100, 103, 107, 109, 110, 113, 118, 119, 122, 142, 149, 203, 218, 219, 246, 294, 307, 316, 318, 381, 383, 385, 386, 387, 513, 514, 517, 519, 541, 548, 551, 553, 554, 557, 562, 569, 572, 574, 575, 576, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 594, 597, 602, 604, 606, 607, 608, 610, 611, 612, 613, 624, 626, 634, 644, 651, 652, 654, 659, 660, 664, 672, 674, 678, 679, 680, 681, 682, 687, 688, 689, 690, 691, 693, 694, 695, 699, 700, 702, 704, 706, 707, 708, 709, 713, 716, 717, 719, 721, 722, 725, 726, 731, 732, 733, 735, 736, 739, 740, 743, 744, 748, 749, 754, 755, 759, 763, 765, 766, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 786, 793, 795, 798, 803, 805, 806, 807, 808, 810, 812, 813, 815, 817, 823, 826, 830, 831, 832, 841, 844, 934, 1037, 1040, 1042, 1043, 1053, 1061, 1063, 1076, 1080, 1213, 1248, 1250, 1253, 1258], "entri": [29, 119, 193, 194, 198, 255, 266, 377, 425, 537, 561, 703, 706, 744, 856, 870, 874, 875, 876, 913, 920, 972, 1019, 1025, 1039, 1046, 1066, 1101, 1108, 1156, 1219, 1250], "rang": [29, 49, 97, 113, 114, 166, 199, 211, 212, 213, 218, 227, 230, 232, 235, 236, 239, 242, 244, 247, 251, 258, 259, 261, 262, 264, 265, 266, 269, 270, 272, 274, 275, 278, 279, 284, 285, 287, 288, 290, 292, 294, 302, 303, 304, 310, 312, 313, 320, 321, 323, 324, 326, 329, 330, 332, 341, 343, 345, 346, 347, 351, 352, 353, 356, 357, 358, 360, 363, 364, 366, 367, 368, 370, 375, 381, 383, 385, 387, 396, 449, 476, 492, 494, 560, 594, 597, 598, 602, 626, 642, 643, 678, 680, 683, 686, 793, 798, 928, 934, 948, 1061, 1068, 1071, 1104, 1107, 1114, 1116, 1118, 1120, 1130, 1131, 1139, 1143, 1160, 1180, 1221, 1228, 1231, 1257, 1258, 1278], "o_creat": [29, 138, 1025, 1026, 1030, 1034, 1041, 1043, 1076], "o_trunc": [29, 35, 1025], "o_wronli": [29, 138, 1025, 1026, 1028, 1029, 1030, 1034, 1035, 1037, 1040, 1041, 1042], "0666": [29, 890, 1029, 1030, 1041, 1043, 1076], "assert": [29, 33, 162, 227, 251, 264, 276, 279, 293, 309, 342, 344, 512, 554, 696, 731, 734, 736, 825, 848, 849, 1023, 1035, 1037, 1040, 1043, 1076, 1080, 1081, 1120, 1197, 1204, 1205, 1206, 1241, 1247, 1248, 1250, 1255], "ing": [29, 1031], "well": [29, 139, 166, 192, 194, 197, 198, 199, 203, 215, 219, 227, 250, 252, 279, 315, 317, 325, 333, 342, 349, 390, 449, 471, 500, 510, 524, 529, 532, 558, 598, 604, 607, 608, 631, 651, 655, 665, 679, 751, 800, 808, 826, 835, 846, 848, 855, 875, 891, 925, 931, 936, 937, 1016, 1029, 1031, 1058, 1083, 1085, 1099, 1107, 1108, 1111, 1115, 1118, 1122, 1125, 1128, 1139, 1143, 1153, 1211, 1213, 1221, 1237, 1273], "mode": [29, 90, 113, 136, 156, 195, 208, 243, 251, 260, 263, 264, 266, 276, 279, 283, 286, 304, 307, 311, 325, 328, 342, 359, 371, 372, 500, 534, 856, 857, 858, 868, 886, 887, 891, 930, 937, 943, 976, 982, 1019, 1025, 1026, 1041, 1066, 1076, 1077, 1133, 1135, 1236], "binaryus": 29, "hton": [29, 1022], "arpa": [29, 1022], "inet": [29, 208, 1022], "again": [29, 52, 88, 113, 135, 156, 168, 191, 192, 194, 197, 199, 203, 205, 207, 219, 223, 227, 229, 230, 231, 243, 252, 277, 282, 291, 297, 300, 306, 307, 324, 327, 330, 346, 371, 382, 404, 405, 406, 409, 410, 415, 422, 471, 512, 519, 521, 558, 605, 607, 608, 643, 650, 652, 664, 665, 669, 679, 751, 761, 764, 794, 797, 813, 822, 848, 860, 875, 903, 937, 1004, 1012, 1015, 1020, 1022, 1023, 1031, 1037, 1046, 1055, 1061, 1066, 1077, 1105, 1125, 1130, 1148, 1153, 1158, 1208, 1226, 1228, 1258, 1265, 1267], "od": [29, 279], "hardwir": [29, 49, 356, 945, 1021, 1125], "enter": [29, 99, 100, 122, 146, 171, 173, 224, 231, 260, 265, 266, 276, 279, 288, 289, 291, 292, 309, 342, 343, 389, 404, 409, 428, 643, 665, 724, 759, 770, 813, 824, 846, 863, 864, 887, 961, 984, 1000, 1067, 1068, 1143, 1196], "666": [29, 37, 96, 103, 109, 119, 121, 210, 211, 224, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 395, 396, 397, 399, 400, 434, 517, 520, 553, 608, 609, 610, 611, 612, 616, 617, 618, 619, 621, 622, 624, 631, 643, 650, 654, 662, 664, 687, 688, 689, 690, 691, 693, 696, 704, 705, 708, 720, 725, 745, 749, 751, 765, 772, 782, 784, 786, 793, 794, 795, 815, 817, 821, 824, 835, 839, 843, 845, 848, 850, 942, 943, 1103, 1107, 1149, 1150, 1153, 1253], "joerg": [29, 37, 157, 161, 170, 210, 224, 225, 227, 228, 230, 232, 239, 243, 247, 250, 256, 263, 266, 269, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 318, 320, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 398, 401, 495, 516, 531, 550, 557, 591, 607, 609, 625, 662, 696, 709, 720, 724, 731, 732, 733, 734, 736, 814, 857, 858, 866, 868, 873, 887, 903, 917, 922, 1015, 1061, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1137, 1159, 1164, 1187, 1204, 1216, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "huber": [29, 273, 279, 1216], "caro": [29, 263, 273, 276, 283, 286, 289, 292, 301, 304, 311, 325, 343, 353, 369, 550, 557, 609, 625, 696, 709, 734, 736, 1124, 1126, 1146, 1198, 1200, 1204, 1206, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "johanna": [29, 263, 273, 276, 283, 286, 304, 311, 325, 343, 353, 369, 550, 609, 625, 696, 709, 1146, 1198, 1200, 1204, 1206, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "bodi": [29, 37, 42, 99, 100, 198, 374, 425, 426, 428, 432, 461, 471, 500, 528, 610, 643, 652, 653, 657, 722, 750, 755, 800, 801, 849, 1112, 1242], "compil": [29, 30, 92, 93, 97, 99, 100, 103, 106, 113, 135, 136, 137, 146, 161, 193, 194, 203, 211, 218, 219, 220, 239, 253, 256, 269, 276, 292, 301, 304, 307, 308, 316, 325, 331, 333, 349, 353, 356, 359, 365, 375, 376, 379, 382, 387, 412, 423, 436, 445, 446, 455, 458, 460, 467, 468, 477, 479, 486, 489, 492, 493, 494, 495, 496, 499, 500, 503, 504, 505, 512, 515, 520, 522, 534, 537, 544, 546, 548, 570, 575, 576, 589, 590, 605, 606, 607, 634, 640, 643, 650, 653, 655, 659, 660, 664, 675, 703, 722, 728, 730, 739, 740, 744, 748, 749, 753, 756, 761, 762, 765, 766, 770, 800, 809, 810, 812, 813, 815, 824, 826, 827, 834, 835, 837, 840, 844, 845, 849, 850, 934, 952, 953, 968, 1084, 1085, 1089, 1090, 1092, 1094, 1108, 1133, 1138, 1150, 1152, 1248, 1250, 1255, 1256, 1258, 1260, 1269, 1273], "still": [29, 41, 47, 142, 159, 185, 190, 191, 192, 193, 194, 202, 203, 211, 212, 213, 253, 263, 269, 307, 309, 381, 382, 395, 415, 423, 474, 486, 512, 515, 520, 524, 541, 594, 616, 637, 640, 658, 659, 679, 685, 727, 750, 761, 766, 770, 801, 806, 813, 831, 834, 844, 845, 847, 850, 874, 888, 910, 934, 936, 937, 947, 952, 984, 987, 1042, 1064, 1066, 1067, 1069, 1080, 1103, 1111, 1114, 1120, 1133, 1136, 1139, 1164, 1200, 1230, 1250, 1255, 1269, 1270, 1277, 1280], "funni": [29, 31, 37, 89, 113, 135, 157, 168, 223, 307, 372, 553, 899, 1041, 1084], "overflow": [29, 31, 37, 162, 194, 234, 244, 260, 263, 264, 266, 269, 270, 276, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 449, 451, 487, 496, 868], "temp": [29, 31, 279, 413, 844, 845, 846], "got": [29, 32, 192, 202, 253, 325, 347, 359, 381, 382, 384, 470, 739, 808, 1025, 1277], "overwritten": [29, 34, 40, 42, 384, 684, 704, 1026, 1115], "suspect": [29, 194, 196], "inmem": 29, "loos": [29, 30, 172, 227, 243, 424, 449, 496, 821, 974], "foolishli": 29, "find": [29, 31, 34, 35, 40, 113, 144, 161, 166, 191, 192, 193, 194, 198, 203, 207, 219, 220, 221, 231, 233, 244, 247, 251, 253, 256, 260, 264, 266, 269, 271, 273, 276, 279, 283, 286, 289, 292, 297, 304, 306, 309, 311, 316, 318, 325, 327, 328, 331, 333, 343, 345, 347, 349, 353, 355, 359, 365, 369, 371, 372, 377, 378, 380, 389, 398, 404, 409, 491, 497, 504, 519, 522, 523, 525, 546, 551, 558, 579, 584, 585, 588, 589, 590, 591, 614, 643, 651, 664, 666, 668, 669, 690, 692, 703, 707, 709, 724, 734, 736, 748, 768, 795, 800, 801, 804, 830, 856, 857, 858, 866, 870, 871, 873, 874, 875, 877, 891, 919, 923, 925, 936, 937, 950, 989, 1016, 1047, 1053, 1066, 1083, 1086, 1101, 1135, 1146, 1154, 1214, 1251, 1262, 1264, 1266, 1267, 1273, 1278], "run": [29, 48, 49, 50, 52, 86, 97, 99, 100, 126, 139, 146, 159, 161, 166, 174, 187, 191, 192, 193, 194, 195, 198, 199, 202, 203, 210, 222, 223, 230, 231, 243, 252, 253, 258, 263, 271, 279, 280, 283, 286, 289, 291, 296, 303, 304, 307, 310, 311, 313, 321, 323, 324, 325, 329, 330, 334, 343, 347, 350, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 375, 376, 377, 379, 380, 382, 386, 389, 404, 407, 428, 446, 488, 491, 499, 500, 504, 505, 523, 529, 532, 543, 550, 554, 574, 575, 576, 604, 606, 607, 608, 630, 657, 669, 678, 690, 744, 763, 797, 800, 801, 821, 824, 844, 845, 863, 864, 866, 868, 869, 870, 871, 887, 888, 891, 892, 922, 934, 936, 937, 957, 972, 982, 984, 985, 994, 1006, 1014, 1016, 1024, 1026, 1046, 1051, 1064, 1066, 1067, 1068, 1069, 1071, 1076, 1081, 1083, 1086, 1089, 1090, 1092, 1094, 1096, 1100, 1105, 1116, 1119, 1131, 1132, 1134, 1178, 1197, 1203, 1210, 1224, 1236, 1242, 1247, 1248, 1253, 1266, 1272, 1278], "main": [29, 37, 49, 52, 53, 96, 103, 109, 110, 122, 134, 135, 139, 142, 158, 161, 162, 166, 173, 174, 194, 197, 198, 203, 230, 252, 264, 276, 277, 279, 296, 307, 315, 318, 320, 333, 335, 338, 342, 349, 350, 375, 376, 377, 378, 379, 380, 381, 386, 404, 423, 425, 426, 428, 432, 434, 436, 437, 451, 466, 467, 468, 470, 474, 486, 493, 497, 500, 501, 504, 506, 512, 513, 523, 531, 540, 541, 544, 554, 569, 574, 575, 576, 591, 592, 594, 602, 604, 606, 607, 626, 634, 637, 640, 654, 658, 659, 660, 662, 664, 665, 667, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 715, 725, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 747, 748, 749, 750, 751, 756, 759, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 797, 800, 801, 803, 805, 806, 807, 817, 821, 822, 824, 825, 826, 827, 830, 831, 835, 837, 839, 844, 845, 847, 848, 868, 870, 888, 934, 937, 945, 952, 953, 955, 984, 1006, 1019, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1037, 1040, 1041, 1042, 1043, 1047, 1050, 1052, 1056, 1061, 1063, 1067, 1068, 1073, 1076, 1077, 1080, 1083, 1086, 1092, 1096, 1102, 1116, 1119, 1134, 1199, 1201, 1248, 1253, 1266], "chang": [29, 32, 52, 66, 69, 113, 115, 122, 129, 130, 161, 164, 166, 174, 191, 194, 196, 197, 198, 199, 202, 203, 214, 227, 243, 252, 283, 291, 380, 411, 449, 486, 488, 492, 495, 496, 500, 510, 540, 548, 593, 599, 604, 605, 607, 608, 659, 660, 683, 734, 780, 797, 822, 824, 830, 856, 866, 868, 870, 888, 897, 900, 915, 928, 930, 934, 936, 957, 961, 1015, 1019, 1040, 1080, 1083, 1099, 1115, 1139, 1148, 1188, 1199, 1201, 1204, 1226, 1230, 1244, 1258], "errorhandl": 29, "just": [29, 33, 49, 54, 59, 73, 97, 120, 121, 126, 139, 172, 187, 191, 192, 193, 194, 195, 196, 198, 199, 203, 206, 213, 215, 219, 223, 230, 253, 264, 267, 292, 333, 342, 349, 373, 375, 392, 432, 451, 476, 479, 488, 506, 510, 520, 524, 528, 529, 531, 537, 541, 550, 591, 594, 604, 606, 607, 608, 631, 650, 651, 652, 658, 661, 662, 665, 684, 713, 722, 727, 744, 747, 751, 764, 770, 782, 797, 800, 801, 804, 808, 809, 813, 815, 831, 846, 848, 870, 891, 894, 895, 925, 928, 934, 936, 937, 942, 947, 955, 957, 964, 968, 974, 976, 984, 1000, 1020, 1022, 1023, 1029, 1030, 1032, 1041, 1050, 1051, 1061, 1066, 1069, 1077, 1096, 1100, 1103, 1106, 1107, 1110, 1112, 1130, 1137, 1138, 1139, 1146, 1150, 1158, 1159, 1213, 1214, 1221, 1226, 1227, 1231, 1232, 1237, 1241, 1253, 1262, 1273], "silent": [29, 273, 283, 740, 755, 934], "truncat": [29, 279, 325, 426, 447, 569, 873, 1025, 1043, 1158], "modifi": [29, 64, 77, 99, 100, 114, 118, 129, 131, 166, 194, 199, 209, 211, 231, 250, 307, 309, 310, 313, 317, 318, 319, 320, 341, 342, 363, 367, 368, 382, 386, 415, 429, 431, 437, 474, 486, 493, 510, 512, 517, 528, 545, 553, 554, 558, 574, 575, 595, 604, 607, 608, 610, 611, 612, 624, 637, 640, 650, 657, 662, 665, 677, 722, 724, 727, 729, 732, 735, 757, 762, 793, 794, 797, 801, 806, 810, 831, 835, 857, 858, 871, 876, 957, 972, 992, 1008, 1012, 1017, 1047, 1053, 1059, 1066, 1099, 1100, 1106, 1108, 1119, 1140, 1184, 1188, 1206, 1229, 1230, 1271], "faschingb": 29, "echo": [29, 139, 154, 193, 243, 279, 307, 390, 532, 607, 725, 857, 858, 861, 862, 871, 875, 885, 894, 897, 901, 910, 928, 930, 934, 936, 937, 957, 966, 984, 1006, 1026, 1028, 1037, 1039, 1040, 1042, 1061, 1064, 1071, 1080, 1243], "success": [29, 220, 260, 266, 276, 279, 487, 519, 522, 724, 759, 819, 903, 961, 966, 1041, 1066, 1174], "failur": [29, 30, 166, 260, 266, 276, 279, 291, 296, 325, 389, 496, 506, 512, 538, 604, 608, 724, 1241, 1242, 1249, 1250, 1253], "renam": [29, 37, 44, 49, 88, 111, 113, 135, 156, 161, 168, 181, 250, 297, 306, 307, 327, 328, 371, 372, 643, 830, 898, 911, 952, 953, 1102, 1220], "most": [30, 31, 44, 48, 50, 76, 109, 111, 191, 192, 194, 195, 198, 203, 213, 215, 221, 223, 227, 229, 251, 260, 263, 266, 267, 276, 277, 279, 283, 289, 309, 311, 325, 345, 346, 347, 382, 389, 424, 432, 461, 464, 471, 486, 488, 494, 499, 500, 504, 505, 519, 524, 541, 549, 562, 605, 664, 665, 703, 748, 783, 801, 810, 816, 837, 843, 846, 848, 855, 857, 858, 861, 869, 893, 925, 928, 937, 961, 970, 984, 989, 1017, 1025, 1031, 1049, 1053, 1066, 1069, 1077, 1080, 1081, 1083, 1105, 1106, 1107, 1112, 1119, 1120, 1121, 1127, 1128, 1136, 1138, 1139, 1140, 1143, 1146, 1149, 1150, 1154, 1156, 1159, 1160, 1166, 1208, 1217, 1221, 1225, 1228, 1230, 1237, 1241, 1242, 1248, 1259, 1266, 1273, 1281], "somebodi": [30, 199, 219, 253, 438, 495, 522, 634, 658, 710, 770, 819, 828, 974, 992, 1071], "concis": [30, 191, 223, 227, 277, 346, 405, 406, 541, 984, 1208], "longer": [30, 529, 532, 1071, 1133, 1258], "necessari": [30, 47, 130, 193, 199, 203, 211, 220, 234, 250, 253, 310, 313, 345, 346, 428, 438, 470, 510, 512, 522, 548, 594, 653, 657, 753, 755, 764, 822, 827, 833, 846, 866, 937, 980, 984, 1006, 1021, 1047, 1069, 1080, 1101, 1128, 1135, 1139, 1164, 1220, 1241], "encod": [30, 210, 227, 228, 230, 232, 251, 258, 260, 263, 266, 267, 270, 276, 277, 279, 285, 287, 290, 304, 308, 309, 311, 324, 325, 332, 342, 343, 345, 346, 348, 353, 359, 365, 387, 389, 409, 512, 526, 1139, 1144, 1158, 1198, 1200, 1204, 1205, 1206, 1208, 1216, 1223, 1224, 1278], "gosh": [30, 449, 494, 496, 710, 806, 1058, 1105, 1106, 1112, 1139], "hungarian": [30, 490], "notat": [30, 218, 258, 274, 279, 284, 325, 490, 757, 936, 1121], "userdb": [30, 34, 35, 38, 40, 41, 43, 44, 253, 255, 269, 277, 324, 335, 338, 726, 734, 735, 736, 1198, 1199, 1200, 1201, 1206], "bolt": [30, 253], "onto": [30, 48, 50, 111, 119, 122, 202, 212, 253, 269, 342, 572, 654, 723, 801, 824, 846, 917, 928, 936, 984, 1023, 1064, 1066, 1088, 1096], "unclear": [30, 373, 597, 1081], "semant": [30, 36, 70, 192, 215, 295, 296, 298, 316, 355, 374, 382, 383, 385, 387, 481, 495, 496, 570, 651, 703, 710, 798, 810, 831, 845, 846, 847, 848, 849, 943, 948, 976, 1080, 1081, 1139, 1217, 1258], "backingstor": [30, 40, 43], "constructor": [30, 40, 43, 60, 86, 99, 100, 108, 113, 118, 121, 124, 126, 130, 131, 218, 224, 230, 250, 251, 253, 264, 269, 277, 281, 300, 303, 305, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 329, 335, 338, 341, 342, 345, 346, 351, 356, 357, 358, 363, 364, 367, 368, 381, 382, 384, 406, 407, 408, 480, 594, 599, 602, 607, 626, 635, 641, 649, 650, 656, 672, 703, 720, 722, 724, 726, 728, 729, 732, 737, 740, 765, 798, 800, 801, 810, 812, 814, 819, 820, 822, 825, 827, 845, 846, 847, 848, 943, 945, 976, 1053, 1121, 1123, 1124, 1125, 1139, 1241, 1253, 1258], "mangl": [30, 250, 251, 264, 281, 1133], "prefix": [30, 47, 53, 203, 260, 264, 266, 276, 279, 325, 397, 528, 661, 691, 800, 801, 984, 1096, 1098, 1105, 1127, 1128, 1153, 1160, 1243], "m_": 30, "enough": [30, 195, 199, 215, 223, 273, 283, 316, 325, 373, 415, 438, 549, 765, 801, 848, 934, 1016, 1053, 1084, 1107, 1124, 1132, 1153, 1221, 1226, 1233, 1242, 1273, 1281], "take": [30, 35, 75, 91, 99, 100, 114, 119, 121, 154, 161, 190, 191, 192, 193, 196, 197, 198, 199, 202, 208, 211, 212, 214, 219, 223, 224, 229, 230, 231, 251, 264, 269, 271, 279, 283, 289, 313, 352, 381, 382, 389, 390, 395, 404, 433, 470, 473, 490, 492, 499, 501, 505, 506, 510, 511, 525, 528, 540, 548, 549, 572, 573, 575, 576, 594, 604, 607, 620, 626, 640, 652, 659, 662, 665, 667, 706, 722, 724, 756, 788, 789, 800, 801, 814, 815, 822, 831, 835, 839, 844, 856, 857, 858, 934, 947, 974, 984, 1033, 1043, 1046, 1066, 1071, 1096, 1102, 1106, 1110, 1132, 1148, 1149, 1166, 1172, 1176, 1178, 1182, 1183, 1184, 1187, 1188, 1189, 1191, 1193, 1203, 1215, 1216, 1221, 1226, 1236, 1243], "dogmat": [30, 269, 422, 839, 1221], "switch": [30, 32, 41, 45, 48, 50, 99, 100, 108, 111, 113, 114, 115, 121, 123, 126, 146, 166, 174, 193, 197, 199, 210, 211, 252, 260, 266, 276, 277, 279, 356, 390, 391, 393, 410, 413, 416, 445, 459, 463, 465, 487, 505, 512, 534, 536, 541, 548, 562, 596, 597, 598, 709, 748, 784, 786, 824, 849, 863, 864, 868, 928, 931, 964, 982, 989, 998, 1001, 1003, 1066, 1067, 1101, 1255, 1260], "bool": [30, 37, 40, 43, 108, 124, 130, 234, 241, 263, 266, 269, 271, 273, 276, 279, 286, 289, 304, 308, 309, 311, 315, 325, 353, 359, 514, 516, 529, 609, 610, 614, 616, 621, 650, 652, 665, 666, 667, 668, 669, 687, 690, 696, 706, 747, 748, 756, 759, 766, 770, 773, 777, 803, 822, 824, 825, 848, 997, 1004, 1067, 1073, 1080, 1139, 1166, 1227, 1232], "wear": [30, 193], "incorrect": [30, 260, 266, 276, 279, 283, 449, 468, 528, 1233], "metaphor": 30, "But": [30, 138, 161, 174, 192, 193, 194, 197, 205, 207, 243, 252, 333, 334, 342, 349, 350, 378, 382, 422, 432, 438, 467, 470, 476, 479, 492, 494, 500, 510, 519, 529, 649, 650, 658, 662, 663, 664, 682, 700, 739, 751, 762, 783, 812, 815, 831, 834, 844, 857, 858, 913, 936, 937, 966, 968, 984, 994, 1012, 1026, 1034, 1043, 1050, 1058, 1066, 1086, 1101, 1103, 1124, 1127, 1133, 1213, 1216, 1227, 1260, 1274, 1275], "languag": [30, 48, 50, 67, 113, 150, 152, 165, 168, 172, 174, 205, 207, 212, 214, 226, 227, 228, 230, 232, 235, 237, 242, 243, 245, 248, 250, 251, 252, 254, 270, 274, 277, 280, 282, 285, 310, 313, 316, 317, 318, 345, 381, 382, 404, 407, 421, 424, 426, 438, 452, 470, 483, 510, 523, 525, 526, 529, 532, 541, 542, 569, 570, 605, 606, 649, 660, 662, 675, 750, 751, 755, 759, 762, 782, 801, 809, 833, 846, 851, 862, 921, 928, 929, 1066, 1083, 1085, 1103, 1112, 1116, 1119, 1120, 1128, 1132, 1136, 1138, 1139, 1159, 1164, 1207, 1233, 1250, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281], "support": [30, 67, 119, 193, 195, 199, 203, 211, 215, 227, 239, 241, 260, 263, 266, 271, 273, 276, 279, 283, 286, 301, 304, 311, 343, 353, 359, 365, 400, 468, 492, 506, 512, 529, 649, 650, 652, 744, 751, 764, 782, 793, 797, 810, 846, 848, 913, 934, 936, 937, 940, 976, 1015, 1066, 1077, 1083, 1112, 1120, 1127, 1133, 1150, 1164, 1213, 1215, 1230, 1248, 1262, 1265, 1267, 1272], "copy_process": 30, "law": [30, 243, 401, 443, 488, 1107, 1232], "tdd": [30, 113, 176, 222, 227, 237, 277, 319, 335, 338, 342, 356, 1241], "until": [30, 42, 86, 87, 88, 91, 94, 99, 100, 113, 118, 126, 130, 134, 139, 146, 149, 164, 166, 174, 185, 187, 192, 194, 196, 198, 242, 251, 263, 282, 300, 320, 346, 375, 421, 460, 466, 491, 494, 608, 667, 724, 725, 762, 770, 776, 801, 821, 822, 824, 825, 848, 863, 864, 868, 875, 891, 903, 910, 952, 972, 982, 992, 994, 1000, 1020, 1021, 1022, 1023, 1055, 1066, 1070, 1077, 1081, 1111, 1112, 1133, 1141, 1143, 1208], "fail": [30, 31, 138, 139, 166, 192, 194, 202, 203, 218, 223, 253, 279, 296, 328, 389, 415, 519, 522, 529, 538, 540, 550, 554, 557, 604, 720, 728, 748, 759, 797, 801, 810, 812, 910, 937, 961, 984, 1026, 1031, 1034, 1042, 1043, 1060, 1061, 1066, 1080, 1101, 1105, 1107, 1116, 1158, 1174, 1230, 1242, 1243, 1247, 1249, 1251], "suffici": [30, 115, 211, 223, 390, 657, 684, 722, 734, 783, 849, 913, 957, 1081, 1130, 1132, 1160, 1242], "pass": [30, 31, 35, 42, 44, 45, 49, 99, 100, 101, 102, 104, 105, 108, 112, 166, 211, 219, 223, 228, 229, 230, 232, 239, 250, 252, 256, 260, 266, 269, 271, 273, 276, 279, 283, 286, 289, 291, 292, 296, 301, 304, 309, 310, 313, 321, 325, 343, 365, 369, 389, 415, 434, 436, 438, 449, 470, 474, 477, 479, 496, 524, 525, 534, 538, 548, 553, 554, 594, 604, 605, 606, 607, 609, 610, 650, 660, 666, 667, 668, 669, 678, 704, 722, 724, 729, 793, 794, 795, 803, 814, 831, 835, 839, 841, 845, 875, 934, 950, 987, 1029, 1032, 1052, 1061, 1066, 1085, 1103, 1105, 1106, 1107, 1108, 1120, 1121, 1122, 1124, 1130, 1148, 1150, 1158, 1160, 1197, 1225, 1241, 1248], "current": [30, 88, 98, 113, 118, 135, 155, 156, 159, 164, 168, 183, 185, 193, 194, 195, 197, 199, 202, 203, 231, 253, 260, 266, 276, 279, 297, 304, 306, 307, 325, 327, 328, 371, 372, 396, 415, 418, 471, 504, 512, 526, 548, 550, 605, 724, 731, 735, 743, 783, 839, 845, 846, 852, 856, 866, 868, 874, 887, 891, 892, 897, 900, 911, 913, 915, 916, 936, 953, 984, 992, 1025, 1050, 1052, 1066, 1067, 1101, 1106, 1111, 1132, 1135, 1143, 1146, 1267], "refactor": [30, 126, 277, 280, 285, 288, 300, 303, 319, 323, 324, 329, 330, 351, 352, 358, 363, 364, 367, 368, 381, 421, 471, 511, 548, 830, 945, 986, 1123, 1202, 1203, 1204, 1205], "initi": [30, 32, 49, 99, 100, 103, 107, 111, 113, 124, 162, 166, 170, 191, 192, 195, 199, 208, 218, 223, 227, 232, 238, 247, 251, 252, 262, 263, 264, 279, 283, 286, 289, 294, 304, 311, 316, 318, 321, 325, 338, 347, 353, 359, 365, 373, 381, 382, 383, 387, 426, 428, 435, 479, 484, 494, 498, 504, 550, 552, 570, 575, 576, 589, 590, 594, 597, 598, 599, 600, 601, 604, 626, 640, 643, 648, 652, 653, 654, 656, 662, 664, 666, 668, 683, 684, 685, 690, 703, 709, 722, 724, 728, 730, 731, 732, 737, 764, 798, 813, 824, 825, 831, 833, 845, 846, 857, 858, 867, 892, 922, 936, 937, 942, 945, 947, 948, 955, 961, 970, 980, 984, 1020, 1023, 1046, 1050, 1053, 1066, 1067, 1076, 1077, 1083, 1119, 1122, 1152, 1213, 1217, 1258, 1266, 1271], "mess": [30, 192, 277, 296, 298, 353, 355, 356, 374, 381, 754, 1139, 1152, 1242], "roughli": [30, 194, 199, 342, 499, 855, 1067], "took": [30, 191, 198, 227, 422, 1066, 1173], "our": [30, 40, 48, 50, 60, 66, 93, 112, 113, 124, 126, 130, 131, 154, 157, 159, 170, 193, 194, 196, 198, 203, 213, 227, 242, 243, 252, 253, 267, 269, 307, 318, 320, 356, 375, 380, 382, 384, 404, 496, 499, 510, 515, 520, 549, 553, 558, 570, 574, 591, 602, 607, 734, 737, 740, 934, 936, 957, 964, 984, 1029, 1032, 1047, 1066, 1067, 1077, 1081, 1083, 1096, 1099, 1102, 1108, 1206, 1213, 1216], "craftsmanship": [30, 32], "anoth": [30, 49, 52, 54, 67, 111, 146, 172, 174, 191, 192, 193, 194, 198, 199, 202, 203, 213, 215, 220, 223, 229, 230, 253, 260, 266, 269, 276, 281, 283, 289, 304, 307, 310, 313, 316, 342, 373, 381, 386, 440, 458, 459, 473, 481, 493, 500, 511, 528, 532, 548, 549, 552, 557, 572, 575, 576, 589, 590, 594, 599, 608, 660, 662, 663, 665, 751, 756, 761, 770, 783, 788, 789, 800, 801, 825, 837, 846, 848, 856, 857, 858, 863, 864, 873, 875, 887, 925, 934, 937, 972, 984, 1015, 1016, 1030, 1047, 1053, 1055, 1068, 1081, 1099, 1102, 1103, 1106, 1107, 1124, 1139, 1155, 1159, 1165, 1216, 1224, 1230, 1233, 1241, 1259], "isol": [30, 41, 221, 223, 227, 277, 291, 934, 1067, 1068, 1119, 1208, 1220, 1236, 1252, 1254], "wrong": [30, 67, 103, 192, 194, 316, 373, 380, 449, 471, 490, 744, 751, 765, 801, 824, 957, 1029, 1046, 1053, 1066, 1068, 1086, 1103, 1107, 1119, 1138, 1203, 1213, 1271], "oracl": [30, 1217], "conduct": [30, 1241], "serious": 30, "safeti": [30, 131, 269, 373, 375, 492, 495, 498, 511, 626, 820, 821, 849, 928, 943, 1080, 1081, 1105], "architectur": [30, 97, 199, 250, 373, 421, 444, 471, 488, 511, 529, 751, 764, 928, 945, 1023, 1049, 1083, 1084, 1094, 1096, 1259, 1262], "treat": [30, 70, 283, 373, 436, 466, 528, 766, 873, 1268], "them": [30, 49, 99, 100, 146, 161, 181, 191, 192, 194, 197, 198, 199, 202, 203, 211, 212, 213, 220, 223, 227, 228, 230, 232, 248, 250, 253, 264, 288, 291, 300, 320, 330, 342, 375, 466, 488, 524, 544, 550, 555, 570, 606, 666, 668, 669, 722, 725, 728, 751, 800, 801, 835, 856, 862, 863, 864, 870, 873, 898, 910, 937, 984, 1012, 1066, 1067, 1068, 1077, 1080, 1083, 1084, 1096, 1101, 1106, 1107, 1108, 1130, 1132, 1154, 1187, 1190, 1208, 1214, 1221, 1232, 1248, 1268, 1277], "carefulli": [30, 194, 496, 575, 1214], "fast": [30, 111, 172, 199, 230, 252, 267, 269, 283, 292, 342, 500, 626, 751, 835, 1156, 1237], "independ": [30, 49, 271, 283, 377, 381, 438, 471, 662, 915, 929, 937, 1085], "self": [30, 48, 49, 50, 54, 174, 192, 193, 203, 210, 211, 218, 224, 227, 229, 247, 250, 251, 263, 264, 266, 273, 276, 281, 283, 289, 292, 304, 311, 321, 325, 331, 343, 347, 369, 504, 512, 650, 652, 751, 806, 810, 812, 813, 819, 844, 945, 976, 980, 1063, 1083, 1101, 1105, 1106, 1107, 1116, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1139, 1228, 1230, 1242, 1247, 1248, 1250, 1258], "valid": [30, 191, 194, 202, 279, 282, 325, 415, 469, 476, 492, 496, 674, 682, 707, 720, 735, 759, 762, 768, 806, 810, 825, 833, 997, 1043, 1066, 1138, 1139, 1153, 1154, 1170, 1176, 1228, 1230, 1236], "first": [30, 40, 47, 49, 76, 118, 168, 171, 173, 187, 191, 194, 195, 197, 198, 199, 203, 211, 221, 223, 230, 250, 263, 264, 271, 273, 277, 279, 283, 307, 309, 320, 325, 342, 381, 386, 389, 395, 401, 424, 432, 455, 470, 471, 476, 484, 500, 501, 512, 514, 515, 517, 519, 522, 528, 529, 532, 538, 540, 541, 543, 544, 545, 546, 596, 637, 643, 650, 656, 658, 661, 680, 681, 682, 686, 706, 709, 734, 736, 765, 771, 772, 793, 794, 795, 800, 801, 834, 835, 837, 848, 869, 870, 871, 876, 887, 891, 897, 913, 915, 919, 922, 925, 928, 934, 936, 984, 986, 1022, 1026, 1042, 1046, 1047, 1055, 1063, 1066, 1067, 1070, 1076, 1084, 1085, 1100, 1101, 1102, 1103, 1107, 1108, 1112, 1119, 1121, 1125, 1133, 1134, 1135, 1136, 1138, 1139, 1148, 1149, 1152, 1158, 1159, 1166, 1189, 1198, 1204, 1206, 1214, 1216, 1224, 1242, 1248, 1258, 1261, 1266, 1269], "word": [30, 192, 211, 219, 223, 227, 230, 237, 242, 248, 252, 258, 261, 269, 270, 274, 277, 279, 280, 282, 285, 287, 288, 295, 296, 298, 303, 310, 317, 323, 324, 325, 329, 330, 342, 351, 352, 355, 356, 357, 358, 363, 364, 367, 368, 374, 375, 381, 384, 404, 409, 433, 486, 548, 553, 626, 744, 801, 842, 871, 873, 921, 1070, 1181], "debug": [30, 173, 192, 193, 220, 250, 260, 266, 276, 279, 330, 334, 350, 376, 377, 378, 379, 380, 404, 409, 422, 471, 497, 500, 504, 505, 506, 517, 522, 534, 542, 553, 631, 764, 770, 806, 873, 891, 942, 964, 966, 1025, 1041, 1058, 1080, 1158, 1236, 1256, 1260, 1267, 1270], "fact": [30, 40, 139, 192, 193, 223, 342, 373, 468, 476, 500, 510, 801, 876, 984, 1029, 1066, 1077, 1217], "hard": [30, 60, 67, 74, 113, 118, 126, 130, 135, 139, 156, 172, 187, 192, 194, 197, 198, 203, 206, 207, 212, 219, 223, 230, 252, 267, 273, 283, 297, 306, 307, 327, 328, 342, 371, 372, 449, 468, 497, 510, 524, 525, 558, 634, 724, 748, 797, 867, 870, 911, 913, 930, 936, 984, 1066, 1096, 1105, 1107, 1127, 1144, 1158, 1210, 1231, 1258, 1271], "principl": [30, 40, 41, 72, 95, 103, 108, 109, 131, 194, 203, 317, 318, 319, 320, 511, 554, 555, 934, 937, 984, 1016, 1086, 1216, 1271], "mayb": [30, 32, 44, 45, 47, 49, 67, 113, 118, 174, 187, 192, 193, 194, 197, 198, 219, 223, 250, 266, 267, 317, 318, 319, 320, 335, 375, 407, 410, 412, 413, 520, 540, 552, 553, 555, 586, 639, 640, 710, 739, 748, 763, 795, 812, 936, 1099, 1121, 1250], "overview": [30, 54, 87, 113, 135, 156, 164, 172, 174, 199, 215, 231, 233, 248, 252, 264, 297, 298, 306, 310, 313, 316, 318, 327, 328, 344, 371, 372, 385, 386, 387, 418, 421, 667, 739, 741, 743, 744, 758, 769, 799, 824, 836, 865, 874, 875, 891, 923, 1019, 1022, 1094, 1099, 1208, 1258, 1259, 1265, 1266, 1269, 1271, 1278], "respons": [30, 40, 43, 78, 103, 108, 109, 126, 131, 182, 191, 202, 254, 510, 572, 586, 594, 652, 660, 846, 936, 937, 980, 992, 1028, 1046, 1066, 1067, 1068, 1135, 1215, 1266], "directori": [31, 47, 86, 88, 89, 91, 98, 113, 126, 130, 135, 136, 139, 155, 156, 159, 164, 166, 168, 191, 192, 193, 194, 203, 217, 222, 225, 231, 243, 244, 250, 251, 252, 253, 260, 263, 264, 266, 276, 279, 291, 296, 297, 298, 306, 307, 319, 320, 324, 327, 328, 333, 341, 345, 349, 359, 370, 371, 372, 375, 377, 380, 389, 390, 404, 409, 415, 417, 418, 470, 504, 506, 511, 513, 514, 516, 517, 519, 520, 523, 529, 534, 537, 543, 546, 547, 550, 552, 569, 591, 594, 604, 606, 607, 608, 627, 630, 633, 636, 639, 642, 645, 732, 852, 856, 859, 861, 866, 868, 870, 871, 873, 874, 875, 878, 879, 880, 885, 888, 890, 891, 896, 897, 898, 899, 900, 904, 909, 911, 915, 916, 921, 934, 936, 937, 961, 984, 986, 1007, 1012, 1016, 1021, 1031, 1032, 1033, 1039, 1050, 1072, 1075, 1079, 1083, 1086, 1092, 1096, 1098, 1099, 1100, 1101, 1107, 1115, 1135, 1187, 1196, 1197, 1243, 1247, 1252, 1267, 1270, 1273, 1278, 1282], "googl": [31, 176, 192, 199, 201, 212, 215, 218, 219, 223, 224, 227, 248, 253, 372, 423, 605, 844, 845, 921, 1133, 1208, 1248, 1250], "cloner": 31, "init": [31, 170, 172, 191, 193, 208, 212, 289, 296, 298, 359, 382, 384, 434, 461, 513, 579, 580, 602, 605, 633, 650, 667, 685, 745, 840, 867, 920, 939, 947, 952, 972, 974, 986, 1081], "cpp": [31, 37, 86, 111, 113, 114, 115, 116, 117, 118, 121, 122, 131, 134, 135, 142, 143, 144, 159, 161, 166, 203, 217, 227, 252, 253, 269, 296, 307, 316, 318, 375, 380, 382, 384, 423, 515, 517, 518, 519, 520, 521, 522, 526, 534, 536, 541, 548, 549, 550, 552, 553, 554, 557, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 595, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 650, 651, 652, 653, 654, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 715, 720, 725, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 747, 748, 749, 750, 756, 759, 761, 762, 763, 764, 765, 766, 768, 770, 782, 784, 786, 788, 793, 794, 795, 797, 800, 801, 803, 804, 805, 806, 807, 809, 812, 813, 814, 821, 822, 824, 825, 826, 827, 828, 830, 831, 834, 835, 837, 839, 844, 845, 846, 847, 848, 850, 934, 1033, 1037, 1040, 1041, 1042, 1043, 1047, 1061, 1063, 1067, 1083], "assert_eq": [31, 166, 548, 550, 553, 557, 570, 597, 598, 604, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 621, 622, 623, 624, 625, 643, 650, 651, 652, 662, 663, 665, 666, 667, 668, 669, 720, 724, 745, 747, 750, 756, 793, 794, 795, 797, 804, 812, 813, 814, 844, 845, 846, 847, 850, 1248, 1253], "test_f": [31, 572, 607, 608, 797, 1253], "simplefixtur": 31, "public": [31, 42, 90, 91, 96, 103, 106, 107, 108, 109, 110, 113, 118, 122, 126, 135, 136, 156, 157, 159, 202, 243, 251, 264, 292, 297, 306, 307, 315, 321, 327, 328, 371, 372, 373, 377, 380, 401, 404, 409, 484, 514, 515, 516, 519, 523, 534, 546, 549, 551, 554, 557, 560, 561, 562, 572, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 594, 607, 608, 620, 634, 640, 649, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 672, 675, 690, 691, 709, 727, 728, 733, 735, 736, 739, 740, 742, 743, 744, 750, 751, 753, 755, 756, 761, 764, 765, 770, 772, 773, 776, 777, 778, 779, 782, 784, 786, 788, 790, 797, 800, 801, 804, 805, 806, 812, 813, 815, 822, 824, 825, 826, 827, 828, 830, 839, 844, 845, 846, 859, 866, 880, 948, 952, 1010, 1011, 1016, 1128, 1133, 1253], "myfirstsuit": 31, "test_find": 31, "execut": [31, 49, 97, 99, 100, 113, 146, 155, 192, 194, 202, 203, 211, 218, 223, 230, 237, 243, 248, 258, 260, 261, 264, 266, 274, 276, 279, 303, 310, 323, 324, 329, 330, 333, 334, 349, 350, 351, 352, 357, 358, 363, 364, 367, 368, 375, 376, 377, 378, 379, 380, 387, 389, 390, 397, 404, 425, 426, 460, 462, 466, 488, 493, 497, 506, 517, 542, 543, 550, 569, 572, 579, 586, 591, 605, 634, 658, 672, 770, 797, 856, 857, 858, 866, 868, 873, 878, 879, 887, 891, 982, 984, 1006, 1015, 1053, 1066, 1067, 1081, 1083, 1084, 1085, 1086, 1089, 1090, 1094, 1096, 1100, 1102, 1108, 1112, 1116, 1119, 1132, 1142, 1143, 1146, 1166, 1181, 1217, 1220, 1249, 1251, 1268, 1269, 1273], "wtf": [31, 40, 113, 229, 260, 265, 266, 269, 271, 289, 328, 643, 658, 801, 1020, 1024, 1080, 1082, 1106], "tallk": 31, "morph": [31, 49, 142, 218, 227, 252, 253, 318, 383, 628, 640, 643, 646, 652, 800, 837, 986, 1110], "fixtur": [31, 218, 227, 319, 320, 335, 341, 342, 345, 346, 356, 373, 374, 375, 382, 412, 561, 572, 608, 1246, 1276], "csv": [31, 38, 40, 41, 42, 67, 95, 118, 120, 123, 227, 230, 239, 242, 248, 252, 253, 256, 258, 260, 261, 264, 265, 267, 271, 274, 277, 279, 285, 286, 289, 304, 308, 309, 311, 314, 315, 319, 320, 326, 331, 335, 338, 341, 343, 347, 353, 359, 365, 369, 382, 511, 873, 876, 891, 913, 1120, 1123, 1126, 1160, 1175, 1202, 1203, 1204, 1205, 1208, 1211, 1212, 1213, 1214, 1223], "trivial": [31, 174, 192, 203, 333, 349, 450, 466, 643, 751, 762, 764, 801, 810, 815, 848, 937, 989, 997, 1021, 1067, 1273], "tempfil": [31, 1105], "crap": [31, 193, 267, 309, 365, 370, 496, 512, 529, 541, 710, 748, 783, 849, 937, 1080], "null": [31, 49, 108, 193, 194, 195, 209, 234, 250, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 425, 438, 445, 473, 484, 494, 499, 512, 607, 662, 743, 808, 861, 871, 873, 874, 891, 906, 913, 942, 948, 955, 980, 1023, 1028, 1035, 1042, 1043, 1047, 1051, 1053, 1055, 1057, 1063, 1067, 1068, 1073, 1076, 1080, 1083], "deriv": [31, 96, 110, 114, 130, 213, 267, 279, 346, 391, 415, 608, 626, 652, 740, 742, 743, 744, 782, 828, 830, 848, 1107, 1120, 1253], "seminar": [32, 175], "psycho": 32, "rule": [32, 193, 199, 223, 273, 279, 283, 316, 355, 374, 375, 387, 412, 426, 445, 447, 448, 449, 464, 470, 488, 499, 500, 501, 503, 511, 525, 529, 540, 558, 570, 575, 675, 742, 744, 749, 750, 751, 759, 810, 813, 826, 870, 891, 1020, 1107, 1130, 1138, 1139, 1149, 1158, 1221, 1275], "dont": [32, 283, 510, 957], "scenario": [32, 194, 215, 223, 227, 373, 375, 433, 574, 822, 1045, 1066, 1068, 1069, 1076, 1272], "robert": [32, 558], "martin": [32, 510, 511, 558, 1066], "someon": [32, 115, 223, 264, 279, 286, 289, 320, 377, 381, 382, 411, 664, 801, 822, 888, 894, 916, 937, 976, 1029, 1083, 1132], "mistak": [32, 192, 198, 199, 248, 264, 288, 744, 934, 1208, 1221], "kill": [32, 193, 194, 269, 891, 1013, 1051, 1071, 1080, 1081, 1111, 1267], "10000": [32, 244, 263, 266, 279, 311, 353, 1108, 1124], "peopl": [32, 49, 192, 194, 196, 197, 199, 211, 223, 252, 286, 422, 510, 558, 576, 759, 870, 984, 1066, 1116, 1132, 1160, 1215, 1217], "polit": [32, 835], "thei": [32, 42, 67, 111, 161, 172, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 211, 213, 215, 219, 231, 253, 260, 264, 266, 269, 276, 279, 283, 325, 333, 349, 375, 381, 382, 415, 440, 446, 466, 494, 497, 500, 506, 510, 511, 541, 546, 549, 550, 570, 575, 576, 604, 606, 626, 643, 653, 658, 683, 687, 704, 724, 748, 755, 764, 800, 801, 813, 814, 816, 818, 845, 846, 848, 849, 855, 866, 870, 892, 928, 934, 936, 937, 943, 957, 976, 984, 1016, 1046, 1050, 1066, 1080, 1081, 1086, 1102, 1112, 1120, 1127, 1130, 1181, 1204, 1210, 1213, 1214, 1221, 1224, 1227, 1241, 1247, 1266, 1271, 1273, 1277], "regul": 32, "ethic": 32, "everi": [32, 40, 48, 49, 50, 67, 78, 99, 100, 119, 146, 192, 198, 227, 250, 279, 320, 435, 492, 506, 510, 520, 553, 558, 574, 593, 594, 662, 672, 724, 744, 779, 797, 839, 849, 855, 863, 864, 866, 868, 869, 885, 892, 894, 936, 955, 968, 984, 1019, 1043, 1047, 1063, 1067, 1080, 1081, 1101, 1103, 1112, 1148, 1167, 1178, 1189, 1214, 1248, 1265, 1273], "particular": [32, 111, 191, 203, 223, 479, 504, 550, 574, 626, 747, 797, 877, 1066, 1132], "electr": 32, "seem": [32, 142, 185, 191, 193, 194, 212, 317, 549, 801, 848, 934, 937, 1080], "adher": [32, 873], "immedi": [32, 49, 192, 193, 198, 199, 269, 310, 313, 316, 318, 390, 471, 700, 817, 822, 928, 966, 976, 980, 1055, 1064, 1068, 1070, 1152, 1248], "survei": [32, 212], "had": [32, 111, 191, 193, 194, 198, 199, 203, 211, 223, 227, 256, 258, 277, 440, 479, 570, 637, 649, 727, 765, 768, 800, 801, 857, 858, 870, 895, 934, 978, 1016, 1066, 1098, 1132, 1139, 1158, 1227, 1231], "life": [32, 124, 130, 199, 204, 209, 211, 219, 655, 783, 826, 844, 870, 984, 1059, 1133, 1154, 1211], "accomplish": [32, 44, 67, 231, 317, 319, 320, 496, 511, 934, 1066], "state": [32, 108, 113, 118, 155, 162, 164, 166, 174, 199, 204, 223, 231, 253, 260, 263, 266, 276, 277, 279, 443, 460, 492, 510, 597, 598, 602, 603, 650, 803, 810, 822, 824, 861, 921, 930, 942, 980, 1001, 1051, 1055, 1067, 1068, 1106, 1112], "befor": [32, 114, 118, 126, 130, 192, 193, 195, 196, 197, 199, 202, 211, 227, 230, 234, 252, 279, 295, 296, 298, 319, 320, 325, 341, 342, 343, 346, 353, 355, 374, 387, 428, 436, 437, 446, 466, 525, 528, 529, 541, 607, 637, 643, 681, 708, 748, 757, 765, 770, 797, 806, 809, 815, 816, 817, 822, 824, 825, 842, 846, 847, 849, 856, 893, 928, 934, 937, 948, 961, 972, 978, 984, 1047, 1053, 1069, 1071, 1083, 1107, 1112, 1130, 1173, 1199, 1201, 1205, 1213, 1226, 1230, 1233, 1242, 1243, 1249], "formal": [32, 202, 215, 252, 253, 342, 345, 528, 597, 1242], "To": [32, 47, 67, 91, 101, 102, 104, 105, 111, 112, 119, 159, 160, 161, 171, 173, 191, 192, 194, 196, 207, 215, 219, 223, 238, 250, 260, 266, 276, 279, 280, 283, 287, 295, 296, 298, 300, 320, 335, 338, 342, 386, 436, 439, 494, 506, 550, 595, 608, 703, 718, 721, 743, 794, 798, 842, 859, 866, 928, 936, 957, 963, 972, 984, 1009, 1024, 1033, 1045, 1100, 1123, 1173, 1197, 1202, 1204, 1214, 1221, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "googletest": [32, 86, 166, 218, 220, 221, 253, 296, 298, 333, 349, 381, 382, 523, 538, 554, 591, 604, 606, 607, 667, 797, 844, 845, 846, 851, 1248, 1250, 1273, 1276], "messag": [32, 118, 146, 159, 197, 198, 209, 215, 221, 229, 230, 256, 260, 263, 266, 276, 279, 286, 289, 304, 311, 319, 320, 321, 325, 347, 353, 359, 365, 387, 392, 404, 409, 511, 517, 519, 520, 522, 524, 525, 526, 528, 529, 531, 532, 534, 554, 675, 728, 751, 759, 803, 805, 806, 822, 850, 863, 864, 868, 873, 959, 984, 1017, 1036, 1055, 1059, 1066, 1136, 1150, 1160, 1203, 1243, 1247, 1249, 1268, 1270, 1271], "saniti": [32, 508, 511, 541, 544, 664], "perform": [32, 103, 107, 192, 198, 208, 230, 249, 250, 279, 320, 347, 381, 410, 450, 453, 476, 483, 488, 496, 499, 500, 503, 506, 508, 517, 643, 682, 700, 703, 744, 748, 783, 815, 841, 968, 1066, 1071, 1088, 1099, 1100, 1158, 1241, 1256, 1260], "delici": [32, 40], "fearlessli": [32, 40], "backlog": [32, 373], "Or": [32, 101, 102, 104, 105, 112, 114, 130, 159, 192, 298, 355, 385, 386, 495, 511, 634, 808, 824, 836, 922, 1016, 1026, 1061, 1138, 1152, 1228, 1233], "Will": [32, 192, 224, 283, 390, 945, 1083, 1150, 1161, 1236, 1250], "high": [33, 40, 108, 114, 166, 174, 212, 252, 266, 283, 373, 510, 558, 581, 594, 598, 602, 757, 844, 846, 966, 978, 982, 994, 1003, 1066], "speed": [33, 40, 187, 192, 260, 264, 266, 276, 279, 283, 347, 501, 750, 978, 984, 1069, 1071, 1212, 1213], "hype": [33, 783], "we": [33, 37, 47, 48, 50, 52, 58, 114, 118, 122, 126, 129, 130, 131, 136, 139, 154, 157, 159, 161, 170, 172, 173, 187, 191, 192, 194, 195, 196, 197, 198, 199, 203, 206, 207, 210, 211, 212, 213, 214, 215, 219, 220, 223, 227, 228, 229, 230, 231, 233, 242, 243, 250, 251, 252, 253, 257, 260, 263, 264, 266, 267, 269, 296, 298, 300, 307, 310, 313, 315, 317, 319, 320, 338, 342, 345, 346, 373, 375, 382, 383, 384, 385, 386, 390, 407, 410, 411, 415, 425, 440, 451, 458, 466, 479, 488, 490, 494, 496, 499, 504, 511, 515, 516, 519, 520, 528, 529, 534, 536, 540, 548, 549, 550, 553, 554, 557, 560, 569, 570, 574, 575, 591, 592, 593, 594, 602, 605, 606, 607, 637, 643, 652, 660, 663, 687, 724, 733, 734, 735, 736, 737, 750, 770, 780, 800, 801, 813, 825, 841, 846, 850, 857, 858, 873, 874, 888, 894, 895, 910, 928, 934, 936, 937, 945, 948, 952, 953, 957, 959, 961, 980, 984, 986, 992, 1000, 1012, 1016, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1042, 1047, 1053, 1067, 1076, 1094, 1098, 1099, 1100, 1108, 1127, 1132, 1158, 1160, 1165, 1167, 1196, 1203, 1204, 1205, 1208, 1213, 1214, 1215, 1216, 1222, 1224, 1230, 1233, 1249, 1250, 1262, 1265, 1266, 1267], "did": [33, 193, 194, 196, 198, 199, 202, 203, 210, 219, 223, 230, 315, 490, 494, 510, 554, 593, 734, 751, 794, 831, 848, 870, 928, 957, 961, 984, 1007, 1016, 1066, 1108, 1258], "consequ": [33, 191, 192, 310, 313, 470, 491, 494, 495, 558, 1029, 1066, 1127, 1227, 1258], "unsign": [33, 103, 109, 126, 264, 269, 442, 444, 452, 481, 484, 488, 496, 562, 577, 592, 606, 607, 608, 658, 720, 721, 731, 761, 765, 766, 768, 782, 784, 786, 788, 790, 797, 822, 824, 825, 827, 848, 940, 943, 948, 955, 964, 966, 968, 974, 980, 989, 994, 998, 1025, 1041, 1077, 1255, 1256], "fals": [33, 99, 100, 103, 107, 108, 110, 146, 195, 197, 210, 211, 224, 229, 234, 239, 241, 242, 244, 247, 250, 256, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 398, 413, 428, 432, 449, 486, 512, 529, 665, 690, 722, 724, 747, 748, 756, 759, 801, 819, 824, 825, 848, 863, 864, 891, 1004, 1060, 1061, 1066, 1067, 1069, 1089, 1090, 1105, 1120, 1124, 1127, 1140, 1141, 1143, 1144, 1148, 1226, 1227, 1230, 1232, 1248], "introduc": [33, 45, 67, 86, 142, 171, 173, 252, 269, 277, 318, 333, 349, 492, 500, 512, 529, 548, 553, 575, 593, 594, 595, 626, 727, 1003, 1080, 1110, 1136, 1150, 1215, 1262, 1265, 1273], "throw": [33, 118, 142, 196, 199, 206, 269, 550, 574, 575, 579, 585, 586, 588, 589, 590, 608, 626, 703, 720, 724, 735, 745, 778, 820, 825, 839, 843, 846, 1253], "notfounderror": 33, "commit": [33, 66, 111, 164, 170, 195, 198, 248, 252, 253, 264, 267, 277, 412, 957, 1208, 1217, 1220, 1241], "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 33, "twice": [34, 40, 42, 44, 192, 432, 471, 493, 540, 810, 813, 819, 891, 928, 1004, 1012, 1053, 1100], "crash": [34, 40, 49, 99, 100, 192, 193, 194, 197, 248, 250, 260, 266, 276, 279, 422, 461, 468, 488, 574, 658, 684, 722, 844, 1067, 1081, 1208], "found": [34, 40, 97, 98, 119, 184, 191, 203, 211, 223, 256, 260, 263, 266, 269, 271, 273, 276, 279, 289, 304, 311, 325, 333, 343, 347, 349, 353, 359, 365, 369, 382, 390, 404, 497, 506, 519, 522, 534, 538, 543, 584, 588, 589, 590, 607, 609, 614, 615, 643, 687, 690, 693, 703, 708, 709, 724, 726, 734, 736, 756, 768, 794, 862, 866, 873, 921, 937, 955, 1083, 1086, 1096, 1101, 1107, 1115, 1124, 1154, 1187, 1212, 1215, 1251, 1273], "explicitli": [35, 157, 193, 194, 198, 223, 263, 273, 283, 316, 448, 449, 467, 505, 511, 529, 575, 652, 655, 662, 703, 747, 751, 756, 761, 810, 813, 848, 861, 1068, 1077, 1106, 1116, 1135, 1221, 1228], "solut": [35, 113, 197, 199, 207, 215, 217, 223, 242, 252, 253, 258, 261, 264, 269, 274, 280, 296, 299, 310, 319, 320, 324, 330, 355, 356, 368, 375, 381, 384, 386, 470, 471, 474, 493, 496, 513, 517, 529, 536, 547, 574, 626, 654, 655, 674, 714, 730, 747, 751, 759, 792, 814, 833, 848, 863, 892, 893, 910, 1050, 1055, 1066, 1069, 1070, 1089, 1112, 1148, 1180, 1192, 1221, 1259, 1265], "force_overwrit": 35, "descriptor": [35, 139, 174, 192, 215, 247, 279, 283, 304, 325, 343, 411, 655, 867, 873, 874, 931, 943, 964, 1000, 1021, 1022, 1023, 1041, 1066, 1077, 1262, 1268, 1272], "mani": [36, 40, 43, 48, 50, 54, 78, 103, 109, 131, 172, 192, 194, 198, 199, 215, 220, 223, 239, 250, 271, 281, 286, 307, 311, 315, 316, 318, 324, 343, 382, 390, 411, 415, 438, 450, 452, 461, 476, 490, 492, 497, 512, 525, 528, 537, 538, 540, 549, 552, 557, 560, 599, 626, 672, 682, 701, 703, 728, 770, 800, 801, 810, 819, 831, 834, 848, 850, 856, 867, 868, 870, 871, 925, 934, 936, 943, 945, 961, 970, 976, 980, 984, 1022, 1023, 1042, 1051, 1061, 1064, 1066, 1080, 1081, 1083, 1094, 1103, 1105, 1107, 1112, 1121, 1136, 1139, 1142, 1146, 1154, 1158, 1160, 1165, 1213, 1215, 1216, 1217, 1221, 1230, 1248, 1258, 1259, 1269, 1278], "overwrit": [36, 98, 382, 574, 575, 588, 615, 658, 703, 706, 728, 893, 898, 910, 984, 1030, 1156], "present": [36, 47, 131, 195, 199, 203, 211, 224, 279, 325, 333, 342, 349, 373, 382, 385, 387, 516, 654, 747, 866, 937, 980, 984, 1016, 1035, 1066, 1107, 1191, 1230, 1273], "continu": [37, 40, 49, 54, 78, 88, 95, 99, 100, 111, 114, 131, 173, 193, 202, 203, 214, 223, 224, 227, 236, 241, 242, 243, 272, 277, 283, 289, 299, 373, 375, 401, 464, 465, 471, 494, 510, 512, 519, 522, 541, 553, 666, 668, 669, 722, 764, 794, 795, 797, 801, 812, 928, 930, 934, 935, 1008, 1031, 1032, 1066, 1080, 1081, 1086, 1098, 1105, 1112, 1116, 1149, 1152, 1170, 1215, 1230, 1248], "expected_cont": 37, "fill": [37, 194, 195, 228, 279, 280, 325, 384, 452, 755, 800, 801, 834, 845, 897, 955, 980, 984, 1022, 1110], "strategi": [37, 263, 374, 381, 382, 486, 936, 1066, 1166, 1241], "hurri": [37, 471], "read_fil": 37, "compar": [37, 113, 251, 253, 264, 279, 320, 325, 384, 449, 491, 505, 506, 525, 529, 541, 604, 650, 720, 845, 1007, 1051, 1150, 1155, 1180, 1184, 1213], "binaryfil": 37, "type": [37, 67, 72, 89, 99, 100, 131, 143, 154, 159, 162, 164, 173, 174, 189, 191, 192, 195, 197, 199, 210, 211, 214, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 240, 241, 243, 244, 247, 250, 251, 252, 255, 256, 260, 265, 268, 269, 271, 273, 278, 281, 283, 287, 289, 291, 292, 294, 302, 304, 307, 308, 311, 319, 320, 321, 324, 325, 331, 336, 340, 341, 342, 344, 345, 346, 347, 352, 353, 356, 359, 364, 366, 369, 372, 375, 381, 382, 383, 396, 397, 398, 399, 404, 406, 407, 415, 436, 447, 448, 455, 460, 466, 470, 476, 479, 482, 486, 487, 488, 492, 494, 495, 497, 498, 508, 512, 513, 524, 525, 528, 529, 536, 548, 550, 559, 562, 570, 576, 606, 610, 631, 640, 650, 652, 658, 659, 662, 664, 665, 675, 683, 713, 720, 722, 724, 725, 731, 739, 743, 744, 750, 751, 753, 762, 770, 781, 782, 784, 788, 789, 792, 794, 795, 797, 798, 803, 808, 810, 815, 818, 828, 830, 831, 833, 834, 835, 840, 845, 846, 856, 873, 876, 888, 891, 894, 907, 909, 920, 928, 930, 934, 940, 943, 945, 950, 953, 972, 984, 1007, 1012, 1021, 1022, 1025, 1028, 1029, 1030, 1031, 1032, 1051, 1063, 1066, 1073, 1076, 1080, 1081, 1083, 1101, 1103, 1106, 1112, 1116, 1121, 1122, 1123, 1130, 1134, 1136, 1138, 1139, 1140, 1144, 1146, 1147, 1148, 1153, 1154, 1156, 1158, 1160, 1173, 1185, 1186, 1204, 1208, 1213, 1217, 1221, 1226, 1227, 1228, 1236, 1241, 1243, 1258, 1260, 1267, 1271, 1278, 1282], "per": [37, 67, 198, 224, 342, 395, 415, 444, 483, 488, 525, 597, 765, 782, 862, 867, 887, 913, 974, 980, 994, 998, 1003, 1004, 1057, 1067, 1084, 1254, 1276], "doesn": [37, 194, 197, 304, 353, 466, 468, 471, 486, 500, 848, 850, 857, 858, 893, 897, 910, 943, 1004, 1084, 1096, 1152], "belong": [37, 220, 223, 438, 458, 484, 511, 626, 650, 663, 665, 876, 884, 1031, 1123, 1137], "test_write_csv": 37, "test_read_csv": [37, 1206], "ah": [37, 48, 50, 52, 198, 213, 250, 252, 266, 705, 1083, 1086, 1160, 1224, 1271], "altern": [38, 40, 49, 58, 67, 72, 130, 191, 192, 199, 224, 243, 269, 330, 359, 445, 516, 650, 659, 672, 683, 686, 750, 786, 810, 843, 870, 891, 931, 934, 937, 984, 1017, 1025, 1031, 1051, 1057, 1076, 1083, 1132, 1152, 1155, 1228, 1233, 1236, 1243, 1253, 1264], "By": [38, 40, 141, 142, 149, 192, 194, 199, 203, 218, 224, 260, 266, 267, 269, 276, 277, 279, 280, 284, 288, 291, 295, 296, 298, 300, 309, 317, 319, 320, 324, 335, 338, 341, 342, 345, 355, 356, 368, 373, 374, 384, 385, 386, 412, 443, 470, 493, 496, 726, 727, 735, 796, 801, 802, 873, 922, 934, 953, 1039, 1066, 1068, 1084, 1086, 1096, 1120, 1127, 1205, 1206, 1215, 1240, 1267], "establish": [40, 61, 231, 243, 307, 319, 320, 341, 345, 401, 510, 984, 1067, 1259, 1272], "were": [40, 111, 130, 172, 192, 194, 198, 223, 227, 384, 387, 422, 470, 538, 649, 658, 659, 684, 755, 804, 857, 858, 937, 1032, 1066, 1098, 1106, 1130, 1139, 1158, 1164, 1221, 1227, 1258], "occas": [40, 78, 193, 845], "ourselv": [40, 223, 928], "gather": [40, 199, 230, 319, 320, 341, 342, 345, 389, 504, 506, 1066, 1193], "wreak": [40, 99, 100, 486, 722], "havoc": [40, 99, 100, 486, 722], "shoehorn": 40, "violat": [40, 103, 108, 109, 131, 192, 510, 558, 827, 846, 998, 1067, 1081], "nearli": [40, 223, 229, 488, 801, 1058], "solid": [40, 101, 102, 103, 104, 105, 112, 131, 155, 204, 316, 318, 511, 558, 1256, 1257, 1268, 1269, 1271, 1272], "chanc": [40, 192, 194, 228, 382, 490, 510, 934, 939, 984, 1024, 1266], "clean": [40, 49, 122, 159, 175, 258, 277, 421, 488, 499, 500, 503, 509, 650, 800, 851, 1083, 1085, 1096, 1105, 1158, 1279], "now": [41, 47, 111, 139, 157, 159, 162, 174, 191, 192, 193, 194, 195, 196, 198, 199, 210, 219, 229, 239, 256, 263, 269, 273, 283, 291, 311, 315, 336, 373, 390, 391, 404, 466, 479, 494, 499, 524, 546, 550, 557, 570, 575, 597, 598, 605, 663, 687, 690, 696, 700, 704, 709, 747, 755, 757, 839, 841, 846, 862, 866, 928, 934, 936, 937, 942, 961, 984, 992, 994, 1000, 1031, 1032, 1040, 1041, 1066, 1096, 1098, 1103, 1106, 1121, 1124, 1148, 1204, 1213, 1215, 1233, 1242, 1258], "both": [41, 49, 54, 74, 113, 114, 116, 122, 126, 130, 174, 187, 192, 194, 199, 211, 223, 229, 250, 266, 269, 277, 280, 283, 285, 288, 300, 303, 315, 323, 324, 329, 330, 351, 352, 358, 363, 364, 367, 368, 386, 504, 510, 512, 540, 558, 604, 606, 626, 658, 665, 732, 824, 830, 844, 870, 955, 978, 984, 1039, 1047, 1052, 1056, 1066, 1070, 1094, 1100, 1107, 1120, 1123, 1127, 1134, 1141, 1148, 1152, 1157, 1170, 1173, 1180, 1202, 1203, 1204, 1205, 1214, 1241, 1248, 1258], "violatin": 41, "statement": [41, 99, 100, 103, 107, 146, 211, 227, 229, 230, 235, 237, 242, 251, 252, 254, 258, 261, 264, 270, 274, 280, 282, 285, 288, 294, 300, 303, 310, 313, 317, 319, 320, 323, 324, 329, 330, 335, 338, 341, 342, 345, 346, 351, 352, 357, 358, 363, 364, 367, 368, 409, 425, 428, 432, 445, 458, 460, 461, 464, 465, 470, 492, 528, 703, 722, 724, 748, 798, 849, 863, 864, 904, 945, 1068, 1089, 1090, 1104, 1107, 1109, 1110, 1115, 1119, 1121, 1131, 1138, 1141, 1143, 1150, 1183, 1223, 1241, 1277, 1278], "respect": [41, 48, 50, 108, 193, 253, 315, 317, 384, 396, 442, 490, 510, 575, 593, 652, 659, 742, 748, 810, 845, 846, 861, 870, 934, 1067, 1081, 1127], "mainli": [42, 192, 227, 316, 325, 703, 797, 1039, 1110], "bugfix": 42, "ongo": [42, 111, 381, 382, 1069], "scene": [42, 1083, 1127], "pleas": [42, 113, 136, 154, 193, 194, 197, 199, 203, 206, 219, 223, 227, 228, 230, 231, 232, 233, 243, 269, 296, 298, 307, 328, 369, 372, 395, 436, 470, 500, 525, 529, 608, 664, 666, 667, 668, 669, 870, 928, 936, 937, 1020, 1041, 1058, 1066, 1085, 1086, 1132, 1234], "wait": [42, 67, 72, 126, 130, 146, 162, 174, 192, 193, 194, 195, 196, 198, 238, 342, 390, 757, 800, 817, 821, 824, 863, 864, 867, 875, 928, 976, 982, 986, 989, 992, 994, 1022, 1024, 1028, 1040, 1047, 1061, 1064, 1066, 1068, 1075, 1077, 1080, 1156, 1224, 1248, 1266, 1269], "place": [42, 113, 126, 161, 185, 193, 194, 196, 197, 198, 199, 211, 220, 224, 247, 263, 269, 279, 315, 316, 382, 426, 442, 464, 471, 488, 511, 514, 518, 520, 546, 548, 572, 574, 588, 607, 620, 664, 678, 680, 681, 692, 703, 715, 750, 794, 797, 801, 816, 825, 859, 881, 882, 883, 884, 934, 936, 961, 984, 1012, 1046, 1066, 1068, 1099, 1101, 1110, 1140, 1149, 1153, 1155, 1173, 1230, 1243, 1262], "unnecessarili": [42, 59, 1077], "conflict": [42, 64, 66, 111, 114, 130, 161, 318, 319, 320, 341, 436, 487, 659, 849, 936, 940, 943, 953, 1053, 1059, 1080, 1115, 1244], "rip": [42, 195, 512, 591, 1067, 1222], "detail": [42, 73, 194, 197, 202, 218, 224, 238, 249, 250, 252, 253, 260, 266, 276, 280, 281, 283, 287, 309, 320, 359, 366, 370, 375, 404, 510, 529, 532, 541, 558, 595, 605, 607, 655, 724, 845, 891, 930, 934, 937, 961, 1069, 1102, 1210, 1250, 1256, 1277, 1278], "instanc": [42, 44, 96, 99, 100, 121, 199, 239, 247, 251, 260, 263, 264, 271, 273, 278, 281, 283, 286, 301, 304, 311, 325, 343, 353, 359, 365, 375, 381, 400, 415, 518, 548, 553, 561, 572, 574, 575, 576, 588, 589, 590, 593, 606, 660, 720, 722, 730, 735, 801, 803, 806, 945, 950, 953, 1076, 1077, 1105, 1107, 1121, 1122, 1124, 1127, 1150], "its": [42, 44, 48, 50, 73, 76, 97, 99, 100, 108, 126, 139, 146, 159, 172, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 208, 213, 215, 219, 220, 221, 223, 243, 250, 251, 253, 260, 264, 266, 276, 279, 283, 292, 307, 309, 310, 313, 316, 318, 325, 342, 375, 381, 382, 386, 395, 406, 436, 458, 469, 471, 486, 488, 490, 497, 499, 515, 518, 521, 524, 532, 549, 553, 572, 575, 576, 591, 592, 593, 594, 599, 604, 607, 649, 650, 651, 653, 655, 660, 689, 722, 761, 764, 797, 800, 801, 814, 817, 833, 839, 857, 858, 861, 863, 864, 868, 873, 878, 879, 891, 892, 913, 915, 936, 948, 957, 961, 984, 989, 1007, 1008, 1015, 1025, 1026, 1031, 1041, 1047, 1055, 1061, 1064, 1066, 1067, 1068, 1069, 1100, 1105, 1107, 1110, 1115, 1120, 1124, 1130, 1138, 1148, 1150, 1155, 1159, 1166, 1213, 1215, 1234, 1241, 1243, 1258, 1259, 1262, 1265, 1266, 1267, 1269, 1271, 1273], "replac": [42, 49, 52, 86, 118, 174, 197, 241, 252, 260, 263, 264, 266, 267, 269, 276, 279, 311, 325, 342, 381, 389, 430, 445, 486, 512, 595, 680, 681, 734, 770, 783, 797, 800, 801, 806, 824, 825, 845, 937, 987, 1054, 1067, 1081, 1106], "symptom": [44, 202], "mismatch": [44, 529, 632], "onc": [44, 103, 108, 109, 114, 161, 191, 193, 194, 197, 198, 199, 202, 211, 212, 389, 407, 428, 453, 462, 470, 500, 520, 540, 549, 550, 551, 554, 560, 572, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 605, 607, 660, 664, 682, 683, 724, 731, 765, 773, 782, 784, 786, 787, 788, 789, 790, 797, 803, 819, 837, 839, 928, 937, 945, 948, 980, 1056, 1066, 1080, 1081, 1101, 1107, 1108, 1143, 1165, 1173, 1187, 1217, 1220, 1243, 1271, 1277], "remov": [44, 88, 98, 113, 118, 119, 135, 156, 157, 166, 168, 198, 199, 211, 213, 224, 239, 244, 250, 256, 264, 266, 271, 273, 279, 283, 286, 290, 291, 297, 304, 306, 307, 321, 325, 327, 328, 331, 342, 343, 347, 353, 359, 369, 371, 372, 519, 520, 521, 522, 525, 529, 534, 541, 604, 614, 615, 620, 624, 643, 677, 683, 700, 727, 762, 794, 797, 810, 822, 825, 847, 856, 857, 858, 878, 879, 881, 883, 884, 885, 888, 889, 896, 897, 898, 900, 901, 903, 905, 911, 945, 961, 972, 980, 1003, 1006, 1016, 1029, 1039, 1096, 1100, 1110, 1130, 1140, 1155, 1156, 1157, 1191], "argument": [44, 49, 86, 113, 138, 191, 194, 197, 210, 211, 224, 227, 239, 251, 258, 260, 264, 266, 267, 269, 270, 272, 274, 276, 277, 280, 281, 282, 283, 285, 288, 303, 304, 307, 310, 313, 317, 319, 320, 323, 324, 325, 329, 330, 338, 341, 342, 345, 346, 347, 351, 352, 357, 358, 363, 364, 367, 368, 404, 425, 426, 471, 478, 512, 528, 594, 626, 650, 660, 704, 797, 826, 831, 835, 891, 913, 942, 943, 1029, 1031, 1033, 1062, 1083, 1102, 1105, 1109, 1131, 1133, 1134, 1151, 1159, 1172, 1176, 1180, 1183, 1187, 1190, 1194, 1219, 1241, 1243, 1261], "sync": [44, 131, 193, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 486, 490, 922, 984], "imho": [44, 828], "boolean": [45, 73, 211, 212, 228, 230, 232, 235, 236, 237, 254, 258, 261, 262, 264, 265, 266, 270, 272, 274, 275, 280, 281, 282, 284, 285, 287, 288, 303, 310, 313, 323, 324, 329, 330, 351, 352, 354, 357, 358, 360, 363, 364, 367, 368, 369, 409, 432, 455, 471, 525, 824, 1055, 1066, 1131, 1139, 1143, 1154, 1171, 1186, 1188, 1220], "forbidden": [45, 488], "accord": [45, 49, 113, 126, 159, 161, 191, 194, 279, 732, 875, 891, 925, 928, 934, 936, 937], "uncl": [45, 422], "bob": [45, 279, 422, 510], "enum": [45, 159, 252, 253, 356, 381, 445, 460, 498, 512, 541, 724, 748, 784, 786, 798, 824, 943, 945, 953, 1067, 1258], "elimin": [45, 270, 277, 279, 280, 282, 288, 303, 310, 323, 329, 330, 351, 357, 358, 363, 364, 367, 368, 373, 575, 620, 750, 764, 783, 784, 800, 925, 1110, 1181], "valu": [45, 73, 97, 113, 114, 118, 119, 125, 130, 131, 139, 154, 166, 174, 192, 194, 196, 208, 210, 211, 212, 224, 228, 230, 232, 234, 239, 241, 246, 247, 248, 250, 251, 252, 253, 255, 256, 258, 260, 261, 263, 264, 266, 267, 269, 271, 273, 274, 276, 279, 283, 286, 288, 289, 300, 301, 304, 307, 309, 311, 321, 324, 325, 330, 331, 343, 347, 353, 356, 358, 360, 365, 369, 375, 381, 390, 398, 404, 425, 430, 432, 434, 435, 445, 448, 449, 450, 458, 460, 461, 469, 471, 473, 474, 479, 490, 494, 496, 498, 512, 513, 514, 516, 520, 524, 525, 529, 531, 532, 537, 541, 550, 553, 554, 569, 570, 572, 575, 579, 581, 584, 586, 587, 589, 600, 601, 602, 604, 607, 614, 626, 643, 652, 653, 654, 657, 660, 662, 665, 703, 704, 706, 708, 709, 720, 739, 740, 743, 744, 745, 748, 755, 756, 762, 764, 770, 773, 776, 777, 778, 793, 813, 825, 834, 839, 846, 848, 862, 876, 936, 940, 943, 961, 964, 966, 968, 984, 994, 1025, 1033, 1035, 1038, 1039, 1040, 1043, 1052, 1055, 1061, 1064, 1066, 1076, 1077, 1080, 1081, 1101, 1103, 1105, 1108, 1112, 1116, 1118, 1120, 1127, 1138, 1139, 1140, 1148, 1150, 1153, 1155, 1156, 1160, 1166, 1168, 1173, 1176, 1179, 1186, 1188, 1208, 1211, 1213, 1216, 1219, 1220, 1226, 1227, 1230, 1231, 1232, 1248], "put": [45, 59, 69, 122, 126, 191, 192, 193, 219, 227, 342, 345, 382, 512, 514, 515, 522, 534, 604, 648, 727, 790, 809, 812, 822, 928, 936, 953, 963, 974, 976, 1001, 1033, 1043, 1066, 1068, 1083, 1099, 1102, 1107, 1166, 1263, 1265], "submiss": [46, 51, 55, 142, 164, 171], "submit": [46, 98, 139, 159, 166, 978, 1026], "grazer": [46, 209, 230, 346, 933], "linuxtag": [46, 230, 346, 933], "pure": [47, 59, 95, 121, 131, 199, 316, 318, 356, 381, 382, 404, 466, 559, 741, 742, 751, 800, 828, 870, 1139, 1258], "local": [47, 137, 138, 150, 161, 164, 165, 166, 174, 192, 193, 195, 198, 219, 223, 224, 231, 232, 236, 252, 253, 267, 269, 270, 276, 279, 282, 283, 304, 307, 319, 321, 330, 333, 341, 342, 345, 346, 349, 351, 352, 357, 358, 359, 363, 364, 365, 367, 368, 377, 390, 404, 436, 440, 464, 466, 483, 515, 528, 532, 537, 570, 598, 599, 600, 601, 602, 603, 604, 605, 606, 655, 672, 765, 798, 803, 810, 813, 815, 857, 858, 862, 913, 934, 937, 957, 984, 989, 1006, 1007, 1008, 1014, 1016, 1022, 1033, 1050, 1094, 1096, 1103, 1106, 1151, 1236, 1259, 1271, 1273], "easili": [47, 131, 190, 193, 199, 381, 390, 445, 464, 497, 510, 549, 742, 801, 835, 966, 982, 1025, 1064, 1071, 1102, 1115, 1147, 1258], "69": [47, 197, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1212, 1213, 1232], "70": [47, 150, 152, 165, 174, 194, 202, 224, 229, 231, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 512, 597, 934, 936, 937, 1110, 1212, 1213, 1241], "guess": [47, 273, 283, 309, 490, 495, 759, 1012, 1041], "autotool": [47, 203], "portabl": [47, 215, 438, 500, 817, 1050, 1057, 1077, 1081, 1139, 1217], "configur": [47, 48, 49, 50, 53, 54, 58, 62, 67, 71, 73, 74, 75, 93, 111, 113, 118, 124, 126, 130, 131, 135, 155, 156, 166, 182, 183, 191, 193, 194, 197, 199, 221, 231, 297, 306, 307, 316, 327, 328, 334, 335, 338, 342, 350, 371, 372, 376, 377, 379, 381, 404, 410, 513, 514, 515, 523, 540, 543, 553, 554, 560, 597, 598, 599, 607, 861, 862, 866, 875, 911, 925, 928, 936, 957, 964, 984, 998, 1016, 1023, 1037, 1039, 1066, 1084, 1085, 1098, 1108, 1179, 1216, 1220, 1228, 1236, 1259], "archiv": [47, 92, 93, 113, 137, 166, 203, 204, 231, 233, 297, 306, 307, 327, 371, 506, 537, 544, 860, 891, 1094, 1096, 1101, 1105, 1236], "m4": 47, "macro": [47, 269, 334, 350, 376, 377, 379, 380, 430, 441, 444, 492, 515, 516, 518, 520, 521, 522, 523, 524, 529, 530, 532, 534, 537, 809, 873, 953, 972, 986, 1019, 1025, 1031, 1050, 1085, 1158, 1248, 1253, 1255, 1260], "stock": [47, 263, 264, 1165, 1166], "sudo": [47, 53, 90, 113, 121, 136, 154, 195, 197, 199, 220, 231, 269, 297, 306, 307, 316, 318, 327, 328, 359, 371, 372, 519, 521, 522, 545, 620, 886, 888, 928, 937, 1069, 1098, 1243], "pwd": [47, 98, 111, 139, 155, 166, 219, 296, 298, 359, 404, 409, 513, 544, 605, 607, 667, 857, 858, 868, 913, 915, 916, 928, 959, 961, 1084, 1085, 1099, 1101, 1241], "blink": [47, 154, 172, 175, 318, 321, 342, 346, 390, 393, 928, 1037, 1040], "pub": [47, 53, 195, 231, 957, 1012, 1203], "scm": [47, 53, 195, 218, 245, 957], "lib": [47, 53, 113, 142, 159, 197, 203, 230, 250, 253, 263, 279, 286, 289, 304, 311, 318, 321, 325, 347, 353, 359, 365, 380, 534, 543, 604, 922, 937, 961, 974, 980, 984, 1080, 1084, 1086, 1096, 1098, 1236, 1243], "remot": [47, 91, 93, 150, 152, 159, 161, 164, 165, 195, 197, 199, 243, 252, 299, 377, 380, 390, 547, 568, 582, 856, 859, 936, 957, 984, 985, 989, 1006, 1009, 1010, 1014, 1022, 1096, 1108, 1259, 1262, 1264], "v0": 47, "v1": [47, 309, 554, 570, 755, 763, 764], "v2": [47, 49, 199, 218, 309, 554, 570, 755, 763, 764], "autotooleri": 47, "autogen": 47, "step": [47, 49, 54, 139, 171, 173, 191, 192, 198, 199, 203, 227, 266, 269, 270, 296, 298, 311, 315, 320, 343, 426, 428, 430, 446, 470, 512, 541, 552, 595, 605, 643, 667, 672, 801, 844, 857, 858, 934, 984, 1066, 1083, 1092, 1228, 1230, 1242], "noconfigur": 47, "suppress": [47, 198, 243, 504, 529, 532, 549, 658, 748, 845, 910, 1236], "manual": [47, 49, 114, 124, 126, 130, 199, 229, 230, 260, 261, 266, 269, 276, 279, 309, 311, 382, 434, 435, 438, 445, 483, 488, 512, 649, 690, 734, 783, 784, 786, 787, 800, 801, 813, 821, 824, 826, 834, 835, 848, 857, 858, 928, 934, 936, 939, 940, 943, 984, 1026, 1029, 1051, 1053, 1055, 1098, 1100, 1105, 1113, 1114, 1118, 1122, 1164], "absorb": [47, 229, 509, 511, 813, 1166], "Be": [47, 86, 101, 102, 104, 105, 112, 269, 316, 318, 356, 375, 381, 382, 390, 443, 476, 525, 529, 605, 626, 651, 656, 718, 801, 803, 806, 813, 856, 1080, 1096, 1262], "awar": [47, 390, 487, 514, 1069, 1262], "enabl": [47, 191, 197, 223, 231, 252, 260, 266, 276, 279, 307, 317, 449, 500, 538, 553, 575, 631, 748, 821, 883, 928, 932, 936, 982, 984, 989, 1016, 1066, 1069, 1094, 1098, 1108, 1266], "mkdir": [47, 89, 113, 135, 155, 157, 166, 168, 183, 193, 198, 202, 219, 220, 296, 298, 307, 372, 404, 409, 532, 536, 605, 607, 608, 667, 797, 897, 899, 903, 984, 1012, 1016, 1041, 1096, 1098, 1099, 1105], "dist": [47, 177, 750, 1164], "406332": 47, "apr": [47, 49, 155, 250, 260, 289, 397, 1084, 1085, 1086, 1099], "15": [47, 49, 95, 111, 113, 155, 166, 191, 199, 202, 210, 212, 213, 221, 224, 227, 229, 235, 236, 239, 241, 243, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 274, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 326, 331, 335, 336, 338, 343, 347, 353, 359, 369, 397, 399, 400, 401, 403, 410, 417, 418, 421, 512, 513, 598, 599, 616, 617, 618, 619, 621, 622, 764, 784, 786, 788, 797, 826, 846, 859, 874, 928, 1030, 1039, 1066, 1120, 1211, 1212, 1213, 1233, 1236], "transfer": [47, 154, 192, 253, 256, 333, 349, 390, 506, 608, 658, 813, 856, 857, 858, 919, 955, 984, 997, 998, 1006, 1012, 1015, 1224, 1258, 1273], "scp": [47, 86, 90, 113, 135, 136, 156, 183, 203, 231, 297, 306, 307, 327, 328, 371, 607, 608, 857, 858, 957, 1006, 1007, 1008, 1011, 1016, 1033, 1086, 1096], "192": [47, 224, 231, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 410, 866, 957, 1016], "168": [47, 155, 224, 231, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 410, 866, 957, 1016, 1096], "82": [47, 202, 210, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1166, 1212, 1213], "prerequisit": [47, 93, 136, 269, 934, 957, 1135, 1263], "setuptool": [47, 300, 335, 345, 1162, 1243, 1281], "apt": [47, 53, 121, 154, 203, 220, 269, 316, 318, 620, 930, 934, 937, 964, 1016, 1085, 1098, 1243, 1248], "python3": [47, 49, 53, 75, 174, 177, 203, 211, 224, 230, 250, 260, 266, 276, 279, 283, 359, 1060, 1071, 1098, 1108, 1135, 1228, 1230, 1236, 1243], "along": [47, 193, 199, 251, 264, 422, 470, 560, 740, 797, 801, 839, 876, 1061, 1083, 1115], "omit": [47, 49, 198, 211, 260, 266, 276, 279, 280, 283, 353, 369, 382, 408, 451, 488, 500, 512, 534, 552, 744, 748, 800, 801, 830, 848, 874, 934, 936, 937, 961, 978, 1012, 1028, 1029, 1033, 1053, 1105, 1108, 1160, 1241], "bind": [47, 53, 54, 131, 175, 193, 294, 316, 318, 346, 356, 375, 381, 383, 387, 448, 455, 706, 751, 798, 800, 815, 817, 931, 1083, 1116, 1120, 1139, 1150, 1227, 1258, 1270, 1272], "cxx": [47, 540, 548, 549, 550, 551, 552, 553, 554, 557, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 604, 606, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 704, 739, 740, 743, 744, 797, 1084, 1085], "xf": [47, 53, 203, 856, 1098], "ld_library_path": [47, 543, 1101], "gpiod": [47, 49, 55, 964], "py3": [47, 177, 1164], "aarch64": [47, 203, 1096], "born": [48, 50, 54, 869, 1133], "bound": [48, 49, 50, 54, 269, 273, 304, 316, 331, 381, 487, 497, 502, 632, 660, 661, 663, 681, 801, 815, 824, 869, 873, 929, 1068, 1071, 1125, 1146, 1169, 1228], "employe": [48, 50, 54, 218, 250, 1124], "year": [48, 50, 54, 154, 172, 191, 192, 193, 194, 198, 203, 223, 263, 269, 311, 315, 510, 649, 726, 727, 809, 1066, 1166], "emploi": [48, 50, 54, 193, 203, 227, 471, 984], "pattern": [48, 50, 52, 71, 95, 131, 162, 176, 205, 207, 226, 227, 253, 256, 279, 318, 359, 373, 375, 382, 412, 421, 510, 524, 525, 547, 548, 549, 550, 552, 553, 554, 557, 558, 559, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 596, 750, 751, 783, 851, 891, 921, 1064, 1113, 1114, 1248, 1257, 1258, 1260, 1275, 1276], "led": [48, 50, 67, 80, 115, 117, 122, 123, 131, 154, 209, 231, 307, 390, 413, 597, 928, 936, 943], "hei": [48, 50, 192, 231, 283, 664, 665, 866, 1020, 1153, 1221], "reinvent": [48, 50, 251, 300, 724, 1208], "wheel": [48, 50, 114, 155, 177, 724, 868, 986, 1031, 1236], "admit": [48, 50, 199], "notori": [48, 50], "fun": [48, 50, 120, 192, 197, 249, 251, 287, 316, 422, 555, 804, 870, 928, 934, 936, 984, 1112, 1124, 1136, 1152, 1208, 1242, 1258, 1267, 1268, 1269, 1271, 1272, 1279, 1281], "live": [48, 50, 60, 86, 87, 113, 118, 135, 154, 156, 172, 193, 197, 214, 218, 223, 227, 232, 243, 251, 252, 253, 254, 267, 269, 277, 288, 295, 296, 297, 298, 300, 306, 308, 309, 316, 317, 318, 319, 320, 324, 327, 328, 342, 346, 355, 356, 371, 372, 374, 375, 381, 382, 383, 384, 385, 386, 387, 404, 408, 412, 413, 415, 422, 423, 483, 500, 512, 524, 540, 543, 559, 570, 572, 594, 626, 682, 683, 703, 765, 799, 801, 802, 803, 811, 821, 823, 845, 851, 865, 870, 886, 887, 948, 984, 1036, 1115, 1132, 1166, 1208, 1234, 1242, 1257, 1258, 1260, 1265, 1268], "session": [48, 50, 149, 173, 174, 197, 199, 216, 223, 227, 231, 235, 260, 266, 276, 279, 291, 295, 296, 298, 309, 317, 374, 410, 861, 862, 986, 1013, 1024, 1197, 1208, 1234, 1241], "simpl": [48, 50, 64, 67, 75, 111, 172, 173, 174, 184, 192, 196, 197, 199, 202, 203, 211, 215, 218, 219, 223, 227, 230, 253, 269, 271, 273, 279, 283, 335, 338, 424, 425, 432, 471, 473, 487, 490, 497, 512, 514, 515, 517, 522, 525, 528, 534, 540, 541, 545, 553, 651, 658, 659, 696, 726, 727, 759, 764, 768, 807, 818, 835, 846, 867, 921, 928, 929, 934, 936, 943, 957, 964, 976, 984, 986, 994, 1033, 1039, 1045, 1050, 1053, 1069, 1077, 1080, 1084, 1085, 1086, 1092, 1108, 1112, 1132, 1133, 1141, 1160, 1208, 1214, 1216, 1232, 1247, 1248, 1268, 1278], "express": [48, 50, 210, 226, 227, 229, 230, 240, 250, 259, 264, 265, 267, 271, 290, 291, 293, 294, 295, 296, 299, 300, 305, 324, 325, 330, 343, 354, 360, 426, 428, 432, 436, 445, 446, 448, 449, 450, 453, 455, 458, 460, 461, 463, 471, 508, 512, 525, 526, 528, 529, 547, 556, 568, 569, 572, 576, 582, 583, 604, 650, 759, 761, 762, 763, 815, 891, 925, 1066, 1083, 1104, 1114, 1120, 1141, 1143, 1150, 1152, 1171, 1205, 1206, 1208, 1228, 1257, 1258, 1260, 1277], "thu": [48, 50, 192, 193, 194, 229, 382, 455, 550, 857, 957, 961, 1004, 1029, 1066, 1220, 1266], "techniqu": [48, 50, 59, 60, 61, 490, 500, 606, 722, 931, 1262, 1268], "usag": [48, 50, 69, 103, 109, 114, 149, 150, 154, 164, 165, 174, 194, 199, 243, 253, 264, 277, 291, 319, 341, 374, 381, 382, 385, 386, 387, 390, 410, 422, 471, 496, 497, 504, 513, 518, 519, 524, 532, 536, 537, 541, 544, 554, 594, 595, 658, 660, 664, 665, 683, 739, 761, 770, 803, 813, 834, 839, 868, 891, 921, 924, 986, 1006, 1037, 1040, 1042, 1043, 1064, 1066, 1102, 1107, 1110, 1160, 1203, 1205, 1236, 1243, 1250, 1258, 1261, 1269, 1271], "fundament": [48, 50, 62, 205, 207, 214, 223, 226, 228, 230, 232, 235, 237, 242, 245, 248, 251, 254, 264, 270, 274, 282, 285, 404, 422, 510, 560, 824, 961, 1156, 1207, 1208, 1236, 1269, 1277, 1279, 1280, 1281], "At": [48, 50, 126, 192, 193, 196, 199, 203, 223, 227, 253, 263, 267, 269, 303, 435, 464, 468, 500, 548, 801, 844, 976, 1066, 1103, 1120, 1208], "flow": [48, 50, 193, 223, 228, 230, 231, 232, 233, 237, 242, 243, 258, 261, 274, 285, 385, 386, 405, 406, 407, 409, 444, 464, 500, 508, 748, 765, 798, 834, 1080, 1116, 1141, 1143, 1150, 1227, 1260, 1278, 1282], "event": [48, 49, 50, 52, 54, 75, 121, 125, 146, 162, 174, 195, 215, 251, 260, 264, 266, 276, 279, 307, 319, 320, 506, 770, 781, 785, 822, 863, 864, 868, 931, 952, 953, 986, 987, 1000, 1001, 1024, 1036, 1039, 1041, 1064, 1066, 1068, 1069, 1073, 1119, 1224, 1233, 1266, 1268, 1271, 1272], "save": [48, 49, 50, 74, 191, 192, 204, 211, 214, 260, 266, 276, 279, 310, 313, 316, 369, 452, 454, 524, 773, 776, 777, 778, 800, 875, 893, 1015, 1024, 1066, 1071, 1101, 1105, 1111, 1121, 1154, 1213, 1243, 1258], "schedul": [48, 49, 50, 88, 99, 100, 113, 125, 135, 150, 156, 165, 192, 208, 231, 233, 297, 306, 307, 327, 371, 372, 417, 418, 548, 824, 865, 867, 894, 966, 976, 982, 989, 1004, 1036, 1046, 1050, 1061, 1066, 1067, 1071, 1220, 1262, 1266, 1267, 1271], "overhead": [48, 50, 382, 500, 506, 637, 646, 750, 751], "usual": [48, 50, 73, 97, 113, 192, 193, 199, 202, 211, 221, 223, 283, 317, 333, 349, 426, 466, 467, 493, 506, 510, 519, 522, 532, 543, 545, 548, 562, 570, 576, 605, 650, 665, 707, 748, 750, 757, 801, 815, 822, 833, 834, 867, 869, 873, 892, 928, 929, 936, 943, 955, 957, 961, 972, 978, 980, 984, 998, 1000, 1004, 1025, 1039, 1041, 1066, 1067, 1068, 1083, 1084, 1085, 1086, 1096, 1100, 1105, 1106, 1107, 1108, 1112, 1115, 1118, 1119, 1125, 1127, 1129, 1130, 1132, 1135, 1141, 1146, 1214, 1215, 1221, 1243, 1244, 1250, 1262, 1268, 1273, 1279], "exhibit": [48, 50, 269, 373, 735, 937, 1026, 1031], "glitch": [48, 50, 194, 199, 936, 937, 1066], "caus": [48, 50, 142, 192, 195, 260, 266, 276, 279, 283, 382, 528, 724, 937, 1047, 1061, 1066, 1067, 1230], "hiccup": [48, 50, 199, 309, 1085], "decor": [48, 50, 211, 223, 226, 227, 242, 251, 267, 277, 291, 346, 547, 555, 568, 582, 1105, 1109, 1120, 1127, 1128, 1130, 1151, 1208, 1241, 1259, 1277], "closur": [48, 49, 50, 210, 223, 227, 235, 236, 251, 264, 267, 277, 310, 313, 342, 346, 805, 1106, 1109, 1149, 1151, 1277], "twist": [48, 50, 968], "amazingli": [48, 50, 875, 1262], "download": [49, 95, 142, 166, 174, 185, 191, 197, 199, 203, 211, 214, 223, 230, 235, 243, 245, 248, 251, 252, 253, 258, 261, 264, 274, 277, 280, 282, 285, 288, 291, 300, 303, 310, 314, 321, 338, 358, 364, 368, 395, 423, 513, 518, 522, 524, 525, 526, 528, 529, 531, 532, 534, 540, 597, 598, 599, 600, 601, 602, 603, 606, 607, 652, 724, 730, 732, 736, 737, 770, 771, 772, 773, 774, 775, 776, 777, 778, 835, 837, 891, 893, 913, 915, 928, 934, 936, 937, 1015, 1026, 1086, 1092, 1098, 1132, 1166, 1178, 1187, 1197, 1198, 1200, 1210, 1212, 1214, 1236], "multi": [49, 528, 1214, 1221], "chmod": [49, 199, 404, 857, 858, 876, 881, 883, 885, 888, 1008, 1012], "snippet": [49, 52, 103, 106, 154, 174, 211, 230, 352, 389, 529, 713, 936, 1108], "subdirectori": [49, 131, 162, 198, 218, 220, 243, 334, 350, 375, 376, 377, 378, 379, 380, 531, 532, 536, 540, 542, 543, 591, 605, 856, 857, 858, 871, 881, 883, 900, 915, 920, 936, 937, 959, 1096, 1197, 1248], "stuff": [49, 52, 60, 67, 89, 113, 122, 135, 157, 161, 168, 171, 191, 194, 198, 211, 223, 227, 230, 243, 252, 253, 274, 288, 307, 309, 330, 372, 373, 390, 408, 506, 512, 518, 634, 680, 797, 891, 899, 934, 943, 952, 984, 1033, 1066, 1105, 1107, 1164, 1204, 1208, 1210, 1241], "awai": [49, 66, 73, 174, 191, 192, 193, 197, 215, 231, 252, 258, 266, 300, 303, 323, 324, 329, 335, 338, 351, 357, 358, 363, 367, 373, 382, 393, 546, 762, 764, 824, 845, 870, 891, 1080, 1105, 1123, 1202], "strace": [49, 52, 86, 135, 174, 192, 194, 422, 942, 947, 1000, 1022, 1028, 1050, 1067, 1076, 1083, 1262, 1269], "pid": [49, 52, 192, 194, 195, 505, 862, 867, 869, 1003, 1050, 1067, 1070, 1076, 1080, 1081], "4677": 49, "hello": [49, 203, 224, 230, 234, 235, 237, 241, 245, 247, 252, 254, 256, 258, 260, 261, 264, 266, 269, 270, 271, 273, 274, 280, 281, 282, 283, 285, 286, 288, 290, 303, 304, 310, 313, 321, 323, 324, 329, 330, 343, 351, 352, 353, 357, 358, 363, 364, 367, 368, 369, 399, 400, 438, 441, 445, 514, 515, 516, 517, 522, 524, 525, 531, 538, 540, 541, 543, 544, 545, 546, 655, 658, 720, 770, 775, 776, 777, 778, 810, 813, 857, 858, 861, 862, 895, 897, 902, 903, 910, 986, 996, 1006, 1028, 1061, 1083, 1084, 1085, 1086, 1096, 1098, 1100, 1101, 1102, 1131, 1135, 1136, 1145, 1147, 1152, 1182, 1232, 1261], "11hello": 49, "clock_gettime64": 49, "clock_monoton": [49, 757, 1023, 1067], "tv_sec": [49, 1067], "164646": 49, "tv_nsec": [49, 1067], "833862215": 49, "_newselect": 49, "tv_usec": 49, "500000": [49, 930, 936, 1213], "unfinish": [49, 194], "4679": 49, "resum": [49, 772, 773, 776, 777, 778, 980, 1067], "timeout": [49, 819, 822, 825, 1022, 1236], "mi": [49, 271], "61": [49, 150, 152, 165, 202, 212, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 404, 409, 1212, 1213], "845864201": 49, "4678": [49, 266], "select": [49, 191, 192, 194, 198, 250, 255, 263, 280, 310, 313, 342, 363, 367, 368, 449, 471, 748, 875, 932, 937, 984, 1039, 1040, 1041, 1066, 1069, 1072, 1074, 1098, 1166, 1211, 1220, 1229, 1230, 1241, 1249, 1270, 1272], "fd": [49, 139, 202, 263, 307, 608, 934, 943, 1017, 1021, 1022, 1023, 1025, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1042, 1043, 1047, 1073, 1076, 1080, 1166], "fourth": 49, "involv": [49, 67, 192, 195, 199, 202, 253, 307, 319, 320, 341, 373, 410, 486, 494, 500, 506, 591, 658, 849, 928, 955, 984, 1066, 1084, 1094, 1096], "occasion": [49, 185, 223, 252, 269, 496, 510, 514, 735, 875, 984, 1046, 1066, 1132, 1146, 1262, 1280], "due": [49, 199, 223, 548, 751, 1236], "weird": [49, 142, 171, 307, 352, 360, 496, 747, 827, 943, 968, 1061, 1080], "gil": [49, 223, 227, 319, 320, 341, 342, 345, 1208], "jitter": [49, 1069, 1071], "heavi": [49, 215, 223, 373, 558, 937, 1132], "usr": [49, 155, 174, 192, 193, 197, 203, 211, 214, 219, 221, 243, 250, 251, 260, 263, 266, 276, 279, 283, 286, 289, 304, 309, 311, 321, 325, 347, 353, 359, 365, 401, 404, 519, 522, 526, 532, 540, 541, 543, 544, 545, 759, 797, 801, 835, 846, 856, 862, 875, 887, 920, 922, 934, 937, 957, 984, 1060, 1071, 1080, 1083, 1084, 1085, 1086, 1096, 1099, 1101, 1108, 1111, 1135, 1197, 1211, 1224, 1236, 1243, 1250], "env": [49, 174, 193, 214, 309, 532, 1060, 1071, 1135, 1163, 1197, 1211, 1224], "def": [49, 52, 174, 210, 211, 214, 224, 229, 230, 234, 239, 241, 242, 244, 247, 250, 251, 256, 257, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 309, 311, 321, 325, 331, 336, 339, 343, 347, 353, 359, 365, 369, 386, 399, 400, 512, 801, 803, 1060, 1105, 1106, 1107, 1110, 1111, 1112, 1115, 1116, 1118, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1136, 1139, 1149, 1150, 1155, 1159, 1191, 1197, 1204, 1205, 1206, 1224, 1230, 1232, 1241, 1242], "hello_left": 49, "print": [49, 171, 173, 210, 211, 213, 214, 224, 227, 229, 230, 234, 239, 241, 242, 243, 244, 247, 250, 251, 255, 256, 257, 260, 263, 264, 266, 271, 273, 276, 279, 282, 283, 286, 289, 292, 301, 304, 308, 309, 311, 321, 325, 331, 336, 342, 343, 347, 353, 358, 359, 365, 369, 386, 396, 397, 398, 399, 400, 422, 429, 433, 435, 504, 532, 541, 678, 706, 721, 770, 801, 803, 835, 837, 868, 869, 875, 891, 893, 894, 934, 1060, 1071, 1103, 1106, 1107, 1108, 1110, 1111, 1112, 1116, 1118, 1120, 1121, 1124, 1126, 1129, 1134, 1135, 1136, 1137, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1158, 1159, 1173, 1176, 1186, 1187, 1188, 1190, 1191, 1197, 1211, 1216, 1220, 1224, 1233], "hello_right": 49, "rjust": [49, 211, 279, 325], "60": [49, 95, 150, 152, 165, 174, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 291, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 574, 575, 576, 588, 589, 590, 597, 873, 934, 936, 937, 1066, 1086, 1110, 1212, 1213], "hello_middl": 49, "center": [49, 52, 214, 256, 271, 273, 279, 283, 304, 311, 325, 343, 347, 353, 359, 365, 369, 398, 504, 604, 1262], "t1": [49, 210, 273, 283, 304, 308, 325, 347, 359, 765, 821, 1051, 1066], "t2": [49, 210, 266, 273, 283, 304, 347, 359, 765, 821, 1051, 1066], "t3": [49, 1066], "async": [49, 52, 53, 54, 171, 173, 192, 223, 227, 260, 266, 276, 277, 279, 342, 346, 384, 386, 770, 1058, 1082, 1208, 1270], "await": [49, 53, 174, 342, 386], "epoll_wait": 49, "201": [49, 195, 224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "multiplex": [49, 180, 936, 1023, 1067], "create_task": [49, 174, 386], "sysf": [49, 113, 114, 115, 123, 124, 134, 154, 238, 307, 391, 392, 534, 536, 607, 928, 934, 937, 940, 941, 986, 1036, 1037, 1040, 1262, 1264], "unmaintain": [49, 297, 306, 307, 350, 1085, 1150, 1270], "immun": [49, 664, 757], "hotplug": [49, 934], "reset": [49, 191, 554, 557, 745, 797, 824, 845, 846, 847, 1066, 1230, 1271], "pullup": 49, "pulldown": 49, "rpi": [49, 170, 203, 390, 934, 984, 985], "specif": [49, 53, 111, 155, 173, 174, 195, 206, 260, 266, 267, 276, 279, 325, 331, 342, 373, 376, 379, 384, 390, 423, 471, 488, 500, 550, 597, 600, 602, 605, 724, 753, 797, 809, 846, 856, 867, 928, 934, 937, 943, 957, 980, 984, 1019, 1025, 1041, 1050, 1051, 1066, 1083, 1096, 1107, 1115, 1116, 1217, 1233, 1241, 1270, 1271], "hope": [49, 192, 194, 197, 199, 203, 422, 1066], "major": [49, 197, 209, 260, 266, 276, 279, 316, 318, 381, 382, 510, 517, 520, 664, 861, 943, 950, 1068, 1133, 1139, 1154], "releas": [49, 195, 220, 334, 350, 359, 376, 377, 378, 379, 380, 386, 471, 542, 764, 820, 822, 825, 846, 928, 934, 943, 957, 1043, 1055, 1060, 1066, 1098, 1101, 1133, 1242], "ton": [49, 174, 386, 844, 870, 932, 1025, 1067, 1071, 1258], "bartosz": [49, 162], "golaszewski": [49, 162], "gpiochip0": [49, 964, 1039], "ioctl": [49, 307, 492, 931, 934, 950, 952, 978, 986, 987, 992, 998], "crw": [49, 155, 861, 913, 934, 936, 937, 948], "254": [49, 212, 263, 266, 271, 273, 276, 283, 286, 304, 311, 321, 325, 331, 347, 359, 365, 369], "13": [49, 95, 149, 155, 175, 195, 197, 204, 210, 212, 213, 224, 229, 232, 236, 239, 241, 244, 247, 250, 255, 257, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 309, 312, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 399, 400, 421, 504, 511, 522, 544, 650, 747, 748, 759, 761, 762, 764, 801, 824, 845, 873, 913, 936, 948, 1029, 1039, 1069, 1098, 1105, 1107, 1148, 1159, 1212, 1213, 1236], "request": [49, 52, 82, 87, 114, 130, 161, 164, 174, 193, 194, 197, 253, 255, 280, 286, 342, 359, 511, 550, 572, 586, 764, 810, 813, 814, 848, 942, 986, 1025, 1040, 1241], "27": [49, 86, 113, 149, 202, 204, 212, 213, 224, 234, 239, 241, 243, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 282, 283, 286, 289, 291, 292, 301, 304, 308, 311, 315, 321, 325, 331, 338, 343, 347, 353, 359, 365, 369, 376, 379, 396, 398, 399, 401, 421, 512, 529, 606, 631, 835, 913, 934, 937, 1083, 1212, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "request_lin": [49, 52], "consum": [49, 131, 146, 194, 197, 213, 263, 342, 375, 504, 515, 570, 822, 824, 825, 855, 863, 864, 871, 1055, 1056, 1068, 1073, 1075, 1077, 1080, 1108, 1130, 1139, 1166, 1220, 1266], "mytest": 49, "config": [49, 86, 118, 119, 174, 187, 193, 195, 197, 203, 210, 304, 321, 325, 375, 380, 381, 382, 408, 415, 423, 513, 518, 607, 846, 913, 934, 936, 957, 985, 1012, 1098, 1108, 1236], "lineset": 49, "set_valu": [49, 52, 821, 825, 839], "dictionari": [49, 213, 223, 228, 229, 230, 232, 235, 236, 237, 240, 242, 246, 248, 249, 254, 258, 259, 261, 262, 264, 265, 267, 268, 270, 272, 274, 275, 278, 281, 282, 284, 285, 287, 288, 290, 293, 300, 302, 303, 305, 310, 312, 313, 317, 319, 320, 322, 323, 324, 326, 329, 330, 332, 335, 338, 341, 342, 344, 345, 346, 348, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 370, 404, 409, 412, 834, 1109, 1112, 1122, 1123, 1127, 1131, 1166, 1176, 1181, 1186, 1187, 1199, 1201, 1202, 1208, 1216, 1226, 1233, 1278], "comprehens": [49, 58, 211, 212, 224, 227, 230, 236, 250, 251, 252, 259, 264, 265, 267, 268, 269, 272, 275, 281, 284, 300, 303, 305, 312, 317, 323, 324, 329, 330, 341, 342, 344, 345, 346, 351, 352, 354, 357, 358, 360, 363, 364, 366, 367, 368, 806, 955, 972, 980, 1109, 1114, 1227, 1277], "all_io": 49, "22": [49, 86, 94, 95, 113, 149, 164, 194, 197, 202, 204, 212, 213, 224, 229, 231, 234, 239, 240, 241, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 332, 335, 336, 338, 343, 353, 359, 365, 369, 396, 398, 399, 400, 421, 797, 876, 913, 937, 1006, 1014, 1015, 1030, 1084, 1085, 1086, 1170, 1212, 1213, 1279], "17": [49, 85, 95, 113, 149, 155, 166, 197, 203, 210, 212, 213, 224, 229, 231, 234, 239, 241, 244, 247, 250, 255, 256, 260, 265, 267, 268, 272, 273, 274, 276, 279, 283, 286, 292, 295, 296, 302, 304, 308, 311, 315, 321, 326, 331, 335, 336, 338, 343, 347, 353, 359, 369, 396, 399, 400, 421, 658, 706, 748, 761, 781, 797, 801, 810, 827, 835, 846, 850, 861, 913, 937, 948, 984, 1021, 1027, 1067, 1071, 1086, 1099, 1128, 1170, 1212, 1213, 1221, 1233], "25": [49, 86, 202, 203, 212, 213, 214, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 277, 279, 282, 283, 286, 289, 291, 292, 301, 304, 308, 311, 315, 321, 325, 331, 338, 343, 347, 353, 359, 365, 369, 390, 399, 400, 421, 642, 643, 739, 743, 744, 780, 850, 913, 937, 964, 1083, 1110, 1153, 1198, 1200, 1204, 1206, 1212, 1213, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "18": [49, 195, 202, 203, 212, 213, 229, 234, 239, 241, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 272, 273, 279, 283, 286, 289, 292, 301, 305, 307, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 365, 369, 397, 399, 400, 403, 421, 658, 828, 830, 845, 868, 874, 876, 910, 913, 937, 948, 957, 984, 1029, 1031, 1066, 1086, 1095, 1096, 1099, 1127, 1128, 1164, 1170, 1212, 1213], "16": [49, 155, 197, 199, 200, 202, 210, 212, 213, 218, 219, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 305, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 396, 397, 398, 399, 400, 404, 409, 410, 421, 444, 488, 495, 506, 540, 669, 720, 845, 913, 930, 934, 937, 961, 974, 1016, 1021, 1022, 1030, 1039, 1047, 1083, 1085, 1098, 1099, 1104, 1111, 1114, 1139, 1166, 1212, 1213, 1243], "24": [49, 86, 94, 112, 195, 202, 209, 212, 213, 214, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 325, 331, 336, 343, 353, 359, 365, 369, 396, 397, 399, 400, 421, 529, 545, 734, 736, 759, 845, 846, 857, 858, 913, 934, 984, 1083, 1101, 1127, 1212, 1213], "23": [49, 113, 164, 195, 202, 203, 204, 209, 212, 213, 214, 224, 229, 231, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 277, 279, 282, 283, 286, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 386, 387, 421, 476, 512, 541, 770, 780, 824, 876, 913, 934, 936, 1096, 1166, 1170, 1212, 1213, 1243, 1250], "14": [49, 149, 155, 202, 212, 213, 224, 229, 236, 239, 241, 243, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 291, 292, 295, 301, 304, 308, 311, 315, 321, 325, 331, 342, 343, 345, 347, 353, 359, 365, 369, 396, 397, 399, 400, 401, 421, 512, 538, 545, 546, 554, 649, 748, 764, 797, 813, 831, 835, 837, 846, 873, 876, 888, 913, 916, 934, 936, 937, 1007, 1022, 1031, 1071, 1083, 1084, 1085, 1105, 1107, 1121, 1212, 1213, 1257, 1279], "raw": [49, 126, 236, 239, 242, 247, 259, 262, 271, 275, 281, 295, 296, 300, 302, 303, 307, 309, 323, 324, 329, 332, 335, 338, 342, 351, 357, 358, 363, 367, 382, 389, 399, 424, 512, 540, 544, 562, 569, 607, 686, 846, 867, 1123, 1139, 1144, 1160, 1202], "transform": [49, 52, 164, 181, 211, 226, 227, 230, 232, 242, 247, 248, 250, 251, 258, 269, 271, 274, 277, 300, 307, 309, 318, 324, 342, 355, 373, 377, 384, 389, 500, 611, 612, 624, 626, 678, 726, 770, 801, 837, 1094, 1114, 1158, 1192, 1208], "ntime": [49, 790, 1118], "task": [49, 52, 66, 112, 114, 119, 121, 124, 130, 164, 173, 174, 248, 261, 274, 288, 291, 294, 324, 330, 408, 411, 413, 414, 417, 418, 419, 422, 529, 857, 858, 876, 919, 934, 1006, 1021, 1051, 1064, 1065, 1066, 1068, 1069, 1208, 1241], "interv": [49, 78, 118, 230, 260, 266, 267, 276, 279, 283, 304, 342, 408, 592, 594, 607, 608, 757, 800, 801, 825, 839, 1023, 1033, 1066, 1067, 1071], "none": [49, 126, 177, 191, 192, 197, 202, 210, 212, 224, 234, 241, 242, 251, 256, 257, 260, 263, 266, 272, 273, 276, 279, 283, 286, 292, 301, 304, 308, 309, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 490, 491, 512, 528, 541, 655, 704, 734, 736, 848, 1022, 1039, 1041, 1077, 1105, 1108, 1130, 1156, 1164, 1233, 1248], "itertool": [49, 288, 290, 342, 1112], "count": [49, 76, 78, 111, 118, 192, 204, 244, 247, 251, 256, 260, 263, 266, 271, 273, 276, 279, 283, 289, 292, 304, 310, 311, 325, 331, 343, 347, 353, 359, 365, 369, 432, 433, 434, 435, 448, 504, 580, 606, 634, 757, 764, 800, 801, 835, 861, 871, 891, 913, 925, 940, 943, 945, 948, 955, 1025, 1028, 1035, 1055, 1077, 1154, 1181, 1213, 1221, 1258], "cram": [49, 221, 382, 518, 952, 1067, 1105, 1221, 1277], "goe": [49, 74, 111, 121, 195, 197, 211, 316, 500, 554, 620, 736, 755, 850, 873, 874, 948, 984, 1028, 1064, 1066, 1071, 1081, 1084, 1092, 1135, 1138, 1158], "stuff_raw": 49, "mod": [49, 279, 304, 324, 961], "sidewai": [49, 227, 230, 285, 386, 417, 418, 801, 1113, 1114], "column": [49, 103, 107, 110, 194, 197, 211, 214, 260, 279, 308, 309, 310, 311, 313, 317, 342, 343, 347, 353, 363, 365, 367, 368, 501, 512, 871, 876, 887, 1166, 1178, 1190, 1213, 1216, 1229], "numpi": [49, 223, 227, 242, 261, 267, 274, 309, 315, 343, 345, 348, 370, 512, 1132, 1211, 1214, 1226, 1236, 1243, 1279, 1280], "transpos": [49, 891], "col": 49, "tolist": 49, "interact": [49, 74, 124, 126, 130, 135, 154, 159, 199, 230, 231, 237, 248, 258, 260, 261, 264, 266, 274, 276, 279, 284, 303, 304, 310, 323, 324, 329, 330, 332, 351, 352, 357, 358, 363, 364, 367, 368, 377, 380, 530, 891, 1007, 1012, 1015, 1025, 1047, 1098, 1133, 1177, 1181, 1185, 1194, 1213, 1221], "interpret": [49, 194, 211, 212, 223, 227, 230, 237, 248, 251, 258, 260, 261, 264, 266, 274, 276, 279, 283, 299, 300, 303, 309, 310, 323, 324, 325, 329, 330, 332, 341, 342, 346, 351, 352, 357, 358, 363, 364, 367, 368, 404, 488, 525, 545, 547, 555, 558, 568, 582, 915, 937, 984, 1026, 1066, 1083, 1084, 1086, 1132, 1133, 1134, 1135, 1166, 1177, 1181, 1185, 1208, 1221, 1243, 1259, 1278], "outsid": [49, 139, 279, 528, 559, 572, 652, 660, 664, 764, 845, 846, 892, 974, 1051, 1068, 1108], "instanti": [49, 122, 250, 382, 408, 518, 550, 561, 575, 576, 589, 590, 591, 594, 675, 705, 737, 739, 743, 750, 751, 770, 835, 1120, 1121, 1211], "coro": [49, 770, 772, 773, 775, 776, 777, 778], "sequenti": [49, 95, 97, 144, 227, 228, 230, 232, 235, 236, 237, 240, 253, 258, 261, 264, 269, 270, 272, 274, 282, 284, 285, 288, 292, 300, 303, 310, 313, 316, 318, 320, 321, 323, 324, 329, 330, 341, 342, 345, 346, 351, 352, 354, 356, 357, 358, 363, 364, 367, 368, 370, 386, 409, 501, 609, 682, 692, 700, 716, 934, 937, 1035, 1114, 1131, 1278], "cannot": [49, 99, 100, 173, 174, 192, 193, 194, 199, 203, 213, 214, 220, 221, 223, 230, 250, 283, 310, 313, 347, 390, 466, 467, 470, 471, 490, 492, 494, 497, 500, 513, 515, 519, 528, 532, 543, 553, 576, 604, 643, 652, 655, 657, 660, 683, 704, 722, 740, 742, 743, 744, 755, 762, 764, 765, 783, 801, 815, 822, 825, 828, 831, 834, 835, 839, 846, 849, 850, 868, 873, 876, 887, 902, 910, 980, 984, 989, 1004, 1014, 1046, 1049, 1068, 1077, 1100, 1101, 1102, 1106, 1108, 1120, 1125, 1132, 1140, 1141, 1147, 1148, 1158, 1227, 1228, 1230, 1241, 1266], "stuff_raw2": 49, "01": [49, 85, 86, 94, 95, 104, 112, 113, 152, 155, 164, 174, 197, 202, 204, 210, 214, 232, 243, 250, 257, 266, 272, 279, 291, 308, 309, 311, 315, 354, 401, 403, 417, 418, 421, 499, 512, 538, 540, 633, 634, 757, 765, 859, 887, 937, 1069, 1071, 1099, 1197, 1212, 1241, 1279], "05": [49, 86, 113, 149, 164, 195, 202, 250, 285, 308, 315, 326, 335, 338, 403, 421, 544, 764, 1212], "runtimeerror": [49, 214, 250, 304, 389, 1105, 1107], "reus": [49, 111, 212, 1100, 1150], "alreadi": [49, 69, 113, 122, 138, 192, 193, 195, 203, 213, 215, 223, 227, 283, 310, 313, 386, 483, 494, 500, 520, 552, 572, 574, 585, 588, 607, 624, 703, 801, 934, 936, 937, 943, 957, 964, 972, 982, 984, 987, 1004, 1012, 1025, 1026, 1028, 1033, 1034, 1042, 1043, 1066, 1099, 1105, 1132, 1158, 1236, 1241, 1243, 1250], "bare": [49, 67, 69, 76, 78, 97, 170, 192, 422, 928, 936], "create_coro": 49, "ctor": [49, 218, 227, 276, 325, 358, 382, 604, 626, 634, 651, 654, 655, 658, 660, 667, 669, 705, 720, 745, 747, 755, 756, 801, 806, 813, 814, 826, 846, 1003], "nest": [49, 251, 264, 273, 283, 290, 294, 311, 321, 434, 463, 464, 490, 524, 724, 793, 825, 989, 1105, 1148], "_blink": 49, "coro_cr": 49, "creator": [49, 190, 203], "create_factory_for_blink": 49, "blinkfunc": 49, "object": [49, 60, 62, 63, 67, 86, 92, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 114, 118, 119, 122, 131, 137, 142, 146, 150, 158, 162, 165, 166, 173, 174, 208, 211, 213, 218, 223, 230, 239, 241, 242, 247, 250, 251, 253, 256, 258, 260, 263, 264, 267, 268, 269, 270, 271, 275, 276, 281, 282, 284, 286, 289, 293, 301, 305, 307, 308, 310, 311, 313, 315, 318, 321, 325, 331, 337, 343, 347, 353, 356, 358, 359, 365, 369, 375, 381, 384, 391, 397, 399, 405, 406, 407, 440, 466, 493, 511, 537, 540, 543, 544, 545, 546, 550, 552, 559, 570, 576, 594, 598, 599, 600, 601, 602, 603, 604, 607, 620, 626, 640, 648, 649, 651, 653, 656, 657, 659, 661, 666, 668, 669, 672, 703, 705, 722, 724, 726, 731, 732, 735, 737, 738, 739, 740, 744, 751, 761, 762, 765, 770, 782, 783, 788, 790, 793, 794, 797, 800, 801, 803, 805, 806, 810, 813, 814, 820, 821, 824, 825, 834, 835, 839, 841, 844, 846, 847, 848, 874, 1066, 1083, 1084, 1085, 1089, 1090, 1094, 1100, 1103, 1105, 1106, 1108, 1109, 1112, 1120, 1122, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1139, 1148, 1150, 1156, 1157, 1204, 1213, 1227, 1228, 1231, 1232, 1233, 1241, 1258, 1259, 1260, 1266, 1277], "view": [49, 149, 159, 197, 198, 202, 212, 214, 227, 229, 295, 296, 300, 307, 355, 356, 369, 374, 381, 385, 386, 387, 422, 438, 440, 503, 754, 834, 836, 857, 858, 868, 875, 928, 937, 1007, 1049, 1066, 1086, 1139, 1258, 1259, 1266], "blink_func": 49, "stuff_decorator_stage1": 49, "stage1": 49, "stararg": [49, 1106, 1130, 1277], "func": [49, 250, 260, 266, 276, 279, 310, 324, 610, 678, 749, 750, 759, 800, 840, 1106, 1110], "becom": [49, 58, 67, 78, 81, 121, 126, 130, 172, 192, 194, 219, 231, 310, 313, 333, 335, 338, 349, 449, 479, 481, 488, 491, 512, 534, 548, 552, 591, 743, 755, 824, 845, 846, 847, 868, 887, 921, 936, 937, 984, 1012, 1049, 1064, 1068, 1069, 1105, 1111, 1141, 1242, 1248, 1259, 1273], "obsolet": [49, 223, 1132], "prog": [49, 264, 389], "demo": [49, 52, 86, 87, 111, 113, 121, 131, 135, 143, 144, 154, 156, 192, 214, 218, 223, 226, 228, 231, 232, 235, 243, 250, 258, 261, 264, 267, 269, 274, 280, 297, 300, 303, 306, 307, 327, 328, 371, 372, 375, 377, 384, 404, 422, 513, 517, 532, 538, 540, 543, 544, 545, 594, 602, 725, 847, 865, 886, 887, 1024, 1076, 1085, 1132, 1214, 1247], "opposit": [49, 174, 196, 382, 464, 824, 937, 1068, 1221], "futur": [49, 52, 113, 129, 199, 263, 283, 295, 296, 298, 307, 355, 374, 375, 383, 385, 386, 395, 417, 418, 488, 529, 572, 735, 770, 819, 821, 822, 823, 994, 1258], "blueprint": 52, "box": [52, 183, 187, 223, 928, 934, 1066, 1132], "quickli": [52, 231, 318, 333, 345, 346, 349, 383, 386, 407, 470, 550, 936, 1273], "glt2024": [52, 53], "matrix": [52, 212, 214, 315, 411, 413, 501], "complain": [52, 173, 194, 203, 220, 450, 643, 658, 659, 761, 801, 959, 987, 1012], "forev": [52, 213, 470, 471], "wait_button": 52, "revert": [52, 130, 192, 961, 980, 1067, 1127, 1181], "enclos": [52, 211, 279, 463], "secon": 52, "edg": [52, 162, 209, 253, 519, 966, 1039, 1040], "timestamp": [52, 118, 256, 266, 286, 315, 319, 320, 341, 343, 345, 347, 353, 375, 512, 751, 893, 913, 945, 1015], "bounc": [52, 501, 1003, 1066], "debounce_period": 52, "second": [52, 78, 168, 191, 194, 195, 199, 210, 223, 229, 250, 256, 260, 264, 266, 271, 276, 279, 283, 309, 311, 373, 386, 390, 424, 434, 488, 504, 512, 514, 515, 516, 517, 522, 524, 528, 532, 540, 541, 543, 544, 545, 546, 584, 588, 589, 590, 594, 597, 607, 643, 658, 706, 708, 709, 757, 768, 771, 772, 793, 794, 795, 800, 801, 825, 834, 839, 846, 847, 868, 873, 876, 936, 994, 1023, 1026, 1033, 1043, 1066, 1067, 1080, 1084, 1085, 1100, 1101, 1102, 1152, 1160, 1236, 1248, 1258, 1261], "print_ev": 52, "aha": [52, 194, 213, 224, 389, 936, 947, 964, 1221, 1248], "asynchron": [52, 53, 174, 192, 260, 266, 276, 279, 346, 390, 1020, 1037, 1040, 1080, 1081, 1161], "imageview": 52, "vimg": 52, "img": [52, 183, 212, 214, 369, 499, 934, 984], "tab": [52, 197, 198, 210, 279, 307, 325, 395, 445, 891, 984, 1152, 1178, 1267], "dbu": [52, 53, 173, 174, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 869], "termin": [52, 54, 118, 191, 193, 197, 210, 221, 243, 289, 291, 307, 310, 313, 316, 318, 320, 425, 428, 432, 435, 438, 445, 457, 463, 486, 506, 512, 520, 521, 546, 548, 574, 575, 607, 626, 655, 748, 770, 776, 817, 847, 866, 869, 873, 874, 875, 891, 913, 924, 925, 1000, 1025, 1052, 1056, 1061, 1066, 1067, 1079, 1080, 1081, 1137, 1139, 1143, 1158, 1170, 1188, 1215, 1221, 1224, 1271], "busctl": [52, 174], "introspect": [52, 1067, 1269], "outcom": [53, 185, 227, 232, 318, 375, 382, 384, 387, 422, 890, 891, 984, 1092, 1165], "en": [53, 67, 173, 197, 208, 218, 279, 307, 720, 762, 821], "latest": [53, 173, 203, 387, 520, 523, 940, 955, 963, 1066, 1236], "async_watch_line_valu": 53, "find_line_by_nam": 53, "get_chip_info": 53, "get_line_info": 53, "get_line_valu": 53, "get_multiple_line_valu": 53, "makefil": [53, 58, 86, 149, 253, 296, 298, 540, 546, 953, 957, 985, 986, 1088, 1092, 1094, 1101, 1102], "reconfigure_input_to_output": 53, "toggle_line_valu": 53, "toggle_multiple_line_valu": 53, "watch_line_info": 53, "watch_line_ris": 53, "watch_line_valu": 53, "watch_multiple_line_valu": 53, "yuri": [53, 1161], "selivanov": [53, 1161], "awesom": [53, 243, 1241], "david": [53, 223, 226, 227, 235, 248, 251, 274, 300, 315, 319, 320, 324, 341, 345, 346, 405, 406, 810, 843, 1066], "beazlei": [53, 223, 226, 227, 235, 248, 251, 274, 300, 319, 320, 324, 341, 345, 346, 405, 406], "lennart": [53, 174], "p\u00f6ttere": 53, "recommend": [53, 170, 203, 223, 231, 243, 276, 500, 672, 703, 748, 891, 936, 984, 1164, 1217, 1225, 1274], "0pointer": [53, 174], "blog": [53, 174, 192, 195, 202, 831], "api": [53, 121, 173, 174, 192, 199, 215, 238, 252, 279, 415, 419, 940, 947, 955, 961, 966, 978, 1041, 1057, 1065, 1069, 1077, 1164, 1219, 1237, 1262, 1265, 1266], "systemd": [53, 54, 155, 175, 208, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 372, 869, 922, 937, 984, 1080], "freedesktop": [53, 173, 174, 231], "wiki": [53, 173, 174, 195, 208, 319, 320, 341, 345, 957, 984], "libssl": [53, 934, 964], "libreadlin": 53, "libffi": 53, "libsystemd": 53, "wget": [53, 183, 197, 199, 203, 321, 1096, 1098], "ftp": [53, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 919, 1098], "readlin": [53, 214, 241, 243, 250, 251, 263, 264, 270, 279, 286, 311, 321, 347, 353, 359, 365, 372, 396, 891, 1158], "love": [54, 317, 1204], "allow": [54, 229, 230, 250, 279, 382, 443, 488, 510, 728, 797, 846, 848, 966, 989, 1066, 1170, 1241, 1258], "style": [54, 118, 192, 197, 260, 266, 269, 276, 279, 318, 374, 382, 383, 496, 511, 512, 513, 626, 651, 652, 657, 690, 720, 732, 746, 756, 778, 787, 788, 789, 790, 800, 801, 837, 848, 952, 1001, 1039, 1136, 1178, 1203, 1213], "isn": [54, 191, 244, 310, 313, 412, 425, 476, 536, 682, 686, 744, 770, 833, 849, 934, 1152, 1248], "subsystem": [54, 75, 86, 87, 92, 93, 113, 134, 154, 209, 231, 238, 243, 280, 296, 298, 300, 306, 307, 316, 318, 319, 335, 341, 372, 377, 380, 865, 867, 928, 934, 936, 937, 961, 980, 994, 1039, 1064, 1107, 1241, 1262, 1264, 1266], "stori": [54, 192, 193, 194, 198, 199, 203, 219, 220, 252, 315, 481, 634, 652, 665, 783, 801, 839, 870, 931, 959, 961, 985, 1016, 1066], "pointlessli": 54, "light": [54, 73, 161, 202, 387, 870, 1241, 1265], "notifi": [54, 555, 822, 1020, 1041, 1224], "press": [54, 159, 168, 191, 891, 928, 964, 1001, 1066], "hint": [54, 113, 126, 139, 279, 291, 320, 427, 550, 610, 620, 624, 728, 857, 858, 871, 1008, 1067], "asyncron": 54, "fit": [54, 93, 203, 207, 212, 214, 369, 375, 444, 449, 549, 672, 747, 800, 848, 928, 943, 984, 1211, 1213, 1272, 1280], "addition": [54, 95, 191, 194, 382, 449, 553, 570], "textual": [54, 55, 173, 174, 221, 223, 605], "sdbu": [54, 55, 171, 173], "client": [54, 111, 121, 170, 171, 197, 199, 209, 254, 258, 286, 300, 510, 558, 559, 572, 750, 751, 931, 1012, 1014, 1022, 1045, 1077, 1220, 1236], "glt": [55, 175], "2023": [55, 85, 95, 112, 113, 169, 308, 309, 312, 315, 326, 332, 343, 354, 364, 366, 376, 379, 421, 511, 512, 747, 838, 1086], "With": [55, 101, 102, 104, 105, 112, 131, 185, 193, 199, 218, 279, 288, 307, 309, 310, 313, 318, 325, 333, 335, 338, 342, 346, 349, 363, 367, 368, 375, 381, 421, 461, 490, 506, 522, 538, 547, 556, 568, 582, 783, 811, 825, 848, 851, 859, 934, 935, 984, 1034, 1081, 1084, 1096, 1127, 1226, 1229, 1230, 1237, 1258, 1259, 1260, 1266, 1273, 1276, 1278], "asyncio": [55, 175, 223, 227, 277, 318, 346, 386, 770, 1162, 1208], "libgpiod": [55, 123, 130, 162, 170, 172, 346, 390, 392], "raspberri": [55, 67, 86, 93, 95, 121, 134, 154, 170, 204, 207, 233, 307, 346, 407, 409, 410, 421, 608, 935, 936, 937, 984, 1016, 1071, 1084, 1086, 1091, 1094, 1096, 1098, 1135, 1224, 1262, 1263, 1270, 1277, 1278, 1280, 1281], "2024": [55, 112, 149, 150, 152, 166, 169, 266, 421], "taskgroup": [55, 171, 173, 386], "intro": [55, 82, 113, 130, 131, 149, 164, 173, 218, 242, 252, 261, 274, 275, 288, 291, 310, 313, 318, 324, 330, 342, 383, 384, 422, 648, 770, 800, 801, 810, 837, 1019, 1038, 1040, 1208, 1259, 1260, 1270, 1278, 1282], "biographi": [55, 251, 300, 346, 1208], "abstract": [55, 67, 73, 171, 227, 267, 299, 316, 317, 318, 319, 320, 341, 342, 345, 346, 364, 374, 382, 408, 471, 510, 512, 547, 555, 558, 560, 562, 568, 570, 582, 606, 682, 742, 743, 786, 837, 863, 864, 868, 937, 1020, 1123, 1259, 1266, 1268, 1272], "knapp": 56, "wehr": 56, "schleus": 56, "vorbei": [56, 214, 273, 279, 1275], "recht": [56, 119, 178, 180, 200, 201, 210, 218, 224, 235, 244, 359, 1264], "anlegeplattform": 56, "rau": [56, 200, 273], "ersten": [56, 224, 226, 239, 331, 396, 1276], "kurv": 56, "anlegebucht": 56, "pennen": 56, "oberm\u00fchl": 56, "gasthau": 56, "rauf": [56, 200], "wies": 56, "steg": [56, 180], "darunt": 56, "ist": [56, 150, 152, 162, 165, 180, 200, 201, 208, 209, 210, 214, 218, 226, 234, 235, 239, 241, 244, 245, 247, 250, 254, 256, 260, 263, 264, 269, 270, 271, 273, 276, 279, 282, 286, 292, 301, 311, 325, 343, 353, 359, 369, 396, 399, 400, 404, 409, 422, 466, 534, 1069, 1226, 1255, 1256, 1257, 1264, 1275, 1276], "ramp": 56, "h\u00f6he": 56, "schleusenmau": 56, "mal": [56, 180, 201, 214, 224, 235, 286, 353, 422, 1257], "schaun": 56, "innbach": 56, "m\u00fcndung": 56, "schotterbank": 56, "altarm": 56, "gatschinsel": 56, "unterhalb": [56, 920], "anfangt": 56, "br\u00fccke": 56, "westr": 56, "danach": [56, 209], "hauptbr\u00fcck": 56, "schiffsanlegestel": 56, "eingang": [56, 201], "bissl": [56, 254], "rein": [56, 201, 210, 235, 1264], "zelten": 56, "den": [56, 150, 152, 162, 165, 201, 208, 209, 210, 214, 218, 224, 226, 234, 235, 240, 247, 254, 283, 331, 404, 405, 409, 422, 852, 1255, 1256, 1257, 1264, 1275, 1276], "hinten": [56, 180, 201], "sch\u00f6n": 56, "m\u00fchl": 56, "noch": [56, 200, 201, 210, 214, 218, 224, 234, 235, 239, 241, 244, 247, 250, 260, 273, 279, 280, 283, 304, 311, 422, 1257], "sch\u00f6ner": [56, 201, 224], "abschnitt": 56, "inseln": 56, "dornach": 56, "steinbruch": 56, "davor": [56, 201, 242], "freizeithafen": 56, "steckerlfisch": 56, "rechtskurv": 56, "insel": 56, "eher": [56, 180, 200, 235], "langweilig": 56, "gesehen": [56, 201, 224, 230, 264], "mole": 56, "schiffen": 56, "glaub": [56, 200, 208, 209], "schling": 56, "marbach": 56, "campingplatz": 56, "app": [56, 193, 197, 513, 521, 1067, 1220], "goo": 56, "b1o63g8mdg1umnn29": 56, "unterm": 56, "hafenst\u00fcberl": 56, "luberegg": 56, "hinter": 56, "schaut": 56, "vielleicht": [56, 200, 224, 235, 286, 1257], "reinschauen": [56, 235], "weissenkirchen": 56, "krem": 56, "evtl": 56, "paar": [56, 200, 209, 224, 226, 234, 241, 273, 404, 409, 1276], "geil": 56, "str\u00e4nde": 56, "schon": [56, 200, 201, 209, 224, 226, 234, 264, 422, 1255, 1257, 1264], "langenzersdorf": 56, "langsam": [56, 218, 224, 273], "grillen": 56, "increasingli": 58, "whose": [58, 203, 260, 266, 276, 279, 315, 325, 417, 418, 570, 640, 736, 737, 928, 1066, 1108, 1241, 1248, 1262], "mainten": [58, 445, 471, 490, 1101], "easier": [58, 69, 74, 81, 212, 253, 512, 558, 662, 984, 1258], "never": [58, 99, 100, 192, 193, 194, 199, 211, 273, 279, 283, 325, 343, 385, 449, 470, 486, 497, 500, 510, 548, 570, 649, 722, 724, 783, 784, 786, 788, 846, 870, 928, 1019, 1041, 1053, 1066, 1084], "simpler": [58, 159, 203, 253, 317, 320, 428, 487, 515, 686, 936, 980, 984, 1016], "syntax": [58, 214, 223, 230, 231, 233, 235, 236, 237, 242, 249, 254, 258, 261, 264, 270, 274, 276, 280, 281, 282, 285, 288, 290, 301, 303, 310, 312, 313, 323, 324, 326, 329, 330, 351, 352, 354, 355, 357, 358, 363, 364, 366, 367, 368, 374, 375, 381, 404, 532, 570, 649, 650, 756, 801, 831, 834, 920, 1104, 1106, 1107, 1108, 1131, 1133, 1150, 1153, 1258, 1278], "wors": [58, 185, 195, 279, 496, 512, 1021, 1046, 1244], "everytbodi": 59, "inherit": [59, 62, 95, 131, 162, 208, 218, 227, 251, 264, 281, 283, 316, 317, 318, 319, 320, 324, 341, 342, 345, 346, 356, 364, 413, 528, 532, 536, 604, 646, 648, 649, 672, 738, 740, 742, 790, 828, 839, 862, 866, 869, 890, 892, 976, 1066, 1077, 1107, 1120, 1123, 1125, 1128, 1265, 1277], "runtim": [59, 146, 155, 192, 203, 224, 228, 252, 276, 279, 359, 382, 425, 446, 494, 504, 505, 529, 532, 543, 545, 574, 575, 588, 602, 637, 646, 685, 703, 705, 750, 751, 765, 800, 801, 803, 834, 1051, 1083, 1089, 1090, 1120, 1138, 1150, 1214, 1215], "dispatch": [59, 95, 131, 162, 174, 316, 318, 342, 356, 359, 381, 382, 637, 646, 740, 741, 742, 782, 783, 784, 786, 790, 801, 839, 840], "hell": [59, 243, 277, 496, 549, 806, 808, 817, 855, 974, 1058, 1221], "destructor": [59, 60, 86, 95, 121, 131, 253, 269, 290, 316, 318, 356, 381, 382, 406, 407, 620, 626, 635, 641, 649, 650, 651, 656, 658, 672, 728, 741, 742, 747, 762, 815, 820, 839, 945, 976, 989, 1001, 1253], "opportun": [59, 199, 202, 211, 223, 242, 500, 732, 1121, 1259], "shoot": [59, 893], "oneself": [59, 1266], "sensor": [59, 67, 70, 73, 86, 95, 98, 101, 102, 103, 104, 105, 108, 112, 113, 114, 115, 118, 119, 120, 121, 123, 125, 129, 131, 134, 141, 142, 149, 160, 161, 166, 174, 218, 227, 231, 267, 288, 299, 307, 316, 319, 320, 335, 338, 341, 345, 356, 359, 381, 382, 404, 408, 410, 513, 534, 536, 547, 552, 555, 562, 569, 572, 573, 577, 583, 586, 592, 596, 597, 598, 599, 600, 601, 602, 613, 616, 617, 618, 619, 620, 621, 622, 623, 656, 740, 741, 744, 787, 789, 798, 812, 845, 846, 847, 935, 936, 984, 1034, 1066, 1120, 1175, 1262, 1264, 1265], "orient": [60, 62, 63, 67, 86, 113, 131, 142, 158, 162, 211, 230, 242, 251, 253, 258, 264, 267, 270, 281, 282, 291, 293, 305, 310, 313, 316, 318, 356, 358, 381, 382, 391, 405, 406, 438, 511, 604, 649, 656, 732, 738, 751, 790, 801, 839, 1109, 1133, 1241, 1259, 1260, 1277], "encapsul": [60, 62, 251, 264, 269, 316, 318, 342, 381, 382, 390, 510, 550, 594, 626, 649, 738, 800, 953, 986, 1077, 1133, 1260], "hide": [60, 252, 264, 320, 1133], "fanci": [60, 1153, 1214, 1234], "whatnot": [60, 267, 822, 928, 936, 984, 1022, 1061], "boost": [61, 269, 538, 545, 626, 770, 1070, 1276], "feel": [61, 192, 194, 203, 223, 373, 643, 733, 735, 736, 800, 1050, 1066, 1069, 1132, 1262], "qualiti": [62, 199, 252, 315, 936, 1066, 1281], "assur": 62, "characterist": [62, 1066], "polymorph": [63, 113, 114, 129, 164, 250, 251, 264, 318, 320, 335, 338, 512, 513, 596, 740, 744, 750, 782, 783, 784, 798, 844, 1258, 1259], "concurr": [63, 223, 227, 277, 346, 824, 835, 974, 1116, 1208], "templat": [63, 95, 149, 150, 165, 218, 253, 294, 316, 321, 356, 375, 406, 407, 517, 596, 648, 649, 703, 738, 749, 751, 755, 760, 770, 773, 782, 783, 784, 786, 788, 790, 797, 802, 812, 822, 825, 831, 844, 1053, 1257, 1260], "increment": [64, 209, 252, 266, 269, 292, 315, 428, 432, 436, 456, 476, 626, 643, 764, 824, 862, 1052, 1053, 1054, 1076, 1077, 1116], "turn": [64, 99, 100, 146, 166, 192, 194, 197, 202, 203, 223, 227, 243, 252, 269, 315, 373, 382, 404, 500, 522, 524, 529, 541, 572, 597, 598, 761, 764, 801, 887, 928, 930, 934, 936, 937, 1066, 1083, 1085, 1089, 1090, 1100, 1108, 1113, 1114, 1124, 1126, 1234], "lossi": 64, "semaphor": [65, 67, 76, 78, 215, 216, 238, 260, 266, 276, 279, 422, 822, 976, 1055, 1066, 1266, 1268, 1270], "mutex": [65, 67, 76, 78, 209, 238, 269, 294, 295, 296, 298, 307, 318, 319, 320, 341, 342, 345, 355, 374, 375, 383, 385, 386, 412, 413, 419, 626, 765, 768, 817, 818, 820, 822, 823, 982, 986, 987, 1003, 1050, 1055, 1058, 1059, 1066, 1117, 1119, 1258, 1266, 1271], "access": [65, 67, 77, 99, 100, 103, 109, 118, 146, 155, 164, 174, 193, 194, 195, 197, 199, 211, 221, 231, 238, 250, 260, 263, 266, 269, 276, 279, 286, 289, 304, 307, 311, 321, 325, 335, 347, 352, 353, 359, 365, 384, 390, 404, 407, 409, 440, 479, 500, 501, 528, 532, 559, 575, 600, 601, 602, 603, 626, 649, 662, 665, 666, 668, 669, 683, 709, 722, 726, 729, 770, 804, 813, 824, 830, 845, 863, 864, 867, 876, 878, 879, 885, 902, 937, 942, 952, 955, 972, 980, 984, 986, 1014, 1015, 1021, 1025, 1029, 1031, 1035, 1039, 1042, 1045, 1047, 1052, 1066, 1067, 1068, 1076, 1081, 1083, 1103, 1108, 1115, 1116, 1119, 1138, 1145, 1147, 1160, 1177, 1212, 1228, 1243, 1266, 1268, 1278], "flavor": [65, 76, 192, 540, 834, 850, 1262], "stash": [66, 162], "resolv": [66, 111, 161, 181, 203, 260, 263, 266, 269, 276, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 467, 493, 661, 1016, 1083, 1086, 1212, 1213], "suffic": [66, 199, 438, 488], "purpos": [66, 67, 69, 118, 129, 146, 193, 197, 203, 223, 242, 260, 266, 276, 279, 291, 304, 373, 374, 407, 434, 512, 531, 534, 546, 651, 682, 743, 747, 751, 863, 864, 873, 936, 984, 1026, 1031, 1061, 1083, 1102, 1132, 1213, 1242, 1262, 1264], "ex": [67, 185, 251, 264, 620, 637, 835, 876, 891, 1243], "temperatur": [67, 71, 80, 83, 86, 103, 108, 109, 113, 114, 115, 116, 121, 122, 123, 131, 134, 139, 166, 227, 260, 307, 342, 355, 356, 382, 410, 413, 427, 429, 431, 549, 554, 560, 581, 595, 597, 598, 599, 600, 601, 602, 606, 607, 608, 619, 637, 782, 784, 786, 788, 812, 935, 936, 984, 1034, 1120, 1197, 1211, 1212, 1213, 1214], "introduct": [67, 86, 87, 88, 95, 113, 131, 135, 149, 150, 156, 162, 164, 165, 168, 172, 205, 207, 231, 233, 252, 253, 267, 269, 277, 280, 288, 291, 297, 299, 300, 306, 307, 309, 316, 319, 320, 324, 327, 335, 338, 341, 342, 345, 368, 371, 377, 380, 381, 382, 383, 384, 385, 403, 408, 412, 421, 507, 508, 519, 539, 626, 738, 754, 760, 770, 798, 800, 801, 823, 832, 842, 860, 927, 986, 1039, 1045, 1094, 1205, 1206, 1215, 1240, 1256, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1272, 1274, 1278, 1281], "averag": [67, 73, 74, 227, 263, 267, 283, 318, 342, 381, 553, 569, 599, 606, 1071, 1166], "displai": [67, 101, 102, 104, 105, 112, 114, 123, 131, 197, 260, 266, 276, 279, 304, 307, 309, 311, 316, 321, 325, 347, 353, 359, 365, 413, 504, 597, 866, 913, 922, 934, 1067, 1243], "avoid": [67, 76, 174, 192, 199, 283, 376, 379, 436, 471, 569, 604, 606, 616, 650, 654, 705, 921, 936, 982, 1260, 1271], "race": [67, 76, 192, 209, 269, 307, 318, 319, 320, 341, 342, 345, 387, 412, 413, 419, 487, 497, 626, 762, 816, 835, 986, 997, 1025, 1035, 1050, 1058, 1059, 1117, 1119, 1266, 1270], "condit": [67, 76, 78, 130, 162, 192, 203, 209, 250, 269, 289, 307, 318, 319, 320, 341, 342, 345, 377, 380, 387, 412, 413, 419, 426, 428, 432, 455, 456, 458, 459, 461, 463, 487, 497, 514, 515, 516, 525, 530, 532, 541, 626, 643, 724, 725, 747, 766, 816, 825, 835, 846, 986, 997, 1001, 1025, 1031, 1035, 1046, 1050, 1058, 1059, 1061, 1066, 1117, 1119, 1142, 1143, 1158, 1212, 1227, 1261, 1266, 1270, 1271, 1278], "unifi": [67, 126, 230, 675], "concept": [67, 86, 87, 88, 112, 113, 149, 150, 164, 165, 172, 192, 202, 215, 227, 229, 231, 233, 243, 294, 297, 306, 307, 310, 327, 341, 345, 371, 382, 406, 407, 422, 424, 471, 494, 532, 689, 798, 835, 850, 860, 863, 864, 870, 1024, 1040, 1138, 1146, 1156, 1209, 1221, 1224, 1262, 1265, 1267, 1269, 1270], "intention": [67, 252, 325, 749], "power": [67, 78, 191, 193, 205, 207, 212, 252, 269, 333, 334, 349, 350, 378, 382, 405, 406, 407, 422, 424, 436, 437, 479, 488, 861, 928, 932, 934, 936, 937, 984, 994, 1001, 1024, 1039, 1066, 1067, 1071, 1127, 1133, 1139, 1144, 1156, 1161, 1231, 1260, 1268, 1274, 1275, 1277, 1278], "being": [67, 70, 114, 185, 192, 195, 196, 202, 215, 223, 229, 250, 279, 283, 342, 356, 375, 381, 404, 449, 476, 493, 528, 549, 552, 637, 660, 703, 751, 797, 816, 822, 844, 846, 866, 966, 980, 984, 1016, 1031, 1066, 1067, 1115, 1122, 1132, 1135, 1212, 1250, 1253, 1262, 1266], "address": [67, 88, 95, 99, 100, 113, 114, 135, 146, 156, 168, 192, 194, 195, 196, 199, 231, 238, 243, 250, 252, 253, 269, 271, 297, 306, 307, 318, 327, 328, 369, 371, 372, 401, 406, 407, 415, 467, 469, 478, 488, 497, 548, 559, 562, 570, 572, 577, 607, 658, 662, 814, 815, 850, 863, 864, 865, 867, 871, 894, 929, 931, 936, 937, 964, 968, 980, 982, 1016, 1022, 1033, 1042, 1046, 1047, 1049, 1050, 1058, 1061, 1066, 1068, 1076, 1083, 1101, 1116, 1119, 1212, 1213, 1232, 1241, 1262, 1272], "crucial": [67, 192, 215, 503, 684], "piec": [67, 193, 490, 626, 677, 936, 1035], "mmu": [67, 192, 868, 955, 998, 1046, 1049, 1067], "sophist": [67, 260, 549, 570, 607, 737], "permiss": [67, 86, 89, 90, 91, 113, 149, 150, 158, 164, 165, 226, 227, 231, 233, 243, 250, 266, 286, 297, 306, 321, 324, 327, 342, 371, 390, 399, 404, 405, 406, 407, 409, 727, 797, 857, 858, 860, 868, 874, 881, 882, 883, 884, 885, 887, 888, 889, 893, 909, 910, 913, 928, 943, 984, 1006, 1009, 1012, 1015, 1016, 1021, 1025, 1026, 1029, 1031, 1032, 1041, 1069, 1081, 1107, 1208, 1236, 1243, 1267, 1268, 1270], "nativ": [67, 86, 93, 113, 149, 154, 191, 197, 199, 224, 260, 296, 298, 316, 411, 984, 1084, 1088, 1091, 1217, 1220, 1226], "varieti": [67, 506, 867, 1083, 1259], "storag": [67, 197, 202, 540, 815, 867, 928, 936, 984, 1021, 1050, 1271], "underli": [67, 251, 258, 274, 283, 324, 404, 409, 835, 937, 1208, 1213, 1217], "platform": [67, 199, 206, 251, 260, 264, 266, 276, 279, 283, 291, 309, 359, 376, 379, 397, 406, 423, 934, 936, 937, 964, 984, 1039, 1067, 1197, 1241, 1243], "offer": [67, 192, 202, 242, 317, 464, 660, 664], "pc": [67, 97, 134, 243, 307, 390, 407, 410, 608, 929, 930, 936, 1086], "popular": [67, 203, 215, 219, 459, 528, 810, 855, 937, 1067, 1083, 1100, 1126, 1210, 1216, 1224, 1237, 1259], "world": [67, 120, 192, 197, 203, 221, 230, 234, 235, 237, 241, 248, 252, 254, 256, 258, 260, 261, 264, 266, 269, 270, 271, 273, 274, 280, 281, 282, 283, 285, 286, 288, 291, 303, 304, 310, 313, 323, 324, 329, 330, 343, 351, 352, 353, 357, 358, 363, 364, 367, 368, 369, 373, 386, 399, 436, 441, 445, 524, 525, 538, 540, 543, 569, 574, 576, 816, 825, 869, 882, 894, 941, 986, 996, 1033, 1053, 1069, 1070, 1083, 1086, 1096, 1098, 1100, 1101, 1102, 1116, 1131, 1135, 1136, 1145, 1147, 1152, 1182, 1208, 1213, 1258, 1261, 1265], "often": [67, 78, 191, 192, 193, 194, 223, 273, 283, 310, 313, 333, 349, 445, 455, 476, 532, 541, 550, 562, 675, 835, 891, 984, 1035, 1112, 1132, 1146, 1259, 1273], "appropri": [67, 115, 126, 184, 192, 202, 211, 243, 283, 445, 459, 471, 606, 751, 934, 980, 1015, 1076, 1214, 1220, 1259, 1261], "prototyp": [67, 382, 390, 436, 531, 548, 610, 643, 759, 813, 928, 936, 984, 1017, 1105, 1220], "higher": [67, 136, 192, 203, 260, 266, 276, 279, 797, 928, 982, 1041, 1066, 1068, 1070, 1085, 1094, 1220, 1273], "fulli": [67, 196, 199, 203, 227, 492, 607, 1077], "distribut": [67, 197, 202, 218, 223, 243, 253, 271, 283, 401, 523, 548, 594, 602, 817, 869, 870, 955, 984, 1066, 1069, 1132], "vogu": 67, "serial": [67, 191, 192, 202, 231, 266, 267, 279, 863, 864, 866, 1264], "groundwork": 67, "lai": 67, "instruct": [67, 139, 155, 159, 164, 191, 195, 199, 221, 252, 307, 316, 318, 500, 513, 591, 825, 845, 1026, 1054, 1067, 1099, 1197], "exercis": [67, 82, 86, 91, 93, 95, 113, 114, 126, 129, 130, 131, 135, 137, 138, 141, 149, 162, 164, 166, 210, 218, 223, 230, 231, 235, 237, 242, 245, 248, 254, 258, 261, 264, 265, 267, 270, 274, 277, 280, 282, 285, 287, 288, 297, 299, 306, 310, 312, 313, 327, 328, 332, 346, 350, 357, 371, 376, 378, 379, 385, 387, 389, 390, 395, 403, 406, 409, 417, 418, 434, 441, 456, 478, 547, 554, 595, 616, 617, 618, 619, 621, 622, 623, 628, 716, 798, 851, 872, 882, 884, 923, 945, 1011, 1034, 1054, 1082, 1132, 1167, 1207, 1241, 1258, 1259, 1266, 1269, 1270, 1271, 1278, 1279], "consolid": [67, 223, 373], "rel": [67, 88, 113, 135, 156, 168, 192, 199, 227, 243, 264, 297, 306, 307, 327, 328, 371, 372, 422, 525, 759, 900, 904, 911, 934, 984, 1015, 1066, 1101, 1212, 1213, 1220, 1233], "makeri": 67, "everybodi": [67, 197, 317, 375, 492, 558, 652, 690, 727, 861, 1135, 1139, 1241, 1258, 1265], "sens": [67, 194, 196, 212, 215, 220, 223, 242, 375, 385, 387, 537, 553, 570, 655, 665, 672, 747, 761, 800, 801, 815, 870, 937, 945, 984, 1029, 1061, 1069, 1127, 1157, 1213, 1259], "clarifi": [67, 373, 801], "earli": [67, 191, 223, 227, 232, 317, 519, 862, 989, 1001, 1066, 1069, 1103, 1120, 1158, 1273], "matter": [67, 191, 196, 197, 199, 223, 229, 231, 382, 385, 387, 430, 474, 506, 514, 529, 540, 550, 650, 651, 662, 665, 755, 804, 831, 835, 846, 876, 887, 929, 934, 937, 959, 984, 986, 1016, 1107, 1132, 1233, 1243, 1253, 1259], "rewrit": [67, 69, 154, 192, 512], "translat": [67, 80, 81, 173, 211, 224, 242, 279, 283, 286, 289, 325, 834, 1049, 1176], "flask": [67, 82, 227, 230, 1106], "visual": [67, 93, 136, 154, 162, 176, 218, 223, 227, 228, 230, 232, 243, 252, 253, 258, 261, 274, 280, 288, 291, 303, 307, 310, 313, 317, 323, 324, 329, 330, 351, 352, 357, 358, 363, 367, 368, 404, 409, 423, 870, 936, 1085, 1132, 1166, 1223], "advanc": [67, 199, 205, 207, 212, 215, 218, 228, 232, 240, 243, 248, 258, 263, 264, 274, 288, 330, 381, 405, 406, 421, 500, 508, 526, 532, 539, 679, 757, 818, 1040, 1066, 1108, 1111, 1133, 1166, 1213, 1215, 1248, 1255, 1260, 1268, 1277], "network": [67, 99, 100, 146, 183, 192, 199, 208, 209, 231, 233, 238, 263, 279, 286, 289, 300, 304, 306, 307, 311, 321, 325, 327, 342, 347, 353, 359, 365, 371, 406, 422, 506, 559, 863, 864, 866, 867, 869, 930, 931, 936, 937, 1001, 1006, 1016, 1020, 1021, 1024, 1025, 1064, 1262, 1264, 1265, 1267, 1268, 1270, 1271], "json": [67, 74, 81, 113, 118, 121, 224, 230, 240, 254, 258, 259, 267, 268, 276, 279, 280, 284, 287, 293, 302, 335, 337, 338, 340, 342, 345, 359, 423, 1123, 1202, 1204, 1224, 1237], "oppos": [69, 113, 191, 230, 264, 271, 281, 316, 372, 373, 387, 471, 514, 541, 637, 915, 929, 936, 1012, 1042, 1055, 1069, 1076, 1081, 1100, 1101, 1127, 1138, 1139, 1221, 1228], "ahead": [69, 510, 1122], "optimz": 69, "donald": [69, 499], "knuth": [69, 499], "prematur": [69, 499, 503], "optim": [69, 193, 304, 316, 347, 381, 382, 384, 486, 502, 503, 541, 748, 762, 764, 783, 968, 1046, 1220, 1257, 1260], "evil": [69, 269, 440, 490, 499, 503, 541, 662], "knowledg": [70, 74, 310, 313, 316, 385, 387, 607, 734, 736, 929, 937, 984, 1066, 1274], "onewir": [70, 74, 86, 95, 113, 114, 115, 123, 131, 134, 307, 318, 355, 382, 404, 407, 595, 596, 934, 935, 1034], "protocol": [70, 173, 189, 197, 229, 230, 240, 262, 265, 267, 268, 272, 275, 278, 281, 290, 303, 305, 310, 313, 319, 320, 322, 323, 326, 329, 341, 342, 344, 345, 346, 348, 352, 354, 360, 363, 364, 410, 413, 444, 452, 559, 572, 919, 929, 931, 934, 937, 942, 1006, 1014, 1015, 1035, 1066, 1105, 1109, 1113, 1120, 1262, 1272], "aspect": [70, 118, 223, 227, 253, 277, 316, 318, 346, 554, 861, 934, 937, 1208, 1241, 1266, 1268, 1281], "regard": [70, 199, 223, 390, 891, 1066, 1132, 1139, 1237, 1241], "filesystem": [70, 74, 95, 113, 191, 194, 203, 231, 233, 243, 294, 359, 377, 380, 382, 387, 404, 409, 513, 530, 607, 798, 856, 936, 984, 1016, 1032, 1039, 1041, 1067, 1086, 1241, 1262, 1264, 1267, 1269], "hwmon": [70, 74, 114, 410, 413], "composit": [71, 95, 117, 120, 131, 227, 253, 299, 317, 318, 335, 380, 381, 518, 547, 555, 568, 582, 848, 1112, 1259], "mock": [71, 113, 114, 129, 130, 131, 161, 162, 166, 317, 319, 320, 341, 345, 356, 373, 391, 393, 596, 597, 598, 599, 601, 637, 839, 1248], "pool": [72, 252, 1004, 1068, 1070], "pin": [73, 130, 307, 390, 928, 932, 936], "emit": [73, 174, 181, 575, 576, 873], "linearli": [73, 283, 689, 867], "cold": [73, 242], "hot": [73, 194, 501, 504, 966], "queri": [73, 1140], "feed": [73, 1213], "said": [73, 99, 100, 194, 223, 310, 313, 320, 383, 386, 570, 682, 722, 748, 816, 822, 928, 936, 937, 945, 1016, 1052, 1066, 1068, 1112, 1132, 1152, 1221, 1234], "ds18s20": [74, 410, 1241], "datasheet": [74, 182, 928, 937, 980], "lm73": [74, 307, 410, 413, 935, 936, 937], "ti": [74, 191, 510, 608, 652, 847, 1269], "hoc": [74, 253, 470], "report": [74, 114, 117, 123, 131, 173, 191, 194, 195, 208, 210, 415, 496, 506, 649, 1017, 1061, 1066, 1248, 1250, 1267], "sort": [74, 95, 97, 149, 184, 192, 218, 224, 232, 236, 251, 253, 263, 264, 269, 271, 273, 274, 279, 287, 301, 304, 311, 316, 325, 331, 353, 359, 369, 384, 500, 501, 504, 505, 541, 626, 683, 701, 750, 764, 803, 822, 825, 827, 835, 848, 871, 875, 913, 925, 937, 1107, 1155, 1156, 1210, 1236], "sqlite3": [74, 227, 258, 264, 270, 277, 377, 380, 381, 518, 523, 1167, 1217, 1218, 1280], "rather": [74, 126, 130, 131, 139, 192, 194, 195, 196, 197, 198, 199, 202, 203, 215, 219, 223, 227, 243, 252, 270, 271, 345, 373, 375, 382, 385, 387, 390, 415, 422, 426, 468, 500, 501, 510, 534, 548, 599, 600, 601, 602, 603, 608, 643, 650, 652, 665, 672, 683, 703, 721, 728, 764, 801, 822, 824, 825, 849, 868, 870, 917, 928, 934, 936, 937, 957, 984, 989, 1007, 1014, 1019, 1051, 1052, 1066, 1080, 1084, 1100, 1125, 1132, 1135, 1143, 1184, 1185, 1188, 1199, 1201, 1215, 1243, 1248, 1258, 1273, 1280], "experi": [74, 185, 199, 223, 375, 510, 541, 634, 936, 937, 1242, 1261, 1262, 1278, 1282], "especi": [75, 81, 111, 121, 139, 193, 197, 215, 223, 307, 404, 422, 423, 449, 460, 490, 510, 724, 755, 801, 937, 959, 1261, 1268, 1281], "deprec": [75, 130, 134, 174, 320, 529, 717, 821, 1025, 1039, 1258], "foremost": [76, 1066], "osen": [76, 78, 202, 797, 816, 1067], "recurs": [76, 77, 227, 251, 260, 266, 276, 279, 819, 875, 876, 891, 903, 913, 921, 976, 989, 1008, 1015, 1061, 1144, 1148, 1258, 1271], "mother": [77, 97, 205, 207, 269, 375, 422, 626, 1125, 1258, 1260, 1271, 1273, 1274], "protect": [77, 192, 194, 243, 251, 263, 387, 451, 470, 588, 589, 649, 652, 662, 822, 868, 910, 936, 968, 976, 982, 1042, 1043, 1047, 1054, 1055, 1066, 1067, 1116, 1119, 1128, 1253, 1266], "critic": [77, 192, 202, 506, 820, 824, 974, 976, 1046, 1066, 1236], "kind": [77, 108, 192, 194, 202, 211, 223, 227, 260, 266, 267, 276, 277, 279, 291, 307, 319, 320, 341, 345, 381, 532, 554, 607, 655, 701, 720, 743, 755, 815, 822, 844, 861, 928, 934, 936, 1066, 1116, 1208, 1234, 1266, 1281], "poll": [78, 198, 208, 976, 978, 1001, 1039, 1041, 1053, 1055, 1073, 1264, 1270, 1272], "readi": [78, 191, 928, 1241], "rare": [78, 197, 213, 227, 373, 525, 540, 545, 605, 607, 658, 739, 810, 845, 848, 913, 1020, 1143, 1147, 1160, 1242], "btw": [78, 196, 202, 223, 229, 243, 250, 270, 273, 404, 487, 801, 866, 953, 1198, 1200], "increas": [78, 194, 500, 928, 1069, 1071, 1100, 1259], "tight": [78, 215, 444, 825, 987, 1233], "bui": [78, 192, 549], "bigger": [78, 192, 223, 386, 500, 848, 1214, 1261], "avail": [78, 121, 126, 131, 151, 174, 191, 192, 194, 195, 197, 203, 215, 219, 243, 252, 260, 266, 276, 279, 333, 341, 342, 345, 349, 375, 515, 517, 519, 521, 522, 525, 537, 550, 575, 576, 724, 748, 751, 763, 770, 819, 825, 862, 887, 928, 932, 936, 957, 984, 989, 1064, 1066, 1068, 1069, 1086, 1098, 1103, 1108, 1115, 1139, 1157, 1158, 1216, 1233, 1236, 1243, 1244, 1266, 1273], "rout": [82, 227, 1106], "jinja2": 82, "ss2022": [85, 859], "log": [85, 119, 157, 173, 197, 198, 213, 218, 221, 230, 250, 260, 266, 276, 279, 307, 309, 321, 338, 359, 381, 403, 522, 541, 554, 751, 859, 867, 869, 891, 928, 930, 947, 984, 1006, 1010, 1012, 1015, 1016, 1066, 1086, 1207, 1210, 1236, 1250, 1282], "ws2022": 85, "lab": [85, 95, 113, 149, 404, 1066], "exam": [85, 86, 95, 167, 252, 268, 297, 306, 327, 371, 406, 418, 860, 1065, 1117], "vo": [86, 95, 113, 164, 410], "ku": [86, 94, 95, 113], "g1": [86, 859], "g2": [86, 404, 859], "2022": [86, 94, 95, 169, 175, 204, 266, 272, 276, 279, 295, 296, 302, 305, 353, 417, 418, 421, 512, 545, 605, 770, 780, 783, 797, 838, 843, 891, 893, 1085, 1096, 1164, 1279], "03": [86, 94, 113, 149, 155, 197, 202, 204, 210, 218, 253, 274, 276, 279, 308, 309, 312, 315, 321, 334, 353, 380, 400, 403, 407, 421, 504, 511, 512, 540, 594, 626, 643, 649, 651, 652, 654, 658, 659, 662, 665, 893, 1096, 1212, 1250, 1257], "08": [86, 88, 94, 113, 155, 195, 202, 203, 204, 257, 260, 285, 289, 315, 353, 421, 546, 764, 928, 934, 937, 1027, 1041, 1099, 1212], "cont": [86, 113, 149, 261, 324], "command": [86, 88, 111, 113, 135, 154, 156, 191, 196, 202, 231, 243, 248, 258, 260, 266, 267, 274, 276, 279, 288, 291, 297, 299, 306, 307, 324, 327, 328, 371, 372, 380, 390, 404, 409, 422, 471, 492, 503, 513, 520, 523, 525, 529, 532, 537, 538, 541, 547, 555, 568, 572, 582, 605, 627, 642, 658, 845, 856, 857, 858, 866, 868, 869, 870, 871, 873, 875, 877, 885, 893, 894, 896, 898, 900, 905, 911, 920, 925, 936, 937, 984, 1006, 1007, 1008, 1015, 1019, 1061, 1066, 1067, 1068, 1069, 1083, 1084, 1092, 1096, 1100, 1160, 1208, 1236, 1243, 1250, 1252, 1259, 1267], "wsl": [86, 87, 92, 93, 113, 136, 149, 154, 164, 280, 300, 306, 319, 335, 341, 372, 377, 380, 865, 1086, 1095, 1099], "homework": [86, 91, 94, 113, 149, 164, 194], "21": [86, 88, 91, 94, 95, 113, 139, 149, 154, 155, 199, 202, 212, 213, 224, 229, 232, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 343, 347, 353, 359, 365, 369, 399, 403, 421, 512, 797, 873, 913, 936, 937, 974, 1016, 1098, 1212, 1213], "sshf": [86, 90, 113, 136, 297, 306, 307, 327, 328, 371, 372, 411, 1006, 1011, 1096], "toolchain": [86, 92, 93, 95, 97, 112, 113, 121, 138, 149, 150, 152, 165, 204, 218, 220, 307, 376, 378, 379, 380, 422, 512, 540, 544, 607, 608, 938, 985, 1033, 1085, 1088, 1100, 1101, 1102, 1133, 1255, 1256, 1257, 1269, 1270, 1274, 1275], "04": [86, 94, 113, 149, 164, 175, 199, 202, 204, 218, 219, 243, 291, 307, 308, 311, 315, 343, 401, 403, 421, 540, 1086, 1095, 1099, 1212, 1241], "bashrc": [86, 93, 113, 135, 156, 191, 203, 263, 297, 306, 307, 321, 327, 328, 359, 371, 372, 862, 911, 913, 1015, 1096, 1098], "studi": [86, 93, 134, 154, 252, 295, 296, 298, 299, 307, 355, 374, 382, 547, 555, 800, 832, 1066, 1094], "09": [86, 111, 152, 195, 204, 227, 243, 308, 343, 353, 401, 421, 512, 541, 913, 936, 937, 1029, 1041, 1135, 1212], "ds18b20": [86, 113, 115, 131, 134, 307, 355, 382, 404, 935, 1033], "slave": [86, 113, 115, 131, 134, 307, 355, 382, 932, 935, 936, 1033], "redirect": [86, 89, 113, 135, 157, 168, 193, 196, 231, 233, 243, 260, 266, 276, 279, 297, 306, 307, 327, 371, 389, 404, 409, 860, 875, 899, 903, 925, 1025, 1158, 1261, 1267, 1269], "pipe": [86, 192, 197, 199, 211, 231, 233, 243, 297, 306, 307, 309, 327, 371, 389, 404, 409, 797, 860, 868, 873, 913, 919, 1025, 1066, 1079, 1080, 1081, 1096, 1158, 1261, 1267], "06": [86, 95, 112, 113, 149, 158, 164, 202, 232, 276, 295, 308, 315, 332, 335, 338, 380, 403, 421, 512, 545, 626, 797, 1135, 1212], "02": [86, 95, 104, 112, 113, 150, 155, 164, 195, 202, 204, 210, 214, 240, 250, 277, 291, 308, 309, 315, 417, 418, 421, 504, 512, 540, 937, 1083, 1084, 1085, 1096, 1098, 1212], "past": [86, 159, 192, 196, 197, 253, 269, 373, 476, 528, 680, 682, 686, 689, 693, 813, 870, 957, 959, 1204, 1207, 1255], "2p": [86, 93], "3p": [86, 93], "5p": [86, 93], "pointer": [86, 97, 108, 113, 122, 131, 159, 195, 218, 294, 355, 381, 383, 385, 386, 387, 396, 405, 406, 407, 422, 434, 436, 438, 479, 480, 483, 487, 488, 508, 528, 562, 607, 620, 637, 642, 644, 649, 650, 652, 666, 668, 677, 681, 685, 689, 690, 693, 699, 703, 717, 743, 744, 745, 747, 751, 782, 783, 786, 788, 794, 795, 798, 806, 812, 813, 823, 824, 827, 830, 834, 845, 847, 850, 943, 950, 955, 966, 972, 1001, 1004, 1017, 1052, 1081, 1158, 1255, 1256, 1257, 1258, 1259, 1260], "exit": [86, 113, 192, 194, 221, 242, 260, 266, 269, 276, 279, 301, 307, 342, 397, 422, 425, 477, 538, 544, 554, 658, 740, 748, 801, 843, 845, 937, 947, 952, 986, 1021, 1022, 1023, 1025, 1026, 1031, 1033, 1037, 1042, 1047, 1062, 1073, 1080, 1081, 1083, 1101, 1107, 1115, 1116, 1134, 1137, 1150, 1160, 1170, 1188, 1236, 1243], "statu": [86, 113, 114, 123, 131, 159, 164, 193, 195, 260, 266, 269, 276, 279, 291, 301, 307, 422, 425, 477, 538, 541, 544, 797, 986, 1000, 1026, 1031, 1033, 1062, 1067, 1080, 1101, 1137, 1164, 1267, 1280], "arrai": [86, 97, 113, 214, 235, 236, 241, 246, 248, 252, 253, 255, 261, 269, 274, 279, 288, 291, 295, 296, 316, 324, 330, 369, 375, 387, 426, 435, 441, 445, 491, 493, 494, 497, 508, 606, 609, 632, 640, 643, 680, 681, 683, 685, 687, 690, 691, 696, 700, 713, 726, 734, 737, 750, 768, 782, 800, 824, 833, 862, 868, 955, 1061, 1140, 1144, 1156, 1208, 1211, 1213, 1236], "yai": [86, 263, 271, 273, 286, 292, 311, 321, 353, 365, 369, 690, 735, 765, 800, 1061], "07": [86, 95, 113, 164, 202, 204, 214, 227, 256, 257, 291, 296, 308, 309, 315, 331, 403, 417, 418, 421, 543, 857, 858, 934, 1066, 1135, 1164, 1212, 1279], "Into": [86, 269, 274, 277, 280, 285, 288, 300, 303, 309, 323, 324, 329, 330, 351, 352, 358, 363, 364, 367, 368, 441, 471, 506, 595, 726, 1098, 1123, 1202, 1203, 1204, 1205], "ol": [86, 113, 158, 269, 316, 318, 325, 381, 382, 413, 525, 652, 656, 786, 798, 831, 837, 925, 1077, 1153, 1158, 1181], "randomsensor": [86, 131, 554, 560, 569, 581, 595, 602, 606, 616, 617, 618, 619, 621, 622, 844, 845, 846, 847, 1120], "overload": [86, 131, 210, 218, 227, 253, 281, 316, 317, 318, 319, 320, 341, 345, 346, 348, 355, 364, 381, 382, 496, 604, 650, 670, 674, 682, 703, 720, 722, 801, 810, 815, 848, 943, 1123, 1227, 1257], "rectangl": [86, 558, 626, 655, 670], "mystr": [86, 217, 269], "29": [86, 95, 150, 202, 203, 212, 213, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 354, 359, 365, 396, 399, 403, 417, 418, 421, 512, 831, 934, 937, 948, 1083, 1096, 1212], "point3d": [86, 670], "cuboid": [86, 670], "terminologi": [87, 88, 113, 135, 150, 156, 165, 198, 215, 227, 262, 297, 306, 307, 310, 327, 341, 345, 371, 373, 461, 662, 860, 921, 1067, 1082, 1209, 1210, 1276], "hierarchi": [88, 95, 99, 100, 103, 109, 118, 135, 146, 156, 227, 228, 230, 232, 250, 251, 264, 267, 279, 297, 306, 307, 327, 328, 338, 371, 372, 384, 415, 501, 548, 549, 550, 553, 555, 569, 573, 575, 606, 744, 863, 864, 865, 866, 891, 897, 903, 910, 1008, 1063], "parent": [88, 98, 99, 100, 135, 146, 156, 194, 208, 297, 306, 307, 327, 328, 371, 372, 526, 528, 532, 797, 862, 863, 864, 865, 866, 867, 876, 879, 894, 895, 896, 897, 898, 900, 902, 903, 904, 916, 964, 1008, 1026, 1051], "login": [88, 113, 131, 134, 154, 197, 199, 231, 243, 297, 359, 403, 404, 857, 858, 861, 862, 865, 867, 868, 869, 877, 892, 928, 936, 1007, 1012, 1014, 1016, 1033, 1187, 1262, 1264], "bourn": [88, 113, 135, 156, 168, 205, 207, 231, 233, 297, 306, 307, 327, 371, 404, 405, 406, 409, 422, 797, 860, 1037, 1265, 1267], "absolut": [88, 113, 135, 156, 168, 194, 199, 214, 224, 243, 252, 260, 266, 276, 279, 283, 297, 306, 307, 310, 313, 320, 327, 328, 371, 372, 401, 422, 506, 526, 529, 819, 856, 876, 891, 904, 911, 982, 994, 1015, 1101, 1231, 1233], "special": [88, 113, 118, 135, 154, 156, 168, 192, 238, 271, 273, 279, 283, 297, 306, 307, 327, 328, 371, 372, 425, 477, 528, 529, 558, 569, 572, 575, 576, 620, 643, 648, 749, 766, 795, 801, 815, 818, 824, 856, 868, 873, 911, 929, 1019, 1025, 1056, 1066, 1081, 1101, 1106, 1125, 1127, 1135, 1144, 1146, 1150, 1210, 1215, 1266, 1267], "seri": [89, 193, 205, 207, 209, 263, 267, 308, 309, 310, 311, 313, 315, 317, 342, 347, 353, 411, 490, 511, 560, 1008, 1133, 1166, 1175, 1207, 1213, 1227, 1228, 1229, 1231, 1232, 1262, 1263, 1264, 1265, 1266, 1267, 1279], "verifi": [89, 91, 113, 126, 130, 135, 157, 168, 185, 202, 206, 207, 219, 231, 243, 307, 372, 373, 415, 643, 660, 866, 898, 899, 1008, 1009, 1174, 1211, 1214, 1236], "joke": [89, 192], "mostli": [89, 103, 108, 109, 277, 422, 426, 432, 444, 460, 490, 499, 519, 525, 534, 663, 705, 751, 801, 845, 867, 870, 891, 952, 1025, 1061, 1064, 1086, 1268, 1273], "passwd": [89, 90, 113, 136, 149, 155, 231, 241, 250, 263, 264, 266, 270, 271, 274, 279, 280, 282, 286, 288, 289, 297, 304, 306, 307, 311, 321, 325, 327, 328, 347, 353, 359, 365, 371, 372, 525, 526, 529, 723, 797, 862, 866, 868, 871, 873, 875, 886, 909, 910, 913, 917, 919, 922, 925, 928, 1006, 1007, 1015, 1016, 1020, 1021, 1026, 1032, 1061, 1076, 1105, 1107, 1154, 1158, 1181, 1236], "secur": [90, 113, 135, 146, 149, 150, 156, 165, 195, 197, 199, 243, 263, 269, 297, 306, 327, 359, 371, 372, 403, 857, 858, 863, 864, 866, 869, 887, 891, 928, 938, 1006, 1007, 1008, 1014, 1025, 1033, 1094, 1101, 1103, 1135, 1166], "account": [90, 99, 100, 113, 197, 199, 218, 223, 227, 228, 263, 269, 279, 286, 289, 304, 308, 309, 311, 321, 325, 347, 353, 359, 365, 404, 409, 433, 506, 512, 722, 800, 934, 957, 1016, 1132, 1212], "authent": [90, 113, 135, 136, 156, 231, 243, 252, 297, 306, 307, 327, 328, 371, 372, 401, 404, 857, 858, 1006, 1010, 1011, 1016, 1174], "ownership": [90, 113, 136, 156, 218, 253, 307, 328, 342, 371, 372, 616, 620, 626, 648, 815, 841, 844, 845, 857, 858, 868, 886, 887, 1025, 1026, 1258, 1259], "setuid": [90, 113, 136, 137, 231, 297, 306, 307, 327, 328, 371, 372, 866, 886], "quick": [91, 113, 139, 223, 230, 248, 252, 258, 267, 274, 288, 300, 330, 575, 751, 919, 928, 1208, 1234], "determin": [91, 113, 136, 157, 191, 214, 219, 221, 229, 230, 235, 237, 242, 254, 258, 260, 261, 264, 270, 274, 280, 282, 285, 287, 288, 303, 310, 323, 324, 329, 330, 351, 352, 357, 358, 363, 364, 367, 368, 372, 375, 744, 814, 815, 835, 880, 924, 936, 992, 1022, 1042, 1066, 1069, 1070, 1083, 1101, 1171, 1181, 1236], "credenti": [91, 113, 136, 155, 157, 199, 291, 372, 858, 859, 866, 880, 1012, 1050, 1105], "share": [91, 92, 95, 99, 100, 113, 136, 146, 155, 157, 170, 192, 194, 199, 203, 215, 216, 218, 219, 221, 224, 243, 253, 260, 263, 266, 276, 279, 283, 286, 289, 294, 295, 296, 298, 304, 307, 311, 321, 325, 334, 347, 350, 353, 355, 359, 365, 372, 374, 376, 377, 378, 379, 380, 384, 385, 386, 401, 422, 466, 493, 494, 500, 506, 519, 528, 534, 537, 540, 542, 546, 549, 561, 606, 626, 634, 750, 751, 796, 800, 801, 822, 823, 825, 847, 859, 863, 864, 870, 880, 883, 884, 922, 936, 961, 966, 982, 989, 1028, 1042, 1044, 1047, 1050, 1052, 1058, 1064, 1066, 1071, 1083, 1086, 1094, 1096, 1116, 1119, 1250, 1262, 1266, 1269, 1270, 1271, 1272], "machin": [91, 99, 100, 113, 146, 162, 164, 189, 194, 199, 212, 227, 243, 250, 251, 260, 261, 264, 266, 276, 279, 333, 341, 345, 349, 359, 403, 407, 426, 442, 444, 452, 460, 488, 492, 506, 607, 608, 764, 857, 858, 863, 864, 867, 870, 921, 984, 1009, 1010, 1012, 1014, 1015, 1016, 1068, 1083, 1086, 1089, 1090, 1094, 1108, 1223, 1272, 1273], "adjust": [91, 187, 190, 373, 936, 984, 1009, 1077, 1084], "ubuntu": [92, 121, 154, 193, 199, 203, 218, 219, 220, 221, 231, 296, 298, 307, 422, 870, 930, 1016, 1085, 1086, 1095, 1099, 1243, 1248], "zoom": [92, 93, 113, 137, 199, 206, 207, 223, 307, 321, 422, 540, 913, 1094], "recap": [93, 113, 149, 164, 227, 231, 240, 269, 316, 317, 344, 377, 382, 404, 644, 1114], "endeavor": 93, "hoop": [93, 159, 870, 1080], "doze": [93, 198, 252, 253, 266, 404, 411, 488, 797, 870, 915, 1152, 1158, 1243], "studio": [93, 136, 154, 176, 218, 223, 227, 228, 230, 232, 243, 252, 253, 258, 261, 274, 280, 288, 303, 307, 310, 313, 317, 323, 324, 329, 330, 351, 352, 357, 358, 363, 367, 368, 404, 409, 423, 870, 1132, 1223], "big": [93, 131, 171, 173, 192, 193, 199, 223, 227, 247, 253, 267, 274, 277, 320, 346, 404, 449, 494, 506, 605, 655, 684, 751, 800, 801, 1019, 1045, 1208, 1220, 1270], "pictur": [93, 171, 173, 192, 212, 223, 227, 320, 321, 500, 506, 605, 891, 893, 913, 928, 996, 1015, 1019, 1045, 1066, 1270], "theori": [95, 227, 473, 500, 1213], "dynam": [95, 131, 218, 226, 227, 260, 266, 276, 277, 279, 316, 318, 322, 356, 381, 382, 422, 485, 543, 569, 606, 637, 646, 648, 655, 738, 740, 741, 742, 751, 764, 782, 783, 784, 790, 801, 813, 839, 840, 856, 868, 941, 986, 1046, 1053, 1055, 1064, 1083, 1084, 1086, 1100, 1124, 1138, 1159, 1208, 1260, 1266], "31": [95, 113, 195, 197, 202, 213, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 274, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 398, 399, 421, 484, 512, 544, 761, 826, 913, 1039, 1041, 1081, 1099, 1133, 1166, 1212], "ece20": [95, 98, 591, 607, 667, 857, 858, 866], "uml": [95, 131, 299, 317, 319, 320, 555, 606], "foundat": [95, 274, 304, 555, 747, 984, 1264], "adapt": [95, 131, 174, 195, 227, 299, 317, 374, 381, 387, 547, 555, 556, 557, 568, 572, 582, 586, 751, 801, 936, 937, 1259], "setup": [95, 113, 126, 142, 149, 164, 177, 185, 218, 222, 223, 261, 263, 279, 286, 289, 291, 296, 298, 304, 307, 311, 321, 325, 347, 353, 359, 365, 401, 404, 409, 410, 494, 547, 561, 572, 574, 588, 602, 605, 607, 608, 734, 736, 840, 922, 934, 936, 937, 952, 978, 1020, 1022, 1033, 1066, 1080, 1084, 1088, 1095, 1105, 1112, 1120, 1164, 1195, 1242, 1252, 1254], "syllabu": [95, 148, 151, 162, 163, 412], "vote": 95, "beurteilungsschema": 95, "english": [95, 207, 211, 230, 237, 248, 258, 261, 270, 274, 280, 282, 285, 287, 288, 303, 310, 315, 323, 324, 329, 330, 342, 351, 352, 357, 358, 363, 364, 367, 368, 402, 403, 404, 409, 523, 542, 1181, 1221, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282], "grade": [95, 98, 113, 131, 162, 408, 418, 1241], "total": [95, 98, 101, 102, 111, 166, 194, 203, 210, 263, 279, 289, 296, 499, 504, 512, 538, 554, 570, 604, 605, 606, 607, 658, 667, 845, 913, 916, 928, 934, 936, 937, 1016, 1039, 1046, 1066, 1077, 1084, 1085, 1086, 1096, 1099, 1164, 1166, 1248], "compos": [95, 117, 118, 170, 206, 207, 269, 342, 438, 550, 721, 984, 1098, 1101, 1110, 1124, 1170, 1221], "practic": [95, 161, 264, 273, 283, 374, 376, 379, 473, 510, 682, 742, 809, 813, 838, 934, 1029, 1066, 1081, 1216, 1258, 1259], "theoret": [95, 406, 424, 817], "semest": [95, 98, 134, 150, 152, 165, 408, 410], "deliv": [95, 192, 931, 1066, 1080, 1081], "variou": [95, 164, 194, 269, 295, 296, 525, 822, 825, 844, 862, 984, 1066, 1266], "weight": [95, 214, 223, 495, 937, 978, 1132], "decid": [95, 193, 194, 199, 223, 277, 499, 549, 610, 624, 687, 934, 980, 984, 1004, 1066, 1115, 1132], "excerpt": [95, 227, 230, 381, 406, 407, 1166, 1280], "w1": [95, 103, 109, 113, 114, 128, 139, 307, 356, 534, 536, 591, 607, 608, 1033], "soup": [95, 372, 374, 515, 516, 522, 526, 532, 538, 541, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 557, 560, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 604, 606, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 797, 846, 1037, 1040, 1108, 1111, 1160, 1241, 1250], "armv8": [95, 203, 307, 532, 608, 1084, 1098, 1099], "rpi4": [95, 203, 307, 532, 608, 1084, 1098, 1099], "gnueabihf": [95, 203, 307, 532, 608, 984, 1084, 1096, 1098, 1099], "shape": [95, 212, 214, 253, 315, 316, 347, 369, 381, 596, 626, 667, 800, 984, 1025, 1213, 1216, 1226], "50": [95, 98, 174, 202, 212, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 405, 406, 495, 497, 540, 604, 639, 640, 913, 934, 936, 937, 1110, 1133, 1153, 1166, 1212, 1213, 1225, 1241], "algorithm": [95, 144, 145, 193, 202, 212, 260, 266, 274, 276, 279, 287, 289, 295, 296, 316, 325, 387, 500, 613, 637, 644, 674, 685, 687, 688, 690, 691, 694, 695, 715, 716, 750, 803, 817, 835, 837, 1188, 1210, 1214], "find_if": [95, 97, 144, 253, 269, 316, 355, 689, 692, 726, 750], "customiz": [95, 144, 316, 692], "binary_search": [95, 97, 253, 269, 316, 692], "associ": [95, 203, 220, 228, 230, 232, 248, 253, 307, 310, 313, 316, 318, 356, 447, 448, 456, 461, 597, 682, 716, 770, 800, 853, 929, 943, 950, 1025, 1066, 1108, 1138, 1139, 1140, 1156, 1158, 1215, 1259, 1269, 1278], "hour": [95, 197, 199, 223, 227, 260, 282, 300, 311, 324, 346, 410, 1066, 1170, 1208, 1215], "sent": [95, 192, 193, 231, 336, 506, 572, 871, 1041, 1056, 1066, 1081, 1224], "015": 95, "voluntari": [95, 982], "filter": [95, 98, 113, 208, 211, 244, 251, 264, 281, 304, 310, 313, 317, 318, 325, 342, 344, 347, 354, 359, 363, 367, 368, 526, 613, 844, 845, 855, 875, 925, 1229, 1231, 1248], "odd": [95, 113, 283, 318, 488, 610, 613, 766, 768, 936, 1110, 1112], "char": [96, 194, 209, 252, 269, 279, 325, 426, 433, 438, 439, 442, 444, 445, 446, 449, 450, 463, 468, 471, 476, 477, 484, 488, 494, 495, 497, 540, 551, 554, 585, 589, 594, 608, 609, 640, 655, 658, 659, 662, 672, 704, 713, 720, 721, 736, 748, 761, 765, 768, 790, 797, 801, 806, 813, 815, 827, 831, 848, 934, 940, 943, 948, 964, 966, 978, 1004, 1017, 1021, 1022, 1025, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1042, 1043, 1047, 1063, 1067, 1073, 1076, 1077, 1080, 1102, 1147, 1153, 1219, 1248, 1253], "cout": [96, 103, 106, 109, 110, 118, 203, 381, 514, 517, 554, 569, 574, 575, 576, 588, 589, 590, 591, 594, 602, 606, 607, 634, 652, 654, 659, 660, 664, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 715, 721, 725, 732, 735, 739, 740, 743, 744, 747, 748, 749, 750, 751, 756, 757, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 788, 790, 800, 801, 803, 805, 806, 807, 821, 822, 824, 825, 826, 830, 831, 833, 835, 837, 839, 847, 874, 934, 1037, 1040, 1043, 1047, 1061, 1063, 1076, 1080, 1248], "endl": [96, 103, 106, 109, 203, 517, 519, 554, 569, 574, 575, 576, 588, 589, 590, 591, 594, 602, 606, 607, 634, 652, 654, 659, 664, 665, 672, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 700, 705, 706, 707, 708, 709, 715, 721, 725, 732, 735, 739, 740, 743, 744, 747, 749, 750, 751, 757, 761, 764, 765, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 788, 790, 800, 801, 803, 805, 806, 821, 822, 825, 826, 830, 831, 833, 835, 837, 839, 847, 934, 1037, 1040, 1043, 1061, 1063, 1076, 1080, 1248], "constitut": 96, "_id": [96, 103, 109], "objectcontain": 96, "add_object": 96, "_contain": [96, 835], "push_back": [96, 384, 579, 580, 643, 683, 684, 685, 690, 693, 696, 700, 705, 755, 756, 810, 815, 822, 824, 1080, 1253], "fragment": [96, 501, 1049, 1112, 1248], "iostream": [96, 103, 109, 110, 260, 266, 276, 279, 554, 569, 574, 575, 576, 584, 588, 589, 590, 591, 594, 602, 606, 634, 652, 654, 659, 660, 664, 665, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 690, 691, 694, 695, 696, 700, 704, 705, 706, 707, 708, 709, 715, 725, 731, 732, 733, 734, 735, 736, 739, 740, 743, 744, 747, 748, 749, 750, 751, 756, 759, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 788, 790, 797, 800, 801, 803, 805, 806, 807, 821, 822, 824, 825, 826, 830, 831, 835, 837, 839, 847, 934, 1037, 1040, 1042, 1043, 1053, 1061, 1063, 1076, 1080, 1081, 1248], "my_vector": 96, "sysroot": [97, 146, 203, 1084, 1089, 1090, 1099], "intel": [97, 182, 195, 1083], "produc": [97, 146, 211, 213, 252, 266, 365, 375, 488, 500, 505, 764, 770, 776, 778, 822, 825, 1016, 1055, 1056, 1066, 1075, 1083, 1086, 1089, 1090, 1100, 1113, 1114, 1147, 1150, 1152, 1216, 1262], "header": [97, 219, 253, 269, 294, 324, 333, 334, 349, 350, 376, 377, 379, 470, 471, 472, 493, 512, 520, 523, 537, 543, 544, 546, 554, 660, 675, 724, 759, 809, 875, 932, 937, 1084, 1086, 1096, 1166, 1199, 1203, 1204, 1206, 1213, 1216, 1273], "match": [97, 191, 198, 206, 226, 239, 256, 263, 264, 266, 271, 279, 289, 291, 292, 301, 304, 324, 325, 331, 342, 353, 359, 365, 382, 468, 512, 607, 761, 801, 815, 826, 835, 848, 850, 866, 875, 1016, 1086, 1107, 1153, 1208, 1248], "linker": [97, 99, 100, 146, 218, 333, 349, 376, 379, 467, 493, 500, 504, 505, 522, 545, 664, 675, 984, 1083, 1086, 1089, 1090, 1094, 1101, 1255, 1256, 1257, 1269, 1273, 1275], "arithmet": [97, 211, 244, 249, 269, 272, 284, 299, 316, 404, 427, 441, 448, 449, 455, 456, 471, 487, 488, 547, 556, 568, 569, 582, 644, 677, 681, 682, 685, 690, 800, 801, 834, 835], "uniquifi": [98, 318, 613], "lookup": [98, 119, 211, 228, 241, 260, 266, 271, 276, 279, 293, 325, 495, 570, 615, 749, 1120, 1149, 1156, 1187, 1221, 1230, 1272], "leak": [98, 139, 194, 374, 483, 497, 554, 575, 576, 615, 616, 632, 640, 643, 649, 655, 801, 809, 843, 845, 1108], "sure": [98, 136, 159, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 231, 243, 250, 267, 269, 309, 401, 494, 519, 525, 549, 550, 553, 572, 575, 576, 605, 631, 660, 720, 794, 850, 936, 937, 984, 1026, 1030, 1066, 1096, 1108, 1259, 1267, 1281], "gz": [98, 166, 853, 855, 856, 984, 985, 1164, 1243], "whatev": [98, 119, 126, 130, 191, 192, 194, 199, 214, 229, 289, 390, 506, 572, 651, 753, 764, 770, 797, 896, 898, 1016, 1021, 1047, 1067, 1069, 1138, 1206, 1213, 1220, 1221, 1243], "quiz": [99, 100, 113, 146, 149, 157, 164, 723, 865, 880, 905, 1091], "servic": [99, 100, 146, 155, 171, 172, 173, 197, 198, 199, 231, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 372, 506, 512, 817, 863, 864, 867, 919, 937, 976, 982, 987, 1014, 1016, 1023, 1066, 1069, 1137], "owner": [99, 100, 146, 193, 231, 404, 409, 846, 863, 864, 878, 879, 887, 913, 943, 984, 1016, 1053], "dimension": [99, 100, 146, 212, 761, 848, 863, 864, 1213, 1214], "identifi": [99, 100, 146, 193, 202, 260, 266, 276, 279, 325, 449, 471, 492, 494, 504, 732, 863, 864, 934, 937, 942, 982, 1066, 1154, 1215], "pthread": [99, 100, 146, 192, 203, 208, 260, 266, 276, 279, 816, 822, 863, 864, 1050, 1055, 1058, 1067, 1081, 1086], "timeslic": [99, 100, 146, 192, 863, 864, 1064, 1070], "suspend": [99, 100, 146, 192, 193, 365, 770, 772, 819, 861, 863, 864, 875, 980, 1046, 1055, 1081], "favor": [99, 100, 146, 863, 864, 1068, 1258], "fair": [99, 100, 146, 192, 863, 864, 982, 1068, 1070], "ensur": [99, 100, 146, 166, 279, 550, 598, 863, 864, 1066], "evenli": [99, 100, 146, 271, 863, 864], "cpu": [99, 100, 120, 134, 146, 191, 192, 195, 199, 202, 224, 234, 238, 318, 365, 415, 419, 486, 487, 499, 501, 506, 683, 817, 825, 861, 863, 864, 867, 871, 934, 936, 937, 955, 968, 982, 989, 994, 1004, 1019, 1049, 1053, 1055, 1065, 1066, 1067, 1068, 1069, 1070, 1118, 1135, 1266, 1268], "infinit": [99, 100, 146, 192, 211, 230, 260, 264, 266, 269, 271, 276, 279, 287, 320, 324, 461, 479, 486, 863, 864, 868, 1064, 1068, 1112, 1113, 1114, 1143, 1179], "illus": [99, 100, 146, 863, 864, 868, 1064, 1068, 1266], "action": [99, 100, 202, 230, 286, 382, 540, 544, 651, 722, 890, 891, 1020, 1025, 1067, 1080, 1082, 1083, 1215, 1236], "undefin": [99, 100, 252, 373, 442, 449, 476, 528, 529, 544, 657, 664, 688, 695, 700, 722, 762, 765, 803, 815, 824, 1080], "behavior": [99, 100, 118, 146, 192, 194, 197, 228, 250, 252, 279, 449, 529, 532, 688, 695, 700, 722, 762, 772, 815, 824, 863, 864, 1026, 1030, 1066, 1081, 1084, 1105, 1110, 1127], "mean": [99, 100, 113, 118, 192, 194, 197, 199, 212, 214, 215, 227, 247, 250, 251, 264, 266, 279, 283, 310, 325, 333, 341, 345, 349, 381, 389, 390, 426, 447, 448, 449, 471, 490, 495, 500, 529, 574, 652, 662, 663, 722, 750, 770, 831, 835, 850, 866, 873, 876, 878, 879, 887, 928, 934, 936, 937, 943, 959, 1032, 1039, 1064, 1069, 1071, 1100, 1103, 1112, 1127, 1135, 1138, 1152, 1153, 1158, 1187, 1209, 1213, 1215, 1216, 1227, 1248, 1262, 1263, 1266, 1273], "declar": [99, 100, 251, 252, 264, 269, 425, 441, 470, 479, 486, 492, 493, 494, 500, 513, 540, 653, 660, 662, 722, 724, 732, 733, 748, 815, 827, 846, 848, 850, 937, 1025, 1029, 1031, 1032, 1066, 1068, 1250], "promis": [99, 100, 194, 295, 296, 298, 307, 355, 374, 375, 383, 385, 386, 436, 494, 572, 640, 652, 722, 770, 772, 773, 776, 777, 821, 822, 823, 1080, 1133, 1258], "caller": [99, 100, 194, 269, 436, 438, 474, 480, 504, 506, 528, 662, 722, 735, 748, 813, 817, 819, 831, 846, 976, 987, 1051, 1055, 1108, 1188], "uniniti": [99, 100, 374, 497, 643, 650, 652, 653, 654, 657, 722, 939], "guarante": [99, 100, 192, 229, 260, 279, 488, 553, 660, 722, 762, 764, 766, 824, 936, 937, 948, 955, 1041, 1046, 1068, 1069, 1105], "contigu": [99, 100, 501, 683, 700, 722, 970, 1035, 1047, 1049, 1228], "vec": [99, 100, 650, 652, 659, 660, 665, 666, 667, 668, 669, 722], "hysteresi": [101, 102, 104, 105, 112, 114, 124, 129, 130, 131, 167, 356, 413, 534, 536, 598], "incomplet": [103, 106, 221, 260, 266, 276, 279, 283, 515, 648, 783, 848, 935, 1223], "_x": [103, 106, 594, 652, 653, 655, 657, 659, 660, 661, 663, 665, 675, 690, 761, 764, 765], "firstnam": [103, 107, 113, 131, 134, 159, 161, 224, 250, 263, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 311, 325, 331, 336, 343, 359, 390, 395, 550, 551, 579, 585, 594, 595, 608, 662, 709, 728, 732, 734, 736, 814, 857, 858, 895, 896, 898, 900, 903, 1108, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1137, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1216, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "lastnam": [103, 107, 113, 131, 134, 159, 161, 224, 253, 263, 269, 271, 273, 276, 279, 283, 286, 289, 291, 292, 304, 311, 325, 331, 336, 343, 359, 390, 395, 550, 551, 579, 585, 594, 595, 608, 662, 709, 726, 728, 732, 735, 814, 857, 858, 895, 896, 898, 900, 903, 1108, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1137, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1216, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "chosen": [103, 107, 203, 541, 928, 934, 937, 1031, 1035, 1064, 1069, 1214, 1227], "shorter": [103, 107, 211, 1115, 1126, 1158], "temporari": [103, 107, 193, 202, 218, 260, 266, 269, 276, 279, 319, 320, 341, 345, 541, 607, 608, 660, 770, 797, 803, 810, 814, 815, 835, 875, 1083, 1110, 1192], "consid": [103, 108, 109, 192, 194, 223, 227, 251, 260, 266, 276, 277, 279, 283, 307, 325, 346, 464, 491, 492, 500, 529, 532, 572, 801, 891, 934, 1066, 1068, 1124, 1132, 1208, 1236, 1273, 1281], "imagin": [103, 109, 192, 194, 373, 490, 495, 496, 513, 548, 561, 870, 887, 928, 937, 984, 1053, 1066, 1081], "w1sensor": [103, 109, 131, 592, 593, 594, 595, 607], "pragma": [103, 108, 109, 488, 520, 549, 551, 554, 560, 572, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 607, 660, 664, 681, 684, 724, 765, 773, 782, 784, 786, 787, 788, 789, 790, 797, 839], "get_temperatur": [103, 108, 109, 227, 279, 342, 549, 552, 553, 554, 560, 562, 572, 573, 578, 580, 581, 583, 586, 587, 591, 594, 599, 600, 601, 602, 606, 607, 608, 619, 637, 782, 784, 786, 787, 788, 789, 812, 844, 845, 846, 847, 1120, 1197], "unus": [103, 109, 494, 549, 604, 606, 650, 654, 664, 703, 705, 748, 801, 812, 868, 961, 1061, 1076], "cstdint": [103, 109, 747, 771, 772, 849], "uint64_t": [103, 109, 444, 481, 607, 751, 771, 772, 1023, 1076], "w1_address": [103, 109], "_w1_address": [103, 109], "overrid": [103, 109, 110, 131, 251, 264, 279, 294, 356, 381, 382, 549, 554, 557, 562, 577, 579, 580, 581, 583, 584, 586, 608, 740, 742, 743, 782, 790, 798, 828, 839, 1105, 1120, 1253], "physic": [103, 109, 194, 197, 231, 238, 319, 320, 341, 345, 373, 382, 501, 867, 936, 968, 1023, 1027, 1046, 1049, 1067, 1068], "36": [103, 109, 155, 193, 197, 202, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 404, 409, 522, 549, 554, 573, 597, 600, 601, 602, 606, 607, 608, 739, 747, 797, 812, 845, 846, 847, 913, 934, 1120, 1197], "samp": [103, 109], "unistd": [103, 109, 194, 491, 608, 640, 839, 888, 934, 1019, 1021, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1042, 1043, 1063, 1067, 1073, 1076, 1080], "0xdeadbe": [103, 109], "correct": [103, 191, 199, 203, 230, 250, 252, 263, 404, 449, 486, 490, 491, 498, 501, 510, 524, 558, 626, 658, 739, 743, 744, 801, 812, 816, 841, 844, 848, 874, 878, 879, 903, 934, 936, 937, 1068, 1111, 1119, 1213, 1236, 1261], "liskov": [103, 108, 109, 510], "segreg": [103, 108, 109, 131, 510], "invers": [103, 108, 109, 131, 283, 374, 381, 419, 510, 548, 554, 948, 1066, 1068, 1069, 1271], "question2": [104, 112], "26": [104, 112, 155, 195, 197, 202, 203, 204, 212, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 296, 301, 304, 308, 311, 315, 325, 331, 336, 343, 347, 353, 359, 365, 369, 399, 403, 421, 642, 643, 827, 891, 913, 937, 1037, 1039, 1040, 1083, 1085, 1127, 1212, 1213, 1236], "sampl": [104, 112, 113, 121, 171, 173, 192, 203, 248, 251, 252, 264, 268, 274, 280, 283, 300, 316, 342, 359, 375, 378, 390, 506, 594, 822, 930, 1055, 1160], "set_stat": [108, 124, 130, 161, 356], "nullptr": [108, 588, 589, 607, 618, 622, 745, 747, 748, 794, 795, 800, 812, 813, 822, 825, 839, 844, 845, 846, 1040, 1258], "_sensor": [108, 554, 562, 580, 581, 583, 586, 587, 839, 846], "_switch": [108, 562], "_displai": 108, "_low": 108, "_high": 108, "current_temperatur": 108, "obvious": [109, 174, 194, 195, 197, 203, 214, 426, 490, 494, 515, 570, 634, 665, 703, 740, 762, 783, 797, 800, 801, 806, 813, 834, 850, 867, 868, 874, 888, 936, 937, 982, 984, 997, 1015, 1031, 1032, 1069, 1081, 1083, 1100, 1121, 1124, 1273], "remain": [109, 139, 192, 193, 203, 211, 224, 271, 279, 325, 386, 519, 611, 612, 624, 653, 700, 707, 731, 737, 740, 750, 820, 848, 849, 966, 1012, 1066, 1070, 1081, 1083, 1184, 1187, 1188, 1191, 1199, 1201, 1216, 1250], "situat": [109, 111, 159, 185, 192, 194, 203, 223, 250, 382, 385, 534, 604, 605, 608, 620, 681, 813, 882, 884, 928, 978, 984, 1012, 1031, 1046, 1047, 1066, 1069, 1086, 1096, 1099, 1100, 1148, 1258], "carri": [111, 194, 199, 213, 492, 546, 553, 570, 747, 797, 839, 934, 1070, 1083, 1107], "norm": [111, 269, 1221], "meantim": [111, 554, 1020], "fresh": [111, 193], "team": [111, 114, 131, 157, 199, 204, 206, 207, 218, 226, 227, 228, 243, 252, 277, 319, 422, 801, 870, 876, 883, 885, 1110, 1273, 1279], "mqtt": [111, 117, 118, 120, 123, 240, 242, 256, 258, 267, 280, 281, 285, 319, 320, 335, 338, 341, 377, 378, 380, 381, 410, 413, 415, 523, 1123, 1164, 1202, 1205, 1223, 1280], "made": [111, 118, 130, 190, 191, 192, 193, 195, 198, 199, 203, 243, 258, 283, 307, 342, 375, 387, 404, 435, 473, 474, 476, 479, 510, 550, 555, 570, 576, 770, 861, 862, 868, 928, 934, 968, 984, 1029, 1035, 1040, 1047, 1049, 1068, 1086, 1112, 1119, 1129, 1166, 1213], "arbitrari": [111, 192, 212, 279, 283, 430, 446, 464, 500, 541, 672, 699, 700, 750, 756, 757, 932, 943, 1025, 1029, 1067, 1108, 1144, 1158, 1187], "sinc": [111, 170, 172, 203, 208, 253, 259, 290, 400, 500, 503, 526, 529, 652, 690, 703, 748, 757, 759, 761, 765, 768, 770, 797, 800, 834, 846, 850, 934, 984, 1016, 1023, 1029, 1032, 1053, 1066, 1069, 1138, 1260], "whichev": [111, 154], "enumer": [111, 212, 214, 224, 230, 235, 236, 240, 242, 248, 249, 251, 272, 276, 281, 287, 301, 305, 322, 325, 344, 354, 366, 369, 445, 492, 512, 849, 937, 945, 980], "pack": [111, 203, 252, 605, 626, 856, 891, 929, 931], "unpack": [111, 166, 210, 230, 236, 240, 242, 247, 251, 255, 260, 263, 268, 272, 273, 279, 284, 286, 290, 291, 302, 307, 309, 312, 321, 325, 343, 346, 348, 354, 356, 366, 369, 375, 381, 383, 389, 404, 798, 856, 929, 931, 934, 984, 1084, 1092, 1098, 1099, 1138, 1156, 1258], "kib": 111, "222": [111, 224, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 347, 353, 359, 365, 369, 544], "00": [111, 155, 194, 195, 197, 202, 214, 218, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 241, 243, 245, 248, 252, 258, 260, 266, 276, 279, 280, 307, 308, 315, 316, 318, 378, 397, 504, 512, 538, 757, 781, 785, 797, 838, 857, 858, 913, 934, 936, 937, 1047, 1067, 1096, 1134, 1241], "addit": [111, 194, 211, 223, 250, 279, 282, 382, 387, 389, 447, 494, 519, 541, 569, 570, 584, 606, 652, 663, 669, 734, 764, 765, 801, 868, 984, 1012, 1066, 1127, 1139, 1155, 1157, 1236], "checkout": [111, 170, 189, 195, 220, 957, 984, 985], "previou": [111, 162, 196, 211, 342, 591, 643, 659, 734, 891, 924, 1031, 1066, 1111, 1133, 1178], "9bfda12": 111, "mosquitto": [111, 263, 267, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 378, 518, 1203, 1224], "smoothli": 111, "forward": [111, 269, 295, 296, 297, 306, 327, 328, 355, 371, 375, 387, 441, 471, 713, 798, 801, 835, 891, 915, 924, 928, 984, 1006, 1011, 1258], "diverg": [111, 1067], "00aea42": 111, "publish": [111, 121, 196, 198, 267, 279, 280, 300, 342, 401, 410, 412, 1066, 1123, 1202, 1205, 1208, 1239], "delet": [111, 218, 230, 260, 279, 294, 304, 325, 356, 381, 382, 387, 399, 497, 548, 551, 590, 607, 616, 620, 632, 640, 655, 658, 717, 740, 745, 747, 768, 788, 798, 800, 801, 806, 812, 813, 814, 843, 844, 845, 846, 868, 961, 992, 1217, 1243, 1257, 1258], "footnot": [111, 195, 197, 198, 199, 202, 203, 206, 207, 214, 220, 223, 226, 310, 313, 384, 387, 549, 576, 620, 666, 668, 669, 682, 713, 724, 725, 801, 862, 870, 885, 934, 936, 937, 953, 955, 1026, 1029, 1100, 1132, 1135, 1166, 1200, 1214, 1258, 1259], "term": [111, 118, 146, 192, 194, 215, 243, 283, 316, 318, 373, 401, 500, 662, 665, 722, 750, 846, 848, 863, 864, 937, 1024, 1066, 1068, 1080, 1213, 1248, 1261, 1272], "ss2023": 112, "ws2023": 112, "ece21": [112, 113, 130, 131], "handout": [112, 113, 147], "bouncem": [113, 131, 134, 157, 607, 608, 857, 858], "procf": [113, 231, 233, 307, 869, 1062, 1262, 1264], "umask": [113, 136, 297, 306, 307, 327, 328, 371, 372, 404, 409, 886, 910, 1029, 1050], "diff": [113, 247, 266, 359, 650, 652, 1127, 1267], "raspi": [113, 321, 404, 410, 929, 930, 931, 932, 934, 936, 937, 984, 985, 986, 1098, 1099], "spirit": [113, 464], "Of": [113, 194, 197, 226, 227, 277, 295, 296, 298, 300, 307, 374, 375, 384, 524, 680, 725, 739, 741, 744, 796, 799, 859, 875, 922, 1033, 1038, 1114, 1208, 1221, 1259], "unittest": [113, 205, 207, 218, 220, 223, 226, 227, 237, 240, 251, 253, 258, 300, 309, 320, 374, 375, 382, 412, 413, 422, 797, 1150, 1208, 1235, 1246, 1255, 1256, 1257, 1258, 1259, 1260, 1274, 1281], "readm": [113, 155, 177, 210, 316, 318, 934, 936], "modular": [113, 223, 228, 230, 258, 277, 309, 406, 407, 436, 540, 1083, 1111, 1278], "plc": 113, "sallok": 113, "constantsensor_nopoli": [113, 131, 596], "randomsensor_nopoli": [113, 131, 596], "labexam": 113, "hysteresis_nopoli": [113, 114, 131, 596, 597], "upload": [113, 198, 891, 1066, 1164, 1235], "j": [113, 139, 166, 197, 203, 239, 254, 256, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 325, 331, 343, 347, 359, 450, 453, 470, 494, 501, 570, 662, 749, 750, 755, 856, 994, 1026, 1066, 1092, 1096, 1112, 1221, 1227], "bz2": [113, 166, 193, 506, 852, 855, 984, 1086, 1105], "influenc": [113, 1084, 1258], "felber": 113, "vscode": [113, 149, 164, 176, 221, 377, 380, 410, 423, 913], "folder": [113, 198], "comprehend": [113, 277, 449, 455, 1080], "workspacefold": 113, "suppli": [113, 194, 231, 608, 610, 654, 764, 866, 928, 932, 934, 937, 943, 984, 1000, 1020, 1029, 1066, 1169], "cpprefer": [113, 687, 688, 689, 690, 691, 693, 694, 695, 696, 699, 709, 720, 762, 767, 821], "averagingsensor_nopoli": [113, 131, 596], "toolcas": [113, 126, 131, 166, 316, 318, 375, 382, 518, 519, 520, 521, 534, 535], "mocksensor_nopoli": [113, 131, 596, 597, 598, 599], "figur": [113, 183, 189, 197, 198, 212, 267, 1066, 1104], "specifi": [113, 192, 208, 279, 291, 325, 444, 512, 515, 594, 597, 602, 605, 654, 727, 744, 749, 800, 828, 835, 891, 984, 1016, 1029, 1033, 1069, 1081, 1135, 1150, 1158, 1163, 1180, 1199, 1201, 1228, 1231, 1236], "target_link_librari": [113, 219, 378, 380, 513, 514, 515, 518, 519, 521, 522, 537, 543, 544, 591, 627, 630, 636, 642, 645, 1079, 1084, 1085, 1247, 1250, 1252], "inter": [113, 192, 209, 215, 1068, 1264], "likewis": [113, 172, 266, 637, 667, 856, 876, 1015, 1031, 1092, 1213, 1250], "ledstripedisplay_nopoli": [113, 131, 596], "somewhat": [114, 211, 252, 384, 500, 525, 553, 764], "02131d959eaa": [114, 139, 591, 607, 608, 1033], "heat": [114, 166, 299, 547, 555, 598, 607, 937, 1212, 1213], "hwmon2": [114, 365, 934], "temp1_input": [114, 934, 937], "boilingpot": [114, 116], "knob": [114, 1136], "steer": 114, "desir": [114, 197, 260, 266, 276, 279, 382, 445, 449, 460, 602, 652, 654, 660, 735, 748, 982, 1030, 1032, 1215], "hardcod": [114, 193, 408, 626, 943, 947, 1174], "ledstripedisplai": [114, 124, 126, 129, 130], "unreason": 114, "breadboard": [115, 117, 937, 1262, 1264], "acrobat": [115, 117], "boilingpot_suit": 116, "status_report": 116, "percentage_displai": 116, "infrastructur": [117, 123, 131, 192, 505, 940], "pwm": [117, 122, 123, 131, 134, 307, 316, 928, 935, 984, 1039, 1264], "stripe": [117, 122, 126, 597], "acquisit": [118, 192, 218, 319, 320, 335, 338, 341, 342, 345, 640, 1164, 1175], "reusabl": [118, 373], "compon": [118, 159, 172, 251, 264, 356, 503, 526, 916, 1066, 1068, 1268], "dedic": [118, 192, 193, 223, 228, 277, 307, 310, 313, 386, 496, 512, 513, 520, 532, 869, 870, 934, 936, 937, 952, 1039, 1050, 1085, 1104, 1115, 1148, 1259, 1262], "constrain": [118, 783, 869, 1265, 1268], "decoupl": [118, 267, 548, 1067], "sink": [118, 120, 123, 319, 320, 335, 338, 341, 345, 382, 518, 519, 520, 521], "datalogg": [118, 134, 135, 320, 342, 513], "target_include_directori": [118, 377, 380, 382, 513, 515, 516, 518, 519, 534, 535, 536, 537, 546], "announc": [118, 411, 515, 516, 934, 936], "anyon": [118, 192, 640, 955, 1066], "node": [118, 173, 197, 202, 211, 382, 384, 484, 504, 515, 521, 535, 703, 940, 943, 947, 953, 961, 1100, 1224, 1241], "startlog": 118, "uint16_t": [118, 444], "unif": [118, 649, 807], "leftov": 118, "gettim": 118, "defer": [118, 192, 510, 982, 1004], "sinkfil": 118, "sinkmock": 118, "usabl": [118, 279, 325, 454, 553, 604, 763, 813, 1006, 1041, 1066], "sensorconfig": [118, 131, 346, 513], "sensorvalu": [118, 119, 121, 569, 583], "runtime_error": [118, 574, 575, 586, 588, 589, 590, 608, 825, 839], "logger_suit": 118, "loggerbasictest": 118, "sensor_values_suit": 118, "sensor_config_suit": 118, "duplicate_sensor": 118, "outlook": [118, 131, 134, 149, 154, 171, 870], "prebuilt": [118, 934], "order": [118, 184, 191, 197, 198, 202, 203, 211, 223, 224, 227, 229, 260, 266, 271, 281, 283, 286, 316, 333, 349, 386, 429, 455, 466, 488, 500, 541, 550, 569, 624, 626, 633, 635, 697, 737, 797, 801, 921, 928, 934, 937, 939, 955, 968, 984, 1021, 1066, 1070, 1083, 1096, 1112, 1132, 1181, 1191, 1273], "acquisitionloop": [118, 342, 346], "n_iter": 118, "doit": [118, 263, 384, 554, 790], "write_measur": [118, 342], "mockingsink": 118, "receiv": [118, 193, 211, 266, 269, 307, 336, 377, 436, 572, 662, 815, 891, 928, 931, 937, 943, 955, 976, 984, 1012, 1020, 1025, 1056, 1064, 1066, 1077, 1080, 1081, 1105, 1108, 1158, 1190, 1205, 1221], "xml": [118, 173, 338, 359, 1223, 1280], "yaml": 118, "ini": [118, 177, 197, 210, 412, 415, 513, 1241], "predecessor": [119, 121, 277, 285, 291, 335, 338], "sinklogg": [119, 121], "csvsink": [119, 342], "logfil": [119, 193, 230, 873, 925], "linksoben": 119, "rechtsunten": 119, "addmeasur": 119, "37": [119, 121, 202, 212, 213, 224, 225, 229, 234, 239, 241, 244, 247, 250, 252, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 400, 573, 739, 740, 743, 744, 745, 782, 784, 786, 788, 1120, 1212, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "rememb": [119, 159, 173, 197, 198, 212, 219, 229, 250, 377, 455, 488, 529, 558, 683, 684, 742, 813, 814, 846, 873, 888, 891, 910, 934, 980, 984, 1012, 1014, 1066, 1106, 1172, 1183], "auto": [119, 149, 162, 201, 208, 212, 218, 294, 356, 374, 375, 381, 383, 519, 550, 554, 579, 580, 584, 585, 588, 589, 590, 643, 651, 683, 706, 707, 709, 750, 753, 759, 764, 765, 768, 770, 771, 772, 774, 775, 776, 777, 778, 782, 784, 786, 787, 788, 790, 793, 794, 795, 797, 798, 803, 804, 805, 806, 812, 821, 824, 825, 835, 837, 839, 845, 846, 847, 848, 850, 984, 1080, 1258, 1264, 1271], "csvname": [119, 264, 309, 512], "valuenam": 119, "_config": 119, "sensor_valu": [119, 375], "getmeasur": 119, "rotat": [119, 193, 928, 1021], "backup": [119, 198, 231, 540, 859, 861, 1012, 1226], "boil": [120, 121, 124, 130, 520, 534, 535, 984], "pot": [120, 121, 124, 130, 520, 534, 535], "struct": [121, 159, 168, 174, 195, 218, 252, 253, 269, 370, 471, 476, 482, 483, 484, 488, 492, 494, 496, 498, 513, 550, 554, 572, 607, 608, 652, 653, 658, 660, 661, 662, 682, 724, 726, 733, 736, 737, 747, 750, 751, 753, 755, 756, 770, 773, 775, 776, 777, 778, 786, 787, 789, 790, 797, 800, 806, 814, 825, 848, 929, 931, 934, 943, 945, 948, 950, 952, 953, 955, 968, 972, 974, 976, 978, 980, 986, 987, 992, 994, 997, 1001, 1003, 1004, 1022, 1023, 1035, 1041, 1042, 1043, 1055, 1067, 1070, 1076, 1077, 1080, 1081, 1260], "sensor_config": 121, "getallmeasur": 121, "localhost": [121, 1219, 1224], "1883": [121, 1224], "port": [121, 146, 194, 199, 204, 263, 297, 306, 327, 328, 342, 371, 390, 422, 863, 864, 870, 919, 1006, 1011, 1015, 1033, 1066, 1166, 1220, 1224, 1236, 1264], "transport": [121, 215, 267, 269, 605, 825, 1205, 1224], "sensor1": [121, 301, 554, 782, 784, 786, 788, 789], "sensor2": [121, 554, 782, 784, 786, 788, 789], "burden": [121, 512, 664, 1110, 1242], "handmad": 121, "fedora": [121, 197, 203, 204, 220, 307, 359, 620, 887, 891, 930, 964, 985, 1085, 1086, 1095, 1096, 1099, 1224, 1248], "mosquitto_new": 121, "mosquitto_connect": 121, "mosquitto_destroi": 121, "prohibit": [121, 660], "wide": [121, 199, 203, 426, 427, 747, 862, 1012, 1066, 1077, 1083], "iot": [121, 123, 131, 267, 307], "broadcast": [121, 822, 929, 936, 1055, 1081], "flexibl": [121, 299, 382, 515, 547, 561, 568, 582, 693, 1051, 1067, 1083, 1084, 1085, 1101, 1102, 1153], "percentag": [122, 126, 504], "show_percentag": [122, 126], "wire": [122, 928, 1006, 1096, 1262], "connect": [122, 182, 192, 199, 211, 231, 243, 264, 307, 336, 401, 409, 410, 484, 825, 861, 925, 928, 929, 936, 937, 1014, 1019, 1025, 1039, 1066, 1217, 1219, 1224, 1236, 1259, 1270, 1272], "shown": [122, 197, 229, 395, 913, 1041, 1049, 1066, 1221], "src_demo": [122, 126], "logger": [123, 131, 135, 320, 338, 342, 345, 380, 381, 513, 518, 519, 520, 521, 534, 535, 751], "subscrib": [123, 267, 279], "jjj": [124, 166, 173, 237, 245, 267, 315, 320, 413, 939, 940, 941, 945, 953, 1041, 1046, 1049, 1276], "mockswitch": [124, 129, 130, 166], "libgpiodswitch": 124, "tkinter": 125, "stackoverflow": [125, 404, 409, 486], "2400262": 125, "simul": [125, 223, 373, 410, 411, 607], "random": [125, 131, 155, 171, 209, 211, 227, 239, 251, 263, 264, 267, 271, 273, 276, 279, 284, 286, 289, 311, 320, 353, 359, 365, 369, 375, 399, 446, 525, 534, 536, 553, 554, 560, 569, 595, 606, 616, 617, 618, 619, 621, 622, 623, 653, 844, 861, 937, 1016, 1035, 1073, 1108, 1120, 1143, 1215, 1224], "pca9685": [126, 131, 134, 307, 928, 935], "pwmchip0": [126, 928, 936], "pwm0": [126, 928, 936], "danc": [126, 198, 607, 1004, 1100], "phase": [126, 139, 239, 574, 588, 930, 1066, 1077, 1112], "cumbersom": [126, 194, 196, 230, 660, 683, 755, 833, 940, 1050, 1077, 1248], "percentagedisplai": 126, "round": [126, 192, 258, 263, 273, 283, 299, 304, 353, 355, 369, 547, 554, 557, 559, 568, 569, 582, 1070, 1271], "hood": [126, 194, 1083], "relationship": [126, 356, 375, 404, 562, 595, 637, 739, 751, 839, 1051, 1085, 1100, 1116, 1120, 1214], "pwmdisplai": 126, "pwm_control": 126, "channel": [126, 197, 212, 235, 245, 928, 936], "bit": [126, 130, 190, 191, 192, 194, 197, 199, 202, 203, 223, 224, 227, 234, 253, 264, 266, 267, 273, 297, 300, 306, 307, 310, 313, 327, 328, 346, 371, 372, 399, 404, 409, 415, 426, 432, 438, 444, 449, 456, 473, 488, 591, 605, 665, 724, 797, 826, 835, 846, 861, 886, 888, 890, 928, 929, 931, 936, 980, 984, 1003, 1006, 1029, 1067, 1084, 1086, 1094, 1104, 1144, 1208, 1221, 1258], "pwm5": 126, "visibl": [126, 130, 232, 252, 318, 390, 436, 438, 440, 464, 466, 497, 498, 528, 532, 536, 592, 734, 764, 824, 937, 955, 1041, 1077, 1149, 1178, 1217, 1268], "10000000": [126, 194, 266, 452, 1052, 1110, 1118], "set_percentag": 126, "duti": [126, 928, 936], "duty_cycl": [126, 928, 936], "unbuff": 126, "automat": [126, 130, 185, 194, 196, 198, 199, 241, 243, 247, 253, 260, 266, 276, 279, 283, 316, 318, 440, 449, 476, 493, 496, 500, 512, 561, 562, 651, 654, 783, 803, 815, 848, 934, 937, 940, 955, 984, 1032, 1105, 1158, 1166, 1170, 1268, 1274], "serv": [129, 173, 196, 198, 461, 1066, 1214, 1242, 1270], "ground": [129, 936, 937, 1066], "mocksensor": [129, 131, 166, 839], "upstream": [130, 164, 195, 198, 203, 961], "sysfsgpioswitch": 130, "wherea": [130, 528], "gpio20": 130, "voltag": [130, 928, 934], "constructur": 130, "proid": 130, "lifecycl": [130, 1271], "avg": [131, 279, 359, 493, 534, 536, 552, 569, 580, 599, 606, 782, 784, 786, 788], "inlin": [131, 212, 218, 230, 244, 260, 289, 292, 294, 316, 343, 347, 353, 382, 471, 493, 496, 637, 652, 665, 705, 735, 751, 764, 782, 784, 786, 787, 788, 789, 797, 809, 1104, 1184], "lifetim": [131, 193, 250, 252, 269, 281, 441, 483, 562, 655, 731, 815, 1103], "averagingsensor": [131, 552, 580], "scheme": [131, 279, 325, 342, 345, 663, 1103, 1107], "constantsensor": [131, 513, 552, 554, 560, 572, 573, 581, 593, 600, 606, 616, 617, 618, 619, 621, 622, 812, 844, 845, 846, 847, 1120, 1197], "meet": [131, 197, 199, 223, 373, 488, 824, 875, 1096, 1277], "liskow": [131, 558], "gcc": [131, 154, 193, 194, 219, 239, 241, 260, 266, 276, 279, 397, 423, 425, 449, 466, 470, 488, 491, 492, 494, 504, 505, 540, 541, 634, 681, 684, 747, 748, 762, 764, 801, 818, 824, 868, 888, 984, 985, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1050, 1053, 1084, 1086, 1096, 1098, 1099, 1100, 1101, 1102, 1134, 1250], "cycl": [131, 166, 253, 288, 510, 512, 770, 845, 928, 936, 1059, 1066], "todai": [131, 193, 243, 251, 267, 300, 317, 333, 346, 349, 413, 438, 1208, 1266, 1273], "minut": [131, 168, 192, 198, 199, 223, 227, 230, 267, 937, 1208, 1224], "suppos": [131, 139, 227, 283, 389, 523, 572, 870, 928, 961, 984, 1001, 1053, 1203, 1241], "deploi": [131, 159, 204, 231, 404, 409, 548, 857, 858, 936, 937, 974, 1010, 1012, 1016, 1066], "leddisplai": 131, "pwmcontrol": 131, "minor": [131, 199, 203, 260, 266, 276, 279, 309, 861, 943, 950], "tweak": [131, 1241], "standup": 131, "followup": [131, 274, 335, 338, 593, 1198], "bonu": 131, "donat": [131, 929], "relai": 131, "board": [131, 191, 193, 934, 984, 1262], "cooker": 131, "gapher": 131, "tape": 131, "coordin": [131, 604, 650, 652, 659, 1021], "fat": [131, 191, 195, 199, 267, 735, 751, 801, 861, 1220], "notic": [131, 191, 192, 194, 260, 266, 276, 279, 496, 522, 541, 593, 795, 871, 1052, 1054, 1066, 1116, 1230], "wikipedia": [131, 208, 269, 500, 662, 937, 1016, 1070, 1103, 1221], "summer": [132, 150, 153, 165, 403, 404, 410], "winter": [132, 134, 152], "gl\u00fchwein": 134, "trinken": [134, 180], "stece2022": [134, 135, 139, 142, 149, 151], "blob": [134, 135, 142, 173, 192, 307, 318, 380, 423, 626, 984], "deploy": [135, 150, 165, 192, 223, 227, 248, 334, 350, 376, 377, 378, 379, 380, 542, 545, 959, 1208, 1274], "wednesdai": [136, 223, 231, 313], "essenti": [136, 154, 194, 220, 269, 316, 318, 731, 1066], "syscal": [137, 1019, 1047], "o_rdonli": [138, 942, 1021, 1025, 1026, 1029, 1032, 1033, 1034, 1037, 1040, 1041, 1042, 1073, 1076, 1080, 1083], "o_excl": [138, 1025, 1026, 1034, 1041, 1043, 1076], "unchang": [139, 283, 660, 849, 1101], "green": [139, 166, 247, 283, 572, 607, 608, 667, 928], "x86_64": [139, 195, 197, 243, 250, 359, 401, 423, 449, 540, 607, 667, 957, 961, 1086, 1096], "omg": [139, 389, 470, 943, 1242], "sscanf": [139, 586], "errno": [139, 162, 251, 264, 266, 286, 321, 496, 961, 1026, 1050, 1080, 1081, 1099, 1107, 1236], "enoent": [139, 1083], "eacc": [139, 250], "convers": [139, 168, 230, 242, 249, 252, 253, 260, 265, 266, 269, 272, 275, 276, 281, 284, 287, 305, 316, 318, 322, 326, 332, 344, 348, 352, 354, 360, 366, 404, 427, 442, 456, 496, 512, 569, 631, 755, 849, 987, 1158, 1176, 1180, 1183, 1194, 1272], "milli": [139, 934, 937], "celsiu": [139, 426, 427, 549, 560, 591, 934, 937], "21340": 139, "34": [139, 202, 203, 210, 213, 224, 229, 234, 239, 241, 243, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 291, 292, 301, 304, 308, 309, 311, 315, 321, 325, 331, 336, 339, 343, 347, 353, 359, 365, 369, 398, 399, 400, 401, 554, 569, 573, 574, 575, 576, 588, 589, 590, 687, 688, 689, 690, 691, 696, 721, 888, 891, 913, 1120, 1139, 1212, 1213], "ordinari": [139, 426, 665, 894, 968, 976, 1039, 1130, 1137], "float": [139, 213, 224, 228, 230, 232, 234, 241, 242, 247, 250, 260, 263, 264, 266, 269, 271, 273, 276, 279, 284, 287, 301, 304, 309, 321, 325, 331, 342, 344, 347, 353, 359, 365, 369, 399, 400, 426, 427, 428, 432, 442, 444, 445, 449, 479, 488, 493, 512, 560, 569, 674, 675, 720, 747, 759, 934, 1071, 1081, 1120, 1138, 1153, 1160, 1166, 1255, 1260], "read_temperatur": 139, "somewher": [139, 159, 212, 231, 243, 250, 283, 295, 296, 389, 401, 471, 488, 490, 510, 554, 576, 643, 770, 1051, 1110, 1135, 1221], "overcom": [142, 194, 342, 404, 490], "signatur": [142, 202, 247, 279, 283, 304, 325, 652, 744, 750, 751, 800, 830, 1077], "sensor_get_temperatur": 142, "react": [142, 174, 213, 228, 230, 232, 333, 349, 492, 672, 934, 1020, 1107, 1273], "catch": [142, 213, 253, 269, 292, 318, 389, 415, 550, 557, 579, 673, 708, 720, 724, 747, 770, 778, 797, 825, 1081], "attent": [142, 192, 247, 263, 271, 434, 455, 457, 486, 505, 541, 684, 689, 744, 748, 803, 806, 813, 976, 1041, 1069, 1105, 1231, 1253], "ptr": [143, 375, 384, 483, 626, 745, 801, 812, 840, 844, 845, 846, 847], "arith": [143, 570, 642, 643, 678, 679, 680, 681, 686], "stl": [143, 145, 218, 413, 476, 609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 648, 649, 686, 690, 704, 716, 722, 801, 810, 1257, 1258, 1260], "demo2": 143, "err": [143, 162, 192, 230, 250, 315, 356, 373, 375, 383, 607, 703, 798, 800, 833, 846, 861, 929, 931, 934, 948, 978, 980, 1127, 1230], "lambda": [144, 218, 250, 251, 264, 266, 269, 281, 294, 301, 318, 321, 326, 343, 347, 359, 375, 381, 382, 512, 626, 690, 749, 751, 798, 806, 817, 822, 835, 837, 1103, 1257, 1258, 1260], "queue": [146, 193, 202, 203, 209, 215, 235, 236, 238, 267, 295, 296, 298, 307, 319, 320, 341, 342, 345, 355, 374, 375, 383, 385, 572, 823, 863, 864, 868, 978, 986, 1004, 1036, 1055, 1059, 1066, 1268, 1270, 1271], "enhanc": [146, 496, 863, 864], "against": [146, 194, 203, 243, 251, 263, 264, 387, 470, 512, 514, 522, 591, 607, 757, 848, 866, 957, 959, 964, 968, 976, 1031, 1086, 1089, 1090, 1092, 1102, 1116, 1174, 1241, 1266], "libc": [146, 203, 1083, 1086, 1089, 1090, 1100, 1101], "ss2024": 147, "livecod": [149, 375, 377], "pars": [149, 210, 247, 248, 258, 259, 261, 264, 270, 274, 279, 280, 282, 288, 291, 319, 324, 341, 345, 390, 395, 408, 532, 723, 1162, 1181, 1208, 1233], "findet": [150, 152, 165, 209], "bachelorstudium": [150, 152, 165], "elektronik": [150, 152, 165, 1264], "semesterwochenstunden": [150, 152, 165], "ect": [150, 152, 165], "lehrveranstaltungsleit": [150, 152, 165], "studierenden": [150, 152, 165], "vorkenntniss": [150, 152, 165, 1263, 1274], "lehrveranstaltungen": [150, 152, 165], "vorausgesetzt": [150, 152, 165, 1256, 1257, 1275], "informatik": [150, 152, 165, 405], "wissen": [150, 152, 165, 208, 422, 1255], "grundaufgaben": [150, 152, 165], "betriebssystemen": [150, 152, 165, 422, 1264], "bescheid": [150, 152, 165], "abstraktionen": [150, 152, 165], "programmierparadigmen": [150, 152, 165], "gesamtnot": [150, 152, 165], "praktischen": [150, 152, 165], "theoretischen": [150, 152, 165], "teil": [150, 152, 165, 180, 200, 209, 218, 226, 1255], "mehreren": [150, 165, 224, 240], "laborklausuren": [150, 152, 165], "klausur": [150, 152, 165], "besteht": [150, 152, 165], "m\u00f6glichkeit": [150, 152, 165, 208, 226, 1255], "hausaufgaben": [150, 152, 165], "sammeln": [150, 152, 165], "diesen": [150, 152, 422], "hinzugerechnet": [150, 152, 165], "ausfallsicherung": [150, 152, 165], "dienen": [150, 152, 165, 1255], "einzelergebniss": [150, 152, 165], "erfolgt": [150, 152, 165], "punkten": [150, 152, 165], "gesamtergebniss": [150, 152, 165], "durch": [150, 152, 162, 165, 200, 201, 208, 214, 218, 226, 234, 244, 276, 286, 369, 404, 409, 422, 920, 1255], "umrechnung": [150, 152, 165], "prozent": [150, 152, 165], "notwendigen": [150, 152, 165], "unterricht": [150, 152, 165], "klausuren": [150, 152, 165], "abgehalten": [150, 152, 165], "endnot": [150, 152, 165], "ergibt": [150, 152, 165], "erreichten": [150, 152, 165], "wobei": [150, 152, 165, 234], "folgend": [150, 152, 165, 224, 235, 280], "anwendung": [150, 152, 165], "kommt": [150, 152, 162, 165, 226, 241, 251, 254, 280, 1275, 1276], "91": [150, 152, 165, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1212, 1213], "81": [150, 152, 165, 202, 210, 212, 224, 234, 239, 241, 247, 250, 252, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1085, 1110, 1212, 1213], "90": [150, 152, 165, 195, 202, 210, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 512, 1212, 1213, 1241], "71": [150, 152, 165, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1084, 1085, 1212, 1213], "80": [150, 152, 165, 197, 202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 504, 597, 913, 1041, 1067, 1098, 1110, 1166, 1212, 1213, 1241], "befriedigend": [150, 152, 165], "gen\u00fcgend": [150, 152, 165], "einzuloggen": [150, 152, 165], "abschlussklausur": [150, 152, 165], "zugelassen": [150, 152, 165], "beschrieben": [150, 152, 165], "negativen": [150, 152, 165], "beurteilung": [150, 152, 165], "sowohl": [150, 152, 165, 1264], "laborklausur": [150, 152, 162, 165], "theoretisch": [150, 152, 165], "schriftlich": [150, 152, 165, 405], "wiederholt": [150, 152, 165], "kommissionel": [150, 152, 165], "wiederholung": [150, 152, 165, 218, 235, 242, 278], "immer": [150, 152, 162, 165, 200, 201, 214, 218, 224, 226, 239, 311, 1257], "gesamtpr\u00fcfung": [150, 152, 165], "vergleichbar": [150, 152, 165, 224], "antritt": [150, 152, 165], "bestanden": [150, 152, 165], "einmalig": [150, 152, 165], "positiv": [150, 152, 165], "absolvierten": [150, 152, 165], "innerhalb": [150, 152, 165, 1069], "zwei": [150, 152, 165, 178, 201, 210, 218, 224, 236, 239, 241, 244, 247, 260, 263, 271, 276, 279, 283, 289, 311, 331, 339, 343, 347, 369, 399, 614, 705, 706, 707, 708, 761, 919, 1255], "wochen": [150, 152, 165, 180], "bekanntgab": [150, 152, 165], "pr\u00fcfungsergebniss": [150, 152, 165], "melden": [150, 152, 165], "teilleistungen": [150, 152, 165], "erbringen": [150, 152, 165], "legt": [150, 152, 165], "fest": [150, 152, 165, 201], "welch": [150, 152, 165, 224, 264], "wiederholen": [150, 152, 165, 214, 422], "anmeldung": [150, 152, 165, 422], "erforderlich": [150, 152, 165], "gesamtzahl": [150, 152, 165], "pr\u00fcfungsversuch": [150, 152, 165], "angerechnet": [150, 152, 165], "jeder": [150, 152, 165, 200, 1255, 1256], "wiederholungspr\u00fcfung": [150, 152, 165], "z\u00e4hlt": [150, 152, 165], "zumindest": [150, 152, 165, 180, 200, 224, 1255], "besuchen": [150, 152, 165], "labor\u00fcbungen": [150, 152, 165, 405], "gilt": [150, 152, 165, 201, 214, 255, 422], "anwesenheitspflicht": [150, 152, 165], "ausnahmen": [150, 152, 165, 235], "begr\u00fcndeten": [150, 152, 165], "einzelf\u00e4llen": [150, 152, 165], "krankheit": [150, 152, 165], "m\u00f6glich": [150, 152, 165, 1257], "solchen": [150, 152, 165, 224, 234], "\u00fcbungen": [150, 152, 165, 218, 235, 236, 254, 422, 1255], "nachzuholen": [150, 152, 165], "ersatzleistungen": [150, 152, 165], "bjarn": [150, 152, 165, 649, 783], "stroustrup": [150, 152, 165, 649, 783], "4th": [150, 152, 165, 1066], "edit": [150, 152, 165, 168, 195, 197, 198, 238, 243, 279, 307, 372, 424, 604, 936, 957, 984, 1164, 1234, 1267], "brian": [150, 152, 165, 168, 405, 406, 424, 1066, 1255], "kernighan": [150, 152, 165, 168, 424, 1255, 1256], "denni": [150, 152, 165, 168, 424, 464, 682, 1255], "ritchi": [150, 152, 165, 168, 424, 464, 682, 1255, 1256], "bl\u00f6cken": [150, 152, 165], "crossdevelop": [150, 152, 165], "tats\u00e4chlich": [150, 152, 165], "vorgetragen": [150, 152, 165, 226], "stoff": [150, 152, 165, 254], "dort": [150, 152, 165, 178, 201, 208, 210, 218, 234, 235, 244, 422, 1276], "tagesaktuel": [150, 152, 165], "verf\u00fcgung": [150, 152, 165, 224, 1257], "gestellt": [150, 152, 165, 214, 224, 422, 1257], "gemeinsamen": 152, "prokjekt": 152, "semster": 154, "533": [154, 266, 359, 369], "gpio533": 154, "movi": [154, 384], "desk": 154, "auditorium": 154, "crazi": 154, "teinik": [154, 168], "virtualbox": [154, 168, 243, 870], "vm": [154, 199, 407], "guest": 154, "chose": [154, 192, 203, 269, 735, 915, 1016, 1096], "gid": [155, 157, 271, 279, 347, 365, 724, 797, 857, 858, 866, 868, 876, 1016, 1031, 1187], "104": [155, 210, 212, 224, 234, 239, 241, 247, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1166], "unconfined_u": 155, "unconfined_r": 155, "unconfined_t": 155, "s0": [155, 797], "c0": [155, 202], "c1023": 155, "drwxr": [155, 210, 857, 858, 876, 913, 928, 934, 936, 937, 1096, 1098], "xr": [155, 210, 545, 857, 858, 876, 878, 879, 887, 888, 913, 928, 934, 936, 937, 1083, 1086, 1096, 1098, 1099, 1135], "4300": [155, 266], "53": [155, 195, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 411, 574, 575, 838, 913, 934, 964, 1083, 1096, 1212, 1213], "4908": [155, 266], "jan": [155, 247, 276, 279, 395, 396, 413, 445, 783, 887, 913, 948, 1039, 1083, 1098, 1135], "dr": [155, 171, 173, 197, 1086, 1099], "398": [155, 266, 273, 325, 359, 369], "mar": [155, 210, 279, 445, 857, 858, 861, 876, 888, 910, 913, 916, 1007, 1021, 1031, 1070, 1083, 1096], "proc": [155, 194, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 947, 964, 966, 968, 984, 985, 1025, 1051, 1076, 1080, 1269], "278": [155, 263, 266, 271, 273, 279, 286, 304, 311, 325, 331, 343, 353, 359, 365], "57": [155, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 544, 546, 913, 934, 1016, 1084, 1085, 1212], "2931": 155, "1110": [155, 266], "sshd": [155, 231, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 862, 867, 869, 922, 1006, 1016], "336": [155, 266, 273, 279, 325, 353, 359, 365, 544], "nov": [155, 797, 887, 913, 934, 974, 1041, 1098, 1134, 1164], "disk": [155, 191, 192, 195, 199, 204, 499, 867, 868, 888, 918, 1020, 1021, 1046, 1101, 1158], "brw": 155, "259": [155, 263, 266, 271, 273, 276, 279, 286, 304, 311, 321, 325, 331, 353, 359, 365, 369], "nvme0n1": 155, "nvme0n1p1": 155, "nvme0n1p2": 155, "nvme0n1p3": 155, "uart": [155, 192, 492, 863, 864, 1262], "dialout": [155, 868, 1031], "64": [155, 194, 197, 202, 224, 229, 234, 239, 241, 244, 247, 250, 252, 253, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 432, 444, 449, 473, 488, 494, 497, 545, 764, 980, 1037, 1040, 1073, 1080, 1083, 1086, 1101, 1166, 1212], "ttys0": [155, 192], "65": [155, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 731, 1071, 1212, 1213], "ttys1": 155, "pseudo": [155, 194, 211], "bootload": [155, 187, 191, 202, 506, 867, 934], "stece2023": [155, 158, 159, 161, 163, 164], "1001": [157, 279, 286, 289, 705, 706, 707, 708, 876, 888, 920, 1016], "1002": [157, 266, 705, 706, 707, 708, 876], "tune": [157, 193, 194, 203, 500, 824, 857, 858, 881, 883, 885, 892, 1008, 1136], "ue": [158, 164, 410], "strongli": [159, 199, 260, 266, 276, 279, 310, 313, 356, 381, 606, 703, 798, 1066, 1258], "stage": [159, 191, 252, 376, 379, 1066, 1215], "frobozz": 159, "foobar": [159, 343], "pop": [159, 197, 209, 271, 273, 286, 301, 311, 321, 331, 343, 359, 365, 369, 471, 681, 684, 822, 1130, 1155], "factor": [159, 512, 952, 953, 984], "auth": 159, "url": [159, 196, 198, 218, 605, 1106, 1164], "prefil": 159, "merg": [159, 161, 252, 986, 1069, 1156], "pushbutton": [159, 161], "lightbarri": [159, 161], "motor": [159, 161, 413, 935], "dai": [159, 193, 194, 196, 202, 205, 207, 210, 211, 215, 229, 235, 245, 248, 254, 256, 265, 270, 279, 280, 282, 285, 288, 303, 311, 315, 338, 410, 412, 413, 421, 511, 522, 523, 542, 548, 569, 739, 741, 743, 744, 764, 799, 887, 1001, 1020, 1066, 1067, 1138, 1147, 1171, 1207, 1214, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1281, 1282], "procedur": [159, 195, 203, 436, 837, 928, 1166], "outlin": [159, 1263], "earlier": [159, 174, 382, 652], "concret": [160, 161, 171, 173, 219, 227, 253, 316, 381, 382, 529, 548, 554, 560, 575, 637, 782, 798, 801, 822, 1120, 1215], "recent": [161, 191, 194, 199, 213, 221, 260, 266, 276, 279, 289, 309, 311, 325, 347, 424, 519, 910, 984, 1105, 1106, 1107, 1112, 1120, 1121, 1127, 1128, 1149, 1150, 1154, 1156, 1159, 1160, 1221, 1228, 1230, 1242], "fetch": [161, 170, 193, 984, 1051, 1080], "roedel": [161, 166, 195, 605, 608, 1085, 1099, 1196, 1243], "locat": [161, 193, 198, 203, 223, 260, 266, 276, 279, 283, 333, 349, 422, 473, 486, 494, 500, 548, 570, 662, 682, 813, 845, 934, 936, 937, 959, 984, 1025, 1052, 1077, 1084, 1105, 1212, 1228, 1273], "anyth": [161, 166, 194, 198, 199, 223, 250, 266, 270, 293, 315, 316, 411, 510, 515, 537, 562, 597, 671, 734, 743, 748, 793, 794, 795, 815, 928, 1008, 1016, 1020, 1026, 1064, 1100, 1105, 1106, 1107, 1150, 1158, 1213, 1230, 1234, 1262], "get_direct": 161, "barrier": [161, 194, 486, 825, 845, 968], "slight": 161, "complic": [161, 192, 193, 202, 230, 273, 283, 442, 461, 500, 525, 537, 675, 759, 813, 826, 929, 937, 943, 980, 1080, 1083, 1112, 1224, 1266, 1273], "propos": [161, 496, 594, 1066], "lightbarriermock": 161, "add_execut": [161, 219, 380, 513, 537, 540, 544, 591, 627, 630, 633, 636, 639, 642, 645, 732, 1072, 1079, 1084, 1085, 1247, 1250, 1252], "uncom": [161, 197, 575, 576, 934], "finish": [162, 223, 242, 373, 817, 994, 1119], "gebaut": 1275, "rebas": 162, "mlinar": 162, "brace": [162, 272, 279, 325, 381, 382, 383, 387, 432, 455, 458, 470, 550, 643, 652, 683, 685, 690, 703, 705, 798, 800, 834, 1136, 1139], "genauer": 224, "nix": [162, 210, 211, 224, 242, 250, 271, 273, 276, 301, 321, 353, 359, 399, 608], "timespec": [162, 825, 1055, 1067, 1077], "wrapper": [162, 250, 279, 289, 294, 331, 353, 553, 753, 770, 801, 1019, 1077, 1106, 1127, 1210], "wegen": [162, 234], "gpiod_line_event_wait": 162, "arithmetik": 162, "debounc": 162, "zuerst": [218, 1276], "potschert": [224, 236, 239, 242, 266, 273, 286, 353, 365], "manipulationen": [], "wo": [170, 200, 209, 210, 218, 224, 226, 422, 1255, 1256], "braucht": [200, 201], "reinreichen": 162, "einfach": [162, 180, 210, 224, 235, 239, 321, 1256, 1257, 1276], "testen": [162, 1264, 1276], "kalt": 162, "verschieben": [404, 409], "struktur": [], "zeichnen": [], "integrationstest": 162, "nachdem": [162, 224, 234], "wir": [162, 178, 209, 214, 218, 224, 226, 234, 235, 240, 254, 273, 279, 286, 339, 422, 709, 1264], "jetzt": [162, 200, 210, 214, 224, 234, 241, 244, 254, 283, 339, 359, 369], "haben": [162, 200, 201, 209, 214, 218, 226, 234, 235, 247, 422, 709, 1255, 1256, 1257], "ziemlich": [162, 422], "weit": [162, 1255], "rennt": [162, 280], "sp\u00e4testen": 162, "da": [162, 178, 180, 200, 201, 208, 209, 210, 211, 218, 226, 230, 234, 235, 239, 242, 244, 245, 247, 251, 254, 255, 256, 260, 263, 271, 273, 276, 279, 280, 284, 292, 294, 301, 311, 321, 325, 343, 346, 353, 355, 359, 369, 396, 399, 404, 409, 422, 920, 1255, 1256, 1257, 1264, 1276], "sowieso": 162, "derweil": 162, "vorangetrieben": 162, "linuxpit": 162, "2025": [164, 175, 421, 764], "tour": [164, 200, 258, 295, 296, 298, 318, 355, 356, 374, 375, 381, 382, 383, 421, 422, 594, 799, 1258, 1260, 1279], "regul\u00e4ren": 165, "thermostat": [166, 598], "certain": [166, 192, 223, 230, 373, 382, 491, 496, 574, 597, 598, 770, 835, 861, 875, 980, 1055, 1066, 1083, 1132], "threshold": [166, 598], "rise": [166, 197, 598, 966, 1039, 1040, 1067], "drive": [166, 182, 309, 490, 598, 936, 1025, 1215], "nop_when_within_rang": [166, 598], "hysteresis_suit": [166, 598], "hyst": [166, 598], "within": [166, 194, 269, 279, 325, 422, 597, 598, 602, 607, 652, 827, 928, 948, 1066, 1119, 1136, 1148, 1232], "falls_below_rang": [166, 598], "set_temperatur": [166, 597, 598, 599, 601], "ON": [166, 515, 516, 529, 543, 545, 597, 598, 603, 1067], "rises_above_rang": [166, 598], "35": [166, 202, 213, 224, 231, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 400, 569, 598, 704, 734, 736, 813, 1212], "rises_above_range_when_on": [166, 598], "273": [166, 263, 266, 271, 273, 279, 283, 304, 311, 325, 331, 353, 359, 365, 369, 513, 598, 616, 617, 618, 619, 621, 622, 784, 786, 788, 1120], "placehold": [166, 194, 576, 608, 749, 751, 934, 937], "recreat": [166, 903, 955, 1100], "dtle": [166, 1250], "cwd": [166, 359, 605, 797, 856, 868, 894, 913, 915, 916, 920, 1085], "gtest_main": [166, 296, 554, 604, 606, 607, 627, 630, 642, 667, 844, 845, 1247, 1252], "global": [166, 194, 195, 212, 218, 223, 227, 232, 236, 239, 252, 260, 263, 266, 269, 270, 276, 279, 282, 293, 296, 304, 316, 319, 321, 325, 330, 334, 341, 345, 346, 350, 351, 352, 357, 358, 363, 364, 365, 367, 368, 376, 379, 399, 404, 449, 466, 472, 493, 496, 503, 516, 522, 523, 529, 532, 535, 554, 561, 570, 604, 605, 606, 607, 648, 655, 667, 762, 804, 818, 821, 844, 845, 937, 953, 1046, 1050, 1053, 1057, 1058, 1060, 1066, 1083, 1105, 1108, 1116, 1118, 1151, 1166, 1208, 1236, 1244, 1248], "tear": [166, 192, 296, 554, 604, 605, 606, 607, 667, 845, 953, 1083, 1248], "ran": [166, 224, 296, 346, 386, 543, 554, 604, 605, 606, 607, 667, 845, 1066, 1101, 1248], "These": [166, 190, 194, 196, 197, 260, 266, 276, 279, 541, 548, 934, 957, 984, 1066, 1085, 1263], "swap": [168, 194, 229, 235, 245, 247, 254, 266, 269, 270, 282, 287, 288, 297, 306, 307, 327, 328, 369, 371, 478, 626, 872, 873, 970, 1041, 1046, 1047, 1138, 1171], "egon": 168, "ansi": [168, 424], "prentic": 168, "hall": 168, "willian": 168, "shott": 168, "2nd": [168, 835, 1250], "1st": [168, 284, 1250], "starch": 168, "amazon": 168, "laboratori": 169, "stece": 169, "dir": [170, 224, 243, 251, 264, 273, 276, 283, 301, 304, 324, 325, 343, 365, 369, 389, 397, 477, 512, 540, 544, 546, 876, 1084, 1085, 1098, 1121, 1236, 1243], "jf": [170, 171, 173, 199, 235, 236, 294, 311, 404, 409, 572, 586, 959, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "aon": 170, "biz": 170, "svn": [170, 253], "lokalen": 170, "myremot": 170, "orig": [170, 195, 241, 801], "stia": 170, "histori": [171, 173, 215, 251, 269, 300, 346, 449, 755, 861, 868, 920, 943, 986, 1208, 1214, 1220, 1261, 1267, 1273], "irrig": 171, "proxi": [171, 173, 299, 317, 319, 320, 341, 345, 381, 410, 547, 555, 556, 557, 568, 582, 1236, 1259], "naiv": [171, 173, 192, 211, 266, 269, 333, 349, 386, 488, 515, 529, 550, 642, 644, 658, 795, 801, 844, 992, 1050, 1071, 1082, 1113, 1114, 1215, 1220, 1253, 1273], "machineri": [171, 173, 198, 319, 320, 341, 345, 764], "statist": [171, 173, 248, 261, 274, 283, 288, 291, 324, 330, 504, 1071, 1193, 1208, 1213, 1241], "signal": [171, 173, 182, 216, 318, 422, 504, 825, 868, 928, 936, 955, 976, 1036, 1041, 1050, 1058, 1067, 1068, 1073, 1267, 1268, 1269], "spec": [171, 195, 279, 724, 957, 980], "gotcha": [171, 415, 419, 1016, 1065], "broker": [172, 174, 263, 267, 279, 286, 289, 304, 311, 321, 325, 342, 347, 353, 359, 869, 1203], "interprocess": [172, 1066, 1268, 1272], "gnome": [172, 173, 174, 185, 192, 197, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 506, 866, 922, 984, 1068], "kde": 172, "incept": 172, "uncomfort": [172, 1012], "tailor": [172, 602], "minim": [172, 192, 194, 203, 211, 494, 500, 672, 913, 1066, 1096, 1107], "probabl": [172, 192, 198, 223, 283, 313, 387, 396, 515, 523, 529, 538, 651, 748, 810, 891, 937, 984, 996, 1066, 1067, 1144, 1158, 1221, 1224, 1269], "howev": [172, 192, 202, 220, 283, 549, 928, 957, 959, 1039, 1050, 1066], "pointless": [172, 175, 304, 318, 325, 342, 346, 355, 492, 659, 1042], "monitor": [173, 174, 185, 195, 208], "poetter": [173, 174], "quirki": 173, "glib": [173, 174], "gitlab": [173, 174, 404, 523], "gdbu": [173, 174], "libsoup": [173, 174], "gio": [173, 174], "lew21": 173, "pydbu": [173, 174], "openh": [173, 209, 250], "irrigationservic": [173, 174], "irrigationsystem": [173, 174], "dbusirrigationsystem": [173, 174], "challeng": [173, 1086], "expos": [173, 174, 279, 325, 640, 861, 928, 936, 937, 1039], "bicapit": 173, "some_method": 173, "somemethod": 173, "socket": [173, 192, 209, 230, 300, 797, 863, 864, 867, 1020, 1024, 1025, 1077, 1081, 1236, 1262, 1268, 1270, 1272], "magic": [173, 194, 196, 359, 477, 512, 528, 770, 801, 848, 943, 984, 1112, 1241], "traffic": [173, 929, 1066], "routin": [173, 506, 512, 637, 797, 976, 982, 987, 1023, 1069, 1102, 1203, 1205, 1272], "busnam": 173, "ifac": [173, 208, 575, 589, 751], "watchdog": [173, 1066], "mpri": 174, "spotifi": 174, "prev": [174, 211, 974], "examin": [174, 192, 194, 496, 525, 665, 788, 845, 891, 1061], "grep": [174, 193, 197, 203, 231, 233, 243, 297, 306, 327, 328, 371, 372, 762, 764, 853, 866, 868, 873, 875, 887, 919, 923, 925, 934, 937, 1003, 1006, 1051, 1061, 1067, 1224, 1262, 1264, 1267], "mediaplayer2": 174, "player": 174, "paus": [174, 190, 194, 1067, 1080], "quit": [174, 192, 194, 197, 318, 471, 486, 488, 734, 891, 892, 924, 928, 936, 985, 1056, 1066, 1080, 1096], "mprisplay": 174, "mprisapp": 174, "spotify_player_cli": 174, "sd_bus_open_us": 174, "service_nam": 174, "object_path": 174, "playpaus": 174, "ppoll": 174, "dbusinterfacecommon": 174, "dbus_method": 174, "interface_nam": 174, "rais": [174, 213, 214, 228, 230, 232, 250, 251, 260, 264, 266, 267, 271, 273, 276, 277, 279, 283, 291, 292, 325, 342, 389, 415, 1105, 1112, 1118, 1128, 1154, 1156, 1228, 1230], "notimplementederror": [174, 304, 1107], "spotify_app_cli": 174, "967192": 174, "backdoor": 174, "bus1": 174, "libdbu": 174, "conveni": [174, 356, 435, 544, 724, 856, 937, 1080, 1101, 1213], "water": [174, 197, 315], "moistur": 174, "bean": 174, "stub": [174, 376, 379, 1097], "dbus_interfac": 174, "dbusirrig": 174, "irrigation_system": 174, "new_proxi": 174, "getirrigatornam": 174, "pprint": [174, 255, 257, 264, 266, 301, 1108, 1216], "item": [174, 192, 211, 213, 224, 229, 234, 239, 241, 244, 247, 250, 251, 255, 256, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 291, 295, 296, 298, 301, 304, 309, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 488, 492, 494, 525, 540, 724, 796, 834, 1043, 1077, 1112, 1113, 1114, 1120, 1146, 1153, 1156, 1158, 1197, 1241], "moisture_valu": 174, "moisturevalu": 174, "switch_stat": 174, "switchstat": 174, "switchstatechang": 174, "coroutin": [174, 260, 266, 276, 279, 355, 385, 772, 773, 775, 776, 777, 778, 798, 1208], "status_loop": 174, "report_switches_chang": 174, "expens": [174, 487, 494, 650, 662, 665, 810, 815, 834, 835, 845, 989, 1050, 1258], "callback": [174, 192, 227, 260, 266, 276, 279, 413, 770, 994, 1003, 1224], "trampolin": [174, 751], "enqueu": [174, 824], "emitt": 174, "irrigationd": 174, "mimic": 174, "ones": [174, 191, 213, 215, 279, 317, 325, 432, 500, 936, 937, 1066, 1141, 1225], "closer": [174, 317], "aiomqtt": 174, "aiohttp": 174, "playground": 175, "i2": [175, 182, 187, 286, 321], "kontron": [175, 189], "smarc": [175, 189], "Its": [175, 192, 194, 197, 384, 604, 921, 1068], "todo": [175, 232, 267, 295, 296, 417, 418, 606, 783, 800, 851, 1045, 1046, 1047], "kajak": 175, "donau": 175, "themenmodul": 176, "8320": [176, 266], "basiswissen": [176, 422], "10735": 176, "9660": [176, 266], "echtzeit": 176, "6810": [176, 266], "10224": [176, 266], "kernelprogrammierung": [176, 422], "10223": 176, "systemprogrammierung": [176, 1255], "8321": 176, "3586": [176, 266], "entwurfsmust": 176, "4459": 176, "kotlin": 176, "typescript": 176, "rust": [176, 838, 1083], "8675": 176, "8674": [176, 266], "3550": [176, 266], "oop": [176, 195, 741, 1257], "\u00e4": 176, "9976": [176, 266], "aufbauwissen": 176, "8314": [176, 266], "4155": 176, "testgetrieben": [176, 218], "8715": 176, "testframework": 176, "gmock": [176, 220, 1248], "mstest": 176, "cppunit": 176, "6152": [176, 266], "versionsverwaltung": 176, "8711": 176, "proper": [177, 192, 219, 486, 959, 984, 1031, 1127], "manifest": [177, 1066, 1096, 1244], "cfg": [177, 189, 359], "author_email": 177, "classifi": [177, 1164, 1210], "tox": 177, "travi": 177, "yml": 177, "upgrad": [177, 185, 210, 1236, 1243], "zip": [177, 189, 251, 271, 277, 291, 304, 354, 359, 891, 897, 913], "zipfil": [177, 251], "99": [177, 202, 210, 224, 234, 241, 247, 250, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 504, 1070, 1147, 1183, 1212], "999": [177, 263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359], "whl": [177, 1164, 1236], "uninstal": [177, 521, 543, 1236, 1241], "pypa": 177, "sampleproject": 177, "steig": [178, 200], "normalweg": 178, "w\u00e4r": 178, "umst\u00e4nden": [178, 1257], "renat": 178, "beschreibung": [178, 235, 237, 245, 248, 251, 252, 254, 270, 282, 920], "bergfex": 178, "reden": 178, "sie": [178, 200, 210, 214, 271, 276, 343, 399, 405, 422, 852, 919, 1255, 1256, 1276], "tagen": 178, "w\u00fcrden": 178, "denk": [178, 200, 255], "beiden": [178, 210, 224, 271, 279, 286], "h\u00fctten": [178, 201], "schlafen": 178, "hochk\u00f6nig": 179, "prankergass": [179, 250, 271, 903], "kastl": 179, "strohwitw": 180, "silvest": 180, "daheim": 180, "sitzt": 180, "lose": [180, 192, 242, 253, 273, 276, 279, 289, 353, 359, 365, 1143], "st\u00fccke": [180, 214, 218], "schubladenf\u00fchrungen": 180, "montieren": 180, "schleifen": [180, 236, 294], "zusammenstecken": 180, "schauen": [180, 201, 235], "weitergeht": 180, "ladenreih": 180, "klein": [180, 201, 209, 210, 214, 1255, 1256], "laden": [180, 943], "breit": [180, 1255], "tief": [180, 422], "gleich": [180, 200, 210, 224, 234, 235, 239, 241, 273, 321, 353, 359, 369, 399], "abteilungen": 180, "zustand": [180, 422], "blenden": 180, "teilen": [180, 208], "\u00fcberlappung": 180, "kastlt\u00fcren": 180, "ladenblenden": 180, "gross": [180, 283], "k\u00fcrzer": [180, 224], "schr\u00e4g": 180, "oberen": 180, "holzkitt": 180, "kaufen": 180, "abbauen": 180, "auflegen": 180, "zukitten": 180, "ma\u00dfen": 180, "12mm": 180, "9mm": 180, "boden": 180, "15mm": 180, "ober": 180, "nut": 180, "falz": 180, "verbindungen": 180, "fuer": [180, 210, 271, 276, 283], "hornbach": 180, "platten": 180, "250x122": 180, "hamma": [180, 224], "multiplexplatt": 180, "platt": 180, "unbehandelt": 180, "holz": 180, "2500": [180, 266], "1220": [180, 266], "10578442": 180, "waer": [180, 255, 331], "lieferzeit": 180, "deppert": [180, 234, 247, 399], "sperrholz": 180, "kleinen": [180, 209], "vorher": 180, "probieren": 180, "gescheit": 180, "schneiden": 180, "fr\u00e4sen": 180, "zusammensetzen": 180, "losem": 180, "kastenboden": 180, "oberem": 180, "abschlussboden": 180, "ob": [180, 201, 208, 234, 1257, 1276], "wurscht": [180, 239, 279, 353, 920], "werkzeug": [180, 294, 1255, 1264], "kl": 180, "klemmtisch": 180, "tauchs\u00e4g": 180, "schien": 180, "schleifmaschin": 180, "hobel": 180, "staubsaug": 180, "zwingen": 180, "akkuschraub": 180, "schrauben": 180, "filzpatscherln": 180, "kontaktkleb": 180, "silikon": 180, "wagoklemmen": 180, "kabel": [180, 279, 283], "ecksteck": 180, "kabelhaken": 180, "fraeser": 180, "spachtel": 180, "obi": 180, "steckdosen": 180, "aufputz": 180, "5x16": 180, "3x16": 180, "raufschleppen": 180, "draufhauen": 180, "steht": [180, 201, 224, 234, 235, 1275], "abschlussbi": 180, "buildenviron": 181, "resolve_refer": 181, "builder": [181, 263, 374, 381, 1166], "get_and_resolve_doctre": 181, "apply_post_transform": 181, "addnod": 181, "docstr": [181, 247, 250, 260, 266, 272, 284, 287, 290, 312, 344, 366, 404, 1136], "doctre": 181, "devicetre": [182, 936], "audio_mck": 182, "i2s0_ck": 182, "i2s0_lrck": 182, "i2s0_sdout": 182, "alsa": [182, 195, 359], "tlv320dac3203irg": 182, "tlv320dac3203": 182, "suggest": [182, 191, 192, 194, 196, 198, 199, 215, 223, 230, 231, 232, 233, 296, 298, 316, 318, 464, 1132, 1160, 1241], "tlv320aic32x4": 182, "compat": [182, 197, 212, 315, 381, 382, 659, 759, 797, 849, 940, 959, 1086, 1133, 1156, 1221, 1236, 1237], "tlv320aic31xxsw": 182, "tlv320aic31xx": 182, "cdimag": 183, "amd64": [183, 243, 401, 444], "iso": [183, 251, 269, 270, 286, 289, 309, 331, 343, 347, 424, 512, 649, 664, 853], "netinst": 183, "qcow2": 183, "virtualdebian": 183, "30g": [183, 199], "kvm": [183, 195], "hda": 183, "cdrom": 183, "2048": [183, 202, 266], "nic": 183, "sic": [183, 203], "deliveri": [184, 188, 192, 1066, 1079, 1082], "dirti": [185, 194, 205, 207, 333, 334, 349, 350, 378, 382, 422, 470, 554, 1260, 1261, 1274, 1275], "forget": [185, 192, 193, 194, 267, 435, 438, 483, 512, 536, 537, 724, 1217, 1222, 1242, 1258], "graphic": [185, 505, 866, 867, 936], "plug": [185, 193, 195, 555], "4k": [185, 194, 1049, 1067, 1076], "dual": [185, 187, 384], "applianc": [185, 194, 506], "x11": [185, 359], "wayland": [185, 197], "benchmark": 185, "glxgear": 185, "su": [185, 1098], "pect": 185, "shot": [187, 199, 386, 464, 797, 800, 825], "dac": 187, "bringup": 187, "massacr": [187, 210, 269, 404, 464, 470, 496, 514, 520, 521, 534, 800, 1115], "distro": [187, 543, 1139, 1250], "oldconfig": [187, 193, 957, 964, 984, 985], "qemu": [187, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1086], "grub": [187, 202, 359], "stabl": [187, 199, 203, 510, 870, 961, 984, 1067, 1100, 1102, 1164, 1237], "yoctoproject": 189, "v5": [189, 195], "bsp_smarc": 189, "sxal4_smarc": 189, "sxal_r1": 189, "0_combin": 189, "sxal4_5": 189, "sxal4": 189, "inc": [189, 195, 315, 487, 537, 546, 747, 818, 824, 1053, 1118], "filesextrapaths_prepend": 189, "thisdir": 189, "linux_vers": 189, "45": [189, 197, 200, 202, 213, 223, 224, 227, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 404, 409, 597, 687, 688, 689, 690, 691, 696, 797, 1208, 1212], "linux_version_extens": 189, "linux_kernel_typ": 189, "kbranch": 189, "kmeta": 189, "lic_files_chksum": 189, "md5": 189, "bbea815ee2795b2f4230826c0c6b8814": 189, "srcrev_machine_pn": 189, "3604bc07c035939266d78d65084c6cd54ffc6d56": 189, "srcrev_meta_pn": 189, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 189, "src_uri": 189, "bareclon": 189, "cach": [189, 193, 318, 321, 359, 486, 500, 505, 506, 531, 683, 700, 783, 913, 1049, 1068, 1083, 1236, 1243, 1256], "destsuffix": 189, "scc": 189, "pv": 189, "srcpv": 189, "include_patch": 189, "patch": [189, 203, 204, 1066, 1069, 1098], "compatible_machin": 189, "obs studio": 190, "video edit": 190, "screen record": 190, "offici": [190, 227, 228, 231, 232, 233, 238, 648, 1098, 1276], "jonathan": [190, 405, 406, 783, 848], "thoma": 190, "himself": [190, 937], "meanwhil": 190, "freez": [190, 1236, 1244], "photo": 190, "length": [190, 247, 250, 260, 266, 276, 279, 308, 315, 325, 347, 353, 365, 512, 525, 532, 604, 655, 666, 720, 929, 931, 955, 968, 980, 1025, 1035, 1042, 1047, 1213, 1221, 1225, 1232], "grab": [190, 928, 936], "friend": [191, 192, 238, 259, 295, 296, 298, 307, 318, 355, 356, 374, 375, 383, 385, 386, 506, 589, 665, 823, 824, 825, 928, 955, 976, 1250], "alia": [191, 196, 243, 269, 482, 522, 891, 892, 1098], "rm": [191, 193, 197, 198, 231, 233, 404, 409, 1006, 1016, 1041, 1243], "rf": [191, 193, 891, 901, 1243], "creativ": [191, 268], "variat": [191, 377, 831, 873, 989], "thereof": [191, 307, 315, 553, 669, 1124], "happili": [191, 192, 269, 496, 664], "stage3": 191, "decad": [191, 199, 215, 934, 937, 984, 1016, 1106, 1259], "busybox": [191, 192], "initramf": [191, 855], "resid": [191, 194, 1066], "flash": [191, 194, 199, 506, 869, 928, 1067], "eras": [191, 585, 643, 703, 793, 847, 888], "hit": [191, 193, 194, 212, 215, 253, 797, 891, 921, 924, 1047, 1066, 1236], "sole": 191, "liter": [191, 206, 213, 229, 234, 241, 251, 259, 260, 264, 271, 276, 279, 283, 286, 295, 296, 304, 311, 325, 343, 347, 353, 355, 359, 365, 396, 400, 404, 430, 438, 445, 494, 529, 569, 584, 604, 762, 800, 815, 984, 1081, 1139, 1152, 1156], "told": [191, 194, 522, 575, 928, 1066], "reboot": [191, 193, 209, 892, 934, 936, 937, 984], "fatal": [191, 218, 517, 519, 520, 536, 546, 984, 1249], "saw": [191, 194, 223, 252, 386, 415, 451, 652, 1029, 1031, 1066, 1100], "115200": 191, "8n1": 191, "remaind": [191, 192, 195, 197, 219, 223, 307, 928, 936, 961, 984, 1066, 1085], "recov": [191, 210, 422, 1066], "fauxpa": 191, "explan": [191, 194, 219, 223, 230, 253, 284, 344, 404, 504, 537, 626, 780, 861, 928, 936, 984, 1031, 1071, 1076, 1211, 1214, 1243], "research": [191, 192, 304, 1066, 1214], "annot": [191, 251, 300, 340, 505, 649, 1208, 1278], "beagl": 191, "omap": 191, "rom": 191, "processor": [191, 192, 250, 251, 264, 444, 488, 700, 751, 984, 989, 1050, 1066, 1068, 1083, 1262], "sram": 191, "dram": 191, "latter": [191, 194, 1067, 1108, 1148, 1215], "abil": [191, 800, 1066], "wrote": [191, 194, 412, 801, 824, 1066, 1258], "revis": [191, 195, 198, 294, 649, 1258], "slightli": [191, 203, 223, 252, 269, 270, 626, 1136, 1263], "season": 191, "c4": [191, 202], "valuabl": [191, 504, 857, 858, 1100, 1102, 1108], "c3": [191, 195, 202], "angstrom": 191, "mlo": 191, "brows": [191, 385, 870, 936], "ift": 191, "fdisk": 191, "obvoiusli": 191, "fat32": [191, 984], "fat16": 191, "partit": [191, 192, 193, 279, 325, 984], "mount": [191, 193, 307, 410, 861, 940, 984, 1039, 1041, 1096, 1098], "sector": [191, 263, 1166], "intend": [191, 197, 198, 199, 208, 243, 260, 266, 276, 279, 541, 815, 936, 957, 1031, 1032, 1066, 1164], "slot": [191, 1035, 1127], "partli": [191, 193, 492], "meaning": [191, 199, 966], "scr": 191, "omap3": 191, "mmc1": 191, "arch": [191, 195, 934, 964, 984, 985], "mach": [191, 252, 257, 273], "omap2": 191, "omap3beagl": 191, "Near": 191, "insight": [191, 541, 848, 1066, 1096, 1261, 1268, 1269, 1281], "offset": [191, 797, 955, 1028, 1042, 1047, 1101], "128k": 191, "0x80000": 191, "byte": [191, 194, 208, 210, 260, 266, 276, 279, 286, 289, 304, 325, 331, 347, 353, 359, 365, 389, 404, 426, 434, 444, 445, 476, 479, 488, 491, 497, 501, 554, 650, 655, 658, 662, 669, 682, 797, 801, 845, 861, 868, 891, 922, 929, 934, 998, 1020, 1021, 1022, 1025, 1027, 1029, 1030, 1031, 1032, 1041, 1042, 1047, 1064, 1068, 1073, 1076, 1080, 1133, 1139, 1144, 1158, 1221], "reli": [191, 223, 834, 994, 1139], "ecc": [191, 195], "nandecc": 191, "hw": 191, "80000": 191, "0x0": [191, 934], "0x60000": 191, "unlik": [191, 243, 294, 747, 748, 751, 820, 928, 1147, 1226, 1266], "intermedi": [191, 211, 532, 553, 801, 1066, 1083, 1133], "nevertheless": [191, 192, 199, 310, 313, 984], "0x20000": 191, "fatload": 191, "80200000": 191, "20392": 191, "131072": [191, 942], "40000": 191, "0x40000": 191, "60000": 191, "incarn": [191, 199, 470, 833], "choic": [191, 192, 193, 215, 251, 264, 283, 500, 510, 514, 605, 653, 742, 845, 934, 1067, 1096, 1224], "finger": [191, 202, 500, 870, 928], "sw": [191, 603], "0x1e0000": 191, "1e0000": 191, "0x240000": 191, "275928": 191, "1966080": 191, "prompt": [191, 199, 202, 211, 243, 254, 282, 291, 862, 891, 893, 1012, 1133, 1134, 1170, 1174, 1188, 1194, 1243], "280000": 191, "400000": [191, 936, 1213], "month": [192, 253, 263, 311, 315, 445, 1066], "met": [192, 492, 937, 1066], "audienc": [192, 194, 223, 228, 345, 385, 386, 387, 801, 1164, 1258, 1263, 1266, 1274], "microcontrol": [192, 461, 765, 928, 936, 1067], "clue": 192, "vxwork": [192, 1066], "ce": [192, 202, 1098], "presenc": [192, 194, 516, 1266], "sooner": [192, 496, 987], "opinion": [192, 203, 223, 277, 374, 797, 870, 1116], "unless": [192, 273, 279, 283, 325, 519, 756, 856, 913, 1051, 1139, 1158, 1228, 1268], "hire": 192, "cheap": [192, 194, 540, 662, 810, 815, 834, 835, 989, 1258], "misl": 192, "posix": [192, 194, 216, 757, 816, 868, 1025, 1036, 1051, 1055, 1057, 1074, 1158, 1268, 1270, 1271], "tell": [192, 193, 194, 197, 198, 199, 220, 267, 493, 683, 856, 937, 1066, 1083], "pitfal": [192, 275, 295, 296, 298, 355, 356, 374, 385, 386, 404, 683, 749, 802, 803, 846, 928, 1258], "seen": [192, 194, 199, 211, 224, 252, 382, 436, 455, 493, 529, 536, 548, 558, 801, 855, 955, 980, 1049, 1053, 1215, 1219, 1253], "didn": [192, 193, 194, 203, 223, 227, 243, 253, 277, 346, 910, 984, 1030, 1158, 1160, 1208, 1212], "rtoss": 192, "commonli": [192, 260, 283, 310, 313, 562, 757, 797, 893, 970, 1004, 1025, 1083, 1233], "notif": [192, 197, 215, 822, 932, 1041, 1077, 1081], "dread": 192, "segment": [192, 194, 468, 597, 662, 827, 844, 1067, 1077], "fault": [192, 194, 417, 418, 468, 662, 844, 1067], "arriv": [192, 375, 976, 1001, 1064, 1066, 1080], "handler": [192, 260, 266, 276, 279, 318, 325, 338, 504, 964, 966, 994, 1050, 1067, 1079, 1082], "pai": [192, 315, 499, 516, 861], "safe": [192, 260, 266, 267, 276, 279, 289, 386, 496, 810, 825, 835, 837, 846, 1012, 1017, 1050, 1053, 1058, 1082], "pthread_": 192, "regular": [192, 215, 226, 240, 256, 263, 264, 271, 290, 291, 293, 295, 296, 305, 324, 325, 354, 360, 428, 494, 512, 525, 526, 662, 664, 797, 807, 834, 876, 910, 913, 916, 925, 937, 972, 984, 1016, 1076, 1077, 1120, 1150, 1152, 1208], "trick": [192, 248, 258, 261, 264, 288, 300, 324, 330, 471, 524, 528, 1208], "sigwait": [192, 1080], "sigwaitinfo": 192, "sigtimedwait": 192, "caught": [192, 260, 266, 276, 279, 503, 672], "synchron": [192, 263, 269, 279, 286, 289, 304, 311, 319, 320, 321, 325, 341, 342, 345, 347, 353, 359, 365, 386, 817, 825, 922, 1020, 1043, 1051, 1052, 1059, 1066, 1067, 1077, 1079, 1082, 1266, 1271], "signalfd": [192, 1025, 1073, 1268, 1270], "emb": 192, "among": [192, 215, 223, 260, 266, 276, 279, 386, 493, 845, 876, 934, 1025, 1031, 1064, 1081, 1132, 1216, 1217, 1241, 1259], "epol": [192, 1039, 1041, 1073, 1270, 1272], "ipc": [192, 421, 797, 1036, 1066, 1074, 1262, 1270, 1271, 1272], "intra": 192, "primit": [192, 235, 236, 316, 383, 1114, 1258], "oss": 192, "synchronis": [192, 1050], "pthread_mutex_init": [192, 822, 1043, 1053], "critical_sect": 192, "closest": [192, 810], "pendant": [192, 643, 943], "expir": [192, 994, 1023, 1064, 1067, 1081], "sometim": [192, 283, 382, 460, 476, 500, 657, 748, 861, 869, 1030, 1051, 1098, 1104, 1135, 1241, 1271], "setitim": 192, "timer_cr": [192, 1067], "drawback": [192, 470, 487, 492, 497, 561, 683, 821, 1012], "unfortun": [192, 193, 215, 252, 575, 928, 1226], "straightforward": [192, 270, 377, 380, 761, 839, 846, 952, 1110, 1127, 1145, 1213], "nanosleep": [192, 825, 1067], "timerfd_cr": [192, 1023, 1025, 1268, 1270], "conjunct": 192, "emul": [192, 296, 298, 316, 488, 497, 503], "stupid": [192, 194, 250, 266, 269, 271, 445, 470, 476, 494, 500, 510, 750, 810, 910, 1001, 1020, 1112, 1158], "screw": [192, 710], "otherwis": [192, 193, 277, 279, 283, 320, 325, 353, 369, 395, 449, 460, 486, 496, 665, 703, 751, 763, 801, 803, 815, 819, 834, 857, 858, 955, 968, 976, 984, 992, 1012, 1042, 1043, 1050, 1055, 1061, 1107, 1136, 1139, 1156, 1158, 1178, 1189, 1230, 1253, 1265], "millisecond": [192, 260, 266, 276, 279, 757, 847, 936, 992], "etern": 192, "nowadai": [192, 194, 196, 197, 252, 319, 320, 341, 426, 444, 866, 869, 959, 994, 1025, 1081, 1221], "moder": [192, 199, 258], "tri": [192, 193, 194, 203, 212, 223, 271, 369, 381, 382, 386, 415, 605, 728, 797, 801, 819, 928, 937, 1041, 1066, 1068, 1258], "achiev": [192, 250, 283, 375, 382, 744, 1064, 1119], "albeit": [192, 570, 833, 1061, 1144, 1258], "intellig": [192, 227, 267, 303, 310, 313, 323, 329, 341, 345, 363, 364, 410, 766, 955, 1105, 1109, 1215, 1223], "wealth": 192, "previous": [192, 260, 266, 276, 279, 283, 1081, 1258], "regardless": [192, 471, 936], "surpris": [192, 194, 307, 494, 529, 1103, 1127], "alon": [192, 193, 194, 316, 318, 500, 504, 759, 1148, 1215, 1266], "advantag": [192, 382, 492, 662], "regularli": [192, 497], "buffer": [192, 279, 304, 319, 320, 325, 341, 345, 432, 581, 586, 815, 875, 1000, 1017, 1020, 1021, 1022, 1023, 1031, 1049, 1066, 1080, 1158, 1267], "stream": [192, 197, 199, 238, 264, 279, 304, 649, 665, 875, 929, 1064, 1066, 1112, 1233, 1272], "eventfd": [192, 1025, 1073, 1268, 1270], "unregist": [192, 557], "comfort": [192, 243, 407, 837, 934, 1233], "excit": 192, "hundr": [192, 194, 199, 301, 304, 1025], "panel": 192, "basta": [192, 244, 1139], "deal": [192, 267, 494, 937, 984, 1137, 1210, 1221, 1258, 1266], "touch": [192, 198, 223, 260, 266, 276, 279, 512, 876, 885, 890, 934, 1026, 1032, 1042, 1262, 1265, 1266], "stai": [192, 215, 227, 258, 1080], "harder": [192, 751, 1006], "buggi": [192, 658, 827, 835, 1067], "debugg": [192, 260, 266, 276, 277, 279, 553, 1256, 1269], "gdb": [192, 243, 422, 1256], "spidev": 192, "bluntli": 192, "whether": [192, 211, 279, 283, 304, 315, 325, 435, 499, 610, 655, 687, 797, 936, 980, 1066, 1188, 1194, 1236], "deadlin": [192, 1271], "sched_setschedul": [192, 208, 1070], "pthread_attr_setschedparam": [192, 1070], "runnabl": [192, 982, 1046, 1068, 1069, 1070], "prioriti": [192, 208, 279, 868, 976, 982, 984, 986, 1041, 1066, 1068, 1069, 1271], "anymor": [192, 198, 203, 215, 252, 269, 512, 522, 524, 664, 751, 809, 813, 815, 845, 846, 866, 934, 1041, 1055, 1066, 1067, 1069, 1101, 1139, 1141, 1230], "potenti": [192, 540, 662, 748, 761, 819, 1016, 1066, 1107, 1119, 1165], "harm": [192, 464, 492, 831, 846, 1107], "polici": [192, 197, 208, 359, 387, 512, 532, 548, 742, 744, 961, 1068, 1069, 1271], "sched_fifo": [192, 1069, 1070], "sched_rr": [192, 194, 1070], "robin": [192, 258, 1070, 1271], "manner": [192, 470, 724, 984, 1066], "troubl": 192, "trigger": [192, 380, 415, 934, 966, 970, 1127, 1217], "circumst": [192, 1068], "deadlock": [192, 626, 819, 820, 976, 989, 1053, 1068, 1069], "inspect": [192, 194, 260, 266, 276, 279, 297, 306, 317, 327, 342, 371, 860, 1016], "uclibc": 192, "investig": 192, "spend": [192, 199, 212, 223, 227, 248, 251, 274, 300, 324, 346, 499, 1066, 1208], "browser": [193, 199, 210, 221, 254], "significantli": [193, 1080], "decreas": [193, 194, 488, 891, 1071], "week": [193, 207, 231, 422, 490, 1066, 1262, 1263, 1270], "forth": [193, 501, 861, 934, 1016, 1139], "spare": 193, "row": [193, 214, 230, 250, 263, 267, 269, 271, 283, 308, 309, 310, 313, 317, 330, 342, 343, 347, 353, 363, 365, 367, 368, 384, 459, 501, 871, 1053, 1107, 1126, 1146, 1166, 1198, 1200, 1213, 1216, 1220, 1226, 1227, 1229, 1232], "volum": 193, "undertak": 193, "indirectli": [193, 845], "pocket": 193, "purchas": [193, 283], "corsair": 193, "120": [193, 210, 224, 234, 241, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 666, 800, 1075, 1076], "overhaul": [193, 381, 382], "reserv": [193, 199, 215, 227, 263, 279, 304, 325, 443, 529, 684, 887, 948, 980, 1070, 1166], "livecd": 193, "ssd": [193, 499, 1021], "vanish": 193, "gone": [193, 213, 263, 764, 770, 801, 846, 892, 964, 987, 1058, 1066], "nowher": [193, 331, 618], "depart": 193, "unusu": [193, 384], "cope": 193, "bet": 193, "themselv": [193, 470, 510, 570], "aggress": [193, 382], "harddisk": 193, "treatment": [193, 283, 891, 1101], "proud": 193, "120g": 193, "fresher": 193, "extend": [193, 194, 224, 241, 242, 244, 249, 255, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 317, 321, 325, 331, 353, 359, 365, 369, 399, 553, 560, 569, 594, 666, 668, 669, 862, 945, 1042, 1140, 1145, 1155, 1213, 1225, 1268, 1269], "plenti": [193, 195, 504], "4g": [193, 194], "shouldn": [193, 800, 984, 1066, 1156], "hibern": 193, "fstab": [193, 359], "room": [193, 199, 227, 342, 550, 700, 937, 978, 1043, 1066, 1221, 1259], "swapon": 193, "sda1": 193, "swapoff": 193, "overal": [193, 801], "mitig": [193, 978], "perfect": [193, 199, 252, 300, 355, 375, 387, 424, 700, 750, 798, 801, 1066, 1110, 1164, 1208, 1239, 1258], "portag": [193, 921, 984], "openoffic": 193, "tmpdir": [193, 317, 346, 512, 607, 797, 1105, 1204, 1206, 1241], "500m": [193, 765], "2g": 193, "6g": 193, "throwawai": 193, "1tb": 193, "sdc1": [193, 861], "mnt": [193, 861, 870], "emerg": 193, "umount": 193, "runnung": 193, "offend": [193, 195, 197, 488, 575, 1067], "trap": [193, 253, 483, 488, 506, 654, 1046, 1260], "beagleboard": [193, 204], "candid": [193, 211, 252, 500, 826, 835, 1107, 1180], "destin": [193, 451, 513, 534, 543, 643, 683, 813, 1015, 1022], "admin": [193, 199, 404, 1010, 1014], "cron": [193, 874, 1137], "rc": [193, 359, 928], "he": [193, 214, 223, 227, 230, 243, 248, 251, 253, 274, 277, 300, 319, 320, 324, 341, 346, 749, 801, 815, 835, 838, 848, 1014, 1056, 1066, 1070, 1081, 1124, 1152, 1208, 1234], "exce": [193, 227, 945, 1067], "20m": [193, 928, 1064], "compresscmd": 193, "bzip2": [193, 203, 231, 233, 855, 856, 1098], "compressopt": 193, "compressext": 193, "missingok": 193, "sharedscript": 193, "postrot": 193, "reload": [193, 231], "endscript": 193, "adjac": [193, 411, 845, 955], "sda": [193, 934, 937], "cfq": 193, "noop": [193, 930], "believ": [193, 199, 748, 928, 937, 1033, 1066], "r5": 193, "menuconfig": [193, 203, 934, 984, 1098], "xorg": [193, 197], "emerge_log_dir": 193, "unionf": 193, "fuse": [193, 195, 359, 1006, 1016], "persist": [193, 208, 440, 444, 452, 516, 531, 532, 892, 936], "held": [194, 335, 338, 422, 783, 942, 976, 989, 1066], "compani": [194, 197, 198, 199, 233, 243, 283, 309, 320, 335, 384, 422, 510, 548, 549, 801, 870, 1164, 1210], "z\u00fcrich": [194, 421], "hardcor": 194, "attitud": [194, 199, 317], "began": [194, 1066], "dive": [194, 310, 313], "inevit": [194, 375, 422, 521, 837], "came": [194, 260, 264, 266, 276, 279, 888, 894, 934, 1066, 1139, 1192, 1258], "mb": [194, 869], "heap": [194, 483, 554, 655, 658, 710, 740, 801, 803, 845, 945, 970], "128": [194, 197, 210, 224, 234, 241, 247, 250, 256, 260, 263, 266, 269, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 499, 662, 934, 1031, 1086, 1099, 1221], "dead": [194, 203, 500, 1046, 1049, 1066], "attempt": [194, 199, 221, 279, 783, 810, 812, 1066, 1236], "reject": 194, "proof": [194, 215, 488, 499, 503, 553, 637], "evid": 194, "fortun": [194, 199, 500, 512, 815, 1213], "overnight": [194, 258], "night": [194, 227], "instinct": 194, "defens": [194, 442, 443], "grow": [194, 683, 868, 1100], "growth": [194, 263, 1166], "handi": [194, 1264], "tricki": 194, "alloca": 194, "stdio": [194, 252, 264, 425, 426, 428, 432, 434, 436, 467, 493, 540, 659, 664, 868, 888, 934, 1021, 1022, 1023, 1025, 1026, 1029, 1030, 1031, 1032, 1041, 1047, 1053, 1067, 1073, 1076, 1080, 1081, 1083, 1086, 1096, 1100, 1102, 1158], "stdlib": [194, 483, 497, 748, 934, 1021, 1022, 1023, 1063, 1073, 1080], "size_t": [194, 483, 496, 551, 631, 640, 643, 685, 690, 696, 700, 707, 720, 735, 761, 779, 793, 794, 795, 797, 813, 943, 970, 1017, 1025, 1035, 1080], "stack_growth": 194, "argc": [194, 477, 519, 534, 554, 594, 934, 1029, 1030, 1031, 1032, 1037, 1040, 1042, 1043, 1063, 1080, 1102, 1248, 1253], "mem": [194, 209, 382, 640, 747, 948], "fprintf": [194, 458, 471, 1017, 1067, 1102], "stderr": [194, 242, 251, 260, 266, 276, 279, 289, 297, 306, 307, 327, 328, 371, 397, 404, 458, 471, 541, 872, 873, 1017, 1025, 1067, 1102, 1137, 1150, 1158, 1267], "atoi": [194, 1033], "printf": [194, 203, 252, 264, 387, 425, 426, 428, 434, 436, 440, 466, 467, 470, 471, 493, 540, 659, 664, 868, 888, 1019, 1023, 1041, 1073, 1080, 1081, 1083, 1086, 1096, 1100, 1102, 1147, 1153], "getpid": [194, 1047, 1080], "memset": [194, 1022, 1067, 1080], "24299": 194, "vsz": 194, "rss": 194, "3944": [194, 266], "986": [194, 263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "188": [194, 224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 301, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "320": [194, 266, 276, 279, 304, 311, 325, 331, 343, 359, 365, 369], "exact": [194, 243, 283, 401, 464, 751, 830, 957, 959, 1066, 1236], "k": [194, 212, 214, 224, 227, 239, 241, 244, 247, 251, 252, 263, 266, 271, 273, 276, 279, 286, 289, 301, 304, 310, 311, 321, 331, 341, 343, 345, 347, 353, 359, 365, 369, 405, 406, 424, 572, 705, 782, 800, 831, 848, 891, 1006, 1050, 1209, 1215, 1241], "glibc": [194, 964, 1096, 1098, 1099], "presum": [194, 375], "assum": [194, 279, 283, 325, 494, 825, 891, 934, 937, 961, 1016, 1066, 1099, 1168, 1243], "writabl": [194, 494, 876, 891, 1031, 1047], "eater": [194, 1071], "1k": 194, "furthermor": 194, "188k": 194, "proce": [194, 202, 280, 313, 410, 607], "million": [194, 229, 548, 984, 1110], "1000000": [194, 224, 244, 321, 359, 399, 504, 928, 936], "24908": 194, "4800": [194, 266], "1200": [194, 266, 700], "1044": [194, 266], "1376": [194, 266], "grown": [194, 197], "reflect": [194, 534, 984, 1066, 1068, 1099, 1100, 1127, 1265], "greedi": 194, "24960": 194, "8mb": 194, "ulimit": [194, 868], "8192": [194, 266, 471, 868, 1083], "8000000": 194, "25018": 194, "11632": [194, 266], "2908": [194, 266], "7876": [194, 266], "8236": [194, 266], "demand": [194, 197, 213, 313, 494, 882, 884, 984, 1045, 1047, 1112, 1147, 1278, 1282], "bother": [194, 1016, 1020], "pthread_attr_setstacks": 194, "2mb": 194, "rlimit_stack": [194, 1083], "pthread_creat": [194, 1051, 1067], "nthread": 194, "act": [194, 250, 520, 615, 684, 937, 1016, 1019, 1081, 1118], "shut": [194, 952, 984], "sit": [194, 269, 410, 560, 875, 934, 936, 1014, 1016, 1020, 1049, 1080, 1224], "stack_limit": 194, "thread_func": 194, "arg": [194, 210, 224, 250, 251, 260, 264, 266, 276, 277, 279, 283, 289, 304, 325, 343, 528, 540, 943, 1051, 1105, 1130, 1137, 1160, 1250, 1277], "pthread_attr_t": [194, 1051, 1070], "attr": [194, 208, 1041, 1051, 1053, 1055, 1070], "pthread_attr_init": 194, "ld": [194, 359, 544, 545, 634, 652, 857, 858, 876, 889, 913, 961, 984, 1073, 1083, 1084, 1086, 1096, 1101], "strerror": [194, 266, 1017, 1026, 1067, 1080], "p_attr": 194, "pthread_t": [194, 1051, 1067, 1070], "rv": [194, 239, 301, 359, 365], "31524": 194, "825840": 194, "206460": 194, "819936": 194, "1404": [194, 266], "800mb": 194, "writeabl": [194, 879, 887, 910, 1042], "worth": [194, 937, 984, 1136, 1207, 1258, 1268, 1270, 1279], "eaten": 194, "field": [194, 197, 199, 210, 215, 221, 257, 264, 271, 279, 289, 292, 309, 311, 315, 325, 359, 396, 415, 427, 724, 784, 786, 866, 871, 890, 925, 1066, 1154, 1166, 1187, 1215, 1216], "alleg": 194, "wast": [194, 202, 203, 496, 822, 841, 1221], "moment": [194, 227, 496, 548, 550, 737, 806, 1066], "771": [194, 266, 353], "766604": 194, "hasn": [194, 197, 198, 801, 978, 1001, 1138], "effect": [194, 198, 218, 382, 405, 406, 440, 490, 500, 528, 532, 572, 739, 764, 815, 887, 892, 934, 939, 968, 1015, 1016, 1046, 1068, 1082, 1108, 1120, 1141, 1188, 1215, 1243, 1281], "4096": [194, 210, 266, 797, 857, 858, 928, 934, 936, 937, 1016, 1039, 1042, 1076, 1083], "1026": [194, 266], "invalid": [194, 234, 241, 271, 276, 277, 279, 283, 286, 304, 311, 318, 325, 343, 347, 353, 359, 365, 400, 415, 497, 528, 575, 586, 589, 643, 658, 734, 735, 736, 759, 761, 810, 813, 825, 844, 846, 942, 1055, 1083, 1160], "insist": [194, 223, 664, 748, 1250], "pthread_stack_min": 194, "16384": [194, 199, 266, 934, 936, 937, 1047, 1083], "1125": 194, "7840": [194, 266], "1960": [194, 266], "1936": [194, 266], "fine": [194, 199, 227, 520, 522, 541, 651, 749, 759, 964, 994, 1016, 1020, 1066, 1099, 1116, 1128, 1137, 1143, 1158, 1221, 1262], "risk": [194, 548, 928, 1014, 1069, 1135], "512": [194, 266, 311, 343, 359, 369, 501, 868], "513": [194, 266, 311, 359, 845], "2212": [194, 266], "4210920": 194, "1052730": 194, "4205016": 194, "4576": [194, 266], "misunderstand": 194, "overcommit": [194, 1045, 1047], "kept": [194, 199, 223, 229, 471, 486, 868, 929, 1083, 1112], "plai": [194, 202, 243, 488, 506, 928, 984, 1125, 1128, 1215], "stutter": 194, "4353": 194, "red": [194, 195, 239, 241, 247, 255, 267, 270, 283, 315, 397, 703, 747, 801, 928, 1134, 1224], "chili": 194, "pepper": 194, "overli": [194, 874, 1111], "adob": 194, "riddanc": 194, "8462": [194, 266], "3284640": 194, "821160": 194, "3278736": 194, "3064580": 194, "lie": [194, 835], "constraint": [194, 202, 759, 761, 764, 937], "800": [194, 234, 266, 700, 1168], "4000000": 194, "11338": [194, 266], "900": [194, 266, 700], "12156": [194, 266], "shrink": [194, 683], "inadvert": 194, "3mb": 194, "nois": 194, "henc": [194, 199, 529, 607, 705, 1021, 1025, 1083], "14386": [194, 266], "child_stack": 194, "0x7f5813f22ff0": 194, "clone_vm": 194, "clone_f": 194, "clone_fil": 194, "clone_sigha": 194, "14413": 194, "mmap": [194, 1036, 1043, 1075, 1077, 1083, 1268], "8392704": 194, "prot_read": [194, 1042, 1043, 1047, 1076, 1083], "prot_writ": [194, 1042, 1043, 1047, 1076, 1083], "map_priv": [194, 1047, 1076, 1083], "map_anonym": [194, 1047, 1083], "map_stack": 194, "0x7fd14f9af000": 194, "mprotect": [194, 1083], "0x7fd14f1ae000": 194, "prot_non": 194, "7fd14f1af000": 194, "7fd14f9af000": 194, "00000000": [194, 1047], "7fd14f9b0000": 194, "topmost": [194, 744, 1241], "redund": [194, 471, 500, 801], "smap": 194, "7fd14f1ae000": 194, "kb": [194, 1047, 1243], "pss": [194, 1047], "shared_clean": [194, 1047], "shared_dirti": [194, 1047], "private_clean": [194, 1047], "private_dirti": [194, 1047], "referenc": [194, 211, 234, 342, 345, 528, 532, 547, 664, 845, 846, 847, 1033, 1047, 1250], "anonym": [194, 550, 957, 1042, 1044, 1045, 1076], "anonhugepag": [194, 1047], "kernelpages": [194, 1047], "mmupages": [194, 1047], "miss": [194, 212, 219, 221, 223, 239, 266, 271, 276, 283, 342, 345, 404, 460, 505, 506, 517, 519, 522, 528, 546, 606, 637, 658, 826, 848, 849, 959, 961, 1023, 1066, 1067, 1085, 1277], "shallow": [194, 263, 275, 365, 753], "extent": [194, 223, 230, 243, 401, 491, 496, 984, 1083, 1132], "8k": [194, 875], "swamp": 194, "panic": [194, 891, 992], "meaningless": 194, "dig": [194, 196], "thorough": [194, 203, 421, 1215, 1234, 1270, 1278], "counter": [194, 276, 428, 434, 435, 444, 500, 505, 506, 650, 813, 824, 1076], "delai": [194, 260, 266, 276, 279, 936], "substanti": 194, "beforehand": 194, "mlock": [194, 1268], "mlockal": [194, 1268], "contradictori": 194, "lengthi": [194, 375], "felt": 194, "lucki": [194, 658], "kilomet": [194, 801, 803, 891], "charact": [194, 209, 234, 239, 243, 252, 256, 263, 269, 279, 286, 289, 307, 310, 325, 331, 347, 426, 427, 433, 441, 444, 450, 451, 488, 493, 495, 713, 797, 871, 873, 891, 913, 934, 978, 986, 1000, 1068, 1119, 1138, 1152, 1153, 1154, 1158, 1160, 1170, 1178, 1181, 1189, 1221, 1248], "agre": [194, 223, 227, 382, 410, 558, 1068, 1214], "glad": 194, "outdat": [195, 203, 984, 1236], "halfwai": 195, "thunderbolt": 195, "hdmi": 195, "unplug": 195, "feb": [195, 239, 241, 243, 401, 445, 913, 1039, 1096], "58": [195, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 411, 512, 937, 1084, 1085, 1086, 1096, 1212, 1213], "zen": [195, 235, 245, 273, 284, 317, 759], "derefer": [195, 662], "0000000000000080": 195, "supervisor": 195, "error_cod": 195, "0x0000": 195, "pgd": 195, "p4d": 195, "0000": [195, 279, 325, 937], "smp": [195, 243, 250, 401], "pti": 195, "281": [195, 263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 325, 331, 343, 353, 359, 365], "comm": 195, "kworker": 195, "taint": 195, "fc31": 195, "asustek": 195, "zenbook": 195, "ux391ua": 195, "bio": 195, "204": [195, 224, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369, 554], "workqueu": [195, 986], "ucsi_connector_chang": 195, "typec_ucsi": 195, "0010": 195, "ucsi_displayport_remove_partn": 195, "0xa": 195, "0x20": [195, 974, 1083], "c7": [195, 202, 1236], "48": [195, 202, 210, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 934], "83": [195, 202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 797, 985, 1212, 1213], "5b": [195, 202], "e9": [195, 202], "6d": [195, 202, 427, 428], "f3": [195, 202], "3d": [195, 202, 212], "fb": [195, 202], "66": [195, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 720, 1166, 1212, 1213], "2e": [195, 202, 755], "0f": [195, 202], "1f": [195, 202], "84": [195, 202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1212, 1213], "44": [195, 202, 213, 224, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 783, 937, 1236], "85": [195, 202, 210, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1084, 1085, 1212, 1213, 1248], "ff": [195, 202, 422, 785, 937], "74": [195, 197, 202, 224, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 913, 922, 1166, 1212, 1213], "8b": 195, "47": [195, 197, 202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 835, 925, 1066, 1067, 1083, 1096, 1153, 1212], "78": [195, 202, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 604, 1212, 1213], "c6": 195, "rsp": [195, 263, 1166], "0018": 195, "ffff9daa002d3df8": 195, "eflag": 195, "00010202": 195, "rax": 195, "0000000000000008": 195, "rbx": 195, "ffff901f4ce35710": 195, "rcx": 195, "0000000000003c7d": 195, "rdx": 195, "0000000000003c7c": 195, "rsi": [195, 891], "0000000000000001": 195, "rdi": 195, "rbp": 195, "0000000000000000": [195, 1102], "r08": 195, "ffffffffbc7dbe60": 195, "r09": 195, "ffff9daa002d3cf0": 195, "r10": 195, "ffff901f54951a18": 195, "r11": 195, "ffff901f56a68a78": 195, "r12": 195, "r13": 195, "r14": 195, "ffff901f4ce35860": 195, "r15": 195, "ffff901f4ce355d8": 195, "ffff901f56a00000": 195, "knlg": 195, "cr0": 195, "0000000080050033": 195, "cr2": 195, "cr3": 195, "000000028fbbc003": 195, "cr4": 195, "00000000003606f0": 195, "trace": [195, 213, 260, 266, 276, 279, 541, 974, 1066], "ucsi_unregister_altmod": 195, "0x77": 195, "0x90": [195, 974], "ucsi_unregister_partn": 195, "0x13": 195, "0x30": [195, 452], "0x247": 195, "0x340": 195, "process_one_work": 195, "0x1b5": 195, "0x360": 195, "worker_thread": 195, "0x50": 195, "0x3c0": 195, "kthread": 195, "0xf9": 195, "0x130": 195, "kthread_park": 195, "ret_from_fork": 195, "0x35": 195, "0x40": [195, 936], "cdc_ether": 195, "usbnet": 195, "r8152": 195, "mii": 195, "rc_cec": 195, "typec_displayport": 195, "uinput": 195, "rfcomm": 195, "ccm": 195, "xt_checksum": 195, "xt_masquerad": 195, "nf_nat_tftp": 195, "nf_conntrack_tftp": 195, "tun": [195, 200, 214, 218, 234, 241, 280, 1255, 1256, 1257], "bridg": 195, "stp": 195, "llc": 195, "nf_conntrack_netbios_n": 195, "nf_conntrack_broadcast": 195, "xt_ct": 195, "ip6t_reject": 195, "nf_reject_ipv6": 195, "ip6t_rpfilt": 195, "ipt_reject": 195, "nf_reject_ipv4": 195, "xt_conntrack": 195, "ebtable_nat": 195, "ebtable_brout": 195, "ip6table_nat": 195, "ip6table_mangl": 195, "ip6table_raw": 195, "ip6table_secur": 195, "iptable_nat": 195, "nf_nat": 195, "iptable_mangl": 195, "iptable_raw": 195, "iptable_secur": 195, "nf_conntrack": 195, "nf_defrag_ipv6": 195, "nf_defrag_ipv4": 195, "libcrc32c": 195, "ip_set": 195, "nfnetlink": 195, "ebtable_filt": 195, "ebtabl": 195, "ip6table_filt": 195, "ip6_tabl": 195, "iptable_filt": 195, "cmac": 195, "bnep": 195, "sunrpc": 195, "vfat": [195, 861, 984], "snd_hda_codec_hdmi": 195, "snd_soc_skl": 195, "snd_soc_sst_ipc": 195, "snd_soc_sst_dsp": 195, "snd_hda_ext_cor": 195, "x86_pkg_temp_therm": 195, "intel_powerclamp": 195, "snd_soc_acpi_intel_match": 195, "coretemp": 195, "snd_soc_acpi": 195, "kvm_intel": 195, "snd_soc_cor": 195, "snd_hda_codec_realtek": 195, "snd_hda_codec_gener": 195, "snd_compress": 195, "ledtrig_audio": 195, "ac97_bu": 195, "snd_pcm_dmaengin": 195, "iwlmvm": 195, "snd_hda_intel": 195, "snd_intel_dspcfg": 195, "irqbypass": 195, "snd_hda_codec": 195, "uvcvideo": 195, "mac80211": 195, "btusb": 195, "itco_wdt": 195, "btrtl": 195, "crct10dif_pclmul": 195, "videobuf2_vmalloc": 195, "itco_vendor_support": 195, "videobuf2_memop": 195, "mei_hdcp": 195, "btbcm": 195, "btintel": 195, "crc32_pclmul": 195, "intel_rapl_msr": 195, "snd_hda_cor": 195, "videobuf2_v4l2": 195, "libarc4": 195, "ghash_clmulni_intel": 195, "videobuf2_common": 195, "snd_hwdep": 195, "intel_cst": 195, "bluetooth": [195, 359, 1262, 1272], "snd_seq": 195, "asus_nb_wmi": 195, "iwlwifi": 195, "videodev": 195, "snd_seq_devic": 195, "intel_uncor": 195, "asus_wmi": 195, "snd_pcm": 195, "intel_rapl_perf": 195, "cdc_acm": 195, "sparse_keymap": 195, "wmi_bmof": 195, "ecdh_gener": 195, "cfg80211": 195, "intel_wmi_thunderbolt": 195, "pcspkr": 195, "snd_timer": 195, "snd": 195, "i2c_i801": 195, "soundcor": 195, "joydev": 195, "idma64": 195, "intel_xhci_usb_role_switch": 195, "mei_m": 195, "ucsi_acpi": 195, "processor_thermal_devic": 195, "intel_rapl_common": 195, "mei": [195, 266], "intel_soc_dts_iosf": 195, "intel_pch_therm": 195, "typec": 195, "int3403_therm": 195, "int340x_thermal_zon": 195, "int3400_therm": 195, "acpi_thermal_rel": 195, "acpi_pad": 195, "binfmt_misc": 195, "ip_tabl": 195, "rfkill": 195, "i915": 195, "i2c_algo_bit": 195, "drm_kms_helper": 195, "hid_multitouch": 195, "drm": 195, "nvme": 195, "crc32c_intel": 195, "nvme_cor": 195, "serio_raw": 195, "wmi": 195, "i2c_hid": 195, "76d248e576fee192": 195, "deferenc": 195, "dp": 195, "ness": [195, 230, 315], "ucsi": 195, "displayport": 195, "linu": [195, 976, 984], "typec_altmod": 195, "alt": [195, 224, 891, 920, 1255, 1264], "ucsi_dp": 195, "typec_altmode_get_drvdata": 195, "271": [195, 263, 266, 271, 273, 279, 304, 311, 325, 331, 353, 359, 365, 369], "bugzilla": 195, "1785972": 195, "john": [195, 500, 1066], "stebbin": 195, "roundtrip": 195, "explod": [195, 369, 959, 1147], "jwboyer": [195, 957], "f31": 195, "quiet": [195, 227, 1236], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 195, "tag": [195, 197, 200, 201, 224, 240, 242, 284, 541, 545, 824, 957, 1098, 1101], "josh": 195, "boyer": 195, "fedoraproject": [195, 957], "mon": 195, "0001": [195, 212, 244], "rpmdevtool": [195, 957], "koji": 195, "rpmdev": 195, "setuptre": 195, "srpm": 195, "unam": [195, 957, 961, 980, 984, 985], "correspond": [195, 279, 384, 425, 468, 520, 724, 936, 1092, 1100, 1139, 1176, 1210, 1236], "kenrel": 195, "ivh": [195, 197], "crypto": [195, 359], "ccp": 195, "sha": [195, 1066], "drop": [195, 342, 551, 570, 579, 845, 847, 1003, 1076, 1081], "zips": 195, "ko": [195, 953, 961, 984], "endif": [195, 468, 470, 471, 514, 515, 518, 520, 521, 525, 528, 529, 532, 534, 540, 541, 634, 643, 652, 658, 700, 813, 814, 825, 844, 1083, 1100, 1102, 1250], "buildid": [195, 957, 1084, 1086], "primary_target": 195, "825": [195, 266], "asoc": 195, "patch601": 195, "patch999": 195, "patienc": [195, 223, 1132], "oldpackag": 195, "uefi": [195, 202], "market": [196, 199, 263, 307, 315, 1166], "unprofession": 196, "intent": [196, 198, 202, 203, 553, 751, 801, 846, 957, 1029, 1031, 1032], "remark": 196, "organ": [196, 220, 466, 501, 512, 560, 700, 801, 867, 1021, 1099], "numer": [196, 212, 228, 230, 232, 266, 276, 279, 283, 315, 325, 365, 525, 529, 541, 707, 724, 1016], "enforc": [196, 253, 488, 510, 660, 664, 937, 943], "cname": [196, 198], "dn": [196, 199, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1272], "propag": [196, 377, 442, 500, 515, 519, 520, 521, 522, 537, 546, 770, 1006], "1100": [196, 260, 266, 283, 700], "3600": [196, 266], "185": [196, 224, 241, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "199": [196, 224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 984, 1166], "109": [196, 210, 224, 234, 239, 241, 247, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409], "153": [196, 210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 411], "111": [196, 210, 212, 224, 234, 241, 247, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399], "110": [196, 210, 224, 234, 241, 247, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 588, 589, 800, 890, 1075, 1076], "108": [196, 210, 224, 234, 241, 247, 250, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399], "strip": [196, 214, 223, 257, 259, 260, 263, 271, 275, 276, 281, 283, 289, 292, 304, 311, 321, 325, 331, 347, 353, 359, 365, 369, 404, 413, 783, 1083, 1084, 1086, 1096, 1115, 1189, 1233], "breviti": 196, "fqdn": 196, "qualifi": [196, 494, 660, 704, 835], "surf": 196, "consequenti": [196, 199, 202, 229, 861, 934, 1104, 1125, 1250], "microsoft team": 197, "chrome": 197, "google chrom": 197, "confer": [197, 199, 227, 251, 274, 300, 346, 783, 1161], "virtual classroom": 197, "classroom": [197, 199], "remote train": 197, "chromium": [197, 231, 359], "frequent": [197, 199, 223, 283, 917, 936, 1066, 1132, 1153], "face": [197, 199, 223, 273, 283, 816, 1271], "travel": [197, 891], "corona": [197, 199, 223], "viru": [197, 199], "conferenc": 197, "dramat": 197, "march": 197, "spent": [197, 373, 499, 757, 1066, 1106, 1214], "weston": 197, "invest": [197, 199, 203, 283], "smooth": 197, "layer": [197, 296, 298, 316, 861, 936, 943, 1016, 1026, 1035], "cornercas": 197, "hover": 197, "sharer": 197, "particip": [197, 199, 220, 223, 307, 338, 373, 422, 591, 930, 1132, 1146, 1167], "gdm": [197, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 866, 922], "daemon": [197, 243, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 506, 526, 866, 869, 917, 918, 921, 922, 1006, 1014, 1019, 1021, 1060, 1118], "waylanden": 197, "defaultsess": 197, "deb": [197, 328], "5153": 197, "thank": [197, 277, 304, 808, 835, 966, 1050, 1066, 1213], "marjan": 197, "javorka": 197, "fashion": 197, "efl": [197, 1003, 1006, 1067], "61762": 197, "1670": [197, 266], "947213": 197, "61764": 197, "98775": 197, "zygot": 197, "sandbox": [197, 223, 227, 277, 291, 309, 1208, 1243, 1244], "61800": 197, "239615": 197, "gpu": 197, "sharedarraybuff": 197, "sparerendererforsiteperprocess": 197, "prefer": [197, 273, 283, 444, 500, 524, 529, 532, 562, 665, 756, 759, 815, 848, 875, 976, 1160], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 197, "token": [197, 253, 269, 430, 470, 866, 1056, 1164, 1255], "4327801531638606376": 197, "61825": 197, "420846": 197, "autoplai": 197, "gestur": 197, "12993561460135093079": 197, "lang": [197, 200, 201, 209, 244, 395, 396, 413, 422, 541], "asar": 197, "agent": [197, 1012, 1215], "mozilla": [197, 321, 913], "applewebkit": 197, "537": [197, 266, 353, 359, 369], "khtml": 197, "gecko": 197, "microsoftteam": 197, "preview": [197, 281, 334, 350, 376, 377, 378, 379, 380, 542], "3497": 197, "safari": 197, "webview": 197, "preload": [197, 1083], "preload_notif": 197, "fff": 197, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 197, "raster": 197, "v8_context_snapshot_data": 197, "v8_natives_data": 197, "101": [197, 210, 224, 234, 241, 247, 256, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1143, 1212, 1213], "msteam": 197, "notificationsmanag": 197, "61973": 197, "790018": 197, "432557619363765409": 197, "mainwindow": 197, "62033": 197, "1259666": 197, "5585537623314398260": 197, "pluginhost": 197, "wish": [197, 199, 206, 227, 504, 540, 671, 732, 822, 1066, 1226, 1227, 1243], "insan": [197, 335, 861], "killal": [197, 1071, 1081], "63500": 197, "298385": 197, "41": [197, 202, 212, 213, 224, 234, 239, 241, 244, 247, 250, 252, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 554, 748, 750, 797, 913, 936, 974, 1120, 1164, 1166, 1212, 1243], "63502": 197, "blood": 197, "pressur": [197, 260], "wipe": 197, "logout": 197, "morn": [197, 232, 242, 260, 269, 271, 277, 346, 1066, 1170], "webassembli": 197, "blow": 197, "firefox": [197, 359, 506, 1051, 1081, 1220], "dom": [197, 255], "gave": [197, 199, 211, 223, 933, 1066, 1213], "3987": 197, "132": [197, 210, 212, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "plagu": 197, "invent": [197, 387, 438, 470, 550, 572, 573, 839, 1259, 1273], "game": [197, 263, 279, 286, 289, 304, 311, 321, 325, 342, 347, 353, 359, 365, 375, 887, 1019, 1146], "pornwatch": 197, "teamview": 197, "webpag": 198, "properli": [198, 737, 825, 984, 1043, 1096], "retrospect": 198, "jekyl": 198, "bend": [198, 602], "companion": [198, 315], "pollut": [198, 471, 494, 500, 553, 849, 1085], "distinguish": [198, 659, 751, 848, 862, 1096], "handwritten": [198, 295, 296, 298, 355, 356, 374, 377, 378, 380, 384, 385, 386, 523, 658, 802, 803, 812, 844, 1271], "remind": 198, "huge": [198, 203, 206, 212, 381, 382, 561, 834, 961, 980, 1133, 1237, 1278], "pile": [198, 381, 382, 560, 1081, 1262], "incomprehens": [198, 277, 742, 783, 1258], "blame": [198, 937], "technic": [198, 199, 220, 356, 537, 549, 649, 703, 800, 1046, 1047, 1066, 1112, 1221, 1253], "nojekyl": 198, "eof": [198, 247, 250, 269, 270, 286, 396, 432, 433, 434, 435, 448, 725, 986, 1000, 1021, 1022, 1025, 1031, 1073, 1080, 1134], "doctyp": 198, "constel": [198, 513], "eventu": [198, 503, 1039, 1099], "click": [198, 199], "404": [198, 266, 273, 311, 325, 343, 359, 369], "cri": [198, 750], "haven": [198, 199, 223, 626, 928, 934], "subdomain": 198, "afterthough": 198, "preserv": [198, 208, 229, 286, 488, 857, 858, 893, 1015, 1233], "domain": [198, 199, 204, 496, 510, 516, 839, 1068, 1210, 1270, 1272, 1279], "_build": 198, "restor": [198, 213, 260, 266, 276, 279, 957, 1081, 1105], "shini": 198, "nervous": 198, "marketinges": [198, 307], "familiar": [198, 223, 279, 406, 407, 817, 936, 1132], "big blue button": 199, "shame": 199, "pursu": 199, "collabor": [199, 208, 215, 220, 227, 300, 848], "moreov": 199, "focus": [199, 1066], "teach": [199, 223, 422, 801], "trust": [199, 202, 263, 319, 320, 341, 359, 369, 810, 1012, 1014, 1166, 1236, 1253], "benefit": [199, 310, 313, 316, 318, 494, 1204], "beat": [199, 273, 283, 783, 1279], "talent": [199, 422], "whiteboard": [199, 1076], "chat": 199, "breakout": [199, 934], "grain": [199, 512, 541, 994, 1128, 1143, 1262], "stabil": [199, 554, 937, 1237], "thousand": [199, 304, 353, 861], "curiou": [199, 1208], "curious": 199, "licens": [199, 304, 516, 940, 1134, 1164], "lgpl": 199, "blindsid": 199, "govern": [199, 970, 1025], "html5": 199, "exception": [199, 937], "modern": [199, 203, 205, 207, 215, 218, 223, 230, 252, 274, 383, 386, 522, 523, 783, 831, 986, 1083, 1103, 1133, 1208, 1234, 1257, 1259, 1260, 1268], "heavili": [199, 220, 223, 307, 309, 422, 606, 838, 928, 937, 984, 1066, 1132], "webrtc": 199, "pain": [199, 801, 984, 1086, 1096], "death": [199, 250, 1081], "firewal": [199, 231, 1014], "busi": [199, 342, 510, 514, 664, 743, 859, 895, 897, 902, 903, 989, 1001], "couldn": [199, 203, 227, 230, 369, 1146], "indefinit": [199, 731], "ssl": [199, 359, 1236], "certif": [199, 202, 248, 1236], "encrypt": [199, 866, 887, 1006, 1014, 1015, 1016, 1187, 1224], "bbb": [199, 210, 271, 289, 359], "provis": 199, "gcp": 199, "expertis": [199, 607, 1066], "n1": [199, 224, 283], "accordingli": [199, 231, 521, 594, 604, 607, 637, 824, 934, 937, 1101, 1136, 1139, 1233], "500gb": 199, "10gb": 199, "spars": [199, 273, 283, 667, 669, 980], "mandatori": [199, 801, 937, 1133], "issuanc": 199, "udp": [199, 929, 931, 1270, 1272], "32768": [199, 1041], "clickabl": 199, "lost": [199, 263, 269, 497, 626, 800, 801, 824, 845, 1012, 1055, 1058, 1066, 1076, 1119, 1241, 1242, 1248, 1271], "7443": 199, "755": [199, 266, 404, 876, 1135], "xenial": 199, "220": [199, 224, 239, 250, 260, 263, 266, 271, 273, 279, 283, 286, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "hostnam": [199, 359, 1236], "certbot": 199, "greenlight": 199, "letsencrypt": 199, "docker": [199, 203, 359], "bundl": [199, 221, 1220, 1236], "rake": 199, "succesfulli": 199, "password": [199, 202, 231, 235, 243, 264, 401, 404, 409, 866, 888, 928, 1006, 1007, 1012, 1171, 1187, 1219], "screenshot": [199, 221, 404], "tryout": [199, 937], "kid": [199, 243, 261, 390], "layman": 199, "knew": [199, 227, 749, 764, 1066, 1101], "reproduc": [199, 202, 317, 497, 937, 1066], "thought": [199, 471, 841, 984, 1221], "tutori": [199, 212, 223, 226, 231, 235, 243, 245, 251, 252, 261, 264, 274, 277, 300, 330, 342, 358, 390, 404, 409, 891, 937, 1160, 1163, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1244], "cite": [199, 206, 212, 223, 345], "fred": [199, 929, 1108], "dixon": 199, "leader": 199, "aka": [199, 243, 266, 269, 271, 291, 626, 761, 831], "canva": 199, "bradlei": 199, "schreffler": 199, "upfront": 199, "far": [199, 223, 231, 252, 258, 266, 269, 309, 440, 455, 476, 477, 479, 490, 494, 499, 529, 546, 672, 682, 750, 800, 801, 873, 937, 961, 1110, 1132, 1213, 1258], "exhaust": [199, 1064, 1068, 1112], "heard": [199, 1066], "tast": [199, 430, 665, 742, 750, 800, 801, 804], "era": 199, "budget": [199, 247], "advertis": [199, 838], "viabl": [199, 801, 1066], "shout": [199, 803, 806], "loud": [199, 449, 683, 748, 755, 803, 833, 834], "gmunden": [200, 422], "traunse": 200, "hike": [200, 201, 227], "bergsteigen": [200, 201], "climb": [200, 201, 227, 258], "klettern": [200, 201], "outdoor": [200, 201], "donnerstag": 200, "geistigen": 200, "ersch\u00f6pfung": 200, "k\u00f6rperlich": 200, "erfahren": [200, 201, 422, 1256], "dazu": [200, 208, 209, 214, 218, 235, 404, 409, 1276], "ausgesucht": [200, 201], "zwar": [200, 1257, 1264], "lo": [200, 201, 241, 279, 315, 602, 964, 1120], "\u00fcbernachtung": 200, "gmundner": [200, 227], "h\u00fctte": [200, 201, 227], "n\u00e4chsten": 200, "naturfreundesteig": 200, "zusammenfassung": 200, "wunsch": 200, "vollend": 200, "erf\u00fcllt": 200, "unversichert": 200, "unmarkiert": 200, "leicht": [200, 235], "panik": 200, "geraten": 200, "h\u00e4nde": [200, 201], "fingern\u00e4gel": 200, "z\u00e4hne": 200, "mitunt": [200, 201, 1275], "verkoffert": 200, "augen": [200, 286], "offenhalten": 200, "spur": 200, "folgen": [200, 235, 236, 1255], "fr\u00fcher": [200, 280], "umdrehen": 200, "sackgass": 200, "erweist": 200, "weggehen": 200, "stirnlamp": 200, "mitnehmen": 200, "war": [200, 209, 214, 216, 224, 235, 239, 422, 510, 1255, 1257], "sch\u00f6nsten": 200, "jemal": 200, "zuletzt": 200, "traumhaften": 200, "gegend": 200, "griffweit": 200, "erscheint": 200, "eindr\u00fcck": 200, "m\u00fcder": 200, "abklatsch": 200, "erinnerungen": 200, "hirn": 200, "eingebrannt": 200, "einstieg": [200, 235], "traunsteinstra\u00df": 200, "hundert": [200, 210, 283], "meter": 200, "s\u00fcdlich": 200, "hoisn": [200, 227], "wirt": [200, 227], "markiert": [200, 201], "wanderweg": [200, 201], "wegweisern": [200, 201], "bergauf": [200, 201], "kupp": 200, "klamm": 200, "einsteigt": 200, "bergab": 200, "touristisch": 200, "erschlossen": 200, "trifft": 200, "familien": 200, "kindern": [200, 1264], "ungef\u00e4hr": 200, "rechter": 200, "felsstock": 200, "adlerhorst": 200, "sieht": [200, 210, 214, 224], "touristenzon": 200, "schart": 200, "durchschnaufen": 200, "einstellen": 200, "gen\u00fcsslich": 200, "h\u00f6henmet": 200, "verspeisen": 200, "steinmanderl": 200, "verfehlen": 200, "erkennbar": [200, 210], "kamm": 200, "r\u00fcber": 200, "traunsteinfelsen": 200, "erstreckt": [200, 201], "sch\u00f6nste": 200, "meditativ": 200, "wundersch\u00f6n": [200, 201], "steil": 200, "voll": 200, "zecken": 200, "bl\u00fcht": 200, "rinnen": 200, "leichtest": [200, 210], "dahin": 200, "wieder": [200, 224, 226, 234, 239, 241, 255, 1255, 1264], "vertun": 200, "manderl": 200, "aufstellen": 200, "nachwelt": 200, "nemesi": 200, "bergverr\u00fcckten": 200, "schl\u00fcsselstel": 200, "quert": 200, "latschen": 200, "\u00f6fter": [200, 201], "festhalten": 200, "gel\u00e4nd": 200, "einsam": 200, "bohrhaken": 200, "verrotteten": 200, "schuhband": 200, "festh\u00e4lt": 200, "runterfallen": 200, "stell": [200, 224, 255], "umgehen": 200, "querung": 200, "hierher": 200, "st\u00fcck": 200, "reinzum\u00fcnden": 200, "scheint": [200, 208], "gibt": [200, 201, 208, 210, 211, 214, 224, 235, 236, 247, 273, 399, 1255, 1257], "foto": [200, 893], "mittendrin": 200, "besch\u00e4ftigt": 200, "hose": 200, "kacken": 200, "gesagt": [200, 214, 224, 234, 422], "manderln": 200, "aufnahmen": 200, "zunehmenden": 200, "sonnenuntergang": 200, "unvergesslich": 200, "nacht": [200, 201], "geworden": 200, "halten": [200, 201], "hinauf": 200, "stund": [200, 919, 1276], "gekostet": 200, "exklus": [200, 224, 234], "schluss": [200, 224, 244], "schneck": 200, "j\u00e4gerbrot": 200, "schein": 200, "ausstieg": 200, "hernlersteig": 200, "m\u00fcndet": 200, "gmundnerh\u00fctt": 200, "gem\u00fctlich": [200, 201], "nett": [200, 201, 214, 325, 422, 1264], "wirtsleut": 200, "h\u00fcttenruh": 200, "ansitzen": 200, "schweinsbraten": 200, "reinkommt": 200, "k\u00fcche": 200, "geputzt": 200, "backerbsen": 200, "morgen": [200, 279, 283], "hochnebel": 200, "blick": [200, 201], "flugzeug": 200, "gipfel": [200, 201], "dolin": 200, "nebel": 200, "dabei": [200, 210, 214, 250, 369, 422], "verziehen": 200, "r\u00fcckweg": 200, "hoisnwirt": 200, "miesweg": 200, "karibik": 200, "steiner alpen": 201, "kamni\u0161ke alp": 201, "kamni\u0161ko savinjskih alp": 201, "alten": [201, 1257], "tradit": [201, 263, 266, 385, 387, 496, 511, 666, 668, 669, 671, 691, 768, 873, 937, 1155, 1187], "bleiburg": [201, 258], "k\u00e4rnten": [201, 422], "umliegenden": 201, "bergen": 201, "interessantesten": 201, "2558m": [201, 258], "steiner": 201, "alpen": 201, "gekannt": 201, "nun": [201, 218, 224, 247, 254, 279, 709], "n\u00e4chste": [201, 218], "jahr": [201, 224], "\u00fcberschreitung": 201, "soweit": [201, 1264], "h\u00f6chst": 201, "interessant": 201, "steinhaufen": 201, "unge\u00fcbt": 201, "verloren": [201, 239, 242], "h\u00f6henangst": 201, "helm": 201, "schaden": 201, "schottersurf": 201, "kommen": [201, 273, 404, 409, 422, 920], "ihr": [201, 209, 214, 224, 369, 852, 1256, 1257, 1264], "artikel": [201, 208], "ins": [201, 209, 422, 818, 1264], "eisenkappel": 201, "seebergsattel": 201, "openstreetmap": 201, "dorf": 201, "uhren": 201, "stehengeblieben": 201, "scheinen": 201, "parkplatz": 201, "geparkt": 201, "wissend": 201, "tal": 201, "beginnt": [201, 234, 1276], "ahnen": 201, "stetig": 201, "verzagen": 201, "kar": 201, "pl\u00f6tzlich": 201, "freundlich": 201, "vorhanden": [201, 1264], "fr\u00fchst\u00fcck": 201, "lager": [201, 315], "gebucht": [201, 214, 226, 422], "respektvol": 201, "erklimmenden": 201, "zieht": 201, "haltend": 201, "wand": 201, "wiederum": [201, 224], "mittlerweil": 201, "akzeptiert": 201, "deswegen": [201, 234, 239, 1255], "schliesslich": 201, "stehend": 201, "denn": [201, 224, 234, 1276], "hinaufkomm": 201, "passiert": [201, 224, 241], "anf\u00e4ngern": 201, "geschehen": [201, 359], "jung": [201, 422], "izola": 201, "slowenien": 201, "stellten": 201, "frage": [201, 210, 214, 241, 244, 247, 253, 273, 422, 1264, 1276], "ankam": 201, "wurd": [201, 214, 218, 224, 226, 235, 404, 409, 422, 1257, 1264], "beantwortet": 201, "adoptivs\u00f6hn": 201, "gewonnen": 201, "nachbarberg": 201, "ko\u010dna": 201, "sichtlich": 201, "spa\u00df": [201, 280], "abstieg": 201, "erweitert": 201, "rund": 201, "fertig": [201, 234, 251, 279, 359, 760, 770, 848], "empfehl": 201, "runterzugehen": 201, "raufgekommen": 201, "ostseitigen": 201, "westseitig": 201, "langen": 201, "grat": 201, "felst\u00fcrm": 201, "daf\u00fcr": [201, 218, 224, 234, 235], "anstrengend": 201, "200m": 201, "pulverhangerl": 201, "zur\u00fcck": [201, 224, 236, 1264], "wohlverdient": 201, "la\u0161ko": 201, "geschmack": 201, "schroff": 201, "selektiv": 201, "jedermann": 201, "kett": 201, "umfasst": 201, "2000m": 201, "umschlossen": 201, "gletschergeformten": 201, "karen": 201, "steilen": 201, "w\u00e4nden": 201, "ost": 201, "richtung": 201, "schlafm\u00f6glichkeiten": 201, "biwak": 201, "einladung": 201, "\u00fcberquerung": 201, "dringend": 201, "f\u00e4llig": [201, 422], "fu\u00dfnoten": 201, "belieben": 201, "gummi": 201, "reifen": 201, "fahren": 201, "mehrplatzlag": 201, "reserviert": 201, "h\u00fcttenschl\u00e4fer": 201, "ohrenst\u00f6psel": 201, "f\u00e4lle": 201, "eingetreten": 201, "fassen": [201, 279], "typ": [201, 236, 247, 257, 920, 1220], "geschnarcht": 201, "geschrien": 201, "modules sign": 202, "secure boot": 202, "shim": 202, "dell xps 13": 202, "unresolv": [202, 959, 961, 1083], "upset": [202, 838], "tendenc": 202, "vendor": [202, 203, 538, 548, 607, 934, 980, 984, 1033], "efi": [202, 359], "implementor": [202, 295, 296, 298, 355, 356, 374, 381, 754, 801, 834, 943, 1241, 1258], "shine": 202, "stuck": 202, "cryptographi": 202, "third": [202, 238, 250, 279, 325, 384, 386, 522, 663, 665, 771, 772, 876, 919, 961, 964, 1029, 1066], "parti": [202, 555, 665, 955, 961, 1025, 1047, 1076, 1224], "openssl": [202, 887], "req": 202, "x509": 202, "newkei": 202, "rsa": [202, 1012], "keyout": 202, "xps13": 202, "priv": [202, 978], "outform": 202, "36500": [202, 607], "subj": 202, "passphras": [202, 231, 1012], "expiri": 202, "0x2": 202, "97": [202, 210, 224, 234, 239, 241, 247, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 504, 1212], "e5": 202, "ef": 202, "55": [202, 210, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 400, 411, 487, 512, 731, 732, 733, 734, 736, 739, 743, 744, 797, 1083, 1166], "88": [202, 210, 224, 234, 239, 241, 247, 250, 252, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 506, 1152, 1212, 1213, 1248], "3a": 202, "b3": 202, "9c": 202, "1b": 202, "a4": 202, "d7": 202, "sha256withrsaencrypt": 202, "issuer": [202, 550], "sep": [202, 203, 230, 250, 263, 266, 271, 279, 283, 286, 304, 325, 343, 359, 370, 512, 721, 913, 934, 937, 1016, 1066, 1083], "56": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 411, 449, 573, 797, 910, 934, 937, 1212, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "gmt": 202, "aug": [202, 266, 928, 936], "2121": 202, "subject": [202, 540, 945, 982, 1046, 1066, 1241], "rsaencrypt": 202, "modulu": [202, 260, 266, 276, 279], "b5": 202, "2d": [202, 253, 665, 1153], "5c": 202, "6f": [202, 359, 1071], "b0": 202, "95": [202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1212, 1213], "f6": 202, "9e": 202, "67": [202, 212, 224, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 512, 597, 1071, 1153, 1166, 1212, 1213], "9d": 202, "0d": 202, "bc": [202, 934, 964], "f5": 202, "6e": 202, "fe": [202, 512], "94": [202, 210, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 575, 576, 1212], "2b": [202, 937], "e6": 202, "b2": 202, "59": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 411, 1085, 1096, 1212], "a0": [202, 936], "f8": 202, "7d": 202, "1c": 202, "2c": 202, "9f": 202, "62": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 873, 1166, 1212], "4d": [202, 1153], "86": [202, 210, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1212, 1213], "e3": [202, 569], "dd": [202, 861, 891], "7b": 202, "3f": 202, "aa": 202, "b8": 202, "a5": [202, 936], "d5": 202, "0b": 202, "d1": [202, 273, 336, 359], "e8": 202, "dc": [202, 550], "c5": 202, "d2": [202, 273, 336, 365], "c2": [202, 553, 666, 755], "0a": [202, 432], "a1": [202, 263, 308, 745, 1166], "e1": [202, 251, 264, 569, 849], "89": [202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 504, 934, 936, 937, 1085, 1212, 1213], "4c": 202, "4a": 202, "77": [202, 224, 232, 234, 239, 241, 243, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 401, 404, 409, 1212, 1213], "a9": 202, "52": [202, 210, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 400, 937, 1212], "68": [202, 224, 229, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 913, 1212, 1213], "b6": 202, "a8": 202, "9b": 202, "d8": 202, "7f": [202, 937], "54": [202, 210, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 398, 399, 411, 519, 705, 706, 707, 708, 846, 913, 934, 974, 1096, 1212], "e2": [202, 251, 264, 569, 849], "a3": [202, 745], "79": [202, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1212, 1213], "f4": 202, "96": [202, 210, 224, 234, 239, 241, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 504, 1084, 1085, 1212, 1213], "63": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 404, 409, 1166, 1212], "73": [202, 212, 224, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 1212], "4f": [202, 1153], "1d": 202, "7e": 202, "4e": 202, "0e": 202, "d9": 202, "8c": 202, "d3": 202, "c8": 202, "f7": 202, "8e": 202, "49": [202, 210, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 400, 804, 876, 1096, 1110], "d6": 202, "3b": 202, "1e": 202, "4b": [202, 937, 1071], "72": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 404, 409, 658, 922, 1096, 1166, 1212, 1213], "5e": [202, 1139], "5f": [202, 747], "7c": 202, "51": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 705, 706, 707, 708, 913, 916, 1212], "expon": [202, 1139], "65537": 202, "0x10001": 202, "x509v3": 202, "75": [202, 224, 234, 239, 241, 244, 247, 250, 252, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 512, 1212, 1213], "98": [202, 210, 224, 234, 241, 247, 250, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 383, 399, 404, 409, 649, 685, 1085, 1086], "0c": [202, 937], "keyid": 202, "39": [202, 210, 212, 213, 224, 229, 234, 239, 241, 243, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 336, 339, 343, 347, 353, 359, 365, 369, 396, 397, 398, 399, 400, 401, 569, 876, 1066, 1083, 1212, 1213], "8f": 202, "b1": 202, "b7": 202, "9a": 202, "fa": 202, "7a": 202, "df": [202, 227, 343, 347, 353, 365, 512], "a6": 202, "32": [202, 203, 208, 210, 213, 224, 229, 234, 239, 241, 244, 247, 250, 253, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 426, 428, 444, 449, 488, 549, 554, 578, 594, 607, 855, 861, 887, 913, 929, 931, 980, 1043, 1084, 1085, 1086, 1096, 1164], "c9": 202, "76": [202, 224, 234, 239, 241, 247, 250, 252, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 545, 546, 797, 846, 1166, 1212, 1213], "f0": 202, "b4": 202, "f9": 202, "eb": 202, "f1": 202, "46": [202, 224, 229, 234, 239, 241, 244, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 396, 399, 781, 913, 937, 1021, 1212, 1213], "6c": [202, 937], "2f": [202, 428, 1153], "5a": 202, "c1": [202, 553, 666, 755], "e0": 202, "d0": 202, "93": [202, 210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1212], "8d": 202, "33": [202, 213, 224, 229, 234, 239, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 308, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 398, 399, 400, 512, 553, 861, 903, 1083, 1212, 1213], "2a": 202, "fc": [202, 549, 550], "1a": 202, "b9": 202, "cb": [202, 713], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 202, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 202, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 202, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 202, "wl72mzqr": 202, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 202, "hmszvaowukuzi2kflrpvc": 202, "79gwnr4": 202, "jc": 202, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 202, "valspcvotvjdokib4eyxnavjbdjdldd": 202, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 202, "nb3kgq7zt5ym": 202, "b8ce2f": 202, "ettmprmfi94x": 202, "7i5tuqrbsylistict": 202, "rf1kw6": 202, "zuzvmwyow9cyzwc5rar": 202, "ys0exg3v": 202, "hyjl7vaxa23rb": 202, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 202, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 202, "dz1idzapbgnvhrmbaf8ebtadaqh": 202, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 202, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 202, "xra": 202, "kdtflvc7uuvwtp": 202, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 202, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 202, "yqfvxbjphkw": 202, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 202, "ahemjzbycfiiq65b5x": 202, "y7aq": 202, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 202, "rk": 202, "b3lljngstu2g": 202, "mokutil": 202, "mokmanag": 202, "bloodi": [202, 1080, 1221], "fan": [202, 223, 227, 253, 277, 346, 1208], "highest": [202, 260, 266, 276, 279, 325, 455, 500, 936, 1066, 1070], "melt": 202, "7390": [202, 266], "cross develop": 203, "raspberry pi": [203, 928, 929, 930, 931, 932, 934, 936, 937], "crosstool-ng": 203, "c++": [203, 205, 1257, 1258, 1259, 1260], "sadli": [203, 253, 494, 815, 934, 953, 1037, 1040, 1084, 1107], "linaro": [203, 1095], "libstdc": [203, 1096, 1098], "unsatisfi": 203, "libpthread": [203, 1086], "feedback": [203, 218, 221, 230, 231, 232], "thankfulli": 203, "gperf": [203, 1098], "flex": [203, 934, 964, 1098], "texinfo": [203, 1098], "help2man": [203, 1098], "libtool": [203, 1098], "ncurs": [203, 957], "unzip": [203, 985, 1098], "rsync": [203, 1098], "diffutil": 203, "libncurses5": [203, 1098], "gawk": [203, 1098], "util": [203, 209, 230, 359, 534, 536, 547, 553, 572, 586, 700, 761, 797, 810, 813, 815, 1098, 1105, 1236, 1268], "ct": [203, 1086, 1098], "zlib": [203, 1098], "extra": [203, 224, 234, 260, 461, 516, 634, 801, 843, 984, 1066], "prior": [203, 856, 873, 898, 934, 1083, 1100, 1154, 1274], "bootstrap": [203, 1098, 1243], "yann": 203, "morin": 203, "warranti": [203, 243, 401, 747], "merchant": [203, 747], "rpi3": 203, "armv7": 203, "rpi2": 203, "23179": 203, "glibc_2": [203, 1083], "ldd": [203, 522, 543, 1083, 1086, 1101], "0xb6e06000": 203, "invok": [203, 232, 251, 264, 390, 395, 524, 528, 550, 652, 663, 756, 1061, 1084, 1122, 1134, 1135, 1160], "rpt2": 203, "rpi1": 203, "deb10u1": 203, "quirk": [203, 928], "werror": [203, 436, 449, 492, 541, 550, 557, 748, 797, 952, 953, 1250], "behind": [203, 242, 373, 449, 500, 550, 572, 681, 984, 1014, 1045, 1083, 1127, 1225], "glibcxx_3": 203, "libgcc_": 203, "downgrad": 203, "cmake_find_root_path": [203, 1084], "cmake_sysroot": [203, 1084], "viewpoint": [203, 801, 1265], "bye": [203, 770, 774, 776, 777, 778, 1221], "relocat": 203, "fragil": [203, 801], "ideal": [203, 218, 260, 266, 276, 279, 296, 298, 499, 538, 541, 553, 601, 742, 770, 925, 943, 961, 980, 984, 1012, 1049, 1086, 1127, 1129], "sdk": 203, "job": [203, 223, 233, 292, 493, 525, 928, 1021, 1022, 1023, 1066, 1103, 1121, 1133, 1137, 1213, 1241, 1262, 1267], "buildroot": 203, "encount": [203, 231, 279, 283, 724, 936, 937, 1031], "ct_prefix": 203, "categori": [204, 215, 512, 1210], "crosstool": [204, 307, 1084, 1095, 1096, 1099], "1399": 204, "dell": 204, "xp": [204, 510], "grintovec": [204, 258], "plan\u0161arsko": 204, "jezero": 204, "\u010de\u0161ka": [204, 258], "ko\u010da": [204, 258], "traunstein": [204, 227, 422], "zierlersteig": [204, 227], "bigbluebutton": [204, 206, 207], "suck": [204, 764], "consumpt": 204, "repair": [204, 263], "nand": 204, "40w": 204, "beratung": 205, "gentl": [205, 207, 231, 233, 422, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1272, 1273, 1281], "contact": 206, "necessarili": [206, 342, 476, 506, 682, 797, 868, 970, 984, 1016, 1125, 1243, 1250], "solder": [206, 207], "tinker": [206, 207, 1262], "individu": [207, 243, 401, 452, 510], "sysv": [208, 1084, 1086], "grace": [208, 320, 817], "sigterm": [208, 1080, 1081], "sigkil": 208, "beeinflussen": 208, "shutdown": [208, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 356, 359, 365, 386, 412, 922, 961, 1077, 1116], "herausgefunden": [208, 214, 422], "nachfolgend": 208, "manpag": 208, "verhindern": 208, "genehm": 208, "w\u00e4re": [208, 234, 244, 280, 1257], "inhibit": [208, 355, 800, 827], "children": [208, 504, 532], "vererbt": 208, "attributen": 208, "setprior": 208, "execv": [208, 1028, 1083], "sched_reset_on_fork": 208, "ORed": 208, "privileg": [208, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 887, 922, 1066], "playback": 208, "prevent": [208, 211, 260, 266, 269, 276, 279, 307, 382, 486, 492, 496, 824, 868, 1025, 1030, 1066, 1069, 1080, 1107, 1119, 1149], "evad": 208, "rlimit_rttim": 208, "getr": 208, "anstel": 208, "prozessen": 208, "prozess": [208, 405], "startenden": 208, "gestarteten": 208, "weitergegeben": 208, "ausser": [208, 235, 399], "unterbunden": 208, "pthread_attr_setinheritsch": 208, "pthread_inherit_sch": 208, "ignor": [208, 220, 279, 325, 415, 450, 470, 500, 516, 529, 550, 681, 684, 748, 749, 770, 800, 835, 873, 936, 942, 1029, 1081, 1105, 1236], "pthread_explicit_sch": 208, "newli": [208, 492], "sowa": [208, 214, 422], "\u00e4hnlich": [208, 239], "filter_driv": 208, "offenbar": [208, 224, 422, 1255], "miser": [208, 700], "netzwerkdrivern": 208, "hoher": 208, "interruptlast": 208, "verbessern": 208, "n\u00f6tig": 208, "diesbez\u00fcglich": 208, "\u00fcberlegt": 208, "schaltet": 208, "netzwerkdriv": 208, "30107": 208, "linuxfound": 208, "workgroup": 208, "napi": [208, 238, 978], "implementationen": 208, "libmodbu": 208, "freemodbu": 208, "konfiguriert": [208, 209], "jumbo": 208, "jumbo_fram": 208, "mtu": [208, 930], "1500": [208, 266], "eth0": 208, "9000": [208, 266], "ifconfig": [208, 978], "abgelegt": 208, "konfigur": [208, 210], "vorsicht": [208, 234, 920], "routern": 208, "fragmentieren": 208, "tracerout": 208, "netzwerkverbindung": 208, "g\u00fcte": 208, "sar": 208, "sysstat": 208, "schmerzvol": 208, "netter": 208, "ausprogrammiert": 209, "konflikt": 209, "anhand": [209, 218, 235, 236, 285, 421], "parallelen": 209, "demonstr": [209, 211, 231, 303, 386, 602, 651, 724, 1210, 1214, 1253], "mutter": [209, 1275], "aller": [209, 218, 1275], "hilf": [209, 234, 404, 409], "gefixt": 209, "kommunk": 209, "variablen": [209, 210, 235, 236, 239, 242, 247, 275, 293, 294, 396, 399, 405, 1261, 1275], "frontal": [209, 385, 386, 387], "vorgef\u00fchrt": 209, "diskuss": [209, 218, 240, 422], "dank": [209, 214, 422], "beispielcod": 209, "h\u00e4ndisch": [209, 1256], "zweier": [209, 235], "bewundern": 209, "k\u00f6nnt": 209, "euch": 209, "erinnern": [209, 422], "blinken": 209, "liess": 209, "irgendwo": [209, 283], "hatten": [209, 214, 422], "waren": [209, 214, 1257], "empf": 209, "unbedingt": [209, 224], "beispielprogramm": 209, "horcht": 209, "gesprochen": 209, "ausf\u00fchrlich": [209, 294], "schamlos": 209, "eigenwerbung": 209, "vortrag": 209, "linuxtagen": 209, "\u00fcberbleibsel": 209, "ehemaligen": 209, "socketcan": [209, 929, 930, 1262], "absorbiert": 209, "worden": [209, 218], "enth\u00e4lt": [209, 224], "schnuckelig": 209, "aufzeichnen": 209, "replai": [209, 930], "folien": [209, 218, 226], "freitag": 209, "kerneldrivertag": 209, "sorri": [209, 215, 870, 1066], "emanuel": 209, "beispieldriv": 209, "finden": [209, 218], "han": [209, 824], "angeboten": 209, "promin": [209, 518, 520, 843, 980], "implementiert": [209, 224, 255, 1276], "gute": [209, 226, 1264], "anfang": [209, 210, 218, 369], "mcp2515": [209, 984], "angesprochen": [209, 226], "fortgeschrittener": [209, 226], "einpflegt": 209, "agiert": 209, "mcp251x": 209, "at91": 209, "soc": [209, 934, 936, 937, 1039], "chip": [209, 263, 928, 932, 934, 1021, 1023, 1067, 1166], "deinem": 209, "stecker": 209, "verbaut": 209, "at91_can": 209, "lacht": 209, "zeilenweisen": 210, "nutzdaten": [210, 263], "zeil": [210, 224, 234, 241, 244, 247, 250, 256, 260, 279, 283, 301, 304, 343, 347, 359, 399], "extrahieren": [210, 237], "wollend": [210, 1264], "spalt": 210, "offensichtlich": [210, 1256], "separiert": 210, "felder": 210, "antwort": [210, 311, 353], "stdtype": 210, "str": [210, 213, 224, 234, 239, 241, 242, 247, 250, 252, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 300, 301, 303, 304, 308, 309, 310, 311, 313, 315, 317, 319, 320, 321, 323, 324, 325, 329, 331, 335, 336, 338, 339, 341, 342, 343, 345, 346, 347, 351, 353, 357, 358, 359, 363, 364, 365, 367, 369, 389, 395, 398, 399, 400, 404, 476, 494, 512, 525, 581, 586, 666, 667, 668, 669, 790, 826, 834, 1107, 1121, 1123, 1124, 1127, 1136, 1138, 1139, 1150, 1154, 1158, 1166, 1173, 1176, 1221, 1227, 1232, 1233], "gscheitesten": 210, "aufeinanderfolgend": 210, "whitespac": [210, 271, 279, 325, 434, 524, 532, 1154, 1178, 1233], "nimmt": [210, 235, 247, 271, 273, 279, 311, 1255], "tupl": [210, 223, 228, 230, 232, 236, 240, 242, 248, 249, 251, 255, 258, 261, 262, 264, 265, 267, 268, 272, 274, 275, 276, 281, 284, 287, 288, 290, 300, 302, 305, 308, 309, 312, 322, 324, 326, 330, 331, 343, 346, 348, 354, 356, 358, 360, 366, 369, 375, 381, 383, 387, 389, 404, 579, 798, 1112, 1130, 1138, 1139, 1144, 1153, 1156, 1186, 1208, 1258, 1278], "weiss": [210, 214, 224, 343, 1276], "rauskommen": 210, "aaa": [210, 271, 283, 289, 325, 359], "tbbb": 210, "tccc": 210, "feld0": 210, "feld1": 210, "feld2": 210, "ccc": [210, 289], "optional": [210, 1255], "splittet": 210, "bearbeitet": 210, "manuel": [210, 234, 239], "ddd": 210, "eee": 210, "maxsplit": [210, 279, 325, 512], "restfield": 210, "len": [210, 211, 212, 214, 224, 234, 239, 241, 242, 247, 250, 251, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 332, 343, 347, 353, 359, 365, 369, 396, 399, 512, 931, 980, 1111, 1124, 1137, 1139, 1145, 1147, 1154, 1156, 1158, 1159, 1204, 1221, 1225, 1228, 1232], "her": [210, 235, 279, 282, 736, 866, 887, 1174, 1216], "10101010": 210, "switchnumb": 210, "rsplit": [210, 279, 325, 512, 1154], "l1": [210, 213, 224, 241, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 570], "l2": [210, 213, 224, 241, 247, 250, 255, 260, 263, 266, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "append": [210, 211, 212, 213, 214, 224, 229, 231, 234, 239, 241, 242, 243, 244, 247, 250, 255, 256, 257, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 378, 382, 399, 400, 512, 525, 534, 541, 625, 643, 684, 700, 713, 733, 857, 858, 873, 876, 897, 910, 934, 945, 957, 972, 984, 1012, 1025, 1071, 1104, 1110, 1111, 1124, 1140, 1145, 1148, 1150, 1155, 1158, 1159, 1186, 1233, 1236], "\u00e4nderung": [210, 224, 1276], "87": [210, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1166, 1212, 1213], "zeigen": [210, 919], "dasselb": 210, "objekt": [210, 224, 234, 325], "140070310441600": 210, "ver\u00e4ndert": 210, "140070371015728": 210, "92": [210, 211, 234, 239, 241, 243, 247, 250, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 916, 1212, 1213], "attributeerror": [210, 224, 260, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1107, 1120, 1121, 1128], "gottseidank": 210, "alternativ": [210, 369], "aufruf": [210, 224, 230, 234, 279, 400], "paaren": 210, "keyerror": [210, 213, 224, 234, 241, 250, 260, 263, 266, 271, 273, 276, 279, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1107, 1156, 1230], "umstaendlich": 210, "102": [210, 224, 234, 239, 241, 247, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409], "103": [210, 224, 234, 241, 247, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399], "105": [210, 224, 234, 239, 241, 247, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 409, 1071], "106": [210, 224, 234, 239, 241, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 913], "setdefault": [210, 251, 271, 286, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1156], "107": [210, 224, 234, 239, 241, 243, 247, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 401, 499], "meinvoelligsinnlosertyp": 210, "sinnlose_addit": 210, "sinnlobj": 210, "112": [210, 224, 231, 234, 239, 241, 247, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 913], "113": [210, 224, 234, 239, 241, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 308, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 554], "__main__": [210, 214, 224, 229, 247, 250, 260, 263, 264, 266, 271, 273, 276, 279, 283, 286, 289, 292, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 404, 1108, 1111, 1115, 1121, 1129, 1236, 1242], "0x7f64a8934890": 210, "114": [210, 212, 224, 234, 241, 247, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "115": [210, 224, 234, 239, 241, 247, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "116": [210, 224, 234, 241, 247, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "nochwenigersinnvol": 210, "der_absolute_unsinn": 210, "super": [210, 226, 227, 234, 248, 250, 251, 266, 274, 277, 281, 300, 304, 315, 324, 346, 365, 526, 569, 1105, 1107, 1124, 1208, 1215], "unsinn": 210, "uebertreibs_jetzt_bitt": 210, "117": [210, 224, 234, 241, 247, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "118": [210, 224, 234, 241, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 913, 1166], "0x7f64a894a790": 210, "119": [210, 224, 234, 241, 243, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 401], "121": [210, 212, 224, 234, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "1335": 210, "122": [210, 212, 224, 234, 239, 241, 247, 250, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1085], "819508": 210, "123": [210, 224, 234, 241, 242, 247, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 445, 930, 1166, 1172, 1242], "uptim": 210, "timedelta": [210, 229, 256, 258, 311], "358": [210, 266, 311, 325, 343, 353, 359, 369, 506], "124": [210, 224, 231, 234, 241, 247, 250, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1166], "125": [210, 234, 239, 241, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 930, 1066], "irgendwann_einmal_gewesen": 210, "834972": 210, "126": [210, 224, 234, 239, 241, 247, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "datetime_from_batteri": 210, "840837": 210, "127": [210, 224, 234, 239, 241, 247, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1014, 1022], "846889": 210, "woher": [210, 273], "ausschauen": 210, "sinnlo": [210, 273], "sinnlos": [210, 247, 325], "repraesent": 210, "129": [210, 224, 234, 241, 243, 250, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 401], "130": [210, 224, 234, 241, 256, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369, 800, 957, 1152], "completedprocess": [210, 279, 289], "returncod": [210, 279, 289], "erfolgreich": 210, "beendet": 210, "schau": 210, "du": [210, 224, 279, 286, 292, 1022, 1027], "verwendest": 210, "anzuzeigen": [210, 365], "cell": [210, 223, 370, 928, 1105, 1106, 1107, 1112, 1120, 1121, 1127, 1128, 1132, 1149, 1150, 1154, 1213, 1228, 1230], "gesendet": 210, "ausf\u00fchrt": 210, "krieg": 210, "131": [210, 224, 234, 241, 250, 256, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 835], "capture_output": [210, 289], "ndrwxrwxr": [210, 289], "2607": 210, "33768": 210, "misc": [210, 211, 370, 626, 953, 997], "ndrwxr": 210, "switchzeug": 210, "sondern": [210, 224, 235, 1275], "keiner": [210, 224, 343, 1257], "seinen": [210, 224], "formuliert": [210, 218], "logisch": [210, 234], "irgendwa": [210, 256, 271, 273], "konverti": 210, "musst": 210, "dich": 210, "festlegen": 210, "133": [210, 224, 234, 241, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "stdout_as_utf8": 210, "utf": [210, 251, 260, 263, 264, 266, 270, 276, 279, 289, 311, 325, 331, 343, 347, 353, 359, 365, 387, 1139, 1158, 1206], "134": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 845], "135": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "drwxrwxr": [210, 289, 913, 1039, 1084, 1085, 1096, 1098], "136": [210, 212, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 546], "elem": [210, 214, 224, 229, 234, 239, 241, 244, 256, 263, 266, 271, 276, 301, 304, 311, 321, 325, 331, 347, 353, 359, 365, 369, 610, 707, 709, 770, 772, 774, 777, 810, 822, 834, 835, 837, 1112, 1155, 1159], "listdir": [210, 317, 321, 353, 359, 370, 411, 512], "ipynb_checkpoint": [210, 289, 353], "gitignor": [210, 540, 1085], "137": [210, 221, 224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "rekurs": 210, "iterieren": [210, 214, 224, 239, 247], "dirpath": 210, "dirnam": [210, 263, 266, 317, 512, 607, 797, 1241], "checkpoint": [210, 260, 266, 276, 279], "itg": 210, "scope": [210, 218, 224, 235, 236, 239, 270, 282, 295, 296, 298, 307, 319, 330, 341, 345, 346, 351, 352, 355, 357, 358, 363, 364, 367, 368, 374, 383, 385, 386, 404, 440, 446, 534, 570, 620, 640, 653, 655, 663, 803, 822, 823, 824, 843, 849, 850, 1106, 1151, 1258, 1268], "getter": [210, 709], "setter": [210, 250, 1128], "fibo": [210, 211, 230, 250, 264, 770, 772, 1111], "listcomprehens": 210, "generatorexpress": [210, 211], "switchdb": 210, "schema": [210, 291, 650, 1165], "michi": 210, "pyexec": 210, "ifadminstatu": 210, "ifdescr": 210, "iflastchang": 210, "snmpenginetim": 210, "ifoperstatu": 210, "uniq": [210, 211, 228, 230, 242, 248, 258, 261, 264, 270, 274, 280, 282, 285, 303, 310, 323, 324, 329, 330, 346, 351, 352, 357, 358, 363, 364, 367, 368, 624, 925, 1181], "digit": [210, 211, 230, 237, 242, 248, 258, 261, 270, 274, 279, 280, 282, 283, 285, 287, 288, 303, 310, 323, 324, 325, 329, 330, 342, 351, 352, 353, 357, 358, 363, 364, 367, 368, 369, 389, 409, 434, 443, 1181], "fein": [210, 234], "helferlein": 210, "hochtrabend": 210, "nennt": 210, "funktional": 210, "138": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1166], "139": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "140": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 321, 325, 331, 343, 347, 353, 359, 365, 369, 800], "l_quadrat": 210, "141": [210, 224, 234, 241, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 445, 913], "kompliziert": [210, 224, 276, 279, 301], "anm": 210, "versionen": [210, 280], "aufgebaut": 210, "rausnehmen": 210, "konfigurationsfil": 210, "configpars": 210, "142": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 308, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1016, 1071], "143": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1086], "liste_als_str": 210, "144": [210, 224, 234, 241, 250, 257, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 546], "145": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1226], "herbert": 210, "146": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "heraussen": 210, "147": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 866], "148": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 666], "149": [210, 224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "151": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 411], "152": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 411, 1230], "mein_dict": 210, "gerhard": 210, "175": [210, 224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 325, 331, 343, 347, 353, 359, 365, 369], "154": [210, 224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 913], "dict_as_json_str": 210, "155": [210, 224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 411], "gelesenes_dict_von_json": 210, "nahm": 211, "woch": 211, "anspruch": 211, "platz": 211, "gesammelten": 211, "notizen": 211, "schnell": [211, 214, 234, 255, 280, 1256], "sachen": [211, 237], "is_prim": [211, 234, 237, 242, 1188], "divisor": [211, 242, 369, 797, 1180], "unmodifi": [211, 224, 260, 271, 553, 604, 650, 663, 934, 937, 1107, 1120, 1191], "randomnumb": 211, "howmani": 211, "randrang": [211, 239, 263, 271, 273, 276, 279, 283, 286, 289, 311, 353, 359, 365, 369, 399, 1108, 1143], "justifi": [211, 223, 258, 279, 325, 427, 816, 1132, 1181], "fibonacci": [211, 214, 230, 251, 264, 303, 317, 319, 320, 324, 330, 341, 342, 345, 386, 771, 1112, 1113, 1114, 1181], "cur": [211, 331, 450], "fibonum": 211, "tend": [211, 310, 313, 320, 500, 870, 957, 1099], "input_list_str": 211, "input_list": [211, 286, 1191], "__n": [211, 797], "__lt__": [211, 273, 276, 279, 283, 301, 304, 325, 343, 365], "rh": [211, 260, 264, 279, 369, 438, 480, 496, 525, 570, 584, 650, 663, 665, 803, 807, 848], "__le__": [211, 273, 276, 279, 283, 301, 304, 325, 343, 365, 1127], "__eq__": [211, 273, 276, 279, 283, 301, 304, 325, 343, 365, 848, 1127], "__iadd__": 211, "iadd": 211, "__add__": [211, 276, 279, 283, 301, 325, 343, 365, 1127], "new_numb": [211, 266], "__radd__": [211, 276, 283, 301, 365, 1127], "radd": 211, "lh": [211, 260, 264, 369, 438, 480, 496, 525, 570, 584, 640, 650, 663, 665, 803, 807, 848, 861], "makesnosens": 211, "__number": 211, "input_numb": 211, "numnber": 211, "list_of_squar": 211, "compehens": 211, "effort": [211, 283, 317, 493, 494, 511, 936], "local_assign": 211, "read_global_vari": 211, "local_shadows_glob": 211, "explicit_global_assign": 211, "creation": [211, 320, 342, 816, 890, 1025, 1050, 1059, 1066, 1077, 1086, 1149, 1158, 1159, 1243, 1265, 1271], "captur": [211, 294, 295, 296, 298, 318, 355, 356, 374, 375, 383, 384, 385, 386, 389, 404, 801, 802, 805, 928, 1066, 1103, 1258], "create_funct": 211, "loc": [211, 304, 308, 309, 310, 311, 313, 315, 317, 342, 363, 367, 368, 487, 824, 1053, 1118, 1225, 1226, 1227, 1228, 1229], "inner_funct": [211, 528, 532], "whic": 211, "f_one": 211, "f_two": 211, "launch": [211, 227], "discov": [211, 223, 230, 1066], "area": [211, 220, 253, 283, 376, 379, 936, 980, 1066, 1264, 1272], "panda": [212, 223, 242, 248, 261, 274, 288, 291, 309, 312, 324, 341, 343, 345, 348, 352, 354, 365, 422, 512, 1132, 1208, 1211, 1214, 1223], "scikit": [212, 214, 261, 370, 1243], "manipul": [212, 377, 380, 530, 541, 683, 797, 845, 934, 982, 1016, 1025, 1070, 1082, 1146, 1165, 1261], "appreci": [212, 263, 870, 1166], "beauti": [212, 226, 227, 230, 248, 250, 251, 258, 269, 273, 274, 277, 283, 300, 324, 404, 422, 476, 626, 683, 1050, 1158, 1166, 1208, 1277], "spectral": [212, 1210], "matlab": [212, 214, 267, 422, 1210, 1279], "mat": 212, "scipi": [212, 214, 242, 261, 1243], "loadmat": [212, 214], "sklearn": [212, 214, 369, 1211, 1213, 1243], "pixel": [212, 369], "rgb": [212, 214, 369, 413], "dimens": [212, 214, 1213, 1259], "xkcd": 212, "corei": [212, 223, 226, 227, 230, 235, 237, 243, 245, 248, 251, 258, 261, 264, 274, 277, 288, 291, 300, 324, 330, 358, 404, 409, 1208, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1244], "schafer": [212, 223, 226, 227, 230, 248, 251, 258, 261, 264, 274, 277, 288, 291, 300, 324, 330, 358, 404, 409, 1208, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1244], "keith": [212, 223, 227, 248, 261, 274, 288, 291, 324, 330, 1208], "galli": [212, 223, 227, 248, 261, 274, 288, 291, 324, 330, 1208], "sci": 212, "kit": [212, 413], "spyder": [212, 223, 1132], "pycharm": [212, 223, 317, 1132], "retain": [212, 469, 1150], "invoc": [212, 382, 531, 570], "comparison": [212, 229, 252, 266, 269, 279, 287, 325, 385, 386, 445, 449, 455, 626, 798, 803, 1141, 1184], "misfeatur": 212, "png": [212, 214, 359, 369, 544, 1085, 1210], "imgfil": 212, "veggi": [212, 214, 369, 1210], "pillow": [212, 214], "welcom": 212, "cooper": [212, 817, 824], "477x686": 212, "imgarrai": [212, 214], "ndim": [212, 1213], "477": [212, 266, 311, 359, 369], "dtype": [212, 214, 308, 311, 315, 347, 353, 365, 369, 1213, 1226, 1227, 1228, 1230, 1231, 1232], "uint8": [212, 369, 747], "255": [212, 247, 263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1061], "172": [212, 224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 495], "cut": [212, 230, 243, 283, 297, 306, 327, 328, 371, 372, 449, 484, 875, 923, 925, 937, 974], "nrow": [212, 214], "ncol": [212, 214], "stack": [212, 213, 214, 221, 235, 236, 254, 260, 263, 266, 276, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 494, 500, 519, 570, 654, 684, 843, 863, 864, 868, 936, 1029, 1046, 1050, 1272], "reshap": [212, 214, 248, 261, 274, 288, 291, 324, 330, 369, 1208, 1211, 1213], "slice": [212, 214, 223, 227, 228, 230, 232, 237, 240, 241, 244, 251, 263, 264, 266, 267, 270, 274, 275, 281, 282, 284, 285, 286, 288, 300, 303, 305, 310, 313, 320, 323, 324, 326, 329, 330, 332, 341, 342, 345, 346, 351, 352, 357, 358, 363, 364, 367, 368, 982, 1068, 1131, 1144, 1148, 1226, 1230], "irrelev": [212, 229, 234, 267, 445, 487, 510, 876, 1139, 1221], "colorspac": 212, "mpl_toolkit": 212, "mplot3d": 212, "axes3d": 212, "pyplot": [212, 241, 260, 289, 292, 343, 347, 353, 365, 1104, 1163, 1213], "plt": [212, 241, 260, 289, 292, 343, 347, 353, 365, 1104, 1163, 1213], "fig": 212, "add_subplot": 212, "set_xlabel": 212, "set_ylabel": 212, "set_zlabel": 212, "ndindex": 212, "scatter": [212, 955], "linear": [212, 214, 224, 227, 229, 247, 255, 310, 341, 345, 479, 501, 672, 835, 867, 936, 1080, 1143, 1209, 1210, 1215], "rgb_linear": [212, 369], "n_cluster": [212, 214, 369], "copy_x": 212, "max_it": 212, "n_init": 212, "n_job": 212, "precompute_dist": 212, "random_st": [212, 1211, 1213], "tol": 212, "verbos": [212, 219, 377, 528, 541, 846, 856, 891, 893, 1086, 1143, 1236], "cluster_cent": 212, "int32": [212, 369, 496], "327222": 212, "cluster_centers_": [212, 214, 369], "20529747": 212, "50360681": 212, "3796182": 212, "94408609": 212, "75471018": 212, "53133237": 212, "226": [212, 224, 243, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369, 401], "64913628": 212, "76939951": 212, "92569235": 212, "71464963": 212, "47333306": 212, "60640492": 212, "8888303": 212, "92275244": 212, "84313209": 212, "157": [212, 224, 234, 241, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "30685398": 212, "43988931": 212, "03959132": 212, "225": [212, 224, 263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 325, 331, 347, 353, 359, 365, 369, 544, 1166], "55934051": 212, "182": [212, 224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "98255893": 212, "3232048": 212, "241": [212, 263, 266, 271, 273, 276, 279, 286, 289, 304, 321, 325, 331, 347, 359, 365, 369, 1166], "37322907": 212, "159": [212, 224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "54158234": 212, "51775529": 212, "idx": [212, 214, 279, 365, 369], "cube": [212, 369], "concaten": [212, 214, 251, 263, 264, 271, 279, 325, 353, 369, 398, 445, 511, 917, 1144, 1152], "axi": [212, 214, 315, 369, 1228, 1230], "reduced_img": [212, 214, 369], "fromarrai": [212, 214, 369], "franziska": [213, 214], "baseexcept": [213, 250, 279, 283, 304, 1107], "callabl": [213, 227, 263, 276, 286, 289, 304, 311, 321, 325, 332, 359, 751, 800, 803, 822, 1121, 1122, 1159], "rescu": [213, 271, 662, 683, 844, 846, 984, 1105], "pooh": [213, 528, 675], "hex": [213, 224, 234, 241, 256, 266, 276, 289, 301, 304, 311, 321, 331, 347, 353, 359, 369, 399, 415, 607, 937, 1153], "0x7f03d41165f0": 213, "nonexist": 213, "ensu": 213, "jessa": [213, 234, 241, 263, 292, 343], "verdammt": [213, 404], "traceback": [213, 260, 266, 276, 279, 289, 309, 311, 325, 347, 1105, 1106, 1107, 1112, 1120, 1121, 1127, 1128, 1149, 1150, 1154, 1156, 1159, 1160, 1221, 1228, 1230, 1242], "ipython": [213, 250, 260, 266, 276, 279, 304, 321, 359, 913], "bd3a1af9b474": 213, "issubclass": [213, 250, 266, 279, 304], "bummer": [213, 266, 768, 825, 1152], "peter": [213, 236, 273, 283, 395, 396, 1145], "paul": [213, 395, 396, 824, 1145], "mari": [213, 1145], "pet": 213, "perfectli": [213, 269, 488], "bloh": [213, 250], "blech": [213, 321, 815, 1224], "range_iter": [213, 224, 239, 256, 263, 271, 273, 276, 279, 289, 301, 304, 311, 321, 369], "0x7f03d402e570": 213, "stopiter": [213, 224, 239, 250, 256, 260, 263, 266, 271, 273, 276, 279, 283, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 770, 778, 1107, 1112], "einf\u00fchrung": [214, 218, 231, 1257, 1278], "beantwortung": [214, 422], "herrschaft": [214, 422], "gehalten": [214, 226, 235, 422, 1257], "schulungsr\u00e4umen": [214, 422], "tectrain": [214, 226, 235, 237, 245, 248, 251, 252, 253, 254, 258, 270, 282, 422], "platzhirsch": [214, 422], "schlagen": [214, 422], "guten": [214, 224, 226, 235, 245, 279, 283, 422, 1257], "spass": [214, 422, 1264], "unglaublich": [214, 422], "lustig": [214, 235, 422], "vermittelt": [214, 422], "gelernt": [214, 422], "anwend": [214, 422], "beachten": [214, 235, 422], "zudem": [214, 422], "kursleit": [214, 422], "sympathisch": [214, 422], "kompet": [214, 422], "w\u00fcrde": [214, 224, 422], "weiterempfehlen": [214, 422], "christoph": [214, 256, 422], "nie": [214, 226, 422, 1257], "jemand": [214, 422], "datentypen": [214, 218, 235, 236, 242, 245, 276, 294, 405, 1255], "lassen": [214, 224, 235, 1256, 1276], "bevor": [214, 1264, 1276], "anf\u00e4ngerthemen": 214, "herumzureiten": 214, "gehackt": [214, 254], "zeug": [214, 343], "chef": 214, "vorgespr\u00e4ch": 214, "\u00fcbungsbeispiel": [214, 224], "teilnehm": [214, 218, 226, 422, 1264], "mitgegeben": 214, "ausgehend": [214, 235, 422], "spektralbild": 214, "sagt": [214, 271], "verwend": [214, 247], "clusteringalgorithmu": 214, "kategorisieren": 214, "abgebildeten": 214, "erkennen": [214, 1257], "hab": 214, "erlaubt": [214, 224], "kursvorbereitung": 214, "appet": 214, "reduzieren": 214, "farbredukt": 214, "farben": 214, "bilddaten": 214, "schreiben": [214, 236, 404, 405, 409, 1255], "interoperiert": 214, "nahtlo": [214, 1264], "zufal": [214, 240, 1256], "alpha": [214, 279, 325, 369, 1066, 1164], "ausgangsbild": 214, "abzuschneiden": 214, "restoren": 214, "algorithmu": [214, 234, 279, 283, 286], "ander": [214, 224, 235, 245, 255, 263, 276, 399, 404, 409, 413, 422, 856, 1257, 1275], "reduc": [214, 369, 456, 548, 937, 1210], "acht": [214, 234, 235, 279, 311, 331, 359], "\u00fcberschaubar": 214, "ausdrucksst\u00e4rk": 214, "bemerkbar": 214, "wegschneiden": 214, "pil": [214, 369], "kmean": [214, 369], "nrgba": 214, "disregard": [214, 449], "arbitrarili": [214, 943, 1031, 1035, 1105], "linear_rgb": 214, "rgba": 214, "ergeben": 214, "testprogramm": 214, "imndata": 214, "teilzeitmitarbeiterin": 214, "studiert": 214, "physik": 214, "folgendem": [214, 256, 1276], "bekackten": 214, "inputformat": 214, "parsen": [214, 239], "zwischendurch": 214, "gruppenarbeit": 214, "h2o": 214, "dat": 214, "mass": [214, 320], "0000000e": 214, "2662399e": 214, "5994910e": 214, "4391972e": 214, "0048070e": 214, "0078250e": 214, "hessian": 214, "hartre": 214, "bohr": 214, "kamu": 214, "05054e": 214, "61610e": 214, "00000e": 214, "20781e": 214, "08051e": 214, "83024e": 214, "06829e": 214, "42629e": 214, "65256e": 214, "52600e": 214, "69570e": 214, "91733e": 214, "04388e": 214, "34292e": 214, "04780e": 214, "63758e": 214, "19019e": 214, "41217e": 214, "11622e": 214, "21912e": 214, "11752e": 214, "04198e": 214, "36702e": 214, "14839e": 214, "71613e": 214, "96373e": 214, "40456e": 214, "21369e": 214, "24236e": 214, "60956e": 214, "84350e": 214, "29686e": 214, "92365e": 214, "einigen": [214, 235, 422], "runden": [214, 224], "nachdenken": 214, "einigerma\u00dfen": 214, "zufrieden": 214, "load_dat": 214, "matrix_lin": 214, "vergeigt": 214, "matrix_el": 214, "unnecessari": [214, 380, 440, 470], "triangular": 214, "max": [214, 224, 242, 247, 260, 266, 269, 271, 273, 276, 281, 286, 304, 358, 359, 369, 454, 470, 626, 674, 868, 929, 1043, 1213], "row_no": 214, "__name__": [214, 250, 251, 264, 273, 279, 283, 304, 321, 325, 397, 404, 1106, 1108, 1111, 1115], "bildverarbeitung": 214, "ahnung": [214, 256], "beeeeeep": 215, "broad": [215, 549, 1215, 1258], "responsibl": [215, 1068, 1241], "sane": [215, 359, 415, 529, 868, 1216, 1241], "interfer": [215, 500, 540, 936], "paradigm": [215, 867, 875, 928, 936, 1066, 1270, 1272], "breakag": [215, 964], "nontrivi": [215, 223, 227, 406, 764, 1132, 1281], "inappropri": [215, 427, 432, 553, 942], "conclus": [215, 223, 230, 982], "awkward": 215, "encourag": [215, 943, 1066], "hear": 215, "predat": [215, 385, 921, 947, 1041], "doubt": [215, 260, 266, 276, 279, 283, 845, 1139], "schulungsbeschreibung": 216, "drehbuch": 216, "workshop": 216, "infolgedessen": 216, "virtuel": [216, 280, 1270], "konzipiert": [216, 226, 422], "add_subdirectori": [217, 514, 532, 536, 546, 1075, 1250], "group1": 217, "group2": 217, "montag": [218, 226, 227, 248, 252], "vorbereitung": [218, 422, 1255], "mitbringen": 218, "teilzunehmen": 218, "stattfinden": [218, 294], "folgt": 218, "bauanleitung": 218, "vorab": [218, 254], "ausprobieren": 218, "willkommen": 218, "schulungsbeschreibungen": 218, "raii": [218, 320, 648], "scott": [218, 767, 815, 831], "meyer": [218, 558, 815, 831, 1066], "primer": [218, 1248], "sonstig": 218, "argh": [218, 471, 529, 735, 839, 1107, 1236, 1248], "kursanforderung": 218, "erg\u00e4nzend": 218, "lasst": 218, "entwickeln": 218, "testcas": [218, 1242], "aufgab": [218, 224, 254, 1275], "hacken": 218, "diskutieren": 218, "niederschrift": 218, "geschehenen": 218, "geh\u00f6renden": 218, "privaten": 218, "respositori": [218, 373], "entwickelt": [218, 1264], "verl\u00e4uft": 218, "ansehen": 218, "clonen": 218, "wann": [218, 226], "erw\u00e4hnt": 218, "zugeh\u00f6rigen": 218, "entspricht": 218, "unbetr\u00e4chtlich": 218, "gcc5": 218, "laufen": 218, "darau": [218, 226], "entstanden": 218, "installationsanleitung": 218, "benutzung": [218, 404, 409], "aggreg": [218, 377, 501, 512, 650, 996, 1226, 1248], "einzeln": 218, "klassen": [218, 224, 230, 405, 1257], "konstruktoren": [218, 242, 294, 405, 1257], "methoden": [218, 224, 236, 399, 1257], "referenzen": [218, 224, 235, 236, 294, 1257], "klass": [218, 247, 343], "\u00e4quival": 218, "\u00fcbergab": 218, "ausbauen": 218, "dynamisch": [218, 249, 1255, 1257], "dynmem": 218, "demonstrieren": 218, "alloziert": [218, 224, 241], "konstruktor": 218, "destruktor": 218, "fehler": [218, 224, 244, 404, 409], "vermeiden": [218, 224], "dtor": [218, 382, 548, 634, 801, 806, 810, 813, 840], "ausflug": [218, 234, 275], "capac": [218, 700], "\u00fcbung": [218, 235, 236], "handgestrickt": 218, "fallen": [218, 1256, 1257], "lustvol": 218, "erleiden": 218, "teufel": [218, 1256], "smart": [218, 294, 316, 355, 381, 385, 387, 405, 406, 407, 422, 510, 607, 717, 783, 798, 812, 846, 1258, 1259], "shared_ptr": [218, 253, 269, 295, 296, 298, 316, 318, 355, 356, 381, 383, 384, 385, 386, 387, 562, 626, 717, 798, 800, 823, 831, 841, 847, 1258], "unique_ptr": [218, 253, 269, 295, 296, 298, 316, 318, 355, 356, 381, 383, 384, 385, 387, 548, 554, 562, 588, 589, 626, 717, 795, 797, 798, 810, 841, 844, 1258], "exclus": [218, 244, 266, 283, 320, 452, 682, 819, 1025, 1066, 1068, 1118, 1154, 1158, 1169, 1228], "demonstriert": 218, "vorgriff": 218, "sortieren": [218, 1257], "employeerecord": 218, "parametrisierbarem": 218, "koordinatentyp": 218, "102ff": 218, "arten": [218, 1255], "containern": 218, "pointerarithmetik": 218, "iteratoren": [218, 281], "laufzeitverhalten": [218, 236], "verbesserungen": 218, "gegen\u00fcb": [218, 1255], "6ff": 218, "gegen\u00fcberstellung": 218, "sort_algorithm_reverse_lambda": 218, "vererbung": [218, 1257], "fallstudi": 218, "livegehackt": 218, "angebunden": 218, "komplex": [218, 271, 273, 279, 286, 311], "aufbauen": 218, "kund": 218, "vergleichbaren": 218, "anbinden": 218, "m\u00f6glichkeiten": 218, "wurden": [218, 226], "eigen": [218, 237, 1257, 1264], "kapitel": [218, 404, 409, 1255], "behandelt": 218, "vorbeigehen": 218, "dcmake_cxx_flag": 219, "dcmake_install_prefix": [219, 543], "lib64": [219, 224, 250, 260, 266, 276, 279, 283, 359, 506, 522, 532, 543, 545, 1083, 1086, 1101, 1108, 1228, 1230, 1236, 1250], "libgtest": [219, 220, 316, 318, 1248, 1250], "claim": [219, 438, 666, 668, 669, 866, 1027], "simlp": 219, "find_packag": [219, 221, 378, 518, 520, 521, 1250], "add_test": [219, 538, 627, 630, 642, 1247, 1250, 1252], "emphasi": [219, 1262, 1265], "ultim": [219, 250, 270, 658, 757, 936], "luke": [219, 279, 1250], "thetoplevel": 219, "findgtest": [219, 221, 523, 1250], "gtest_root": 219, "dgtest_root": 219, "paranoidli": 219, "bitrot": [220, 1250], "clutter": [220, 520, 534], "var": [220, 224, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 584, 862, 893, 913, 919, 920, 922, 984, 1083, 1086, 1098], "libgmock": [220, 316, 318], "dcmake_build_typ": [220, 541], "loudli": [220, 658, 987, 1012], "central": [220, 253, 342, 345, 424, 468, 548, 797, 1101, 1146, 1158, 1259], "flathub": 221, "appstream": [221, 359], "visualstudio": [221, 280, 423], "flatpakref": 221, "stone": 221, "snap": 221, "hate": [221, 652], "findpackagehandlestandardarg": [221, 518, 519], "gtest_librari": 221, "gtest_include_dir": 221, "gtest_main_librari": 221, "378": [221, 263, 266, 273, 311, 353, 359, 369, 1166], "_fphsa_failure_messag": [221, 519], "197": [221, 224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "find_package_handle_standard_arg": [221, 518, 519], "occur": [221, 283, 373, 430, 445, 450, 451, 497, 515, 524, 624, 819, 891, 921, 982, 1046, 1066, 1068, 1153, 1154, 1158, 1266], "gessmann": 221, "cpoint_demo": 221, "cmakefil": [221, 540, 544, 546, 1084, 1085], "cmakeoutput": 221, "sigh": [221, 253, 607, 831, 1200], "jail": 221, "dict_extensions_suit": 222, "thing_suit": 222, "xsv": 222, "dict_extens": 222, "thursdai": [223, 227], "draft": [223, 798, 938, 1160, 1280], "freedom": [223, 500, 744, 764], "spontan": 223, "cost": [223, 384, 1066], "agil": [223, 237, 510, 1281], "methodologi": [223, 373], "formul": [223, 319, 512, 757, 759, 1022, 1259], "diadact": [223, 1132], "anaconda": [223, 317, 359, 1132], "dictat": [223, 333, 349, 449, 488, 534, 1066, 1077, 1132, 1133, 1217, 1234, 1236, 1273], "volumin": [223, 1066, 1132], "nodepad": [223, 1132], "configurabilti": [223, 1234], "eclips": [223, 1132, 1224], "pydev": [223, 1132], "seemingli": [223, 227, 1083, 1132, 1208], "strang": [223, 934, 1132], "emac": [223, 243, 321, 372, 891, 913, 1083, 1132, 1234], "datatyp": [223, 227, 230, 235, 236, 237, 240, 242, 246, 249, 254, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 274, 275, 280, 281, 282, 284, 285, 287, 290, 300, 302, 305, 312, 320, 322, 326, 332, 342, 344, 346, 348, 354, 360, 366, 370, 377, 380, 404, 409, 442, 449, 524, 530, 532, 654, 682, 753, 1114, 1131, 1176, 1180, 1183, 1194, 1278], "mutabl": [223, 227, 228, 230, 232, 235, 236, 242, 249, 258, 261, 262, 264, 265, 266, 267, 272, 274, 275, 278, 281, 285, 287, 288, 290, 293, 303, 305, 310, 312, 313, 317, 319, 320, 322, 323, 324, 326, 329, 330, 332, 341, 342, 344, 345, 346, 348, 351, 354, 357, 358, 363, 364, 366, 367, 368, 370, 375, 764, 835, 1131, 1140, 1144, 1278], "immutabilii": 223, "crisi": 223, "slept": 223, "lunch": 223, "squeez": 223, "Such": [223, 302, 1083, 1241], "takeawai": 223, "nonverb": 223, "antenna": 223, "Being": [223, 874, 915, 937, 1148, 1269], "stubborn": 223, "greybeard": 223, "therebi": [223, 373, 810, 922, 1080, 1127, 1166], "distutil": 223, "azur": 223, "devop": [223, 1281], "heavyweight": [223, 410, 751, 801], "reach": [223, 271, 528, 720, 724, 725, 784, 786, 801, 845, 861, 943, 948, 1031, 1153], "afternoon": [223, 346], "simplic": [223, 570, 821, 861, 929, 1020, 1105], "paral": 223, "imposs": [223, 283, 496, 552, 770, 828, 982, 1049, 1058, 1066], "expand": [223, 279, 325, 470, 471, 529, 935, 1031, 1083, 1085], "entertain": [223, 227, 248, 251, 274, 300, 324, 346, 1208], "freelanc": 223, "raymond": [223, 226, 227, 230, 234, 235, 248, 251, 258, 274, 277, 300, 324, 346], "hetting": [223, 226, 227, 230, 234, 235, 248, 251, 258, 274, 277, 300, 324, 346], "bias": 223, "humor": [223, 934, 1153], "emphas": [223, 230, 252, 643, 939, 947, 964, 1236], "hehe": [223, 230], "dissect": [223, 227, 315, 375, 724, 806, 1112, 1208], "multiprocess": [223, 227, 277, 319, 320, 346, 1208, 1264, 1270], "truli": [223, 227, 1208], "chri": [223, 227, 248, 1208], "wilcox": [223, 227, 248, 1208], "frontier": [223, 227, 300, 324, 346, 1208], "whop": [223, 227, 300, 324, 346, 1099, 1208, 1215], "precis": [223, 227, 283, 300, 324, 346, 353, 369, 426, 444, 720, 757, 984, 1066, 1153, 1208], "covid": 223, "matplotlib": [223, 242, 261, 262, 274, 288, 289, 291, 293, 324, 343, 348, 352, 354, 365, 413, 1104, 1162, 1208, 1214], "apart": [223, 283, 320, 463, 849, 929, 1110], "venv": [224, 250, 260, 266, 276, 277, 279, 291, 321, 359, 411, 412, 913, 1163, 1196, 1208, 1222, 1241, 1243, 1244, 1281], "ipykernel_launch": [224, 276, 279, 359], "57bd7d77": 224, "6e54": 224, "4dcd": 224, "b7a8": 224, "452f82f88569": 224, "hallo": [224, 234, 239, 242, 244, 247, 255, 263, 266, 273, 276, 279, 283, 286, 292, 304, 308, 311, 331, 343, 347, 353, 359, 386, 399, 446, 658, 797, 861, 910, 1006, 1019, 1022, 1028], "welt": [224, 234, 247, 399, 422], "gern": [224, 1264], "doku": [224, 234, 301], "aeh": 224, "__doc__": [224, 247, 250, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 325, 343, 347, 353, 359, 365, 397, 399, 1108, 1136, 1159], "interaktiven": 224, "modu": 224, "formatierung": [224, 234, 294], "\u00fcbernimmt": 224, "bieten": 224, "sech": [224, 234, 247, 279, 286, 311, 325], "zurueck": [224, 283, 321], "objektidentit\u00e4t": [224, 242], "0x7fe9d8578dc0": 224, "namen": [224, 234, 283, 343, 920, 1276], "referenzieren": 224, "wechselt": 224, "zeigt": [224, 234, 1264], "identit\u00e4t": 224, "0x7fe9c4454d90": 224, "listen": [224, 230, 235, 236, 240, 275, 294, 347, 404, 529, 930, 968, 1014, 1224, 1270, 1272], "ausdrucksstark": 224, "trotzdem": [224, 1264], "lesbar": [224, 273], "beid": [224, 239, 255, 359, 1276], "modifizieren": 224, "modifik": 224, "sichtbar": [224, 422], "gerechnet": 224, "18446744073709551615": [224, 234, 244, 247, 260, 263, 271, 273, 279, 283, 286, 289, 311, 343, 365, 399], "18446744073709551616": [224, 234, 244, 247, 260, 263, 271, 273, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 399], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [224, 234, 244, 247, 260, 283, 286, 304, 331, 359], "valueerror": [224, 234, 250, 256, 263, 271, 273, 276, 279, 283, 286, 289, 292, 304, 311, 325, 343, 347, 353, 359, 365, 369, 1107, 1154], "typeerror": [224, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 343, 347, 353, 359, 365, 398, 1106, 1107, 1120, 1127, 1150, 1159, 1228, 1230], "gel\u00f6scht": 224, "retten": 224, "uff": 224, "140641996429568": 224, "\u00e4ndern": [224, 236, 1276], "erzeugt": [224, 234], "operanden": 224, "unver\u00e4ndert": 224, "new_l": [224, 279, 1140], "140641996429632": 224, "hurra": [224, 241, 304], "killerfeatur": 224, "abcabc": [224, 263], "sequentiel": [224, 234, 273, 278, 1257], "suche": 224, "Suche": [224, 236, 247, 255, 273], "umst\u00e4ndlich": [224, 234], "andrea": [224, 225, 283, 760, 770, 848], "pfeifer": 224, "gefundener_us": 224, "glauben": 224, "klammern": 224, "begrenz": 224, "interpretiert": 224, "pr\u00e4zedenz": [224, 236, 244], "overriden": 224, "ausdruck": 224, "implizit": [224, 244, 321, 1255], "evaluierungsreihenfolg": 224, "erzwingen": [224, 236, 244], "9223372036854775808": 224, "einstellig": 224, "schreibt": [224, 920, 1276], "datenmengen": 224, "abzulegen": 224, "sucht": 224, "vorstellungsvermoegen": 224, "milliarden": 224, "sebastian": 224, "hugo": [224, 266], "machma": 224, "behandeln": 224, "nichtvorhandensein": 224, "ausnahm": 224, "regel": 224, "mim": 224, "victor": 224, "festzustellen": 224, "evaluiert": 224, "aufgerufen": 224, "operand": [224, 241, 260, 263, 289, 447, 448, 449, 455, 665, 666, 668, 669, 759, 761, 835, 1127, 1141], "bereit": [224, 235, 1257], "gesamtergebni": 224, "jaja": [224, 279], "rechten": 224, "sparen": 224, "berechnung": [224, 273], "summ": [224, 247, 273, 279, 283, 286, 311, 336, 359, 365, 369], "5050": [224, 244, 266, 279, 286, 311, 353, 359, 365, 369], "einzig": [224, 576, 590], "iteriert": [224, 234], "bildet": [224, 279], "primitiveren": 224, "intelligenteren": 224, "0x7fe9c43c3c90": 224, "letzt": [224, 239, 284], "schleif": [224, 235, 236, 240], "jede": [224, 404, 409, 1276], "selb": [224, 234], "vergleicht": 224, "objektidentit\u00e4ten": 224, "objektinhalt": 224, "vergleichen": [224, 244], "modifiziert": 224, "kopieren": [224, 404, 409, 1257], "vermeintlich": 224, "modifiktionen": 224, "sch\u00fctzen": 224, "l3": [224, 241, 273, 279, 289, 301, 311, 321, 331, 353, 570], "kopi": [224, 273], "klar": [224, 234], "geschachtelt": [224, 235, 236], "gleicher": 224, "referenziert": [224, 234], "erachtet": 224, "ersparst": 224, "kopien": 224, "parametern": [224, 247], "beliebigen": [224, 920], "definieren": 224, "maximum": [224, 234, 235, 237, 239, 242, 244, 247, 254, 258, 260, 261, 263, 264, 266, 270, 271, 273, 274, 276, 279, 280, 282, 283, 285, 287, 288, 303, 304, 310, 311, 323, 324, 325, 329, 330, 351, 352, 357, 358, 359, 363, 364, 365, 367, 368, 369, 400, 451, 737, 825, 868, 928, 945, 1041, 1071, 1150, 1171, 1181, 1211, 1212, 1213, 1214, 1236], "unterst\u00fctzen": 224, "ihn": [224, 283], "\u00e4pfel": 224, "birnen": 224, "verglichen": 224, "hingegen": [224, 234], "php": [224, 254, 270, 831], "falschem": 224, "uebergeben": 224, "vergleich": [224, 247, 255, 284, 294], "aepfeln": 224, "140641996137808": 224, "add_to_list": 224, "__defaults__": [224, 273, 283, 304, 325, 1150], "meine_list": [224, 234], "defaultwert": 224, "benutzt": 224, "allerhand": 224, "seiteneffekten": 224, "aufpassen": 224, "ewig": 224, "existierend": 224, "unf\u00e4ll": 224, "wechselwirkungen": 224, "eventuellen": 224, "globalen": [224, 234], "156": [224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "erzwingt": 224, "158": [224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 308, 321, 325, 331, 343, 347, 353, 359, 365, 369], "160": [224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 301, 304, 315, 321, 325, 331, 343, 347, 353, 359, 365, 369], "gesucht": 224, "n\u00e4chst\u00e4u\u00dferen": 224, "162": [224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "nirgend": 224, "163": [224, 234, 241, 257, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "gibtsnetglob": 224, "gibtsnet": 224, "164": [224, 234, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "nameerror": [224, 239, 273, 279, 304, 325, 331, 359, 365, 1107, 1149], "aufgabenstellung": 224, "kandidat": 224, "unsportlich": 224, "zweiten": [224, 226, 331], "unnachhaltig": 224, "dritten": [224, 331], "gelegenheit": 224, "gab": [224, 226], "erz\u00e4hlen": [224, 1255], "165": [224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1166], "seq": [224, 242, 304, 359, 369, 824, 974, 1071, 1110], "fromkei": [224, 270, 275, 287, 359], "166": [224, 234, 241, 263, 266, 271, 273, 279, 283, 286, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "167": [224, 234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "xxx": [224, 241, 263, 271, 273, 279, 289, 311, 343, 347, 353, 359, 365, 398, 400, 479, 575], "kksvjhbsk": 224, "sgkysdudsvvc": 224, "dict_kei": [224, 292, 321, 1156], "diesmal": 224, "169": [224, 234, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "170": [224, 241, 250, 257, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "irgendein": [224, 256], "171": [224, 241, 243, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 401], "sonst": [224, 234, 271, 273, 286], "kategori": 224, "number_str": 224, "173": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 922], "ihm": [224, 226, 235], "174": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 913], "176": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 325, 331, 343, 347, 353, 359, 365, 369], "177": [224, 241, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "178": [224, 241, 250, 263, 266, 271, 273, 279, 283, 286, 292, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "179": [224, 231, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "180": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 512, 968], "181": [224, 241, 263, 266, 271, 273, 279, 283, 286, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 512, 1230], "heisst": [224, 236, 240, 241, 1256], "sequenz": 224, "kopiert": 224, "unterschi": [224, 241, 247, 271], "vermutlich": 224, "sobald": [224, 226], "183": [224, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "\u00fcbergeben": 224, "184": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "it1": 224, "it2": 224, "multipli": [224, 251, 264, 283, 325, 761], "n2": [224, 283], "combined_iter": 224, "186": [224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "schlecht": 224, "simplen": 224, "transformationen": 224, "generieren": 224, "quadratzahlen": [224, 273], "187": [224, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "quadrat": 224, "naeherung": 224, "performant": 224, "gen_squar": 224, "189": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 321, 325, 331, 343, 347, 359, 365, 369], "190": [224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "syntaktisch": [224, 247], "191": [224, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 292, 301, 304, 321, 325, 331, 343, 347, 359, 365, 369], "genexpr": [224, 250, 343, 353, 359], "0x7fe9c43f2900": 224, "193": [224, 241, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "194": [224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369], "195": [224, 241, 263, 266, 271, 273, 276, 279, 283, 286, 292, 304, 325, 331, 343, 347, 353, 359, 365, 369], "indent": [224, 239, 257, 264, 270, 279, 280, 458, 1130, 1133, 1143, 1233], "196": [224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "userlist": 224, "nochwa": [224, 273, 311, 369], "dropdown": 224, "dropdownlist": 224, "fehleranf\u00e4llig": 224, "198": [224, 241, 250, 263, 266, 271, 273, 276, 279, 283, 286, 292, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "202": [224, 241, 250, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 325, 331, 343, 347, 359, 365, 369, 512, 554], "203": [224, 241, 250, 252, 263, 266, 271, 273, 276, 279, 283, 286, 301, 304, 325, 331, 343, 347, 353, 359, 365, 369, 1083], "205": [224, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "206": [224, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 325, 331, 343, 347, 353, 359, 365, 369], "207": [224, 250, 263, 266, 271, 273, 279, 283, 286, 289, 304, 325, 331, 347, 353, 359, 365, 369], "208": [224, 263, 266, 271, 273, 279, 283, 286, 289, 304, 325, 331, 343, 347, 353, 359, 365, 369], "209": [224, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 325, 331, 343, 347, 353, 359, 365, 369], "user_a": 224, "user_b": 224, "n\u00e4herung": 224, "nackten": [224, 1255], "210": [224, 250, 263, 266, 271, 273, 279, 283, 286, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369], "hantiert": [224, 1256], "anderem": [224, 1264], "211": [224, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 347, 353, 359, 365, 369], "reviewten": 224, "funktionsaufruf": [224, 286], "sonder": 224, "stackoverflowprogrammierung": 224, "entgegenwirken": 224, "ausholen": 224, "212": [224, 250, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 325, 331, 343, 353, 359, 365, 369], "veloc": [224, 250, 400, 1150], "length_m": [224, 250, 400, 1150], "time_": [224, 250, 400, 1150], "213": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 325, 331, 353, 359, 365, 369], "spiel": 224, "214": [224, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 325, 331, 343, 353, 359, 365, 369], "liegen": 224, "positionel": 224, "215": [224, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 325, 331, 353, 359, 365, 369], "param": [224, 234, 247, 264, 292, 325, 528, 750, 759, 815, 831, 936, 1070], "216": [224, 250, 263, 266, 271, 273, 279, 283, 286, 301, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369], "217": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "218": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "219": [224, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 353, 359, 365, 369], "entpacken": 224, "positionellen": 224, "221": [224, 250, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "kwarg": [224, 250, 277, 279, 283, 304, 325, 1105, 1130, 1277], "explizi": 224, "rauskletzeln": 224, "223": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369, 1221], "celebrate_another_birthdai": 224, "greet": [224, 235, 245, 248, 254, 260, 261, 270, 271, 273, 279, 280, 282, 285, 288, 303, 304, 400, 516, 1084, 1085, 1092, 1102, 1171], "224": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 325, 331, 347, 353, 359, 365, 369], "227": [224, 263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 353, 359, 365, 369], "228": [224, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 325, 331, 343, 353, 359, 365, 369], "zeiterfassung": 225, "__pycache__": [225, 251, 264], "supp": 225, "cpython": [225, 250, 260, 266, 276, 279], "pyc": 225, "dienstag": 226, "fand": [226, 422], "offen": [226, 422], "vorwissen": [226, 1257], "konkreten": [226, 422], "aufgabenstellungen": 226, "dienstgeb": 226, "mitgebracht": 226, "quickstart": [226, 1266], "wenngleich": [226, 422], "un\u00fcblichen": 226, "reihenfolg": 226, "verbrachten": 226, "firmenprojekt": 226, "entspringenden": 226, "festgehalten": 226, "empfehlungen": 226, "weitergehen": 226, "k\u00f6nnte": [226, 1276], "idiomat": [226, 227, 230, 248, 251, 258, 274, 277, 300, 324, 1208], "lieblingsphras": 226, "bringt": [226, 1255], "forgiv": [226, 227, 324, 1208], "eafp": [226, 227, 324, 1208], "begriff": [226, 240], "viertelstund": 226, "regex": [226, 239, 264, 266, 291, 292, 301, 324, 331, 359, 1152, 1208], "unumg\u00e4nglich": 226, "textuel": 226, "analysieren": 226, "hero": [226, 227, 248, 251, 274, 300, 324, 346, 1066, 1208], "unterhaltsamen": 226, "keynot": [226, 227, 248, 251, 274, 277, 300, 324, 346, 1066, 1208], "konferenz": 226, "pydata": [226, 227, 248, 251, 274, 300, 324, 346, 1208], "chicago": [226, 227, 248, 251, 274, 300, 324, 346, 1208], "witzig": 226, "selten": 226, "l\u00e4nge": 226, "ganzen": [226, 235], "abend": 226, "totalschaden": 226, "\u00fcbertragen": 226, "jedem": 226, "angemeldet": 226, "experienc": [227, 316, 318, 345, 422, 801, 1066, 1136, 1266], "machinelearn": 227, "fuzzi": [227, 266], "accompani": [227, 316, 318, 1211, 1266], "improvis": 227, "shall": 227, "artifici": [227, 252, 310, 341, 345, 488, 735, 1016, 1100, 1215, 1223], "regress": [227, 279, 310, 341, 345, 1209, 1210, 1215], "060": [227, 412, 800], "jango": 227, "rush": 227, "compound": [227, 230, 235, 236, 237, 246, 254, 258, 259, 261, 262, 264, 265, 267, 268, 270, 272, 274, 275, 280, 281, 282, 284, 285, 287, 288, 290, 302, 303, 310, 313, 320, 322, 323, 324, 326, 329, 330, 332, 341, 342, 344, 345, 346, 348, 351, 352, 357, 358, 360, 363, 364, 366, 367, 368, 370, 426, 457, 476, 1131, 1176], "strong": [227, 277, 448, 848, 850, 1215, 1217, 1262, 1265, 1267], "claus": [227, 230, 260, 266, 276, 281, 303, 1110, 1143, 1146], "whet": [227, 310], "appetit": [227, 310], "__dict__": [227, 247, 250, 251, 263, 264, 273, 276, 279, 283, 292, 304, 321, 325, 343, 365, 1121, 1127], "con": [227, 782, 917, 1101], "fiction": 227, "get_temperature_celsiu": 227, "competitor": 227, "eana": 227, "get_temperature_fahrenheit": 227, "eanaadapt": 227, "unserthermomet": 227, "revisit": [227, 269, 277, 300, 318, 342, 682], "shift": [227, 268, 488, 500, 652, 700, 936, 1127], "visitor": [227, 787, 789, 790], "gang": [227, 1259], "idiom": [227, 649, 827], "classic": [227, 382, 487, 558, 649, 783, 976, 1066, 1259], "travers": [227, 501, 809, 844, 1107, 1112, 1148], "convolut": 227, "__call__": [227, 273, 283, 304, 325, 331, 1106], "__str__": [227, 250, 251, 264, 273, 276, 279, 283, 301, 304, 325, 342, 343, 365, 415, 1107], "__repr__": [227, 273, 276, 279, 283, 301, 304, 325, 343, 365], "poor": [227, 269, 441, 928, 974, 1026, 1081], "deleg": [227, 356, 381, 658, 798, 1258], "deck": [227, 252, 422, 626, 801], "sensordata": 227, "sensordata_test": 227, "namedtupl": [227, 235, 242, 257, 258, 260, 266, 276, 279, 300, 317, 319, 320, 324, 335, 338, 341, 342, 345, 346, 358, 364, 368, 369, 1123, 1204, 1226], "historydata": 227, "slowli": [227, 643, 800, 928, 966], "csvreport": 227, "dbapi": [227, 258, 270, 1218], "csv2sqlite3": 227, "frontend": [227, 659, 1083, 1102, 1237], "flaskerl": 227, "reiter": [227, 248, 267, 269, 274, 277, 412, 660, 1208], "phrase": [227, 230, 248, 271, 273, 274, 277, 279, 304, 857, 858, 1125, 1208], "went": [227, 373, 384, 1066, 1277], "impress": [227, 422, 486, 525, 1261], "brought": [227, 382, 500, 825, 1116], "cloth": 227, "extraordinari": 227, "mondai": [228, 230, 232, 233, 258, 307, 313, 316, 318, 372, 1066], "preliminari": [228, 230, 231, 232, 233], "homogen": [228, 422], "versu": [228, 230, 232], "immut": [228, 230, 232, 234, 235, 242, 249, 251, 262, 263, 264, 266, 272, 278, 281, 287, 293, 302, 310, 312, 313, 326, 343, 347, 354, 360, 399, 470, 764, 1138, 1139, 1140, 1144, 1278], "datastructur": [228, 252, 270, 1144], "exercise4": 228, "summari": [228, 554, 658, 801, 845, 1066, 1241], "uh2ebfw8oym": [228, 232], "f26namfjggw": 228, "5qqq3yzbkp8": 228, "ugharkscop9uthgcoaec": 228, "pairwis": [229, 263, 664], "vale": 229, "bewar": [229, 449, 520, 762, 934, 1081, 1213, 1215], "simplest": [229, 291, 540, 550, 682, 689, 819, 834, 866, 921, 989, 1061, 1096, 1134, 1139, 1241, 1249], "cheaper": [229, 500, 666, 668, 669, 800], "memorywis": 229, "johann": 229, "syntact": [229, 250, 457, 620, 660, 761, 800, 837], "sugar": [229, 800, 837], "retval": [229, 496, 706, 1051], "prio": [229, 1041, 1069, 1070], "dlc": 229, "msg1": 229, "readabl": [229, 273, 283, 317, 384, 436, 467, 471, 491, 492, 493, 500, 510, 512, 591, 705, 734, 750, 751, 755, 828, 835, 837, 844, 849, 866, 876, 882, 887, 891, 913, 1006, 1047, 1083, 1110, 1129, 1150, 1158, 1160, 1180, 1277], "0x7f41f5ff26a0": 229, "msglist": 229, "0x7f41f5ff4160": 229, "0x7f41f5ff41c0": 229, "291130": 229, "now_timestamp": 229, "1603884859": 229, "3412576": 229, "fromtimestamp": 229, "341258": 229, "372": [229, 266, 273, 311, 359, 369], "45259": 229, "microsecond": [229, 491, 868], "programmverweis": 230, "xy": [230, 273, 276, 311, 667, 1148], "zab": 230, "eventcodefil": 230, "definedlisaev": 230, "event_id": 230, "bla": [230, 353, 359], "blubb": 230, "verbessert": 230, "stringformatierung": 230, "ctype": 230, "headerfil": [230, 920], "lst": [230, 266, 873], "inclus": [230, 244, 271, 283, 470, 682, 1169, 1228], "callbackfunc": 230, "datetim": [230, 251, 257, 258, 259, 264, 312, 315, 352, 353, 1166], "blahblah": [230, 235, 237, 254, 258, 261, 264, 270, 274, 280, 281, 282, 284, 285, 287, 288, 290, 303, 310, 313, 323, 324, 329, 330, 351, 352, 354, 357, 358, 359, 363, 364, 367, 368, 1131], "mix": [230, 237, 248, 251, 258, 261, 264, 265, 269, 271, 274, 303, 310, 323, 324, 329, 330, 332, 351, 352, 357, 358, 363, 364, 367, 368, 422, 449, 488, 491, 492, 494, 496, 659, 1136, 1139, 1155, 1158, 1181, 1207, 1221, 1226, 1232, 1270, 1279], "observ": [230, 299, 317, 374, 389, 547, 555, 568, 571, 582, 748, 1113, 1114, 1220, 1259], "longish": 230, "resurrect": [230, 540, 848, 891], "outputsequ": 230, "resist": 230, "uncondition": [230, 987, 1107], "suitabl": [230, 279, 325, 745, 928, 957, 1054, 1120, 1129], "analysi": [230, 374, 500, 739, 783, 1210, 1213, 1226], "cp1252": [230, 1203, 1204, 1206], "csvlog": 230, "csv_reader": 230, "recv": [230, 231, 931], "tuesdai": [231, 313, 328], "246": [231, 263, 266, 271, 273, 276, 279, 286, 304, 321, 325, 331, 353, 359, 365, 369, 1221], "corpor": [231, 304], "commandin": [231, 233], "comress": [231, 233], "gzip": [231, 233, 297, 306, 327, 328, 371, 372, 854, 855, 856, 984, 1267], "diagnos": [231, 233, 405, 406, 1066, 1262, 1264], "netstat": [231, 233, 306, 327, 328, 371, 1224, 1262, 1264, 1267], "netcat": [231, 233, 306, 327, 328, 371, 1267], "subshel": [231, 233, 243], "telnetd": 231, "insecur": [231, 1012], "proto": 231, "foreign": [231, 307, 471], "34490": 231, "56062": 231, "systemctl": [231, 1098, 1224], "systemd1": 231, "unprivileg": 231, "putti": [231, 243, 401], "puttygen": 231, "id_rsa": [231, 1012], "authorized_kei": [231, 1012], "trivia": 231, "hoorai": [231, 276, 289, 311, 365, 1143], "idiot": 231, "blinker": 231, "briana": 231, "mac": [231, 248, 264, 891, 1134, 1208, 1244], "wakeup": [232, 269, 346, 365, 415, 419, 822, 824, 936, 980, 1023, 1055, 1065, 1068, 1271], "patrick": 232, "1996": [232, 266], "wagna": 232, "gernot": 232, "1982": [232, 266], "birthplac": 232, "txt2json": 232, "traine": 233, "equip": [233, 307, 412, 928, 1264], "sidestep": 234, "builtin_function_or_method": [234, 304, 331, 353], "sozusagen": 234, "genauso": 234, "aufrufen": [234, 920], "zaehler": 234, "initialwert": 234, "zaehlen": 234, "naechsten": 234, "schleifendurchlauf": 234, "locker": [234, 824, 982], "mein_integ": 234, "1024": [234, 266, 861, 868, 891, 930, 1021, 1047, 1083], "sch\u00fctzt": 234, "zahlen": [234, 235, 244, 1255], "passen": [234, 301], "gehandhabt": 234, "1267650600228229401496703205376": [234, 260, 263, 271, 283, 289, 311], "hoch": 234, "rechnen": [234, 404, 409], "tut": [234, 343, 399, 1255], "ausschliesslich": 234, "ganzzahldivis": 234, "ganzzahligen": 234, "resultat": 234, "gleichen": 234, "vorrang": 234, "ghi": [234, 273, 359, 365], "multilin": [234, 244, 259, 262, 266, 271, 279, 283, 343, 354, 404, 471, 1108, 1136], "viert": 234, "nwelt": 234, "nwie": 234, "linefe": [234, 243, 264, 271, 432, 433, 524, 1152, 1158, 1189, 1233], "speziel": [234, 235, 294, 1275], "bedeutung": [234, 1257], "unangetastet": 234, "glump": 234, "nebenlaeufigkeitsdemo": 234, "ebenlaeufigkeitsdemo": 234, "l\u00f6sung": [234, 247, 256, 422, 930], "formatierungsm\u00f6glichkeit": 234, "var1": [234, 244, 1173], "var2": [234, 244, 1173], "pfx_var1": 234, "pfx_var2": 234, "ausgab": [234, 1255], "notwendig": 234, "abzubrechen": 234, "ignorieren": [234, 235, 241], "gefunden": [234, 304, 920], "value1": [234, 529, 1168], "501": [234, 266, 359, 369, 1168], "value2": [234, 529, 1168], "799": [234, 263, 266, 1166, 1168], "value3": [234, 1168], "sprachen": [234, 235, 1255], "neg": [234, 279, 283, 353, 369, 449, 491, 496, 720, 922, 961, 1248], "indiz": 234, "erscheinen": 234, "komisch": 234, "bequem": 234, "mapping_t": 234, "f\u00fcnf": 234, "sieben": [234, 247, 273, 706], "neun": [234, 359, 369], "explicit": [234, 253, 260, 264, 273, 281, 283, 382, 446, 455, 483, 496, 500, 540, 575, 576, 589, 590, 626, 652, 654, 655, 678, 705, 759, 772, 800, 801, 803, 812, 826, 843, 846, 849, 955, 1025, 1039, 1046, 1081, 1102, 1103, 1133, 1136, 1139, 1216, 1228, 1268], "implicit": [234, 260, 273, 283, 436, 442, 446, 631, 759, 849, 891, 1028, 1125, 1139, 1268], "primzahlen": 234, "checken": 234, "primzahl": [234, 235], "checkenden": 234, "zahl": [234, 241, 247, 272, 273, 276, 286, 399], "probier": 234, "gach": [234, 273], "teiler": 234, "teiler_kandidaten": 234, "prim": 234, "gleichema\u00dfen": 234, "vollst\u00e4ndigkeit": 234, "halber": 234, "startend": [234, 273], "schrittweit": 234, "0x7f24f2ac0e50": 234, "ablegen": 234, "0x7f24f2ac0e70": 234, "arschlangsam": 234, "num_comparison": 234, "datenstruktur": [234, 255], "suchen": [234, 255, 919, 1257], "einf\u00fcgen": 234, "l\u00f6schen": [234, 240, 244, 404], "optimiert": [234, 247], "perfekt": 234, "einitreten": 234, "himmi": 234, "list_reverseiter": [234, 263, 286, 311], "0x7f24ec31d190": 234, "bricht": 234, "beinhart": 234, "liefert": 234, "lieber": 234, "zweit": [234, 247, 273, 304, 343, 359, 399], "po": [234, 273, 279, 283, 304, 309, 321, 325, 347, 353, 369, 512, 608, 700, 720], "wirklichkeit": 234, "ordin\u00e4r": 234, "alternativen": 234, "hang": [234, 650, 856, 987], "fruit": 234, "gemma": 234, "divisor_candid": [234, 369], "161": [234, 241, 263, 266, 271, 273, 276, 279, 283, 286, 289, 301, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "dogma": [234, 741], "zugewiesen": 234, "meine_vari": 234, "eine_vari": [234, 311, 321, 353], "angelegt": 234, "streng": 234, "obigem": 234, "dazusagen": 234, "noch_eine_globale_vari": 234, "increment_diese_vari": 234, "mittwoch": [235, 237, 245], "offiziel": [235, 237, 245, 248, 251, 252, 254, 270, 282], "leitfaden": 235, "kommentar": [235, 236, 247, 311, 399], "platziert": [235, 255], "themenreihenfolg": [235, 254], "skriptum": [235, 254], "beispielen": [235, 254], "\u00fcbernommen": [235, 254], "allgemein": 235, "allgemeinen": [235, 239], "dadurch": [235, 422, 1255], "verwirrend": 235, "weswegen": 235, "kurssprach": [235, 245, 254, 270, 282], "spezifisch": [235, 245, 254, 270, 282], "unterrichtet": [235, 245, 254, 270, 282], "hackereien": 235, "gleicherma\u00dfen": 235, "sogenannten": 235, "\u00fcbersicht": [235, 245, 248, 258, 261, 264], "semantik": [235, 236], "sprach": [235, 236, 1255, 1256, 1257, 1264, 1276], "standarddatentypen": [235, 236], "literal": [235, 236, 294], "python2": [235, 273], "endg\u00fcltig": 235, "rausl\u00f6schen": 235, "konstanten": [235, 236], "typen": [235, 241], "operatoren": [235, 236, 920, 1257], "angeschnitten": 235, "vertiefung": [235, 251], "nocheinm": [235, 422], "ausdr\u00fcck": [235, 236, 294], "operatorrangfolgen": [235, 236], "grundlegenden": [235, 405], "sprachelementen": 235, "rede": 235, "syntaxdiagramm": 235, "gespritzt": 235, "gesamt": 235, "sperrig": 235, "n\u00fctzt": 235, "menschlich": 235, "abzubilden": 235, "tabel": 235, "anweisungen": [235, 236], "gro\u00dfen": 235, "fisch": 235, "instruktiv": 235, "bedingungen": [235, 236], "verzweigungen": [235, 236], "bedingt": [235, 236, 1255], "anweisung": [235, 236], "formulierungen": 235, "mehrfach": [235, 236], "fallauswahl": [235, 236], "usernam": [235, 243, 264, 401, 857, 866, 875, 1006, 1016, 1154, 1171, 1187], "benutzereingaben": 235, "\u00fcberpr\u00fcfen": 235, "schleifenkonstrukt": 235, "weitgehend": 235, "unserem": 235, "vehikel": 235, "hilfreich": 235, "klarstellung": 235, "fu\u00dfgesteuert": [235, 236], "z\u00e4hlergesteuert": [235, 236], "auslassen": 235, "kopfgesteuert": [235, 236], "gewinnt": 235, "konsol": 235, "anzeigen": 235, "voraussetzung": 235, "ausblick": 235, "schnell\u00fcbersicht": [235, 236], "sprunganweisungen": [235, 236], "endlosschleifen": [235, 236], "naja": 235, "mager": 235, "ersatz": 235, "ausgelassen": 235, "eindimensional": [235, 236], "gefolgt": [235, 273], "zeichenketten": [235, 236], "tupel": [235, 236, 239], "mengen": [235, 236, 246], "besonder": [235, 236], "stapel": [235, 236], "schlangen": [235, 236], "tempo": 235, "schauma": [235, 241], "fallt": 235, "gscheit": [235, 242, 353], "gemeinsam": 235, "dr\u00fcber": 235, "vielzahl": 235, "l\u00f6sungsm\u00f6glichkeiten": 235, "eingegangen": 235, "pythonischst": 235, "bestritten": 235, "unterprogramm": [235, 236], "parameter\u00fcbergab": [235, 236], "r\u00fcckgabewert": [235, 236], "inner": [235, 236, 256, 365, 512, 1106], "standardbibliotheken": [235, 236], "funktionalit\u00e4ten": [235, 236], "berechnet": [235, 271, 279], "pep": [235, 245, 317, 319, 320, 341, 342], "schaefer": [235, 237, 243, 245], "hacker": [235, 245, 1266], "schier": [235, 245], "unendlich": [235, 244, 245], "anzahl": [235, 245], "stil": [235, 245], "auswahl": [235, 245], "satz": 235, "gepr\u00e4gt": 235, "konferenzen": 235, "definitiv": 235, "sehenswert": 235, "anf\u00e4nger": 235, "hochinteress": 235, "sprachelement": 236, "einr\u00fcckung": [236, 244], "elementar": 236, "beliebig": [236, 271, 1264], "gro\u00df": 236, "vergleichsoperatoren": 236, "strichrechnung": 236, "modulo": [236, 247, 260, 266, 271, 279, 399, 447, 1127, 1139], "un\u00e4rer": 236, "negat": [236, 260, 283, 921, 1127, 1139, 1157], "konvertierungen": [236, 1255], "pr\u00e4zendenzregeln": 236, "vertauschen": [236, 247, 399], "kontrollstrukturen": [236, 272, 1255], "verzweigung": 236, "versuch": [236, 248, 359, 365], "hybrid": 236, "supergscheit": 236, "prozeduren": 236, "funktionen": [236, 240, 294, 405, 1255, 1257, 1275], "funktionspoint": 236, "funktionsobjekt": 236, "primzahlenbeispiel": 236, "laufzeitfehl": 236, "lokal": [236, 247, 293, 294], "zuweisen": 236, "fehlerfal": 236, "anschliessend": 237, "interaktiv": 237, "uebungen": 237, "idealerweis": [237, 311], "ueblichen": 237, "negoti": 238, "deiniti": [238, 961, 1266], "unload": [238, 964, 978, 980, 1266], "synchronizt": 238, "spinlock": [238, 386, 976, 982, 986, 992, 1003, 1069, 1266], "rcu": [238, 824], "halv": 238, "softirq": 238, "tasklet": [238, 982], "irss": 238, "kmalloc": [238, 955, 974, 996], "dma": [238, 870, 1020, 1021, 1022, 1266], "coher": [238, 955], "20201125": [239, 241], "unbekannten": 239, "lookup_t": [239, 242, 399], "12345": [239, 271, 283, 311, 359, 1242], "noch_eine_list": 239, "gesamte_list": 239, "vorl\u00e4ufig": 239, "letz": 239, "indented_text": 239, "nebenbei": [239, 241, 399], "eine_zum_sterben_verurteilte_vari": 239, "ein_set": 239, "sequenzen": 239, "grottenlangsam": 239, "subscript": [239, 273, 343, 365, 476, 682, 703, 708, 1228], "multiple_return_valu": 239, "xyz": [239, 241, 247, 266, 273, 304], "mein_formatierter_str": 239, "my_rang": [239, 279, 325, 331, 353], "retlist": 239, "zeichenkett": 239, "funktionieren": [239, 1257], "my_list": [239, 250, 292], "airms_eth": 239, "simplizistisch": 239, "bl\u00f6d": 239, "i_oder_v": 239, "iv": 239, "rms_eth": 239, "vorcompilieren": 239, "acirms_eth": 239, "my_regex": 239, "zeilennumm": 239, "dazuhaben": 239, "meine_zu_sendenden_daten": 239, "345": [239, 260, 266, 279, 311, 343, 353, 359, 365, 369], "234": [239, 263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399], "meine_zu_sendenden_daten_in_string_form": 239, "ueblicherweis": 239, "ueber": 239, "verschickt": 239, "empfangen": [239, 254], "geschrieben": 239, "empfaeng": 239, "empfangenen": 239, "natuerlich": 239, "zurueckkonvertieren": 239, "meine_empfangenen_daten_python_form": 239, "gegangen": [239, 292], "returnwerten": 240, "containerdatentypen": 240, "untypisiert": 240, "zeilen": [241, 283], "neiner": 241, "nnoch": [241, 244, 260], "nund": [241, 260], "nb": 241, "stoppt": 241, "newlin": [241, 243, 256, 279, 304, 321, 395, 425, 432, 445, 1136, 1152], "ndrin": 241, "drin": [241, 242, 247, 283, 311, 321, 359, 399, 404], "zuviel": [241, 1257], "mischt": 241, "unsupport": [241, 263, 289, 1127], "140546731085392": 241, "0x7fd395fb0e50": 241, "0x7fd3900395b0": 241, "new_t": [241, 1140], "0x7fd390052800": 241, "667": [241, 263, 266, 286, 292, 643], "2923750584022716461": 241, "529344067295497451": 241, "unhash": [241, 301, 311, 325, 353, 365], "fuenf": [241, 263, 273, 301, 311, 325, 343, 359, 369, 399], "verschluckt": 241, "6000000": 241, "elementen": [241, 255], "repr": [241, 260, 266, 276, 279, 283, 286, 289, 300, 303, 304, 310, 313, 317, 319, 320, 323, 324, 325, 329, 335, 336, 338, 341, 342, 345, 346, 351, 357, 363, 364, 367, 1107, 1123, 1124], "nonetyp": [241, 251, 265, 266, 321, 331, 343, 359, 365], "_io": [241, 260, 263, 266, 276, 279, 311, 325, 359, 396, 986], "textiowrapp": [241, 260, 263, 266, 276, 279, 311, 325, 359, 396, 1105], "oi": 241, "456": [241, 242, 266, 273, 311, 359, 445], "hansi": [241, 279, 283, 286], "linspac": [241, 347], "11111111": 241, "22222222": 241, "33333333": 241, "44444444": 241, "55555556": 241, "66666667": 241, "77777778": 241, "88888889": 241, "sin": 241, "8961922": 241, "79522006": 241, "19056796": 241, "96431712": 241, "66510151": 241, "37415123": 241, "99709789": 241, "51060568": 241, "54402111": 241, "plot": [241, 260, 289, 292, 343, 347, 353, 365, 1104, 1163, 1214, 1215], "line2d": [241, 289, 292, 343, 347, 353, 365], "0x7fd35cd3ef40": 241, "splev": 241, "splrep": 241, "spline": 241, "represent": [241, 260, 279, 369, 809, 934, 936, 994], "spl": 241, "evalu": [241, 260, 265, 271, 281, 428, 448, 453, 455, 463, 470, 471, 525, 569, 570, 583, 584, 759, 762, 763, 766, 874, 891, 1107, 1141, 1143, 1150, 1248], "x2": [241, 283], "y2": 241, "0x7fd341a486d0": 241, "speicher": [242, 1255, 1264], "sch\u00fctze": 242, "gemischten": 242, "operationen": 242, "interpol": [242, 283, 524, 525, 529, 1213], "lag": 242, "gib": [242, 321], "depp": [242, 271], "ret_l": 242, "uniq_l": 242, "dictread": [242, 263, 264, 277, 280, 285, 288, 300, 303, 323, 324, 329, 330, 347, 351, 352, 358, 363, 364, 367, 368, 1123, 1166, 1202, 1206], "read_excel": [242, 1213], "invit": [243, 742, 1262], "effici": [243, 288, 342, 460, 499, 501, 503, 683, 687, 697, 700, 841, 875, 922, 925, 1045, 1112, 1215, 1226, 1228, 1266], "expans": [243, 524, 532, 920, 921, 1261], "ecdsa": [243, 401], "fingerprint": [243, 401, 1007, 1068], "sha256": [243, 401, 526, 1007], "in22o4vcd400x0bb4flcb5": [243, 401], "vqnrvkvoirgfqq6mapo": [243, 401], "perman": [243, 401], "sat": [243, 401], "straight": [243, 1230], "startung": 243, "standpoint": 243, "suboptim": [243, 292], "pwned": 243, "hidden": [243, 561, 810, 957, 1083], "clumsi": [243, 269, 270, 310, 313, 538, 550, 650, 658, 665, 678, 706, 750, 766, 800, 801, 1104, 1105, 1121, 1122, 1228, 1258], "clumsier": 243, "dumpbin": 243, "consol": [243, 866, 869, 925, 1188, 1267], "hmoe": 243, "frcoll": 243, "bunch": [243, 751, 857, 1066, 1096, 1120], "oom": [243, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1111], "killer": [243, 263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1145], "amoc": 243, "snapshot": [243, 757, 803, 869, 1096], "tinkernut": 243, "raspberi": 243, "tunnel": [243, 309, 1006, 1014, 1025], "centric": [243, 1266], "cygwin": [243, 296, 298, 316, 870], "assort": 243, "nano": 243, "univers": [243, 318, 607, 1025, 1133, 1266], "scripe": 243, "wichtig": [244, 294, 404, 409, 1276], "kleiner": [244, 919], "decim": [244, 279, 283, 325, 353, 369, 390, 426, 512, 1139, 1153], "hexadecim": [244, 283, 445, 936, 1139, 1152, 1153], "0x1234": [244, 1139], "4660": [244, 266, 1139], "0b100110": [244, 273, 1139], "behaviour": [244, 252, 373, 970, 1031, 1158], "restklassen": 244, "klammerung": [244, 920], "6666666666666665": 244, "6665": 244, "6667": 244, "ieee": [244, 1066], "floatingpoint": [244, 447, 448, 591, 984, 1186], "representaion": 244, "4294967295": [244, 263, 271, 279], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [244, 263, 279, 311, 353], "eingebettet": 244, "eingenbettet": 244, "mississippi": [244, 247, 256, 260, 263, 271, 273, 279, 283, 289, 292, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369, 525, 720], "is_integ": [244, 301, 365], "rot": [244, 255], "gruen": 244, "blau": [244, 255], "schwarz": [244, 255], "bestimmen": 244, "6712": [244, 266], "hen": 245, "vehikelkauf": 245, "einleitung": 246, "mathematisch": [246, 304], "voellig": 247, "wohl": [247, 331, 1255, 1276], "selbsterklaerend": 247, "printet": 247, "builtin": [247, 253, 260, 266, 267, 276, 279, 283, 304, 325, 342, 343, 353, 359, 369, 891, 1108, 1271], "accur": [247, 279, 283, 304, 325, 505], "__weakref__": [247, 263, 273, 276, 279, 283, 292, 304, 325, 343], "weak": [247, 279, 283, 304, 325, 343, 375, 847, 848, 1215], "_abc": [247, 260, 266, 276, 279], "_1": [247, 750, 751], "a123": 247, "vernichten": 247, "laufzeit": 247, "140032702361168": 247, "refcount": [247, 768, 845, 847, 1105, 1258], "dezim": 247, "oktal": 247, "0o755": [247, 283, 399], "493": [247, 266, 283, 359, 369], "0b11": [247, 283, 286], "sql": [247, 258, 270, 1217, 1220], "0b11111111": 247, "ordnung": 247, "uhrzeit": 247, "vormittag": 247, "6666666666666666": [247, 283], "nda": [247, 301], "python_dir": 247, "lowercas": [247, 279, 325, 891, 1006, 1153, 1170, 1176], "140032636418048": 247, "ein_iterierbares_d": 247, "extraw\u00fcrschtl": 247, "sex": [247, 260, 282, 283, 1170], "diver": 247, "translation_t": [247, 283, 286, 289, 359], "bag": [247, 295, 296, 298, 540, 545, 796, 1077, 1140], "blue": [247, 255, 263, 283, 1166], "mengenoperationen": 247, "set1": 247, "set2": 247, "symm_diff": 247, "lisa": [247, 1066], "eugeni": [247, 250], "okan": 247, "mcguir": 247, "sinner": 247, "implicitli": [247, 252, 263, 477, 525, 534, 547, 655, 662, 756, 815, 947, 1029, 1105, 1137, 1221], "vornam": [247, 255, 256], "nachnam": [247, 255, 256], "persnr": 247, "personalnumm": 247, "doch": [247, 321, 331, 422], "5000": [247, 260, 266, 1124], "4000": [247, 266], "3000": [247, 260, 266, 286, 325], "15000": [247, 266], "uppercas": [247, 279, 325, 891, 1153, 1170], "verfuegbar": 247, "restlichen": 247, "gehaelt": 247, "konstant": [247, 255, 278], "unexpect": [247, 490, 532], "pcap": [248, 268], "certifi": 248, "math": [248, 251, 261, 263, 264, 266, 274, 283, 288, 291, 324, 330, 353, 650, 652, 761, 1133, 1208], "undo": [248, 891, 1208], "brad": [248, 1208], "traversi": [248, 1208], "evaluierung": 249, "eval": [249, 277, 278, 287, 305, 319, 320, 325, 332, 341, 344, 345, 1129, 1277], "openfil": 250, "hanld": 250, "soemth": [250, 998], "zf": [250, 359], "namelist": 250, "zipdemo": 250, "extracted_nam": 250, "8020": [250, 266, 271, 309, 512, 857, 858, 897, 903], "isinst": [250, 251, 264, 266, 279, 292, 304, 1127, 1230], "superclass": [250, 251, 264, 279], "subclass": [250, 251, 264, 279, 283, 1107, 1124], "class1": 250, "class2": 250, "salari": 250, "selina": 250, "orgl": 250, "8010": [250, 266, 512], "birth": [250, 276, 289, 650, 797, 1198, 1199, 1200, 1201, 1204, 1205, 1206], "1622102062": 250, "4778333": 250, "019427776336669922": 250, "009679079055786133": 250, "daniel": [250, 253, 395, 396, 413], "ortner": 250, "num_employe": 250, "__first": 250, "__last": 250, "__address": 250, "_person__first": 250, "_person__last": 250, "_person__address": 250, "_first": 250, "_last": 250, "_address": 250, "do_debug": 250, "val": [250, 279, 750, 936], "ueberhaupt": 250, "l_float": 250, "0x7fd9881b04a0": 250, "functool": [250, 317], "komplexen": 250, "testfil": 250, "nzeil": [250, 279, 347], "seek": [250, 325, 359, 396], "nth_fibo": 250, "accomod": 250, "0x7fd9801cec10": 250, "lf": [250, 586, 1158], "0x7fd9801b8d60": 250, "0x7fd9801b4900": 250, "0x7fd98014cd40": 250, "gen": [250, 325], "sequenceno": 250, "kv_pair": 250, "permissionerror": [250, 266, 286, 304, 321, 1107], "deni": [250, 266, 286, 321, 359, 575, 589, 874, 910, 1006, 1014, 1026, 1031, 1032, 1107, 1236], "filenotfounderror": [250, 266, 304, 1107], "64bit": 250, "utc": 250, "python_implement": [250, 251, 264], "python_version_tupl": [250, 251, 264], "python39": 250, "dynload": [250, 359], "isfil": [250, 389, 512], "isdir": [250, 512], "my_path": 250, "hopefulli": 250, "the_except": 250, "__class__": [250, 273, 276, 279, 283, 292, 301, 304, 325, 343, 365], "__bases__": [250, 251, 264, 281], "distrust": 250, "guido": [250, 1232], "incompet": 250, "precondit": [250, 859], "abdefg": 250, "beg": [250, 471, 1108], "bdefg": 250, "stringifi": 250, "0x7ffa9c2ac3a0": 250, "formatstr": 250, "ding": [250, 280, 1076], "formatierter_str": 250, "oserror": [251, 279, 304, 1107], "assertionerror": [251, 276, 292, 304, 343, 1107, 1120, 1241, 1242], "jjjj": [251, 417, 418, 509], "line_count": 251, "aud": 251, "qualifii": [251, 264], "trunc": [251, 264], "hypot": [251, 264], "seed": [251, 264, 283, 602], "ascii": [251, 264, 279, 286, 289, 304, 325, 331, 347, 353, 359, 432, 435, 438, 444, 1138, 1139, 1152, 1158, 1216], "codepoint": [251, 264], "escap": [251, 264, 271, 279, 301, 425, 524, 1216], "ord": [251, 264, 283, 304, 1147], "chr": [251, 264, 304], "isxxx": [251, 264], "rfind": [251, 264, 279, 325, 331, 365, 1154], "grammar": [251, 264], "instrospect": [251, 264], "hasattr": [251, 264, 279, 292, 304, 1121, 1127], "__module__": [251, 263, 264, 273, 276, 279, 283, 292, 304, 325, 343], "bytearrai": [251, 264, 279, 304], "histogram": [251, 252, 269, 441, 636, 637, 645], "defaultdict": [251, 277, 278, 302], "make_histogram": [251, 637, 646], "fileobj": 251, "stringio": [251, 279], "8859": [251, 269, 270, 286, 289, 309, 331, 343, 347, 512], "pycon": [251, 277, 300, 324, 346, 1208], "2017": [251, 277, 300, 346, 658, 810, 818, 845, 1208], "metaprogram": [251, 278, 300, 759, 1120, 1208, 1260], "contract": [251, 253, 300, 1208], "evolut": [251, 300, 346, 891, 1208], "unauthor": [251, 300, 346, 1208], "lesson": [251, 300, 346, 401, 407, 511, 809, 1100, 1208], "evolv": [251, 300, 346, 804, 1208], "assembli": [251, 300, 324, 346, 1083, 1085, 1208, 1273], "revolv": [251, 277, 346, 1208, 1214], "mro": [251, 277, 281, 346, 1208], "cpa": 252, "fahr": [252, 426, 428], "tomorrow": [252, 267, 411, 412], "correctli": [252, 342, 390, 488, 524, 934, 1026, 1160, 1216], "consecut": [252, 451, 837, 925], "becam": [252, 338], "44ff": 252, "gig": 252, "upcom": 252, "msi": 252, "wswitch": [252, 492, 849, 953], "wall": [252, 266, 267, 449, 499, 541, 748, 757, 952, 953, 1250], "77ff": 252, "skip": [252, 279, 396, 540, 541, 936, 959, 1084, 1085, 1107, 1243], "89ff": 252, "alongsid": [252, 978], "num_us": 252, "199ff": 252, "204ff": 252, "208ff": 252, "220ff": 252, "222ff": 252, "db_get_user_at_index": 252, "298ff": 252, "strcpy": [252, 269, 438, 484, 640, 655, 658, 801, 806, 813, 931, 1043, 1067], "strlen": [252, 438, 463, 491, 655, 658, 801, 806, 813, 1037, 1040, 1043, 1080], "bahavior": 252, "dest": [252, 438], "strtol": 252, "stringif": [252, 1255], "db_error_str": 252, "sexi": [252, 1058], "caleb": 252, "discret": [253, 283, 342, 498], "bleed": 253, "rect": [253, 479, 626], "sphere": [253, 626], "preprocessor": [253, 269, 445, 472, 494, 1083, 1248, 1260], "julia": 253, "yesterdai": [253, 269, 277, 317, 377, 382], "distanc": [253, 652, 680, 750, 835], "has_lastnam": 253, "botton": 253, "mingw": [253, 296, 298, 316, 411, 423, 870], "resembl": [253, 382], "tortur": 253, "functor": [253, 295, 296, 298, 355, 356, 374, 384, 385, 386, 691, 801, 802], "rudimentarili": [253, 1137, 1211], "gotten": [253, 747], "recourc": 253, "outright": [253, 309, 486, 1112, 1143], "geniu": [253, 309, 682, 1112, 1143], "livehackingli": 253, "herdt": 254, "commandlineargument": 254, "summenbeispiel": 254, "showcas": 254, "datenbank": 254, "formulieren": 254, "verbindung": [254, 1264], "schicken": 254, "schickman": 254, "muessen": 254, "verwandlen": 254, "fractal": [254, 270], "schatzi": 255, "zeitkomplexit\u00e4t": 255, "foreach": [255, 526, 530, 534, 801], "assozi": [255, 1257], "color_transl": 255, "gelb": 255, "yellow": 255, "hashtabl": [255, 1230], "englisch": 255, "sack": 255, "my_color": 255, "her_color": 255, "pink": 255, "gr\u00fcn": 255, "beig": 255, "vereiningungsmeng": 255, "schnittmeng": 255, "symmetrisch": 255, "differenzmeng": 255, "sei": 255, "gewesen": 255, "1037190666": [255, 271, 273, 279, 283, 286, 289, 292, 550, 557, 574, 575, 576, 588, 589, 590, 709, 1121], "6666010185": 255, "schwarzbauer": 255, "json_string_fuer_den_brows": 255, "response_dict": 255, "svnr": [255, 263, 266, 273, 279, 283, 286, 289, 291, 292, 331, 551, 557, 579, 585, 1121, 1225], "formatieren": 255, "endlich": 255, "transfer_string_in_php_am_serv": 255, "u00f6rg": 255, "transfer_string_in_js_am_brows": 255, "response_dict_am_brows": 255, "verwandeln": 255, "schlussendlich": 255, "geeignet": 255, "platzieren": 255, "meine_t": 255, "sozialversicherungsnumm": 255, "simmer": 256, "mein_str": 256, "sq": [256, 263, 266, 273, 283, 304, 325, 343, 347, 359], "docu": 256, "nmehrzeilig": 256, "nvon": 256, "mehrzeilig": 256, "deppertem": 256, "irrelevant": 256, "quargel": [256, 257], "190666": 256, "inkorrekt": 256, "geburtsdatum": 256, "endswith": [256, 271, 273, 279, 289, 304, 308, 311, 325, 331, 347, 353, 359, 365, 369, 1154], "sss": 256, "isalpha": [256, 260, 271, 273, 279, 283, 304, 325, 331, 353, 369, 1154], "isidentifi": [256, 260, 273, 279, 289, 304, 325, 331, 1154], "islow": [256, 279, 289, 304, 325, 359, 365, 1154], "arg1": 256, "arg2": 256, "arg3": 256, "abcblah": 256, "blahabcbcabcc": 256, "lah": 256, "rstrip": [256, 260, 264, 271, 275, 276, 279, 289, 304, 321, 325, 331, 347, 365, 369, 395, 404], "lstrip": [256, 271, 275, 279, 304, 325, 331, 365, 369, 404], "wieviel": [256, 1264], "995237": 256, "datestr": 256, "dt": [256, 353, 934, 984], "strptime": [256, 257, 258, 264, 353], "uuid": 256, "msg_aussi": 256, "sea": [256, 271, 304, 400, 760], "oida": [256, 273, 276, 325, 541], "msgid": 256, "uuid4": 256, "345654325678": 256, "json_aussi": 256, "6563515ef0824d42b459389cefd09127": 256, "json_eini": 256, "sender": [256, 1081], "msg_eini": 256, "sauberestextfil": 257, "12345678": 257, "2270": [257, 266], "20333": 257, "360": [257, 266, 343, 353, 359, 365, 369], "91011121": 257, "30333": 257, "36756788": 257, "1112": [257, 266], "1244": [257, 266], "31333": 257, "45011121": 257, "44444": 257, "340": [257, 266, 273, 279, 311, 325, 353, 359, 365, 369], "sauber": 257, "read_sauberes_text_fil": 257, "item1": [257, 353], "item13": 257, "werk": 257, "lort": 257, "charg": [257, 555, 561, 574, 575, 576, 588, 589, 590], "sonderbestandsnumm": 257, "materialkurztext": 257, "lagerplatz": 257, "verfueg_bestand": 257, "bme": 257, "we_datum": 257, "verf\u00fcg": 257, "bestand": 257, "datum": [257, 1215], "sap": [258, 309, 421, 1229], "api2": 258, "opc": [258, 267, 342], "rrdtool": 258, "rrd": 258, "subprocess": [258, 274, 279, 288, 290, 300, 324, 389, 404, 409, 1208], "commmon": [260, 471], "140576769461632": 260, "simplicit": 260, "inputfil": [260, 512], "450": [260, 266, 273, 308, 311, 359, 369], "paragraph": [260, 537], "highli": [260, 422, 607, 748], "pathnam": [260, 266, 276, 279, 377, 380, 530, 943, 1025, 1029, 1152], "displayhook": [260, 266, 276, 279, 397], "excepthook": [260, 266, 276, 279, 397], "uncaught": [260, 266, 276, 279, 626], "systemexit": [260, 266, 276, 279, 301, 304, 397, 1107], "behav": [260, 266, 269, 276, 279, 605, 626, 743, 755, 794, 801, 845, 846, 873, 1000, 1071], "last_typ": [260, 266, 276, 279, 397], "last_valu": [260, 266, 276, 279, 397, 770, 773, 776, 777, 778], "last_traceback": [260, 266, 276, 279, 397], "builtin_module_nam": [260, 266, 276, 279, 397], "pertain": [260, 266, 276, 279], "exec_prefix": [260, 266, 276, 279, 397], "float_info": [260, 266, 276, 279, 397], "float_repr_styl": [260, 266, 276, 279, 397], "hash_info": [260, 266, 276, 279, 397], "hexvers": [260, 266, 276, 279, 397], "int_info": [260, 266, 276, 279, 397], "maxsiz": [260, 266, 276, 279, 397], "largest": [260, 266, 276, 279, 488], "maxunicod": [260, 266, 276, 279, 397], "thread_info": [260, 266, 276, 279, 397], "version_info": [260, 266, 276, 279, 397], "__stdin__": [260, 266, 276, 279, 397], "__stdout__": [260, 266, 276, 279, 397], "__stderr__": [260, 266, 276, 279, 397], "__displayhook__": [260, 266, 276, 279, 397], "__excepthook__": [260, 266, 276, 279, 397], "screen": [260, 266, 276, 279, 867, 873, 891], "exc_info": [260, 266, 276, 279, 397], "getdlopenflag": [260, 266, 276, 279, 397], "dlopen": [260, 266, 276, 279, 1268], "getprofil": [260, 266, 276, 279, 397], "profil": [260, 266, 276, 279, 359, 422, 499, 505, 508, 862, 984, 1256, 1260], "getrefcount": [260, 266, 276, 279, 286, 397], "getrecursionlimit": [260, 266, 276, 279, 397], "getsizeof": [260, 266, 276, 279, 301, 304, 347, 369, 397], "gettrac": [260, 266, 276, 279, 397], "setdlopenflag": [260, 266, 276, 279, 397], "setprofil": [260, 266, 276, 279, 397], "setrecursionlimit": [260, 266, 276, 279, 397], "settrac": [260, 266, 276, 279, 397], "__breakpointhook__": [260, 266, 276, 279, 397], "breakpointhook": [260, 266, 276, 279, 397], "breakpoint": [260, 266, 276, 279, 304], "exctyp": [260, 266, 276, 279], "__unraisablehook__": [260, 266, 276, 279, 397], "unraisablehook": [260, 266, 276, 279, 397], "unrais": [260, 266, 276, 279], "exc_typ": [260, 266, 276, 279, 1105], "exc_valu": [260, 266, 276, 279, 1105], "exc_traceback": [260, 266, 276, 279, 1105], "err_msg": [260, 266, 276, 279], "addaudithook": [260, 266, 276, 279, 397], "audit": [260, 266, 276, 279, 359, 397], "call_trac": [260, 266, 276, 279, 397], "afterward": [260, 266, 276, 279, 450, 500, 657, 825, 845, 846, 847, 980, 1077, 1242], "older": [260, 266, 276, 279, 855, 1077], "get_asyncgen_hook": [260, 266, 276, 279, 397], "firstit": [260, 266, 276, 279], "get_coroutine_origin_tracking_depth": [260, 266, 276, 279, 397], "getallocatedblock": [260, 266, 276, 279, 397], "getdefaultencod": [260, 266, 276, 279, 325, 397], "getfilesystemencodeerror": [260, 266, 276, 279, 397], "getfilesystemencod": [260, 266, 276, 279, 397], "getswitchinterv": [260, 266, 276, 279, 397], "setswitchinterv": [260, 266, 276, 279, 397], "is_fin": [260, 266, 276, 279, 397], "set_asyncgen_hook": [260, 266, 276, 279, 397], "set_coroutine_origin_tracking_depth": [260, 266, 276, 279, 397], "cr_origin": [260, 266, 276, 279], "rtld_global": [260, 266, 276, 279], "rtld_xxx": [260, 266, 276, 279], "rtld_lazi": [260, 266, 276, 279], "frequenc": [260, 266, 276, 279, 283, 319, 320, 341, 345, 390, 415, 419, 928, 936, 1065], "uninterrupt": [260, 266, 276, 279, 976], "workload": [260, 266, 276, 279], "typic": [260, 266, 276, 279, 307, 317, 333, 345, 349, 471, 511, 541, 552, 576, 605, 724, 725, 824, 848, 876, 955, 1004, 1066, 1084, 1130, 1140, 1258, 1262, 1265, 1273], "005": [260, 266, 276, 279], "abiflag": [260, 266, 276, 279, 397], "api_vers": [260, 266, 276, 279, 397], "1013": [260, 266, 276, 279], "ipyk": 260, "base_exec_prefix": [260, 266, 276, 279, 397], "base_prefix": [260, 266, 276, 279, 397], "_ast": [260, 266, 276, 279], "_codec": [260, 266, 276, 279], "_collect": [260, 266, 276, 279], "_f": [260, 266, 276, 279], "byteord": [260, 266, 276, 279, 301, 397, 929], "foundati": [260, 266, 276, 279], "emati": [260, 266, 276, 279], "ipykernel": [260, 266, 276, 279, 304], "zmqshelldisplayhook": [260, 266, 276, 279], "dont_write_bytecod": [260, 266, 276, 279, 397], "opt": [260, 266, 276, 279, 359, 477], "ation": [260, 266, 276, 279], "7976931348623157e": [260, 266, 276, 279], "308": [260, 266, 273, 276, 279, 321, 331, 343, 353, 359, 365], "max_": [260, 266, 276, 279], "epsilo": [260, 266, 276, 279], "2305843009213693": [260, 266, 276, 279], "iphash2": [260, 266, 276, 279], "50922736": 260, "cache_tag": [260, 266, 276, 279], "xv": [260, 266, 276, 279], "bits_per_digit": [260, 266, 276, 279], "sizeof_digit": [260, 266, 276, 279], "syntaxerror": [260, 276, 283, 304, 1107], "eol": [260, 283], "scan": [260, 283, 286, 353, 937], "9223372036854775807": [260, 266, 276, 279, 797], "1114111": [260, 266, 276, 279], "meta_path": [260, 266, 276, 279, 397], "_frozen_importlib": [260, 266, 276, 279, 304], "builtinimport": [260, 266, 276, 279, 304], "_fro": [260, 266, 276, 279], "homepa": 260, "path_hook": [260, 266, 276, 279, 397], "zipimport": [260, 266, 276, 279], "filefind": [260, 266, 276, 279], "path_importer_cach": [260, 266, 276, 279, 397], "jfa": [260, 266, 276, 279], "platlibdir": [260, 266, 276, 279, 397], "ps1": [260, 266, 276, 279, 397, 1243], "ps2": [260, 266, 276, 279, 397], "ps3": [260, 266, 276, 279, 397], "pycache_prefix": [260, 266, 276, 279, 397], "outstream": [260, 266, 276, 279], "versio": [260, 266, 276, 279], "202103": 260, "releaselev": [260, 266, 276, 279], "warnopt": [260, 266, 276, 279, 397], "isdigit": [260, 271, 279, 283, 304, 311, 325, 331, 359, 369, 1154], "xx": [260, 291, 325, 331, 347, 353, 369], "pp": [260, 311, 476, 682, 1066], "list_of_str": 260, "tensorflow": 261, "kesselfal": 261, "rettenbachklamm": 261, "hochtor": 261, "hochschwab": 261, "_a": [263, 279, 304], "_123": 263, "140575811317328": 263, "140575811316208": 263, "0xffffffff": [263, 264, 369, 449], "4294967296": [263, 271], "0x48": [263, 934], "330": [263, 266, 279, 304, 311, 325, 343, 353, 359, 365], "332": [263, 266, 279, 311, 325, 343, 359, 365], "333": [263, 266, 279, 311, 325, 353, 359, 365, 400], "334": [263, 266, 279, 311, 353, 359, 365], "dstr": 263, "777": [263, 266, 353], "aliv": [263, 469, 1058, 1103], "bcd": 263, "dusan": 263, "alex": [263, 277, 824, 1125], "mist": [263, 311], "span": [263, 289, 292, 294, 301, 325, 359, 385, 387, 426, 445, 469, 959, 1042], "141592653589793": [263, 266], "roll": [263, 282, 303, 319, 320, 1143, 1255], "dice": [263, 282, 303, 319, 320, 1143], "win": [263, 279, 289, 353, 365, 922, 1067, 1143], "rnd": [263, 286], "convention": 263, "wise": [263, 307, 494, 658, 722, 783, 797, 815, 952, 961, 982, 1036, 1107], "resultset": [263, 266, 1220], "sbin": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 532, 862, 867, 869, 917, 922, 1021, 1031, 1086], "nologin": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 917, 922, 1021, 1031], "adm": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 918, 921, 922], "lp": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 922], "spool": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 922], "lpd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 526, 922], "65534": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "apach": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "httpd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "coredump": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922, 1080], "997": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "dumper": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "998": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "996": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "timesync": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "995": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "tss": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "tpm": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "polkitd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 869], "994": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "avahi": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 869], "mdn": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "unbound": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 1139], "992": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "dnsmasq": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 869], "991": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "dhcp": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "nm": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 506, 659, 762, 764, 984, 1096, 1102], "openconnect": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "993": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "989": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "networkmanag": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 506, 869], "usbmuxd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "gluster": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "988": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "glusterf": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "rtkit": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "realtimekit": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "pipewir": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "987": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "geoclu": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "990": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "chroni": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "984": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "saslauth": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "saslauthd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "radvd": [263, 279, 286, 289], "rpc": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "rpcbind": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "openvpn": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "982": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "981": [263, 266, 279, 286, 289, 365], "spawn": [263, 279, 286, 289, 304, 311, 321, 325, 342, 347, 353, 359, 365], "colord": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "985": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "980": [263, 266, 279, 286, 289, 800, 801], "rpcuser": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365], "abrt": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 869, 922], "flatpak": [263, 279, 286, 289, 304, 311, 321, 325, 328, 347, 353, 359, 365, 922], "979": [263, 266, 279, 286, 289], "helper": [263, 279, 283, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 444, 658, 750, 922, 978, 1233, 1236, 1278], "983": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "978": [263, 266, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 922], "vboxadd": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "tcpdump": [263, 279, 286, 289, 304, 311, 321, 325, 347, 353, 359, 365, 922], "974": [263, 266, 279, 286, 289], "mappingproxi": [263, 279, 292], "229": [263, 266, 271, 273, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "230": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 519], "231": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 325, 331, 347, 353, 359, 365, 369, 574, 575, 576, 588, 589, 590], "232": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 325, 331, 347, 353, 359, 365, 369], "233": [263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 321, 325, 331, 347, 353, 359, 365, 369], "inputlist": [263, 1110], "ret": [263, 266, 271, 512, 1073, 1110, 1155], "235": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "236": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 325, 331, 343, 347, 353, 359, 365, 369, 497], "237": [263, 266, 271, 273, 279, 283, 286, 289, 304, 321, 325, 331, 347, 353, 359, 365, 369], "238": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "239": [263, 266, 271, 273, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "240": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 321, 325, 331, 347, 353, 359, 365, 369], "242": [263, 266, 271, 273, 276, 279, 286, 289, 304, 321, 325, 331, 343, 347, 353, 359, 365, 369], "243": [263, 266, 271, 273, 279, 286, 289, 304, 321, 325, 331, 343, 353, 359, 365, 369], "244": [263, 266, 271, 273, 276, 279, 286, 289, 304, 325, 331, 343, 353, 359, 365, 369], "245": [263, 266, 271, 273, 286, 304, 321, 325, 331, 343, 353, 359, 365, 369], "247": [263, 266, 271, 273, 279, 283, 286, 304, 321, 325, 331, 347, 353, 359, 365, 369], "248": [263, 266, 271, 273, 276, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369], "249": [263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 325, 331, 343, 347, 353, 359, 365, 369], "250": [263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 315, 321, 325, 331, 353, 359, 365, 369, 921], "251": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 343, 347, 359, 365, 369], "252": [263, 266, 271, 273, 276, 283, 286, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 1221], "253": [263, 266, 271, 273, 276, 279, 286, 289, 304, 311, 325, 331, 347, 359, 365, 369], "256": [263, 266, 271, 273, 279, 286, 289, 304, 311, 321, 325, 331, 347, 353, 359, 365, 369, 435, 662, 747, 1210, 1221], "257": [263, 266, 271, 273, 276, 279, 283, 286, 289, 304, 311, 321, 325, 331, 353, 359, 365, 369], "258": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 359, 365, 369], "0x7fda5444e6a0": 263, "260": [263, 266, 271, 273, 276, 279, 286, 304, 311, 321, 325, 331, 343, 353, 359, 365, 369], "261": [263, 266, 271, 273, 279, 283, 289, 304, 311, 321, 325, 331, 359, 365, 369], "262": [263, 266, 271, 273, 279, 289, 304, 311, 321, 325, 331, 343, 353, 359, 365, 369], "263": [263, 266, 271, 273, 279, 283, 286, 289, 304, 311, 321, 325, 331, 343, 359, 365, 369], "264": [263, 266, 271, 273, 276, 279, 286, 289, 304, 311, 325, 331, 343, 353, 359, 365, 369], "265": [263, 266, 271, 273, 279, 286, 304, 311, 325, 331, 343, 353, 359, 365, 369], "266": [263, 266, 271, 273, 276, 279, 283, 289, 304, 325, 331, 359, 365, 369], "267": [263, 266, 271, 273, 276, 279, 286, 289, 304, 311, 325, 331, 343, 359, 365, 369], "268": [263, 266, 271, 273, 279, 286, 289, 304, 311, 325, 331, 353, 359, 365, 369], "269": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 359, 365, 369, 1085], "270": [263, 266, 271, 273, 279, 283, 286, 304, 311, 321, 325, 331, 343, 353, 359, 365, 369], "other_map": 263, "272": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 343, 359, 365, 369], "274": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 321, 325, 331, 353, 359, 365, 369], "140575811316304": 263, "275": [263, 266, 271, 273, 279, 283, 286, 304, 311, 321, 325, 331, 343, 359, 365, 369], "276": [263, 266, 271, 273, 276, 286, 304, 311, 321, 325, 331, 343, 359, 365, 369], "277": [263, 266, 271, 273, 276, 279, 283, 286, 304, 321, 325, 331, 353, 359, 365], "279": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 325, 331, 343, 359, 365], "280": [263, 266, 271, 273, 276, 279, 283, 304, 311, 325, 331, 343, 359, 365, 1084, 1085], "140575692459008": 263, "282": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 325, 331, 343, 359, 365], "283": [263, 266, 271, 273, 276, 279, 283, 286, 304, 325, 331, 359, 365], "284": [263, 266, 271, 273, 279, 283, 286, 304, 308, 331, 343, 353, 359, 365], "elementwis": 263, "285": [263, 266, 271, 273, 276, 279, 304, 311, 325, 331, 343, 359, 365], "286": [263, 266, 271, 273, 276, 279, 283, 304, 325, 331, 343, 359, 365], "287": [263, 266, 271, 273, 276, 279, 283, 286, 304, 311, 331, 343, 353, 359, 365], "140575692438848": 263, "288": [263, 266, 271, 273, 279, 283, 286, 304, 311, 325, 331, 343, 353, 359, 365], "140575692448960": 263, "289": [263, 266, 271, 273, 279, 304, 311, 325, 331, 343, 353, 359, 365], "290": [263, 266, 271, 273, 279, 304, 311, 325, 331, 359, 365], "292": [263, 266, 271, 279, 283, 304, 311, 321, 325, 359, 365], "293": [263, 266, 271, 273, 279, 304, 311, 321, 325, 331, 359, 365], "295": [263, 266, 271, 273, 279, 283, 304, 311, 321, 325, 359, 365], "296": [263, 266, 271, 273, 279, 304, 311, 321, 325, 331, 359, 365], "298": [263, 266, 271, 279, 283, 304, 311, 321, 325, 331, 353, 359, 365], "deep": [263, 275, 343, 759, 761, 1071], "301": [263, 266, 271, 276, 279, 283, 304, 311, 321, 325, 331, 343, 359, 365], "302": [263, 266, 271, 273, 279, 283, 304, 311, 325, 331, 343, 359, 365, 1166], "deepcopi": [263, 273, 286, 311, 331, 343, 1148], "303": [263, 266, 271, 273, 276, 279, 311, 325, 331, 343, 353, 359, 365, 1085], "304": [263, 266, 271, 273, 276, 279, 283, 343, 359, 365], "305": [263, 266, 276, 279, 304, 321, 325, 331, 343, 359, 365], "314": [263, 266, 273, 276, 279, 304, 311, 321, 325, 331, 353, 359, 365], "315": [263, 266, 279, 304, 325, 331, 353, 359, 365], "rdr": [263, 264, 347, 512, 554, 1216], "reader": [263, 277, 280, 285, 288, 300, 303, 323, 324, 329, 330, 351, 352, 358, 359, 363, 364, 367, 368, 493, 512, 532, 554, 824, 875, 1120, 1123, 1150, 1198, 1202, 1206], "delimit": [263, 264, 279, 308, 309, 325, 347, 353, 365, 678, 724, 918, 1136, 1216], "fund_nam": [263, 264, 1166], "fund_isin": [263, 264, 1166], "fund_tick": [263, 264, 1166], "as_of_d": [263, 264, 1166], "fund_in_univers": [263, 264, 1166], "fund_of_fund": [263, 264, 1166], "fund_holdings_count": [263, 264, 1166], "fund_holding_funds_count": [263, 264, 1166], "american": [263, 269, 723, 1166, 1221], "fund": [263, 1166], "balanc": [263, 267, 479, 1166], "us0240711020": [263, 1166], "abalx": [263, 1166], "20210103": [263, 1166], "084": [263, 1166], "dodg": [263, 1166], "cox": [263, 1166], "us2562011047": [263, 1166], "dodbx": [263, 1166], "410": [263, 266, 311, 325, 359, 369, 1166], "us2562191062": [263, 1166], "dodgx": [263, 1166], "franklin": [263, 1166], "incom": [263, 279, 342, 1166, 1224], "us3534963000": [263, 1166], "fkinx": [263, 1166], "america": [263, 1166], "us3998741066": [263, 1166], "agthx": [263, 1166], "price": [263, 283, 505, 548, 1166], "us7414791092": [263, 1166], "prgfx": [263, 1166], "fidel": [263, 1166], "puritan": [263, 1166], "us3163451079": [263, 1166], "fpurx": [263, 1166], "contrafund": [263, 1166], "us3160711095": [263, 1166], "fcntx": [263, 1166], "363": [263, 266, 311, 325, 343, 353, 359, 365, 369, 1166], "us77954m1053": [263, 1166], "prwcx": [263, 1166], "westburi": [263, 1166], "us6804141090": [263, 1166], "owlsx": [263, 1166], "us1401931035": [263, 1166], "caibx": [263, 1166], "582": [263, 266, 359, 1166], "harbor": [263, 1166], "institut": [263, 264, 561, 576, 1166], "us4115115044": [263, 1166], "hacax": [263, 1166], "us77954q1067": [263, 1166], "trbcx": [263, 1166], "dreyfu": [263, 1166], "treasuri": [263, 1166], "cash": [263, 1166], "inst": [263, 1166], "us2619411083": [263, 1166], "dirxx": [263, 1166], "blackrock": [263, 1166], "us09251t5092": [263, 1166], "malox": [263, 1166], "us3163453059": [263, 1166], "flpsx": [263, 1166], "liquid": [263, 1166], "us09248u5517": [263, 1166], "tttxx": [263, 1166], "dfa": [263, 1166], "portfolio": [263, 283, 1166], "us2332038841": [263, 1166], "dfgbx": [263, 1166], "feder": [263, 1166], "herm": [263, 1166], "us60934n6821": [263, 1166], "utixx": [263, 1166], "oakmark": [263, 1166], "investor": [263, 283, 1166], "us4138382027": [263, 1166], "oakix": [263, 1166], "asset": [263, 1166], "us00767h4939": [263, 1166], "787": [263, 266, 1166], "fpa": [263, 1166], "crescent": [263, 1166], "us30254t7596": [263, 1166], "fpacx": [263, 1166], "us3534968058": [263, 1166], "fcisx": [263, 1166], "us5529836943": [263, 1166], "meiix": [263, 1166], "goldman": [263, 1166], "sach": [263, 1166, 1276], "instrument": [263, 503, 505, 934, 1066, 1166, 1269], "us38142b5003": [263, 1166], "ftixx": [263, 1166], "schwab": [263, 1166], "us8085098551": [263, 1166], "swppx": [263, 1166], "508": [263, 266, 311, 343, 359, 1166], "templeton": [263, 1166], "bond": [263, 1166], "advisor": [263, 1166], "us8802084009": [263, 1166], "tgbax": [263, 1166], "us32008f6060": [263, 1166], "sgiix": [263, 1166], "ishar": [263, 1166], "etf": [263, 1166], "us4642872000": [263, 1166], "ivv": [263, 1166], "507": [263, 266, 343, 1166], "vanguard": [263, 1166], "admir": [263, 1166], "us9229087104": [263, 1166], "vfiax": [263, 1166], "510": [263, 266, 343, 353, 359, 1166], "us9229087286": [263, 1166], "vtsax": [263, 1166], "370": [263, 266, 311, 325, 353, 359, 365, 369, 1166], "spdr": [263, 1166], "midcap": [263, 1166], "us78467y1073": [263, 1166], "mdy": [263, 1166], "dow": [263, 1166], "jone": [263, 405, 406, 1066, 1166], "industri": [263, 984, 1166], "us78467x1090": [263, 1166], "health": [263, 1166], "us81369y2090": [263, 1166], "xlv": [263, 1166], "discretionari": [263, 1166], "us81369y4070": [263, 1166], "xly": [263, 1166], "energi": [263, 373, 1166], "us81369y5069": [263, 1166], "xle": [263, 1166], "financi": [263, 1166], "us81369y6059": [263, 1166], "xlf": [263, 1166], "us81369y8030": [263, 1166], "xlk": [263, 1166], "invesco": [263, 1166], "qqq": [263, 1166], "us46090e1038": [263, 1166], "us2562061034": [263, 1166], "dodfx": [263, 1166], "msci": [263, 1166], "eaf": [263, 1166], "us4642874659": [263, 1166], "efa": [263, 1166], "897": [263, 266, 1166], "jpmorgan": [263, 1166], "sec": [263, 538, 1067, 1166, 1236], "mny": [263, 1166], "mkt": [263, 1166], "us4812a28358": [263, 1166], "jtsxx": [263, 1166], "eql": [263, 1166], "wght": [263, 1166], "us46137v3574": [263, 1166], "us4812a03757": [263, 1166], "cjtxx": [263, 1166], "us00143w8753": [263, 1166], "odvyx": [263, 1166], "dividend": [263, 1166], "us78464a7634": [263, 1166], "sdy": [263, 1166], "equiti": [263, 1166], "us2332033719": [263, 1166], "dfiex": [263, 1166], "888": [263, 266, 1166], "edgewood": [263, 1166], "us0075w07594": [263, 1166], "egfix": [263, 1166], "prudenti": [263, 1166], "us00767h7585": [263, 1166], "r6": [263, 1166], "us55273h3536": [263, 1166], "meikx": [263, 1166], "327": [263, 266, 279, 304, 311, 321, 353, 359, 365, 369], "328": [263, 266, 273, 279, 311, 359, 365, 369], "geschieht": [264, 919], "wunder": 264, "groesser": 264, "jave": 264, "shorthand": [264, 436, 910, 1121], "lin": 264, "lout": 264, "faster": [264, 283, 342, 488, 500, 1071], "outputlist": 264, "getus": [264, 1187], "userdatabas": [264, 1187], "userid": [264, 276], "groupid": 264, "loginshel": [264, 365], "userrecord": 264, "dens": [264, 273, 283], "pratic": 264, "_fix_float_numb": 264, "fieldnam": [264, 1216], "_fix_bool": 264, "elif": [264, 271, 347, 434, 471, 512, 1127, 1142, 1143], "_fix_dat": 264, "read_stock": [264, 1166], "csvfile": [264, 1120], "converted_record": 264, "dbname": [264, 1219], "stmt": 264, "predefin": [264, 382, 1031, 1076, 1081, 1254], "circuit": [265, 271, 281, 936, 1141, 1264], "windows_path": [266, 271], "festplatt": 266, "eue": [266, 343, 359, 399], "lehrer": 266, "50923504": 266, "202107": 266, "140106795875920": 266, "140106669190640": 266, "669": [266, 283], "140106669191024": 266, "0j": 266, "copied_l": [266, 273], "140106669249856": 266, "copied_t": 266, "tuple_containing_one_el": 266, "tran": 266, "satan": [266, 276], "queen": [266, 286, 1198, 1200, 1204, 1206, 1216], "10000000000": [266, 321, 399], "prod": 266, "resultset_to_local_db": 266, "my_local_db": 266, "basenam": 266, "normalized_path": 266, "normpath": [266, 273, 1115], "291": [266, 271, 279, 304, 321, 331, 343, 353, 359, 365, 504], "294": [266, 271, 279, 304, 321, 325, 331, 359, 365], "297": [266, 271, 273, 279, 283, 325, 353, 359, 365], "299": [266, 271, 276, 279, 283, 304, 311, 321, 325, 331, 353, 359, 365], "306": [266, 276, 283, 304, 321, 325, 331, 343, 353, 359, 365], "307": [266, 273, 279, 304, 321, 325, 331, 343, 353, 359, 365], "309": [266, 273, 276, 279, 311, 321, 325, 331, 343, 347, 359, 365, 369], "310": [266, 273, 276, 279, 325, 331, 343, 359, 365, 449], "311": [266, 273, 304, 325, 331, 353, 359, 365], "312": [266, 273, 279, 304, 311, 321, 331, 353, 359, 365], "313": [266, 273, 279, 311, 325, 331, 353, 359, 365], "316": [266, 273, 276, 279, 304, 325, 343, 353, 359, 365], "317": [266, 273, 276, 304, 311, 321, 325, 343, 353, 359, 365], "318": [266, 276, 279, 311, 325, 353, 359, 365], "319": [266, 273, 276, 279, 304, 321, 325, 343, 353, 359, 365], "321": [266, 276, 279, 311, 321, 325, 331, 343, 359, 365, 369], "322": [266, 276, 279, 311, 331, 343, 353, 359, 365], "323": [266, 273, 276, 279, 304, 325, 331, 343, 353, 359, 365], "324": [266, 276, 279, 304, 321, 325, 331, 343, 353, 359, 365, 607], "325": [266, 273, 279, 311, 321, 331, 353, 359, 365], "326": [266, 273, 279, 304, 321, 331, 343, 353, 359, 365], "329": [266, 279, 304, 311, 343, 359, 365, 369], "331": [266, 273, 279, 304, 325, 359, 365, 369], "335": [266, 273, 279, 311, 325, 353, 359, 365], "337": [266, 279, 311, 325, 353, 359, 365, 369], "338": [266, 273, 311, 325, 353, 359, 365], "339": [266, 273, 279, 325, 353, 359, 365, 369], "341": [266, 273, 279, 311, 325, 343, 353, 359, 365, 369], "342": [266, 273, 279, 311, 331, 353, 359, 365], "343": [266, 279, 311, 325, 343, 359, 365, 369], "344": [266, 279, 311, 325, 343, 353, 359, 365], "346": [266, 279, 325, 343, 353, 359, 365, 705, 706, 707, 708], "347": [266, 311, 325, 343, 353, 359, 365], "348": [266, 279, 343, 353, 359, 365], "349": [266, 279, 325, 343, 353, 359, 365, 499], "351": [266, 273, 279, 325, 353, 359, 365], "352": [266, 273, 279, 311, 325, 353, 359, 365], "353": [266, 273, 279, 311, 325, 353, 359, 365], "354": [266, 279, 325, 353, 359, 365, 553], "355": [266, 311, 325, 353, 359, 365, 369], "356": [266, 286, 325, 343, 359, 365, 369], "357": [266, 311, 325, 343, 353, 359, 365, 369], "359": [266, 325, 353, 359], "361": [266, 325, 343, 353, 359, 369], "362": [266, 311, 325, 343, 353, 359], "364": [266, 325, 359, 365, 369], "365": [266, 343, 359, 365], "366": [266, 311, 325, 359, 365, 369], "367": [266, 325, 343, 353, 359, 365, 369], "368": [266, 325, 353, 359, 365, 369], "369": [266, 311, 325, 353, 359], "371": [266, 311, 353, 359, 365, 369], "373": [266, 273, 311, 343, 353, 359, 369], "374": [266, 273, 325, 343, 359, 369], "375": [266, 273, 283, 311, 325, 343, 353, 359, 369, 499], "376": [266, 311, 325, 343, 353, 359, 369], "377": [266, 273, 311, 325, 343, 353, 359], "379": [266, 311, 325, 343, 353, 359], "380": [266, 311, 325, 343, 359], "381": [266, 273, 311, 325, 359], "382": [266, 311, 325, 343, 359], "383": [266, 273, 311, 315, 343, 353, 359], "384": [266, 311, 325, 343, 353, 359, 369], "385": [266, 311, 325, 343, 359, 369], "386": [266, 311, 325, 343, 359, 369], "387": [266, 359, 369], "388": [266, 311, 325, 343, 359, 369], "389": [266, 343, 359, 369], "390": [266, 325, 343, 359, 369], "391": [266, 311, 343, 359], "392": [266, 311, 359, 369], "393": [266, 273, 311, 325, 343, 359, 369], "394": [266, 273, 311, 325, 343, 359, 369], "395": [266, 273, 311, 325, 343, 353, 359, 369], "396": [266, 273, 311, 359, 369, 876], "397": [266, 273, 325, 343, 359, 369], "399": [266, 273, 325, 343, 359, 369], "401": [266, 273, 311, 325, 359, 369], "402": [266, 311, 343, 359, 369], "403": [266, 273, 325, 343, 359, 369], "405": [266, 325, 359, 369], "406": [266, 273, 311, 325, 343, 359], "407": [266, 311, 325, 343, 359, 369], "408": [266, 273, 311, 325, 343, 359, 369], "409": [266, 273, 311, 325, 343, 353, 359, 369], "411": [266, 273, 311, 325, 353, 359], "412": [266, 325, 359], "413": [266, 273, 311, 325, 359], "414": [266, 273, 311, 325, 343, 359], "415": [266, 325, 343, 359], "416": [266, 273, 311, 343, 359], "417": [266, 273, 311, 325, 359], "418": [266, 273, 311, 343, 359, 369], "419": [266, 273, 311, 325, 343, 359], "420": [266, 273, 311, 325, 343, 359], "421": [266, 273, 311, 325, 343, 359], "422": [266, 273, 353, 359, 369], "423": [266, 311, 325, 343, 359, 369, 797], "424": [266, 273, 311, 325, 359, 369], "425": [266, 311, 359], "426": [266, 343], "427": [266, 273, 311, 343, 359, 369], "428": [266, 273, 311, 343, 359, 369], "429": [266, 311, 343, 359, 369], "430": [266, 273, 311, 343, 359, 369], "431": [266, 311, 343, 353, 359, 369, 797], "432": [266, 273, 311, 343, 369], "433": [266, 311, 343, 353, 369], "434": [266, 311, 359, 369], "435": [266, 369], "436": [266, 311, 343, 359, 369], "437": [266, 273, 311, 343, 353, 359, 369], "438": [266, 273, 343, 359, 369], "439": [266, 311, 359, 369], "440": [266, 273, 311, 359, 369], "441": [266, 273, 311, 359, 369], "442": [266, 273, 311, 353, 369], "443": [266, 273, 343, 359, 369], "444": [266, 273, 343, 359, 369], "445": [266, 273, 343, 353, 359, 369], "446": [266, 311, 369], "447": [266, 273, 311, 343, 353, 359, 369], "448": [266, 311, 359, 369], "449": [266, 273, 359], "451": [266, 273, 343, 359], "452": [266, 273, 311, 359, 369], "453": [266, 273, 343, 359, 369], "454": [266, 273, 311, 359, 369], "455": [266, 273, 359, 369], "457": 266, "458": [266, 311, 359, 369], "459": [266, 353], "460": [266, 311], "461": [266, 311, 369], "462": [266, 311, 369], "463": [266, 359], "464": [266, 311, 359, 369], "465": [266, 311, 315, 353, 359, 369], "466": [266, 311, 369], "467": [266, 311, 353, 359, 369], "468": [266, 311, 359, 369], "469": [266, 311, 359, 369, 846], "470": [266, 311, 359], "471": [266, 311, 353, 359, 369], "472": [266, 311, 359, 369], "473": [266, 359], "474": [266, 311, 359, 369], "475": [266, 311, 359, 369], "476": [266, 311, 353, 359, 369], "478": [266, 369], "479": [266, 311, 359, 369], "480": [266, 311, 359, 369], "481": [266, 311, 359], "482": [266, 311, 353, 369], "483": [266, 311, 353, 359, 369], "484": [266, 369], "485": [266, 369], "486": [266, 311, 359, 369], "487": [266, 311, 359, 369], "488": [266, 311, 359, 369], "489": 266, "490": [266, 359, 913], "491": [266, 359], "492": [266, 359, 369], "494": [266, 311, 359], "495": [266, 369], "496": [266, 369], "497": [266, 311, 359], "498": [266, 311, 359], "499": [266, 359, 369], "502": [266, 311, 359, 369], "503": [266, 359], "504": [266, 311], "505": [266, 279, 311, 359], "506": [266, 311, 359], "509": [266, 343, 369], "511": [266, 343, 353, 359], "514": [266, 359], "515": [266, 311, 359, 845], "516": [266, 311], "517": [266, 311, 359], "518": [266, 311, 359, 369], "519": [266, 359, 369], "520": [266, 311, 369], "521": [266, 311, 369, 781, 785], "522": 266, "523": 266, "524": [266, 311], "525": [266, 311, 359], "526": 266, "527": [266, 359], "528": 266, "529": [266, 353, 359], "530": 266, "531": [266, 311, 359, 369], "532": [266, 369, 797], "534": [266, 359, 369], "535": [266, 359, 369], "536": [266, 913], "538": [266, 359], "539": [266, 359], "540": [266, 353, 369], "541": [266, 359], "542": [266, 359], "543": [266, 369], "544": [266, 353, 359, 369], "545": [266, 353, 359], "546": [266, 359], "547": [266, 359, 369], "548": [266, 315, 359], "549": [266, 359], "550": [266, 359], "551": 266, "552": [266, 353, 359, 369], "553": [266, 353, 359, 369], "554": [266, 916], "555": [266, 369], "556": [266, 353], "557": [266, 359], "558": [266, 359], "559": [266, 359], "560": [266, 369], "561": [266, 359, 369], "562": [266, 359, 369], "563": [266, 359, 369], "564": [266, 359, 369], "565": [266, 359], "566": 266, "567": [266, 359, 369], "568": [266, 369], "569": [266, 359, 369], "570": 266, "571": 266, "572": 266, "573": 266, "574": [266, 359], "575": [266, 359], "576": 266, "577": [266, 359], "578": [266, 359], "579": [266, 359], "580": [266, 359], "581": [266, 359], "583": [266, 353], "584": 266, "585": [266, 359], "586": 266, "587": 266, "588": [266, 347, 359], "589": [266, 359], "590": [266, 359], "591": [266, 353], "592": 266, "593": [266, 359], "594": [266, 353], "595": [266, 359], "596": [266, 1098], "597": 266, "598": 266, "599": 266, "601": 266, "602": 266, "603": 266, "604": 266, "605": 266, "606": 266, "607": [266, 353], "608": 266, "609": [266, 353], "610": [266, 913], "611": 266, "612": [266, 876], "613": 266, "614": 266, "615": [266, 353], "616": 266, "617": 266, "618": 266, "619": 266, "620": 266, "621": 266, "622": 266, "623": 266, "624": [266, 764], "625": [266, 283], "626": 266, "627": 266, "628": 266, "629": 266, "630": 266, "631": 266, "632": 266, "633": 266, "634": 266, "635": 266, "636": 266, "637": 266, "638": 266, "639": 266, "640": [266, 658], "641": 266, "642": 266, "643": 266, "644": [266, 1135], "645": 266, "646": 266, "647": 266, "648": 266, "649": 266, "650": [266, 353], "651": 266, "652": 266, "653": 266, "654": 266, "655": [266, 353], "656": 266, "657": [266, 353], "658": 266, "659": 266, "660": 266, "661": 266, "662": 266, "663": 266, "665": [266, 353], "668": [266, 353, 1139], "670": 266, "671": [266, 353], "672": 266, "673": 266, "674": 266, "675": 266, "676": 266, "677": 266, "678": 266, "679": 266, "680": [266, 353], "681": [266, 353], "682": [266, 913], "683": 266, "684": 266, "685": 266, "687": 266, "688": 266, "689": 266, "690": 266, "691": 266, "692": 266, "693": 266, "694": 266, "695": [266, 353], "696": 266, "697": [266, 353], "698": [266, 913, 1021], "699": 266, "700": [266, 700, 847, 1012], "701": [266, 353], "702": 266, "703": [266, 319, 320, 341], "704": 266, "705": 266, "706": [266, 353], "707": 266, "708": [266, 279], "709": 266, "710": [266, 658], "711": 266, "712": 266, "713": 266, "714": 266, "715": [266, 725], "716": [266, 353], "717": 266, "718": 266, "719": 266, "720": 266, "721": 266, "722": 266, "723": 266, "724": 266, "725": 266, "726": 266, "727": [266, 353], "728": 266, "729": 266, "730": [266, 308], "731": 266, "732": 266, "733": 266, "734": 266, "735": 266, "736": 266, "737": 266, "738": 266, "739": 266, "740": 266, "741": 266, "742": 266, "743": 266, "744": 266, "745": 266, "746": [266, 353, 1085], "747": 266, "748": 266, "749": 266, "750": 266, "751": 266, "752": 266, "753": 266, "754": 266, "756": 266, "757": 266, "758": 266, "759": 266, "760": 266, "761": 266, "762": 266, "763": 266, "764": 266, "765": 266, "766": 266, "767": 266, "768": [266, 353], "769": 266, "770": [266, 353], "772": 266, "773": 266, "774": [266, 353], "775": 266, "776": 266, "778": 266, "779": 266, "780": 266, "781": [266, 353], "782": [266, 315], "783": 266, "784": [266, 1083], "785": 266, "786": 266, "788": [266, 353], "789": [266, 273], "790": 266, "791": [266, 845], "792": 266, "793": 266, "794": 266, "795": 266, "796": 266, "797": 266, "798": 266, "801": [266, 308], "802": 266, "803": 266, "804": [266, 353], "805": 266, "806": 266, "807": 266, "808": 266, "809": [266, 347], "810": 266, "811": [266, 353], "812": [266, 353], "813": [266, 353], "814": 266, "815": [266, 283], "816": [266, 289, 353], "817": 266, "818": 266, "819": 266, "820": 266, "821": 266, "822": 266, "823": 266, "824": 266, "826": 266, "827": [266, 353], "828": [266, 315, 353], "829": 266, "830": 266, "831": 266, "832": [266, 1083], "833": 266, "834": 266, "835": 266, "836": 266, "837": 266, "838": 266, "839": [266, 353], "840": 266, "841": 266, "842": 266, "843": 266, "844": [266, 353], "845": 266, "846": 266, "847": 266, "848": 266, "849": 266, "850": 266, "851": 266, "852": 266, "853": 266, "854": 266, "855": 266, "856": 266, "857": 266, "858": 266, "859": 266, "860": 266, "861": 266, "862": [266, 353], "863": 266, "864": 266, "865": 266, "866": 266, "867": 266, "868": 266, "869": [266, 353], "870": 266, "871": 266, "872": 266, "873": 266, "874": [266, 554], "875": [266, 930], "876": 266, "877": [266, 353], "878": 266, "879": [266, 499], "880": 266, "881": [266, 353], "882": 266, "883": [266, 353], "884": 266, "885": 266, "886": 266, "887": [266, 353], "889": 266, "890": 266, "891": [266, 353], "892": 266, "893": 266, "894": 266, "895": 266, "896": 266, "898": [266, 353], "899": 266, "901": 266, "902": [266, 913], "903": 266, "904": 266, "905": 266, "906": 266, "907": 266, "908": 266, "909": [266, 353], "910": [266, 913], "911": 266, "912": 266, "913": 266, "914": 266, "915": 266, "916": 266, "917": [266, 315], "918": [266, 353], "919": 266, "920": 266, "921": [266, 353], "922": [266, 353], "923": 266, "924": 266, "925": 266, "926": [266, 353], "927": 266, "928": 266, "929": [266, 353], "930": 266, "931": 266, "932": 266, "933": [266, 353], "934": 266, "935": [266, 353], "936": 266, "937": 266, "938": 266, "939": [266, 353], "940": [266, 353], "941": [266, 353], "942": 266, "943": 266, "944": 266, "945": 266, "946": [266, 353], "947": 266, "948": 266, "949": [266, 353], "950": 266, "951": [266, 347], "952": 266, "953": 266, "954": 266, "955": 266, "956": 266, "957": 266, "958": 266, "959": 266, "960": 266, "961": 266, "962": 266, "963": 266, "964": [266, 353], "965": 266, "966": 266, "967": [266, 353], "968": 266, "969": 266, "970": 266, "971": [266, 353], "972": 266, "973": 266, "975": 266, "976": [266, 304, 311, 321, 325, 347, 353, 359], "977": [266, 304, 311, 321, 325, 347, 353, 359, 922], "timeaxi": 266, "myrang": 266, "1004": 266, "1006": 266, "1008": 266, "1010": 266, "1012": 266, "1014": 266, "1016": 266, "1018": 266, "1020": [266, 857, 858, 866], "1022": 266, "1028": 266, "1030": 266, "1032": 266, "1034": 266, "1036": 266, "1038": 266, "1040": 266, "1042": [266, 1071], "1046": 266, "1048": 266, "1050": 266, "1052": 266, "1054": 266, "1056": 266, "1058": 266, "1060": 266, "1062": 266, "1064": 266, "1066": 266, "1068": [266, 315], "1070": [266, 315], "1072": [266, 315], "1074": 266, "1076": 266, "1078": 266, "1080": 266, "1082": 266, "1084": 266, "1086": 266, "1088": 266, "1090": 266, "1092": 266, "1094": 266, "1096": 266, "1098": 266, "1102": 266, "1104": 266, "1106": 266, "1108": 266, "1114": 266, "1116": 266, "1118": 266, "1120": 266, "1122": 266, "1124": 266, "1126": 266, "1128": 266, "1130": 266, "1132": 266, "1134": 266, "1136": 266, "1138": 266, "1140": 266, "1142": 266, "1144": 266, "1146": 266, "1148": 266, "1150": [266, 1228, 1230], "1152": [266, 1228, 1230], "1154": 266, "1156": 266, "1158": 266, "1160": 266, "1162": 266, "1164": 266, "1166": 266, "1168": 266, "1170": 266, "1172": 266, "1174": 266, "1176": 266, "1178": 266, "1180": 266, "1182": 266, "1184": 266, "1186": 266, "1188": 266, "1190": 266, "1192": 266, "1194": 266, "1196": 266, "1198": 266, "1202": 266, "1204": 266, "1206": 266, "1208": 266, "1210": 266, "1212": 266, "1214": 266, "1216": 266, "1218": 266, "1222": 266, "1224": 266, "1226": 266, "1228": 266, "1230": 266, "1232": 266, "1236": 266, "1238": 266, "1240": 266, "1242": 266, "1246": 266, "1248": 266, "1250": 266, "1252": 266, "1254": [266, 574, 575, 576, 588, 589, 590], "1256": 266, "1258": 266, "1260": [266, 544], "1262": 266, "1264": 266, "1266": 266, "1268": 266, "1270": 266, "1272": 266, "1274": 266, "1276": 266, "1278": 266, "1280": 266, "1282": 266, "1284": 266, "1286": 266, "1288": 266, "1290": 266, "1292": 266, "1294": 266, "1296": 266, "1298": 266, "1300": 266, "1302": 266, "1304": 266, "1306": 266, "1308": 266, "1310": 266, "1312": 266, "1314": 266, "1316": 266, "1318": 266, "1320": 266, "1322": 266, "1324": 266, "1326": 266, "1328": 266, "1330": 266, "1332": 266, "1334": 266, "1336": 266, "1338": 266, "1340": 266, "1342": [266, 1230], "1344": 266, "1346": 266, "1348": 266, "1350": 266, "1352": [266, 1031], "1354": 266, "1356": 266, "1358": 266, "1360": 266, "1362": 266, "1364": 266, "1366": 266, "1368": 266, "1370": 266, "1372": 266, "1374": 266, "1378": 266, "1380": 266, "1382": 266, "1384": 266, "1386": 266, "1388": 266, "1390": 266, "1392": [266, 554, 1230], "1394": 266, "1396": 266, "1398": 266, "1400": 266, "1402": 266, "1406": 266, "1408": 266, "1410": 266, "1412": 266, "1414": 266, "1416": [266, 1153], "1418": 266, "1420": 266, "1422": 266, "1424": 266, "1426": 266, "1428": 266, "1430": 266, "1432": 266, "1434": 266, "1436": 266, "1438": 266, "1440": 266, "1442": 266, "1444": 266, "1446": 266, "1448": 266, "1450": 266, "1452": 266, "1454": 266, "1456": 266, "1458": 266, "1460": 266, "1462": 266, "1464": 266, "1466": 266, "1468": 266, "1470": 266, "1472": 266, "1474": 266, "1476": 266, "1478": 266, "1480": 266, "1482": 266, "1484": 266, "1486": 266, "1488": 266, "1490": 266, "1492": 266, "1494": 266, "1496": 266, "1498": 266, "1502": 266, "1504": 266, "1506": 266, "1508": 266, "1510": 266, "1512": 266, "1514": 266, "1516": 266, "1518": 266, "1520": 266, "1522": 266, "1524": 266, "1526": 266, "1528": 266, "1530": 266, "1532": 266, "1534": 266, "1536": [266, 1083], "1538": 266, "1540": 266, "1542": 266, "1544": 266, "1546": 266, "1548": 266, "1550": 266, "1552": 266, "1554": 266, "1556": 266, "1558": [266, 874], "1560": 266, "1562": 266, "1564": 266, "1566": 266, "1568": 266, "1570": 266, "1572": 266, "1574": 266, "1576": 266, "1578": 266, "1580": 266, "1582": 266, "1584": 266, "1586": 266, "1588": 266, "1590": 266, "1592": 266, "1594": 266, "1596": 266, "1598": 266, "1600": 266, "1602": 266, "1604": [266, 1077], "1606": 266, "1608": 266, "1610": 266, "1612": 266, "1614": 266, "1616": 266, "1618": 266, "1620": 266, "1622": 266, "1624": 266, "1626": 266, "1628": 266, "1630": 266, "1632": 266, "1634": [266, 574, 575], "1636": 266, "1638": 266, "1640": 266, "1642": 266, "1644": 266, "1646": [266, 1228], "1648": 266, "1650": 266, "1652": 266, "1654": [266, 1086], "1656": 266, "1658": 266, "1660": [266, 1086], "1662": 266, "1664": 266, "1666": 266, "1668": 266, "1672": 266, "1674": 266, "1676": 266, "1678": 266, "1680": 266, "1682": 266, "1684": 266, "1686": 266, "1688": [266, 1084, 1085], "1690": 266, "1692": 266, "1694": 266, "1696": 266, "1698": 266, "1700": 266, "1702": 266, "1704": 266, "1706": [266, 1096], "1708": 266, "1710": 266, "1712": 266, "1714": [266, 1228], "1716": [266, 1228], "1718": 266, "1722": 266, "1724": 266, "1726": 266, "1728": 266, "1730": 266, "1732": 266, "1734": 266, "1736": 266, "1738": 266, "1740": 266, "1742": 266, "1744": 266, "1746": 266, "1748": 266, "1750": 266, "1752": 266, "1754": 266, "1756": 266, "1758": 266, "1760": 266, "1762": 266, "1764": [266, 325], "1766": 266, "1768": 266, "1770": 266, "1772": 266, "1774": 266, "1776": 266, "1778": 266, "1780": 266, "1782": 266, "1784": 266, "1786": 266, "1788": 266, "1790": 266, "1792": 266, "1794": 266, "1796": 266, "1798": 266, "1800": [266, 1083], "1802": 266, "1804": 266, "1806": 266, "1808": 266, "1810": 266, "1812": 266, "1814": 266, "1816": 266, "1818": 266, "1820": 266, "1822": 266, "1824": 266, "1826": 266, "1828": 266, "1830": 266, "1832": 266, "1834": 266, "1836": 266, "1838": 266, "1840": 266, "1842": 266, "1844": 266, "1846": 266, "1848": 266, "1850": 266, "1852": 266, "1854": 266, "1856": 266, "1858": 266, "1860": 266, "1862": 266, "1864": 266, "1866": 266, "1868": 266, "1870": 266, "1872": 266, "1874": 266, "1876": 266, "1878": 266, "1880": 266, "1882": 266, "1884": 266, "1886": 266, "1888": 266, "1890": 266, "1892": 266, "1894": 266, "1896": 266, "1898": 266, "1900": [266, 276, 1198, 1200, 1204, 1206], "1902": 266, "1904": 266, "1906": 266, "1908": 266, "1910": 266, "1912": 266, "1914": 266, "1916": 266, "1918": 266, "1920": 266, "1922": 266, "1924": 266, "1926": 266, "1928": 266, "1930": 266, "1932": 266, "1934": 266, "1938": 266, "1940": 266, "1942": 266, "1944": 266, "1946": 266, "1948": 266, "1950": 266, "1952": 266, "1954": [266, 1164], "1956": [266, 1133], "1958": 266, "1962": 266, "1964": 266, "1968": [266, 464], "1970": [266, 757, 765], "1972": 266, "1974": 266, "1976": 266, "1978": [266, 424], "1980": [266, 649, 1083], "1984": 266, "1986": [266, 1198, 1200, 1204, 1206], "1988": [266, 424, 558], "1990": [266, 649, 1066], "1992": 266, "1994": 266, "2004": 266, "2026": 266, "2028": 266, "2030": 266, "2032": 266, "2034": 266, "2036": 266, "2038": 266, "2040": 266, "2042": 266, "2044": 266, "2046": 266, "2050": [266, 421], "2052": 266, "2054": 266, "2056": 266, "2058": 266, "2060": 266, "2062": 266, "2064": 266, "2066": 266, "2068": 266, "2070": 266, "2072": 266, "2074": 266, "2076": 266, "2078": 266, "2080": 266, "2082": 266, "2084": 266, "2086": 266, "2088": 266, "2090": 266, "2092": 266, "2094": 266, "2096": 266, "2098": 266, "2100": 266, "2102": 266, "2104": 266, "2106": 266, "2108": 266, "2110": 266, "2112": 266, "2114": 266, "2116": 266, "2118": 266, "2120": 266, "2122": 266, "2124": 266, "2126": 266, "2128": 266, "2130": 266, "2132": 266, "2134": 266, "2136": 266, "2138": 266, "2140": 266, "2142": 266, "2144": 266, "2146": 266, "2148": 266, "2150": 266, "2152": 266, "2154": 266, "2156": 266, "2158": 266, "2160": 266, "2162": 266, "2164": 266, "2166": 266, "2168": 266, "2170": 266, "2172": 266, "2174": 266, "2176": 266, "2178": 266, "2180": 266, "2182": 266, "2184": 266, "2186": 266, "2188": 266, "2190": 266, "2192": 266, "2194": 266, "2196": [266, 797], "2198": 266, "2200": 266, "2202": 266, "2204": 266, "2206": 266, "2208": 266, "2210": 266, "2214": 266, "2216": 266, "2218": 266, "2220": 266, "2222": 266, "2224": 266, "2226": 266, "2228": 266, "2230": 266, "2232": 266, "2234": 266, "2236": 266, "2238": 266, "2240": 266, "2242": 266, "2244": 266, "2246": 266, "2248": 266, "2250": 266, "2252": 266, "2254": 266, "2256": 266, "2258": 266, "2260": 266, "2262": 266, "2264": 266, "2266": 266, "2268": [266, 801], "2272": 266, "2274": 266, "2276": 266, "2278": 266, "2280": 266, "2282": 266, "2284": 266, "2286": 266, "2288": 266, "2290": 266, "2292": 266, "2294": 266, "2296": 266, "2298": 266, "2300": 266, "2302": 266, "2304": 266, "2306": 266, "2308": 266, "2310": 266, "2312": 266, "2314": 266, "2316": 266, "2318": 266, "2320": 266, "2322": 266, "2324": [266, 1108], "2326": 266, "2328": 266, "2330": 266, "2332": [266, 913], "2334": 266, "2336": 266, "2338": 266, "2340": 266, "2342": 266, "2344": 266, "2346": 266, "2348": 266, "2350": 266, "2352": 266, "2354": 266, "2356": 266, "2358": 266, "2360": 266, "2362": 266, "2364": [266, 1086], "2366": 266, "2368": 266, "2370": 266, "2372": 266, "2374": 266, "2376": 266, "2378": 266, "2380": 266, "2382": 266, "2384": 266, "2386": 266, "2388": 266, "2390": 266, "2392": 266, "2394": 266, "2396": 266, "2398": 266, "2400": 266, "2402": 266, "2404": 266, "2406": 266, "2408": 266, "2410": 266, "2412": 266, "2414": 266, "2416": 266, "2418": 266, "2420": 266, "2422": 266, "2424": 266, "2426": 266, "2428": 266, "2430": 266, "2432": 266, "2434": 266, "2436": 266, "2438": 266, "2440": [266, 347, 353, 359], "2442": 266, "2444": 266, "2446": 266, "2448": 266, "2450": 266, "2452": 266, "2454": 266, "2456": 266, "2458": 266, "2460": [266, 835], "2462": 266, "2464": 266, "2466": 266, "2468": 266, "2470": 266, "2472": 266, "2474": 266, "2476": 266, "2478": 266, "2480": 266, "2482": 266, "2484": 266, "2486": 266, "2488": 266, "2490": 266, "2492": 266, "2494": 266, "2496": 266, "2498": 266, "2502": 266, "2504": 266, "2506": 266, "2508": 266, "2510": 266, "2512": 266, "2514": 266, "2516": 266, "2518": 266, "2520": 266, "2522": 266, "2524": 266, "2526": 266, "2528": 266, "2530": 266, "2532": 266, "2534": 266, "2536": 266, "2538": 266, "2540": 266, "2542": 266, "2544": 266, "2546": 266, "2548": 266, "2550": 266, "2552": 266, "2554": 266, "2556": 266, "2558": 266, "2560": 266, "2562": 266, "2564": 266, "2566": 266, "2568": 266, "2570": 266, "2572": 266, "2574": 266, "2576": 266, "2578": 266, "2580": 266, "2582": 266, "2584": 266, "2586": 266, "2588": 266, "2590": 266, "2592": 266, "2594": 266, "2596": 266, "2598": 266, "2600": 266, "2602": 266, "2604": 266, "2606": 266, "2608": 266, "2610": 266, "2612": 266, "2614": 266, "2616": 266, "2618": 266, "2620": 266, "2622": 266, "2624": 266, "2626": 266, "2628": 266, "2630": 266, "2632": 266, "2634": 266, "2636": 266, "2638": 266, "2640": [266, 325], "2642": 266, "2644": 266, "2646": 266, "2648": 266, "2650": 266, "2652": 266, "2654": 266, "2656": 266, "2658": 266, "2660": 266, "2662": 266, "2664": 266, "2666": 266, "2668": 266, "2670": 266, "2672": 266, "2674": 266, "2676": 266, "2678": 266, "2680": 266, "2682": 266, "2684": 266, "2686": 266, "2688": 266, "2690": 266, "2692": 266, "2694": 266, "2696": 266, "2698": 266, "2700": 266, "2702": 266, "2704": 266, "2706": [266, 271], "2708": 266, "2710": 266, "2712": 266, "2714": 266, "2716": 266, "2718": 266, "2720": 266, "2722": 266, "2724": 266, "2726": 266, "2728": 266, "2730": [266, 321], "2732": 266, "2734": 266, "2736": 266, "2738": 266, "2740": 266, "2742": 266, "2744": 266, "2746": [266, 913, 1007, 1031], "2748": [266, 286, 304, 311, 343, 347, 353, 359], "2750": 266, "2752": 266, "2754": 266, "2756": 266, "2758": 266, "2760": 266, "2762": 266, "2764": 266, "2766": 266, "2768": 266, "2770": 266, "2772": 266, "2774": 266, "2776": 266, "2778": [266, 1108], "2780": 266, "2782": 266, "2784": 266, "2786": 266, "2788": 266, "2790": 266, "2792": 266, "2794": 266, "2796": 266, "2798": 266, "2800": [266, 309, 512], "2802": [266, 512], "2804": 266, "2806": 266, "2808": 266, "2810": 266, "2812": 266, "2814": 266, "2816": 266, "2818": 266, "2820": 266, "2822": 266, "2824": 266, "2826": 266, "2828": [266, 506], "2830": 266, "2832": 266, "2834": 266, "2836": 266, "2838": 266, "2840": 266, "2842": 266, "2844": 266, "2846": 266, "2848": 266, "2850": 266, "2852": 266, "2854": 266, "2856": 266, "2858": 266, "2860": 266, "2862": 266, "2864": 266, "2866": 266, "2868": 266, "2870": 266, "2872": 266, "2874": 266, "2876": 266, "2878": 266, "2880": 266, "2882": 266, "2884": 266, "2886": 266, "2888": 266, "2890": 266, "2892": 266, "2894": 266, "2896": 266, "2898": 266, "2900": 266, "2902": 266, "2904": 266, "2906": 266, "2910": 266, "2912": 266, "2914": 266, "2916": 266, "2918": 266, "2920": 266, "2922": 266, "2924": 266, "2926": 266, "2928": 266, "2930": 266, "2932": 266, "2934": 266, "2936": 266, "2938": 266, "2940": 266, "2942": 266, "2944": 266, "2946": 266, "2948": 266, "2950": 266, "2952": 266, "2954": 266, "2956": 266, "2958": 266, "2960": 266, "2962": 266, "2964": 266, "2966": 266, "2968": 266, "2970": 266, "2972": 266, "2974": 266, "2976": 266, "2978": 266, "2980": 266, "2982": 266, "2984": 266, "2986": 266, "2988": 266, "2990": 266, "2992": 266, "2994": 266, "2996": 266, "2998": 266, "3002": 266, "3004": 266, "3006": 266, "3008": 266, "3010": 266, "3012": 266, "3014": 266, "3016": 266, "3018": 266, "3020": 266, "3022": 266, "3024": 266, "3026": 266, "3028": 266, "3030": 266, "3032": 266, "3034": 266, "3036": 266, "3038": 266, "3040": 266, "3042": 266, "3044": 266, "3046": 266, "3048": 266, "3050": 266, "3052": 266, "3054": 266, "3056": 266, "3058": 266, "3060": 266, "3062": 266, "3064": 266, "3066": 266, "3068": 266, "3070": 266, "3072": 266, "3074": 266, "3076": 266, "3078": 266, "3080": 266, "3082": 266, "3084": 266, "3086": 266, "3088": 266, "3090": 266, "3092": 266, "3094": 266, "3096": 266, "3098": 266, "3100": 266, "3102": 266, "3104": 266, "3106": 266, "3108": 266, "3110": [266, 315], "3112": 266, "3114": 266, "3116": 266, "3118": 266, "3120": 266, "3122": 266, "3124": 266, "3126": 266, "3128": 266, "3130": 266, "3132": 266, "3134": 266, "3136": 266, "3138": 266, "3140": 266, "3142": 266, "3144": 266, "3146": 266, "3148": 266, "3150": 266, "3152": 266, "3154": 266, "3156": 266, "3158": 266, "3160": 266, "3162": 266, "3164": 266, "3166": 266, "3168": 266, "3170": 266, "3172": 266, "3174": 266, "3176": 266, "3178": 266, "3180": 266, "3182": 266, "3184": 266, "3186": 266, "3188": 266, "3190": 266, "3192": 266, "3194": 266, "3196": 266, "3198": 266, "3200": 266, "3202": 266, "3204": 266, "3206": 266, "3208": 266, "3210": 266, "3212": 266, "3214": 266, "3216": 266, "3218": 266, "3220": 266, "3222": 266, "3224": 266, "3226": 266, "3228": 266, "3230": 266, "3232": 266, "3234": 266, "3236": 266, "3238": 266, "3240": 266, "3242": 266, "3244": 266, "3246": 266, "3248": 266, "3250": 266, "3252": 266, "3254": 266, "3256": 266, "3258": 266, "3260": 266, "3262": 266, "3264": 266, "3266": 266, "3268": 266, "3270": 266, "3272": 266, "3274": 266, "3276": 266, "3278": 266, "3280": 266, "3282": 266, "3284": 266, "3286": 266, "3288": 266, "3290": 266, "3292": 266, "3294": 266, "3296": 266, "3298": 266, "3300": 266, "3302": 266, "3304": 266, "3306": 266, "3308": 266, "3310": 266, "3312": 266, "3314": 266, "3316": 266, "3318": 266, "3320": 266, "3322": 266, "3324": 266, "3326": 266, "3328": 266, "3330": 266, "3332": 266, "3334": 266, "3336": 266, "3338": 266, "3340": 266, "3342": 266, "3344": 266, "3346": 266, "3348": 266, "3350": 266, "3352": 266, "3354": 266, "3356": 266, "3358": 266, "3360": 266, "3362": 266, "3364": 266, "3366": 266, "3368": 266, "3370": 266, "3372": 266, "3374": 266, "3376": 266, "3378": 266, "3380": 266, "3382": 266, "3384": 266, "3386": 266, "3388": 266, "3390": 266, "3392": 266, "3394": 266, "3396": 266, "3398": 266, "3400": 266, "3402": 266, "3404": 266, "3406": 266, "3408": 266, "3410": 266, "3412": 266, "3414": 266, "3416": 266, "3418": 266, "3420": 266, "3422": 266, "3424": 266, "3426": 266, "3428": 266, "3430": 266, "3432": 266, "3434": 266, "3436": 266, "3438": 266, "3440": 266, "3442": 266, "3444": 266, "3446": 266, "3448": 266, "3450": 266, "3452": 266, "3454": 266, "3456": 266, "3458": 266, "3460": 266, "3462": 266, "3464": 266, "3466": 266, "3468": 266, "3470": 266, "3472": 266, "3474": 266, "3476": 266, "3478": 266, "3480": 266, "3482": 266, "3484": 266, "3486": 266, "3488": 266, "3490": 266, "3492": 266, "3494": 266, "3496": 266, "3498": 266, "3500": 266, "3502": 266, "3504": 266, "3506": 266, "3508": 266, "3510": 266, "3512": 266, "3514": 266, "3516": 266, "3518": 266, "3520": 266, "3522": 266, "3524": 266, "3526": 266, "3528": 266, "3530": 266, "3532": 266, "3534": 266, "3536": 266, "3538": 266, "3540": 266, "3542": 266, "3544": 266, "3546": 266, "3548": 266, "3552": 266, "3554": 266, "3556": 266, "3558": 266, "3560": 266, "3562": 266, "3564": 266, "3566": 266, "3568": 266, "3570": 266, "3572": 266, "3574": 266, "3576": 266, "3578": 266, "3580": 266, "3582": 266, "3584": 266, "3588": 266, "3590": 266, "3592": 266, "3594": 266, "3596": 266, "3598": 266, "3602": 266, "3604": 266, "3606": 266, "3608": 266, "3610": 266, "3612": 266, "3614": 266, "3616": 266, "3618": 266, "3620": 266, "3622": 266, "3624": 266, "3626": 266, "3628": 266, "3630": 266, "3632": 266, "3634": 266, "3636": 266, "3638": 266, "3640": 266, "3642": 266, "3644": 266, "3646": 266, "3648": 266, "3650": 266, "3652": 266, "3654": 266, "3656": 266, "3658": 266, "3660": 266, "3662": 266, "3664": 266, "3666": 266, "3668": 266, "3670": 266, "3672": 266, "3674": 266, "3676": 266, "3678": 266, "3680": 266, "3682": 266, "3684": 266, "3686": 266, "3688": 266, "3690": 266, "3692": 266, "3694": 266, "3696": 266, "3698": 266, "3700": 266, "3702": 266, "3704": 266, "3706": 266, "3708": 266, "3710": 266, "3712": 266, "3714": 266, "3716": 266, "3718": 266, "3720": 266, "3722": [266, 1028], "3724": 266, "3726": 266, "3728": 266, "3730": 266, "3732": 266, "3734": 266, "3736": 266, "3738": 266, "3740": 266, "3742": 266, "3744": 266, "3746": 266, "3748": 266, "3750": 266, "3752": 266, "3754": 266, "3756": 266, "3758": 266, "3760": 266, "3762": 266, "3764": 266, "3766": 266, "3768": 266, "3770": [266, 315], "3772": 266, "3774": 266, "3776": 266, "3778": 266, "3780": 266, "3782": 266, "3784": 266, "3786": 266, "3788": 266, "3790": [266, 1230], "3792": [266, 1230], "3794": [266, 1230], "3796": [266, 1230], "3798": [266, 1230], "3800": [266, 1230], "3802": [266, 1230], "3804": 266, "3806": 266, "3808": 266, "3810": 266, "3812": 266, "3814": 266, "3816": 266, "3818": 266, "3820": 266, "3822": 266, "3824": 266, "3826": 266, "3828": 266, "3830": 266, "3832": 266, "3834": 266, "3836": 266, "3838": 266, "3840": 266, "3842": 266, "3844": 266, "3846": 266, "3848": 266, "3850": 266, "3852": 266, "3854": 266, "3856": 266, "3858": 266, "3860": 266, "3862": 266, "3864": 266, "3866": 266, "3868": 266, "3870": 266, "3872": 266, "3874": 266, "3876": 266, "3878": 266, "3880": 266, "3882": 266, "3884": 266, "3886": 266, "3888": 266, "3890": 266, "3892": 266, "3894": 266, "3896": 266, "3898": 266, "3900": 266, "3902": 266, "3904": 266, "3906": 266, "3908": 266, "3910": 266, "3912": 266, "3914": 266, "3916": 266, "3918": 266, "3920": 266, "3922": 266, "3924": 266, "3926": 266, "3928": 266, "3930": 266, "3932": 266, "3934": 266, "3936": 266, "3938": 266, "3940": 266, "3942": 266, "3946": 266, "3948": 266, "3950": 266, "3952": 266, "3954": 266, "3956": 266, "3958": 266, "3960": 266, "3962": 266, "3964": 266, "3966": 266, "3968": 266, "3970": 266, "3972": 266, "3974": 266, "3976": 266, "3978": 266, "3980": 266, "3982": 266, "3984": 266, "3986": 266, "3988": 266, "3990": 266, "3992": 266, "3994": 266, "3996": 266, "3998": 266, "4002": 266, "4004": 266, "4006": 266, "4008": 266, "4010": 266, "4012": 266, "4014": 266, "4016": 266, "4018": 266, "4020": 266, "4022": 266, "4024": 266, "4026": 266, "4028": 266, "4030": 266, "4032": 266, "4034": 266, "4036": 266, "4038": 266, "4040": 266, "4042": 266, "4044": 266, "4046": 266, "4048": 266, "4050": 266, "4052": 266, "4054": 266, "4056": 266, "4058": 266, "4060": 266, "4062": 266, "4064": 266, "4066": 266, "4068": 266, "4070": 266, "4072": 266, "4074": 266, "4076": 266, "4078": 266, "4080": 266, "4082": 266, "4084": 266, "4086": 266, "4088": 266, "4090": 266, "4092": 266, "4094": 266, "4098": 266, "4100": 266, "4102": 266, "4104": 266, "4106": 266, "4108": 266, "4110": 266, "4112": 266, "4114": 266, "4116": 266, "4118": 266, "4120": 266, "4122": 266, "4124": 266, "4126": 266, "4128": 266, "4130": 266, "4132": 266, "4134": 266, "4136": 266, "4138": 266, "4140": 266, "4142": 266, "4144": 266, "4146": 266, "4148": 266, "4150": 266, "4152": 266, "4154": 266, "4156": 266, "4158": 266, "4160": 266, "4162": 266, "4164": 266, "4166": 266, "4168": 266, "4170": 266, "4172": 266, "4174": 266, "4176": 266, "4178": 266, "4180": 266, "4182": 266, "4184": 266, "4186": 266, "4188": 266, "4190": 266, "4192": 266, "4194": 266, "4196": 266, "4198": 266, "4200": 266, "4202": 266, "4204": 266, "4206": 266, "4208": 266, "4210": 266, "4212": 266, "4214": 266, "4216": 266, "4218": 266, "4220": 266, "4222": 266, "4224": 266, "4226": 266, "4228": 266, "4230": 266, "4232": 266, "4234": [266, 1230], "4236": [266, 1230], "4238": [266, 1230], "4240": 266, "4242": 266, "4244": 266, "4246": 266, "4248": 266, "4250": 266, "4252": 266, "4254": 266, "4256": 266, "4258": 266, "4260": 266, "4262": 266, "4264": 266, "4266": 266, "4268": 266, "4270": 266, "4272": 266, "4274": 266, "4276": 266, "4278": 266, "4280": 266, "4282": 266, "4284": 266, "4286": 266, "4288": 266, "4290": 266, "4292": 266, "4294": 266, "4296": 266, "4298": 266, "4302": 266, "4304": 266, "4306": 266, "4308": 266, "4310": 266, "4312": 266, "4314": 266, "4316": 266, "4318": 266, "4320": 266, "4322": 266, "4324": 266, "4326": 266, "4328": 266, "4330": 266, "4332": 266, "4334": 266, "4336": 266, "4338": 266, "4340": 266, "4342": 266, "4344": 266, "4346": 266, "4348": 266, "4350": 266, "4352": 266, "4354": 266, "4356": 266, "4358": 266, "4360": 266, "4362": 266, "4364": 266, "4366": 266, "4368": 266, "4370": 266, "4372": 266, "4374": 266, "4376": 266, "4378": 266, "4380": 266, "4382": 266, "4384": 266, "4386": 266, "4388": 266, "4390": 266, "4392": 266, "4394": 266, "4396": 266, "4398": 266, "4400": 266, "4402": 266, "4404": 266, "4406": 266, "4408": 266, "4410": 266, "4412": 266, "4414": 266, "4416": 266, "4418": 266, "4420": 266, "4422": 266, "4424": 266, "4426": 266, "4428": 266, "4430": 266, "4432": 266, "4434": 266, "4436": 266, "4438": 266, "4440": 266, "4442": 266, "4444": 266, "4446": 266, "4448": 266, "4450": 266, "4452": 266, "4454": 266, "4456": 266, "4458": 266, "4460": 266, "4462": 266, "4464": 266, "4466": 266, "4468": 266, "4470": 266, "4472": 266, "4474": 266, "4476": 266, "4478": 266, "4480": 266, "4482": 266, "4484": 266, "4486": 266, "4488": 266, "4490": 266, "4492": 266, "4494": 266, "4496": 266, "4498": 266, "4502": 266, "4504": 266, "4506": 266, "4508": 266, "4510": 266, "4512": 266, "4514": 266, "4516": 266, "4518": 266, "4520": 266, "4522": 266, "4524": 266, "4526": 266, "4528": 266, "4530": 266, "4532": 266, "4534": 266, "4536": 266, "4538": 266, "4540": 266, "4542": 266, "4544": 266, "4546": 266, "4548": 266, "4550": 266, "4552": 266, "4554": 266, "4556": 266, "4558": 266, "4560": 266, "4562": 266, "4564": 266, "4566": 266, "4568": 266, "4570": 266, "4572": 266, "4574": 266, "4578": 266, "4580": 266, "4582": 266, "4584": 266, "4586": 266, "4588": 266, "4590": 266, "4592": 266, "4594": 266, "4596": 266, "4598": 266, "4600": 266, "4602": 266, "4604": 266, "4606": 266, "4608": 266, "4610": 266, "4612": 266, "4614": 266, "4616": 266, "4618": 266, "4620": 266, "4622": 266, "4624": 266, "4626": 266, "4628": [266, 279], "4630": [266, 506], "4632": 266, "4634": 266, "4636": 266, "4638": 266, "4640": 266, "4642": 266, "4644": 266, "4646": 266, "4648": 266, "4650": 266, "4652": 266, "4654": 266, "4656": 266, "4658": 266, "4662": 266, "4664": 266, "4666": 266, "4668": 266, "4670": 266, "4672": 266, "4674": 266, "4676": 266, "4680": 266, "4682": 266, "4684": 266, "4686": 266, "4688": 266, "4690": 266, "4692": 266, "4694": 266, "4696": 266, "4698": 266, "4700": 266, "4702": 266, "4704": 266, "4706": 266, "4708": 266, "4710": 266, "4712": 266, "4714": 266, "4716": 266, "4718": 266, "4720": 266, "4722": 266, "4724": 266, "4726": 266, "4728": 266, "4730": 266, "4732": 266, "4734": 266, "4736": 266, "4738": 266, "4740": 266, "4742": 266, "4744": 266, "4746": 266, "4748": 266, "4750": 266, "4752": 266, "4754": 266, "4756": 266, "4758": 266, "4760": 266, "4762": 266, "4764": 266, "4766": 266, "4768": 266, "4770": 266, "4772": 266, "4774": 266, "4776": 266, "4778": 266, "4780": 266, "4782": 266, "4784": 266, "4786": 266, "4788": 266, "4790": 266, "4792": 266, "4794": 266, "4796": 266, "4798": 266, "4802": 266, "4804": 266, "4806": 266, "4808": 266, "4810": 266, "4812": 266, "4814": 266, "4816": 266, "4818": 266, "4820": 266, "4822": 266, "4824": 266, "4826": 266, "4828": 266, "4830": 266, "4832": 266, "4834": 266, "4836": 266, "4838": 266, "4840": 266, "4842": 266, "4844": 266, "4846": 266, "4848": 266, "4850": 266, "4852": 266, "4854": 266, "4856": 266, "4858": 266, "4860": 266, "4862": 266, "4864": 266, "4866": [266, 276], "4868": 266, "4870": 266, "4872": 266, "4874": 266, "4876": 266, "4878": 266, "4880": 266, "4882": [266, 876], "4884": 266, "4886": 266, "4888": 266, "4890": 266, "4892": 266, "4894": 266, "4896": 266, "4898": 266, "4900": 266, "4902": 266, "4904": 266, "4906": 266, "4910": 266, "4912": 266, "4914": 266, "4916": 266, "4918": 266, "4920": 266, "4922": 266, "4924": 266, "4926": [266, 279], "4928": 266, "4930": 266, "4932": 266, "4934": 266, "4936": 266, "4938": 266, "4940": 266, "4942": 266, "4944": 266, "4946": 266, "4948": 266, "4950": [266, 283], "4952": 266, "4954": 266, "4956": 266, "4958": 266, "4960": 266, "4962": 266, "4964": 266, "4966": 266, "4968": 266, "4970": 266, "4972": 266, "4974": 266, "4976": 266, "4978": 266, "4980": 266, "4982": 266, "4984": 266, "4986": 266, "4988": 266, "4990": 266, "4992": 266, "4994": 266, "4996": 266, "4998": 266, "5002": 266, "5004": 266, "5006": 266, "5008": 266, "5010": 266, "5012": 266, "5014": 266, "5016": 266, "5018": 266, "5020": 266, "5022": 266, "5024": 266, "5026": 266, "5028": 266, "5030": 266, "5032": 266, "5034": 266, "5036": 266, "5038": 266, "5040": 266, "5042": 266, "5044": 266, "5046": 266, "5048": 266, "5052": 266, "5054": 266, "5056": 266, "5058": 266, "5060": 266, "5062": 266, "5064": 266, "5066": 266, "5068": 266, "5070": 266, "5072": 266, "5074": 266, "5076": 266, "5078": 266, "5080": [266, 913], "5082": 266, "5084": 266, "5086": 266, "5088": 266, "5090": 266, "5092": 266, "5094": 266, "5096": 266, "5098": 266, "5100": 266, "5102": 266, "5104": 266, "5106": 266, "5108": 266, "5110": 266, "5112": 266, "5114": 266, "5116": 266, "5118": 266, "5120": 266, "5122": 266, "5124": 266, "5126": 266, "5128": 266, "5130": 266, "5132": 266, "5134": 266, "5136": 266, "5138": 266, "5140": 266, "5142": 266, "5144": 266, "5146": 266, "5148": 266, "5150": 266, "5152": 266, "5154": 266, "5156": 266, "5158": 266, "5160": 266, "5162": 266, "5164": 266, "5166": 266, "5168": 266, "5170": 266, "5172": 266, "5174": 266, "5176": 266, "5178": 266, "5180": 266, "5182": 266, "5184": 266, "5186": 266, "5188": 266, "5190": 266, "5192": 266, "5194": 266, "5196": 266, "5198": 266, "5200": 266, "5202": 266, "5204": 266, "5206": 266, "5208": 266, "5210": 266, "5212": 266, "5214": 266, "5216": 266, "5218": 266, "5220": 266, "5222": 266, "5224": 266, "5226": 266, "5228": 266, "5230": 266, "5232": 266, "5234": 266, "5236": 266, "5238": 266, "5240": 266, "5242": 266, "5244": 266, "5246": 266, "5248": 266, "5250": 266, "5252": 266, "5254": 266, "5256": 266, "5258": 266, "5260": 266, "5262": 266, "5264": 266, "5266": 266, "5268": 266, "5270": 266, "5272": 266, "5274": 266, "5276": 266, "5278": 266, "5280": 266, "5282": 266, "5284": 266, "5286": 266, "5288": 266, "5290": 266, "5292": 266, "5294": 266, "5296": 266, "5298": 266, "5300": 266, "5302": 266, "5304": 266, "5306": 266, "5308": 266, "5310": 266, "5312": 266, "5314": 266, "5316": 266, "5318": 266, "5320": 266, "5322": 266, "5324": 266, "5326": 266, "5328": 266, "5330": 266, "5332": 266, "5334": 266, "5336": 266, "5338": 266, "5340": 266, "5342": 266, "5344": 266, "5346": 266, "5348": 266, "5350": 266, "5352": 266, "5354": 266, "5356": 266, "5358": 266, "5360": 266, "5362": [266, 309, 512], "5364": 266, "5366": 266, "5368": 266, "5370": 266, "5372": 266, "5374": 266, "5376": 266, "5378": 266, "5380": 266, "5382": 266, "5384": 266, "5386": 266, "5388": 266, "5390": 266, "5392": 266, "5394": 266, "5396": 266, "5398": 266, "5400": 266, "5402": 266, "5404": 266, "5406": 266, "5408": 266, "5410": [266, 506], "5412": 266, "5414": 266, "5416": 266, "5418": 266, "5420": 266, "5422": 266, "5424": 266, "5426": 266, "5428": 266, "5430": 266, "5432": 266, "5434": 266, "5436": 266, "5438": 266, "5440": 266, "5442": 266, "5444": 266, "5446": 266, "5448": 266, "5450": 266, "5452": 266, "5454": 266, "5456": 266, "5458": 266, "5460": 266, "5462": 266, "5464": 266, "5466": 266, "5468": 266, "5470": 266, "5472": 266, "5474": 266, "5476": 266, "5478": 266, "5480": 266, "5482": 266, "5484": 266, "5486": 266, "5488": 266, "5490": 266, "5492": 266, "5494": 266, "5496": 266, "5498": 266, "5500": 266, "5502": 266, "5504": 266, "5506": 266, "5508": 266, "5510": 266, "5512": 266, "5514": 266, "5516": 266, "5518": 266, "5520": 266, "5522": 266, "5524": 266, "5526": 266, "5528": 266, "5530": 266, "5532": 266, "5534": 266, "5536": 266, "5538": 266, "5540": 266, "5542": 266, "5544": 266, "5546": 266, "5548": 266, "5550": 266, "5552": 266, "5554": 266, "5556": 266, "5558": 266, "5560": 266, "5562": 266, "5564": 266, "5566": 266, "5568": 266, "5570": 266, "5572": 266, "5574": 266, "5576": 266, "5578": 266, "5580": 266, "5582": 266, "5584": 266, "5586": 266, "5588": 266, "5590": 266, "5592": 266, "5594": 266, "5596": 266, "5598": 266, "5600": 266, "5602": 266, "5604": 266, "5606": 266, "5608": 266, "5610": 266, "5612": 266, "5614": 266, "5616": 266, "5618": 266, "5620": 266, "5622": 266, "5624": 266, "5626": 266, "5628": 266, "5630": 266, "5632": 266, "5634": 266, "5636": 266, "5638": 266, "5640": 266, "5642": 266, "5644": 266, "5646": 266, "5648": 266, "5650": 266, "5652": 266, "5654": 266, "5656": 266, "5658": 266, "5660": 266, "5662": 266, "5664": 266, "5666": 266, "5668": 266, "5670": 266, "5672": 266, "5674": 266, "5676": 266, "5678": [266, 1014], "5680": 266, "5682": 266, "5684": 266, "5686": 266, "5688": 266, "5690": 266, "5692": 266, "5694": 266, "5696": 266, "5698": 266, "5700": 266, "5702": 266, "5704": 266, "5706": 266, "5708": 266, "5710": 266, "5712": 266, "5714": 266, "5716": 266, "5718": 266, "5720": 266, "5722": 266, "5724": 266, "5726": 266, "5728": 266, "5730": 266, "5732": 266, "5734": 266, "5736": 266, "5738": 266, "5740": 266, "5742": 266, "5744": 266, "5746": 266, "5748": 266, "5750": 266, "5752": 266, "5754": 266, "5756": 266, "5758": 266, "5760": 266, "5762": 266, "5764": 266, "5766": 266, "5768": 266, "5770": 266, "5772": 266, "5774": 266, "5776": 266, "5778": 266, "5780": 266, "5782": 266, "5784": 266, "5786": 266, "5788": 266, "5790": 266, "5792": 266, "5794": 266, "5796": 266, "5798": 266, "5800": 266, "5802": 266, "5804": 266, "5806": 266, "5808": 266, "5810": 266, "5812": 266, "5814": 266, "5816": 266, "5818": 266, "5820": 266, "5822": 266, "5824": 266, "5826": 266, "5828": 266, "5830": 266, "5832": [266, 276], "5834": 266, "5836": 266, "5838": 266, "5840": 266, "5842": 266, "5844": 266, "5846": 266, "5848": 266, "5850": 266, "5852": 266, "5854": 266, "5856": 266, "5858": 266, "5860": 266, "5862": 266, "5864": 266, "5866": 266, "5868": 266, "5870": 266, "5872": 266, "5874": 266, "5876": 266, "5878": 266, "5880": 266, "5882": 266, "5884": 266, "5886": 266, "5888": 266, "5890": 266, "5892": 266, "5894": 266, "5896": 266, "5898": 266, "5900": 266, "5902": 266, "5904": 266, "5906": 266, "5908": 266, "5910": 266, "5912": 266, "5914": 266, "5916": 266, "5918": 266, "5920": 266, "5922": 266, "5924": 266, "5926": 266, "5928": 266, "5930": 266, "5932": 266, "5934": 266, "5936": 266, "5938": 266, "5940": 266, "5942": 266, "5944": 266, "5946": 266, "5948": 266, "5950": 266, "5952": 266, "5954": 266, "5956": 266, "5958": 266, "5960": 266, "5962": 266, "5964": 266, "5966": 266, "5968": 266, "5970": 266, "5972": 266, "5974": 266, "5976": 266, "5978": 266, "5980": 266, "5982": 266, "5984": 266, "5986": 266, "5988": 266, "5990": 266, "5992": 266, "5994": 266, "5996": 266, "5998": 266, "6000": [266, 1124], "6002": 266, "6004": 266, "6006": 266, "6008": 266, "6010": 266, "6012": 266, "6014": 266, "6016": 266, "6018": 266, "6020": 266, "6022": 266, "6024": 266, "6026": 266, "6028": 266, "6030": 266, "6032": 266, "6034": 266, "6036": 266, "6038": 266, "6040": 266, "6042": 266, "6044": 266, "6046": 266, "6048": 266, "6050": 266, "6052": 266, "6054": 266, "6056": 266, "6058": 266, "6060": 266, "6062": 266, "6064": 266, "6066": 266, "6068": 266, "6070": 266, "6072": 266, "6074": 266, "6076": 266, "6078": 266, "6080": 266, "6082": 266, "6084": 266, "6086": 266, "6088": 266, "6090": 266, "6092": 266, "6094": 266, "6096": 266, "6098": 266, "6100": 266, "6102": 266, "6104": 266, "6106": 266, "6108": 266, "6110": 266, "6112": 266, "6114": 266, "6116": 266, "6118": 266, "6120": 266, "6122": 266, "6124": 266, "6126": 266, "6128": 266, "6130": 266, "6132": 266, "6134": 266, "6136": 266, "6138": 266, "6140": 266, "6142": 266, "6144": 266, "6146": 266, "6148": 266, "6150": 266, "6154": 266, "6156": 266, "6158": 266, "6160": 266, "6162": 266, "6164": 266, "6166": 266, "6168": 266, "6170": 266, "6172": 266, "6174": 266, "6176": 266, "6178": 266, "6180": 266, "6182": 266, "6184": 266, "6186": 266, "6188": 266, "6190": 266, "6192": 266, "6194": 266, "6196": 266, "6198": 266, "6200": 266, "6202": 266, "6204": 266, "6206": 266, "6208": 266, "6210": 266, "6212": 266, "6214": 266, "6216": 266, "6218": 266, "6220": 266, "6222": 266, "6224": 266, "6226": 266, "6228": 266, "6230": 266, "6232": 266, "6234": 266, "6236": 266, "6238": 266, "6240": 266, "6242": 266, "6244": 266, "6246": 266, "6248": 266, "6250": 266, "6252": 266, "6254": 266, "6256": 266, "6258": 266, "6260": 266, "6262": 266, "6264": 266, "6266": 266, "6268": 266, "6270": 266, "6272": 266, "6274": 266, "6276": 266, "6278": 266, "6280": 266, "6282": 266, "6284": 266, "6286": 266, "6288": 266, "6290": 266, "6292": 266, "6294": 266, "6296": 266, "6298": 266, "6300": 266, "6302": 266, "6304": 266, "6306": 266, "6308": 266, "6310": 266, "6312": 266, "6314": 266, "6316": 266, "6318": 266, "6320": 266, "6322": 266, "6324": 266, "6326": 266, "6328": 266, "6330": 266, "6332": 266, "6334": 266, "6336": 266, "6338": 266, "6340": 266, "6342": 266, "6344": 266, "6346": 266, "6348": 266, "6350": 266, "6352": 266, "6354": 266, "6356": 266, "6358": 266, "6360": 266, "6362": 266, "6364": 266, "6366": 266, "6368": 266, "6370": 266, "6372": 266, "6374": 266, "6376": 266, "6378": 266, "6380": 266, "6382": 266, "6384": 266, "6386": 266, "6388": 266, "6390": 266, "6392": 266, "6394": 266, "6396": 266, "6398": 266, "6400": 266, "6402": 266, "6404": 266, "6406": 266, "6408": 266, "6410": 266, "6412": 266, "6414": 266, "6416": 266, "6418": 266, "6420": 266, "6422": 266, "6424": 266, "6426": 266, "6428": 266, "6430": 266, "6432": 266, "6434": 266, "6436": 266, "6438": 266, "6440": 266, "6442": 266, "6444": 266, "6446": 266, "6448": 266, "6450": 266, "6452": 266, "6454": 266, "6456": 266, "6458": 266, "6460": 266, "6462": 266, "6464": 266, "6466": 266, "6468": 266, "6470": 266, "6472": 266, "6474": 266, "6476": 266, "6478": 266, "6480": 266, "6482": 266, "6484": 266, "6486": 266, "6488": 266, "6490": 266, "6492": 266, "6494": 266, "6496": 266, "6498": 266, "6500": 266, "6502": 266, "6504": 266, "6506": 266, "6508": 266, "6510": 266, "6512": 266, "6514": 266, "6516": 266, "6518": 266, "6520": 266, "6522": 266, "6524": 266, "6526": 266, "6528": 266, "6530": 266, "6532": 266, "6534": 266, "6536": 266, "6538": 266, "6540": 266, "6542": 266, "6544": 266, "6546": 266, "6548": 266, "6550": 266, "6552": 266, "6554": 266, "6556": 266, "6558": 266, "6560": 266, "6562": 266, "6564": 266, "6566": 266, "6568": 266, "6570": 266, "6572": 266, "6574": 266, "6576": 266, "6578": 266, "6580": 266, "6582": 266, "6584": 266, "6586": 266, "6588": 266, "6590": 266, "6592": 266, "6594": 266, "6596": 266, "6598": 266, "6600": 266, "6602": 266, "6604": 266, "6606": 266, "6608": 266, "6610": 266, "6612": 266, "6614": 266, "6616": 266, "6618": 266, "6620": 266, "6622": 266, "6624": 266, "6626": 266, "6628": 266, "6630": 266, "6632": 266, "6634": 266, "6636": 266, "6638": 266, "6640": 266, "6642": 266, "6644": 266, "6646": 266, "6648": 266, "6650": 266, "6652": 266, "6654": 266, "6656": 266, "6658": 266, "6660": 266, "6662": 266, "6664": 266, "6666": 266, "6668": 266, "6670": 266, "6672": 266, "6674": 266, "6676": 266, "6678": 266, "6680": 266, "6682": 266, "6684": 266, "6686": 266, "6688": 266, "6690": 266, "6692": 266, "6694": 266, "6696": 266, "6698": 266, "6700": 266, "6702": 266, "6704": 266, "6706": 266, "6708": 266, "6710": 266, "6714": 266, "6716": [266, 289], "6718": 266, "6720": 266, "6722": 266, "6724": 266, "6726": 266, "6728": 266, "6730": 266, "6732": 266, "6734": 266, "6736": 266, "6738": 266, "6740": 266, "6742": 266, "6744": 266, "6746": 266, "6748": 266, "6750": 266, "6752": 266, "6754": 266, "6756": 266, "6758": 266, "6760": 266, "6762": 266, "6764": 266, "6766": 266, "6768": 266, "6770": 266, "6772": 266, "6774": 266, "6776": 266, "6778": 266, "6780": 266, "6782": 266, "6784": 266, "6786": 266, "6788": 266, "6790": 266, "6792": 266, "6794": 266, "6796": 266, "6798": 266, "6800": 266, "6802": 266, "6804": 266, "6806": 266, "6808": 266, "6812": 266, "6814": 266, "6816": 266, "6818": 266, "6820": 266, "6822": 266, "6824": 266, "6826": 266, "6828": 266, "6830": 266, "6832": 266, "6834": 266, "6836": 266, "6838": 266, "6840": 266, "6842": 266, "6844": 266, "6846": 266, "6848": 266, "6850": 266, "6852": 266, "6854": 266, "6856": 266, "6858": [266, 315], "6860": 266, "6862": 266, "6864": 266, "6866": 266, "6868": 266, "6870": 266, "6872": 266, "6874": 266, "6876": 266, "6878": 266, "6880": 266, "6882": 266, "6884": 266, "6886": 266, "6888": 266, "6890": 266, "6892": 266, "6894": 266, "6896": 266, "6898": 266, "6900": 266, "6902": 266, "6904": 266, "6906": 266, "6908": 266, "6910": 266, "6912": 266, "6914": 266, "6916": 266, "6918": 266, "6920": 266, "6922": 266, "6924": 266, "6926": 266, "6928": 266, "6930": 266, "6932": 266, "6934": 266, "6936": 266, "6938": 266, "6940": 266, "6942": 266, "6944": 266, "6946": 266, "6948": 266, "6950": 266, "6952": 266, "6954": 266, "6956": 266, "6958": 266, "6960": 266, "6962": 266, "6964": 266, "6966": 266, "6968": 266, "6970": 266, "6972": 266, "6974": 266, "6976": 266, "6978": 266, "6980": 266, "6982": 266, "6984": 266, "6986": 266, "6988": 266, "6990": 266, "6992": 266, "6994": 266, "6996": 266, "6998": 266, "7000": 266, "7002": 266, "7004": 266, "7006": 266, "7008": 266, "7010": 266, "7012": 266, "7014": 266, "7016": 266, "7018": 266, "7020": 266, "7022": 266, "7024": 266, "7026": 266, "7028": 266, "7030": 266, "7032": 266, "7034": 266, "7036": 266, "7038": 266, "7040": 266, "7042": 266, "7044": 266, "7046": 266, "7048": 266, "7050": 266, "7052": 266, "7054": 266, "7056": 266, "7058": 266, "7060": 266, "7062": 266, "7064": 266, "7066": 266, "7068": 266, "7070": 266, "7072": 266, "7074": 266, "7076": 266, "7078": 266, "7080": [266, 1230], "7082": 266, "7084": 266, "7086": 266, "7088": [266, 1230], "7090": 266, "7092": 266, "7094": 266, "7096": 266, "7098": 266, "7100": 266, "7102": 266, "7104": 266, "7106": 266, "7108": 266, "7110": 266, "7112": 266, "7114": 266, "7116": 266, "7118": 266, "7120": 266, "7122": 266, "7124": 266, "7126": 266, "7128": 266, "7130": 266, "7132": 266, "7134": 266, "7136": 266, "7138": 266, "7140": 266, "7142": 266, "7144": 266, "7146": 266, "7148": 266, "7150": 266, "7152": 266, "7154": 266, "7156": 266, "7158": 266, "7160": 266, "7162": 266, "7164": 266, "7166": 266, "7168": 266, "7170": 266, "7172": 266, "7174": 266, "7176": 266, "7178": 266, "7180": 266, "7182": 266, "7184": 266, "7186": 266, "7188": 266, "7190": 266, "7192": 266, "7194": 266, "7196": 266, "7198": 266, "7200": 266, "7202": 266, "7204": 266, "7206": 266, "7208": 266, "7210": 266, "7212": 266, "7214": 266, "7216": 266, "7218": 266, "7220": 266, "7222": 266, "7224": 266, "7226": 266, "7228": 266, "7230": 266, "7232": 266, "7234": 266, "7236": 266, "7238": 266, "7240": 266, "7242": 266, "7244": 266, "7246": 266, "7248": 266, "7250": 266, "7252": 266, "7254": 266, "7256": 266, "7258": 266, "7260": 266, "7262": 266, "7264": 266, "7266": 266, "7268": 266, "7270": 266, "7272": 266, "7274": 266, "7276": 266, "7278": 266, "7280": 266, "7282": 266, "7284": 266, "7286": 266, "7288": 266, "7290": 266, "7292": 266, "7294": 266, "7296": 266, "7298": 266, "7300": 266, "7302": 266, "7304": 266, "7306": 266, "7308": 266, "7310": 266, "7312": 266, "7314": 266, "7316": 266, "7318": 266, "7320": 266, "7322": 266, "7324": 266, "7326": 266, "7328": 266, "7330": 266, "7332": 266, "7334": 266, "7336": 266, "7338": 266, "7340": 266, "7342": 266, "7344": 266, "7346": 266, "7348": 266, "7350": 266, "7352": 266, "7354": 266, "7356": 266, "7358": 266, "7360": 266, "7362": 266, "7364": 266, "7366": 266, "7368": 266, "7370": 266, "7372": 266, "7374": 266, "7376": 266, "7378": 266, "7380": 266, "7382": 266, "7384": 266, "7386": 266, "7388": 266, "7392": 266, "7394": 266, "7396": 266, "7398": 266, "7400": 266, "7402": 266, "7404": 266, "7406": 266, "7408": 266, "7410": 266, "7412": 266, "7414": 266, "7416": 266, "7418": 266, "7420": 266, "7422": 266, "7424": 266, "7426": 266, "7428": 266, "7430": 266, "7432": 266, "7434": 266, "7436": 266, "7438": 266, "7440": 266, "7442": 266, "7444": 266, "7446": 266, "7448": 266, "7450": 266, "7452": 266, "7454": 266, "7456": 266, "7458": 266, "7460": 266, "7462": 266, "7464": 266, "7466": 266, "7468": 266, "7470": 266, "7472": 266, "7474": 266, "7476": 266, "7478": 266, "7480": 266, "7482": 266, "7484": 266, "7486": 266, "7488": 266, "7490": 266, "7492": 266, "7494": 266, "7496": 266, "7498": 266, "7500": 266, "7502": 266, "7504": 266, "7506": 266, "7508": 266, "7510": 266, "7512": 266, "7514": 266, "7516": 266, "7518": 266, "7520": 266, "7522": 266, "7524": 266, "7526": 266, "7528": 266, "7530": 266, "7532": 266, "7534": 266, "7536": 266, "7538": 266, "7540": 266, "7542": 266, "7544": 266, "7546": 266, "7548": 266, "7550": 266, "7552": 266, "7554": 266, "7556": 266, "7558": 266, "7560": 266, "7562": 266, "7564": 266, "7566": 266, "7568": 266, "7570": 266, "7572": 266, "7574": 266, "7576": 266, "7578": 266, "7580": 266, "7582": 266, "7584": 266, "7586": 266, "7588": 266, "7590": 266, "7592": 266, "7594": 266, "7596": 266, "7598": 266, "7600": 266, "7602": 266, "7604": 266, "7606": 266, "7608": 266, "7610": 266, "7612": 266, "7614": 266, "7616": 266, "7618": 266, "7620": 266, "7622": 266, "7624": 266, "7626": 266, "7628": 266, "7630": 266, "7632": 266, "7634": 266, "7636": 266, "7638": 266, "7640": 266, "7642": 266, "7644": 266, "7646": 266, "7648": 266, "7650": 266, "7652": 266, "7654": 266, "7656": 266, "7658": 266, "7660": 266, "7662": 266, "7664": 266, "7666": 266, "7668": 266, "7670": 266, "7672": 266, "7674": 266, "7676": 266, "7678": 266, "7680": 266, "7682": 266, "7684": 266, "7686": 266, "7688": 266, "7690": 266, "7692": 266, "7694": 266, "7696": 266, "7698": 266, "7700": 266, "7702": 266, "7704": 266, "7706": 266, "7708": 266, "7710": 266, "7712": 266, "7714": 266, "7716": 266, "7718": 266, "7720": 266, "7722": 266, "7724": 266, "7726": 266, "7728": 266, "7730": 266, "7732": 266, "7734": 266, "7736": 266, "7738": 266, "7740": 266, "7742": 266, "7744": 266, "7746": 266, "7748": 266, "7750": 266, "7752": 266, "7754": 266, "7756": 266, "7758": 266, "7760": 266, "7762": 266, "7764": 266, "7766": 266, "7768": 266, "7770": 266, "7772": 266, "7774": 266, "7776": 266, "7778": 266, "7780": 266, "7782": 266, "7784": 266, "7786": 266, "7788": 266, "7790": 266, "7792": 266, "7794": 266, "7796": 266, "7798": 266, "7800": 266, "7802": 266, "7804": 266, "7806": 266, "7808": 266, "7810": 266, "7812": 266, "7814": 266, "7816": 266, "7818": 266, "7820": 266, "7822": 266, "7824": 266, "7826": 266, "7828": 266, "7830": 266, "7832": 266, "7834": 266, "7836": 266, "7838": 266, "7842": 266, "7844": 266, "7846": 266, "7848": 266, "7850": 266, "7852": 266, "7854": 266, "7856": 266, "7858": 266, "7860": 266, "7862": 266, "7864": 266, "7866": 266, "7868": 266, "7870": 266, "7872": 266, "7874": 266, "7878": 266, "7880": 266, "7882": 266, "7884": 266, "7886": 266, "7888": 266, "7890": 266, "7892": 266, "7894": 266, "7896": 266, "7898": 266, "7900": 266, "7902": 266, "7904": 266, "7906": 266, "7908": 266, "7910": 266, "7912": 266, "7914": 266, "7916": 266, "7918": 266, "7920": 266, "7922": 266, "7924": 266, "7926": 266, "7928": 266, "7930": 266, "7932": 266, "7934": 266, "7936": 266, "7938": 266, "7940": 266, "7942": 266, "7944": 266, "7946": 266, "7948": 266, "7950": 266, "7952": 266, "7954": 266, "7956": 266, "7958": 266, "7960": 266, "7962": 266, "7964": 266, "7966": 266, "7968": 266, "7970": 266, "7972": 266, "7974": 266, "7976": 266, "7978": 266, "7980": 266, "7982": 266, "7984": 266, "7986": 266, "7988": 266, "7990": 266, "7992": 266, "7994": 266, "7996": 266, "7998": 266, "8002": 266, "8004": 266, "8006": 266, "8008": 266, "8012": 266, "8014": 266, "8016": 266, "8018": 266, "8022": 266, "8024": 266, "8026": 266, "8028": 266, "8030": 266, "8032": 266, "8034": 266, "8036": 266, "8038": 266, "8040": 266, "8042": 266, "8044": 266, "8046": 266, "8048": 266, "8050": 266, "8052": 266, "8054": 266, "8056": 266, "8058": 266, "8060": 266, "8062": 266, "8064": 266, "8066": 266, "8068": 266, "8070": 266, "8072": 266, "8074": 266, "8076": 266, "8078": 266, "8080": 266, "8082": 266, "8084": 266, "8086": 266, "8088": 266, "8090": 266, "8092": 266, "8094": 266, "8096": 266, "8098": 266, "8100": 266, "8102": [266, 1084, 1085], "8104": 266, "8106": 266, "8108": 266, "8110": 266, "8112": 266, "8114": 266, "8116": 266, "8118": 266, "8120": 266, "8122": 266, "8124": 266, "8126": 266, "8128": 266, "8130": 266, "8132": 266, "8134": 266, "8136": 266, "8138": 266, "8140": 266, "8142": 266, "8144": 266, "8146": 266, "8148": 266, "8150": 266, "8152": 266, "8154": 266, "8156": 266, "8158": 266, "8160": 266, "8162": 266, "8164": 266, "8166": 266, "8168": 266, "8170": 266, "8172": 266, "8174": 266, "8176": 266, "8178": 266, "8180": 266, "8182": 266, "8184": 266, "8186": 266, "8188": 266, "8190": 266, "8194": 266, "8196": 266, "8198": 266, "8200": 266, "8202": 266, "8204": 266, "8206": 266, "8208": 266, "8210": 266, "8212": 266, "8214": 266, "8216": 266, "8218": 266, "8220": 266, "8222": 266, "8224": 266, "8226": 266, "8228": 266, "8230": 266, "8232": 266, "8234": 266, "8238": 266, "8240": 266, "8242": 266, "8244": 266, "8246": 266, "8248": 266, "8250": 266, "8252": 266, "8254": 266, "8256": 266, "8258": 266, "8260": [266, 984], "8262": 266, "8264": 266, "8266": 266, "8268": 266, "8270": 266, "8272": 266, "8274": 266, "8276": 266, "8278": 266, "8280": 266, "8282": 266, "8284": 266, "8286": 266, "8288": 266, "8290": 266, "8292": 266, "8294": 266, "8296": 266, "8298": 266, "8300": 266, "8302": 266, "8304": 266, "8306": 266, "8308": 266, "8310": 266, "8312": 266, "8316": 266, "8318": 266, "8322": 266, "8324": 266, "8326": 266, "8328": 266, "8330": 266, "8332": 266, "8334": 266, "8336": 266, "8338": 266, "8340": 266, "8342": 266, "8344": 266, "8346": 266, "8348": 266, "8350": 266, "8352": 266, "8354": 266, "8356": 266, "8358": 266, "8360": 266, "8362": 266, "8364": 266, "8366": 266, "8368": 266, "8370": 266, "8372": 266, "8374": 266, "8376": 266, "8378": 266, "8380": 266, "8382": 266, "8384": 266, "8386": 266, "8388": 266, "8390": 266, "8392": 266, "8394": 266, "8396": 266, "8398": 266, "8400": 266, "8402": 266, "8404": 266, "8406": 266, "8408": 266, "8410": 266, "8412": 266, "8414": 266, "8416": 266, "8418": 266, "8420": 266, "8422": 266, "8424": 266, "8426": 266, "8428": 266, "8430": 266, "8432": 266, "8434": 266, "8436": 266, "8438": 266, "8440": 266, "8442": 266, "8444": 266, "8446": 266, "8448": 266, "8450": 266, "8452": 266, "8454": 266, "8456": 266, "8458": 266, "8460": 266, "8464": 266, "8466": 266, "8468": 266, "8470": 266, "8472": 266, "8474": 266, "8476": 266, "8478": 266, "8480": 266, "8482": 266, "8484": 266, "8486": 266, "8488": 266, "8490": 266, "8492": 266, "8494": 266, "8496": 266, "8498": 266, "8500": 266, "8502": 266, "8504": 266, "8506": 266, "8508": 266, "8510": 266, "8512": 266, "8514": 266, "8516": 266, "8518": 266, "8520": 266, "8522": 266, "8524": 266, "8526": 266, "8528": 266, "8530": 266, "8532": 266, "8534": 266, "8536": 266, "8538": 266, "8540": 266, "8542": 266, "8544": 266, "8546": 266, "8548": 266, "8550": 266, "8552": 266, "8554": 266, "8556": 266, "8558": 266, "8560": 266, "8562": 266, "8564": 266, "8566": 266, "8568": 266, "8570": 266, "8572": 266, "8574": 266, "8576": 266, "8578": 266, "8580": 266, "8582": 266, "8584": 266, "8586": 266, "8588": 266, "8590": 266, "8592": 266, "8594": 266, "8596": 266, "8598": 266, "8600": 266, "8602": 266, "8604": 266, "8606": 266, "8608": 266, "8610": 266, "8612": 266, "8614": 266, "8616": 266, "8618": 266, "8620": 266, "8622": 266, "8624": 266, "8626": 266, "8628": 266, "8630": 266, "8632": 266, "8634": 266, "8636": 266, "8638": 266, "8640": 266, "8642": 266, "8644": 266, "8646": 266, "8648": 266, "8650": 266, "8652": 266, "8654": 266, "8656": 266, "8658": 266, "8660": 266, "8662": 266, "8664": 266, "8666": 266, "8668": 266, "8670": 266, "8672": 266, "8676": 266, "8678": 266, "8680": 266, "8682": 266, "8684": 266, "8686": 266, "8688": 266, "8690": 266, "8692": 266, "8694": 266, "8696": 266, "8698": 266, "8700": 266, "8702": 266, "8704": 266, "8706": 266, "8708": 266, "8710": 266, "8712": 266, "8714": 266, "8716": 266, "8718": 266, "8720": 266, "8722": 266, "8724": 266, "8726": 266, "8728": 266, "8730": 266, "8732": 266, "8734": 266, "8736": 266, "8738": 266, "8740": 266, "8742": 266, "8744": 266, "8746": 266, "8748": 266, "8750": 266, "8752": 266, "8754": 266, "8756": 266, "8758": 266, "8760": 266, "8762": 266, "8764": 266, "8766": 266, "8768": 266, "8770": 266, "8772": 266, "8774": 266, "8776": 266, "8778": 266, "8780": 266, "8782": 266, "8784": 266, "8786": 266, "8788": 266, "8790": 266, "8792": 266, "8794": 266, "8796": 266, "8798": 266, "8800": 266, "8802": 266, "8804": 266, "8806": 266, "8808": 266, "8810": 266, "8812": 266, "8814": 266, "8816": 266, "8818": 266, "8820": 266, "8822": 266, "8824": 266, "8826": 266, "8828": 266, "8830": 266, "8832": 266, "8834": 266, "8836": 266, "8838": 266, "8840": 266, "8842": 266, "8844": 266, "8846": 266, "8848": 266, "8850": 266, "8852": 266, "8854": 266, "8856": 266, "8858": 266, "8860": 266, "8862": 266, "8864": 266, "8866": 266, "8868": 266, "8870": 266, "8872": 266, "8874": 266, "8876": 266, "8878": 266, "8880": 266, "8882": 266, "8884": 266, "8886": 266, "8888": 266, "8890": 266, "8892": 266, "8894": 266, "8896": 266, "8898": 266, "8900": 266, "8902": 266, "8904": 266, "8906": 266, "8908": 266, "8910": 266, "8912": 266, "8914": 266, "8916": 266, "8918": 266, "8920": 266, "8922": 266, "8924": 266, "8926": 266, "8928": 266, "8930": 266, "8932": 266, "8934": 266, "8936": 266, "8938": 266, "8940": 266, "8942": 266, "8944": 266, "8946": 266, "8948": 266, "8950": 266, "8952": 266, "8954": 266, "8956": 266, "8958": 266, "8960": 266, "8962": 266, "8964": 266, "8966": 266, "8968": 266, "8970": 266, "8972": 266, "8974": 266, "8976": 266, "8978": 266, "8980": 266, "8982": 266, "8984": 266, "8986": 266, "8988": 266, "8990": 266, "8992": 266, "8994": 266, "8996": 266, "8998": 266, "9002": 266, "9004": 266, "9006": 266, "9008": 266, "9010": 266, "9012": 266, "9014": 266, "9016": 266, "9018": 266, "9020": 266, "9022": 266, "9024": 266, "9026": 266, "9028": 266, "9030": 266, "9032": 266, "9034": 266, "9036": 266, "9038": 266, "9040": 266, "9042": 266, "9044": 266, "9046": 266, "9048": 266, "9050": 266, "9052": 266, "9054": 266, "9056": 266, "9058": 266, "9060": 266, "9062": 266, "9064": 266, "9066": 266, "9068": 266, "9070": 266, "9072": 266, "9074": 266, "9076": 266, "9078": 266, "9080": 266, "9082": 266, "9084": 266, "9086": 266, "9088": 266, "9090": 266, "9092": 266, "9094": 266, "9096": 266, "9098": 266, "9100": 266, "9102": 266, "9104": 266, "9106": 266, "9108": 266, "9110": 266, "9112": 266, "9114": 266, "9116": 266, "9118": 266, "9120": 266, "9122": 266, "9124": 266, "9126": 266, "9128": 266, "9130": 266, "9132": 266, "9134": 266, "9136": 266, "9138": 266, "9140": 266, "9142": 266, "9144": 266, "9146": 266, "9148": 266, "9150": 266, "9152": 266, "9154": 266, "9156": 266, "9158": 266, "9160": 266, "9162": 266, "9164": 266, "9166": 266, "9168": 266, "9170": 266, "9172": 266, "9174": 266, "9176": 266, "9178": 266, "9180": 266, "9182": 266, "9184": 266, "9186": 266, "9188": 266, "9190": 266, "9192": 266, "9194": 266, "9196": 266, "9198": 266, "9200": 266, "9202": 266, "9204": 266, "9206": 266, "9208": 266, "9210": 266, "9212": 266, "9214": 266, "9216": 266, "9218": 266, "9220": 266, "9222": 266, "9224": 266, "9226": 266, "9228": 266, "9230": 266, "9232": 266, "9234": 266, "9236": 266, "9238": 266, "9240": 266, "9242": 266, "9244": 266, "9246": 266, "9248": 266, "9250": 266, "9252": 266, "9254": 266, "9256": 266, "9258": 266, "9260": 266, "9262": 266, "9264": 266, "9266": 266, "9268": 266, "9270": 266, "9272": 266, "9274": 266, "9276": 266, "9278": 266, "9280": 266, "9282": 266, "9284": 266, "9286": 266, "9288": 266, "9290": 266, "9292": 266, "9294": 266, "9296": 266, "9298": 266, "9300": 266, "9302": 266, "9304": 266, "9306": 266, "9308": 266, "9310": 266, "9312": 266, "9314": 266, "9316": 266, "9318": 266, "9320": 266, "9322": 266, "9324": 266, "9326": 266, "9328": 266, "9330": 266, "9332": 266, "9334": 266, "9336": 266, "9338": 266, "9340": 266, "9342": 266, "9344": 266, "9346": 266, "9348": 266, "9350": 266, "9352": 266, "9354": 266, "9356": 266, "9358": 266, "9360": 266, "9362": 266, "9364": 266, "9366": 266, "9368": 266, "9370": 266, "9372": 266, "9374": 266, "9376": 266, "9378": 266, "9380": 266, "9382": 266, "9384": 266, "9386": 266, "9388": 266, "9390": 266, "9392": 266, "9394": [266, 891], "9396": 266, "9398": 266, "9400": 266, "9402": 266, "9404": 266, "9406": 266, "9408": 266, "9410": 266, "9412": 266, "9414": 266, "9416": 266, "9418": 266, "9420": 266, "9422": 266, "9424": 266, "9426": 266, "9428": 266, "9430": 266, "9432": 266, "9434": 266, "9436": 266, "9438": 266, "9440": 266, "9442": 266, "9444": 266, "9446": 266, "9448": 266, "9450": 266, "9452": 266, "9454": 266, "9456": 266, "9458": 266, "9460": 266, "9462": 266, "9464": 266, "9466": 266, "9468": 266, "9470": 266, "9472": 266, "9474": 266, "9476": 266, "9478": 266, "9480": 266, "9482": 266, "9484": 266, "9486": 266, "9488": 266, "9490": 266, "9492": 266, "9494": 266, "9496": 266, "9498": 266, "9500": 266, "9502": 266, "9504": 266, "9506": 266, "9508": 266, "9510": 266, "9512": 266, "9514": 266, "9516": 266, "9518": 266, "9520": 266, "9522": 266, "9524": 266, "9526": 266, "9528": 266, "9530": 266, "9532": 266, "9534": 266, "9536": 266, "9538": 266, "9540": 266, "9542": 266, "9544": 266, "9546": 266, "9548": 266, "9550": 266, "9552": 266, "9554": 266, "9556": 266, "9558": 266, "9560": 266, "9562": 266, "9564": 266, "9566": 266, "9568": 266, "9570": 266, "9572": 266, "9574": 266, "9576": 266, "9578": 266, "9580": 266, "9582": 266, "9584": 266, "9586": 266, "9588": 266, "9590": 266, "9592": 266, "9594": 266, "9596": 266, "9598": 266, "9600": 266, "9602": 266, "9604": 266, "9606": 266, "9608": 266, "9610": 266, "9612": 266, "9614": 266, "9616": 266, "9618": 266, "9620": 266, "9622": 266, "9624": 266, "9626": 266, "9628": 266, "9630": 266, "9632": 266, "9634": 266, "9636": 266, "9638": 266, "9640": 266, "9642": 266, "9644": 266, "9646": 266, "9648": 266, "9650": 266, "9652": 266, "9654": 266, "9656": 266, "9658": 266, "9662": 266, "9664": 266, "9666": 266, "9668": 266, "9670": 266, "9672": 266, "9674": 266, "9676": 266, "9678": 266, "9680": 266, "9682": 266, "9684": 266, "9686": 266, "9688": 266, "9690": 266, "9692": 266, "9694": 266, "9696": 266, "9698": 266, "9700": 266, "9702": 266, "9704": 266, "9706": 266, "9708": 266, "9710": 266, "9712": 266, "9714": 266, "9716": 266, "9718": 266, "9720": 266, "9722": 266, "9724": 266, "9726": 266, "9728": 266, "9730": 266, "9732": 266, "9734": 266, "9736": 266, "9738": 266, "9740": 266, "9742": 266, "9744": 266, "9746": 266, "9748": 266, "9750": 266, "9752": 266, "9754": 266, "9756": 266, "9758": 266, "9760": 266, "9762": 266, "9764": 266, "9766": 266, "9768": [266, 276], "9770": 266, "9772": 266, "9774": 266, "9776": 266, "9778": 266, "9780": 266, "9782": 266, "9784": 266, "9786": 266, "9788": 266, "9790": 266, "9792": 266, "9794": 266, "9796": 266, "9798": 266, "9800": 266, "9802": 266, "9804": 266, "9806": 266, "9808": 266, "9810": 266, "9812": 266, "9814": 266, "9816": 266, "9818": 266, "9820": 266, "9822": 266, "9824": 266, "9826": 266, "9828": 266, "9830": 266, "9832": 266, "9834": 266, "9836": 266, "9838": 266, "9840": 266, "9842": 266, "9844": 266, "9846": 266, "9848": 266, "9850": 266, "9852": 266, "9854": 266, "9856": 266, "9858": 266, "9860": 266, "9862": 266, "9864": 266, "9866": 266, "9868": 266, "9870": 266, "9872": 266, "9874": 266, "9876": 266, "9878": 266, "9880": 266, "9882": 266, "9884": 266, "9886": 266, "9888": 266, "9890": 266, "9892": 266, "9894": 266, "9896": 266, "9898": 266, "9900": 266, "9902": 266, "9904": 266, "9906": 266, "9908": 266, "9910": 266, "9912": 266, "9914": 266, "9916": 266, "9918": 266, "9920": 266, "9922": 266, "9924": 266, "9926": 266, "9928": 266, "9930": 266, "9932": 266, "9934": 266, "9936": 266, "9938": 266, "9940": 266, "9942": 266, "9944": 266, "9946": 266, "9948": 266, "9950": 266, "9952": 266, "9954": 266, "9956": 266, "9958": 266, "9960": 266, "9962": 266, "9964": 266, "9966": 266, "9968": 266, "9970": 266, "9972": 266, "9974": 266, "9978": 266, "9980": 266, "9982": 266, "9984": 266, "9986": 266, "9988": 266, "9990": 266, "9992": 266, "9994": 266, "9996": 266, "9998": 266, "10002": 266, "10004": 266, "10006": 266, "10008": 266, "10010": 266, "10012": 266, "10014": 266, "10016": 266, "10018": 266, "10020": 266, "10022": 266, "10024": 266, "10026": 266, "10028": 266, "10030": 266, "10032": 266, "10034": 266, "10036": 266, "10038": 266, "10040": 266, "10042": 266, "10044": 266, "10046": 266, "10048": 266, "10050": 266, "10052": 266, "10054": 266, "10056": 266, "10058": 266, "10060": 266, "10062": 266, "10064": 266, "10066": 266, "10068": 266, "10070": 266, "10072": 266, "10074": 266, "10076": 266, "10078": 266, "10080": 266, "10082": 266, "10084": 266, "10086": 266, "10088": 266, "10090": 266, "10092": 266, "10094": 266, "10096": 266, "10098": 266, "10100": 266, "10102": 266, "10104": 266, "10106": 266, "10108": 266, "10110": 266, "10112": 266, "10114": 266, "10116": 266, "10118": 266, "10120": 266, "10122": 266, "10124": 266, "10126": 266, "10128": 266, "10130": 266, "10132": 266, "10134": 266, "10136": 266, "10138": 266, "10140": 266, "10142": 266, "10144": 266, "10146": 266, "10148": 266, "10150": 266, "10152": 266, "10154": 266, "10156": 266, "10158": 266, "10160": 266, "10162": 266, "10164": 266, "10166": 266, "10168": 266, "10170": 266, "10172": 266, "10174": 266, "10176": 266, "10178": 266, "10180": 266, "10182": 266, "10184": 266, "10186": 266, "10188": 266, "10190": 266, "10192": 266, "10194": 266, "10196": 266, "10198": 266, "10200": 266, "10202": 266, "10204": 266, "10206": 266, "10208": 266, "10210": 266, "10212": 266, "10214": 266, "10216": 266, "10218": 266, "10220": 266, "10222": 266, "10226": [266, 315], "10228": 266, "10230": 266, "10232": 266, "10234": 266, "10236": 266, "10238": 266, "10240": 266, "10242": 266, "10244": 266, "10246": 266, "10248": 266, "10250": 266, "10252": 266, "10254": 266, "10256": 266, "10258": 266, "10260": 266, "10262": 266, "10264": 266, "10266": 266, "10268": 266, "10270": 266, "10272": 266, "10274": 266, "10276": 266, "10278": 266, "10280": 266, "10282": 266, "10284": 266, "10286": 266, "10288": 266, "10290": 266, "10292": 266, "10294": 266, "10296": 266, "10298": 266, "10300": 266, "10302": 266, "10304": 266, "10306": 266, "10308": 266, "10310": 266, "10312": 266, "10314": 266, "10316": 266, "10318": 266, "10320": 266, "10322": 266, "10324": 266, "10326": 266, "10328": 266, "10330": 266, "10332": 266, "10334": 266, "10336": 266, "10338": 266, "10340": 266, "10342": 266, "10344": 266, "10346": 266, "10348": 266, "10350": 266, "10352": 266, "10354": 266, "10356": 266, "10358": 266, "10360": 266, "10362": 266, "10364": 266, "10366": 266, "10368": 266, "10370": 266, "10372": 266, "10374": 266, "10376": 266, "10378": 266, "10380": 266, "10382": 266, "10384": 266, "10386": 266, "10388": 266, "10390": 266, "10392": 266, "10394": 266, "10396": 266, "10398": 266, "10400": 266, "10402": 266, "10404": 266, "10406": 266, "10408": 266, "10410": 266, "10412": 266, "10414": 266, "10416": 266, "10418": 266, "10420": 266, "10422": 266, "10424": 266, "10426": 266, "10428": 266, "10430": 266, "10432": 266, "10434": 266, "10436": 266, "10438": 266, "10440": 266, "10442": 266, "10444": 266, "10446": 266, "10448": 266, "10450": 266, "10452": 266, "10454": 266, "10456": 266, "10458": 266, "10460": 266, "10462": 266, "10464": 266, "10466": 266, "10468": 266, "10470": 266, "10472": 266, "10474": 266, "10476": 266, "10478": 266, "10480": 266, "10482": 266, "10484": 266, "10486": 266, "10488": 266, "10490": 266, "10492": 266, "10494": 266, "10496": 266, "10498": 266, "10500": 266, "10502": 266, "10504": 266, "10506": 266, "10508": 266, "10510": 266, "10512": 266, "10514": 266, "10516": 266, "10518": 266, "10520": 266, "10522": 266, "10524": 266, "10526": 266, "10528": 266, "10530": 266, "10532": 266, "10534": 266, "10536": 266, "10538": 266, "10540": 266, "10542": 266, "10544": 266, "10546": 266, "10548": 266, "10550": 266, "10552": [266, 1096], "10554": 266, "10556": 266, "10558": 266, "10560": 266, "10562": 266, "10564": 266, "10566": 266, "10568": 266, "10570": 266, "10572": 266, "10574": 266, "10576": 266, "10578": 266, "10580": 266, "10582": 266, "10584": 266, "10586": 266, "10588": 266, "10590": 266, "10592": 266, "10594": 266, "10596": 266, "10598": 266, "10600": 266, "10602": 266, "10604": 266, "10606": 266, "10608": 266, "10610": 266, "10612": 266, "10614": 266, "10616": 266, "10618": 266, "10620": 266, "10622": 266, "10624": 266, "10626": 266, "10628": 266, "10630": 266, "10632": 266, "10634": 266, "10636": 266, "10638": 266, "10640": 266, "10642": 266, "10644": 266, "10646": 266, "10648": 266, "10650": 266, "10652": 266, "10654": 266, "10656": 266, "10658": 266, "10660": 266, "10662": 266, "10664": 266, "10666": 266, "10668": 266, "10670": 266, "10672": 266, "10674": 266, "10676": 266, "10678": 266, "10680": 266, "10682": 266, "10684": 266, "10686": 266, "10688": 266, "10690": 266, "10692": 266, "10694": 266, "10696": 266, "10698": 266, "10700": 266, "10702": 266, "10704": 266, "10706": 266, "10708": 266, "10710": 266, "10712": 266, "10714": 266, "10716": 266, "10718": 266, "10720": 266, "10722": 266, "10724": 266, "10726": 266, "10728": 266, "10730": 266, "10732": 266, "10734": 266, "10736": 266, "10738": 266, "10740": 266, "10742": 266, "10744": 266, "10746": 266, "10748": 266, "10750": 266, "10752": 266, "10754": 266, "10756": 266, "10758": 266, "10760": 266, "10762": 266, "10764": 266, "10766": 266, "10768": 266, "10770": 266, "10772": 266, "10774": 266, "10776": 266, "10778": 266, "10780": 266, "10782": 266, "10784": 266, "10786": 266, "10788": 266, "10790": 266, "10792": 266, "10794": 266, "10796": 266, "10798": 266, "10800": 266, "10802": 266, "10804": 266, "10806": 266, "10808": 266, "10810": 266, "10812": 266, "10814": 266, "10816": 266, "10818": 266, "10820": 266, "10822": 266, "10824": 266, "10826": 266, "10828": 266, "10830": 266, "10832": 266, "10834": 266, "10836": 266, "10838": 266, "10840": 266, "10842": 266, "10844": 266, "10846": 266, "10848": 266, "10850": 266, "10852": 266, "10854": 266, "10856": 266, "10858": 266, "10860": 266, "10862": 266, "10864": 266, "10866": 266, "10868": 266, "10870": 266, "10872": 266, "10874": 266, "10876": 266, "10878": 266, "10880": 266, "10882": 266, "10884": 266, "10886": 266, "10888": 266, "10890": 266, "10892": 266, "10894": 266, "10896": 266, "10898": 266, "10900": 266, "10902": 266, "10904": 266, "10906": 266, "10908": 266, "10910": 266, "10912": 266, "10914": 266, "10916": 266, "10918": 266, "10920": 266, "10922": 266, "10924": 266, "10926": 266, "10928": 266, "10930": 266, "10932": 266, "10934": 266, "10936": 266, "10938": 266, "10940": 266, "10942": 266, "10944": 266, "10946": 266, "10948": 266, "10950": 266, "10952": 266, "10954": 266, "10956": 266, "10958": 266, "10960": 266, "10962": 266, "10964": 266, "10966": 266, "10968": 266, "10970": 266, "10972": 266, "10974": 266, "10976": 266, "10978": 266, "10980": 266, "10982": 266, "10984": 266, "10986": 266, "10988": 266, "10990": 266, "10992": 266, "10994": 266, "10996": 266, "10998": 266, "11000": 266, "11002": 266, "11004": 266, "11006": 266, "11008": 266, "11010": 266, "11012": 266, "11014": 266, "11016": 266, "11018": 266, "11020": 266, "11022": 266, "11024": 266, "11026": 266, "11028": 266, "11030": 266, "11032": 266, "11034": 266, "11036": 266, "11038": 266, "11040": 266, "11042": 266, "11044": 266, "11046": 266, "11048": 266, "11050": 266, "11052": 266, "11054": 266, "11056": 266, "11058": 266, "11060": 266, "11062": 266, "11064": 266, "11066": 266, "11068": 266, "11070": 266, "11072": 266, "11074": 266, "11076": 266, "11078": 266, "11080": 266, "11082": 266, "11084": 266, "11086": 266, "11088": 266, "11090": 266, "11092": 266, "11094": 266, "11096": 266, "11098": 266, "11100": 266, "11102": 266, "11104": 266, "11106": 266, "11108": 266, "11110": 266, "11112": 266, "11114": 266, "11116": 266, "11118": 266, "11120": 266, "11122": 266, "11124": 266, "11126": 266, "11128": 266, "11130": 266, "11132": 266, "11134": 266, "11136": 266, "11138": 266, "11140": 266, "11142": 266, "11144": 266, "11146": 266, "11148": 266, "11150": 266, "11152": 266, "11154": 266, "11156": 266, "11158": 266, "11160": 266, "11162": 266, "11164": 266, "11166": 266, "11168": 266, "11170": 266, "11172": 266, "11174": 266, "11176": 266, "11178": 266, "11180": 266, "11182": 266, "11184": 266, "11186": 266, "11188": 266, "11190": 266, "11192": 266, "11194": 266, "11196": 266, "11198": 266, "11200": 266, "11202": 266, "11204": 266, "11206": 266, "11208": 266, "11210": 266, "11212": 266, "11214": 266, "11216": 266, "11218": 266, "11220": 266, "11222": 266, "11224": 266, "11226": 266, "11228": 266, "11230": 266, "11232": 266, "11234": 266, "11236": 266, "11238": 266, "11240": 266, "11242": 266, "11244": 266, "11246": 266, "11248": 266, "11250": 266, "11252": 266, "11254": 266, "11256": 266, "11258": 266, "11260": 266, "11262": 266, "11264": 266, "11266": 266, "11268": 266, "11270": 266, "11272": 266, "11274": 266, "11276": 266, "11278": 266, "11280": 266, "11282": 266, "11284": 266, "11286": 266, "11288": 266, "11290": 266, "11292": 266, "11294": 266, "11296": 266, "11298": 266, "11300": 266, "11302": 266, "11304": 266, "11306": 266, "11308": 266, "11310": 266, "11312": 266, "11314": 266, "11316": 266, "11318": 266, "11320": 266, "11322": 266, "11324": 266, "11326": 266, "11328": 266, "11330": 266, "11332": 266, "11334": 266, "11336": 266, "11340": 266, "11342": 266, "11344": 266, "11346": 266, "11348": [266, 315], "11350": 266, "11352": 266, "11354": 266, "11356": 266, "11358": 266, "11360": 266, "11362": 266, "11364": 266, "11366": 266, "11368": 266, "11370": 266, "11372": 266, "11374": 266, "11376": 266, "11378": 266, "11380": 266, "11382": 266, "11384": 266, "11386": 266, "11388": 266, "11390": 266, "11392": 266, "11394": 266, "11396": 266, "11398": 266, "11400": 266, "11402": 266, "11404": 266, "11406": 266, "11408": 266, "11410": 266, "11412": 266, "11414": 266, "11416": 266, "11418": 266, "11420": 266, "11422": 266, "11424": 266, "11426": 266, "11428": 266, "11430": 266, "11432": 266, "11434": 266, "11436": 266, "11438": 266, "11440": 266, "11442": 266, "11444": 266, "11446": 266, "11448": 266, "11450": 266, "11452": 266, "11454": 266, "11456": 266, "11458": 266, "11460": 266, "11462": 266, "11464": 266, "11466": 266, "11468": 266, "11470": 266, "11472": 266, "11474": 266, "11476": 266, "11478": 266, "11480": 266, "11482": 266, "11484": 266, "11486": 266, "11488": 266, "11490": 266, "11492": 266, "11494": 266, "11496": 266, "11498": 266, "11500": 266, "11502": 266, "11504": 266, "11506": 266, "11508": 266, "11510": 266, "11512": 266, "11514": 266, "11516": 266, "11518": 266, "11520": 266, "11522": 266, "11524": 266, "11526": 266, "11528": 266, "11530": 266, "11532": 266, "11534": 266, "11536": 266, "11538": 266, "11540": 266, "11542": 266, "11544": 266, "11546": 266, "11548": 266, "11550": 266, "11552": 266, "11554": 266, "11556": 266, "11558": 266, "11560": 266, "11562": 266, "11564": 266, "11566": 266, "11568": 266, "11570": 266, "11572": 266, "11574": 266, "11576": 266, "11578": 266, "11580": 266, "11582": 266, "11584": 266, "11586": 266, "11588": 266, "11590": 266, "11592": 266, "11594": 266, "11596": 266, "11598": 266, "11600": 266, "11602": 266, "11604": 266, "11606": 266, "11608": 266, "11610": 266, "11612": 266, "11614": 266, "11616": 266, "11618": 266, "11620": 266, "11622": 266, "11624": 266, "11626": 266, "11628": 266, "11630": 266, "11634": 266, "11636": 266, "11638": 266, "11640": 266, "11642": 266, "11644": 266, "11646": 266, "11648": 266, "11650": 266, "11652": 266, "11654": 266, "11656": 266, "11658": 266, "11660": 266, "11662": 266, "11664": 266, "11666": 266, "11668": 266, "11670": 266, "11672": 266, "11674": 266, "11676": 266, "11678": 266, "11680": 266, "11682": 266, "11684": 266, "11686": 266, "11688": 266, "11690": 266, "11692": 266, "11694": 266, "11696": 266, "11698": 266, "11700": 266, "11702": 266, "11704": 266, "11706": 266, "11708": 266, "11710": 266, "11712": 266, "11714": 266, "11716": 266, "11718": 266, "11720": 266, "11722": 266, "11724": 266, "11726": 266, "11728": 266, "11730": 266, "11732": 266, "11734": 266, "11736": 266, "11738": 266, "11740": 266, "11742": 266, "11744": 266, "11746": 266, "11748": 266, "11750": 266, "11752": 266, "11754": 266, "11756": 266, "11758": 266, "11760": 266, "11762": 266, "11764": 266, "11766": 266, "11768": 266, "11770": 266, "11772": 266, "11774": 266, "11776": 266, "11778": 266, "11780": 266, "11782": 266, "11784": 266, "11786": 266, "11788": 266, "11790": 266, "11792": 266, "11794": 266, "11796": 266, "11798": 266, "11800": 266, "11802": 266, "11804": 266, "11806": 266, "11808": 266, "11810": 266, "11812": 266, "11814": 266, "11816": 266, "11818": 266, "11820": 266, "11822": 266, "11824": 266, "11826": 266, "11828": 266, "11830": 266, "11832": 266, "11834": 266, "11836": 266, "11838": 266, "11840": 266, "11842": 266, "11844": 266, "11846": 266, "11848": 266, "11850": 266, "11852": 266, "11854": 266, "11856": 266, "11858": 266, "11860": 266, "11862": 266, "11864": 266, "11866": 266, "11868": 266, "11870": 266, "11872": 266, "11874": 266, "11876": 266, "11878": 266, "11880": 266, "11882": 266, "11884": 266, "11886": 266, "11888": 266, "11890": 266, "11892": 266, "11894": 266, "11896": 266, "11898": 266, "11900": 266, "11902": 266, "11904": 266, "11906": 266, "11908": 266, "11910": 266, "11912": 266, "11914": 266, "11916": 266, "11918": 266, "11920": 266, "11922": 266, "11924": 266, "11926": 266, "11928": 266, "11930": 266, "11932": 266, "11934": 266, "11936": 266, "11938": 266, "11940": 266, "11942": 266, "11944": 266, "11946": 266, "11948": 266, "11950": 266, "11952": 266, "11954": 266, "11956": 266, "11958": 266, "11960": 266, "11962": 266, "11964": 266, "11966": 266, "11968": 266, "11970": 266, "11972": 266, "11974": 266, "11976": 266, "11978": 266, "11980": 266, "11982": 266, "11984": 266, "11986": 266, "11988": 266, "11990": 266, "11992": 266, "11994": 266, "11996": 266, "11998": 266, "12000": 266, "12002": 266, "12004": 266, "12006": 266, "12008": 266, "12010": 266, "12012": 266, "12014": 266, "12016": 266, "12018": 266, "12020": 266, "12022": 266, "12024": 266, "12026": 266, "12028": 266, "12030": 266, "12032": 266, "12034": 266, "12036": 266, "12038": 266, "12040": 266, "12042": 266, "12044": 266, "12046": 266, "12048": 266, "12050": 266, "12052": 266, "12054": 266, "12056": 266, "12058": 266, "12060": 266, "12062": 266, "12064": 266, "12066": 266, "12068": 266, "12070": 266, "12072": 266, "12074": 266, "12076": 266, "12078": 266, "12080": 266, "12082": 266, "12084": 266, "12086": 266, "12088": 266, "12090": 266, "12092": 266, "12094": 266, "12096": 266, "12098": 266, "12100": 266, "12102": 266, "12104": 266, "12106": 266, "12108": 266, "12110": 266, "12112": 266, "12114": 266, "12116": 266, "12118": 266, "12120": 266, "12122": 266, "12124": 266, "12126": 266, "12128": 266, "12130": 266, "12132": 266, "12134": 266, "12136": 266, "12138": 266, "12140": 266, "12142": 266, "12144": 266, "12146": 266, "12148": 266, "12150": 266, "12152": 266, "12154": 266, "12158": 266, "12160": 266, "12162": 266, "12164": 266, "12166": 266, "12168": 266, "12170": 266, "12172": 266, "12174": 266, "12176": 266, "12178": 266, "12180": 266, "12182": 266, "12184": 266, "12186": 266, "12188": 266, "12190": 266, "12192": 266, "12194": 266, "12196": 266, "12198": 266, "12200": 266, "12202": 266, "12204": 266, "12206": 266, "12208": 266, "12210": 266, "12212": 266, "12214": 266, "12216": 266, "12218": 266, "12220": 266, "12222": 266, "12224": 266, "12226": 266, "12228": 266, "12230": 266, "12232": 266, "12234": 266, "12236": 266, "12238": 266, "12240": 266, "12242": 266, "12244": 266, "12246": 266, "12248": 266, "12250": 266, "12252": 266, "12254": 266, "12256": 266, "12258": 266, "12260": 266, "12262": 266, "12264": 266, "12266": 266, "12268": 266, "12270": 266, "12272": 266, "12274": 266, "12276": 266, "12278": 266, "12280": 266, "12282": 266, "12284": 266, "12286": 266, "12288": 266, "12290": 266, "12292": 266, "12294": 266, "12296": 266, "12298": 266, "12300": 266, "12302": 266, "12304": 266, "12306": 266, "12308": 266, "12310": 266, "12312": 266, "12314": 266, "12316": 266, "12318": 266, "12320": 266, "12322": 266, "12324": 266, "12326": 266, "12328": 266, "12330": 266, "12332": 266, "12334": 266, "12336": 266, "12338": 266, "12340": 266, "12342": 266, "12344": 266, "12346": 266, "12348": 266, "12350": 266, "12352": 266, "12354": 266, "12356": 266, "12358": 266, "12360": 266, "12362": 266, "12364": 266, "12366": 266, "12368": 266, "12370": 266, "12372": 266, "12374": 266, "12376": 266, "12378": 266, "12380": 266, "12382": 266, "12384": 266, "12386": 266, "12388": 266, "12390": 266, "12392": 266, "12394": 266, "12396": 266, "12398": 266, "12400": 266, "12402": 266, "12404": 266, "12406": 266, "12408": 266, "12410": 266, "12412": 266, "12414": 266, "12416": 266, "12418": 266, "12420": 266, "12422": 266, "12424": 266, "12426": 266, "12428": 266, "12430": 266, "12432": 266, "12434": 266, "12436": 266, "12438": 266, "12440": 266, "12442": 266, "12444": 266, "12446": 266, "12448": 266, "12450": 266, "12452": 266, "12454": 266, "12456": 266, "12458": 266, "12460": 266, "12462": 266, "12464": 266, "12466": 266, "12468": 266, "12470": 266, "12472": 266, "12474": 266, "12476": 266, "12478": 266, "12480": 266, "12482": 266, "12484": 266, "12486": 266, "12488": 266, "12490": 266, "12492": 266, "12494": 266, "12496": 266, "12498": 266, "12500": 266, "12502": 266, "12504": 266, "12506": 266, "12508": 266, "12510": 266, "12512": 266, "12514": 266, "12516": 266, "12518": 266, "12520": 266, "12522": 266, "12524": 266, "12526": 266, "12528": 266, "12530": 266, "12532": 266, "12534": 266, "12536": 266, "12538": 266, "12540": 266, "12542": 266, "12544": 266, "12546": 266, "12548": 266, "12550": 266, "12552": 266, "12554": 266, "12556": 266, "12558": 266, "12560": 266, "12562": 266, "12564": 266, "12566": 266, "12568": 266, "12570": 266, "12572": 266, "12574": 266, "12576": 266, "12578": 266, "12580": 266, "12582": 266, "12584": 266, "12586": 266, "12588": 266, "12590": 266, "12592": 266, "12594": 266, "12596": 266, "12598": 266, "12600": 266, "12602": 266, "12604": 266, "12606": 266, "12608": 266, "12610": 266, "12612": 266, "12614": 266, "12616": 266, "12618": 266, "12620": 266, "12622": 266, "12624": 266, "12626": 266, "12628": 266, "12630": 266, "12632": 266, "12634": 266, "12636": 266, "12638": 266, "12640": 266, "12642": 266, "12644": 266, "12646": 266, "12648": 266, "12650": 266, "12652": 266, "12654": 266, "12656": 266, "12658": 266, "12660": 266, "12662": 266, "12664": 266, "12666": 266, "12668": 266, "12670": 266, "12672": 266, "12674": 266, "12676": 266, "12678": 266, "12680": 266, "12682": 266, "12684": 266, "12686": 266, "12688": 266, "12690": 266, "12692": 266, "12694": 266, "12696": 266, "12698": 266, "12700": 266, "12702": 266, "12704": 266, "12706": 266, "12708": 266, "12710": 266, "12712": 266, "12714": 266, "12716": 266, "12718": 266, "12720": 266, "12722": 266, "12724": 266, "12726": 266, "12728": 266, "12730": 266, "12732": 266, "12734": 266, "12736": 266, "12738": 266, "12740": 266, "12742": 266, "12744": 266, "12746": 266, "12748": 266, "12750": 266, "12752": 266, "12754": 266, "12756": 266, "12758": 266, "12760": 266, "12762": 266, "12764": 266, "12766": 266, "12768": 266, "12770": 266, "12772": 266, "12774": 266, "12776": 266, "12778": 266, "12780": 266, "12782": 266, "12784": 266, "12786": 266, "12788": 266, "12790": 266, "12792": 266, "12794": 266, "12796": 266, "12798": 266, "12800": 266, "12802": 266, "12804": 266, "12806": 266, "12808": 266, "12810": 266, "12812": 266, "12814": 266, "12816": 266, "12818": 266, "12820": 266, "12822": 266, "12824": 266, "12826": 266, "12828": 266, "12830": 266, "12832": 266, "12834": 266, "12836": 266, "12838": 266, "12840": 266, "12842": 266, "12844": 266, "12846": 266, "12848": 266, "12850": 266, "12852": 266, "12854": 266, "12856": 266, "12858": 266, "12860": 266, "12862": 266, "12864": 266, "12866": 266, "12868": 266, "12870": 266, "12872": 266, "12874": 266, "12876": 266, "12878": 266, "12880": 266, "12882": 266, "12884": 266, "12886": 266, "12888": 266, "12890": 266, "12892": 266, "12894": 266, "12896": 266, "12898": 266, "12900": 266, "12902": 266, "12904": 266, "12906": 266, "12908": 266, "12910": 266, "12912": 266, "12914": 266, "12916": 266, "12918": 266, "12920": 266, "12922": 266, "12924": 266, "12926": 266, "12928": 266, "12930": 266, "12932": 266, "12934": 266, "12936": 266, "12938": 266, "12940": 266, "12942": 266, "12944": 266, "12946": 266, "12948": 266, "12950": 266, "12952": 266, "12954": 266, "12956": 266, "12958": 266, "12960": 266, "12962": 266, "12964": 266, "12966": 266, "12968": 266, "12970": 266, "12972": 266, "12974": 266, "12976": 266, "12978": 266, "12980": 266, "12982": 266, "12984": 266, "12986": 266, "12988": 266, "12990": 266, "12992": 266, "12994": 266, "12996": 266, "12998": 266, "13000": 266, "13002": 266, "13004": 266, "13006": 266, "13008": 266, "13010": 266, "13012": 266, "13014": 266, "13016": 266, "13018": 266, "13020": 266, "13022": 266, "13024": 266, "13026": 266, "13028": 266, "13030": 266, "13032": 266, "13034": 266, "13036": 266, "13038": 266, "13040": 266, "13042": 266, "13044": 266, "13046": 266, "13048": 266, "13050": 266, "13052": 266, "13054": 266, "13056": 266, "13058": 266, "13060": 266, "13062": 266, "13064": 266, "13066": 266, "13068": 266, "13070": 266, "13072": 266, "13074": 266, "13076": 266, "13078": 266, "13080": 266, "13082": 266, "13084": 266, "13086": 266, "13088": 266, "13090": 266, "13092": 266, "13094": 266, "13096": 266, "13098": 266, "13100": 266, "13102": 266, "13104": 266, "13106": 266, "13108": 266, "13110": 266, "13112": 266, "13114": 266, "13116": 266, "13118": 266, "13120": 266, "13122": 266, "13124": 266, "13126": 266, "13128": 266, "13130": 266, "13132": 266, "13134": 266, "13136": 266, "13138": 266, "13140": 266, "13142": 266, "13144": 266, "13146": 266, "13148": 266, "13150": 266, "13152": 266, "13154": 266, "13156": 266, "13158": 266, "13160": 266, "13162": 266, "13164": 266, "13166": 266, "13168": 266, "13170": 266, "13172": 266, "13174": 266, "13176": 266, "13178": 266, "13180": 266, "13182": 266, "13184": 266, "13186": 266, "13188": 266, "13190": 266, "13192": 266, "13194": 266, "13196": 266, "13198": 266, "13200": 266, "13202": 266, "13204": 266, "13206": 266, "13208": 266, "13210": 266, "13212": 266, "13214": 266, "13216": 266, "13218": 266, "13220": 266, "13222": 266, "13224": 266, "13226": 266, "13228": 266, "13230": 266, "13232": 266, "13234": 266, "13236": 266, "13238": 266, "13240": 266, "13242": 266, "13244": 266, "13246": 266, "13248": 266, "13250": 266, "13252": 266, "13254": 266, "13256": 266, "13258": 266, "13260": 266, "13262": 266, "13264": 266, "13266": 266, "13268": 266, "13270": 266, "13272": 266, "13274": 266, "13276": 266, "13278": 266, "13280": 266, "13282": 266, "13284": 266, "13286": 266, "13288": 266, "13290": 266, "13292": 266, "13294": 266, "13296": 266, "13298": 266, "13300": 266, "13302": 266, "13304": 266, "13306": 266, "13308": 266, "13310": 266, "13312": 266, "13314": 266, "13316": 266, "13318": 266, "13320": 266, "13322": 266, "13324": 266, "13326": 266, "13328": 266, "13330": 266, "13332": 266, "13334": 266, "13336": 266, "13338": 266, "13340": 266, "13342": 266, "13344": 266, "13346": 266, "13348": 266, "13350": 266, "13352": 266, "13354": 266, "13356": 266, "13358": 266, "13360": 266, "13362": 266, "13364": 266, "13366": 266, "13368": 266, "13370": 266, "13372": 266, "13374": 266, "13376": 266, "13378": 266, "13380": 266, "13382": 266, "13384": 266, "13386": 266, "13388": 266, "13390": 266, "13392": 266, "13394": 266, "13396": 266, "13398": 266, "13400": 266, "13402": 266, "13404": 266, "13406": 266, "13408": 266, "13410": 266, "13412": 266, "13414": 266, "13416": 266, "13418": 266, "13420": 266, "13422": 266, "13424": 266, "13426": 266, "13428": 266, "13430": 266, "13432": 266, "13434": 266, "13436": 266, "13438": 266, "13440": 266, "13442": 266, "13444": 266, "13446": 266, "13448": 266, "13450": 266, "13452": 266, "13454": 266, "13456": 266, "13458": 266, "13460": 266, "13462": 266, "13464": 266, "13466": 266, "13468": 266, "13470": 266, "13472": 266, "13474": 266, "13476": 266, "13478": 266, "13480": 266, "13482": 266, "13484": 266, "13486": 266, "13488": 266, "13490": 266, "13492": 266, "13494": 266, "13496": 266, "13498": 266, "13502": 266, "13504": 266, "13506": 266, "13508": 266, "13510": 266, "13512": 266, "13514": 266, "13516": 266, "13518": 266, "13520": 266, "13522": 266, "13524": 266, "13526": 266, "13528": 266, "13530": 266, "13532": 266, "13534": 266, "13536": 266, "13538": 266, "13540": 266, "13542": 266, "13544": 266, "13546": 266, "13548": 266, "13550": 266, "13552": 266, "13554": 266, "13556": 266, "13558": 266, "13560": 266, "13562": 266, "13564": 266, "13566": 266, "13568": 266, "13570": 266, "13572": 266, "13574": 266, "13576": 266, "13578": 266, "13580": 266, "13582": 266, "13584": 266, "13586": 266, "13588": 266, "13590": 266, "13592": 266, "13594": 266, "13596": 266, "13598": 266, "13600": 266, "13602": 266, "13604": 266, "13606": 266, "13608": 266, "13610": 266, "13612": 266, "13614": 266, "13616": 266, "13618": 266, "13620": 266, "13622": 266, "13624": 266, "13626": 266, "13628": 266, "13630": 266, "13632": 266, "13634": 266, "13636": 266, "13638": 266, "13640": 266, "13642": 266, "13644": 266, "13646": 266, "13648": 266, "13650": 266, "13652": 266, "13654": 266, "13656": 266, "13658": 266, "13660": 266, "13662": 266, "13664": 266, "13666": 266, "13668": 266, "13670": 266, "13672": 266, "13674": 266, "13676": 266, "13678": 266, "13680": 266, "13682": 266, "13684": 266, "13686": 266, "13688": 266, "13690": 266, "13692": 266, "13694": 266, "13696": 266, "13698": 266, "13700": 266, "13702": 266, "13704": 266, "13706": 266, "13708": 266, "13710": 266, "13712": 266, "13714": 266, "13716": 266, "13718": 266, "13720": 266, "13722": 266, "13724": 266, "13726": 266, "13728": 266, "13730": 266, "13732": 266, "13734": 266, "13736": 266, "13738": 266, "13740": 266, "13742": 266, "13744": 266, "13746": 266, "13748": 266, "13750": 266, "13752": 266, "13754": 266, "13756": 266, "13758": 266, "13760": 266, "13762": 266, "13764": 266, "13766": 266, "13768": 266, "13770": 266, "13772": 266, "13774": 266, "13776": 266, "13778": 266, "13780": 266, "13782": 266, "13784": 266, "13786": 266, "13788": 266, "13790": 266, "13792": 266, "13794": 266, "13796": 266, "13798": 266, "13800": 266, "13802": 266, "13804": 266, "13806": 266, "13808": 266, "13810": 266, "13812": 266, "13814": 266, "13816": 266, "13818": 266, "13820": 266, "13822": 266, "13824": 266, "13826": 266, "13828": 266, "13830": 266, "13832": 266, "13834": 266, "13836": 266, "13838": 266, "13840": 266, "13842": 266, "13844": 266, "13846": 266, "13848": 266, "13850": 266, "13852": 266, "13854": 266, "13856": 266, "13858": 266, "13860": 266, "13862": 266, "13864": 266, "13866": 266, "13868": 266, "13870": 266, "13872": 266, "13874": 266, "13876": 266, "13878": 266, "13880": 266, "13882": 266, "13884": 266, "13886": 266, "13888": 266, "13890": 266, "13892": 266, "13894": 266, "13896": 266, "13898": 266, "13900": 266, "13902": 266, "13904": 266, "13906": 266, "13908": 266, "13910": 266, "13912": 266, "13914": 266, "13916": 266, "13918": 266, "13920": 266, "13922": 266, "13924": 266, "13926": 266, "13928": 266, "13930": 266, "13932": 266, "13934": 266, "13936": 266, "13938": 266, "13940": 266, "13942": 266, "13944": 266, "13946": 266, "13948": 266, "13950": 266, "13952": 266, "13954": 266, "13956": 266, "13958": 266, "13960": [266, 1051], "13962": 266, "13964": 266, "13966": 266, "13968": 266, "13970": 266, "13972": 266, "13974": 266, "13976": 266, "13978": 266, "13980": 266, "13982": 266, "13984": 266, "13986": 266, "13988": 266, "13990": 266, "13992": 266, "13994": 266, "13996": 266, "13998": 266, "14000": 266, "14002": 266, "14004": 266, "14006": 266, "14008": 266, "14010": 266, "14012": 266, "14014": 266, "14016": 266, "14018": 266, "14020": 266, "14022": 266, "14024": 266, "14026": 266, "14028": 266, "14030": 266, "14032": 266, "14034": 266, "14036": 266, "14038": 266, "14040": 266, "14042": 266, "14044": 266, "14046": 266, "14048": 266, "14050": 266, "14052": 266, "14054": 266, "14056": 266, "14058": 266, "14060": 266, "14062": 266, "14064": 266, "14066": 266, "14068": 266, "14070": 266, "14072": 266, "14074": 266, "14076": 266, "14078": 266, "14080": 266, "14082": 266, "14084": 266, "14086": 266, "14088": 266, "14090": 266, "14092": 266, "14094": 266, "14096": 266, "14098": 266, "14100": 266, "14102": 266, "14104": 266, "14106": 266, "14108": 266, "14110": 266, "14112": 266, "14114": 266, "14116": 266, "14118": 266, "14120": 266, "14122": 266, "14124": 266, "14126": 266, "14128": 266, "14130": 266, "14132": 266, "14134": 266, "14136": 266, "14138": 266, "14140": 266, "14142": 266, "14144": 266, "14146": 266, "14148": 266, "14150": 266, "14152": 266, "14154": 266, "14156": 266, "14158": 266, "14160": 266, "14162": 266, "14164": 266, "14166": 266, "14168": 266, "14170": 266, "14172": 266, "14174": 266, "14176": 266, "14178": 266, "14180": 266, "14182": 266, "14184": 266, "14186": 266, "14188": 266, "14190": 266, "14192": 266, "14194": 266, "14196": 266, "14198": 266, "14200": 266, "14202": 266, "14204": 266, "14206": 266, "14208": 266, "14210": 266, "14212": 266, "14214": 266, "14216": 266, "14218": 266, "14220": 266, "14222": 266, "14224": 266, "14226": 266, "14228": 266, "14230": 266, "14232": 266, "14234": 266, "14236": 266, "14238": 266, "14240": 266, "14242": 266, "14244": 266, "14246": 266, "14248": 266, "14250": 266, "14252": 266, "14254": 266, "14256": 266, "14258": 266, "14260": 266, "14262": 266, "14264": 266, "14266": 266, "14268": 266, "14270": 266, "14272": 266, "14274": 266, "14276": 266, "14278": 266, "14280": 266, "14282": 266, "14284": 266, "14286": 266, "14288": 266, "14290": 266, "14292": 266, "14294": 266, "14296": 266, "14298": 266, "14300": 266, "14302": 266, "14304": 266, "14306": 266, "14308": 266, "14310": 266, "14312": 266, "14314": 266, "14316": 266, "14318": 266, "14320": 266, "14322": 266, "14324": 266, "14326": 266, "14328": 266, "14330": 266, "14332": 266, "14334": 266, "14336": 266, "14338": 266, "14340": 266, "14342": 266, "14344": 266, "14346": 266, "14348": 266, "14350": 266, "14352": 266, "14354": 266, "14356": 266, "14358": 266, "14360": 266, "14362": 266, "14364": 266, "14366": 266, "14368": 266, "14370": 266, "14372": 266, "14374": 266, "14376": 266, "14378": 266, "14380": 266, "14382": 266, "14384": 266, "14388": 266, "14390": 266, "14392": 266, "14394": 266, "14396": 266, "14398": 266, "14400": 266, "14402": 266, "14404": 266, "14406": 266, "14408": 266, "14410": 266, "14412": 266, "14414": 266, "14416": 266, "14418": 266, "14420": 266, "14422": 266, "14424": 266, "14426": 266, "14428": 266, "14430": 266, "14432": 266, "14434": 266, "14436": 266, "14438": 266, "14440": 266, "14442": 266, "14444": 266, "14446": 266, "14448": 266, "14450": 266, "14452": 266, "14454": 266, "14456": 266, "14458": 266, "14460": 266, "14462": 266, "14464": 266, "14466": 266, "14468": 266, "14470": 266, "14472": 266, "14474": 266, "14476": 266, "14478": 266, "14480": 266, "14482": 266, "14484": 266, "14486": 266, "14488": 266, "14490": 266, "14492": 266, "14494": 266, "14496": 266, "14498": 266, "14500": 266, "14502": 266, "14504": 266, "14506": 266, "14508": 266, "14510": 266, "14512": 266, "14514": 266, "14516": 266, "14518": 266, "14520": 266, "14522": 266, "14524": 266, "14526": 266, "14528": 266, "14530": 266, "14532": 266, "14534": 266, "14536": 266, "14538": 266, "14540": 266, "14542": 266, "14544": 266, "14546": 266, "14548": 266, "14550": 266, "14552": 266, "14554": 266, "14556": 266, "14558": 266, "14560": 266, "14562": 266, "14564": 266, "14566": 266, "14568": 266, "14570": 266, "14572": 266, "14574": 266, "14576": 266, "14578": 266, "14580": 266, "14582": 266, "14584": 266, "14586": 266, "14588": 266, "14590": 266, "14592": 266, "14594": 266, "14596": 266, "14598": 266, "14600": 266, "14602": 266, "14604": 266, "14606": 266, "14608": 266, "14610": 266, "14612": 266, "14614": 266, "14616": 266, "14618": 266, "14620": 266, "14622": 266, "14624": 266, "14626": 266, "14628": 266, "14630": 266, "14632": 266, "14634": 266, "14636": 266, "14638": 266, "14640": 266, "14642": 266, "14644": 266, "14646": 266, "14648": 266, "14650": 266, "14652": 266, "14654": 266, "14656": 266, "14658": 266, "14660": 266, "14662": 266, "14664": 266, "14666": 266, "14668": 266, "14670": 266, "14672": 266, "14674": 266, "14676": 266, "14678": 266, "14680": 266, "14682": 266, "14684": 266, "14686": 266, "14688": 266, "14690": 266, "14692": 266, "14694": 266, "14696": 266, "14698": 266, "14700": 266, "14702": 266, "14704": 266, "14706": 266, "14708": 266, "14710": 266, "14712": 266, "14714": 266, "14716": 266, "14718": 266, "14720": 266, "14722": 266, "14724": 266, "14726": 266, "14728": 266, "14730": 266, "14732": 266, "14734": 266, "14736": 266, "14738": 266, "14740": 266, "14742": 266, "14744": 266, "14746": 266, "14748": 266, "14750": 266, "14752": 266, "14754": 266, "14756": 266, "14758": 266, "14760": 266, "14762": 266, "14764": 266, "14766": 266, "14768": 266, "14770": 266, "14772": 266, "14774": 266, "14776": 266, "14778": 266, "14780": 266, "14782": 266, "14784": 266, "14786": 266, "14788": 266, "14790": 266, "14792": 266, "14794": 266, "14796": 266, "14798": 266, "14800": 266, "14802": 266, "14804": 266, "14806": 266, "14808": 266, "14810": 266, "14812": 266, "14814": 266, "14816": 266, "14818": 266, "14820": 266, "14822": 266, "14824": 266, "14826": 266, "14828": 266, "14830": 266, "14832": 266, "14834": 266, "14836": 266, "14838": 266, "14840": 266, "14842": 266, "14844": 266, "14846": 266, "14848": 266, "14850": 266, "14852": 266, "14854": 266, "14856": 266, "14858": 266, "14860": 266, "14862": 266, "14864": 266, "14866": 266, "14868": 266, "14870": 266, "14872": 266, "14874": 266, "14876": 266, "14878": 266, "14880": 266, "14882": [266, 649], "14884": 266, "14886": 266, "14888": 266, "14890": 266, "14892": 266, "14894": 266, "14896": 266, "14898": 266, "14900": 266, "14902": 266, "14904": 266, "14906": 266, "14908": 266, "14910": 266, "14912": 266, "14914": 266, "14916": 266, "14918": 266, "14920": 266, "14922": 266, "14924": 266, "14926": 266, "14928": 266, "14930": 266, "14932": 266, "14934": 266, "14936": 266, "14938": 266, "14940": 266, "14942": 266, "14944": 266, "14946": 266, "14948": 266, "14950": 266, "14952": 266, "14954": 266, "14956": 266, "14958": 266, "14960": 266, "14962": 266, "14964": 266, "14966": 266, "14968": 266, "14970": 266, "14972": 266, "14974": 266, "14976": 266, "14978": 266, "14980": 266, "14982": 266, "14984": 266, "14986": 266, "14988": 266, "14990": [266, 315], "14992": 266, "14994": 266, "14996": 266, "14998": 266, "15002": 266, "15004": 266, "15006": 266, "15008": 266, "15010": 266, "15012": 266, "15014": 266, "15016": 266, "15018": 266, "15020": 266, "15022": 266, "15024": 266, "15026": 266, "15028": 266, "15030": 266, "15032": 266, "15034": 266, "15036": 266, "15038": 266, "15040": 266, "15042": 266, "15044": 266, "15046": 266, "15048": 266, "15050": 266, "15052": 266, "15054": 266, "15056": 266, "15058": 266, "15060": 266, "15062": 266, "15064": 266, "15066": 266, "15068": 266, "15070": 266, "15072": 266, "15074": 266, "15076": 266, "15078": 266, "15080": 266, "15082": 266, "15084": 266, "15086": 266, "15088": 266, "15090": 266, "15092": 266, "15094": 266, "15096": 266, "15098": 266, "15100": 266, "15102": 266, "15104": 266, "15106": 266, "15108": 266, "15110": 266, "15112": 266, "15114": 266, "15116": 266, "15118": 266, "15120": 266, "15122": 266, "15124": 266, "15126": 266, "15128": 266, "15130": 266, "15132": 266, "15134": 266, "15136": 266, "15138": 266, "15140": 266, "15142": 266, "15144": 266, "15146": 266, "15148": 266, "15150": 266, "15152": 266, "15154": 266, "15156": 266, "15158": 266, "15160": 266, "15162": 266, "15164": 266, "15166": 266, "15168": 266, "15170": 266, "15172": 266, "15174": 266, "15176": 266, "15178": 266, "15180": 266, "15182": 266, "15184": 266, "15186": 266, "15188": 266, "15190": 266, "15192": 266, "15194": 266, "15196": 266, "15198": 266, "15200": 266, "15202": 266, "15204": 266, "15206": 266, "15208": 266, "15210": 266, "15212": 266, "15214": 266, "15216": 266, "15218": 266, "15220": 266, "15222": 266, "15224": 266, "15226": 266, "15228": 266, "15230": 266, "15232": 266, "15234": 266, "15236": 266, "15238": 266, "15240": 266, "15242": 266, "15244": [266, 1098], "15246": 266, "15248": 266, "15250": 266, "15252": 266, "15254": 266, "15256": 266, "15258": 266, "15260": 266, "15262": 266, "15264": 266, "15266": 266, "15268": 266, "15270": 266, "15272": 266, "15274": 266, "15276": 266, "15278": 266, "15280": 266, "15282": 266, "15284": 266, "15286": 266, "15288": 266, "15290": 266, "15292": 266, "15294": 266, "15296": 266, "15298": 266, "15300": 266, "15302": 266, "15304": 266, "15306": 266, "15308": 266, "15310": 266, "15312": 266, "15314": 266, "15316": 266, "15318": 266, "15320": 266, "15322": 266, "15324": 266, "15326": 266, "15328": 266, "15330": 266, "15332": 266, "15334": 266, "15336": 266, "15338": 266, "15340": 266, "15342": 266, "15344": 266, "15346": 266, "15348": 266, "15350": 266, "15352": 266, "15354": 266, "15356": 266, "15358": 266, "15360": 266, "15362": 266, "15364": 266, "15366": 266, "15368": 266, "15370": 266, "15372": 266, "15374": 266, "15376": 266, "15378": 266, "15380": 266, "15382": 266, "15384": 266, "15386": 266, "15388": 266, "15390": 266, "15392": 266, "15394": 266, "15396": 266, "15398": 266, "15400": 266, "15402": 266, "15404": 266, "15406": 266, "15408": 266, "15410": 266, "15412": 266, "15414": 266, "15416": 266, "15418": 266, "15420": 266, "15422": 266, "15424": 266, "15426": 266, "15428": 266, "15430": 266, "15432": 266, "15434": 266, "15436": 266, "15438": 266, "15440": 266, "15442": 266, "15444": 266, "15446": 266, "15448": 266, "15450": 266, "15452": 266, "15454": 266, "15456": 266, "15458": 266, "15460": 266, "15462": 266, "15464": 266, "15466": 266, "15468": 266, "15470": 266, "15472": 266, "15474": 266, "15476": 266, "15478": 266, "15480": 266, "15482": 266, "15484": 266, "15486": 266, "15488": 266, "15490": 266, "15492": 266, "15494": 266, "15496": 266, "15498": 266, "15500": 266, "15502": 266, "15504": 266, "15506": 266, "15508": 266, "15510": 266, "15512": 266, "15514": 266, "15516": 266, "15518": 266, "15520": 266, "15522": 266, "15524": 266, "15526": 266, "15528": 266, "15530": 266, "15532": 266, "15534": 266, "15536": 266, "15538": 266, "15540": 266, "15542": 266, "15544": 266, "15546": 266, "15548": 266, "15550": 266, "15552": 266, "15554": 266, "15556": 266, "15558": 266, "15560": 266, "15562": 266, "15564": 266, "15566": 266, "15568": 266, "15570": 266, "15572": 266, "15574": 266, "15576": 266, "15578": 266, "15580": 266, "15582": 266, "15584": 266, "15586": 266, "15588": 266, "15590": 266, "15592": 266, "15594": 266, "15596": 266, "15598": 266, "15600": 266, "15602": 266, "15604": 266, "15606": 266, "15608": 266, "15610": 266, "15612": 266, "15614": 266, "15616": 266, "15618": 266, "15620": 266, "15622": 266, "15624": 266, "15626": 266, "15628": 266, "15630": 266, "15632": 266, "15634": 266, "15636": 266, "15638": 266, "15640": 266, "15642": 266, "15644": 266, "15646": 266, "15648": 266, "15650": 266, "15652": 266, "15654": 266, "15656": 266, "15658": 266, "15660": 266, "15662": 266, "15664": 266, "15666": 266, "15668": 266, "15670": 266, "15672": 266, "15674": 266, "15676": 266, "15678": 266, "15680": 266, "15682": 266, "15684": 266, "15686": 266, "15688": 266, "15690": 266, "15692": 266, "15694": 266, "15696": 266, "15698": 266, "15700": 266, "15702": 266, "15704": 266, "15706": 266, "15708": 266, "15710": 266, "15712": 266, "15714": 266, "15716": 266, "15718": 266, "15720": 266, "15722": 266, "15724": 266, "15726": 266, "15728": 266, "15730": 266, "15732": 266, "15734": 266, "15736": 266, "15738": 266, "15740": 266, "15742": 266, "15744": 266, "15746": 266, "15748": 266, "15750": 266, "15752": 266, "15754": 266, "15756": 266, "15758": 266, "15760": 266, "15762": 266, "15764": 266, "15766": 266, "15768": 266, "15770": 266, "15772": 266, "15774": 266, "15776": 266, "15778": 266, "15780": 266, "15782": 266, "15784": 266, "15786": 266, "15788": 266, "15790": 266, "15792": 266, "15794": 266, "15796": 266, "15798": 266, "15800": 266, "15802": 266, "15804": 266, "15806": 266, "15808": 266, "15810": 266, "15812": 266, "15814": 266, "15816": 266, "15818": 266, "15820": 266, "15822": 266, "15824": 266, "15826": 266, "15828": 266, "15830": 266, "15832": 266, "15834": 266, "15836": 266, "15838": 266, "15840": 266, "15842": 266, "15844": 266, "15846": 266, "15848": 266, "15850": 266, "15852": 266, "15854": 266, "15856": 266, "15858": 266, "15860": 266, "15862": 266, "15864": 266, "15866": 266, "15868": 266, "15870": 266, "15872": 266, "15874": 266, "15876": 266, "15878": 266, "15880": 266, "15882": 266, "15884": 266, "15886": 266, "15888": 266, "15890": 266, "15892": 266, "15894": 266, "15896": 266, "15898": 266, "15900": 266, "15902": 266, "15904": 266, "15906": 266, "15908": 266, "15910": 266, "15912": 266, "15914": 266, "15916": 266, "15918": 266, "15920": 266, "15922": 266, "15924": 266, "15926": 266, "15928": 266, "15930": 266, "15932": 266, "15934": 266, "15936": 266, "15938": 266, "15940": 266, "15942": 266, "15944": 266, "15946": 266, "15948": 266, "15950": 266, "15952": 266, "15954": 266, "15956": 266, "15958": 266, "15960": 266, "15962": 266, "15964": 266, "15966": 266, "15968": 266, "15970": 266, "15972": 266, "15974": 266, "15976": 266, "15978": 266, "15980": 266, "15982": 266, "15984": 266, "15986": 266, "15988": 266, "15990": 266, "15992": 266, "15994": 266, "15996": 266, "15998": 266, "16000": 266, "16002": 266, "16004": 266, "16006": 266, "16008": 266, "16010": 266, "16012": 266, "16014": 266, "16016": 266, "16018": 266, "16020": 266, "16022": 266, "16024": 266, "16026": 266, "16028": 266, "16030": 266, "16032": 266, "16034": 266, "16036": 266, "16038": 266, "16040": 266, "16042": 266, "16044": 266, "16046": 266, "16048": 266, "16050": 266, "16052": 266, "16054": 266, "16056": 266, "16058": 266, "16060": 266, "16062": 266, "16064": 266, "16066": 266, "16068": 266, "16070": 266, "16072": 266, "16074": 266, "16076": 266, "16078": 266, "16080": 266, "16082": 266, "16084": 266, "16086": 266, "16088": 266, "16090": 266, "16092": 266, "16094": 266, "16096": 266, "16098": 266, "16100": 266, "16102": 266, "16104": 266, "16106": 266, "16108": 266, "16110": 266, "16112": 266, "16114": 266, "16116": 266, "16118": 266, "16120": 266, "16122": 266, "16124": 266, "16126": 266, "16128": 266, "16130": 266, "16132": 266, "16134": 266, "16136": 266, "16138": 266, "16140": 266, "16142": 266, "16144": 266, "16146": 266, "16148": 266, "16150": 266, "16152": 266, "16154": 266, "16156": 266, "16158": 266, "16160": 266, "16162": 266, "16164": 266, "16166": 266, "16168": 266, "16170": 266, "16172": 266, "16174": 266, "16176": 266, "16178": 266, "16180": 266, "16182": 266, "16184": 266, "16186": 266, "16188": 266, "16190": 266, "16192": 266, "16194": 266, "16196": 266, "16198": 266, "16200": 266, "16202": 266, "16204": 266, "16206": 266, "16208": 266, "16210": 266, "16212": 266, "16214": 266, "16216": 266, "16218": 266, "16220": 266, "16222": 266, "16224": 266, "16226": 266, "16228": 266, "16230": 266, "16232": 266, "16234": 266, "16236": 266, "16238": 266, "16240": 266, "16242": 266, "16244": 266, "16246": 266, "16248": 266, "16250": 266, "16252": 266, "16254": 266, "16256": 266, "16258": 266, "16260": 266, "16262": 266, "16264": 266, "16266": 266, "16268": 266, "16270": 266, "16272": 266, "16274": 266, "16276": 266, "16278": 266, "16280": 266, "16282": 266, "16284": 266, "16286": 266, "16288": 266, "16290": 266, "16292": 266, "16294": 266, "16296": 266, "16298": 266, "16300": 266, "16302": 266, "16304": 266, "16306": 266, "16308": 266, "16310": 266, "16312": 266, "16314": 266, "16316": 266, "16318": 266, "16320": 266, "16322": 266, "16324": 266, "16326": 266, "16328": 266, "16330": 266, "16332": 266, "16334": 266, "16336": 266, "16338": 266, "16340": 266, "16342": 266, "16344": 266, "16346": 266, "16348": 266, "16350": 266, "16352": 266, "16354": 266, "16356": 266, "16358": 266, "16360": 266, "16362": 266, "16364": 266, "16366": 266, "16368": 266, "16370": 266, "16372": 266, "16374": 266, "16376": 266, "16378": 266, "16380": 266, "16382": 266, "16386": 266, "16388": 266, "16390": 266, "16392": 266, "16394": 266, "16396": 266, "16398": 266, "16400": 266, "16402": 266, "16404": 266, "16406": 266, "16408": 266, "16410": 266, "16412": 266, "16414": 266, "16416": 266, "16418": 266, "16420": 266, "16422": 266, "16424": 266, "16426": 266, "16428": 266, "16430": 266, "16432": 266, "16434": 266, "16436": 266, "16438": 266, "16440": 266, "16442": 266, "16444": 266, "16446": 266, "16448": 266, "16450": 266, "16452": 266, "16454": 266, "16456": 266, "16458": 266, "16460": 266, "16462": 266, "16464": 266, "16466": 266, "16468": 266, "16470": 266, "16472": 266, "16474": 266, "16476": 266, "16478": 266, "16480": 266, "16482": 266, "16484": 266, "16486": 266, "16488": 266, "16490": 266, "16492": 266, "16494": 266, "16496": 266, "16498": 266, "16500": 266, "16502": 266, "16504": 266, "16506": 266, "16508": 266, "16510": 266, "16512": 266, "16514": 266, "16516": 266, "16518": 266, "16520": 266, "16522": 266, "16524": 266, "16526": 266, "16528": 266, "16530": 266, "16532": 266, "16534": 266, "16536": 266, "16538": 266, "16540": 266, "16542": 266, "16544": 266, "16546": 266, "16548": 266, "16550": 266, "16552": 266, "16554": 266, "16556": 266, "16558": 266, "16560": 266, "16562": 266, "16564": 266, "16566": 266, "16568": 266, "16570": 266, "16572": 266, "16574": 266, "16576": 266, "16578": 266, "16580": 266, "16582": 266, "16584": 266, "16586": 266, "16588": 266, "16590": 266, "16592": 266, "16594": 266, "16596": 266, "16598": 266, "16600": 266, "16602": 266, "16604": 266, "16606": 266, "16608": 266, "16610": 266, "16612": 266, "16614": 266, "16616": 266, "16618": 266, "16620": 266, "16622": 266, "16624": 266, "16626": 266, "16628": 266, "16630": 266, "16632": 266, "16634": 266, "16636": 266, "16638": 266, "16640": 266, "16642": 266, "16644": 266, "16646": 266, "16648": 266, "16650": 266, "16652": 266, "16654": 266, "16656": 266, "16658": 266, "16660": 266, "16662": 266, "16664": 266, "16666": 266, "16668": 266, "16670": 266, "16672": 266, "16674": 266, "16676": 266, "16678": 266, "16680": 266, "16682": 266, "16684": 266, "16686": 266, "16688": 266, "16690": 266, "16692": 266, "16694": 266, "16696": 266, "16698": 266, "16700": 266, "16702": 266, "16704": 266, "16706": 266, "16708": 266, "16710": 266, "16712": 266, "16714": 266, "16716": 266, "16718": 266, "16720": 266, "16722": 266, "16724": 266, "16726": 266, "16728": 266, "16730": 266, "16732": 266, "16734": 266, "16736": 266, "16738": 266, "16740": 266, "16742": 266, "16744": 266, "16746": 266, "16748": 266, "16750": 266, "16752": 266, "16754": 266, "16756": 266, "16758": 266, "16760": 266, "16762": 266, "16764": 266, "16766": 266, "16768": 266, "16770": 266, "16772": 266, "16774": 266, "16776": 266, "16778": 266, "16780": 266, "16782": 266, "16784": 266, "16786": 266, "16788": 266, "16790": 266, "16792": 266, "16794": 266, "16796": 266, "16798": 266, "16800": 266, "16802": 266, "16804": 266, "16806": 266, "16808": 266, "16810": 266, "16812": 266, "16814": 266, "16816": 266, "16818": 266, "16820": 266, "16822": 266, "16824": 266, "16826": 266, "16828": 266, "16830": 266, "16832": 266, "16834": 266, "16836": 266, "16838": 266, "16840": 266, "16842": 266, "16844": 266, "16846": 266, "16848": 266, "16850": 266, "16852": 266, "16854": 266, "16856": 266, "16858": 266, "16860": 266, "16862": 266, "16864": 266, "16866": 266, "16868": 266, "16870": 266, "16872": 266, "16874": 266, "16876": 266, "16878": 266, "16880": 266, "16882": 266, "16884": 266, "16886": 266, "16888": 266, "16890": 266, "16892": 266, "16894": 266, "16896": 266, "16898": 266, "16900": 266, "16902": 266, "16904": 266, "16906": 266, "16908": 266, "16910": 266, "16912": 266, "16914": 266, "16916": 266, "16918": 266, "16920": 266, "16922": 266, "16924": 266, "16926": 266, "16928": 266, "16930": 266, "16932": 266, "16934": 266, "16936": 266, "16938": 266, "16940": 266, "16942": 266, "16944": 266, "16946": 266, "16948": 266, "16950": 266, "16952": 266, "16954": 266, "16956": 266, "16958": 266, "16960": 266, "16962": 266, "16964": 266, "16966": 266, "16968": 266, "16970": 266, "16972": 266, "16974": 266, "16976": 266, "16978": 266, "16980": 266, "16982": 266, "16984": 266, "16986": 266, "16988": 266, "16990": 266, "16992": 266, "16994": 266, "16996": 266, "16998": 266, "17000": 266, "17002": 266, "17004": 266, "17006": 266, "17008": 266, "17010": 266, "17012": 266, "17014": 266, "17016": 266, "17018": 266, "17020": 266, "17022": 266, "17024": 266, "17026": 266, "17028": 266, "17030": 266, "17032": 266, "17034": 266, "17036": 266, "17038": 266, "17040": 266, "17042": 266, "17044": 266, "17046": 266, "17048": 266, "17050": 266, "17052": 266, "17054": 266, "17056": 266, "17058": 266, "17060": 266, "17062": 266, "17064": 266, "17066": 266, "17068": 266, "17070": 266, "17072": 266, "17074": 266, "17076": 266, "17078": 266, "17080": 266, "17082": 266, "17084": 266, "17086": 266, "17088": 266, "17090": 266, "17092": 266, "17094": 266, "17096": 266, "17098": 266, "17100": 266, "17102": 266, "17104": 266, "17106": 266, "17108": 266, "17110": 266, "17112": 266, "17114": 266, "17116": 266, "17118": 266, "17120": 266, "17122": 266, "17124": 266, "17126": [266, 315], "17128": 266, "17130": 266, "17132": 266, "17134": 266, "17136": 266, "17138": 266, "17140": 266, "17142": 266, "17144": 266, "17146": 266, "17148": 266, "17150": 266, "17152": 266, "17154": 266, "17156": 266, "17158": 266, "17160": 266, "17162": 266, "17164": 266, "17166": 266, "17168": 266, "17170": 266, "17172": 266, "17174": 266, "17176": 266, "17178": 266, "17180": 266, "17182": 266, "17184": 266, "17186": 266, "17188": 266, "17190": 266, "17192": 266, "17194": 266, "17196": 266, "17198": 266, "17200": 266, "17202": 266, "17204": 266, "17206": 266, "17208": 266, "17210": 266, "17212": 266, "17214": 266, "17216": 266, "17218": 266, "17220": 266, "17222": 266, "17224": 266, "17226": 266, "17228": 266, "17230": 266, "17232": 266, "17234": 266, "17236": 266, "17238": 266, "17240": 266, "17242": 266, "17244": 266, "17246": 266, "17248": 266, "17250": 266, "17252": 266, "17254": 266, "17256": 266, "17258": 266, "17260": 266, "17262": 266, "17264": 266, "17266": 266, "17268": 266, "17270": 266, "17272": 266, "17274": 266, "17276": 266, "17278": 266, "17280": 266, "17282": 266, "17284": 266, "17286": 266, "17288": 266, "17290": 266, "17292": 266, "17294": 266, "17296": 266, "17298": 266, "17300": 266, "17302": 266, "17304": 266, "17306": 266, "17308": 266, "17310": 266, "17312": 266, "17314": 266, "17316": 266, "17318": 266, "17320": 266, "17322": 266, "17324": 266, "17326": 266, "17328": 266, "17330": 266, "17332": 266, "17334": 266, "17336": 266, "17338": 266, "17340": 266, "17342": 266, "17344": 266, "17346": 266, "17348": 266, "17350": 266, "17352": 266, "17354": 266, "17356": 266, "17358": 266, "17360": 266, "17362": 266, "17364": 266, "17366": 266, "17368": 266, "17370": 266, "17372": 266, "17374": 266, "17376": 266, "17378": 266, "17380": 266, "17382": 266, "17384": 266, "17386": 266, "17388": 266, "17390": 266, "17392": 266, "17394": 266, "17396": 266, "17398": 266, "17400": 266, "17402": 266, "17404": 266, "17406": 266, "17408": 266, "17410": 266, "17412": 266, "17414": 266, "17416": 266, "17418": 266, "17420": 266, "17422": 266, "17424": 266, "17426": 266, "17428": 266, "17430": 266, "17432": 266, "17434": 266, "17436": 266, "17438": 266, "17440": 266, "17442": 266, "17444": 266, "17446": 266, "17448": 266, "17450": 266, "17452": 266, "17454": 266, "17456": 266, "17458": 266, "17460": 266, "17462": 266, "17464": 266, "17466": 266, "17468": 266, "17470": 266, "17472": 266, "17474": 266, "17476": 266, "17478": 266, "17480": 266, "17482": 266, "17484": 266, "17486": 266, "17488": 266, "17490": 266, "17492": 266, "17494": 266, "17496": 266, "17498": 266, "17500": 266, "17502": 266, "17504": 266, "17506": 266, "17508": 266, "17510": 266, "17512": 266, "17514": 266, "17516": 266, "17518": 266, "17520": 266, "17522": 266, "17524": 266, "17526": 266, "17528": 266, "17530": 266, "17532": 266, "17534": 266, "17536": 266, "17538": 266, "17540": 266, "17542": 266, "17544": 266, "17546": 266, "17548": 266, "17550": 266, "17552": 266, "17554": 266, "17556": 266, "17558": 266, "17560": 266, "17562": 266, "17564": 266, "17566": 266, "17568": 266, "17570": 266, "17572": 266, "17574": 266, "17576": 266, "17578": 266, "17580": 266, "17582": 266, "17584": 266, "17586": 266, "17588": 266, "17590": 266, "17592": 266, "17594": 266, "17596": 266, "17598": 266, "17600": 266, "17602": 266, "17604": 266, "17606": 266, "17608": 266, "17610": 266, "17612": 266, "17614": 266, "17616": 266, "17618": 266, "17620": 266, "17622": 266, "17624": 266, "17626": 266, "17628": 266, "17630": 266, "17632": 266, "17634": 266, "17636": 266, "17638": 266, "17640": 266, "17642": 266, "17644": 266, "17646": 266, "17648": 266, "17650": 266, "17652": 266, "17654": 266, "17656": 266, "17658": 266, "17660": 266, "17662": 266, "17664": 266, "17666": 266, "17668": 266, "17670": 266, "17672": 266, "17674": 266, "17676": 266, "17678": 266, "17680": 266, "17682": 266, "17684": 266, "17686": 266, "17688": 266, "17690": 266, "17692": 266, "17694": 266, "17696": 266, "17698": 266, "17700": 266, "17702": 266, "17704": 266, "17706": 266, "17708": 266, "17710": 266, "17712": 266, "17714": 266, "17716": 266, "17718": 266, "17720": 266, "17722": 266, "17724": 266, "17726": 266, "17728": 266, "17730": 266, "17732": 266, "17734": 266, "17736": 266, "17738": 266, "17740": 266, "17742": 266, "17744": 266, "17746": 266, "17748": 266, "17750": 266, "17752": 266, "17754": 266, "17756": 266, "17758": 266, "17760": 266, "17762": 266, "17764": 266, "17766": 266, "17768": 266, "17770": 266, "17772": 266, "17774": 266, "17776": 266, "17778": 266, "17780": 266, "17782": 266, "17784": 266, "17786": 266, "17788": 266, "17790": 266, "17792": 266, "17794": 266, "17796": 266, "17798": 266, "17800": 266, "17802": 266, "17804": 266, "17806": 266, "17808": 266, "17810": 266, "17812": 266, "17814": 266, "17816": 266, "17818": 266, "17820": 266, "17822": 266, "17824": 266, "17826": 266, "17828": 266, "17830": 266, "17832": 266, "17834": 266, "17836": 266, "17838": 266, "17840": 266, "17842": 266, "17844": 266, "17846": 266, "17848": 266, "17850": 266, "17852": 266, "17854": 266, "17856": 266, "17858": 266, "17860": 266, "17862": 266, "17864": 266, "17866": 266, "17868": 266, "17870": 266, "17872": 266, "17874": 266, "17876": 266, "17878": 266, "17880": 266, "17882": 266, "17884": 266, "17886": 266, "17888": 266, "17890": 266, "17892": 266, "17894": 266, "17896": 266, "17898": 266, "17900": 266, "17902": 266, "17904": 266, "17906": 266, "17908": 266, "17910": 266, "17912": 266, "17914": 266, "17916": 266, "17918": 266, "17920": 266, "17922": 266, "17924": 266, "17926": 266, "17928": 266, "17930": 266, "17932": 266, "17934": 266, "17936": 266, "17938": 266, "17940": 266, "17942": 266, "17944": 266, "17946": 266, "17948": 266, "17950": 266, "17952": 266, "17954": 266, "17956": 266, "17958": 266, "17960": 266, "17962": 266, "17964": 266, "17966": 266, "17968": 266, "17970": 266, "17972": 266, "17974": 266, "17976": 266, "17978": 266, "17980": 266, "17982": 266, "17984": 266, "17986": 266, "17988": 266, "17990": 266, "17992": 266, "17994": 266, "17996": 266, "17998": 266, "18000": [266, 937], "18002": 266, "18004": 266, "18006": 266, "18008": 266, "18010": 266, "18012": 266, "18014": 266, "18016": 266, "18018": 266, "18020": 266, "18022": 266, "18024": 266, "18026": 266, "18028": 266, "18030": 266, "18032": 266, "18034": 266, "18036": 266, "18038": 266, "18040": 266, "18042": 266, "18044": 266, "18046": 266, "18048": 266, "18050": 266, "18052": 266, "18054": 266, "18056": 266, "18058": 266, "18060": 266, "18062": 266, "18064": 266, "18066": 266, "18068": 266, "18070": 266, "18072": 266, "18074": 266, "18076": 266, "18078": 266, "18080": 266, "18082": 266, "18084": 266, "18086": 266, "18088": 266, "18090": 266, "18092": 266, "18094": 266, "18096": 266, "18098": 266, "18100": 266, "18102": 266, "18104": 266, "18106": 266, "18108": 266, "18110": 266, "18112": 266, "18114": 266, "18116": 266, "18118": 266, "18120": 266, "18122": 266, "18124": 266, "18126": 266, "18128": 266, "18130": 266, "18132": 266, "18134": 266, "18136": 266, "18138": 266, "18140": 266, "18142": 266, "18144": 266, "18146": 266, "18148": 266, "18150": 266, "18152": 266, "18154": 266, "18156": 266, "18158": 266, "18160": 266, "18162": 266, "18164": 266, "18166": 266, "18168": 266, "18170": 266, "18172": 266, "18174": 266, "18176": 266, "18178": 266, "18180": 266, "18182": 266, "18184": 266, "18186": 266, "18188": 266, "18190": 266, "18192": 266, "18194": 266, "18196": 266, "18198": 266, "18200": 266, "18202": 266, "18204": 266, "18206": 266, "18208": 266, "18210": 266, "18212": 266, "18214": 266, "18216": 266, "18218": 266, "18220": 266, "18222": 266, "18224": 266, "18226": 266, "18228": 266, "18230": 266, "18232": 266, "18234": 266, "18236": 266, "18238": 266, "18240": 266, "18242": 266, "18244": 266, "18246": 266, "18248": 266, "18250": 266, "18252": 266, "18254": 266, "18256": 266, "18258": 266, "18260": 266, "18262": 266, "18264": 266, "18266": 266, "18268": 266, "18270": 266, "18272": 266, "18274": 266, "18276": 266, "18278": 266, "18280": 266, "18282": 266, "18284": 266, "18286": 266, "18288": 266, "18290": 266, "18292": 266, "18294": 266, "18296": 266, "18298": 266, "18300": 266, "18302": 266, "18304": 266, "18306": 266, "18308": 266, "18310": 266, "18312": 266, "18314": 266, "18316": 266, "18318": 266, "18320": 266, "18322": 266, "18324": 266, "18326": 266, "18328": 266, "18330": 266, "18332": 266, "18334": 266, "18336": 266, "18338": 266, "18340": 266, "18342": 266, "18344": 266, "18346": 266, "18348": 266, "18350": 266, "18352": 266, "18354": 266, "18356": 266, "18358": 266, "18360": 266, "18362": 266, "18364": 266, "18366": 266, "18368": 266, "18370": 266, "18372": 266, "18374": 266, "18376": 266, "18378": 266, "18380": 266, "18382": 266, "18384": [266, 1083], "18386": 266, "18388": 266, "18390": 266, "18392": 266, "18394": 266, "18396": 266, "18398": 266, "18400": 266, "18402": 266, "18404": 266, "18406": 266, "18408": 266, "18410": 266, "18412": 266, "18414": 266, "18416": 266, "18418": 266, "18420": 266, "18422": 266, "18424": 266, "18426": 266, "18428": 266, "18430": 266, "18432": 266, "18434": 266, "18436": 266, "18438": 266, "18440": 266, "18442": 266, "18444": 266, "18446": 266, "18448": 266, "18450": 266, "18452": 266, "18454": 266, "18456": 266, "18458": 266, "18460": 266, "18462": 266, "18464": 266, "18466": 266, "18468": 266, "18470": 266, "18472": 266, "18474": 266, "18476": 266, "18478": 266, "18480": 266, "18482": 266, "18484": 266, "18486": 266, "18488": 266, "18490": 266, "18492": 266, "18494": 266, "18496": 266, "18498": 266, "18500": 266, "18502": 266, "18504": 266, "18506": 266, "18508": 266, "18510": 266, "18512": 266, "18514": 266, "18516": 266, "18518": 266, "18520": 266, "18522": 266, "18524": 266, "18526": 266, "18528": 266, "18530": 266, "18532": 266, "18534": 266, "18536": 266, "18538": 266, "18540": 266, "18542": 266, "18544": 266, "18546": 266, "18548": 266, "18550": 266, "18552": 266, "18554": 266, "18556": 266, "18558": 266, "18560": 266, "18562": 266, "18564": 266, "18566": 266, "18568": 266, "18570": 266, "18572": 266, "18574": 266, "18576": 266, "18578": 266, "18580": 266, "18582": 266, "18584": 266, "18586": 266, "18588": 266, "18590": 266, "18592": 266, "18594": 266, "18596": 266, "18598": 266, "18600": 266, "18602": 266, "18604": 266, "18606": 266, "18608": 266, "18610": 266, "18612": 266, "18614": 266, "18616": 266, "18618": 266, "18620": 266, "18622": 266, "18624": 266, "18626": 266, "18628": 266, "18630": 266, "18632": 266, "18634": 266, "18636": 266, "18638": 266, "18640": 266, "18642": 266, "18644": 266, "18646": 266, "18648": 266, "18650": 266, "18652": 266, "18654": 266, "18656": 266, "18658": 266, "18660": 266, "18662": 266, "18664": 266, "18666": 266, "18668": 266, "18670": 266, "18672": 266, "18674": 266, "18676": 266, "18678": 266, "18680": 266, "18682": 266, "18684": 266, "18686": 266, "18688": 266, "18690": 266, "18692": 266, "18694": 266, "18696": 266, "18698": 266, "18700": 266, "18702": 266, "18704": 266, "18706": 266, "18708": 266, "18710": 266, "18712": 266, "18714": 266, "18716": 266, "18718": 266, "18720": 266, "18722": 266, "18724": 266, "18726": 266, "18728": 266, "18730": 266, "18732": 266, "18734": 266, "18736": 266, "18738": 266, "18740": 266, "18742": 266, "18744": 266, "18746": 266, "18748": 266, "18750": 266, "18752": 266, "18754": 266, "18756": 266, "18758": 266, "18760": 266, "18762": 266, "18764": 266, "18766": 266, "18768": 266, "18770": 266, "18772": 266, "18774": 266, "18776": 266, "18778": 266, "18780": 266, "18782": 266, "18784": 266, "18786": 266, "18788": 266, "18790": 266, "18792": 266, "18794": 266, "18796": 266, "18798": 266, "18800": 266, "18802": 266, "18804": 266, "18806": 266, "18808": 266, "18810": 266, "18812": 266, "18814": 266, "18816": 266, "18818": 266, "18820": 266, "18822": 266, "18824": 266, "18826": 266, "18828": 266, "18830": 266, "18832": 266, "18834": 266, "18836": 266, "18838": 266, "18840": 266, "18842": 266, "18844": 266, "18846": 266, "18848": 266, "18850": 266, "18852": 266, "18854": 266, "18856": 266, "18858": 266, "18860": 266, "18862": 266, "18864": 266, "18866": 266, "18868": 266, "18870": 266, "18872": 266, "18874": 266, "18876": 266, "18878": 266, "18880": 266, "18882": 266, "18884": 266, "18886": 266, "18888": 266, "18890": 266, "18892": 266, "18894": 266, "18896": 266, "18898": 266, "18900": 266, "18902": 266, "18904": 266, "18906": 266, "18908": 266, "18910": 266, "18912": 266, "18914": 266, "18916": 266, "18918": 266, "18920": 266, "18922": 266, "18924": 266, "18926": 266, "18928": 266, "18930": 266, "18932": 266, "18934": 266, "18936": 266, "18938": 266, "18940": 266, "18942": 266, "18944": 266, "18946": 266, "18948": 266, "18950": 266, "18952": 266, "18954": 266, "18956": 266, "18958": 266, "18960": 266, "18962": 266, "18964": 266, "18966": 266, "18968": 266, "18970": 266, "18972": 266, "18974": 266, "18976": 266, "18978": 266, "18980": 266, "18982": 266, "18984": 266, "18986": 266, "18988": 266, "18990": 266, "18992": 266, "18994": 266, "18996": 266, "18998": 266, "19000": 266, "19002": 266, "19004": 266, "19006": 266, "19008": 266, "19010": 266, "19012": 266, "19014": 266, "19016": 266, "19018": 266, "19020": 266, "19022": 266, "19024": 266, "19026": 266, "19028": 266, "19030": 266, "19032": 266, "19034": 266, "19036": 266, "19038": 266, "19040": 266, "19042": 266, "19044": 266, "19046": 266, "19048": 266, "19050": 266, "19052": 266, "19054": 266, "19056": 266, "19058": 266, "19060": 266, "19062": 266, "19064": 266, "19066": 266, "19068": 266, "19070": 266, "19072": 266, "19074": 266, "19076": 266, "19078": 266, "19080": 266, "19082": 266, "19084": 266, "19086": 266, "19088": 266, "19090": 266, "19092": 266, "19094": 266, "19096": 266, "19098": 266, "19100": 266, "19102": 266, "19104": 266, "19106": 266, "19108": 266, "19110": 266, "19112": 266, "19114": 266, "19116": 266, "19118": 266, "19120": 266, "19122": 266, "19124": 266, "19126": 266, "19128": 266, "19130": 266, "19132": 266, "19134": 266, "19136": 266, "19138": 266, "19140": 266, "19142": 266, "19144": 266, "19146": 266, "19148": 266, "19150": 266, "19152": 266, "19154": 266, "19156": 266, "19158": 266, "19160": 266, "19162": 266, "19164": 266, "19166": 266, "19168": 266, "19170": 266, "19172": 266, "19174": 266, "19176": 266, "19178": 266, "19180": 266, "19182": 266, "19184": 266, "19186": 266, "19188": 266, "19190": 266, "19192": 266, "19194": 266, "19196": 266, "19198": 266, "19200": 266, "19202": 266, "19204": 266, "19206": 266, "19208": 266, "19210": 266, "19212": 266, "19214": 266, "19216": 266, "19218": 266, "19220": 266, "19222": 266, "19224": 266, "19226": 266, "19228": 266, "19230": 266, "19232": 266, "19234": 266, "19236": 266, "19238": 266, "19240": 266, "19242": 266, "19244": 266, "19246": 266, "19248": 266, "19250": 266, "19252": 266, "19254": 266, "19256": 266, "19258": 266, "19260": 266, "19262": 266, "19264": 266, "19266": 266, "19268": 266, "19270": 266, "19272": 266, "19274": 266, "19276": 266, "19278": 266, "19280": 266, "19282": 266, "19284": 266, "19286": 266, "19288": 266, "19290": 266, "19292": 266, "19294": 266, "19296": 266, "19298": 266, "19300": 266, "19302": 266, "19304": 266, "19306": 266, "19308": 266, "19310": 266, "19312": 266, "19314": 266, "19316": 266, "19318": 266, "19320": 266, "19322": 266, "19324": 266, "19326": 266, "19328": 266, "19330": 266, "19332": 266, "19334": 266, "19336": 266, "19338": 266, "19340": 266, "19342": 266, "19344": 266, "19346": 266, "19348": 266, "19350": 266, "19352": 266, "19354": 266, "19356": 266, "19358": 266, "19360": 266, "19362": 266, "19364": 266, "19366": 266, "19368": 266, "19370": 266, "19372": 266, "19374": 266, "19376": 266, "19378": 266, "19380": 266, "19382": 266, "19384": 266, "19386": 266, "19388": 266, "19390": 266, "19392": 266, "19394": 266, "19396": 266, "19398": 266, "19400": 266, "19402": 266, "19404": 266, "19406": 266, "19408": 266, "19410": 266, "19412": 266, "19414": 266, "19416": 266, "19418": 266, "19420": 266, "19422": 266, "19424": 266, "19426": 266, "19428": 266, "19430": 266, "19432": 266, "19434": 266, "19436": 266, "19438": 266, "19440": 266, "19442": 266, "19444": 266, "19446": 266, "19448": 266, "19450": 266, "19452": 266, "19454": 266, "19456": 266, "19458": 266, "19460": 266, "19462": 266, "19464": 266, "19466": 266, "19468": 266, "19470": 266, "19472": 266, "19474": 266, "19476": 266, "19478": 266, "19480": 266, "19482": 266, "19484": 266, "19486": 266, "19488": 266, "19490": 266, "19492": 266, "19494": 266, "19496": 266, "19498": 266, "19500": 266, "19502": 266, "19504": 266, "19506": 266, "19508": 266, "19510": 266, "19512": 266, "19514": 266, "19516": 266, "19518": 266, "19520": 266, "19522": 266, "19524": 266, "19526": 266, "19528": 266, "19530": 266, "19532": 266, "19534": 266, "19536": 266, "19538": 266, "19540": 266, "19542": 266, "19544": 266, "19546": 266, "19548": 266, "19550": 266, "19552": 266, "19554": 266, "19556": 266, "19558": 266, "19560": 266, "19562": 266, "19564": 266, "19566": 266, "19568": 266, "19570": 266, "19572": 266, "19574": 266, "19576": 266, "19578": 266, "19580": 266, "19582": 266, "19584": 266, "19586": 266, "19588": 266, "19590": 266, "19592": 266, "19594": 266, "19596": 266, "19598": 266, "19600": 266, "19602": 266, "19604": 266, "19606": 266, "19608": 266, "19610": 266, "19612": 266, "19614": 266, "19616": 266, "19618": 266, "19620": 266, "19622": 266, "19624": 266, "19626": 266, "19628": 266, "19630": 266, "19632": 266, "19634": 266, "19636": 266, "19638": 266, "19640": 266, "19642": 266, "19644": 266, "19646": 266, "19648": 266, "19650": 266, "19652": 266, "19654": 266, "19656": 266, "19658": 266, "19660": 266, "19662": 266, "19664": 266, "19666": 266, "19668": 266, "19670": 266, "19672": 266, "19674": 266, "19676": 266, "19678": 266, "19680": 266, "19682": 266, "19684": 266, "19686": 266, "19688": 266, "19690": 266, "19692": 266, "19694": 266, "19696": 266, "19698": 266, "19700": 266, "19702": 266, "19704": 266, "19706": 266, "19708": 266, "19710": 266, "19712": 266, "19714": 266, "19716": 266, "19718": 266, "19720": 266, "19722": 266, "19724": 266, "19726": 266, "19728": 266, "19730": 266, "19732": 266, "19734": 266, "19736": 266, "19738": 266, "19740": 266, "19742": 266, "19744": 266, "19746": 266, "19748": 266, "19750": 266, "19752": 266, "19754": 266, "19756": 266, "19758": 266, "19760": 266, "19762": 266, "19764": 266, "19766": 266, "19768": 266, "19770": 266, "19772": 266, "19774": 266, "19776": 266, "19778": 266, "19780": 266, "19782": 266, "19784": 266, "19786": 266, "19788": 266, "19790": 266, "19792": 266, "19794": 266, "19796": 266, "19798": 266, "19800": 266, "19802": 266, "19804": 266, "19806": 266, "19808": 266, "19810": 266, "19812": 266, "19814": 266, "19816": 266, "19818": 266, "19820": 266, "19822": 266, "19824": 266, "19826": 266, "19828": 266, "19830": 266, "19832": 266, "19834": 266, "19836": 266, "19838": 266, "19840": 266, "19842": 266, "19844": 266, "19846": 266, "19848": 266, "19850": 266, "19852": 266, "19854": 266, "19856": 266, "19858": 266, "19860": 266, "19862": 266, "19864": 266, "19866": 266, "19868": 266, "19870": 266, "19872": 266, "19874": 266, "19876": 266, "19878": 266, "19880": 266, "19882": 266, "19884": 266, "19886": 266, "19888": 266, "19890": 266, "19892": 266, "19894": 266, "19896": 266, "19898": 266, "19900": 266, "19902": 266, "19904": 266, "19906": 266, "19908": 266, "19910": 266, "19912": 266, "19914": 266, "19916": 266, "19918": 266, "19920": 266, "19922": 266, "19924": 266, "19926": 266, "19928": 266, "19930": 266, "19932": 266, "19934": 266, "19936": 266, "19938": 266, "19940": 266, "19942": 266, "19944": 266, "19946": 266, "19948": 266, "19950": 266, "19952": 266, "19954": 266, "19956": 266, "19958": 266, "19960": 266, "19962": 266, "19964": 266, "19966": 266, "19968": 266, "19970": 266, "19972": 266, "19974": 266, "19976": 266, "19978": 266, "19980": 266, "19982": 266, "19984": 266, "19986": 266, "19988": 266, "19990": 266, "19992": 266, "19994": 266, "19996": 266, "19998": 266, "l_to_send": 266, "json_to_send": 266, "json_receiv": 266, "l_receiv": 266, "sine": [266, 307, 324], "140106668681968": 266, "wallclock_axi": 266, "1638538131": 266, "1975703": 266, "2978473": 266, "3981225": 266, "498449": 266, "5987027": 266, "698947": 266, "7996597": 266, "899947": 266, "1638538132": 266, "0001943": 266, "1010473": 266, "0b10110": 266, "0x16": [266, 974], "0b1011": [266, 301], "bit_3": 266, "0b00001": 266, "0b1": [266, 283, 353], "0b1000": [266, 283], "0b11110": 266, "bitwis": [266, 455, 488, 1025, 1029, 1127], "num1": [266, 283], "0b110101101": 266, "num2": [266, 283], "0b101110100": 266, "0b100100100": 266, "0b111111101": 266, "0b1010": 266, "0b10100": [266, 283], "1fuzzi2fuzzi3fuzzi4": 266, "0b11011001": 266, "abcdef": [266, 273, 279, 283], "cde": 266, "lexic": [266, 541, 797], "020": [266, 307, 800, 1075, 1076, 1079, 1080], "indexerror": [266, 283, 286, 304, 343, 365, 369, 404, 1107, 1160, 1228], "auer": 266, "aue": 266, "zerodivisionerror": [266, 279, 304, 1107], "lst1": 266, "lst2": 266, "toc": 267, "treeset": 267, "searchabl": [267, 270], "pytest": [267, 277, 280, 288, 291, 300, 309, 317, 319, 324, 335, 338, 341, 342, 345, 346, 364, 412, 512, 1197, 1205, 1206, 1235, 1276, 1281], "diesel": 267, "vibrat": 267, "lighter": 267, "sensorrandom": 267, "sensorsin": 267, "sensorconst": 267, "wild": [267, 269, 274, 309, 421], "yesterai": 267, "deseri": [267, 279], "decod": [267, 279, 286, 289, 325, 331, 342, 345, 347, 353, 359, 1158, 1205], "swallow": [267, 861, 1107], "walkthrough": [267, 269, 274, 1270], "1h": 267, "exchangeformat": 267, "test_mqtt_format": 267, "argpars": [267, 288, 319, 341, 345, 390, 1162], "parser": [267, 279, 333, 349, 415, 724, 808, 1160, 1273], "subcommand": [267, 1160], "mosquitto_sub": [267, 1224], "writer": [267, 875, 943], "deserializeerror": 267, "dangl": [267, 382, 458, 649, 662], "fahrenheit": [269, 426, 428, 441, 549], "nonconst": [269, 704], "getchar": [269, 432, 434, 439, 448], "dry": 269, "verif": [269, 1213], "umlaut": [269, 270, 389, 1139, 1221], "\u00f6": [269, 289, 1221], "canari": 269, "asid": [269, 466, 467, 479, 815, 1068], "brainfuck": 269, "nok": [269, 835, 1061], "singli": [269, 485], "typedef": [269, 482, 751, 800, 833, 1004, 1077], "commonplac": [269, 1266], "boundari": [269, 279, 325, 381, 382, 488, 825, 929, 1042, 1066], "neighborhood": 269, "signed": [269, 442, 491], "unsigned": 269, "excurs": [269, 552, 1279], "pointerarith": 269, "lower_bound": [269, 316, 355, 687, 692], "for_each": [269, 316, 692, 833], "diagram": [269, 552, 570, 572, 928, 934, 937, 997, 1041], "search_by_lastnam": [269, 734, 735, 736], "const_iter": [269, 643, 686, 689, 690, 691, 693, 709, 749, 800, 801, 833, 834], "calloper": [269, 626], "exc": [269, 626], "ostream": [269, 626, 652, 751, 765, 797, 1248], "paint": [269, 723], "reverse_copi": [269, 316, 626, 692], "cin": [269, 694, 713, 715, 723, 1047], "accumul": [269, 626], "raci": [269, 626], "wsl2": [269, 296, 298, 316, 318, 411], "libsqlite3": [269, 522], "libboost": 269, "libgtk": 269, "prosaic": 269, "roman": 269, "mad": [269, 490], "wxwidget": 269, "whole": [270, 282, 283, 285, 288, 291, 300, 303, 342, 389, 512, 751, 815, 876, 959, 961, 984, 1026, 1066, 1106, 1178, 1259], "lieb": [270, 331, 347], "gr\u00fc\u00dfe": [270, 331, 347], "utf8": 270, "distil": [270, 330, 360, 368, 390, 1105, 1178], "4j": 271, "unlimitxdeadbeef": [271, 273, 279, 325, 331, 399, 607, 1086], "3735928559": [271, 273, 279, 283, 325, 331, 399], "0b10010011": 271, "ippi": 271, "0b0101": 271, "0101": 271, "teifl": [271, 359], "fun1": 271, "fun2": 271, "nsecond": [271, 1152], "rline": 271, "carriag": [271, 445, 1152], "linet": 271, "neuer": 271, "ordner": 271, "euer": 271, "syntaxwarn": [271, 304, 1107], "ipykernel_258993": 271, "837361033": 271, "regex_str": [271, 289], "calim": 271, "yaaai": 271, "needl": [271, 369, 1146, 1154], "haystack": [271, 369, 1146, 1154], "finit": [271, 320, 460, 921], "haystack_s": 271, "0x7fe78c576ee0": 271, "list_iter": [271, 289, 343, 353, 359, 369], "0x7fe78c577910": 271, "unicode_code_point": 271, "l_new": 271, "ijk": 271, "mengenlehr": 271, "s1": [271, 279, 283, 286, 289, 304, 311, 321, 331, 343, 353, 359, 369, 552, 569, 599, 658, 755, 782, 784, 786, 788, 812, 844, 1157], "s2": [271, 279, 283, 286, 289, 304, 311, 321, 331, 343, 353, 359, 369, 552, 569, 599, 658, 755, 782, 784, 786, 812, 839, 844, 1157], "gunnar": 271, "liam": 271, "maximumum": 271, "variable2": 271, "maximum2": 271, "mrmr": 271, "einser": 271, "square_numb": [271, 1155], "squares_gener": 271, "other_d": [271, 304], "nove": 271, "isspac": [271, 273, 276, 279, 304, 325, 353, 359, 1154], "buchhaltung": [271, 891, 913, 914], "startswith": [271, 279, 308, 309, 311, 325, 365, 512, 1154, 1227], "buch": [271, 1255], "oooo": 271, "isupp": [271, 279, 289, 325, 359, 365, 369, 1154], "zz": 271, "traurig": 271, "substr": [271, 273, 279, 289, 304, 311, 325, 343, 347, 353, 359, 365, 369, 525, 724, 1248], "descr": [271, 347, 365, 724, 801], "count_byt": 271, "nbyte": 271, "miscellanea": [272, 1019], "hour_of_dai": 272, "ein_str": 273, "ein_anderer_str": 273, "fghjgfgh": 273, "dfghgfgh": 273, "do_someth": [273, 292, 399, 461, 463, 471, 486, 500, 843, 1136], "komplett": [273, 359], "sollten": [273, 311], "returnwert": [273, 1255], "sinnloser": 273, "weis": [273, 1276], "vorgenommen": 273, "obacht": 273, "140672599989840": 273, "140672464974720": 273, "hoechst": [273, 311], "rechnern": 273, "100000": [273, 289, 815, 936, 1213], "": [273, 289], "exponenti": [273, 1139, 1153], "__annotations__": [273, 283, 304, 325, 339, 1108], "__closure__": [273, 283, 304, 325], "__code__": [273, 283, 304, 325], "__delattr__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__dir__": [273, 276, 283, 301, 304, 325, 343, 365], "__format__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__ge__": [273, 276, 279, 283, 301, 304, 325, 343, 365, 1127], "__get__": [273, 283, 304, 325], "__getattribute__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__globals__": [273, 283, 304, 325], "__gt__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__hash__": [273, 276, 279, 283, 301, 304, 325, 343, 353, 365], "__init_subclass__": [273, 276, 283, 301, 304, 325, 343, 365], "__kwdefaults__": [273, 283, 304, 325], "__ne__": [273, 276, 279, 283, 301, 304, 325, 343, 365, 1127], "__new__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__qualname__": [273, 283, 304, 325], "__reduce__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__reduce_ex__": [273, 276, 283, 301, 304, 325, 343, 365], "__setattr__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__sizeof__": [273, 276, 279, 283, 301, 304, 325, 343, 365], "__subclasshook__": [273, 276, 283, 301, 304, 325, 343, 365], "karteikart": 273, "my_formatted_person": 273, "123425041997": 273, "caros_str": 273, "joergs_str": 273, "0x7ff0dc48b490": 273, "next_po": 273, "tim": [273, 283, 395, 396], "ugli": [273, 283, 297, 306, 307, 320, 327, 328, 371, 372, 427, 432, 534, 626, 821, 855, 886, 887, 1105, 1106], "flat": [273, 283, 479, 505, 506, 1077], "puriti": [273, 283], "silenc": [273, 283, 471, 874], "ambigu": [273, 283, 458, 493, 494, 495, 661, 808, 891], "refus": [273, 283, 292, 516, 856, 928, 957, 1012, 1081], "temptat": [273, 283], "dutch": [273, 283], "honk": [273, 283], "wahr": 273, "falsch": [273, 286], "kriegt": 273, "nachkommastellen": 273, "moeglichkeit": 273, "f_str": 273, "punkt_po": 273, "nachkomma_str": 273, "praezedenz": 273, "wandel": 273, "vorn": 273, "anhaengen": 273, "wuenschen": 273, "wuerd": 273, "appendleft": 273, "extendleft": 273, "relem": 273, "popleft": 273, "sorted_l": 273, "sorted_t": 273, "sorted_": 273, "subtext": 273, "ssissippi": 273, "140672464726576": 273, "copied_text": 273, "140672464784832": 273, "140672464784064": 273, "140672599989872": 273, "140672464751872": 273, "140672464768512": 273, "140672464594880": 273, "jkl": 273, "suesser": [273, 279, 286, 289, 292, 308], "sechser_gewuerfelt": 273, "n_tri": [273, 276, 311, 353, 359, 365, 369, 1143], "versag": [273, 311], "eva": [273, 325, 369, 1146], "xrang": [273, 1147], "0x7ff0dc48bed0": 273, "hann": 273, "gruess": 273, "gott": [273, 304, 422], "fill_in_us": 273, "scho": 273, "my_db": 273, "uniq_dict": 273, "konfigurierbaren": 273, "startwert": 273, "ausgibt": 273, "sqnum": 273, "0x7ff014b01820": 273, "xslx": 273, "yz": 273, "lret": 273, "ochwa": 273, "unbalanc": 274, "geospati": 274, "gdal": 274, "sweigart": [274, 288, 330, 1208], "datenypen": 275, "libarari": 275, "chainmap": 275, "dequ": [275, 822], "suchalgorithmen": 275, "51139385": 276, "77397a312b47": 276, "50924272": [276, 279], "20210728": [276, 279, 1134], "eine_komplizierte_funkt": 276, "endeffekt": 276, "zusammenzuzaehlen": 276, "tarnt": 276, "vergeblich": 276, "komplexitaet": 276, "zahl_als_str": 276, "bledsinn": 276, "try_no": 276, "blahblahblah": 276, "cxyxyyyyxi": 276, "table_str": 276, "table_dict": 276, "139769175732912": 276, "139769175738624": 276, "satan_str": 276, "satan_int": 276, "result_of_print": 276, "result_of_evald_print": 276, "code_str": [276, 286], "compiled_cod": 276, "woswasi": [276, 283], "0x7f1e91eb42f0": 276, "philipp": [276, 283, 286, 304, 311, 325, 343, 353, 550, 625, 696, 709, 734, 736, 1198, 1200, 1204, 1206, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "lastnma": 276, "0x7f1e8c0fe2e0": 276, "__abs__": [276, 283, 301, 365], "__and__": [276, 283, 343, 365, 1127], "__bool__": [276, 283, 301, 365], "__ceil__": [276, 283, 301, 365], "__divmod__": [276, 283, 301, 365], "__float__": [276, 283, 301, 325, 365], "__floor__": [276, 283, 301, 365], "__floordiv__": [276, 283, 301, 365, 1127], "__getnewargs__": [276, 279, 283, 301, 325, 365], "__index__": [276, 283, 365], "__int__": [276, 283, 301, 325, 342, 365], "__invert__": [276, 283, 365], "__lshift__": [276, 283, 365, 1127], "__mod__": [276, 279, 283, 301, 325, 365, 1127], "__mul__": [276, 279, 283, 301, 325, 365, 1127], "__neg__": [276, 283, 301, 365], "__or__": [276, 283, 343, 365, 1127], "__pos__": [276, 283, 301, 365], "__pow__": [276, 283, 301, 365, 1127], "__rand__": [276, 283, 343, 365], "__rdivmod__": [276, 283, 301, 365], "__rfloordiv__": [276, 283, 301, 365], "__rlshift__": [276, 283, 365], "__rmod__": [276, 279, 283, 301, 325, 365], "__rmul__": [276, 279, 283, 301, 325, 365], "__ror__": [276, 283, 343, 365], "__round__": [276, 283, 301, 365], "__rpow__": [276, 283, 301, 365], "__rrshift__": [276, 283, 365, 1127], "__rshift__": [276, 283, 365, 1127], "__rsub__": [276, 283, 301, 343, 347, 365, 1127], "__rtruediv__": [276, 283, 301, 365], "__rxor__": [276, 283, 343, 365], "__sub__": [276, 283, 301, 343, 347, 365, 1127], "__truediv__": [276, 283, 301, 365, 1127], "__trunc__": [276, 283, 301, 365], "__xor__": [276, 283, 343, 365, 1127], "as_integer_ratio": [276, 283, 301, 365], "bit_length": [276, 283, 365], "conjug": [276, 283, 301, 365], "denomin": [276, 283, 365], "from_byt": [276, 283, 365], "to_byt": [276, 283, 365], "0x7f1e8c0b3130": 276, "int_list": 276, "0x7f1e8c0fe340": 276, "0x7f1e8c0fe760": 276, "u1": 276, "u2": 276, "type_of_us": 276, "scrambl": 276, "hansj\u00f6rg": [276, 512], "gr\u00f6jsnah": 276, "class_str": 276, "1997": [276, 286, 1066, 1133, 1198, 1200, 1204, 1206], "0x7f1e8c1c2e50": 276, "joleckmi": 276, "cmdline": 277, "excess": [277, 461], "provocantli": [277, 1263], "pybai": [277, 346, 1208], "suchzeit": 278, "everywher": [278, 293, 491, 506, 516, 755, 996, 1058, 1146], "d_as_str": 279, "received_d": 279, "1939": 279, "145415": 279, "bytes_or_buff": [279, 325], "strict": [279, 299, 325, 343, 547, 561, 568, 582, 1157, 1237], "__contains__": [279, 325, 343], "format_spec": [279, 304, 325], "getattr": [279, 283, 304, 325, 1121], "__getitem__": [279, 325, 1228, 1230], "__iter__": [279, 325, 343, 1112], "__len__": [279, 325, 343], "casefold": [279, 325], "caseless": [279, 325], "fillchar": [279, 325], "pad": [279, 325, 1153], "occurr": [279, 325, 435], "codec": [279, 286, 289, 325, 331, 347, 353, 359, 1221], "unicodeencodeerror": [279, 286, 289, 304, 325, 331, 347, 1107, 1221], "xmlcharrefreplac": [279, 325], "register_error": [279, 325], "suffix": [279, 325, 529], "expandtab": [279, 304, 325, 353], "tabsiz": [279, 325], "lowest": [279, 325, 455, 461, 1069, 1070, 1158], "format_map": [279, 325], "isalnum": [279, 325, 365, 1154], "alphabet": [279, 325, 435, 490, 512, 875, 1221], "isascii": [279, 325], "007f": [279, 325], "isdecim": [279, 325], "iskeyword": [279, 289, 325], "isnumer": [279, 325], "isprint": [279, 325, 435, 463], "printabl": [279, 325, 435, 1107], "istitl": [279, 325], "uncas": [279, 325], "pq": [279, 325], "ljust": [279, 325], "removeprefix": [279, 325], "removesuffix": [279, 325], "rindex": [279, 325, 1154], "rpartit": [279, 325], "discard": [279, 325, 343, 494, 528, 660, 704, 835, 873, 874], "splitlin": [279, 325], "keepend": [279, 325], "swapcas": [279, 325], "titlecas": [279, 325], "lookuperror": [279, 304, 325, 1107], "untouch": [279, 325, 984], "zfill": [279, 325], "maketran": [279, 325], "numerischen": 279, "ecma": 279, "3rd": [279, 943], "interchang": [279, 722, 751, 1221], "marshal": 279, "pickl": [279, 283], "simplejson": 279, "foo": [279, 311, 321, 325, 343, 347, 353, 359, 365, 369, 529, 620, 747, 748, 751, 768, 809, 815, 1107, 1148], "baz": 279, "u1234": 279, "sort_kei": 279, "getvalu": 279, "compact": [279, 461], "mydict": 279, "obj": [279, 304, 347, 359, 588, 952, 953, 961, 1121, 1129, 1228, 1230], "x08ar": 279, "as_complex": 279, "dct": 279, "__complex__": 279, "object_hook": 279, "2j": 279, "parse_float": 279, "encode_complex": 279, "serializ": 279, "1j": 279, "jsonencod": 279, "iterencod": 279, "scanner": [279, 1066], "jsondecodeerror": 279, "jsondecod": 279, "msg": [279, 292, 353, 365, 446, 551, 554, 724, 839, 1041, 1073, 1080, 1103, 1106, 1107], "unformat": 279, "lineno": [279, 286, 353], "colno": 279, "delattr": [279, 283, 304], "setattr": [279, 283, 304, 1121], "__setstate__": [279, 283], "with_traceback": [279, 283], "tb": [279, 283, 359], "__traceback__": [279, 283], "__cause__": [279, 283], "__context__": [279, 283], "__suppress_context__": [279, 283], "parse_int": 279, "parse_const": 279, "object_pairs_hook": 279, "nan": [279, 311, 848, 1213, 1225], "num_str": 279, "_w": 279, "0x7f99fff1bb70": 279, "raw_decod": 279, "extran": 279, "skipkei": 279, "ensure_ascii": 279, "check_circular": 279, "allow_nan": 279, "recogn": [279, 529, 675, 934, 937, 1259], "sensibl": 279, "circular": 279, "recursionerror": [279, 304, 1107], "compliant": [279, 1120], "item_separ": 279, "key_separ": 279, "_one_shot": 279, "chunk": [279, 404, 491, 978, 1031, 1210, 1221], "bigobject": 279, "mysocket": 279, "fp": 279, "inf": 279, "complianc": 279, "ippolito": 279, "redivi": 279, "140299267714496": 279, "140299267930496": 279, "schweissparameter_aussi": 279, "strom_ma": 279, "200004": 279, "spannung_v": 279, "aufs_kabel": 279, "maschine_112": 279, "vom_kabel": 279, "schweissparameter_eini": 279, "strom_a": 279, "hal": 279, "2c445fb3": 279, "6ca4": 279, "b9d9": 279, "7cfbbff55326": 279, "doesnt_exist": 279, "_a666": 279, "140299402960464": 279, "0b10000000000000000000000000000000000000000000000000000000000000000": [279, 283, 304, 321, 359, 365, 369], "140299327492352": 279, "func_fals": 279, "func_tru": 279, "sex_opt": 279, "140298898107648": 279, "t_mit_einem_el": 279, "supi": 279, "squares_map": 279, "squares_set": 279, "numtri": 279, "even_numb": [279, 343], "mississppi": 279, "xxxx": 279, "nbin": [279, 286, 311, 325, 347], "ndaemon": [279, 286, 311, 325, 347], "nadm": [279, 286, 311, 325, 347, 359, 365], "nlp": [279, 286, 311, 325, 347, 359, 365], "nsync": [279, 286, 311, 325, 347, 359, 365], "nshutdown": [279, 286, 311, 325, 347, 359, 365], "nhalt": [279, 286, 311, 325, 347, 359, 365], "nmail": [279, 286, 311, 325, 347, 359, 365], "noper": [279, 286, 311, 325, 347, 359, 365], "ngame": [279, 286, 311, 325, 347, 359, 365], "nftp": [279, 286, 311, 325, 347, 359, 365], "nnobodi": [279, 286, 311, 325, 347, 359, 365], "napach": [279, 286, 311, 325, 347, 359, 365], "nsystemd": [279, 286, 311, 325, 347, 359, 365], "ntss": [279, 286, 311, 325, 347, 359, 365], "ndbu": [279, 286, 311, 325, 347, 359, 365], "npolkitd": [279, 286, 311, 325, 347, 359, 365], "navahi": [279, 286, 311, 325, 347, 359, 365], "nunbound": [279, 286, 311, 325, 347, 359, 365], "ndnsmasq": [279, 286, 311, 325, 347, 359, 365], "nnm": [279, 286, 311, 325, 347, 359, 365], "nusbmuxd": [279, 286, 311, 325, 347, 359, 365], "ngluster": [279, 286, 311, 325, 347, 359, 365], "nrtkit": [279, 286, 311, 325, 347, 359, 365], "npipewir": [279, 286, 311, 325, 347, 359, 365], "ngeoclu": [279, 286, 311, 325, 347, 359, 365], "nchroni": [279, 286, 311, 325, 347, 359, 365], "nsaslauth": [279, 286, 311, 325, 347, 359, 365], "nradvd": [279, 286], "nrpc": [279, 286, 311, 325, 347, 359, 365], "nqemu": [279, 286, 311, 325, 347, 359, 365], "nopenvpn": [279, 286, 311, 325, 347, 359, 365], "ncolord": [279, 286, 311, 325, 347, 359, 365, 1021], "nrpcuser": [279, 286, 311, 325, 347, 359, 365], "nabrt": [279, 286, 311, 325, 347, 359, 365], "nflatpak": [279, 286, 311, 325, 347, 359, 365], "ngdm": [279, 286, 311, 325, 347, 359, 365], "ngnome": [279, 286, 311, 325, 347, 359, 365], "nvboxadd": [279, 286, 311, 325, 347, 359, 365], "nsshd": [279, 286, 311, 325, 347, 359, 365], "ntcpdump": [279, 286, 311, 325, 347, 359, 365], "njfasch": [279, 286, 311, 325, 347, 359, 365], "nmosquitto": [279, 286, 311, 325, 347, 359], "nsomeon": [279, 286], "move_to_end": 279, "thermometera": 279, "thermometerb": 279, "get_average_temperatur": 279, "th_list": 279, "ipykernel_9164": 279, "859664274": 279, "2942790015": 279, "0x7fac83797be0": 279, "basisklass": 279, "level2_1": 279, "l21": 279, "level2_2": 279, "level3": 279, "jedi": 279, "blueey": 279, "droid": 279, "r2d2": 279, "derivednoctor": 279, "dnoctor": 279, "derivedctorcallingsup": 279, "derivedctorcallingbasector": 279, "__firstnam": 279, "__lastnam": 279, "_user__firstnam": 279, "_user__lastnam": 279, "lightsab": 279, "padawan": 279, "arithmeticerror": [279, 304, 1107], "waaah": 279, "abgebrannt": 279, "puh": 279, "intakt": 279, "is_even": [279, 283, 353, 359, 759, 766], "0x7fac81f52df0": 279, "0x7fac81cb5700": 279, "progamm": 279, "tumpfback": 279, "och": 279, "umpfback": 279, "rt": [279, 986, 996], "wholefil": 279, "notepad": 280, "betreiben": [280, 1264], "unterschiedlichen": 280, "sinnvol": 280, "umgebungen": 280, "unausweichlich": 280, "installationsverzeichni": 280, "verzeichniss": 280, "ausf\u00fchren": 280, "hernimmt": 280, "erfahrung": 280, "wei\u00df": 280, "ordereddict": 281, "__mro__": 281, "udemi": 281, "successor": [282, 455], "repeatedli": [282, 381, 705, 1220], "kantenlaeng": 283, "ipykernel_101004": 283, "2437887948": 283, "0x10": [283, 286, 369, 544], "0b1111111111111111111111111111111111111111111111111111111111111111": [283, 304, 321, 325, 353, 359, 365, 369], "1267650600228229401496703205381": 283, "735611673": 283, "ndigit": [283, 304, 353, 369, 434], "0b101": 283, "0b100": [283, 286], "register_statu": 283, "0b1001000": 283, "0b00001000": 283, "strom": [283, 353], "liegt_strom_an": 283, "0b00111110": 283, "ever": [283, 343, 510, 529, 544, 570, 870, 936, 1066, 1138, 1258], "deadbeef": [283, 607, 930], "doktor": 283, "jawui": 283, "akademik": 283, "ndef": [283, 353], "tdef": [283, 304], "geh": 283, "hochkomplex": [283, 359], "verendet": 283, "euler": 283, "sche": 283, "dokumentiern": 283, "koennt": 283, "varianc": 283, "fmean": 283, "geometric_mean": 283, "harmonic_mean": 283, "harmon": 283, "median": 283, "median_low": 283, "median_high": 283, "median_group": 283, "50th": 283, "percentil": 283, "multimod": 283, "quantil": 283, "centr": 283, "nearest": [283, 573, 1215], "doctest": 283, "ellipsi": [283, 304], "8333333333": 283, "8333": 283, "spread": 283, "pvarianc": 283, "pstdev": 283, "stdev": [283, 1069, 1071], "38961843444": 283, "recalcul": 283, "statisticserror": 283, "normaldist": 283, "x1": 283, "jointli": 283, "rescal": 283, "perhap": [283, 953, 1216], "cdf": 283, "cumul": [283, 504], "inv_cdf": 283, "coeffici": 283, "ovl": 283, "agreement": 283, "densiti": 283, "8035050657330205": 283, "dx": 283, "quartil": 283, "decil": 283, "zscore": 283, "score": 283, "from_sampl": 283, "readonli": 283, "dataset": [283, 1211, 1213, 1226, 1229, 1230, 1232], "subcontrari": 283, "reciproc": 283, "quantiti": [283, 315, 1215], "earn": 283, "5625": 283, "midpoint": 283, "estim": 283, "nomin": 283, "taught": [283, 801, 1266, 1278], "aabbbbbbbbcc": 283, "aabbbbccddddeeffffgg": 283, "986893273527251": 283, "0th": 283, "100th": 283, "xbar": 283, "0810874155219827": 283, "3720238095238095": 283, "01875": 283, "gesamter_gruss": 283, "excelsheet": 283, "hinters": 283, "gabali": 283, "helen": 283, "fischer": 283, "sssklndkfgv": 283, "fosvh": 283, "worl": [283, 286, 1145], "lowr": 283, "dlrow": [283, 1145], "olleh": [283, 1145], "even_numbers_fun": 283, "even_numbers_gen": 283, "evennum": 283, "even_filt": 283, "tausend": 283, "1234250497": [283, 286, 289, 292, 550, 557, 709], "1234250597": 283, "users_json_str": 283, "liest": 283, "kontrah": 283, "verwandelt": 283, "gelesenes_ding_wieder_als_dict": 283, "schatz": 283, "erich": 283, "koxi": 283, "hatkeinenwert": 283, "fn": [283, 495, 512, 797, 1232], "ul": [283, 449], "ln": [283, 495], "einschub": 284, "filterketten": 284, "datensatz": 284, "letzten": 284, "recapitul": 285, "naeherungsverfahren": 286, "addieren": 286, "140606563548752": 286, "wirklich": 286, "0o10": 286, "teilbar": 286, "00001": 286, "abd": [286, 674], "i1": [286, 321], "140606428182128": 286, "140606428182896": 286, "2345010101": 286, "elizabeth": [286, 1198, 1200, 1204, 1206, 1216], "1901": 286, "evi": 286, "maxim": [286, 510, 937], "wuerfeln": [286, 370], "freuen": 286, "sechser": 286, "faellt": 286, "jammern": 286, "versuch_numm": 286, "versuchen": 286, "jammert": 286, "hlo": [286, 1145], "output_list": [286, 1191], "nullt": 286, "34567654567": 286, "gsd": 286, "another_t": 286, "symmetisch": 286, "netzwerkkommunik": 286, "request_to_send": 286, "request_str_to_send": 286, "1651046407": 286, "3633313": 286, "cabl": [286, 861], "request_str_from_c": 286, "request_from_c": 286, "1651046335": 286, "8477345": 286, "139909434561408": 286, "139909544402512": 286, "139909544402544": 286, "139909543772528": 286, "139909433666288": 286, "roo": [286, 325, 922], "xf6": [286, 289, 331, 1139, 1221], "joerg_latin": 286, "xf6rg": [286, 289, 331, 343, 347, 1221], "j\u0456rg": [286, 289, 331, 347, 1221], "cyclic": 288, "140616191009600": 289, "140616191012720": 289, "140116274372176": 289, "0x7f6f5cc2de50": 289, "0x7f6f5cc2df30": 289, "18446744073709551617": 289, "multi_dict": 289, "ipykernel_189565": 289, "1743780635": 289, "140115753096128": 289, "ntri": 289, "bytes_joerg": 289, "bytes_joerg_iso_latin_1": 289, "bytes_joerg_utf_32": 289, "xff": [289, 331, 347], "xfe": [289, 331, 347], "x00": [289, 331, 347, 934], "x00j": [289, 331], "x00r": [289, 331], "x00g": [289, 331], "bytes_joerg_utf_16": 289, "xfej": 289, "bytes_joerg_utf_8": 289, "xc3": [289, 325, 331, 347, 1083, 1139, 1221], "xb6rg": [289, 325, 331, 347, 1221], "iso_latin_1": 289, "russian": 289, "bytes_received_by_russian": 289, "2435": 289, "010d": 289, "0000000666": 289, "ssi": 289, "garbag": [289, 505, 512, 548, 820, 845, 937, 1032, 1105], "ipykernel_4000": 289, "3227798639": 289, "ahja": 289, "24000": 289, "24500": 289, "25000": 289, "25500": 289, "26000": 289, "26500": 289, "__del__": 289, "whe": 289, "13397": 289, "116985": 289, "120725": 289, "118110": 289, "0x7fe3a392aa30": 289, "test_person_bas": 291, "vorgehen": [291, 1264, 1276], "pluggi": [291, 309, 1197, 1241], "rootdir": [291, 309, 984, 1197, 1241], "test_persondb_bas": 291, "test_pytest_demo": 291, "xfail": [291, 1241], "test_persondb": 291, "test_duplicate_svnr": 291, "test_update_sunnycas": 291, "test_update_notexist": 291, "test_update_exact_dupl": 291, "former": [291, 1148], "persondb": 291, "sqlite": [291, 519, 521, 522, 1165, 1217], "elementtre": [291, 1223], "etre": [291, 1223, 1280], "ics_demand": 291, "maco": [291, 404, 409], "woe": 291, "homebrew": 291, "brew": 291, "flaviocop": 291, "str_mit_666": 292, "140240419976192": 292, "140240419593568": 292, "aclass": 292, "almostempti": 292, "beenther": 292, "kuckucksei": 292, "chirp": 292, "some_bullshit": 292, "bad_thing_happen": 292, "do_some_bullshit": 292, "boah": [292, 353], "python_cod": 292, "a_global_vari": 292, "globale_vari": 292, "140240513015376": 292, "140240513014256": 292, "140240419270768": 292, "140240419271792": 292, "storesanintegerandmodifiesit": 292, "the_int": 292, "my_int": 292, "saiami": 292, "storesalistandmodifiesit": 292, "the_list": 292, "append_someth": 292, "salami": 292, "compute_squar": 292, "satanicerror": 292, "jess": 292, "invalidsvnr": 292, "rex_lin": 292, "json_str": [292, 1205], "python_l": 292, "0x7f8c0551f490": 292, "behandlung": 294, "kurzer": 294, "reicht": 294, "unwichtig": 294, "weggelassen": 294, "\u00fc": [294, 1221], "jeden": 294, "teilnehmer\u00fcbung": 294, "kernsprach": 294, "rvalu": [294, 316, 356, 381, 382, 383, 384, 385, 387, 651, 798, 801, 810, 831, 835, 845, 846, 847, 1257, 1258, 1260], "constexpr": [294, 295, 296, 316, 318, 356, 381, 387, 762, 765, 797, 798, 825, 835, 1258], "uniform": [162, 294, 295, 296, 298, 355, 374, 381, 383, 384, 510, 550, 652, 683, 703, 705, 798, 800, 801, 834, 1120, 1258], "initialisierung": 294, "infer": 294, "speichermodel": 294, "atomar": [294, 1256], "standardbibliothek": 294, "regu\u00e4r": 294, "trait": 294, "zufallszahlen": 294, "zeitbibliothek": 294, "referenz": 294, "sprachsyntax": 294, "deduct": [294, 749], "erweiterungen": 294, "ge\u00e4ndert": 294, "definitionen": 294, "bibliothek": 294, "zusatzvari": 294, "constinit": [294, 798], "modularisierung": [294, 405, 1255], "versionierung": 294, "routinen": 294, "synchronisierung": 294, "kalend": 294, "zeitzonen": 294, "zus\u00e4tz": 294, "chrono": [294, 295, 296, 298, 307, 355, 374, 375, 383, 385, 554, 765, 798, 800, 821, 822, 823, 847], "initializer_list": [295, 296, 298, 355, 356, 381, 551, 552, 579, 580, 754, 800, 801], "handwrit": [295, 296, 298, 355, 374, 842], "weak_ptr": [295, 296, 298, 355, 356, 374, 375, 381, 383, 384, 842], "boilerpl": [295, 296, 298, 334, 350, 355, 356, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 542, 802, 803, 846, 1085, 1261], "condition_vari": [295, 296, 298, 307, 355, 374, 375, 383, 385, 823, 1258], "emplace_back": [295, 296, 683], "cref": [295, 296], "interoper": [296, 298, 316, 318], "wazoo": [296, 298, 316, 318], "anviron": [296, 298], "submodul": [296, 298, 605, 667], "chdir": [296, 298, 359], "dummy_suit": 296, "sticki": [297, 306, 307, 327, 328, 371, 372, 404, 409, 886], "insod": 298, "lvalu": [298, 355, 356, 374, 375, 381, 382, 383, 384, 810, 811, 814, 835, 846], "afterword": [298, 355, 356, 374, 381, 382, 383, 384, 811], "ain": [298, 510, 1135], "singleton": [299, 359, 374, 381, 547, 548, 555, 568, 582, 1259], "inflex": [299, 430, 547, 561, 568, 574, 575, 582], "serverthread": [299, 572, 586], "my_si": [301, 1115], "function_returns_two_valu": 301, "140134238766608": 301, "sizeof": [301, 434, 444, 455, 476, 483, 484, 488, 491, 631, 643, 655, 682, 747, 750, 849, 931, 1017, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1041, 1043, 1067, 1073, 1080, 1147], "__getformat__": 301, "__setformat__": 301, "fromhex": 301, "0b0010": 301, "0b1001": 301, "key_list": 301, "key_tupl": 301, "evil_list": 301, "evil_list_2": 301, "neinem": 301, "nviel": 301, "doze_path": [301, 304], "compiled_regex": 301, "l_json": 301, "l_json_sent": 301, "received_data": 301, "0x7f73869f06c0": 301, "create_avg_item": 301, "ninetynin": 301, "koppel": 303, "netzwerk": [303, 405], "condens": [303, 358, 511], "nprint": 304, "noption": 304, "nfile": 304, "nsep": 304, "nend": 304, "nflush": 304, "forcibli": 304, "didact": [304, 422, 424, 666, 668, 669, 1259], "fullnam": [304, 311, 1124, 1128], "nerst": 304, "nzweit": [304, 359, 399], "andere_list": 304, "neue_list": 304, "140323934455312": 304, "140323934455344": 304, "140323934455376": 304, "140323852147712": 304, "140323933649904": 304, "140323833601584": 304, "frozenset": [304, 321, 342], "__builtins__": [304, 325, 359, 1108], "gr\u00fc\u00df": 304, "nocheinprogramm": 304, "ocheinprogramm": 304, "dfghgfdfghj": 304, "jhghgh": 304, "matchstr": 304, "compiled_match": 304, "tprint": 304, "num_ss": 304, "isi": [304, 369, 609, 625, 1225], "strippeditem": 304, "yet_another_d": 304, "s3": [304, 311, 569, 839], "s4": 304, "isdisjoint": [304, 311, 343, 1157], "nnoteworthi": 304, "nil": 304, "__package__": [304, 397, 1108], "__loader__": [304, 397, 1108], "__spec__": [304, 397, 1108], "modulespec": 304, "loader": [304, 500, 543, 545, 1083, 1101], "__build_class__": 304, "__import__": 304, "dont_inherit": 304, "_feature_vers": 304, "divmod": 304, "raw_input": 304, "ipkernel": 304, "ipythonkernel": 304, "0x7f9fb16abcd0": 304, "class_or_tupl": 304, "aiter": 304, "async_iter": 304, "min": [304, 780, 941, 1213], "anext": 304, "oct": [304, 913, 934, 937], "pow": [304, 660, 750], "exp": [304, 584], "notimpl": [304, 343, 347, 365, 1127], "memoryview": 304, "__debug__": 304, "stopasynciter": [304, 1107], "generatorexit": [304, 1107], "keyboardinterrupt": [304, 320, 1107], "importerror": [304, 1107], "modulenotfounderror": [304, 309, 1107], "environmenterror": [304, 1236], "ioerror": [304, 1242], "eoferror": [304, 1107], "unboundlocalerror": [304, 1107], "indentationerror": [304, 1107], "taberror": [304, 1107], "unicodeerror": [304, 1107], "unicodedecodeerror": [304, 347, 353, 359, 1107], "unicodetranslateerror": [304, 1107], "floatingpointerror": [304, 1107], "overflowerror": [304, 1107], "systemerror": [304, 1107], "referenceerror": [304, 1107], "memoryerror": [304, 1107], "buffererror": [304, 1107], "userwarn": [304, 1107], "encodingwarn": [304, 1107], "deprecationwarn": [304, 1107], "pendingdeprecationwarn": [304, 1107], "runtimewarn": [304, 1107], "futurewarn": [304, 1107, 1225], "importwarn": [304, 1107], "unicodewarn": [304, 1107], "byteswarn": [304, 1107], "resourcewarn": [304, 1107], "connectionerror": [304, 1107], "blockingioerror": [304, 1107], "brokenpipeerror": [304, 1107], "childprocesserror": [304, 1107], "connectionabortederror": [304, 1107], "connectionrefusederror": [304, 1107], "connectionreseterror": [304, 1107], "fileexistserror": [304, 1107], "isadirectoryerror": [304, 1107], "notadirectoryerror": [304, 1107], "interruptederror": [304, 1107], "processlookuperror": [304, 1107], "timeouterror": [304, 1107], "closefd": 304, "beopen": 304, "1995": [304, 558, 1198, 1200, 1204, 1206], "nation": [304, 934], "1991": [304, 1133], "sticht": 304, "centrum": 304, "amsterdam": [304, 1133], "credit": [304, 955, 1134], "cwi": 304, "cnri": 304, "zope": 304, "cast": [304, 381, 455, 631, 739, 745, 943], "execfil": 304, "_pydev_imp": 304, "_pydev_execfil": 304, "glob": [304, 487, 824, 920, 1053, 1103, 1118, 1248], "runfil": 304, "_pydev_bundl": 304, "pydev_umd": 304, "wdir": 304, "__ipython__": 304, "exclud": [304, 506, 653], "transient": 304, "display_id": 304, "get_ipython": 304, "interactiveshel": 304, "zmqshell": 304, "zmqinteractiveshel": 304, "0x7f9fb1516200": 304, "config_fil": 304, "srcdir": 304, "dstdir": 304, "dst": [304, 450, 500, 609, 650, 668, 677, 678, 684, 1158], "045": [307, 353], "untrust": 307, "lan": 307, "programmat": [307, 576, 928, 936, 1061, 1082, 1233], "stty": 307, "termio": 307, "ioctl_tti": 307, "setseri": 307, "tty": [307, 861, 918, 1067, 1073, 1098], "tty_io": 307, "bidirection": 307, "nake": 307, "tiocgseri": 307, "tiocsseri": 307, "async_low_lat": 307, "cfmakeraw": 307, "ttyusb0": [307, 861], "low_lat": 307, "serial_struct": 307, "bidir": 307, "advantec": 307, "nonetheless": [307, 310, 313, 342, 759, 1248], "mycat": 307, "mimick": [307, 844, 1271], "make_realtim": 307, "interfaceri": 307, "cif": [307, 359], "samba": [307, 359], "automationadmin": 307, "gsc": 307, "pd": [308, 309, 311, 315, 343, 512, 1211, 1213, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "read_csv": [308, 309, 315, 343, 347, 353, 365, 512, 1211, 1213], "txn": 308, "iso8859": 308, "time_book": [308, 309, 512], "time_valuta": [308, 309, 512], "at66666666666666": 308, "bezahlung": [308, 309, 311, 512], "kart": [308, 309, 311, 512], "eur": [308, 309, 512], "95111243": [308, 512], "abbuchung": [308, 512], "onlinebank": [308, 512], "gutschrift": 308, "000000144919": 308, "339099446722187": 308, "000": [308, 343, 347, 353, 512, 890, 928], "card_pay": 308, "filt": 308, "9325008697": 308, "339099446790254": 308, "og": [308, 500], "237811001182": 308, "auszahlung": 308, "200075787001": 308, "tzb": 308, "anl": 308, "347159strom": 308, "200004871820": 308, "200004876265": 308, "200004848862": 308, "200004871863": 308, "dauerauftrag": 308, "qsnng6xau": 308, "00121672661": 308, "120016487112": [308, 512], "bx": 308, "000009219": 308, "entgelt": 308, "nichtdurchf\u00fchrung": 308, "032300005522384": 308, "saldo": 308, "messtechnik": 308, "602674240071": 308, "0004325259000023": 308, "oeamtc": 308, "mitgliedschaft": 308, "re_liv": 308, "billa": [308, 311, 512], "rew": 308, "dankt": [308, 309, 311, 512], "datafram": [309, 310, 311, 313, 317, 320, 342, 347, 363, 367, 368, 512, 1211, 1214, 1225, 1227, 1228, 1229, 1231, 1232], "pipe_stag": 309, "max_colwidth": 309, "max_column": 309, "max_row": 309, "homebrain": [309, 321, 532, 913, 914], "039": 309, "consolut": 309, "insuffici": [309, 373, 808], "categor": [309, 511, 1215], "fuction": 309, "filt_uncat": 309, "uncat_row": 309, "unspecif": [309, 415, 961], "useless": [309, 810, 816, 875, 922, 1055, 1129], "food": [309, 315], "luxuri": 309, "categorize_card_pay": 309, "jet": 309, "uncertainti": 309, "categorize_v1": 309, "categorize_v2": 309, "secondari": [309, 848], "test_categori": [309, 512], "test_bas": [309, 1197], "000009258": 309, "k002": [309, 512], "iloc": [310, 311, 313, 315, 317, 342, 347, 363, 367, 368, 512, 1226, 1229, 1231], "impos": [310, 313], "hurt": [310, 313, 387, 449], "strength": [310, 313, 476, 1278], "overengin": [310, 313, 384, 449, 510, 511, 1259], "140480285361680": 311, "0xffffffffffffffff": [311, 331, 347], "0x10000000000000000": [311, 331, 347], "140479638276224": 311, "140480203220736": 311, "140480210406176": 311, "7940943354778932823": 311, "0x7fc4189e7c90": 311, "28800": 311, "237988": 311, "produce_dai": 311, "374557": 311, "l_mal_2": 311, "140480285361712": 311, "140479638477760": 311, "140479638427520": 311, "l4": 311, "l5": 311, "140480202528192": 311, "140479638428736": 311, "140480203212992": 311, "l6": 311, "140479598069936": 311, "is_old": 311, "ipykernel_370861": 311, "4290492544": 311, "abc123": [311, 365], "0x7fc4189e5030": 311, "yyi": [311, 353, 365], "lichtenberg": [311, 550, 709, 734, 736, 1198, 1200, 1204, 1206, 1225, 1226, 1227, 1228, 1230, 1231, 1232], "persons2": [311, 1225, 1226], "set_index": [311, 1230], "sort_valu": 311, "inplac": [311, 315, 525, 1012, 1226], "flt": [311, 1227], "isin": [311, 1227], "reset_index": 311, "dropna": 311, "value_count": [311, 315], "int64": [311, 315, 1232], "conversiosn": 312, "9am": 313, "woven": [313, 317, 384], "pipelin": [313, 422, 855, 871, 874, 875, 925, 1006, 1096], "accountid": 315, "accountdescript": 315, "accountparentid": 315, "storeid": 315, "storedescript": 315, "locationid": 315, "locationdescript": 315, "productid": 315, "productdescript": 315, "sales_managerid": 315, "dateyear": 315, "datequart": 315, "datemonth": 315, "datedai": 315, "categoryvers": 315, "categorycategori": 315, "categorytyp": 315, "valueunit": 315, "original_sales_pric": 315, "sale": [315, 387], "st43": 315, "franchescini": 315, "ct14": 315, "salem": 315, "pd23": 315, "ipa": 315, "sm1": 315, "20144": 315, "201412": 315, "1779": 315, "763910": 315, "usd": 315, "st35": 315, "pd2": 315, "pepsi": 315, "sm4": 315, "201410": 315, "957113": 315, "st98": 315, "walter": 315, "pd24": 315, "amber": 315, "20142": 315, "201406": 315, "449395": 315, "st188": 315, "arrowhead": 315, "ct1": 315, "pd19": 315, "sm8": 315, "20164": 315, "201611": 315, "078689": 315, "st107": 315, "spire": 315, "ct5": 315, "san": [315, 1066], "jose": 315, "pd15": 315, "juic": 315, "sm5": 315, "20154": 315, "201512": 315, "303679": 315, "quantity_sold": 315, "sold": 315, "st4": 315, "gstore": 315, "ct13": 315, "portland": 315, "pd26": 315, "wine": 315, "000000": [315, 1213], "1069": 315, "st49": 315, "bai": 315, "depot": 315, "ct4": 315, "sacramento": 315, "pd27": 315, "20151": 315, "201501": 315, "592904": 315, "discount": [315, 1066], "st36": 315, "pricelow": 315, "arena": [315, 781, 783], "ct10": 315, "reno": 315, "pd22": 315, "sm3": 315, "20162": 315, "201605": 315, "4351": 315, "045830": 315, "1071": 315, "st7": 315, "street": [315, 897], "pd16": 315, "7905": 315, "590606": 315, "pd12": 315, "lemonad": 315, "20153": 315, "201507": 315, "1073": 315, "modified_model": 315, "sales_managerdescript": 315, "janet": 315, "buri": 315, "nanci": 315, "miller": 315, "setp": 315, "nan_field": 315, "bitfield": 315, "bitfi": 315, "nan_column": 315, "gabriel": [315, 809], "walton": 315, "carl": 315, "jjjjj": 315, "ref_t": 315, "datetime64": 315, "damn": [315, 529], "ref_2015_12_04": 315, "flt_before_2015_12_04": 315, "rows_before_2015_12_04": 315, "st119": 315, "ct2": 315, "francisco": 315, "pd11": 315, "orang": [315, 529, 1150], "pulp": 315, "sm7": 315, "kiran": 315, "raj": [315, 1066], "201503": 315, "226847": 315, "13627": 315, "793342": 315, "3427": 315, "896898": 315, "15569": 315, "353983": 315, "float64": [315, 347, 353, 365, 1213], "1957": 315, "740301": 315, "572676": 315, "686587": 315, "289381": 315, "flt_product_pd2": 315, "flt_2015": 315, "flt_only_sold": 315, "flt_combin": 315, "st139": 315, "farlo": 315, "ct15": 315, "eugen": 315, "sm11": 315, "jame": 315, "frank": 315, "201511": 315, "st178": 315, "rai": 315, "ct8": 315, "beverli": 315, "hill": 315, "201508": 315, "facet": [316, 318, 382, 703], "rich": [316, 318, 1226, 1281], "toolset": [316, 318, 742], "conceptu": [316, 318, 501, 955, 961, 1015], "undergon": [316, 318], "revolut": [316, 318], "odr": [316, 809], "explor": [316, 764, 936, 1269], "rodata": [316, 762, 1101], "unspecifi": [316, 421, 455, 562, 634, 1080, 1081], "bookkeep": [317, 511], "fewer": 317, "augment": [317, 984, 1280], "test_blah": 317, "monkeypatch": [317, 319, 320, 335, 341, 342, 345], "contextlib": 317, "chatgpt": 318, "ludwig": 318, "registri": [318, 615], "memleak": 318, "jason": [319, 320, 341, 767], "brownle": [319, 320, 341], "contriv": [319, 320, 341, 375, 553, 1108, 1143], "subthread": [319, 320], "introductori": [319, 320, 341, 346, 1036, 1214, 1215, 1258, 1269], "mindset": [319, 320, 341, 345, 373, 984], "develp": 319, "10am": 320, "reopen": 320, "drei_millionen_int": 321, "3_000_000": 321, "odd_numb": [321, 1112], "odd_numbers_func": 321, "ret_num": 321, "0x7f32ccc4c610": 321, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [321, 369, 399], "139855258515840": 321, "139856078033344": 321, "139856078226432": 321, "139856160540176": 321, "i3": 321, "i4": 321, "nope": [321, 1061], "0101010101010": 321, "bash_logout": [321, 913], "bash_profil": [321, 913], "thunderbird": [321, 359, 893, 913], "gnupg": [321, 359, 913], "hst": 321, "gitconfig": [321, 913], "pki": [321, 359, 913], "daham": 321, "20230403": 321, "222915": 321, "bash_histori": [321, 913], "python_histori": [321, 913], "lesshst": [321, 913], "139855258795072": 321, "139855260513728": 321, "139856085569920": 321, "doppelt": 321, "gemoppelt": 321, "trag": 321, "exakt": 321, "paarweis": 321, "read_lines_of_fil": 321, "0x7f32c7d8d390": 321, "nohead": [324, 1203, 1204, 1206], "userdb_csv": [324, 1204, 1205, 1206], "interleav": [324, 524], "dosometh": 325, "0x7fe7fbf80df0": 325, "140634424624656": 325, "140634424623536": 325, "0o644": 325, "0b01110101": 325, "setting_blah": 325, "setting_foo": 325, "config_context": 325, "140634341074320": 325, "140634424624688": 325, "140634341076688": 325, "140634341077776": 325, "140634343012864": 325, "140634341099856": 325, "ipykernel_61373": 325, "1125713270": 325, "1234567876543234567654321234565432123456": 325, "140634281233520": 325, "140634341798400": 325, "140634341995008": 325, "140634341576640": 325, "140634341773312": 325, "140634281802304": 325, "global_vari": [325, 532], "bar2": 325, "bar3": 325, "bar4": 325, "bar5": 325, "bar6": 325, "0x7fe7f869b7d0": 325, "0x7fe7f869b920": 325, "0x7fe7f869bbc0": 325, "punctuat": 325, "abcabcabcabcabc": [325, 353], "rex": [325, 359], "cba": [325, 713], "another_d": 325, "rb": [325, 365], "30000": 325, "coreutil": 328, "autopoint": 328, "redhat": [328, 359, 506], "rpm": [328, 359, 545], "fcntl": [328, 934, 1021, 1025, 1029, 1030, 1031, 1032, 1037, 1040, 1041, 1042, 1043, 1073, 1076, 1080], "fluent": [330, 405, 406, 1208, 1266, 1270, 1281], "luciano": [330, 405, 406, 1208], "ramalho": [330, 405, 406, 1208], "140640823526928": 331, "0x7fe97e53c610": 331, "140640823526960": 331, "140640741310912": 331, "140640741034048": 331, "140640741341184": 331, "wasjetzt": 331, "140640722624768": 331, "140640722715136": 331, "l1_copi": [331, 359], "my_funky_gener": 331, "meine_dumme_sequenz": 331, "0x7fe9785083a0": 331, "0x7fe98c21bce0": 331, "greeter": [331, 514, 515, 517, 522, 541, 1100], "0x7fe9796976d0": 331, "140640740502720": 331, "140640722823952": 331, "140640741119552": 331, "l_copi": 331, "140640741312256": 331, "140640722734080": 331, "140640722760768": 331, "140640722739712": 331, "140640741402496": 331, "owher": 331, "0000042": [331, 1153], "bled": 331, "xfc": [331, 347, 1139, 1221], "xdfe": [331, 347, 1221], "gr\u045c\u043fe": [331, 347, 1221], "\u795d\u597d": [331, 347], "big5": [331, 347, 1221], "xaf": [331, 347], "xac": [331, 347], "xa6n": [331, 347], "unterschrift": 331, "illeg": [331, 492, 1221], "multibyt": [331, 438, 1221], "xe7": [331, 347, 1221], "xa5": [331, 347, 1221], "x9d": [331, 347, 1221], "xe5": [331, 347, 1221], "xbd": [331, 347, 1221], "incorpor": [333, 349, 1066, 1273], "tradition": [333, 349, 835, 930, 1130, 1273], "lexer": [333, 349, 1273], "aris": [333, 349, 561, 1273], "compili": [333, 349, 1273], "rant": [334, 350, 376, 377, 378, 379, 380, 525, 534, 542, 1231], "blacklist": [334, 350, 359, 376, 379, 516, 522, 523, 529, 537], "acquaint": [335, 338], "data_to_send": 336, "data_receiv": 336, "user_receiv": [336, 1205], "140048588115008": 336, "140048588341376": 336, "d_str": [339, 720], "uebertragen": 339, "d_str_receiv": 339, "d_receiv": 339, "ala": [342, 345, 575, 665, 743, 887, 1021, 1071, 1236], "frozendict": [342, 343], "filesensor": 342, "guidelin": [342, 374, 937], "sergei": 342, "test_acquisition_loop": 342, "test_mock_csv_sink": 342, "mymockedth": 342, "nonloc": [342, 1149], "millcelsiu": 342, "acquisition_loop_util": 342, "ont": 342, "10m": [342, 1071], "acquir": [342, 373, 386, 413, 825, 989, 1055, 1060, 1066, 1070], "slower": [342, 500, 868], "packet": [342, 572, 931, 978, 1022, 1064], "transmit": [342, 1066], "datatim": 342, "read_measur": 342, "fourier": 342, "fft": 342, "011": [342, 353], "ifft": 342, "print_": 343, "0x7f0b165fdf00": 343, "dos_path": [343, 359, 399], "vernuenftigen": 343, "__class_getitem__": 343, "__iand__": 343, "__ior__": 343, "__isub__": 343, "__ixor__": 343, "difference_upd": 343, "intersection_upd": 343, "issubset": 343, "issuperset": 343, "symmetric_differ": 343, "symmetric_difference_upd": 343, "hallohallohallohallohallo": 343, "139685905188368": 343, "139685905188400": 343, "0x7f0b14487be0": 343, "fasschingbau": 343, "139685602274352": 343, "139685561461616": 343, "139685561690240": 343, "139685561316032": 343, "139685595970464": 343, "139685561151488": 343, "30000000": 343, "my_iter": 343, "my_print": [343, 1130], "my_arg": [343, 1105], "even_squar": [343, 353, 365], "squares_fun": 343, "squares_gen": 343, "0x7f0aefb94f20": 343, "0x7f0aefb955b0": 343, "squares_list": 343, "expr_str": 343, "expr": [343, 461, 471, 891], "skiprow": 343, "hz2": 343, "hz3_5": 343, "000566": 343, "000729": 343, "132363": 343, "229977": 343, "260597": 343, "444942": 343, "385433": 343, "638212": 343, "502710": 343, "796519": 343, "936250": 343, "972326": 343, "974442": 343, "999992": 343, "995683": 343, "973719": 343, "999245": 343, "895850": 343, "985202": 343, "768778": 343, "arang": 343, "001": [343, 353, 452], "002": 343, "003": 343, "004": 343, "0x7f0ad44b8f70": 343, "0x7f0ad23371f0": 343, "aaarghhh": 344, "expresss": 344, "realist": [345, 825, 1015], "postpon": [345, 1004], "noon": [346, 1069, 1158], "coverag": [346, 1114], "hackin": 346, "mocksink": 346, "139680347735568": 347, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 347, "0xabc": 347, "convert_to_int": 347, "konvertieren": 347, "drei_int": 347, "fooabc": 347, "userlin": 347, "tjr": 347, "\u00f6rg": 347, "0xc3": [347, 353, 359], "enc_": 347, "enc_s_recvd": 347, "ipykernel_81650": 347, "1521975281": 347, "lg_joerg": 347, "concat": [347, 512, 1225], "linksunten": 347, "rechtsoben": 347, "meinsinussensor": 347, "sinvalu": 347, "ndarrai": [347, 1214, 1230], "0x7f67142f53c0": 347, "timeit": 352, "0x64": 353, "0b1100100": 353, "0b100101100": 353, "0b0": 353, "type_of_i": 353, "schade": 353, "worldhello": 353, "140572055569936": 353, "500001": 353, "499999999999999999999999": 353, "4999": 353, "my_round": 353, "diff_to_next": 353, "5001": 353, "500000001": 353, "str_i": 353, "int_i": 353, "float_i": 353, "nocheinelist": 353, "140571746172800": 353, "140571753417312": 353, "my_": 353, "2282548071841868421": 353, "oioi": 353, "ueberbleibsel": 353, "my_sum": 353, "doom": 353, "0x7f48e8543060": 353, "doedel": 353, "sdhcbdhcb": 353, "kjsdskbh": 353, "akjsdhvksb": 353, "item2": [353, 794, 795], "line_r": 353, "tyyi": 353, "mp_left": 353, "mp_top": 353, "mp_right": 353, "mp_righ": 353, "brenner": 353, "kupfer": 353, "koax": 353, "oberflaech": 353, "gasdues": 353, "fsc": 353, "zellentemp": 353, "raumtemp": 353, "vdc": 353, "077": 353, "090": [353, 800], "76220": 353, "77849": 353, "086": 353, "81216": 353, "99354": 353, "92051": 353, "040": [353, 800, 1075, 1076, 1079, 1080], "035": [353, 1079, 1080], "82874": 353, "075": 353, "006": 353, "78855": 353, "098": 353, "036": 353, "007": 353, "76466": 353, "091": 353, "010": [353, 800, 890, 1072, 1073, 1075, 1076, 1079, 1080], "64736": 353, "65062": 353, "transform_t": 353, "transformed_timestamp": 353, "646126e": 353, "646130e": 353, "mpleft_1": 353, "mpleft_2": 353, "0x7f48ab74abf0": 353, "0x7f48a96648b0": 353, "noch_eine_vari": 353, "even_pr": 353, "0x7f48a9505b40": 353, "0x7f48a95250e0": 353, "squaredict": 353, "squaresset": 353, "bloat": [355, 356, 381, 382, 488, 747, 782, 792, 801, 1127], "ugh": 355, "urgh": 355, "nodiscard": 355, "fallthrough": [355, 1080], "noexcept": [355, 551, 585, 770, 772, 773, 775, 776, 777, 778, 810, 813, 815, 825, 835, 846], "string_view": [355, 374], "hierachi": 356, "powercontrol": 356, "temperaturecontrol": 356, "get_target_temperatur": 356, "copyabl": [356, 651, 790], "_run": 356, "kochtopftemperaturecontrol": 356, "get_current_temperatur": 356, "debt": [356, 574, 575, 576, 588, 589, 590], "erasur": [356, 381, 747, 782, 792], "align": [356, 422, 489, 747, 781, 929, 931, 1153, 1256, 1260], "98f8b9be": 359, "ad8f": 359, "4023": 359, "81a2": 359, "d1dc67d0282c": 359, "python310": 359, "139783143835152": 359, "0x7f21cca24610": 359, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 359, "1_000_000": 359, "3267": 359, "139782834179584": 359, "139783143835184": 359, "meng": 359, "m1": 359, "m2": 359, "leeres_set": 359, "d_revers": 359, "yaai": 359, "my_deppertes_rang": 359, "mdr": 359, "objeckt": 359, "139782799029888": 359, "139782798781696": 359, "139782798895952": 359, "139782798895792": 359, "139782798980096": 359, "schuld": 359, "300000": [359, 936, 1213], "compiled_pattern": 359, "__builtin__": 359, "139782799135312": 359, "0x7f21b81bbe60": 359, "getcwd": 359, "extlinux": 359, "favicon": 359, "grub2": 359, "opensc": 359, "packagekit": 359, "upow": 359, "authselect": 359, "bash_complet": 359, "binfmt": 359, "brltty": 359, "ceph": [359, 856], "chkconfig": 359, "cupshelp": 359, "dconf": 359, "debuginfod": 359, "depmod": [359, 961, 980], "dracut": 359, "egl": 359, "firewalld": [359, 869], "flexiblasrc": 359, "font": 359, "fwupd": [359, 869], "gcrypt": 359, "gdbinit": 359, "glvnd": 359, "groff": 359, "gss": 359, "gssproxi": 359, "hp": 359, "iproute2": 359, "iscsi": 359, "jvm": 359, "kdump": 359, "krb5": 359, "libblockdev": 359, "libibverb": 359, "libnl": 359, "libpap": 359, "libreport": 359, "libssh": 359, "libvirt": 359, "logrot": 359, "lvm": 359, "mcelog": 359, "mdevctl": 359, "modprob": [359, 930, 934, 936, 937, 961, 984, 985], "motd": 359, "cnf": 359, "ndctl": 359, "nftabl": 359, "openldap": 359, "ostre": 359, "pam": [359, 1066], "pkcs11": 359, "pkgconfig": [359, 523], "plymouth": 359, "polkit": 359, "popt": 359, "ppp": 359, "puls": [359, 928, 1264], "rwtab": 359, "sasl2": 359, "selinux": 359, "sgml": 359, "skel": 359, "speech": 359, "sssd": 359, "statetab": 359, "sudoer": [359, 874], "swid": 359, "sysconfig": 359, "sysctl": 359, "terminfo": 359, "thermald": 359, "tmpfile": 359, "tpm2": 359, "udev": 359, "udisks2": 359, "vmware": [359, 870], "vpnc": 359, "vulkan": 359, "wireplumb": 359, "wpa_supplic": 359, "xdg": 359, "dir_color": 359, "lightbgcolor": 359, "grep_color": 359, "adjtim": 359, "bindresvport": 359, "brlapi": 359, "dleyna": 359, "fprintd": 359, "jwhoi": 359, "libaudit": 359, "libus": 359, "mailcap": 359, "man_db": 359, "mime": 359, "mke2f": 359, "nanorc": 359, "netconfig": 359, "papers": 359, "passwdqc": 359, "pinforc": 359, "sestatu": 359, "tcsd": 359, "usb_modeswitch": 359, "vconsol": 359, "wgetrc": 359, "xattr": 359, "crypttab": 359, "localtim": 359, "mtab": 359, "subuid": 359, "subgid": 359, "timid": 359, "vdpau_wrapp": 359, "asound": 359, "idmapd": 359, "mtool": 359, "rsyncd": 359, "anthi": 359, "trolltech": 359, "rygel": 359, "virc": 359, "swtpm": 359, "localca": 359, "swtpm_setup": 359, "uresourc": 359, "ethertyp": 359, "inputrc": 359, "printcap": 359, "csh": [359, 1243], "nfsmount": 359, "nsswitch": 359, "gshadow": 359, "shadow": [359, 866, 887, 1031, 1149, 1187], "rhashrc": 359, "imagemagick": 359, "cshrc": 359, "gimp": 359, "updatedb": 359, "dl": 359, "containerd": [359, 1098], "lftp": 359, "rc0": 359, "rc1": 359, "rc2": 359, "rc3": 359, "rc4": 359, "rc5": 359, "rc6": 359, "cpe": 359, "inittab": 359, "makedumpfil": 359, "sensors3": 359, "posixpath": [359, 369], "kadjckk": 359, "xxddjh": 359, "blahblahblahblah": 359, "schuetzen": 360, "pathlib": [360, 368, 370, 1241], "regexen": 360, "afterthought": [364, 1139], "__getstate__": 365, "bit_count": 365, "maximum_numb": 365, "140526007219432": 365, "0x42": 365, "0x7fceb0516c20": 365, "cnt": [365, 1110], "140525696085312": 365, "create_print_funct": [365, 803, 805, 806], "140526007219464": 365, "140525697462832": 365, "140525697462736": 365, "140525697463408": 365, "140525697463280": 365, "match_express": 365, "compiled_express": 365, "joined_l": 365, "hwmon4": 365, "hwmon5": 365, "hwmon7": 365, "hwmon8": 365, "0x7fce70506000": 365, "varibl": 369, "139818180670696": 369, "0x7f29f4fdf4e8": 369, "139817897762928": 369, "0b11111111111111111111111111111111": 369, "0b100000000000000000000000000000000": 369, "139817896921728": 369, "139817466913504": 369, "142334567876545678765456787654": 369, "max_tri": 369, "fuck": [369, 955], "straw": [369, 1146, 1154], "ipaddress": 369, "addr": [369, 931, 936, 955, 968, 980, 1022, 1042, 1047, 1076, 1241], "ip_address": 369, "ipv4address": 369, "is_loopback": 369, "gueltig": 369, "a_tupl": [369, 1145], "139818180670728": 369, "139817467481600": 369, "modifyit": 369, "sjdgosi": 369, "gfosvbsisvbsok": 369, "file1": [369, 526, 797, 917, 953], "file2": [369, 526, 797, 917, 953], "csv_file": 369, "subdir1": [369, 797], "subdir2": [369, 797], "subdir": [369, 797, 1105], "mein_dir": 369, "mein_csv_fil": 369, "null_eins_zwei": 369, "0x7f296befbc40": 369, "shuffl": 369, "kvpair": 369, "reduct": [369, 764], "img_arrai": 369, "rerun": [369, 658, 845], "unabl": [369, 1006], "nbviewer": 369, "kmeansifittedkmean": 369, "18423981": 369, "51866902": 369, "40779841": 369, "94278979": 369, "7484102": 369, "52017749": 369, "71821931": 369, "48415009": 369, "61361798": 369, "10754686": 369, "97606427": 369, "93141702": 369, "5569347": 369, "5296816": 369, "4875877": 369, "85174112": 369, "87099894": 369, "85349982": 369, "35345614": 369, "73043954": 369, "19387197": 369, "7373525": 369, "19961382": 369, "95700493": 369, "richtigen": 369, "bildern": 369, "austauschen": 369, "einzelenen": 369, "urspruenglich": 369, "veraendert": 369, "reduced_arrai": 369, "datatyo": 370, "einlesen": 370, "00am": 372, "currect": [372, 904, 961], "shortcut": [372, 404, 480, 848, 891, 924, 1139], "sysvinit": 372, "disclos": [373, 401, 1012], "homeopath": 373, "untest": 373, "monolith": [373, 512, 1083], "toi": [373, 591, 800, 1081], "warehous": 373, "testabl": [373, 511, 1242], "stacker": 373, "sunshin": 373, "consider": [373, 497, 891], "hygien": [373, 436], "inject": [373, 374, 381, 974, 987, 992, 1220], "subtl": [373, 450, 470, 493, 532, 605, 1133], "grew": [373, 1261], "vast": 373, "angst": [373, 1276], "realiti": 373, "cxx11": [374, 797, 846], "shoud": [374, 815], "metric": 374, "decai": [375, 679], "upsid": 375, "joinabl": [375, 1271], "detach": [375, 1271], "slow": [375, 470, 501, 505, 700, 937, 1016], "empir": 375, "ping": 375, "pong": 375, "sensor_nam": 375, "yessss": 375, "opencppcoverag": [376, 379], "sonarqub": [376, 379], "backend": [376, 379, 1164], "mico": [376, 379], "abi": [376, 379, 540, 545, 961, 964, 1019, 1084, 1085], "add_librari": [377, 380, 382, 515, 518, 523, 537, 544, 545, 591, 636, 645, 1084, 1085], "input_dir": 377, "output_fil": 377, "ausbaufaehig": 377, "subgraph": 377, "target_compile_definit": [377, 380, 516, 519, 523, 537], "configure_fil": [377, 380, 517, 518, 519, 523], "libmosquitto": [377, 380, 523], "add_custom_command": [377, 380, 382, 523], "simplist": [378, 572], "filemosquitto": 378, "cmake_module_path": [378, 518, 534], "cmake_current_source_dir": [378, 380, 513], "rebuild": 380, "everytim": [380, 428, 446, 934], "execute_process": [380, 532], "cmake_current_binary_dir": [380, 513, 517, 520], "deepli": 380, "backward": [381, 382, 837, 891, 924, 928, 959, 1133, 1237], "funtion": 381, "ditto": 381, "understood": [381, 500, 510, 607, 751, 984, 1066, 1273], "loggingtarget": 381, "crtp": [381, 792], "vermieden": 381, "projektaufbau": 381, "verwendung": [381, 422], "statischen": 381, "onward": [382, 654, 658, 664], "plat": 382, "fstream": [382, 607, 797, 839], "anomali": 382, "coutsink": 382, "idatasink": 382, "sensorread": [382, 554], "confgen": 382, "cancoutperiph": 382, "socketcanperiph": 382, "conceiv": [382, 486, 1133], "ican": 382, "parameter": [382, 703, 817, 831, 1092, 1106], "nonvirtu": [382, 740, 801], "lack": [382, 490, 524, 541, 607, 734, 736, 937, 1096], "frustrat": 382, "newer": [382, 1016, 1100, 1259], "visit": [382, 747, 783, 787, 790], "indirect": [382, 744, 751, 868, 1101], "unsur": 382, "unrel": [382, 606, 637, 646, 751, 783, 784, 788, 848, 1067, 1077, 1107, 1124, 1280], "discrimin": [382, 747], "burnt": 382, "datasinkpointeraltern": 382, "disadvantag": 382, "datasinkobjectaltern": 382, "cornerston": [383, 937], "appeal": 383, "typesaf": [383, 747], "overid": 383, "sidebar": [384, 996], "tdl": [384, 800, 801], "todo_list": [384, 800, 801], "no1": 384, "todolist": [384, 800], "mgmt": [384, 411], "rvo": [384, 387], "elis": 384, "rtti": [384, 744, 751, 801], "groundhog": 384, "profession": [385, 387, 937, 1066], "reinforc": [385, 387, 1215], "throughout": [385, 387, 1138, 1265], "atomic_ref": 385, "unstructur": 385, "controversi": [386, 1069], "demystifi": 386, "disord": 386, "sight": 386, "p1185r2": [386, 848], "threadsaf": [386, 821], "storeproblem": 386, "strictli": [386, 936, 1116], "asio": [386, 770], "one_loop": 386, "another_loop": 386, "unord": [387, 1157], "primarili": [387, 1006, 1110, 1228], "unordered_set": 387, "unordered_map": 387, "openmp": 387, "custum": 387, "incorrectli": [387, 824], "spaceship": [387, 798], "fmt": 387, "u8path": 387, "deduc": [387, 492, 753, 770, 800], "commmandlin": 389, "checker": [390, 395, 404], "horribl": 390, "gpio25": [390, 932], "embarass": 390, "winscp": 390, "1910420003": [395, 396], "corinna": [395, 396], "baumgartn": [395, 396, 413], "1910420002": [395, 396], "anzhelika": [395, 396, 404], "chernykh": [395, 396, 404, 413], "1910420005": [395, 396], "simon": [395, 396], "1910420006": [395, 396], "matthia": [395, 396, 413], "kappel": [395, 396, 413], "1810420009": [395, 396], "kolter": [395, 396], "1920420033": [395, 396], "kornberg": [395, 396, 413, 416], "1910420007": [395, 396], "lui": [395, 396, 413, 1066], "kraker": [395, 396, 413, 416], "1810420010": [395, 396], "leonid": [395, 396], "kudriaschov": [395, 396], "1910420008": [395, 396], "michael": [395, 396, 405, 406, 1066], "1910420010": [395, 396], "sonja": [395, 396, 413], "luka": [395, 396, 413, 416], "1910420013": [395, 396], "behnaz": [395, 396], "mehrabadi": [395, 396, 413], "1910420014": [395, 396], "moser": [395, 396, 413], "1910420015": [395, 396], "moritz": [395, 396], "nagelschmi": [395, 396, 413], "1910420018": [395, 396], "bianca": [395, 396], "reimer": [395, 396], "1910420020": [395, 396], "schmid": [395, 396, 413], "1910420021": [395, 396], "sch\u00fcttler": [395, 396], "1910420022": [395, 396], "schweiger": [395, 396, 413], "1910420024": [395, 396], "sinabel": [395, 396], "1910420025": [395, 396], "slovik": [395, 396, 413], "1910420026": [395, 396], "s\u00f6l": [395, 396, 413], "1910420027": [395, 396], "stangl": [395, 396, 413], "1910420028": [395, 396], "felix": [395, 396, 413], "themessl": [395, 396, 413], "1920420035": [395, 396], "astrid": [395, 396], "vogel": [395, 396, 413], "1810420029": [395, 396], "florian": [395, 396, 413], "zwittnigg": [395, 396], "matricul": [395, 1108], "studentdb": 395, "greatli": [395, 496, 1258], "matnr": 395, "rid": [395, 494, 554, 986, 1003], "zuweisung": 396, "n1910420002": 396, "n1910420005": 396, "n1910420006": 396, "n1810420009": 396, "n1920420033": 396, "n1910420007": 396, "n1810420010": 396, "n1910420008": 396, "n1910420010": 396, "n1910420013": 396, "n1910420014": 396, "n1910420015": 396, "n1910420018": 396, "n1910420020": 396, "n1910420021": 396, "n1910420022": 396, "n1910420024": 396, "n1910420025": 396, "n1910420026": 396, "n1910420027": 396, "n1910420028": 396, "n1920420035": 396, "n1810420029": 396, "n666": 396, "5g": 396, "n19": 396, "10420013": 396, "theme": [396, 1139, 1158], "n181": 396, "0420029": 396, "20210324": 397, "orig_si": 397, "__interactivehook__": 397, "_base_execut": 397, "_clear_type_cach": 397, "_current_fram": 397, "_debugmallocstat": 397, "_framework": 397, "_getfram": 397, "_git": 397, "_home": 397, "_xoption": 397, "flo": 398, "ted": 398, "rainer": [398, 767, 824], "rg": 398, "some_numb": [399, 529, 1136], "auszuspucken": 399, "eine_neue_vari": 399, "klassisch": 399, "140705292246608": 399, "register_cont": 399, "0b11010001110101000": 399, "107432": 399, "erzwungen": 399, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 399, "groesst": 399, "darstellbar": 399, "ein_string_der_aussieht_wie_ein_integ": 399, "ein_integ": 399, "ver\u00e4ndernd": 399, "say_hello": [400, 1125], "333333333333336": 400, "formalit\u00e4ten": 403, "daili": [403, 874], "ece19": [403, 410, 411, 415], "organiz": 404, "baustein": [404, 409], "navigieren": [404, 409], "sitzen": [404, 409], "nat\u00fcrlich": [404, 409], "verstehen": [404, 409, 1275], "pr\u00fcfung": [404, 409], "trocken": [404, 409], "pfade": [404, 409], "symbolisch": [404, 409, 919], "textfil": [404, 409], "113ff": [404, 409], "ansatzweis": [404, 409], "durchgegangen": [404, 409], "133ff": [404, 409], "durchgemacht": [404, 409], "wirkungsweis": [404, 409], "verstanden": [404, 409, 1255], "verkn\u00fcpfen": [404, 409], "aufw\u00e4rmen": 404, "fremden": 404, "fragerund": 404, "tire": [404, 409], "transact": [404, 409, 1066], "wertebereich": 404, "vpn": [404, 1006], "sidenot": 404, "swoop": [404, 549], "hashbang": 404, "student1": 404, "student2": 404, "student3": 404, "undescript": 404, "contribut": [404, 1066, 1083], "crlf": 404, "bang": [404, 545], "trial": [404, 1086, 1096, 1215], "systemkonzept": [405, 422], "adressr\u00e4um": [405, 422], "ger\u00e4t": 405, "destruktoren": [405, 1257], "containertempl": 405, "ausz\u00fcg": 405, "absolventinnen": 405, "absolventen": 405, "entwicklungsplatform": 405, "zielplattform": [405, 1257], "dortigen": 405, "betriebssystemkonzept": [405, 1264], "verinnerlichen": 405, "eckpfeil": [405, 1257], "ansteuern": 405, "merkmal": 405, "nichttrivial": 405, "kerrisk": [405, 406], "handbook": [405, 406], "corbet": [405, 406], "allessandro": [405, 406], "rubini": [405, 406], "greg": [405, 406, 1066], "kroah": [405, 406], "hartman": [405, 406], "richard": [405, 406, 1083], "steven": [405, 406, 500], "stephen": [405, 406], "rago": [405, 406], "cookbook": [405, 406, 1248], "lutz": [405, 406], "integriert": 405, "\u00fcbungsanteil": 405, "einzelpr\u00fcfung": 405, "vorlesung": 405, "graduat": 406, "copver": 406, "warm": 407, "briefli": [408, 928], "filethermomet": 408, "blinklicht": 409, "arduino": [410, 412, 928, 936, 1224], "homedirectori": [410, 920], "vbox": 410, "subnet": 410, "64ff": 411, "readdir": [411, 797], "ow": [411, 574, 575, 576, 588, 589, 590], "readlink": 411, "tracker": [412, 413], "thermometers_docu": 412, "toctre": 412, "execconfig": 412, "wacom": [412, 473, 474], "schuettler": 413, "zwittnig": 413, "simu": 413, "kudriaschow": 413, "hysteres": 413, "impl": 413, "marku": 413, "stepper": 413, "wasserfal": 413, "influxdb": 413, "grafana": 413, "nachmittag": 413, "multitask": [414, 419, 1065, 1069, 1071, 1264], "latenc": [415, 419, 825, 982, 1065, 1068], "type_from_ini": 415, "ece19error": 415, "configfil": [415, 1108], "prettier": [415, 664], "support_address": 415, "invalidtypeerror": 415, "newcom": [417, 418], "ride": [421, 801], "individualtrain": 421, "baden": 421, "w\u00fcrttemberg": 421, "beginnend": 421, "kursnotizen": 421, "qualivis": 421, "vulkaneifel": 422, "thalheim": 422, "surviv": 422, "delphi": [422, 1276], "young": 422, "physicist": 422, "raaba": 422, "aachen": 422, "herzogenrath": 422, "mixtur": [422, 683], "gr\u00e4felf": 422, "wel": 422, "regensburg": 422, "pr\u00e4sent": 422, "inhous": [422, 1210], "linuxcampu": 422, "sch\u00f6nen": 422, "teilnehmern": [422, 1276], "aktiv": 422, "mitgestaltet": 422, "kursabschluss": 422, "dran": 422, "provok": 422, "kam": 422, "freiheiten": 422, "gestanden": 422, "zusatzaufgab": 422, "gef\u00fchrt": 422, "einschr\u00e4nkungen": 422, "eintagesworkshop": 422, "leuten": 422, "kenn": 422, "einhergehend": 422, "l\u00f6sungen": 422, "darauffolgend": 422, "vertiefen": 422, "ausgew\u00e4hlten": 422, "bereichen": 422, "dbapi2": [422, 1220], "objektorientierung": 422, "r\u00e4umen": 422, "zweit\u00e4gig": 422, "gemisch": 422, "kursen": 422, "eingemacht": 422, "bestellt": 422, "neugier": 422, "leichtfertig": 422, "hinabgestiegen": 422, "feiner": 422, "internen": 422, "forschungsprojekt": 422, "gebracht": 422, "zusammenschnitt": 422, "workshopcharakt": [422, 1276], "angegraut": 422, "bewusst": 422, "wunderbar": 422, "automatisieren": 422, "zurerst": 422, "shellbenutzung": 422, "angeordnet": 422, "ge\u00fcbt": 422, "herk\u00f6mmlichen": [422, 1257], "auffrischung": 422, "eingerostet": 422, "neuigkeiten": 422, "querbeet": 422, "aufbauend": 422, "zuvor": 422, "grundkur": 422, "wichtigsten": 422, "neuerungen": [422, 1257], "tobak": 422, "lieblingsschulungen": 422, "hoeri": 422, "zustandegekommen": 422, "bastelwoch": 422, "betrachtung": 422, "realtimef\u00e4higkeit": 422, "xenomai": 422, "fad": 422, "auszugsweis": 422, "richtig": 422, "n\u00e4chten": 422, "schulungstagen": 422, "kurzweil": 422, "beschert": 422, "einf\u00fchrungscharakt": 422, "auftrag": 422, "hardwarenah": [422, 1264], "ausgew\u00e4ht": 422, "kernelstruktur": 422, "crosscompil": 422, "heut": [422, 1257], "msys2": 423, "5595": 423, "17619": 423, "pacman": 423, "mingw64": 423, "w64": 423, "x64": 423, "medium": [423, 540, 831, 1066, 1081], "swlh": 423, "2b2e66352456": 423, "iec": [424, 649], "9899": 424, "c11": 424, "pdp": [424, 438], "ken": 424, "thompson": 424, "tabul": [425, 433], "brutal": [426, 445, 449, 470, 759, 800, 1069], "wherev": [428, 1066], "ascend": [429, 1230], "unread": [430, 448, 505, 750, 1041, 1084, 1085, 1106, 1150], "putchar": 432, "caution": [432, 658, 856, 931], "obscur": [432, 440, 605, 1001, 1025, 1041, 1261], "alright": [432, 458], "inequ": [432, 665], "word1": [433, 625], "word2": [433, 625], "word3": [433, 625], "word4": 433, "word5": 433, "unixen": [433, 797, 1077, 1243], "nonsens": [434, 452, 471, 526, 651, 655, 658, 748, 761, 800, 801, 845, 894, 1067, 1105, 1214, 1253], "illustr": [434, 1108], "countchar": 434, "nwhite": 434, "nother": 434, "stat": [434, 797, 1021, 1029, 1030, 1031, 1032, 1042, 1067, 1073, 1076, 1080, 1241], "nonprint": [435, 463], "decis": [435, 510, 513, 610, 657, 672, 845, 928, 1066, 1069, 1110, 1215, 1259, 1262], "xxxxxxxxxxxxxxxxxxxxxxxxx": 435, "xxxxxxxxxxxxxxxxxx": 435, "subroutin": [436, 504], "outer": [436, 463, 528, 532], "wimplicit": [436, 748, 952], "dear": 436, "assembl": [438, 1083], "contradict": [438, 756], "640k": 438, "a_str": 438, "strncpy": 438, "maxlen": [438, 439], "strcat": 438, "strncat": 438, "strcmp": [438, 813, 814, 848], "strncmp": 438, "another_str": 438, "nonsensi": 439, "read_lin": 439, "longest": 439, "confin": [440, 1108], "z0": 443, "abbrevi": [444, 759, 782, 784, 786, 787, 788, 807], "char_bit": 444, "x86": [444, 545, 764, 1083, 1086, 1101], "stdint": [444, 934, 1023, 1076], "int8_t": 444, "uint8_t": [444, 562, 577, 747, 849, 934], "int16_t": 444, "int32_t": 444, "uint32_t": 444, "int64_t": 444, "052": 445, "0x2a": 445, "0b010010": 445, "42l": 445, "456f": 445, "456l": 445, "x61": 445, "alert": [445, 488, 494, 846, 1139, 1147, 1156, 1158], "backspac": [445, 891, 1152], "formfe": 445, "ooo": 445, "octal": [445, 1139, 1152, 1153], "xhh": 445, "some_funct": [446, 532], "some_vari": [446, 524, 525, 528, 529, 532], "1415926535897932": 446, "some_nonsensical_numb": 446, "legal": [448, 492, 658, 801, 810, 1029, 1081], "truth": [448, 1026, 1061], "eleg": [448, 750], "blank": 448, "num_lf": 448, "narrow": [449, 1215], "4294967295u": 449, "wsign": [449, 491], "wconvers": 449, "4294967296u": 449, "unscrupul": 449, "0x100000000": 449, "weaker": 449, "stronger": [449, 763, 1120, 1227], "1l": 449, "1u": 449, "losslessli": 449, "1ul": 449, "wtype": [449, 491], "wextra": [449, 491, 748], "pedant": 449, "anti": [449, 989, 1050], "sloppi": 449, "advic": [449, 1139], "immens": [449, 1081], "hazard": 449, "messi": [449, 514], "copy_and_omit": 450, "0x4b": 452, "01001011": 452, "0x0c": 452, "00001100": 452, "0x08": 452, "00001000": 452, "0x4f": 452, "01001111": 452, "0x47": 452, "01000111": 452, "0x03": 452, "00000011": 452, "0x80": 452, "00110000": 452, "0x4c": [452, 974], "01001100": 452, "0xb3": 452, "10110011": 452, "arr": [453, 755], "unari": [455, 1139], "strongest": [455, 1139, 1269], "intuit": [455, 503, 824], "danger": [455, 473, 651, 984, 1058, 1080, 1148, 1258], "decrement": [456, 476, 700, 845, 943], "doabl": 461, "cond": [461, 1055], "precedenceof": 461, "innermost": 463, "concern": [463, 464, 512, 867, 937, 943, 1107, 1273], "edsger": 464, "dijkstra": 464, "plea": 464, "manifold": 464, "judici": [464, 500, 1273], "do_complicated_stuff": 464, "cleanup_mess": 464, "vice": 466, "versa": 466, "g_lobal": [467, 468, 470], "print_g": [467, 468], "linkag": 468, "percept": [468, 867], "disciplin": [468, 490, 500, 510, 1214], "convent": [468, 512, 891, 913, 1000, 1019, 1066, 1107, 1122], "ifndef": [468, 470, 471, 514, 540, 634, 652, 658, 813, 814, 844, 1083, 1100, 1102], "g_h": 468, "programx": 469, "cautious": 470, "c99": [470, 1256], "have_c_h": 470, "clash": [470, 493], "include_onc": 470, "newbi": [470, 755], "hurdl": 470, "ifdef": [471, 521, 548, 700], "defined": 471, "unequ": 471, "tempt": 471, "horror": 471, "do_much": 471, "do_thi": [471, 751], "do_that": [471, 751], "do_less": 471, "__pragma": 471, "4127": 471, "warn_if": 471, "statem": 471, "function_help": 471, "function_quit": 471, "function_": 471, "inject_viru": 471, "doomed_process": 471, "win32": [471, 1271], "foreign_mem": 471, "virtualallocex": 471, "mem_commit": 471, "page_execut": 471, "page_readwrit": 471, "infect": 471, "__file__": [471, 1108, 1241], "__line__": 471, "smell": [471, 537], "pest": 471, "dereferenc": [473, 815, 833, 837], "35129": 473, "calle": [474, 504, 506, 528, 662, 1103], "tablet": 474, "excang": 475, "pa1": 476, "pa2": 476, "scalar": [479, 494, 1156], "fantasi": [479, 928, 930], "p1": [479, 604, 650, 652, 658, 663, 665, 667, 668, 756, 848], "p2": [479, 604, 650, 652, 658, 663, 665, 668, 756, 848], "laid": 479, "makepoint": 480, "addpoint": [480, 496], "addtopoint": 480, "pid_t": [481, 1051, 1070, 1081], "dealloc": [483, 641, 740, 806, 945, 972, 978], "do_something_with": [483, 753, 834], "list_init": 484, "list_destroi": 484, "list_insert": 484, "list_remov": 484, "list_count": 484, "list_print": 484, "keylen": 484, "corollari": [486, 488, 816, 1116], "reorder": [486, 825, 968], "use_count": [486, 487, 794, 821, 845, 847], "use_resourc": [486, 487], "do_something_with_shared_resourc": [486, 487], "completion_flag": 486, "out_word": 486, "in_word": 486, "unforese": 486, "volatil": [487, 489, 994, 1081, 1256, 1260], "instr": [487, 505, 824, 1053, 1118], "pthread_mutex_t": [487, 822, 976, 1043, 1053, 1055], "use_count_mutex": 487, "pthread_mutex_initi": [487, 1053], "pthread_mutex_lock": [487, 822, 1043, 1053, 1055], "pthread_mutex_unlock": [487, 822, 1043, 1053, 1055], "fetch_and_add": [487, 1053], "__sync_fetch_and_add": [487, 818, 1053, 1054], "sheer": [487, 653], "neglig": 488, "penalti": [488, 748], "memcpi": 488, "standalon": [488, 525, 765, 815, 1080, 1248], "freeli": 488, "rearrang": [488, 699], "anim": 488, "textit": 488, "bogu": [488, 500, 813, 814, 827, 937, 1081], "__pad0": 488, "__pad1": 488, "misalign": 488, "intrins": [489, 1066], "matur": 490, "odditi": 490, "rectifi": 490, "fortran": 490, "lazy": [490, 804], "meant": [490, 1080], "shortcom": [490, 575, 729, 734, 737], "holidai": 490, "handcraft": [490, 558, 1143], "clariti": [491, 495, 1028], "baud": 492, "idl": [492, 1066], "writing_request": 492, "reading_respons": 492, "wait_retri": 492, "protocol_engin": [492, 496], "obligatori": 492, "anyhow": 492, "forgot": 492, "unambigu": [492, 800], "protocol_error": 492, "eat": [492, 500], "unintend": 494, "wwrite": 494, "max_bucket": 494, "pj": 494, "pointe": 494, "ppi": 494, "height": [495, 558, 666], "beman": 495, "daw": 495, "obfusc": 496, "ssize_t": [496, 608, 943, 1017, 1021, 1022, 1023, 1025, 1029, 1030, 1031, 1032, 1035, 1037, 1040, 1041, 1073, 1076, 1080], "send_fram": 496, "eng": 496, "send_sum": 496, "v_int32": 496, "spectacular": 496, "adequ": 496, "unix_error": 496, "app_error": 496, "unix_error_cr": 496, "unix_error_ok": 496, "uerr": 496, "app_error_cr": 496, "app_os_error": 496, "impact": [496, 500, 1066], "beyond": [497, 1025, 1049], "slowdown": 497, "0x400552": 497, "0x51bb072": 497, "0x4c28c6d": 497, "vg_replace_malloc": [497, 658], "0x400545": 497, "loss": [497, 1007, 1066], "rec": [497, 1199, 1201], "uncov": 497, "readabilti": 498, "explict": 498, "hotspot": [499, 503], "checksum": [499, 1007, 1064], "externel": 499, "sha1sum": [499, 1064, 1068, 1071], "8g": 499, "0m38": 499, "0m3": 499, "0m0": 499, "perceiv": 499, "daze": 499, "mp3": 499, "018": 499, "mult": 500, "rumour": 500, "uncondit": 500, "finlin": 500, "o3": [500, 541, 762, 764, 797, 824, 1250], "heurist": 500, "o1": 500, "magnitud": [500, 501], "overus": [500, 562, 1121, 1258], "spill": 500, "fira": 500, "rtfm": [500, 1154, 1248], "compromis": [500, 510, 558], "transit": [500, 536, 537], "fmove": 500, "outweigh": 500, "thrash": [500, 1046, 1068, 1256], "misnom": [500, 1158], "improv": [500, 503, 541, 797, 804, 844, 1103, 1161], "o0": [500, 541, 762, 764, 824], "unagress": 500, "chew": [500, 825], "agress": 500, "muchnik": 500, "levin": 500, "nearbi": 501, "4x3": 501, "rectangular": 501, "bust": 503, "haul": 503, "cheater": 503, "fallibl": 503, "supplement": 503, "gprof": [503, 505, 506, 507, 1256], "callgrind": [503, 506, 507, 1256], "oprofil": [503, 507, 1256], "gmon": 504, "spot": 504, "38000000": 504, "find_dupl": [504, 506], "criterion": [504, 690], "37000000": 504, "luck": [504, 529, 934, 1046, 1105, 1107], "gprof2dot": 504, "tjpeg": 504, "predict": [505, 506, 1211, 1213, 1214], "sluggishli": 505, "16761": 505, "callgrind_annot": 505, "atstart": 505, "callgrind_control": 505, "nmi": 506, "ophelp": 506, "operf": 506, "oprofile_data": 506, "opreport": 506, "opannot": 506, "oparch": 506, "opgprof": 506, "Their": 506, "2085": 506, "2505": 506, "maskabl": 506, "callgraph": 506, "pxe": 506, "vmlinux": [506, 959], "debuginfo": 506, "userland": [506, 943], "analyz": [506, 1066], "jcf": [506, 856, 984], "jxf": [506, 856, 984], "gdf": 506, "op2calltre": 506, "oprof": 506, "applet": 506, "viewabl": [506, 544], "kcachegrind": 506, "worker": [510, 810], "employ": 510, "consensu": [510, 553], "consent": [510, 1128], "male": [510, 1170], "prcess": 510, "obei": [510, 512], "antipattern": [510, 558], "gonna": 510, "indecis": [510, 1259], "road": 510, "manufactur": [510, 937], "pcb": [510, 934], "bom": 510, "requiremenet": 510, "yyyi": 511, "yagni": 511, "fraunhof": 511, "make_categori": 512, "outputfil": 512, "to_datetim": 512, "make_float": 512, "orpheum": 512, "goingout": 512, "hervi": 512, "sport": 512, "card": [512, 859, 895, 897, 902, 903, 984, 1066], "to_csv": 512, "read_from_csv": 512, "write_to_csv": 512, "clean_data": 512, "csvname_or_list_thereof": 512, "workaround": [512, 755, 766, 801, 849, 957, 1241], "read_from_dir": 512, "re_yyyy_mm": 512, "inputdir": 512, "libreoffic": [512, 1046, 1049], "test_data_clean": 512, "test_make_float": 512, "1999": 512, "test_date_convers": 512, "at666666666666666666": 512, "000009173": 512, "bawaatwwxxx": 512, "at211420020010848041": 512, "ausgleich": 512, "firmenkonto": 512, "test_input": 512, "read_from_csv_singl": 512, "read_from_csv_multipl": 512, "deliber": [512, 1066], "test_read_csv_singl": 512, "000009284": 512, "2371": 512, "000009283": 512, "at613400000005077508": 512, "world4you": 512, "writelin": [512, 1158, 1204, 1206], "test_read_csv_multipl": 512, "lines_2023_02": 512, "lines_2023_01": 512, "000009229": 512, "4111": 512, "bp": 512, "tankstel": 512, "000009228": 512, "at081400086210003454": 512, "\u00f6sterreichisch": 512, "gesundheitskass": 512, "_write_csv": 512, "read_from_csv_dir": 512, "test_read_csv_dir": 512, "testutil": 512, "write_csv": 512, "test_category_csv": 512, "000009168": 512, "000009169": 512, "2801": 512, "strassenbahn": 512, "eas": [512, 1220], "finer": 512, "refact": 512, "str_categori": 512, "cardunknown": 512, "flughafen": 512, "wien": 512, "test_more_of_it": 512, "000009153": 512, "parken": 512, "fl": 512, "inputread": 512, "recursivecsvinputread": 512, "singlecsvinputread": 512, "compositeinputread": 512, "input_abc": 512, "abstractmethod": [512, 1120], "multiplecsvinputread": 512, "test_input_abc": 512, "conf_sensor": 513, "conf_sensors_init": 513, "add_sensor": [513, 616, 617, 618, 619, 621, 622], "make_uniqu": [513, 519, 574, 588, 795, 801], "existig": 513, "democonfig": [514, 515, 516, 517, 522], "descend": [514, 515, 516, 546, 591, 892, 1077], "IF": [514, 515, 516, 541], "use_blacklist": [514, 515], "macro_use_blacklist": [514, 516], "demo_use_blacklist": [514, 515], "namegreet": 514, "_blacklist": 514, "implic": [514, 887, 968, 1016], "sayhello": 514, "is_forbidden": 514, "_name": [514, 581, 584, 588, 589, 590], "goodby": [514, 1081], "use_backlist": 514, "condition": [514, 518, 521], "libhello": [515, 517, 522, 541, 543, 546, 1100], "duse_blacklist": [515, 516], "target_compile_opt": [515, 537], "manyfold": 516, "lightli": 516, "demo_version_major": [517, 520], "demo_version_minor": [517, 520], "demo_major": [517, 520], "demo_minor": [517, 520], "include_directori": [517, 520], "overkil": 517, "sqlite3_found": [518, 519, 520, 521, 522], "config_have_sqlite3": [518, 520], "tolevel": 518, "sinkcomposit": 518, "sinktermin": 518, "sinksqlite3": [518, 519], "sinkmqtt": 518, "findmosquitto": 518, "mosquitto_found": 518, "mytarget": 518, "find_path": 518, "mosquitto_include_dir": 518, "find_librari": 518, "mosquitto_librari": 518, "found_var": 518, "required_var": 518, "mark_as_advanc": 518, "glue": [518, 770], "config_have_mosquitto": 518, "have_mosquitto": 518, "voila": [518, 662, 934, 1047, 1071, 1084, 1085, 1096, 1127], "cerr": [519, 554, 594, 672, 735, 751, 825, 934, 1037, 1040, 1042, 1043], "create_table_stat": 519, "findsqlite3": [519, 521, 522], "sqlite3_include_dir": [519, 522], "sqlite3_librari": [519, 522], "availablil": 519, "sqlite3_vers": [519, 522], "availabl": 519, "temporarili": [519, 545, 848, 1070, 1083], "have_sink_sqlite3": 520, "have_sqlite3": [520, 521], "gluehweinkochen": 520, "inc_sink_sqlite3": 521, "src_sink_sqlite3": 521, "litter": [521, 1032], "typo": [522, 1121, 1122], "olden": 522, "0x00007f76ae011000": 522, "libz": 522, "0x00007f76adef7000": 522, "gtest_discover_test": 523, "cliutil": 523, "20depend": 523, "20guid": 523, "fetchcont": 523, "externalproject": 523, "conan": 523, "pakag": 523, "counterpart": [524, 593], "insensit": [524, 529, 921, 1232], "sensit": [524, 532, 1138], "helloworld": 524, "arument": 524, "chararct": 524, "clike": 524, "keystrok": [524, 891], "undesir": [524, 801], "undesiredhelloworld": 524, "position_found": 525, "contrari": [525, 1231], "some_str": 525, "varnam": 525, "joined_str": 525, "zeiling": [525, 529], "is_less": 525, "some_list": [525, 972], "loop_var": 525, "endforeach": [525, 526, 534], "some_length": 525, "remove_at": 525, "passwd_cont": 526, "passwd_lin": 526, "passwd_hash": 526, "89b89c94233c54d63fdff0386605757cd3d31efd01b3d17ba119d27563500525": 526, "cpp_file": 526, "root_nam": 526, "root_directori": 526, "root_path": 526, "relative_part": 526, "parent_path": [526, 797], "full_path": 526, "filename_part": [526, 797], "some_path": 526, "endfunct": [528, 532, 534], "access_par": 528, "outer_vari": [528, 532], "outer_funct": [528, 532], "take_one_paramet": 528, "superflu": 528, "take_two_paramet": 528, "param1": 528, "param2": 528, "argv_etc": 528, "first_param": 528, "second_param": 528, "argv0": 528, "argv1": 528, "argv3000": 528, "reach_out": 528, "caller_vari": 528, "ref_param": 528, "_one": 528, "_anoth": 528, "some_variable_on": 528, "some_variable_anoth": 528, "vararg": 528, "takes_any_number_arg": 528, "takes_fancy_paramet": 528, "myparam": 528, "fancy1": 528, "fancy2": 528, "fancies1": 528, "fancies2": 528, "myparams_verbos": 528, "myparams_cool": 528, "myparams_fancy1": 528, "myparams_fancy2": 528, "myparams_fancies1": 528, "myparams_fancies2": 528, "endmacro": 528, "strequal": [529, 532, 541], "elseif": [529, 534], "lexicograph": [529, 720], "strless": 529, "some_nam": 529, "is_directori": [529, 797], "is_absolut": [529, 797], "cmake_polici": [529, 532], "cmp0139": 529, "alternative_filenam": 529, "path_equ": 529, "recognis": 529, "versionad": 529, "cmake_minimum_requir": [529, 532, 540, 1085, 1250], "another_vari": [529, 532], "libnam": 529, "mental": [529, 767], "cmp0012": 529, "notfound": [529, 550, 551, 579, 734, 735, 736], "suffer": [529, 750, 801, 936], "pretend": [529, 835], "boolean_vari": 529, "boolshit": 529, "cmp0054": 529, "wno": [529, 532, 801], "par": 529, "biggest": [529, 1066], "dname": [531, 537], "dperson": 531, "unset": [532, 575, 1055], "cal_symbol": 532, "cmp0010": 532, "name_of_vari": 532, "affect": [532, 850], "subsequ": [532, 601], "ccach": 532, "cmakecach": [532, 1084, 1085], "local_vari": 532, "beautifulli": 534, "public_head": 534, "private_head": 534, "argn": 534, "my_add_library_shar": 534, "my_add_library_stat": 534, "my_add_library_nam": 534, "my_add_library_private_head": 534, "my_add_library_public_head": 534, "my_add_library_sourc": 534, "my_add_library_debug": 534, "fatal_error": [534, 541], "noi": [536, 537], "asymmetri": 536, "compile_definit": 537, "compile_opt": 537, "widest": 537, "set_target_properti": 537, "asymmetr": [537, 765, 932], "enable_test": [538, 1250], "set_tests_properti": [538, 1247, 1250], "pass_regular_express": 538, "ctest": 538, "cdash": 538, "kitwar": 538, "identif": [540, 934, 1084, 1085], "hello_nam": [540, 544], "hello_name_h": 540, "cmake_cxx_standard": [541, 1250], "dndebug": 541, "cmake_": 541, "_compiler_id": 541, "g3": 541, "cmake_c_compiler_id": 541, "cmake_c_flag": [541, 1250], "cmake_cxx_compiler_id": 541, "cmake_cxx_flag": [541, 1250], "howdi": [541, 659, 724, 745, 768, 803, 805, 806, 871, 875, 1029, 1030, 1032, 1125], "bullshithowdi": 541, "send_error": 541, "attract": [541, 755], "cmake_install_prefix": 543, "set_properti": [543, 545], "dbuild_shared_lib": [543, 545], "readelf": [543, 1083, 1096, 1101], "0x0000000000000001": [543, 1101], "0x000000000000001d": 543, "0x00007f773aefe000": 543, "ldconfig": [543, 1083], "sonam": [543, 545], "0x29": 544, "collect2": [544, 1101], "acycl": [544, 1085, 1100], "dag": 544, "jul": [544, 545], "tpng": [544, 1085], "symlink": [545, 797, 934, 1243], "build_shared_lib": 545, "qf": 545, "libboost_regex": 545, "lrwxrwxrwx": [545, 913, 934, 936, 937, 1039, 1083], "rwxr": [545, 876, 878, 879, 888, 1083, 1096, 1135], "289264": 545, "project_vers": 545, "makefile2": 546, "socialdb": [547, 550, 555, 579, 585], "i2csensor_vendor1": [548, 577], "0x37": 548, "suddenli": [548, 871, 984, 1216], "vener": [548, 569, 651, 665, 809], "pour": [548, 856], "damag": [548, 1230], "slip": 548, "cascad": 548, "i2csensor": [548, 562, 577], "create_i2c_sensor": 548, "i2csensorfactori": 548, "speak": [548, 801, 919, 936, 1112, 1137], "vendor1": [548, 577], "abstract_factory_suit": 548, "instantiate_vendor1": 548, "i2csensorfactory_vendor1": 548, "i2c_factory_vendor1": 548, "i2c_sensor": 548, "assert_tru": [548, 603, 604, 609, 614, 616, 621, 650, 652, 666, 667, 668, 669, 745, 747, 756, 797, 845, 846, 1248], "dynamic_cast": [548, 575, 589], "a_sensor": [548, 812], "vendor2": [548, 577], "instantiate_vendor2": 548, "i2csensorfactory_vendor2": [548, 577], "i2c_factory_vendor2": 548, "i2csensor_vendor2": [548, 577], "pu": 548, "tinto": 548, "fahrenheitsensor": [549, 578], "get_temperature_f": [549, 578], "formula": 549, "adapter_suit": 549, "constantfahrenheitsensor": 549, "assert_float_eq": [549, 552, 553, 554, 572, 573, 599, 600, 601, 602, 604, 607, 608, 619, 650, 652, 668, 745, 747, 812], "fahrenheitsensor_adapt": [549, 578], "adapter__is_a__sensor": 549, "adapter__knows__an_a_sensor": 549, "variablefahrenheitsensor": 549, "initial_valu": [549, 839], "_valu": [549, 584, 739, 740, 744, 839], "change_temperatur": [549, 599, 607, 608], "adapter__definitely_knows__a_sensor__hel": 549, "multitud": 550, "socialdbcommand": [550, 579], "command_suit": 550, "2345110695": [550, 709], "socialdbinsertcommand": [550, 579], "3456060486": [550, 709], "insert_by_bas": 550, "socialdbfindcommand": [550, 579], "socialdbdropcommand": [550, 579], "assert_throw": [550, 557, 745, 797], "notinsert": [550, 551, 579], "bulkinsert": 550, "bulk_insert": 550, "socialdbbulkinsertcommand": [550, 579], "bic": 550, "std_initializer_list": 550, "bulk_insert__std_initializer_list": 550, "_msg": 551, "c_str": [551, 586, 608, 779, 813, 814, 1080], "_db": 551, "hypthet": 552, "composite_suit": 552, "cs1": 552, "cs2": 552, "recompil": [553, 1101], "decorator_suit": 553, "average_with_base_sensor": 553, "decoratedsensor": [553, 581], "propon": 553, "diagnost": [553, 681, 684], "decorated_sensor_const_added_function": 553, "decorated_sensor_random_added_function": 553, "decorated_sensor_const__is_a__sensor": 553, "decorated_sensor_random__is_a__sensor": 553, "assert_g": [553, 602, 619], "assert_l": [553, 602, 619], "legaci": [553, 1066, 1175], "average_with_decorated_sensor": 553, "chrono_liter": [554, 757, 765, 800, 822, 825, 839], "demologg": 554, "demovaluestor": 554, "_store": 554, "namedsensor": 554, "_logger": 554, "_value_stor": 554, "sensora": 554, "sensorb": 554, "sensorc": 554, "200000": [554, 936, 1213], "this_thread": [554, 765, 800, 822, 825, 839, 847], "sleep_for": [554, 765, 800, 822, 825, 839, 847], "12597": 554, "valuestor": 554, "2895": 554, "158243": 554, "cassert": [554, 696, 731, 734, 736, 824, 825, 848, 849, 1043], "boss": 554, "v3": [554, 763, 764], "abort": [554, 574, 575, 658, 827, 1017], "mocklogg": 554, "lines_log": 554, "mockvaluestor": 554, "sensorreader_suit": 554, "141320": 554, "memcheck": [554, 658, 845], "detector": [554, 658, 845], "mtqueue": [555, 572], "devis": 555, "myobserv": 557, "socialdb_observ": [557, 585], "newcitizenobserv": [557, 585], "new_citizen": 557, "_new_citizen_svnr": 557, "new_citizen_ad": [557, 585], "observer_suit": 557, "register_on": 557, "register_new_citizen_notif": [557, 585], "register_mani": 557, "observer1": 557, "observer2": 557, "register_dupl": 557, "observeralreadyregist": [557, 585], "unregister_new_citizen_notif": [557, 585], "unregister_not_regist": 557, "observernotregist": [557, 585], "addict": [558, 870, 891, 1234, 1242], "bertrand": 558, "barbara": 558, "polish": 558, "be_sick": 561, "insur": [561, 574, 575, 576, 588, 589, 590], "teardown": [561, 608, 1105, 1242, 1252, 1254], "purest": 562, "lightest": 562, "pidcontrol": 562, "cla": 569, "roundingsensor": [569, 573, 587], "r1": [569, 669, 815], "r2": [569, 669, 815], "r3": 569, "sensorvalueexpress": [569, 583], "e1_e2": 569, "e1_e2_e3": 569, "num_measur": 569, "v_avg": 569, "v_ass": 569, "combinatin": 570, "interpreter_suit": 570, "e_lh": 570, "e_rh": 570, "e_add": 570, "e_sub": 570, "mul": 570, "e_mul": 570, "e_div": 570, "arithemet": 570, "combined_arith": 570, "l7": 570, "a_7_plus_3": 570, "s_3_minus_1": 570, "variable_not_set": 570, "analogi": [570, 594, 937, 1077, 1118], "assignment_valu": 570, "variable_assign": 570, "ass": 570, "variable_used_as_express": 570, "ass_v1": 570, "ass_v2": 570, "reachabl": [572, 801, 845, 934, 937], "remoteadapt": [572, 586], "response_promis": 572, "_adapt": 572, "_queue": [572, 822], "_thread": 572, "fulfil": [572, 607], "proxy_remote_suit": 572, "_c": 572, "remotesensoradapt": [572, 586], "remotesensor": [572, 586], "remote_sensor__is_a__sensor": 572, "somth": 572, "fullfil": 573, "proxy_round_suit": 573, "round_down": 573, "round_up": 573, "rouding_sensor__is_a__sensor": 573, "advis": [574, 1066, 1205], "hypothet": [574, 606, 607, 657, 928], "fee": 574, "socialinsur": [574, 575, 576, 590], "oegk": [574, 575], "startup": [574, 575, 576, 588, 764, 765, 825, 862, 1066, 1077, 1083, 1100, 1116], "set_inst": [574, 575, 588], "socinsur": [575, 589], "inisur": 575, "reimplement": [575, 737], "compiabl": [575, 589], "iface_inst": [575, 589], "svs_instanc": [575, 589], "oegk_inst": [575, 589], "another_inst": [575, 576, 589, 590], "1485": [575, 576], "sozialversicherung": [576, 590], "unrealist": [576, 801], "adapte": 578, "_adapte": 578, "_svnr": 579, "_firstnam": [579, 709, 1128], "_lastnam": [579, 709, 1128], "_error": 579, "_result": 579, "_command": 579, "get_if": [579, 788], "decoratedconstantsensor": 581, "sstream": [581, 586, 667, 669], "iomanip": 581, "ostringstream": [581, 586, 666, 667, 668, 669], "decoratedrandomsensor": 581, "_variabl": 584, "_lh": 584, "_rh": 584, "_context": 584, "_var": 584, "_exp": 584, "stdexcept": [584, 586, 588, 589, 590, 608, 797, 839], "_new_citizen_observ": 585, "num_eras": 585, "_server": 586, "cstdio": 586, "num_item": 586, "cmath": [587, 652, 660, 668, 750, 761, 764], "_instanc": [588, 589, 590], "_databas": [588, 589, 590], "0l": [588, 589], "cstdlib": [589, 608, 748], "ssocinsur": 589, "millidegre": 591, "parameteriz": [592, 1210], "loop_and_measur": 592, "niter": 592, "stod": [594, 720], "uniform_real_distribut": [594, 602, 844], "default_random_engin": [594, 602, 844], "random_devic": [594, 602, 844], "_distribut": [594, 844], "_engin": [594, 844, 1230], "_y": [594, 652, 653, 655, 657, 659, 660, 661, 663, 665, 675, 690, 761, 764, 765], "spit": [594, 1216], "mockswitch_nopoli": [597, 598, 603], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 597, "nopoli": [597, 598, 599, 600, 601, 602, 603], "display_led_stripe_nopoly_suit": 597, "somewhere_in_the_middl": 597, "sw0": 597, "sw1": 597, "sw2": 597, "sw3": 597, "sw4": 597, "sw5": 597, "sw6": 597, "sw7": 597, "display_led_stripe_nopoly_suite__below_rang": 597, "below_rang": 597, "display_led_stripe_nopoly_suite__above_rang": 597, "above_rang": 597, "display_led_stripe_nopoly_suite__mov": 597, "movement": [597, 928], "display_led_stripe_nopoly_suite__vari": 597, "variation_2_switch": 597, "variation_interval_not_from_0": 597, "sensor_avg_nopoly_suit": 599, "sensor_const_nopoly_suit": 600, "sensor_mock_nopoly_suit": 601, "sensor_random_suit": [602, 606, 607], "uniformli": 602, "rd": [602, 1047], "obtain": [602, 820, 1158], "rng": 602, "switch_mock_suit": 603, "initial_st": [603, 1253], "set_on_off": 603, "initial_failur": 604, "failit": 604, "point_suit": [604, 667], "ctor_and_gett": 604, "ctor_and_getters_const": 604, "default_ctor": [604, 666, 667, 668, 669, 745, 747], "equal_method": 604, "p3": 604, "p4": [604, 891], "assert_fals": [604, 609, 614, 616, 621, 650, 666, 667, 668, 669, 745, 797], "equal_method_const": 604, "operator_equ": 604, "operator_equals_const": 604, "move_method": 604, "operator_plus_equ": 604, "add_method": 604, "new_p": 604, "add_method_const": 604, "operator_plu": [604, 666, 667, 668], "operator_plus_const": 604, "radiu": 604, "circle_suit": 604, "ctor_and_getters_using_operator_equ": 604, "14159": 604, "53981634": 604, "area_const": 604, "square_suit": 604, "bottom_left": [604, 669], "side_length": 604, "shape_suit": 604, "circle_is_a_shap": 604, "square_is_a_shap": 604, "area_is_shape_functionality__circl": 604, "area_is_shape_functionality__squar": 604, "human": [605, 607, 751, 891, 913, 1083, 1129, 1215], "ineffici": [605, 720, 1001, 1035], "epath": 605, "bag_copy_suit": [605, 793], "find_by_int_ok": [605, 793, 794, 795], "find_by_int_nok": [605, 793, 794, 795], "remove_by_int_ok": [605, 793, 794, 795], "bag_unique_suit": [605, 795], "bag_shared_suit": [605, 794], "insert_const_ref": [605, 794], "insert_mov": [605, 794], "tyo": 606, "sensor_const_suit": [606, 607], "is_a_sensor": [606, 607], "5731": 606, "aptli": 607, "23062": 607, "w1sensorfactori": 607, "find_by_address": 607, "sensor_w1_factory_suit": 607, "tmpdir_fixtur": 607, "device_dir": 607, "create_directori": 607, "ofstream": [607, 797], "42459": 607, "temp_milli": [607, 608], "w1_fs_root": 607, "sensor_factori": 607, "0x02131d959eaa": 607, "assert_n": [607, 643, 665, 666, 745, 747, 794, 795, 850], "horizon": 607, "0x012345678901": 607, "w1_sensor_suit": [607, 608], "test_read_sensor": [607, 608], "36700": 607, "basedir": 607, "0x2131d959eaa": 607, "dcmake_toolchain_fil": [608, 1084, 1099], "20687": 608, "write_temperatur": 608, "thaht": 608, "filename_pattern": 608, "xxxxxx": 608, "mkstemp": 608, "unlink": [608, 1041, 1077], "to_str": 608, "off_t": [608, 1025, 1035, 1040, 1076], "lseek": [608, 1035, 1040, 1076], "seek_set": [608, 1025, 1040, 1076], "nwritten": [608, 1029, 1030, 1031, 1032, 1037, 1040, 1076, 1080], "algo": [609, 642, 643, 677, 678], "copy_into_vector": 609, "stl_exercises_suit": [609, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625], "required_cont": 609, "find_in_vector": 609, "my_vec": [609, 625], "wladimir": 609, "sort_in_plac": 609, "required_output": [609, 610, 611, 612, 624], "orig_input": [609, 610, 611, 612, 624], "alement": 610, "is_odd": 610, "filter_greater_10": 611, "filter_odd": 612, "map_insert": 614, "my_map": [614, 703, 704, 705, 706, 707, 708], "map_insert_simpl": 614, "insert_check_dupl": 614, "map_insert_check_dupl": 614, "insert_remove_by_kei": 614, "map_insert_remove_by_kei": 614, "map_remove_by_kei": 614, "map_find": 614, "sensorrepositori": [615, 616, 617, 618, 619, 620, 621, 622, 623], "decript": 615, "sensor_repository_insert_dupl": 616, "ofen": [616, 617, 618, 619, 621, 622], "weltraum": [616, 617, 618, 619, 621, 622], "mond": [616, 621], "sucess": 616, "sensor_repository_insert": 617, "sensor_repository_lookup_neg": 618, "get_sensor": [618, 619, 622], "sensor_repository_lookup_posit": 619, "complaint": 620, "ish": 620, "sensor_repository_remove_nonexist": 621, "remove_sensor": [621, 622], "sensor_repository_remov": 622, "sensor_repository_size_const": 623, "vector_append": 625, "vector_join": 625, "joined_cont": 625, "userdb_map": 626, "userdb_vector": 626, "dan": 626, "sak": 626, "cppcon": [626, 756, 760, 767, 770, 780, 783, 809, 810, 818, 824, 843, 848], "transcrib": 626, "mallocfre": 631, "arrayofinteg": 631, "memoryleak": 631, "arrayboundswrit": 631, "newdelet": 631, "singleinteg": 631, "deletemismatch": 631, "thing1": [633, 634], "thing2": [633, 634], "global_str": 634, "__have_thing_h__": 634, "_content": 634, "denstruct": 634, "destruct": [634, 655, 810, 844, 873], "essenc": [634, 1248], "collaps": 637, "thoroughli": [637, 934], "_mem": [640, 827], "determinist": [640, 820, 843, 1105, 1156], "maybeown": 640, "publicli": 640, "pointerarithmet": 643, "bugp": 643, "105ff": 643, "num_el": 643, "another_arrai": 643, "yet_another_arrai": 643, "108ff": 643, "basics_cxx03": 643, "basics_cxx11": 643, "cbegin": [643, 695, 715, 749, 755, 801], "my_copi": 643, "naivecopi": 643, "cend": [643, 695, 715, 755], "algocopi": 643, "backinsert": 643, "back_insert_iter": [643, 683], "nah": [643, 1250], "insertfind": 643, "make_pair": [643, 706, 709, 834], "erasebyposit": 643, "erasebykei": 643, "domin": 649, "1985": 649, "2003": [649, 1258], "point_c_suit": [650, 652], "struct_initi": 650, "point_init_default": 650, "c_default_constructor_init": 650, "point_create_default": 650, "c_default_constructor_cr": 650, "point_creat": [650, 652], "c_constructor": [650, 652], "eq": [650, 665, 667, 669], "point_equ": 650, "point_not_equ": 650, "eq_n": 650, "point_mov": [650, 652, 660, 661], "point_add": 650, "point_sub": 650, "add_sub": 650, "point_dist": 650, "point_ab": [650, 652], "hyp": [650, 652], "unwant": [650, 700, 739, 748, 834, 961, 1107, 1128, 1152], "cpp_copy_suit": 651, "generated_copy_ctor": 651, "copy1": [651, 845], "copy2": [651, 845], "copy3": 651, "manual_copy_suit": 651, "copy_ctor": [651, 844], "assignment_oper": 651, "point_h": 652, "point_cpp_suit": 652, "constructor_coordin": 652, "inaccessibil": 652, "move_op_pluseq": 652, "whenev": [653, 669, 810], "sth": 654, "dirty_stack": 654, "use_uniniti": 654, "nw": 655, "memberwis": [655, 848], "_c_str": [655, 658, 813], "string_h": [658, 813], "cstring": [658, 801, 806, 813, 814, 848], "tcach": [658, 827], "221601": 658, "julian": [658, 845], "seward": [658, 845], "libvex": [658, 845], "realloc": [658, 700], "0x484465b": 658, "1103": 658, "0x401210": 658, "0x401194": 658, "0x4dc8c80": 658, "0x401188": 658, "0x484222f": 658, "0x4011c5": 658, "0x40116f": 658, "freed": [658, 740, 943, 1028, 1105], "destroi": [658, 735, 772, 806, 815, 820, 846, 974], "221807": 658, "twostr": 658, "twotwostr": 658, "s21": 658, "s22": 658, "segfault": [658, 998, 1081], "paraamet": 659, "__pretty_function__": 659, "0000000000401176": 659, "_z1fi": 659, "00000000004011a0": [659, 764], "_z1fpc": 659, "demangl": [659, 762, 764], "anywher": [660, 1047, 1103], "fpermiss": [660, 704, 835], "accessor": 660, "heisenberg": 660, "nameless": 660, "fab": 660, "arrog": 660, "goodi": [660, 801, 848, 929], "pascal": 662, "uninitil": 662, "pass_by_copi": 662, "references_suit": 662, "tediou": [662, 1022, 1085, 1160], "pass_by_point": 662, "pass_by_refer": 662, "pass_by_const_point": 662, "const_point": 662, "pass_by_const_refer": 662, "const_refer": 662, "accident": [662, 830, 857, 858, 898, 968, 1030, 1149], "pass_by_copy_expens": 662, "copy_expens": 662, "pass_by_const_reference_cheap": 662, "const_reference_cheap": 662, "addend": [663, 750, 804], "straightforwardli": [663, 1166], "add_point": 663, "static_suit": 663, "global_funct": 663, "static_method": 663, "bss": 664, "definition1": 664, "definition2": 664, "forbid": 664, "trickeri": 664, "points_equ": 665, "oddli": 665, "operators_suit": 665, "equals_glob": 665, "difficulti": 665, "equals_object": 665, "vector_addition_glob": 665, "vector_addition_object": 665, "point_plus_equ": 665, "combo": [666, 668, 1086], "cuboid_suit": 666, "front_bottom_left": 666, "point_whl_ctor": 666, "operator_eq_n": [666, 667, 668, 669], "operator_pluseq": [666, 667, 668], "operator_minuseq": [666, 668], "operator_minu": [666, 668], "operator_ostream": [666, 667, 668, 669], "buf": [666, 667, 668, 669, 1017, 1025, 1035], "entirei": [666, 668, 669], "starting_point": 667, "implementation_in_cpp_fil": 667, "rectangle_suit": [667, 669], "pluseq": 667, "operator_unary_minu": [667, 668], "minus_p": [667, 668], "point3d_suit": 668, "coordinates_ctor": 668, "071067812": 668, "69041576": 668, "top_right": 669, "top_left": 669, "bottom_right": 669, "rational": [669, 703, 761, 848, 1066], "operator_plus_equal_vec": 669, "plus_vec": 669, "dothat": [671, 672], "dothi": [671, 672], "dothos": [671, 672], "dammit": [671, 672, 755], "thisexcept": 672, "thatexcept": 672, "thrown": [672, 724, 1080], "myexcept": 672, "error_detect": 672, "granular": [672, 955, 1067], "typenam": [674, 675, 759, 761, 773, 807, 812, 822, 825, 831, 837, 844], "a_begin": [678, 680], "a_end": [678, 680], "src_begin": [678, 682], "src_end": [678, 682], "dst_begin": [678, 682], "zeroth": 679, "warrai": 681, "unflex": 683, "shrink_to_fit": 683, "prealloc": [683, 684], "wnonnul": 684, "gool": [685, 756], "cplusplu": [687, 688, 689, 690, 691, 693, 694, 695, 696, 699, 709], "int_arrai": [687, 689, 693, 696], "binarili": 687, "is_el": 687, "original_begin": 688, "original_end": 688, "copy_run": 688, "original_run": 688, "int_array_c": 689, "match_666": 690, "match_42": 690, "x_equals_666": 690, "x_equals_4": 690, "x_equal": 690, "_criterion": 690, "yesno": [690, 857, 858], "output_stern": 691, "output_bindestrich": 691, "output_with_prefix": 691, "_prefix": [691, 801], "reversed_": [695, 715], "less_revers": 696, "greater_than": 696, "liek": 700, "logarithm": 700, "mein_int_arrai": 700, "insert_po": 700, "new_elems_as_vector": 700, "elems_to_insert": 700, "realiz": [703, 743, 1156], "keytyp": [703, 800], "valuetyp": [703, 800], "some_map": 703, "key_typ": [703, 705], "mapped_typ": [703, 705], "value_typ": [703, 705, 761, 801], "emplac": 703, "collis": 703, "zweiundvierzig": 703, "out_of_rang": [703, 708], "__cxx11": [704, 797, 831, 835], "basic_str": [704, 720, 797, 831], "mymap": [705, 706, 707, 708], "sechshundersechsundsechzig": 705, "kv": 705, "pre11": [705, 706], "einundfuenfzig": [705, 706, 707, 708], "vierundfuenfzig": [705, 706, 707, 708], "dreihundertsechsundvierzig": [705, 706, 707, 708], "tausendein": [705, 706, 707, 708], "tausendzwei": [705, 706, 707, 708], "retval_7": 706, "retval_2": 706, "n_remov": 707, "found_value_1001": 708, "found_value_666": 708, "found_valu": 708, "joerg_svnr": 709, "caro_svnr": 709, "johanna_svnr": 709, "philipp_svnr": 709, "datenzwilling_von_joerg": 709, "faschingzwil": 709, "meine_map": 709, "datenzwil": 709, "equal_rang": 709, "found_rang": 709, "svnr_notexist": 709, "1234567": 709, "memory_resourc": 710, "auto_ptr": [717, 810, 1258], "string_suit": 720, "another_hello": 720, "greeting1": 720, "greeting2": 720, "aaron": 720, "adam": 720, "stoi": [720, 724, 748, 1037, 1040, 1043], "stol": 720, "stoll": 720, "stoul": 720, "stoull": 720, "stof": 720, "stold": 720, "namesapc": 720, "convert_to_signed_integ": 720, "numstr": 720, "convert_to_unsigned_integ": 720, "invalid_argu": 720, "convert_to_number_error": 720, "convert_from_someth": 720, "i_str": 720, "ui_str": 720, "666000": 720, "sprintf": [720, 1037, 1040, 1080, 1081], "print_char": 721, "parse_passwd_lin": 724, "homedir": 724, "line_invalid": 724, "passwd_user_suit": 724, "object_construction_and_member_access": 724, "passwd_error_suit": 724, "parse_passwd_line__fak": 724, "fake": [724, 934], "throwing_and_catch": 724, "getpwent": 724, "ctrl": [725, 1081, 1134], "architecton": 728, "celebr": 731, "trittsich": [731, 732], "age_by_n_year": 731, "user_init": 732, "userdb_insert": 733, "doesnotexist": [734, 736], "isvalid": [734, 735, 736], "unnatur": 735, "_user": [735, 986], "thereaft": 735, "wrinkl": 735, "usernotfound": 735, "unreach": [735, 1014], "userdb_search_by_lastnam": 736, "undetect": 736, "userdb_init": 737, "peril": 739, "get_valu": [739, 740, 743, 744, 839], "inher": [739, 740, 743, 744, 1069, 1158], "mysensor": [739, 740, 743, 744], "basetemp": [739, 744], "_correct": [739, 743, 744], "nonempti": 740, "_base": 743, "rudimentari": [744, 1273], "misspel": [744, 1032], "any_suit": 745, "typeid": 745, "a2": 745, "bad_cast": 745, "bad_any_cast": 745, "pointer_cast": 745, "reference_cast": 745, "charp": [745, 747], "char_ptr_car": 745, "cmp": [745, 848], "variant_suit": 747, "holds_altern": 747, "converting_ctor": 747, "bad_access": 747, "int_seen": 747, "float_seen": 747, "string_charp": 747, "no_default_ctor": 747, "20240913": [747, 801], "old_crap": 748, "old_crap2": 748, "ctime": 748, "srand": 748, "rand": 748, "seen_zero": 748, "uh": 748, "might_fail": 748, "wunus": 748, "unused_vari": 748, "misguess": 748, "ado": [749, 1051, 1217], "mytyp": 749, "spellabl": 749, "0x7ffcd604846c": 749, "0x7ffcd6048468": 749, "iref": 749, "0x7ffffefe2b54": 749, "0x7ffffefe2b50": 749, "0x7ffc59ebd7bc": 749, "ciref": 749, "0x7ffc23e46284": 749, "0x7ffe4a148064": 749, "0x7ffc528e013c": 749, "distance_origin": 750, "origin_dist": 750, "criteria": [750, 875, 1237], "predic": 750, "void_funct": 750, "bind_suit": 750, "plain_void_funct": 750, "one_parameter_funct": 750, "plain_one_parameter_funct": 750, "minus_hardcod": 750, "_1_minus_2": 750, "minus_swap_paramet": 750, "second_minus_first": 750, "_2": [750, 751], "minus_hardcode_first_paramet": 750, "_42_minus_param": 750, "_i": [750, 804], "funcfunc": 750, "tradeoff": [750, 989], "oneimplement": 751, "anotherimplement": 751, "do_much_work": 751, "c_using_on": 751, "c_using_anoth": 751, "explanatori": 751, "pod": 751, "metaphys": 751, "ostreamlogg": 751, "databaselogg": 751, "logfunc_t": 751, "funcptrlogg": 751, "somebusinessclasswithneedforlog": 751, "successfulli": [751, 866, 1004, 1236, 1243], "do_stupid_log": 751, "ostream_logg": 751, "database_logg": 751, "funcptr_logg": 751, "busy_logging_to_ostream": 751, "busy_logging_to_databas": 751, "busy_logging_to_funcptr": 751, "foo_func": 751, "explos": 751, "pointcloud": [753, 756], "_point": 753, "data_": [755, 779], "memoriz": 755, "brace_initialization_suit": 756, "explicit_ctor_cal": 756, "initlist_ctor_cal": 756, "explicit_ctor": 756, "initlist_ctor": 756, "disabigu": 756, "nightmar": [756, 810, 1101], "epoch": 757, "time_t": [757, 839], "notion": 757, "system_clock": [757, 839], "monoton": [757, 992, 994], "ntp": 757, "steady_clock": 757, "timepoint": 757, "steadili": 757, "high_resolution_clock": 757, "brand": 757, "time_point": [757, 819, 839], "spent_milli": 757, "duration_cast": 757, "compiletim": [759, 765], "4ul": 759, "4l": 759, "canon": [759, 984, 1016], "cacnon": 759, "satisfact": [759, 761], "is_integral_v": 759, "_tp": [759, 835, 846], "soo": 759, "abbrev": 759, "hendrik": 760, "niemey": 760, "hypotenus": 761, "sumsq": 761, "__gnu_cxx": 761, "__alloc_trait": 761, "same_a": 761, "highlight": [761, 940], "contains_double_lik": 761, "const_cast": 762, "0000000000402010": 762, "the_map": 762, "00000000004041a0": 762, "the_arrai": 762, "0000000000402020": 762, "uncool": [763, 1116], "callchain": 763, "add3": [763, 764], "godbolt": 764, "precalcul": 764, "0000000000401136": 764, "prove": [764, 812, 870], "clang": 764, "constev": [764, 798], "defeat": 764, "newest": [764, 1066], "siof": 765, "global_point_standalon": 765, "global_point_depend": 765, "sequence_lock": 765, "use_sequ": 765, "tini": [765, 869, 1083], "afford": [765, 937, 1066], "grimm": [767, 824, 831], "schurr": 767, "turner": 767, "ctlflow": 768, "int_word": 768, "fourti": 768, "shared_count": 768, "shared_resourc": 768, "shared_resource_alloc": 768, "shared_resource_fre": 768, "scoped_lock": [768, 822, 825], "goodold": 768, "rangefor": 768, "stackless": 770, "co_return": [770, 774, 775, 776, 777, 778], "hello_inst": [770, 774, 775, 776, 777, 778], "promise_typ": [770, 772, 773, 775, 776, 777, 778], "get_return_object": [770, 772, 773, 775, 776, 777, 778], "suspend_alwai": [770, 772, 773, 775, 776, 777, 778], "initial_suspend": [770, 772, 773, 775, 776, 777, 778], "final_suspend": [770, 772, 773, 775, 776, 777, 778], "return_void": [770, 773, 775, 776, 777, 778], "unhandled_except": [770, 772, 773, 775, 776, 777, 778], "suspend_nev": [770, 772, 773, 777], "coroutine_handl": [770, 772, 773, 776, 777, 778], "from_promis": [770, 772, 773, 776, 777, 778], "_coro": [770, 772], "yield_valu": [770, 772, 773, 776, 777, 778], "sentinel": [770, 773, 777, 778, 835], "_promis": [770, 773, 776, 777, 778], "deciph": 770, "diagrammat": 770, "wei": 770, "co_yield": [771, 772, 773, 774, 776, 777, 778], "_elem": 772, "ed": [773, 776, 777, 778, 921, 1025], "size_": 779, "timur": 780, "doumler": 780, "aligned_alloc": 781, "alignof": 781, "pmr": 781, "heis": [781, 785], "polymorp": 782, "_temperatur": [782, 784, 786, 788], "klau": 783, "iglberg": 783, "steve": [783, 1066], "bush": 783, "bielak": 783, "gopel": 783, "static_cast": [784, 797], "derivedtyp": 784, "sensorptr": 786, "get_temperature_visitor": [787, 789], "sourcecopy": 790, "_resourc": 790, "movabl": 790, "sourcemov": 790, "sinkcopy": 790, "sinkmov": 790, "_sourc": 790, "_sink": 790, "concretesourc": 790, "_manyfold": 790, "sourcea": 790, "sourceb": 790, "concretesink": 790, "sink1": 790, "sink2": 790, "bagcopi": 793, "find_by_int": [793, 794, 795], "remove_by_int": [793, 794, 795], "nremov": [793, 794, 795], "bagshar": 794, "make_shar": [794, 800, 801, 821, 847], "weakref": 794, "sharedref": 794, "baguniqu": 795, "constbag": 795, "withing": 797, "filesystem_suit": 797, "cd_to_tmpdir_fixtur": 797, "path_compose_compar": 797, "path_compose_compare_2": 797, "is_rel": 797, "path_abs_rel": 797, "abspath": 797, "relpath": 797, "remove_filenam": 797, "replace_filenam": 797, "replace_extens": 797, "path_component_access": 797, "dir_part": 797, "path_iter": 797, "current_directori": 797, "cwd_chdir": 797, "current_path": 797, "create_directory_error": 797, "filesystem_error": 797, "char_trait": 797, "char_typ": 797, "_chart": 797, "_trait": 797, "_alloc": 797, "_s_copi": 797, "size_typ": 797, "_m_replac": 797, "tcc": 797, "2171": 797, "canonicalizeforstdlibvers": 797, "__builtin_memcpi": 797, "9223372036854775810": 797, "9223372036854775813": 797, "__s1": 797, "__s2": 797, "create_directory_singl": 797, "is_regular_fil": 797, "create_directory_multipl": 797, "is_block_fil": 797, "is_character_fil": 797, "is_empti": 797, "is_fifo": 797, "is_oth": 797, "is_socket": 797, "is_symlink": 797, "greatest": 797, "2691": [797, 887], "inod": [797, 943, 950], "919153": 797, "0644": [797, 876, 890, 1083], "system_u": 797, "object_r": 797, "passwd_file_t": 797, "111282886": 797, "0100": 797, "737858445": 797, "743858359": 797, "file_s": 797, "hard_link_count": 797, "last_write_tim": 797, "ext4": [797, 984], "btrf": 797, "ntf": 797, "directory_iter": 797, "dirit": 797, "recursive_directory_iter": 797, "desc": [800, 801], "030": [800, 846, 1075, 1076, 1079, 1080], "050": [800, 1079, 1080], "key_value_pair": 800, "070": 800, "080": 800, "up_1_to_10": 800, "down_1000_to_980": 800, "todo_item": 800, "nocopi": 800, "add_item": 800, "_list": 800, "evangelist": 800, "vocabulari": [801, 1259], "te": [801, 984], "_descr": 801, "_args2": 801, "_indexes2": 801, "__tuple2": 801, "distinct": [801, 867, 953, 1019, 1157], "item_up_1_to_10": 801, "item_down_1000_to_980": 801, "radic": 801, "yetanotheritem": 801, "allocatingitem": 801, "forgotten": [801, 1066], "functo": 801, "unteach": 801, "elsewher": [803, 984, 1110], "lamda": 803, "print_messag": [803, 805, 806], "surround": [803, 848, 849, 850, 1066], "constantli": [804, 1001, 1066, 1068], "mere": 804, "catur": 804, "akin": 804, "lambda_capture_suit": 804, "explicit_by_copi": 804, "lambda_capure_suit": 804, "explicit_by_refer": 804, "dubio": 804, "explicit_mix": 804, "initialized_captur": 804, "all_by_refer": 804, "all_by_copi": 804, "all_by_copy_except": 804, "this_captur": 804, "add_to_yourself_and_guarantee_programmers_job_secur": 804, "print_message_func": [805, 806], "_messag": [805, 806], "piti": 806, "wouldn": 807, "mpp": 809, "precompil": [809, 984, 1083], "speedup": 809, "rei": 809, "bori": 809, "kolpackov": 809, "abandon": [809, 1042], "olsen": [810, 843], "nicolai": [810, 835, 838], "josutti": [810, 835, 838], "smartptr": [811, 844, 845], "_p": [812, 844], "handwritten_suit": [812, 844], "explicit_mov": [812, 844], "assert_double_eq": [812, 844, 845], "create_constant_sensor": [812, 846], "return_by_copi": 812, "another_sensor": 812, "assigne": 812, "dubiou": 812, "bugfre": 813, "string_move_suit": 813, "make_a_string_from": 813, "ret_": 813, "move_return": 813, "move_assign": 813, "assig": 813, "person_h": 814, "person_suit": 814, "contructor": 814, "outliv": [815, 1103], "rvr": 815, "msdn": 816, "devil": 816, "singlethread": 816, "god": 816, "paralleliz": 817, "cancel": [817, 1058], "interlockedincr": 818, "fedor": 818, "piku": 818, "mutual": [819, 1066, 1118], "try_lock": 819, "try_lock_for": 819, "unavail": 819, "try_lock_until": 819, "do_something_errorpron": 820, "do_more_of_it": 820, "atomic2": 821, "threadfunc": [821, 824], "local_p": 821, "spoiler": [821, 1116, 1268], "started_promis": 821, "started_futur": 821, "get_futur": [821, 825], "kick": 821, "waiter": [821, 822, 824, 976, 1001, 1055], "make_atomic_shar": 821, "wake": [822, 824, 966, 976, 1022, 1055, 1064, 1071], "stop_wait": 822, "wait_for": [822, 825], "wait_until": [822, 825], "notify_on": 822, "notify_al": 822, "thunder": 822, "herd": 822, "condvar": 822, "threadsafequeu": 822, "maxelem": 822, "_maxelem": 822, "dur": [822, 825], "_lock": [822, 825], "pop_front": 822, "2m": [822, 825, 928], "1m": [822, 855, 928], "consumer1": 822, "consumer2": 822, "pthread_cond_init": [822, 1055], "_not_empti": 822, "_not_ful": 822, "pthread_cond_wait": [822, 1055], "pthread_cond_sign": [822, 1055], "pthread_cond_t": [822, 1055], "unique_lock": 822, "onlinedoc": 824, "numtim": 824, "1000ul": 824, "2000000000": 824, "1066359623": 824, "global_widget": 824, "widget": 824, "unsaf": 824, "1476027": 824, "ints_lock": 824, "2000000": [824, 928], "retri": [824, 1017, 1127, 1236], "memory_ord": 824, "acq_rel": 824, "seq_cst": 824, "atomic_flag": 824, "contend": 824, "oldstat": 824, "_flag": 824, "test_and_set": 824, "cst": 824, "memory_order_relax": 824, "mckennei": 824, "boehm": 824, "dathskovski": 824, "arvid": 824, "norberg": 824, "set_except": 825, "exception_ptr": 825, "shared_futur": 825, "uncoordin": 825, "ten_million_years_": 825, "answer_poll_interval_m": 825, "answer_valid": 825, "chew_answ": 825, "reaction": [825, 1014, 1066, 1107], "answer_computation_tim": 825, "answer_poll_interv": 825, "ten_million_year": 825, "lockguard": 825, "_answer_valid": 825, "_answer": 825, "_data": [825, 1098], "binary_semaphor": 825, "__cplusplu": 825, "202001l": 825, "_notifi": 825, "answer_promis": 825, "answer_futur": 825, "make_exception_ptr": 825, "lackingdefaultconstructor": 826, "ldc": 826, "hasdefaultconstructor": 826, "hmpf": 826, "hdc": 826, "ownsmemori": 827, "om_copi": 827, "incontin": 828, "leaf": [828, 910], "method1": 828, "method2": 828, "rvref": 831, "lo_funct": 831, "adventur": 831, "jaud": 831, "factset": 831, "570f242261f8": 831, "inde": 833, "range_based_for_suit": 834, "map_pre_11": 834, "map_bas": 834, "map_basic_const_auto_refer": 834, "ific": [834, 850], "map_unpack_copi": 834, "map_unpack_refer": 834, "map_unpack_const_refer": 834, "min_el": 835, "forward_rang": [835, 837], "drop_view": 835, "filter_view": 835, "ref_view": 835, "ranges_util": 835, "view_interfac": 835, "_deriv": 835, "sized_sentinel_for": 835, "decltyp": 835, "__cust": 835, "declval": 835, "__cust_access": 835, "__begin": 835, "_s_size": 835, "_m_deriv": 835, "forward_iter": 835, "coll": 835, "_vp": 835, "__simple_view": 835, "random_access_rang": [835, 837], "sized_rang": 835, "comitte": [835, 838], "lazili": 837, "first_two_drop": 837, "first_two_dropped_next_two_taken": 837, "oldstyl": 837, "inspir": 837, "refin": 837, "input_rang": 837, "bidirectional_rang": 837, "contiguous_rang": 837, "tristan": 838, "brindl": 838, "cppnorth": 838, "l0bhzp6hmdm": 838, "nico": 838, "accu": 838, "log_on": 839, "_filenam": 839, "ifstream": 839, "is_open": 839, "vtabl": [840, 844], "designwis": 841, "uptr": 841, "myclass": [843, 845], "unwind": 843, "yoky6hzlkx": 843, "steal": [844, 1069], "cxx11_unique_ptr_sensors_h": 844, "_temp": 844, "basic_const": 844, "raw_": 844, "raw_s_ref": 844, "copy_ctor_bad": 844, "assignment_operator_bad": 844, "gtest_filt": [844, 845, 1248], "reveal": [844, 1066, 1103], "autoptr": 844, "copy_ctor_good_autoptr_styl": 844, "unexpectedli": 844, "assignment_operator_good_autoptr_styl": 844, "destiat": 844, "excus": 845, "shared_ptr_suit": 845, "rs1": [845, 846], "rs2": [845, 846], "rand1": [845, 846, 847], "rand2": [845, 846, 847], "cann": 845, "basic_make_shar": 845, "set_refer": 845, "_ref": 845, "cyclic_refer": 845, "303549": 845, "unique_ptr_suit": 846, "threw": 846, "ownership_error": 846, "unique_ptr_suite_ownership_error_test": 846, "testbodi": 846, "_dp": 846, "default_delet": 846, "verbose_ctor": 846, "make_unique_auto": 846, "tranfer": 846, "create_random_sensor": 846, "implicit_ownership_transf": 846, "holdsasensor": 846, "taking_ownership_in_own_cod": 846, "sompil": 846, "raw1": 846, "tie": 847, "unti": 847, "weak_ptr_suit": 847, "borrowed_sensor": 847, "another_refer": 847, "sensor_ref": 847, "measurement_thread": 847, "op": [848, 894, 1159], "my_kei": 848, "k1": 848, "k2": 848, "compatible_point": 848, "incompat": [848, 1133, 1139, 1147, 1158], "lotsa": [848, 1164, 1236], "freaki": 848, "steroid": [848, 1221], "indistinguish": 848, "weak_ord": 848, "uncompar": 848, "partial_ord": 848, "aim": 848, "k3": 848, "string_ord": 848, "fiasco": 848, "fallback": [848, 1107, 1127], "cmp1": 848, "m\u00fcller": 848, "episod": 848, "wchar_t": 849, "parrai": 850, "decompos": 850, "structured_binding_suit": 850, "struct_copi": 850, "struct_refer": 850, "struct_const_refer": 850, "tuple_copi": 850, "make_tupl": 850, "tuple_refer": 850, "tuple_const_refer": 850, "array_copi": 850, "array_refer": 850, "array_const_refer": 850, "suspici": 850, "packen": 852, "gunzip": 853, "zgrep": 853, "zcat": 853, "zless": 853, "intact": [853, 1184, 1188], "mantra": 855, "viro": 855, "cpio": 855, "cleaner": 855, "archivformat": 855, "lzma": 855, "430mb": 855, "95mb": 855, "74mb": 855, "5m": [855, 928], "64mb": 855, "togeht": 856, "gfs2": 856, "quota": [856, 978], "zcf": 856, "decompress": [856, 1096], "zxf": 856, "ztf": 856, "dirt": 856, "livingroom": 856, "grumbl": 856, "reat": 856, "tract": 856, "ell": [856, 891], "vv": 856, "supplementari": [857, 858, 866, 868], "1021": [857, 858, 866], "somefil": [857, 858, 897], "chgrp": [857, 858, 876, 883, 885], "fellow": [857, 858], "picki": [857, 858, 1120], "ttyusb1": 861, "stick": [861, 866], "2006854": 861, "sdc": 861, "2006823": 861, "deserv": [861, 921, 1058, 1085], "trash": [861, 891], "burn": [861, 937], "1mib": 861, "1mibf": 861, "0m": [861, 913, 1067], "mkf": 861, "entropi": 861, "prepend": [862, 972, 984, 1145], "my_vari": 862, "1034184": 862, "1035812": 862, "ancestor": [862, 869, 1015], "decriptor": [863, 864, 1031], "getti": 866, "kerbero": [866, 868], "gnome3": 866, "agetti": 866, "cleartext": [866, 887], "brute": [866, 1012, 1085], "crack": 866, "attack": [866, 1012, 1101, 1220, 1259], "hierarch": 867, "peripher": [867, 1264], "grand": 867, "ten_integ": 868, "unfair": [868, 1069], "seg": [868, 930], "kbyte": 868, "pend": [868, 992, 1069, 1082], "62715": 868, "819200": 868, "pstree": 869, "modemmanag": 869, "journ": 869, "abrtd": 869, "auditd": 869, "bluetoothd": 869, "cupsd": 869, "lau": 869, "enemi": 870, "guidanc": 870, "dicdat": 870, "acknowledg": [870, 928], "fight": 870, "seamless": [870, 1233], "exampk": 870, "altruism": 870, "mkfifo": [871, 875], "stdin_fileno": [873, 1025, 1035, 1081, 1158], "stdout_fileno": [873, 1021, 1022, 1025, 1031, 1042, 1067, 1076, 1080, 1081, 1158], "stderr_fileno": [873, 1025, 1158], "religi": 873, "fed": 873, "filefor": 873, "weekli": 874, "dup": [874, 943, 1028, 1077], "compet": [875, 936], "award": [875, 922], "plumber": 875, "sniff": 875, "fifo": [875, 1025, 1271], "rendezv": 875, "unnam": 875, "chown": [876, 888, 1098], "useradd": [876, 1098], "groupadd": 876, "usermod": 876, "groupmod": 876, "teammember42": 876, "manfromthestreet": 876, "jun": [876, 1085], "triplet": 876, "1003": 876, "110100100": 876, "110000000": 876, "0600": 876, "111101101": 876, "0755": [876, 1083], "bitmask": [876, 887, 1081], "1317": 887, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 887, "0g2rqr9cnydnqq5unt": 887, "wpu8jyzeuxktapl0": 887, "burnout": 887, "retyp": 887, "rwsr": [887, 888], "32712": 887, "rwxrwxrwx": 887, "4755": [887, 888], "uid_t": 888, "getuid": 888, "geteuid": 888, "rwxrwxr": [888, 1021, 1083, 1084, 1085], "24456": 888, "drwxrwxrwt": 889, "0022": 890, "strain": 891, "injuri": 891, "diseas": 891, "outout": 891, "20k": 891, "olevel": 891, "debugopt": 891, "expr1": 891, "expr2": 891, "daystart": 891, "regextyp": 891, "synopsi": 891, "findu": 891, "til": 891, "findutil": 891, "pression": 891, "print0": 891, "noob": [891, 1278, 1282], "cursor": [891, 972, 1217], "pos1": 891, "misconfigur": 891, "esc": 891, "freak": 891, "gitk": 891, "cvsserver": 891, "gitview": 891, "oesterreich": 891, "clearanc": 891, "e7d76d19": 891, "dd3d": 891, "4d52": 891, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 891, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 891, "gif": [891, 1221], "einkommensteuerbescheid1": 891, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 891, "einkommensteuervorauszahlungsbescheid1": 891, "immobilienbewertung": 891, "etw": 891, "confirm": 891, "ova": 891, "umsatzsteuerbescheid1": [891, 913, 914], "h0020211105124337": 891, "vk9vst311192021_0022021": 891, "progress": [893, 1250], "img_": 893, "jpg": 893, "bilder": 893, "121751": 894, "garbage1": [895, 896, 898, 902, 903], "garbage2": [895, 896, 898, 902, 903], "diretori": 897, "sweetheart": [897, 903, 910, 1061], "citi": 897, "mqueue": 906, "leavel": 910, "hintingx": 913, "1048576": 913, "drwx": [913, 916], "36817": 913, "umsatzsteuerbescheid": 914, "finanzamt": 914, "abgab": 914, "neighbor": [915, 1215], "enat": 917, "dereferenzieren": 919, "50k": [919, 920], "rekursiv": 920, "eintr\u00e4g": 920, "gefiltert": 920, "un\u00fcblich": 920, "gebr\u00e4uchlich": 920, "geh\u00f6ren": 920, "mmin": 920, "h\u00f6chsten": 920, "gefundenem": 920, "eintrag": 920, "heissen": 920, "beginnen": 920, "versteht": 920, "vergessen": 920, "j\u00fcnger": 920, "verkn\u00fcpft": 920, "metacharact": [920, 1006], "gr\u00f6\u00dfer": 920, "lobal": 921, "egular": 921, "xpression": 921, "rint": 921, "sed": [921, 1262, 1264], "tream": 921, "itor": 921, "verb": 921, "entor": 921, "perlr": 921, "perlretut": 921, "perlrequick": 921, "jeffrei": 921, "friedl": 921, "reilli": [921, 963], "philosopi": 925, "toether": 925, "hc": 925, "325324": 925, "xarg": 925, "bitbak": 927, "behan": 927, "webster": 927, "drone": 928, "electronic speed control": 928, "vehicl": [928, 1265], "rack": 928, "recognit": [928, 1215], "flight": [928, 1066], "fritz": [928, 936], "brigh": 928, "heinrich": 928, "polar": 928, "uevent": [928, 934, 936, 937, 1039], "cheapest": 928, "quicrun": 928, "16bl30": 928, "brake": 928, "11v": 928, "conclud": [928, 936, 1066], "lipo": 928, "madli": 928, "transmitt": 928, "throttl": 928, "neutral": [928, 1217], "chop": 928, "kindli": [928, 1221], "stolen": [928, 972], "mechatron": 928, "50hz": 928, "nanosecond": [928, 936, 1023], "20000000": [928, 1118], "oscil": 928, "10bl60": 928, "000n": 928, "1500000": [928, 1071], "1550000": 928, "1600000": 928, "acceler": 928, "1650000": 928, "1700000": 928, "1750000": 928, "1800000": 928, "1850000": 928, "1900000": 928, "1950000": 928, "logist": [928, 1215], "hobbi": 928, "can bu": [929, 930, 931, 932], "sinowatz": [929, 1108], "volkswagen": 929, "octet": 929, "arbitr": 929, "priorit": [929, 966, 982, 1041, 1064], "can_fram": [929, 931], "canid_t": [929, 931], "can_id": [929, 931], "eff": [929, 931], "rtr": [929, 931], "__u8": [929, 931], "can_dlc": [929, 931], "__attribute__": [929, 931], "can0": [930, 931], "noarp": 930, "qdisc": 930, "qlen": 930, "txqueuelen": 930, "pfifo_fast": 930, "promiscu": 930, "allmulti": 930, "minmtu": 930, "maxmtu": 930, "restart": 930, "tq": 930, "prop": 930, "seg1": 930, "seg2": 930, "sjw": 930, "brp": 930, "gs_usb": 930, "tseg1": 930, "tseg2": 930, "brp_inc": 930, "48000000": 930, "numtxqueu": 930, "numrxqueu": 930, "gso_max_s": 930, "65536": 930, "gso_max_seg": 930, "65535": [930, 934], "tso_max_s": 930, "tso_max_seg": 930, "gro_max_s": 930, "gso_ipv4_max_s": 930, "gro_ipv4_max_s": 930, "parentbu": 930, "parentdev": 930, "relic": 930, "cansend": 930, "candump": 930, "canplay": 930, "cangen": 930, "snif": 930, "can1": [930, 984], "loopback": 930, "pf_can": 931, "sockaddr_can": 931, "ifreq": [931, 978], "ifr": [931, 978], "sock_raw": 931, "can_raw": 931, "ifr_nam": 931, "siocgifindex": 931, "can_famili": 931, "af_can": 931, "can_ifindex": 931, "ifr_ifindex": 931, "sockaddr": [931, 1022], "can_socket": 931, "packt": 931, "frame_layout": 931, "ib3x8": 931, "frame_s": 931, "calcsiz": 931, "recvfrom": 931, "sendto": 931, "lnxpp": 932, "can2udp": 932, "openwrt": 932, "mosi": 932, "miso": 932, "sclk": 932, "broadcom": 932, "bcm2835": [932, 964], "ce0": 932, "3v": [932, 934], "5v": [932, 934], "transceiv": 932, "inter intergrated circuit": 934, "lm-sensor": 934, "rasperri": [934, 937, 985, 1264], "handwork": [934, 937], "texa": 934, "maker": 934, "dtparam": [934, 936, 937], "i2c_arm": [934, 936, 937], "gpio2": 934, "gpio3": 934, "lsmod": [934, 936, 937, 961], "i2c_bcm2835": [934, 936, 937], "fe804000": [934, 937, 1039], "i2c_dev": [934, 936], "sot": 934, "7v": 934, "rail": 934, "idc": 934, "gnd": [934, 937], "vdd": 934, "smbdat": 934, "smbclk": 934, "unconnect": 934, "0x49": 934, "0x4a": 934, "jumper": 934, "3v3": [934, 937], "scl": [934, 937], "probe": [934, 936, 937, 961], "i2c_slav": 934, "0x0703": 934, "o_rdwr": [934, 1025, 1032, 1041, 1042, 1043, 1076], "msb_lsb": 934, "msb": 934, "lsb": [934, 1084, 1086], "dev_fd": 934, "perror": [934, 1017, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1037, 1040, 1041, 1042, 1043, 1047, 1067, 1073, 1076, 1080], "libncurs": 934, "raspberrypi": [934, 984, 985, 1085, 1093], "bcm2711_defconfig": 934, "v7l": 934, "semiconductor": 934, "j4": 934, "zimag": [934, 984, 985], "dtb": [934, 984, 985], "modules_instal": [934, 959, 984], "overlai": [934, 936, 984], "kernel7l": 934, "new_devic": [934, 937], "0048": 934, "modalia": 934, "preinstal": 934, "hwmon0": 934, "thermal": 934, "thermal_zone0": 934, "hwmon1": [934, 937], "temp1_max": 934, "temp1_max_alarm": 934, "temp1_min": 934, "temp1_min_alarm": 934, "update_interv": 934, "22000": 934, "randomli": [934, 937], "nomenclatur": 934, "capacitor": 934, "brushless": 935, "pulse width modul": 936, "resistor": 936, "bright": 936, "potentiomet": 936, "caveat": [936, 947, 986], "preemption": [936, 976, 982, 989, 1064, 1068, 1069], "ssop": 936, "0b1000000": 936, "buse": [936, 937], "i2cdetect": 936, "charactr": 936, "pca": 936, "0x70": [936, 974], "simultan": [936, 1080], "peculiar": 936, "pca9685a": 936, "nxp": 936, "dtoverlai": [936, 937], "pwm_pca9685": 936, "regmap_i2c": 936, "3f804000": 936, "0040": [936, 1039], "npwm": 936, "unexport": [936, 1039], "butt": [936, 1096], "intercept": [936, 1107], "dim": 936, "fade": 936, "800000": [936, 1213], "600000": [936, 1213], "50000": 936, "apolog": [936, 1066], "kenel": 936, "devlop": 936, "pleasur": 936, "unstabl": 937, "parasit": 937, "bitbang": 937, "gpiopin": 937, "addon": 937, "pinout": 937, "01144fe43baa": 937, "w1_bus_master8": 937, "w1_bus_master1": 937, "amaz": 937, "400000000000": 937, "800000000000": 937, "behalf": [937, 1019, 1083], "ad0": 937, "ad1": 937, "ad2": 937, "vcc": 937, "0x18": 937, "0b0011000": 937, "shortli": [937, 1107], "execstart": 937, "36864": 937, "w1_bus_master2": 937, "w1_bus_master3": 937, "w1_bus_master4": 937, "w1_bus_master5": 937, "w1_bus_master6": 937, "w1_bus_master7": 937, "busno": 937, "abtract": 937, "prepackag": 937, "alarm": [937, 1079, 1082], "conv_tim": 937, "w1_slave_driv": 937, "eeprom": 937, "ext_pow": 937, "w1_slave": 937, "22750": 937, "crc": 937, "rpi_volt": 937, "isa": 937, "in0": 937, "cpu_therm": 937, "temp1": 937, "w1_slave_temp": 937, "reliabl": 937, "radiou": 937, "disappear": 937, "0c4000000000": 937, "0x28": 937, "dalla": [937, 1033], "02131d9920aa": 937, "5d": 937, "011432f138f9": 937, "misbehavior": 937, "instabl": 937, "pump": 937, "nuclear": 937, "plant": 937, "device_cr": [939, 940, 943], "cdev_init": [939, 947, 948], "cdev_add": [939, 947, 948], "unhappi": 939, "device_destroi": 939, "my_class": 939, "my_driv": [939, 942, 952, 953, 964, 974, 980, 986, 992, 1003], "mknod": [939, 947, 948], "character devic": [940, 943, 948, 1266], "cdev": [940, 941, 943, 947, 948, 953], "devtmpf": [940, 941, 986], "relatim": 940, "register_chrdev_region": [940, 947, 948], "alloc_chrdev_region": [940, 948], "htmldoc": 940, "chrdev": 940, "dev_t": [940, 948], "baseminor": 940, "bug_on": 940, "module_licens": [940, 961], "maj": 941, "fop": [941, 948], "openat": [942, 1021, 1083], "at_fdcwd": [942, 1021, 1083], "0x7f3d11330000": 942, "einval": [942, 947, 961, 1000, 1083], "enotti": 942, "file_oper": [943, 947, 948, 986], "citizenship": 943, "__user": [943, 998], "loff_t": 943, "unlocked_ioctl": 943, "my_op": 943, "this_modul": 943, "my_open": 943, "my_read": 943, "my_writ": 943, "my_ioctl": [943, 974], "mode_t": [943, 1025, 1029, 1077], "filp": [943, 986, 1000], "vf": 943, "swiss": [943, 1025, 1258], "armi": [943, 1025, 1258], "my_ioctl_request": [943, 945], "my_request_such": 943, "my_request_such_and_such": 943, "endod": 943, "_iow": 943, "_ior": 943, "_ioc": 943, "_ioc_non": 943, "_ioc_read": 943, "_ioc_typecheck": 943, "_ioc_writ": 943, "_iowr": 943, "my_ev": [945, 952, 953, 992, 997], "my_event_typ": 945, "my_event_ioctl": 945, "jiffi": [945, 986, 992], "my_event_list": [945, 952, 953, 974], "list_head": [945, 972, 974, 997], "num_ev": 945, "my_event_list_init": 945, "my_event_list_destroi": 945, "my_event_list_add": [945, 974, 987, 992, 1003], "my_ioctl_add_ev": 945, "printk": [945, 961, 964, 1003], "unregister_chrdev_region": [947, 948], "register_chrdev": 947, "unregister_chrdev": 947, "kern_err": 947, "cdev_del": [947, 948], "my_driver_henkel": 947, "kmem": 948, "opaqu": 948, "majmin": 948, "mkdev": 948, "drivernam": 948, "my_fop": 948, "my_cdev": 948, "devicefil": 948, "ndevic": 950, "module_param": 950, "my_devic": [950, 952, 953, 964, 980, 992], "doubli": [950, 974, 986], "private_data": [950, 980, 986], "kbuild": [952, 953], "torn": [952, 1253], "ccflag": [952, 953], "container_of": [953, 1004], "file3": 953, "my_device_init": 953, "my_device_destroi": [953, 992], "howto": 955, "everyt": 955, "vmalloc": 955, "ioremap": [955, 968], "iommu": 955, "pysic": 955, "dma_addr_t": 955, "alloc_pag": 955, "gfp_mask": 955, "get_free_pag": 955, "__get_free_pag": 955, "2order": 955, "__get_dma_pag": 955, "zone": 955, "__free_pag": 955, "free_pag": 955, "dma_handl": 955, "cpu_addr": [955, 980], "dma_alloc_coher": 955, "gfp": [955, 970, 996], "dma_free_coher": 955, "pci_dev": [955, 980], "gfp_kernel": [955, 970, 987], "gfp_atom": [955, 970], "dma_bidirect": 955, "dma_to_devic": 955, "dma_from_devic": 955, "dma_map_singl": 955, "dma_mapping_error": 955, "dma_unmap_singl": 955, "dma_map_pag": 955, "dma_unmap_pag": 955, "dma_address": 955, "sglist": 955, "sg_run": 955, "dma_map_sg": 955, "for_each_sg": 955, "hw_address": 955, "sg_dma_address": 955, "hw_len": 955, "sg_dma_len": 955, "dma_unmap_sg": 955, "nent": 955, "unmap": [955, 980], "dma_sync_single_for_cpu": 955, "dma_sync_sg_for_cpu": 955, "mel": [955, 970], "gorman": [955, 970], "incredibli": 955, "transcript": [957, 984, 1279], "building_a_custom_kernel": 957, "fc33": [957, 961], "extravers": [957, 985], "cleanli": 957, "uncommit": 957, "j6": 957, "fedpkg": 957, "pesign": 957, "grubbi": 957, "33rd": 957, "f33": 957, "builddep": 957, "libexec": [957, 1086, 1096], "symver": [959, 961], "modpost": [959, 961], "module_src": 959, "kernel_build": 959, "install_mod_path": [959, 984], "hello_init": 961, "kern_debug": 961, "hello_exit": 961, "module_init": 961, "module_exit": 961, "exot": 961, "insmod": 961, "rmmod": [961, 992], "dep": 961, "softdep": 961, "rebuilt": 961, "ldd3": [963, 972], "cross_compil": [964, 984, 985], "gpio_request": 964, "gpio_fre": 964, "gpio_direction_input": 964, "gpio_direction_output": 964, "gpio_to_irq": 964, "my_device_activate_gpio": 964, "_destroi": 964, "3f200000": 964, "pinctrl": 964, "request_irq": [964, 966, 980], "free_irq": [964, 966, 980], "preempt_rt": [966, 976], "mainlin": [966, 984, 1069], "irqreturn_t": [966, 980], "irq_handl": [966, 980], "irq": [966, 980, 982, 986, 1067], "opqu": 966, "irq_non": 966, "irq_wake_thread": 966, "irq_handler_t": 966, "irqf_shar": [966, 980], "irqf_trigger_ris": 966, "irqf_trigger_fal": 966, "irqf_trigger_high": 966, "irqf_trigger_low": 966, "iomem": 968, "ioport": 968, "request_mem_region": 968, "0x20200000": 968, "release_mem_region": 968, "asm": [968, 1099], "iounmap": 968, "ioread8": 968, "ioread16": 968, "ioread32": 968, "iowrite8": 968, "u8": 968, "iowrite16": 968, "u16": 968, "iowrite32": 968, "u32": 968, "kmalloc kfre": 970, "dynamic memori": 970, "slab": 970, "gfp_t": [970, 987, 1003], "kzalloc": 970, "kfree": 970, "scarc": 970, "discourag": 970, "init_list_head": 972, "some_data": 972, "list_add": 972, "list_add_tail": 972, "new_payload": 972, "existing_payload": 972, "list_for_each": 972, "list_entri": 972, "run_payload": 972, "list_empti": 972, "list_first_entri": 972, "list_del": [972, 974], "a_payload": 972, "opfer": 974, "corrupt": 974, "ffff91285ae68f00": 974, "ffff9128406cec00": 974, "list_debug": 974, "0xb0": 974, "0xdd": 974, "ksys_ioctl": 974, "0x82": 974, "0xc0": 974, "__x64_sys_ioctl": 974, "do_syscall_64": 974, "0x4d": 974, "entry_syscall_64_after_hwfram": 974, "0x44": 974, "0xa9": 974, "unprotect": [974, 986, 1128], "nevent": [974, 997], "my_device_list": 974, "preemptibl": [976, 1069], "holder": [976, 1126], "mutex_init": 976, "mutex_destroi": 976, "mutex_lock": 976, "mutex_lock_interrupt": 976, "eintr": [976, 1017, 1080, 1081], "mutex_lock_interruptible_nest": 976, "mutex_trylock": 976, "eagain": [976, 986, 1000], "mutex_unlock": 976, "torvald": [976, 984], "trickl": 976, "rtmutex": 976, "rt_mutex": 976, "net_devic": 978, "alloc_netdev": 978, "sizeof_priv": 978, "netdev_priv": 978, "funcion": 978, "ethernet": 978, "etherdevic": 978, "alloc_etherdev": 978, "free_netdev": 978, "register_netdev": 978, "unregister_netdev": 978, "devinc": 978, "hard_start_xmit": 978, "sk_buff": 978, "skb": 978, "transmiss": [978, 1022, 1205], "tx_timeout": 978, "stead": 978, "do_ioctl": 978, "netif_start_queu": 978, "netif_stop_queu": 978, "netif_wake_queu": 978, "udevd": 980, "pci_device_id": 980, "my_id": 980, "pci_devic": 980, "0xdead": 980, "0xbeef": 980, "0xbeee": 980, "module_device_t": 980, "my_prob": 980, "my_remov": 980, "my_suspend": 980, "pm_message_t": 980, "my_resum": 980, "my_shutdown": 980, "pci_driv": 980, "id_tabl": 980, "my_init": 980, "pci_register_driv": 980, "my_exit": [980, 1115], "pci_unregister_driv": 980, "subsystem_vendor": 980, "subsystem_devic": 980, "u64": [980, 994], "dma_mask": 980, "device_count_resourc": 980, "pci_enable_devic": 980, "pdev": 980, "wizardri": 980, "pci_request_region": 980, "pci_set_mast": 980, "pci_clear_mast": 980, "pci_set_dma_mask": 980, "pci_set_drvdata": 980, "ioread": 980, "iowrit": 980, "pci_resource_len": 980, "bar_no": 980, "__iomem": 980, "pci_iomap": 980, "pci_iounmap": 980, "pci_alloc_consist": 980, "os_devic": 980, "_o": 980, "dma_addr": 980, "pci_free_consist": 980, "_size": 980, "_cpu_addr": 980, "t_os_dma_addr__get_n": 980, "_dma_addr": 980, "_os_devic": 980, "dma_bit_mask": 980, "pci_set_consistent_dma_mask": 980, "config_debug_atomic_sleep": [982, 987], "cross compil": 984, "educ": 984, "borrow": 984, "pi2": 984, "1gb": 984, "workstat": 984, "hf": 984, "armv6j": 984, "hardfloat": 984, "gnueabi": 984, "objcopi": 984, "raspberry_pi": 984, "local_overlai": 984, "ebuild": 984, "binutil": [984, 985], "repo_nam": 984, "9999": 984, "sourcedir": 984, "builddir": 984, "buildparam": 984, "kconfig": 984, "zconf": 984, "raspbian": 984, "bootdir": 984, "bootf": 984, "rootf": 984, "kernel7": 984, "Then": [984, 1014, 1224], "assimil": 984, "bcmrpi_defconfig": 984, "bcm2709_defconfig": 984, "config_localvers": 984, "config_ikconfig": 984, "eveytim": 984, "config_can_mcp251x": 984, "config_sensors_lm73": 984, "j3": 984, "mkknlimg": 984, "superus": 984, "jtf": 984, "bcm2709": 984, "smi": 984, "ft5406": 984, "v7": [984, 985], "ipv4": [984, 1272], "xfrm4_mode_beet": 984, "inet_lro": 984, "esp4": 984, "xfrm4_mode_transport": 984, "udp_tunnel": 984, "sdb": 984, "57344": 984, "sdb1": 984, "4162560": 984, "sdb2": 984, "enjoi": 984, "ec2aa3d2": 984, "eee7": 984, "454e": 984, "d145df5ddcba": 984, "agnost": 984, "urg": 984, "patchlevel": 985, "sublevel": 985, "_morph": [986, 996], "my_driver_hello": 986, "my_driver_cdev_manu": 986, "my_driver_cdev_dynamic_major": 986, "my_driver_cdev_file_oper": 986, "my_driver_cdev_first_function": 986, "my_driver_cdev_refactor": 986, "my_driver_multiple_devic": 986, "my_driver_mutex": 986, "my_driver_interrupt": 986, "my_driver_spinlock_atom": 986, "my_driver_time_tim": 986, "my_driver_workqueu": 986, "my_driver_usermem": 986, "copy_": 986, "my_driver_waitqueu": 986, "nonblock": [986, 1000, 1272], "spinlock_t": [987, 989], "isr": [987, 1069, 1266], "spin_unlock": [987, 989], "reenabl": 987, "uniprocessor": 989, "multiprocessor": 989, "spin_lock_init": 989, "spin_lock": 989, "spin_trylock": 989, "irqflag": 989, "spin_lock_irqsav": 989, "spin_unlock_irqrestor": 989, "my_inject_deferred_ev": 992, "my_device_add_deferred_ev": 992, "del_timer_sync": [992, 994], "paranoia": 992, "symmetri": 992, "my_device_add_ev": 992, "my_inject_ev": 992, "tick": 994, "config_hz": 994, "friendli": [994, 1158, 1227, 1231, 1281], "hrtimer": 994, "jiffies_to_msec": 994, "jiffies_to_usec": 994, "jiffies_to_nsec": 994, "msecs_to_jiffi": 994, "usecs_to_jiffi": 994, "timespec64_to_jiffi": 994, "timespec64": 994, "jiffies_to_timespec64": 994, "timer_list": 994, "my_tim": 994, "timerfunc": 994, "timer_setup": 994, "add_tim": 994, "del_tim": 994, "0520": 996, "0521": 996, "0525": 996, "0532": 996, "0710": 996, "preempt": [996, 1064, 1066, 1069], "caption": 996, "seo": 996, "backlink": 996, "my_event_nod": 997, "my_get_one_ev": [997, 1000], "my_device_get_one_ev": 997, "my_event_get_one_ev": 997, "efault": [997, 998], "uaccess": 998, "copy_to_us": 998, "copy_from_us": 998, "enosi": 1000, "timerfd": [1000, 1023, 1073], "f_flag": 1000, "wait_queue_head_t": 1001, "wq": [1001, 1003, 1004], "init_waitqueue_head": 1001, "sched": 1001, "wait_ev": 1001, "wait_event_interrupt": 1001, "wait_event_timeout": 1001, "timeout_jiffi": 1001, "wait_event_interruptible_timeout": 1001, "wake_up": 1001, "wake_up_interrupt": 1001, "task_interrupt": 1001, "create_workqueu": [1003, 1004], "destroy_workqueu": [1003, 1004], "eo": 1003, "rtprio": 1003, "work_struct": [1003, 1004], "init_work": [1003, 1004], "chrt": [1003, 1069], "workqueue_struct": 1004, "work_func_t": 1004, "queue_work": 1004, "ssh-keygen": [1006, 1012], "password authent": [1006, 1012], "key based authent": [1006, 1012], "remote login": [1006, 1012], "unencrypt": 1006, "rlogin": 1006, "telnet": 1006, "nsa": 1006, "sftp": 1006, "portno": 1006, "propaget": 1006, "sha256sum": 1007, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 1007, "mitm": 1012, "keygen": 1012, "safeguard": [1012, 1066], "unrespons": 1013, "port forward": 1014, "portforward": 1014, "secure copi": [1014, 1015], "hmmm": 1014, "whateer": 1014, "mydocu": 1015, "recus": 1015, "mobil": 1015, "bandwidth": 1015, "mediat": 1015, "descriptiotn": 1015, "file system": 1016, "network file system": 1016, "smb": 1016, "crawl": 1016, "debianish": 1016, "mountpoint": 1016, "grant": 1016, "idmap": 1016, "errnum": 1017, "strerror_r": 1017, "buflen": 1017, "cleanest": 1017, "_r": 1017, "reentrant": 1017, "getaddrinfo": 1019, "ri": 1021, "nbytes_read": [1021, 1022, 1023], "24608": 1021, "1024root": 1021, "nager": 1021, "698nager": 1021, "gatewai": 1022, "peer": [1022, 1025], "netinet": 1022, "af_inet": 1022, "sock_stream": 1022, "sockaddr_in": 1022, "sin_famili": 1022, "sin_port": 1022, "inet_aton": 1022, "sin_addr": 1022, "ipproto_ip": 1022, "sa_famili": 1022, "inet_addr": 1022, "10hallo": 1022, "16thi": 1022, "ong": 1022, "14ong": 1022, "timerfd_settim": 1023, "itimerspec": [1023, 1067], "nasti": [1024, 1067], "ingenu": 1025, "smae": 1025, "o_append": 1025, "o_cloexec": [1025, 1083], "sigpip": [1025, 1081], "whenc": 1025, "seek_cur": 1025, "seek_end": 1025, "occupi": [1025, 1027, 1028], "status": 1026, "srcfile": 1026, "dstfile": 1026, "1073741825": 1027, "0k": 1027, "texttt": 1028, "dup2": 1028, "oldfd": 1028, "newfd": 1028, "o_": 1028, "bytes_to_writ": [1029, 1030, 1032], "wxr": 1029, "o_tmpfil": 1029, "speci": 1029, "pli": 1029, "nread": [1031, 1037, 1040, 1041, 1073, 1080], "certainli": 1031, "thats": [1031, 1032], "24625": 1033, "24562": 1033, "pread": 1035, "pwrite": 1035, "readv": 1035, "writev": 1035, "uio": 1035, "iovec": 1035, "iov": 1035, "iovcnt": 1035, "preadv": 1035, "pwritev": 1035, "ftruncat": [1035, 1043, 1076, 1077], "filedescriptor": [1035, 1267, 1269], "gpio26": [1037, 1039, 1040], "subtre": 1039, "fe200000": 1039, "gpiochip488": 1039, "gpiochip504": 1039, "active_low": 1039, "fd_set": [1040, 1073], "exc_fd": 1040, "fd_zero": [1040, 1073], "nreadi": 1040, "fd_isset": [1040, 1073], "eek": 1040, "mq_overview": 1041, "overtak": 1041, "mqd_t": [1041, 1077], "mq_open": 1041, "my_messag": 1041, "mq_attr": 1041, "mq_maxmsg": 1041, "mq_msgsize": 1041, "qsize": 1041, "signo": 1041, "notify_pid": 1041, "mq_unlink": 1041, "mq_send": 1041, "mq_receiv": 1041, "disturb": [1041, 1080], "sysconf": [1042, 1049], "mman": [1042, 1043, 1047, 1076], "fstat": [1042, 1076], "st_size": [1042, 1076, 1083], "prot": [1042, 1047], "map_fail": [1042, 1047, 1076], "munmap": [1042, 1043, 1047, 1083], "_sc_page_s": 1042, "0123456789": 1042, "eaccess": 1042, "pthread_mutexattr_setpshar": 1043, "man7": 1043, "man3": 1043, "map_shar": [1043, 1076], "pthread_mutexattr_t": [1043, 1053, 1070], "mutex_attr": 1043, "pthread_mutexattr_init": 1043, "consumed_data": 1043, "data_name_s": 1043, "workhors": 1045, "unpopul": 1046, "odg": [1046, 1049], "anon": 1047, "stddef": 1047, "mib": 1047, "216234": 1047, "peek": 1047, "7f1571c00000": 1047, "7f1572c00000": 1047, "pss_dirti": 1047, "ksm": 1047, "lazyfre": 1047, "shmempmdmap": 1047, "filepmdmap": 1047, "shared_hugetlb": 1047, "private_hugetlb": 1047, "swappss": 1047, "thpelig": 1047, "protectionkei": 1047, "vmflag": 1047, "tlb": 1049, "lookasid": 1049, "_sc_pages": 1049, "intens": 1050, "ppid": 1050, "tid": 1050, "tsd": 1050, "spezif": [1050, 1268], "_reentrant": 1050, "lpthread": [1050, 1067, 1086], "start_routin": 1051, "pthread_exit": 1051, "pthread_cancel": 1051, "pthread_attr_setdetachst": 1051, "detachst": 1051, "pthread_create_detach": 1051, "pthread_detach": 1051, "pthread_self": 1051, "pthread_equ": 1051, "30650": 1051, "13961": 1051, "correl": 1051, "gettid": 1051, "trylock": [1053, 1059], "islock": [1053, 1059], "pthread_mutex_destroi": 1053, "pthread_mutex_trylock": 1053, "global_mutex": 1053, "pthread_mutexattr_settyp": 1053, "pthread_mutex_norm": 1053, "pthread_mutex_errorcheck": 1053, "pthread_mutex_recurs": 1053, "pthread_mutex_default": 1053, "pthread_cond_destroi": 1055, "pthread_cond_broadcast": 1055, "parlanc": 1055, "set_autoreset_ev": 1055, "ev": 1055, "is_set": 1055, "wait_autoreset_ev": 1055, "acquiriert": 1055, "autoreset": 1055, "spuriou": 1055, "woken": 1055, "pthread_condattr_t": 1055, "pthread_cond_initi": 1055, "pthread_cond_timedwait": 1055, "abstim": 1055, "use_glob": 1057, "pthread_once_t": 1057, "global_onc": 1057, "pthread_once_init": 1057, "init_glob": 1057, "pthread_onc": 1057, "once_control": 1057, "init_routin": 1057, "pthread_key_cr": 1057, "__thread": 1057, "pthread_atfork": 1058, "legales": 1058, "lock_rac": 1060, "succeed": [1060, 1248], "foreground": [1061, 1116], "huh": 1061, "paradox": 1061, "setenv": 1063, "putenv": 1063, "unsetenv": 1063, "clearenv": 1063, "customvar": 1063, "timesl": 1064, "starv": 1064, "throughput": 1064, "sha1": [1064, 1068, 1084, 1086], "voluntarili": [1064, 1068], "indiana": 1066, "edu": 1066, "p415": 1066, "sjoh": 1066, "marspathfind": 1066, "htm": 1066, "mbj": 1066, "mars_pathfind": 1066, "sdj": 1066, "mike": 1066, "sundai": 1066, "decemb": 1066, "mission": 1066, "proclaim": 1066, "flawless": 1066, "juli": 1066, "martian": 1066, "unconvent": 1066, "airbag": 1066, "sojourn": 1066, "rover": 1066, "earth": 1066, "panoram": 1066, "meteorolog": 1066, "symposium": 1066, "fascin": 1066, "wilner": 1066, "chief": 1066, "wind": [1066, 1212, 1213], "river": 1066, "preemptiv": 1066, "urgenc": 1066, "infrequ": 1066, "drastic": 1066, "jpl": 1066, "replica": 1066, "replic": 1066, "fortuit": 1066, "faulti": 1066, "secondli": 1066, "facil": 1066, "confess": 1066, "denial": 1066, "weren": [1066, 1273], "particularli": [1066, 1068], "recoveri": 1066, "cmu": 1066, "paper": [1066, 1214], "lehoczki": 1066, "rajkumar": 1066, "cheer": 1066, "theorist": 1066, "signific": 1066, "vol": 1066, "1175": 1066, "1185": 1066, "nasa": 1066, "gov": 1066, "authoritative_account": 1066, "dave": 1066, "attend": 1066, "judgment": 1066, "recipi": 1066, "simplifi": 1066, "vme": 1066, "1553": 1066, "cruis": 1066, "lander": 1066, "thruster": 1066, "valv": 1066, "sun": 1066, "acceleromet": 1066, "radar": 1066, "altimet": 1066, "asi": [1066, 1215], "cassini": 1066, "bc_sched": 1066, "bc_dist": 1066, "timelin": 1066, "t4": 1066, "t5": 1066, "awaken": 1066, "texec": 1066, "reiniti": 1066, "pipeioctl": 1066, "selnodeadd": 1066, "semgiv": 1066, "pipewrit": 1066, "fli": 1066, "philosophi": 1066, "rs6000": 1066, "cum": 1066, "stanlei": 1066, "msgq": 1066, "folk": 1066, "semmcreat": 1066, "selectlib": 1066, "optimum": 1066, "degrad": 1066, "debat": 1066, "advers": 1066, "onboard": 1066, "anticip": 1066, "proportion": 1066, "aggrav": 1066, "deem": 1066, "unimport": 1066, "concentr": 1066, "robust": 1066, "wasn": 1066, "atmospher": 1066, "radiat": 1066, "induc": 1066, "consciou": 1066, "cot": 1066, "fantast": 1066, "enthusiast": 1066, "brightest": 1066, "wing": 1066, "procrastin": 1066, "stolper": 1066, "yoshioka": 1066, "karl": 1066, "schneider": 1066, "welz": 1066, "rick": 1066, "achatz": 1066, "kim": 1066, "gostelow": 1066, "smyth": 1066, "miguel": 1066, "sam": 1066, "sirlin": 1066, "lazara": 1066, "deliman": 1066, "cogniz": 1066, "lrt": 1067, "app_statu": 1067, "tick_count": 1067, "update_statu": 1067, "sigact": [1067, 1080, 1081], "sa_handl": [1067, 1080, 1081], "sigrtmin": 1067, "sigev": 1067, "sev": 1067, "sigev_notifi": 1067, "sigev_sign": 1067, "sigev_signo": 1067, "timer_t": 1067, "tspec": 1067, "nsec": 1067, "timer_settim": 1067, "show_statu": 1067, "freerto": [1067, 1070], "syncron": 1067, "update_status_func": 1067, "initial_t": 1067, "interval_t": 1067, "show_status_func": 1067, "update_task": 1067, "show_task": 1067, "231765": 1067, "225819": 1067, "5635": 1067, "lwp": 1067, "231766": 1067, "231767": 1067, "tracer": 1067, "restart_syscal": 1067, "clock_nanosleep": 1067, "clock_realtim": 1067, "500000000": 1067, "033": 1067, "7m": 1067, "flash_func": 1067, "is_revers": 1067, "flash_task": 1067, "flasher": 1067, "indepen": 1067, "toggl": 1067, "fore": [1067, 1118], "suscept": 1068, "nicer": 1069, "renic": 1069, "din": 1069, "44300": 1069, "echtzeitbetrieb": 1069, "betrieb": 1069, "rechensystem": 1069, "verarbeitung": 1069, "anfallend": 1069, "st\u00e4ndig": 1069, "derart": 1069, "betriebsbereit": 1069, "da\u00df": 1069, "verarbeitungsergebniss": 1069, "vorgegebenen": 1069, "zeitspann": 1069, "000014": 1069, "013914m": 1069, "91410827636698u": 1069, "000002": [1069, 1071], "002382m": 1069, "3820173632900326u": 1069, "intrus": 1069, "sched_oth": 1070, "relinquish": 1070, "sched_param": 1070, "sched_getschedul": 1070, "sched_prior": 1070, "pthread_setschedparam": 1070, "pthread_getschedparam": 1070, "predefini": 1070, "pthread_attr_setschedpolici": 1070, "legendari": 1070, "pathfind": 1070, "incid": 1070, "spoken": 1070, "pthread_mutexattr_setprotocol": 1070, "pthread_prio_inherit": 1070, "pthread_prio_protect": 1070, "risen": 1070, "pthread_mutexattr_setprioceil": 1070, "000105": 1071, "105247m": 1071, "24749755859354u": 1071, "000015": 1071, "014643m": 1071, "64260525619006u": 1071, "105u": 1071, "000067": 1071, "067263m": 1071, "2626495361326u": 1071, "000003": 1071, "002883m": 1071, "8827592917392217u": 1071, "ondemand": 1071, "governor": 1071, "cpufreq": 1071, "scaling_governor": 1071, "cpuinfo_cur_freq": 1071, "067036m": 1071, "03615188598611u": 1071, "000001": 1071, "001257m": 1071, "2571678380193383u": 1071, "000065": 1071, "065188m": 1071, "188407897949u": 1071, "002376m": 1071, "3758434034066656u": 1071, "001042": 1071, "042438m": 1071, "4375534057617u": 1071, "000017": 1071, "017123m": 1071, "123423079175748u": 1071, "000143": 1071, "142646m": 1071, "6458358764593u": 1071, "000005": 1071, "004995m": 1071, "994855006705264u": 1071, "_syse": 1073, "exit_failur": 1073, "consume_fd": 1073, "random_fd": 1073, "tty_fd": 1073, "nfd": 1073, "ttys4": 1073, "in_fd": 1073, "eof_detect": 1073, "shm": [1075, 1076, 1077], "sem": [1075, 1076, 1077], "shared memori": 1076, "message queu": 1076, "shm_open": [1076, 1077], "tmpf": [1076, 1077], "resiz": 1076, "4095": 1076, "weigh": 1076, "counter_loc": 1076, "sem_t": [1076, 1077], "sem_open": 1076, "sem_fail": 1076, "sem_wait": 1076, "sem_post": 1076, "shm_unlink": 1077, "goiven": 1077, "sem_overview": 1077, "oflag": 1077, "sem_trywait": 1077, "sem_timedwait": 1077, "abs_timeout": 1077, "shm_close": 1077, "shm_overview": 1077, "051": [1079, 1080], "segv": [1080, 1081], "mortem": [1080, 1279], "core_pattern": 1080, "termination_handl": 1080, "sigint": [1080, 1081], "sig_atomic_t": [1080, 1081], "term_act": 1080, "alarm_handl": 1080, "alarm_act": 1080, "sigset_t": [1080, 1082], "termination_sign": 1080, "sigemptyset": [1080, 1081], "sigaddset": [1080, 1081], "sigquit": 1080, "sigprocmask": [1080, 1081], "sig_block": 1080, "impolit": 1080, "sig": [1080, 1081], "consume_pip": 1080, "pipenam": 1080, "puzzl": 1080, "pthread_sigmask": [1080, 1081], "sigtstp": 1081, "sigalrm": [1081, 1082], "sigchld": 1081, "abnorm": 1081, "sigabrt": 1081, "sigsegv": 1081, "sigbu": 1081, "sigil": 1081, "sigfp": 1081, "unblock": 1081, "oldset": 1081, "sigpend": 1081, "sigfillset": 1081, "signum": 1081, "sigdelset": 1081, "sigismemb": 1081, "sigsetop": 1081, "recept": 1081, "sa_mask": 1081, "sa_flag": 1081, "oldact": 1081, "sig_ign": 1081, "sig_dfl": 1081, "sighandler_t": 1081, "_exit": 1081, "barebon": 1082, "louder": 1082, "stallman": 1083, "risc": 1083, "llvm": 1083, "24360": 1083, "hello_h": [1083, 1100, 1102], "24416": 1083, "linkabl": [1083, 1220, 1268], "vdso": [1083, 1101], "0x00007ffc44130000": 1083, "0x00007fdd8ea64000": 1083, "0x00007fdd8ec5c000": 1083, "0x7fffea18b920": 1083, "brk": 1083, "0x67e000": 1083, "arch_prctl": 1083, "0x3001": 1083, "arch_": 1083, "0x7fff6d3dd240": 1083, "r_ok": 1083, "newfstatat": 1083, "st_mode": 1083, "s_ifreg": 1083, "80987": 1083, "at_empty_path": 1083, "0x7f1721afc000": 1083, "177elf": 1083, "pread64": 1083, "2420152": 1083, "0x7f1721afa000": 1083, "1973104": 1083, "map_denywrit": 1083, "0x7f1721918000": 1083, "0x7f172193e000": 1083, "1441792": 1083, "prot_exec": 1083, "map_fix": 1083, "0x26000": 1083, "0x7f1721a9e000": 1083, "319488": 1083, "0x186000": 1083, "0x7f1721aec000": 1083, "24576": 1083, "0x1d3000": 1083, "0x7f1721af2000": 1083, "31600": 1083, "0x7f1721916000": 1083, "arch_set_f": 1083, "0x7f1721afb680": 1083, "set_tid_address": 1083, "0x7f1721afb950": 1083, "471382": 1083, "set_robust_list": 1083, "0x7f1721afb960": 1083, "rseq": 1083, "0x7f1721afbfa0": 1083, "0x53053053": 1083, "0x403000": 1083, "0x7f1721b42000": 1083, "prlimit64": 1083, "rlim_cur": 1083, "rlim_max": 1083, "rlim64_infin": 1083, "s_ifchr": 1083, "0620": 1083, "st_rdev": 1083, "makedev": 1083, "0x88": 1083, "0xb": 1083, "getrandom": 1083, "xcd": 1083, "x7c": 1083, "xc9": 1083, "x3b": 1083, "xd6": 1083, "xf2": 1083, "x44": 1083, "grnd_nonblock": 1083, "0x69f000": 1083, "12hello": 1083, "exit_group": 1083, "0000000000401040": 1083, "_start": 1083, "0000000000401000": 1083, "_init": 1083, "00000000004011b8": 1083, "_fini": 1083, "crt": 1083, "crt1": 1083, "crti": 1083, "crtn": 1083, "0000000000404000": 1083, "_global_offset_table_": 1083, "reloc": 1083, "1762320": 1083, "0000000000401126": 1083, "1224008": 1083, "greetdemo": 1084, "cmake_system_nam": 1084, "toolchain_base_dir": [1084, 1099], "cmake_c_compil": 1084, "cmake_cxx_compil": 1084, "find_xxx": 1084, "cmake_find_root_path_mode_program": 1084, "cmake_find_root_path_mode_librari": 1084, "cmake_find_root_path_mode_includ": 1084, "toolchian": 1084, "cmake_toolchain_fil": 1084, "libgreet": [1084, 1085, 1092, 1101, 1102], "13921": [1084, 1085], "cmake_instal": [1084, 1085], "26192": [1084, 1085], "27920": [1084, 1085], "8503": [1084, 1085], "eabi5": [1084, 1086], "armhf": [1084, 1086], "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1084, "debug_info": [1084, 1086], "armv7l": 1086, "metadistribut": 1086, "rootfilesystem": 1086, "miniumum": 1086, "1697265": 1086, "1078248": 1086, "1260352": 1086, "1256256": 1086, "a5540938c2c36ad2bb371ccfdeaee5e7dbc8d512": 1086, "rasberri": 1088, "clickabout": 1094, "defunct": 1095, "workabl": 1096, "tarbal": 1096, "lastest": 1096, "x86_64_arm": 1096, "precompos": 1096, "uncompress": 1096, "73812": 1096, "1107168": 1096, "1481768": 1096, "1968456": 1096, "1091864": 1096, "1030432": 1096, "1221816": 1096, "lynxbe": 1098, "y3p9kn7mjei": 1098, "cli": 1098, "dockerhub": 1098, "hub": 1098, "sh_18_04": 1098, "78683068": 1098, "1292296": 1098, "70mb": 1099, "73018472": 1099, "auxvec": 1099, "bitsperlong": 1099, "bpf_perf_ev": 1099, "rapidli": 1100, "phoni": [1100, 1101, 1102], "origaniz": 1101, "relink": 1101, "0x2e20": 1101, "0x00007fffe9fa7000": 1101, "0x00007f75ca289000": 1101, "0x00007f75ca46d000": 1101, "r_x86_64_32": 1101, "fpic": 1101, "whom": 1102, "hello_flex": 1102, "hello_flexible_h": 1102, "cq": 1102, "lisp": 1103, "create_f": 1103, "create_print": 1103, "print_blah": 1103, "print_someth": 1103, "sytax": 1104, "shutil": 1105, "tarfil": 1105, "temporarydirectori": 1105, "tmpd": 1105, "tarnam": 1105, "expandvar": 1105, "contrain": 1105, "__enter__": 1105, "__exit__": 1105, "openforread": 1105, "myprint": 1105, "orig_print": 1105, "exc_val": 1105, "exc_tb": 1105, "myarg": 1105, "total_ord": 1106, "a_vari": 1107, "baseexceptiongroup": 1107, "exceptiongroup": 1107, "subtyp": 1107, "maybe_fail": 1107, "lone": 1107, "mysubsystemerror": 1107, "reallybaderror": 1107, "someothererror": 1107, "definitelybad": 1107, "evenwors": 1107, "collapsingtheworld": 1107, "errorcod": 1107, "__cached__": 1108, "_frozen_importlib_extern": 1108, "sourcefileload": 1108, "0x7f7ed3dfbaa0": 1108, "blindli": 1108, "ansibl": 1108, "matno": 1108, "conffil": 1108, "confcod": 1108, "confdict": 1108, "drawn": 1110, "inputrang": 1110, "disgust": 1110, "gentli": 1110, "smarter": 1110, "nolimit": 1111, "fibo_numb": 1111, "jerki": 1111, "max_numb": 1111, "satisfactori": 1111, "python_1010_generators_yield": 1111, "glossari": 1112, "breadth": 1112, "subnamespac": 1115, "mysupermodul": 1115, "mysuperfunct": 1115, "subpackage1": 1115, "module1": 1115, "module2": 1115, "subpackage2": 1115, "disambigu": 1115, "increment_background": [1116, 1118], "background_integ": 1116, "foreground_integ": 1116, "runn": 1116, "backgroundincrement": 1116, "14784035": 1118, "quack": 1120, "mockup": 1120, "41649863255207": 1120, "655479026847196": 1120, "50643450549821": 1120, "37061347375701": 1120, "981488867639975": 1120, "__next__": 1120, "brokensensor": 1120, "gettemperatur": 1120, "unimpl": 1120, "refect": 1121, "emp": 1124, "add_employe": 1124, "mgr": 1124, "isold": [1124, 1125, 1225], "haubentauch": [1124, 1125, 1128, 1225], "parentcl": 1124, "funnili": 1124, "make_child": 1125, "parent1": 1125, "parent2": 1125, "vvv": 1125, "father": 1125, "vvvvvv": 1125, "tabular": 1126, "someclass": 1126, "persons_from_csv": 1126, "person_dict": 1126, "operators object oriented program": 1127, "behaivor": 1127, "number2": 1127, "int2": 1127, "whistl": [1127, 1130], "symmetr": [1127, 1157], "commut": 1127, "summar": 1127, "attrnam": 1128, "meier": 1128, "expicitli": 1129, "0x7feab6ea4620": 1129, "starstararg": [1130, 1277], "marker": 1133, "eighti": 1133, "monti": 1133, "benevol": 1133, "bdfl": [1133, 1217], "overse": 1133, "januari": 1133, "dropbox": 1133, "awk": 1135, "0o01234": 1139, "14159265359": [1139, 1153], "3e12": 1139, "\u00e4\u00f6\u00fc": 1139, "xa4": 1139, "xb6": 1139, "xbc": 1139, "xe4": 1139, "compel": 1139, "codebas": 1139, "ancient": 1139, "sequencish": 1143, "sixtim": 1143, "seen_sixey": 1143, "blahblahblahblahblah": 1144, "aah": 1145, "a_list": 1145, "hlow": 1145, "hlowrd": 1145, "heritag": 1147, "140205029707880": 1148, "140205029707912": 1148, "140205029708136": 1148, "140204715632640": 1148, "140204747509888": 1148, "parameterizab": 1150, "program_exit": 1150, "exitstatu": 1150, "spam": [1152, 1215], "dec": 1152, "x58": 1152, "07d": 1153, "0x": 1153, "5x": 1153, "0x2f": 1153, "4x": 1153, "0x002f": 1153, "5o": 1153, "0o31": 1153, "04d": 1153, "0042": 1153, "05d": 1153, "00042": 1153, "thistl": 1154, "thorn": 1154, "annoy": 1154, "sqn": 1155, "defval": 1156, "iterkei": 1156, "keyiter": 1156, "0x7ff2e8753418": 1156, "tunabl": 1158, "shoudn": 1158, "0x7fca2c785b70": 1159, "tof": 1159, "outputfilenam": 1160, "argumentpars": 1160, "add_argu": 1160, "parse_arg": 1160, "ou": 1160, "\u0142ukasz": 1161, "langa": 1161, "pybay2018": 1161, "ylabel": [1163, 1213], "xmin": 1163, "xmax": 1163, "ymin": 1163, "ymax": 1163, "twine": 1164, "long_descript": 1164, "long_description_content_typ": 1164, "beta": 1164, "osi": 1164, "approv": 1164, "package_dir": 1164, "python_requir": 1164, "install_requir": 1164, "paho": [1164, 1224], "pyproject": 1164, "toml": 1164, "build_meta": 1164, "yadda": 1164, "sdist": 1164, "bdist_wheel": 1164, "python_course_2022_11_07": 1164, "12549": 1164, "BE": 1164, "mydb": 1165, "hardli": 1166, "femal": 1170, "miracl": [1173, 1191], "previouslin": 1178, "ifi": 1191, "uniqifi": 1192, "sensor_const": 1197, "test_sensor_const": 1197, "ii": [1198, 1200, 1204, 1206, 1216], "user_record": [1199, 1201], "read_csv_head": [1199, 1206], "read_csv_nohead": [1201, 1205, 1206], "csvfilenam": 1203, "test_noheader_person": 1204, "read_noheader_person": 1204, "test_must_not_use_global_variables_as_return_object": 1204, "filename1": 1204, "noheader1": 1204, "filename2": 1204, "noheader2": 1204, "users1": 1204, "users2": 1204, "test_header_person": 1204, "read_header_person": 1204, "test_user_json_person": 1204, "userdb_json": [1204, 1205], "test_person_to_json": 1204, "joerg_sent": 1204, "to_json_person": 1204, "joerg_receiv": 1204, "from_json_person": 1204, "envis": [1205, 1260], "to_json": 1205, "test_user_json": 1205, "test_user_to_json": 1205, "user_s": 1205, "json_user_s": 1205, "from_json": 1205, "test_nohead": 1206, "test_head": 1206, "lectur": [1207, 1270, 1279], "unsupervis": [1210, 1215], "conveyor": 1210, "belt": 1210, "linear_regress": [1211, 1214], "model_select": [1211, 1213], "train_test_split": [1211, 1213], "linear_model": [1211, 1213], "linearregress": [1211, 1213], "history_data": [1211, 1212, 1213, 1214], "inputfeatur": [1211, 1213], "outputfeatur": [1211, 1213], "input_train": [1211, 1213], "input_test": [1211, 1213], "output_train": [1211, 1213], "output_test": [1211, 1213], "test_siz": [1211, 1213], "output_predict": [1211, 1213], "visualcross": 1212, "york": [1212, 1213], "chill": [1212, 1213], "precipit": [1212, 1213], "snow": [1212, 1213], "gust": [1212, 1213], "humid": [1212, 1213], "rain": 1212, "cloudi": 1212, "995833": 1213, "688889": 1213, "287500": 1213, "327273": 1213, "012222": 1213, "690278": 1213, "470769": 1213, "369444": 1213, "513421": 1213, "946106": 1213, "574023": 1213, "313256": 1213, "994536": 1213, "070695": 1213, "025980": 1213, "302423": 1213, "214825": 1213, "665492": 1213, "900000": 1213, "700000": 1213, "090000": 1213, "050000": 1213, "377500": 1213, "750000": 1213, "950000": 1213, "650000": 1213, "330000": 1213, "325000": 1213, "850000": 1213, "425000": 1213, "825000": 1213, "715000": 1213, "470000": 1213, "970000": 1213, "multidimension": 1213, "xlabel": 1213, "coef_": 1213, "80189231": 1213, "intercept_": 1213, "95355086": 1213, "609608": 1213, "571879": 1213, "736988": 1213, "170933": 1213, "798254": 1213, "189739": 1213, "180394": 1213, "449230": 1213, "661530": 1213, "057745": 1213, "850176": 1213, "284120": 1213, "685067": 1213, "weather": [1214, 1215], "splice": [1214, 1215], "cute": 1214, "aspir": [1214, 1241], "dilig": 1215, "bite": 1215, "forecast": 1215, "agi": 1215, "forest": 1215, "predictor": 1215, "accuraci": 1215, "classif": 1215, "unlabel": 1215, "reward": 1215, "bay": 1215, "sepp": 1216, "tupleunpack": 1216, "spell": 1216, "redundantli": 1216, "quotechar": 1216, "spreadsheet": 1216, "odbc": 1217, "mysql": 1217, "postgresql": [1217, 1218], "informix": 1217, "berkeleydb": 1217, "mongodb": 1217, "rollback": 1217, "initd": 1219, "psycopg": 1219, "libpq": 1219, "conninfo": 1219, "psycopg2": 1219, "schwammerldb": 1219, "android": 1220, "schwammerln": 1220, "giftig": 1220, "geniessbar": 1220, "dbm": 1220, "steinpilz": 1220, "roehren": 1220, "speisetaeubl": 1220, "lamellen": 1220, "speitaeubl": 1220, "eierschwammerl": 1220, "teufelsroehrl": 1220, "overcod": 1221, "512119": 1221, "european": 1221, "htmlhelp": 1221, "charset": 1221, "latin1": 1221, "chines": 1221, "enc": 1221, "0xfc": 1221, "0xdf": 1221, "0xf6": 1221, "\u00df": 1221, "cyril": 1221, "received_enc": 1221, "lg_enc": 1221, "bye_enc": 1221, "antp": 1224, "53767": 1224, "tcp6": 1224, "mosquitto_pub": 1224, "easiest": 1224, "message_receiv": 1224, "userdata": 1224, "on_messag": 1224, "loop_forev": 1224, "mosqitto_pub": 1224, "styrian": 1224, "esp": 1224, "666608091972": 1225, "ignore_index": 1225, "new_person": 1225, "saskia": 1225, "456710042003": 1225, "irrevers": 1226, "1153": [1228, 1230], "_locationindex": [1228, 1230], "maybe_cal": [1228, 1230], "apply_if_cal": [1228, 1230], "_getitem_axi": [1228, 1230], "_ilocindex": 1228, "1711": 1228, "1713": 1228, "_validate_integ": 1228, "_ix": 1228, "1647": 1228, "1645": 1228, "len_axi": 1228, "_get_axi": 1228, "rangeindex": 1230, "3791": 1230, "get_loc": 1230, "casted_kei": 1230, "pyx": 1230, "_lib": 1230, "indexengin": 1230, "hashtable_class_help": 1230, "pxi": 1230, "pyobjecthasht": 1230, "get_item": 1230, "1393": 1230, "_locindex": 1230, "1391": 1230, "thru": 1230, "_validate_kei": 1230, "_get_label": 1230, "1343": 1230, "1341": 1230, "axisint": 1230, "5567": 1230, "ndframe": 1230, "drop_level": 1230, "new_index": 1230, "4235": 1230, "4239": 1230, "bool_": 1230, "3793": 1230, "3795": 1230, "3797": 1230, "invalidindexerror": 1230, "3799": 1230, "listlik": 1230, "_check_indexing_error": 1230, "3801": 1230, "3803": 1230, "sort_index": 1230, "multiindex": 1230, "lower_email": 1232, "rentner": 1232, "is_palindrom": 1232, "facto": 1233, "subel": 1233, "attrib": 1233, "getroot": 1233, "witch": 1236, "gnore": 1236, "ackup": 1236, "bort": 1236, "cert": 1236, "pem": 1236, "pythonhost": 1236, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1236, "cp38": 1236, "manylinux2010_x86_64": 1236, "ext": 1236, "argcomplet": 1236, "asn1crypto": 1236, "ensurepip": [1237, 1243], "test_project": 1241, "test_soup": 1241, "test_task": 1241, "stringent": 1241, "discoveri": 1241, "syndrom": [1241, 1242, 1248], "test_person_point": 1241, "deselect": 1241, "tester": [1241, 1265, 1267], "test_": 1241, "test_simpl": 1241, "test_trivi": 1241, "test_trivial_but_fail": 1241, "___________________________": 1241, "____________________________": 1241, "test_stat": 1241, "implementation_point": 1241, "implementor1": 1241, "implementor2": 1241, "documentation_point": 1241, "integration_point": 1241, "implementation_perc": 1241, "documentation_perc": 1241, "integration_perc": 1241, "total_perc": 1241, "total_point": 1241, "gathered_point": 1241, "test_another_task_aspect": 1241, "test_ini_file_pars": 1241, "my_test_fil": 1241, "mytestcas": 1242, "runtest": 1242, "assertequ": 1242, "texttestrunn": 1242, "__db": 1242, "create_databas": 1242, "fill_test_data": 1242, "remove_databas": 1242, "testfeature1": 1242, "testfeature2": 1242, "testsuit": 1242, "addtest": 1242, "testload": 1242, "loadtestsfromtestcas": 1242, "testsometh": 1242, "failif": 1242, "failunless": 1242, "failunlessequ": 1242, "failifequ": 1242, "failunlessalmostequ": 1242, "failunlessrais": 1242, "env_dir": 1243, "my_venv": 1243, "easy_instal": 1243, "pip3": 1243, "powershel": 1243, "joblib": 1243, "threadpoolctl": 1243, "deactiv": 1243, "my_recreated_venv": 1243, "persuad": 1243, "will_fail": [1247, 1250], "initgoogletest": [1248, 1253], "run_all_test": [1248, 1253], "lgtest": [1248, 1250], "onesuit": 1248, "test1": 1248, "test2": 1248, "anothersuit": 1248, "postive_pattern": 1248, "negative_pattern": 1248, "gtest_list_test": 1248, "faildemo": 1248, "failisfat": 1248, "assertdemo": 1248, "assertisfat": 1248, "expect_": 1248, "expectdemo": 1248, "expectisnonfat": 1248, "expect_tru": 1248, "expect_eq": 1248, "0x58": 1248, "0x55": 1248, "assert_": 1249, "repoqueri": 1250, "dpkg": 1250, "listfil": 1250, "joergfaschingbau": 1250, "cmake_compiler_is_gnucc": 1250, "ggdb": 1250, "googlebenchmark": 1250, "predef": [1252, 1253], "predefinedtestenviron": 1253, "paranoidtest": 1253, "untechn": 1253, "thefixtur": 1253, "testthatmodifiesst": 1253, "complexfixtur": 1253, "first_n": 1253, "sometest": 1253, "bibel": 1255, "hinzuf\u00fcgen": 1255, "erfind": 1255, "tickt": 1255, "wozu": 1255, "grenzen": 1255, "vorlag": 1255, "didaktik": 1255, "erg\u00e4nzt": 1255, "kontext": 1255, "heutigen": 1255, "sprachkern": 1255, "unterrichten": 1255, "standardlibrari": 1255, "zugunsten": 1255, "bequemeren": 1255, "verzichten": 1255, "sprachdesign": 1255, "geachtet": 1255, "isoliert": 1255, "abseit": [1255, 1257], "mitbringt": 1255, "h\u00e4lt": 1255, "eignet": 1255, "hervorragend": 1255, "weglassen": 1255, "programmiert": [1255, 1257], "dementsprechend": 1255, "sinngem\u00e4ss": 1255, "aufgeteilt": 1255, "manipulieren": 1255, "maschineninstruktionen": 1255, "ausgef\u00fchrt": [1255, 1256], "geschwindigkeitsvorteil": 1255, "interpretierten": 1255, "nachteil": 1255, "verst\u00e4ndni": 1255, "speicherverwaltung": [1255, 1257], "integral": 1255, "zusammengesetzt": 1255, "speicherlayout": 1255, "kontrollkonstrukt": 1255, "wenigst": 1255, "worin": 1255, "programmstrukturierung": 1255, "deklar": 1255, "beliebtest": 1255, "unmeng": 1255, "flexibilit\u00e4t": 1255, "einbringen": 1255, "unbeliebtest": 1255, "fehlerm\u00f6glichkeiten": 1255, "verkettet": 1255, "fehlerszenarien": 1255, "absturz": 1255, "dahinsiechen": 1255, "debugginghilfen": 1255, "typumwandlungen": 1255, "hauptkritikpunkt": 1255, "sorglos": 1255, "integertypen": 1255, "nichtsdestotrotz": 1255, "regelwerk": 1255, "historisch": 1255, "aufarbeitung": 1255, "historischem": 1255, "ballast": 1255, "compileroptionen": 1255, "pr\u00e4prozessor": [1255, 1256], "leid": 1255, "grundz\u00fcgen": 1255, "gezeigt": [1255, 1264], "compilierung": 1255, "fortgeschritten": 1255, "heutzutag": 1255, "wegzudenken": 1255, "grund": 1255, "damal": [1255, 1257], "programmen": [1255, 1256], "separat": 1255, "verbinden": 1255, "spielt": 1255, "compilieren": 1255, "archivieren": 1255, "linken": 1255, "programmgesundheit": 1255, "bedeutungen": 1255, "wort": 1255, "optimierungsm\u00f6glichkeiten": 1255, "memoryfehlern": 1255, "verwalten": 1255, "formatiert": 1255, "_und_": 1255, "komfort": 1255, "m\u00e4chtige": 1255, "jedoch": [1255, 1264], "fehlerimmunit\u00e4t": 1255, "allein": 1255, "verdienen": 1255, "erw\u00e4hnung": 1255, "stringbearbeitung": 1255, "heutig": 1255, "eigenwillig": 1255, "f\u00fclle": 1255, "erleichtern": 1255, "lauern": 1255, "gefahren": 1255, "sprachumfang": 1256, "angeht": 1256, "compiliert": 1256, "maschinencod": 1256, "pointern": 1256, "sofort": 1256, "beipflichten": 1256, "einmal": [1256, 1276], "beinharten": 1256, "typenkonvertierungen": 1256, "aufgesessen": 1256, "beleuchtet": 1256, "beschrittenen": 1256, "dunklen": 1256, "ecken": 1256, "widmet": 1256, "intensiv": 1256, "fehlersuch": 1256, "versucht": 1256, "erkl\u00e4rungen": 1256, "sprachdefinit": 1256, "greifbar": 1256, "verdacht": 1256, "manch": 1256, "typkonversionen": 1256, "l\u00fccken": 1256, "typensystem": [1256, 1257], "techniken": 1256, "typensicherheit": 1256, "dunkl": 1256, "unn\u00f6tig": 1256, "programmhygien": 1256, "wege": 1256, "sauberen": 1256, "weisen": 1256, "optimierungstechniken": 1256, "anwenden": 1256, "optimierung": 1256, "erschweren": 1256, "lesbarkeit": 1256, "memoryzugriff": 1256, "ur": 1256, "beziehungsweis": 1256, "hardwareunterst\u00fctzung": 1256, "Ins": 1256, "instruktionen": 1256, "kenntniss": [1256, 1257, 1275], "urspr\u00fcnglich": 1257, "erfunden": 1257, "leichter": 1257, "handhabbar": 1257, "neuen": 1257, "erm\u00f6glichen": 1257, "ressourcenverwaltung": 1257, "kontrolliert": 1257, "implementieren": 1257, "mainstream": 1257, "einzug": 1257, "hie\u00df": 1257, "treffend": 1257, "seitdem": 1257, "vereinzelt": 1257, "soviel": 1257, "dampflokomot": 1257, "stellt": 1257, "vielfalt": 1257, "sprachkonstrukt": 1257, "genial": 1257, "gewagt": 1257, "behaupten": 1257, "anbelangt": 1257, "sprachmittel": 1257, "wichtigst": 1257, "n\u00e4mlich": 1257, "reichlich": [1257, 1264], "umstieg": 1257, "erw\u00e4gen": 1257, "embeddedbetriebssystem": 1257, "einsetzen": 1257, "vielerort": 1257, "datenkapselung": 1257, "objekten": 1257, "fallstrick": 1257, "korrektheit": 1257, "100ste": 1257, "strukturiert": 1257, "fehlerbehandlung": 1257, "generisch": 1257, "mechanismen": [1257, 1276], "mehrfachvererbung": 1257, "teilweis": 1257, "kapiteln": 1257, "unterschied": 1257, "erl\u00e4utert": 1257, "c++ 11": 1258, "enjoy": 1258, "overrrid": 1258, "coolest": 1258, "optinion": 1258, "oneshot": 1258, "communict": 1258, "unlearn": 1258, "object ori": [1259, 1277], "graviti": 1259, "confront": 1259, "reusab": 1259, "nicknam": 1259, "inventor": 1260, "bourne shel": [1261, 1267], "aesthet": 1261, "attende": [1262, 1266, 1270, 1277, 1278, 1281, 1282], "zielpublikum": [1263, 1274], "kursinhalt": [1263, 1274], "empfohlen": [1263, 1274], "zentrum": 1264, "gleichnamigen": 1264, "leben": 1264, "gerufen": 1264, "produktivem": 1264, "basteln": 1264, "n\u00e4herzubringen": 1264, "spielekonsumenten": 1264, "kinder": 1264, "enden": 1264, "erstem": 1264, "breiteren": 1264, "\u00f6ffentlichkeit": 1264, "drauf": 1264, "vorhandensein": 1264, "basisinfrastruktur": 1264, "vielem": 1264, "hervorragenden": 1264, "gestandenen": 1264, "embeddedprogrammier": 1264, "l\u00e4nger": 1264, "normalen": 1264, "dateisystem": 1264, "versagt": 1264, "teuer": 1264, "erkauft": 1264, "hostsoftwar": 1264, "architekten": 1264, "plattformzusammensetzung": 1264, "entscheiden": [1264, 1276], "rechtfertigen": 1264, "logik": 1264, "steck": 1264, "beantworten": [1264, 1276], "eingeladen": 1264, "l\u00f6tmateri": 1264, "mitzubringen": 1264, "desktopbetriebssystem": 1264, "vorhandenen": [1264, 1276], "verh\u00e4ltniss": 1264, "512mb": 1264, "ausgestattet": [1264, 1276], "m\u00fchsam": 1264, "produktivsystem": 1264, "ohnehin": 1264, "unangebracht": 1264, "anf\u00e4ng": 1264, "filesystemen": 1264, "obwohl": 1264, "sprachunabh\u00e4ngig": 1264, "brauchen": 1264, "reinen": 1264, "computerspielen": 1264, "spielerischen": 1264, "f\u00fchren": 1264, "w\u00e4hlt": 1264, "schalten": 1264, "ausg\u00e4ngen": 1264, "abfragen": 1264, "eing\u00e4ngen": 1264, "dumm": 1264, "intelligent": 1264, "ereignisgesteuert": 1264, "mikrocontrollern": 1264, "sprechen": 1264, "aufgaben": 1264, "temperaturmessung": 1264, "expandierung": 1264, "ausgelagert": 1264, "dediziert": 1264, "angesteuert": 1264, "gegeben": 1264, "stichwort": 1264, "lm": 1264, "netzwerkprotokol": 1264, "netzwerkstack": 1264, "einpasst": 1264, "hardwareerfahrung": 1264, "personnel": [1265, 1267], "arcan": 1265, "shed": 1265, "linux kernel": 1266, "kernel driv": [1266, 1270], "wait queu": 1266, "waitqueu": 1266, "block devic": 1266, "interrupt handl": 1266, "dose": 1266, "curios": 1266, "userpac": 1266, "massiv": 1266, "vital": 1266, "conscious": 1268, "abstrat": 1268, "interconnect": 1269, "intim": 1269, "memory manag": 1270, "tcp-ip": 1270, "racecondit": 1271, "batch": 1271, "systemcal": 1272, "datagram": 1272, "connectionless": 1272, "adress": 1272, "ipv6": 1272, "project manag": [1273, 1281], "intricaci": 1273, "interdepend": 1273, "make gnu": 1275, "gnu mak": 1275, "build manag": 1275, "seiner": [1275, 1276], "m\u00e4chtigen": 1275, "daran": 1275, "wendet": 1275, "interessiert": 1275, "gr\u00f6\u00dfere": 1275, "komplizierten": 1275, "griff": 1275, "regeln": 1275, "selbstdefiniert": 1275, "gewiss": 1275, "fertigkeit": 1275, "knopfdruck": 1276, "abnimmt": 1276, "zahlreichen": 1276, "abgeklopft": 1276, "kaputtmachen": 1276, "konstruktiv": 1276, "einfachheit": 1276, "klarzumachen": 1276, "umzusetzen": 1276, "anstatt": 1276, "auszustatten": 1276, "gedanken": 1276, "erkannt": 1276, "entscheidung": 1276, "verbockt": 1276, "softwareentwickl": 1276, "jedwed": 1276, "stabilen": 1276, "abliefern": 1276, "entscheidungstr\u00e4g": 1276, "vorgesetzt": 1276, "schl\u00fcssige": 1276, "kan\u00e4l": 1276, "etablieren": 1276, "unittestframework": 1276, "tragen": 1276, "schwerf\u00e4llig": 1276, "halben": 1276, "\u00fcbrige": 1276, "zurechtzufinden": 1276, "vortragend": 1276, "aufgrund": 1276, "herkunft": 1276, "aufwarten": 1276, "beibringen": 1276, "\u00fcppigen": 1276, "verbergen": 1276, "pr\u00e4ferierten": 1276, "vortragenden": 1276, "keyword argu": 1277, "for loop": 1277, "iterator protocol": 1277, "operator overload": 1277, "toolkit": 1278, "indiviu": 1279, "artificial intellig": 1280, "postgr": 1280, "mssql": 1280, "data sci": 1280, "package manag": 1281, "unit test": 1281, "virtual environ": 1281, "dingsbum": 162}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"curriculum": [0, 62, 63], "vita": 0, "myself": 1, "contact": 1, "impressum": 1, "further": [1, 26, 182, 215, 251, 252, 274, 395, 404, 500, 810, 831, 1046, 1137], "inform": [1, 26, 182, 199, 223, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 242, 245, 248, 251, 252, 253, 254, 258, 261, 270, 274, 277, 280, 282, 285, 288, 291, 300, 303, 310, 313, 377, 395, 404, 506, 831, 1137], "projekt": [2, 10], "au": 2, "selbstst\u00e4ndig": 2, "t\u00e4tigkeit": 2, "nichtselbstst\u00e4ndig": 2, "skill": 3, "thi": [4, 19, 24, 114, 118, 119, 121, 126, 130, 177, 194, 199, 200, 202, 203, 212, 221, 661, 675, 764, 804, 929, 1003, 1020, 1066, 1083, 1101, 1108, 1110], "site": [4, 15, 19, 177, 196, 198, 221], "licens": 4, "gplv3": 4, "github": [4, 111, 131, 149, 159, 196, 198, 227, 228, 240, 248, 404, 591, 605, 1208], "sphinx": [4, 27, 181, 198], "instal": [4, 47, 53, 121, 134, 142, 154, 195, 199, 203, 219, 220, 223, 248, 252, 253, 333, 349, 404, 409, 423, 543, 959, 1016, 1081, 1093, 1098, 1099, 1132, 1163, 1164, 1196, 1208, 1224, 1241, 1243, 1248, 1250, 1273], "instruct": [4, 161, 166, 487, 818, 1053, 1084, 1102], "pip": [4, 324], "venv": [4, 324], "work": [4, 86, 111, 113, 149, 155, 161, 166, 168, 175, 185, 194, 227, 258, 296, 298, 315, 316, 317, 318, 382, 411, 504, 505, 506, 605, 675, 764, 797, 801, 887, 890, 894, 1003, 1004, 1098], "progress": [4, 175], "more": [4, 160, 162, 174, 194, 211, 224, 263, 266, 271, 279, 283, 286, 288, 300, 301, 303, 304, 307, 309, 310, 313, 319, 320, 323, 324, 329, 330, 331, 338, 341, 345, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 369, 373, 377, 381, 382, 404, 426, 432, 455, 471, 473, 487, 497, 529, 537, 540, 545, 655, 664, 667, 674, 687, 693, 751, 764, 783, 800, 803, 804, 830, 868, 869, 870, 874, 875, 921, 992, 1015, 1067, 1105, 1107, 1109, 1152, 1155, 1156, 1157, 1216, 1241, 1253, 1277], "opentrain": [5, 10], "miscellan": [6, 170, 207, 211, 231, 260, 271, 273, 279, 289, 295, 296, 300, 304, 307, 316, 319, 320, 325, 330, 331, 341, 342, 345, 352, 353, 355, 359, 369, 374, 529, 626, 648, 719, 723, 808, 1035, 1055, 1057, 1154, 1223, 1274, 1280], "screencast": [7, 190], "topic": [8, 87, 88, 90, 91, 92, 93, 131, 223, 227, 230, 251, 252, 253, 264, 269, 288, 291, 307, 310, 313, 316, 317, 341, 345, 355, 356, 376, 377, 379, 380, 381, 383, 385, 386, 387, 394, 408, 412, 413, 422, 441, 456, 465, 472, 478, 482, 485, 489, 498, 502, 507, 508, 523, 555, 648, 656, 670, 673, 676, 692, 698, 702, 711, 716, 718, 719, 738, 741, 746, 752, 754, 758, 767, 769, 792, 796, 798, 799, 801, 802, 811, 823, 829, 832, 836, 842, 854, 860, 865, 872, 886, 911, 923, 963, 1011, 1029, 1031, 1059, 1065, 1087, 1094, 1095, 1109, 1110, 1115, 1123, 1131, 1162, 1207, 1210, 1214, 1218, 1223, 1224, 1229, 1235, 1240, 1246, 1256, 1280], "written": [8, 113, 147, 651, 654], "new": [8, 122, 131, 253, 269, 295, 296, 298, 355, 356, 373, 374, 381, 382, 383, 385, 386, 387, 388, 422, 519, 536, 594, 631, 747, 768, 798, 800, 829, 839, 964, 997, 1225], "write": [8, 29, 37, 45, 191, 526, 594, 631, 658, 761, 824, 826, 846, 942, 1025, 1032, 1042, 1128, 1158, 1165, 1233], "netide": [9, 10], "f\u00f6rderantrag": [9, 10], "1": [10, 24, 62, 67, 86, 96, 103, 106, 107, 110, 113, 148, 149, 150, 163, 164, 165, 194, 197, 208, 216, 218, 223, 227, 228, 230, 231, 232, 234, 235, 237, 242, 243, 245, 248, 252, 253, 254, 258, 261, 264, 267, 270, 274, 282, 307, 310, 313, 316, 317, 318, 319, 320, 324, 328, 330, 335, 341, 342, 345, 346, 356, 368, 372, 373, 375, 377, 380, 382, 386, 403, 405, 406, 413, 420, 422, 424, 425, 426, 428, 432, 436, 445, 447, 448, 449, 450, 454, 455, 458, 461, 467, 468, 469, 470, 471, 474, 476, 480, 484, 486, 488, 491, 492, 493, 494, 496, 497, 499, 500, 506, 514, 550, 553, 554, 591, 653, 655, 661, 672, 675, 682, 684, 751, 757, 793, 794, 801, 818, 821, 891, 930, 931, 934, 937, 943, 948, 955, 966, 976, 1014, 1028, 1050, 1051, 1053, 1055, 1057, 1058, 1070, 1077, 1081, 1084, 1085, 1102, 1110, 1115, 1136, 1138, 1139, 1145, 1148, 1153, 1154, 1156, 1157, 1158, 1159, 1221, 1232, 1233], "daten": [10, 247, 255], "antragsteller_in": 10, "2": [10, 24, 56, 63, 67, 86, 96, 101, 102, 103, 106, 110, 113, 149, 151, 152, 194, 197, 218, 223, 224, 227, 228, 230, 231, 232, 234, 237, 241, 242, 243, 245, 248, 252, 253, 254, 258, 261, 263, 264, 267, 270, 274, 282, 307, 310, 313, 316, 317, 318, 319, 320, 324, 328, 335, 341, 342, 345, 346, 352, 356, 368, 372, 373, 375, 377, 380, 382, 386, 387, 388, 418, 420, 422, 424, 425, 426, 428, 432, 436, 445, 447, 448, 449, 450, 454, 455, 458, 461, 467, 468, 470, 471, 474, 476, 480, 484, 486, 488, 491, 492, 493, 494, 496, 497, 499, 500, 506, 515, 550, 553, 554, 591, 640, 653, 655, 661, 672, 675, 682, 684, 751, 757, 793, 794, 801, 818, 821, 891, 930, 931, 937, 948, 955, 976, 1014, 1028, 1050, 1051, 1053, 1055, 1057, 1058, 1070, 1077, 1081, 1084, 1085, 1098, 1102, 1110, 1115, 1136, 1138, 1139, 1145, 1147, 1148, 1154, 1156, 1157, 1158, 1159, 1217, 1219, 1220, 1221, 1232, 1233], "allgemein": 10, "projektnam": 10, "untertitel": 10, "3": [10, 53, 56, 86, 96, 103, 113, 131, 140, 141, 145, 149, 154, 155, 156, 157, 158, 159, 160, 162, 194, 218, 227, 228, 230, 231, 232, 233, 234, 237, 242, 243, 248, 252, 253, 254, 256, 258, 263, 264, 267, 270, 274, 282, 289, 307, 310, 313, 316, 318, 319, 320, 324, 328, 330, 341, 342, 343, 345, 346, 352, 356, 368, 372, 373, 375, 377, 380, 382, 422, 426, 476, 480, 484, 488, 494, 496, 497, 499, 500, 550, 553, 554, 591, 655, 794, 1028, 1053, 1057, 1058, 1110, 1139, 1147, 1153, 1158], "allgemeinverst\u00e4ndlich": 10, "kurzbeschreibung": 10, "de": [10, 300, 422, 801, 856], "4": [10, 56, 96, 194, 218, 227, 230, 234, 242, 243, 245, 248, 252, 253, 270, 282, 307, 375, 382, 413, 422, 426, 484, 488, 494, 550, 553, 655, 1110], "anschlussf\u00f6rderung": 10, "die": [10, 40, 200, 217, 255], "besonder": [10, 234], "bedeutung": 10, "ihr": 10, "f\u00fcr": [10, 218, 224, 234, 422], "da": [10, 214, 224, 241, 250, 283], "internet": 10, "internetnutzung": 10, "IN": 10, "\u00f6sterreich": 10, "zielgrupp": 10, "und": [10, 208, 224, 234, 235, 239, 241, 245, 247, 250, 254, 270, 273, 279, 282, 286, 292, 359, 369, 405, 422, 446, 455], "projektziel": 10, "5": [10, 56, 194, 211, 218, 223, 224, 226, 234, 252, 253, 255, 307, 382, 413, 422, 484, 494, 550, 553, 857, 858], "l\u00f6sung": [10, 224], "beschreibung": 10, "der": [10, 56, 150, 152, 165, 234, 239, 255, 405, 422], "probleml\u00f6sung": 10, "wesentlich": 10, "element": [10, 234, 271, 289, 291, 609, 611, 612, 616, 703, 704, 706, 707, 761, 1144], "ein": [10, 224, 255], "nachhaltigen": 10, "impact": 10, "nach": [10, 291], "projektend": 10, "6": [10, 131, 134, 135, 136, 137, 138, 142, 143, 144, 161, 234, 235, 255, 256, 289, 422, 484, 494, 550, 553, 1153], "umfeldanalys": 10, "wa": [10, 223, 239, 730, 1066], "ist": [10, 224], "stand": 10, "technik": 10, "method": [10, 247, 250, 260, 271, 273, 276, 279, 289, 304, 316, 325, 331, 343, 347, 353, 359, 365, 369, 381, 396, 398, 406, 525, 604, 640, 652, 659, 660, 663, 665, 667, 670, 727, 731, 743, 744, 787, 801, 831, 844, 845, 846, 847, 943, 978, 980, 994, 1125, 1127, 1153, 1154, 1155, 1242], "wissen": 10, "welch": 10, "ander": [10, 210, 405], "l\u00f6sungen": 10, "vorhaben": 10, "zu": [10, 217, 234], "den": [10, 200, 239, 255], "genannten": 10, "problemen": 10, "gibt": [10, 234], "e": [10, 503, 845], "schon": 10, "7": [10, 56, 227, 234, 235, 255, 422, 484, 494], "alleinstellungsmerkm": 10, "8": [10, 234, 235, 254, 255, 422, 484, 494, 937, 1221], "projektergebniss": 10, "list": [10, 210, 211, 224, 234, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 353, 359, 365, 369, 484, 525, 541, 602, 626, 643, 657, 699, 800, 801, 815, 824, 835, 913, 945, 972, 973, 974, 996, 1104, 1107, 1110, 1111, 1120, 1140, 1148, 1155, 1185, 1186, 1236], "erforderlich": 10, "lizenzen": 10, "dritter": 10, "9": [10, 227, 228, 234, 235, 255, 422, 484, 494, 1110], "erfolgreich": 10, "projektabschluss": 10, "sonstigen": 10, "aktivit\u00e4ten": 10, "im": [10, 234, 260, 273, 286, 289, 304, 311, 325, 331, 343, 347, 365, 369, 422, 1148], "projektbereich": 10, "angaben": [10, 150, 152, 165], "zur": [10, 150, 152, 165, 224, 234], "fachlichen": 10, "eignung": 10, "mitarbeiterinnen": 10, "projektkernteam": 10, "erfahrung": 10, "vorgesehenen": 10, "projektleiterin": 10, "link": [10, 26, 162, 168, 171, 177, 195, 212, 223, 226, 228, 230, 232, 235, 237, 242, 243, 245, 254, 258, 261, 264, 270, 277, 288, 291, 324, 330, 409, 411, 484, 486, 760, 767, 770, 809, 818, 824, 838, 843, 848, 870, 891, 912, 930, 937, 963, 972, 973, 1013, 1045, 1100, 1101, 1132, 1163, 1164, 1207, 1208, 1224, 1226, 1227, 1228, 1230, 1231, 1232, 1239, 1244], "zum": [10, 210, 255], "maxim": 10, "min\u00fctigen": 10, "video": [10, 11, 18, 242, 300, 330, 346, 810], "risiken": 10, "erfolgskriterien": 10, "am": [10, 224, 283, 422], "angestrebt": 10, "jahr": 10, "10": [10, 32, 88, 89, 131, 155, 183, 208, 211, 216, 227, 230, 234, 269, 270, 297, 298, 299, 300, 301, 315, 338, 339, 341, 342, 344, 381, 382, 404, 408, 409, 410, 414, 422, 484, 611, 857, 858], "umsetzung": 10, "einj\u00e4hrig": 10, "wichtig": 10, "partner_innen": 10, "arbeitsschwerpunkt": 10, "ressourcen": 10, "nutzer_innen": 10, "kommunikationskan\u00e4l": 10, "11": [10, 32, 114, 118, 126, 130, 131, 209, 214, 232, 233, 234, 263, 264, 269, 294, 298, 300, 303, 304, 338, 345, 346, 347, 348, 349, 350, 351, 352, 353, 371, 372, 373, 375, 376, 377, 379, 381, 383, 384, 411, 412, 422, 484, 626, 755, 798, 826, 827, 834, 844, 849], "projekttermin": 10, "termin": [10, 861, 1051, 1116], "projektstart": 10, "12": [10, 32, 53, 114, 115, 118, 126, 131, 159, 214, 233, 234, 238, 245, 253, 266, 267, 269, 300, 351, 352, 353, 356, 357, 358, 359, 360, 404, 409, 413, 415, 422], "kosten": 10, "finanzierung": 10, "projektkosten": 10, "personalkosten": 10, "sonstig": 10, "gesamtkosten": 10, "wir": [10, 239, 255], "beantragen": 10, "folgend": 10, "f\u00f6rderung": 10, "13": [10, 28, 32, 141, 202, 223, 234, 235, 245, 298, 307, 310, 311, 313, 371, 372, 422], "restlichen": 10, "werden": [10, 234], "finanziert": 10, "durch": [10, 224], "sonderprei": 10, "14": [10, 32, 114, 115, 118, 126, 131, 136, 214, 223, 234, 235, 238, 252, 294, 385, 386, 422], "erg\u00e4nzend": 10, "transparenz": 10, "mehrfachantr\u00e4g": 10, "nutzung": 10, "whataventur": 10, "plattform": 10, "eingereicht": 10, "teil": 10, "einer": [10, 214, 223, 234, 422], "schulischen": 10, "verpflichtung": 10, "z": 10, "b": 10, "htl": 10, "diplomarbeit": 10, "wie": [10, 241, 247], "haben": [10, 224], "sie": [10, 224], "von": [10, 210, 214, 217, 224, 234, 241, 254, 255, 270, 282, 369, 399, 422], "erfahren": 10, "mehrfachnennungen": 10, "m\u00f6glich": 10, "16": [10, 253, 277, 291, 303, 304, 422, 1110], "datenschutz": 10, "screenplai": [11, 49, 383, 389, 512, 513, 518, 519, 520, 521, 534, 536, 628, 631, 634, 637, 640, 643, 646, 677, 678, 679, 680, 681, 684, 685, 686, 704, 705, 706, 707, 708, 939, 942, 947, 952, 957, 959, 997, 1000, 1003, 1073, 1076, 1080, 1149, 1236, 1243, 1248, 1250, 1253], "content": [11, 24, 134, 135, 154, 191, 192, 193, 194, 195, 196, 197, 198, 215, 219, 220, 250, 385, 406, 509, 526, 631, 634, 640, 643, 649, 723, 846, 859, 880, 893, 899, 905, 909, 926, 933, 935, 1009, 1018, 1034, 1036, 1038, 1062, 1073, 1076, 1091, 1111, 1167, 1171, 1175, 1181, 1195, 1202, 1248, 1250, 1253, 1258, 1266], "The": [11, 26, 30, 32, 47, 89, 111, 114, 156, 203, 234, 250, 253, 256, 263, 280, 289, 292, 307, 315, 317, 319, 325, 328, 335, 338, 341, 342, 345, 347, 355, 356, 359, 369, 372, 377, 380, 381, 383, 385, 386, 424, 432, 433, 470, 471, 486, 493, 494, 503, 504, 508, 509, 519, 529, 530, 534, 543, 606, 607, 659, 682, 703, 705, 719, 747, 749, 750, 759, 764, 765, 790, 798, 800, 801, 803, 810, 815, 824, 825, 846, 848, 856, 866, 867, 874, 891, 894, 905, 909, 911, 913, 922, 925, 928, 934, 980, 1012, 1014, 1016, 1017, 1019, 1025, 1033, 1037, 1061, 1063, 1066, 1071, 1083, 1085, 1096, 1097, 1105, 1106, 1108, 1112, 1116, 1124, 1127, 1131, 1133, 1135, 1142, 1147, 1153, 1196, 1216, 1222, 1232, 1242, 1275, 1278, 1282], "problem": [11, 161, 468, 490, 516, 517, 540, 548, 549, 550, 553, 559, 606, 607, 724, 744, 747, 748, 750, 759, 761, 765, 766, 783, 815, 826, 827, 830, 848, 849, 868, 887, 940, 974, 1014, 1016, 1020, 1066, 1085, 1101, 1102, 1106, 1120, 1215, 1237, 1244], "And": [11, 29, 47, 49, 52, 111, 116, 117, 131, 137, 144, 156, 157, 159, 161, 162, 167, 168, 171, 172, 173, 174, 203, 205, 207, 298, 301, 304, 307, 310, 315, 316, 317, 318, 319, 320, 325, 328, 330, 333, 335, 338, 341, 342, 345, 346, 347, 349, 353, 355, 356, 359, 369, 372, 373, 374, 375, 376, 379, 381, 382, 384, 385, 386, 422, 444, 488, 512, 524, 528, 529, 532, 536, 537, 538, 540, 541, 543, 544, 546, 552, 554, 561, 569, 570, 575, 583, 589, 604, 651, 652, 658, 662, 678, 682, 683, 684, 686, 704, 705, 720, 740, 741, 743, 745, 747, 749, 756, 763, 764, 770, 783, 794, 806, 807, 813, 815, 819, 822, 824, 825, 833, 834, 835, 837, 838, 839, 844, 848, 852, 856, 857, 858, 862, 866, 872, 874, 910, 922, 925, 929, 933, 936, 948, 1007, 1008, 1019, 1032, 1041, 1042, 1043, 1046, 1047, 1048, 1063, 1086, 1093, 1094, 1096, 1098, 1099, 1100, 1101, 1103, 1108, 1112, 1113, 1116, 1120, 1121, 1122, 1127, 1128, 1129, 1130, 1195, 1196, 1197, 1205, 1216, 1221, 1226, 1227, 1228, 1230, 1231, 1241, 1265, 1273], "me": [11, 196, 355, 374, 1031], "open": [11, 185, 320, 558, 942, 943, 1022, 1025, 1028, 1030, 1041, 1077, 1105, 1158], "sourc": [11, 27, 195, 220, 513, 518, 519, 520, 521, 534, 536, 540, 551, 790, 940, 943, 945, 948, 950, 953, 957, 961, 964, 974, 976, 984, 987, 992, 1026, 1083, 1084, 1085, 1100, 1102, 1164, 1221], "train": [11, 12, 13, 14, 15, 199, 212, 227, 228, 230, 231, 232, 233, 235, 237, 238, 242, 245, 248, 251, 252, 253, 254, 258, 261, 270, 274, 277, 280, 282, 285, 288, 291, 300, 303, 310, 313, 385, 387, 1213, 1279, 1282], "materi": [11, 15, 17, 53, 112, 149, 159, 164, 214, 216, 231, 252, 403, 418, 419, 511, 851, 1207, 1229], "walk": [11, 307, 369, 404], "through": [11, 155, 307, 404, 740], "us": [12, 13, 14, 15, 16, 17, 18, 19, 25, 29, 174, 193, 197, 199, 203, 212, 213, 219, 221, 231, 250, 252, 253, 266, 269, 375, 382, 429, 431, 434, 449, 464, 486, 496, 504, 505, 517, 522, 525, 535, 550, 553, 570, 591, 690, 704, 715, 729, 737, 750, 764, 768, 787, 788, 789, 801, 810, 814, 815, 825, 834, 839, 924, 934, 936, 937, 1041, 1042, 1050, 1067, 1084, 1085, 1096, 1097, 1103, 1105, 1108, 1111, 1121, 1130, 1236, 1242, 1243], "case": [12, 13, 14, 15, 16, 17, 174, 252, 460, 464, 554, 617, 619, 622, 768, 833, 834, 1026, 1030, 1031, 1032, 1095, 1103, 1130, 1242, 1248], "custom": [12, 185, 188, 196, 394, 652, 653, 666, 672, 696, 753, 1230, 1232, 1248], "subtract": [12, 650], "known": [12, 191], "calcul": [13, 250, 453, 552, 1128], "minimum": [13, 961], "durat": 13, "trainer": [14, 513, 519, 521, 536, 537, 801, 821, 824, 848], "editor": [14, 243], "end": [14, 808], "user": [14, 29, 33, 142, 155, 253, 255, 422, 654, 724, 726, 731, 732, 733, 734, 735, 736, 747, 862, 863, 864, 866, 867, 868, 876, 877, 888, 948, 1016, 1107, 1198, 1200, 1202, 1203, 1205, 1236], "audienc": [14, 1262, 1267, 1273], "from": [15, 16, 18, 25, 27, 29, 30, 32, 44, 89, 111, 131, 142, 158, 161, 183, 189, 203, 212, 220, 221, 229, 269, 279, 307, 310, 315, 324, 342, 381, 385, 422, 439, 461, 467, 509, 512, 513, 674, 677, 724, 725, 739, 812, 813, 835, 839, 952, 957, 998, 1003, 1015, 1033, 1041, 1047, 1066, 1067, 1076, 1083, 1126, 1164, 1204, 1208, 1213, 1215, 1279], "other": [15, 25, 39, 250, 319, 331, 406, 810, 824, 876, 961, 984, 1115], "menu": 16, "choos": 16, "slide": [17, 32, 53, 174, 211, 407, 419, 851, 1077, 1081], "show": [17, 173, 174, 801], "plain": [17, 690, 739, 800], "text": [17, 328, 372, 470, 919, 923, 925, 1158, 1233], "file": [17, 18, 29, 35, 136, 138, 155, 157, 212, 214, 250, 260, 263, 279, 286, 288, 289, 303, 307, 311, 321, 323, 324, 325, 328, 329, 330, 347, 351, 352, 353, 358, 359, 363, 364, 365, 367, 368, 372, 395, 396, 411, 468, 512, 514, 517, 520, 526, 529, 536, 554, 634, 664, 857, 858, 861, 880, 885, 886, 892, 893, 896, 897, 898, 906, 910, 913, 914, 919, 923, 924, 942, 943, 944, 952, 984, 1007, 1015, 1016, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1039, 1041, 1042, 1073, 1077, 1083, 1084, 1099, 1105, 1134, 1158, 1164, 1165, 1166, 1187, 1189, 1198, 1200, 1216, 1248], "send": [18, 1081], "A": [18, 32, 49, 111, 126, 131, 139, 140, 174, 192, 203, 269, 295, 296, 298, 310, 314, 315, 316, 317, 319, 324, 355, 356, 358, 374, 375, 381, 382, 383, 384, 422, 427, 436, 466, 493, 511, 512, 513, 519, 525, 531, 534, 541, 549, 569, 583, 591, 594, 604, 609, 624, 650, 664, 665, 674, 683, 714, 724, 732, 744, 745, 749, 750, 756, 800, 801, 803, 806, 815, 824, 844, 847, 848, 857, 858, 861, 876, 887, 910, 914, 934, 1015, 1017, 1021, 1022, 1023, 1026, 1029, 1030, 1031, 1032, 1039, 1042, 1043, 1061, 1067, 1070, 1083, 1097, 1098, 1101, 1102, 1103, 1106, 1111, 1130, 1133, 1196, 1221, 1226, 1228, 1232, 1233, 1241, 1264, 1267, 1273], "v4l": 18, "camera": 18, "devic": [18, 49, 70, 86, 113, 149, 861, 934, 936, 937, 939, 940, 941, 942, 943, 944, 947, 948, 949, 950, 951, 952, 974, 978, 979, 980, 1073], "output": [18, 37, 110, 119, 212, 224, 395, 528, 538, 721, 873, 1110, 1213, 1248], "over": [18, 159, 263, 271, 273, 525, 797, 937, 1146, 1147], "ssh": [18, 135, 136, 156, 159, 243, 307, 328, 372, 401, 409, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "captur": [18, 803, 804, 806], "To": [18, 24, 26, 29, 31, 40, 110, 174, 206, 286, 315, 355, 374, 381, 382, 518, 519, 520, 554, 555, 570, 591, 704, 717, 720, 724, 739, 744, 745, 749, 750, 755, 759, 761, 763, 764, 770, 800, 801, 803, 815, 821, 825, 831, 835, 839, 844, 846, 848, 857, 858, 934, 955, 996, 998, 1007, 1008, 1015, 1047, 1085, 1096, 1098, 1103, 1105, 1106, 1126, 1127, 1205, 1225, 1226, 1232], "plai": [18, 49, 770], "remot": [18, 86, 111, 113, 149, 170, 559, 572, 586, 857, 858, 1007, 1008, 1012, 1015, 1016], "system": [18, 136, 138, 155, 168, 194, 266, 307, 328, 365, 372, 411, 422, 442, 506, 529, 816, 880, 886, 1016, 1018, 1019, 1020, 1025, 1036, 1041, 1063, 1067, 1070, 1137, 1236, 1268, 1269, 1270, 1271, 1272], "emoji": 19, "code": [19, 28, 30, 32, 96, 155, 221, 222, 224, 225, 248, 264, 317, 319, 320, 333, 349, 373, 374, 376, 377, 379, 380, 382, 422, 490, 500, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 534, 536, 547, 551, 627, 630, 633, 636, 639, 642, 645, 674, 783, 814, 846, 945, 946, 950, 951, 952, 953, 954, 964, 965, 974, 975, 986, 987, 988, 992, 993, 1031, 1072, 1075, 1079, 1084, 1100, 1101, 1102, 1204, 1205, 1206, 1208, 1211, 1214, 1221, 1234, 1243, 1247, 1252, 1273], "sphinxemoji": 19, "setup": [19, 49, 67, 98, 135, 139, 155, 156, 195, 199, 220, 227, 228, 230, 231, 232, 253, 303, 309, 310, 313, 316, 318, 320, 323, 324, 328, 329, 330, 351, 352, 357, 358, 363, 367, 368, 372, 538, 604, 606, 928, 1012, 1023, 1041, 1046, 1098, 1099, 1132, 1196, 1197, 1243, 1253], "most": [19, 25, 49, 749, 1236], "here": [19, 193, 554, 1015], "In": [19, 32, 111, 174, 197, 199, 200, 202, 231, 234, 295, 296, 298, 317, 319, 342, 355, 373, 382, 384, 422, 512, 514, 515, 517, 520, 525, 528, 536, 602, 607, 609, 650, 654, 664, 665, 666, 667, 668, 669, 694, 745, 755, 761, 768, 790, 801, 803, 804, 810, 814, 831, 834, 840, 848, 857, 858, 866, 922, 934, 961, 1040, 1083, 1085, 1100, 1107, 1148, 1258], "all": [19, 25, 40, 49, 104, 174, 180, 247, 250, 269, 315, 345, 356, 422, 525, 742, 750, 790, 800, 804, 810, 848, 868, 1003, 1083, 1100, 1118, 1275], "recip": 20, "isoamsa": 21, "txt": [21, 22, 23, 25, 518, 536, 937], "ad": [21, 22, 23, 196, 519, 1100, 1225, 1232], "mathemat": [21, 22, 23], "symbol": [21, 22, 23, 430, 445, 506, 912, 1083], "arrow": 21, "isoamsr": 22, "relat": [22, 310, 313, 385, 386, 448, 784], "isonum": 23, "binari": [23, 570, 1158], "oper": [23, 211, 224, 234, 247, 263, 266, 269, 276, 279, 283, 286, 300, 315, 335, 347, 385, 386, 399, 432, 447, 448, 449, 452, 453, 455, 456, 461, 473, 525, 604, 626, 651, 652, 658, 665, 704, 706, 720, 801, 816, 822, 844, 848, 873, 942, 943, 944, 1020, 1067, 1127, 1137, 1139, 1141, 1157, 1227], "layout": [24, 279, 479], "test": [24, 29, 30, 31, 32, 37, 61, 114, 118, 119, 121, 122, 124, 126, 130, 139, 140, 203, 223, 253, 277, 288, 291, 300, 309, 310, 313, 314, 315, 319, 320, 333, 335, 338, 341, 342, 345, 349, 368, 373, 374, 375, 376, 377, 379, 380, 382, 412, 418, 422, 512, 538, 554, 575, 591, 605, 607, 608, 667, 724, 945, 964, 997, 1033, 1096, 1099, 1164, 1197, 1204, 1205, 1206, 1213, 1241, 1242, 1246, 1248, 1250, 1253, 1273, 1276], "page": [24, 83, 196, 198, 891, 924, 955, 1019, 1046], "admonit": 24, "i": [24, 32, 107, 138, 161, 174, 193, 194, 210, 250, 260, 266, 271, 276, 279, 286, 288, 289, 321, 325, 328, 330, 359, 365, 372, 396, 408, 432, 458, 505, 511, 529, 549, 604, 623, 650, 657, 704, 744, 749, 750, 761, 783, 801, 803, 815, 817, 820, 824, 827, 830, 835, 845, 861, 866, 867, 872, 873, 874, 887, 897, 910, 937, 957, 968, 989, 1004, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1032, 1034, 1035, 1042, 1061, 1064, 1083, 1101, 1103, 1108, 1158, 1215, 1228, 1253], "an": [24, 196, 266, 319, 334, 341, 345, 350, 373, 378, 381, 382, 400, 404, 422, 516, 652, 770, 815, 910, 936, 945, 1015, 1020, 1041, 1047, 1067, 1101, 1112, 1121, 1148, 1150, 1243, 1258], "tip": 24, "note": [24, 47, 125, 170, 172, 173, 174, 390, 513, 519, 521, 536, 537, 548, 801, 821, 824, 848, 876, 1046], "hint": [24, 572, 602, 724], "import": [24, 203, 210, 250, 260, 269, 404, 657, 1066, 1081, 1107, 1115, 1222], "attent": [24, 525, 1150], "caution": 24, "error": [24, 30, 203, 266, 319, 320, 341, 342, 345, 385, 386, 471, 496, 550, 671, 681, 682, 724, 745, 873, 937, 1017, 1026, 1030, 1031, 1032, 1120, 1177], "danger": [24, 438, 532, 820, 888], "sidebar": 24, "blech": 24, "titl": 24, "blah": 24, "kursdaten": 24, "local": [24, 26, 86, 111, 113, 149, 159, 170, 211, 234, 385, 386, 469, 501, 536, 543, 559, 768, 1012, 1015, 1057, 1085, 1149, 1243], "head": [24, 922, 972, 1216], "bleh": 24, "do": [24, 29, 250, 292, 355, 462, 499, 513, 543, 549, 761, 764, 800, 801, 857, 858, 874, 974, 996, 1041, 1083], "mmlalia": 25, "mathml": 25, "alias": 25, "entiti": [25, 1051], "set": [25, 49, 229, 234, 239, 244, 247, 255, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 532, 887, 888, 1066, 1081, 1104, 1140, 1157, 1196, 1220, 1230], "restructuredtext": 26, "cheat": [26, 404], "sheet": [26, 404], "document": [26, 139, 149, 164, 198, 247, 263, 343, 375, 399, 513, 518, 519, 520, 521, 525, 526, 527, 528, 529, 532, 533, 534, 536, 687, 688, 689, 690, 691, 693, 694, 695, 696, 699, 700, 703, 704, 709, 720, 724, 744, 747, 748, 757, 761, 765, 766, 770, 821, 824, 839, 850, 857, 858, 861, 866, 873, 874, 875, 876, 891, 892, 893, 894, 910, 913, 914, 934, 948, 964, 966, 970, 972, 994, 998, 1001, 1015, 1017, 1019, 1021, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1041, 1042, 1043, 1047, 1049, 1083, 1084, 1100, 1136, 1160, 1161, 1170, 1233, 1241, 1248], "extern": [26, 333, 349, 376, 377, 379, 380, 390, 467, 518, 519, 522, 664, 936, 959, 960, 1101, 1171, 1273], "section": [26, 384], "refer": [26, 192, 234, 260, 263, 266, 273, 286, 289, 295, 296, 298, 301, 304, 308, 311, 316, 319, 325, 331, 343, 355, 359, 365, 369, 374, 375, 436, 474, 501, 662, 745, 749, 794, 795, 803, 804, 806, 811, 814, 815, 831, 845, 847, 850, 991, 1148], "That": [26, 292, 295, 296, 298, 315, 342, 475, 535, 553, 650, 657, 704, 753, 761, 800, 801, 803, 815, 846, 847, 866, 937, 984, 1015, 1020, 1021, 1024, 1103, 1130, 1250], "we": [26, 29, 32, 40, 355, 510, 512, 513, 521, 974, 1003, 1066, 1096, 1248], "anoth": [26, 279, 510, 513, 824, 1067, 1100], "contain": [26, 131, 143, 269, 289, 315, 318, 356, 626, 642, 643, 644, 682, 683, 697, 698, 701, 702, 703, 755, 800, 801, 837, 848, 972, 1098], "abov": 26, "footnot": 26, "sphinxish": 27, "jupyt": [27, 235, 236, 240, 241, 242, 245, 246, 248, 249, 258, 259, 261, 262, 264, 265, 268, 270, 272, 275, 278, 281, 284, 287, 289, 290, 293, 302, 305, 308, 312, 321, 322, 326, 332, 337, 340, 343, 344, 347, 348, 354, 370, 399, 1213, 1214], "notebook": [27, 230, 235, 236, 240, 241, 242, 245, 246, 248, 249, 251, 258, 259, 261, 262, 264, 265, 266, 268, 270, 272, 275, 278, 281, 284, 287, 289, 290, 293, 302, 305, 308, 312, 321, 322, 326, 332, 337, 340, 343, 344, 347, 348, 354, 370, 399, 404, 1211, 1213, 1214], "run": [27, 183, 197, 538, 605, 667, 745, 928, 992, 1021, 1022, 1023, 1098, 1099, 1135, 1211, 1214, 1241], "seminar": 28, "clean": [28, 30, 32, 257, 317, 319, 320, 374, 422, 511, 512, 518], "2022": [28, 87, 88, 89, 90, 91, 92, 93, 132, 148, 149, 150, 151, 152, 269, 270, 271, 274, 277, 280, 282, 285, 288, 291, 294, 297, 298, 299, 300, 301, 303, 304, 414, 415, 416, 422], "04": [28, 93, 134, 136, 137, 138, 154, 155, 156, 197, 269, 280, 282, 285, 318, 319, 320, 321, 322, 356, 373, 381, 382, 404, 422, 1098], "agenda": [28, 227, 228, 230, 231, 232, 233, 238, 242, 243, 280, 285, 297, 306, 310, 313, 319, 323, 327, 329, 333, 335, 341, 345, 349, 351, 355, 357, 363, 367, 371, 374, 376, 379, 383, 385, 387, 417, 418, 1273], "timelin": 28, "live": [29, 31, 32, 210, 213, 235, 245, 248, 258, 307, 521, 648, 687, 688, 690, 691, 694, 695, 696, 709, 800, 805, 806, 813, 822, 825, 861, 888, 1020, 1038], "hack": [29, 31, 32, 210, 213, 235, 245, 248, 258, 307, 310, 314, 317, 320, 346, 648, 687, 688, 690, 691, 694, 695, 696, 709, 800, 805, 806, 813, 822, 825, 889, 1038], "befor": [29, 49, 185, 212, 335, 338, 844, 1066, 1248], "formal": [29, 432], "unit": [29, 30, 32, 61, 139, 223, 253, 291, 300, 310, 313, 368, 373, 374, 375, 377, 380, 412, 422, 591, 607, 667, 1197, 1246], "initi": [29, 260, 295, 296, 298, 355, 356, 374, 384, 434, 446, 495, 602, 633, 634, 635, 650, 657, 667, 705, 720, 745, 747, 753, 754, 755, 756, 765, 800, 801, 820, 834, 978, 989, 1001, 1043, 1055, 1057], "structur": [29, 30, 131, 139, 168, 211, 274, 295, 296, 298, 300, 322, 333, 344, 348, 349, 355, 374, 464, 472, 479, 482, 488, 546, 591, 626, 801, 825, 834, 850, 952, 980, 1102, 1115, 1241, 1248, 1273], "snippet": [29, 31, 37], "userdb": [29, 33, 36, 37, 42, 45, 252, 626, 733, 737], "bin": [29, 139, 724, 1086], "binaryfil": 29, "cpp": [29, 139, 513, 514, 591, 594, 724, 771, 772, 774, 775, 776, 777, 778], "extend": [29, 247, 667, 1124], "read": [29, 36, 37, 45, 139, 140, 168, 250, 257, 395, 396, 406, 439, 500, 512, 526, 554, 704, 724, 810, 835, 942, 1000, 1021, 1025, 1031, 1033, 1042, 1158, 1165, 1166, 1198, 1199, 1200, 1201, 1213, 1233], "iter": [29, 213, 224, 229, 234, 239, 241, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 288, 289, 300, 301, 303, 304, 310, 313, 317, 321, 323, 324, 325, 329, 330, 342, 343, 347, 351, 352, 353, 357, 358, 359, 363, 364, 367, 368, 369, 396, 525, 682, 683, 707, 770, 777, 797, 800, 833, 834, 835, 972, 1110, 1112, 1113, 1114, 1126, 1146, 1147, 1156], "bug": [29, 34, 40, 449, 634, 835], "faschingbau": [29, 196], "As": [29, 553, 570, 815, 837, 937, 1039, 1083, 1121, 1250], "last": [29, 449, 470, 471, 500, 672, 675, 751, 1058, 1081, 1248], "name": [29, 30, 119, 260, 263, 279, 443, 481, 525, 529, 532, 659, 800, 801, 875, 893, 984, 1077, 1149, 1160], "wrap": [29, 223, 496, 534, 800, 801, 1106], "up": [29, 194, 223, 257, 300, 318, 319, 341, 409, 496, 518, 800, 801, 1121], "what": [29, 32, 36, 40, 173, 199, 202, 266, 276, 375, 381, 422, 458, 499, 510, 513, 520, 521, 529, 654, 735, 750, 761, 764, 800, 801, 803, 814, 815, 824, 866, 874, 892, 931, 953, 974, 984, 1000, 1004, 1012, 1015, 1016, 1020, 1021, 1024, 1028, 1066, 1070, 1083, 1096, 1100, 1108, 1112, 1116, 1159, 1228, 1232], "have": [29, 32, 510, 704, 848, 974, 1096, 1101], "messag": [30, 192, 193, 385, 386, 509, 541, 1041, 1056, 1077, 1224, 1248], "book": [30, 32, 206, 238, 288, 330, 424, 509, 1208], "survei": [30, 510], "function": [30, 199, 211, 229, 234, 244, 247, 250, 253, 256, 260, 263, 271, 273, 279, 283, 288, 289, 292, 295, 296, 298, 300, 304, 311, 317, 325, 335, 336, 338, 341, 342, 343, 345, 351, 352, 353, 355, 356, 357, 358, 359, 363, 364, 365, 367, 368, 369, 373, 374, 381, 404, 436, 438, 443, 470, 472, 474, 475, 480, 512, 528, 532, 534, 540, 592, 626, 650, 659, 663, 665, 670, 674, 690, 724, 751, 752, 761, 764, 800, 812, 813, 814, 815, 837, 853, 945, 946, 1017, 1019, 1067, 1103, 1105, 1106, 1108, 1110, 1111, 1130, 1147, 1149, 1150, 1151, 1159, 1182, 1184, 1188, 1191, 1199, 1201, 1232], "comment": [30, 247, 271, 286, 311, 399, 524, 1136, 1178], "format": [30, 37, 250, 256, 271, 331, 359, 1153, 1206], "object": [30, 106, 224, 229, 266, 273, 279, 283, 291, 292, 300, 303, 304, 316, 317, 319, 320, 323, 324, 329, 335, 336, 338, 341, 342, 345, 346, 351, 357, 363, 364, 367, 368, 382, 392, 510, 548, 553, 633, 634, 635, 650, 652, 655, 658, 660, 663, 665, 730, 741, 743, 755, 812, 815, 845, 1077, 1101, 1102, 1107, 1115, 1121, 1123, 1125, 1159, 1226, 1230], "data": [30, 118, 119, 120, 121, 211, 213, 239, 248, 274, 288, 291, 300, 324, 341, 342, 343, 345, 365, 367, 375, 444, 488, 491, 512, 536, 656, 660, 682, 824, 850, 866, 1043, 1057, 1126, 1195, 1208, 1213, 1215], "handl": [30, 266, 269, 279, 291, 310, 313, 318, 319, 320, 341, 342, 345, 415, 516, 550, 671, 1017, 1107, 1160], "boundari": [30, 1221], "class": [30, 224, 250, 269, 273, 276, 279, 292, 300, 316, 321, 335, 338, 369, 375, 381, 382, 384, 541, 553, 560, 561, 578, 579, 591, 594, 608, 627, 628, 629, 652, 659, 660, 664, 666, 667, 668, 669, 675, 690, 732, 739, 740, 743, 753, 764, 800, 801, 805, 813, 814, 839, 840, 844, 849, 940, 1106, 1120, 1121, 1124, 1125, 1126, 1127], "switch": [31, 124, 129, 130, 131, 460, 492, 603], "googletest": [31, 219, 374, 375, 605, 1246], "git": [31, 66, 111, 131, 155, 159, 160, 161, 162, 163, 164, 170, 195, 203, 248, 252, 253, 307, 404, 409, 422, 957, 1208], "submodul": 31, "establish": [31, 32, 1099], "demo": [31, 122, 309, 310, 317, 522, 537, 554, 805, 845, 861, 888, 1020, 1064, 1069], "straightforward": [31, 224, 740, 848], "main": [31, 111, 477, 588, 589, 590, 782, 784, 786, 788, 1100], "convers": [31, 247, 263, 271, 273, 279, 283, 286, 304, 315, 321, 325, 331, 343, 347, 353, 359, 365, 399, 449, 476, 720, 739, 801, 1139, 1153], "fix": [31, 174, 195, 203, 295, 296, 298, 315, 396, 658, 761, 770, 825, 974, 975, 987, 988], "shortcom": 31, "softwar": [32, 131, 220, 317, 510, 511, 937, 1066, 1088, 1092, 1262], "craft": [32, 317, 511], "09": [32, 131, 197, 251, 261, 269, 335, 336, 337, 338, 339, 340, 373, 381, 382, 422], "00": 32, "15": [32, 234, 240, 277, 310, 313, 323, 324, 325, 363, 364, 365, 366, 385, 386, 404, 411, 416, 422, 857, 858], "introductori": [32, 307, 770, 1038], "word": [32, 286, 470, 471, 500, 503, 672, 675, 751, 841, 891, 1176, 1193], "engin": [32, 167, 168, 288, 937], "disciplin": 32, "coffe": 32, "break": [32, 234, 271, 463, 1143, 1146], "project": [32, 98, 111, 123, 131, 149, 196, 211, 252, 253, 267, 291, 296, 298, 300, 316, 318, 319, 320, 333, 335, 338, 341, 342, 345, 346, 349, 364, 368, 374, 382, 410, 411, 412, 416, 418, 510, 512, 520, 531, 591, 596, 605, 606, 667, 1196, 1235, 1241, 1266, 1273, 1281], "enter": [32, 49, 174, 263, 682, 744, 764, 815, 828, 831, 833, 924, 987, 1069, 1100, 1108, 1120, 1121, 1216, 1221, 1226], "framework": 32, "lunch": 32, "cornerston": 32, "45": 32, "keep": [32, 174, 197, 893], "small": 32, "23": [32, 161, 232, 258, 274, 280, 298, 306, 316, 327, 328, 422], "59": 32, "extrem": 32, "program": [32, 37, 49, 82, 110, 122, 138, 139, 154, 205, 223, 229, 250, 253, 269, 279, 291, 292, 300, 303, 307, 317, 319, 320, 323, 324, 325, 329, 335, 338, 341, 342, 345, 346, 351, 357, 359, 363, 364, 367, 368, 375, 411, 422, 425, 426, 428, 464, 465, 466, 472, 498, 503, 508, 510, 541, 554, 588, 589, 590, 594, 650, 724, 750, 782, 784, 786, 788, 876, 887, 888, 929, 931, 945, 997, 1018, 1033, 1036, 1037, 1040, 1061, 1072, 1080, 1083, 1116, 1123, 1132, 1133, 1135, 1137, 1185, 1197, 1207, 1234, 1260, 1263, 1265, 1268, 1269, 1270, 1271, 1272, 1279], "session": [32, 142], "find": [33, 182, 195, 212, 518, 550, 609, 689, 708, 720, 793, 920, 1250], "crash": [33, 195], "If": [33, 36, 521, 654, 749, 761, 800, 934, 1000, 1029, 1030, 1107, 1232], "Not": [33, 49, 110, 114, 118, 119, 121, 126, 130, 159, 203, 283, 292, 521, 529, 616, 618, 621, 689, 704, 735, 744, 761, 764, 800, 801, 824, 826, 827, 835, 845, 887, 974, 1000, 1026, 1029, 1030, 1031, 1032, 1041, 1042, 1061, 1083, 1101, 1111, 1226, 1248], "found": [33, 618, 621, 689, 735, 1066, 1250], "state": [33, 158, 193, 252, 770, 987, 989], "exist": [35, 122, 373, 616, 1026, 1029, 1030, 1032, 1041, 1124, 1232], "ar": [35, 192, 193, 271, 273, 286, 336, 385, 386, 496, 512, 525, 529, 654, 740, 745, 747, 764, 770, 800, 1067, 1077, 1106, 1115, 1127, 1231, 1250], "overwritten": 35, "done": [36, 111, 114, 118, 127, 128, 129, 356, 555, 717, 750], "twice": 36, "altern": [37, 381, 382, 520, 523, 759, 790, 811], "csv": [37, 119, 131, 263, 280, 288, 291, 300, 303, 323, 324, 325, 329, 330, 345, 351, 352, 358, 363, 364, 367, 368, 512, 1165, 1166, 1167, 1198, 1199, 1200, 1201, 1206, 1216], "frontend": 37, "featur": [38, 40, 49, 303, 319, 320, 321, 323, 324, 329, 341, 345, 356, 381, 489, 512, 829, 1109, 1124, 1143, 1213, 1215, 1277], "search": [39, 144, 687, 689, 690, 693, 703, 708, 720, 734, 735, 736, 921, 1101, 1154, 1236], "By": [39, 139, 140, 219, 283, 315, 436, 525, 662, 707, 731, 734, 736, 759, 770, 793, 794, 795, 803, 804, 806, 828, 831, 835, 850, 1047, 1107, 1140, 1228, 1230, 1231, 1241], "index": [39, 234, 252, 271, 283, 331, 501, 931, 1145, 1230, 1236, 1237, 1238], "backlog": 40, "need": [40, 396, 554, 763, 1067, 1216], "chang": [40, 111, 159, 383, 876, 887, 894, 1042, 1066], "Or": [40, 110, 512, 514, 515, 554, 813, 835, 1019, 1121, 1226], "Will": 40, "refactor": [40, 43, 373, 422, 512, 608, 952, 953, 954, 992, 1199, 1201, 1206], "after": [40, 227, 258, 462, 866, 1003, 1124], "backingstor": [41, 42, 44], "ha": [41, 42, 109, 381, 848], "too": [41, 42, 506, 515, 800, 805, 817], "mani": [41, 42, 279, 500, 516, 743, 782, 784, 786, 788, 835, 913, 1071], "respons": [41, 42, 255, 558], "interfac": [41, 59, 75, 122, 127, 129, 160, 161, 174, 231, 279, 318, 356, 381, 391, 515, 537, 554, 558, 562, 570, 581, 588, 589, 604, 606, 636, 637, 638, 645, 646, 647, 740, 742, 743, 801, 839, 861, 930, 931, 935, 936, 943, 1120, 1217], "load": [44, 212, 487, 545, 824, 934, 961, 962, 1054, 1083, 1118], "constructor": [44, 229, 279, 295, 296, 298, 304, 355, 374, 604, 634, 640, 651, 652, 653, 654, 655, 657, 658, 666, 667, 668, 669, 730, 755, 756, 779, 813, 815, 826, 843, 844, 1122], "bool": 45, "realli": [45, 800, 831, 1066], "glt": [46, 50, 51, 171, 172], "2023": [46, 50, 96, 97, 98, 99, 100, 114, 115, 118, 126, 130, 131, 153, 163, 164, 165, 298, 306, 307, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 365, 422], "pointless": [46, 48, 49, 50, 51, 52, 53, 54, 55, 1127], "blink": [46, 48, 49, 50, 51, 52, 53, 54, 55, 404], "With": [46, 48, 49, 50, 86, 108, 113, 149, 221, 252, 299, 315, 317, 319, 341, 345, 374, 382, 422, 505, 540, 555, 569, 583, 605, 675, 747, 750, 790, 812, 821, 824, 856, 857, 858, 921, 924, 928, 933, 1027, 1086, 1101, 1149, 1228, 1231, 1242, 1243, 1246], "python": [46, 48, 49, 50, 51, 52, 53, 54, 79, 84, 125, 171, 172, 173, 174, 207, 211, 214, 223, 224, 226, 227, 228, 230, 232, 234, 237, 239, 242, 248, 249, 251, 254, 256, 258, 261, 262, 263, 264, 265, 267, 268, 270, 273, 274, 277, 280, 282, 285, 287, 288, 289, 290, 291, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 310, 312, 313, 317, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 381, 404, 407, 409, 422, 770, 800, 803, 834, 848, 850, 931, 933, 1109, 1112, 1116, 1131, 1132, 1133, 1135, 1137, 1139, 1147, 1158, 1162, 1207, 1208, 1221, 1223, 1224, 1234, 1235, 1236, 1237, 1238, 1277, 1278, 1279, 1280, 1281, 1282], "asyncio": [46, 48, 49, 50, 51, 52, 53, 54, 171, 172, 173, 174, 1161], "libgpiod": [46, 47, 48, 49, 50, 51, 52, 53, 54, 124], "raspberri": [46, 48, 49, 50, 203, 231, 390, 422, 928, 932, 934, 964, 985, 1088, 1093, 1095, 1097, 1264], "pi": [46, 47, 48, 49, 50, 203, 231, 422, 928, 934, 964, 984, 985, 1096, 1097, 1264], "cours": [46, 48, 49, 50, 67, 134, 135, 154, 205, 207, 243, 252, 296, 298, 306, 335, 338, 384, 406, 422, 511, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1277, 1278, 1279, 1281, 1282], "fedora": [47, 195, 202, 957, 958, 959, 960, 1098], "prepar": [47, 166, 173, 195, 212, 227, 228, 230, 231, 232, 233, 243, 252, 267, 296, 298, 306, 382, 591, 667, 984], "tarbal": [47, 203], "On": [47, 49, 111, 252, 286, 288, 310, 314, 315, 319, 341, 345, 423, 521, 605, 607, 652, 682, 683, 687, 693, 748, 825, 834, 874, 1021, 1022, 1023, 1028, 1033, 1037, 1042, 1070, 1098, 1164], "build": [47, 58, 137, 138, 155, 193, 195, 203, 219, 220, 253, 271, 377, 380, 534, 540, 541, 545, 591, 605, 666, 667, 668, 669, 934, 952, 957, 958, 959, 960, 961, 984, 985, 1021, 1022, 1023, 1033, 1084, 1085, 1086, 1088, 1092, 1096, 1097, 1098, 1100, 1101, 1102, 1156, 1250, 1273, 1275], "submiss": [48, 50, 54, 98, 139, 159, 166, 172, 1026], "biographi": [48, 50, 54], "abstract": [48, 50, 54, 172, 300, 335, 338, 548, 563, 577, 867, 1021, 1022, 1023, 1120], "descript": [48, 50, 54, 172, 561, 713, 721, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737], "present": 49, "start": [49, 269, 295, 296, 298, 422, 554, 761, 812, 1101, 1224, 1248], "point": [49, 283, 286, 604, 650, 652, 660, 665, 667, 668, 669, 675, 761, 812, 825, 857, 858, 1096, 1139], "greet": [49, 342, 1170], "multipl": [49, 111, 229, 471, 512, 540, 893, 950, 951, 952, 1015, 1083, 1105, 1107, 1144, 1226, 1228, 1242], "background": [49, 197, 199, 649], "thread": [49, 192, 194, 203, 319, 320, 375, 413, 626, 800, 816, 817, 821, 822, 1050, 1051, 1052, 1057, 1059, 1067, 1070, 1116], "charact": [49, 425, 432, 435, 438, 445, 939, 940, 941, 942, 943, 944, 947, 948, 949, 1193], "base": [49, 203, 271, 279, 295, 296, 298, 300, 335, 338, 355, 374, 536, 553, 739, 740, 743, 770, 800, 801, 815, 832, 833, 834, 1102, 1107, 1120], "gpio": [49, 75, 130, 131, 209, 231, 390, 391, 392, 393, 404, 937, 964, 965, 1037, 1038, 1039], "basic": [49, 60, 79, 115, 137, 138, 157, 164, 168, 191, 203, 211, 223, 228, 230, 231, 232, 233, 237, 238, 242, 243, 252, 261, 264, 267, 274, 280, 285, 288, 291, 297, 303, 306, 310, 313, 320, 323, 324, 325, 327, 328, 329, 330, 331, 332, 335, 338, 341, 342, 343, 345, 346, 347, 351, 352, 353, 354, 357, 358, 359, 360, 363, 364, 367, 368, 369, 370, 371, 372, 373, 376, 377, 379, 380, 382, 399, 422, 466, 470, 473, 479, 506, 524, 540, 549, 550, 604, 607, 671, 676, 679, 682, 683, 685, 689, 692, 703, 704, 710, 739, 749, 797, 834, 844, 845, 846, 847, 850, 856, 859, 860, 863, 864, 874, 913, 925, 929, 947, 948, 949, 1006, 1018, 1025, 1033, 1042, 1050, 1083, 1106, 1107, 1160, 1163, 1197, 1215, 1226, 1227, 1247, 1248, 1249, 1267], "valu": [49, 229, 244, 315, 316, 359, 384, 399, 436, 492, 528, 668, 801, 1037, 1069, 1141], "entir": [49, 315, 526, 748, 762, 891, 957, 959, 1015], "matrix": 49, "off": [49, 252], "bring": [49, 170, 375, 377, 409, 519, 742], "togeth": [49, 543, 742, 893], "modular": [49, 269, 466], "bit": [49, 324, 358, 452, 876, 887, 889, 1133, 1135], "row": [49, 315, 1225, 1228, 1230, 1231], "coroutin": [49, 298, 386, 769, 770], "enough": [49, 650, 744, 761], "sequenc": [49, 260, 263, 271, 303, 310, 313, 323, 324, 329, 330, 351, 352, 357, 358, 363, 364, 367, 368, 369, 445, 624, 687, 693, 1111, 1144, 1152], "loop": [49, 211, 213, 224, 234, 239, 271, 273, 283, 286, 289, 295, 296, 298, 317, 319, 341, 345, 353, 355, 369, 374, 428, 461, 462, 500, 525, 527, 533, 592, 790, 832, 833, 1040, 1112, 1143, 1146], "forev": 49, "strip": [49, 256, 273, 279, 396], "down": [49, 515], "factori": [49, 548, 563, 577, 607], "turn": [49, 1111], "Into": [49, 111, 313, 335, 338, 341, 377, 439, 519, 554, 592, 609, 684, 732, 790, 800, 805, 1041, 1199, 1201, 1206], "anti": [49, 822, 825], "clumsi": [49, 825], "decor": [49, 250, 300, 310, 313, 317, 319, 320, 335, 341, 342, 345, 553, 567, 581, 1106], "wrapper": [49, 121], "final": [49, 279, 295, 296, 298, 355, 374, 534, 536, 537, 660, 828, 829, 866, 870, 1107], "playground": [49, 179], "cycl": [49, 114, 118, 119, 121, 126, 130, 1051], "fast": [49, 229], "forward": [49, 298, 374, 381, 437, 501, 831, 1014], "ani": [49, 315, 528, 549, 604, 745, 746, 1061], "cancel": 49, "goodby": 49, "2024": [51, 101, 102, 103, 104, 105, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 167, 168, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 422, 513], "talk": [52, 172, 173, 248, 324, 929, 936, 1208], "script": [52, 243, 328, 384, 422, 531, 1006, 1037, 1115, 1134, 1261], "gpiod": [52, 53, 75], "intro": [52, 134, 135, 137, 141, 142, 154, 158, 273, 307, 404, 642, 643, 644, 1039, 1104], "interrupt": [52, 192, 964, 965, 966, 967, 980, 989, 1040, 1067], "textual": [52, 53], "sdbu": [52, 53, 174], "taskgroup": [53, 174], "kajak": 56, "auf": [56, 200, 240], "donau": 56, "passau": 56, "kraftwerk": 56, "jochenstein": 56, "engelhartszel": 56, "gleich": 56, "nachher": 56, "schl\u00f6gen": 56, "aschach": 56, "ottensheim": 56, "linz": 56, "hauptplatz": 56, "traunm\u00fcndung": 56, "abwinden": 56, "asten": 56, "ennsm\u00fcndung": 56, "wallse": 56, "mitterkirchen": 56, "grein": 56, "ybb": 56, "persenbeug": 56, "melk": 56, "wachau": 56, "donauinsel": 56, "altenw\u00f6rth": 56, "tulln": 56, "greifenstein": 56, "c": [57, 58, 59, 60, 61, 86, 96, 97, 99, 100, 113, 139, 142, 149, 158, 159, 160, 162, 164, 168, 203, 207, 217, 218, 234, 244, 252, 253, 269, 294, 295, 296, 298, 299, 307, 316, 318, 355, 356, 361, 374, 375, 377, 381, 382, 383, 384, 385, 386, 387, 388, 407, 413, 422, 430, 470, 471, 508, 514, 541, 547, 555, 596, 602, 613, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 658, 659, 662, 663, 664, 676, 682, 684, 722, 738, 742, 747, 755, 756, 768, 798, 800, 801, 803, 807, 817, 822, 823, 824, 826, 827, 834, 835, 840, 844, 848, 849, 931, 1019, 1037, 1040, 1153, 1255, 1256, 1257, 1258, 1259, 1260], "cmake": [58, 137, 138, 162, 219, 220, 252, 307, 333, 334, 349, 350, 375, 376, 377, 378, 379, 380, 382, 422, 515, 523, 529, 539, 540, 541, 542, 591, 605, 1033, 1084, 1085, 1099, 1250, 1251, 1273], "oo": [60, 97, 131, 224, 250, 253, 269, 276, 279, 288, 291, 295, 296, 298, 300, 310, 313, 316, 318, 335, 338, 342, 346, 355, 356, 358, 374, 381, 413, 558, 595, 604, 626, 790, 829, 1116], "embed": [62, 63, 67, 85, 86, 96, 97, 101, 102, 112, 113, 132, 148, 149, 150, 151, 152, 153, 163, 164, 165, 169, 209, 218, 307, 316, 318, 356, 361, 381, 382, 403, 405, 406, 418, 420, 422, 513, 783, 1262, 1263], "comput": [62, 63, 67, 85, 96, 97, 101, 102, 112, 132, 148, 149, 150, 151, 152, 153, 163, 164, 165, 169, 401, 403, 405, 406, 418, 420, 499, 500, 604, 857, 858, 867], "current": [62, 63, 161, 553, 747, 797, 894], "ex": [64, 65, 71, 72, 73, 74, 80, 81], "race": [64, 65, 77, 375, 824, 974, 975, 982, 1052, 1053, 1118], "condit": [64, 65, 77, 375, 454, 462, 471, 529, 822, 974, 975, 982, 1052, 1053, 1055, 1056, 1118], "avoid": [65, 77, 745], "goal": [65, 71, 72, 73, 74, 76, 77, 78, 80, 182, 184, 185, 187, 212, 316, 318, 373, 385, 387, 1258, 1259], "outcom": [65, 71, 72, 73, 74, 230, 338, 406], "introduct": [66, 69, 134, 154, 211, 295, 296, 298, 310, 313, 317, 318, 328, 333, 334, 349, 350, 355, 356, 372, 374, 375, 378, 407, 422, 424, 441, 499, 503, 542, 555, 562, 649, 755, 799, 816, 833, 843, 865, 964, 984, 1047, 1107, 1241, 1255, 1257, 1258, 1267, 1269, 1273], "stece": [67, 85, 112, 132, 148, 149, 150, 151, 152, 153, 163, 164, 165], "2019": [67, 211, 214, 422], "overview": [67, 131, 155, 207, 307, 319, 320, 343, 355, 374, 375, 381, 382, 383, 384, 419, 422, 759, 770, 782, 784, 786, 787, 788, 789, 797, 801, 812, 822, 825, 837, 844, 855, 867, 893, 925, 934, 936, 937, 955, 1006, 1041, 1050, 1083, 1106, 1210, 1214], "knowledg": [67, 1273], "transfer": [67, 846], "detail": [67, 243, 247, 279, 286, 318, 365, 369, 399, 421, 496, 594, 683, 1066, 1138], "linux": [68, 69, 70, 86, 99, 100, 113, 146, 149, 154, 155, 164, 168, 192, 197, 205, 207, 209, 216, 231, 233, 238, 243, 297, 306, 307, 327, 328, 371, 372, 407, 409, 422, 423, 859, 860, 863, 864, 870, 929, 933, 934, 935, 937, 938, 963, 1018, 1036, 1069, 1086, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272], "unix": [69, 99, 100, 215, 409, 424, 486, 496, 552, 1135], "hardwar": [70, 73, 74, 131, 185, 188, 307, 486, 932, 934, 935, 937, 1038, 1066, 1262], "manag": [70, 194, 241, 271, 291, 300, 310, 313, 316, 317, 319, 335, 338, 341, 342, 345, 368, 369, 381, 382, 383, 411, 412, 416, 510, 658, 718, 745, 801, 844, 994, 995, 1085, 1105, 1124, 1235, 1262, 1281], "averag": [71, 72, 80, 552, 580, 782, 784, 786, 788], "sensor": [71, 72, 74, 80, 81, 83, 109, 127, 128, 139, 140, 318, 342, 355, 375, 548, 549, 553, 554, 560, 578, 580, 581, 587, 591, 593, 594, 595, 606, 607, 608, 615, 739, 743, 782, 784, 786, 788, 839, 844, 934, 937, 1033, 1195, 1197], "parallel": [72, 174], "led": [73, 126, 404], "temperatur": [73, 74, 81, 126, 591, 594, 934, 937, 1033], "displai": [73, 80, 108, 116, 117, 122, 126], "sysf": [75, 130, 131, 231, 390, 404, 936, 1038, 1039], "multithread": [76, 209, 269, 295, 296, 298, 307, 341, 342, 345, 355, 374, 375, 383, 385, 386, 412, 419, 822, 823, 1080, 1116, 1117, 1119, 1271], "semaphor": [77, 192, 825, 1076, 1077], "mutex": [77, 192, 487, 819, 824, 825, 974, 975, 976, 977, 989, 990, 1043, 1053, 1054, 1070, 1118], "commun": [78, 288, 375, 572, 822, 1055, 1077], "wait": [78, 139, 188, 822, 825, 1000, 1001, 1002, 1055, 1076], "someth": [78, 224, 374, 386, 650, 800, 825, 1000, 1001, 1002, 1146], "simpl": [82, 229, 538, 650, 674, 731, 744, 848, 861, 876, 987, 989, 1043, 1083, 1101, 1106, 1126, 1156, 1233, 1241], "web": [82, 83], "2020": [85, 197, 216, 218, 223, 224, 226, 227, 228, 230, 232, 233, 238, 422], "ss2022": [86, 94, 857, 858], "block": [86, 113, 149, 174, 457, 672, 821, 1020, 1021, 1022, 1023, 1024, 1081], "cross": [86, 97, 113, 141, 142, 149, 203, 307, 376, 379, 380, 964, 984, 1084, 1086, 1087, 1088, 1089, 1090, 1094, 1096, 1097, 1099], "develop": [86, 97, 113, 114, 118, 119, 121, 126, 130, 131, 140, 141, 142, 149, 223, 238, 252, 255, 277, 288, 291, 307, 310, 312, 313, 316, 317, 318, 319, 320, 341, 342, 345, 361, 373, 375, 376, 379, 380, 407, 422, 963, 1086, 1087, 1094, 1259, 1262, 1266, 1276], "03": [87, 88, 89, 90, 91, 92, 131, 134, 135, 240, 243, 248, 267, 269, 277, 280, 297, 310, 311, 313, 316, 317, 333, 371, 372, 374, 375, 404, 422, 800, 801, 849], "08": [87, 131, 258, 261, 269, 282, 422], "homework": [87, 88, 89, 90, 93, 134, 136, 138, 140, 141, 154, 159, 160, 161], "until": [89, 138, 161, 385, 386, 387, 388, 529], "21": [89, 90, 135, 280, 383, 384, 397, 404, 422], "exercis": [89, 98, 136, 139, 140, 142, 145, 157, 158, 159, 160, 161, 168, 211, 212, 224, 227, 228, 232, 240, 241, 243, 252, 253, 263, 269, 286, 291, 295, 296, 298, 300, 303, 307, 311, 316, 318, 319, 323, 324, 329, 330, 331, 335, 338, 341, 342, 345, 351, 352, 358, 363, 364, 367, 368, 372, 375, 377, 380, 381, 382, 394, 396, 404, 410, 427, 429, 431, 433, 435, 437, 439, 451, 475, 484, 548, 549, 550, 552, 553, 555, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 624, 625, 626, 656, 666, 667, 668, 669, 670, 712, 713, 714, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 793, 794, 795, 796, 831, 852, 854, 859, 860, 865, 871, 877, 880, 881, 883, 885, 886, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 911, 919, 1007, 1008, 1009, 1010, 1026, 1027, 1033, 1077, 1081, 1088, 1091, 1092, 1093, 1094, 1123, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "creat": [89, 111, 161, 170, 174, 190, 191, 195, 198, 219, 220, 605, 800, 817, 839, 856, 857, 858, 876, 881, 883, 885, 893, 897, 899, 910, 1004, 1010, 1027, 1029, 1030, 1032, 1076, 1077, 1096, 1098, 1103, 1196, 1213, 1215], "copi": [89, 224, 273, 308, 355, 382, 451, 609, 643, 651, 658, 662, 677, 683, 684, 688, 695, 745, 793, 800, 804, 806, 813, 815, 827, 834, 844, 845, 850, 893, 895, 896, 899, 998, 1007, 1008, 1015, 1026, 1042, 1148, 1226], "move": [89, 295, 296, 298, 316, 355, 356, 374, 375, 381, 382, 384, 536, 604, 650, 660, 665, 794, 801, 811, 812, 813, 814, 815, 844, 846, 891, 898, 899, 914, 964], "remov": [89, 289, 515, 532, 621, 622, 703, 707, 793, 899, 902, 910, 1077], "l": [89, 909, 913], "command": [89, 168, 524, 550, 565, 579, 876, 887, 891, 909, 913, 928, 961, 1098], "22": [91, 138, 161, 230, 237, 242, 329, 330, 331, 345, 346, 347, 348, 422], "24": [91, 123, 131, 237, 269, 299, 319, 320, 321, 322, 341, 342, 344, 345, 346, 347, 348, 422], "ku": 91, "28": [92, 146, 147, 156, 211, 228, 269, 317, 410, 422], "01": [93, 98, 101, 131, 161, 261, 267, 269, 270, 271, 300, 306, 351, 352, 353, 363, 364, 365, 366, 367, 368, 369, 370, 380, 404, 414, 415, 422, 857, 858], "log": [94, 177, 193, 227, 228, 231, 232, 240, 242, 243, 245, 248, 252, 254, 258, 261, 270, 282, 291, 404, 417, 418, 422, 857, 858, 866], "ws2022": [95, 96, 97], "plan": [95, 131, 162, 280, 407], "evolut": 95, "fh": [96, 97, 111, 169, 591, 592, 593, 594, 595, 666, 667, 668, 669, 722, 878, 879, 904], "joanneum": [96, 97, 169], "question": [96, 97, 103, 104, 105, 106, 107, 185, 250, 384, 419, 512, 538, 591, 722, 878, 879, 882, 884, 904, 1068, 1119], "about": [96, 266, 271, 283, 301, 304, 310, 314, 331, 338, 353, 358, 359, 365, 368, 369, 377, 382, 545, 756, 803, 921, 1100, 1152, 1155, 1156, 1157], "inherit": [96, 210, 250, 279, 300, 335, 338, 381, 382, 562, 636, 637, 638, 739, 741, 800, 801, 1028, 1116, 1124], "memori": [96, 146, 194, 215, 241, 369, 381, 383, 476, 479, 483, 485, 487, 494, 501, 620, 630, 631, 632, 658, 717, 718, 747, 801, 823, 824, 863, 864, 868, 955, 968, 969, 970, 971, 997, 998, 999, 1046, 1047, 1049, 1076, 1077, 1262, 1268], "leak": [96, 620, 631, 658, 846], "std": [96, 131, 143, 244, 253, 269, 295, 296, 298, 355, 356, 374, 375, 382, 384, 550, 609, 614, 615, 625, 643, 665, 666, 667, 668, 669, 677, 683, 684, 685, 686, 696, 703, 705, 715, 720, 724, 734, 737, 745, 746, 747, 750, 751, 752, 753, 756, 757, 761, 762, 764, 768, 781, 783, 787, 788, 789, 790, 794, 797, 800, 801, 814, 818, 819, 820, 821, 822, 824, 825, 833, 834, 835, 837, 839, 842, 845, 846, 847, 848, 850], "vector": [96, 143, 244, 609, 625, 643, 650, 660, 665, 683, 684, 685, 686, 700, 737, 756, 761, 764, 781, 835, 1061], "ye": [97, 1221], "No": [97, 193, 231, 525, 529, 570, 739, 750, 759, 763, 800, 801, 1107, 1232, 1248], "lab": [98, 145], "exam": [98, 99, 100, 101, 102, 103, 104, 112, 113, 131, 146, 147, 166, 251, 264, 266, 404, 419, 604, 857, 858, 859, 1068, 1119], "17": [98, 131, 137, 143, 263, 264, 266, 270, 271, 277, 294, 301, 307, 323, 324, 325, 363, 364, 365, 366, 422, 664], "ss2023": [99, 100, 113], "06": [99, 100, 138, 140, 143, 144, 145, 146, 147, 157, 161, 162, 251, 252, 269, 298, 329, 330, 331, 356, 374, 375, 376, 377, 378, 379, 404, 422, 513], "30": [99, 100, 209, 218, 228, 233, 280, 381, 382, 422], "handout": [99, 146], "concept": [99, 100, 135, 146, 156, 298, 328, 355, 372, 385, 386, 758, 759, 760, 761, 837, 865, 1215], "toolchain": [99, 100, 137, 142, 146, 203, 253, 333, 349, 984, 1083, 1084, 1086, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1273], "solv": [100, 1054, 1215, 1237, 1244], "26": [101, 269, 299, 306, 319, 320, 321, 322, 341, 342, 344, 404, 422], "02": [102, 103, 131, 139, 162, 269, 274, 288, 307, 416, 422, 870], "ws2023": [103, 104, 123, 131], "sampl": [103, 131, 174, 266, 750, 888, 986, 1166, 1187, 1241, 1266, 1279, 1282], "why": [103, 107, 194, 195, 203, 271, 510, 535, 558, 650, 653, 657, 658, 704, 750, 763, 764, 791, 843, 875, 929, 936, 957, 1003, 1012, 1016, 1050, 1066, 1105, 1150], "const": [106, 494, 623, 640, 660, 662, 728, 729, 745, 747, 749, 762, 767, 800, 834, 850], "paramet": [107, 224, 271, 273, 317, 359, 400, 438, 474, 477, 480, 494, 512, 522, 528, 531, 750, 759, 807, 815, 837, 984, 1029, 1084, 1150, 1220], "pass": [107, 404, 528, 531, 662, 761], "which": [107, 558, 1032, 1083], "One": [107, 250, 289, 315, 383, 384, 396, 422, 452, 471, 510, 512, 513, 664, 743, 750, 801, 835, 929, 997, 1015, 1043, 1057, 1083, 1100], "better": [107, 192, 427, 512, 745, 994, 1130, 1221], "question2": 107, "solid": [108, 109, 193, 510], "hysteresi": [108, 166], "id": [109, 292, 320, 347, 868, 888, 1016, 1051, 1063], "Be": [110, 253, 549, 553, 555, 658, 662, 717, 761, 816, 847], "virtual": [110, 146, 215, 288, 309, 382, 636, 637, 638, 740, 743, 744, 782, 783, 784, 786, 787, 788, 789, 790, 791, 801, 863, 864, 868, 930, 955, 1049, 1076, 1196, 1243, 1244, 1245, 1268], "version": [110, 203, 385, 512, 534, 541, 543, 770, 800, 1029, 1083], "our": [111, 219, 937], "ece21": 111, "fork": [111, 131, 159, 161, 991, 1044], "pull": [111, 131, 159, 554], "request": [111, 131, 159, 512, 943, 945, 964, 966, 1039], "upstream": [111, 131, 161, 170], "sync": [111, 955], "onli": [111, 289, 315, 476, 749, 750, 763, 768, 957, 1178], "onc": [111, 404], "updat": [111, 131, 161, 197], "It": [111, 195, 223, 315, 377, 380, 408, 476, 520, 534, 704, 742, 801, 887, 1016, 1029, 1030, 1041, 1083], "Its": [111, 171, 172, 173, 174, 801, 848, 1121], "fetch": 111, "your": [111, 159, 161, 215, 308, 309, 491, 761, 877], "clone": [111, 203, 219, 605], "merg": 111, "push": [111, 159, 515], "2021": [112, 235, 237, 240, 242, 243, 245, 248, 251, 252, 253, 254, 258, 261, 263, 264, 266, 267, 269, 396, 397, 404, 407, 408, 409, 410, 411, 412, 413, 422], "two": [112, 286, 475, 588, 589, 650, 668, 756, 801, 1077, 1172, 1173, 1183, 1184], "semest": 112, "support": [112, 231, 243, 753, 761, 980], "finish": [113, 184, 253, 1003, 1046], "boil": [114, 115, 116, 117, 123, 131, 536], "pot": [114, 115, 116, 117, 123, 131, 536], "begin": [114, 361, 381, 424, 529, 835], "standup": [114, 115, 116, 117, 118, 122, 126, 130], "record": [114, 115, 116, 117, 118, 122, 126, 130, 234, 1066, 1203, 1205], "20": [114, 118, 126, 130, 131, 145, 161, 280, 294, 298, 316, 318, 329, 330, 331, 355, 357, 358, 359, 360, 385, 386, 387, 388, 396, 404, 422, 513, 768, 807, 848, 1098], "requir": [114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 130, 139, 161, 166, 257, 288, 335, 338, 382, 406, 519, 522, 548, 569, 572, 591, 592, 593, 597, 598, 599, 600, 601, 602, 603, 724, 761, 1026, 1033, 1165, 1166, 1187, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206], "implement": [114, 118, 119, 121, 122, 124, 126, 130, 131, 139, 166, 171, 172, 173, 174, 279, 342, 355, 390, 396, 554, 562, 572, 577, 587, 588, 589, 590, 594, 602, 607, 608, 652, 653, 658, 660, 663, 665, 800, 801, 813, 839, 848, 934, 942, 945, 964, 1000, 1105, 1111, 1127, 1187], "futur": [114, 118, 119, 121, 126, 130, 413, 825], "part": [114, 118, 119, 121, 126, 130, 161, 280, 1250], "Of": [114, 118, 119, 121, 126, 130, 315, 324, 335, 338, 358, 373, 377, 381, 422, 501, 520, 525, 526, 528, 529, 540, 604, 650, 681, 682, 743, 764, 765, 793, 794, 795, 801, 806, 815, 822, 831, 835, 846, 857, 858, 866, 1026, 1037, 1043, 1071, 1085, 1107, 1110, 1130, 1226, 1232], "integr": [115, 117, 120, 518, 755], "statu": [116, 161, 1006, 1051, 1061], "report": 116, "full": [117, 255, 381, 801], "iot": 117, "logger": [118, 119, 120, 121, 375, 536, 554, 839], "sink": [119, 121, 131, 342, 790], "column": [119, 315, 1226, 1227, 1228, 1230, 1231, 1232], "configur": [119, 196, 198, 203, 517, 520, 892, 930, 934, 937, 1040], "mqtt": [121, 125, 131, 279, 342, 345, 518, 1203, 1224], "mosquitto": 121, "infrastructur": 122, "percentagedisplai": 122, "composit": [122, 552, 562, 566, 580, 797], "breadboard": 122, "acrobat": 122, "group": [123, 252, 253, 267, 300, 307, 319, 320, 335, 338, 341, 342, 345, 346, 364, 375, 410, 868, 876, 885], "task": [123, 131, 162, 410, 1067], "datalogg": [123, 131, 518, 519], "peripher": [123, 131], "client": [123, 173, 174, 255, 586, 934, 1043, 1224], "subscrib": [125, 1224], "via": [126, 131, 200, 201, 401, 937], "pwm": [126, 936], "control": [126, 288, 303, 310, 313, 323, 324, 329, 330, 351, 352, 357, 358, 363, 364, 367, 368, 554, 768, 770, 821, 928, 936], "onewir": [128, 591, 607, 608, 937, 1033], "05": [131, 138, 140, 141, 142, 157, 158, 159, 160, 161, 248, 251, 282, 288, 291, 294, 297, 323, 324, 325, 327, 328, 385, 386, 396, 397, 404, 422], "vo": [131, 154, 158, 159, 160, 162], "recap": [131, 137, 140, 141, 158, 159, 160, 239, 252, 253, 267, 300, 320, 335, 338, 342, 343, 643, 843, 1083, 1110], "polymorph": [131, 160, 161, 253, 356, 381, 382, 597, 598, 599, 600, 601, 602, 603, 606, 743, 751, 785, 801, 839, 840], "collabor": 131, "necessarili": 131, "first": [131, 174, 224, 253, 373, 425, 518, 595, 750, 945, 946, 980, 1243], "round": [131, 573, 587], "organiz": 131, "design": [131, 167, 168, 299, 317, 319, 320, 335, 338, 356, 374, 381, 422, 438, 495, 510, 555, 558, 568, 741, 790, 1259], "At": [131, 763, 764], "larg": 131, "templat": [131, 143, 252, 269, 318, 381, 382, 385, 386, 613, 626, 627, 628, 629, 645, 646, 647, 674, 675, 676, 682, 716, 759, 761, 787, 807, 808, 837], "map": [131, 143, 239, 244, 247, 250, 253, 269, 279, 343, 384, 399, 614, 615, 643, 703, 705, 762, 768, 801, 833, 834, 955, 1016, 1042, 1046, 1047], "07": [131, 154, 158, 253, 269, 300, 333, 334, 380, 404, 408, 422], "renam": [131, 914], "relev": 131, "gl\u00fchwein": 133, "trinken": 133, "quiz": [134, 154, 372, 722, 863, 864, 878, 879, 904, 1089, 1090], "wsl": [134, 307, 316, 318, 870, 1098], "o": [135, 138, 146, 156, 193, 205, 250, 260, 266, 273, 274, 279, 286, 288, 289, 321, 325, 328, 330, 359, 365, 368, 369, 372, 396, 432, 872, 873, 874, 897, 910, 968, 1020, 1021, 1022, 1023, 1024, 1025, 1034, 1035, 1042, 1064, 1158], "shell": [135, 136, 156, 157, 158, 164, 243, 307, 328, 372, 401, 422, 862, 874, 876, 892, 904, 905, 911, 1011, 1028, 1037, 1061, 1261], "cont": [135, 318], "d": [135, 171, 172, 173, 174, 318, 554], "usag": [135, 156, 315, 320, 355, 479, 483, 506, 516, 538, 591, 606, 652, 688, 689, 695, 724, 740, 743, 747, 748, 749, 753, 763, 845, 846, 847, 874, 913, 930, 937, 943, 987, 1029, 1041, 1083, 1163], "permiss": [136, 156, 157, 307, 328, 372, 876, 878, 879, 880, 886, 890, 908, 1008], "incl": 136, "secur": [136, 202, 231, 307, 328, 401, 1011, 1015], "makefil": [137, 220, 605, 952, 961, 1084, 1085, 1100], "outlook": [137, 173, 313, 355], "nativ": [137, 138, 1086, 1089, 1090, 1092], "io": [138, 263, 279, 307, 311, 347, 353, 368, 499, 871, 968, 969, 1039], "next": [138, 291, 499, 778, 1248], "time": [138, 198, 210, 315, 375, 522, 537, 745, 757, 768, 839, 868, 992, 993, 1057, 1170], "driven": [139, 140, 223, 252, 277, 288, 291, 319, 320, 341, 342, 345, 373, 375, 422, 1072, 1276], "suit": [139, 724, 1248], "definit": [139, 174, 373, 434, 436, 438, 446, 464, 466, 467, 470, 516, 664, 765, 782, 784, 786, 788, 800, 943, 1069, 1147], "lib": [139, 724], "see": [139, 154, 155, 157, 158, 160, 161, 382, 384, 386, 477, 518, 519, 520, 521, 524, 525, 528, 529, 532, 534, 537, 654, 655, 658, 659, 660, 720, 724, 739, 740, 741, 742, 743, 744, 747, 762, 763, 764, 801, 821, 824, 825, 839, 848, 850, 861, 867, 868, 873, 874, 929, 936, 1021, 1022, 1023, 1025, 1042, 1043, 1046, 1047, 1061, 1064, 1069, 1071, 1084, 1086, 1151, 1215], "also": [139, 154, 155, 157, 158, 160, 161, 191, 382, 384, 386, 477, 518, 519, 520, 521, 524, 525, 528, 529, 532, 534, 537, 654, 655, 658, 659, 660, 720, 724, 739, 740, 741, 742, 743, 744, 747, 762, 763, 764, 801, 821, 824, 825, 839, 848, 850, 861, 867, 868, 873, 874, 929, 936, 1021, 1022, 1023, 1025, 1042, 1043, 1046, 1047, 1061, 1064, 1069, 1071, 1084, 1086, 1151, 1215], "But": [139, 374, 383, 784, 801, 845, 848, 1030, 1273], "27": [142, 251, 269, 285, 335, 336, 337, 340, 349, 350, 422], "livecod": 142, "": [142, 171, 172, 173, 174, 192, 231, 384, 422, 452, 476, 510, 513, 519, 521, 529, 536, 537, 650, 720, 735, 750, 753, 800, 801, 821, 824, 848, 876, 892, 948, 953, 972, 984, 1000, 1012, 1070, 1083, 1112, 1116, 1159], "view": [142, 298, 753, 835, 837, 838, 856, 948], "pars": [142, 256, 528, 724, 1137, 1160, 1187], "line": [142, 396, 439, 471, 524, 526, 653, 724, 874, 891, 1136, 1178, 1189, 1193], "etc": [142, 184, 239, 247, 250, 279, 289, 292, 325, 724, 907, 934, 1031, 1136, 1187], "passwd": [142, 724, 887, 907, 1031, 1187], "auto": [143, 295, 296, 298, 355, 749, 800, 801, 807, 833, 834, 1055, 1242], "19": [144, 160, 224, 226, 230, 264, 280, 383, 384, 403, 404, 418, 420, 422], "sort": [144, 234, 286, 609, 687, 692, 693, 696, 1230], "ss2024": 146, "process": [146, 192, 194, 212, 307, 328, 862, 863, 864, 868, 869, 982, 983, 1046, 1061, 1062, 1063, 1067, 1071], "schedul": [146, 193, 328, 414, 415, 419, 863, 864, 868, 1051, 1064, 1065, 1068, 1069, 1070], "summer": [148, 163, 335, 338, 407], "syllabu": [150, 152, 165, 251, 264], "lehrveranstaltungsbeschreibung": [150, 152, 165], "umfang": [150, 152, 165], "lehrveranstaltung": [150, 152, 165], "inhalt": [150, 152, 165, 211, 214, 1080, 1255], "inhaltlich": [150, 152, 165], "voraussetzungen": [150, 152, 165, 405], "ziel": [150, 152, 165], "pr\u00fcfung": [150, 152, 165], "beurteilungsschema": [150, 152, 165], "bewertung": [150, 152, 165], "leistungen": [150, 152, 165], "bewertungsschl\u00fcssel": [150, 152, 165], "hilfsmittel": [150, 152, 165], "bei": [150, 152, 165, 223, 234, 422], "schriftlichen": [150, 152, 165], "pr\u00fcfungen": [150, 152, 165], "wiederholungsm\u00f6glichkeiten": [150, 152, 165], "anwesenheitsvorgab": [150, 152, 165], "zusatzinformationen": [150, 152, 165], "empfohlen": [150, 152, 165, 405, 1256, 1257, 1264, 1275, 1276], "fachliteratur": [150, 152, 165, 405], "einzelnen": [150, 152, 165], "lehreinheiten": [150, 152, 165], "winter": 151, "2025": [154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 172, 385, 386, 422], "ue": [155, 156, 157, 161], "host": [155, 199, 243, 526, 984, 1098], "home": [155, 198, 862, 893, 908, 1016], "tour": [155, 178, 300, 800], "environ": [155, 168, 223, 288, 296, 298, 307, 309, 316, 317, 318, 411, 532, 862, 1063, 1132, 1196, 1243, 1244, 1245, 1253], "repo": [155, 163, 164, 198, 219], "get": [155, 183, 191, 220, 271, 356, 526, 825, 972, 997, 1037], "directori": [157, 195, 219, 220, 369, 411, 512, 526, 532, 536, 540, 605, 797, 857, 858, 876, 881, 882, 883, 884, 893, 894, 895, 902, 908, 910, 913, 914, 920, 1015, 1026, 1084, 1085, 1105, 1241], "commandlin": [158, 279, 307, 345, 390, 395, 477, 505, 512, 531, 891, 1014, 1037, 1081, 1137, 1160], "door": [158, 159, 160, 161], "machin": [158, 202, 231, 252, 310, 401, 1007, 1008, 1033, 1209, 1215], "some": [159, 161, 253, 271, 276, 315, 318, 328, 529, 804, 825, 848], "add": [159, 309, 516, 518, 519, 538, 604, 945, 992, 1003, 1080, 1124, 1225], "commit": 159, "access": [159, 213, 252, 434, 487, 488, 526, 652, 660, 667, 704, 727, 745, 747, 782, 784, 786, 787, 788, 789, 797, 801, 968, 997, 998, 999, 1046, 1121, 1128, 1155, 1156], "http": [159, 255, 343], "origin": [159, 161, 310, 313, 674, 805, 806, 994, 1216], "transform": [159, 732, 750, 794, 1110], "close": [160, 492, 558, 841, 1077], "type": [160, 168, 213, 239, 263, 266, 276, 279, 286, 295, 296, 298, 300, 301, 315, 317, 335, 338, 339, 343, 355, 365, 374, 400, 442, 444, 445, 449, 456, 481, 491, 496, 537, 541, 654, 682, 703, 705, 745, 747, 748, 749, 755, 759, 761, 783, 785, 786, 800, 801, 839, 848, 849, 850, 906, 913, 955, 964, 1053, 1105, 1107, 1120, 1127, 1150, 1215], "own": [161, 292, 512, 761, 814, 868], "For": [161, 195, 197, 203, 280, 283, 307, 310, 312, 313, 316, 318, 361, 422, 433, 513, 525, 534, 535, 578, 652, 662, 704, 770, 800, 801, 825, 834, 839, 866, 1020, 1043, 1096, 1097, 1098, 1108, 1126, 1196, 1259], "tool": [167, 168, 252, 325, 328, 343, 372, 406, 855, 923, 925, 934, 1273, 1275], "laboratori": [167, 168], "pointer": [168, 252, 253, 269, 295, 296, 298, 316, 318, 356, 374, 375, 382, 384, 473, 474, 476, 478, 494, 626, 643, 658, 661, 662, 678, 679, 680, 682, 683, 686, 707, 739, 740, 749, 800, 801, 821, 841, 842, 843, 844, 846, 848], "arrai": [168, 212, 234, 244, 425, 434, 438, 476, 478, 488, 501, 631, 682, 684, 692, 730, 749, 755, 762, 850], "recommend": [168, 197, 227, 406, 1242, 1273], "filesystem": [168, 526, 552, 797], "graz": [169, 214, 216, 223, 261, 422], "branch": [170, 458], "track": [170, 1100], "submit": [170, 1003, 1004], "appli": [170, 195, 1232], "patch": [170, 195], "systemd": [171, 172, 173, 174], "bu": [171, 172, 173, 174, 209, 230, 554, 930, 933, 937], "bind": [171, 172, 173, 174, 295, 296, 298, 355, 374, 750, 752, 801, 831, 834, 850, 1220], "todo": [171, 176, 217, 220, 231, 237, 391, 392, 393, 410, 511, 523, 626, 627, 630, 633, 636, 639, 642, 645, 801, 941, 945, 953, 985, 1044, 1048, 1072, 1075, 1079, 1161, 1222, 1247, 1252], "grazer": 172, "linuxtag": 172, "old": [173, 381, 382, 495, 664, 682, 761, 768, 800, 815, 837, 839], "stuff": [173, 356, 404, 496, 867, 901], "random": [173, 213, 250, 283, 288, 581, 594, 602, 1229], "spec": 173, "gotcha": [173, 224, 961, 992, 1071], "weird": [173, 359], "els": [173, 199, 266, 273, 279, 289, 319, 341, 345, 359, 369, 434, 458, 459, 460, 520, 657, 671, 914, 931, 1012, 1107, 1143, 1146], "irrig": [173, 174], "tl": [174, 199], "dr": [174, 199], "big": [174, 396, 422, 972, 1049], "pictur": [174, 422, 972, 1049], "speaker": 174, "defin": [174, 292, 516, 654, 747, 804, 1107], "histori": [174, 424, 649, 948, 1077, 1103, 1133, 1212], "realiti": [174, 607], "complex": [174, 247, 286, 399, 1253], "concret": [174, 577, 588, 589, 739, 839], "jf": [174, 234], "step": [174, 187, 550, 553, 554, 591, 682, 770, 793, 794, 1047, 1084, 1085, 1100, 1120, 1145], "proxi": [174, 559, 569, 572, 573, 583, 586, 587], "naiv": [174, 643, 663, 715, 824, 1000, 1080, 1111, 1226], "try": [174, 595, 672, 844, 1107], "async": [174, 1081], "machineri": 174, "print": [174, 1105, 1130], "statist": 174, "signal": [174, 192, 215, 486, 822, 1055, 1079, 1080, 1081, 1082], "introduc": [174, 591, 652, 835], "mind": [174, 1106], "IT": 176, "vision": 176, "packag": [177, 184, 197, 203, 219, 300, 317, 335, 341, 397, 984, 1088, 1092, 1115, 1164, 1235, 1236, 1237, 1238, 1239, 1243, 1281], "pypi": [177, 248, 288, 1164, 1208, 1237, 1239], "hochk\u00f6nig": 178, "k\u00f6nigsjodl": 178, "klettersteig": 178, "werfen": 178, "ostpreussenh\u00fctt": 178, "matrashau": 178, "prankergass": 180, "kastl": 180, "korpu": 180, "basi": [180, 768], "schubladen": 180, "bauen": 180, "\u00f6len": 180, "montag": 180, "pending_xref": 181, "audio": [182, 186], "chip": [182, 936], "bringup": [182, 185, 937], "debian": [183, 184], "kernel": [183, 184, 185, 189, 193, 195, 238, 422, 506, 863, 864, 867, 932, 934, 936, 948, 957, 958, 959, 960, 961, 963, 976, 978, 984, 985, 1266], "config": [183, 520, 937, 984], "within": 183, "qemu": 183, "extract": [183, 189, 250, 592, 1199, 1201, 1206, 1213], "boot": [183, 191, 202, 422, 867, 937], "yocto": [185, 189, 927], "everyth": [185, 266, 543, 861, 873, 1020], "like": [185, 355, 650, 748, 1061], "i2": 186, "kontron": 186, "smarc": 186, "modul": [186, 224, 248, 250, 288, 289, 301, 317, 324, 341, 342, 385, 397, 404, 506, 515, 518, 605, 809, 936, 952, 957, 959, 960, 961, 962, 978, 984, 1115, 1206, 1208, 1216, 1242, 1250], "dirti": [187, 1273], "upgrad": 187, "path": [187, 203, 250, 260, 266, 273, 359, 368, 369, 526, 546, 797, 862, 915, 916, 1096, 1101, 1196, 1250], "intel": 189, "bsp": 189, "openshot": 190, "beagleboard": 191, "how": [191, 194, 202, 206, 223, 253, 271, 440, 479, 504, 505, 506, 521, 534, 724, 835, 846, 874, 887, 890, 1066, 1112, 1215], "repair": 191, "nand": 191, "40w": 191, "x": [191, 253, 640], "loader": 191, "u": [191, 513, 1016], "bootabl": 191, "mmc": 191, "sd": [191, 231], "card": [191, 231, 309, 858], "port": [192, 1014], "There": [192, 271, 510, 525, 529, 658, 801, 816, 937, 1000, 1015, 1020, 1031, 1032], "alwai": [192, 271, 291, 764, 827, 1030], "wai": [192, 250, 271, 279, 500, 1071, 1116, 1135], "aren": 192, "t": [192, 248, 531, 801, 835, 1066, 1208], "queue": [192, 234, 822, 1001, 1041, 1056, 1077], "timer": [192, 992, 994, 995, 1023, 1067], "poll": [192, 822, 825, 1043], "event": [192, 945, 964, 974, 992, 993, 997, 1040, 1055, 1072, 1074], "dispatch": [192, 744, 787, 788, 789], "realtim": [192, 194, 415, 419, 422, 976, 1046, 1048, 1069, 1070, 1262], "save": [193, 846], "disk": [193, 231, 861], "life": [193, 790, 847, 1051], "gentoo": [193, 984], "rant": [193, 212, 541, 1085], "swap": [193, 286, 475, 750, 874, 1173], "tmpf": 193, "instanc": [193, 250, 276, 279, 739], "syslog": 193, "var": 193, "mountpoint": 193, "logrot": 193, "ram": 193, "thing": [193, 253, 274, 295, 296, 298], "left": [193, 452, 662], "p": [194, 660], "suck": [194, 964], "count": [194, 845, 874, 991, 1193], "consumpt": 194, "stack": [194, 234, 255, 483, 815, 1048], "conclus": [194, 928, 936, 989], "pthread": 194, "experi": 194, "100": 194, "default": [194, 224, 271, 273, 295, 296, 298, 355, 374, 400, 604, 652, 654, 655, 666, 667, 668, 669, 730, 745, 747, 826, 829, 844, 848, 890, 1081, 1150, 1230], "eat": 194, "limit": [194, 1111], "than": [194, 611, 848, 1127], "my": [194, 197, 292, 425, 426, 512, 870, 887, 952], "could": [194, 513, 847], "take": [194, 477, 837, 846, 1130], "doe": [194, 529, 675, 874, 887, 890, 1026, 1029, 1030], "differ": [194, 224, 374, 386, 476, 680, 682, 745, 747, 893, 1015], "rpm": [195, 197, 221, 957], "prerequisit": [195, 203, 220, 319, 341, 345, 406, 959, 1164, 1261, 1262, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1277, 1278, 1281, 1282], "rpmbuild": 195, "download": [195, 240, 242, 404, 409, 608, 1083, 1096, 1099, 1100, 1102], "domain": [196, 215, 313, 757], "subdomain": 196, "www": 196, "apex": 196, "microsoft": 197, "team": [197, 1066], "screen": [197, 924], "share": [197, 543, 545, 794, 821, 831, 841, 845, 857, 858, 885, 1043, 1076, 1077, 1100, 1101, 1268], "x11": 197, "reviv": 197, "meh": 197, "annoy": 197, "re": [197, 1107], "regist": [197, 500], "itself": 197, "autostart": 197, "browser": [197, 255], "deploi": 198, "gener": [198, 202, 211, 220, 224, 229, 256, 263, 266, 271, 273, 279, 298, 300, 304, 310, 313, 317, 319, 320, 324, 331, 333, 341, 342, 343, 345, 349, 353, 359, 376, 377, 379, 380, 382, 461, 513, 610, 651, 654, 658, 762, 770, 771, 773, 774, 807, 826, 848, 937, 1012, 1039, 1084, 1085, 1110, 1111, 1112, 1113, 1114, 1139, 1179, 1192, 1273], "public": [198, 250, 536, 537, 652, 857, 858, 883, 884, 1012], "jfasch": [198, 888], "deploy": [198, 333, 349, 543, 984, 1273], "bigbluebutton": 199, "onlin": 199, "articl": [199, 200, 202, 203], "check": [199, 529, 532, 538, 570, 876, 936, 937, 1055, 1093, 1154, 1174], "traunstein": 200, "zierlersteig": 200, "kaltenbachwildni": 200, "anstieg": 200, "zierlerberg": 200, "rinn": 200, "abstieg": 200, "grintovec": 201, "plan\u0161arsko": 201, "jezero": 201, "\u010de\u0161ka": 201, "ko\u010da": 201, "anreis": 201, "hinauf": 201, "runter": 201, "zusammenfassung": 201, "brick": 202, "1399": 202, "dell": 202, "xp": 202, "happen": [202, 1066], "virtualbox": 202, "enrol": 202, "owner": [202, 876], "kei": [202, 244, 292, 359, 399, 707, 708, 801, 891, 1010, 1012], "mok": 202, "pair": [202, 800, 1010, 1012], "stage": 202, "reboot": 202, "diagnost": [202, 934], "crosstool": [203, 1086, 1097, 1098], "ng": [203, 1086, 1097, 1098], "prebuilt": [203, 1232], "repositori": [203, 418, 605, 615], "releas": [203, 541, 824, 966, 976, 1118], "glibc": 203, "gcc": [203, 487, 500, 1083], "simplest": [203, 528, 770, 775, 820, 1104, 1127, 1242, 1248], "stdio": 203, "h": [203, 520, 773, 924], "iostream": 203, "distribut": [203, 1164], "afterword": [203, 373, 764, 810], "post": [204, 212, 1076], "qualivis": [208, 422], "z\u00fcrich": [208, 422], "2013": [208, 422], "fragen": [208, 241], "antworten": 208, "kursnotizen": 209, "2015": [209, 422], "userspac": [209, 934, 936, 943, 945, 997, 998, 999, 1040], "can": [209, 230, 253, 288, 477, 549, 553, 604, 662, 763, 800, 846, 929, 930, 931, 933], "driver": [209, 238, 309, 422, 934, 936, 961, 963, 980, 1266], "beispiel": [209, 224, 283, 920], "heizungssteuerung": 209, "string": [210, 211, 217, 224, 234, 241, 244, 247, 250, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 288, 289, 292, 301, 304, 308, 311, 325, 331, 343, 347, 353, 359, 365, 369, 374, 396, 398, 399, 425, 438, 439, 445, 451, 524, 525, 526, 529, 541, 713, 714, 715, 720, 724, 745, 747, 813, 814, 1139, 1152, 1153, 1154, 1190, 1232], "k\u00f6nnen": [210, 234, 247], "viel": 210, "split": [210, 273, 279, 353, 396, 1154, 1213], "mutabl": [210, 213, 224, 234, 241, 247, 260, 263, 271, 273, 276, 279, 286, 289, 292, 304, 311, 321, 325, 331, 343, 347, 353, 365, 369, 763, 1148, 1150], "immut": [210, 213, 224, 241, 247, 260, 271, 276, 279, 286, 292, 301, 308, 311, 325, 353, 359, 1148], "kann": [210, 255], "man": [210, 255, 891], "nicht": [210, 224, 234], "oft": 210, "genug": 210, "wiederholen": 210, "dictionari": [210, 224, 234, 239, 241, 244, 247, 255, 256, 260, 263, 266, 271, 273, 276, 279, 283, 286, 289, 292, 301, 304, 311, 321, 325, 331, 343, 347, 353, 359, 365, 369, 399, 1104, 1108, 1121, 1140, 1156, 1177, 1204], "hart": 210, "indizieren": 210, "weich": 210, "nettfragen": 210, "shortcut": [210, 1126, 1156], "objektorientiert": 210, "programmierung": [210, 235, 236, 245, 246, 254, 270, 272, 282, 284, 422], "date": [210, 256, 315, 409], "delta": 210, "datetim": [210, 229, 250, 256, 311], "bissl": 210, "potschert": [210, 234], "schreiben": [210, 234], "scho": 210, "formen": 210, "represent": [210, 1129], "__str__": [210, 1124, 1129], "subprocess": [210, 289], "enumer": [210, 234, 239, 241, 247, 250, 271, 279, 286, 304, 321, 343, 353, 365], "zip": [210, 250, 353], "comprehens": [210, 234, 256, 263, 266, 271, 273, 279, 283, 304, 310, 311, 313, 343, 353, 359, 365, 1104, 1110, 1155], "exec": [210, 276, 292, 300, 304, 331, 353, 1108], "eval": [210, 211, 247, 276, 286, 304, 331, 343], "umgebend": 210, "context": [210, 271, 310, 313, 317, 982, 983, 1003, 1105, 1108], "eigen": 210, "json": [210, 232, 239, 255, 256, 266, 283, 286, 292, 300, 301, 336, 339, 1205], "individualtrain": [211, 226, 422], "tage": [211, 422], "beginnend": [211, 422], "51": 211, "58": 211, "while": [211, 224, 234, 244, 263, 271, 273, 276, 279, 286, 289, 311, 353, 359, 365, 369, 461, 462, 533, 982, 987, 988, 1143, 1169, 1194], "94": [211, 224], "121": 211, "famou": [211, 503], "convert": [211, 315, 1126, 1205], "overload": [211, 269, 279, 300, 335, 347, 626, 652, 659, 660, 665, 844, 1127, 1129], "getter": [211, 604, 660], "setter": 211, "listcomprehens": 211, "express": [211, 224, 239, 256, 263, 289, 292, 304, 353, 359, 454, 456, 552, 570, 584, 921, 1110, 1168, 1227], "global": [211, 224, 234, 292, 342, 440, 446, 467, 469, 483, 514, 633, 634, 635, 663, 664, 665, 765, 1017, 1103, 1149], "scope": [211, 234, 342, 528, 532, 768, 820, 825, 1103, 1149], "variabl": [211, 234, 247, 250, 260, 263, 271, 279, 286, 289, 301, 321, 325, 347, 353, 359, 365, 369, 385, 386, 399, 426, 440, 443, 446, 467, 469, 475, 494, 525, 528, 529, 532, 570, 634, 664, 762, 763, 768, 804, 822, 862, 1017, 1055, 1056, 1063, 1138, 1149, 1173], "closur": [211, 234, 300, 317, 319, 320, 335, 341, 345, 803, 1103, 1105], "between": [211, 668, 1213], "walkthrough": 212, "reduc": [212, 451], "imag": [212, 231, 1098], "eight": 212, "color": 212, "pil": 212, "numpi": [212, 214, 241, 248, 288, 291, 310, 313, 324, 330, 342, 347, 363, 368, 369, 422, 1208, 1213], "cluster": 212, "excurs": [212, 288, 803], "matplotlib": [212, 241, 260, 292, 330, 347, 353, 1163, 1213], "now": [212, 224], "come": [212, 248, 543, 725, 1083, 1208], "let": [212, 764], "kmean": 212, "result": [212, 504, 764, 1220], "properti": [212, 250, 279, 380, 537, 546, 1128], "center": 212, "restor": 212, "alpha": 212, "back": [212, 381, 700, 1205], "rgba": 212, "except": [213, 250, 266, 269, 276, 279, 291, 292, 300, 310, 313, 317, 318, 335, 338, 351, 357, 363, 367, 415, 626, 672, 673, 735, 745, 804, 825, 835, 1107], "demonstr": 213, "dict": [213, 263, 271, 273, 279, 286, 359, 365, 1126], "indic": [213, 241], "slice": [213, 224, 239, 250, 273, 279, 283, 304, 325, 331, 739, 801, 868, 1145, 1228, 1231], "protocol": [213, 224, 239, 260, 263, 266, 271, 273, 276, 279, 289, 304, 317, 321, 325, 343, 347, 353, 359, 770, 928, 1070, 1112, 1114], "standardthemen": 214, "hauptthema": 214, "numerik": 214, "lesen": [214, 234], "mat": 214, "l\u00f6sen": 214, "uni": 214, "\u00fcbung": [214, 217, 234], "propos": 215, "posix": [215, 822, 1041, 1050, 1059, 1073, 1075, 1076, 1077, 1078], "ipc": [215, 216, 422, 1073, 1075, 1076, 1077, 1078, 1268], "socket": [215, 931, 1022], "applic": [215, 513, 1067], "compani": 215, "thought": 215, "handgestrickt": 217, "um": 217, "fallen": 217, "lustvol": 217, "erleiden": 217, "programmier": 218, "baden": [218, 422], "w\u00fcrttemberg": [218, 422], "kursinform": 218, "kursaufbau": 218, "kursverlauf": [218, 226], "tag": [218, 237, 241, 245, 248, 254, 270, 282, 283], "hand": 219, "privat": [219, 250, 279, 536, 537, 652, 827, 857, 858, 881, 882, 1047], "depend": [220, 333, 335, 349, 376, 377, 379, 380, 514, 518, 519, 521, 522, 536, 544, 546, 558, 591, 626, 634, 961, 963, 1085, 1101, 1170, 1273], "argh": 221, "visual": [221, 248, 264, 504, 544, 1208, 1234, 1243], "studio": [221, 248, 264, 1208, 1234, 1243], "flatpak": 221, "issu": [221, 1103], "m": 221, "grundlagen": [223, 234, 235, 236, 245, 246, 248, 249, 254, 258, 262, 265, 268, 270, 272, 282, 284, 287, 290, 293, 302, 305, 326, 422], "firma": [223, 422], "dai": [223, 227, 228, 230, 231, 232, 242, 243, 252, 253, 258, 261, 263, 264, 267, 274, 307, 310, 313, 316, 317, 318, 319, 320, 324, 328, 330, 335, 341, 342, 345, 346, 352, 356, 368, 372, 373, 375, 377, 380, 382, 383, 384, 386, 387, 388, 422, 801, 834, 1170, 1258], "languag": [223, 253, 269, 295, 296, 298, 303, 323, 324, 329, 355, 356, 374, 377, 380, 422, 489, 508, 524, 530, 1061, 1109, 1131, 1133, 1277, 1278, 1282], "advanc": [223, 227, 230, 239, 242, 251, 267, 277, 280, 291, 300, 303, 313, 319, 320, 321, 322, 323, 324, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 355, 356, 363, 364, 365, 366, 376, 377, 379, 380, 422, 489, 523, 529, 1208, 1256, 1279], "schulung": 224, "18": [224, 226, 252, 271, 291, 303, 304, 318, 334, 357, 358, 359, 360, 378, 404, 422, 1098], "sy": [224, 250, 861, 1137], "multilin": [224, 256, 260, 353, 399, 524, 1152], "docstr": [224, 271, 283, 286, 289, 311, 343, 365, 399], "datentypen": [224, 234, 241, 254, 270, 282], "ausflug": [224, 273], "variablen": [224, 234, 241, 254, 270, 273, 282, 292], "deren": 224, "unterbau": 224, "zuweisung": 224, "mit": [224, 234, 239, 252, 422, 920], "hilf": 224, "tupl": [224, 229, 234, 239, 241, 247, 250, 260, 263, 266, 271, 273, 279, 283, 286, 289, 295, 296, 298, 301, 304, 311, 321, 325, 347, 353, 355, 359, 365, 374, 398, 399, 800, 801, 834, 850, 1140, 1148, 1216], "unpack": [224, 229, 234, 239, 241, 250, 266, 271, 283, 289, 295, 296, 298, 301, 311, 347, 353, 355, 365, 374, 398, 399, 800, 801, 834, 850, 1096, 1216], "integ": [224, 234, 239, 244, 247, 271, 273, 283, 286, 292, 304, 311, 331, 343, 347, 353, 359, 369, 399, 444, 491, 496, 725, 1118, 1139, 1148], "unendlich": 224, "breit": 224, "divis": [224, 234], "floor": [224, 234], "konvertierung": 224, "konstruktoren": [224, 241], "welchen": 224, "typ": [224, 234], "typen": 224, "besser": 224, "laufzeitverhalten": [224, 234], "geeigneter": 224, "datenstrukturen": [224, 234, 235, 255, 273], "boolean": [224, 234, 260, 263, 271, 273, 279, 283, 286, 353, 359, 448, 529, 552, 1141, 1168, 1227], "short": [224, 263, 279, 448, 562, 801, 964, 1083], "circuit": [224, 263, 279, 448], "evalu": [224, 263, 279, 524, 529, 764], "warum": [224, 234], "sind": [224, 234], "mehr": [224, 239], "\u00fcber": [224, 234, 239, 247, 255], "rang": [224, 229, 234, 241, 250, 256, 260, 263, 271, 273, 276, 283, 286, 289, 295, 296, 298, 301, 311, 325, 331, 342, 355, 359, 365, 369, 374, 386, 681, 682, 768, 770, 800, 801, 832, 833, 834, 835, 836, 837, 838, 1110, 1147, 1163], "foli": 224, "161": 224, "shallow": [224, 273, 1148], "deep": [224, 273, 1148], "dem": 224, "deepcopi": 224, "funktionen": [224, 234, 235, 239], "90": 224, "ff": 224, "lokal": [224, 234, 292], "92": 224, "uniq": [224, 1191, 1192], "punkt": [224, 234], "zusammengefasst": 224, "hier": 224, "sch\u00f6nere": 224, "al": [224, 234, 283], "comprens": 224, "125": 224, "lesbarkeit": 224, "perform": [224, 247, 502, 835, 1046], "review": [224, 253], "pprint": 224, "praktisch": 224, "debug": [224, 541, 982, 1066, 1106], "datentransform": 224, "127ff": 224, "complet": [224, 374, 513, 518, 519, 520, 521, 534, 536, 626, 891], "collect": [224, 273, 276, 301, 1083, 1126, 1226, 1239], "namedtupl": [224, 1126], "parameter\u00fcbergab": [224, 234], "variabel": 224, "lang": 224, "argumentlisten": 224, "erst": 224, "klass": 224, "weiterf\u00fchrend": [226, 248], "workspac": [227, 228, 230, 232], "core": [227, 264, 307, 1084], "special": [227, 346, 740, 821, 916], "tutori": [227, 230, 242, 248, 258, 288, 291, 324, 1208], "parti": [227, 258], "v": [229, 234, 241, 247, 250, 271, 276, 279, 283, 286, 292, 308, 311, 321, 325, 336, 381, 382, 398, 399, 436, 445, 457, 460, 464, 466, 541, 543, 645, 646, 647, 660, 785, 817, 845, 961, 982, 983, 989, 990, 1019, 1064, 1136, 1139, 1147, 1158, 1236], "return": [229, 292, 359, 480, 528, 770, 812, 813, 815], "orient": [229, 279, 292, 300, 303, 304, 317, 319, 320, 323, 324, 329, 335, 338, 341, 342, 345, 346, 351, 357, 363, 364, 367, 368, 392, 510, 650, 741, 1123], "addit": [230, 650, 660, 665, 720, 1124], "brought": 230, "thoma": 230, "cloud": [231, 356, 401], "particip": 231, "desk": 231, "interlud": [231, 964], "bloodi": 231, "wild": [231, 280, 335, 338, 341, 381, 382, 422], "watchdog": 231, "25": [232, 242, 251, 258, 269, 274, 285, 327, 328, 335, 336, 337, 340, 422], "grundlegend": [234, 235], "sprachelement": [234, 235], "syntax": [234, 241, 247, 279, 289, 311, 325, 353, 365, 399, 529, 759, 804, 837, 1136], "semantik": 234, "einr\u00fcckung": 234, "ihren": 234, "\u00e4ndern": 234, "kommentar": 234, "sprach": 234, "standarddatentypen": 234, "elementar": [234, 235], "beliebig": 234, "gro\u00df": 234, "vergleichsoperatoren": 234, "pr\u00e4zedenz": 234, "vor": 234, "strichrechnung": 234, "modulo": 234, "un\u00e4rer": 234, "negat": [234, 1227], "erzwingen": 234, "auch": 234, "zeichenketten": 234, "raw": [234, 241, 256, 260, 273, 279, 301, 331, 1121, 1152, 1204], "f": [234, 256, 271, 289, 331, 353, 1153], "konvertierungen": 234, "pr\u00e4zendenzregeln": 234, "literal": 234, "primit": [234, 375, 816, 1110], "konstanten": 234, "operatoren": 234, "ausdr\u00fcck": 234, "operatorrangfolgen": 234, "\u00fcbungen": 234, "zwei": 234, "vertauschen": 234, "kontrollstrukturen": [234, 235, 254, 270, 271, 282], "anweisungen": 234, "folgen": 234, "bedingungen": 234, "verzweigungen": 234, "bedingt": 234, "anweisung": 234, "verzweigung": [234, 235], "geschachtelt": 234, "mehrfach": 234, "fallauswahl": 234, "schleifen": [234, 235], "z\u00e4hlergesteuert": 234, "kopfgesteuert": 234, "schleif": [234, 239], "fu\u00dfgesteuert": 234, "continu": [234, 269, 271, 310, 318, 320, 342, 352, 372, 377, 463, 1143, 1146], "sequenti": [234, 239, 271, 283, 353, 369, 689, 690, 697, 698, 824, 1110, 1144], "datatyp": [234, 239, 241, 244, 247, 256, 260, 263, 266, 271, 273, 279, 283, 286, 288, 289, 301, 303, 304, 310, 311, 313, 321, 323, 324, 325, 329, 330, 331, 341, 343, 345, 347, 351, 352, 353, 357, 358, 359, 363, 364, 365, 367, 368, 369, 399, 426, 476, 479, 525, 848, 1110, 1139, 1140, 1144], "schnell\u00fcbersicht": 234, "sprunganweisungen": 234, "endlosschleifen": 234, "ben\u00f6tigt": 234, "compound": [234, 244, 256, 260, 263, 266, 271, 273, 279, 283, 286, 289, 301, 321, 325, 331, 343, 347, 359, 365, 369, 479, 848, 1140], "Suche": 234, "eindimensional": 234, "tupel": 234, "listen": [234, 239, 273, 399], "revers": [234, 694, 695, 713, 714, 715, 1127], "mengen": [234, 244], "anhand": [234, 254, 270, 282, 422], "stapel": 234, "schlangen": 234, "versuch": 234, "zur\u00fcck": 234, "hybrid": 234, "supergscheit": 234, "methoden": [234, 235], "prozeduren": [234, 235], "funktionspoint": 234, "so": [234, 247, 250, 260, 292, 316, 510, 520, 650, 749, 764, 800, 803, 815, 1228], "heisst": [234, 239], "funktionsobjekt": 234, "primzahlenbeispiel": 234, "funktion": 234, "laufzeitfehl": 234, "existiert": 234, "zuweisen": 234, "fehlerfal": 234, "peter": 234, "unterprogramm": 234, "wert": 234, "referenzen": 234, "r\u00fcckgabewert": 234, "oder": [234, 405], "inner": [234, 1103], "standardbibliotheken": 234, "built": [234, 317, 654, 755, 961, 1086, 1107], "funktionalit\u00e4ten": 234, "\u00fcberblick": [235, 245, 254, 270, 282], "struktur": 235, "herdt": 235, "kapitel": 235, "ganz": [239, 271], "kurz": 239, "mehreren": 239, "returnwerten": 239, "bzw": [239, 405], "containerdatentypen": 239, "untypisiert": 239, "l\u00f6schen": 239, "begriff": 239, "zufal": 239, "regular": [239, 252, 253, 289, 292, 304, 353, 359, 921], "hallo": 241, "speicher": 241, "sch\u00fctze": 241, "ich": 241, "mich": 241, "davor": 241, "aber": 241, "gemischten": 241, "wiederholung": [241, 276], "objektidentit\u00e4t": 241, "statement": [241, 250, 385, 386, 457, 471, 768, 1103, 1105, 1118, 1136, 1142, 1220, 1222], "operationen": 241, "verloren": 241, "interpol": 241, "mittel": [241, 247], "scipi": 241, "29": [243, 317, 351, 352, 353, 367, 368, 369, 370, 404, 412, 422], "window": [243, 260, 316, 318, 423, 870], "einleitung": 244, "number": [244, 247, 250, 271, 283, 286, 399, 528, 720, 770, 940, 947, 948, 1026, 1111, 1127, 1130, 1139, 1147, 1148, 1169, 1172, 1183, 1184, 1225, 1228, 1230, 1253], "javascript": [244, 283], "java": 244, "mathematisch": 244, "assign": [247, 273, 279, 286, 347, 365, 369, 399, 453, 570, 651, 657, 658, 745, 763, 812, 813, 815, 821, 844, 1103, 1138, 1145, 1149, 1225], "fun": [247, 286, 300, 1138], "arithmet": [247, 252, 271, 283, 399, 426, 447, 476, 570, 584, 643, 665, 678, 679, 683, 686, 1127, 1139], "nur": 247, "sum": [247, 725], "weiter": 247, "dynamisch": 247, "evaluierung": 247, "beginn": [248, 260, 283, 288, 300, 324, 1208, 1279], "scienc": [248, 274, 288, 291, 324, 341, 342, 343, 345, 365, 367, 1208], "don": [248, 801, 835, 1208], "batteri": [248, 399, 1154, 1208], "confer": [248, 324, 1208], "zipfil": 250, "member": [250, 279, 652, 657, 658, 664, 727, 728, 747, 755, 848], "attribut": [250, 276, 292, 355, 385, 386, 748, 868, 1039, 1121, 1128, 1233], "protect": [250, 824, 835, 974], "posit": [250, 650, 1101, 1130, 1160], "keyword": [250, 271, 295, 296, 298, 355, 374, 400, 493, 494, 1103, 1130, 1150], "argument": [250, 271, 279, 300, 335, 400, 477, 524, 529, 1026, 1061, 1106, 1130, 1137, 1150, 1160], "mix": [250, 263, 331, 804, 1185, 1186], "yield": [250, 266, 271, 289, 317, 331, 1110, 1113], "filter": [250, 279, 308, 309, 315, 343, 353, 610, 611, 612, 835, 1227], "rest": [250, 345, 356, 1025], "nonetyp": [250, 263], "none": [250, 271], "recurs": [250, 479, 658, 764, 797, 893], "fibonacci": [250, 770, 772, 1111, 1179], "sever": 250, "same": [250, 634, 659, 664, 803, 1149, 1242], "oserror": 250, "errno": [250, 1017], "platform": 250, "assert": [250, 292, 343], "assertionerror": 250, "predefin": [251, 471, 529, 1253], "stream": [251, 873, 955, 1158], "pcap": [251, 264, 266], "programmieren": [252, 422], "massacr": 252, "kick": [252, 1046], "encapsul": [252, 384, 496, 656, 801, 825], "flow": [252, 282, 288, 303, 310, 313, 323, 324, 329, 330, 351, 352, 357, 358, 363, 364, 367, 368, 384, 465, 768], "standard": [252, 264, 269, 273, 288, 316, 318, 324, 385, 444, 491, 541, 613, 672, 682, 716, 719, 721, 810, 873, 1025, 1158, 1208, 1250], "librari": [252, 264, 269, 288, 316, 318, 324, 385, 438, 540, 543, 544, 545, 613, 672, 682, 716, 719, 724, 810, 1019, 1101, 1102, 1208, 1268], "stl": [252, 626, 642, 643, 644, 674, 682, 683, 712], "kid": 253, "recapitul": 253, "jump": [253, 476], "complic": [253, 575, 1100], "toolbox": 253, "databas": [253, 345, 726, 961, 1165, 1167, 1202, 1217, 1218, 1220], "gtest": [253, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254], "workflow": 253, "smart": [253, 269, 295, 296, 298, 318, 356, 374, 375, 382, 384, 626, 801, 841, 842, 843, 844], "datenbank": 255, "showcas": 255, "kommt": 255, "db": 255, "aufgab": 255, "formulieren": 255, "damit": 255, "dies": 255, "verbindung": 255, "schicken": 255, "jetzt": 255, "schickman": 255, "weg": 255, "vom": [255, 422], "server": [255, 1043, 1224], "php": 255, "j": 255, "empfangen": 255, "nun": 255, "muessen": 255, "verwandlen": 255, "liter": [256, 399, 570, 757, 825], "quot": [256, 260, 286, 524, 525, 1216], "friend": [256, 819], "sinc": [256, 289, 295, 296, 298, 383, 664, 1153], "sap": [257, 310, 312, 313, 314, 315, 362, 422], "export": 257, "solut": [257, 468, 490, 516, 540, 548, 549, 550, 553, 555, 559, 568, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 658, 684, 715, 740, 744, 748, 755, 765, 766, 779, 783, 801, 815, 821, 826, 827, 830, 864, 868, 887, 1014, 1016, 1020, 1090, 1100, 1102, 1118, 1244], "terminologi": [260, 328, 372, 865, 1081, 1215], "31": [261, 269, 277, 367, 368, 369, 370, 422], "numer": [261, 363], "ai": 261, "mountain": 261, "common": [263, 500, 512, 697, 1111, 1120], "wtf": [263, 1023, 1081], "creativ": [266, 856, 1124], "shift": [266, 452, 665], "hmmm": 267, "undefin": [269, 525, 532, 1149], "behavior": [269, 837], "again": [269, 317, 328, 372, 660, 911, 1127, 1261], "repeat": [269, 903], "quickli": 269, "algorithm": [269, 286, 310, 318, 355, 356, 476, 609, 626, 643, 677, 678, 682, 683, 692, 696, 764, 1066, 1213, 1215], "functor": [269, 626, 690, 750, 803, 805, 806], "unifi": 269, "model": [269, 823, 824, 1213, 1215], "uml": [269, 562], "todai": [269, 1103], "associ": [269, 455, 562, 701, 702], "dynam": [269, 300, 319, 320, 321, 341, 345, 483, 630, 631, 632, 683, 717, 718, 744, 785, 940, 970, 971, 1101, 1121, 1130], "alloc": [269, 355, 500, 640, 684, 710, 711, 718, 781, 783, 955, 978, 1035, 1046, 1047, 1110], "week": [269, 1264], "zahl": 271, "miscellanea": 271, "brace": [271, 295, 296, 298, 355, 356, 374, 384, 753, 754, 755, 756, 801, 1227], "singl": [271, 524, 540, 558, 1015, 1083, 1248], "hour_of_dai": 271, "membership": [271, 1144], "best": 271, "doc": [273, 343], "ident": [273, 336], "datenypen": 273, "libarari": 273, "exampl": [273, 279, 283, 400, 432, 436, 471, 473, 493, 496, 525, 528, 552, 591, 675, 700, 755, 756, 837, 847, 853, 873, 875, 876, 925, 1016, 1020, 1025, 1028, 1055, 1081, 1086, 1105, 1120, 1140, 1150, 1153, 1154, 1155, 1156, 1178, 1219, 1227, 1232, 1241, 1242], "chainmap": 273, "dequ": 273, "suchalgorithmen": 273, "pitfal": [273, 316, 319, 384, 400, 525, 529, 654, 770, 800, 801, 806], "fromkei": [273, 286], "join": [273, 279, 353, 368, 369, 1154, 1182], "lstrip": [273, 396], "rstrip": [273, 396], "sequentiel": 276, "konstant": 276, "suchzeit": 276, "metaprogram": 276, "everywher": [276, 292, 658, 1108], "defaultdict": [276, 301], "hello": [279, 289, 425, 774, 961, 962, 1134], "world": [279, 425, 432, 961, 962, 1134], "blahblah": [279, 283, 286, 289, 353, 682, 1133], "lifetim": [279, 440, 469, 806, 817, 845, 1217], "preview": [279, 545], "explicit": [279, 434, 650, 661, 756, 804, 806, 820, 844, 1118], "max": 279, "iteratoren": 279, "generatoren": 279, "ordereddict": 279, "duck": [279, 295, 296, 298, 335, 338, 355, 749, 786, 1120], "resolut": 279, "order": [279, 634, 765, 824, 848, 1107, 1127], "mro": 279, "super": 279, "__bases__": 279, "__mro__": 279, "self": [279, 658, 1122], "call": [279, 470, 474, 500, 504, 506, 626, 740, 987, 1019, 1025, 1063, 1070, 1130], "mangl": [279, 659], "yet": [279, 387, 388, 801], "udemi": 279, "claus": [279, 319, 341, 345, 1107], "lambda": [279, 295, 296, 298, 325, 355, 356, 374, 383, 384, 385, 386, 750, 800, 801, 802, 803, 804, 805, 807], "oppos": 279, "discuss": [282, 319, 320, 384, 410, 434, 436, 822, 987, 992, 1000], "chart": 282, "interact": [283, 331, 526, 1134, 1186], "1st": 283, "explan": [283, 343], "preced": [283, 286, 455, 1139], "float": [283, 286, 343, 1139], "einschub": 283, "vergleich": 283, "filterketten": 283, "zen": 283, "datensatz": 283, "notat": 283, "letzt": 283, "letzten": 283, "infinit": [286, 1111], "long": [286, 800, 801], "comparison": [286, 529, 650, 696, 720, 797, 848, 855, 1127, 1139], "digit": [286, 404, 1176], "english": [286, 406, 1176], "determin": [286, 877, 1172, 1183, 1184], "maximum": [286, 1172, 1183, 1184], "out": [286, 319, 320, 554, 653, 681, 682, 1071, 1085, 1103, 1145], "duplic": [286, 540, 674, 1028], "encod": [286, 288, 289, 300, 310, 330, 331, 347, 404, 1221], "nest": [289, 466, 479, 528], "itertool": 289, "chain": [289, 987], "destructor": [289, 634, 640, 655, 740, 801, 843], "prient": 291, "standesregist": 291, "sqlite3": [291, 519, 520, 521, 522, 1165, 1220], "xml": [291, 1233], "tree": [291, 869, 895, 902, 957, 984, 1008, 1015, 1063], "projektabschlusstag": 291, "person": [292, 561, 814], "anyth": 292, "lookup": [292, 532, 618, 619, 768], "vorbesprechung": 294, "legend": 294, "neuerungen": 294, "seit": 294, "2011": [294, 295, 296, 298, 383, 422], "ausblick": 294, "metadata": [295, 296, 298, 913], "thank": [295, 296, 298], "you": [295, 296, 298, 749], "readablil": [295, 296, 298], "writabl": [295, 296, 298, 1026], "err": [295, 296, 298, 355, 374, 381, 382, 707, 749, 801, 834, 850], "without": [295, 296, 298, 355, 521, 663, 684, 749, 813, 1035], "simpli": [295, 296, 298, 356, 1016], "deserv": [295, 296, 298], "ag": [295, 296, 298, 731], "overrid": [295, 296, 298, 355, 374, 744, 801, 829, 830], "delet": [295, 296, 298, 355, 374, 631, 699, 827, 829, 891, 1041], "strongli": [295, 296, 298, 355, 374, 849], "enum": [295, 296, 298, 355, 374, 492, 849, 952], "deleg": [295, 296, 298, 355, 374, 779], "nullptr": [295, 296, 298, 355, 374, 808], "rvalu": [295, 296, 298, 355, 374, 375, 811, 814, 815], "skeleton": [296, 298, 316, 318, 667, 857, 858], "perfect": [298, 374, 381, 450, 492, 831], "architectur": [299, 376, 379, 422, 510, 800, 828, 984, 1066], "pattern": [299, 317, 319, 320, 374, 381, 422, 555, 568, 1111, 1259], "mondai": 299, "tuesdai": 299, "wednesdai": 299, "forc": [300, 449, 763, 764], "front": [300, 319, 341, 1121], "seri": [300, 303, 323, 324, 329, 330, 351, 352, 358, 363, 364, 367, 368, 626, 1195, 1202, 1226, 1270], "miss": [300, 372, 755, 1029, 1046], "piec": [300, 372], "go": [300, 381, 1028, 1216], "kickoff": [300, 319, 320, 335, 338, 342, 345], "livehack": [300, 309, 383, 512, 554, 811, 947, 1149, 1236, 1243], "Such": [301, 720], "noob": 303, "quick": 307, "uart": [307, 861], "susi": 307, "untold": [307, 310, 316, 317, 320, 356], "whet": [308, 309], "appetit": [308, 309], "panda": [308, 310, 311, 313, 315, 317, 330, 342, 347, 353, 363, 367, 368, 1213, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232], "regex": 308, "pipelin": 309, "categori": 309, "payment": 309, "select": [309, 315, 317, 928, 934, 1073, 1226, 1227, 1228, 1231, 1248], "uncategor": 309, "dataset": [310, 314, 315, 1212, 1214], "automat": [310, 313, 333, 349, 446, 469, 739, 787, 801, 826, 1273], "cleanup": [310, 313, 992, 1003], "learn": [310, 368, 369, 406, 1209, 1215], "conversiosn": 311, "specif": [313, 1057, 1197], "usecas": 315, "drop": [315, 550, 835, 837], "nan": 315, "datafram": [315, 1213, 1226, 1230], "isna": 315, "to_datetim": 315, "dated": 315, "workabl": 315, "modifi": [315, 487, 494, 525, 591, 660, 745, 824, 1054, 1118, 1148, 1232], "increas": 315, "price": 315, "particular": 315, "store": [315, 487, 554, 824, 1054, 1118], "readabl": [315, 490, 801, 825, 1031], "combin": [315, 453, 569, 570, 583], "prefer": [316, 318], "ubuntu": [316, 318, 1098], "under": [316, 318, 893, 1021, 1105], "unsupport": 316, "heavi": [316, 318, 867], "weight": [316, 318], "resourc": [316, 382, 406, 658, 718, 745, 820, 844, 980], "r": [316, 910, 1015], "littl": [316, 374, 375, 461, 512, 1133], "concurr": 316, "far": [316, 817, 1215], "fact": [317, 762, 875, 966, 1049, 1121, 1124], "fixtur": [317, 607, 797, 1241, 1242, 1252, 1253, 1254], "omin": [317, 1106], "warm": 318, "resolv": [318, 824], "insid": [319, 320, 664, 814, 815], "construct": [319, 341, 345, 1126, 1143], "emphasi": [319, 341, 345], "recoveri": [319, 320, 341, 342, 345], "broader": 319, "sens": 319, "morn": [320, 324, 328, 330, 342, 352, 356, 368, 372, 375, 377, 380, 382], "pytest": [320, 368, 1240, 1241], "awaken": [324, 352, 368, 375, 377, 380], "bash": [328, 372, 422, 911, 1261], "bourn": [328, 372, 911, 1261], "inspect": [328, 372, 919, 923], "wakeup": [328, 330, 356, 372, 382, 1069, 1071], "redirect": [328, 372, 871, 872, 873, 874, 897, 910, 1028], "pipe": [328, 372, 837, 856, 871, 872, 874, 875, 922, 925], "archiv": [328, 372, 852, 854, 855, 856, 1098, 1099, 1102], "compress": [328, 372, 852, 854, 855, 856], "network": [328, 572, 929, 978, 979, 1022, 1272], "least": [328, 1248], "day2": 330, "interpret": [331, 504, 529, 556, 569, 570, 583, 584, 1186], "len": 331, "abl": 331, "callabl": [331, 750], "sandbox": [335, 338], "equal": [336, 604, 650, 665, 666, 667, 668, 669, 689, 848, 1127], "spoiler": 338, "annot": 339, "multiprocess": 341, "idea": [341, 1043], "veri": [342, 781, 830, 839, 1233], "leftov": 342, "yesterdai": 342, "ifi": 342, "toolcas": [342, 355, 374, 536], "arg": [342, 1106], "kwarg": [342, 1106], "includ": [342, 470, 536, 546, 1154], "receiv": 342, "udp": 342, "datagram": [342, 929], "compositesink": 342, "timestamp": [342, 992], "org": [343, 404], "aaarghhh": 343, "expresss": 343, "constexpr": [355, 374, 385, 386, 763, 764, 766, 767], "constinit": [355, 374, 385, 386, 765, 767], "constev": [355, 374, 385, 386, 763, 767], "want": [355, 513, 534, 749, 800, 813, 827, 952, 957, 1030, 1124], "erasur": [355, 783, 785], "classic": [356, 751, 782, 790], "semant": [356, 375, 381, 384, 801, 811, 812, 813, 814, 815, 1077], "kochtopf": 356, "roundup": 356, "still": [356, 553, 800, 1105, 1110], "exchang": [359, 929], "schuetzen": 359, "pathlib": [359, 369], "regexen": 359, "distil": 359, "py": 359, "infin": [365, 1111], "listdir": [368, 369], "option": [368, 376, 379, 381, 383, 385, 458, 505, 514, 515, 516, 520, 521, 746, 801, 856, 891, 893, 913, 921, 934, 1015, 1216], "scikit": [368, 369], "struct": [369, 479, 480, 495, 650, 732, 850], "cell": 369, "wuerfeln": 369, "prime": [369, 1180, 1188, 1194], "misc": 369, "crap": 369, "datatyo": 369, "einlesen": 369, "sep": 369, "putti": 372, "toward": [373, 743, 801], "exact": 373, "thorough": [374, 375, 422], "initializer_list": [374, 550, 753, 756], "shared_ptr": [374, 375, 382, 794, 801, 821, 842, 845], "unique_ptr": [374, 375, 382, 801, 842, 845, 846], "similar": [374, 893], "saniti": [374, 490, 498, 512], "sensorconfig": 375, "thereof": 375, "lock": [375, 768, 820, 825, 976, 989], "make": [375, 422, 520, 521, 534, 543, 605, 801, 827, 857, 858, 934, 968, 1042, 1084, 1085, 1275], "safe": [375, 821, 822, 1081], "sketch": 375, "latch": 375, "mylatch": 375, "coverag": [376, 379, 1110], "analysi": [376, 379, 505, 801, 1066], "multiplatform": [376, 379], "consider": [376, 379, 800, 1067], "much": [377, 506, 515, 805, 1105], "variou": [162, 377], "kind": [377, 801], "ride": [381, 382, 422], "syntact": [381, 1106], "goodi": [381, 1085], "everybodi": 381, "know": [381, 491, 521, 704, 801], "overengin": [381, 512, 664, 801], "2nd": 382, "filesensor": [382, 839], "elimin": [382, 500, 846, 1178], "candatasink": 382, "variant": [382, 444, 553, 559, 746, 747, 787, 788, 789, 790, 800, 1077], "approach": [382, 492, 514, 515, 516], "fundament": [383, 1131, 1278, 1282], "low": 383, "hang": 383, "fruit": 383, "cool": [383, 424, 764, 1153], "item": [384, 793, 794, 795, 800, 801, 831, 1105, 1111], "style": [385, 387, 459, 510, 650, 747, 755, 844, 1153], "k": [385, 386, 541, 1210], "pita": [385, 386], "spaceship": [385, 386, 848], "past": [385, 422, 471], "2050": 386, "unspecifi": [387, 388], "checker": 389, "blinklicht": [390, 391, 392, 393], "electron": [390, 928], "aspect": 390, "circuitri": 390, "header": [390, 468, 514, 517, 664, 934, 1198], "pinout": [390, 934], "unittest": [393, 1242, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1276], "ece19": 394, "g2": [396, 858], "swoop": 396, "size": [396, 444, 623, 907], "chunk": [396, 1043], "str": [396, 1129], "byte": 398, "btw": 399, "wertebereich": 399, "sidenot": [400, 1150], "pure": [400, 743, 801, 1150], "beauti": [400, 506, 861, 937, 1150], "login": [401, 866, 1006], "formalit\u00e4ten": 402, "ec": [403, 418, 420, 857, 858], "daili": 404, "fail": [404, 1030, 1241, 1248, 1250], "reiter": 404, "argpars": [404, 1137, 1160], "deutsch": [405, 422], "lehrinhalt": 405, "lernergebniss": 405, "lv": 405, "verpflichtend": 405, "lernressourcen": 405, "instrument": 405, "art": 405, "vermittlung": 405, "begleitbedingungen": 405, "pr\u00fcfungsmethod": 405, "beurteilungskriterien": 405, "mode": [406, 541, 876, 928, 1029, 1134, 1158], "deliveri": [406, 1080, 1081], "co": 406, "requisit": 406, "assess": 406, "criteria": [406, 1064], "whose": 408, "fault": 408, "newcom": 409, "jjjj": 412, "sidewai": [413, 664, 750, 821, 825, 1106, 1111], "entwickl": 422, "fortgeschritten": 422, "wiener": 422, "neustadt": 422, "einf\u00fchrung": 422, "ober\u00f6sterreich": 422, "obersteiermark": 422, "korn": 422, "salzburg": 422, "ausgew\u00e4hlt": 422, "themen": 422, "2018": 422, "raum": 422, "n\u00fcrnberg": 422, "oberb\u00fcren": 422, "schweiz": 422, "2017": 422, "m\u00fcnchen": 422, "lowlevel": 422, "refresh": 422, "programmiererstandpunkt": 422, "2016": 422, "wien": 422, "workshop": 422, "bodenseo": 422, "hemmenhofen": 422, "bodense": 422, "systemnah": 422, "2014": 422, "mathia": 422, "kettner": 422, "siemen": 422, "braunschweig": 422, "intermedi": [422, 581, 1103, 1120], "scratch": 422, "lpd": 422, "hannov": 422, "unter": 422, "k\u00f6ln": 422, "lka": 422, "niedersachsen": 422, "konfigur": 422, "gnu": [422, 504, 1083, 1275], "2012": 422, "hamburg": 422, "fehlerdiagnos": 422, "polizei": 422, "stia": 422, "admont": 422, "bi": 422, "2010": 422, "softwareentwicklung": 422, "darmstadt": 422, "ulm": 422, "bundeswehr": 422, "wildflecken": 422, "gui": 424, "Their": [424, 444], "hobbi": 424, "second": [426, 428], "fahrenheit": [427, 429, 431, 578], "tabl": [427, 429, 431, 604, 1127], "simplif": 428, "revisit": [428, 496, 813], "constant": [430, 445, 470, 500, 581], "preprocessor": [430, 470, 471], "macro": [431, 470, 471, 514, 528, 943, 964], "outsid": 432, "cat": [432, 917], "poor": [432, 433], "wc": 433, "memset": 434, "histogram": 435, "nonsens": 436, "signatur": 436, "declar": [436, 437, 466, 467, 468, 664], "mistak": 438, "stdin": [439, 925, 1006], "qualifi": 444, "width": [444, 476, 669, 682, 936, 1145], "escap": [445, 1152], "logic": [448, 768], "implicit": [449, 846], "sign": 449, "truncat": [449, 1035], "propag": 449, "unsign": 449, "compil": [449, 466, 471, 487, 488, 517, 536, 540, 541, 651, 654, 658, 764, 801, 828, 846, 964, 984, 1083, 1086, 1096, 1100], "warn": [449, 455, 471, 1058, 1081], "cast": 449, "increment": [450, 682, 770, 1118], "decrement": [450, 682], "confus": [450, 1139, 1227], "manipul": [452, 526, 846, 1035, 1081], "bitwis": [452, 1227], "AND": 452, "OR": [452, 764], "xor": 452, "right": [452, 1190], "invert": [452, 1226], "complement": 452, "summari": [455, 650, 750, 856, 984, 1101, 1121, 1228, 1231], "true": [458, 553, 662, 1230], "fals": 458, "truth": 458, "matter": [459, 534], "distinct": 460, "purpos": [461, 1039], "closer": 461, "comma": 461, "infam": 461, "idiom": 461, "bodi": 462, "goto": 464, "label": [464, 1231], "monolith": [466, 540, 554, 608], "separ": [466, 467, 540, 554, 822, 915, 1100], "static": [469, 493, 604, 663, 664, 764, 765, 785, 1100, 1101, 1102, 1125], "visibl": [469, 493, 934, 1042], "replac": [470, 593, 790, 791], "inlin": [470, 500, 653, 660, 664], "guard": 470, "rule": [471, 510, 651, 654, 664, 756, 764, 815, 835, 869], "span": 471, "stringif": [471, 1129], "token": 471, "address": [473, 868, 934, 955, 998, 1067, 1227], "arbitrari": [476, 682, 1106, 1130], "typedef": 481, "alia": 481, "singli": 484, "volatil": [486, 892], "lie": 486, "valid": 486, "handler": [486, 1080, 1081], "intrins": 487, "atom": [487, 818, 821, 825, 982, 983, 987, 988, 1003, 1053], "builtin": 487, "align": 488, "unalign": 488, "pad": 488, "readabilti": 490, "shoot": 490, "offens": 490, "unobvi": 490, "ambigu": [490, 496, 756], "smell": 490, "size_t": 491, "discret": 492, "tradit": [492, 510, 1130], "wishlist": 492, "somewhat": 493, "contriv": 493, "hoorai": 493, "correct": [494, 660, 830, 1066], "non": [494, 525, 597, 598, 599, 600, 601, 602, 603, 640, 660, 747, 784, 790, 1248], "good": [495, 514, 515, 650, 664, 682, 755, 761, 768, 815, 835, 837, 840, 1066], "c99": 495, "explict": 496, "safeti": [496, 512], "scheme": 496, "artifici": [496, 1209], "valgrind": [497, 631], "action": [497, 1081], "optim": [499, 500, 501, 824], "bound": [499, 500, 631, 1064], "unnecessari": 500, "peephol": 500, "subexpress": 500, "strength": 500, "reduct": 500, "fold": 500, "invari": 500, "unrol": 500, "tail": [500, 922], "cpu": [500, 824, 868, 1064, 1071], "level": 500, "cach": [501, 516, 532, 835], "multidimension": 501, "thrash": 501, "profil": [503, 504, 506, 507], "donald": 503, "knuth": 503, "toni": 503, "hoar": 503, "larri": 503, "wall": 503, "practic": [503, 519], "brian": 503, "w": 503, "kernighan": 503, "rob": 503, "pike": 503, "gprof": 504, "flat": 504, "graph": [504, 506, 519], "callgrind": 505, "per": [505, 952, 992, 1253], "kcachegrind": 505, "oprofil": 506, "wide": 506, "offlin": 506, "graphic": 506, "accomplish": 510, "disclaim": [510, 870], "principl": [510, 558], "yagni": 510, "uncl": 511, "bob": 511, "typic": [512, 869, 1050, 1067], "bookkeep": 512, "effort": 512, "spaghetti": [512, 534], "concaten": [512, 1225], "input": [512, 873, 1110, 1213], "yyyi": 512, "mm": 512, "where": [512, 529, 543, 744, 867, 1083], "testabl": 512, "explicitli": [512, 804, 846], "categor": 512, "net": 512, "place": [512, 525, 609, 654, 694, 744, 745, 857, 858, 1148], "add_custom_command": 513, "handwritten": [513, 518, 805, 806, 848], "prototyp": [513, 770], "deepli": 513, "manual": [513, 651, 654, 658, 750, 788, 789, 891, 1019, 1037, 1040, 1112], "conf": 513, "et": 513, "voila": 513, "blacklist": [514, 515], "flag": [514, 721, 970, 1025, 1153], "libhello": 514, "bad": [514, 515, 783, 835, 953], "target_compile_definit": [515, 520, 521], "backlist": 515, "availablil": 515, "target": [515, 537, 543, 544, 546, 607, 1033, 1084, 1262, 1267, 1273], "use_blacklist": 516, "libmosquitto": 518, "toplevel": 518, "cmakelist": [518, 536], "capabl": [518, 519], "find_packag": [519, 522], "node": [519, 536, 972, 1028], "theori": [519, 815, 1066], "configure_fil": 520, "instead": 520, "put": [520, 801], "someon": 521, "who": 521, "jjj": [523, 985], "bracket": 524, "execut": [524, 540, 544, 876, 1101, 1107, 1115, 1135, 1185, 1248, 1250], "unquot": [524, 525, 529], "basta": 525, "inconsist": [525, 755], "modif": [525, 700, 821, 1100], "foreach": [525, 527], "pathnam": 526, "hash": [526, 1135], "checksum": 526, "append": [526, 1225], "glob": 526, "cmake_path": 526, "decompos": 526, "compos": 526, "argc": [528, 1061], "argv": [528, 1061, 1137], "argvn": 528, "argn": 528, "parent_scop": 528, "fanci": 528, "cmake_parse_argu": [528, 534], "care": [529, 803], "polici": [529, 1070], "rather": 529, "mess": [529, 756, 1221], "dereferenc": 529, "weirdli": 529, "ain": 531, "empti": [532, 740, 910, 972, 1121, 1178], "empty": 532, "defined": 532, "indirect": 532, "add_librari": 534, "streamlin": 534, "my_add_librari": 534, "architect": 534, "noi": 535, "include_directori": [535, 536, 537], "motiv": [536, 550, 553, 569, 570, 665, 749, 755, 759, 764, 779, 803, 833, 849, 1004, 1112, 1122, 1128], "around": [536, 770, 800], "adjust": [536, 1008, 1096], "boilerpl": [540, 805, 980], "consist": [540, 824, 955], "paus": 541, "diagram": 541, "cmake_build_typ": 541, "printf": [541, 652], "popular": [541, 862], "prefix": [543, 1106], "runpath": 543, "abi": 543, "normal": 545, "subdirectori": 546, "reorgan": 546, "i2c": [548, 934, 937], "subhierarchi": 548, "instanti": [548, 554, 703, 747, 759, 950], "adapt": [549, 554, 564, 569, 571, 578, 583, 750], "must": [549, 1032], "adapte": 549, "asensor": 549, "real": [549, 657, 790, 800, 801, 847, 888], "measur": [549, 592, 757, 1069, 1071], "insert": [550, 616, 617, 699, 700, 703, 704, 705, 706, 733, 793, 794, 831, 848, 972], "bulk": 550, "6a": 550, "socialdb": 551, "thermomet": [552, 572, 573, 586, 587, 606], "aggreg": [553, 562, 755], "conret": 553, "realiz": 553, "situat": [553, 1016], "constantsensor": 553, "decoratedconstantsensor": 553, "randomsensor": [553, 594], "decoratedrandomsensor": 553, "verifi": [553, 903, 937, 1007, 1213], "hold": [553, 1126], "studi": [554, 833, 834, 1095], "heat": 554, "dbuslogg": 554, "dbusvaluestor": 554, "either": 554, "dbu": 554, "stop": [554, 844], "help": [554, 891, 924, 1236, 1243], "observ": [557, 585, 1112], "liskov": 558, "substitut": [558, 662], "segreg": 558, "invers": [558, 1070], "foundat": 560, "hierarchi": [560, 672, 790, 801, 869, 1107], "hypothet": [560, 1127], "singleton": [561, 574, 575, 576, 588, 589, 590], "connector": 562, "uniniti": [570, 662], "flexibl": [574, 575, 588, 589], "strict": [575, 589], "inflex": [576, 590], "i2csensorfactori": 577, "i2csensorfactory_vendor1": 577, "stub": [586, 991], "socialinsur": [588, 589], "oegk": [588, 589], "sv": [588, 589], "relationship": [591, 744, 848, 1213], "firstnam": 591, "lastnam": [591, 734, 736], "w1sensor": [591, 608], "answer": [591, 803], "ledstripedisplay_nopoli": 597, "hysteresis_nopoli": 598, "averagingsensor_nopoli": 599, "constantsensor_nopoli": 600, "mocksensor_nopoli": 601, "randomsensor_nopoli": 602, "mock": 603, "shape": [604, 891], "procedur": 604, "circl": 604, "area": [604, 669], "squar": 604, "massag": 605, "sub": 605, "notfound": 607, "find_is_const": 607, "isol": [607, 1217, 1253], "pc": 607, "greater": 611, "odd": 612, "overwrit": 616, "sunni": [617, 619, 622, 1026, 1030, 1031, 1032], "uniquifi": 624, "transcript": 626, "malloc": 631, "free": 631, "mismatch": [631, 839, 1016], "across": [634, 782, 784, 786, 788], "ownership": [639, 640, 641, 846, 876], "raii": [639, 640, 641, 820], "dealloc": 640, "ol": [650, 834, 840], "look": [650, 704, 1021, 1022, 1023], "distanc": [650, 660, 668], "length": 650, "specifi": [652, 1026], "otherwis": 652, "lifecycl": 655, "dragon": [658, 816], "memberwis": 658, "straighforward": 658, "correctli": 658, "underli": [659, 849], "mechan": 659, "just": 659, "wrong": [660, 735, 825, 1026], "pollut": 660, "hidden": [661, 913], "cannot": 662, "easili": 662, "odr": 664, "litt": 664, "defnit": 664, "ostream": [665, 666, 667, 668, 669], "cout": 665, "cuboid": 666, "upon": [666, 668, 669], "point3d": [666, 668], "surfac": 666, "volum": [666, 1098], "unari": [667, 668], "rectangl": [668, 669], "coordin": [668, 669, 761], "absolut": [668, 797, 915, 1279], "height": 669, "catch": [672, 1066, 1107], "throw": [672, 747], "spirit": [682, 845, 846, 847], "pre": [684, 755], "destin": [684, 1026], "back_insert_iter": 684, "binary_search": 687, "intellig": [687, 693, 1114, 1209], "find_if": [690, 734], "customiz": 690, "for_each": 691, "lower_bound": 693, "reverse_copi": [695, 715], "characterist": [697, 700], "fill": [703, 1220], "fine": 704, "never": 704, "been": 704, "made": [704, 806], "definin": 705, "subscript": 706, "eras": 707, "multimap": 709, "conveni": 720, "sto": 720, "to_str": 720, "substr": [720, 1154], "paint": 721, "american": 721, "onto": 721, "moodl": [722, 878, 879, 904], "proce": 724, "passwderror": 724, "cin": 725, "n": 731, "year": 731, "deriv": [739, 801, 839], "surpris": 739, "among": 743, "effect": [744, 888, 1081, 1121], "void": 745, "has_valu": 745, "null": [745, 750], "any_cast": 745, "char": [745, 747, 1061], "union": [747, 800], "bad_variant_access": 747, "visitor": 747, "accessor": 747, "get_if": 747, "noreturn": 748, "deprec": [748, 1225], "fallthrough": 748, "nodiscard": 748, "maybe_unus": 748, "sai": [749, 893], "decai": 749, "pointlessli": 750, "hardcod": [750, 948], "placehold": 750, "upsid": 751, "technic": 751, "downsid": 751, "rescu": [751, 759, 803, 848, 1085, 1106, 1127, 1232], "implementor": 753, "direct": [753, 955], "uniform": 754, "heap": 755, "refus": 755, "narrow": 755, "realist": [756, 1108, 1241], "int": [756, 1061], "nicolai": 756, "josutti": 756, "complain": 756, "chrono": [757, 825, 839], "clock": 757, "sleep": [757, 982, 987, 988], "chosen": 759, "doubl": 761, "has_siz": 761, "failur": [761, 1066, 1248], "point2d": 761, "coordinate_is_multipli": 761, "might": 762, "disappear": 762, "compiletim": [763, 764], "did": [764, 1003], "runtim": [764, 1101], "dual": [764, 831], "uncool": 764, "lead": 764, "callchain": 764, "fiasco": 765, "possibl": [765, 806], "foreword": 770, "examp": 770, "explain": [770, 824], "drive": [770, 928], "anatomi": [770, 961], "resum": 770, "suspens": 770, "caller": 770, "co_yield": 770, "mimick": 770, "fibo": 771, "suspend": [776, 777, 778], "crtp": [780, 783, 785], "incomplet": [781, 1222], "bloat": 783, "string_view": 783, "unrel": 786, "visit": 789, "middl": 790, "omit": 790, "cram": 790, "draft": [792, 926, 1162, 1207], "bag": [793, 794, 795, 831], "accident": [794, 834], "weak_ptr": [794, 847], "uniqu": [795, 845], "rel": [797, 915, 1115], "compon": 797, "creation": [797, 862, 1041, 1051, 1052], "create_directori": 797, "entri": 797, "classif": 797, "is_xxx": 797, "directory_entri": 797, "scenario": [798, 1043], "school": [800, 839], "inevit": 800, "cover": 801, "oop": 801, "dogma": 801, "peril": 801, "incorrectli": 801, "would": 801, "dogmat": [801, 835], "polymorp": 801, "todolist": 801, "deviat": 801, "doit": 801, "NO": 801, "proggi": 805, "morph": 805, "temporari": [806, 1105, 1241], "said": 810, "guidelin": 810, "well": 810, "smartptr": 812, "lvalu": [815, 831], "wish": [815, 1120], "Ones": 815, "easi": [817, 835], "joinabl": 817, "detach": [817, 1051], "cornercas": 817, "recursive_mutex": 819, "timed_mutex": 819, "recursive_timed_mutex": 819, "unlock": [820, 989], "consid": 820, "acquisit": [820, 1195], "lock_guard": 820, "synchron": [821, 1053, 1080], "startup": 821, "unsaf": 821, "atomic_stor": 821, "condition_vari": 822, "predic": [822, 1055], "concern": 822, "reorder": 824, "threadsaf": 824, "acquir": [824, 1118], "spinlock": [824, 987, 989, 990], "conflict": [824, 1054, 1118], "promis": 825, "utterli": 825, "becom": [825, 1102], "readi": 825, "minim": 825, "pro": 825, "decis": [828, 1064], "cleanli": 828, "hard": [830, 912], "aris": 830, "univers": 831, "gool": 834, "variat": [834, 850, 984], "prevent": [834, 846], "dangl": 835, "constraint": 835, "sigh": 835, "storag": [837, 1057], "abbrevi": 837, "avail": [837, 934, 943], "handwrit": 844, "ctor": 844, "auto_ptr": 844, "mayb": 844, "juggl": 845, "make_shar": 845, "cyclic": 845, "chanc": 846, "leakag": 846, "keystrok": 846, "make_uniqu": 846, "acknowledg": [846, 1066], "prove": 846, "borrow": 847, "invalid": 847, "annoi": 848, "occasion": 848, "six": 848, "even": [848, 1031, 1032, 1169], "compar": [848, 1127], "compat": [848, 850], "everi": 848, "weaker": 848, "strong_ord": 848, "unus": 848, "gzip": 853, "tar": 856, "etiquett": 856, "Being": 856, "g1": 857, "lot": [857, 858], "precondit": [857, 858], "credenti": [857, 877], "backup": [857, 858, 893], "busi": 858, "ok": [861, 1061], "serial": 861, "pseudo": 861, "partit": 861, "proc": [861, 1047], "space": [863, 864, 867, 868, 948, 998, 1067], "authent": [866, 1012], "prompt": 866, "verif": [866, 1197], "success": 866, "imperson": 866, "uid": [868, 887, 888], "parent": [869, 1063], "child": 869, "servic": [869, 966, 1224], "init": [869, 961, 980], "subsystem": 870, "0": [870, 1061, 1217], "stdout": [874, 925, 1006, 1028], "stderr": 874, "trick": [874, 1152], "teacher": 876, "constel": 876, "root": [876, 888], "octal": 876, "tune": [876, 1069, 1216], "setuid": [887, 888], "sudo": 887, "password": [887, 1174], "chmod": [887, 1135], "toi": 887, "ugli": 889, "sticki": 889, "umask": 890, "navig": 891, "edit": 891, "tabul": 891, "filenam": 891, "bashrc": [892, 893], "cp": 893, "its": [893, 1216], "pwd": 894, "cd": 894, "mkdir": [900, 910], "funni": 901, "dev": [906, 934], "touch": 910, "rm": 910, "rmdir": 910, "mv": 914, "somewher": 914, "cut": [918, 1145], "durchsuchen": 920, "optionen": 920, "verkn\u00fcpfungen": 920, "grep": 921, "less": [924, 1103, 1127], "brushless": 928, "motor": 928, "speed": 928, "esc": 928, "fwd": 928, "rev": 928, "calibr": 928, "packet": 929, "util": [930, 978], "vcan": 930, "frame": [931, 1225], "mcp2515": 932, "schemat": 932, "solder": 932, "spi": 932, "lm73": 934, "slave": [934, 937], "master": [934, 937], "enabl": [934, 937], "bcm2835": 934, "40": 934, "pin": [934, 937, 1039], "connect": [934, 1022, 1220], "datasheet": 934, "wire": [934, 936, 937], "i2cdetect": [934, 937], "detect": 934, "monitor": [934, 937], "hwmon": [934, 937], "pca9685": 936, "puls": 936, "presenc": 936, "ds18b20": 937, "alter": 937, "w1": 937, "attach": 937, "ds2482": 937, "800": 937, "channel": 937, "bootload": [937, 984], "announc": 937, "hotplug": 937, "lm": 937, "caveat": [937, 1217], "topologi": 937, "symptom": 937, "modern": [939, 940, 941, 1258], "slideshow": [940, 943, 945, 948, 950, 953, 955, 961, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 987, 989, 992, 994, 998, 1001, 1004, 1081, 1150, 1237, 1244], "hook": 942, "necessari": 942, "ioctl": [942, 943, 945, 964, 997, 1025], "vtabl": 943, "kernelspac": 943, "_io": [943, 964], "major": [947, 948], "minor": [947, 948], "hair": 952, "pretti": 952, "wswitch": 952, "dma": [955, 956, 980], "physic": 955, "scatterlist": 955, "when": 957, "explod": 957, "loadabl": 961, "exit": [961, 1006, 1051, 1061], "unload": 961, "raspi": [964, 965, 1016], "legaci": [964, 1181], "api": [964, 994, 1050, 1070], "my_activate_gpio": 964, "routin": [966, 980], "reserv": 968, "kmalloc": [970, 971, 987], "doubli": [972, 973], "consequ": 974, "rt": [976, 977], "mutual": [976, 989], "exclus": [976, 989], "registr": 978, "layer": 978, "pci": [980, 981], "foremost": 980, "probe": 980, "bar": 980, "rasperri": 984, "crossdev": 984, "artifact": [984, 1210], "mainten": 986, "spin_lock": 987, "irq": 987, "spin_lock_irqsav": 987, "spin_unlock_irqrestor": 987, "ah": [987, 1221], "bulletproof": 989, "dup": 991, "defer": [992, 1003], "jiffi": 994, "wheel": [994, 1164], "get_one_ev": 997, "copy_to_us": 997, "noth": 1000, "o_nonblock": 1000, "wake": 1001, "workqueu": [1003, 1004, 1005], "destroi": [1004, 1243], "wear": 1012, "admin": 1012, "hat": 1012, "scp": 1015, "sshf": 1016, "mount": 1016, "logdata": 1016, "unmount": 1016, "fusermount": 1016, "umount": 1016, "helper": [1017, 1227], "simplic": [1021, 1022, 1023], "watch": 1021, "strace": 1021, "supervis": 1021, "descriptor": [1025, 1028, 1035], "filedescriptor": 1025, "offset": [1025, 1035], "lseek": 1025, "hole": 1027, "o_creat": 1029, "bogu": 1029, "o_excl": 1030, "alreadi": 1030, "o_rdonli": 1031, "o_wronli": 1032, "writeabl": 1032, "implicitli": 1032, "scatter": 1035, "gather": 1035, "retriev": 1037, "wise": 1038, "mqueue": 1041, "teardown": [1041, 1253], "produc": [1041, 1043, 1076, 1111], "consum": [1041, 1076], "mq_notifi": 1041, "mmap": [1042, 1045, 1047, 1076], "map_priv": 1042, "cow": 1042, "map_shar": 1042, "lazi": [1046, 1047], "demand": 1046, "overcommit": 1046, "loos": 1046, "tlb": 1046, "anonym": 1047, "unpopul": 1047, "popul": 1047, "pid": [1047, 1063], "smap": 1047, "rss": 1047, "mlock": 1048, "mlockal": 1048, "prefault": 1048, "term": [1049, 1127], "legal": 1050, "pthread_join": 1051, "win32": 1055, "reset": 1055, "trylock": 1060, "islock": 1060, "procf": 1063, "ppid": 1063, "getpid": 1063, "getppid": 1063, "multitask": 1064, "fair": [1064, 1069], "runnabl": [1064, 1071], "legendari": 1066, "mar": 1066, "pathfind": 1066, "incid": 1066, "lesson": 1066, "human": 1066, "natur": 1066, "deadlin": 1066, "pressur": 1066, "postlud": 1066, "account": 1066, "glenn": 1066, "reev": 1066, "leader": 1066, "spacecraft": 1066, "didn": 1066, "launch": 1066, "deadlind": 1066, "straight": 1066, "bare": 1067, "metal": 1067, "hm": 1067, "awai": [1067, 1204], "great": 1067, "stabil": 1067, "latenc": [1069, 1071], "nice": 1069, "inexact": 1069, "immedi": 1069, "preempt_rt": 1069, "prioriti": 1070, "runn": 1070, "frequenc": 1071, "scale": 1071, "mysteri": 1071, "remain": 1071, "sysprog": [1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082], "segment": 1076, "sem_open": 1077, "sem_wait": 1077, "sem_post": 1077, "sem_clos": 1077, "sem_unlink": 1077, "barebon": 1080, "alarm": 1080, "louder": 1080, "innoc": 1080, "sigalrm": 1080, "programmat": 1081, "mask": 1081, "pend": 1081, "sigset_t": 1081, "seem": 1083, "nm": 1083, "agnost": 1084, "sysroot": [1086, 1096], "armv8": 1086, "rpi4": 1086, "gnueabihf": 1086, "linaro": 1096, "defunct": 1096, "patienc": 1096, "against": [1096, 1101, 1127], "docker": 1098, "autoconf": 1098, "71": 1098, "zoom": 1100, "rememb": 1100, "reloc": 1101, "independ": 1101, "pic": 1101, "versu": 1101, "larger": [1102, 1110], "def": 1103, "reach": 1103, "theoret": 1103, "nonloc": 1103, "hood": 1105, "monkeypatch": 1105, "contextlib": 1105, "contextmanag": 1105, "involv": 1105, "prefixprint": 1105, "sugar": 1106, "functool": [1106, 1127], "rais": 1107, "regardless": 1107, "form": 1115, "daemon": 1116, "mother": [1118, 1275], "abc": 1120, "late": 1120, "abtract": 1120, "salari": 1124, "introspect": 1124, "isinst": 1124, "issubclass": 1124, "classmethod": 1125, "staticmethod": 1125, "_make": 1126, "_asdict": 1126, "dunder": 1127, "incompat": 1127, "lotsa": 1127, "magic": 1127, "__gt__": 1127, "__lt__": 1127, "total_ord": 1127, "them": 1127, "readonli": 1128, "repr": 1129, "__repr__": 1129, "suppli": 1130, "ultim": 1130, "guido": 1133, "van": 1133, "rossum": 1133, "bang": 1135, "she": 1135, "doze": 1135, "registri": 1135, "indent": 1136, "cosmet": 1137, "rudimentari": 1137, "python2": 1139, "unicod": 1139, "esoter": 1143, "delimit": 1152, "interv": 1160, "axi": 1163, "setuptool": 1164, "manifest": 1164, "publish": [1164, 1203, 1224], "usernam": 1174, "strategi": 1187, "revert": 1189, "justifi": 1190, "activ": 1196, "dictread": [1198, 1199, 1216], "cp1252": [1198, 1200], "reader": [1200, 1201, 1216], "nohead": 1200, "both": 1206, "david": 1208, "beazlei": 1208, "raymond": 1208, "hetting": 1208, "mean": 1210, "linear": [1211, 1213, 1214], "regress": [1211, 1213, 1214], "weather": 1212, "ndarrai": 1213, "plot": 1213, "splice": 1213, "mankind": 1215, "god": 1215, "insan": 1216, "scsv": 1216, "dbapi": [1217, 1219, 1220], "transact": 1217, "postgresql": 1219, "postgr": 1219, "cursor": 1220, "queri": 1220, "ascii": 1221, "iso": 1221, "latin": 1221, "8859": 1221, "lieb": 1221, "gr\u00fc\u00dfe": 1221, "j\u00f6rg": 1221, "\u795d\u597d": 1221, "utf": 1221, "decod": 1221, "broker": 1224, "payload": 1224, "bitmap": 1227, "neat": 1227, "iloc": [1228, 1230], "Then": 1228, "inplac": 1230, "loc": [1230, 1231], "hiccup": 1231, "inclus": 1231, "lowercas": 1232, "email": 1232, "normalized_email": 1232, "ing": 1232, "elementtre": 1233, "etre": 1233, "sax": 1233, "dom": 1233, "invoc": 1236, "subcommand": 1236, "upload": 1239, "pythonpath": 1241, "mark": 1241, "expect": [1241, 1250], "recogn": 1242, "meat": 1242, "freez": 1243, "recreat": 1243, "fatal": 1248, "assert_": 1248, "zielpublikum": [1256, 1257, 1264, 1276], "kursinhalt": [1256, 1257, 1264, 1275, 1276], "vorkenntniss": [1256, 1257, 1264, 1275, 1276], "three": 1258, "outlin": [1259, 1261, 1262, 1267, 1268, 1269, 1271, 1272, 1277, 1278, 1281, 1282], "gentl": 1267, "power": 1273, "prior": 1273, "product": 1279}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Curriculum Vitae": [[0, "curriculum-vitae"]], "Myself: Contact, Impressum, \u2026": [[1, "myself-contact-impressum"]], "Contact": [[1, "contact"]], "Further Information": [[1, "further-information"], [26, "further-information"], [182, "further-information"], [251, "further-information"], [252, "further-information"], [274, "further-information"], [395, "further-information"], [404, "further-information"], [831, "further-information"]], "Projekte": [[2, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[2, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[2, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[3, "skills"]], "This Site": [[4, "this-site"]], "License: GPLv3": [[4, "license-gplv3"]], "Github": [[4, "github"], [404, "github"]], "Sphinx": [[4, "sphinx"], [181, "sphinx"]], "Installation Instructions": [[4, "installation-instructions"]], "pip and venv": [[4, null]], "Work in Progress": [[4, "work-in-progress"], [175, "work-in-progress"]], "More": [[4, "more"], [783, "more"]], "OpenTraining": [[5, "opentraining"]], "Miscellaneous": [[6, "miscellaneous"], [170, "miscellaneous"], [211, "miscellaneous"], [231, "miscellaneous"], [295, "miscellaneous"], [296, "miscellaneous"], [316, "miscellaneous"], [330, "miscellaneous"], [341, "miscellaneous"], [342, "miscellaneous"], [345, "miscellaneous"], [352, "miscellaneous"], [355, "miscellaneous"], [374, "miscellaneous"], [626, "miscellaneous"], [626, "id1"], [808, "miscellaneous"], [1035, "miscellaneous"], [1057, "miscellaneous"], [1274, "miscellaneous"]], "Screencasts": [[7, "screencasts"]], "Topics to be Written": [[8, "topics-to-be-written"]], "New Topics to Write": [[8, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[9, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[10, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[10, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[10, "allgemeines"]], "2.1 Projektname": [[10, "projektname"]], "2.2 Projekt-Untertitel": [[10, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[10, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[10, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[10, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[10, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[10, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[10, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[10, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[10, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[10, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[10, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[10, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[10, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[10, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[10, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[10, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[10, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[10, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[10, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[10, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[10, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[10, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[10, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[10, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[10, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[10, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[10, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[10, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[10, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[10, "termine-projektstart-projektende"]], "Projektstart": [[10, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[10, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[10, "projektkosten"]], "Personalkosten": [[10, "personalkosten"]], "Sonstige Kosten": [[10, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[10, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[10, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[10, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[10, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[10, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[10, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[10, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[10, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[10, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[10, "datenschutz"]], "Video Screenplay": [[11, "video-screenplay"]], "Contents": [[11, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [215, null], [219, "contents"], [220, null], [509, "contents"], [631, null], [634, null], [640, null], [643, null], [723, "id1"], [859, "id1"], [880, "id1"], [899, "id1"], [905, "id1"], [909, "id1"], [926, "id1"], [933, "id1"], [935, "id1"], [1009, "id1"], [1018, "id1"], [1034, "id1"], [1036, "id1"], [1038, "id1"], [1062, "id1"], [1073, null], [1076, null], [1091, "id1"], [1111, null], [1167, "id1"], [1171, "id1"], [1175, "id1"], [1181, "id1"], [1195, "id1"], [1202, "id1"], [1248, null], [1250, null], [1253, null], [1258, "id2"]], "The Problem And Me": [[11, "the-problem-and-me"]], "Open Source Training Material": [[11, "open-source-training-material"]], "Walk-Through": [[11, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[12, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[13, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[14, "use-cases"]], "Trainer": [[14, "trainer"]], "Editor": [[14, "editor"]], "End User (Training Audience)": [[14, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[15, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[16, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[17, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[18, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[18, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[18, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[19, "emoji-codes-sphinxemoji"]], "Setup": [[19, "setup"], [139, "setup"], [303, "setup"], [310, "setup"], [313, "setup"], [323, "setup"], [324, "setup"], [328, "setup"], [329, "setup"], [330, "setup"], [351, "setup"], [352, "setup"], [357, "setup"], [358, "setup"], [363, "setup"], [367, "setup"], [368, "setup"], [928, "setup"], [1132, "setup"], [1243, "setup"]], "Most Used Here In This Site": [[19, "most-used-here-in-this-site"]], "All Codes": [[19, "all-codes"]], "Recipes": [[20, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[21, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[22, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[23, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[24, "layout-test-page"]], "Admonitions": [[24, "admonitions"]], "Admonition": [[24, "admonition"]], "This is an .. admonition::": [[24, null]], "Tip": [[24, "tip"]], "Note": [[24, "note"]], "Hint": [[24, "hint"]], "Important": [[24, "important"]], "Attention": [[24, "attention"]], "Caution": [[24, "caution"]], "Error": [[24, "error"]], "Danger": [[24, "danger"]], "Sidebar": [[24, "sidebar"]], "Blech Sidebar Title Blah": [[24, null]], "Sidebar \u201cKursdaten\u201d": [[24, "sidebar-kursdaten"]], "Kursdaten": [[24, null]], "Local Content": [[24, "local-content"]], "Local Heading 1": [[24, "local-heading-1"], [24, "id3"]], "Local Heading 1.1": [[24, "local-heading-1-1"], [24, "id4"]], "Local Heading 1.2": [[24, "local-heading-1-2"], [24, "id5"]], "Local Heading 2": [[24, "local-heading-2"], [24, "id6"]], "Sidebar with Local Content": [[24, "sidebar-with-local-content"]], "Bleh Content Blah": [[24, null]], "To Do": [[24, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[25, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[25, "id1"]], "All": [[25, "id2"]], "reStructuredText Cheat Sheet": [[26, "restructuredtext-cheat-sheet"]], "Links": [[26, "links"], [171, "links"], [177, "links"], [212, "Links"], [223, "links"], [228, "links"], [230, "links"], [232, "links"], [235, "links"], [242, "links"], [243, "links"], [245, "links"], [254, "links"], [258, "links"], [261, "links"], [264, "links"], [270, "links"], [277, "links"], [288, "links"], [291, "links"], [324, "links"], [330, "links"], [409, "links"], [486, "links"], [767, "links"], [770, "links"], [809, "links"], [818, "links"], [824, "links"], [843, "links"], [848, "links"], [870, "links"], [891, "links"], [930, null], [937, "links"], [963, "links"], [1045, "links"], [1132, null], [1163, null], [1164, "links"], [1207, "links"], [1224, "links"], [1226, "links"], [1227, "links"], [1228, "links"], [1230, "links"], [1231, "links"], [1232, "links"], [1244, "links"], [162, "links"]], "Local Documents": [[26, "local-documents"]], "External Links": [[26, "external-links"]], "Section References": [[26, "section-references"]], "Section That We Refer To": [[26, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[26, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[26, "footnotes"]], "Sphinxish": [[27, "sphinxish"]], "Jupyter Notebooks": [[27, "jupyter-notebooks"]], "Running Sphinx From Source": [[27, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[28, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[28, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[29, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[29, "initial-structure"]], "Snippets": [[29, null], [29, null], [29, null], [29, null], [29, null], [29, null], [31, null], [31, null], [37, null], [37, null]], "User": [[29, "user"]], "UserDB": [[29, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[29, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[29, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[29, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[29, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[29, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[30, "clean-code-messages-from-the-book"]], "Survey": [[30, null], [510, null]], "Names": [[30, "names"]], "Functions": [[30, "functions"], [244, "Functions"], [247, "Functions"], [260, "Functions"], [271, "Functions"], [273, "Functions"], [279, "Functions"], [283, "Functions"], [288, "functions"], [304, "Functions"], [311, "Functions"], [325, "Functions"], [341, "functions"], [345, "functions"], [351, "functions"], [352, "functions"], [353, "Functions"], [357, "functions"], [358, "functions"], [359, "Functions"], [363, "functions"], [364, "functions"], [365, "Functions"], [367, "functions"], [368, "functions"], [369, "Functions"], [436, "functions"], [436, "id1"], [1151, "functions"]], "Comments": [[30, "comments"]], "Formatting": [[30, "formatting"], [359, "Formatting"]], "Objects and Data Structures": [[30, "objects-and-data-structures"]], "Error Handling": [[30, "error-handling"], [1017, "error-handling"]], "Boundaries": [[30, "boundaries"]], "Unit Tests": [[30, "unit-tests"], [377, "unit-tests"], [380, "unit-tests"], [607, "unit-tests"]], "Classes": [[30, "classes"], [250, "Classes"], [335, "classes"]], "Live Hacking: Switch To googletest": [[31, "live-hacking-switch-to-googletest"]], "Git Submodule": [[31, "git-submodule"]], "Establish Tests: Demo": [[31, "establish-tests-demo"]], "Straightforward main() Conversion": [[31, "straightforward-main-conversion"]], "Fix Shortcomings": [[31, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[32, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[32, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[32, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[32, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[32, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[32, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[32, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[32, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[32, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[32, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[32, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[33, "userdb-find-crashes-if-user-not-found"]], "State": [[33, "state"]], "Bugs": [[34, "bugs"], [40, "bugs"]], "Existing Files Are Overwritten": [[35, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[36, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[37, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[37, "write-csv-test"]], "Write CSV: Frontend Program": [[37, "write-csv-frontend-program"], [37, "id1"]], "Read CSV: Test": [[37, "read-csv-test"]], "Features": [[38, "features"]], "Search By Other Indexes": [[39, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[40, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[40, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[41, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[42, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[42, "backingstore"]], "Refactoring": [[43, "refactoring"], [608, "refactoring"], [992, "refactoring"]], "Load From BackingStore in Constructor": [[44, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[45, "userdb-read-write-bool-really"]], "GLT 2023: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[46, "glt-2023-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[47, "installation-notes"]], "libgpiod": [[47, "libgpiod"]], "Fedora: Prepare Tarballs": [[47, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[47, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[48, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[48, "biography"], [50, "biography"], [54, "biography"]], "Abstract": [[48, "abstract"], [50, "abstract"], [54, "abstract"], [172, "abstract"]], "Description": [[48, "description"], [50, "description"], [54, "description"], [172, "description"], [561, "description"], [713, "description"], [721, "description"], [725, "description"], [727, "description"], [728, "description"], [729, "description"], [730, "description"], [731, "description"], [732, "description"], [733, "description"], [734, "description"], [736, "description"], [737, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[49, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[49, "setup-before-presentation"]], "Starting Point": [[49, "starting-point"], [812, "starting-point"]], "Greeting": [[49, "greeting"]], "Multiple Background Threads": [[49, "multiple-background-threads"]], "Enter asyncio": [[49, "enter-asyncio"]], "Character Device Based GPIO": [[49, "character-device-based-gpio"]], "GPIO Device": [[49, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[49, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[49, "entire-matrix-on-off"]], "Bringing All Together": [[49, "bringing-all-together"]], "Modularize": [[49, "modularize"]], "Play A Bit: Blink Entire Rows": [[49, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[49, "coroutines"]], "Not Enough: sequence()": [[49, "not-enough-sequence"]], "Looping: forever()": [[49, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[49, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[49, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[49, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[49, "program-finally"]], "Playground: cycle()": [[49, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[49, "fast-forward-any-and-cancellation"]], "Playground: on()": [[49, "playground-on"]], "Goodbye": [[49, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[50, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking": [[51, "glt-2024-python-asyncio-libgpiod-and-pointless-blinking"]], "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking": [[52, "talk-script-python-asyncio-libgpiod-and-pointless-blinking"]], "gpiod Intro": [[52, "gpiod-intro"]], "asyncio Intro": [[52, "asyncio-intro"]], "And blink?": [[52, "and-blink"], [52, "id1"]], "gpiod, And Interrupts": [[52, "gpiod-and-interrupts"]], "gpiod, Interrupts, and asyncio": [[52, "gpiod-interrupts-and-asyncio"]], "textual": [[52, "textual"]], "python-sdbus": [[52, "python-sdbus"]], "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking": [[53, "slide-material-python-asyncio-libgpiod-and-pointless-blinking"]], "blink": [[53, "blink"]], "gpiod": [[53, "gpiod"]], "asyncio": [[53, "asyncio"], [1161, "asyncio"]], "Textual": [[53, "textual"]], "Python SDbus": [[53, "python-sdbus"]], "Python 3.12 Installation (for TaskGroup)": [[53, "python-3-12-installation-for-taskgroup"]], "Submission: Python, asyncio, libgpiod, and Pointless Blinking": [[54, "submission-python-asyncio-libgpiod-and-pointless-blinking"]], "Pointless Blinking": [[55, "pointless-blinking"]], "Kajak Auf Der Donau": [[56, "kajak-auf-der-donau"]], "Passau - Kraftwerk Jochenstein (5)": [[56, "passau-kraftwerk-jochenstein-5"]], "Kraftwerk Jochenstein - Engelhartszell (gleich nachher)": [[56, "kraftwerk-jochenstein-engelhartszell-gleich-nachher"]], "Engelhartszell - Schl\u00f6gen (4,5)": [[56, "engelhartszell-schlogen-4-5"]], "Schl\u00f6gen - Kraftwerk Aschach (4)": [[56, "schlogen-kraftwerk-aschach-4"]], "Kraftwerk Aschach - Kraftwerk Ottensheim (3)": [[56, "kraftwerk-aschach-kraftwerk-ottensheim-3"]], "Kraftwerk Ottensheim - Linz Hauptplatz (2)": [[56, "kraftwerk-ottensheim-linz-hauptplatz-2"]], "Linz Hauptplatz - Traunm\u00fcndung - Kraftwerk Abwinden Asten (3.2)": [[56, "linz-hauptplatz-traunmundung-kraftwerk-abwinden-asten-3-2"]], "Kraftwerk Abwinden Asten  - Ennsm\u00fcndung - Kraftwerk Wallsee Mitterkirchen (5.5)": [[56, "kraftwerk-abwinden-asten-ennsmundung-kraftwerk-wallsee-mitterkirchen-5-5"]], "Kraftwerk Wallsee Mitterkirchen - Grein (3,5)": [[56, "kraftwerk-wallsee-mitterkirchen-grein-3-5"]], "Grein - Kraftwerk Ybbs Persenbeug (4.5)": [[56, "grein-kraftwerk-ybbs-persenbeug-4-5"]], "Kraftwerk Ybbs Persenbeug - Kraftwerk  Melk (4.5)": [[56, "kraftwerk-ybbs-persenbeug-kraftwerk-melk-4-5"]], "Kraftwerk  Melk - Wachau Donauinsel (7)": [[56, "kraftwerk-melk-wachau-donauinsel-7"]], "Wachau Donauinsel - Kraftwerk  Altenw\u00f6rth (7)": [[56, "wachau-donauinsel-kraftwerk-altenworth-7"]], "Kraftwerk  Altenw\u00f6rth - Tulln (4.5)": [[56, "kraftwerk-altenworth-tulln-4-5"]], "Tulln - Kraftwerk Greifenstein (3.5)": [[56, "tulln-kraftwerk-greifenstein-3-5"]], "C++": [[57, "c"], [99, "c"], [100, "c"], [738, "c"]], "C++: Building with CMake": [[58, "c-building-with-cmake"]], "C++: Interfaces": [[59, "c-interfaces"]], "C++: OO Basics": [[60, "c-oo-basics"]], "C++: Unit Testing": [[61, "c-unit-testing"]], "Embedded Computing 1": [[62, "embedded-computing-1"], [67, "embedded-computing-1"]], "Current Curriculum": [[62, "current-curriculum"], [63, "current-curriculum"]], "Embedded Computing 2": [[63, "embedded-computing-2"], [67, "embedded-computing-2"]], "EX: Race Conditions": [[64, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[65, "ex-avoiding-race-condition"]], "Goals": [[65, "goals"], [71, "goals"], [72, "goals"], [73, "goals"], [74, "goals"], [76, "goals"], [77, "goals"], [78, "goals"], [80, "goals"]], "Outcome": [[65, "outcome"], [71, "outcome"], [72, "outcome"], [73, "outcome"], [74, "outcome"], [230, "outcome"]], "Git Introduction": [[66, "git-introduction"]], "Embedded Computing (STECE-2019)": [[67, "embedded-computing-stece-2019"]], "Overview": [[67, "overview"], [782, "overview"], [784, "overview"], [786, "overview"], [787, "overview"], [788, "overview"], [789, "overview"], [797, "overview"], [812, "overview"], [822, "overview"], [825, "overview"], [844, "overview"], [855, "overview"], [867, "overview"], [925, "overview"], [934, "overview"], [936, "overview"], [937, "overview"], [937, "id1"], [1006, "overview"], [1041, "overview"], [1050, "overview"]], "Knowledge Transferred": [[67, "knowledge-transferred"]], "Course Setup": [[67, "course-setup"]], "Details": [[67, "details"], [421, "details"]], "Linux": [[68, "linux"], [938, "linux"]], "Introduction to Linux and Unix": [[69, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[70, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[71, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[72, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[73, "ex-led-temperature-display"]], "Hardware": [[73, "hardware"], [74, "hardware"]], "EX: Temperature Sensors": [[74, "ex-temperature-sensors"], [81, "ex-temperature-sensors"]], "GPIO": [[75, "gpio"]], "sysfs Interface": [[75, "sysfs-interface"]], "gpiod Interface": [[75, "gpiod-interface"]], "Multithreading": [[76, "multithreading"], [209, "multithreading"], [269, "multithreading"], [295, "multithreading"], [296, "multithreading"], [298, "multithreading"], [341, "multithreading"], [342, "multithreading"], [345, "multithreading"], [355, "multithreading"], [374, "multithreading"], [383, "multithreading"], [412, "multithreading"], [419, "multithreading"], [1080, "multithreading"], [1117, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[77, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[78, "communication-waiting-for-something"]], "Python Basics": [[79, "python-basics"]], "EX: Averaging Sensor, Display": [[80, "ex-averaging-sensor-display"]], "Simple Web Programming": [[82, "simple-web-programming"]], "Sensors Web Pages": [[83, "sensors-web-pages"]], "Python": [[84, "python"], [404, "python"], [409, "python"]], "Embedded Computing STECE-2020)": [[85, "embedded-computing-stece-2020"]], "SS2022": [[86, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[86, "block-1-linux-and-working-with-remote-embedded-devices"], [113, "block-1-linux-and-working-with-remote-embedded-devices"], [149, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[86, "block-2-c-on-linux-local-and-cross-development"], [113, "block-2-c-on-linux-local-and-cross-development"], [149, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[86, "block-3-c"], [113, "block-3-c"], [149, "block-3-c"]], "2022-03-08": [[87, "id1"]], "Topics": [[87, "topics"], [88, "topics"], [90, "topics"], [91, "topics"], [92, "topics"], [93, "topics"], [223, "topics"], [223, "id2"], [251, "topics"], [288, "topics"], [291, null], [387, "topics"], [408, "topics"], [412, "topics"], [441, "topics"], [456, "topics"], [465, "topics"], [472, "topics"], [478, "topics"], [482, "topics"], [485, "topics"], [489, "topics"], [498, "topics"], [502, "topics"], [507, "topics"], [508, "topics"], [523, "topics"], [648, "topics"], [656, "topics"], [670, "topics"], [673, "topics"], [676, "topics"], [692, "topics"], [698, "topics"], [702, "topics"], [711, "topics"], [716, "topics"], [718, "topics"], [719, "topics"], [738, "topics"], [741, "topics"], [746, "topics"], [752, "topics"], [754, "topics"], [758, "topics"], [767, "topics"], [769, "topics"], [792, "topics"], [796, "topics"], [798, "topics"], [799, "topics"], [802, "topics"], [811, "topics"], [823, "topics"], [829, "topics"], [832, "topics"], [836, "topics"], [842, "topics"], [854, "topics"], [860, "topics"], [865, "topics"], [872, "topics"], [886, "topics"], [911, "topics"], [923, "topics"], [1011, "topics"], [1029, null], [1031, null], [1031, null], [1059, "topics"], [1065, "topics"], [1087, "topics"], [1094, "topics"], [1095, "topics"], [1109, "topics"], [1115, null], [1123, "topics"], [1131, "topics"], [1207, "topics"], [1218, "topics"], [1223, "topics"], [1229, "topics"], [1235, "topics"], [1240, "topics"], [1246, "topics"]], "Homework": [[87, "homework"], [88, "homework"], [90, "homework"], [93, "homework"], [136, "homework"], [154, "homework"], [159, "homework"]], "2022-03-10": [[88, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[89, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[89, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-index"]], "From  Exercises: The ls Command": [[89, "from-trainings-material-soup-linux-basics-shell-exercises-ls-index"]], "2022-03-21": [[90, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[91, "ku"]], "2022-03-28": [[92, "id1"]], "2022-04-01": [[93, "id1"]], "SS2022: Logs": [[94, "ss2022-logs"]], "WS2022": [[95, "ws2022"]], "Plan: Evolution": [[95, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[96, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[96, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[96, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[96, "question-3-memory-leak"]], "Question 4: std::vector": [[96, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[97, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[97, "cross-development"], [141, "cross-development"], [142, "cross-development"], [307, "cross-development"], [380, "cross-development"], [1086, "cross-development"], [1087, "cross-development"]], "C++, OO": [[97, "c-oo"]], "Lab Exam 2023-01-17": [[98, "lab-exam-2023-01-17"]], "Project Setup": [[98, "project-setup"], [606, "project-setup"], [1196, "project-setup"]], "Exercises": [[98, "exercises"], [168, "exercises"], [211, "exercises"], [243, "exercises"], [253, "exercises"], [253, "id1"], [253, "id3"], [311, "Exercises"], [316, "exercises"], [335, "exercises"], [335, "id1"], [338, "exercises"], [342, "exercises"], [372, "exercises"], [372, "id1"], [381, "exercises"], [381, "id1"], [381, "id2"], [559, "exercises"], [561, "exercises"], [568, "exercises"], [596, "exercises"], [613, "exercises"], [615, "exercises"], [656, "exercises"], [670, "exercises"], [738, "exercises"], [741, "exercises"], [796, "exercises"], [854, "exercises"], [860, "exercises"], [865, "exercises"], [886, "exercises"], [911, "exercises"], [1094, "exercises"], [1123, "exercises"], [1175, "exercises"]], "Exam Submission": [[98, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[99, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[99, "unix-linux-concepts"], [100, "unix-linux-concepts"]], "Toolchain": [[99, "toolchain"], [100, "toolchain"], [146, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[100, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[101, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[102, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[103, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[103, "question-1"], [106, "question-1"]], "Question 1.1": [[103, "question-1-1"]], "Question 1.2": [[103, "question-1-2"]], "Question 2": [[103, "question-2"], [106, "question-2"]], "Question 2.1": [[103, "question-2-1"]], "Question 2.2 (Why?)": [[103, "question-2-2-why"]], "Question 3": [[103, "question-3"]], "Exam WS2023/2024": [[104, "exam-ws2023-2024"]], "All Questions": [[104, "all-questions"]], "All questions": [[104, null]], "Exams": [[104, "exams"], [112, "exams"]], "Questions 2024": [[105, "questions-2024"]], "const Objects": [[106, "const-objects"]], "Parameter Passing": [[107, "parameter-passing"]], "Question 1: Which One Is Better?": [[107, "question-1-which-one-is-better"]], "Question2: Why?": [[107, "question2-why"]], "SOLID: Hysteresis With Display": [[108, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[109, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[110, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[110, "program-output-version-1"]], "Program Output, Version 2": [[110, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[111, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[111, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[111, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[111, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[111, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[111, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[111, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[111, "push-into-fork-on-github"]], "Embedded Computing (STECE-2021)": [[112, "embedded-computing-stece-2021"]], "Two Semesters": [[112, "two-semesters"]], "Supporting Material": [[112, "supporting-material"]], "SS2023": [[113, "ss2023"]], "Finish: Written Exam": [[113, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[114, "done-boiling-pot-the-beginning"]], "Standup Records": [[114, "standup-records"], [115, "standup-records"], [116, "standup-records"], [117, "standup-records"], [118, "standup-records"], [122, "standup-records"], [126, "standup-records"], [130, "standup-records"]], "2023-11-20": [[114, "id1"], [118, "id1"], [126, "id1"], [130, "id1"]], "2023-12-14": [[114, "id2"], [115, "id1"], [118, "id2"], [126, "id2"]], "Requirements": [[114, "requirements"], [115, "requirements"], [116, "requirements"], [117, "requirements"], [118, "requirements"], [119, "requirements"], [120, "requirements"], [121, "requirements"], [122, "requirements"], [124, "requirements"], [126, "requirements"], [130, "requirements"], [548, "requirements"], [572, "requirements"], [603, "requirements"], [724, "requirements"]], "Implementation": [[114, "implementation"], [118, "implementation"], [119, "implementation"], [121, "implementation"], [124, "implementation"], [126, "implementation"], [130, "implementation"], [166, "implementation"], [607, "implementation"]], "Testing": [[114, "testing"], [118, "testing"], [119, "testing"], [121, "testing"], [124, "testing"], [126, "testing"], [130, "testing"], [309, "testing"]], "Future (Not Part Of This Development Cycle)": [[114, "future-not-part-of-this-development-cycle"], [118, "future-not-part-of-this-development-cycle"], [119, "future-not-part-of-this-development-cycle"], [121, "future-not-part-of-this-development-cycle"], [126, "future-not-part-of-this-development-cycle"], [130, "future-not-part-of-this-development-cycle"]], "Boiling Pot: Basic Integration": [[115, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[116, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[117, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[118, "done-data-logger"]], "Data Logger: CSV Sink": [[119, "data-logger-csv-sink"]], "Column name configuration": [[119, "column-name-configuration"]], "output()": [[119, "output"]], "Data Logger: Integration": [[120, "data-logger-integration"]], "Data Logger: MQTT Sink": [[121, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[121, "mqtt-implementation-mosquitto"]], "Installation": [[121, "installation"], [423, "installation"], [1016, "installation"], [1163, "installation"], [1224, "installation"], [1248, "installation"]], "Wrapper": [[121, "wrapper"]], "Display Interface/Infrastructure": [[122, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[122, "new-interface-percentagedisplay"]], "Existing Implementations": [[122, "existing-implementations"]], "Composite Display": [[122, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[122, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[123, "ws2023-24-group-project-tasks"]], "Tasks": [[123, "tasks"], [131, "tasks"], [1067, "tasks"], [162, "tasks"]], "Datalogger": [[123, "datalogger"], [131, "datalogger"]], "Boiling Pot": [[123, "boiling-pot"], [131, "boiling-pot"]], "Peripherals": [[123, "peripherals"], [131, "peripherals"]], "Client": [[123, "client"], [1224, "client"]], "libgpiod Switch": [[124, "libgpiod-switch"]], "Python MQTT Subscriber": [[125, "python-mqtt-subscriber"]], "Notes": [[125, "notes"], [548, "notes"]], "Temperature Display: LED Via A PWM Controller": [[126, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[127, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[128, "done-onewire-sensor"]], "(DONE) Switch Interface": [[129, "done-switch-interface"]], "SysFS GPIO Switch": [[130, "sysfs-gpio-switch"], [131, "sysfs-gpio-switch"]], "WS2023/24": [[131, "ws2023-24"]], "2023-10-05 (6 VO)": [[131, "vo"]], "OO: Recap": [[131, "oo-recap"]], "Plan \ud83d\udcaa": [[131, "plan-muscle"]], "OO: Polymorphism": [[131, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[131, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[131, "tasks-first-round"]], "2023-11-03 (6 VO)": [[131, "id1"]], "Organizational": [[131, "organizational"]], "OO: Design?": [[131, "oo-design"]], "Project": [[131, "project"], [131, "id3"], [131, "id5"], [131, "id7"], [131, "id9"], [131, "id11"], [131, "id13"], [131, "id15"], [131, "id17"], [211, "project"]], "Hardware Overview": [[131, "hardware-overview"]], "2023-11-09 (3 VO)": [[131, "id2"]], "2023-11-10 (3 VO)": [[131, "id4"]], "2023-11-17 (3 VO)": [[131, "id6"]], "OO, And Software Development At Large": [[131, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[131, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[131, "id8"]], "Container Templates (std::map)": [[131, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[131, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[131, "datalogger-pull-request"]], "Boiling Pot, Switches": [[131, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[131, "id10"]], "Structure": [[131, "structure"], [591, "structure"]], "Renames": [[131, "renames"]], "2023-12-14 (6 VO)": [[131, "id12"]], "2024-01-08 (6 VO)": [[131, "id14"]], "2024-01-11 (6 VO)": [[131, "id16"]], "2024-02-02 (Exam)": [[131, "exam"]], "Relevant Topics": [[131, "relevant-topics"]], "A Sample Exam": [[131, "a-sample-exam"]], "Embedded Computing (STECE-2022)": [[132, "embedded-computing-stece-2022"]], "Gl\u00fchwein Trinken?": [[133, "gluhwein-trinken"]], "2024-03-04(6): Introduction": [[134, "introduction"]], "Quiz": [[134, "quiz"], [154, "quiz"]], "Intro: Course Contents": [[134, "intro-course-contents"], [154, "intro-course-contents"]], "Homework: WSL Installation": [[134, "homework-wsl-installation"]], "2024-03-21(6): OS Concepts, Shell, SSH": [[135, "os-concepts-shell-ssh"]], "Intro: Course Contents (cont\u2019d)": [[135, "intro-course-contents-cont-d"]], "OS Concepts": [[135, "os-concepts"], [156, "os-concepts"]], "Shell Usage": [[135, "shell-usage"], [156, "shell-usage"]], "SSH Setup": [[135, "ssh-setup"], [156, "ssh-setup"]], "2024-04-14(6): SSH, Permissions (Incl. Exercise)": [[136, "ssh-permissions-incl-exercise"]], "SSH: Secure Shell": [[136, "ssh-secure-shell"], [328, "ssh-secure-shell"], [1011, "ssh-secure-shell"]], "File System Permissions": [[136, "file-system-permissions"], [328, "file-system-permissions"], [328, "id2"], [372, "file-system-permissions"], [886, "file-system-permissions"]], "2024-04-17(6): Toolchain, Makefiles, CMake": [[137, "toolchain-makefiles-cmake"]], "Recap, Outlook": [[137, "recap-outlook"]], "Toolchain Intro, And Basic Makefiles": [[137, "toolchain-intro-and-basic-makefiles"]], "CMake, Native Build": [[137, "cmake-native-build"], [138, "cmake-native-build"]], "2024-04-22(6): CMake, Systems Programming/File-IO, Homework": [[138, "cmake-systems-programming-file-io-homework"]], "Systems Programming Basics: File I/O": [[138, "systems-programming-basics-file-i-o"]], "Homework (until next time - 2024-05-06)": [[138, "homework-until-next-time-2024-05-06"]], "Exercise: Reading A Sensor (Driven By Tests)": [[139, "exercise-reading-a-sensor-driven-by-tests"], [140, "exercise-reading-a-sensor-driven-by-tests"]], "exercises/02-sensor: Exercise Structure": [[139, "exercises-02-sensor-exercise-structure"]], "tests/suite-sensor.cpp: Unit Tests (Requirements Definition)": [[139, "tests-suite-sensor-cpp-unit-tests-requirements-definition"]], "lib/sensor.c: Sensor Implementation": [[139, "lib-sensor-c-sensor-implementation"]], "See also": [[139, null], [154, null], [155, null], [157, null], [158, null], [160, null], [161, null], [161, null], [382, null], [382, null], [382, null], [382, null], [382, null], [382, null], [382, null], [384, null], [384, null], [384, null], [384, null], [386, null], [386, null], [386, null], [386, null], [386, null], [477, null], [518, null], [519, null], [519, null], [520, null], [521, null], [524, null], [524, null], [525, null], [525, null], [528, null], [528, null], [528, null], [529, null], [532, null], [532, null], [532, null], [532, null], [532, null], [534, null], [537, null], [654, null], [655, null], [658, null], [658, null], [659, null], [660, null], [720, null], [724, null], [724, null], [739, null], [740, null], [741, null], [742, null], [743, null], [744, null], [744, null], [747, null], [747, null], [762, null], [763, null], [764, null], [764, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [801, null], [821, null], [821, null], [824, null], [824, null], [825, null], [839, null], [839, null], [839, null], [839, null], [848, null], [848, null], [850, null], [861, null], [867, null], [867, null], [868, null], [868, null], [868, null], [873, null], [874, null], [929, null], [936, null], [1025, null], [1042, null], [1043, null], [1043, null], [1046, null], [1046, null], [1047, null], [1061, null], [1064, null], [1069, null], [1071, null], [1084, null], [1086, null], [1151, null]], "Documentation": [[139, null], [149, null], [164, null], [375, null], [375, null], [513, null], [513, null], [518, null], [518, null], [519, null], [519, null], [519, null], [520, null], [520, null], [521, null], [521, null], [525, null], [525, null], [525, null], [525, null], [526, null], [526, null], [526, null], [526, null], [526, null], [526, null], [526, null], [526, null], [527, null], [528, null], [528, null], [528, null], [529, null], [529, null], [529, null], [529, null], [529, null], [529, null], [532, null], [532, null], [532, null], [532, null], [532, null], [533, null], [534, null], [536, null], [687, null], [688, null], [689, null], [690, null], [691, null], [693, null], [694, null], [695, null], [696, null], [699, null], [700, null], [703, null], [704, null], [709, null], [720, null], [720, null], [720, null], [720, null], [720, null], [720, null], [720, null], [724, null], [724, null], [744, null], [747, null], [748, null], [748, null], [748, null], [748, null], [748, null], [748, null], [757, null], [761, null], [765, null], [765, null], [766, null], [770, null], [821, null], [821, null], [824, null], [824, null], [824, null], [839, null], [850, null], [857, null], [858, null], [861, null], [866, null], [866, null], [873, null], [874, null], [875, null], [875, null], [875, null], [876, null], [891, null], [891, null], [891, null], [892, null], [893, null], [894, null], [910, null], [910, null], [910, null], [913, null], [914, null], [934, null], [948, null], [948, null], [964, null], [966, "documentation"], [966, null], [970, "documentation"], [972, null], [972, null], [972, null], [998, "documentation"], [1001, "documentation"], [1015, null], [1017, null], [1019, null], [1021, null], [1022, null], [1023, null], [1025, null], [1025, null], [1025, null], [1025, null], [1025, null], [1025, null], [1028, null], [1029, null], [1030, null], [1031, null], [1031, null], [1032, null], [1035, null], [1035, null], [1035, null], [1035, null], [1041, null], [1041, null], [1041, null], [1041, null], [1041, null], [1041, null], [1042, null], [1043, null], [1047, null], [1047, null], [1047, null], [1049, null], [1083, null], [1083, null], [1083, null], [1084, null], [1100, null], [1160, null], [1161, null], [1170, null], [1248, "documentation"]], "bin/read-sensor.c: Sensor Reading Program (But Wait!)": [[139, "bin-read-sensor-c-sensor-reading-program-but-wait"]], "Submission": [[139, "submission"], [166, "submission"], [1026, "submission"]], "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development": [[140, "homework-recap-exercise-reading-sensor-test-driven-development"]], "Homework, Recap": [[140, "homework-recap"]], "2024-05-13(3): Homework Recap, Cross Development Intro": [[141, "homework-recap-cross-development-intro"]], "Homework Recap": [[141, "homework-recap"], [160, "homework-recap"]], "2024-05-27(6): Cross Development, Toolchain Installation": [[142, "cross-development-toolchain-installation"]], "Exercise: Install Cross Toolchain": [[142, "exercise-install-cross-toolchain"]], "C++ Intro: Livecoding Session": [[142, "c-intro-livecoding-session"]], "User\u2019s View": [[142, "user-s-view"]], "Exercise: Parse Lines From /etc/passwd": [[142, "exercise-parse-lines-from-etc-passwd"]], "2024-06-17(6): Container Templates": [[143, "container-templates"]], "std::vector<>, std::map<>": [[143, "std-vector-std-map"]], "auto": [[143, "auto"]], "2024-06-19(6): Sorting And Searching": [[144, "sorting-and-searching"]], "Sorting And Searching": [[144, "id1"]], "2024-06-20(3): Lab Exercise": [[145, "lab-exercise"]], "SS2024: Exam 2024-06-28 (Handout)": [[146, "ss2024-exam-2024-06-28-handout"]], "Linux: OS Concepts": [[146, "linux-os-concepts"]], "Processes, Scheduling, and Virtual Memory": [[146, "processes-scheduling-and-virtual-memory"], [863, "processes-scheduling-and-virtual-memory"], [864, "processes-scheduling-and-virtual-memory"]], "2024-06-28: Written Exam": [[147, "written-exam"]], "Embedded Computing 1 (STECE-2022): Summer": [[148, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Material": [[149, "embedded-computing-1-stece-2022-material"]], "Github Project": [[149, null], [591, "github-project"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[150, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[150, "lehrveranstaltungsbeschreibung"], [152, "lehrveranstaltungsbeschreibung"], [165, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[150, "umfang-der-lehrveranstaltung"], [152, "umfang-der-lehrveranstaltung"], [165, "umfang-der-lehrveranstaltung"]], "Inhalte": [[150, "inhalte"], [152, "inhalte"], [165, "inhalte"]], "Inhaltliche Voraussetzungen": [[150, "inhaltliche-voraussetzungen"], [152, "inhaltliche-voraussetzungen"], [165, "inhaltliche-voraussetzungen"]], "Ziel": [[150, "ziel"], [152, "ziel"], [165, "ziel"]], "Angaben zur Pr\u00fcfung": [[150, "angaben-zur-prufung"], [152, "angaben-zur-prufung"], [165, "angaben-zur-prufung"]], "Beurteilungsschema": [[150, "beurteilungsschema"], [152, "beurteilungsschema"], [165, "beurteilungsschema"]], "Bewertung der Leistungen": [[150, "bewertung-der-leistungen"], [152, "bewertung-der-leistungen"], [165, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[150, "bewertungsschlussel"], [152, "bewertungsschlussel"], [165, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[150, "hilfsmittel-bei-schriftlichen-prufungen"], [152, "hilfsmittel-bei-schriftlichen-prufungen"], [165, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[150, "wiederholungsmoglichkeiten"], [152, "wiederholungsmoglichkeiten"], [165, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[150, "anwesenheitsvorgabe"], [152, "anwesenheitsvorgabe"], [165, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[150, "zusatzinformationen"], [152, "zusatzinformationen"], [165, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[150, "empfohlene-fachliteratur"], [152, "empfohlene-fachliteratur"], [165, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[150, "inhalte-der-einzelnen-lehreinheiten"], [152, "inhalte-der-einzelnen-lehreinheiten"], [165, "inhalte-der-einzelnen-lehreinheiten"]], "Embedded Computing 2 (STECE-2022): Winter": [[151, "embedded-computing-2-stece-2022-winter"]], "Embedded Computing 2 (STECE-2022): Syllabus": [[152, "embedded-computing-2-stece-2022-syllabus"]], "Embedded Computing (STECE-2023)": [[153, "embedded-computing-stece-2023"]], "2025-04-07 (3 VO): Introduction": [[154, "vo-introduction"]], "Install Linux": [[154, "install-linux"]], "Install Programs": [[154, "install-programs"]], "2025-04-10 (3 UE): Linux Host System Setup": [[155, "ue-linux-host-system-setup"]], "Overview: User? Home?": [[155, "overview-user-home"]], "Tour Through File System": [[155, "tour-through-file-system"]], "Work Environment": [[155, "work-environment"], [168, null], [296, "work-environment"], [298, "work-environment"], [316, "work-environment"], [317, "work-environment"], [318, "work-environment"], [411, "work-environment"]], "Git repo": [[155, null], [155, null], [163, null], [164, null]], "Get Code, Build": [[155, "get-code-build"]], "2025-04-28 (3 UE): The Shell, And The OS": [[156, "ue-the-shell-and-the-os"]], "Permissions": [[156, "permissions"], [157, "permissions"], [307, "permissions"]], "2025-05-06 (3 UE): Shell/Permissions (Exercises)": [[157, "ue-shell-permissions-exercises"]], "Basic File And Directory": [[157, "basic-file-and-directory"]], "2025-05-07 (3 VO): Commandline/Shell Recap, C++": [[158, "vo-commandline-shell-recap-c"]], "Recap: Exercises From 2025-05-05": [[158, "recap-exercises-from-2025-05-05"]], "C++ Intro": [[158, "c-intro"]], "Door State Machine": [[158, "door-state-machine"]], "2025-05-12 (3 VO): C++ \u201cDoor\u201d Exercise Recap, Some Git": [[159, "vo-c-door-exercise-recap-some-git"]], "C++ Material": [[159, "c-material"]], "Some Git": [[159, "some-git"]], "Add/Commit": [[159, "add-commit"]], "Access Github Over SSH Not HTTPS": [[159, "access-github-over-ssh-not-https"]], "Change origin, And Push": [[159, "change-origin-and-push"]], "Local C++ Transformation": [[159, "local-c-transformation"]], "Fork on Github, And Change Your origin": [[159, "fork-on-github-and-change-your-origin"]], "Submission: Pull Request": [[159, "submission-pull-request"]], "2025-05-19 (3 VO): Close C++ \u201cDoor\u201d Exercise, More Git": [[160, "vo-close-c-door-exercise-more-git"]], "Interfaces, Polymorphic Types": [[160, "interfaces-polymorphic-types"]], "2025-05-{20,22,23} (6+6 UE): Polymorphic Door Parts, And Some Git": [[161, "ue-polymorphic-door-parts-and-some-git"]], "Git: Update From Upstream": [[161, "git-update-from-upstream"]], "Current Status: Your Own Fork Is origin": [[161, "current-status-your-own-fork-is-origin"]], "Update Your Fork": [[161, "update-your-fork"]], "Exercise: Create Interfaces For Door Parts": [[161, "exercise-create-interfaces-for-door-parts"]], "Problem": [[161, "problem"], [516, "problem"], [517, "problem"], [548, "problem"], [549, "problem"], [550, "problem"], [553, "problem"], [559, "problem"], [607, "problem"], [724, "problem"], [766, "problem"], [974, "problem"], [1020, "problem"]], "Requirement": [[161, "requirement"], [166, "requirement"], [257, "requirement"], [569, "requirement"], [591, "requirement"], [592, "requirement"], [593, "requirement"], [597, "requirement"], [598, "requirement"], [599, "requirement"], [600, "requirement"], [601, "requirement"], [602, "requirement"], [1026, "requirement"], [1033, "requirement"], [1165, "requirement"], [1166, "requirement"], [1187, "requirement"], [1198, "requirement"], [1199, "requirement"], [1200, "requirement"], [1201, "requirement"], [1203, "requirement"], [1204, "requirement"], [1205, "requirement"], [1206, "requirement"]], "Work Instructions": [[161, "work-instructions"], [166, "work-instructions"]], "Homework (Until 2025-06-01)": [[161, "homework-until-2025-06-01"]], "Embedded Computing 1 (STECE-2023): Summer": [[163, "embedded-computing-1-stece-2023-summer"]], "Embedded Computing 1 (STECE-2023): Material": [[164, "embedded-computing-1-stece-2023-material"]], "Linux/Shell Basics": [[164, "linux-shell-basics"]], "C++ Basics": [[164, "c-basics"], [252, "c-basics"]], "Embedded Computing 1 (STECE-2023): Syllabus": [[165, "embedded-computing-1-stece-2023-syllabus"]], "Exam: Hysteresis": [[166, "exam-hysteresis"]], "Preparation": [[166, "preparation"], [227, "preparation"], [228, "preparation"], [230, "preparation"], [231, "preparation"], [232, "preparation"], [233, "preparation"], [667, "preparation"]], "Design Tools And Laboratory Engineering (2024)": [[167, "design-tools-and-laboratory-engineering-2024"], [168, "design-tools-and-laboratory-engineering-2024"]], "C": [[168, "c"]], "Type System, Structures, Pointers And Arrays": [[168, "type-system-structures-pointers-and-arrays"]], "Recommended Readings, Links": [[168, "recommended-readings-links"], [168, "id1"]], "Linux Basics": [[168, "linux-basics"], [860, "linux-basics"]], "Filesystem Commands": [[168, "filesystem-commands"]], "Embedded Computing (FH Joanneum Graz)": [[169, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[170, "git-notes"]], "Bring Local Branch Upstream": [[170, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[170, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[170, "create-submit-apply-patches"]], "GLT 2025: systemd\u2019s D-Bus Implementation, And Its Python asyncio Binding": [[171, "glt-2025-systemd-s-d-bus-implementation-and-its-python-asyncio-binding"]], "Todo": [[171, "todo"], [217, "id1"], [220, "id2"], [220, "id3"], [511, "todo"], [627, "id1"], [630, "id1"], [633, "id1"], [636, "id1"], [639, "id1"], [642, "id1"], [645, "id1"], [941, "id1"], [945, "id1"], [953, "id2"], [1072, "id1"], [1075, "id1"], [1079, "id1"], [1247, "id1"], [1252, "id1"]], "GLT 2025 Submission: systemd\u2019s D-Bus Implementation, And Its Python asyncio Binding": [[172, "glt-2025-submission-systemd-s-d-bus-implementation-and-its-python-asyncio-binding"]], "Grazer Linuxtage": [[172, null]], "Talk notes": [[172, null]], "Talk Preparation: systemd\u2019s D-Bus Implementation, And Its Python asyncio Binding": [[173, "talk-preparation-systemd-s-d-bus-implementation-and-its-python-asyncio-binding"]], "Old Stuff, Random Notes": [[173, "old-stuff-random-notes"]], "D-Bus Show": [[173, "d-bus-show"]], "D-Bus Spec, Implementations": [[173, "d-bus-spec-implementations"]], "Client Implementation": [[173, "client-implementation"]], "Gotchas, Weirdnesses": [[173, "gotchas-weirdnesses"]], "What Else?": [[173, "what-else"], [199, "what-else"], [931, "what-else"], [1012, "what-else"]], "Irrigation Outlook": [[173, "irrigation-outlook"]], "Slides: systemd\u2019s D-Bus Implementation, And Its Python asyncio Binding": [[174, "slides-systemd-s-d-bus-implementation-and-its-python-asyncio-binding"]], "TL;DR": [[174, "tl-dr"], [199, "tl-dr"]], "Show": [[174, "show"]], "A Big Picture": [[174, "a-big-picture"]], "Sample Client (sdbus, Blocking)": [[174, "sample-client-sdbus-blocking"]], "Speaker notes": [[174, null]], "Defining Interfaces, Pythonically": [[174, "defining-interfaces-pythonically"]], "History/Implementations/Bindings \u27f6 sdbus": [[174, "history-implementations-bindings-longrightarrow-sdbus"]], "In reality, all is more complex": [[174, null]], "Concrete Use Case: jf-irrigation": [[174, "concrete-use-case-jf-irrigation"]], "Irrigation Client: Enter asyncio": [[174, "irrigation-client-enter-asyncio"]], "First Step: Create Proxy": [[174, "first-step-create-proxy"]], "Naive try: Use Async Definition To Block": [[174, "naive-try-use-async-definition-to-block"]], "Fix: Async Machinery": [[174, "fix-async-machinery"]], "Create Irrigator Proxies": [[174, "create-irrigator-proxies"]], "Print Statistics": [[174, "print-statistics"]], "D-Bus Signals": [[174, "d-bus-signals"]], "And Parallelism?": [[174, "and-parallelism"]], "Introduce asyncio.TaskGroup": [[174, "introduce-asyncio-taskgroup"]], "Keep In Mind \u2026": [[174, "keep-in-mind"]], "More asyncio": [[174, "more-asyncio"]], "IT-Visions TODO": [[176, "it-visions-todo"]], "Packaging this Site on PyPI": [[177, "packaging-this-site-on-pypi"]], "Log": [[177, "log"], [227, "log"], [228, "log"], [231, "log"], [232, "log"], [240, "log"], [242, "log"], [243, "log"], [245, "log"], [248, "log"], [252, "log"], [254, "log"], [258, "log"], [261, "log"], [270, "log"], [282, "log"], [291, "log"]], "Hochk\u00f6nig": [[178, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[178, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[178, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Playground": [[179, "playground"]], "Prankergasse Kastl": [[180, "prankergasse-kastl"]], "Korpus Basis": [[180, "korpus-basis"]], "Schubladen Bauen": [[180, "schubladen-bauen"]], "Alles \u00d6len": [[180, "alles-olen"]], "Montage": [[180, "montage"]], "pending_xref": [[181, "pending-xref"]], "Audio Chip Bringup": [[182, "audio-chip-bringup"]], "Goal": [[182, "goal"], [184, "goal"], [185, "goal"], [187, "goal"], [316, "goal"], [318, "goal"], [373, "goal"], [1258, "goal"], [1259, "goal"]], "Findings": [[182, "findings"]], "Get Debian 10 Kernel Config": [[183, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[183, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[183, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[184, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[185, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[185, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[186, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[187, "dirty-upgrade-path"]], "Steps": [[187, "steps"]], "Wait for Customer Hardware": [[188, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[189, "extract-kernel-from-intel-yocto-bsp"]], "Creating Screencasts": [[190, "creating-screencasts"]], "OpenShot": [[190, "openshot"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[191, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[191, "basics"], [261, "basics"], [288, "basics"], [303, "basics"], [323, "basics"], [324, "basics"], [324, "id1"], [329, "basics"], [330, "basics"], [330, "id1"], [351, "basics"], [357, "basics"], [363, "basics"], [364, "basics"], [367, "basics"], [368, "basics"], [376, "basics"], [377, "basics"], [379, "basics"], [380, "basics"], [399, "Basics"], [466, "basics"], [671, "basics"], [683, "basics"], [703, "basics"], [856, "basics"], [1050, "basics"], [1160, "basics"]], "Getting X-Loader and U-Boot": [[191, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[191, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[191, "repairing-the-nand"]], "Writing X-Loader to NAND": [[191, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[191, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[192, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[192, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[192, "signals-aren-t-messages"]], "References": [[192, null], [192, null], [192, null], [263, "References"], [266, "References"], [662, "references"]], "Message Queues aren\u2019t Message Queues": [[192, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[192, "semaphores-and-mutexes"]], "Timers": [[192, "timers"]], "Polling": [[192, "polling"]], "Event Dispatching": [[192, "event-dispatching"]], "Interrupts": [[192, "interrupts"], [967, "interrupts"]], "Realtime": [[192, "realtime"], [1069, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[193, "saving-solid-state-disk-life-gentoo"]], "Rant": [[193, "rant"], [212, "Rant"], [1085, null]], "No Swap": [[193, "no-swap"]], "tmpfs instances here and there": [[193, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[193, "syslog-var-log-messages"]], "Mountpoint for messages": [[193, "mountpoint-for-messages"]], "Logrotate": [[193, "logrotate"]], "Kernel I/O Scheduler": [[193, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[193, "use-ram-for-the-kernel-build"]], "Things that are left": [[193, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[194, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[194, "process-stack-management"]], "Conclusion": [[194, "conclusion"], [194, "id1"], [928, "conclusion"], [936, "conclusion"]], "Thread (pthread) Stack Management": [[194, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[194, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[194, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[194, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[194, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[194, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[194, "how-does-this-work"]], "Realtime is different": [[194, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[195, "patching-and-building-the-fedora-kernel"]], "Why?": [[195, "why"], [763, "why"], [1012, "why"], [1105, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[195, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[195, null], [195, null]], "Prepare the RPM Build": [[195, "prepare-the-rpm-build"]], "Install Prerequisites": [[195, "install-prerequisites"]], "Setup rpmbuild Directory": [[195, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[195, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[195, "apply-the-patch"]], "Build the Kernel RPMs": [[195, "build-the-kernel-rpms"]], "Install Kernel": [[195, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[196, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[196, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[196, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[197, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[197, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[197, "rpm-package-meh"]], "Updated on 2020-04-09": [[197, null]], "Annoyance #1: Keeps Running in Background": [[197, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[197, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[197, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[198, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[198, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[198, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[198, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[199, "using-bigbluebutton-for-online-training"]], "In this Article": [[199, null], [200, null], [202, null]], "Background Information": [[199, "background-information"]], "Hosting Setup": [[199, "hosting-setup"]], "BigBlueButton Installation": [[199, "bigbluebutton-installation"]], "Functionality Check": [[199, "functionality-check"]], "Traunstein via Zierlersteig": [[200, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[200, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[200, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[200, "die-rinne"]], "Abstieg": [[200, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[201, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[201, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[201, "ceska-koca"]], "Hinauf": [[201, "hinauf"]], "Runter": [[201, "runter"]], "Zusammenfassung": [[201, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[202, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[202, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[202, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[202, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[202, "generate-key-pair"]], "Stage Key for Enrollment": [[202, "stage-key-for-enrollment"]], "Reboot, Brick": [[202, "reboot-brick"]], "Diagnostics": [[202, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[203, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1097, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[203, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[203, "installing-crosstool-ng"]], "Prerequisites": [[203, "prerequisites"], [1164, "prerequisites"], [1261, "prerequisites"], [1262, "prerequisites"], [1266, "prerequisites"], [1267, "prerequisites"], [1268, "prerequisites"], [1269, "prerequisites"], [1270, "prerequisites"], [1271, "prerequisites"], [1272, "prerequisites"], [1277, "prerequisites"], [1278, "prerequisites"], [1281, "prerequisites"], [1282, "prerequisites"]], "Installing From Cloned Git Repository": [[203, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[203, "installing-from-release-tarball"]], "PATH, And Basic Test": [[203, "path-and-basic-test"]], "Configure Toolchain Build": [[203, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[203, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[203, "important-glibc-version"]], "The Error": [[203, "the-error"], [203, "id4"]], "The Fix": [[203, "the-fix"], [203, "id5"]], "Important: GCC Version": [[203, "important-gcc-version"]], "Toolchain Build/Install": [[203, "toolchain-build-install"]], "Test": [[203, "test"], [964, "test"]], "Simplest: C, <stdio.h>": [[203, "simplest-c-stdio-h"]], "C++, <iostream>": [[203, "c-iostream"]], "C++, <thread>": [[203, "c-thread"]], "Packaging/Distributing The Toolchain": [[203, "packaging-distributing-the-toolchain"]], "Afterword": [[203, "afterword"], [373, "afterword"]], "Posts": [[204, "posts"]], "Linux Courses: OS And Programming": [[205, "linux-courses-os-and-programming"]], "How To Book": [[206, "how-to-book"]], "Courses Overview": [[207, "courses-overview"]], "Linux Courses": [[207, "linux-courses"]], "Python Courses": [[207, "python-courses"]], "C And C++ Courses": [[207, "c-and-c-courses"]], "Miscellaneous Courses": [[207, "miscellaneous-courses"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[208, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[208, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[209, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[209, "gpios-in-userspace"]], "CAN Bus": [[209, "can-bus"], [230, "can-bus"]], "Driver Beispiele": [[209, "driver-beispiele"]], "Heizungssteuerung": [[209, "heizungssteuerung"]], "Live Hacking": [[210, "Live-Hacking"], [687, "live-hacking"], [688, "live-hacking"], [690, "live-hacking"], [691, "live-hacking"], [694, "live-hacking"], [695, "live-hacking"], [696, "live-hacking"], [709, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[210, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[210, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[210, "Dictionaries"], [239, "Dictionaries"], [311, "Dictionaries"], [325, "Dictionaries"], [399, "Dictionaries"], [1156, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[210, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[210, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[210, "Shortcuts"]], "Objektorientierte Programmierung": [[210, "Objektorientierte-Programmierung"]], "Inheritance": [[210, "Inheritance"], [250, "Inheritance"], [1124, "inheritance"]], "Date and Time and Time Deltas - datetime": [[210, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[210, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[210, "String-Representations:-__str__()"]], "subprocess": [[210, "subprocess"], [289, "subprocess"]], "enumerate(), zip()": [[210, "enumerate(),-zip()"]], "List Comprehension": [[210, "List-Comprehension"], [234, "List-Comprehension"], [273, "List-Comprehension"], [343, "List-Comprehension"], [353, "List-Comprehension"], [359, "List-Comprehension"], [1110, "list-comprehension"], [1155, "list-comprehension"]], "exec(), eval()": [[210, "exec(),-eval()"]], "Umgebender Context": [[210, "Umgebender-Context"]], "Eigener Context": [[210, "Eigener-Context"]], "json": [[210, "json"], [286, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[211, "python-individualtraining-5-tage-beginnend-28-10-2019"], [422, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[211, null], [214, null], [1080, null], [1255, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[211, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[211, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[211, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[211, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[211, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[211, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[211, "operator-overloading"], [269, "operator-overloading"], [279, "Operator-Overloading"], [300, "operator-overloading"], [335, "operator-overloading"], [626, "operator-overloading"], [652, "operator-overloading"], [665, "operator-overloading"], [1127, "operator-overloading"]], "Getters and Setters": [[211, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[211, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[211, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[211, "closures-between-local-and-global"]], "Goals of this Training": [[212, "Goals-of-this-Training"]], "Exercise": [[212, "Exercise"], [253, "exercise"], [295, "exercise"], [295, "id1"], [296, "exercise"], [298, "exercise"], [307, "exercise"], [316, "exercise"], [338, "exercise"], [372, "exercise"], [381, "exercise"], [381, "id3"], [382, "exercise"], [382, "id2"], [410, "exercise"], [548, "exercise"], [549, "exercise"], [550, "exercise"], [552, "exercise"], [553, "exercise"], [556, "exercise"], [557, "exercise"], [735, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[212, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[212, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[212, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[212, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[212, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[212, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[212, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[212, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[212, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[212, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[213, "Random-Live-Hacking"]], "Data Types": [[213, "Data-Types"], [343, "Data-Types"]], "Mutable, Immutable": [[213, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[213, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[213, "Indices-and-Slicing"]], "for loops": [[213, "for-loops"]], "Iterator protocol": [[213, "Iterator-protocol"], [276, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[214, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[214, null], [216, null], [403, null]], "Standardthemen": [[214, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[214, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[214, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[214, "losen-einer-uni-ubung"]], "Proposal": [[215, "proposal"]], "Signals": [[215, "signals"]], "Posix IPC (and Virtual Memory)": [[215, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[215, "unix-domain-sockets"]], "Application in your Company": [[215, "application-in-your-company"]], "Further Thoughts": [[215, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[216, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[217, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[218, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[218, null]], "Kursaufbau": [[218, "kursaufbau"]], "Kursverlauf": [[218, "kursverlauf"], [226, "kursverlauf"]], "Tag 1": [[218, "tag-1"], [237, "tag-1"], [245, "tag-1"], [248, "tag-1"], [254, "tag-1"], [270, "tag-1"], [282, "tag-1"]], "Tag 2": [[218, "tag-2"], [237, "tag-2"], [245, "tag-2"], [248, "tag-2"], [254, "tag-2"], [270, "tag-2"], [282, "tag-2"]], "Tag 3": [[218, "tag-3"], [237, "tag-3"], [248, "tag-3"], [270, "tag-3"], [282, "tag-3"]], "Tag 4": [[218, "tag-4"], [248, "tag-4"], [270, "tag-4"], [282, "tag-4"]], "Tag 5": [[218, "tag-5"]], "Installing googletest By Hand": [[219, "installing-googletest-by-hand"]], "Clone googletest Repo": [[219, "clone-googletest-repo"]], "Create Build Directory": [[219, "create-build-directory"], [220, "create-build-directory"], [605, "create-build-directory"]], "CMake, Build and Install": [[219, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[219, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[220, "software-setup-build"]], "Getting the Source": [[220, "getting-the-source"]], "Install Prerequisites and Dependencies": [[220, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[220, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[221, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[221, "flatpak"]], "Issues": [[221, "issues"]], "RPM From M$": [[221, "rpm-from-m"]], "Code": [[222, "code"], [225, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[223, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[223, null], [226, null]], "Environment": [[223, "environment"], [862, "environment"]], "Unit Testing and Test Driven Development": [[223, "unit-testing-and-test-driven-development"]], "Python Installation": [[223, "python-installation"], [1132, "python-installation"]], "Programming Environment": [[223, "programming-environment"], [307, "programming-environment"], [1132, "programming-environment"]], "Day 1: Language Basics": [[223, "day-1-language-basics"]], "Day 2: Advanced Topics": [[223, "day-2-advanced-topics"]], "Wrap-Up": [[223, "wrap-up"]], "How Was It?": [[223, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[224, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[224, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[224, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[224, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[224, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[224, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[224, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[224, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[224, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[224, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[224, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[224, "list-und-Mutability"]], "Tuple und Immutability": [[224, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[224, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[224, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[224, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[224, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[224, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[224, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[224, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[224, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[224, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[224, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[224, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[224, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[224, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[224, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[224, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[224, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[224, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[224, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[224, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[224, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[224, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[224, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[224, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[226, "python-individualtraining-18-5-2020-19-5-2020"], [422, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[226, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[227, "python-advanced-7-9-2020-10-9-2020"], [422, "python-advanced-7-9-2020-10-9-2020"]], "Training Information": [[227, null], [228, null], [230, null], [231, null], [232, null], [233, null], [235, null], [237, null], [238, null], [242, null], [245, null], [248, null], [251, null], [252, null], [253, null], [254, null], [258, null], [261, null], [270, null], [274, null], [277, null], [280, null], [282, null], [285, null], [288, null], [291, null], [300, null], [303, null], [310, null], [313, null]], "Workspace Setup": [[227, "workspace-setup"], [228, "workspace-setup"], [230, "workspace-setup"], [232, "workspace-setup"]], "Github for Exercises": [[227, "github-for-exercises"], [228, "github-for-exercises"]], "Agenda": [[227, "agenda"], [228, "agenda"], [230, "agenda"], [231, "agenda"], [232, "agenda"], [233, "agenda"], [238, "agenda"], [242, "agenda"], [243, "agenda"], [280, "agenda"], [285, "agenda"], [297, "agenda"], [306, "agenda"], [327, "agenda"], [335, "agenda"], [371, "agenda"], [1273, "agenda"]], "Advanced Core Python Topics": [[227, "advanced-core-python-topics"]], "Special Topics": [[227, "special-topics"]], "Day 1": [[227, "day-1"], [228, "day-1"], [230, "day-1"], [231, "day-1"], [232, "day-1"], [242, "day-1"], [243, "day-1"], [252, "day-1"], [253, "day-1"], [258, "day-1"], [261, "day-1"], [264, "day-1"], [267, "day-1"], [274, "day-1"], [316, "day-1"], [317, "day-1"], [318, "day-1"], [324, "day-1"], [328, "day-1"], [330, "day-1"], [335, "day-1"], [342, "day-1"], [368, "day-1"], [372, "day-1"], [375, "day-1"], [377, "day-1"], [380, "day-1"], [382, "day-1"], [386, "day-1"]], "Day 2": [[227, "day-2"], [228, "day-2"], [230, "day-2"], [231, "day-2"], [232, "day-2"], [242, "day-2"], [243, "day-2"], [252, "day-2"], [253, "day-2"], [258, "day-2"], [261, "day-2"], [263, "Day-2"], [264, "day-2"], [267, "day-2"], [274, "day-2"], [307, "day-2"], [316, "day-2"], [318, "day-2"], [324, "day-2"], [328, "day-2"], [335, "day-2"], [342, "day-2"], [368, "day-2"], [372, "day-2"], [375, "day-2"], [377, "day-2"], [380, "day-2"], [382, "day-2"], [386, "day-2"]], "Day 3": [[227, "day-3"], [228, "day-3"], [230, "day-3"], [231, "day-3"], [232, "day-3"], [242, "day-3"], [243, "day-3"], [252, "day-3"], [253, "day-3"], [258, "day-3"], [263, "Day-3"], [264, "day-3"], [267, "day-3"], [274, "day-3"], [307, "day-3"], [310, "day-3"], [316, "day-3"], [318, "day-3"], [324, "day-3"], [328, "day-3"], [330, "day-3"], [342, "day-3"], [368, "day-3"], [372, "day-3"], [375, "day-3"], [377, "day-3"], [380, "day-3"], [382, "day-3"]], "Day 4": [[227, "day-4"], [230, "day-4"], [242, "day-4"], [243, "day-4"], [252, "day-4"], [253, "day-4"], [307, "day-4"], [375, "day-4"], [382, "day-4"]], "Recommended Tutorials": [[227, "recommended-tutorials"]], "After Work Party": [[227, "after-work-party"], [258, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[228, "python-basics-28-9-2020-30-9-2020"], [422, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[229, "Iterables"]], "set constructor": [[229, "set-constructor"]], "Fast vs. Simple": [[229, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[229, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[229, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[229, "Object-Oriented-Programming"], [279, "Object-Oriented-Programming"], [292, "Object-Oriented-Programming"], [303, "object-oriented-programming"], [317, "object-oriented-programming"], [319, "object-oriented-programming"], [320, "object-oriented-programming"], [323, "object-oriented-programming"], [324, "object-oriented-programming"], [329, "object-oriented-programming"], [335, "object-oriented-programming"], [338, "object-oriented-programming"], [341, "object-oriented-programming"], [342, "object-oriented-programming"], [345, "object-oriented-programming"], [351, "object-oriented-programming"], [357, "object-oriented-programming"], [363, "object-oriented-programming"], [364, "object-oriented-programming"], [367, "object-oriented-programming"], [368, "object-oriented-programming"], [510, "object-oriented-programming"], [1123, "object-oriented-programming"]], "datetime": [[229, "datetime"], [256, "datetime"], [311, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[230, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[230, "additional-topics-brought-in-by-thomas"]], "Notebook": [[230, "notebook"], [251, "notebook"], [266, "Notebook"], [404, "notebook"]], "Tutorials": [[230, "tutorials"], [258, "tutorials"]], "Linux on Raspberry Pi": [[231, "linux-on-raspberry-pi"]], "Cloud Machine": [[231, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[231, "raspberry-on-participant-s-desks"]], "Basic security": [[231, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[231, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[231, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[231, "in-the-wild-watchdog"]], "TODO": [[231, "todo"], [391, "todo"], [392, "todo"], [393, "todo"], [1161, "todo"], [1222, "todo"]], "Support Material": [[231, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[232, "python-basics-23-11-2020-25-11-2020"], [422, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[232, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[233, "linux-basics-30-11-2020-3-12-2020"], [422, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[234, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[234, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[234, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[234, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[234, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[234, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[234, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[234, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[234, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[234, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[234, "Floor-Division"]], "Modulo Operator: %": [[234, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[234, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[234, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[234, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[234, "Raw-Strings"], [256, "Raw-Strings"], [273, "Raw-Strings"], [279, "Raw-Strings"], [301, "Raw-Strings"], [331, "Raw-Strings"], [1152, "raw-strings"]], "f-Strings": [[234, "f-Strings"], [353, "f-Strings"]], "Konvertierungen": [[234, "Konvertierungen"]], "Boolean": [[234, "Boolean"], [260, "Boolean"], [263, "Boolean"], [271, "Boolean"], [273, "Boolean"], [283, "Boolean"], [286, "Boolean"], [359, "Boolean"], [1141, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[234, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[234, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[234, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[234, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[234, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[234, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[234, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[234, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[234, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[234, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[234, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[234, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[234, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[234, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[234, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[234, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[234, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[234, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[234, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[234, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[234, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[234, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[234, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[234, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[234, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[234, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[234, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[234, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[234, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[234, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[234, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[234, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[234, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[234, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[234, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[234, "Liste"]], "Set": [[234, "Set"], [255, "Set"], [256, "Set"], [260, "Set"], [260, "id1"], [263, "Set"], [266, "Set"], [266, "id1"], [273, "Set"], [286, "Set"], [289, "Set"], [301, "Set"], [304, "Set"], [304, "id5"], [311, "Set"], [321, "Set"], [325, "Set"], [343, "Set"], [347, "Set"], [359, "Set"], [369, "Set"]], "8.2 Arrays": [[234, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[234, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[234, "8.4-Records"]], "8.5 Zeichenketten": [[234, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[234, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[234, "sorted,-reversed"]], "8.7 Dictionaries": [[234, "8.7-Dictionaries"]], "(jf) Records in Python": [[234, "(jf)-Records-in-Python"]], "8.8 Mengen": [[234, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[234, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[234, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[234, "\u00dcbung-1"]], "Versuch 1: in und index()": [[234, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[234, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[234, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[234, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[234, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[234, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[234, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[234, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[234, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[234, "Lokale-Variable"]], "Globale Variable (lesen)": [[234, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[234, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[234, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[234, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[234, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[234, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[234, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[234, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[234, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[234, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[234, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[235, "programmierung-grundlagen-13-und-14-1-2021"]], "\u00dcberblick": [[235, "uberblick"], [245, "uberblick"], [254, "uberblick"], [270, "uberblick"], [282, "uberblick"]], "Live-Hacking (Jupyter Notebook)": [[235, "live-hacking-jupyter-notebook"], [245, "live-hacking-jupyter-notebook"], [248, "live-hacking-jupyter-notebook"], [258, "live-hacking-jupyter-notebook"]], "Struktur": [[235, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[235, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[235, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[235, "verzweigung"]], "Schleifen": [[235, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[235, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[235, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Programmierung Grundlagen (Jupyter Notebook)": [[236, "programmierung-grundlagen-jupyter-notebook"], [246, "programmierung-grundlagen-jupyter-notebook"], [272, "programmierung-grundlagen-jupyter-notebook"], [284, "programmierung-grundlagen-jupyter-notebook"]], "Python Basics (22.2.2021 - 24.2.2021)": [[237, "python-basics-22-2-2021-24-2-2021"], [422, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[237, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[238, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[238, "books"], [288, "books"], [330, "books"], [1208, "books"]], "Python Advanced": [[239, "Python-Advanced"]], "Data Types Recap": [[239, "Data-Types-Recap"]], "Sequential Datatypes": [[239, "Sequential-Datatypes"], [271, "Sequential-Datatypes"], [283, "Sequential-Datatypes"], [353, "Sequential-Datatypes"], [1144, "sequential-datatypes"], [1144, "id1"]], "Slicing etc.": [[239, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[239, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[239, "Sets"], [239, "id1"], [247, "Sets"], [365, "Sets"], [1157, "sets"]], "for Schleife, ganz kurz": [[239, "for-Schleife,-ganz-kurz"]], "Tuple": [[239, "Tuple"], [263, "Tuple"], [266, "Tuple"], [273, "Tuple"], [286, "Tuple"], [289, "Tuple"], [301, "Tuple"], [359, "Tuple"], [365, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[239, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[239, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[239, "Listen"], [273, "Listen"], [399, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[239, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[239, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[239, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[239, "Iterable:-Der-Begriff"]], "Zufall": [[239, "Zufall"]], "Regular Expressions": [[239, "Regular-Expressions"], [292, "Regular-Expressions"], [304, "Regular-Expressions"], [353, "Regular-Expressions"], [359, "Regular-Expressions"], [921, "regular-expressions"]], "enumerate()": [[239, "enumerate()"], [247, "enumerate()"], [250, "enumerate()"], [286, "enumerate()"], [304, "enumerate()"], [321, "enumerate()"], [343, "enumerate()"], [365, "enumerate()"]], "JSON": [[239, "JSON"], [256, "JSON"], [266, "JSON"], [292, "JSON"], [301, "JSON"], [336, "JSON"], [339, "JSON"]], "2021-03-15": [[240, "id1"]], "Exercises (auf Github)": [[240, "exercises-auf-github"]], "Jupyter Notebook": [[240, "jupyter-notebook"], [242, "jupyter-notebook"], [259, "jupyter-notebook"], [261, "jupyter-notebook"], [264, "jupyter-notebook"], [270, "jupyter-notebook"], [275, "jupyter-notebook"], [278, "jupyter-notebook"], [281, "jupyter-notebook"], [399, "Jupyter-Notebook"], [1214, "jupyter-notebook"]], "Download": [[240, null], [242, null]], "Hallo Jupyter Notebook": [[241, "Hallo-Jupyter-Notebook"]], "Syntax": [[241, "Syntax"], [311, "Syntax"], [353, "Syntax"], [365, "Syntax"], [399, "Syntax"], [399, "id1"]], "Strings": [[241, "Strings"], [244, "Strings"], [247, "Strings"], [256, "Strings"], [260, "Strings"], [260, "id3"], [263, "Strings"], [271, "Strings"], [283, "Strings"], [301, "Strings"], [304, "Strings"], [304, "id1"], [304, "id3"], [311, "Strings"], [347, "Strings"], [374, "strings"], [399, "Strings"], [525, "strings"]], "Raw strings": [[241, "Raw-strings"]], "Variablen": [[241, "Variablen"], [273, "Variablen"]], "Tuple Unpacking": [[241, "Tuple-Unpacking"], [283, "Tuple-Unpacking"], [301, "Tuple-Unpacking"], [311, "Tuple-Unpacking"], [347, "Tuple-Unpacking"], [353, "Tuple-Unpacking"], [365, "Tuple-Unpacking"], [398, "Tuple-Unpacking"], [399, "Tuple-Unpacking"], [399, "id2"]], "Speicher, Memory Management": [[241, "Speicher,-Memory-Management"]], "Datatypes": [[241, "Datatypes"], [244, "Datatypes"], [247, "Datatypes"], [260, "Datatypes"], [263, "Datatypes"], [271, "Datatypes"], [273, "Datatypes"], [279, "Datatypes"], [283, "Datatypes"], [286, "Datatypes"], [289, "Datatypes"], [303, "datatypes"], [310, "datatypes"], [313, "datatypes"], [321, "Datatypes"], [323, "datatypes"], [324, "datatypes"], [325, "Datatypes"], [329, "datatypes"], [330, "datatypes"], [347, "Datatypes"], [351, "datatypes"], [352, "datatypes"], [357, "datatypes"], [358, "datatypes"], [359, "Datatypes"], [363, "datatypes"], [364, "datatypes"], [367, "datatypes"], [368, "datatypes"], [369, "Datatypes"], [399, "Datatypes"], [525, "datatypes"], [1139, "datatypes"]], "Mutable vs. Immutable": [[241, "Mutable-vs.-Immutable"], [292, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[241, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[241, "Aber!!!!"]], "Dictionary": [[241, "Dictionary"], [247, "Dictionary"], [255, "Dictionary"], [256, "Dictionary"], [260, "Dictionary"], [260, "id2"], [263, "Dictionary"], [266, "Dictionary"], [266, "id2"], [273, "Dictionary"], [286, "Dictionary"], [289, "Dictionary"], [301, "Dictionary"], [304, "Dictionary"], [304, "id4"], [311, "Dictionary"], [321, "Dictionary"], [325, "Dictionary"], [331, "Dictionary"], [343, "Dictionary"], [347, "Dictionary"], [359, "Dictionary"], [365, "Dictionary"], [369, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[241, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[241, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[241, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[241, "for-und-range()"]], "Objektidentit\u00e4t": [[241, "Objektidentit\u00e4t"]], "Das with Statement": [[241, "Das-with-Statement"], [250, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[241, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[241, "String-Operationen"]], "enumerate(), und verlorene Indices": [[241, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[241, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[241, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[242, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[242, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[243, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[243, null]], "Course Preparation": [[243, "course-preparation"], [296, "course-preparation"], [298, "course-preparation"], [306, "course-preparation"]], "SSH": [[243, "ssh"], [409, "ssh"]], "Linux and/or Shell on Windows Host": [[243, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[243, "editor-support-for-shell-scripting"]], "Einleitung": [[244, "Einleitung"]], "Numbers": [[244, "Numbers"], [247, "Numbers"], [271, "Numbers"], [399, "Numbers"], [1139, "numbers"]], "Integer Numbers": [[244, "Integer-Numbers"], [1139, "integer-numbers"]], "Compound Datatypes": [[244, "Compound-Datatypes"], [256, "Compound-Datatypes"], [260, "Compound-Datatypes"], [263, "Compound-Datatypes"], [266, "Compound-Datatypes"], [271, "Compound-Datatypes"], [273, "Compound-Datatypes"], [279, "Compound-Datatypes"], [283, "Compound-Datatypes"], [286, "Compound-Datatypes"], [289, "Compound-Datatypes"], [301, "Compound-Datatypes"], [325, "Compound-Datatypes"], [331, "Compound-Datatypes"], [343, "Compound-Datatypes"], [347, "Compound-Datatypes"], [359, "Compound-Datatypes"], [365, "Compound-Datatypes"], [369, "Compound-Datatypes"], [1140, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[244, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[244, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[244, "Set:-mathematische-Mengen"]], "while": [[244, "while"], [263, "while"], [279, "while"], [311, "while"], [365, "while"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[245, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[247, "Syntax-etc."], [279, "Syntax-etc."], [325, "Syntax-etc."], [1136, "syntax-etc"]], "Comments vs. Documentation": [[247, "Comments-vs.-Documentation"], [1136, "comments-vs-documentation"]], "Variables": [[247, "Variables"], [260, "Variables"], [263, "Variables"], [279, "Variables"], [289, "Variables"], [321, "Variables"], [325, "Variables"], [347, "Variables"], [353, "Variables"], [359, "Variables"], [365, "Variables"], [369, "Variables"], [399, "Variables"], [532, "variables"], [1138, "variables"]], "Assignment Fun": [[247, "Assignment-Fun"], [286, "Assignment-Fun"], [1138, "assignment-fun"]], "Assignment Details": [[247, "Assignment-Details"], [279, "Assignment-Details"], [286, "Assignment-Details"], [365, "Assignment-Details"], [369, "Assignment-Details"], [399, "Assignment-Details"], [1138, "assignment-details"]], "Operators": [[247, "Operators"], [283, "Operators"]], "Integer Arithmetic": [[247, "Integer-Arithmetic"]], "String Methods": [[247, "String-Methods"], [365, "String-Methods"], [398, "String-Methods"]], "Datatype Conversions": [[247, "Datatype-Conversions"], [271, "Datatype-Conversions"], [273, "Datatype-Conversions"], [279, "Datatype-Conversions"], [283, "Datatype-Conversions"], [286, "Datatype-Conversions"], [304, "Datatype-Conversions"], [321, "Datatype-Conversions"], [325, "Datatype-Conversions"], [331, "Datatype-Conversions"], [343, "Datatype-Conversions"], [347, "Datatype-Conversions"], [353, "Datatype-Conversions"], [365, "Datatype-Conversions"], [399, "Datatype-Conversions"], [1139, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[247, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[247, "Complex-Datatypes"], [399, "Complex-Datatypes"]], "List (mutable)": [[247, "List-(mutable)"], [260, "List-(mutable)"], [353, "List-(mutable)"]], "extend()? Iterable?": [[247, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[247, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[247, "in-Operator"], [286, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[247, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[247, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[247, "sum()"]], "map()": [[247, "map()"], [250, "map()"]], "list() function": [[247, "list()-function"]], "Performance: in Operator, und list und set": [[247, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[247, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[248, "python-grundlagen-2021-05-03-2021-05-05"], [422, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[248, "weiterfuhrende-information"]], "Visual Studio Code": [[248, "visual-studio-code"], [264, "visual-studio-code"], [1208, "visual-studio-code"]], "Python Beginner Tutorials": [[248, "python-beginner-tutorials"], [288, "python-beginner-tutorials"], [1208, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[248, "numpy-and-data-science-tutorials"], [288, "numpy-and-data-science-tutorials"], [291, "numpy-and-data-science-tutorials"], [324, "numpy-and-data-science-tutorials"], [1208, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[248, "pypi-installing-modules-that-don-t-come-as-batteries"], [1208, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[248, "git-and-github"], [1208, "git-and-github"]], "Conference Talks": [[248, "conference-talks"], [324, "conference-talks"], [1208, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[249, "python-grundlagen-jupyter-notebook"], [262, "python-grundlagen-jupyter-notebook"], [265, "python-grundlagen-jupyter-notebook"], [268, "python-grundlagen-jupyter-notebook"], [287, "python-grundlagen-jupyter-notebook"], [290, "python-grundlagen-jupyter-notebook"], [293, "python-grundlagen-jupyter-notebook"], [302, "python-grundlagen-jupyter-notebook"], [305, "python-grundlagen-jupyter-notebook"], [326, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[250, "import-zipfile"]], "Read Contents \u2026": [[250, "Read-Contents-..."]], "Extract One Member": [[250, "Extract-One-Member"]], "All in One, Using with": [[250, "All-in-One,-Using-with"]], "Functionality: Methods": [[250, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[250, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[250, "Instance-Attributes"]], "Class Attributes": [[250, "Class-Attributes"]], "Public, Protected, Private": [[250, "Public,-Protected,-Private"]], "Properties": [[250, "Properties"], [279, "Properties"], [537, "properties"], [1128, "properties"]], "Functions, Positional and Keyword Arguments": [[250, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[250, "Positional-Arguments"]], "Keyword Arguments": [[250, "Keyword-Arguments"], [271, "Keyword-Arguments"], [400, "Keyword-Arguments"], [1150, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[250, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[250, "The-range()-Function"], [256, "The-range()-Function"], [263, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[250, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[250, "Iterable"], [266, "Iterable"]], "list(), and iterable?": [[250, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[250, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[250, "Decorators,-etc."]], "NoneType and None": [[250, "NoneType-and-None"]], "File I/O": [[250, "File-I/O"], [279, "File-I/O"], [286, "File-I/O"], [289, "File-I/O"], [321, "File-I/O"], [325, "File-I/O"], [359, "File-I/O"], [365, "File-I/O"], [396, "File-I/O"], [1034, "file-i-o"], [1158, "file-i-o"]], "Iteration, yield, Recursion": [[250, "Iteration,-yield,-Recursion"]], "Recursion": [[250, "Recursion"], [764, "recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[250, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[250, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[250, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[250, "zip()"]], "filter(), and several other methods to do the same": [[250, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[250, "OSError,-errno"]], "The platform Module, sys.path": [[250, "The-platform-Module,-sys.path"]], "os.path": [[250, "os.path"], [266, "os.path"], [273, "os.path"]], "Exceptions und so (assert())": [[250, "Exceptions-und-so-(assert())"]], "AssertionError": [[250, "AssertionError"]], "Random Questions": [[250, "Random-Questions"]], "Slicing": [[250, "Slicing"], [273, "Slicing"], [279, "Slicing"], [304, "Slicing"], [325, "Slicing"], [1228, "slicing"]], "OO": [[250, "OO"], [318, "oo"], [413, "oo"], [626, "oo"]], "String Formatting": [[250, "String-Formatting"], [256, "String-Formatting"], [1153, "string-formatting"]], "import datetime": [[250, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[251, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[251, "predefined-streams"]], "PCAP Exam Syllabus": [[251, "pcap-exam-syllabus"], [264, "pcap-exam-syllabus"]], "2021-06-09": [[251, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[252, "programmieren-mit-c-2021-06-14-2021-06-18"], [422, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[252, "preparation-tools"]], "State machine": [[252, "state-machine"]], "Regular Course Topics": [[252, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[252, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[252, "regular-course-material"], [252, "id1"]], "Group Project Kick-Off :-)": [[252, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[252, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[252, "group-project-use-case-driven-course-flow"]], "Day 5": [[252, "day-5"], [253, "day-5"], [307, "day-5"], [382, "day-5"]], "Pointer Recap": [[252, "pointer-recap"]], "On With Group Project": [[252, "on-with-group-project"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[252, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[253, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[253, "setup-for-the-new-kids"]], "Recapitulate some C": [[253, "recapitulate-some-c"]], "Group project review": [[253, "group-project-review"]], "Jump into C++": [[253, "jump-into-c"]], "Regular Topics": [[253, "regular-topics"], [253, "id2"], [253, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[253, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[253, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[253, "finish-first-user-database-functionality"]], "Unit Testing": [[253, "unit-testing"], [310, "unit-testing"], [313, "unit-testing"], [412, "unit-testing"]], "GTest Installation": [[253, "gtest-installation"]], "Git Workflows": [[253, "git-workflows"]], "Day X": [[253, "day-x"]], "Smart Pointers, Recap": [[253, "smart-pointers-recap"]], "std::map": [[253, "std-map"], [703, "std-map"]], "OO, and Polymorphism": [[253, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[254, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [422, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[254, "variablen-und-datentypen"], [270, "variablen-und-datentypen"], [282, "variablen-und-datentypen"]], "Kontrollstrukturen": [[254, "kontrollstrukturen"], [270, "kontrollstrukturen"], [271, "Kontrollstrukturen"], [282, "kontrollstrukturen"]], "Datenstrukturen": [[255, "Datenstrukturen"]], "List": [[255, "List"], [256, "List"], [263, "List"], [266, "List"], [286, "List"], [289, "List"], [301, "List"], [304, "List"], [331, "List"], [343, "List"], [359, "List"], [369, "List"], [1236, "list"]], "Iteration": [[255, "Iteration"], [255, "id1"], [256, "Iteration"], [256, "id1"], [266, "Iteration"], [289, "Iteration"], [301, "Iteration"], [343, "Iteration"], [369, "Iteration"], [369, "id1"]], "User Datenbank: Showcase Full Stack Development": [[255, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[255, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[255, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[255, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[255, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[255, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[256, "Iterable?"]], "List Comprehension, Generator Expression": [[256, "List-Comprehension,-Generator-Expression"]], "Literals": [[256, "Literals"], [570, "literals"]], "Quoting?": [[256, "Quoting?"], [260, "Quoting?"]], "Multiline Strings": [[256, "Multiline-Strings"], [260, "Multiline-Strings"], [353, "Multiline-Strings"], [1152, "multiline-strings"]], "Functionality": [[256, "Functionality"], [853, "functionality"]], "strip() and friends": [[256, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[256, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[256, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[257, "read-a-cleaned-up-sap-export"]], "Solution": [[257, "solution"], [548, "solution"], [550, "solution"], [553, "solution"], [766, "solution"], [1244, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[258, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[260, "Initial-Terminology"]], "Sequence": [[260, "Sequence"]], "Tuple (immutable)": [[260, "Tuple-(immutable)"], [353, "Tuple-(immutable)"]], "References, (Im)mutability": [[260, "References,-(Im)mutability"], [273, "References,-(Im)mutability"], [286, "References,-(Im)mutability"], [289, "References,-(Im)mutability"], [304, "References,-(Im)mutability"], [311, "References,-(Im)mutability"], [325, "References,-(Im)mutability"], [331, "References,-(Im)mutability"], [331, "id1"], [343, "References,-(Im)mutability"], [365, "References,-(Im)mutability"], [1148, "references-im-mutability"]], "Iteration, for, and range()": [[260, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[260, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[260, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[260, "List-and-Tuple"]], "matplotlib": [[260, "matplotlib"], [292, "matplotlib"]], "File I/O, and Strings": [[260, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[260, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[260, "Miscellaneous-String-Methods"], [271, "Miscellaneous-String-Methods"], [273, "Miscellaneous-String-Methods"], [279, "Miscellaneous-String-Methods"], [289, "Miscellaneous-String-Methods"], [304, "Miscellaneous-String-Methods"], [325, "Miscellaneous-String-Methods"], [331, "Miscellaneous-String-Methods"], [353, "Miscellaneous-String-Methods"], [359, "Miscellaneous-String-Methods"], [369, "Miscellaneous-String-Methods"], [1154, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[261, "python-basics-2021-08-31-2021-09-01"], [422, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[261, "numerics-and-ai"]], "Mountains near Graz": [[261, "mountains-near-graz"]], "2021-11-17": [[263, "2021-11-17"]], "Enter Tuples": [[263, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[263, "Datatype-Conversions,-Type-Names"]], "NoneType": [[263, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[263, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[263, "Exercise:-Mixed-List"]], "Python Documentation": [[263, "Python-Documentation"]], "for": [[263, "for"], [325, "for"], [369, "for"], [399, "for"]], "Iteration over Compound Datatypes": [[263, "Iteration-over-Compound-Datatypes"], [273, "Iteration-over-Compound-Datatypes"]], "File IO": [[263, "File-IO"], [279, "File-IO"], [307, "file-io"], [311, "File-IO"], [347, "File-IO"], [353, "File-IO"]], "Generators, Iterator Protocol, for": [[263, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[263, "Common-Sequence-Operation"]], "Comprehensions": [[263, "Comprehensions"], [266, "Comprehensions"], [279, "Comprehensions"], [311, "Comprehensions"], [343, "Comprehensions"]], "List, Iterable? WTF?": [[263, "List,-Iterable?-WTF?"]], "Dict and iterable": [[263, "Dict-and-iterable"]], "More on Lists": [[263, "More-on-Lists"], [271, "More-on-Lists"], [286, "More-on-Lists"]], "More on Dictionaries": [[263, "More-on-Dictionaries"], [271, "More-on-Dictionaries"]], "References, Mutability": [[263, "References,-Mutability"]], "CSV": [[263, "CSV"], [280, "csv"], [288, "csv"], [325, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[264, "python-basics-2021-11-17-2021-11-19"], [422, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[264, "python-core-topics"]], "Python Standard Library": [[264, "python-standard-library"]], "More About Strings": [[266, "More-About-Strings"], [283, "More-About-Strings"], [331, "More-About-Strings"], [353, "More-About-Strings"], [359, "More-About-Strings"], [365, "More-About-Strings"], [1152, "more-about-strings"]], "List, Tuple": [[266, "List,-Tuple"], [321, "List,-Tuple"], [325, "List,-Tuple"]], "Tuple Unpacking: What Else": [[266, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[266, "Iterator-Protocol"], [273, "Iterator-Protocol"], [304, "Iterator-Protocol"], [321, "Iterator-Protocol"], [325, "Iterator-Protocol"], [353, "Iterator-Protocol"]], "yield": [[266, "yield"], [289, "yield"]], "Everything is an Object of a Type": [[266, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[266, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[266, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[266, "2021-12-17"]], "Shift Operators": [[266, "Shift-Operators"]], "PCAP Sample Exam": [[266, "PCAP-Sample-Exam"]], "System Errors": [[266, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[267, "python-advanced-2021-12-01-2021-12-03"], [422, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[267, "basics-recap"], [320, "basics-recap"]], "Group Project Preparation": [[267, "group-project-preparation"]], "Hmmm?": [[267, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[269, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [422, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[269, "id1"]], "2021-12-07": [[269, "id2"]], "2021-12-08": [[269, "id3"]], "2021-12-09": [[269, "id4"]], "2022-01-24": [[269, "id5"]], "Undefined Behavior": [[269, "undefined-behavior"]], "Modularization": [[269, "modularization"], [466, "modularization"]], "2022-01-25": [[269, "id6"]], "C++ and OO (Classes)": [[269, "c-and-oo-classes"]], "Modularization (again)": [[269, "modularization-again"]], "2022-01-26": [[269, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[269, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[269, "classes-continued"]], "2022-01-27": [[269, "id8"]], "2022-01-28": [[269, "id9"]], "Standard Template Library: Container Templates": [[269, "standard-template-library-container-templates"]], "2022-01-31": [[269, "id10"]], "2022-02-01": [[269, "id11"]], "Algorithms": [[269, "algorithms"], [692, "algorithms"]], "Functors": [[269, "functors"]], "Unified Modeling Language (UML)": [[269, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[269, "exercise-using-all-from-today"]], "2022-02-02": [[269, "id12"]], "Associative Container: std::map": [[269, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[269, "exceptions-and-exception-handling"]], "2022-02-03": [[269, "id13"]], "2022-02-04": [[269, "id14"]], "C++11: A New Language": [[269, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[269, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[269, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[270, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [422, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[271, "2022-01-17"]], "Variables and Datatypes": [[271, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[271, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[271, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[271, "Integer-Numbers:-Arithmetic"], [283, "Integer-Numbers:-Arithmetic"], [1139, "integer-numbers-arithmetic"]], "Some Methods": [[271, "Some-Methods"]], "String Formatting: f-Strings": [[271, "String-Formatting:-f-Strings"]], "More about Strings": [[271, "More-about-Strings"]], "if": [[271, "if"], [311, "if"]], "2022-01-18": [[271, "2022-01-18"]], "Miscellanea": [[271, "Miscellanea"]], "Braces: Single Element Tuples?": [[271, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[271, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[271, "while-Loops"], [273, "while-Loops"], [286, "while-Loops"], [353, "while-Loops"], [369, "while-Loops"], [533, "while-loops"], [1143, "while-loops"], [1143, "id1"]], "break and continue": [[271, "break-and-continue"], [463, "break-and-continue"], [463, "id1"], [1143, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[271, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[271, "Sequence-Membership"], [1144, "sequence-membership"]], "list (mutable)": [[271, "list-(mutable)"]], "tuple (immutable)": [[271, "tuple-(immutable)"]], "dict (mutable)": [[271, "dict-(mutable)"]], "set (mutable)": [[271, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[271, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[271, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[271, "Default-Parameters"], [273, "Default-Parameters"], [400, "Default-Parameters"], [1150, "default-parameters"]], "List Comprehensions": [[271, "List-Comprehensions"], [283, "List-Comprehensions"]], "Iteration over Dictionaries": [[271, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[271, "Building-Dictionaries"], [1156, "building-dictionaries"]], "More on Sets": [[271, "More-on-Sets"]], "with: Context Managers": [[271, "with:-Context-Managers"]], "Strings Intro": [[273, "Strings-Intro"]], "Doc Strings": [[273, "Doc-Strings"]], "Object Identity": [[273, "Object-Identity"]], "Integers": [[273, "Integers"], [283, "Integers"], [286, "Integers"], [304, "Integers"], [311, "Integers"], [331, "Integers"], [347, "Integers"], [353, "Integers"], [359, "Integers"], [369, "Integers"]], "Variablen? Datenypen?": [[273, "Variablen?-Datenypen?"]], "Objects, Classes": [[273, "Objects,-Classes"]], "Python Standard Libarary Examples": [[273, "Python-Standard-Libarary-Examples"]], "collections": [[273, "collections"]], "ChainMap": [[273, "ChainMap"]], "deque": [[273, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[273, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[273, "Slice-Assignment"], [1145, "slice-assignment"]], "Lists are mutable": [[273, "Lists-are-mutable"]], "Shallow copy and deep copy": [[273, "Shallow-copy-and-deep-copy"]], "else": [[273, "else"], [279, "else"], [369, "else"]], "for Loops, range()": [[273, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[273, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[273, "dict.fromkeys()"], [286, "dict.fromkeys()"]], "Generators": [[273, "Generators"], [279, "Generators"], [319, "generators"], [320, "generators"], [324, "generators"], [341, "generators"], [345, "generators"]], "join, split": [[273, "join,-split"]], "strip, lstrip, rstrip": [[273, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[274, "python-basics-2022-02-23-2022-02-25"], [422, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[274, "data-structures"]], "OS Things": [[274, "os-things"]], "Data Science": [[274, "data-science"], [342, "data-science"], [343, "Data-Science"], [365, "Data-Science"]], "Wiederholung": [[276, "Wiederholung"]], "Mutable/Immutable": [[276, "Mutable/Immutable"]], "Attribute": [[276, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[276, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[276, "Exceptions"], [292, "Exceptions"], [317, "exceptions"], [351, "exceptions"], [357, "exceptions"], [363, "exceptions"], [367, "exceptions"], [626, "exceptions"], [672, "exceptions"], [673, "exceptions"]], "for vs. while, range()": [[276, "for-vs.-while,-range()"]], "String Methods (some)": [[276, "String-Methods-(some)"]], "eval()": [[276, "eval()"], [286, "eval()"], [343, "eval()"]], "exec()": [[276, "exec()"], [292, "exec()"], [353, "exec()"]], "Dictionary Iteration": [[276, "Dictionary-Iteration"], [369, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[276, "Classes,-Attributes,-OO"]], "Types and Instances": [[276, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[276, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[276, "OO-Everywhere"]], "Dictionary Operations": [[276, "Dictionary-Operations"]], "collections.defaultdict": [[276, "collections.defaultdict"], [301, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[277, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[277, "id1"]], "2022-03-16": [[277, "id2"]], "Test Driven Development": [[277, "test-driven-development"], [319, "test-driven-development"], [341, "test-driven-development"], [342, "test-driven-development"]], "2022-03-17": [[277, "id3"]], "2022-03-31": [[277, "id4"]], "Hello World": [[279, "Hello-World"], [425, "hello-world"], [1134, "hello-world"]], "Blahblah": [[279, "Blahblah"], [682, "blahblah"], [1133, "blahblah"]], "Object Oriented?": [[279, "Object-Oriented?"]], "MQTT": [[279, "MQTT"], [345, "mqtt"], [1224, "mqtt"]], "Commandline Arguments": [[279, "Commandline-Arguments"], [477, "commandline-arguments"], [477, "id1"]], "Object Lifetime": [[279, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[279, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[279, "More-String-Methods"], [279, "id1"]], "Dictionary Preview": [[279, "Dictionary-Preview"]], "list: Mutable": [[279, "list:-Mutable"]], "list(): explicit constructor": [[279, "list():-explicit-constructor"]], "tuple: Immutable": [[279, "tuple:-Immutable"]], "dict: Mutable": [[279, "dict:-Mutable"]], "set: Mutable": [[279, "set:-Mutable"]], "List comprehension": [[279, "List-comprehension"]], "DIctionary Comprehension": [[279, "DIctionary-Comprehension"]], "Set Comprehension": [[279, "Set-Comprehension"], [343, "Set-Comprehension"], [353, "Set-Comprehension"], [1104, "set-comprehension"]], "max": [[279, "max"]], "for, enumerate()": [[279, "for,-enumerate()"]], "Iteratoren, Generatoren": [[279, "Iteratoren,-Generatoren"]], "Generatoren": [[279, "Generatoren"]], "split und join": [[279, "split-und-join"]], "strip()": [[279, "strip()"]], "dict vs. OrderedDict": [[279, "dict-vs.-OrderedDict"]], "Duck Typing": [[279, "Duck-Typing"], [1120, "duck-typing"]], "Interfaces": [[279, "Interfaces"], [742, "interfaces"]], "Implementation Inheritance": [[279, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[279, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[279, "__bases__"]], "__mro__": [[279, "__mro__"]], "Object Layout (self)": [[279, "Object-Layout-(self)"]], "More from OO": [[279, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[279, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[279, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[279, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[279, "Exception-Handling"], [310, "exception-handling"], [313, "exception-handling"], [318, "exception-handling"], [415, "exception-handling"], [1107, "exception-handling"]], "Order of except Clauses": [[279, "Order-of-except-Clauses"]], "finally": [[279, "finally"]], "lambda": [[279, "lambda"]], "map(), filter()": [[279, "map(),-filter()"], [343, "map(),-filter()"]], "Generators, Iteration Protocol": [[279, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[279, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[280, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [422, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[280, "basics"]], "2022-03-30: Basics": [[280, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[280, "advanced"]], "Plan For The Wild Part": [[280, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[282, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [422, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[282, "discussion-flow-charts"]], "BlahBlah": [[283, "BlahBlah"], [286, "BlahBlah"], [289, "BlahBlah"], [353, "BlahBlah"]], "Interactive": [[283, "Interactive"]], "For Beginners": [[283, "For-Beginners"]], "Not For Beginners?": [[283, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[283, "Strings,-1st-Explanation"]], "Operator Precedence": [[283, "Operator-Precedence"], [286, "Operator-Precedence"], [1139, "operator-precedence"]], "Floating Point Numbers": [[283, "Floating-Point-Numbers"], [1139, "floating-point-numbers"]], "Docstrings": [[283, "Docstrings"], [289, "Docstrings"], [399, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[283, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[283, "Random-Numbers"]], "Indexing and Slicing": [[283, "Indexing-and-Slicing"], [331, "Indexing-and-Slicing"], [1145, "indexing-and-slicing"]], "for Loops": [[283, "for-Loops"], [353, "for-Loops"], [428, "for-loops"], [1146, "for-loops"]], "range()": [[283, "range()"], [311, "range()"], [359, "range()"], [365, "range()"], [369, "range()"]], "Filterketten": [[283, "Filterketten"]], "Zen": [[283, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[283, "Compound-Datatypes-By-Example:-List,-Tuple"], [1140, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[283, "Compound-Datatypes-By-Example:-Dictionary"], [1140, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[283, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[283, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[283, "Compound-Datatypes-By-Example:-Set"], [1140, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[283, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[285, "python-basics-2022-04-25-2022-04-27"], [422, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[286, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[286, "Comments-vs.-Docstrings"]], "Variables and Types": [[286, "Variables-and-Types"]], "Swap": [[286, "Swap"]], "Integers are Infinitely long": [[286, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[286, "Floating-Point-Comparison"]], "Mutability/Immutability": [[286, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[286, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[286, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1172, "exercise-determine-maximum-of-two-numbers"], [1183, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[286, "Ranges"], [386, "ranges"], [836, "ranges"]], "Exercise: Sort out Duplicates": [[286, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[286, "Algorithmic-Complexity"]], "More On Dictionaries": [[286, "More-On-Dictionaries"]], "More On Sets": [[286, "More-On-Sets"]], "eval(), json": [[286, "eval(),-json"]], "Encoding": [[286, "Encoding"], [310, "encoding"], [331, "Encoding"], [347, "Encoding"], [347, "id1"], [404, "encoding"], [1221, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[288, "python-2022-05-02-2022-05-05"], [422, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[288, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[288, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[288, "excursion-can-communication-oo-modules"]], "Modules": [[288, "modules"], [301, "Modules"], [342, "modules"], [385, "modules"], [404, "modules"], [809, "modules"], [1115, "modules"]], "CSV, Functions": [[288, "csv-functions"]], "PyPI, Virtual Environments": [[288, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[288, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[288, "more-on-datatypes"]], "Random Topics": [[288, "random-topics"]], "Standard Library": [[288, "standard-library"]], "Hello Jupyter Notebook": [[289, "Hello-Jupyter-Notebook"]], "Syntax etc": [[289, "Syntax-etc"]], "Mutability": [[289, "Mutability"], [321, "Mutability"]], "Removing Elements": [[289, "Removing-Elements"], [703, "removing-elements"]], "Nested Lists?": [[289, "Nested-Lists?"]], "while loops, and else": [[289, "while-loops,-and-else"]], "for loops (and else)": [[289, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[289, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[289, "Encoding,-and-String"]], "Regular Expression": [[289, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[289, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[289, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[289, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[289, "itertools.chain()"]], "Destructor?": [[289, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[289, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[291, "python-advanced-2022-05-16-2022-05-18"], [422, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[291, "project-management"], [342, "project-management"], [411, "project-management"], [412, "project-management"], [416, "project-management"]], "Unit Testing, Test Driven Development": [[291, "unit-testing-test-driven-development"]], "Object Priented Programming": [[291, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[291, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[291, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[291, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[291, "xml-element-tree"]], "Projektabschlusstag": [[291, "projektabschlusstag"]], "Basic Python": [[291, "basic-python"]], "Assert": [[292, "Assert"]], "The id() function": [[292, "The-id()-function"]], "class Person": [[292, "class-Person"]], "Functions That Do Not Return Anything": [[292, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[292, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[292, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[292, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[292, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[292, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[294, "vorbesprechung-2022-05-11"]], "Legende": [[294, "legende"]], "Neuerungen in C++ seit 2011": [[294, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[294, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[294, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[294, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[295, "c-a-new-language-starting-in-2011"], [296, "c-a-new-language-starting-in-2011"]], "Metadata": [[295, "metadata"], [296, "metadata"], [298, "metadata"], [913, "metadata"]], "Introduction": [[295, "introduction"], [296, "introduction"], [298, "introduction"], [317, "introduction"], [318, "introduction"], [424, "introduction"], [441, "introduction"], [503, "introduction"], [555, "introduction"], [649, "introduction"], [799, "introduction"], [843, "introduction"], [984, "introduction"], [1107, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[295, "pythonicity-thank-you-readablility-and-writability"], [296, "pythonicity-thank-you-readablility-and-writability"], [298, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[295, "range-based-for-loops"], [296, "range-based-for-loops"], [298, "range-based-for-loops"], [355, "range-based-for-loops"], [374, "range-based-for-loops"], [832, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[295, "tuple-unpacking-err-structured-binding"], [296, "tuple-unpacking-err-structured-binding"], [298, "tuple-unpacking-err-structured-binding"], [355, "tuple-unpacking-err-structured-binding"], [374, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[295, "duck-typing-err-auto-without-a-duck"], [296, "duck-typing-err-auto-without-a-duck"], [298, "duck-typing-err-auto-without-a-duck"], [355, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[295, "things-that-simply-deserved-fixing-since-ages"], [296, "things-that-simply-deserved-fixing-since-ages"], [298, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[295, "brace-initialization"], [296, "brace-initialization"], [298, "brace-initialization"], [355, "brace-initialization"], [356, "brace-initialization"], [384, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[295, "new-oo-keywords-override-final-default-delete"], [296, "new-oo-keywords-override-final-default-delete"], [298, "new-oo-keywords-override-final-default-delete"], [355, "new-oo-keywords-override-final-default-delete"], [374, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[295, "strongly-typed-enum"], [296, "strongly-typed-enum"], [298, "strongly-typed-enum"], [355, "strongly-typed-enum"], [374, "strongly-typed-enum"], [849, "strongly-typed-enum"]], "Delegating Constructor": [[295, "delegating-constructor"], [296, "delegating-constructor"], [298, "delegating-constructor"], [355, "delegating-constructor"], [374, "delegating-constructor"], [779, "delegating-constructor"]], "nullptr": [[295, "nullptr"], [296, "nullptr"], [298, "nullptr"], [355, "nullptr"], [374, "nullptr"], [808, "nullptr"]], "Smart Pointers": [[295, "smart-pointers"], [296, "smart-pointers"], [298, "smart-pointers"], [318, "smart-pointers"], [356, "smart-pointers"], [626, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[295, "moving-rvalue-references"], [296, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[295, "functions-std-bind-std-function-lambdas"], [296, "functions-std-bind-std-function-lambdas"], [298, "functions-std-bind-std-function-lambdas"]], "Skeleton Project": [[296, "skeleton-project"], [298, "skeleton-project"], [667, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[297, "linux-basics-2022-10-03-2022-10-05"], [422, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[298, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [422, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[298, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[298, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[298, "coroutines-and-c-23-generators"]], "Ranges And Views": [[298, "ranges-and-views"]], "Concepts": [[298, "concepts"], [355, "concepts"], [758, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[299, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [422, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[299, "monday"]], "Tuesday": [[299, "tuesday"]], "Wednesday": [[299, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[300, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[300, "up-front-project-management"], [319, "up-front-project-management"], [341, "up-front-project-management"]], "Object Oriented Programming: Classes": [[300, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[300, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[300, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[300, "exercise-series-csv-json"]], "Iteration, Generators": [[300, "iteration-generators"]], "Going Dynamic: type(), exec()": [[300, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[300, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[300, "group-project-kickoff"], [320, "group-project-kickoff"], [342, "group-project-kickoff"], [345, "group-project-kickoff"]], "Data Structures Recap": [[300, "data-structures-recap"]], "Miscellaneous Livehacking": [[300, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[300, "function-arguments-closures-decorators"], [335, "function-arguments-closures-decorators"]], "Exceptions, with": [[300, "exceptions-with"], [335, "exceptions-with"], [338, "exceptions-with"]], "Package Management": [[300, "package-management"]], "Videos": [[300, "videos"], [346, "videos"]], "Beginner": [[300, "beginner"], [324, "beginner"]], "Advanced": [[300, "advanced"], [324, "advanced"]], "Fun": [[300, "fun"]], "Python (2022-10-17)": [[301, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[301, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[301, "Variables,-Types"]], "Immutable? References?": [[301, "Immutable?-References?"]], "And range()?": [[301, "And-range()?"]], "More About Dictionaries": [[301, "More-About-Dictionaries"], [301, "id1"], [304, "More-About-Dictionaries"], [331, "More-About-Dictionaries"], [353, "More-About-Dictionaries"], [359, "More-About-Dictionaries"], [365, "More-About-Dictionaries"], [369, "More-About-Dictionaries"], [1156, "more-about-dictionaries"]], "More About Lists": [[301, "More-About-Lists"], [304, "More-About-Lists"], [331, "More-About-Lists"], [353, "More-About-Lists"], [359, "More-About-Lists"], [365, "More-About-Lists"], [369, "More-About-Lists"], [1155, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[303, "python-2022-11-16-2022-11-18"], [304, "Python-(2022-11-16---2022-11-18)"], [422, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[303, "control-flow-sequences-iteration"], [310, "control-flow-sequences-iteration"], [313, "control-flow-sequences-iteration"], [323, "control-flow-sequences-iteration"], [324, "control-flow-sequences-iteration"], [329, "control-flow-sequences-iteration"], [330, "control-flow-sequences-iteration"], [330, "id2"], [351, "control-flow-sequences-iteration"], [352, "control-flow-sequences-iteration"], [357, "control-flow-sequences-iteration"], [358, "control-flow-sequences-iteration"], [363, "control-flow-sequences-iteration"], [364, "control-flow-sequences-iteration"], [367, "control-flow-sequences-iteration"], [368, "control-flow-sequences-iteration"]], "More Datatypes": [[303, "more-datatypes"], [310, "more-datatypes"], [313, "more-datatypes"], [323, "more-datatypes"], [324, "more-datatypes"], [324, "id2"], [329, "more-datatypes"], [330, "more-datatypes"], [351, "more-datatypes"], [352, "more-datatypes"], [357, "more-datatypes"], [363, "more-datatypes"], [364, "more-datatypes"], [367, "more-datatypes"], [426, "more-datatypes"]], "Exercise Series: CSV Files": [[303, "exercise-series-csv-files"], [323, "exercise-series-csv-files"], [324, "exercise-series-csv-files"], [329, "exercise-series-csv-files"], [330, "exercise-series-csv-files"], [351, "exercise-series-csv-files"], [352, "exercise-series-csv-files"], [358, "exercise-series-csv-files"], [363, "exercise-series-csv-files"], [364, "exercise-series-csv-files"], [367, "exercise-series-csv-files"]], "Advanced Language Features": [[303, "advanced-language-features"], [323, "advanced-language-features"], [324, "advanced-language-features"], [329, "advanced-language-features"], [489, "advanced-language-features"]], "Noob Exercises": [[303, "noob-exercises"]], "Object Oriented": [[304, "Object-Oriented"]], "Lists and Tuples": [[304, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[304, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[304, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[304, "And-Lists?-Mutable!"]], "Tuples?": [[304, "Tuples?"]], "set": [[304, "set"]], "More About Sets": [[304, "More-About-Sets"], [331, "More-About-Sets"], [359, "More-About-Sets"], [365, "More-About-Sets"], [369, "More-About-Sets"], [1157, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[304, "Comprehensions-(List,-Dictionary,-Set)"], [353, "Comprehensions-(List,-Dictionary,-Set)"], [365, "Comprehensions-(List,-Dictionary,-Set)"], [1104, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[304, "Generator-Expressions"]], "eval and exec": [[304, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[306, "linux-basics-2023-01-23-2023-01-26"], [422, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[307, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [422, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[307, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[307, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[307, "day-1-overview"]], "Introductory Live Hacking": [[307, "introductory-live-hacking"]], "The Shell": [[307, "the-shell"]], "Processes Quick Walk-Through": [[307, "processes-quick-walk-through"]], "Development: CMake Quick Intro, And Git Quick Intro": [[307, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[307, "uart"]], "SUSI": [[307, "susi"]], "Secure Shell (SSH)": [[307, "secure-shell-ssh"]], "Miscellaneous Hardware": [[307, "miscellaneous-hardware"]], "Group Exercise": [[307, "group-exercise"]], "Untold": [[307, "untold"], [317, "untold"], [320, "untold"]], "More From The Commandline": [[307, "more-from-the-commandline"]], "Multithreading (And C++)": [[307, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[308, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[308, "Filter-in-Pandas"]], "Copy vs Reference": [[308, "Copy-vs-Reference"]], "Immutable": [[308, "Immutable"]], "String": [[308, "String"]], "Regex": [[308, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[309, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[309, "pipeline-driver"]], "Virtual Environment Setup": [[309, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[309, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[309, "filter-select-uncategorized"]], "More Categories": [[309, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[310, "python-for-sap-developers-2023-03-13-2023-03-15"], [422, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[310, "day-1-basics"]], "Demo": [[310, "demo"]], "Day 2 (Basics, Continued)": [[310, "day-2-basics-continued"]], "Pandas": [[310, "pandas"], [311, "Pandas"], [313, "pandas"], [317, "pandas"], [342, "pandas"], [1229, "pandas"]], "Hacking About On A SAP Test Dataset": [[310, "hacking-about-on-a-sap-test-dataset"], [314, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[310, "untold-from-original-agenda"]], "OO Introduction": [[310, "oo-introduction"], [313, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[310, "context-managers-automatic-cleanup"], [313, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[310, "iteration-generators-comprehensions"], [313, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[310, "decorators-and-related-topics"], [313, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[310, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[311, "2023-03-13"]], "Comment vs Docstring": [[311, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[311, "Mutable?-Immutable?"]], "Lists": [[311, "Lists"], [311, "id2"], [325, "Lists"], [365, "Lists"], [525, "lists"]], "Tuples": [[311, "Tuples"]], "DataType Conversiosn": [[311, "DataType-Conversiosn"]], "String, File IO Exercise": [[311, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[312, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[313, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[313, "day-1-basics"], [346, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[313, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[313, "day-3-domain-specifics"]], "NumPy": [[313, "numpy"], [342, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[315, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[315, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[315, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[315, "DataFrame.all()-(and-any())"]], "Column Selection": [[315, "Column-Selection"]], "Dropping Columns": [[315, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[315, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[315, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[315, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[315, "Conversion"]], "Usage: A Filter": [[315, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[315, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[315, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[316, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[316, "preferred-ubuntu-under-windows-wsl"], [318, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[316, "unsupported-environments"]], "Skeleton Project Setup": [[316, "skeleton-project-setup"], [318, "skeleton-project-setup"]], "Classes, Objects, Methods": [[316, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[316, "heavy-weight-oo-muscle"], [318, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[316, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[316, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[316, "a-little-concurrency"]], "Untold So Far": [[316, "untold-so-far"]], "C++ Standard Library": [[316, "c-standard-library"]], "Miscellaneous Topics": [[316, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[317, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[317, "clean-code"], [319, "clean-code"], [320, "clean-code"]], "Demo Hacking": [[317, "demo-hacking"]], "Python Development: Select Topics": [[317, "python-development-select-topics"]], "Built-In Types: Facts": [[317, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[317, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[317, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[317, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[317, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[317, "decorators-the-ominous"]], "Modules And Packages": [[317, "modules-and-packages"], [341, "modules-and-packages"]], "Design Patterns": [[317, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[318, "c-for-embedded-developers-2023-04-18-2023-04-20"], [422, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[318, "some-details"]], "Standard Template Library": [[318, "standard-template-library"], [716, "standard-template-library"]], "Warm-Up": [[318, "warm-up"]], "Sensor Exercise, Resolved": [[318, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[318, "oo-cont-d"]], "Smart Pointers (Continued)": [[318, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[318, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[318, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[319, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[319, "day-1-python-inside-out"], [320, "day-1-python-inside-out"]], "Exercise Prerequisites": [[319, "exercise-prerequisites"], [341, "exercise-prerequisites"]], "References And Other Pitfalls": [[319, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[319, "looping-constructs-with-an-emphasis-on-the-else-clause"], [341, "looping-constructs-with-an-emphasis-on-the-else-clause"], [345, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[319, "closures-decorators-and-more"], [320, "closures-decorators-and-more"], [341, "closures-decorators-and-more"], [345, "closures-decorators-and-more"]], "Dynamic Features": [[319, "dynamic-features"], [320, "dynamic-features"], [321, "Dynamic-Features"], [341, "dynamic-features"], [345, "dynamic-features"]], "Error Handling And Recovery": [[319, "error-handling-and-recovery"], [320, "error-handling-and-recovery"], [341, "error-handling-and-recovery"], [342, "error-handling-and-recovery"], [345, "error-handling-and-recovery"]], "Miscellaneous Threading": [[319, "miscellaneous-threading"], [320, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[319, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[319, "group-project-discussion"]], "Design Patterns Overview": [[319, "design-patterns-overview"], [320, "design-patterns-overview"]], "Day 3: Group Project": [[319, "day-3-group-project"], [320, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[320, "python-advanced-2023-04-24-2023-04-26"], [422, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[320, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[320, "morning-opening"]], "Object Oriented Programming (Continued)": [[320, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[320, "project-setup-ide-usage"]], "Continue Hacking": [[320, "continue-hacking"]], "Test Driven Development, pytest": [[320, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[321, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[321, "is-vs.-=="]], "Compound DataTypes": [[321, "Compound-DataTypes"]], "class": [[321, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[322, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[323, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[324, "python-basics-2023-05-15-2023-05-17"], [325, "Python-Basics-(2023-05-15---2023-05-17)"], [422, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[324, "morning-awakening"], [368, "morning-awakening"], [375, "morning-awakening"], [377, "morning-awakening"], [377, "id1"], [380, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[324, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[324, "modules-from-standard-library"], [1208, "modules-from-standard-library"]], "Immutable vs. Mutable": [[325, "Immutable-vs.-Mutable"]], "The range Function": [[325, "The-range-Function"], [1147, "the-range-function"]], "Lambda, And Functional Programming Tools": [[325, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[327, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[328, "linux-basics-2023-05-23-2023-05-25"], [422, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[328, "introduction-concepts-and-terminology"], [372, "introduction-concepts-and-terminology"], [865, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[328, "the-shell-bash-bourne-again-shell"], [328, "id1"], [372, "the-shell-bash-bourne-again-shell"], [911, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[328, "tools-inspecting-text-files"], [372, "tools-inspecting-text-files"], [923, "tools-inspecting-text-files"]], "Morning Wakeup": [[328, "morning-wakeup"], [330, "morning-wakeup"], [356, "morning-wakeup"], [372, "morning-wakeup"], [372, "id2"], [382, "morning-wakeup"], [382, "id1"], [382, "id3"], [382, "id4"]], "I/O Redirection And Pipes": [[328, "i-o-redirection-and-pipes"], [372, "i-o-redirection-and-pipes"], [872, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[328, "archiving-and-compression"], [372, "archiving-and-compression"], [854, "archiving-and-compression"], [855, "archiving-and-compression"]], "Networking": [[328, "networking"]], "Processes And Scheduling": [[328, "processes-and-scheduling"]], "Shell Scripting (at least some of it)": [[328, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[329, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[330, "python-basics-2023-06-20-2023-06-22"], [331, "Python-Basics-(2023-06-20---2023-06-22)"], [422, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[330, "day2"]], "File I/O, And Encoding": [[330, "file-i-o-and-encoding"]], "Python Videos": [[330, "python-videos"]], "NumPy, Pandas, Matplotlib": [[330, "numpy-pandas-matplotlib"]], "DataTypes": [[331, "DataTypes"], [353, "DataTypes"]], "(Im)mutable?": [[331, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[331, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[331, "len(),-range(),-for"]], "Generators, yield": [[331, "Generators,-yield"]], "Other -ables: Callable": [[331, "Other--ables:-Callable"]], "exec() (and eval())": [[331, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[331, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[332, "python-basics-jupyter-notebook"], [354, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[333, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[333, "toolchain-introduction"], [349, "toolchain-introduction"], [1273, "toolchain-introduction"]], "Project Structure, Dependencies": [[333, "project-structure-dependencies"], [349, "project-structure-dependencies"], [1273, "project-structure-dependencies"]], "External Dependencies": [[333, "external-dependencies"], [349, "external-dependencies"], [377, "external-dependencies"], [380, "external-dependencies"], [522, "external-dependencies"], [1273, "external-dependencies"]], "Code Generators": [[333, "code-generators"], [349, "code-generators"], [376, "code-generators"], [377, "code-generators"], [379, "code-generators"], [380, "code-generators"], [1273, "code-generators"]], "Automatic Testing": [[333, "automatic-testing"], [349, "automatic-testing"], [1273, "automatic-testing"]], "Installation And Deployment": [[333, "installation-and-deployment"], [349, "installation-and-deployment"], [1273, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[334, "cmake-an-introduction-2023-07-18"], [422, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[335, "python-advanced-2023-09-25-2023-09-27"], [336, "Python-Advanced-(2023-09-25---2023-09-27)"], [422, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[335, "recap-of-python-basics-course-before-summer"], [338, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[335, "project-management-requirements-sandboxing-testing"], [338, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[335, "into-the-wild-group-project-kickoff"], [338, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[335, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [338, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[335, "package-and-dependency-management"]], "Equality vs. Identity": [[336, "Equality-vs.-Identity"]], "Functions Are Objects": [[336, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[337, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [340, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[338, "python-advanced-2023-10-09-2023-10-11"], [422, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[338, "classes-basics"]], "Classes: More": [[338, "classes-more"]], "Spoiler: Group Project Outcome": [[338, "spoiler-group-project-outcome"]], "More About Functions": [[338, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[339, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[339, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[341, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[341, "day-1-basic-python"], [345, "day-1-basic-python"]], "Datatypes, Datatypes": [[341, "datatypes-datatypes"], [345, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[341, "day-2-advanced-python-features"]], "Multiprocessing": [[341, "multiprocessing"]], "Day 3: Into The Wild": [[341, "day-3-into-the-wild"]], "Data Science Topics": [[341, "data-science-topics"], [345, "data-science-topics"]], "Group Project: An Idea": [[341, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[342, "python-advanced-2023-10-24-2023-10-26"], [422, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[342, "python-basics-recap"], [343, "Python-Basics-Recap"]], "The Very Basics": [[342, "the-very-basics"]], "range(), And Iteration In General": [[342, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[342, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[342, "object-oriented-programming-continued"], [342, "id1"]], "Group Project, OO-ified": [[342, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[342, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[342, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[342, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[342, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[342, "compositesink"]], "MQTT Sink Implementation": [[342, "mqtt-sink-implementation"]], "Timestamps?": [[342, "timestamps"]], "Jupyter Notebook: Python Advanced": [[343, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[343, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[343, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[343, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[343, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[343, "assert"]], "Iteration, Generators, Iterator Protocol": [[343, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[343, "AAARGHHH"]], "Generator Expresssions": [[343, "Generator-Expresssions"]], "Dictionary Comprehension": [[343, "Dictionary-Comprehension"], [353, "Dictionary-Comprehension"], [1104, "dictionary-comprehension"]], "Functional Tools": [[343, "Functional-Tools"]], "filter()": [[343, "filter()"], [353, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[344, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[345, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[345, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[345, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[345, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[345, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[345, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[346, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[346, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[346, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[347, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[347, "Assignment,-And-IDs"]], "(Im)Mutability": [[347, "(Im)Mutability"]], "Operator Overloading (Basics)": [[347, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[347, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[347, "Methods"], [660, "methods"], [845, "methods"], [846, "methods"], [847, "methods"], [1125, "methods"]], "numpy, pandas, matplotlib": [[347, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[348, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[349, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[350, "cmake-an-introduction-2023-11-27"], [422, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[351, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[352, "python-basics-2023-11-29-2023-12-01"], [353, "Python-Basics-(2023-11-29---2023-12-01)"], [422, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[352, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[352, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[352, "day-3-morning-awakening"]], "Dictionary (mutable)": [[353, "Dictionary-(mutable)"]], "Set (mutable)": [[353, "Set-(mutable)"]], "Boolean (immutable)": [[353, "Boolean-(immutable)"]], "split() and join()": [[353, "split()-and-join()"]], "Pythonicity (enumerate())": [[353, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[353, "pandas,-matplotlib"]], "Generator Expression": [[353, "Generator-Expression"]], "zip(), And Dictionaries": [[353, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[355, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[355, "introduction-a-new-language-to-me"], [374, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[355, "constexpr-constinit-consteval"], [374, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[355, "functions-std-function-lambdas"], [356, "functions-std-function-lambdas"], [374, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[355, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[355, "moving-usage"]], "Moving: Implementation": [[355, "moving-implementation"]], "Type Erasure": [[355, "type-erasure"]], "Allocators": [[355, "allocators"], [711, "allocators"], [783, "allocators"]], "C++ Pythonic Toolcase": [[355, "c-pythonic-toolcase"], [374, "c-pythonic-toolcase"]], "Outlook In >=20": [[355, "outlook-in-20"]], "Attributes And The Like": [[355, "attributes-and-the-like"]], "<algorithm> Overview": [[355, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[355, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[356, "c-advanced-topics-2023-12-04-2023-12-06"], [422, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[356, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[356, "pythonicity"]], "New OO Features": [[356, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[356, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[356, "classic-polymorphism-interfaces"]], "Move Semantics": [[356, "move-semantics"]], "Day 3: All The Rest": [[356, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[356, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[356, "moving-roundup"]], "Containers And Algorithms": [[356, "containers-and-algorithms"]], "And Embedded?": [[356, "and-embedded"]], "Still Untold": [[356, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[357, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[358, "python-basics-2023-12-18-2023-12-20"], [359, "Python-Basics-(2023-12-18---2023-12-20)"], [360, "python-basics-2023-12-18-2023-12-20"], [422, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[358, "more-about-datatypes"], [359, "More-About-Datatypes"], [368, "more-about-datatypes"]], "A Bit Of OO": [[358, "a-bit-of-oo"]], "Datatype Conversion": [[359, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[359, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[359, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[359, "Functional-Programming"]], "set(), list(), dict()": [[359, "set(),-list(),-dict()"]], "while (and else)": [[359, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[359, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[359, "Return-Value?-Parameters?"]], "References, Immutability": [[359, "References,-Immutability"]], "Und Schuetzen?": [[359, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[359, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[359, "pathlib,-os.path"]], "Regexen": [[359, "Regexen"]], "distill.py": [[359, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[361, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[362, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[363, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[363, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[364, "python-advanced-2024-01-15-2024-01-17"], [366, "python-advanced-2024-01-15-2024-01-17"], [422, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[364, "group-project"], [410, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[365, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[365, "DocStrings"]], "Type System": [[365, "Type-System"], [442, "type-system"]], "Infinity?": [[365, "Infinity?"]], "dict, and enumerate()": [[365, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[367, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[367, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[368, "python-basics-2024-01-29-2024-01-31"], [369, "Python-Basics-(2024-01-29---2024-01-31)"], [422, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[368, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[368, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[368, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[368, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[368, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[369, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[369, "Wuerfeln"]], "Primeness, while": [[369, "Primeness,-while"]], "The range function": [[369, "The-range-function"]], "Sequences": [[369, "Sequences"]], "Misc Crap": [[369, "Misc-Crap"]], "Sequential Datatyoes": [[369, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[369, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[369, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[369, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[369, "os.walk()"]], "pathlib": [[369, "pathlib"]], "numpy, scikit-learn": [[369, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[370, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Agenda: Linux Basics (2024-03-11 - 2024-03-13)": [[371, "agenda-linux-basics-2024-03-11-2024-03-13"]], "Linux Basics (2024-03-11 - 2024-03-13)": [[372, "linux-basics-2024-03-11-2024-03-13"], [422, "linux-basics-2024-03-11-2024-03-13"]], "SSH/Putty Setup": [[372, "ssh-putty-setup"]], "Quiz \ud83e\udd77": [[372, "quiz-ninja"]], "The Shell (Bash - \u201cBourne Again Shell\u201d) (Continued)": [[372, "the-shell-bash-bourne-again-shell-continued"]], "Missing Pieces": [[372, "missing-pieces"]], "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)": [[373, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"], [422, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"]], "Day 1: Refactoring Of Existing Code, And Basic Unit Testing": [[373, "day-1-refactoring-of-existing-code-and-basic-unit-testing"]], "Day 2: More Tests (Towards An Exact Definition Of Existing Code)": [[373, "day-2-more-tests-towards-an-exact-definition-of-existing-code"]], "Day 3: New Functionality - Test-First Development": [[373, "day-3-new-functionality-test-first-development"]], "Agenda: C++: A Thorough Overview (2024-06-03)": [[374, "agenda-c-a-thorough-overview-2024-06-03"]], "Brace Initialization (std::initializer_list<>)": [[374, "brace-initialization-std-initializer-list"]], "Smart Pointers: std::shared_ptr<>, std::unique_ptr<> (And A Little std::move)": [[374, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"], [375, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"]], "Moving, And RValue References (And Perfect Forwarding \ud83d\udc4f)": [[374, "moving-and-rvalue-references-and-perfect-forwarding-clap"]], "Moving": [[374, "moving"]], "Something Similar But Completely Different: Perfect Forwarding": [[374, "something-similar-but-completely-different-perfect-forwarding"]], "Unit Testing With googletest": [[374, "unit-testing-with-googletest"], [1246, "unit-testing-with-googletest"]], "Code (And Project) Sanity": [[374, "code-and-project-sanity"]], "Clean Code, Design Patterns": [[374, "clean-code-design-patterns"]], "C++: A Thorough Overview (2024-06-03)": [[375, "c-a-thorough-overview-2024-06-03"], [422, "c-a-thorough-overview-2024-06-03"]], "Introduction: What C++ >= 11 Brings": [[375, "introduction-what-c-11-brings"]], "Unit Testing, Test Driven Development, And googletest": [[375, "unit-testing-test-driven-development-and-googletest"]], "A Little CMake": [[375, "a-little-cmake"]], "Exercise: class Sensor, And A SensorConfig Thereof": [[375, "exercise-class-sensor-and-a-sensorconfig-thereof"]], "Multithreading: Threads, Race Conditions, Locking Primitives": [[375, "multithreading-threads-race-conditions-locking-primitives"]], "Exercise: Make SensorConfig Thread Safe": [[375, "exercise-make-sensorconfig-thread-safe"]], "Multithreading: Communication": [[375, "multithreading-communication"]], "Exercise Time": [[375, "exercise-time"]], "Group 1: Data Logger (Sketch)": [[375, "group-1-data-logger-sketch"]], "Group 2: Use std::latch": [[375, "group-2-use-std-latch"]], "Group 3: Program a MyLatch Class": [[375, "group-3-program-a-mylatch-class"]], "RValue References, Move Semantics": [[375, "rvalue-references-move-semantics"]], "Agenda: CMake: Advanced Topics (2024-06-11)": [[376, "agenda-cmake-advanced-topics-2024-06-11"], [379, "agenda-cmake-advanced-topics-2024-06-11"]], "Optional Code And External Dependencies": [[376, "optional-code-and-external-dependencies"], [379, "optional-code-and-external-dependencies"]], "Testing, Code Coverage, Code Analysis": [[376, "testing-code-coverage-code-analysis"], [379, "testing-code-coverage-code-analysis"]], "Multiplatform (And Cross) Development": [[376, "multiplatform-and-cross-development"], [379, "multiplatform-and-cross-development"]], "Architectural Considerations": [[376, "architectural-considerations"], [379, "architectural-considerations"]], "CMake: Advanced Topics (2024-06-11)": [[377, "cmake-advanced-topics-2024-06-11"], [422, "cmake-advanced-topics-2024-06-11"]], "Exercise: Build It!": [[377, "exercise-build-it"], [380, "exercise-build-it"]], "Bringing CMake Information Into C/C++": [[377, "bringing-cmake-information-into-c-c"]], "More About Dependencies": [[377, "more-about-dependencies"]], "Much More \u2026 (Various Kinds Of Dependencies)": [[377, "much-more-various-kinds-of-dependencies"]], "The CMake Language": [[377, "the-cmake-language"], [380, "the-cmake-language"]], "The CMake Language, Continued": [[377, "the-cmake-language-continued"]], "CMake: An Introduction (2024-06-18)": [[378, "cmake-an-introduction-2024-06-18"]], "CMake: Advanced Topics (2024-07-01)": [[380, "cmake-advanced-topics-2024-07-01"], [422, "cmake-advanced-topics-2024-07-01"]], "Dependencies, Dependencies, Properties, \u2026": [[380, "dependencies-dependencies-properties"]], "C++: A Wild Ride (2024-09-30 - 2024-10-04)": [[381, "c-a-wild-ride-2024-09-30-2024-10-04"]], "\u201cNew\u201d vs. \u201cOld\u201d C++: An Overview": [[381, "new-vs-old-c-an-overview"], [382, "new-vs-old-c-an-overview"]], "\u201cNew\u201d C++: Syntactic Goodies (Pythonicity)": [[381, "new-c-syntactic-goodies-pythonicity"]], "Back To The Beginnings Of C++: What Everybody Has To Know": [[381, "back-to-the-beginnings-of-c-what-everybody-has-to-know"]], "From C To C++": [[381, "from-c-to-c"]], "Classes And Methods (And Functions)": [[381, "classes-and-methods-and-functions"]], "Templates": [[381, "templates"]], "Inheritance, And Interfaces": [[381, "inheritance-and-interfaces"]], "Overengineering (Err, OO Design)": [[381, "overengineering-err-oo-design"]], "More Design Patterns": [[381, "more-design-patterns"]], "More C++ >= 11": [[381, "more-c-11"]], "OO Features": [[381, "oo-features"]], "Memory Management": [[381, "memory-management"], [383, "memory-management"]], "Move Semantics, And Perfect Forwarding": [[381, "move-semantics-and-perfect-forwarding"]], "Functional: An Alternative To Full Polymorphism": [[381, "functional-an-alternative-to-full-polymorphism"]], "Going Embedded": [[381, "going-embedded"]], "Optional Topics": [[381, "optional-topics"]], "C++: An Embedded Wild Ride (2024-09-30 - 2024-10-04)": [[382, "c-an-embedded-wild-ride-2024-09-30-2024-10-04"], [422, "c-an-embedded-wild-ride-2024-09-30-2024-10-04"]], "Basic C++: Classes": [[382, "basic-c-classes"]], "More About Classes": [[382, "more-about-classes"]], "Preparing for 2nd exercise (class FileSensor)": [[382, "preparing-for-2nd-exercise-class-filesensor"]], "Exercise: class FileSensor": [[382, "exercise-class-filesensor"]], "Inheritance, And Polymorphism": [[382, "inheritance-and-polymorphism"]], "Code Generation With CMake": [[382, "code-generation-with-cmake"]], "Project Work (Tests err Requirements)": [[382, "project-work-tests-err-requirements"]], "Resource Management: Copy": [[382, "resource-management-copy"]], "Smart Pointers: std::shared_ptr<>": [[382, "smart-pointers-std-shared-ptr"]], "Smart Pointers: std::unique_ptr<>": [[382, "smart-pointers-std-unique-ptr"]], "Resource Management: Move": [[382, "resource-management-move"]], "Eliminating virtual: Template CanDataSink<>": [[382, "eliminating-virtual-template-candatasink"]], "Eliminating virtual: using std::variant": [[382, "eliminating-virtual-using-std-variant"]], "Approach 1: Pointers To Alternatives In A std::variant": [[382, "approach-1-pointers-to-alternatives-in-a-std-variant"]], "Approach 2: Alternative Objects In A std::variant": [[382, "approach-2-alternative-objects-in-a-std-variant"]], "Agenda: C++: A One-Day Overview (2024-11-19 - 2024-11-21)": [[383, "agenda-c-a-one-day-overview-2024-11-19-2024-11-21"]], "The \u201cNew C++\u201d: Fundamental Changes Since 2011": [[383, "the-new-c-fundamental-changes-since-2011"]], "Livehacking screenplay": [[383, null]], "Low Hanging Fruit": [[383, "low-hanging-fruit"]], "Lambdas": [[383, "lambdas"], [385, "lambdas"]], "Optional (But Cool) Topics": [[383, "optional-but-cool-topics"]], "C++: A One-Day Overview (2024-11-19 - 2024-11-21)": [[384, "c-a-one-day-overview-2024-11-19-2024-11-21"], [422, "c-a-one-day-overview-2024-11-19-2024-11-21"]], "Course Flow: Questions And Discussions": [[384, "course-flow-questions-and-discussions"]], "std::map, And Pitfalls (Pitfall: Encapsulate std::map Value In class Item)": [[384, "std-map-and-pitfalls-cxx11-overview-class-item-encap"]], "Section(s) in script": [[384, null], [384, null], [384, null], [384, null]], "Smart Pointers, And Move Semantics": [[384, "smart-pointers-and-move-semantics"]], "Lambda": [[384, "lambda"], [386, "lambda"], [802, "lambda"], [803, "lambda"]], "Agenda: C++: News Until C++20 (2025-05-14 - 2025-05-15)": [[385, "agenda-c-news-until-c-20-2025-05-14-2025-05-15"]], "Training Goal/Style": [[385, "training-goal-style"], [387, "training-goal-style"]], "constexpr, and the C++20 consteval and constinit": [[385, "constexpr-and-the-c-20-consteval-and-constinit"], [386, "constexpr-and-the-c-20-consteval-and-constinit"]], "Concepts (a.k.a. \u201cTemplate error messages are a PITA\u201d)": [[385, "concepts-a-k-a-template-error-messages-are-a-pita"], [386, "concepts-a-k-a-template-error-messages-are-a-pita"]], "Local variables in if and for statements": [[385, "local-variables-in-if-and-for-statements"], [386, "local-variables-in-if-and-for-statements"]], "Attributes": [[385, "attributes"], [386, "attributes"], [748, "attributes"], [1121, "attributes"], [1233, "attributes"]], "Spaceship Operator": [[385, "spaceship-operator"]], "Multithreading (And Related Topics)": [[385, "multithreading-and-related-topics"], [386, "multithreading-and-related-topics"]], "News From The Standard Library": [[385, "news-from-the-standard-library"]], "Optional Content From Past C++ Versions": [[385, "optional-content-from-past-c-versions"]], "C++: News Until C++20 (2025-05-14 - 2050-05-15)": [[386, "c-news-until-c-20-2025-05-14-2050-05-15"]], "The Spaceship Operator": [[386, "the-spaceship-operator"]], "Something Different: Coroutines": [[386, "something-different-coroutines"]], "Agenda: C++: News Until C++20 (2 Days, Yet Unspecified)": [[387, "agenda-c-news-until-c-20-2-days-yet-unspecified"]], "C++: News Until C++20 (2 Days, Yet Unspecified)": [[388, "c-news-until-c-20-2-days-yet-unspecified"]], "Screenplay Checker": [[389, "screenplay-checker"]], "GPIO: Blinklicht": [[390, "gpio-blinklicht"]], "Commandline": [[390, "commandline"], [395, "commandline"], [891, "commandline"]], "sysfs GPIO": [[390, "sysfs-gpio"]], "Electronic Aspect": [[390, "electronic-aspect"]], "External Circuitry": [[390, "external-circuitry"]], "Raspberry Header Pinout": [[390, "raspberry-header-pinout"]], "Implementation Notes": [[390, "implementation-notes"]], "GPIO: Blinklicht Interface": [[391, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[392, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[393, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[394, "ece19-exercises-and-custom-topics"]], "Reading a File": [[395, "reading-a-file"], [1021, "reading-a-file"]], "Output": [[395, "output"]], "2021-05-20 (G2)": [[396, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[396, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[396, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[396, "Reading-File-Line-by-Line"]], "Iterating a File": [[396, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[396, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[396, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[396, "str.split()"]], "2021-05-21": [[397, "2021-05-21"], [404, "id11"]], "Modules and Packages": [[397, "Modules-and-Packages"], [1115, "modules-and-packages"]], "Strings vs. Bytes": [[398, "Strings-vs.-Bytes"]], "Batteries": [[399, "Batteries"]], "Key Value Map": [[399, "Key-Value-Map"]], "Comments vs Documentation": [[399, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[399, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[399, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[399, "Arithmetic-Operators"], [447, "arithmetic-operators"], [1127, "arithmetic-operators"]], "Wertebereich von Integers": [[399, "Wertebereich-von-Integers"]], "An Example": [[400, "An-Example"], [1150, "an-example"]], "Sidenote: Pure Beauty": [[400, "Sidenote:-Pure-Beauty"], [1150, "sidenote-pure-beauty"]], "Parameters and Types": [[400, "Parameters-and-Types"], [1150, "parameters-and-types"]], "Pitfalls": [[400, "Pitfalls"]], "Cloud Computer, SSH Login": [[401, "cloud-computer-ssh-login"]], "Machine, Logins": [[401, "machine-logins"]], "Login via Secure Shell (SSH)": [[401, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[402, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[403, "embedded-computing-1-ece-19"]], "Daily Log": [[404, "daily-log"]], "2021-03-04": [[404, "id1"]], "2021-03-05": [[404, "id2"]], "Cheat Sheets": [[404, null]], "2021-03-18": [[404, "id3"]], "2021-03-26": [[404, "id4"]], "2021-04-15": [[404, "id5"]], "2021-04-21": [[404, "id6"]], "Git Intro": [[404, "git-intro"]], "Download and Installation": [[404, null], [409, null]], "2021-04-29": [[404, "id7"]], "2021-05-10": [[404, "id8"]], "Org Stuff": [[404, "org-stuff"]], "Python: Functions": [[404, "python-functions"]], "2021-05-12": [[404, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[404, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[404, "id10"]], "Reiterating on Exercise": [[404, "reiterating-on-exercise"]], "import argparse": [[404, "import-argparse"]], "Exercise digit (Once More)": [[404, "exercise-digit-once-more"]], "2021-06-01": [[404, "id12"]], "sysfs GPIO: Blinking an LED": [[404, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[404, "id13"]], "Embedded Computing 1 (Deutsch)": [[405, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[405, "lehrinhalte"]], "Lernergebnisse der LV": [[405, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[405, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[405, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[405, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[405, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[406, "embedded-computing-1-english"]], "Course Content": [[406, "course-content"]], "Learning Outcome": [[406, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[406, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[406, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[406, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[406, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[407, "plan-for-summer-2021"]], "Linux Introduction": [[407, "linux-introduction"]], "Slides": [[407, null], [407, null], [407, null]], "C/C++ Development": [[407, "c-c-development"]], "Python Development": [[407, "python-development"]], "2021-10-07": [[408, "id1"]], "Whose Fault It Is": [[408, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[409, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[409, "linux-unix"]], "Git": [[409, "git"]], "2021-10-28": [[410, "id1"]], "Discussion of Tasks": [[410, "discussion-of-tasks"]], "TODOs": [[410, "todos"]], "2021-11-15": [[411, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[411, "systems-programming-files-directories-links"]], "2021-11-29": [[412, "id1"]], "jjjj": [[412, "jjjj"]], "2021-12-1{4,5}": [[413, "id1"]], "Future Topics": [[413, "future-topics"]], "Threading": [[413, "threading"]], "C++ Sideways": [[413, "c-sideways"]], "2022-01-10": [[414, "id1"]], "Scheduling": [[414, "scheduling"], [1064, "scheduling"], [1065, "scheduling"]], "2022-01-12": [[415, "id1"]], "Scheduling and Realtime": [[415, "scheduling-and-realtime"], [419, "scheduling-and-realtime"]], "2022-02-15": [[416, "id1"]], "Agenda/Log": [[417, "agenda-log"], [418, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[418, "embedded-computing-2-ece-19"]], "Project Repository": [[418, "project-repository"]], "Test Material": [[418, "test-material"]], "Exam Material Overview": [[419, "exam-material-overview"]], "Questions": [[419, "questions"], [419, "id1"], [722, "questions"], [878, "questions"], [879, "questions"], [904, "questions"]], "Slide Material": [[419, "slide-material"], [419, "id2"], [851, "slide-material"]], "Embedded Computing 1+2, ECE 19": [[420, "embedded-computing-1-2-ece-19"]], "Log Of Past Courses": [[422, "log-of-past-courses"]], "C++: What\u2019s New In C++20 (2025-05-14 - 2025-05-15)": [[422, "c-what-s-new-in-c-20-2025-05-14-2025-05-15"]], "CMake: Basics (2024-06-18)": [[422, "cmake-basics-2024-06-18"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[422, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[422, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[422, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[422, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[422, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[422, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[422, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[422, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[422, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[422, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[422, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[422, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[422, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[422, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[422, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[422, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[422, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[422, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[422, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[422, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[422, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[422, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[422, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[422, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[422, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[422, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[422, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[422, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[422, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[422, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[422, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[422, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[422, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[422, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[422, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[422, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[422, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[422, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[422, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[422, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[422, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[422, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[422, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[422, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[422, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[422, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[422, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[422, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[422, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[422, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[422, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[422, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[422, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[422, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[422, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[422, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[422, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[422, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[422, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[422, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[422, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[422, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[422, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[422, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[422, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[422, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[422, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[422, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[422, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[422, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[422, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[422, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[422, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[422, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[422, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[422, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[422, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[422, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[422, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[422, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[422, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[422, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "On Windows": [[423, "on-windows"]], "On Linux": [[423, "on-linux"]], "The Book (1)": [[424, "the-book-1"]], "The Book (2)": [[424, "the-book-2"]], "The Beginning": [[424, "the-beginning"]], "Cool Guys and Their Hobby": [[424, "cool-guys-and-their-hobby"]], "History of UNIX": [[424, "history-of-unix"]], "My First Program (1)": [[425, "my-first-program-1"]], "My First Program (2)": [[425, "my-first-program-2"]], "Character Arrays - Strings": [[425, "character-arrays-strings"]], "Variables and Arithmetic": [[426, "variables-and-arithmetic"]], "My Second Program (1)": [[426, "my-second-program-1"]], "My Second Program (2)": [[426, "my-second-program-2"]], "My Second Program (3)": [[426, "my-second-program-3"]], "My Second Program (4)": [[426, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[427, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[428, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[428, "for-loop-simplification-2"]], "Second Program, revisited": [[428, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[429, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[430, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[430, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[431, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[432, "character-i-o"]], "The Outside World": [[432, "the-outside-world"]], "cat for the Poor (1)": [[432, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[432, "cat-for-the-poor-2"]], "More Examples \u2026": [[432, "more-examples"]], "More Examples - if": [[432, "more-examples-if"]], "if, Formally": [[432, "if-formally"]], "Operators, Formally": [[432, "operators-formally"]], "Exercise: wc For The Poor": [[433, "exercise-wc-for-the-poor"]], "Arrays": [[434, "arrays"]], "Array Definition, Explicit Initialization": [[434, "array-definition-explicit-initialization"]], "Array Access": [[434, "array-access"]], "Discussion: Initialization": [[434, "discussion-initialization"]], "Discussion: if, else": [[434, "discussion-if-else"]], "Array Initializer": [[434, "array-initializer"]], "Discussion: Initializer": [[434, "discussion-initializer"]], "Initialization using memset()": [[434, "initialization-using-memset"]], "Discussion: memset()": [[434, "discussion-memset"]], "Exercise: Character Histogram": [[435, "exercise-character-histogram"]], "A Nonsensical Example": [[436, "a-nonsensical-example"]], "Function Signature": [[436, "function-signature"]], "Discussion": [[436, "discussion"]], "Definition vs. Declaration (1)": [[436, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[436, "definition-vs-declaration-2"]], "By Value / By Reference": [[436, "by-value-by-reference"]], "Exercise: Forward Declaration": [[437, "exercise-forward-declaration"]], "Character Arrays": [[438, "character-arrays"]], "Strings: Mistake by Design?": [[438, "strings-mistake-by-design"]], "Strings: Definition": [[438, "strings-definition"]], "Strings: Library Functions": [[438, "strings-library-functions"]], "Strings as Parameters": [[438, "strings-as-parameters"]], "Strings: Dangers": [[438, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[439, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[440, "lifetime-of-variables"]], "Lifetime": [[440, "lifetime"]], "Global Variables": [[440, "global-variables"], [634, "global-variables"]], "Global Variables: How?": [[440, "global-variables-how"]], "Variable Names": [[443, "variable-names"]], "Variable- and Function Names": [[443, "variable-and-function-names"]], "Data Types, Sizes": [[444, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[444, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[444, "integer-variants-qualifiers"]], "Widths": [[444, "widths"]], "Constants": [[445, "constants"]], "Constants and Types": [[445, "constants-and-types"]], "Character Constants: Escape Sequences": [[445, "character-constants-escape-sequences"]], "String Constants": [[445, "string-constants"]], "Character vs. String Constants": [[445, "character-vs-string-constants"]], "Symbolic Constants (1)": [[445, "symbolic-constants-1"]], "Symbolic Constants (2)": [[445, "symbolic-constants-2"]], "Variable Definitions": [[446, "variable-definitions"]], "Definitions und Initialization": [[446, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[446, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[446, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[447, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[447, "arithmetic-operators-2"]], "Relational and Logical Operators": [[448, "relational-and-logical-operators"]], "Relational Operators (1)": [[448, "relational-operators-1"]], "Relational Operators (2)": [[448, "relational-operators-2"]], "Logical (Boolean) Operators": [[448, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[448, "boolean-operators-short-circuit"]], "Type Conversions": [[449, "type-conversions"]], "Implicit Type Conversions": [[449, "implicit-type-conversions"]], "Sign Bugs": [[449, "sign-bugs"]], "Truncation": [[449, "truncation"]], "Sign Propagation": [[449, "sign-propagation"]], "Conversion Using Operators": [[449, "conversion-using-operators"]], "Conversion and unsigned (1)": [[449, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[449, "conversion-and-unsigned-2"]], "Compiler Warnings": [[449, "compiler-warnings"]], "Last Warning": [[449, "last-warning"], [1058, "last-warning"]], "Forced Conversion - Cast": [[449, "forced-conversion-cast"]], "Increment, Decrement": [[450, "increment-decrement"]], "Confusion: ++, --": [[450, "confusion"]], "Confused to perfection (1)": [[450, "confused-to-perfection-1"]], "Confused to perfection (2)": [[450, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[451, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[452, "bit-operators"]], "Bit Manipulation": [[452, "bit-manipulation"]], "Bitwise AND and OR": [[452, "bitwise-and-and-or"]], "Bitwise XOR": [[452, "bitwise-xor"]], "Shift Left": [[452, "shift-left"]], "Shift Right": [[452, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[452, "inverting-one-s-complement"]], "Assignment with Calculation": [[453, "assignment-with-calculation"]], "Combined Operators": [[453, "combined-operators"]], "?: - Conditional Expression": [[454, "conditional-expression"]], "?: - Conditional Expression (1)": [[454, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[454, "conditional-expression-2"]], "Precedence, Associativity": [[455, "precedence-associativity"]], "Summary: Operators": [[455, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[455, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[455, "operators-precedence-und-associativity-2"]], "More Warnings": [[455, "more-warnings"]], "Types, Operators, Expressions": [[456, "types-operators-expressions"]], "Statements and Blocks": [[457, "statements-and-blocks"]], "Statement vs. Block": [[457, "statement-vs-block"]], "if - else": [[458, "if-else"]], "Branches": [[458, "branches"]], "True or False? What is Truth?": [[458, "true-or-false-what-is-truth"]], "else is optional (1)": [[458, "else-is-optional-1"]], "else is optional (2)": [[458, "else-is-optional-2"]], "else - if": [[459, "else-if"]], "Style Matters": [[459, "style-matters"]], "switch": [[460, "switch"], [460, "id1"]], "Case Distinctions": [[460, "case-distinctions"]], "if - else if vs. switch": [[460, "if-else-if-vs-switch"]], "Loops: while and for": [[461, "loops-while-and-for"]], "while: general purpose loop": [[461, "while-general-purpose-loop"]], "From while to for (1)": [[461, "from-while-to-for-1"]], "From while to for (2)": [[461, "from-while-to-for-2"]], "for, a Little Closer": [[461, "for-a-little-closer"]], "Comma Operator": [[461, "comma-operator"]], "for: Infamous Idioms": [[461, "for-infamous-idioms"]], "Loops: do - while": [[462, "loops-do-while"]], "do - while: Condition After Body": [[462, "do-while-condition-after-body"]], "goto and Labels": [[464, "goto-and-labels"]], "Structured Programming vs. goto": [[464, "structured-programming-vs-goto"]], "goto: Definition": [[464, "goto-definition"]], "goto: Use Cases": [[464, "goto-use-cases"]], "Program Flow": [[465, "program-flow"]], "Nesting": [[466, "nesting"]], "Declaration vs. Definition": [[466, "declaration-vs-definition"]], "A Monolithic Program": [[466, "a-monolithic-program"]], "Separate Compilation": [[466, "separate-compilation"]], "Extern/Global Variables": [[467, "extern-global-variables"]], "Variables: Declaration and Definition": [[467, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[467, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[467, "variables-separating-declaration-from-definition-2"]], "Header Files": [[468, "header-files"]], "Declarations: Problems (1)": [[468, "declarations-problems-1"]], "Declarations: Problems (2)": [[468, "declarations-problems-2"]], "Declarations: Solutions": [[468, "declarations-solutions"]], "Static Variables": [[469, "static-variables"]], "Lifetime and Visibility (1)": [[469, "lifetime-and-visibility-1"]], "Automatic Variables": [[469, "automatic-variables"]], "Local static Variable": [[469, "local-static-variable"]], "Global static Variable": [[469, "global-static-variable"]], "Global Variable": [[469, "global-variable"], [1149, "global-variable"]], "C Preprocessor: Basics": [[470, "c-preprocessor-basics"]], "#include": [[470, "include"]], "Macros: Text Replacement": [[470, "macros-text-replacement"]], "Macros: Constant Definition": [[470, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[470, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[470, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[470, "include-guards-1"]], "Include Guards (2)": [[470, "include-guards-2"]], "The C Preprocessor: Last Words": [[470, "the-c-preprocessor-last-words"], [471, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[471, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[471, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[471, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[471, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[471, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[471, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[471, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[471, "stringification-1"]], "Stringification (2)": [[471, "stringification-2"]], "Token Pasting (1)": [[471, "token-pasting-1"]], "Token Pasting (2)": [[471, "token-pasting-2"]], "Warnings and Errors": [[471, "warnings-and-errors"]], "Predefined Macros (1)": [[471, "predefined-macros-1"]], "Functions and Program Structure": [[472, "functions-and-program-structure"]], "Pointers and Addresses": [[473, "pointers-and-addresses"]], "Pointers: Basics": [[473, "pointers-basics"]], "Pointer: Operators": [[473, "pointer-operators"]], "More Examples": [[473, "more-examples"]], "Pointers as Function Parameters": [[474, "pointers-as-function-parameters"]], "Call by Reference (1)": [[474, "call-by-reference-1"]], "Call by Reference (2)": [[474, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[475, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[476, "pointers-and-arrays"], [478, "pointers-and-arrays"]], "It\u2019s Only Memory": [[476, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[476, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[476, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[476, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[476, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[476, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[476, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[476, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[476, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[476, "pointer-arithmetic-arbitrary-datatypes"]], "main() Can Take Parameters": [[477, "main-can-take-parameters"]], "struct: Basics": [[479, "struct-basics"]], "struct: Compound Datatypes": [[479, "struct-compound-datatypes"]], "struct: How?": [[479, "struct-how"]], "Usage": [[479, "usage"], [688, "usage"], [695, "usage"]], "Nested Structures": [[479, "nested-structures"]], "Memory Layout": [[479, "memory-layout"]], "Recursive Structures?": [[479, "recursive-structures"]], "struct: Functions": [[480, "struct-functions"]], "Parameters and Return (1)": [[480, "parameters-and-return-1"]], "Parameters and Return (2)": [[480, "parameters-and-return-2"]], "Parameters and Return (3)": [[480, "parameters-and-return-3"]], "typedef: Type Alias": [[481, "typedef-type-alias"]], "Alias for Type Names": [[481, "alias-for-type-names"]], "Structures": [[482, "structures"]], "Dynamic Memory": [[483, "dynamic-memory"], [483, "id1"]], "Stack and Global Memory": [[483, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[483, "dynamic-memory-usage"]], "Singly Linked List": [[484, "singly-linked-list"]], "Exercises (1)": [[484, "exercises-1"]], "Exercises (2)": [[484, "exercises-2"]], "Exercises (3)": [[484, "exercises-3"]], "Exercises (4)": [[484, "exercises-4"]], "Exercises (5)": [[484, "exercises-5"]], "Exercises (6)": [[484, "exercises-6"]], "Exercises (7)": [[484, "exercises-7"]], "Exercises (8)": [[484, "exercises-8"]], "Exercises (9)": [[484, "exercises-9"]], "Exercises (10)": [[484, "exercises-10"]], "Exercises (11)": [[484, "exercises-11"]], "Memory": [[485, "memory"]], "Volatile": [[486, "volatile"]], "volatile: The Lie (1)": [[486, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[486, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[486, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[486, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[487, "compiler-intrinsics"]], "Atomic Memory Access": [[487, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[487, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[487, "load-modify-store-mutex"]], "Atomic Instructions": [[487, "atomic-instructions"], [1053, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[487, "more-gcc-builtins"]], "Alignment": [[488, "alignment"]], "Data Alignment": [[488, "data-alignment"]], "Data Alignment, Compilers": [[488, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[488, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[488, "unaligned-data-access-2"]], "Padding (1)": [[488, "padding-1"]], "Padding (2)": [[488, "padding-2"]], "Padding (3)": [[488, "padding-3"]], "Padding (4)": [[488, "padding-4"]], "Structure Alignment (1)": [[488, "structure-alignment-1"]], "Structure Alignment (2)": [[488, "structure-alignment-2"]], "And Arrays? (1)": [[488, "and-arrays-1"]], "And Arrays? (2)": [[488, "and-arrays-2"]], "And Arrays? (3)": [[488, "and-arrays-3"]], "Sanity and Readabilty": [[490, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[490, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[490, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[490, "shooting-offenses"]], "Ambiguity": [[490, "ambiguity"]], "Readability": [[490, "readability"]], "Code Smells": [[490, "code-smells"]], "Know Your Integers": [[491, "know-your-integers"]], "Standard Data Types: size_t (1)": [[491, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[491, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[492, "discrete-values-enum"], [492, "id1"]], "Discrete Values": [[492, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[492, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[492, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[492, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[492, "discrete-values-enum-and-switch"], [492, "id2"]], "Discrete Values - Close to Perfection": [[492, "discrete-values-close-to-perfection"]], "Visibility - static": [[493, "visibility-static"]], "Visibility": [[493, "visibility"]], "A Somewhat Contrived Example (1)": [[493, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[493, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[493, "the-static-keyword-hooray"]], "Correctness - const": [[494, "correctness-const"]], "Non-Modifiable Memory (1)": [[494, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[494, "non-modifiable-memory-2"]], "The const Keyword (1)": [[494, "the-const-keyword-1"]], "The const Keyword (2)": [[494, "the-const-keyword-2"]], "const Variables": [[494, "const-variables"]], "const Parameters (1)": [[494, "const-parameters-1"]], "const Parameters (2)": [[494, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[494, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[494, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[494, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[494, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[494, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[494, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[494, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[494, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[494, "pointers-pointers-pointers-9"]], "Struct Initialization": [[495, "struct-initialization"]], "Good Old Struct Initialization": [[495, "good-old-struct-initialization"]], "C99 Designated Initializer": [[495, "c99-designated-initializer"]], "Explict Type Safety": [[496, "explict-type-safety"]], "Integer Types Are Ambiguous": [[496, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[496, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[496, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[496, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[496, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[496, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[496, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[496, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[496, "wrap-up-artificial-type-safety"]], "valgrind": [[497, "valgrind"]], "Valgrind": [[497, "id1"]], "Valgrind in Action (1)": [[497, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[497, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[497, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[497, "valgrind-more"]], "Program Sanity": [[498, "program-sanity"]], "Optimization": [[499, "optimization"]], "Optimization - Introduction": [[499, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[499, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[499, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[499, "compute-bound-or-io-bound-3"]], "What to do Next?": [[499, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[500, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[500, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[500, "unnecessary-optimizations"]], "Inlining (1)": [[500, "inlining-1"]], "Inlining (2)": [[500, "inlining-2"]], "Inlining (3)": [[500, "inlining-3"]], "Register Allocation (1)": [[500, "register-allocation-1"]], "Register Allocation (2)": [[500, "register-allocation-2"]], "Peephole Optimization": [[500, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[500, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[500, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[500, "peephole-optimization-constant-folding"]], "Loop Invariants": [[500, "loop-invariants"]], "Loop Unrolling": [[500, "loop-unrolling"]], "Tail Call Optimization": [[500, "tail-call-optimization"]], "CPU Optimization, Last Words": [[500, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[500, "gcc-optimization-levels"]], "Further Reading": [[500, "further-reading"]], "Optimizations: Memory Optimizations": [[501, "optimizations-memory-optimizations"]], "Memory: Caches": [[501, "memory-caches"]], "Locality Of Reference": [[501, "locality-of-reference"]], "Multidimensional Arrays": [[501, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[501, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[501, "multidimensional-arrays-forward-indexing"]], "Performance": [[502, "performance"]], "Profiling - Famous Words": [[503, "profiling-famous-words"]], "Donald E. Knuth": [[503, null]], "Tony Hoare": [[503, null]], "Larry Wall": [[503, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[503, null]], "Profiling - Introduction": [[503, "profiling-introduction"]], "GNU Profiler - gprof": [[504, "gnu-profiler-gprof"]], "gprof - How it Works": [[504, "gprof-how-it-works"]], "Using gprof": [[504, "using-gprof"]], "gprof: Flat Profile": [[504, "gprof-flat-profile"]], "gprof: Call Graph": [[504, "gprof-call-graph"]], "gprof: Interpreting The Results": [[504, "gprof-interpreting-the-results"]], "gprof: Visualization": [[504, "gprof-visualization"]], "callgrind": [[505, "callgrind"]], "callgrind - How it Works": [[505, "callgrind-how-it-works"]], "callgrind - How it is Used": [[505, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[505, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[505, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[505, "callgrind-useful-options"]], "oprofile": [[506, "oprofile"]], "oprofile - How it Works": [[506, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[506, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[506, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[506, "oprofile-too-much-information"]], "oprofile - Call Graph": [[506, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[506, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[506, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[506, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[506, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[506, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[506, "oprofile-graphical-beauty"]], "Profiling": [[507, "profiling"]], "The C Programming Language": [[508, "the-c-programming-language"]], "Messages From The Book": [[509, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[510, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[510, "rules-why-rules"]], "Coding Style": [[510, "coding-style"]], "Disclaimer": [[510, null]], "Design Principles: SOLID": [[510, "design-principles-solid"]], "Another One: YAGNI": [[510, "another-one-yagni"]], "Architecture": [[510, "architecture"]], "Project Management: Traditional": [[510, "project-management-traditional"]], "Project Management: Software": [[510, "project-management-software"]], "So What?": [[510, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[511, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Course Material": [[511, "course-material"]], "Uncle Bob": [[511, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[512, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[512, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[512, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[512, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[512, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[512, "where-are-we-questions"]], "Testability: Input Cleaning": [[512, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[512, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[512, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[512, "testability-reading-input-from-directory"]], "Testability: Categorization": [[512, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[512, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[512, "refactoring-input-reading-longrightarrow-overengineering"]], "Screenplay: Generated Code (add_custom_command())": [[513, "screenplay-generated-code-add-custom-command"]], "Complete source code": [[513, null], [518, null], [519, null], [520, null], [521, null], [534, null], [536, null]], "Trainer\u2019s note": [[513, null], [519, null], [521, null], [536, null], [537, null], [801, null], [821, null], [824, null], [824, null], [824, null], [824, null], [824, null], [824, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null]], "What We Want": [[513, "what-we-want"]], "Handwritten Prototype: What A Code Generator Could Do For Us": [[513, "handwritten-prototype-what-a-code-generator-could-do-for-us"]], "One Deeply Embedded Application (2024-06-20-manual.cpp)": [[513, "one-deeply-embedded-application-2024-06-20-manual-cpp"]], "Another Deeply Embedded Application (Generated From 2024-06-20.conf)": [[513, "another-deeply-embedded-application-generated-from-2024-06-20-conf"]], "Et Voila!": [[513, "et-voila"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[514, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[514, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[514, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[514, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[514, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[514, "good-or-bad"], [515, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[515, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[515, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[515, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[515, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[516, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[516, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[516, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[516, "option-handling-many-approaches"]], "\u201cConfigured\u201d Header Files": [[517, "configured-header-files"]], "Configured Files": [[517, "configured-files"]], "Use In Compiled Code": [[517, "use-in-compiled-code"]], "Screenplay: Integrating libmosquitto (MQTT - Handwritten Find-Module)": [[518, "screenplay-integrating-libmosquitto-mqtt-handwritten-find-module"]], "First: Clean Up Toplevel CMakeLists.txt": [[518, "first-clean-up-toplevel-cmakelists-txt"]], "Add MQTT Capability To Datalogger": [[518, "add-mqtt-capability-to-datalogger"]], "External libmosquitto Dependency": [[518, "external-libmosquitto-dependency"]], "Screenplay: Adding SQLite3 External Dependency": [[519, "screenplay-adding-sqlite3-external-dependency"]], "Add SQLite3 Capability To Datalogger": [[519, "add-sqlite3-capability-to-datalogger"]], "FIND_PACKAGE()": [[519, "find-package"], [522, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[519, "find-package-required"], [522, "find-package-required"]], "Bringing A New Node Into The Graph: Theory": [[519, "bringing-a-new-node-into-the-graph-theory"]], "Bringing A New Node Into The Graph: Practice": [[519, "bringing-a-new-node-into-the-graph-practice"]], "Screenplay: Making SQLite3 Optional (configure_file())": [[520, "screenplay-making-sqlite3-optional-configure-file"]], "Alternative: configure_file() Instead Of target_compile_definitions()": [[520, "alternative-configure-file-instead-of-target-compile-definitions"]], "Make It So": [[520, "make-it-so"]], "\u201cConfigured Files\u201d: configure_file()": [[520, "configured-files-configure-file"]], "What Else To Put In project-config.h.in": [[520, "what-else-to-put-in-project-config-h-in"]], "Screenplay: Making SQLite3 Optional (target_compile_definitions())": [[521, "screenplay-making-sqlite3-optional-target-compile-definitions"]], "What If We Know How to Live Without SQLite3?": [[521, "what-if-we-know-how-to-live-without-sqlite3"]], "Optionally Not Depending On SQLite3": [[521, "optionally-not-depending-on-sqlite3"]], "Optionally Not Depending On Someone Who Depends On SQLite3": [[521, "optionally-not-depending-on-someone-who-depends-on-sqlite3"]], "SQLite3 Parameters": [[522, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[522, "using-sqlite3-parameters"]], "Demo Time": [[522, "demo-time"], [537, "demo-time"]], "CMake: Advanced Topics": [[523, "cmake-advanced-topics"]], "Alternative Topics": [[523, "alternative-topics"]], "Todo jjj \ud83e\udd18": [[523, "todo-jjj-metal"]], "Language Basics": [[524, "language-basics"]], "Single Line Comments": [[524, "single-line-comments"]], "Multiline Comments (\u201cBracketed Comments\u201d)": [[524, "multiline-comments-bracketed-comments"]], "Command Execution": [[524, "command-execution"]], "Commands: String Evaluation, And Quoting": [[524, "commands-string-evaluation-and-quoting"]], "Commands: Bracketed Arguments": [[524, "commands-bracketed-arguments"]], "Commands: Quoted Arguments": [[524, "commands-quoted-arguments"]], "Commands: Unquoted Arguments": [[524, "commands-unquoted-arguments"]], "There Are No Datatypes, Basta": [[525, "there-are-no-datatypes-basta"]], "Attention: Inconsistencies All Over": [[525, "attention-inconsistencies-all-over"]], "Strings: In-Place Modification Of A Variable (Use Unquoted Names)": [[525, "strings-in-place-modification-of-a-variable-use-unquoted-names"]], "Pitfall: In-Place Modification Of Undefined Variable": [[525, "pitfall-in-place-modification-of-undefined-variable"]], "Pitfall: Quoted Variable Names For In-Place Modification": [[525, "pitfall-quoted-variable-names-for-in-place-modification"]], "Strings: Non-Modifying Operations (Use Quoted Names)": [[525, "strings-non-modifying-operations-use-quoted-names"]], "Pitfall: Unquoted Variable Names For Non-Modifying Operations": [[525, "pitfall-unquoted-variable-names-for-non-modifying-operations"]], "Strings: Methods, By Example": [[525, "strings-methods-by-example"]], "Lists: Iteration (foreach Loop)": [[525, "lists-iteration-foreach-loop"]], "Lists: Methods, By Example": [[525, "lists-methods-by-example"]], "Filesystem Interaction, Pathname Manipulation": [[526, "filesystem-interaction-pathname-manipulation"]], "file: Host Filesystem Access": [[526, "file-host-filesystem-access"]], "file(READ ...): Read Entire File": [[526, "file-read-read-entire-file"]], "file(STRINGS ...): Read Lines Of File": [[526, "file-strings-read-lines-of-file"]], "file(<HASH> ...): Checksumming": [[526, "file-hash-checksumming"]], "file(WRITE ...), file(APPEND ...): Writing Files": [[526, "file-write-file-append-writing-files"]], "file(GLOB ...): Read Directory Contents": [[526, "file-glob-read-directory-contents"]], "cmake_path(GET ...): Decompose Paths": [[526, "cmake-path-get-decompose-paths"]], "cmake_path(APPEND ...): Compose Paths": [[526, "cmake-path-append-compose-paths"]], "foreach Loops": [[527, "foreach-loops"]], "Functions And Macros": [[528, "functions-and-macros"]], "Simplest Of Functions": [[528, "simplest-of-functions"]], "Function Scope": [[528, "function-scope"]], "Function Scope: And Nested Function?": [[528, "function-scope-and-nested-function"]], "Passing Parameters In": [[528, "passing-parameters-in"]], "Parameters: ARGC, ARGV, ARGVn, ARGN": [[528, "parameters-argc-argv-argvn-argn"]], "And Output Variables? Return Values?": [[528, "and-output-variables-return-values"]], "PARENT_SCOPE Examples": [[528, "parent-scope-examples"]], "Passing Any Number Of Parameters": [[528, "passing-any-number-of-parameters"]], "Fancy Parameter Parsing: cmake_parse_arguments()": [[528, "fancy-parameter-parsing-cmake-parse-arguments"]], "And Macros?": [[528, "and-macros"]], "if, And Conditions": [[529, "if-and-conditions"]], "if Syntax": [[529, "if-syntax"]], "Predefined Conditions: String Comparison": [[529, "predefined-conditions-string-comparison"]], "Pitfalls: Variables Are Strings, And CMake Does Not Care": [[529, "pitfalls-variables-are-strings-and-cmake-does-not-care"]], "Predefined Conditions: File System": [[529, "predefined-conditions-file-system"]], "Policies?": [[529, "policies"]], "Miscellaneous Checks (Some Rather Advanced)": [[529, "miscellaneous-checks-some-rather-advanced"]], "Condition Evaluation (Where The Mess Begins): What\u2019s Boolean?": [[529, "condition-evaluation-where-the-mess-begins-what-s-boolean"]], "Dereferencing Unquoted Variable Names": [[529, "dereferencing-unquoted-variable-names"]], "\u201cBoolean\u201d Variables: Weirdly Interpreted Strings": [[529, "boolean-variables-weirdly-interpreted-strings"]], "Pitfall: Evaluation Until There Is No More": [[529, "pitfall-evaluation-until-there-is-no-more"]], "Pitfall: Evaluation Of Unquoted Arguments": [[529, "pitfall-evaluation-of-unquoted-arguments"]], "The Language": [[530, "the-language"]], "Scripts": [[531, "scripts"]], "A Script Ain\u2019t A Project": [[531, "a-script-ain-t-a-project"]], "Passing Commandline Parameters": [[531, "passing-commandline-parameters"]], "Setting, And Variable Names": [[532, "setting-and-variable-names"]], "Empty/Undefined Variables": [[532, "empty-undefined-variables"]], "Removing Variables": [[532, "removing-variables"]], "Checking Emptyness And Definedness": [[532, "checking-emptyness-and-definedness"]], "Indirect Variables": [[532, "indirect-variables"]], "Danger: Lookup Scope": [[532, "danger-lookup-scope"]], "Environment Variables": [[532, "environment-variables"], [1063, "environment-variables"]], "Cache Variables": [[532, "cache-variables"]], "Scopes: Function Scope": [[532, "scopes-function-scope"]], "Scopes: Directory Scope": [[532, "scopes-directory-scope"]], "Screenplay: Function Wrapping add_library()": [[534, "screenplay-function-wrapping-add-library"]], "Streamline Build-Spaghetti: How Want It?": [[534, "streamline-build-spaghetti-how-want-it"]], "Function my_add_library(): cmake_parse_arguments()": [[534, "function-my-add-library-cmake-parse-arguments"]], "Function my_add_library(): Final Version": [[534, "function-my-add-library-final-version"]], "Make my_add_library() A Matter For The Architect": [[534, "make-my-add-library-a-matter-for-the-architect"]], "Why Noy Use include_directories() For That": [[535, "why-noy-use-include-directories-for-that"]], "Screenplay: Public And Private Include Directories": [[536, "screenplay-public-and-private-include-directories"]], "Motivation": [[536, "motivation"], [550, "motivation"], [553, "motivation"], [569, "motivation"], [570, "motivation"], [665, "motivation"], [749, "motivation"], [759, "motivation"], [803, "motivation"], [833, "motivation"], [1122, "motivation"], [1128, "motivation"]], "New files": [[536, null]], "Move Code Around: toolcase/base/": [[536, "move-code-around-toolcase-base"]], "Adjust CMakeLists.txt": [[536, "adjust-cmakelists-txt"]], "Local Compilation In toolcase/base/": [[536, "local-compilation-in-toolcase-base"]], "Dependent Nodes: toolcase/boiling-pot/ And toolcase/data-logger/": [[536, "dependent-nodes-toolcase-boiling-pot-and-toolcase-data-logger"]], "Final Note: And PUBLIC?": [[536, "final-note-and-public"]], "Final Final Note: include_directories()": [[536, "final-final-note-include-directories"]], "Targets, Properties, And More": [[537, "targets-properties-and-more"]], "Target Types": [[537, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[537, "properties-private-public-interface"]], "Final Note: include_directories()": [[537, "final-note-include-directories"]], "Running Tests": [[538, "running-tests"], [1241, "running-tests"]], "Setup And Usage": [[538, "setup-and-usage"]], "Add Simple Test": [[538, "add-simple-test"]], "Checking Test Output": [[538, "checking-test-output"]], "Questionability": [[538, "questionability"]], "CMake": [[539, "cmake"]], "Basics: Boilerplate, And Executables": [[540, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[540, "single-monolithic-executable"]], "Building With CMake": [[540, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[540, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[540, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[540, "problem-duplicate-compilation"]], "Problem: More Functionality": [[540, "problem-more-functionality"]], "Solution: Libraries": [[540, "solution-libraries"], [1102, "solution-libraries"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[541, "c-debug-release-cmake-programming-rants"]], "Pause": [[541, "pause"]], "Class Diagram": [[541, "class-diagram"]], "C++ Standard Version": [[541, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[541, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[541, "compiler-type"]], "Strings And Lists": [[541, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[541, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[541, "message-popular-modes"]], "CMake: Introduction": [[542, "cmake-introduction"]], "Installation (\u201cDeployment\u201d)": [[543, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[543, "prefix-where-everything-comes-together"]], "Installing Targets": [[543, "installing-targets"]], "Doing The Installation (make install)": [[543, "doing-the-installation-make-install"]], "And Shared Libraries?": [[543, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[543, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[543, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[544, "libraries-and-dependencies"]], "Libraries And Executables": [[544, "libraries-and-executables"]], "Targets And Dependencies": [[544, "targets-and-dependencies"]], "Visualizing Dependencies": [[544, "visualizing-dependencies"]], "Shared Libraries (Preview)": [[545, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[545, "normal-libraries"]], "Building Shared Libraries": [[545, "building-shared-libraries"]], "More About Loading": [[545, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[546, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[546, "reorganization"]], "Dependencies, And Target Properties": [[546, "dependencies-and-target-properties"]], "C++ Code": [[547, "c-code"]], "Abstract Factory": [[548, "abstract-factory"]], "I2C Sensor Subhierarchy": [[548, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[548, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[548, "solution-factory-objects"]], "Adapter": [[549, "adapter"]], "Solution: Adaptation": [[549, "solution-adaptation"]], "Basic Adaptation": [[549, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[549, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[549, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[549, "adapter-is-doing-real-measurements"]], "Command": [[550, "command"]], "Step 1: Basic insert()": [[550, "step-1-basic-insert"]], "Step 2: Basic find()": [[550, "step-2-basic-find"]], "Step 3: drop()": [[550, "step-3-drop"]], "Step 4: Handle find() Errors": [[550, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[550, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[550, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[550, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[551, "socialdb-source-code"]], "Composite": [[552, "composite"]], "Examples": [[552, "examples"], [755, "examples"], [853, "examples"], [1025, null]], "Unix Filesystem": [[552, "unix-filesystem"]], "Boolean Expressions": [[552, "boolean-expressions"]], "Thermometers, And Average Calculation": [[552, "thermometers-and-average-calculation"]], "Decorator": [[553, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[553, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[553, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[553, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[553, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[553, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[553, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[553, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[553, "step-6-verify-that-current-situation-still-holds-true"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[554, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[554, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[554, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[554, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[554, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[554, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[554, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[554, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[554, "stop-here-need-help"]], "Tests": [[554, "tests"], [575, "tests"]], "Design Patterns With C++": [[555, "design-patterns-with-c"]], "Topics/Exercises": [[555, "topics-exercises"]], "Solutions": [[555, "solutions"], [568, "solutions"], [582, "solutions"]], "To Be Done": [[555, "to-be-done"]], "Interpreter": [[556, "interpreter"]], "Observer": [[557, "observer"]], "OO Design Principles": [[558, "oo-design-principles"]], "Principles: Why? Which?": [[558, "principles-why-which"]], "Single Responsibility": [[558, "single-responsibility"]], "Open/Closed": [[558, "open-closed"]], "Liskov Substitution": [[558, "liskov-substitution"]], "Interface Segregation": [[558, "interface-segregation"]], "Dependency Inversion": [[558, "dependency-inversion"]], "Proxy": [[559, "proxy"]], "Solution: Proxy": [[559, "solution-proxy"]], "Local Variant": [[559, "local-variant"]], "Remote Variant": [[559, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[560, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[560, "hypothetical"]], "Class Hierarchy": [[560, "class-hierarchy"]], "Singleton": [[561, "singleton"]], "And class Person?": [[561, "and-class-person"]], "UML Short Introduction": [[562, "uml-short-introduction"]], "Interface": [[562, "interface"]], "Interface Implementation, Inheritance": [[562, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[562, "connectors-association-aggregation-composition"]], "Association": [[562, "association"]], "Aggregation": [[562, "aggregation"]], "Composition": [[562, "composition"]], "Exercise: Abstract Factory": [[563, "exercise-abstract-factory"]], "Exercise: Adapter": [[564, "exercise-adapter"], [571, "exercise-adapter"]], "Exercise: Command": [[565, "exercise-command"]], "Exercise: Composite": [[566, "exercise-composite"]], "Exercise: Decorator": [[567, "exercise-decorator"]], "Exercises: Design Patterns": [[568, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[569, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[570, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[570, "expression-interface"]], "Arithmetic (Binary) Expressions": [[570, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[570, "check-combined-arithmetic-expressions"]], "And Variables?": [[570, "and-variables"]], "No Uninitialized Variables!!": [[570, "no-uninitialized-variables"]], "Assigning To Variables": [[570, "assigning-to-variables"]], "Using Variables As Expressions": [[570, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[572, "exercise-proxy-remote-thermometer"]], "Network Communication": [[572, "network-communication"]], "Implementation Hints": [[572, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[573, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[574, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[575, "exercise-singleton-flexible-and-strict"]], "Complications": [[575, "complications"]], "Exercise: Singleton (Inflexible)": [[576, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[577, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[577, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[577, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[577, "i2csensorfactory-vendor1"], [577, "id1"]], "Solution: Adapter": [[578, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[578, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[579, "solution-command"]], "Command Classes": [[579, "command-classes"]], "Solution: Composite": [[580, "solution-composite"]], "Averaging (Composite) Sensor": [[580, "averaging-composite-sensor"]], "Solution: Decorator": [[581, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[581, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[581, "decorated-constant-sensor"]], "Decorated Random Sensor": [[581, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[583, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[584, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[585, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[586, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[586, "client-proxy-thermometer"]], "Remote Stub": [[586, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[587, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[587, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[588, "solution-singleton-flexible"]], "Main Program": [[588, "main-program"], [589, "main-program"], [590, "main-program"], [782, "main-program"], [784, "main-program"], [786, "main-program"], [788, "main-program"]], "SocialInsurance Interface": [[588, "socialinsurance-interface"], [589, "socialinsurance-interface"]], "Two Concrete Implementations": [[588, "two-concrete-implementations"], [589, "two-concrete-implementations"]], "OEGK": [[588, "oegk"], [589, "oegk"]], "SVS": [[588, "svs"], [589, "svs"]], "Solution: Singleton (Flexible And Strict)": [[589, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[590, "solution-singleton-inflexible"]], "Singleton Implementation": [[590, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[591, "exercise-fh-introducing-a-sensor-class"]], "CMake Build": [[591, "cmake-build"], [1033, "cmake-build"]], "Dependencies/Usage Relationships": [[591, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[591, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[591, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[591, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[591, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[592, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[593, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[594, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[594, "new-sensor-class-randomsensor"]], "Implementation Details": [[594, "implementation-details"]], "New Program: random-temperature.cpp": [[594, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[595, "fh-sensor-oo-first-try"]], "C++ Exercises": [[596, "c-exercises"]], "Exercise Projects": [[596, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[597, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[598, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[599, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[600, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[601, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[602, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[602, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[602, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[603, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[604, "oo-basics-interfaces-shapes"]], "Exercise Table": [[604, "exercise-table"]], "Setup, Exam Procedure": [[604, "setup-exam-procedure"]], "Point": [[604, "point"]], "Point: Constructor and Getter Methods": [[604, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[604, "point-default-constructor"]], "Point: Static Method: equal()": [[604, "point-static-method-equal"]], "Point: operator==()": [[604, "point-operator"]], "Point: Method: move()": [[604, "point-method-move"]], "Point: operator+=()": [[604, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[604, "point-static-method-add"]], "Point: operator+()": [[604, "point-suite-operator-plus"]], "Circle": [[604, "circle"]], "Circle: Constructor": [[604, "circle-constructor"]], "Circle: operator==()": [[604, "circle-operator"]], "Circle: Method: area()": [[604, "circle-method-area"]], "Square": [[604, "square"]], "Square: Constructor": [[604, "square-constructor"]], "Square: operator==()": [[604, "square-operator"]], "Square: Method: area()": [[604, "square-method-area"]], "Interface: Shape": [[604, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[604, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[604, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[605, "working-on-exercise-projects"]], "Clone Github Repository": [[605, "clone-github-repository"]], "Massage googletest Sub-Module": [[605, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[605, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[605, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[605, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[606, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[606, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[606, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[607, "exercise-onewire-sensor-factory"]], "Fixture": [[607, "fixture"], [797, "fixture"]], "basic": [[607, "basic"]], "notfound": [[607, "notfound"]], "find_is_const": [[607, "find-is-const"]], "Testing In Isolation": [[607, "testing-in-isolation"]], "Testing In Reality": [[607, "testing-in-reality"]], "On The PC": [[607, "on-the-pc"]], "On The Target": [[607, "on-the-target"]], "Exercise: OneWire Sensor Class": [[608, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[608, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[608, "test-monolithic-implementation"]], "class W1Sensor": [[608, "class-w1sensor"]], "Exercise: Algorithms": [[609, "exercise-algorithms"]], "Copy Into std::vector": [[609, "copy-into-std-vector"]], "Find Element In std::vector": [[609, "find-element-in-std-vector"]], "Sort In-Place": [[609, "sort-in-place"]], "Sort Into A Copy": [[609, "sort-into-a-copy"]], "Exercise: Generic Filter": [[610, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[611, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[612, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[613, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[614, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[615, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[616, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[617, "insert-sunny-case"]], "Lookup - Not Found": [[618, "lookup-not-found"]], "Lookup - Sunny Case": [[619, "lookup-sunny-case"]], "Memory Leaks?": [[620, "memory-leaks"]], "Remove - Not Found": [[621, "remove-not-found"]], "Remove - Sunny Case": [[622, "remove-sunny-case"]], ".size() Is const": [[623, "size-is-const"]], "Exercise: Uniquify A Sequence": [[624, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[625, "exercise-std-vector"]], "C++: TODO List": [[626, "c-todo-list"]], "Structural": [[626, "structural"]], "STL, Containers and Algorithms": [[626, "stl-containers-and-algorithms"]], "Templates/Overloading": [[626, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[626, "functors-overloading-the-function-call-operator"]], "Threads": [[626, "threads"]], "C++ >= 11": [[626, "c-11"]], "UserDB Exercise": [[626, "userdb-exercise"]], "Complete Transcription of C++11": [[626, "complete-transcription-of-c-11"]], "Dependencies": [[626, "dependencies"]], "Exercise series": [[626, "exercise-series"]], "Code: C++: Class Templates": [[627, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[628, "screenplay-c-class-templates"]], "C++: Class Templates": [[629, "c-class-templates"]], "Code: C++: Dynamic Memory": [[630, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[631, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[631, "c-malloc-free"]], "valgrind: Memory Leak": [[631, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[631, "valgrind-array-bounds-write"]], "C++: new, delete": [[631, "c-new-delete"]], "C++: new, delete on Arrays": [[631, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[631, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[632, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[633, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[634, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[634, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[634, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[634, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[635, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[636, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[637, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[638, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[639, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[640, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[640, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[640, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[640, "ownership-2-x-non-const"]], "Ownership: const Method": [[640, "ownership-const-method"]], "Ownership: 2 x const": [[640, "ownership-2-x-const"]], "C++: Ownership/RAII": [[641, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[642, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[643, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[643, "pointer-arithmetics-recap"]], "Container: std::vector": [[643, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[643, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[643, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[643, "container-std-list"]], "Container: std::map": [[643, "container-std-map"]], "C++: STL Containers (Intro)": [[644, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[645, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[646, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[647, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[648, "c-miscellaneous-live-hacking"]], "Background": [[649, "background"]], "History": [[649, "history"], [1103, "history"]], "Content": [[649, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[650, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[650, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[650, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[650, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[650, "comparison-functions-in-equality"]], "Moving Points": [[650, "moving-points"]], "Vector Addition and Subtraction": [[650, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[650, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[650, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[650, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[651, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[651, "compiler-generated-copy-constructor"]], "Rule": [[651, null], [654, null], [756, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[651, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[652, "classes-and-objects"]], "Introducing C++: class point": [[652, "introducing-c-class-point"]], "Access Specifiers: public And private": [[652, "access-specifiers-public-and-private"]], "Default Constructor": [[652, "default-constructor"], [654, "default-constructor"], [666, "default-constructor"], [667, "default-constructor"], [668, "default-constructor"], [669, "default-constructor"]], "Custom Constructor: Usage": [[652, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[652, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[652, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[652, "methods-operations-on-an-object"]], "And printf()?!": [[652, "and-printf"]], "Custom Constructor": [[653, "custom-constructor"], [666, "custom-constructor"]], "Constructors: why? (1)": [[653, "constructors-why-1"]], "Constructors: why? (2)": [[653, "constructors-why-2"]], "Constructors: Implementation - Inline": [[653, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[653, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[654, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[654, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[654, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[654, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[655, "more-constructors-destructors"]], "Default Constructor (1)": [[655, "default-constructor-1"]], "Default Constructor (2)": [[655, "default-constructor-2"]], "Object Lifecycle - Destructor": [[655, "object-lifecycle-destructor"]], "Destructors (1)": [[655, "destructors-1"]], "Destructors (2)": [[655, "destructors-2"]], "Destructors (3)": [[655, "destructors-3"]], "Destructors (4)": [[655, "destructors-4"]], "Data Encapsulation": [[656, "data-encapsulation"]], "Constructors: Member Initialization": [[657, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[657, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[657, "real-initialization-initializer-list"]], "Why Is That Important?": [[657, "why-is-that-important"]], "Why Else Is That Important?": [[657, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[658, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[658, "copy-in-c"]], "Copy Constructor": [[658, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[658, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[658, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[658, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[658, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[658, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[658, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[658, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[658, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[658, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[659, "overloading"]], "Functions in C": [[659, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[659, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[659, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[659, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[660, "objects-data-and-methods"]], "class point Again": [[660, "class-point-again"]], "Access Methods (\u201cGetters\u201d) WRONG": [[660, "access-methods-getters-wrong"]], "Access Methods (\u201cGetters\u201d): const Objects": [[660, "access-methods-getters-const-objects"]], "Access Methods (\u201cGetters\u201d): const Methods": [[660, "access-methods-getters-const-methods"]], "Modifying Method (p.move(...))": [[660, "modifying-method-p-move"]], "Non-Inline Implementation": [[660, "non-inline-implementation"]], "Overloading move() \u27f6 Vector Addition": [[660, "overloading-move-longrightarrow-vector-addition"]], "Moving const point Objects?": [[660, "moving-const-point-objects"]], "Finally: point::distance()": [[660, "finally-point-distance"]], "const Correctness vs. Pollution": [[660, "const-correctness-vs-pollution"]], "this": [[661, "this"]], "Hidden Pointer: this (1)": [[661, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[661, "hidden-pointer-this-2"]], "Explicit this Pointer": [[661, "explicit-this-pointer"]], "Pass By Copy/Reference": [[662, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[662, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[662, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[662, "copy-reference-c-pointers"]], "C++: True References": [[662, "c-true-references"]], "And const? Pointers?": [[662, "and-const-pointers"]], "const References": [[662, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[662, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[663, "static-methods"]], "Methods without Object": [[663, "methods-without-object"]], "Naive Implementation: Global Function": [[663, "naive-implementation-global-function"]], "C++: static Method": [[663, "c-static-method"]], "static Member Variables": [[664, "static-member-variables"]], "Good Old C: extern Global Variables": [[664, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[664, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[664, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[664, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[664, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[664, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[665, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[665, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[665, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[665, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[665, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[665, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[665, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[665, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[666, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[666, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[666, "in-equality"], [667, "in-equality"], [668, "in-equality"], [669, "in-equality"]], "+=": [[666, "id2"], [667, "id1"], [668, "id2"], [669, "id2"]], "-=": [[666, "id4"], [668, "id4"]], "+": [[666, "id6"], [667, "id2"], [668, "id6"], [669, "id3"]], "-": [[666, "id8"], [668, "id8"]], "<< (std::ostream)": [[666, "std-ostream"], [667, "std-ostream"], [668, "std-ostream"], [669, "std-ostream"]], "Surface": [[666, "surface"]], "Volume": [[666, "volume"]], "Exercise (FH): class point": [[667, "exercise-fh-class-point"]], "Initial Build": [[667, "initial-build"]], "Initial Test Run": [[667, "initial-test-run"]], "Extending class point: More Unit Tests": [[667, "extending-class-point-more-unit-tests"]], "Access Methods": [[667, "access-methods"]], "Unary -": [[667, "unary"], [668, "unary"]], "Exercise (FH): class point3d": [[668, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[668, "building-class-rectangle-upon-class-point"], [669, "building-class-rectangle-upon-class-point"]], "Coordinates": [[668, "coordinates"], [669, "coordinates"]], "Absolute Value": [[668, "absolute-value"]], "Distance Between Two Points": [[668, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[669, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[669, "width-height-area"]], "Functions and Methods": [[670, "functions-and-methods"]], "Error Handling: if - else if - else": [[671, "error-handling-if-else-if-else"]], "try - catch": [[672, "try-catch"]], "try - Block": [[672, "try-block"]], "catch - Block": [[672, "catch-block"]], "Standard Library: Exception-Hierarchy": [[672, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[672, "custom-exceptions-1"]], "Custom Exceptions (2)": [[672, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[672, "throwing-exceptions-throw"]], "Last Words": [[672, "last-words"], [675, "last-words"]], "Function Templates": [[674, "function-templates"]], "Origin: Duplicated Code": [[674, "origin-duplicated-code"]], "A simple Function-Template": [[674, "a-simple-function-template"]], "More Templates from the STL": [[674, "more-templates-from-the-stl"]], "Class Templates": [[675, "class-templates"]], "Does This Work With Classes?": [[675, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[675, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[675, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[676, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[677, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[678, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[679, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[680, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[681, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[682, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[682, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[682, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[682, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[682, "pointer-difference"]], "Step Width? (1)": [[682, "step-width-1"]], "Step Width? (2)": [[682, "step-width-2"]], "And Arbitrary Data Types?": [[682, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[682, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[682, "stl-algorithms"]], "STL Containers": [[682, "stl-containers"]], "std::vector (And std::copy())": [[683, "std-vector-and-std-copy"]], "Dynamicity Details": [[683, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[683, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[683, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[684, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[684, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[684, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[684, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[684, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[685, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[686, "screenplay-std-vector-and-pointer-arithmetics"]], "binary_search<>: On Sorted Sequence": [[687, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[687, "more-intelligent-search"], [693, "more-intelligent-search"]], "copy<>": [[688, "copy"]], "find<>: Sequential Search, by Equality": [[689, "find-sequential-search-by-equality"]], "Basic Usage": [[689, "basic-usage"], [847, "basic-usage"], [913, "basic-usage"], [1163, "basic-usage"]], "Not Found?": [[689, "not-found"]], "find_if<>: Sequential Search, Customizable": [[690, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[690, "if-using-a-plain-function"]], "if, Using a Functor Class": [[690, "if-using-a-functor-class"]], "for_each<>": [[691, "for-each"]], "Basic Algorithms": [[692, "basic-algorithms"]], "Sorted Arrays": [[692, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[693, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[694, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[695, "reverse-copy-copying-and-reversing"]], "sort<>": [[696, "sort"]], "Algorithm: std::sort": [[696, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[696, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[697, "sequential-containers"], [698, "sequential-containers"]], "Common Characteristics": [[697, "common-characteristics"]], "list<>": [[699, "list"]], "Insertion and Deletion": [[699, "insertion-and-deletion"]], "vector<>": [[700, "vector"]], "Characteristics": [[700, "characteristics"]], "Modification at the Back": [[700, "modification-at-the-back"]], "Insertion": [[700, "insertion"]], "Example": [[700, "example"], [1178, "example"]], "Associative Containers": [[701, "associative-containers"], [702, "associative-containers"]], "Type Instantiation": [[703, "type-instantiation"]], "Filling The Container": [[703, "filling-the-container"]], "Inserting Elements": [[703, "inserting-elements"]], "Searching": [[703, "searching"]], "Screenplay: Why Not To Use operator[]": [[704, "screenplay-why-not-to-use-operator"]], "Basic Operation (Looks Fine)": [[704, "basic-operation-looks-fine"]], "And Elements That Have Never Been Inserted?": [[704, "and-elements-that-have-never-been-inserted"]], "Know It: operator[] Is Not Made For Read Access": [[704, "know-it-operator-is-not-made-for-read-access"]], "Screenplay: std::map Initialization And Inserting": [[705, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[705, "definining-the-type"]], "Initialization": [[705, "initialization"], [720, "initialization"]], "Screenplay: Inserting Elements": [[706, "screenplay-inserting-elements"]], "Subscript Operator": [[706, "subscript-operator"]], "insert()": [[706, "insert"]], "Screenplay: Removing (Erasing) Elements": [[707, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[707, "by-pointer-err-iterator"]], "By Key": [[707, "by-key"]], "Screenplay: Searching": [[708, "screenplay-searching"]], "find(key)": [[708, "find-key"]], "[key]": [[708, "key"]], "at(key)": [[708, "at-key"]], "multimap<>": [[709, "multimap"]], "Allocator Basics": [[710, "allocator-basics"]], "STL: Exercises": [[712, "stl-exercises"]], "Exercise: Reverse a String": [[713, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[714, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[715, "solution-reverse-a-string"]], "Naive": [[715, "naive"]], "Using std::reverse<>": [[715, "using-std-reverse"]], "Using std::reverse_copy<>": [[715, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[717, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[718, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[719, "the-standard-library-miscellaneous-topics"]], "std::string": [[720, "std-string"]], "Convenient Operators: Addition, Comparison, And Such": [[720, "convenient-operators-addition-comparison-and-such"]], "Conversion To Numbers: std::sto*()": [[720, "conversion-to-numbers-std-sto"]], "Conversion To String: std::to_string()": [[720, "conversion-to-string-std-to-string"]], "Searching: s.find()": [[720, "searching-s-find"]], "Substrings: s.substr()": [[720, "substrings-s-substr"]], "Exercise: Paint the American Flag Onto Standard Output": [[721, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[722, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[723, "exercises-miscellaneous"]], "Exercise: Parse A Line From /etc/passwd": [[724, "exercise-parse-a-line-from-etc-passwd"]], "Library Function (lib/parse-passwd.cpp)": [[724, "library-function-lib-parse-passwd-cpp"]], "Tests (tests/suite-passwd-line.cpp)": [[724, "tests-tests-suite-passwd-line-cpp"]], "Program (bin/read-passwd.cpp)": [[724, "program-bin-read-passwd-cpp"]], "Hints": [[724, "hints"]], "How To Proceed": [[724, "how-to-proceed"]], "User Usage (tests/suite-passwd-user.cpp)": [[724, "user-usage-tests-suite-passwd-user-cpp"]], "PasswdError Usage (tests/suite-passwd-error.cpp)": [[724, "passwderror-usage-tests-suite-passwd-error-cpp"]], "std::string Usage": [[724, "std-string-usage"]], "Exercise: Sum of Integers Coming From cin": [[725, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[726, "exercises-user-database"]], "Exercise: Access Methods for Members": [[727, "exercise-access-methods-for-members"]], "Exercise: const Members": [[728, "exercise-const-members"]], "Exercise: Use const": [[729, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[730, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[731, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[732, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[733, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[734, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[735, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[735, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[736, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[737, "exercise-use-std-vector-in-userdb"]], "Inheritance Basics": [[739, "inheritance-basics"]], "Sensor: Plain (Base) Class": [[739, "sensor-plain-base-class"]], "Inheriting (Deriving) From Base": [[739, "inheriting-deriving-from-base"]], "Inheritance: Concrete Instances \u27f6 No Surprise": [[739, "inheritance-concrete-instances-longrightarrow-no-surprise"]], "Inheritance: Automatic Pointer-To-Base Conversion": [[739, "inheritance-automatic-pointer-to-base-conversion"]], "Inheritance: Slicing (Automatic Instance Conversion)": [[739, "inheritance-slicing-automatic-instance-conversion"]], "Destructors And Interfaces": [[740, "destructors-and-interfaces"]], "Destructor, Straightforward Usage": [[740, "destructor-straightforward-usage"]], "Calling Destructor Through Base Class Pointer": [[740, "calling-destructor-through-base-class-pointer"]], "Virtual Destructor (Destructors Are Special)": [[740, "virtual-destructor-destructors-are-special"]], "Solution: Empty Virtual Destructor": [[740, "solution-empty-virtual-destructor"]], "Inheritance And Object Oriented Design": [[741, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[742, "c-interfaces"]], "Bringing It All Together": [[742, "bringing-it-all-together"]], "Pure Virtual Methods, And Interfaces": [[743, "pure-virtual-methods-and-interfaces"]], "Polymorphic Usage Of Objects": [[743, "polymorphic-usage-of-objects"]], "Sensor Base Class: One Among Many?": [[743, "sensor-base-class-one-among-many"]], "Towards Interfaces: Pure Virtual Methods": [[743, "towards-interfaces-pure-virtual-methods"]], "Dynamic Dispatch: Virtual Methods": [[744, "dynamic-dispatch-virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[744, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[744, "enter-virtual"]], "Virtual Methods: Effects": [[744, "virtual-methods-effects"]], "Virtual Methods: Where Not To Place virtual": [[744, "virtual-methods-where-not-to-place-virtual"]], "override: Problem": [[744, "override-problem"]], "override: Solution": [[744, "override-solution"]], "A Better void*: std::any": [[745, "a-better-void-std-any"]], "Default Initialization": [[745, "default-initialization"]], "Initialization, Assignment, Access": [[745, "initialization-assignment-access"]], "Copy, And Resource Management": [[745, "copy-and-resource-management"]], "Run-Time Type Errors": [[745, "run-time-type-errors"]], "has_value(): Null?": [[745, "has-value-null"]], "Avoiding Exceptions": [[745, "avoiding-exceptions"]], "Modifying In-Place: std::any_cast<> To Reference": [[745, "modifying-in-place-std-any-cast-to-reference"]], "std::string And const char* Are Different": [[745, "std-string-and-const-char-are-different"], [747, "std-string-and-const-char-are-different"]], "std::any, std::variant, std::optional": [[746, "std-any-std-variant-std-optional"]], "New-Style Union: std::variant": [[747, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[747, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[747, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[747, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[747, "accessing-non-current-member-std-bad-variant-access"]], "The Visitor": [[747, "the-visitor"]], "Non-Throwing Accessor: std::get_if<>": [[747, "non-throwing-accessor-std-get-if"]], "And User Defined Types?": [[747, "and-user-defined-types"]], "And Memory Usage?": [[747, "and-memory-usage"]], "[[noreturn]]": [[748, "noreturn"]], "[[deprecated]]": [[748, "deprecated"]], "[[fallthrough]]: Problem": [[748, "fallthrough-problem"]], "[[fallthrough]]: Usage": [[748, "fallthrough-usage"]], "[[nodiscard]]: Problem": [[748, "nodiscard-problem"]], "[[nodiscard]]: Solution": [[748, "nodiscard-solution"]], "[[nodiscard]] On Entire Types": [[748, "nodiscard-on-entire-types"]], "[[maybe_unused]]": [[748, "maybe-unused"]], "[[likely]]": [[748, "likely"]], "Duck Typing (Err, auto) Without A Duck": [[749, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[749, "most-basic-usage"]], "auto Is Only The Basic Type": [[749, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[749, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[749, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[749, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[749, "and-arrays-decay-to-pointers"]], "std::bind": [[750, "std-bind"]], "Why? What\u2019s The Problem?": [[750, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[750, "sample-program-all-done-manually"]], "Sideway: std::transform": [[750, "sideway-std-transform"]], "Sample Program: Using std::transform": [[750, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[750, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[750, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[750, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[750, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[750, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[750, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[750, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[750, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[750, "summary"], [984, "summary"], [984, "id1"], [1228, "summary"], [1231, "summary"]], "std::function": [[751, "std-function"]], "Classic Polymorphism": [[751, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[751, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[751, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[751, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[751, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[751, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[751, "std-function-last-words"]], "std::bind, std::function": [[752, "std-bind-std-function"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[753, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[753, "std-initializer-list"]], "Direct Usage": [[753, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[753, "custom-class-that-supports-brace-initialization"]], "Brace Initialization (Uniform Initialization)": [[754, "brace-initialization-uniform-initialization"]], "Brace Initialization: Introduction": [[755, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[755, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[755, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[755, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[755, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[755, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[755, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[755, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[755, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[755, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[756, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[756, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[756, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[756, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[756, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[756, "nicolai-josuttis-complaining-about-c"]], "std::chrono": [[757, "std-chrono"], [757, "id1"]], "Clock Domains": [[757, "clock-domains"]], "Measuring Time (1)": [[757, "measuring-time-1"]], "Measuring Time (2)": [[757, "measuring-time-2"]], "Sleeping, and Literals": [[757, "sleeping-and-literals"]], "Concepts: Overview": [[759, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[759, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[759, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[759, "concepts-to-the-rescue"]], "Alternative Concept Syntaxes": [[759, "alternative-concept-syntaxes"]], "Concepts: Links": [[760, "concepts-links"]], "Writing Your Own Concepts": [[761, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[761, "starting-point-good-old-function"]], "Problem: std::vector<double> Is Not Enough \u27f6 Template": [[761, "problem-std-vector-double-is-not-enough-longrightarrow-template"]], "Concept: has_size": [[761, "concept-has-size"]], "Fix has_size Failure In point2d": [[761, "fix-has-size-failure-in-point2d"]], "Problem: What If I Pass Elements That Do Not Support *?": [[761, "problem-what-if-i-pass-elements-that-do-not-support"]], "Concept: coordinate_is_multipliable": [[761, "concept-coordinate-is-multipliable"]], "Concept: Require Coordinate Type To Be Double": [[761, "concept-require-coordinate-type-to-be-double"]], "const": [[762, "const"]], "Facts": [[762, "facts"], [1049, "facts"]], "const Variables Might Disappear Entirely": [[762, "const-variables-might-disappear-entirely"]], "const Might Generally Disappear: std::map<>?": [[762, "const-might-generally-disappear-std-map"]], "const Might Generally Disappear: std::array<>?": [[762, "const-might-generally-disappear-std-array"]], "consteval": [[763, "consteval"]], "Usage: At Compiletime Only": [[763, "usage-at-compiletime-only"]], "No Forcing Needed \u27f6 Can Assign To Mutable Variables": [[763, "no-forcing-needed-longrightarrow-can-assign-to-mutable-variables"]], "And constexpr?": [[763, "and-constexpr"]], "constexpr": [[764, "constexpr"]], "Compilers Always Did Runtime Work": [[764, "compilers-always-did-runtime-work"]], "Motivation: Let Compiler Do More Of This": [[764, "motivation-let-compiler-do-more-of-this"]], "And static? Why Not Use static?": [[764, "and-static-why-not-use-static"]], "Enter constexpr": [[764, "enter-constexpr"]], "constexpr Functions: Evaluated At Runtime OR Compiletime": [[764, "constexpr-functions-evaluated-at-runtime-or-compiletime"]], "Forcing Compiletime Evaluation": [[764, "forcing-compiletime-evaluation"]], "So What Are The Rules? constexpr Functions Are Dual": [[764, "so-what-are-the-rules-constexpr-functions-are-dual"]], "Uncool: Forcing Compiletime Evaluation Leads To constexpr Result": [[764, "uncool-forcing-compiletime-evaluation-leads-to-constexpr-result"]], "constexpr Callchains": [[764, "constexpr-callchains"]], "constexpr Classes": [[764, "constexpr-classes"]], "constexpr Algorithms, constexpr std::vector": [[764, "constexpr-algorithms-constexpr-std-vector"]], "Afterword: Cool": [[764, "afterword-cool"]], "constinit": [[765, "constinit"]], "Definition: Initialization Of Globals": [[765, "definition-initialization-of-globals"]], "Problem: The Static Initialization Order Fiasco": [[765, "problem-the-static-initialization-order-fiasco"]], "Solution: constinit": [[765, "solution-constinit"], [765, "id1"]], "The Problem": [[765, "the-problem"]], "Possible Solutions?": [[765, "possible-solutions"]], "if constexpr": [[766, "if-constexpr"]], "const, constexpr, constinit, consteval": [[767, "const-constexpr-constinit-consteval"]], "Local Variables In Control Flow Statements": [[768, "local-variables-in-control-flow-statements"]], "if Locals: Basis": [[768, "if-locals-basis"]], "if Locals: Use Case: std::map<> Lookup": [[768, "if-locals-use-case-std-map-lookup"]], "if Locals: Use Case: Scoped Locking": [[768, "if-locals-use-case-scoped-locking"]], "for Locals: Good Old Times": [[768, "for-locals-good-old-times"]], "Range for Locals: Only Logical \u27f6 New In C++20": [[768, "range-for-locals-only-logical-longrightarrow-new-in-c-20"]], "Coroutines": [[769, "coroutines"]], "Coroutines: An Overview": [[770, "coroutines-an-overview"]], "Foreword": [[770, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[770, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[770, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[770, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[770, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[770, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[770, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[770, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[770, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[770, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[770, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[770, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[771, "fibo-generator-cpp"]], "fibonacci.cpp": [[772, "fibonacci-cpp"]], "generator.h": [[773, "generator-h"]], "generator-hello.cpp": [[774, "generator-hello-cpp"]], "simplest.cpp": [[775, "simplest-cpp"]], "suspend.cpp": [[776, "suspend-cpp"]], "suspend-iter.cpp": [[777, "suspend-iter-cpp"]], "suspend-next.cpp": [[778, "suspend-next-cpp"]], "Delegating Constructor: Motivation": [[779, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[779, "delegating-constructor-solution"]], "CRTP": [[780, "crtp"], [785, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[781, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[782, "classic-virtual"]], "Sensor Definitions": [[782, "sensor-definitions"], [784, "sensor-definitions"], [786, "sensor-definitions"], [788, "sensor-definitions"]], "Virtual Access": [[782, "virtual-access"], [784, "virtual-access"], [786, "virtual-access"], [787, "virtual-access"], [788, "virtual-access"], [789, "virtual-access"]], "Average Across Many": [[782, "average-across-many"], [784, "average-across-many"], [786, "average-across-many"], [788, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[783, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[783, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[783, "and-crtp"]], "std::string_view": [[783, "std-string-view"]], "Non-Virtual, But Related": [[784, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[785, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[786, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[787, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[788, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[789, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Replacing virtual With std::variant<> (In Real Life)": [[790, "replacing-virtual-with-std-variant-in-real-life"]], "Classic OO Design": [[790, "classic-oo-design"]], "Source Hierarchy": [[790, "source-hierarchy"]], "Sink Hierarchy": [[790, "sink-hierarchy"]], "Loop In The Middle": [[790, "loop-in-the-middle"], [790, "id1"]], "Omitting virtual: Cram All Alternatives Into std::variant<>": [[790, "omitting-virtual-cram-all-alternatives-into-std-variant"]], "Source Non-Hierarchy": [[790, "source-non-hierarchy"]], "Sink Non-Hierarchy": [[790, "sink-non-hierarchy"]], "Why Replace virtual?": [[791, "why-replace-virtual"]], "Drafts": [[792, "drafts"], [926, "drafts"]], "Exercise: Bag Of Items, By Copy": [[793, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[793, "step-1-insert-find"]], "Step 2: Remove": [[793, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[794, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[794, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[794, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[794, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[795, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[797, "std-filesystem"]], "Paths: Composition, Comparison": [[797, "paths-composition-comparison"]], "Absolute and Relative Paths": [[797, "absolute-and-relative-paths"], [915, "absolute-and-relative-paths"]], "Path Component Access": [[797, "path-component-access"]], "Iterating Over Path Components": [[797, "iterating-over-path-components"]], "Current Working Directory": [[797, "current-working-directory"], [894, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[797, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[797, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[797, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[797, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[797, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[797, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[797, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[798, "the-new-c-11"]], "Scenarios": [[798, "scenarios"]], "A Live-Hacked Tour Around The New C++": [[800, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[800, "c-03-to-do-list-version"]], "Real Container Initialization": [[800, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[800, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[800, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[800, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[800, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[800, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[800, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[800, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[800, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[800, "inevitable-threads"]], "Unions? std::variant!": [[800, "unions-std-variant"]], "Wrapping All That Into A Class": [[800, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[800, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[800, "wrapping-up-initializer"]], "A One-Day Overview Of C++": [[801, "a-one-day-overview-of-c"]], "Topics covered": [[801, null]], "C++03 Todo-List": [[801, "c-03-todo-list"]], "Pitfall: Encapsulate std::map Value In class Item": [[801, "pitfall-encapsulate-std-map-value-in-class-item"]], "Pitfall: Accessing std::map Using Its operator[]": [[801, "pitfall-accessing-std-map-using-its-operator"]], "Real Container Initialization: Brace Initialization": [[801, "real-container-initialization-brace-initialization"]], "OOP: Towards The Interface Dogma": [[801, "oop-towards-the-interface-dogma"]], "Two Kinds Of Items, Two Classes": [[801, "two-kinds-of-items-two-classes"]], "Inheritance (Make It Compile, But Not Yet Work)": [[801, "inheritance-make-it-compile-but-not-yet-work"]], "Analysis: The Perils Of Inheritance - Slicing": [[801, "analysis-the-perils-of-inheritance-slicing"]], "Analysis: The Perils Of Inheritance - Automatic Pointer Type Conversion": [[801, "analysis-the-perils-of-inheritance-automatic-pointer-type-conversion"]], "Key To Polymorphism: virtual": [[801, "key-to-polymorphism-virtual"]], "Pitfall: Incorrectly Implement Derived Class Method": [[801, "pitfall-incorrectly-implement-derived-class-method"]], "Solution: That\u2019s What override Is There For": [[801, "solution-that-s-what-override-is-there-for"]], "Pure Virtual Methods (\u201cI Don\u2019t Know What class Item Would Do\u201d)": [[801, "pure-virtual-methods-i-don-t-know-what-class-item-would-do"]], "Pitfall: Derived Class Destructor (1)": [[801, "pitfall-derived-class-destructor-1"]], "Pitfall: Derived Class Destructor (2)": [[801, "pitfall-derived-class-destructor-2"]], "The Interface, Put Dogmatically": [[801, "the-interface-put-dogmatically"]], "Wrap Up: Polymorpic Todolist": [[801, "wrap-up-polymorpic-todolist"]], "Memory Management: Smart Pointers (Showing The Options)": [[801, "memory-management-smart-pointers-showing-the-options"]], "Memory Management: std::unique_ptr<> In TodoList \u27f6 No": [[801, "memory-management-std-unique-ptr-in-todolist-longrightarrow-no"]], "A Short Deviation: Move Semantics": [[801, "a-short-deviation-move-semantics"]], "Memory Management: std::shared_ptr<> In TodoList": [[801, "memory-management-std-shared-ptr-in-todolist"]], "Readability: Long Type Names \u27f6 auto": [[801, "readability-long-type-names-longrightarrow-auto"]], "Pitfalls: auto": [[801, "pitfalls-auto"]], "Readability: Tuple Unpacking (Err, Structured Binding)": [[801, "readability-tuple-unpacking-err-structured-binding"]], "Range Based for": [[801, "range-based-for"]], "Full Classes Hierarchy For One Method doit() \u27f6 NO (Lambdas)": [[801, "full-classes-hierarchy-for-one-method-doit-longrightarrow-no-lambdas"]], "Wrap Up: TodoList, De-Overengineered": [[801, "wrap-up-todolist-de-overengineered"]], "Lambda To The Rescue": [[803, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[803, "excursion-python-closures"]], "Same In C++: Capturing": [[803, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[803, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[803, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[803, "more-about-capturing"]], "Lambda: More Capturing": [[804, "lambda-more-capturing"]], "More Capture Syntax": [[804, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[804, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[804, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[804, "mixed-explicit-capture"]], "Define Variables In Capture": [[804, "define-variables-in-capture"]], "Capturing All By Reference": [[804, "capturing-all-by-reference"]], "Capturing All By Copy": [[804, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[804, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[804, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[805, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[805, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[805, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[806, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[806, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[806, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[806, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[806, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "Lambda And Templates": [[807, "lambda-and-templates"]], "Generic Lambda (auto Parameters)": [[807, "generic-lambda-auto-parameters"]], "Template Lambda (C++20)": [[807, "template-lambda-c-20"]], "Templates end with \u201c>>\u201d": [[808, "templates-end-with"]], "Afterword, Further Reading": [[810, "afterword-further-reading"]], "Uses In The Standard Library": [[810, "uses-in-the-standard-library"]], "Other Uses": [[810, "other-uses"]], "All Said \u27f6 Guidelines": [[810, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[810, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[811, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[811, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[812, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[812, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[812, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[813, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[813, "copy-semantics-revisited"]], "class String, Without Copy": [[813, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[813, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[813, "move-constructor-move"]], "Implementing Move Constructor": [[813, "implementing-move-constructor"]], "And Move Assignment?": [[813, "and-move-assignment"]], "Implementing Move Assignment": [[813, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[814, "using-move-semantics-in-own-code"]], "Using String: class Person": [[814, "using-string-class-person"]], "What?": [[814, "what"], [874, "what"]], "Using Rvalue References Inside Function: std::move": [[814, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[815, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[815, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[815, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[815, "move-semantics-wish-list"]], "Theory: Lvalues": [[815, "theory-lvalues"]], "Theory: Rvalues": [[815, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[815, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[815, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[815, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[815, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[815, "enter-move-constructor-and-move-assignment"]], "Rules": [[815, null]], "Threads Introduction": [[816, "threads-introduction"]], "Operating System Primitives": [[816, "operating-system-primitives"]], "There Be Dragons": [[816, "there-be-dragons"]], "Threads in C++": [[817, "threads-in-c"]], "Creating Threads is Far Too Easy": [[817, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[817, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[817, "cornercases-in-thread-lifetime"]], "std::atomic": [[818, "std-atomic"]], "Atomic Instructions (1)": [[818, "atomic-instructions-1"]], "Atomic Instructions (2)": [[818, "atomic-instructions-2"]], "std::mutex And Friends": [[819, "std-mutex-and-friends"]], "std::mutex": [[819, "std-mutex"]], "std::recursive_mutex": [[819, "std-recursive-mutex"]], "std::timed_mutex": [[819, "std-timed-mutex"]], "std::recursive_timed_mutex": [[819, "std-recursive-timed-mutex"]], "Scoped Locking": [[820, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[820, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[820, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[820, "simplest-std-lock-guard"]], "Atomic Shared Pointer (std::atomic<std::shared_ptr<>)": [[821, "atomic-shared-pointer-std-atomic-std-shared-ptr"]], "Safe: Control Block Modification": [[821, "safe-control-block-modification"]], "Sideways: Synchronizing With Thread Startup (1)": [[821, "sideways-synchronizing-with-thread-startup-1"]], "Sideways: Synchronizing With Thread Startup (2)": [[821, "sideways-synchronizing-with-thread-startup-2"]], "Unsafe: Assignment To Shared Pointer": [[821, "unsafe-assignment-to-shared-pointer"]], "Solution: std::atomic_store<> Specialization": [[821, "solution-std-atomic-store-specialization"]], "Solution: std::atomic<std::shared_ptr>": [[821, "solution-std-atomic-std-shared-ptr"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[822, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[822, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[822, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[822, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[822, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[822, "thread-safe-queue-and-c-condition-variables"]], "Multithreading, C++ Memory Model": [[823, "multithreading-c-memory-model"]], "The C++ Memory Model": [[824, "the-c-memory-model"]], "Data Race: Load Modify Store": [[824, "data-race-load-modify-store"]], "Data Race: Load Modify Store (Explained)": [[824, "data-race-load-modify-store-explained"]], "Optimizations": [[824, "optimizations"]], "CPU Optimization: Write Reordering": [[824, "cpu-optimization-write-reordering"]], "Another Race: std::list Is Not Threadsafe": [[824, "another-race-std-list-is-not-threadsafe"]], "Protecting std::list With A Mutex": [[824, "protecting-std-list-with-a-mutex"]], "What\u2019s A Mutex?": [[824, "what-s-a-mutex"]], "Memory Order": [[824, "memory-order"]], "Release And Acquire Ordering": [[824, "release-and-acquire-ordering"]], "Release And Acquire Ordering: A Naive Spinlock": [[824, "release-and-acquire-ordering-a-naive-spinlock"]], "Sequential Consistency: Resolving Load-Modify-Store-Conflict": [[824, "sequential-consistency-resolving-load-modify-store-conflict"]], "And Other Memory Orders?": [[824, "and-other-memory-orders"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[825, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[825, "overview-std-promise"]], "Overview: std::future": [[825, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[825, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[825, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[825, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[825, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[825, "pro-readability-encapsulate"]], "Atomics On Structures?": [[825, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[825, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[825, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[825, "and-exceptions"]], "= default": [[826, "default"]], "Problem: Default Constructor Not Automatically Generated": [[826, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[826, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[826, "c-11-solution-default"]], "= delete": [[827, "delete"]], "Problem: Copy Is Not Always Wanted": [[827, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[827, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[827, "c-11-solution-delete-copy"]], "final": [[828, "final"]], "Architectural Decisions": [[828, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[828, "enter-final-architectural-cleanliness-by-compiler"]], "New OO Features: = delete, = default, override, final": [[829, "new-oo-features-delete-default-override-final"]], "override": [[830, "override"]], "Correct Overriding \u2026": [[830, "correct-overriding"]], "\u2026 Is Very Hard": [[830, "is-very-hard"]], "More Problems Arise": [[830, "more-problems-arise"]], "Solution: override": [[830, "solution-override"]], "Perfect Forwarding": [[831, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[831, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[831, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[831, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[831, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "Range Based for Loops: Introduction": [[833, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[833, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[833, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[833, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[834, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[834, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[834, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[834, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[834, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[834, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[835, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[835, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[835, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[835, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[835, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[835, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[835, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[835, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[835, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[837, "ranges-overview"]], "Ranges?": [[837, "ranges"]], "Containers And Views (Storage Behavior)": [[837, "containers-and-views-storage-behavior"]], "Example: std::views::drop": [[837, "example-std-views-drop"]], "Example: std::views::take": [[837, "example-std-views-take"]], "Pipe Syntax": [[837, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[837, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[837, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[837, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[837, "available-ranges-concepts"]], "Ranges And Views: Links": [[838, "ranges-and-views-links"]], "From Concrete To Polymorphic (class Sensor)": [[839, "from-concrete-to-polymorphic-class-sensor"]], "Very Concrete, And Old School": [[839, "very-concrete-and-old-school"]], "Use std::chrono For Time": [[839, "use-std-chrono-for-time"]], "New Sensor Type: FileSensor": [[839, "new-sensor-type-filesensor"]], "Type Mismatch: Logger(...)": [[839, "type-mismatch-logger"]], "Create Interface: Sensor": [[839, "create-interface-sensor"]], "Derive Concrete Implementations From Sensor": [[839, "derive-concrete-implementations-from-sensor"]], "Polymorphic \u201cClasses\u201d In Good Ol\u2019 C": [[840, "polymorphic-classes-in-good-ol-c"]], "Smart Pointers: Closing Words": [[841, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[841, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[842, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[843, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[843, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[844, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[844, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[844, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[844, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[844, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[844, "explicit-move-method-maybe"]], "Stop!!!": [[844, "stop"]], "std::shared_ptr": [[845, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[845, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[845, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[845, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[845, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[845, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[845, "demo-basic-usage"]], "Demo: std::make_shared": [[845, "demo-std-make-shared"]], "Demo: Cyclic References": [[845, "demo-cyclic-references"]], "std::unique_ptr": [[846, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[846, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[846, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[846, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[846, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[846, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[846, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[846, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[846, "manipulating-pointer-content"]], "std::weak_ptr": [[847, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[847, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[847, "a-real-life-example"]], "The Spaceship Operator <=> (And Comparison In General)": [[848, "the-spaceship-operator-and-comparison-in-general"]], "Problem: Comparison Operators": [[848, "problem-comparison-operators"]], "Annoying: Occasional Container Insertion \u27f6 operator<()": [[848, "annoying-occasional-container-insertion-longrightarrow-operator"]], "Annoying: Implementing All Six (<, >, <=, >=, ==, !=)": [[848, "annoying-implementing-all-six"]], "Annoying: Even Simple (In)Equality Comparison": [[848, "annoying-even-simple-in-equality-comparison"]], "C++20 To The Rescue: (In)Equality": [[848, "c-20-to-the-rescue-in-equality"]], "Pythonicity: Comparing Compatible Types": [[848, "pythonicity-comparing-compatible-types"]], "Every == Has Its !=": [[848, "every-has-its"]], "Spaceship Operator <=>": [[848, "spaceship-operator"]], "Ordering Relationships": [[848, "ordering-relationships"]], "Straightforward operator<=>()": [[848, "straightforward-operator"]], "Compound Datatypes (Handwritten)": [[848, "compound-datatypes-handwritten"]], "Compound Datatypes: = default Spaceship": [[848, "compound-datatypes-default-spaceship"]], "Some Types Have A Weaker Ordering Than std::strong_ordering": [[848, "some-types-have-a-weaker-ordering-than-std-strong-ordering"]], "Pointer Members: std::strong_ordering, But Unusable": [[848, "pointer-members-std-strong-ordering-but-unusable"]], "C++03 enum Types: Motivation": [[849, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[849, "c-03-enum-types-problems"]], "C++11 enum class": [[849, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[849, "c-11-enum-class-underlying-type"]], "Tuple Unpacking (Err, Structured Binding)": [[850, "tuple-unpacking-err-structured-binding"]], "Basics: Python Tuple Unpacking": [[850, "basics-python-tuple-unpacking"]], "Variations, Compatible Data Types": [[850, "variations-compatible-data-types"]], "struct: By Copy": [[850, "struct-by-copy"]], "struct: Reference": [[850, "struct-reference"]], "struct: By const Reference": [[850, "struct-by-const-reference"]], "std::tuple: By Copy": [[850, "std-tuple-by-copy"]], "std::tuple: By Reference": [[850, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[850, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[850, "arrays-by-copy"]], "Arrays: By Reference": [[850, "arrays-by-reference"]], "Arrays: By const Reference": [[850, "arrays-by-const-reference"]], "Exercises: Archiving And Compression": [[852, "exercises-archiving-and-compression"]], "gzip": [[853, "gzip"]], "Compression Tools: Comparison": [[855, "compression-tools-comparison"]], "tar": [[856, "tar"]], "Creating And Viewing Archives": [[856, "creating-and-viewing-archives"]], "(De)Compression": [[856, "de-compression"]], "Etiquette": [[856, "etiquette"]], "Option Summary": [[856, "option-summary"]], "Being Creative With The Pipe": [[856, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[857, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[857, "precondition-logged-in-to-remote-exam-computer"], [858, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[857, "create-exam-skeleton-5-points"], [858, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[857, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[857, "public-place-10-points"], [858, "public-place-10-points"]], "Private Place (10 Points)": [[857, "private-place-10-points"], [858, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[857, "shared-file-in-public-place-10-points"], [858, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[857, "make-a-backup-of-exam-01-15-points"], [858, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[858, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[858, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[859, "exercises-exams-linux-basics"]], "Everything Is A File (Live Demo)": [[861, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[861, "simple-is-beautiful"]], "Ok: a File is a File": [[861, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[861, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[861, "pseudo-terminals"]], "Disks and Partitions": [[861, "disks-and-partitions"]], "/proc and /sys": [[861, "proc-and-sys"]], "Pseudo Devices": [[861, "pseudo-devices"]], "Environment (Variables)": [[862, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[862, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[862, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[862, "popular-environment-variables-path"]], "Quiz: Linux Basics": [[863, "quiz-linux-basics"]], "User Space, Kernel Space": [[863, "user-space-kernel-space"], [864, "user-space-kernel-space"]], "Quiz: Linux Basics (Solution)": [[864, "quiz-linux-basics-solution"]], "Login? What Is That?": [[866, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[866, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[866, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[866, "and-after-successful-authentication"]], "Impersonation": [[866, "impersonation"]], "Logged In, Finally": [[866, "logged-in-finally"]], "User Space, Kernel Space?": [[867, "user-space-kernel-space"]], "User Space: Abstractions": [[867, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[867, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[867, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[868, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[868, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[868, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[868, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[868, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[868, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[868, "process-attributes-groups"]], "Processes: More Attributes": [[868, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[869, "process-hierarchy-parent-child-process"]], "More Process Rules": [[869, "more-process-rules"]], "Typical Process Tree": [[869, "typical-process-tree"]], "Services, init": [[869, "services-init"]], "Windows Subsystem for Linux (WSL)": [[870, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[870, null]], "More Links": [[870, "more-links"]], "My $0.02": [[870, "my-0-02"]], "WSL, Finally": [[870, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[871, "exercises-io-redirection-pipes"]], "I/O Redirection": [[873, "i-o-redirection"]], "Standard I/O Streams": [[873, "standard-i-o-streams"]], "I/O Redirection Operators": [[873, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[873, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[873, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[873, "example-standard-error-redirection"]], "Example: Everything Redirection": [[873, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[874, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[874, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[874, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[874, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[874, "more-tricks"]], "Pipes": [[875, "pipes"]], "Why Pipes?": [[875, "why-pipes"]], "Pipe Facts": [[875, "pipe-facts"]], "Pipe Examples": [[875, "pipe-examples"]], "More Pipe Examples": [[875, "more-pipe-examples"]], "Named Pipes": [[875, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[876, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[876, "owner-and-permissions"]], "A Simple Example": [[876, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[876, null]], "Permission Check: User": [[876, "permission-check-user"]], "Permission Check: Group": [[876, "permission-check-group"]], "Permission Check: Others": [[876, "permission-check-others"]], "Programs: Execute Permissions": [[876, "programs-execute-permissions"]], "Directory Permissions": [[876, "directory-permissions"]], "Permission Bits, octal": [[876, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[876, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[876, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[877, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[878, "fh-moodle-quiz-permissions"], [879, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[880, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[881, "exercise-create-private-directory"]], "Question: Private Directory": [[882, "question-private-directory"]], "Exercise: Create Public Directory": [[883, "exercise-create-public-directory"]], "Question: Public Directory": [[884, "question-public-directory"]], "Exercise: Create Group-Shared File": [[885, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[887, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[887, "problem-change-my-password"]], "Solution: Set-UID Bit": [[887, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[887, "set-uid-how-does-it-work"]], "Command: chmod": [[887, "command-chmod"]], "Set-UID Is Not A Toy!": [[887, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[888, "setuid-live-demo"]], "Real and Effective User ID": [[888, "real-and-effective-user-id"]], "Sample Program": [[888, "sample-program"]], "Set-UID jfasch?": [[888, "set-uid-jfasch"]], "Set-UID root? Danger!": [[888, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[889, "ugly-hack-sticky-bit"]], "Sticky Bit": [[889, "sticky-bit"]], "Default Permissions: umask": [[890, "default-permissions-umask"]], "Default Permissions - umask": [[890, "id1"]], "umask: How Does it Work?": [[890, "umask-how-does-it-work"]], "Shape (1)": [[891, "shape-1"]], "Shape (2)": [[891, "shape-2"]], "Options": [[891, "options"], [921, "options"]], "Help and Manual": [[891, "help-and-manual"]], "Man Pages: Navigation": [[891, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[891, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[891, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[891, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[891, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[891, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[892, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[892, "what-s-volatile"]], "Copying: cp": [[893, "copying-cp"]], "Option Overview": [[893, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[893, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[893, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[893, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[893, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[893, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[894, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[894, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[895, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[896, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[897, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[898, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[899, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[900, "exercise-mkdir"]], "Exercise: Funny Stuff": [[901, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[902, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[903, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[904, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[905, "the-shell-exercises"]], "Exercise: File Types in /dev": [[906, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[907, "exercise-size-of-etc-passwd"]], "Exercise: Permissions of Home Directory": [[908, "exercise-permissions-of-home-directory"]], "Exercises: The ls Command": [[909, "exercises-the-ls-command"]], "Creating And Removing Files and Directories": [[910, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[910, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[910, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[910, "creating-an-empty-file-touch"]], "Removing A File: rm": [[910, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[910, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[912, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[913, "directory-listings-the-ls-command"]], "Many Options": [[913, "many-options"]], "Hidden Files": [[913, "hidden-files"]], "File Types": [[913, "file-types"]], "Moving and Renaming: mv": [[914, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[914, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[914, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[914, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[915, "path-separator"]], "Relative Paths": [[915, "relative-paths"]], "Absolute Paths": [[915, "absolute-paths"]], "Special Paths": [[916, "special-paths"]], "cat": [[917, "cat"], [917, "id1"]], "cut": [[918, "cut"], [918, "id1"]], "Exercises: Inspecting Text Files": [[919, "exercises-inspecting-text-files"]], "find": [[920, "find"]], "Directories durchsuchen mit find": [[920, "directories-durchsuchen-mit-find"]], "find: Optionen": [[920, "find-optionen"]], "find: Beispiele": [[920, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[920, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[920, "find-verknupfungen-beispiele"]], "grep": [[921, "grep"]], "Searching With grep": [[921, "searching-with-grep"]], "More About Regular Expressions": [[921, "more-about-regular-expressions"]], "head And tail": [[922, "head-and-tail"]], "head": [[922, "head"]], "tail": [[922, "tail"]], "head And tail In The Pipe": [[922, "head-and-tail-in-the-pipe"]], "less": [[924, "less"]], "Paging Files Using less": [[924, "paging-files-using-less"]], "Help Screen (Enter With h)": [[924, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[925, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[925, "stdin-stdout-examples"]], "Pipe: Examples": [[925, "pipe-examples"]], "Basics Text Tools": [[925, "basics-text-tools"]], "Yocto": [[927, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[928, "controlling-a-brushless-motor-with-raspberry-pi"]], "Electronic Speed Controller (ESC)": [[928, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[928, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[928, "the-command-protocol-and-calibration"]], "Driving the Motor": [[928, "driving-the-motor"]], "CAN/Linux Basics": [[929, "can-linux-basics"]], "Why This Talk?": [[929, "why-this-talk"]], "Network Programming: Datagram Exchange": [[929, "network-programming-datagram-exchange"]], "And CAN?": [[929, "and-can"]], "One CAN Network Packet \u2026": [[929, "one-can-network-packet"]], "CAN Interfaces": [[930, "can-interfaces"]], "CAN-Interface: Configuration": [[930, "can-interface-configuration"]], "CAN Utils": [[930, "can-utils"]], "CAN Utils: Usage (1)": [[930, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[930, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[930, "vcan-virtual-can-bus"]], "Programming": [[931, "programming"]], "CAN Programming": [[931, "can-programming"]], "CAN in C - Socket, Interface Index": [[931, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[931, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[931, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[931, "can-in-c-frames-2"]], "CAN in Python - Frames": [[931, "can-in-python-frames"]], "Hardware, Kernel": [[932, "hardware-kernel"]], "MCP2515: Schematic": [[932, "mcp2515-schematic"]], "MCP2515: Soldering": [[932, "mcp2515-soldering"]], "MCP2515: SPI": [[932, "mcp2515-spi"]], "MCP2515: Raspberry": [[932, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[933, "can-bus-with-linux-and-python"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[934, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[934, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 I2C Master Driver": [[934, "enable-i2c-load-bcm2835-i2c-master-driver"]], "Raspberry Pi 40-pin header pinout": [[934, null]], "Make I2C Master Visible In Userspace (/dev/i2c-1)": [[934, "make-i2c-master-visible-in-userspace-dev-i2c-1"]], "Connect A Slave Device (LM73 Temperature Sensor)": [[934, "connect-a-slave-device-lm73-temperature-sensor"]], "LM73 Hardware": [[934, "lm73-hardware"]], "Datasheet etc.": [[934, null]], "Optional: Address Selection": [[934, "optional-address-selection"]], "Wiring LM73 To The Raspberry Pi": [[934, "wiring-lm73-to-the-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[934, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Implementing A LM73 Client In Userspace": [[934, "implementing-a-lm73-client-in-userspace"]], "Using The LM73 Kernel Driver (If Available)": [[934, "using-the-lm73-kernel-driver-if-available"]], "Building the Kernel, Enabling LM73": [[934, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[934, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[934, "hardware-monitoring-hwmon-devices"]], "Linux Hardware Interfaces": [[935, "linux-hardware-interfaces"]], "PWM Userspace Interface (using PCA9685)": [[936, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[936, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[936, "why-an-external-pwm-controller"]], "Wiring, And Checking Device Presence": [[936, "wiring-and-checking-device-presence"]], "PCA9685 Kernel Driver": [[936, "pca9685-kernel-driver"]], "Talk to Chip Using the sysfs Interface": [[936, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[937, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[937, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[937, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[937, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[937, null]], "Wiring: Attach DS2482-800 via I2C": [[937, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[937, "configure-software"]], "Enable I2C, and Check (Bootloader config, /boot/config.txt)": [[937, "enable-i2c-and-check-bootloader-config-boot-config-txt"]], "Verify That Our Device Is There (i2cdetect)": [[937, "verify-that-our-device-is-there-i2cdetect"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[937, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[937, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[937, "over-engineering-beauty"]], "Hardware Bringup": [[937, "hardware-bringup"]], "Device Usage": [[937, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[937, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[937, "using-the-device"]], "As a Generic OneWire Device": [[937, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[937, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[937, "lm-sensors"]], "OneWire Caveats": [[937, "onewire-caveats"]], "Bus Topology": [[937, "bus-topology"]], "Error Symptoms": [[937, "error-symptoms"]], "Modern Character Devices (Screenplay)": [[939, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[940, "modern-character-devices-slideshow"]], "Source": [[940, null], [943, null], [945, null], [948, null], [950, null], [953, null], [961, null], [964, null], [974, null], [976, null], [987, null], [992, null]], "Character Devices: Problems": [[940, "character-devices-problems"]], "Dynamic Device Numbers": [[940, "dynamic-device-numbers"]], "Device Classes": [[940, "device-classes"]], "Devices": [[940, "devices"]], "Modern Character Devices": [[941, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[942, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[942, "hooks-necessary"]], "Implement open(), read(), write()": [[942, "implement-open-read-write"]], "ioctl()": [[942, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[943, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[943, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[943, "available-methods"]], "open(): Userspace": [[943, "open-userspace"]], "open(): Kernelspace": [[943, "open-kernelspace"]], "ioctl(): Userspace": [[943, "ioctl-userspace"]], "ioctl(): Kernelspace": [[943, "ioctl-kernelspace"]], "ioctl(): Requests": [[943, "ioctl-requests"]], "_IO*() Macros": [[943, "io-macros"]], "_IO*() Macros: Usage": [[943, "io-macros-usage"]], "File Operations on Character Devices": [[944, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[945, "coding-first-functionality-slideshow"]], "Implement Event List": [[945, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[945, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[945, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[946, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[947, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[947, "major-and-minor-numbers"]], "Character Device": [[947, "character-device"]], "Character Device Basics (Slideshow)": [[948, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[948, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[948, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[948, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[948, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[948, "character-device-1"]], "Character Device (2)": [[948, "character-device-2"]], "And User Space?": [[948, "and-user-space"]], "Character Device Basics": [[949, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[950, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[950, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[951, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[952, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[952, "build-module-from-multiple-files"]], "Per-Device Structure": [[952, "per-device-structure"]], "Want My Hair Pretty": [[952, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[952, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[953, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[953, "what-s-bad"]], "Coding: Refactoring": [[954, "coding-refactoring"]], "DMA (Slideshow)": [[955, "dma-slideshow"]], "Address Types": [[955, "address-types"]], "Physical Memory Allocation": [[955, "physical-memory-allocation"]], "DMA Mappings: Overview": [[955, "dma-mappings-overview"]], "Consistent DMA Mappings": [[955, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[955, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[955, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[955, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[955, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[955, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[955, "streaming-mappings-syncing"]], "DMA": [[956, "dma"]], "Building a Fedora Kernel (Screenplay)": [[957, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[957, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[957, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[957, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[958, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[959, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[959, "prerequisite-build-entire-kernel"]], "Build Modules": [[959, "build-modules"]], "Install Modules": [[959, "install-modules"]], "Fedora: Building External Kernel Modules": [[960, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[961, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[961, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[961, "built-in-vs-loadable-module"]], "Minimum Module Source": [[961, "minimum-module-source"]], "Gotchas: init() and exit()": [[961, "gotchas-init-and-exit"]], "Module Build": [[961, "module-build"]], "Minimum Makefile, Building": [[961, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[961, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[961, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[962, "module-loading-hello-world"]], "Linux Kernel Driver Development": [[963, "linux-kernel-driver-development"], [1266, "linux-kernel-driver-development"]], "Topics and Dependencies": [[963, "topics-and-dependencies"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[964, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[964, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[964, "cross-compilation"]], "Cross Compilation Sucks": [[964, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[964, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[964, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[964, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[964, "interlude-io-macros"]], "Request GPIO": [[964, "request-gpio"]], "Request Interrupt": [[964, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[965, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[966, "interrupts-slideshow"]], "Interrupt Facts": [[966, "interrupt-facts"]], "Interrupt Service Routine": [[966, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[966, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[968, "io-memory-slideshow"]], "I/O Memory": [[968, "i-o-memory"]], "I/O Memory: Reservation": [[968, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[968, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[968, "accessing-i-o-memory"]], "IO Memory": [[969, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[970, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[970, "dynamic-memory-kmalloc"], [971, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[970, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[972, "doubly-linked-lists-slideshow"]], "Big Picture": [[972, "big-picture"], [1049, "big-picture"]], "List Head": [[972, "list-head"]], "Insert a Node": [[972, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[972, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[972, "emptying-a-list"]], "Doubly Linked Lists": [[973, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[974, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[974, "what-do-we-have"]], "Consequences of Not Protecting": [[974, "consequences-of-not-protecting"]], "Protect Event List": [[974, "protect-event-list"]], "Protect Device List": [[974, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[975, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[976, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[976, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[976, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[976, "mutex-locking-1"]], "Mutex: Locking (2)": [[976, "mutex-locking-2"]], "Mutex: Releasing": [[976, "mutex-releasing"]], "Realtime Mutex": [[976, "realtime-mutex"]], "Mutex (and RT Mutex)": [[977, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[978, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[978, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[978, "module-initialization-device-registration"]], "Device Methods": [[978, "device-methods"]], "Kernel Networking Layer Utilities": [[978, "kernel-networking-layer-utilities"]], "Network Devices": [[979, "network-devices"]], "PCI (Slideshow)": [[980, "pci-slideshow"]], "First and Foremost": [[980, "first-and-foremost"]], "PCI Driver Methods": [[980, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[980, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[980, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[980, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[980, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[980, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[980, "dma-support-routines"]], "PCI": [[981, "pci"]], "Process vs.Atomic Context (Slideshow)": [[982, "process-vs-atomic-context-slideshow"]], "Process Context": [[982, "process-context"]], "Race Conditions": [[982, "race-conditions"]], "Atomic Context": [[982, "atomic-context"]], "Atomic vs. Process Context": [[982, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[982, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[983, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[984, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[984, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[984, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[984, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[984, "other-toolchains"]], "Kernel Source": [[984, "kernel-source"]], "Kernel Compilation": [[984, "kernel-compilation"]], "Parameters for the Build": [[984, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[984, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[984, "building-the-kernel-artifacts"]], "Packaging": [[984, "packaging"], [1164, "packaging"]], "Bootloader Artifacts": [[984, "bootloader-artifacts"]], "Module Tree": [[984, "module-tree"]], "Deployment": [[984, "deployment"]], "Variation": [[984, "variation"]], "Raspberry Pi: Building the Kernel": [[985, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[985, "todo-jjj"]], "Sample Code Maintenance": [[986, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[987, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[987, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[987, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[987, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[987, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[988, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[989, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[989, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[989, "spinlock-initialization"]], "Simple Lock/Unlock": [[989, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[989, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[989, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[990, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[991, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[992, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[992, "per-event-timestamp"]], "Discussion: Deferred Events": [[992, "discussion-deferred-events"]], "Add Timer": [[992, "add-timer"]], "Gotcha: Cleanup Running Timer": [[992, "gotcha-cleanup-running-timer"]], "More Gotchas": [[992, "more-gotchas"]], "Coding: Timed Event": [[993, "coding-timed-event"]], "Timer Management (Slideshow)": [[994, "timer-management-slideshow"]], "Original Timer API": [[994, "original-timer-api"]], "jiffies": [[994, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[994, "timer-wheel-methods"]], "Better Documentation": [[994, "better-documentation"]], "Timer Management": [[995, "timer-management"]], "To Do List": [[996, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[997, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[997, "new-ioctl-get-one-event"]], "Getting One Event": [[997, "getting-one-event"]], "copy_to_user()": [[997, "copy-to-user"]], "Userspace Test Program": [[997, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[998, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[998, "address-spaces"]], "Copying To and From Userspace": [[998, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[999, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[1000, "waiting-for-something-screenplay"]], "read() Not Implemented": [[1000, "read-not-implemented"]], "Implementing read() Naively": [[1000, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[1000, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[1000, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[1001, "waiting-for-something-slideshow"]], "Waiting for Something": [[1001, "waiting-for-something"], [1002, "waiting-for-something"]], "Wait Queues: Initializing": [[1001, "wait-queues-initializing"]], "Wait Queue: Waiting": [[1001, "wait-queue-waiting"]], "Wait Queue: Waking": [[1001, "wait-queue-waking"]], "Workqueue (Screenplay)": [[1003, "workqueue-screenplay"]], "Add Workqueue": [[1003, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[1003, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[1003, "cleanup-why-we-did-this-after-all"]], "Finish": [[1003, "finish"]], "Workqueue (Slideshow)": [[1004, "workqueue-slideshow"]], "Workqueue: Motivation": [[1004, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[1004, "creating-destroying-a-workqueue"]], "What is Work?": [[1004, "what-is-work"]], "Submitting Work": [[1004, "submitting-work"]], "Workqueue": [[1005, "workqueue"]], "SSH: Basics": [[1006, "ssh-basics"]], "Login": [[1006, "login"]], "Exit Status, stdin, stdout: Scripting": [[1006, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[1007, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[1008, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[1009, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[1010, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[1012, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[1012, "local-setup-key-generation"]], "Key Pair?": [[1012, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[1012, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[1013, "ssh-links"]], "SSH: Port Forwarding": [[1014, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[1014, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[1014, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[1014, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[1014, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[1014, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[1015, "ssh-secure-copy-scp"]], "What Is That?": [[1015, "what-is-that"]], "Copy Single File From Local To Remote": [[1015, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[1015, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[1015, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[1015, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[1015, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[1015, "more-options"]], "SSH File System (sshfs)": [[1016, "ssh-file-system-sshfs"]], "What Is It?": [[1016, "what-is-it"]], "Why Is It?": [[1016, "why-is-it"]], "Example Situation: The Raspi": [[1016, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[1016, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[1016, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[1016, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[1016, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[1017, "the-errno-variable"]], "errno Is A Global Variable": [[1017, "errno-is-a-global-variable"]], "Helper Functions": [[1017, "helper-functions"]], "Linux Systems Programming: Basics": [[1018, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[1019, "system-calls-vs-library-functions"]], "System Calls": [[1019, "system-calls"]], "System Calls And The C-Library": [[1019, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[1019, "library-function-or-system-call"]], "Manual Pages": [[1019, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[1020, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[1020, null]], "Solution: This Is What An Operating System Is There For": [[1020, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[1021, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[1021, null], [1022, null], [1023, null], [1215, "see-also"]], "Abstractions": [[1021, "abstractions"], [1022, "abstractions"], [1023, "abstractions"]], "Simplicity": [[1021, "simplicity"], [1022, "simplicity"], [1023, "simplicity"]], "Build, Run, Look": [[1021, "build-run-look"], [1022, "build-run-look"], [1023, "build-run-look"]], "Watch: Run Under strace Supervision": [[1021, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[1022, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[1022, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[1023, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[1023, "setup-a-timer"]], "Blocking I/O: What Is That?": [[1024, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[1025, "file-i-o-basics"]], "File Descriptors": [[1025, "file-descriptors"]], "Standard Filedescriptors": [[1025, "standard-filedescriptors"]], "File I/O: System Calls": [[1025, "file-i-o-system-calls"]], "open()": [[1025, "open"]], "open() Flags": [[1025, "open-flags"]], "read()": [[1025, "read"]], "write()": [[1025, "write"]], "File Offset: lseek()": [[1025, "file-offset-lseek"]], "The Rest: ioctl()": [[1025, "the-rest-ioctl"]], "Exercise: Copy A File": [[1026, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[1026, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[1026, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[1026, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[1026, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[1026, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[1027, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[1028, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[1028, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[1028, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[1028, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[1028, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[1028, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[1028, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[1029, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[1029, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[1029, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[1029, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[1030, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[1030, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[1030, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[1030, "error-file-exists"]], "O_RDONLY: Reading a File": [[1031, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[1031, "me-and-etc-passwd"]], "Code: Reading A File": [[1031, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[1031, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[1031, "error-file-not-readable"]], "Error: File Not Even There": [[1031, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[1032, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[1032, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[1032, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[1032, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[1032, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[1033, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[1033, "onewire-basics"]], "Program": [[1033, "program"], [1197, "program"]], "Test On The Target Machine": [[1033, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[1035, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[1035, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[1035, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[1035, "truncating-files"]], "File Descriptors - Allocation": [[1035, "file-descriptors-allocation"]], "Linux Systems Programming": [[1036, "linux-systems-programming"]], "Get Value Of GPIO": [[1037, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[1037, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[1037, "shell-script"]], "C Program": [[1037, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[1038, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[1039, "intro-sysfs-gpio"]], "sysfs?": [[1039, "sysfs"]], "General Purpose IO (GPIO)": [[1039, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[1039, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[1039, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[1040, "interrupts-in-userspace"]], "Manual Configuration": [[1040, "manual-configuration"]], "C Program: Configuration, Event Loop": [[1040, "c-program-configuration-event-loop"]], "POSIX Message Queues": [[1041, "posix-message-queues"]], "Setup: Message Queue Creation": [[1041, "setup-message-queue-creation"]], "mqueue File System": [[1041, "mqueue-file-system"]], "Teardown: Message Queue Deletion": [[1041, "teardown-message-queue-deletion"]], "Usage: Open An Existing Message Queue, And Produce Into It": [[1041, "usage-open-an-existing-message-queue-and-produce-into-it"]], "Usage: Open An Existing Message Queue, And Consume From It": [[1041, "usage-open-an-existing-message-queue-and-consume-from-it"]], "Do Not Use: mq_notify()": [[1041, "do-not-use-mq-notify"]], "mmap: File Mappings, Basics": [[1042, "mmap-file-mappings-basics"]], "Reading A File, Not Using File I/O": [[1042, "reading-a-file-not-using-file-i-o"]], "Writing: MAP_PRIVATE, And Copy-On-Write (COW)": [[1042, "writing-map-private-and-copy-on-write-cow"]], "Writing: MAP_SHARED - Make Changes Visible": [[1042, "writing-map-shared-make-changes-visible"]], "A Simple Client/Server Scenario": [[1043, "a-simple-client-server-scenario"]], "Idea: One Chunk Of Data, And A Mutex": [[1043, "idea-one-chunk-of-data-and-a-mutex"]], "Server: Initialize Shared Data, Poll For Data": [[1043, "server-initialize-shared-data-poll-for-data"]], "Client: Produce Data": [[1043, "client-produce-data"]], "TODO: fork()": [[1044, "todo-fork"]], "mmap": [[1045, "mmap"]], "Lazy Allocation, Demand Paging, And Overcommit": [[1046, "lazy-allocation-demand-paging-and-overcommit"]], "Lazy Allocation, And Overcommit": [[1046, "lazy-allocation-and-overcommit"]], "Memory Access, And Allocation": [[1046, "memory-access-and-allocation"]], "Finish: Setup Mapping, Kick Process Loose": [[1046, "finish-setup-mapping-kick-process-loose"]], "Further Notes: TLB Misses, Memory Performance": [[1046, "further-notes-tlb-misses-memory-performance"]], "Further Notes: Realtime": [[1046, "further-notes-realtime"]], "Introduction To mmap(): Anonymous Memory": [[1047, "introduction-to-mmap-anonymous-memory"]], "mmap(): An Anonymous (Private) Mapping": [[1047, "mmap-an-anonymous-private-mapping"]], "Step By Step: From Unpopulated To Populated": [[1047, "step-by-step-from-unpopulated-to-populated"]], "Unpopulated Mapping: /proc/PID/maps, /proc/PID/smaps": [[1047, "unpopulated-mapping-proc-pid-maps-proc-pid-smaps"]], "Lazy Allocation, And Rss": [[1047, "lazy-allocation-and-rss"]], "TODO: And Realtime?": [[1048, "todo-and-realtime"]], "mlock(), mlockall()": [[1048, "mlock-mlockall"]], "Stack Prefaulting": [[1048, "stack-prefaulting"]], "Virtual Memory: Big Picture": [[1049, "virtual-memory-big-picture"]], "Terms": [[1049, "terms"]], "Why Threads?": [[1050, "why-threads"]], "Typical Uses": [[1050, "typical-uses"]], "Legal (1)": [[1050, "legal-1"]], "Legal (2)": [[1050, "legal-2"]], "POSIX Thread API": [[1050, "posix-thread-api"]], "Thread Life Cycle": [[1051, "thread-life-cycle"], [1051, "id1"]], "Thread Creation": [[1051, "thread-creation"]], "Thread Termination (1)": [[1051, "thread-termination-1"]], "Thread Termination (2)": [[1051, "thread-termination-2"]], "Exit Status, pthread_join()": [[1051, "exit-status-pthread-join"]], "Detached Threads": [[1051, "detached-threads"]], "Thread ID": [[1051, "thread-id"]], "Scheduled Entities (1)": [[1051, "scheduled-entities-1"]], "Scheduled Entities (2)": [[1051, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[1052, "thread-creation-race-condition"]], "Synchronization": [[1053, "synchronization"]], "Race Conditions (1)": [[1053, "race-conditions-1"]], "Race Conditions (2)": [[1053, "race-conditions-2"]], "Mutex (1)": [[1053, "mutex-1"]], "Mutex (2)": [[1053, "mutex-2"]], "Mutex (3)": [[1053, "mutex-3"]], "Mutex Types": [[1053, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[1054, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[1055, "communication-condition-variable"]], "Condition Variable (1)": [[1055, "condition-variable-1"]], "Condition Variable (2)": [[1055, "condition-variable-2"]], "Condition Variable: wait()": [[1055, "condition-variable-wait"]], "Condition Variable: signal()": [[1055, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[1055, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[1055, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[1055, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[1055, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[1055, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[1056, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[1057, "one-time-initialization-1"]], "One-Time Initialization (2)": [[1057, "one-time-initialization-2"]], "One-Time Initialization (3)": [[1057, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[1057, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[1058, "last-warning-1"]], "Last Warning (2)": [[1058, "last-warning-2"]], "Last Warning (3)": [[1058, "last-warning-3"]], "POSIX Threads": [[1059, "posix-threads"]], "Trylock/islocked": [[1060, "trylock-islocked"]], "Process: Arguments, Exit Status": [[1061, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[1061, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[1061, "the-shell-a-programming-language"]], "Exit Status": [[1061, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[1061, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[1061, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[1061, "argument-vector-int-argc-char-argv"]], "Processes": [[1062, "processes"]], "The Process Tree (And Environment, And procfs)": [[1063, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[1063, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[1063, "system-calls-getpid-getppid"]], "Scheduling (and Multitasking)": [[1064, "scheduling-and-multitasking"]], "Fairness Criteria": [[1064, "fairness-criteria"]], "CPU bound vs. I/O bound": [[1064, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[1064, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[1064, "scheduling-decision-runnability"]], "Legendary: The Mars Pathfinder Incident": [[1066, "legendary-the-mars-pathfinder-incident"]], "Mars Pathfinder": [[1066, "mars-pathfinder"]], "What really happened on Mars?": [[1066, "what-really-happened-on-mars"]], "How was this debugged?": [[1066, "how-was-this-debugged"]], "How was the problem corrected?": [[1066, "how-was-the-problem-corrected"]], "Analysis and lessons": [[1066, "analysis-and-lessons"], [1066, "id2"]], "Human nature, deadline pressures": [[1066, "human-nature-deadline-pressures"]], "The importance of good theory/algorithms": [[1066, "the-importance-of-good-theory-algorithms"]], "Postlude": [[1066, "postlude"]], "Detailed account from Glenn Reeves, Pathfinder software team leader": [[1066, "detailed-account-from-glenn-reeves-pathfinder-software-team-leader"]], "The hardware": [[1066, "the-hardware"]], "The software architecture": [[1066, "the-software-architecture"]], "The failure": [[1066, "the-failure"]], "How we found it": [[1066, "how-we-found-it"]], "How was the problem corrected": [[1066, "id1"]], "How we changed the software on the spacecraft": [[1066, "how-we-changed-the-software-on-the-spacecraft"]], "Why didn\u2019t we catch it before launch?": [[1066, "why-didnt-we-catch-it-before-launch"]], "Human nature, deadlind pressures": [[1066, "human-nature-deadlind-pressures"]], "Setting the record straight": [[1066, "setting-the-record-straight"]], "Acknowledgments": [[1066, "acknowledgments"]], "Tasks? Processes? Threads?": [[1067, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[1067, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[1067, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[1067, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[1067, "id1"]], "Threads Are Great: More Functionality": [[1067, "threads-are-great-more-functionality"]], "Are Threads Great?": [[1067, "are-threads-great"]], "Stability Considerations": [[1067, "stability-considerations"]], "Processes, Address Spaces": [[1067, "processes-address-spaces"]], "Stabilizing": [[1067, "stabilizing"]], "Scheduling: Exam Questions": [[1068, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[1069, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[1069, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[1069, "enter-realtime-definition"]], "Realtime on Linux": [[1069, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[1069, "demo-measuring-wakeup-latency"]], "Immediately?": [[1069, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[1069, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[1070, "realtime-api"]], "Scheduling Policies": [[1070, "scheduling-policies"]], "Scheduling Priorities": [[1070, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[1070, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[1070, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[1070, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[1070, "scheduling-threads-2"]], "Priority Inversion": [[1070, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[1070, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[1071, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[1071, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[1071, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[1071, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[1071, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[1072, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[1073, "screenplay-sysprog-posix-ipc"], [1076, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[1073, "select-on-device-files"]], "Sysprog: Events": [[1074, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[1075, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1076, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1076, "posix-shared-memory"]], "Create Shared Memory Segment": [[1076, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1076, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1076, "consume-from-shared-memory"]], "POSIX Semaphores": [[1076, "posix-semaphores"]], "Create Semaphore": [[1076, "create-semaphore"]], "Wait": [[1076, "wait"]], "Post": [[1076, "post"]], "Slides: Sysprog: POSIX IPC": [[1077, "slides-sysprog-posix-ipc"]], "History: Two IPC Variants": [[1077, "history-two-ipc-variants"]], "Object Names": [[1077, "object-names"]], "File Semantics": [[1077, "file-semantics"]], "Semaphores": [[1077, "semaphores"]], "Open/Create: sem_open()": [[1077, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1077, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1077, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1077, "semaphores-are-files"]], "Shared Memory (1)": [[1077, "shared-memory-1"]], "Shared Memory (2)": [[1077, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1077, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1078, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1079, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1080, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1080, "barebones-naive-program"]], "Signal Handler": [[1080, "signal-handler"]], "Alarm": [[1080, "alarm"]], "Alarm (Louder)": [[1080, "alarm-louder"]], "Synchronous Delivery": [[1080, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1080, "innocent-multithreaded-program"]], "Add SIGALRM": [[1080, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1081, "slides-sysprog-signals"]], "Slideshow": [[1081, null]], "Example Signals": [[1081, "example-signals"]], "Terminology": [[1081, "terminology"]], "Default Actions": [[1081, "default-actions"]], "Important Signals": [[1081, "important-signals"]], "Sending, Commandline": [[1081, "sending-commandline"]], "Sending Signals, Programmatically": [[1081, "sending-signals-programmatically"]], "Warning!": [[1081, "warning"]], "Blocking Signals: Signal Mask": [[1081, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1081, "signal-mask-manipulation"]], "Pending Signals": [[1081, "pending-signals"]], "Signal Set: sigset_t": [[1081, "signal-set-sigset-t"]], "Signal Handlers": [[1081, "signal-handlers"]], "Installing a Signal Handler (1)": [[1081, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1081, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1081, "effects-of-signal-delivery"]], "Last Warning!": [[1081, "last-warning"]], "WTF Async Signal Safe?": [[1081, "wtf-async-signal-safe"]], "Exercise: Signals": [[1081, "exercise-signals"]], "Sysprog: Signals": [[1082, "sysprog-signals"]], "Toolchain: Basics": [[1083, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1083, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1083, "all-in-one-usage-single-file"]], "Download source": [[1083, null], [1083, null], [1100, null], [1100, null], [1100, null], [1102, null]], "All-In-One Usage: Multiple Files": [[1083, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1083, "this-is-not-as-simple-as-it-seems"]], "Program Loading (Short Version)": [[1083, "program-loading-short-version"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1083, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1083, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1083, "recap-toolchain"]], "CMake: Cross Build": [[1084, "cmake-cross-build"]], "Source Code": [[1084, null]], "Cross Build: Parameters": [[1084, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1084, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1084, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1084, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1084, "step-2-build-using-make"], [1085, "step-2-build-using-make"]], "CMake: Local Build": [[1085, "cmake-local-build"]], "make: Problems": [[1085, "make-problems"]], "CMake To The Rescue": [[1085, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1085, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1085, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1085, "goodie-dependency-management"]], "Native Compilation": [[1086, "native-compilation"]], "Cross?": [[1086, "cross"]], "Example: Cross Toolchain And sysroot Built With crosstool-ng": [[1086, "example-cross-toolchain-and-sysroot-built-with-crosstool-ng"]], "Toolchain in bin/": [[1086, "toolchain-in-bin"]], "sysroot in armv8-rpi4-linux-gnueabihf/sysroot/": [[1086, "sysroot-in-armv8-rpi4-linux-gnueabihf-sysroot"]], "Cross Build": [[1086, "cross-build"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1088, "exercise-build-software-package-cross-raspberry"]], "Quiz: Toolchain": [[1089, "quiz-toolchain"]], "Native": [[1089, "native"], [1090, "native"]], "Cross": [[1089, "cross"], [1090, "cross"]], "Quiz: Toolchain (Solutions)": [[1090, "quiz-toolchain-solutions"]], "Exercises: Toolchain": [[1091, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1092, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1093, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1094, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1095, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1096, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1096, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1096, "create-a-sysroot"]], "Patience!": [[1096, null]], "Test Cross Build": [[1096, "test-cross-build"]], "What We Have": [[1096, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1096, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1096, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1098, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1098, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1098, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1098, "create-docker-volume"]], "Container Work": [[1098, "container-work"]], "Command To Run Container On Volumes": [[1098, "command-to-run-container-on-volumes"]], "Setup container": [[1098, "setup-container"]], "Install autoconf 2.71": [[1098, "install-autoconf-2-71"]], "Install crosstool-ng": [[1098, "install-crosstool-ng"]], "Build Toolchain": [[1098, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1098, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1098, "create-toolchain-archive"]], "Install Toolchain On Host": [[1098, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1099, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1099, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1099, "establish-cmake-toolchain-file"]], "Test Run": [[1099, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1100, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1100, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1100, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1100, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1100, "complication-modification-tracking"]], "Enter Makefiles": [[1100, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1101, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1101, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1101, "and-dynamic-libraries"]], "Relocations": [[1101, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1101, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1101, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1101, "and-build-dependencies"]], "And Runtime Dependencies?": [[1101, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1101, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1101, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1101, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1102, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1102, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1102, "code-bases-become-larger-2"]], "Problem: Structure": [[1102, "problem-structure"]], "Build Instructions: Building A Library": [[1102, "build-instructions-building-a-library"]], "Closures": [[1103, "closures"]], "Today": [[1103, "today"]], "def is a Statement": [[1103, "def-is-a-statement"]], "Functions That Create Functions": [[1103, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1103, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1103, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1103, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1103, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1103, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1104, "intro"]], "Simplest: List Comprehension": [[1104, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1105, "context-managers-the-with-statement"]], "Example: Open File": [[1105, "example-open-file"]], "Example: Temporary Directory": [[1105, "example-temporary-directory"]], "Example: Multiple with Items": [[1105, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1105, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1105, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1105, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1105, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1106, "decorators"]], "The Ominous \u201c@\u201d": [[1106, "the-ominous"]], "Decorators Overview": [[1106, "decorators-overview"]], "A Simple Minded Function": [[1106, "a-simple-minded-function"]], "Decorator Basics": [[1106, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1106, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1106, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1106, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1106, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1106, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1107, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1107, "catching-exceptions-by-type"]], "Exception Objects": [[1107, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1107, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1107, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1107, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1107, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1107, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1107, "raising-exceptions"]], "Re-Raising Exceptions": [[1107, "re-raising-exceptions"]], "User-Defined Exceptions": [[1107, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1107, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1107, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1107, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1108, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1108, "dictionaries-everywhere-context"]], "Enter exec()": [[1108, "enter-exec"]], "exec(), and Context": [[1108, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1108, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1109, "python-more-language-features"], [1277, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1110, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1110, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1110, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1110, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1110, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1110, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1110, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1110, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1111, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1111, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1111, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1111, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1111, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1111, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1112, "the-iterator-protocol"], [1112, "id1"]], "Iteration in Python": [[1112, "iteration-in-python"]], "What\u2019s an Iterator?": [[1112, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1112, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1112, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1112, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1112, "generators-motivation"]], "Generators: How?": [[1112, "generators-how"]], "Observations": [[1112, "observations"]], "Iteration, Generators, And yield": [[1113, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1114, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1115, "modules-are-objects"]], "Other Forms (1)": [[1115, "other-forms-1"]], "Other Forms (2)": [[1115, "other-forms-2"]], "Packages": [[1115, "packages"]], "Executing Modules as Scripts": [[1115, "executing-modules-as-scripts"]], "Package Structure": [[1115, "package-structure"]], "Relative Imports (1)": [[1115, "relative-imports-1"]], "Relative Imports (2)": [[1115, "relative-imports-2"]], "Multithreading (Python)": [[1116, "multithreading-python"]], "What\u2019s a Thread?": [[1116, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1116, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1116, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1116, "and-program-termination"]], "Daemon Threads": [[1116, "daemon-threads"]], "Race Conditions, and Mutexes": [[1118, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1118, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1118, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1118, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1118, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1119, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1120, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1120, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1120, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1120, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1120, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1120, "abtract-base-class"]], "Classes And Dictionaries": [[1121, "classes-and-dictionaries"]], "Facts Up-Front": [[1121, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1121, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1121, "enter-classes-an-empty-class-and-its-effects"]], "Summary: Classes Or Raw Dictionaries": [[1121, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1121, "dynamic-attribute-access"]], "Constructor": [[1122, "constructor"]], "And self?": [[1122, "and-self"]], "Extending Existing Classes": [[1124, "extending-existing-classes"]], "Additional Feature: Salary": [[1124, "additional-feature-salary"]], "Want Manager": [[1124, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1124, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1124, "isinstance"]], "issubclass()": [[1124, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1124, "add-str-creatively-after-the-fact"]], "Object Methods": [[1125, "object-methods"]], "Class Methods (@classmethod)": [[1125, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1125, "static-methods-staticmethod"]], "collections.namedtuple": [[1126, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1126, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1126, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1126, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1127, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1127, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1127, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1127, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1127, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1127, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1127, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1127, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1127, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1127, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1128, "readonly-attributes"]], "And Write Access?": [[1128, "and-write-access"]], "Calculated Attributes": [[1128, "calculated-attributes"]], "str() And repr()": [[1129, "str-and-repr"]], "Stringification And Representation": [[1129, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1129, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1130, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1130, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1130, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1130, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1130, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1130, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1130, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1130, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[1131, "python-the-language-fundamentals"], [1278, "python-the-language-fundamentals"], [1282, "python-the-language-fundamentals"]], "The Python Programming Language": [[1133, "the-python-programming-language"]], "A Little Bit of History": [[1133, "a-little-bit-of-history"]], "Guido Van Rossum": [[1133, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1134, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1134, "hello-world-script-files"]], "Running Python Programs": [[1135, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1135, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1135, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1135, "the-unix-way-running"]], "The Doze Way: Registry": [[1135, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1136, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1136, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1136, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1137, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1137, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1137, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1137, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1137, null]], "Variables (1)": [[1138, "variables-1"]], "Variables (2)": [[1138, "variables-2"]], "Integer Numbers: Comparison": [[1139, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1139, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1139, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1139, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1139, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1139, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1139, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1139, "strings-python-3"]], "Python 3, Generally": [[1139, "python-3-generally"]], "Boolean Values": [[1141, "boolean-values"]], "Boolean Operators": [[1141, "boolean-operators"]], "The if Statement": [[1142, "the-if-statement"], [1142, "id1"]], "Looping Constructs": [[1143, "looping-constructs"]], "Esoteric Feature: while/else": [[1143, "esoteric-feature-while-else"]], "Sequence Elements": [[1144, "sequence-elements"]], "Sequence Multiplication": [[1144, "sequence-multiplication"]], "Indexing (1)": [[1145, "indexing-1"]], "Indexing (2)": [[1145, "indexing-2"]], "Slicing: Cutting Out": [[1145, "slicing-cutting-out"]], "Slicing: Step Width": [[1145, "slicing-step-width"]], "Iteration over \u2026 Something": [[1146, "iteration-over-something"]], "break, continue, else": [[1146, "break-continue-else"]], "Iteration over Numbers: range()": [[1147, "iteration-over-numbers-range"]], "range(): Definition": [[1147, "range-definition"]], "range(): Python 2 vs. Python 3": [[1147, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1148, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1148, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1148, "immutability-tuples"]], "Mutability: Lists (1)": [[1148, "mutability-lists-1"]], "Mutability: Lists (2)": [[1148, "mutability-lists-2"]], "Shallow Copy": [[1148, "shallow-copy"]], "Deep Copy": [[1148, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1149, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1149, "undefined-variable"]], "Local Variable": [[1149, "local-variable"]], "Local and Global Variable With Same Name": [[1149, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1149, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1150, "functions-slideshow"]], "Why Functions?": [[1150, "why-functions"]], "Mutable Default Parameters: Attention!": [[1150, "mutable-default-parameters-attention"]], "String Delimiters": [[1152, "string-delimiters"]], "Escape Sequences": [[1152, "escape-sequences"]], "More String Tricks": [[1152, "more-string-tricks"]], "C-Style Formatting (1)": [[1153, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1153, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1153, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1153, "c-style-formatting-examples"]], "The format Method": [[1153, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1153, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1154, "batteries-included-checks"]], "Batteries Included: Search": [[1154, "batteries-included-search"]], "Substring Search: Examples": [[1154, "substring-search-examples"]], "Split and Join (1)": [[1154, "split-and-join-1"]], "Split and Join (2)": [[1154, "split-and-join-2"]], "List Access": [[1155, "list-access"]], "List Methods: Examples": [[1155, "list-methods-examples"]], "Dictionary Access": [[1156, "dictionary-access"]], "Examples: Simple Access": [[1156, "examples-simple-access"]], "Examples: Shortcuts": [[1156, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1156, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1156, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1157, "operations-on-sets-1"]], "Operations on Sets (2)": [[1157, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1158, "python-2-vs-python-3"]], "Opening Files": [[1158, "opening-files"]], "Reading Files": [[1158, "reading-files"]], "Reading Files: Pythonic": [[1158, "reading-files-pythonic"]], "Writing Files (1)": [[1158, "writing-files-1"]], "Writing Files (2)": [[1158, "writing-files-2"]], "File Modes": [[1158, "file-modes"]], "Text vs. Binary Mode": [[1158, "text-vs-binary-mode"]], "Standard Streams": [[1158, "standard-streams"]], "Function Objects": [[1159, "function-objects"]], "What\u2019s a Function?": [[1159, "what-s-a-function"]], "Function Objects?": [[1159, "id1"]], "Function Objects! (1)": [[1159, "function-objects-1"]], "Function Objects! (2)": [[1159, "function-objects-2"]], "Commandline Parsing with argparse": [[1160, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1160, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1160, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1162, "python-draft-topics"]], "Matplotlib": [[1163, "matplotlib"]], "Axis Ranges": [[1163, "axis-ranges"]], "Package Installation (setuptools)": [[1164, "package-installation-setuptools"]], "Files": [[1164, "files"]], "Test \u201cInstallation\u201d": [[1164, "test-installation"]], "Source Distribution": [[1164, "source-distribution"]], "Manifest": [[1164, "manifest"]], "Installing From Wheel File": [[1164, "installing-from-wheel-file"]], "Publishing On PyPI": [[1164, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1165, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1166, "exercise-read-csv-file"]], "Sample CSV File": [[1166, "sample-csv-file"]], "CSV and Databases": [[1167, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1168, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1169, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1170, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1171, "exercises-external"]], "Exercise: Swap Two Variables": [[1173, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1174, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1176, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1177, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1178, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1179, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1180, "exercise-primeness-for"]], "Exercises (Legacy)": [[1181, "exercises-legacy"]], "Exercise: Functions: join()": [[1182, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1184, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1185, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1186, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1187, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1187, null]], "Implementation Strategy": [[1187, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1188, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1189, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1190, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1191, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1192, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1193, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1194, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1195, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1196, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1196, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1196, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1197, "exercise-basic-sensor"]], "Specification, And Setup": [[1197, "specification-and-setup"]], "Verification": [[1197, "verification"]], "Unit Test": [[1197, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1198, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1198, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1199, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1200, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1200, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1201, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1202, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1203, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1204, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1204, "test-code"], [1205, "test-code"], [1206, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1205, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1206, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python Programming": [[1207, "python-programming"]], "Draft Material": [[1207, "draft-material"]], "Python Links": [[1208, "python-links"]], "Advanced Python": [[1208, "advanced-python"]], "David Beazley": [[1208, "david-beazley"]], "Raymond Hettinger": [[1208, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1209, "machine-learning-artificial-intelligence"]], "K-Means": [[1210, "k-means"]], "Topic Overview": [[1210, "topic-overview"], [1214, "topic-overview"]], "Artifacts": [[1210, "artifacts"]], "Linear Regression: Running Code (no Notebook!)": [[1211, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1212, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1213, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1213, "pandas.DataFrame"]], "Reading Data": [[1213, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1213, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1213, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1213, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1213, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1213, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1213, "Verify-the-Model"]], "Linear Regression": [[1214, "linear-regression"]], "Running Code": [[1214, "running-code"]], "Dataset": [[1214, "dataset"]], "Machine Learning: Concepts and Terminology": [[1215, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1215, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1215, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1215, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1215, "types-of-machine-learning"]], "Problems Solved": [[1215, "problems-solved"], [1237, "problems-solved"], [1244, "problems-solved"]], "CSV Files": [[1216, "csv-files"]], "CSV in its Origins": [[1216, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1216, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1216, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1216, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1216, "more-tuning-needed-quoting"]], "Tuning Options": [[1216, "tuning-options"]], "And Headings?": [[1216, "and-headings"]], "Enter csv.DictReader": [[1216, "enter-csv-dictreader"]], "DBAPI 2": [[1217, "dbapi-2"]], "Database Interfaces": [[1217, "database-interfaces"]], "DBAPI 2.0": [[1217, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1217, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1217, "caveat-isolation"]], "Databases": [[1218, "databases"]], "DBAPI 2: PostgreSQL": [[1219, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1219, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1220, "dbapi-2-sqlite3"]], "SQLite3": [[1220, "sqlite3"]], "SQLite3 Connection": [[1220, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1220, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1220, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1220, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1220, "sqlite3-bind-parameters"]], "ASCII": [[1221, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1221, "iso-latin-1-iso-8859-1"]], "And Python?": [[1221, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1221, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1221, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1221, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1221, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1221, "and-jorg-2"]], "Enter UTF-8": [[1221, "enter-utf-8"]], "Boundary Code": [[1221, "boundary-code"]], "Ah Yes: decode()": [[1221, "ah-yes-decode"]], "And Source Encoding?": [[1221, "and-source-encoding"]], "The import Statement (incomplete)": [[1222, "the-import-statement-incomplete"]], "Python: Miscellaneous Topics": [[1223, "python-miscellaneous-topics"], [1280, "python-miscellaneous-topics"]], "Server/Broker": [[1224, "server-broker"]], "Starting the Service": [[1224, "starting-the-service"]], "Publishing a Message in Python": [[1224, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1224, "subscribing-a-topic-in-python"]], "Message Payload?": [[1224, "message-payload"]], "Pandas: Adding Rows": [[1225, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1225, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1225, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1225, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1226, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1226, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1226, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1226, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1226, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1226, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1226, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1227, "pandas-filters"]], "Basic Filter Example": [[1227, "basic-filter-example"]], "Filter? Bitmap!": [[1227, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1227, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1227, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1227, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1227, "negation"]], "Neat Helpers": [[1227, "neat-helpers"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1228, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1228, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1228, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1228, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1228, "selecting-rows-and-columns"]], "Random Material": [[1229, "random-material"]], "Pandas: Indexes": [[1230, "pandas-indexes"]], "Default Index: Row Number": [[1230, "default-index-row-number"]], "Setting Custom Index": [[1230, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1230, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1230, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1230, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1230, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1231, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1231, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1231, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1231, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1231, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1232, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1232, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1232, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1232, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1232, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1232, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1233, "xml-elementtree-etree"]], "SAX and DOM": [[1233, "sax-and-dom"]], "ElementTree": [[1233, "elementtree"]], "A Very Simple Document": [[1233, "a-very-simple-document"]], "Text (1)": [[1233, "text-1"]], "Text (2)": [[1233, "text-2"]], "Writing XML Documents": [[1233, "writing-xml-documents"]], "Reading XML Documents": [[1233, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1234, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1235, "python-project-package-management"], [1281, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1236, "python-package-index-livehacking-screenplay"]], "Invocation": [[1236, "invocation"]], "Help": [[1236, "help"]], "Most Used Subcommands": [[1236, "most-used-subcommands"]], "Subcommand Help": [[1236, "subcommand-help"]], "System vs. User": [[1236, "system-vs-user"]], "Search": [[1236, "search"]], "Python Package Index (Slideshow)": [[1237, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1237, "python-package-index-pypi"]], "Python Package Index": [[1238, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1239, "packaging-pypi-upload-link-collection"]], "PyTest": [[1240, "pytest"]], "pytest Introduction, By Example": [[1241, "pytest-introduction-by-example"]], "Sample Project Structure": [[1241, "sample-project-structure"]], "pytest: Installation, Documentation": [[1241, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1241, "and-pythonpath"]], "A Simple Test": [[1241, "a-simple-test"]], "Failing Tests": [[1241, "failing-tests"]], "A More Realistic Example": [[1241, "a-more-realistic-example"]], "Fixtures": [[1241, "fixtures"]], "Temporary Test Directory": [[1241, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1241, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1242, "the-unittest-module"]], "Simplest Example": [[1242, "simplest-example"]], "Using a Fixture": [[1242, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1242, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1242, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1242, "the-meat-of-a-test"]], "Recommendations": [[1242, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1243, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1243, "first-help"]], "Local Package Installation": [[1243, "local-package-installation"]], "Freezing an Environment": [[1243, "freezing-an-environment"]], "Destroying an Environment": [[1243, "destroying-an-environment"]], "Recreating an Environment": [[1243, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1243, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1244, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1244, "virtual-environments-links"]], "Virtual Environments": [[1245, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1247, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1248, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1248, "before-we-start"]], "Simplest Test: No Test": [[1248, "simplest-test-no-test"]], "Next Simplest: Single File": [[1248, "next-simplest-single-file"]], "Executing Tests Selectively": [[1248, "executing-tests-selectively"]], "Fatal Failure": [[1248, "fatal-failure"]], "FAIL()": [[1248, "fail"]], "ASSERT_*()": [[1248, "assert"]], "Non-Fatal Failure": [[1248, "non-fatal-failure"]], "Custom Message Output": [[1248, "custom-message-output"]], "Last Not Least: Structure": [[1248, "last-not-least-structure"]], "Test Cases and Suites": [[1248, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1249, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1250, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1250, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1250, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1250, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1250, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1251, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1252, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1253, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1253, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1253, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1253, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1254, "unittest-gtest-fixtures"]], "C: Introduction": [[1255, "c-introduction"]], "C: Advanced Topics": [[1256, "c-advanced-topics"]], "Zielpublikum": [[1256, "zielpublikum"], [1257, "zielpublikum"], [1264, "zielpublikum"], [1276, "zielpublikum"]], "Kursinhalt": [[1256, "kursinhalt"], [1257, "kursinhalt"], [1264, "kursinhalt"], [1275, "kursinhalt"], [1276, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1256, "empfohlene-vorkenntnisse"], [1257, "empfohlene-vorkenntnisse"], [1264, "empfohlene-vorkenntnisse"], [1275, "empfohlene-vorkenntnisse"], [1276, "empfohlene-vorkenntnisse"]], "C++: Introduction": [[1257, "c-introduction"]], "An Introduction to Modern C++, In Three Days": [[1258, "an-introduction-to-modern-c-in-three-days"]], "Design Patterns For C++ Developers": [[1259, "design-patterns-for-c-developers"]], "Course Outline": [[1259, "course-outline"], [1261, "course-outline"], [1262, "course-outline"], [1267, "course-outline"], [1268, "course-outline"], [1269, "course-outline"], [1271, "course-outline"], [1272, "course-outline"], [1277, "course-outline"], [1278, "course-outline"], [1281, "course-outline"], [1282, "course-outline"]], "C and C++ Programming": [[1260, "c-and-c-programming"]], "Courses": [[1260, "courses"], [1265, "courses"], [1270, "courses"], [1279, "courses"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1261, "shell-scripting-bourne-again-shell-bash"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1262, "embedded-software-development-hardware-realtime-and-memory-management"]], "Target Audience": [[1262, "target-audience"], [1267, "target-audience"], [1273, "target-audience"]], "Embedded Linux Programming": [[1263, "embedded-linux-programming"]], "A Week with the Raspberry Pi": [[1264, "a-week-with-the-raspberry-pi"]], "Linux, And Programming": [[1265, "linux-and-programming"]], "Course Contents": [[1266, "course-contents"]], "Sample Project": [[1266, "sample-project"]], "Linux Basics: A Gentle Introduction": [[1267, "linux-basics-a-gentle-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1268, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Introduction": [[1269, "linux-systems-programming-introduction"]], "Linux Systems Programming (Course Series)": [[1270, "linux-systems-programming-course-series"]], "Linux Systems Programming: Multithreading": [[1271, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1272, "linux-systems-programming-network-programming"]], "CMake: A Dirty But Powerful Build Tool": [[1273, "cmake-a-dirty-but-powerful-build-tool"]], "Recommended Prior Knowledge": [[1273, "recommended-prior-knowledge"]], "GNU Make: The Mother of All Build Tools": [[1275, "gnu-make-the-mother-of-all-build-tools"]], "Unittesting and Test Driven Development": [[1276, "unittesting-and-test-driven-development"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1279, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1279, "sample-trainings"], [1282, "sample-trainings"]], "2025-06-02 (3 VO): CMake, And More C++": [[162, "vo-cmake-and-more-c"]], "Various C++/Git/CMake": [[162, "various-c-git-cmake"]], "Plan": [[162, "plan"]]}, "indexentries": {}})